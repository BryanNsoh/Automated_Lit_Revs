- analysis: '>'
  authors:
  - Huda N.U.
  - Ahmed I.
  - Adnan M.
  - Ali M.
  - Naeem F.
  citation_count: '2'
  description: In this constantly evolving landscape of urbanization, the relationship
    between technology and automation, in regards to sustainability, holds immense
    significance. The intricate strands of human intelligence are seamlessly interwoven
    with the fabric of technological progress, giving rise to exquisite patterns of
    synergy and collaborative innovation. Automation is just another step in this
    process which started with the industrial revolution and now has paved way towards
    urbanization. Smart homes or home automation is a subset of Internet of Things
    (IoT) based automation that has added into the comfort, ease, and quality of our
    living standards and is now being integrated to form the concept of Smart Cities.
    In the past decade, various techniques and processes of smart home automation
    have been proposed and implemented. To extend and translate the existing methods
    into new one, the understanding of the former is imperative to the research procedure.
    This review stands as a comprehensive exploration, diving into the pivotal role
    of intelligent systems and expert knowledge in driving the transformation of smart
    homes into sustainable smart cities. By meticulously analyzing and aggregating
    an array of contemporary techniques used in smart homes, this paper offers profound
    contributions to the intersection of urban evolution and technological innovation.
    The review's holistic approach not only facilitates a deep understanding of smart
    homes’ contributions but also charts a course for innovative strategies in city
    planning, infrastructure, and technological integration. In bridging the gap between
    technology and sustainable urban development, this exploration underscores the
    transformative power of leveraging smart home techniques to lay the foundation
    for harmonious and forward-thinking smart cities. The technologies cover a wide
    range of methodologies and intelligent systems used for communication, security
    and management in an urban infrastructure. The paper focuses on analysis of the
    technology to provide an outlook into achieving the goal of sustainable smart
    cities and deal with challenges like scalability and big data computation. Our
    comprehensive analysis yields a holistic set of technology comparisons and illuminates
    the promising future prospects within this domain. The information is highly insightful
    in creating a bigger picture for adopting state of the art technologies like Federated
    Learning (FL), Digital Twin and Embedded Edge computing in better planning and
    infrastructure management in smart cities. These findings offer reliable and potent
    methods to chart not only the course of research but also to enhance these technologies
    for the betterment of mankind's convenience and advancement.
  doi: 10.1016/j.eswa.2023.122380
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Methodology 3. Technological
    analysis 4. Current challenges and future prospects 5. Comparison with existing
    solutions 6. Conclusion CRediT authorship contribution statement Declaration of
    competing interest Acknowledgment Data availability References Show full outline
    Cited by (3) Figures (15) Show 9 more figures Tables (5) Table 1 Table 2 Table
    3 Table 4 Table 5 Expert Systems with Applications Volume 238, Part F, 15 March
    2024, 122380 Review Experts and intelligent systems for smart homes’ Transformation
    to Sustainable Smart Cities: A comprehensive review Author links open overlay
    panel Noor Ul Huda a, Ijaz Ahmed a, Muhammad Adnan a, Mansoor Ali b, Faisal Naeem
    b Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.eswa.2023.122380
    Get rights and content Highlights • Technical advancement needed for transformation
    of home automation to a next level. • Smart cities that build from the foundation
    of homes automations have been discussed. • Comparison with the existing papers
    to unlock new research directions in this area. Abstract In this constantly evolving
    landscape of urbanization, the relationship between technology and automation,
    in regards to sustainability, holds immense significance. The intricate strands
    of human intelligence are seamlessly interwoven with the fabric of technological
    progress, giving rise to exquisite patterns of synergy and collaborative innovation.
    Automation is just another step in this process which started with the industrial
    revolution and now has paved way towards urbanization. Smart homes or home automation
    is a subset of Internet of Things (IoT) based automation that has added into the
    comfort, ease, and quality of our living standards and is now being integrated
    to form the concept of Smart Cities. In the past decade, various techniques and
    processes of smart home automation have been proposed and implemented. To extend
    and translate the existing methods into new one, the understanding of the former
    is imperative to the research procedure. This review stands as a comprehensive
    exploration, diving into the pivotal role of intelligent systems and expert knowledge
    in driving the transformation of smart homes into sustainable smart cities. By
    meticulously analyzing and aggregating an array of contemporary techniques used
    in smart homes, this paper offers profound contributions to the intersection of
    urban evolution and technological innovation. The review’s holistic approach not
    only facilitates a deep understanding of smart homes’ contributions but also charts
    a course for innovative strategies in city planning, infrastructure, and technological
    integration. In bridging the gap between technology and sustainable urban development,
    this exploration underscores the transformative power of leveraging smart home
    techniques to lay the foundation for harmonious and forward-thinking smart cities.
    The technologies cover a wide range of methodologies and intelligent systems used
    for communication, security and management in an urban infrastructure. The paper
    focuses on analysis of the technology to provide an outlook into achieving the
    goal of sustainable smart cities and deal with challenges like scalability and
    big data computation. Our comprehensive analysis yields a holistic set of technology
    comparisons and illuminates the promising future prospects within this domain.
    The information is highly insightful in creating a bigger picture for adopting
    state of the art technologies like Federated Learning (FL), Digital Twin and Embedded
    Edge computing in better planning and infrastructure management in smart cities.
    These findings offer reliable and potent methods to chart not only the course
    of research but also to enhance these technologies for the betterment of mankind’s
    convenience and advancement. Previous article in issue Next article in issue Keywords
    Artificial intelligenceAutomationBlock chainEnergy managementExpert intelligent
    systemsManagement systemsSmart cities 1. Introduction Internet of Things (IoT)
    based automation has been trending for years now. From automating industrial machinery
    to consumer houses, automation is being integrated into every aspect of our lives.
    IoT is the basis of automation that connects various devices on a single network,
    allowing them to communicate and exchange data and resources (Lee & Lee, 2015).
    It can either work as a central/peripheral system with one core and multiple nodes
    or by decentralizing the network and by managing it without depending on a single
    center for the system. Several nodes can connect and extend the network in order
    to increase the functionality of the system. The complete mesh of IoT comprises
    of several sensors, actuators, devices and components that are connected through
    a communication protocol. To be able to collect, analyze, exchange and produce
    data is what makes IoT a powerful tool, leading towards “smartness”. Many industries
    have transformed into smart and IoT based systems, that has given rise to several
    sub domains of IoT that are interacting with a common man now more as compared
    to the situation a decade ago. Smart home automation is a very familiar concept
    these days, which started in the beginning of last decade as Machine 2 Machine
    (M2M) communication using wired technologies. The architectures were complex to
    implement and hassle rather than a comfort (Schneps-Schneppe, Maximenko, Namiot,
    & Malov, 2012). As the technology was expensive and inaccessible, it was mostly
    a luxury than a necessity and could only be afforded by some. Hence cost metrics
    started to play an important role in addition to the performance metrics. Over
    the course of years, affordable and efficient sensors were beginning to develop
    (Ciuffoletti, 2018) and new protocol suites started to emerge in order to implement
    those devices in a holistic manner (Al-Sarawi, Anbar, Alieyan, & Alzubaidi, 2017).
    Although initially, the home automation systems were merely a structure confined
    to each room separately without any information interchange among the devices
    (Soliman, Alahmadi, Maash, & Elhabib, 2017). Nonetheless, the integration of IoT
    to the automation systems is a newer step in this technology. The IoT has been
    boosted and its concept initiated from this area of interest, then accessibility
    of IoT is extended from the heavy industries to common house holds. Now a days,
    smart homes is not a new topic and has been extensively implemented over the last
    decade. The concept has now matured enough as the mankind is getting more into
    the themes of ease and comfort. This technology is useful to implement the smart
    home automation along with simple communication protocols and the ability to control
    every nook and corner of a house using a hand held device (Kumar et al., 2021).
    The future is now reaching into the integrated smart homes systems and setting
    up colonies and towns with shared information systems. This is one step ahead
    of the smart homes automation and needs some important factors to look into scalability,
    sustainability, and integration and sharing of information systems (Blasi, Ganzaroli,
    & Noni, 2022). Smart cities are broadly defined as a modern urban area that makes
    use of ubiquitous technology in order to improve the life standards of its residents
    (Nuaimi et al., 2015, Yin et al., 2015). Its architecture can be divided into
    various subsections and departments like Smart homes, Transportation, Energy management,
    Health sector, Public welfare and Finance Management. All of these departments
    and sections (referred to as nodes in our paper) are in constant communication
    with each other and the sustainability of the city owes to the ease in smooth
    communication and robust data sharing. Smart cities are modeled and designed as
    information systems that consist of many modules where each module interacts with
    others and shares information and resources (Batty et al., 2012). Contrary to
    a smart home, the smart cities deal with the big data that is being sent and transmitted
    from a number of sources. Computation and management data at such a large scale
    requires smart and scalable solution that could cater the needs of all the nodes
    information system. A large number of literature has been produced on the concept
    of smart homes and its automation (Ghayvat et al., 2015, Klein and Kaefer, 2008,
    Silva et al., 2018). However, the concept of smart cities is yet in its hatching
    phase and needs to be matured. In this paper we have collected a literature of
    the existing research on automation systems in smart homes and analyzed it on
    the basis of its translation into smart cities. This paper studies the technology
    that has been used for smart homes and analyzes its use in order to provide information
    about designing sustainable smart cities infrastructures (Arasteh et al., 2016,
    Guelzim et al., 2016). The proposed paper also discussed the comparison of various
    technologies used for automation in developing smart homes and cities and finding
    new ways to communicate with each other in a cohesive manner (Hui, Sherratt, &
    Sánchez, 2017). In an attempt of doing this, we have presented a meticulous discussion
    of contemporary systems of technology used in smart home automation and the challenges
    in translating those to smart cities’ infrastructure and design, in depth analysis
    of the technical aspects of urban infrastructure and exploration for sustainable
    solutions for development. In addition to that there is a holistic comparison
    of technologies mentioned in literature used in urban management and planning
    in reference to various domains of Smart Cities, and a commentary on future research
    directions extracted from the challenges and limitations Following are the key
    contribution of this paper: • Technical advancement needed for transformation
    of home automation to a next level. • Smart cities that build from the foundation
    of homes automation’s have been discussed. • Comparison with the existing papers
    to unlock new research directions in this area. The remaining paper is divided
    into following sections, Section 2 discusses the research methodology, Section
    3 provides a background and detailed analysis of techniques presented in the past
    few years with comparison and possible outcomes. Section 4 presents the challenges
    present in utilizing state-of-the-art technologies for sustainable smart cities.
    Section 5 presents a comparison of this review with existing studies and finally
    it concludes with future directions for researchers. 2. Methodology In order to
    gather the scope of a research area in a holistic manner, we need to define the
    criteria on which the search is carried out. The research questions as mentioned
    in Table 1, categorize the studies into semi structured forms that makes it feasible
    to not only gather the data but also provide valuable insights about it. The basis
    of conducting a review is the sources used for gathering the information. There
    are number of digital sources such as Google Scholar, Science Direct and Scopus
    have used for searching of indexed articles and papers Scopus is a database indexed
    by expert editors. It has a refined structure and a uniform collection of articles
    that are tagged with the authors name, title, and publishers etc., along with
    providing citations that are helpful in assessing the quality of an article/author.
    It makes sure that the researcher gets reliable and accurate results. It provides
    the ease of searching through different formats ranging from texts to audio and
    videos etc. Collectively these cover a wide range of articles from 1900s to the
    modern era which gives a large scope of articles from various sources. These databases
    focus on the quality of the results fetched, removing the repeated articles, and
    providing the results that are actually what they appear to be, which makes them
    a better choice over the other search engines. The search criteria needs to be
    defined by using some keywords. In this papers following keywords were used to
    in Boolean search to gather articles from the databases. The articles collected
    were ranged from 2011 to 2023. • IoT AND “Automation systems” AND “Smart cities”
    AND “Components” OR “Sensors” • IoT AND “Automation systems” AND “Smart cities”
    AND “Smart homes” • IoT AND “Automation systems” AND “Smart cities” AND “Architecture”
    • “Automation systems” AND “Internet of Things” AND “Architecture models” AND
    Sustainability • IoT AND “Smart cities” AND “Communication models” AND Integration
    • Automation AND “Smart cities” AND “Artificial Intelligence” Table 1. Research
    Questions for the review. S. No. Research Questions RQ 1 What are the main challenges
    faced during the automation process related to the technology and the resources?
    RQ 2 What are the main devices, technologies and softwares that are used in this
    process? RQ 3 How does the translation from Smart homes to Smart cities take place,
    in terms of handling big data and information interchange? RQ 4 What are the technological
    measures that can be taken to make the smart cities sustainable? 3. Technological
    analysis The concept of smart homes is being discussed since the start of past
    decade. With a number of technologies proposed since then, smart homes automation
    is evolving day by day. As the IoT techniques got more common along with concept
    of decentralization. Decentralized systems have proposed since the start of previous
    decade (Ghaleb and Azzedin, 2021, Plociennik et al., 2018) for communication,
    data sharing and power generation purpose. Decentralization not only prevented
    the loss of data and helped against data breach, but also saved the resources
    required in maintaining the online contact with a centralized system all the time
    (Gadekallu et al., 2022, Zhang and Yan, 2021). After a few years it got transformed
    into the idea of edge computing that not only affected the industrial automation
    practices but also home automation. The concept of integrating together smart
    homes into a community and forming smart cities has proposed in Emekci (2022).
    In this section a detailed comparative analysis of technologies used in smart
    homes is presented along with an analysis of how these technologies can be used
    to translate smart homes into sustainable smart cities. The analysis is divided
    into different technologies used for communication protocols, networking topologies,
    components, controllers, management systems, security and Artificial Intelligence
    (AI). An overall architecture of an IoT system is shown in Fig. 1 as mentioned
    in Asaithambi, Venkatraman, and Venkatraman (2021). Download : Download high-res
    image (619KB) Download : Download full-size image Fig. 1. General IoT architecture.
    3.1. Components and controllers An automated smart home consists of a complete
    network of nodes and meshes. Hardware is one of the important aspects in this
    area of interest. The choice of controllers and components mainly depends on the
    type of architecture used for automation and can play a huge role in taking up
    the automation technique to the next level. Adriansyah et al. used arduino to
    design a smart home automation based system (Adriansyah & Dani, 2014). Implementation
    of automation system at smart home on small scale required few temperature sensors
    and buzzers. David N. extended the architecture to further nodes and added the
    user interaction with different types of Graphical User Interfaces (GUIs) (David,
    2015). Arduino was considered first time for the purpose of automation, although
    it was inefficient due to less number of pins and functionalities. Raspberry pi
    has used by Vujović et al. to integrate with sensor web node. The system also
    provided a programmable GUI giving the ease of customization (Vujović & Maksimović,
    2015). The increase in trends of automation brought up the use of various controllers
    like PIC. Puri et al. designed a home automation system using PIC micro-controller
    and bluetooth as a communication medium (Puri & Nayyar, 2016). Patchava et al.
    used raspberry pi with motion sensors and also introduced functions like intruder
    detection using computer vision (Patchava, Kandala, & Babu, 2017). Apart from
    different controllers, sensors and actuators are tremendous importance in complete
    implementation of a smart home architecture (Hoque & Davidson, 2019). A multi
    sensor technique has been used by Hsu et al. in designing wearable bands integrated
    with main home system that increase user interaction. The system also used intelligence
    monitoring to analyze resources like energy usage etc (Hsu et al., 2017). Wadhwani
    et al. used embedded systems with relays and motor drivers, utilizing cloud based
    platforms integrated with various sensors (Wadhwani, Singh, Singh, & Dwivedi,
    2018). Different sensors like humidity, smoke detector, temperature sensors have
    integrated with different controllers to monitor the surroundings of the house
    and to respond to the collected readings like alarms and buzzers (Gunawan et al.,
    2017, Marhoon et al., 2018, Wahyuni et al., 2021, Yan et al., 2018). In addition
    to these, the components and devices have been designed to not only provide ease
    and comfort to people, but also help disabled people who are challenged physically
    or those who are aged, to improve the quality of their lives. Wearable integrated
    with smart homes have been designed to make their lives easier and better (Volety
    & Geethanjali, 2022). With the advancement in technology in addition to sensors
    and actuators, user interactivity started to gain importance. Augmented Reality
    (AR) integrated with the GUIs to provide an interactive user panel to control
    various functionalities around the smart home has proposed by Mishra, Karmakar,
    Bose, and Dutta (2020). The better controllers like ESP, Wemos and STM32 replaced
    Arduinos and PICs due to its high data transfer rate, multi functionality, and
    Internet accessibility. The sensor multiplexing made easy by using ESPs that also
    decreased the implementation cost (Nagendram, Kanakaraja, KiranNag, & Akhil, 2021).
    Overall the components are the most important fraction of a smart home. The functionality
    can be increased effectively using controllers like NodeMCU and ESPs in integration
    with Raspberry Pi that can help in extending the number of nodes and sensors while
    maintaining a centralized management. A comparison of various microcontrollers
    used for automation in literature is presented in Table 2. Many sensors have been
    designed having compatibility with controllers like ESPs and NodeMCU which have
    rendered immense ease in customization of the sensors according to the user requirements.
    Table 2. Comparison of Controllers and components. S. No. Component Advantage
    Disadvantage Reference 1 PIC Good performance Less options of sensors to integrate
    with, No internet connectivity Puri and Nayyar (2016) 2 ESP 32 Fast, Large no.
    of GPIOs, Internet, Bluetooth Power consumption D’Ortona, Tarchi, and Raffaelli
    (2022) 3 Arduino Universal, Easy to implement Less GPIOs Nandanwar and Chauhan
    (2021) 4 Raspberry Pi Own Operating system, Compatible Expensive Saradopoulos,
    Potamitis, Ntalampiras, Konstantaras, and Antonidakis (2022) Download : Download
    high-res image (191KB) Download : Download full-size image Fig. 2. A timeline
    of past decade for evolution of various hardware controllers used in smart home
    automation. In order to transform the smart houses into smart cities, one of the
    basic challenges is to integrate the different nodes i.e homes to a network. The
    microcontrollers that are to be used for this purpose need to have high reliability
    and dependability. As for the smart cities, the controllers are required to manage
    the data transmitted by various sensors and send it to relevant actuators. In
    a smart city managing the traffic, weather updates, energy distribution are important
    tasks. For these purpose, different types of controllers are proposed. As the
    controllers need to constantly manage a lot of data, the requirements for choosing
    the controllers include a large number of GPIO pins and network connectivity.
    In addition to that the presence of an operating system makes it easier to design
    dedicated embedded systems. D’Ortona et al. have proposed an automation system
    for smart cities using ESP 32. It proposes the use of wearable with Bluetooth
    Low Energy (BLE) and MQTT for the pedestrians walking on the streets. ESP 32 used
    with Raspberry Pi as a broker to send and receive data and enable communication
    (D’Ortona et al., 2022). John et al. designed a smart waste disposal system using
    Arduino that consisted of a small module that can be installed inside the waste
    bins and can measure the fill levels. The system is also connected to a cloud
    server that receives the data from the bins all over the city and takes intelligent
    decisions about changing or emptying the bins (John et al., 2022). Similarly Arduino
    is also used by Nandanwar and Chauhan (2021) to monitor the pollution levels at
    various points around the city. In order to detect empty car parking space, a
    smart car parking system has designed using oscillator circuits and micro controllers
    (Fischer, Guggenberger, & Ussmueller, 2021). To have efficient data transfer using
    the internet, ESP 32 is used in the embedded design systems (Sajjad et al., 2020).
    ESP32 along with LoRA has proposed to design smart Lamp posts that can be automatically
    controlled using light intensity (Fischer et al., 2021). In order to provide portability,
    Raspberry pi is also used that gives additional support of its operating system
    too. The operating system can be supported by using micro controllers on a small
    device. Saradopoulos et al. utilized Raspberry Pi in concurrent with the edge
    computing and implemented computer vision models on ESP 32 to control pest infestation
    in urban cities (Saradopoulos et al., 2022). Leccese used Raspberry pi and ZigBee
    modules to control lamp posts remotely (Leccese, Cagnetti, & Trinca, 2014). In
    paper (Dawn, Bhowmick, Bhowmik, & Mandal, 2023) smart door system has been developed,
    that automatically detect the person and sent the message to the user for security
    purpose. The different techniques for the improvement of power quality and detection
    of harmonics in smart grid has been explained in Ghiasi et al., 2023, Rahiman
    et al., 2023. Kernel least mean p-power (PKLMP) controller has been suggested
    for integration of grid with PV system (Pattnaik, Badoni, & Tatte, 2023). In paper
    Braun, Grüne, Kellett, and Worthmann (2023) model predictive controller has discussed
    for management of load by considering different load condition for smart grid.
    In Ref. (Fakhar, Haidar, Abdullah, & Das, 2023) planning and management of green
    energy system has reviewed for future technologies used in smart grid and cities.
    The planning and modeling of energy management for smart city in South Asia has
    been discussed in Shafiullah et al. (2023). It is proved that the energy system
    for the smart cities depend on development of policy, modern technology along
    with human capacity. The security and establish a bidirectional communication
    with surrounding has been noticed in term of merits and demerits (Muqeet, Liaqat,
    Jamil, & Khan, 2023). Literature shows that different kinds of controller and
    component that are used for collecting and managing the information with in a
    smart city, however, to achieve the goal of sustainable smart cities the controllers
    and components need to work at low power and have higher processing powers. The
    ARM Cortex controllers as well as STM are strong candidates for this with some
    trade offs. The advancements of various hardware components used in smart home
    automation is shown in a timeline in Fig. 2. It shows that with time, there has
    been a significant rise in processing power of hardware which is just the right
    thing required for handling large amounts of data in a smart city. Download :
    Download high-res image (268KB) Download : Download full-size image Fig. 3. MQTT
    architecture. 3.2. Protocol stack and networking In IoT, protocols for networking
    act as a backbone of the system. They are the glue that bind the whole network
    together. Data transfer from one end of the system to the other is managed by
    these protocols. Different protocols work on various layers of the network model.
    These are broadly divided into wired and wireless with each of them having their
    own specific benefits and advantages in certain specific situations. 3.2.1. Wired
    communication Wired protocols ensure secure long distance communication that is
    usually between two dedicated devices. The protocols like SPI, I2C and UART have
    been in use for years for simplest yet effective communication (Arun Francis et
    al., 2021, VasudhaaC.S. and Professor, 2021). Wired communication is achieved
    by ethernet cables providing Local Area Network (LAN), which restricts the activity
    to a particular premises only (Oluwole, Odekunle, & Olubakinde, 2021). In case
    of smart cities, the data is more localized into small divisions consisting of
    users and it is not feasible to manage the transmission and receiving using long
    wired transmissions. 3.2.2. Wireless communication Contrary to that, Wireless
    protocols are mostly used in circumstances requiring data transmission to a large
    number of users or nodes at the same time. It can increase the efficiency of the
    transfer rate and reduce the latency while giving the advantage of hardware portability.
    MQ Telemetry (MQTT) has been known to have high transfer rate in short distance
    communication and is very effective in transmitting tiny messages like temperature
    or energy usage updates proving its effectiveness in a smart homes as well as
    smart city automation. Sonar et al. designed a controller based energy meter to
    monitor the energy consumption and transmit the data in real time using MQTT protocol
    (Sonar & Deshpande, 2019). Similarly, a diverse approach of data transfer using
    MQTT has been presented in Chauhan and Malik, 2021, Hercog et al., 2020. The data
    transmission in smart cities can be centralized or decentralized depending on
    the information being transferred. Edge computing plays a major role and used
    with MQTT protocol to develop small decentralized architectures with in smart
    cities that can be used for parking management, water distribution or traffic
    management etc (Alam et al., 2022, Merzoug et al., 2021, Zaman et al., 2021).
    These challenging tasks require no coordination with a central server and can
    be managed on small, low-power edge devices that can handle the computing at the
    nodes. However if there is a need of communication with a central server than
    the data can be made online at regular interval or shared with a cloud. The cloud
    computing makes the data secure and leads to a sustainable infrastructure with
    in a smart city (Massobrio, Nesmachnow, Tchernykh, Avetisyan, & Radchenko, 2018).
    The paper (Bellini, Nesi, & Pantaleo, 2022) explained the communication between
    different nodes in smart city by using IoT technology. The smart environment is
    based on communication of smart devices with each other to make smart country
    with the help of IoT architecture (Ketu & Mishra, 2022). MQTT is used in the situation
    where one centralized broker is connected to many subscribers and publishers,
    however, in case of decentralized architecture, client–server model has been used
    widely in literature. It gives a more specific approach in which one of the devices
    acts as a server while the other acts as the client and protocols like HTTP/s
    and websockets that are used to transmit the data to web pages. These protocols
    although are slower as compared to MQTT, nevertheless, their usage is more from
    the practicality point of view (Luigi, 2015, Surajudeen-Bakinde and Isiwekpeni,
    2016). Generic MQTT architecture is shown in Fig. 3 as mentioned in Khan, Huda,
    and Zaman (2022) and HTTP architecture is illustrated in Fig. 4. Besides from
    this COAP is also suggested which is most similar to HTTP in many aspects and
    is useful in linking up small devices and local web pages. To transmit the information
    via these protocols the mode of transmission used are GSM (Global System for Mobile
    communication), WiFi, Ethernet, Bluetooth and LoRaWAN etc. with each of them having
    their own pros and cons (Rajkumar, Rajendra, Prafulla, & Vinod, 2020). WiFi and
    Bluetooth both are regarded as an ideal option for home automation as these provide
    wireless connectivity and can easily be configured for the commonly used sensors.
    However both of these are short ranged and need repeated access points all over
    the house to get unrestricted connectivity (Folea, Bordencea, Hotea, & Valean,
    2012). To compensate these points, LoRaWAN (Long Range Wide Area Network) has
    introduced. As the name says so, it provides long range connectivity to the devices
    enabling them to send and transmit data. Islam et al. used LoRaWAN to design a
    new architecture for smart homes that linked all the devices on one android application
    and the results showed significantly less delay than WiFi and bluetooth (Islam
    et al., 2021). Download : Download high-res image (257KB) Download : Download
    full-size image Fig. 4. HTTP architecture. Download : Download high-res image
    (289KB) Download : Download full-size image Fig. 5. A generic Z-wave architecture.
    Bluetooth Low Energy (BLE) is used for devices that do not need to be sending
    data continuously. It uses less energy which is the main advantages of BLE (Collotta
    and Pau, 2015, D. et al., 2021). Another significant extension is the use of GSM
    that not only provides connectivity inside the house but also perform everywhere
    with the help of cellular network (Felix & Jacob Raglend, 2011). It has been widely
    used in the literature in automation architectures and proved valuable in integrating
    smart phones to the automated architectures to receive updates (Rajkumar et al.,
    2020). Bluetooth can only provide the connectivity within a limited range hence
    not feasible for smart city applications. However, the introduction of 5G has
    brought a revolution in this field. 5G not only provides fast data transfer rate
    with a high bandwidth but also enables the smart city applications to be able
    to connect to any cloud or local server. A newly designed smart city applications
    are now shifting towards using 5G for communication. ZigBee and Z-Wave are new
    addition to the list. ZigBee is used with a gateway and has the ability to connect
    to various clients at the same time (Byun et al., 2012, Ciffee et al., 2021).
    Z-wave has emerged as the rival to WiFi, being able to operate on low frequencies,
    it does not interferes with the other frequencies in home. Moreover, it does not
    need any gateway or router, as in the case of WiFi. The devices connect with each
    other forming a mesh, making it a promising choice for the home automation (Dawoud
    & Dawoud, 2020). A generic Z-wave architecture is shown in Fig. 5. Overall the
    use of right protocol can either make or break the whole smart home automation
    system (Rajasekhar, Basu, & Sowjanya, 2021). The type of environment, user activity,
    number of devices are the variables that determine the premier technology for
    the correct circumstances. A comparison of various protocol suites is presented
    in Table 3 and a timeline of evolution of the technologies in Fig. 6, for communicating
    and transmitting large amounts of data. The timeline shows that the trend has
    been shifting more towards decentralized approaches for data transmission in the
    form of 5G and NB-IoT, that not only provide commendable coverage but also are
    available on a wide area of land, surpassing the limitations for big data handling.
    Download : Download high-res image (173KB) Download : Download full-size image
    Fig. 6. A timeline of past decade for evolution of various communication protocols
    used in smart homes and cities. Download : Download high-res image (316KB) Download
    : Download full-size image Fig. 7. V2V and V2I architecture. Table 3. Comparison
    of protocols used within automated smart homes and cities. S. No. Protocol Advantage
    Disadvantage Reference 1 HTTP/S End to end connection High Latency Massobrio et
    al. (2018) 2 MQTT Light weight, fast, real-time transmission Needs a gateway or
    server in a device Merzoug et al. (2021) 3 WiFi Compatible, fast Limited range
    Folea et al. (2012) 4 Bluetooth Compatible, easier to implement Limited range
    D. et al. (2021) 5 LoRaWAN Extended range Limited payload, not suitable for real
    time monitoring Islam et al. (2021) 6 ZigBee Flexible architecture, Power saver
    Low range, high maintenance Byun et al. (2012) 7 Z-Wave Low frequency, No central
    hub required, less interference expensive Dawoud and Dawoud (2020) 8 5G, NB-IoT
    Un-limited connectivity Expensive modules Rajkumar et al. (2020) 3.2.3. Wireless
    communication between vehicle to vehicle (V2V) and vehicle to infrastructure (V2I)
    Vehicle management and controlling the data associated with it is one of the vital
    tasks in a smart city, since with the increase in automated vehicles on the road.
    In this work we reviewed a vehicle to vehicle and vehicle to infrastructure communication
    to reduce the chances of accident and control the traffic. The information details
    of one vehicle such as speed, location, petrol quantity and other essential data
    should be shared with other infrastructure by using IoT technology. Electric vehicle
    can be charged from the traffic light automatically to detect its battery state
    of charge (SoC). The paper (Rani & Sharma, 2023) explained that the intelligent
    Internet of vehicles (IOVs) is based on intelligent transportation system which
    is proposed for smart city. It modeled different machine algorithms such as Decision
    Tree (DT) and Random Forest (RF). The different optimization rule based algorithm
    has designed to sure the possible communication between V2V and V2I (Alsaleh,
    2023). The concept of Semi-Autonomous Electric Vehicles (SAEVs) for smart cities
    has been introduced in paper (Xidias, Panagiotopoulos, & Zacharia, 2023). An intelligent
    management system (ITS) has proposed to relocate the SAEVs. In paper Jiang et
    al. (2023) discussed that how the performance of Connected vehicles (CVs) has
    effected by weather conditions. The concept of V2V and V2I is presented in Fig.
    7. 3.3. Architecture In the literature a lot of work has been done on proposing
    and implementing various architectures for smart homes and smart cities which
    paves the way towards finding more smart and sustainable technologies for automation
    (Foth et al., 2021, Nižetić et al., 2022). All the architectures are carefully
    curated for that particular structure to perform according to the requirements
    under given circumstances. The management of the automated structures also plays
    an important role in deciding the type of architecture to design. Two broad classes
    of management systems are centralized and decentralized, which comprising a generic
    smart city architecture is shown in Fig. 8. Download : Download high-res image
    (338KB) Download : Download full-size image Fig. 8. A generic IoT based Smart
    City Architecture. 3.3.1. Centralized architecture A centralized architecture
    is a central management system that can be wired or wireless. It employs a server
    and broker in HTTP/S and MQTT respectively, that acts as a gateway. It collects,
    disperse and relays data to all the internal and external agents of the system,
    enabling it to look over the whole system at the same time. Gambi et al. designed
    a LoRa based architecture for long range communication using MQTT, that received
    the data from its publishers and made it accessible to the subscribers (Gambi,
    Montanini, Pigini, Ciattaglia, & Spinsante, 2018). Jabbar et al. proposed a hybrid
    architecture with both local and remote control and managements systems along
    with a portable control box that allowed to be attached to any house for monitoring
    purposes (Jabbar et al., 2019). 3.3.2. Decentralized architecture Decentralization
    is cloud based management system that moves the databases to the cloud and not
    on the local devices that helps in decreasing load from the devices and increasing
    efficiency. One of such processes is described by Ye et al. who have focused on
    automating a house into smart house using cloud and provided a cost and energy
    efficient solution (Ye & Huang, 2011). Integrating various operations in a smart
    home system is difficult task. Inter-operability of different appliances with
    in a smart home is performed by assigning unique identifiers to each device. An
    architecture based on Resource Name Service (RNS) proposed by Yang et al. that
    allowed inter-operability and integration with existing automation solutions (Yang,
    Yuan, Tian, Feng, & Mao, 2014). Similarly another cloud based architecture presented
    by Frincu et al. that also incorporated scalability to enable data flow in the
    smart home (Frincu & Draghici, 2016). Mohpatra et al. made a huge leap from the
    past technologies and introduced voice control mechanism integrated over ZigBee
    that started a new amalgamation of IoT, Signal Processing and Artificial Intelligence
    (Mohapatra, Nayak, & Nayak, 2021). Another ZigBee based architecture has introduced
    by Kuang et al. that focused on imperceptibility in automated structures based
    on cloud data processing (Kuang & Li, 2021). Ozmen et al. used Fog-based Home
    Automation Platform (FOGHA) based smart home automation that provided real time
    services over its cloud nodes (Ozmen, Isik, & Ersoy, 2021). Alani et al. presented
    a comparison between Blynk and NETPI IoT platforms while discussing the need of
    user friendly interfaces and applications (Alani et al., 2021). In the recent
    years block chain has emerged as a latest playing ground in the field of technology.
    A block chain based architecture has been proposed by Ammi et al. ensuring communication
    confidentiality and integrity (Ammi, Alarabi, & Benkhelifa, 2021). Contrary to
    the smart homes, the smart city architecture consists of several divisions and
    departments that either need to be governed with a central server or can work
    autonomously with a decentralized management (Ghosh, 2018, Jung et al., 2013).
    The idea of smart city governance using information system management connected
    to a centralized structure is proposed in Sarangi, Pal, Prusty, and Chen (2022).
    Because of their intrinsic variety and incoherence, managing IoT solutions in
    an automated architecture is a difficult undertaking. IoT management techniques
    are primarily concerned with devices and connectivity, and as a result, they lack
    a various software, hardware, and communication components that make up an IoT-based
    solution. The paper (Silva, Faria, & Vale, 2022) presents a new four-layer IoT
    management architecture for managing, regulating, and monitoring software, hardware,
    and communication components, as well as data flow and data quality in a distributed
    infrastructure. Edge computing in such IoT network facilitates distributed computing
    by bringing computational applications closer to end-users in the form of Fog
    sub-networks, which include local participating end-user IoT nodes as service
    requesters and specialized servers catering to the requests, which are modeled
    for the infrastructure category (Bhardwaj, Banyal, Sharma, & Al-Numay, 2022).
    Distributed and Edge computing manages and coordinates the tasks at a lower level
    to maintain the higher level infrastructure (Abdrabou et al., 2022, Arena et al.,
    2022). The paradigm change from a hierarchical pyramid to an inverted pyramid,
    which is the foundation for edge, fog, and cloud-based architectures which is
    presented in the article Poza-Lujan, Uribe-Chavert, Sáenz-Peñafiel, and Posadas-Yagüe
    (2022). It provides a distributed modular architecture where the devices are built
    up of control nodes, which can connect with one another to improve their operation
    without sending raw data to the cloud. Identical controlling connect with a sensing
    element were developed to evaluate the architecture. The paper Zineb, Siham, and
    Jean-Philippe (2022) worked on a smart city architecture based on centralization
    of smart city services, self-control and adaptability, and prediction of future
    system behavior. The proposal includes a centralized administration application
    for visualizing the numerous events of the many smart applications, as well as
    their interdependencies that enables all aspects of smart city applications and
    system health to be monitored and controlled. Furthermore, by describing the many
    decisions and actions done, this primary application aids in gaining users trust.
    In Jnr and Petersen (2022) Enterprise Architecture Framework (EAF) is introduced
    to promote the digitalization of urban settings in order to assist smart cities
    in aligning information systems (IT) and business objectives to accomplish urban
    digitalization. A mixed-mode methodology has used to develop a research model
    using the Technology Acceptance Model (TAM). To empirically test the established
    EAF, quantitative data via questionnaire survey was collected from practitioners
    in firms in Norway and Ireland that are currently using Enterprise Architecture
    (EA) in a smart city initiative. 3.3.3. Data computation and handling The computation
    of the data at such a large scale is one of the biggest requirements to deal with
    the architecture for a smart city. By adopting the fog computing concept, this
    problem can be handled. Industry 4.0 and smart city deployments face a number
    of obstacles, including high energy consumption and an excess of data to be processed
    at data nodes. By acting as a low-complexity computational layer between the cloud
    and the internet of things (IoT), a fog computing-enabled architecture can assist
    to alleviate some of these issues. Computationally heavy data processing duties
    can be shifted from the cloud layer to the fog layer, and the fog layer can also
    operate as a gateway to the other top layers, and can also be set up at the edge
    of the network for efficiency (Mana, Samhitha, Deepa, & Vignesh, 2022). The collecting
    of heterogeneous data in a smart city an uniform access to data and collection
    system. Song et al. propose a method for building software and hardware systems,
    as well as an urban perception network middle-ware architecture, that can meet
    the demand of M2M and realize dynamic management of cognitive resources, based
    on the IoT computing framework put forth to fulfill urban sensing network information
    gathering, transmitting, and computing smart technology, according to the required
    properties of IoT gateway (Song & Wu, 2022). It also enables HTTP-based ubiquitous
    services. This is critical for offering intelligent services that include a wide
    range of solutions, controllers, and computer terminals. It also examines ways
    to employ intelligent sensors, wireless connectivity, data mining, and other IoT
    technologies to link people within a smart city infrastructure. 3.4. Security
    for sustainable networks In any system interchanging the information, security
    and privacy is the biggest concern which leads to the stability of the system.
    Data integrity and confidentiality needs to be maintained as a part of transmission
    as well as protection against packet sniffing, eaves dropping and repudiation
    attacks (Deepika, 2021, Gupta et al., 2022). At the start of automation trend,
    security was not main concern. it started to get matured as the technology got
    refined. Smart homes’ and Smart Cities’ devices, sensors and actuators are interchanging
    information all the time so the security became a major focus of the developers.
    Many methods have proposed for secure automation solution that protected the system
    using a login authentication for user and using SSL for client/server communication,
    which can be regarded as a bare minimum for now a days, nevertheless it was a
    progressive start (Karaca, Sisman, & Savruk, 2016), the similar system has also
    implemented along with finger print authentication and voice recognition to provide
    a dual authentication (Jose et al., 2016, Kumar and Lee, 2014, Rasheeda, 2020,
    Venkatraman et al., 2021). To verify and exclude the false alarms the system has
    improved using access points around the premises (Jose & Malekian, 2017). The
    use of third party based security applications also emerged along with the risk
    of data breach by those third parties (Fernandes et al., 2016, Jacobsson et al.,
    2016). Real time monitoring of appliances and premises have done using sensors
    sending GSM based notifications to users and intrusion detection based on vision
    based home automation systems (Chowdhry et al., 2015, Gupta and Chhabra, 2016,
    ShariqSuhail et al., 2016). As discussed above, in the beginning the security
    was mainly against the trespassing or appliance safety and little amount of energies
    were being utilized in securing the network of a smart automation systems. As
    the network grew wider, many nodes and end users started communication. The data
    integrity and confidentiality became a necessity (Goudbeek, Choo, & Le-Khac, 2018),
    for which many authentication methods were proposed based on cryptographic algorithms
    (Ashari, Shouran, & Priyambodo, 2019). To authenticate the smart phones in a smart
    automated environment and to send secure messages, Mantoro et al. used Diffie–Hellman
    key exchange, AES 256 encryption and hash function based on RC-4 (Mantoro, Ayu,
    & binti Mahmod, 2014). The transmitted messages first pass through a central gateway,
    get encrypted to generate hash messages. A network security mechanism based on
    efficient key generation has proposed in order to encrypt the data into cypher
    text. The method also ensured a low energy consumption by using the proposed technique
    (Pirbhulal et al., 2017). The security and privacy has been explained in term
    of facilities provided to the people in smart city which is based on IoT (Thilakarathne
    & Madhuka Priyashan, 2021). To enhance user privacy a security architecture has
    proposed by Lee, Kim, and Shon (2016). The architecture is based on a security
    framework to provide data encryption, authentication by using digital signature
    and access control. Prudanov et al. presented multi factor authentication based
    on yoking proof protocol to ensure mutual confidentiality (Prudanov et al., 2016).
    Kang et al. designed security frame work for appliances in smart homes. The method
    used a module level approach integrated with kernel of the device. The module
    based on application, smart appliance and appliance integrity and ensured authentication
    and integrity in the appliance’s data transmission (Kang, Moon, & Park, 2017).
    To detect network anomalies like Distributed Denial of Service (DDoS), a machine
    learning technique based on Hidden Markov Model (HMM) has designed in Ramapatruni,
    Narayanan, Mittal, Joshi, and Joshi (2019). The technique used the HMM to predict
    the anomalies by analyzing the normal user behavior based on data collected in
    defined collection points. In Al-Turjman, Zahmatkesh, and Shahroze (2022) discussed
    the major problems related to security and privacy of important information in
    smart city. The addition of security algorithms commonly used in smart homes’
    security applications provides scalable solutions to efficiently cater the requirements
    of smart cities security system (Bertino et al., 2016, Jutila, 2016). In Jin et
    al., 2016, Khan and Salah, 2018, Lin et al., 2017, Minoli, 2020 discussed the
    different security risk at the beginning stage of implementing smart city application.
    As mentioned above, that the smart city consists of multiple sections in which
    connectivity of all sections and units on one network increases the risk of vulnerable
    node. Edge computing and decentralization is a intelligent and feasible solution
    that secures the network from various sorts of DDoS, Forgeries, Brute Forcing,
    Non repudiation attacks etc (Makkar, 2022, Sani et al., 2022, Seddik et al., 2022)
    Integration of transportation network within a smart city along with stand alone
    security model using blockchain has noted in Aloqaily et al., 2019, Su et al.,
    2019, Wu et al., 2022. Xu et al. improved the idea of Certificate-less Designated
    Verifier Proxy Signature Scheme (CLDVPS) as proposed by He, Ma, Qi, and Wang (2021),
    by resisting the user impersonation attacks in Unmanned Arial Vehicles (UAVs)
    while keeping intact the data privacy and security (Xu, Luo, Vijayakumar, Peng,
    & Wang, 2022). In Kuppa et al. (2022) suggested the deep learning approach to
    design a solution for detection of malicious injection attacks in the code and
    cleaning up of the malicious code using context based awareness playing a pivotal
    role in the sustainable smart city infrastructure. The stability of the data transmission
    of the network is embedded in securing the vulnerabilities of the network. DDoS
    attacks can choke the network by exploiting the vulnerabilities of the IoT device
    standards, securing of which can evidently decrease the DDoS, bruteforcing and
    accessing the open ports (Nisa, Alhudhaif, Qureshi, Hadi, & Jeon, 2022). The use
    of Fuzzy Algorithms, Artificial Neural Networks (ANN) and Deep Learning algorithms
    plays an important role in pattern analysis and prediction of future attacks (Rajasekhar
    et al., 2021), while providing the ability to trace the data sharing and mitigating
    the further anomalies (Zhan et al., 2022, Zhang et al., 2022, Zhang et al., 2022).
    3.4.1. Securing big data and the role of blockchain Blockchain based security
    systems have been introduced in most of the networks as a decentralized approach
    to security, consisting of a public ledger of members handling and passing on
    cryptographic data that makes it impossible to alter the data, hence enforcing
    integrity. It is easier to implement on to an existing smart automation system
    due to its ability of being independent of the conventional protocols. An analysis
    of blockchain along with ways to implement it, has been presented by Moniruzzaman
    et al. hinting at the need of a prototype design for implementation (Moniruzzaman,
    Khezr, Yassine, & Benlamri, 2020). The blockchain can be private or public and
    runs under the IoT layer in a smart home network. Public blockchain can drastically
    increase the overhead as it provides open access for users to join the network,
    making private blockchains a more feasible option for small, disjoint architectures
    like homes and offices etc. Block mining time using ESP 32 for basic difficulty
    level, a minimum requirement for smart homes, has been calculated to be 1 s which
    can be improved by increasing computational power (Arif, Khan, Rehman, Kabir,
    & Imran, 2020). Technologies like Deep Re-enforcement Learning integrated with
    blockchain help improve the system and protect them from getting hack (Shahbazi,
    Byun, & Kwak, 2021). As blockchain methods are difficult to implement over the
    whole system, suggestion to start with implementation on gateway have been proposed
    in Minoli (2020). A detailed security analysis of centralized databases based
    systems that hinted at the need of devising better analysis methods to assess
    the security as well as securing the smart phones that are connected to the smart
    home systems, in order to ensure complete data integrity and privacy (Kafle, Moran,
    Manandhar, Nadkarni, & Poshyvanyk, 2021). Download : Download high-res image (208KB)
    Download : Download full-size image Fig. 9. Block chain with IoT network. Cloning
    and jamming attack protection based on RFIDs have provided better results of simulations
    and practical implementation (Mbarek, Ge, & Pitner, 2021). Several works have
    been done on Intruder detection based on predictive learning, designing frameworks
    based on machine learning. One of such framework based on the Adaptive Neuro-Fuzzy
    Inference System (ANFIS) presented by Ahanger et al. predicted the presence of
    intruder with an accuracy of 93.66% (Ahanger, Tariq, Ibrahim, Ullah, & Bouteraa,
    2020). Use of Big data analytics to manage data stream coming from various devices,
    along with machine learning can predict user behavior and presence (Asaithambi
    et al., 2021). The trend of security is shifting towards prediction in order to
    foresee the anomalies before they can cause any harm to the network. Implementation
    of machine learning algorithms along with network security and data encryption
    can improve the security of the automated systems. Two way authentication can
    be applied by using fingerprint and retina pattern to detect intrusion. The blockchain
    makes it feasible to integrate several smart homes into a decentralized ledger,
    similar method can be scaled to an automated smart city architecture. Blockchain
    enables different departments and sections of the smart city to be able to have
    secure communication via blockchain layer that is embedded in between the IoT
    layer and the Application Layer of the system as shown in Fig. 9. As discussed
    above, the IoT, cloud computing, and 5G are all becoming indispensable parts of
    our lives as a result of the rapid advancement of information technology. Smart
    cities have become a reality as a result of the advancement of cutting-edge digital
    technologies and different city sensing devices generate a large amount of data
    throughout the smart cities (Zhao, Wang, Liu, Qiao, & Zhou, 2021). Although, Smart
    cities can adopt the cloud computing paradigm to smoothly use massive data, this
    data would be effectively processed and stored by cloud servers. However, the
    constant communication between the nodes in a smart city needs to be uninterrupted
    and secure, as opposed to traditional cloud solutions (Haseeb, Din, Almogren,
    Ahmed, & Guizani, 2021). Hence the use of edge technology naturally calls for
    Blockchain solutions for securing the transmission of big data among the nodes
    and playing an integral role in becoming sustainable (Alazab, Manogaran, & Montenegro-Marin,
    2021). Particular sections of the smart city can have their own edge based networks
    and surveillance systems to enable agile optimization (Ke et al., 2021, Peyman
    et al., 2021). For the surveillance and security of intelligent transportation
    systems to secure them against hijacking, GPS spoofing or DDoS attacks, blockchain
    based solutions are proposed to reduce the chance of single point failure (Gupta,
    Kumari, & Tanwar, 2021). The presence of resilient network framework works on
    the front line under the circumstances of a cyber-attack. The use of distributed
    frameworks solution utilizing the distributed end nodes up to full capability
    and taking up the load of the system in case of attack to keep the systems running
    smoothly (Chen, Qiu, Zhao, Zhou, & Ning, 2021). Using specifically designed network
    APIs gateways keep registration and user validation secure from denial of service
    attacks (Dai et al., 2021, Ferreira et al., 2021). Nonetheless, as a demerit,
    Edge servers have limited resources and lack a diverse set of capabilities. It
    is critical to increase the average resource usage of all edge servers while still
    maintaining load balancing of the edge server cluster. However, because a large
    number of applications are delay-sensitive, it is vital to verify that these applications
    are secure. In Peng, Liu, Tao, and Huang (2021) looked at how to improve the overall
    performance of a Edge enabled smart city by combining mobile device and edge server
    optimization. In terms of technology, a novel multi-objective computation offloading
    approach has been designed to reduce time and energy consumption, maintain load
    balancing of edge servers, and boost average resource utilization. A comparison
    of various tools used for security of data in a smart city is shown in Table 4.
    Although with this much work into this field, it still has a lot of pages left
    unexplored and it undoubtedly is one of the vital tools to tackle the big data
    in a safe and secure way. Table 4. Comparison of security tools. S. No. Tool Advantage
    Disadvantage Reference 1 Finger print authentication Basic Forgeable Rasheeda
    (2020) 2 RFID based authentication Feasible Less secure Mbarek et al. (2021) 3
    Blockchain Secure and sustainable Lacks large scale implementation yet Peng et
    al. (2021) 4 Edge computing decentralized and robust Limited resources Alazab
    et al. (2021) 3.4.2. Drone or unmanned aerial vehicles (UAVs) for security Drones
    could be employed for a variety of application in both military and industry.
    The major application of drone is security purpose. In paper Nguyen and Nguyen
    (2021) the drone is proposed for the security purpose like cyber and public security.
    Various methods has also been suggested for the protection of drone. It also shared
    the important information regarding cyber security for the future. The paper Qadir,
    Ullah, Munawar, and Al-Turjman (2021) explained the application of UAVs in different
    fields like disaster and rescue. It proposed the path planning algorithm to find
    the shortest path to minimize the energy and cost for doing different tasks. The
    charge station has been introduced in Zou et al. (2023) to charge the UAVs and
    extend its battery life. The paper Lucic, Bouhamed, Ghazzai, Khanfor, and Massoud
    (2023) presents the application of UAVs for smart cities, specially addressed
    the intelligent transportation systems (ITS) for the smart cities. The identification
    of remote location using drone is a challenging task, that has been discussed
    in Prabu, Malathy, Taj, and Madhan (2023) that monitor and control the data for
    application of smart city using drone network. The collection of data pattern
    from different nodes in smart city is illustrated in Fig. 10. Download : Download
    high-res image (265KB) Download : Download full-size image Fig. 10. Drone application
    in smart cities. 3.4.3. Service providing in emergencies The concept of smart
    cities is introduced to provide high quality life by using latest smart technology.
    To provide best services in case of emergency condition like COVID-19 pandemic
    (Alshamaila, Papagiannidis, Alsawalqah, & Aljarah, 2023). It noted that the responses
    in term of traffic, UAVs and emergency management. The paper Rawat, Bist, Apriani,
    Permadi, and Nabila (2023) considered the AI based drone for better emergency
    service by using block chains system. In Hasan, Islam, Sadeq, Fung, and Uddin
    (2023) deep learning technology has proposed to reduce the speed of COVID-19 pandemic
    and grow awareness in the people. It discussed methods of deep learning by using
    mass video surveillance. In case of emergency the data has been collected from
    social media, then proceed to the intelligent base system (Alkhatib, El Barachi,
    & Shaalan, 2019) to create alarm sign for the rescue. The concept of smart hospital
    has been proposed in Buhalis, O’Connor, and Leung (2023), to provide quick relief
    and services to the people. The paper (Tushar, Alam, Bari, & Karmaker, 2023) introduced
    the better medical waste management (MWM) system to reduce the effect of unavoidable
    situation like COVID-19 pandemic. It used different techniques such as Best–Worst
    Method (BWM) and Interpretive Structural Modeling (ISM). 3.5. Artificial intelligence
    With the introduction of quantum computing and block chain, Artificial Intelligence
    (AI) and Machine Learning (ML) has a major part in the technological domain. Starting
    from the recommendations on our search engines to automatic cars running to the
    road, AI has infiltrated everything and forming a networked hive mind and home
    automation is not far behind in this race (Asaithambi et al., 2021). AI based
    home automation came into sight around the beginning of last decade when the idea
    of machine learning emerged (Kriška, Janitor, & Fecilak, 2014). The different
    latest techniques have been proposed in Mishra et al. (2022), such as machine
    to machine communication, Internet of thing along with Artificial intelligence
    etc... It started from controlling the appliances using voice commands, the machine
    could learn and identify the voice patterns and the voice commands activated the
    functionality (Lecouteux et al., 2011, Nagaraja and Srinath, 2020, Shingala and
    Patel, 2017). With the passage of time, the machine learning algorithms started
    to improve and emerged in every field of life. Intelligent and Fuzzy based controllers
    have proposed combined for feedback and refine the system based on it. It make
    the system efficient by increasing their data sets. In the literature many discussions
    have been going on, on the need of developing relevant standards to translate
    AI from literature to product (Guo et al., 2019, Thakkar and Lohiya, 2021, Zaidan
    and Zaidan, 2020). In the beginning, the behavior and activity recognition has
    done in order to design models and frameworks (Chahuara, Fleury, Portet, & Vacher,
    2012). Models have designed on smaller scale for example to control heat settings
    based on temperature forecasts (Bausch, Tewkesbury, Bausch, & Tewkesbury, 0000)
    and intelligent lighting control sensors (Andramuño et al., 2021, Tang et al.,
    2017). Different controller based systems have designed that could intelligently
    control a smart home environment (Chandramohan et al., 2017). Artificial Neural
    Networks (ANN) (Teslyuk, Kazarian, Kryvinska, & Tsmots, 2021) and Deep Learning
    algorithms began to incorporate in the management and security of smart premises
    (Abdulrahman, Isiwekpeni, Surajudeen-Bakinde, & Otuoze, 2016). Different models
    are designed to perform various tasks around the house and are based on different
    algorithms. Artificial Intelligence and Deep Learning have been useful in conservation
    of energy (Bhatt et al., 2021, Popa et al., 2019), voice recognition (Brenon et
    al., 2018, Rani et al., 2017), object detection (Mehmood, Ullah, Ahmad, & Kim,
    2019), multimedia management (Rego, Ramírez, Jimenez, & Lloret, 2021) system control
    (Andramuno et al., 2021) and image processing related tasks in a smart home. The
    translation of AI from automating smart houses to smart cities is a massive challenge
    itself. The success of AI models is based on their training which ultimately depends
    on the data sets provided to the models. As for smart homes, the data sets are
    small and easier to manage while in case of smart cities, the training data set
    can add up to many tera bytes easily which not only makes data collection and
    management a hassle but also the training becomes a tedious task. For that purpose,
    Big data analytics start to play its role and helps in extracting meaningful insights
    from the data by recognizing patterns and trends. It can also act as a pre-processing
    phase for the data before being fed to the AI models for training. Although it
    is a new concept for smart cities but it has gain immense popularity among research
    enthusiasts. It initiated with the designing of intelligent systems for small
    tasks like cost calculation and optimization for resources management (Ponte,
    Fuente, Pino, & Priore, 2013), optimization of energy utilized by Wireless Sensor
    Networks (WSNs) (Azpilicueta, Nazabal, Falcone, Fernández-Valdivielso, & Matías,
    2013) and traffic traceability and surveillance systems (Fernãndez et al., 2013,
    Mora-Mora et al., 2015). Transportation and vehicle management techniques greatly
    improved by the use of intelligent systems (Hernafi, Ahmed, & Bouhorma, 2017).
    Transportation management in a parallel fashion using intelligent agent based
    control is proposed by Zhu et al. to aid the traffic congestion (Zhu, Li, Chen,
    & Xiong, 2016). Similarly decision trees and optimization techniques proposed
    by Huang et al. assisted in maintaining a low power profile for the Trains’ network
    in smart cities (Huang, Deng, Yang, & Sun, 2016). Classification techniques and
    anomaly detection methods have proposed in Brisimi, Cassandras, Osgood, Paschalidis,
    and Zhang (2016) for obstacle detection in the streets and improved by using ML
    techniques and methods like K nearest neighbors and ANN incorporating the Fog
    Computing (Bustamante-Bello et al., 2022). Neural Network based prediction system
    for vehicle parking proposed in Provoost, Kamilaris, Wismans, van der Drift, and
    van Keulen (2020) outperformed with a mean square error of only 7.18. Ballis et
    al. used re-enforcement learning for traffic signals and designed strategies to
    reduce congestion (Ballis & Dimitriou, 2020). An accuracy of 81% has achieved
    by using YOLO framework in achieving traffic clearance at the signals (Khan et
    al., 2022). Gradually AI and intelligent systems started to engulf different sectors
    of the smart city automation and data handling became more robust and uninterrupted.
    To ensure the mobility and robust data flow, Intelligent Software Define Networks
    (SDNs) have proposed to manage the inter-operability of wireless sensors and networks
    aiding the heterogeneous wireless networks (Kosmides et al., 2015). To collect
    data holistically, human or vehicle mounted sensors can be used, utilizing the
    concepts of situation awareness and computational intelligence as proposed in
    Rolim et al. (2016). Use of Artificial Intelligence based solutions for the security
    and safety of smart cities are also explored by researchers. State of the art
    classification techniques have proposed in Castelli, Sormani, Trujillo, and Popovič
    (2017) to predict the crime rates. The use of Unmanned Ariel Vehicles operated
    using Multi agent systems has studied in Wan, Lu, Fan, and Letaief (2017) to deal
    with emergencies. The use of Closed-Circuited Television (CCTVs) can improve the
    security situation, however to deal with the massive amounts of video data is
    an exhaustive task which can be eased by the improved AI based video analysis
    techniques proposed in Pawlowski, Dabrowski, Balcerek, Konieczka, and Piniarski
    (2020). Computer vision used for face and vehicle number plate recognition plays
    an important role in the maintaining the security for which various AI frameworks
    have been proposed using Convolutional Neural Networks (CNNs) and ANNs etc. Medapati,
    Murthy, and Sridhar (2020). Salma et al. used the YOLO (You Only Look Once) framework
    for object detection in designing an automated number plate recognition system
    with an accuracy of 99.5% (Salma et al., 2021). Energy production and management
    is a vital sector in the stability of any city, which is discussed in detail in
    the next subsection. Intelligent systems are also designed for this domain to
    be used for forecasting energy demands to optimizing the production. Machine Learning
    approaches like Support Vector Machine (SVM), neural networks and regression trees
    are used under supervised learning to present a data driven approach for the prediction
    of load in buildings is discussed in Idowu, Saguna, Åhlund, and Schelén (2016).
    Artificial Neural Network (ANN) based light control system is proposed by De Paz
    et al. that is designed using modular approach and mitigates the energy utilization
    having a scalable solution (Paz, Bajo, Rodríguez, Villarrubia, & Corchado, 2016).
    Similarly data mining techniques can be used to design rule based inference systems
    based on the sensors to assist in controlled resource consumption (Peña, Biscarri,
    Guerrero, Monedero, & León, 2016). Deep Learning (DL) which is a subset of ML
    uses efficient neural networks like CNN to learn the pattern details in the distributed
    generation with in the power grids, the pattern information is fed to the neural
    network and can predict the parameters like power generation and user consumption
    etc. with improved accuracy as compared to simple classification and pattern recognition
    techniques (Xin, Alazab, Díaz, Montenegro-Marin, & Crespo, 2022). The key to successfully
    deploy smart and intelligent systems in smart cities is to divide the premises
    into smaller regions and use decentralized approach and Intelligent Edge techniques
    (Chilipirea et al., 2017, Patel et al., 2017). As for now there has not been enough
    data sets collected or models train that can make machines oversee the complete
    smart cities while making intelligent decisions which is a work in progress for
    future. Concisely, the field of AI and machine learning is rising up steadily
    in the congregation of IoT and automation, the need is to design suitable hardware
    devices with small memory foot print and power consumption and efficient protocols
    to deploy the AI frameworks, in order to design a smart city completely. A graphical
    representation of popular AI frameworks and models (reviewed in this paper) used
    in various sectors of Smart cities in is presented in Fig. 11. The cascaded multi-fidelity
    deep learning (CMF-DL) is proposed to predict the data based on both types of
    prediction and observation weather data (Luo & Zhang, 2023). In paper Petrosino,
    Striccoli, Romanov, Boggia, and Grieco (2023) Light-Fidelity (LiFi) is reviewed
    the features of internet of device (IoT) at which improve its performance. The
    different application of deep learning along with internet of thing has been discussed
    in Munavalli, Bindu, and Shirur (2023) for smart infrastructure like smart home
    and cities, smart farm and supply. Non-intrusive load monitoring (NILM) helps
    to evaluate the consumption of energy of individual device in smart home. A deep
    learning algorithm has been proposed to resolve the issue of consumption power
    calculation with the help of NILM (Hashim Shahab et al., 2023). In Ref. (Helmi,
    Al-qaness, Dahou, & Abd Elaziz, 2023) a robust human activity recognition (HAR)
    has been created with help of swarm intelligence and deep learning. The marine
    predator algorithm (MPA) has been developed to optimize the features that used
    in smart homes. In paper Uppal et al. (2023) recommender model based on fault
    prediction has been proposed to make the IoT devices efficient and provide better
    quality of life by proposing machine learning algorithm. Fig. 12 shows the process
    of data deriving from AI model. Download : Download high-res image (295KB) Download
    : Download full-size image Fig. 11. AI models used in different sectors of Smart
    cities. Download : Download high-res image (353KB) Download : Download full-size
    image Fig. 12. Use of AI models in decision making. 3.5.1. Federated learning
    Federated learning (FL) is a latest technique that secure the privacy of the data
    coming from different IoT device with in the network. To protect the important
    information and make sure the privacy preservation in smart cities the federated
    learning (FL) has been suggested in paper (Albaseer et al., 2020, Pandya et al.,
    2023). In Jiang, Kantarci, Oktug, and Soyata (2020) described a federated learning
    application in a smart city to facilitate the smart services considering data
    acquisition. The different application of FL in smart city have been present in
    Zheng et al. (2022). The current research and challenges in FL area has also been
    noted along with their proposed solutions. The FL based on block chain has been
    proposed for defence of smart city in Demertzis (2021). The mechanism of Fl has
    been explained systematically on different three types of level (Alferaidi et
    al., 2022). The processing of data information of traffic for the development
    and improvement of smart city has been discussed in Wang, He, et al. (2023). In
    Anand, Mavromatis, Carnelli, and Khan (2022) the Fl has used for monitoring and
    controlling of smart street light to overcome the current challenges in smart
    cities. The consumption of water is very serious issue and increases day by day.
    In paper Hanjri, Kabbaj, Kobbane, and Abouaomar (2023) proposed FL methods based
    on forecasting of smart cities for consumption of water to cater and reduces the
    current challenges in smart cities. The major problem in smart city is care of
    users, FL has proposed to provide smart health system in smart city (Nguyen et
    al., 2022). 3.6. Applications of mobile robotics in smart cities The purpose of
    mobile robotics in smart cities to reduce the interference of human with the help
    of sensors and other IoT devices. The major role of mobile robotic in smart infrastructure
    is localization. The localization is evaluated on sensor based data. A delay-tolerant
    sensor network (DTN) has been proposed for localization (Pathirana, Bulusu, Savkin,
    & Jha, 2005). A network cluster has used for organizing sensors devices in DTN.
    The cleanness of smart cities can be done by proposing a robot team having one
    group leader (Dahanaka et al., 2022). The control of navigation system and trajectories
    for a mobile robot is a challenging task which has been noticed in paper Pandey
    et al. (2023). A nature-inspired algorithms help to cater and mange different
    resources which are applicable for smart city (Millham, Agbehadji, & Freeman,
    2023). The robot and sensor have proposed to monitor and control the traffic and
    avoid collision of traffic (Ponnusamy & Alagarsamy, 2021). The different application
    of mobile robotics have been discussed in various field of smart cities such as
    agriculture, education, health care and cleaning (Rivera, Amorim, & Reis, 2020).
    The concept of cloud robotic has been presented in Beigi, Partov, and Farokhi
    (2017) to collect more date and reduces the number of sensors in smart cities.
    The navigation path has been created by autonomous robot by extracting different
    features from free space (Islam et al., 2020). The concept of sound sensing and
    its importance in smart city has been mentioned in Bello, Mydlarz, and Salamon
    (2018). The another major concern in smart city is collection of information data,
    the public vehicle has been proposed for this purposes and act as a data courier.
    The organizing of path planning for this data courier has studied in Al-Turjman,
    Karakoc, and Gunay (2017). In paper Studley and Little (2021) introduced the concept
    robot in smart city and highlighted the connection between robot and smart city.
    The distributed leader control approach of mobile robot is noted in Zhao et al.
    (2023). The desired trajectory has been created by a leader and its reference
    orientation has detected which is to be useful for smart city in the future and
    we cannot ignore the importance of robot in transformation of smart home to smart
    city. 3.7. Energy management Any automated system requires energy to run and the
    smart home systems mostly contains embedded systems running on a small scale and
    run on low power. The power is taken from the main supply and stepped down to
    a few volts. Even in that case Low-Power circuits and controllers have advantages
    that could minimize the extra expenses of energy and provide maximum efficiency.
    Other than that smart grids and microgrids are now installed to manage the energy
    consumption of the smart home (Aliero et al., 2021, Büyük et al., 2022, Mansouri
    et al., 2021). Same technology is utilized on a large scale to manage the power
    and resources for a smart city (Badar and Anvari-Moghaddam, 2020, Jabeur et al.,
    2022). By advocating policies for energy efficiency, regionalized/distributed
    renewable energy generation, and intelligent energy management, smart cities are
    ways to promoting the transition to sustainable and effective energy systems (Lewandowska,
    Chodkowska-Miszczuk, Rogatka, & Starczewski, 2020). This shift towards a more
    integrated and intelligent energy supply method. A multitude of energy meta-information
    being made available via the IoT smart grid, allowing big data analytical services
    to forecast energy use and regulate usage patterns (Kaur, Kaur, Kumbhar, & Khanna,
    2017). This paper presents a context-aware framework for intelligent power equipment
    management (Choi, Esposito, Wang, Liu, & Choi, 2018). The design of the suggested
    frame work based on awareness is the main contribution of it, while other contributions
    are construction of a context ontology for power equipment management, the specification
    of context ontology inference rules, and a context-aware inference service for
    power equipment management. 3.7.1. Distributed generations and smart grids Conventionally,
    the power generation plants are located far from the residential areas and the
    power is transmitted to the city in transmission lines that causes a lot of line
    losses. The concept of smart cities promotes the intelligent distribution of energy
    and hence the idea of smart grids and micro grids is widely appreciated with in
    a smart city (Bhatt, Jani, & Bhatt, 2020). By generating the power near the end
    users can not only increase the energy efficiency but also improve the resilience
    of the grid system. Distributed Generation (DG) refers to the generation of on-site
    power that reduces the transmission losses. It can be effectively used within
    a smart city by dividing the city into smaller divisions with their own DGs. However,
    selecting the proper size and placement while keeping in mind the overall cost
    and environmental issues is a critical step in ensuring the system’s stability
    and durability. When generators are installed in the wrong location, it generates
    a slew of difficulties with voltage, power, and distribution, exposing the system
    to serious flaws and Increases the chances of connection to be lost between load
    and grid (Sayed, Elamary, & Swief, 2021). In addition to which the impact of integration
    of DGs to the main energy distribution network of the city is also required (Kumar
    & Savier, 2017). Other than that, with the increasing amount of big data available
    from smart sensors and the growing digitalization of technologies necessitate
    significant improvements in distribution systems to ensure the growth of sustainable
    smart cities (Nunes, Gouveia, Rodrigues, & Simão, 2017). From the perspective
    of peer-to-peer (P2P) energy sharing and trade, this article Mahmud, Islam, and
    Lilley (2021) provides an architecture for a smart energy hub (SEH) for smart
    cities. The proposed architecture is based on the energy generation and consumption
    patterns of various facilities inside smart cities (residential, commercial, industrial,
    and community services). The capabilities of distributed energy resources (DERs)
    that supply electricity to multiple facilities (i.e., controllability of DERs)
    and the energy trading framework determine the prospects for P2P energy sharing
    and trading in a SEH Microgrids and Smart Grids are another extension of this
    concept. Smart grids use automated switches and control systems based on fault
    tolerant mechanisms that increase the system resilience. A smart grid dynamic
    characteristics improve traditional system requirements by applying advanced control
    strategies to provide uninterrupted electricity to the demand side from intermittent
    renewable generation. Communication networks and control systems that allow distributed
    generation which are critical technology for monitoring, protecting, and managing
    the smart grid, whether it is centralized or decentralized (Fakhar, Haidar, Abdullah,
    & Das, 2022). Ref. (Sanchez-García, Rodríguez-Aguilar, & Marmolejo-Saucedo, 2022)
    provides a quick assessment of the literature on the potential use of renewable
    energies via smart grid integration and use of electric vehicles as micro generators
    for energy exchange with the grid. The primary technological aspects, potential
    benefits and needs for said integration, are discussed. Micro grids are smaller
    grids located near the end users that can work autonomously when disconnected
    from the main grid. It can cater for the power outages with in a smart city and
    support the sustainable infrastructures. Dealing with severe power failures during
    severe occurrences, and the implications on people’s lives and social elements,
    is one of the key challenges of power systems. As a result, with the goal of improving
    distribution system resilience, the ideal use of microgrids that may be identified
    as a smart city that is equipped with renewable energy sources and distributed
    energy generation is explored in Ebadat-Parast, Nazari, and Hosseinian (2022).
    The idea of a Grid of Hybrid AC/DC Microgrids is presented in this study as a
    new paradigm for future smart cities (Kazerani & Tehrani, 2020). The focus is
    on the challenges and benefits expected in the seemingly inevitable transition
    from the existing traditional supply–demand model defined by distributed generation
    production, separate energy carriers, and low penetration of renewable energy
    sources. In order to mitigate the Demand Response (DR) from the active users,
    the paper (Silva et al., 2022) propose a methodology to shift the load to smaller
    grids by triggering a DR event. The use of machine learning and AI in the management
    of energy resources helps in predicting the energy flow and resource depletion
    and efficiently arrange for counter measures. A deep learning architecture of
    power management is proposed in Xin et al. (2022). It forecasts future power usage
    over a short period of time and allows power distributors and consumers to communicate
    effectively. Mobile devices connected to a universal IoT remote server linked
    to the intelligent grids in the suggested design to maintain energy usage and
    supply constant. Various preprocessing procedures for dealing with electrical
    data are followed by an effective brief prediction decision-making method. 3.7.2.
    Energy optimization A smart home is an idea that seeks to use as little energy
    with enhancing occupant comfort. In smart homes, comfort and energy use are conflicting
    issues. Increasing comfort frequently takes a lot of energy. Several different
    optimization algorithms have been designed for smart cities, to provide the better
    life to the users. The bat algorithm (BA) has been proposed in Malek et al. (2022)
    for occupant comfort which consider the impact of quality of indoor air and temperature.
    In paper Wang, Han, Yin, and Ma (2023) the efficient way has discussed for communication
    of data in smart grid through neighborhood area network (NAN), the optimization
    tool is proposed to formulate and minimize the energy. Multi objective, uncertainties,
    and coupling optimizer algorithm has proposed to increase the capacity of energy
    storage in grid and extend the usage of energy [MO]. In paper Braun et al. (2023)
    the distributed optimizer along with model predictive control (MPC) has been proposed
    to fulfill the requirement of smart grid at demand side. MPC is designed to minimize
    the demand of overall network. In the paper by Chen, Tan, and Quek (2014) optimization
    tool has used to analyze the optimal power flow (OPF) for charging of electric
    vehicle in smart grid. The Lyapunov optimization technique (LOT) has suggested
    to optimize the overall efficiency of consuming energy devices in sustainable
    smart home. The data for proposed algorithm is based on charging of electric vehicle,
    temperature, and energy storage devices (Albogamy et al., 2022). The convex optimization
    has been performed for the electric vehicle components size and to control and
    manage the energy. Optimization scheduling techniques has been used to minimize
    the cost of energy consumption along with peak load demand Lu, Guo, and Zeng (2022).
    In this work we proposed a novel technique called Grey Wolf Optimization. Actually
    tuning of controllers in smart cities can be done through GWO to optimize the
    gains or other required objectives. The implementation of optimization algorithm
    is shown in Fig. 13. Download : Download high-res image (322KB) Download : Download
    full-size image Fig. 13. Optimization architecture. 3.7.3. Electric and autonomous
    vehicles and energy utilization As cities transition into smart cities, electric
    vehicles have been positioned as one of the basic pillars, primarily in terms
    of transforming the city’s transportation needs. Electric-powered vehicles converted
    into self-driving cars and autonomous public trains and buses that make mobility
    in the sustainable smart city in the future. Electric vehicles (EVs) not only
    promote the smart grid’s long-term sustainability, but also support and accelerate
    its upgrade. Without a doubt, by deploying Vehicle-to-Grid (V2G) and Grid-to-Vehicle
    (G2V) communications, EVs may actively boost the development of the smart grid.
    EVs are better for the environment than hybrids or even internal combustion engines
    since they may reduce noise, pollution, and greenhouse gas emissions. The integration
    of electric vehicles (EVs) could have a significant impact on society, not only
    in terms of providing transportation services, but also play a major roles in
    the economic development of the country by controlling the price of oil. Moreover
    its lowering emissions from the transportation sector. The efficient use of energy
    resources is critical in smart cities, and with mobile electric vehicles (EVs)
    playing a vital part in smart city power flow, the coordination of energy management
    systems (EMSs) at their parking places can yield global benefits. As a new contribution
    to previous studies, the coordination between household energy management systems
    (HEMSs) and EV parking Lot management systems (PLEMS) is proposed, modeled, and
    simulated in Lotfi et al. (2022). Individual EV schedules are partially shared
    by the EMSs, but no private information is shared. Mixed-integer linear programming
    is used to implement the HEMS and PLEMS (MILP). An optimization issue that reduces
    the total cost of all energy systems and maximizes the Regenerative Braking energy
    to restore subway is solved for optimal smart city functioning (Duan, Askari,
    Hemat, & Ali, 2021). Regenerative Braking system reuses the energy lost in deceleration
    of the vehicle and re-feeds it to the acceleration system. The traffic and duration
    of the routes are modeled in this article using electric vehicles such as vehicle
    to grid and Subway technology placed in an unique depot. It has also been proposed
    to increase the battery life of electric vehicles using a degradation model. In
    addition to reduce the energy resources, the EVs also work towards reducing the
    carbonization and harmful emissions from exhaust pipes. Research showing the results
    of decarbonization after the integration of EVs into the transportation system
    of a smart city is presented in Heinisch et al. (2021). When charging is linked
    with the local value of electricity in the city, the benefit of smart charging
    to the city energy system can be realized effectively. In the city energy and
    heating sectors, smart charging for vehicles minimizes the requirement for investments
    in term of fixed batteries and peak units and leads towards the sustainability
    of the city’s resources. Sharing the charging resources by charging the battery
    of EVs at the same time by giving optimum power is proposed in He et al. (2021).
    On the road towards the sustainability, in addition to smart vehicles, Autonomous
    Vehicles (AVs) are also presented. The future of the smart cities is moving towards
    the integrated AVs and EVs that can contribute towards a greener and sustainable
    environment (Yu and Lam, 2018, Zhou et al., 2022). The below subsection discussed
    the further details of G2V and V2G technology for smart cities; • Grid to Vehicle
    and Vehicle to Grid applications in smart cities: The crises of energy increase
    day by day which lead to increases the price of fuel along with greater emission
    of carbon dioxide that causes pollution. Therefore, G2V and V2G topology is proposed
    to deal these challenging tasks. The mode of operation depends on the direction
    of flow of power. The G2V and V2G mode can be possible by proposing two types
    of bidirectional converters, AC–DC and DC–DC converters (Ahmed et al., 2022, Ahmed
    et al., 2021, Rachid et al., 2019, Rachid et al., 2018, Rachid et al., 2020).
    The paper (Oad, Ahmad, Talpur, Zhao, & Pervez, 2023) proposed the smart management
    system that balance the supply and demand in the smart city. The economic model
    has been derived in Rahman, Gemechu, Oni, and Kumar (2023) that minimize the cost
    of energy in V2G mode for cold climate. The performance of proposed model has
    been tested at various temperatures. In article Mastoi et al. (2023) noted the
    features at which the life of the battery in electric vehicle reduces that causes
    many problems. It also discussed the techniques on which battery life can be extended
    for better charging and discharging processes. The smart city is based on smart
    grid therefore the application of electric vehicle can be ignored. A machine learning
    algorithm has been proposed (Mazhar et al., 2023) for better management of charging
    and discharging of battery according to the requirements. In smart home the vehicle
    to load (V2L) technology is suggested to fulfill the requirement of the load under
    different conditions. In this work we proposed a wireless V2L communication between
    vehicle to load to provide ease life to the user in smart cities. In vehicle to
    X (V2X) technology, where X denote every thing in smart cities can be charged
    and discharged according to the designed energy management algorithm. The different
    modes of operation in V2X topology for a smart city is depicted in Fig. 14. Download
    : Download high-res image (265KB) Download : Download full-size image Fig. 14.
    V2X topology. 3.7.4. Renewable energy resources The main energy resource in any
    system is usually retrieved from non renewable energy resources like fossil fuels
    or water from dams etc. Due to the climatic changes and global warming, not only
    the entropy of the world is decreasing but the natural resources are also depleting.
    Hence the smart cities are turning towards the use of renewable energy resources
    like solar and wind energy. Solar energy is one of the most popular and promising
    renewable energy sources accessible. In smart cities, solar facilities are frequently
    distributed in the form of small farms, rooftop installations, and parking lot
    blinds to maximize available area and decrease electricity lines. The different
    renewable sources like wind, solar and ocean for smart cities have been introduced
    in Hoang, Nguyen, et al. (2021). The integration of renewable energy sources with
    energy storage system increases the capacity of the storage to fulfill the requirements
    of the load. In paper (Khalil et al., 2021) the various sources of energy have
    been integrated to optimize the cost of energy and distributed the energy in efficient
    way in smart cities. The relationship among different section of energy management
    system in sustainable smart cities have been derived (Atasoy, Akınç, & Erçin,
    2015). The concept of sustainable energy system is explained which have low carbon
    dioxide emission to reduces the pollution and renewable energy sources. The energy
    management system is one of the main step towards smart city (Kamyab, Klemeš,
    Van Fan, & Lee, 2020). In paper (Neffati et al., 2021) discussed the transformation
    of traditional grid into smart grid in smart home/cities in term of energy, sustainability
    and transmission of power. The major role of renewable sources along with storage
    system in smart cities have been discussed in Farmanbar, Parham, Arild, and Rong
    (2019). It also studied the current project of smart cities in Europe. The future
    energy management system having greater flexibility. The flexible network is important
    in transmission and distribution of energy. Its play a vital role in smart cities
    to do certain tasks at the same time (Simões, Farret, Khajeh, Shahparasti, & Laaksonen,
    2022). Even though it is cheap and renewable, Solar energy, is a function of its
    surroundings, and abrupt changes in weather can produce intermittency and impair
    the power generation. Current–Voltage (IV) Tracing, in which the properties of
    a PV module are utilized to evaluate the module’s performance, is a standard method
    for measuring losses. For this purpose the monitoring of the panels is a constant
    need and IoT plays a helpful role in this. Shapsough et al. presented the design
    and implementation of a city-wide, large-scale, and distributed solar monitoring
    system based on the Internet of Things in smart cities. To conduct and communicate
    IV curves remotely from individual modules or strings in a remote facility, the
    system employs low-cost hardware and IoT networking technology (Shapsough, Takrouri,
    Dhaouadi, & Zualkernan, 2020). The energy planning of urban districts with renewable
    energy power plants (photovoltaic fields and wind micro-turbines), combined heat
    and power units, and traditional boilers is formalized using an optimization model,
    districts are connected to the public distribution grid (Bracco et al., 2018).
    The different kinds of wind turbines and cogeneration plants, the size of solar
    fields, and the power exchange with the public grid are the primary decision variables.
    The variables’ optimal values are determined by minimizing installation, maintenance,
    and operational costs while also satisfying load and technical constraints. In
    smart cities, energy generating efficiency and dependability have been critical
    needs. The paper Ha and Phung (2019) discussed the design and implementation of
    trustworthy microgrid management control schemes that can be smoothly incorporated
    into smart building management systems. Reliable controllers have been presented
    along with their hardware implementation, to recover from faults in a building
    microgrid’s solar energy system. The system uses the Internet of Things (IoT)
    as its central component to scalably coordinate the functioning of various subsystems.
    To ensure redundancy and reliability in solar tracking, the control strategy employs
    a number of controllers cooperating inside the network via a token-based approach.
    The different renewable energy sources along with transmission and distribution
    is listed in Fig. 15. Download : Download high-res image (534KB) Download : Download
    full-size image Fig. 15. Energy distribution in a smart city. 4. Current challenges
    and future prospects In this ongoing review we have explored a great deal of various
    technologies used in certain aspects of smart homes and smart cities, be it the
    domain of architecture design, data handling or using Artificial Intelligence.
    We have not only discussed the traditional ways of implementing those technologies
    but also how those can be used to design sustainable smart cities. However, the
    road to sustainable smart cities is not so paved currently and has certain challenges
    that are being faced. Some of them we have already discussed in previous sections,
    which are now being clustered here. In this work, we are considering smart cities
    as a cluster of smart homes representing themselves as nodes. However, with the
    increase in the number of nodes, certain social and infrastructure management
    problems can arise which require careful planning. With the increase in the volume
    of a smart city, data handling becomes a tedious task since there are hundreds
    and thousands of data points being transmitted at all times. In this aspect, the
    technologies like Intelligent and wireless sensing are coming in handy. Instead
    of transmitting data continuously, we can use such technologies as a trigger point
    to exchange information. Moreover, the development of such communication protocols
    that can have a large overhead is the need of the hour, since the exchange of
    information is based on that. Further challenges faced by a sustainable smart
    city include data privacy and security. By ensuring that only then we can expect
    a healthy participation and engagement from citizens. In addition to that, providing
    equal access to facilities and services offered, promoting and practicing sustainable
    energy while looking for renewable energy sources are some other challenges in
    the way of implementing smart cities (Gupta, 2023). Moreover, the design of infrastructure
    and architecture to handle potential emergencies and disasters is one of the necessities
    for which crowd sourcing can be very helpful. A glance at the social aspects of
    these problems will reveal the need of incorporating the role of citizens in the
    decision making process of the management, which will help promote harmony and
    prevail sustainability and stability. As a crux of all this discussion, in this
    portion of this review paper, we have presented some future prospects for this
    domain. Here we are discussing some technologies that are being considered State-of-the-art
    in terms of automation solutions. These technologies originated and peaked just
    a while back and proved to be of paramount importance in designing sustainable
    and practical infrastructures for smart cites. 4.1. Narrow band-IoT One of the
    recent marvels in the field of communication is Narrow Band IoT, that is a communication
    standard specially designed for IoT based low power communication. It has a dedicated
    frequency band and works effortlessly in areas with less cellular coverage. Surpassing
    the limitations of WiFi and conventional cellular networks, NB-IoT can not only
    connect with former mentioned standards but also consumes very less power making
    it viable for communication between smart city’s various sectors (Routray et al.,
    2021). It also offers the luxury of connecting multiple devices in close proximity
    and transmitting data. The technology has made its way into smart city development
    and has been used in literature in small scale experimentation with various sensors
    and actuators (Duangsuwan, Takarn, & Jamjareegulgarn, 2018)(Zhu, Jia, Han, Zhou,
    & Guizani, 2019). 4.2. WiFi based intelligent sensing WiFi-based intelligent sensing
    is a technology that makes use of WiFi networks to allow sensors and gadgets to
    automatically and intelligently collect, transmit, and analyze data. WiFi, a wireless
    communication technology that is frequently used for internet access, is employed
    in this context to make it easier to gather different kinds of data from sensors
    and devices positioned across an area. Intelligent sensing refers to the capability
    of sensors to process and analyze data locally or remotely in addition to just
    detecting physical events (such as temperature, motion, light, etc.) (Ding et
    al., 2022). These sensors may transfer the gathered data to central systems, databases,
    or cloud platforms for additional analysis, archiving, and decision-making by
    using WiFi networks as the communication channel. Smart homes, industrial automation,
    environmental monitoring, healthcare, and other areas may all benefit from WiFi-based
    intelligent sensing. It makes it possible to build networks of interconnected
    devices and sensors that can communicate, adapt, and react to changes in their
    environment, improving productivity, comfort, and decision-making (Qi et al.,
    2023). A great understanding of this concept can be obtained through the work
    done by Zhang et al. (2022) where they have used wifi based intelligent sensing
    to recognize hand gesture in the air. They developed the methods of Dynamic Phase
    Vector (DPV) and Motion Rotation Variable (MRV), through which they were able
    to recognize hand gestures regardless of the transmission location. Similarly,
    in smart cities, Intelligent sensing based on WiFi can be used to locate and extract
    data from moving objects as done by Guillen-Pérez and Baños (2018) in counting
    the number of pedestrians to manage traffic in case of emergency. Similarly Reconfigurable
    Intelligent Surface (RIS) based WiFi sensing and device free localization of objects
    are also some applications of intelligent sensing that can be useful in smart
    cities (He, Zhang, & Chen, 2022)(Zhang, Li, Xiao, & Zhang, 2022). 4.3. Digital
    Twin Urban planning and development is very much needed in smart city infrastructure.
    However, with the rampant new technologies these tasks can be performed effortlessly.
    Digital Twin is such a technology that allows us to do that. A digital twin in
    the context of smart cities refers to a virtual representation of a physical city
    or urban environment (Deng, Zhang, & Shen, 2021). It is a dynamic and interconnected
    model that mirrors the real-world city and its various components, such as infrastructure,
    buildings, transportation systems, utilities, and more. The digital twin concept
    leverages data from sensors, Internet of Things (IoT) devices, and other sources
    to create a digital replica that can simulate and predict real-world scenarios,
    monitor changes, and optimize urban operations (Dembski, Wössner, Letzgus, Ruddat,
    & Yamu, 2020). Its application in smart cities can be found in planning disaster
    management techniques, expanding the urban architecture and predicting the increasing
    needs of the society (Ford & Wolf, 2020). 4.4. Metaverse Similarly to the previously
    mentioned concept of digital twin, Metaverse is a relatively new concept in the
    context of smart cities. It has similar applications as to predict the requirements
    of the urban population based on social, environmental and economical factors.
    Integrated with digital twin, eventually it helps in designing sustainable environment
    with the help of smart decision making (Yaqoob, Salah, Jayaraman, & Omar, 2023)(Kusuma
    & Supangkat, 2022). It is important to note that the concept of the metaverse
    is still evolving, and its integration with smart cities might take various forms.
    Given the rapid pace of technological advancements, it is possible that new developments
    and intersections between the metaverse and smart cities could emerge beyond our
    imagination. 4.5. Quantum communications Since data transmission and communication
    is one of the vital jobs of any smart city management system, the quest of finding
    efficient means of data transmission never ends. One of such quests has yield
    the method of Quantum Communications which is the latest technology in the context
    of smart city architecture. Based on the theory of quantum physics, quantum communications
    uses qubits instead of regular binary bits to transmit data with an attenuation
    of only 0.2dB/km (Bünzli & Kauzlarich, 2023). Since they are photons and travels
    in the form of packets of energy, they are unsusceptible to attenuation hence
    having minimal data loss. It not only finds its applications in data transmission
    but also cryptography, cybersecurity and Neural Network Designs (Mohammed, 2023).
    The literature and research on in the domain of smart city development is relatively
    new, however once implemented, it can truly be a revolution in this field (Kamruzzaman,
    2022)(Bonab, Fedele, Formisano, & Rudko, 2023). In this Section, we have discussed
    the challenges faced by the contemporary smart home automation technologies in
    designing sustainable smart cities. Moreover, we have also presented some state-of-the-art
    technologies that are quite new for this field and can help in solving the above
    mentioned challenges, providing the readers with future research prospects for
    this domain. 5. Comparison with existing solutions In this section we have presented
    a comparative analysis of proposed work with existing literature in Table 5. It
    analyzes the reviews on the presence of various parameters that are depicted in
    tabular form. Table 5. Comparison with existing studies. Year Hardware Communication
    Models (V2V and V2I) Security Protocols Artificial Intelligence Energy Management
    (G2V and V2G modes) Drone and UAVs Federated Learning Reference 2021 ✓ ✓ × × ×
    × × Thilakarathne and Madhuka Priyashan (2021) 2022 ✓ ✓ ✓ × × × × Bellini et al.
    (2022) 2022 ✓ ✓ × ✓ × × × Ketu and Mishra (2022) 2022 ✓ ✓ ✓ ✓ × × × Al-Turjman
    et al. (2022) 2022 × ✓ ✓ × × × × Mishra et al. (2022) 2023 × ✓ × × × × × Rani
    and Sharma (2023) 2023 × × × × ✓ × × Mazhar et al. (2023) 2023 × × × × × ✓ × Lucic
    et al. (2023) 2023 × × × × × × ✓ Hanjri et al. (2023) 2023 ✓ ✓ ✓ ✓ ✓ ✓ ✓ This
    work 6. Conclusion The marvel of automation has opened new doors to mankind, providing
    ease, comfort, efficiency and functionality at the same time. The idea of being
    able to control every thing around you with just a click, has always been fascinating.
    To bring that idea to life, technology is a helpful partner in designing the required
    architecture and framework. An automated smart city is made up of many different
    sectors and departments that consist of devices, components, operating on numerous
    protocols at a micro level, making up a complete mesh. In order to carefully choose
    and implement the right technology, it is inevitable to have the knowledge and
    pros and cons of the methods and their functionalities. In this paper, we have
    presented a detailed comparative analysis of the technologies used in various
    sections of smart home automation and linked them into designing sustainable smart
    cities. The overall analysis is divided into sub sections, in which the chronological
    discussion of the technology is presented, along with the pros and cons. In addition
    to that, every sub sections has its on comparison table that can give the reader
    a clear idea and the gist of the overall discussion. As for the future work directions,
    the need of the hour is to design sustainable and stable cities in which different
    nodes can work robustly and independent of the input from other nodes. The architecture
    can be improvised in such a way that divided sectors can keep working on the decentralized
    networks on edge, while there can be a central network running over the cloud
    and the data and information from nodes can be uploaded to the cloud network once
    in a while. Although the security of the data transmission will be vital and blockchain
    solutions can be designed for it. The uninterrupted running of systems on edge
    will also be a challenge in terms of both data handling and power management which
    can be optimized using efficient data pre processing techniques and discarding
    non renewable resources respectively. Moreover, there is a need of introducing
    more green and clean energy trend for the power systems and vehicles etc. that
    is also beneficial for environment in addition to being cost efficient. In addition
    to that, there is a huge niche of work in the domain of Artificial Intelligence
    and Digital Twin and Quantum Communication in terms of data sets, frameworks and
    feasible models, that requires more in depth research and development. This paper
    concludes that even though there has been numerous research performed in the domain
    of smart city automation, nevertheless there is a huge gap between the prototype
    development and actual scalable solutions for smart cities which requires the
    input from all the stakeholders to design mature solutions that bridge the gap
    towards sustainable cities. CRediT authorship contribution statement Noor Ul Huda:
    Conceptualization, Methodology/Study design, Formal analysis, Investigation, Resources,
    Data curation, Writing – original draft, Visualization. Ijaz Ahmed: Conceptualization,
    Methodology/Study design, Formal analysis, Investigation, Resources, Data curation,
    Writing – original draft. Muhammad Adnan: Conceptualization, Validation, Investigation,
    Resources, Visualization, Writing – review & editing, Visualization, Supervision.
    Mansoor Ali: Validation, Investigation, Resources, Visualization, Writing – original
    draft, Writing – review & editing, Visualization, Supervision. Faisal Naeem: Validation,
    Investigation, Writing – review & editing, Visualization, Supervision. Declaration
    of competing interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Acknowledgment This research project was funded by
    National University of Computer and Emerging Sciences - FAST faculty research
    support grant program, Pakistan . Data availability Data will be made available
    on request. References Abdrabou et al., 2022 Abdrabou A., Darei M.S.A., Prakash
    M., Zhuang W. Application-oriented traffic modeling of WiFi-based internet of
    things gateways IEEE Internet of Things Journal, 9 (2022), pp. 1159-1170, 10.1109/JIOT.2021.3079115
    View in ScopusGoogle Scholar Abdulrahman et al., 2016 Abdulrahman T.A., Isiwekpeni
    O.H., Surajudeen-Bakinde N.T., Otuoze A.O. Design, specification and implementation
    of a distributed home automation system Procedia Computer Science, 94 (2016),
    pp. 473-478, 10.1016/J.PROCS.2016.08.073 View PDFView articleView in ScopusGoogle
    Scholar Adriansyah and Dani, 2014 Adriansyah A., Dani A.W. Design of small smart
    home system based on arduino Proceedings - 2014 electrical power, electronics,
    communications, control and informatics seminar, EECCIS 2014. in conjunction with
    the 1st joint conference UB-UTHM, Institute of Electrical and Electronics Engineers
    Inc. (2014), pp. 121-125, 10.1109/EECCIS.2014.7003731 View in ScopusGoogle Scholar
    Ahanger et al., 2020 Ahanger T.A., Tariq U., Ibrahim A., Ullah I., Bouteraa Y.
    IoT-inspired framework of intruder detection for smart home security systems Electronics,
    9 (9) (2020), 10.3390/electronics9091361 URL: https://www.mdpi.com/2079-9292/9/9/1361
    Google Scholar Ahmed et al., 2022 Ahmed I., Adil H.M.M., Ahmed S., Ahmad I., Rehman
    Z. Robust nonlinear control of battery electric vehicle charger in grid to vehicle
    and vehicle to grid applications Journal of Energy Storage, 52 (2022), Article
    104813 View PDFView articleView in ScopusGoogle Scholar Ahmed et al., 2021 Ahmed
    I., Ahmad I., Ahmed S., Adil H.M.M. Robust nonlinear control of battery electric
    vehicle charger in grid to vehicle applications Journal of Energy Storage, 42
    (2021), Article 103039 View PDFView articleView in ScopusGoogle Scholar Al-Sarawi
    et al., 2017 Al-Sarawi S., Anbar M., Alieyan K., Alzubaidi M. Internet of things
    (IoT) communication protocols: Review 8th International conference on information
    technology, proceedings, Institute of Electrical and Electronics Engineers Inc.
    (2017), pp. 685-690, 10.1109/ICITECH.2017.8079928 View in ScopusGoogle Scholar
    Al-Turjman et al., 2017 Al-Turjman F., Karakoc M., Gunay M. Path planning for
    mobile DCs in future cities Annals of Telecommunications, 72 (2017), pp. 119-129
    CrossRefView in ScopusGoogle Scholar Al-Turjman et al., 2022 Al-Turjman F., Zahmatkesh
    H., Shahroze R. An overview of security and privacy in smart cities’ IoT communications
    Transactions on Emerging Telecommunications Technologies, 33 (3) (2022), Article
    e3677 View in ScopusGoogle Scholar Alam et al., 2022 Alam T., Tajammul M., Gupta
    R. Towards the sustainable development of smart cities through cloud computing
    Studies in Computational Intelligence, 1002 (2022), pp. 199-222, 10.1007/978-981-16-7498-3_13
    URL: https://link.springer.com/chapter/10.1007/978-981-16-7498-3%5F13 View in
    ScopusGoogle Scholar Alani et al., 2021 Alani S., Mahmood S.N., Attaallah S.Z.,
    Mhmood H.S., Khudhur Z.A., Dhannoon A.A. IoT based implemented comparison analysis
    of two well-known network platforms for smart home automation International Journal
    of Electrical and Computer Engineering, 11 (2021), pp. 442-450, 10.11591/ijece.v11i1.pp442-450
    View in ScopusGoogle Scholar Alazab et al., 2021 Alazab M., Manogaran G., Montenegro-Marin
    C.E. Trust management for internet of things using cloud computing and security
    in smart cities Cluster Computing (2021), 10.1007/S10586-021-03427-9 Google Scholar
    Albaseer et al., 2020 Albaseer A., Ciftler B.S., Abdallah M., Al-Fuqaha A. Exploiting
    unlabeled data in smart cities using federated edge learning 2020 International
    wireless communications and mobile computing, IEEE (2020), pp. 1666-1671 CrossRefView
    in ScopusGoogle Scholar Albogamy et al., 2022 Albogamy F.R., Khan S.A., Hafeez
    G., Murawwat S., Khan S., Haider S.I., et al. Real-time energy management and
    load scheduling with renewable energy integration in smart grid Sustainability,
    14 (3) (2022), p. 1792 CrossRefView in ScopusGoogle Scholar Alferaidi et al.,
    2022 Alferaidi A., Yadav K., Alharbi Y., Viriyasitavat W., Kautish S., Dhiman
    G. Federated learning algorithms to optimize the client and cost selections Mathematical
    Problems in Engineering, 2022 (2022) Google Scholar Aliero et al., 2021 Aliero
    M.S., Qureshi K.N., Pasha M.F., Jeon G. Smart home energy management systems in
    internet of things networks for green cities demands and services Environmental
    Technology and Innovation, 22 (2021), Article 101443, 10.1016/J.ETI.2021.101443
    View PDFView articleView in ScopusGoogle Scholar Alkhatib et al., 2019 Alkhatib
    M., El Barachi M., Shaalan K. An Arabic social media based framework for incidents
    and events monitoring in smart cities Journal of Cleaner Production, 220 (2019),
    pp. 771-785 View PDFView articleView in ScopusGoogle Scholar Aloqaily et al.,
    2019 Aloqaily M., Otoum S., Ridhawi I.A., Jararweh Y. An intrusion detection system
    for connected vehicles in smart cities Ad Hoc Networks, 90 (2019), 10.1016/J.ADHOC.2019.02.001
    Google Scholar Alsaleh, 2023 Alsaleh, A. (2023). The impact of various communication
    methods: How vehicle-to-vehicle and vehicle-to-infrastructure messages affect
    the performance of driving smart vehicles. Available at SSRN 4339865. Google Scholar
    Alshamaila et al., 2023 Alshamaila Y., Papagiannidis S., Alsawalqah H., Aljarah
    I. Effective use of smart cities in crisis cases: A systematic review of the literature
    International Journal of Disaster Risk Reduction (2023), Article 103521 View PDFView
    articleView in ScopusGoogle Scholar Ammi et al., 2021 Ammi M., Alarabi S., Benkhelifa
    E. Customized blockchain-based architecture for secure smart home for lightweight
    IoT Information Processing & Management, 58 (2021), Article 102482, 10.1016/J.IPM.2020.102482
    View PDFView articleView in ScopusGoogle Scholar Anand et al., 2022 Anand D.,
    Mavromatis I., Carnelli P., Khan A. A federated learning-enabled smart street
    light monitoring application: benefits and future challenges (2022) arXiv preprint
    arXiv:2208.12996 Google Scholar Andramuño et al., 2021 Andramuño J., Mendoza E.,
    Núñez J., Liger E. Intelligent distributed module for local control of lighting
    and electrical outlets in a home Journal of Physics: Conference Series, 1730 (2021),
    Article 012001, 10.1088/1742-6596/1730/1/012001 Google Scholar Andramuno et al.,
    2021 Andramuno J., Mendoza E., Nunez J., Liger E., Andramuo J., Mendoza E., et
    al. Intelligent distributed module for local control of lighting and electrical
    outlets in a home Journal of Physics: Conference Series, 1730 (2021), Article
    012001, 10.1088/1742-6596/1730/1/012001 URL: https://iopscience.iop.org/article/10.1088/1742-6596/1730/1/012001
    https://iopscience.iop.org/article/10.1088/1742-6596/1730/1/012001/meta Google
    Scholar Arasteh et al., 2016 Arasteh H., Hosseinnezhad V., Loia V., Tommasetti
    A., Troisi O., Shafie-Khah M., et al. Iot-based smart cities: A survey International
    conference on environment and electrical engineering, Institute of Electrical
    and Electronics Engineers Inc. (2016), 10.1109/EEEIC.2016.7555867 Google Scholar
    Arena et al., 2022 Arena F., Pau G., Ralescu A., Severino A., You I. An innovative
    framework for dynamic traffic lights management based on the combined use of fuzzy
    logic and several network architectures Basbas S. (Ed.), Journal of Advanced Transportation,
    2022 (2022), pp. 1-17, 10.1155/2022/1383349 URL: https://www.hindawi.com/journals/jat/2022/1383349/
    Google Scholar Arif et al., 2020 Arif S., Khan M.A., Rehman S.U., Kabir M.A.,
    Imran M. Investigating smart home security: Is blockchain the answer? IEEE Access,
    8 (2020), pp. 117802-117816, 10.1109/ACCESS.2020.3004662 View in ScopusGoogle
    Scholar Arun Francis et al., 2021 Arun Francis G., Manikandan M.S., Sundar V.,
    Gowtham E. Home automation using iot Annals of the Romanian Society for Cell Biology,
    25 (2021), pp. 9902-9908 Google Scholar Asaithambi et al., 2021 Asaithambi S.P.R.,
    Venkatraman S., Venkatraman R. Big data and personalisation for non-intrusive
    smart home automation Big Data and Cognitive Computing, 5 (2021), p. 6, 10.3390/BDCC5010006
    URL: https://www.mdpi.com/2504-2289/5/1/6/htm, https://www.mdpi.com/2504-2289/5/1/6
    Google Scholar Ashari et al., 2019 Ashari A., Shouran Z., Priyambodo T.K. Internet
    of things (IoT) of smart home: Privacy and security Article in International Journal
    of Computer Applications, 182 (2019), pp. 975-8887, 10.5120/ijca2019918450 URL:
    https://www.researchgate.net/publication/331133954 Google Scholar Atasoy et al.,
    2015 Atasoy T., Akınç H.E., Erçin Ö. An analysis on smart grid applications and
    grid integration of renewable energy systems in smart cities 2015 International
    conference on renewable energy research and applications, IEEE (2015), pp. 547-550
    CrossRefView in ScopusGoogle Scholar Azpilicueta et al., 2013 Azpilicueta L.,
    Nazabal J.A., Falcone F.J., Fernández-Valdivielso C., Matías I.R. Impact of wireless
    sensor networks in the advancement of ambient intelligence and smart cities Conference
    and exhibition - 2013 international conference on new concepts in smart cities:
    fostering public and private alliances, SmartMILE 2013 (2013), 10.1109/SMARTMILE.2013.6708176
    Google Scholar Badar and Anvari-Moghaddam, 2020 Badar A.Q., Anvari-Moghaddam A.
    Smart home energy management system – a review. 16 (2020), pp. 118-143, 10.1080/17512549.2020.1806925
    URL: https://www.tandfonline.com/doi/abs/10.1080/17512549.2020.1806925 Google
    Scholar Ballis and Dimitriou, 2020 Ballis H., Dimitriou L. Evaluation of reinforcement
    learning traffic signalling strategies for alternative objectives: Implementation
    in the network of nicosia, cyprus Transport and Telecommunication, 21 (2020),
    pp. 295-302, 10.2478/TTJ-2020-0024 View in ScopusGoogle Scholar Batty et al.,
    2012 Batty M., Axhausen K.W., Giannotti F., Pozdnoukhov A., Bazzani A., Wachowicz
    M., et al. Smart cities of the future The European Physical Journal Special Topics,
    214 (1) (2012), pp. 481-518, 10.1140/EPJST/E2012-01703-3 URL: https://link.springer.com/article/10.1140/epjst/e2012-01703-3
    View in ScopusGoogle Scholar Bausch et al., 0000 Bausch, N., Tewkesbury, G., Bausch,
    N., & Tewkesbury, G. E. (0000). AI and sensor applications in ’smart homes’: current
    research activity and applications in domestic homes Fault Tolerant Control of
    Nuclear Power Plants View project Making decisions about saving energy in Compressed
    Air Systems using Ambient Intelligence and AI-DTA3/COFUND Marie Skłodowska-Curie
    PhD Fellowship View project AI and sensor applications in ’smart homes’: Current
    research activity and applications in domestic homes. Journal of computing in
    systems and engineering, 2013. URL: https://www.researchgate.net/publication/293581459.
    Google Scholar Beigi et al., 2017 Beigi N.K., Partov B., Farokhi S. Real-time
    cloud robotics in practical smart city applications 2017 IEEE 28th annual international
    symposium on personal, indoor, and mobile radio communications, IEEE (2017), pp.
    1-5 Google Scholar Bellini et al., 2022 Bellini P., Nesi P., Pantaleo G. IoT-enabled
    smart cities: A review of concepts, frameworks and key technologies Applied Sciences,
    12 (3) (2022), p. 1607 CrossRefView in ScopusGoogle Scholar Bello et al., 2018
    Bello J.P., Mydlarz C., Salamon J. Sound analysis in smart cities Computational
    Analysis of Sound Scenes and Events (2018), pp. 373-397 CrossRefGoogle Scholar
    Bertino et al., 2016 Bertino E., Choo K.K.R., Georgakopolous D., Nepal S. Internet
    of things (IoT): Smart and secure service delivery ACM Transactions on Internet
    Technology, 16 (2016), 10.1145/3013520 Google Scholar Bhardwaj et al., 2022 Bhardwaj
    K.K., Banyal S., Sharma D.K., Al-Numay W. Internet of things based smart city
    design using fog computing and fuzzy logic Sustainable Cities and Society, 79
    (2022), 10.1016/J.SCS.2022.103712 Google Scholar Bhatt et al., 2021 Bhatt D.,
    D D., Hariharasudan A., Lis M., Grabowska M. Forecasting of energy demands for
    smart home applications Energies, 14 (4) (2021), 10.3390/en14041045 URL: https://www.mdpi.com/1996-1073/14/4/1045
    Google Scholar Bhatt et al., 2020 Bhatt J.G., Jani O.K., Bhatt C.B. Automation
    based smart environment resource management in smart building of smart city Advances
    in 21st century human settlements, Springer, Singapore (2020), pp. 93-107, 10.1007/978-981-13-6822-6_3
    URL: https://link.springer.com/chapter/10.1007/978-981-13-6822-6%5F3 View in ScopusGoogle
    Scholar Blasi et al., 2022 Blasi S., Ganzaroli A., Noni I.D. Smartening sustainable
    development in cities: Strengthening the theoretical linkage between smart cities
    and SDGs Sustainable Cities and Society, 80 (2022), Article 103793, 10.1016/J.SCS.2022.103793
    URL: https://linkinghub.elsevier.com/retrieve/pii/S2210670722001226 View PDFView
    articleView in ScopusGoogle Scholar Bonab et al., 2023 Bonab A.B., Fedele M.,
    Formisano V., Rudko I. Urban quantum leap: A comprehensive review and analysis
    of quantum technologies for smart cities Cities, 140 (2023), Article 104459, 10.1016/J.CITIES.2023.104459
    Google Scholar Bracco et al., 2018 Bracco S., Delfino F., Ferro G., Pagnini L.,
    Robba M., Rossi M. Energy planning of sustainable districts: Towards the exploitation
    of small size intermittent renewables in urban areas Applied Energy, 228 (2018),
    pp. 2288-2297, 10.1016/J.APENERGY.2018.07.074 View PDFView articleView in ScopusGoogle
    Scholar Braun et al., 2023 Braun P., Grüne L., Kellett C., Worthmann K. Model
    predictive control and distributed optimization in smart grid applications (2023)
    Google Scholar Brenon et al., 2018 Brenon A., Portet F., Vacher M. Arcades: A
    deep model for adaptive decision making in voice controlled smart-home Pervasive
    and Mobile Computing, 49 (2018), pp. 92-110, 10.1016/J.PMCJ.2018.06.011 View PDFView
    articleView in ScopusGoogle Scholar Brisimi et al., 2016 Brisimi T.S., Cassandras
    C.G., Osgood C., Paschalidis I.C., Zhang Y. Sensing and classifying roadway obstacles
    in smart cities: The street bump system IEEE Access, 4 (2016), pp. 1301-1312,
    10.1109/ACCESS.2016.2529562 View in ScopusGoogle Scholar Buhalis et al., 2023
    Buhalis D., O’Connor P., Leung R. Smart hospitality: from smart cities and smart
    tourism towards agile business ecosystems in networked destinations International
    Journal of Contemporary Hospitality Management, 35 (1) (2023), pp. 369-393 CrossRefView
    in ScopusGoogle Scholar Bünzli and Kauzlarich, 2023 Bünzli J.C.G., Kauzlarich
    S.M. Preface Handbook on the Physics and Chemistry of Rare Earths, 63 (2023),
    pp. ix-xiii, 10.1016/S0168-1273(23)00012-0 View PDFView articleView in ScopusGoogle
    Scholar Bustamante-Bello et al., 2022 Bustamante-Bello R., García-Barba A., Arce-Saenz
    L.A., Curiel-Ramirez L.A., Izquierdo-Reyes J., Ramirez-Mendoza R.A. Visualizing
    street pavement anomalies through fog computing V2I networks and machine learning
    Sensors, 22 (2022), p. 456, 10.3390/S22020456 URL: https://www.mdpi.com/1424-8220/22/2/456/htm,
    https://www.mdpi.com/1424-8220/22/2/456 View in ScopusGoogle Scholar Büyük et
    al., 2022 Büyük M., Avşar E., İnci M. Overview of smart home concepts through
    energy management systems, numerical research, and future perspective (2022),
    10.1080/15567036.2021.2024924 Google Scholar Byun et al., 2012 Byun J., Jeon B.,
    Noh J., Kim Y., Park S. An intelligent self-adjusting sensor for smart home services
    based on ZigBee communications IEEE Transactions on Consumer Electronics, 58 (3)
    (2012), pp. 794-802, 10.1109/TCE.2012.6311320 View in ScopusGoogle Scholar Castelli
    et al., 2017 Castelli M., Sormani R., Trujillo L., Popovič A. Predicting per capita
    violent crimes in urban areas: an artificial intelligence approach Journal of
    Ambient Intelligence and Humanized Computing, 8 (2017), pp. 29-36, 10.1007/S12652-015-0334-3/TABLES/2
    URL: https://link.springer.com/article/10.1007/s12652-015-0334-3 View in ScopusGoogle
    Scholar Chahuara et al., 2012 Chahuara P., Fleury A., Portet F., Vacher M. Using
    Markov logic network for on-line activity recognition from non-visual home automation
    sensors Lecture notes in computer science (including subseries lecture notes in
    artificial intelligence and lecture notes in bioinformatics), 7683 LNCS, Springer,
    Berlin, Heidelberg (2012), pp. 177-192, 10.1007/978-3-642-34898-3_12 View in ScopusGoogle
    Scholar Chandramohan et al., 2017 Chandramohan J., Nagarajan R., Satheeshkumar
    K., Ajithkumar N., Gopinath P.A., Ranjithkumar S., et al. Intelligent smart home
    automation and security system using arduino and wi-fi International Journal of
    Engineering and Computer Science, 6 (2017), pp. 2319-7242, 10.18535/ijecs/v6i3.53
    URL: www.ijecs.in Google Scholar Chauhan and Malik, 2021 Chauhan N., Malik M.
    Home automation with NoSQL and node-RED through message queuing telemetry transport
    Dash S.S., Das S., Panigrahi B.K. (Eds.), Intelligent computing and applications,
    Springer Singapore, Singapore (2021), pp. 427-434 CrossRefView in ScopusGoogle
    Scholar Chen et al., 2021 Chen N., Qiu T., Zhao L., Zhou X., Ning H. Edge intelligent
    networking optimization for internet of things in smart city IEEE Wireless Communications,
    28 (2021), pp. 26-31, 10.1109/MWC.001.2000243 View in ScopusGoogle Scholar Chen
    et al., 2014 Chen N., Tan C.W., Quek T.Q. Electric vehicle charging in smart grid:
    Optimality and valley-filling algorithms IEEE Journal of Selected Topics in Signal
    Processing, 8 (6) (2014), pp. 1073-1083 View in ScopusGoogle Scholar Chilipirea
    et al., 2017 Chilipirea C., Petre A.C., Groza L.M., Dobre C., Pop F. An integrated
    architecture for future studies in data processing for smart cities Microprocessors
    and Microsystems, 52 (2017), pp. 335-342, 10.1016/J.MICPRO.2017.03.004 View PDFView
    articleView in ScopusGoogle Scholar Choi et al., 2018 Choi C., Esposito C., Wang
    H., Liu Z., Choi J. Intelligent power equipment management based on distributed
    context-aware inference in smart cities IEEE Communications Magazine, 56 (2018),
    pp. 212-217, 10.1109/MCOM.2018.1700880 View in ScopusGoogle Scholar Chowdhry et
    al., 2015 Chowdhry D., Paranjape R., Laforge P. Smart home automation system for
    intrusion detection 2015 IEEE 14th Canadian workshop on information theory, Institute
    of Electrical and Electronics Engineers Inc. (2015), pp. 75-78, 10.1109/CWIT.2015.7255156
    View in ScopusGoogle Scholar Ciffee et al., 2021 Ciffee R., Sudha G., Saranya
    S., Thyagesh G.K. Zigbee based automation systems for homes with the deployment
    of smart sensors Materials Today: Proceedings (2021), 10.1016/J.MATPR.2021.01.043
    Google Scholar Ciuffoletti, 2018 Ciuffoletti A. Low-cost IoT: A holistic approach
    Journal of Sensor and Actuator Networks, 7 (2018), p. 19, 10.3390/JSAN7020019
    View in ScopusGoogle Scholar Collotta and Pau, 2015 Collotta M., Pau G. Bluetooth
    for internet of things: A fuzzy approach to improve power management in smart
    homes Computers & Electrical Engineering, 44 (2015), pp. 137-152, 10.1016/J.COMPELECENG.2015.01.005
    View PDFView articleView in ScopusGoogle Scholar D. et al., 2021 D. K., Harshavardhan
    A., Manoj Kumar W., Sunitha D., Korra S.N. BLE in IoT: Improved link stability
    and energy conservation using fuzzy approach for smart homes automation Materials
    Today: Proceedings (2021), 10.1016/j.matpr.2020.12.378 Google Scholar Dahanaka
    et al., 2022 Dahanaka D., Wijesooriya A., Wickramasinghage D., Bhaggya G., Harshanath
    S., Rajapaksha U.S. Group formation and communication of multitasking multi-robots
    for smart city cleaning process 2022 4th International conference on advancements
    in computing, IEEE (2022), pp. 162-167 CrossRefView in ScopusGoogle Scholar Dai
    et al., 2021 Dai H., Shi P., Huang H., Chen R., Zhao J. Towards trustworthy IoT:
    A blockchain-edge computing hybrid system with proof-of-contribution mechanism
    Security and Communication Networks, 2021 (2021), 10.1155/2021/3050953 Google
    Scholar David, 2015 David N. Design of a home automation system using arduino
    International Journal of Scientific & Engineering Research (2015) URL: http://www.ijser.org
    Google Scholar Dawn et al., 2023 Dawn S., Bhowmick A., Bhowmik S., Mandal S. Smart
    door: A modern approach to control door using artificial intelligence American
    Journal of Electronics & Communication, 3 (3) (2023), pp. 6-10 CrossRefGoogle
    Scholar Dawoud and Dawoud, 2020 Dawoud D.S., Dawoud P. 10 Z-wave technology Microcontroller
    and smart home networks, River Publishers (2020), pp. 479-512 Google Scholar Deepika,
    2021 Deepika J.G.J. Internet of things device enabled smart home integrated architecture
    with security services Turkish Journal of Computer and Mathematics Education (TURCOMAT),
    12 (2021), pp. 2614-2623, 10.17762/TURCOMAT.V12I6.5708 Google Scholar Dembski
    et al., 2020 Dembski F., Wössner U., Letzgus M., Ruddat M., Yamu C. Urban digital
    twins for smart cities and citizens: The case study of Herrenberg, Germany Sustainability,
    12 (2020), p. 2307, 10.3390/SU12062307 URL: https://www.mdpi.com/2071-1050/12/6/2307/htm,
    https://www.mdpi.com/2071-1050/12/6/2307 View in ScopusGoogle Scholar Demertzis,
    2021 Demertzis K. Blockchained federated learning for threat defense (2021) arXiv
    preprint arXiv:2102.12746 Google Scholar Deng et al., 2021 Deng T., Zhang K.,
    Shen Z.J.M. A systematic review of a digital twin city: A new pattern of urban
    governance toward smart cities Journal of Management Science and Engineering,
    6 (2021), pp. 125-134, 10.1016/J.JMSE.2021.03.003 View PDFView articleView in
    ScopusGoogle Scholar Ding et al., 2022 Ding J., Wang Y., Si H., Ma J., He J.,
    Liang K., et al. Multimodal fusion-GMM based gesture recognition for smart home
    by WiFi sensing IEEE Vehicular Technology Conference, 2022-June (2022), 10.1109/VTC2022-SPRING54318.2022.9860435
    Google Scholar D’Ortona et al., 2022 D’Ortona C., Tarchi D., Raffaelli C. Open-source
    MQTT-based end-to-end IoT system for smart city scenarios Future Internet, 14
    (2022), p. 57, 10.3390/FI14020057 URL: https://www.mdpi.com/1999-5903/14/2/57/htm,
    https://www.mdpi.com/1999-5903/14/2/57 View in ScopusGoogle Scholar Duan et al.,
    2021 Duan P., Askari M., Hemat K., Ali Z.M. Optimal operation and simultaneous
    analysis of the electric transport systems and distributed energy resources in
    the smart city Sustainable Cities and Society, 75 (2021), 10.1016/J.SCS.2021.103306
    Google Scholar Duangsuwan et al., 2018 Duangsuwan S., Takarn A., Jamjareegulgarn
    P. A development on air pollution detection sensors based on NB-IoT network for
    smart cities 18th International symposium on communication and information technology,
    Institute of Electrical and Electronics Engineers Inc. (2018), pp. 313-317, 10.1109/ISCIT.2018.8587978
    View in ScopusGoogle Scholar Ebadat-Parast et al., 2022 Ebadat-Parast M., Nazari
    M.H., Hosseinian S.H. Distribution system resilience enhancement through resilience-oriented
    optimal scheduling of multi-microgrids considering normal and emergency conditions
    interlink utilizing multi-objective programming Sustainable Cities and Society,
    76 (2022), 10.1016/J.SCS.2021.103467 Google Scholar Emekci, 2022 Emekci S. From
    smart homes to smart cities: How smart homes contribute to the sustainable development
    goals Smart Cities, Citizen Welfare, and the Implementation of Sustainable Development
    Goals, IGI Global (2022), pp. 321-337, 10.4018/978-1-7998-7785-1.CH018 URL: https://www.igi-global.com/chapter/from-smart-homes-to-smart-cities/290139
    Google Scholar Fakhar et al., 2022 Fakhar A., Haidar A.M., Abdullah M., Das N.
    Smart grid mechanism for green energy management: a comprehensive review International
    Journal of Green Energy (2022), pp. 1-25, 10.1080/15435075.2022.2038610 View in
    ScopusGoogle Scholar Fakhar et al., 2023 Fakhar A., Haidar A.M., Abdullah M.,
    Das N. Smart grid mechanism for green energy management: a comprehensive review
    International Journal of Green Energy, 20 (3) (2023), pp. 284-308 CrossRefView
    in ScopusGoogle Scholar Farmanbar et al., 2019 Farmanbar M., Parham K., Arild
    Ø., Rong C. A widespread review of smart grids towards smart cities Energies,
    12 (23) (2019), p. 4484 CrossRefView in ScopusGoogle Scholar Felix and Jacob Raglend,
    2011 Felix C., Jacob Raglend I. Home automation using GSM 2011 International conference
    on signal processing, communication, computing and networking technologies (2011),
    pp. 15-19, 10.1109/ICSCCN.2011.6024506 View in ScopusGoogle Scholar Fernandes
    et al., 2016 Fernandes E., Jung J., Prakash A. Security analysis of emerging smart
    home applications 2016 IEEE symposium on security and privacy (2016), pp. 636-654,
    10.1109/SP.2016.44 View in ScopusGoogle Scholar Fernãndez et al., 2013 Fernãndez
    J., Calavia L., Baladrón C., Aguiar J.M., Carro B., Sánchez-Esguevillas A., et
    al. An intelligent surveillance platform for Large Metropolitan Areas with dense
    sensor deployment Sensors, 13 (2013), pp. 7414-7442, 10.3390/S130607414 URL: https://www.mdpi.com/1424-8220/13/6/7414/htm,
    https://www.mdpi.com/1424-8220/13/6/7414 View in ScopusGoogle Scholar Ferreira
    et al., 2021 Ferreira C.M.S., Garrocho C.T.B., Oliveira R.A.R., Silva J.S., da
    Cunha Cavalcanti C.F.M. IoT registration and authentication in smart city applications
    with blockchain Sensors, 21 (2021), pp. 1-23, 10.3390/S21041323 View in ScopusGoogle
    Scholar Fischer et al., 2021 Fischer M., Guggenberger M., Ussmueller T. A smart
    parking sensor with multi-purpose antenna for car detection and sensor charging
    2020 50th European microwave conference, Institute of Electrical and Electronics
    Engineers Inc. (2021), pp. 808-811, 10.23919/EUMC48046.2021.9338176 View in ScopusGoogle
    Scholar Folea et al., 2012 Folea S., Bordencea D., Hotea C., Valean H. Smart home
    automation system using wi-fi low power devices Proceedings of 2012 IEEE international
    conference on automation, quality and testing, robotics (2012), pp. 569-574, 10.1109/AQTR.2012.6237775
    View in ScopusGoogle Scholar Ford and Wolf, 2020 Ford D.N., Wolf C.M. Smart cities
    with digital twin systems for disaster management Journal of Management in Engineering,
    36 (2020), Article 04020027, 10.1061/(ASCE)ME.1943-5479.0000779/ASSET/D5BCF39C-7FF4-4596-AA17-FC42F2251E13/ASSETS/IMAGES/LARGE/FIGURE4.JPG
    URL: https://ascelibrary.org/doi/abs/10.1061/%28ASCE%29ME.1943-5479.0000779 View
    in ScopusGoogle Scholar Foth et al., 2021 Foth M., Anastasiu I., Mann M., Mitchell
    P. From automation to autonomy: Technological sovereignty for better data care
    in smart cities Advances in 21st century human settlements, Springer, Singapore
    (2021), pp. 319-343, 10.1007/978-981-15-8670-5_13 URL: https://link.springer.com/chapter/10.1007/978-981-15-8670-5%5F13
    View in ScopusGoogle Scholar Frincu and Draghici, 2016 Frincu M., Draghici R.
    Towards a scalable cloud enabled smart home automation architecture for demand
    response IEEE PES Innovative Smart Grid Technologies Conference Europe (2016),
    10.1109/ISGTEUROPE.2016.7856235 Google Scholar Gadekallu et al., 2022 Gadekallu
    T.R., Pham Q.V., Nguyen D.C., Maddikunta P.K.R., Deepa N., Prabadevi B., et al.
    Blockchain for edge of things: Applications, opportunities, and challenges IEEE
    Internet of Things Journal, 9 (2022), pp. 964-988, 10.1109/JIOT.2021.3119639 View
    in ScopusGoogle Scholar Gambi et al., 2018 Gambi E., Montanini L., Pigini D.,
    Ciattaglia G., Spinsante S. A home automation architecture based on LoRa technology
    and message queue telemetry transfer protocol: DOI: 10.1177/1550147718806837,
    14 (2018), 10.1177/1550147718806837 Google Scholar Ghaleb and Azzedin, 2021 Ghaleb
    M., Azzedin F. Towards scalable and efficient architecture for modeling trust
    in iot environments Sensors, 21 (2021), 10.3390/S21092986 Google Scholar Ghayvat
    et al., 2015 Ghayvat H., Mukhopadhyay S., Gui X., Suryadevara N. WSN- and IOT-based
    smart homes and their extension to smart buildings Sensors, 15 (2015), pp. 10350-10379,
    10.3390/S150510350 URL: https://www.mdpi.com/1424-8220/15/5/10350/htm, https://www.mdpi.com/1424-8220/15/5/10350
    View in ScopusGoogle Scholar Ghiasi et al., 2023 Ghiasi M., Niknam T., Wang Z.,
    Mehrandezh M., Dehghani M., Ghadimi N. A comprehensive review of cyber-attacks
    and defense mechanisms for improving security in smart grid energy systems: Past,
    present and future Electric Power Systems Research, 215 (2023), Article 108975
    View PDFView articleView in ScopusGoogle Scholar Ghosh, 2018 Ghosh S. Smart homes:
    Architectural and engineering design imperatives for smart city building codes
    International conference on technologies for smart city energy security and power:
    Smart solutions for smart cities, ICSESP 2018 - Proceedings, 2018-January, Institute
    of Electrical and Electronics Engineers Inc. (2018), pp. 1-4, 10.1109/ICSESP.2018.8376676
    Google Scholar Goudbeek et al., 2018 Goudbeek A., Choo K.-K.R., Le-Khac N.-A.
    A forensic investigation framework for smart home environment 2018 17th IEEE international
    conference on trust, security and privacy in computing and communications/ 12th
    IEEE international conference on big data science and engineering (2018), pp.
    1446-1451, 10.1109/TrustCom/BigDataSE.2018.00201 View in ScopusGoogle Scholar
    Guelzim et al., 2016 Guelzim T., Obaidat M.S., Sadoun B. Introduction and overview
    of key enabling technologies for smart cities and homes Smart Cities and Homes:
    Key Enabling Technologies (2016), pp. 1-16, 10.1016/B978-0-12-803454-5.00001-8
    View PDFView articleView in ScopusGoogle Scholar Guillen-Pérez and Baños, 2018
    Guillen-Pérez A., Baños M.D.C. A WiFi-based method to count and locate pedestrians
    in urban traffic scenarios International Conference on Wireless and Mobile Computing,
    Networking and Communications, 2018-October (2018), pp. 123-130, 10.1109/WIMOB.2018.8589170
    View in ScopusGoogle Scholar Gunawan et al., 2017 Gunawan T.S., Kartiwi M., Rahmithul
    I., Yaldi H., Ismail N., Za’bah N.F., et al. Prototype design of smart home system
    using internet of things Article in Indonesian Journal of Electrical Engineering
    and Computer Science, 7 (2017), pp. 107-115, 10.11591/ijeecs.v7.i1.pp107-115 URL:
    https://www.researchgate.net/publication/319345708 View in ScopusGoogle Scholar
    Guo et al., 2019 Guo X., Shen Z., Zhang Y., Wu T. Review on the application of
    artificial intelligence in smart homes Smart Cities, 2 (3) (2019), pp. 402-420,
    10.3390/smartcities2030025 View in ScopusGoogle Scholar Gupta, 2023 Gupta N. Editorial:
    Smart cities challenges, technologies, and trends Frontiers in Big Data, 6 (2023),
    Article 1258051, 10.3389/FDATA.2023.1258051 View in ScopusGoogle Scholar Gupta
    and Chhabra, 2016 Gupta P., Chhabra J. IoT based smart home design using power
    and security management 2016 International conference on innovation and challenges
    in cyber security (2016), pp. 6-10, 10.1109/ICICCS.2016.7542317 View in ScopusGoogle
    Scholar Gupta et al., 2021 Gupta R., Kumari A., Tanwar S. A taxonomy of blockchain
    envisioned edge-as-a-connected autonomous vehicles Transactions on Emerging Telecommunications
    Technologies, 32 (2021), 10.1002/ETT.4009 Google Scholar Gupta et al., 2022 Gupta
    S.K., Tripathi M., Grover J. Hybrid optimization and deep learning based intrusion
    detection system Computers & Electrical Engineering, 100 (2022), Article 107876,
    10.1016/J.COMPELECENG.2022.107876 URL: https://linkinghub.elsevier.com/retrieve/pii/S0045790622001653
    View PDFView articleView in ScopusGoogle Scholar Ha and Phung, 2019 Ha Q., Phung
    M.D. IoT-enabled dependable control for solar energy harvesting in smart buildings
    IET Smart Cities, 1 (2019), pp. 61-70, 10.1049/IET-SMC.2019.0052 View in ScopusGoogle
    Scholar Hanjri et al., 2023 Hanjri M.E., Kabbaj H., Kobbane A., Abouaomar A. Federated
    learning for water consumption forecasting in smart cities (2023) arXiv preprint
    arXiv:2301.13036 Google Scholar Hasan et al., 2023 Hasan M.M., Islam M.U., Sadeq
    M.J., Fung W.-K., Uddin J. Review on the evaluation and development of artificial
    intelligence for COVID-19 containment Sensors, 23 (1) (2023), p. 527 CrossRefView
    in ScopusGoogle Scholar Haseeb et al., 2021 Haseeb K., Din I.U., Almogren A.,
    Ahmed I., Guizani M. Intelligent and secure edge-enabled computing model for sustainable
    cities using green internet of things Sustainable Cities and Society, 68 (2021),
    10.1016/J.SCS.2021.102779 Google Scholar Hashim Shahab et al., 2023 Hashim Shahab
    M., Mujtaba Buttar H., Mehmood A., Aman W., Rahman M., Wasim Nawaz M., et al.
    Transfer learning for non-intrusive load monitoring and appliance identification
    in a smart home (2023) arXiv e-prints, arXiv–2301 Google Scholar He et al., 2021
    He L., Ma G., Qi W., Wang X. Charging an electric vehicle-sharing fleet Manufacturing
    and Service Operations Management, 23 (1) (2021), pp. 471-487, 10.1287/MSOM.2019.0851
    URL: https://www.scopus.com/inward/record.uri?eid=2-s2.0-85098445785&doi=10.1007%2fs11432-019-2903-2&partnerID=40&md5=8dbf587d71454a1750414a377af801ca.
    Cited by: 3 View in ScopusGoogle Scholar He et al., 2022 He Y., Zhang D., Chen
    Y. High-resolution WiFi imaging with reconfigurable intelligent surfaces IEEE
    Internet of Things Journal (2022), 10.1109/JIOT.2022.3210686 Google Scholar Heinisch
    et al., 2021 Heinisch V., Göransson L., Erlandsson R., Hodel H., Johnsson F.,
    Odenberger M. Smart electric vehicle charging strategies for sectoral coupling
    in a city energy system Applied Energy, 288 (2021), 10.1016/J.APENERGY.2021.116640
    Google Scholar Helmi et al., 2023 Helmi A., Al-qaness M.A., Dahou A., Abd Elaziz
    M. Human activity recognition using marine predators algorithm with deep learning
    Future Generation Computer Systems (2023) Google Scholar Hercog et al., 2020 Hercog
    D., Sedonja D., Recek B., Truntič M., Gergič B. Smart home solutions using wi-fi-based
    hardware Tehnički vjesnik, 27 (2020), pp. 1351-1358, 10.17559/TV-20190730075217
    View in ScopusGoogle Scholar Hernafi et al., 2017 Hernafi Y., Ahmed M.B., Bouhorma
    M. ACO and PSO algorithms for developing a new communication model for VANET applications
    in smart cities Wireless Personal Communications, 96 (2017), pp. 2039-2075, 10.1007/S11277-017-4286-0/FIGURES/25
    URL: https://link.springer.com/article/10.1007/s11277-017-4286-0 View in ScopusGoogle
    Scholar Hoang et al., 2021 Hoang A.T., Nguyen X.P., et al. Integrating renewable
    sources into energy system for smart city as a sagacious strategy towards clean
    and sustainable process Journal of Cleaner Production, 305 (2021), Article 127161
    View PDFView articleView in ScopusGoogle Scholar Hoque and Davidson, 2019 Hoque
    M.A., Davidson C. Design and implementation of an IoT-based smart home security
    system International Journal of Networked and Distributed Computing, 7 (2019),
    pp. 85-92, 10.2991/IJNDC.K.190326.004 URL: https://www.atlantis-press.com/journals/ijndc/125905847
    View in ScopusGoogle Scholar Hsu et al., 2017 Hsu Y.-L., Chou P.-H., Chang H.-C.,
    Lin S.-L., Yang S.-C., Su H.-Y., et al. Design and implementation of a smart home
    system using multisensor data fusion technology Sensors, 17 (2017), p. 1631, 10.3390/S17071631
    View in ScopusGoogle Scholar Huang et al., 2016 Huang J., Deng Y., Yang Q., Sun
    J. An energy-efficient train control framework for smart railway transportation
    IEEE Transactions on Computers, 65 (2016), pp. 1407-1417, 10.1109/TC.2015.2500565
    View in ScopusGoogle Scholar Hui et al., 2017 Hui T.K., Sherratt R.S., Sánchez
    D.D. Major requirements for building smart homes in smart cities based on internet
    of things technologies Future Generation Computer Systems, 76 (2017), pp. 358-369,
    10.1016/J.FUTURE.2016.10.026 View PDFView articleView in ScopusGoogle Scholar
    Idowu et al., 2016 Idowu S., Saguna S., Åhlund C., Schelén O. Applied machine
    learning: Forecasting heat load in district heating system Energy and Buildings,
    133 (2016), pp. 478-488, 10.1016/J.ENBUILD.2016.09.068 View PDFView articleView
    in ScopusGoogle Scholar Islam et al., 2020 Islam N., Haseeb K., Almogren A., Din
    I.U., Guizani M., Altameem A. A framework for topological based map building:
    A solution to autonomous robot navigation in smart cities Future Generation Computer
    Systems, 111 (2020), pp. 644-653 View PDFView articleView in ScopusGoogle Scholar
    Islam et al., 2021 Islam R., Rahman M.W., Rubaiat R., Hasan M.M., Reza M.M., Rahman
    M.M. Lora and server-based home automation using the internet of things (IoT)
    Journal of King Saud University - Computer and Information Sciences (2021), 10.1016/J.JKSUCI.2020.12.020
    Google Scholar Jabbar et al., 2019 Jabbar W.A., Kian T.K., Ramli R.M., Zubir S.N.,
    Zamrizaman N.S., Balfaqih M., et al. Design and fabrication of smart home with
    internet of things enabled automation system IEEE Access, 7 (2019), pp. 144059-144074,
    10.1109/ACCESS.2019.2942846 View in ScopusGoogle Scholar Jabeur et al., 2022 Jabeur
    R., Boujoudar Y., Sidi A.M., Ben M., Azeroual M., Aljarbouh A., et al. Microgrid
    energy management system for smart home using multi-agent system battery management
    system for micro-grid view project battery management for micro-grids system view
    project microgrid energy management system for smart home using multi-agent system
    Article in International Journal of Electrical and Computer Engineering, 12 (2022),
    pp. 1153-1160, 10.11591/ijece.v12i2.pp1153-1160 View in ScopusGoogle Scholar Jacobsson
    et al., 2016 Jacobsson A., Boldt M., Carlsson B. A risk analysis of a smart home
    automation system Future Generation Computer Systems, 56 (2016), pp. 719-733,
    10.1016/j.future.2015.09.003 View PDFView articleView in ScopusGoogle Scholar
    Jiang et al., 2020 Jiang J.C., Kantarci B., Oktug S., Soyata T. Federated learning
    in smart city sensing: Challenges and opportunities Sensors, 20 (21) (2020), p.
    6230 CrossRefGoogle Scholar Jiang et al., 2023 Jiang Q., Nian D., Guo Y., Ahmed
    M., Yang G., Ma J. Evaluating connected vehicle-based weather responsive management
    strategies using weather-sensitive microscopic simulation Journal of Intelligent
    Transportation Systems, 27 (1) (2023), pp. 92-110 View articleCrossRefView in
    ScopusGoogle Scholar Jin et al., 2016 Jin D., Hannon C., Li Z., Cortes P., Ramaraju
    S., Burgess P., et al. Smart street lighting system: A platform for innovative
    smart city applications and a new frontier for cyber-security Electricity Journal,
    29 (2016), pp. 28-35, 10.1016/J.TEJ.2016.11.011 View PDFView articleView in ScopusGoogle
    Scholar Jnr and Petersen, 2022 Jnr B.A., Petersen S.A. Validation of a developed
    enterprise architecture framework for digitalisation of smart cities: a mixed-mode
    approach Journal of the Knowledge Economy (2022), 10.1007/S13132-022-00969-0 Google
    Scholar John et al., 2022 John J., Varkey M.S., Podder R.S., Sensarma N., Selvi
    M., Kumar S.V.S., et al. Smart prediction and monitoring of waste disposal system
    using IoT and cloud for IoT based smart cities Wireless Personal Communications,
    122 (2022), pp. 243-275, 10.1007/S11277-021-08897-Z View in ScopusGoogle Scholar
    Jose and Malekian, 2017 Jose A.C., Malekian R. Improving smart home security:
    Integrating logical sensing into smart home IEEE Sensors Journal, 17 (13) (2017),
    pp. 4269-4286, 10.1109/JSEN.2017.2705045 View in ScopusGoogle Scholar Jose et
    al., 2016 Jose A.C., Malekian R., Ye N. Improving home automation security; integrating
    device fingerprinting into smart home IEEE Access, 4 (2016), pp. 5776-5787, 10.1109/ACCESS.2016.2606478
    View in ScopusGoogle Scholar Jung et al., 2013 Jung M., Weidinger J., Kastner
    W., Olivieri A. Building automation and smart cities: An integration approach
    based on a service-oriented architecture Proceedings - 27th international conference
    on advanced information networking and applications workshops, WAINA 2013 (2013),
    pp. 1361-1367, 10.1109/WAINA.2013.200 View in ScopusGoogle Scholar Jutila, 2016
    Jutila M. An adaptive edge router enabling internet of things IEEE Internet of
    Things Journal, 3 (2016), pp. 1061-1069, 10.1109/JIOT.2016.2550561 View in ScopusGoogle
    Scholar Kafle et al., 2021 Kafle K., Moran K., Manandhar S., Nadkarni A., Poshyvanyk
    D. Security in centralized data store-based home automation platforms: A systematic
    analysis of nest and hue ACM Transactions on Cyber-Physical Systems, 5 (1) (2021),
    10.1145/3418286 Google Scholar Kamruzzaman, 2022 Kamruzzaman M.M. Key technologies,
    applications and trends of internet of things for energy-efficient 6G wireless
    communication in smart cities Energies, 15 (2022), p. 5608, 10.3390/EN15155608
    URL: https://www.mdpi.com/1996-1073/15/15/5608/htm, https://www.mdpi.com/1996-1073/15/15/5608
    View in ScopusGoogle Scholar Kamyab et al., 2020 Kamyab H., Klemeš J.J., Van Fan
    Y., Lee C.T. Transition to sustainable energy system for smart cities and industries
    Energy, 207 (2020), Article 118104 View PDFView articleView in ScopusGoogle Scholar
    Kang et al., 2017 Kang W.M., Moon S.Y., Park J.H. An enhanced security framework
    for home appliances in smart home Human-centric Computing and Information Sciences,
    7 (2017), pp. 1-12, 10.1186/S13673-017-0087-4/TABLES/5 Google Scholar Karaca et
    al., 2016 Karaca S., Sisman A., Savruk I. A low cost smart security and home automation
    system employing an embedded server and a wireless sensor network 2016 IEEE 6th
    international conference on consumer electronics (2016), pp. 73-77, 10.1109/ICCE-Berlin.2016.7684721
    View in ScopusGoogle Scholar Kaur et al., 2017 Kaur S., Kaur M., Kumbhar G., Khanna
    R. A hybrid approach for promoting low carbon technologies in distributed generation
    planning 2017 IEEE international conference on smart grid and smart cities, Institute
    of Electrical and Electronics Engineers Inc. (2017), pp. 89-93, 10.1109/ICSGSC.2017.8038555
    View in ScopusGoogle Scholar Kazerani and Tehrani, 2020 Kazerani M., Tehrani K.
    Grid of hybrid AC/DC microgrids: A new paradigm for smart city of tomorrow IEEE
    15th international conference of system of systems engineering, proceedings, Institute
    of Electrical and Electronics Engineers Inc. (2020), pp. 175-180, 10.1109/SOSE50414.2020.9130482
    View in ScopusGoogle Scholar Ke et al., 2021 Ke R., Zhuang Y., Pu Z., Wang Y.
    A smart, efficient, and reliable parking surveillance system with edge artificial
    intelligence on IoT devices IEEE Transactions on Intelligent Transportation Systems,
    22 (2021), pp. 4962-4974, 10.1109/TITS.2020.2984197 View in ScopusGoogle Scholar
    Ketu and Mishra, 2022 Ketu S., Mishra P.K. A contemporary survey on IoT based
    smart cities: architecture, applications, and open issues Wireless Personal Communications,
    125 (3) (2022), pp. 2319-2367 CrossRefView in ScopusGoogle Scholar Khalil et al.,
    2021 Khalil M.I., Jhanjhi N., Humayun M., Sivanesan S., Masud M., Hossain M.S.
    Hybrid smart grid with sustainable energy efficient resources for smart cities
    Sustainable Energy Technologies and Assessments, 46 (2021), Article 101211 View
    PDFView articleView in ScopusGoogle Scholar Khan et al., 2022 Khan M.G., Huda
    N.U., Zaman U.K.U. Smart warehouse management system: Architecture, real-time
    implementation and prototype design Machines, 10 (2022), p. 150, 10.3390/MACHINES10020150
    View in ScopusGoogle Scholar Khan and Salah, 2018 Khan M.A., Salah K. IoT security:
    Review, blockchain solutions, and open challenges Future Generation Computer Systems,
    82 (2018), pp. 395-411, 10.1016/J.FUTURE.2017.11.022 View PDFView articleView
    in ScopusGoogle Scholar Klein and Kaefer, 2008 Klein C., Kaefer G. From smart
    homes to smart cities: Opportunities and challenges from an industrial perspective
    Next generation teletraffic and wired/wireless advanced networking, Springer,
    Berlin, Heidelberg (2008), p. 260, 10.1007/978-3-540-85500-2_24 URL: https://link.springer.com/chapter/10.1007/978-3-540-85500-2%5F24
    Google Scholar Kosmides et al., 2015 Kosmides P., Adamopoulou E., Demestichas
    K., Theologou M., Anagnostou M., Rouskas A. Socially aware heterogeneous wireless
    networks Sensors, 15 (2015), pp. 13705-13724, 10.3390/S150613705 URL: https://www.mdpi.com/1424-8220/15/6/13705/htm,
    https://www.mdpi.com/1424-8220/15/6/13705 View in ScopusGoogle Scholar Kriška
    et al., 2014 Kriška M., Janitor J., Fecilak P. Dynamic routing of IP traffic based
    on QOS parameters International Journal of Computer Networks & Communications,
    6 (2014), pp. 11-22 CrossRefGoogle Scholar Kuang and Li, 2021 Kuang J., Li L.
    ZigBee-based architecture design of imperceptible smart home system Advances in
    Intelligent Systems and Computing, 1143 (2021), pp. 1003-1011, 10.1007/978-981-15-3753-0_100
    View in ScopusGoogle Scholar Kumar and Lee, 2014 Kumar S., Lee S.R. Android based
    smart home system with control via bluetooth and internet connectivity The 18th
    IEEE international symposium on consumer electronics (2014), pp. 1-2, 10.1109/ISCE.2014.6884302
    View in ScopusGoogle Scholar Kumar and Savier, 2017 Kumar D.S., Savier J.S. Impact
    analysis of distributed generation integration on distribution network considering
    smart grid scenario IEEE international symposium on technologies for smart cities,
    Institute of Electrical and Electronics Engineers Inc. (2017), 10.1109/TENCONSPRING.2017.8070023
    Google Scholar Kumar et al., 2021 Kumar A., Sharma S., Goyal N., Singh A., Cheng
    X., Singh P. Secure and energy-efficient smart building architecture with emerging
    technology IoT Computer Communications, 176 (2021), pp. 207-217, 10.1016/J.COMCOM.2021.06.003
    View PDFView articleGoogle Scholar Kuppa et al., 2022 Kuppa K., Dayal A., Gupta
    S., Dua A., Chaudhary P., Rathore S. ConvXSS: A deep learning-based smart ICT
    framework against code injection attacks for HTML5 web applications in sustainable
    smart city infrastructure Sustainable Cities and Society, 80 (2022), Article 103765,
    10.1016/J.SCS.2022.103765 View PDFView articleView in ScopusGoogle Scholar Kusuma
    and Supangkat, 2022 Kusuma A.T., Supangkat S.H. Metaverse fundamental technologies
    for smart city: A literature review 9th International conference on ICT for smart
    society: Recover together, recover stronger and smarter smartization, governance
    and collaboration, ICISS 2022 - Proceeding, Institute of Electrical and Electronics
    Engineers Inc. (2022), 10.1109/ICISS55894.2022.9915079 Google Scholar Leccese
    et al., 2014 Leccese F., Cagnetti M., Trinca D. A smart city application: A fully
    controlled street lighting isle based on raspberry-pi card, a ZigBee sensor network
    and WiMAX Sensors, 14 (2014), pp. 24408-24424, 10.3390/S141224408 URL: https://www.mdpi.com/1424-8220/14/12/24408/htm,
    https://www.mdpi.com/1424-8220/14/12/24408 View in ScopusGoogle Scholar Lecouteux
    et al., 2011 Lecouteux B., Vacher M., Portet F. Distant speech recognition for
    home automation: Preliminary experimental results in a smart home Proceedings
    of the 6th international conference on speech technology and human-computer dialogue
    (2011), 10.1109/SPED.2011.5940728 Google Scholar Lee et al., 2016 Lee S., Kim
    J., Shon T. User privacy-enhanced security architecture for home area network
    of smartgrid Multimedia Tools and Applications, 75 (20) (2016), pp. 12749-12764
    CrossRefView in ScopusGoogle Scholar Lee and Lee, 2015 Lee I., Lee K. The internet
    of things (IoT): Applications, investments, and challenges for enterprises Business
    Horizons, 58 (2015), pp. 431-440, 10.1016/J.BUSHOR.2015.03.008 View PDFView articleView
    in ScopusGoogle Scholar Lewandowska et al., 2020 Lewandowska A., Chodkowska-Miszczuk
    J., Rogatka K., Starczewski T. Smart energy in a smart city: Utopia or reality?
    evidence from Poland Energies, 13 (2020), 10.3390/EN13215795 Google Scholar Lin
    et al., 2017 Lin J., Yu W., Zhang N., Yang X., Zhang H., Zhao W. A survey on internet
    of things: Architecture, enabling technologies, security and privacy, and applications
    IEEE Internet of Things Journal, 4 (2017), pp. 1125-1142, 10.1109/JIOT.2017.2683200
    View in ScopusGoogle Scholar Lotfi et al., 2022 Lotfi M., Almeida T., Javadi M.S.,
    Osório G.J., Monteiro C., Catalão J.P. Coordinating energy management systems
    in smart cities with electric vehicles Applied Energy, 307 (2022), 10.1016/J.APENERGY.2021.118241
    Google Scholar Lu et al., 2022 Lu Q., Guo Q., Zeng W. Optimization scheduling
    of home appliances in smart home: A model based on a niche technology with sharing
    mechanism International Journal of Electrical Power & Energy Systems, 141 (2022),
    Article 108126 View PDFView articleView in ScopusGoogle Scholar Lucic et al.,
    2023 Lucic M.C., Bouhamed O., Ghazzai H., Khanfor A., Massoud Y. Leveraging UAVs
    to enable dynamic and smart aerial infrastructure for ITS and smart cities: An
    overview Drones, 7 (2) (2023), p. 79 CrossRefView in ScopusGoogle Scholar Luigi,
    2015 Luigi R.D. Interacting with smart environments users, interfaces, and devices
    Journal of Ambient Intelligence and Smart Environments (2015) Google Scholar Luo
    and Zhang, 2023 Luo X., Zhang D. A cascaded deep learning framework for photovoltaic
    power forecasting with multi-fidelity inputs Energy (2023), Article 126636 View
    PDFView articleView in ScopusGoogle Scholar Mahmud et al., 2021 Mahmud M.A., Islam
    S.N., Lilley I. A smart energy hub for smart cities: Enabling peer-to-peer energy
    sharing and trading IEEE Consumer Electronics Magazine, 10 (2021), pp. 97-105,
    10.1109/MCE.2021.3083979 View in ScopusGoogle Scholar Makkar, 2022 Makkar A. SecureEngine:
    Spammer classification in cyber defence for leveraging green computing in sustainable
    city Sustainable Cities and Society, 79 (2022), Article 103658, 10.1016/J.SCS.2021.103658
    View PDFView articleView in ScopusGoogle Scholar Malek et al., 2022 Malek M.R.A.,
    Aziz N.A.A., Alelyani S., Mohana M., Baharudin F.N.A., Ibrahim Z. Comfort and
    energy consumption optimization in smart homes using bat algorithm with inertia
    weight Journal of Building Engineering, 47 (2022), Article 103848 Google Scholar
    Mana et al., 2022 Mana S.C., Samhitha B.K., Deepa D., Vignesh R. Analysis on application
    of fog computing in industry 4.0 and smart cities Lecture notes on data engineering
    and communications technologies, vol. 74, Springer Science and Business Media
    Deutschland GmbH (2022), pp. 87-105, 10.1007/978-981-16-3448-2_5 View in ScopusGoogle
    Scholar Mansouri et al., 2021 Mansouri S.A., Ahmarinejad A., Nematbakhsh E., Javadi
    M.S., Jordehi A.R., Catalão J.P. Energy management in microgrids including smart
    homes: A multi-objective approach Sustainable Cities and Society, 69 (2021), Article
    102852, 10.1016/J.SCS.2021.102852 View PDFView articleView in ScopusGoogle Scholar
    Mantoro et al., 2014 Mantoro, T., Ayu, M. A., & binti Mahmod, S. M. (2014). Securing
    the authentication and message integrity for Smart Home using smart phone. In
    2014 International conference on multimedia computing and systems (pp. 985–989).
    Google Scholar Marhoon et al., 2018 Marhoon H.M., Mahdi M.I., Hussein E.D., Ibrahim
    A.R. Designing and implementing applications of smart home appliances Modern Applied
    Science, 12 (2018), 10.5539/mas.v12n12p8 Google Scholar Massobrio et al., 2018
    Massobrio R., Nesmachnow S., Tchernykh A., Avetisyan A., Radchenko G. Towards
    a cloud computing paradigm for big data analysis in smart cities Programming and
    Computer Software, 44 (3) (2018), pp. 181-189, 10.1134/S0361768818030052 URL:
    https://link.springer.com/article/10.1134/S0361768818030052 View in ScopusGoogle
    Scholar Mastoi et al., 2023 Mastoi M.S., Zhuang S., Munir H.M., Haris M., Hassan
    M., Alqarni M., et al. A study of charging-dispatch strategies and vehicle-to-grid
    technologies for electric vehicles in distribution networks Energy Reports, 9
    (2023), pp. 1777-1806 View PDFView articleView in ScopusGoogle Scholar Mazhar
    et al., 2023 Mazhar T., Asif R.N., Malik M.A., Nadeem M.A., Haq I., Iqbal M.,
    et al. Electric vehicle charging system in the smart grid using different machine
    learning methods Sustainability, 15 (3) (2023), p. 2603 CrossRefView in ScopusGoogle
    Scholar Mbarek et al., 2021 Mbarek B., Ge M., Pitner T. Trust-based authentication
    for smart home systems Human centric Computing and Information Sciences, 117 (2021),
    pp. 2157-2172, 10.1007/s11277-020-07965-0 View in ScopusGoogle Scholar Medapati
    et al., 2020 Medapati P.K., Murthy P.H.T., Sridhar K.P. LAMSTAR: For IoT-based
    face recognition system to manage the safety factor in smart cities Transactions
    on Emerging Telecommunications Technologies, 31 (2020), Article e3843, 10.1002/ETT.3843
    URL: https://onlinelibrary.wiley.com/doi/full/10.1002/ett.3843 https://onlinelibrary.wiley.com/doi/10.1002/ett.3843
    View in ScopusGoogle Scholar Mehmood et al., 2019 Mehmood F., Ullah I., Ahmad
    S., Kim D.H. Object detection mechanism based on deep learning algorithm using
    embedded IoT devices for smart home appliances control in CoT Journal of Ambient
    Intelligence and Humanized Computing, 1 (2019), pp. 1-17, 10.1007/S12652-019-01272-8/FIGURES/15
    URL: https://link.springer.com/article/10.1007/s12652-019-01272-8 View in ScopusGoogle
    Scholar Merzoug et al., 2021 Merzoug M.A., Mostefaoui A., Gianini G., Damiani
    E. Smart connected parking lots based on secured multimedia IoT devices Computing,
    103 (2021), pp. 1143-1164, 10.1007/S00607-021-00921-1/FIGURES/10 URL: https://link.springer.com/article/10.1007/s00607-021-00921-1
    View in ScopusGoogle Scholar Millham et al., 2023 Millham R.C., Agbehadji I.E.,
    Freeman E. Nature-inspired algorithms and smart city applications Encyclopedia
    of data science and machine learning, IGI Global (2023), pp. 2251-2270 Google
    Scholar Minoli, 2020 Minoli D. Positioning of blockchain mechanisms in IOT-powered
    smart home systems: A gateway-based approach Internet of Things, 10 (2020), Article
    100147, 10.1016/j.iot.2019.100147 Special Issue of the Elsevier IoT Journal on
    Blockchain Applications in IoT Environments View PDFView articleView in ScopusGoogle
    Scholar Mishra et al., 2022 Mishra A., Jha A.V., Appasani B., Ray A.K., Gupta
    D.K., Ghazali A.N. Emerging technologies and design aspects of next generation
    cyber physical system with a smart city application perspective International
    Journal of Systems Assurance Engineering and Management (2022), pp. 1-23 Google
    Scholar Mishra et al., 2020 Mishra A., Karmakar S., Bose A., Dutta A. Design and
    development of IoT-based latency-optimized augmented reality framework in home
    automation and telemetry for smart lifestyle Journal of Reliable Intelligent Environments,
    6 (2020), pp. 169-187, 10.1007/s40860-020-00106-1 View in ScopusGoogle Scholar
    Mohammed, 2023 Mohammed N.J. Quantum cryptography in convolution neural network
    approach in smart cities Journal of Survey in Fisheries Sciences, 10 (2023), pp.
    2043-2056, 10.17762/SFS.V10I2S.1105 URL: http://sifisheriessciences.com/journal/index.php/journal/article/view/1105
    View in ScopusGoogle Scholar Mohapatra et al., 2021 Mohapatra K., Nayak M., Nayak
    A.K. Techniques behind smart home automation system using NLP and IoT Lecture
    Notes in Networks and Systems, 151 (2021), pp. 105-115, 10.1007/978-981-15-8218-9_9
    View in ScopusGoogle Scholar Moniruzzaman et al., 2020 Moniruzzaman M., Khezr
    S., Yassine A., Benlamri R. Blockchain for smart homes: Review of current trends
    and research challenges Computers & Electrical Engineering, 83 (2020), Article
    106585, 10.1016/j.compeleceng.2020.106585 View PDFView articleView in ScopusGoogle
    Scholar Mora-Mora et al., 2015 Mora-Mora H., Gilart-Iglesias V., Gil D., Sirvent-Llamas
    A. A computational architecture based on RFID sensors for traceability in smart
    cities Sensors, 15 (2015), pp. 13591-13626, 10.3390/S150613591 URL: https://www.mdpi.com/1424-8220/15/6/13591/htm,
    https://www.mdpi.com/1424-8220/15/6/13591 View in ScopusGoogle Scholar Munavalli
    et al., 2023 Munavalli J.R., Bindu S., Shirur Y.J.M. Applications of internet
    of things with deep learning Convergence of deep learning and internet of things:
    computing and technology, IGI Global (2023), pp. 285-307 Google Scholar Muqeet
    et al., 2023 Muqeet H.A., Liaqat R., Jamil M., Khan A.A. A state-of-the-art review
    of smart energy systems and their management in a smart grid environment Energies,
    16 (1) (2023), p. 472 CrossRefView in ScopusGoogle Scholar Nagaraja and Srinath,
    2020 Nagaraja G.S., Srinath S. Security architecture for IoT-based home automation
    Smart Innovation, Systems and Technologies, 159 (2020), pp. 57-65, 10.1007/978-981-13-9282-5_6
    View in ScopusGoogle Scholar Nagendram et al., 2021 Nagendram S., Kanakaraja P.,
    KiranNag M.S.R., Akhil K. Design and implementation of low-cost smart home system
    with sensor multiplexing SN Computer Science, 2 (3) (2021), pp. 1-9, 10.1007/S42979-021-00602-Y
    URL: https://link.springer.com/article/10.1007/s42979-021-00602-y Google Scholar
    Nandanwar and Chauhan, 2021 Nandanwar H., Chauhan A. IOT based smart environment
    monitoring systems: A key to smart and clean urban living spaces 2021 Asian conference
    on innovation in technology, Institute of Electrical and Electronics Engineers
    Inc. (2021), 10.1109/ASIANCON51346.2021.9544596 Google Scholar Neffati et al.,
    2021 Neffati O.S., Sengan S., Thangavelu K.D., Kumar S.D., Setiawan R., Elangovan
    M., et al. Migrating from traditional grid to smart grid in smart cities promoted
    in developing country Sustainable Energy Technologies and Assessments, 45 (2021),
    Article 101125 Google Scholar Nguyen and Nguyen, 2021 Nguyen H.P.D., Nguyen D.D.
    Drone application in smart cities: The general overview of security vulnerabilities
    and countermeasures for data communication Development and Future of Internet
    of Drones (IoD): Insights, Trends and Road Ahead, Springer (2021), pp. 185-210
    CrossRefView in ScopusGoogle Scholar Nguyen et al., 2022 Nguyen D.C., Pham Q.-V.,
    Pathirana P.N., Ding M., Seneviratne A., Lin Z., et al. Federated learning for
    smart healthcare: A survey ACM Computing Surveys, 55 (3) (2022), pp. 1-37 CrossRefGoogle
    Scholar Nisa et al., 2022 Nisa K.U., Alhudhaif A., Qureshi K.N., Hadi H.J., Jeon
    G. Security provision for protecting intelligent sensors and zero touch devices
    by using blockchain method for the smart cities Microprocessors and Microsystems,
    90 (2022), Article 104503, 10.1016/J.MICPRO.2022.104503 URL: https://linkinghub.elsevier.com/retrieve/pii/S0141933122000631
    Google Scholar Nižetić et al., 2022 Nižetić S., Ocłoń P., Tsoutsos T. Progress
    in smart and sustainable technologies Journal of Cleaner Production, 337 (2022),
    10.1016/J.JCLEPRO.2022.130450 Google Scholar Nuaimi et al., 2015 Nuaimi E.A.,
    Neyadi H.A., Mohamed N., Al-Jaroodi J. Applications of big data to smart cities
    Journal of Internet Services and Applications, 6 (2015), pp. 1-15, 10.1186/S13174-015-0041-5/FIGURES/3
    URL: https://jisajournal.springeropen.com/articles/10.1186/s13174-015-0041-5 Google
    Scholar Nunes et al., 2017 Nunes V., Gouveia J.P., Rodrigues A.M., Simão T. INSMART
    - towards the new distribution systems operators potential roles in low carbon
    future and integrated frameworks for smart cities CIRED - Open Access Proceedings
    Journal, 2017 (2017), pp. 2797-2799, 10.1049/OAP-CIRED.2017.0268 View in ScopusGoogle
    Scholar Oad et al., 2023 Oad A., Ahmad H.G., Talpur M.S.H., Zhao C., Pervez A.
    Green smart grid predictive analysis to integrate sustainable energy of emerging
    V2G in smart city technologies Optik, 272 (2023), Article 170146 View PDFView
    articleView in ScopusGoogle Scholar Oluwole et al., 2021 Oluwole A.S., Odekunle
    O.P., Olubakinde E. Applications and recent development of DTMF based technology
    in home automation European Journal of Electrical Engineering and Computer Science,
    5 (2021), pp. 60-67, 10.24018/EJECE.2021.5.3.328 URL: https://ejece.org/index.php/ejece/article/view/328
    Google Scholar Ozmen et al., 2021 Ozmen H.A., Isik S., Ersoy C. A hardware and
    environment-agnostic smart home architecture with containerized on-the-fly service
    offloading Computers & Electrical Engineering, 92 (2021), Article 107090, 10.1016/J.COMPELECENG.2021.107090
    View PDFView articleView in ScopusGoogle Scholar Pandey et al., 2023 Pandey K.K.,
    Kumbhar C., Parhi D.R., Mathivanan S.K., Jayagopal P., Haque A., et al. Trajectory
    planning and collision control of a mobile robot: A penalty-based PSO approach
    Mathematical Problems in Engineering, 2023 (2023) Google Scholar Pandya et al.,
    2023 Pandya S., Srivastava G., Jhaveri R., Babu M.R., Bhattacharya S., Maddikunta
    P.K.R., et al. Federated learning for smart cities: A comprehensive survey Sustainable
    Energy Technologies and Assessments, 55 (2023), Article 102987 View PDFView articleView
    in ScopusGoogle Scholar Patchava et al., 2017 Patchava V., Kandala H.B., Babu
    P.R. A smart home automation technique with raspberry Pi using IoT 2015 International
    conference on smart sensors and systems, Institute of Electrical and Electronics
    Engineers Inc. (2017), 10.1109/SMARTSENS.2015.7873584 Google Scholar Patel et
    al., 2017 Patel P., Ali M.I., Sheth A. On using the intelligent edge for IoT analytics
    IEEE Intelligent Systems, 32 (2017), pp. 64-69, 10.1109/MIS.2017.3711653 View
    in ScopusGoogle Scholar Pathirana et al., 2005 Pathirana P.N., Bulusu N., Savkin
    A.V., Jha S. Node localization using mobile robots in delay-tolerant sensor networks
    IEEE Transactions on Mobile Computing, 4 (3) (2005), pp. 285-296 View in ScopusGoogle
    Scholar Pattnaik et al., 2023 Pattnaik M., Badoni M., Tatte Y. PKLMP based control
    technique for improving performance of multifunctional grid integrated PV system
    Electric Power Systems Research, 217 (2023), Article 109096 View PDFView articleView
    in ScopusGoogle Scholar Pawlowski et al., 2020 Pawlowski P., Dabrowski A., Balcerek
    J., Konieczka A., Piniarski K. Visualization techniques to support CCTV operators
    of smart city services Multimedia Tools and Applications, 79 (2020), pp. 21095-21127,
    10.1007/S11042-020-08895-6/TABLES/10 URL: https://link.springer.com/article/10.1007/s11042-020-08895-6
    View in ScopusGoogle Scholar Paz et al., 2016 Paz J.F.D., Bajo J., Rodríguez S.,
    Villarrubia G., Corchado J.M. Intelligent system for lighting control in smart
    cities Information Sciences, 372 (2016), pp. 241-255, 10.1016/J.INS.2016.08.045
    Google Scholar Peña et al., 2016 Peña M., Biscarri F., Guerrero J.I., Monedero
    I., León C. Rule-based system to detect energy efficiency anomalies in smart buildings,
    a data mining approach Expert Systems with Applications, 56 (2016), pp. 242-255,
    10.1016/J.ESWA.2016.03.002 View PDFView articleView in ScopusGoogle Scholar Peng
    et al., 2021 Peng K., Liu P., Tao P., Huang Q. Security-aware computation offloading
    for mobile edge computing-enabled smart city Journal of Cloud Computing, 10 (2021),
    10.1186/S13677-021-00262-6 Google Scholar Petrosino et al., 2023 Petrosino A.,
    Striccoli D., Romanov O., Boggia G., Grieco L.A. Light fidelity for internet of
    things: A survey Optical Switching and Networking (2023), Article 100732 View
    PDFView articleView in ScopusGoogle Scholar Peyman et al., 2021 Peyman M., Copado
    P.J., Tordecilla R.D., Martins L.D.C., Xhafa F., Juan A.A. Edge computing and
    iot analytics for agile optimization in intelligent transportation systems Energies,
    14 (2021), 10.3390/EN14196309 Google Scholar Pirbhulal et al., 2017 Pirbhulal
    S., Zhang H., E Alahi M.E., Ghayvat H., Mukhopadhyay S.C., Zhang Y.-T., et al.
    A novel secure IoT-based smart home automation system using a wireless sensor
    network Sensors, 17 (1) (2017), 10.3390/s17010069 URL: https://www.mdpi.com/1424-8220/17/1/69
    Google Scholar Plociennik et al., 2018 Plociennik M., Drobics M., Zarko I.P.,
    Katsaros K., Soursos S., Gojmerac I. Interoperability and decentralization as
    key technologies for future smart urban environments 2018 European conference
    on networks and communications, Institute of Electrical and Electronics Engineers
    Inc. (2018), pp. 240-244, 10.1109/EUCNC.2018.8442444 View in ScopusGoogle Scholar
    Ponnusamy and Alagarsamy, 2021 Ponnusamy M., Alagarsamy A. Traffic monitoring
    in smart cities using internet of things assisted robotics Materials Today: Proceedings
    (2021) Google Scholar Ponte et al., 2013 Ponte B., Fuente D.D.L., Pino R., Priore
    P. Multiagent system for intelligent water demand management Conference and exhibition
    - 2013 international conference on new concepts in smart cities: Fostering public
    and private alliances, SmartMILE 2013 (2013), 10.1109/SMARTMILE.2013.6708195 Google
    Scholar Popa et al., 2019 Popa D., Pop F., Serbanescu C., Castiglione A. Deep
    learning model for home automation and energy reduction in a smart home environment
    platform Neural Computing and Applications, 31 (5) (2019), pp. 1317-1337 CrossRefView
    in ScopusGoogle Scholar Poza-Lujan et al., 2022 Poza-Lujan J.L., Uribe-Chavert
    P., Sáenz-Peñafiel J.J., Posadas-Yagüe J.L. Processing at the edge: A case study
    with an ultrasound sensor-based embedded smart device Electronics, 11 (2022),
    10.3390/ELECTRONICS11040550 Google Scholar Prabu et al., 2023 Prabu B., Malathy
    R., Taj M.G., Madhan N. Drone networks and monitoring systems in smart cities
    AI-centric smart city ecosystems, CRC Press (2023), pp. 123-148 Google Scholar
    Provoost et al., 2020 Provoost J.C., Kamilaris A., Wismans L.J., van der Drift
    S.J., van Keulen M. Predicting parking occupancy via machine learning in the web
    of things Internet of Things, 12 (2020), Article 100301, 10.1016/J.IOT.2020.100301
    View PDFView articleView in ScopusGoogle Scholar Prudanov et al., 2016 Prudanov
    A., Tkachev S., Golos N., Masek P., Hosek J., Fujdiak R., et al. A trial of yoking-proof
    protocol in RFID-based smart-home environment Distributed computer and communication
    networks, Springer International Publishing, Cham (2016), pp. 25-34 CrossRefView
    in ScopusGoogle Scholar Puri and Nayyar, 2016 Puri V., Nayyar A. Real time smart
    home automation based on PIC microcontroller, bluetooth and android technology
    — IEEE conference publication — IEEE xplore IEEE, New Delhi, India (2016) URL:
    https://ieeexplore.ieee.org/document/7724513 Google Scholar Qadir et al., 2021
    Qadir Z., Ullah F., Munawar H.S., Al-Turjman F. Addressing disasters in smart
    cities through UAVs path planning and 5G communications: A systematic review Computer
    Communications, 168 (2021), pp. 114-135 View PDFView articleView in ScopusGoogle
    Scholar Qi et al., 2023 Qi A., Ma M., Luo Y., Fernandes G., Shi G., Fan J., et
    al. WISe: Wireless intelligent sensing for human-centric applications IEEE Wireless
    Communications, 30 (2023), pp. 106-113, 10.1109/MWC.012.2100656 View in ScopusGoogle
    Scholar Rachid et al., 2019 Rachid A., EL Fadil H., Belhaj F., Gaouzi K., Giri
    F. Lyapunov-based control of single-phase ac–dc power converter for bev charger
    Recent advances in electrical and information technologies for sustainable development:
    proceedings of the 3rd international conference on electrical and information
    technologies, Springer (2019), pp. 115-121 CrossRefView in ScopusGoogle Scholar
    Rachid et al., 2018 Rachid A., El Fadil H., Giri F. Dual stage CC-CV charge method
    for controlling DC-DC power converter in BEV charger 2018 19th IEEE Mediterranean
    electrotechnical conference, IEEE (2018), pp. 74-79 CrossRefView in ScopusGoogle
    Scholar Rachid et al., 2020 Rachid A., El Fadil H., Giri F., Lassioui A. Nonlinear
    output feedback control of V2G single-phase on-board BEV charger Asian Journal
    of Control, 22 (5) (2020), pp. 1848-1859 CrossRefView in ScopusGoogle Scholar
    Rahiman et al., 2023 Rahiman Z., Dhandapani L., Chengalvarayan Natarajan R., Vallikannan
    P., Palanisamy S., Chenniappan S. Power quality conditioners in smart power system
    Artificial Intelligence-based Smart Power Systems (2023), pp. 233-258 CrossRefGoogle
    Scholar Rahman et al., 2023 Rahman M.M., Gemechu E., Oni A.O., Kumar A. The development
    of a techno-economic model for assessment of cost of energy storage for vehicle-to-grid
    applications in a cold climate Energy, 262 (2023), Article 125398 View PDFView
    articleView in ScopusGoogle Scholar Rajasekhar et al., 2021 Rajasekhar J., Basu
    M.T., Sowjanya N. Smart governance of home through IoT Materials Today: Proceedings
    (2021), 10.1016/J.MATPR.2020.11.359 Google Scholar Rajkumar et al., 2020 Rajkumar
    N., Rajendra A.B., Prafulla N., Vinod V. H2M communication for home appliances
    automation using android application Procedia Computer Science, 167 (2020), pp.
    2561-2569, 10.1016/J.PROCS.2020.03.311 View PDFView articleView in ScopusGoogle
    Scholar Ramapatruni et al., 2019 Ramapatruni S., Narayanan S.N., Mittal S., Joshi
    A., Joshi K. Anomaly detection models for smart home security 2019 IEEE 5th intl
    conference on big data security on cloud (BigDataSecurity), IEEE intl conference
    on high performance and smart computing, (HPSC) and IEEE intl conference on intelligent
    data and security (IDS) (2019), pp. 19-24, 10.1109/BigDataSecurity-HPSC-IDS.2019.00015
    View in ScopusGoogle Scholar Rani et al., 2017 Rani P.J., Bakthakumar J., Kumaar
    B.P., Kumaar U.P., Kumar S. Voice controlled home automation system using natural
    language processing (NLP) and internet of things (IoT) 2017 Third international
    conference on science technology engineering management (2017), pp. 368-373, 10.1109/ICONSTEM.2017.8261311
    View in ScopusGoogle Scholar Rani and Sharma, 2023 Rani P., Sharma R. Intelligent
    transportation system for internet of vehicles based vehicular networks for smart
    cities Computers & Electrical Engineering, 105 (2023), Article 108543 View PDFView
    articleView in ScopusGoogle Scholar Rasheeda, 2020 Rasheeda V. Improving home
    automation security integrating device fingerprinting into smart home International
    Journal of Research and Analytical Reviews, 7 (2020) URL: www.ijrar.org858 Google
    Scholar Rawat et al., 2023 Rawat B., Bist A.S., Apriani D., Permadi N.I., Nabila
    E.A. AI based drones for security concerns in smart cities APTISI Transactions
    on Management (ATM), 7 (2) (2023), pp. 125-130 CrossRefView in ScopusGoogle Scholar
    Rego et al., 2021 Rego A., Ramírez P.L.G., Jimenez J.M., Lloret J. Artificial
    intelligent system for multimedia services in smart home environments Cluster
    Computing (2021), pp. 1-21, 10.1007/S10586-021-03350-Z/FIGURES/15 URL: https://link.springer.com/article/10.1007/s10586-021-03350-z
    Google Scholar Rivera et al., 2020 Rivera R., Amorim M., Reis J. Robotic services
    in smart cities: An exploratory literature review 2020 15th Iberian conference
    on information systems and technologies, IEEE (2020), pp. 1-7 CrossRefGoogle Scholar
    Rolim et al., 2016 Rolim C.O., Rossetto A.G., Leithardt V.R., Borges G.A., Geyer
    C.F., dos Santos T.F., et al. Situation awareness and computational intelligence
    in opportunistic networks to support the data transmission of urban sensing applications
    Computer Networks, 111 (2016), pp. 55-70, 10.1016/J.COMNET.2016.07.014 View PDFView
    articleView in ScopusGoogle Scholar Routray et al., 2021 Routray S.K., Sharmila
    K.P., Akanskha E., Ghosh A.D., Sharma L., Pappa M. Narrowb and IoT (nbIoT) for
    smart cities Proceedings of the 3rd international conference on intelligent communication
    technologies and virtual mobile networks, Institute of Electrical and Electronics
    Engineers Inc. (2021), pp. 393-398, 10.1109/ICICV50876.2021.9388513 View in ScopusGoogle
    Scholar Sajjad et al., 2020 Sajjad M., Nasir M., Muhammad K., Khan S., Jan Z.,
    Sangaiah A.K., et al. Raspberry Pi assisted face recognition framework for enhanced
    law-enforcement services in smart cities Future Generation Computer Systems, 108
    (2020), pp. 995-1007, 10.1016/J.FUTURE.2017.11.013 View PDFView articleView in
    ScopusGoogle Scholar Salma et al., 2021 Salma M., Saeed M., Rahim R.U., Khan M.G.,
    Zulfiqar A., Bhatti M.T. Development of ANPR framework for Pakistani vehicle number
    plates using object detection and OCR Complexity, 2021 (2021), 10.1155/2021/5597337
    Google Scholar Sanchez-García et al., 2022 Sanchez-García J., Rodríguez-Aguilar
    R., Marmolejo-Saucedo J.A. Electric vehicles as distributed micro generation using
    smart grid for decision making: Brief literature review Lecture Notes in Networks
    and Systems, 371 (2022), pp. 981-991, 10.1007/978-3-030-93247-3_93 View in ScopusGoogle
    Scholar Sani et al., 2022 Sani A.S., Bertino E., Yuan D., Meng K., Dong Z.Y. SPrivAD:
    A secure and privacy-preserving mutually dependent authentication and data access
    scheme for smart communities Computers & Security, 115 (2022), Article 102610,
    10.1016/J.COSE.2022.102610 View PDFView articleView in ScopusGoogle Scholar Saradopoulos
    et al., 2022 Saradopoulos I., Potamitis I., Ntalampiras S., Konstantaras A.I.,
    Antonidakis E.N. Edge computing for vision-based, urban-insects traps in the context
    of smart cities Sensors, 22 (2022), p. 2006, 10.3390/S22052006 URL: https://www.mdpi.com/1424-8220/22/5/2006/htm,
    https://www.mdpi.com/1424-8220/22/5/2006 View in ScopusGoogle Scholar Sarangi
    et al., 2022 Sarangi D., Pal M.K., Prusty S., Chen Q. Smart city E-governance
    through intelligent ICT framework International Journal of Information Systems
    in the Service Sector, 14 (2022), 10.4018/IJISSS.290543 Google Scholar Sayed et
    al., 2021 Sayed E.M., Elamary N.H., Swief R.A. Optimal sizing and placement of
    distributed generation (DG) using particle swarm optimization Journal of Physics:
    Conference Series, 2128 (2021), 10.1088/1742-6596/2128/1/012023 Google Scholar
    Schneps-Schneppe et al., 2012 Schneps-Schneppe M., Maximenko A., Namiot D., Malov
    D. Wired smart home: Energy metering, security, and emergency issues International
    congress on ultra modern telecommunications and control systems and workshops
    (2012), pp. 405-410, 10.1109/ICUMT.2012.6459700 View in ScopusGoogle Scholar Seddik
    et al., 2022 Seddik A., Maleh Y., Banby G.M.E., Khalaf A.A., El-Samie F.E.A.,
    Gupta B.B., et al. AI-enabled digital forgery analysis and crucial interactions
    monitoring in smart communities Technological Forecasting and Social Change, 177
    (2022), Article 121555, 10.1016/J.TECHFORE.2022.121555 Google Scholar Shafiullah
    et al., 2023 Shafiullah M., Rahman S., Imteyaz B., Aroua M.K., Hossain M.I., Rahman
    S.M. Review of smart city energy modeling in Southeast Asia Smart Cities, 6 (1)
    (2023), pp. 72-99 View in ScopusGoogle Scholar Shahbazi et al., 2021 Shahbazi
    Z., Byun Y.-C., Kwak H.-Y. Smart home gateway based on integration of deep reinforcement
    learning and blockchain framework Processes, 9 (9) (2021), 10.3390/pr9091593 URL:
    https://www.mdpi.com/2227-9717/9/9/1593 Google Scholar Shapsough et al., 2020
    Shapsough S., Takrouri M., Dhaouadi R., Zualkernan I. An IoT-based remote IV tracing
    system for analysis of city-wide solar power facilities Sustainable Cities and
    Society, 57 (2020), 10.1016/J.SCS.2020.102041 Google Scholar ShariqSuhail et al.,
    2016 ShariqSuhail M., ViswanathaReddy G., Rambabu G., DharmaSavarni C.V.R., Mittal
    V.K. Multi-functional secured smart home 2016 International conference on advances
    in computing, communications and informatics (2016), pp. 2629-2634, 10.1109/ICACCI.2016.7732455
    View in ScopusGoogle Scholar Shingala and Patel, 2017 Shingala K., Patel J. Automatic
    home appliances and security of smart home with RFID, SMS, email and real time
    algorithm based on IOT International Research Journal of Engineering and Technology
    (IRJET) (2017) Google Scholar Silva et al., 2022 Silva C., Faria P., Vale Z. Managing
    smart city power network by shifting electricity consumers demand Lecture Notes
    in Networks and Systems, 253 (2022), pp. 81-91, 10.1007/978-3-030-78901-5_8 View
    in ScopusGoogle Scholar Silva et al., 2018 Silva B.N., Khan M., Han K. Towards
    sustainable smart cities: A review of trends, architectures, components, and open
    challenges in smart cities Sustainable Cities and Society, 38 (2018), pp. 697-713,
    10.1016/J.SCS.2018.01.053 View PDFView articleView in ScopusGoogle Scholar Simões
    et al., 2022 Simões M.G., Farret F.A., Khajeh H., Shahparasti M., Laaksonen H.
    Future renewable energy communities based flexible power systems Applied Sciences,
    12 (1) (2022), p. 121 CrossRefView in ScopusGoogle Scholar Soliman et al., 2017
    Soliman M.S., Alahmadi A.A., Maash A.A., Elhabib M.O. Design and implementation
    of a real-time smart home automation system based on arduino microcontroller kit
    and LabVIEW platform International Journal of Applied Engineering Research, 12
    (2017), pp. 7259-7264 URL: http://www.ripublication.com Google Scholar Sonar and
    Deshpande, 2019 Sonar S.P., Deshpande A. Energy meter consumption monitoring and
    management using nodemcu and MQTT protocol The International Journal of Analytical
    and Experimental Modal Analysis, 11 (2019) Google Scholar Song and Wu, 2022 Song
    C., Wu X. Smart city + IoT standardization application practice model and realization
    of key technologies Computational Intelligence and Neuroscience, 2022 (2022),
    pp. 1-11, 10.1155/2022/8070939 View in ScopusGoogle Scholar Studley and Little,
    2021 Studley M.E., Little H. Robots in smart cities How smart is your city? Technological
    innovation, ethics and inclusiveness, Springer (2021), pp. 75-88 CrossRefView
    in ScopusGoogle Scholar Su et al., 2019 Su Z., Wang Y., Xu Q., Fei M., Tian Y.C.,
    Zhang N. A secure charging scheme for electric vehicles with smart communities
    in energy blockchain IEEE Internet of Things Journal, 6 (2019), pp. 4601-4613,
    10.1109/JIOT.2018.2869297 View in ScopusGoogle Scholar Surajudeen-Bakinde and
    Isiwekpeni, 2016 Surajudeen-Bakinde N., Isiwekpeni O.H. Implementation of a cloud-based
    home automation system Centrepoint Journal, 22 (2016) URL: www.unilorin.edu.ng/centrepoint
    Google Scholar Tang et al., 2017 Tang S., Kalavally V., Ng K.Y., Parkkinen J.
    Development of a prototype smart home intelligent lighting control architecture
    using sensors onboard a mobile computing system Energy and Buildings, 138 (2017),
    pp. 368-376, 10.1016/J.ENBUILD.2016.12.069 View PDFView articleView in ScopusGoogle
    Scholar Teslyuk et al., 2021 Teslyuk V., Kazarian A., Kryvinska N., Tsmots I.
    Optimal artificial neural network type selection method for usage in smart house
    systems Sensors, 21 (2021), 10.3390/s21010047 Google Scholar Thakkar and Lohiya,
    2021 Thakkar A., Lohiya R. A review on machine learning and deep learning perspectives
    of IDS for IoT: Recent updates, security issues, and challenges Archives of Computational
    Methods in Engineering, 28 (2021), pp. 3211-3243, 10.1007/S11831-020-09496-0/TABLES/5
    URL: https://link.springer.com/article/10.1007/s11831-020-09496-0 View in ScopusGoogle
    Scholar Thilakarathne and Madhuka Priyashan, 2021 Thilakarathne N.N., Madhuka
    Priyashan W. An overview of security and privacy in smart cities IoT and IoE Driven
    Smart Cities (2021), pp. 21-44 Google Scholar Tushar et al., 2023 Tushar S.R.,
    Alam M.F.B., Bari A.M., Karmaker C.L. Assessing the challenges to medical waste
    management during the COVID-19 pandemic: Implications for the environmental sustainability
    in the emerging economies Socio-Economic Planning Sciences (2023), Article 101513
    View PDFView articleView in ScopusGoogle Scholar Uppal et al., 2023 Uppal M.,
    Gupta D., Mahmoud A., Elmagzoub M., Sulaiman A., Reshan M.S.A., et al. Fault prediction
    recommender model for IoT enabled sensors based workplace Sustainability, 15 (2)
    (2023), p. 1060 CrossRefView in ScopusGoogle Scholar VasudhaaC.S. and Professor,
    2021 VasudhaaC.S. A., Professor A. Hand gesture based home automation system for
    physically challenged humans International Research Journal of Engineering and
    Technology (IRJET), 7 (2021) URL: http://bulletinmonumental.com/ Google Scholar
    Venkatraman et al., 2021 Venkatraman S., Overmars A., Thong M. Smart home automation—Use
    cases of a secure and integrated voice-control system Systems, 9 (4) (2021), 10.3390/systems9040077
    URL: https://www.mdpi.com/2079-8954/9/4/77 Google Scholar Volety and Geethanjali,
    2022 Volety R., Geethanjali P. Smart home automation using wearable technology
    Wearable/Personal Monitoring Devices Present to Future (2022), pp. 259-279, 10.1007/978-981-16-5324-7_11
    URL: https://link.springer.com/chapter/10.1007/978-981-16-5324-7%5F11 Google Scholar
    Vujović and Maksimović, 2015 Vujović V., Maksimović M. Raspberry Pi as a sensor
    web node for home automation Computers & Electrical Engineering, 44 (2015), pp.
    153-171, 10.1016/J.COMPELECENG.2015.01.019 View PDFView articleView in ScopusGoogle
    Scholar Wadhwani et al., 2018 Wadhwani S., Singh U., Singh P., Dwivedi S. Smart
    home automation and security system using arduino and IOT International Research
    Journal of Engineering and Technology, 5 (2018) URL: www.irjet.net Google Scholar
    Wahyuni et al., 2021 Wahyuni R., Rickyta A., Rahmalisa U., Irawan Y. Home security
    alarm using wemos D1 and HC-sr501 sensor based telegram notification Journal of
    Robotics and Control (JRC), 2 (2021), pp. 200-204, 10.18196/JRC.2378 URL: https://journal.umy.ac.id/index.php/jrc/article/view/10013
    View in ScopusGoogle Scholar Wan et al., 2017 Wan S., Lu J., Fan P., Letaief K.B.
    To smart city: Public safety network design for emergency IEEE Access, 6 (2017),
    pp. 1451-1460, 10.1109/ACCESS.2017.2779137 View in ScopusGoogle Scholar Wang,
    Han, et al., 2023 Wang X., Han Q., Yin Y., Ma H. Energy-efficient data transmission
    with proportional rate fairness for NANs of smart grid communication network (2023)
    Google Scholar Wang, He, et al., 2023 Wang W., He F., Li Y., Tang S., Li X., Xia
    J., et al. Data information processing of traffic digital twins in smart cities
    using edge intelligent federation learning Information Processing & Management,
    60 (2) (2023), Article 103171 View PDFView articleView in ScopusGoogle Scholar
    Wu et al., 2022 Wu H., Li L., Liu Y., Wu X. Vehicle-based secure location clustering
    for IoT-equipped building and facility management in smart city Building and Environment,
    214 (2022), Article 108937, 10.1016/J.BUILDENV.2022.108937 URL: https://linkinghub.elsevier.com/retrieve/pii/S0360132322001792
    View PDFView articleView in ScopusGoogle Scholar Xidias et al., 2023 Xidias E.K.,
    Panagiotopoulos I.E., Zacharia P.T. An intelligent management system for relocating
    semi-autonomous shared vehicles Transportation Planning and Technology (2023),
    pp. 1-26 Google Scholar Xin et al., 2022 Xin Q., Alazab M., Díaz V.G., Montenegro-Marin
    C.E., Crespo R.G. A deep learning architecture for power management in smart cities
    Energy Reports, 8 (2022), pp. 1568-1577, 10.1016/J.EGYR.2021.12.053 View PDFView
    articleView in ScopusGoogle Scholar Xu et al., 2022 Xu Z., Luo M., Vijayakumar
    P., Peng C., Wang L. Efficient certificateless designated verifier proxy signature
    scheme using UAV network for sustainable smart city Sustainable Cities and Society,
    80 (2022), Article 103771, 10.1016/J.SCS.2022.103771 URL: https://linkinghub.elsevier.com/retrieve/pii/S2210670722001019
    View PDFView articleView in ScopusGoogle Scholar Yang et al., 2014 Yang C., Yuan
    B., Tian Y., Feng Z., Mao W. A smart home architecture based on resource name
    service — IEEE conference publication — IEEE Xplore IEEE 17th international conference
    on computational science and engineering (2014), 10.1109/CSE.2014.351 Google Scholar
    Yaqoob et al., 2023 Yaqoob I., Salah K., Jayaraman R., Omar M. Metaverse applications
    in smart cities: Enabling technologies, opportunities, challenges, and future
    directions Internet of Things, 23 (2023), Article 100884, 10.1016/J.IOT.2023.100884
    View PDFView articleView in ScopusGoogle Scholar Ye and Huang, 2011 Ye X., Huang
    J. A framework for cloud-based smart home Proceedings of 2011 international conference
    on computer science and network technology, vol. 2 (2011), pp. 894-897, 10.1109/ICCSNT.2011.6182105
    View in ScopusGoogle Scholar Yin et al., 2015 Yin C.T., Xiong Z., Chen H., Wang
    J.Y., Cooper D., David B. A literature survey on smart cities Science China Information
    Sciences, 58 (10) (2015), pp. 1-18, 10.1007/S11432-015-5397-4 URL: https://link.springer.com/article/10.1007/s11432-015-5397-4
    View in ScopusGoogle Scholar Yu and Lam, 2018 Yu J.J., Lam A.Y. Autonomous vehicle
    logistic system: Joint routing and charging strategy IEEE Transactions on Intelligent
    Transportation Systems, 19 (2018), pp. 2175-2187, 10.1109/TITS.2017.2766682 View
    in ScopusGoogle Scholar Yan et al., 2018 Yuen J.J., et al. A low-cost IoT smart
    home system International Journal of Engineering & Technology, 7 (2018), pp. 3143-3147,
    10.14419/ijet.v7i4.21554 URL: https://www.researchgate.net/publication/329378518
    View in ScopusGoogle Scholar Zaidan and Zaidan, 2020 Zaidan A.A., Zaidan B.B.
    A review on intelligent process for smart home applications based on IoT: coherent
    taxonomy, motivation, open challenges, and recommendations Artificial Intelligence
    Review, 53 (2020), pp. 141-165, 10.1007/s10462-018-9648-9 View in ScopusGoogle
    Scholar Zaman et al., 2021 Zaman M., Islam M.A., Tantawy A., Fung C.J., Abdelwahed
    S. Adaptive control for smart water distribution systems 2021 IEEE international
    smart cities conference, Institute of Electrical and Electronics Engineers Inc.
    (2021), 10.1109/ISC253183.2021.9562812 Google Scholar Zhan et al., 2022 Zhan J.,
    Dong S., Hu W. IoE-supported smart logistics network communication with optimization
    and security Sustainable Energy Technologies and Assessments, 52 (2022), 10.1016/J.SETA.2022.102052
    Google Scholar Zhang, Li, Xiao, and Zhang, 2022 Zhang J., Li Y., Xiao W., Zhang
    Z. Online spatiotemporal modeling for robust and lightweight device-free localization
    in nonstationary environments IEEE Transactions on Industrial Informatics (2022),
    10.1109/TII.2022.3218666 Google Scholar Zhang et al., 2022 Zhang J., Li Y., Xiong
    H., Dou D., Miao C., Zhang D. HandGest: Hierarchical sensing for robust-in-the-air
    handwriting recognition with commodity WiFi devices IEEE Internet of Things Journal,
    9 (2022), pp. 19529-19544, 10.1109/JIOT.2022.3170157 View in ScopusGoogle Scholar
    Zhang et al., 2022 Zhang J., Qu Z., Chen C., Wang H., Zhan Y., Ye B., et al. Edge
    learning: The enabling technology for distributed big data analytics in the edge
    ACM Computing Surveys, 54 (2022), 10.1145/3464419 Google Scholar Zhang and Yan,
    2021 Zhang W., Yan H. A blockchain-based access control scheme for smart home
    Journal of Physics: Conference Series, 1971 (2021), 10.1088/1742-6596/1971/1/012049
    Google Scholar Zhao et al., 2021 Zhao K.Y., Wang X.A., Liu J., Qiao Y., Zhou Y.
    Secure data set operation protocols for outsourced cloud data to protect user
    privacy in smart city Journal of Circuits, Systems, and Computers, 30 (2021),
    10.1142/S0218126621502674 Google Scholar Zhao et al., 2023 Zhao J., Zhu K., Hu
    H., Yu X., Li X., Wang H. Formation control of networked mobile robots with unknown
    reference orientation IEEE/ASME Transactions on Mechatronics (2023) Google Scholar
    Zheng et al., 2022 Zheng Z., Zhou Y., Sun Y., Wang Z., Liu B., Li K. Applications
    of federated learning in smart cities: recent advances, taxonomy, and open challenges
    Connection Science, 34 (1) (2022), pp. 1-28 View in ScopusGoogle Scholar Zhou
    et al., 2022 Zhou F., Li Y., Wang W., Pan C. Integrated energy management of a
    smart community with electric vehicle charging using scenario based stochastic
    model predictive control Energy and Buildings, 260 (2022), 10.1016/J.ENBUILD.2022.111916
    Google Scholar Zhu et al., 2019 Zhu Y., Jia G., Han G., Zhou Z., Guizani M. An
    NB-IoT-based smart trash can system for improved health in smart cities Institute
    of Electrical and Electronics Engineers Inc. (2019), pp. 763-768, 10.1109/IWCMC.2019.8766748
    View in ScopusGoogle Scholar Zhu et al., 2016 Zhu F., Li Z., Chen S., Xiong G.
    Parallel transportation management and control system and its applications in
    building smart cities IEEE Transactions on Intelligent Transportation Systems,
    17 (2016), pp. 1576-1585, 10.1109/TITS.2015.2506156 View in ScopusGoogle Scholar
    Zineb et al., 2022 Zineb B., Siham B., Jean-Philippe L. A predictive and scalable
    architecture based on IoT and fog computing for smart city applications (2022),
    pp. 1071-1081, 10.1007/978-3-030-94191-8_87 URL: https://link.springer.com/10.1007/978-3-030-94191-8%5F87
    View in ScopusGoogle Scholar Zou et al., 2023 Zou L., Munir M.S., Tun Y.K., Hassan
    S.S., Aung P.S., Hong C.S. When hierarchical federated learning meets stochastic
    game: Towards an intelligent UAV charging in urban prosumers IEEE Internet of
    Things Journal (2023) Google Scholar Cited by (3) Smart home energy management
    systems: Research challenges and survey 2024, Alexandria Engineering Journal Show
    abstract Smart Home AI Model (SHAM): Optimizing Switches and Sockets space in
    Residential Building during Planning/Construction through Multilayer Perceptron
    Estimation 2024, Research Square Evolutionary Multi-Objective Feature Selection
    Algorithms on Multiple Smart Sustainable Community Indicator Datasets 2024, Sustainability
    (Switzerland) View Abstract © 2023 Elsevier Ltd. All rights reserved. Recommended
    articles Demand side energy management algorithms integrated with the IoT framework
    in the PV smart grid system Advanced Frequency Regulation Strategies in Renewable-Dominated
    Power Systems, 2024, pp. 255-277 Challa Krishna Rao, …, Franco Fernando Yanine
    Exploiting geospatial data of connectivity and urban infrastructure for efficient
    positioning of emergency detection units in smart cities Computers, Environment
    and Urban Systems, Volume 107, 2024, Article 102054 João Paulo Just Peixoto, …,
    Francisco Vasques View PDF A derived information framework for a dynamic knowledge
    graph and its application to smart cities Future Generation Computer Systems,
    Volume 152, 2024, pp. 112-126 Jiaru Bai, …, Markus Kraft View PDF Show 3 more
    articles Article Metrics Citations Citation Indexes: 1 Captures Readers: 73 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Expert Systems with Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Experts and intelligent systems for smart homes’ Transformation to Sustainable
    Smart Cities: A comprehensive review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Shrestha M.M.
  - Wei L.
  citation_count: '0'
  description: Smart agriculture (SA) based on the framework of precision agriculture
    (PA) is a vital component of sustainable and efficient food production, with nitrogen
    (N) management playing a pivotal role. However, existing agricultural practices
    often suffer from low nitrogen use efficiency (NUE), posing a challenge to SA.
    To tackle this issue, real-time N sensing technologies offer farmers precise and
    timely information about soil N levels, enabling precise N fertilizer application.
    Integrating these technologies with the Internet of Things (IoT) can further augment
    their capabilities, creating a seamless platform for data collection, analysis,
    and decision-making for great opportunities to improve NUE. Nevertheless, the
    adoption of real-time N sensing and IoT integration also presents several challenges,
    including selecting appropriate sensing technologies, effective data mining and
    management, and acquiring specialized knowledge and training. This review paper
    provides a comprehensive analysis of the opportunities and challenges associated
    with real-time N sensing technologies and IoT integration in smart farming. By
    showcasing best practices and innovative solutions, the paper aims to foster widespread
    adoption of SA practices, ultimately elevating the sustainability and productivity
    of agricultural systems.
  doi: 10.1149/1945-7111/ad22d8
  full_citation: '>'
  full_text: '>

    "We value your privacy Clicking the \"Accept All\" button means you are accepting
    analytics and third-party cookies. We use cookies to optimise site functionality
    and give you the best possible experience. To control which cookies are set, click
    \"Customize\". Privacy and Cookies policy Customize Accept All Skip to content
    IOP Science home Accessibility Help Search Journals Books Publishing Support Login
    Journal of The Electrochemical Society Review—Perspectives on the Roles of Real
    time Nitrogen Sensing and IoT Integration in Smart Agriculture Manish Man Shrestha1
    and Lin Wei1 Published 28 February 2024 • © 2024 The Electrochemical Society (\"ECS\").
    Published on behalf of ECS by IOP Publishing Limited Journal of The Electrochemical
    Society, Volume 171, Number 2 Citation Manish Man Shrestha and Lin Wei 2024 J.
    Electrochem. Soc. 171 027526 DOI 10.1149/1945-7111/ad22d8 Download Article PDF
    Figures References Article metrics 50 Total downloads MathJax Turn on MathJax
    Permissions Get permission to re-use this article Share this article Article and
    author information Abstract Smart agriculture (SA) based on the framework of precision
    agriculture (PA) is a vital component of sustainable and efficient food production,
    with nitrogen (N) management playing a pivotal role. However, existing agricultural
    practices often suffer from low nitrogen use efficiency (NUE), posing a challenge
    to SA. To tackle this issue, real-time N sensing technologies offer farmers precise
    and timely information about soil N levels, enabling precise N fertilizer application.
    Integrating these technologies with the Internet of Things (IoT) can further augment
    their capabilities, creating a seamless platform for data collection, analysis,
    and decision-making for great opportunities to improve NUE. Nevertheless, the
    adoption of real-time N sensing and IoT integration also presents several challenges,
    including selecting appropriate sensing technologies, effective data mining and
    management, and acquiring specialized knowledge and training. This review paper
    provides a comprehensive analysis of the opportunities and challenges associated
    with real-time N sensing technologies and IoT integration in smart farming. By
    showcasing best practices and innovative solutions, the paper aims to foster widespread
    adoption of SA practices, ultimately elevating the sustainability and productivity
    of agricultural systems. Export citation and abstract BibTeX RIS Previous article
    in issue Next article in issue Agriculture is one of the largest and most important
    sources of food, materials, and energy to feed the world. Modern precision agriculture
    (PA) aims to efficiently manage agricultural production systems to achieve optimal
    outputs with the highest productivity by controlling the inputs through the 4
    R stewardship: right source, right rate, right time, and right place. The fundament
    of PA is based on obtaining and applying accurate information on biotic and abiotic
    stresses during crop plant growth, such as soil fertility, various pathogens and
    insects, weeds, radiation, salinity, floods, drought, extremes in temperature,
    and so on, to guide farmers making good decisions to use right tools at right
    locations with right intensity at the right time for optimization of agricultural
    production during an overall growth season. PA integrated computer and information
    technologies (CITs) with automatic irrigation systems, robots, remote sensing,
    Global Navigation Satellite System (GNSS), Geographical Information System (GIS),
    Global Positioning System (GPS), yield monitoring, sensors, machine vision, etc
    to timely collect the biotic and abiotic stresses'' information and then digitize
    it to perform data analysis and image processing, making the information readable
    or useable for farmers or other end-users. The geographic three dimensions (3D)
    of the biotic and abiotic stresses can be located by GIS and GPS. This 3D information
    combines with the digitalized images of biotic and abiotic stresses to precisely
    map the stresses'' variations in the fields, providing \"prescription\" maps of
    agricultural practices for implementations of watering, fertilization, spraying
    herbicides and insecticides, harvesting, etc using variable rate technology (VRT).
    These PA prescription maps have been demonstrated to greatly help farmers manage
    crop plant growth; control farming automation systems; improve production efficiency;
    and greatly reduce waste generation and environmental pollution. PA deeply relies
    on information accuracy, reliability, and timing. However, agricultural systems
    are highly complex, dynamic, and vulnerable due to the variability of crop plant
    growth and their biotic and abiotic stresses changing over time as well as the
    differences among different crop species, fields, and regions, particularly, under
    global climate change context. PA may be unable to timely respond to the dynamic
    changes of biotic and abiotic stresses during crop plant growth due to the limited
    accuracy and reliability of the 3D information at the field sites. When any stress
    occurs on the sites, the farmers have to repeatedly rely on heavy machinery systems
    and laborers to achieve the 4 R stewardship during a growing season. High capital
    costs must be invested to initial, perform, and maintain the PA works and equipment.
    PA may significantly reduce the total consumption of water, fertilizers, herbicides,
    and/or insecticides in large fields by applying VRT, but high machinery and labor
    costs may decrease the production profitability while harming the sustainability
    due to soil compaction and unprecise management practices, causing noteworthy
    water evaporation, nutrients loss, and contaminations of herbicides and insecticides
    on the sites. Another limitation of PA is the information accessibility. Because
    of the limited capability and accuracy of GNSS, GPS, remote sensing, image processing,
    data mining, etc, it is still challenging to timely obtain precise information
    on crop growth and field variability, which derives from variations in soil properties
    and topography, either naturally occurring or induced by human management (e.g.,
    compaction, erosion, organic matter depletion) that in turn regulate soil water
    holding capacity, soil, and terrain hydrologic properties, and nutrient availability.
    These issues raise questions about PA development and application. It is necessary
    to explore not only simpler but also cost-effective solutions to improve PA technologies.
    Along with the ongoing computer and information technology (CIT) revolution, a
    new era of agriculture digitalization (also named agriculture 4.0) was emerging
    on the horizon at the beginning of the 21st century. The PA technologies were
    leveraged to a new stage of agriculture 4.0: smart agriculture (SA), which is
    also named smart farming. SA was based on the PA framework to integrate a variety
    of new CITs and smart devices, such as sensors, machine vision, drones, unmanned
    aerial vehicles (UAV), machine learning (ML), internet of things (IoT), artificial
    intelligence (AI), big data, cloud computing, and so on, to build up effective
    and reliable networks to collect and process data and information at real-time
    for optimization of agricultural inputs and outputs to further improve agricultural
    production not only efficiency and cost-effectiveness but also profitability and
    sustainability. The core of SA is to safely obtain and utilize accurate information
    about plants and/or animals and their environments to precisely manage the agricultural
    production systems to maximize their productivity, profitability, and sustainability.
    Nitrogen is one of the most essential nutrients for plant growth. Nitrogen nutrients
    may remain in the forms of ammonia (NH3), ammonium (NH₄⁺), nitrate (NO₃⁻), and
    nitrite (NO2⁻), but the Nitrogen nutrients (simply named N) in soil exist in three
    general forms: organic N compounds, NH₄⁺ ions, and NO₃⁻ ions for maintaining the
    soil fertility and being uptake by most crop plants. Generally, natural N in soil
    is insufficient to meet the demands of plant growth, typically, a limited factor
    for increasing crop yield. Current crop productions are heavily relied on additional
    N fertilizers. Many farmers must apply multiple sources and/or multiple times
    of N fertilizers in a growth season to achieve their yield goals. The N fertilizer
    sources may include livestock manures, biomass wastes'' composts, synthetic chemical
    N fertilizers like Urea, Ammonium Nitrate, Ammonium Sulfate, etc. Approximately
    13 million tons of N fertilizers are annually consumed in crop production in the
    U.S. 1 The global N fertilizer market is projected to be about $140 billion by
    2026. 2 Unfortunately, the N use efficiency (NUE) is less than 50% of the applied
    N. Because of the low NUE, overuse of N fertilizers is very common and has resulted
    in higher production costs and severe environmental concerns. About 50% of applied
    N fertilizers were wasted due to surface runoff and underground leaching into
    water systems, and volatilization into air. Half of the lakes are eutrophic and
    65% of estuaries and coastal water are severely degraded in the U.S. due to excessive
    N and other nutrients escaping from agricultural production. 3–7 The resulting
    algae blooming, water hypoxia, fish death, soil degradation, and ecosystem changes
    have raised questions about the sustainability of current crop production systems
    and practices. There is an eager need to find effective solutions to detect N
    availability, monitor N application, and N uptake by crop plants in real time
    to improve NUE in crop production. Many efforts were made on N sensing and mapping
    to reduce the use of N fertilizers and improve NUE to increase crop yields while
    minimizing environmental impacts in the past PA. 8,9 The Food and Agriculture
    Organization (FAO) of the United Nations reported that PA technologies may increase
    crop yields by up to 30% while reducing water usage by 67%. 10 USDA-ARS also reported
    that PA can reduce the net N leaching losses by 74%. 11 The integration of IoT
    and PA technologies can further enhance agricultural efficiency in modern SA.
    Ahmed et al. 12 found that it is feasible to effectively monitor N in crop growth
    on sites in real-time using IoT and wireless networks. Singh et al. 13 stated
    that IoT technologies may promote the sustainability of agricultural production.
    Different N sensing technologies such as optical and electrochemical sensors were
    developed, but some limitations still remain. IoT platforms have evolved rapidly
    to provide new opportunities for real-time N data collection and decision-making
    in developing agriculture 4.0. New opportunities for integration of N sensing
    in real time and IoT are coming while challenges also remain. These challenges
    include sensor accuracy and reliability, data integration and analysis, and user
    acceptance and adoption. Therefore, this review paper aims to overview the state
    of the art for different types of existing N sensors; analyze their advantages
    and limitations; and explore the potential to integrate with IoT in smart farming
    for N sensing in real time for crop management and decision-making. Meanwhile,
    the key challenges and opportunities of integrating N sensing with IoT were also
    investigated for future research and development. Review Methods In this literature
    review, a systematic approach is adopted to explore the integration of N sensing
    with IoT systems, involving three main steps: sensor, electronic system, and IoT
    network. The review begins with an examination of N sensors to understand the
    foundation of this integration process. The principles and technologies underlying
    N sensors are reviewed, laying the groundwork for comprehending their significance
    in various applications. This initial section enables readers to grasp the strengths
    and limitations of different N sensor models available in the literature, empowering
    them to make informed decisions in choosing the most suitable sensor for specific
    IoT-based N sensing applications. Subsequently, the electronic system designed
    to interface with N sensors and facilitate seamless integration into IoT networks
    is explored. Understanding the role of electronic systems in the N sensing process
    is paramount to harnessing the full potential of N sensors within an IoT ecosystem.
    Various circuit design approaches and computing technologies are examined to shed
    light on the critical factors that can enhance the accuracy and efficiency of
    N sensing systems. Moving forward, available IoT network options tailored for
    N sensing are investigated. The evaluation of different communication protocols,
    such as Hypertext Transfer Protocol (HTTP), and Message Queuing Telemetry Transport
    (MQTT), enables discerning the most appropriate network architecture for deploying
    N sensors across diverse scenarios. This comprehensive analysis empowers researchers,
    engineers, and environmentalists alike to make informed decisions when integrating
    N sensing into IoT applications. Table I. Optical sensors. Sensor Sensor types
    Measuring range Sensitivity Application Ratiometric fluorescence method 41 Fluorescent
    0.1–1 mM 0.089 mM Fast and easy fabrication of the sensor, suitable for on-site
    applications Immunochromatography Paper-Based Sensor 42 Fluorescent 1–100 ng ml−1
    0.121 ng ml−1 Nitrate detection in water samples Ratiometric fluorescence method
    43 Fluorescent 1–100 ng 2.2 fg Nitrite detection, easy fabrication, fast Neutral
    Red Functionalized SH-β-Cyclodextrin @Au Nanoparticles 44 Fluorescent 0.0–0.9
    μg ml−1 4.25 × 10−3 μg mL−1 Nitrite detection in aqueous medium Derivatized silver
    nanoparticles 45 Fluorescent 6.4 × 10−4 to 3.0 μg ml−1 1.8 × 10−4 μg mL−1 Nitrate
    detection in aqueous medium Pani Modied Ag NP 46 Fluorescent 0–14 mM 8.9 × 10−4
    M Nitrate detection in crop Crop Circle 47–49 Reflectance Not specified Not specified
    Remote sensing tool, Nutrient and fertilizer studies GreenSeekerTM 50,51 Reflectance
    Not specified Not specified Handheld, targeted nutrient management decisions FieldScout
    52–54 Reflectance Not specified Not specified Handheld, Nutrient mapping SPAD-502
    21,24,55–57 Chlorophyll 0–80 SPAD units Not specified Non-destructive measurement
    of leaf chlorophyll concentrations atLeaf CHL Plus 58,59 Chlorophyll 0–60 SPAD
    units Not specified Assessing and improving plant N management Low-cost chlorophyll
    meter 57 Chlorophyll Not specified Not specified Self-cultivation, small-scale
    farming, and crop research Figure 1 illustrates the integration process, showcasing
    how data from the N sensor undergoes processing through the electronic system
    and is subsequently transmitted via the IoT network to reach remote users, enabling
    real-time monitoring and data analysis. Zoom In Zoom Out Reset image size Figure
    1. Block diagram illustrating the integration flow of the N Sensing and IoT system.
    Download figure: Standard image High-resolution image Table II. Electrochemical
    sensors. Sensor Electrochemical technique Limit of detection (LOD) Linear range
    Material Application CdS NRs-SPE 116 Voltametric 2.3 μM 0.05 to 5 mM Nitrate Nitrate
    sensing in soil UiO-67/GCE 117 Voltametric 2 μM 6.67 × 10–6∼2.00 × 10–4 M Nitrate
    Atmospheric PM 2.5 samples CG/Au@Ag 118 Voltametric 0.15 μM 2.5–1250 μM Nitrite
    Water resource CF@CuNiAl LDH 119 Amperometric 0.02 nM 5 nM−2.4 mM Nitrate Detection
    of nitrite oxidizing bacteria (NOB) Cu2ZnSnS4 nanosheets 120 Amperometric 30 μM
    0.1 mM and 1.0 mM Ammonia-ammonium ions Analyze wastewater ERGO-MWCNT SPCE 121
    Voltametric 3.3 μM 10 to 750 μM Nitrate Analyze tap water MnO2/PANI/GCE 122 Voltametric
    4.38 μM 100–10000 μM Nitrite Inorganic environmental pollutants MnO2/PANI/GCE
    122 Amperometric 1.08 μM 19.98–732.17 μM nitrite Inorganic environmental pollutants
    UME/MWCNT 123 Voltametric/ Amperometric 8.69 μM 10 μM to 1 mM Ammonia Drinking
    water Pd-Co/rGO 124 Voltametric 7.7 nM 20∼100 μM Nitrite Detection of nitrite
    in pure water polyoxometalate/rGO/Pani 125 Voltametric 10.71 μM 25–7500 μM Nitrite
    Detection of nitrite in food and environmental samples Cu-electrodeposited gold
    electrode 126 Voltametric 0.52 μM 20–800 μM Nitrate Nitrate ion in acidic medium
    CPO-ILBMB/rGO-Au NPs/GCE 127 Voltametric 0.25 μmol·L−1 2.0−2500 μmol·L−1 Nitrite
    Analyze water CPO-ILBMB/rGO-Au NPs/GCE 127 Amperometric 0.049 μmol·L−1 0.5–300
    μmol·L−1 Nitrite Analyze water CuxOGCS-BPPG 128 Voltametric 2.038 10–100 μM Nitrite
    Analyze nitrite in soil and fruit juice samples CuxOGCS-BPPG 128 Voltametric 1.032
    10–100 μM Nitrate Analyze nitrate in soil and fruit juice samples Co3O4 NPs/SPE
    129 Voltametric, Potentiometric 1.04 × 10−8 M 10−7–10−2 M Nitrate Aquaponic Systems
    UIAE/MEMS 88 Impedimetric Not Specified 0.15 mg/ l∼ 2.0 mg/l Ammonia Analyze water
    Electronic Tongue 130 Impedimetric 0.087 ± 0.004 0.1 to 1.0 mg ml−1 N Analyze
    soil Au/FePc(tBu)4/GCE 131 Amperometric 0.35 μM 2–120 μM Nitrite Meat product
    SiO2/Al2O3/C 132 Amperometric 0.01 μM 0.2–280 μM Nitrite Food product Zn(II) complexes
    90 Potentiometric 10−5 M 5.0 × 10−5 to 1.0 × 10−1 M Nitrate Analyze water GO/PEDOT:PSS-modified
    GCE 107 Voltametric/Impedimetric 0.5 μM 1–200 μM Nitrite Analyze water Beyond
    the IoT network review, the challenges, and opportunities inherent in N sensing
    and IoT integration are addressed. Potential roadblocks and areas for improvement
    are identified, paving the way for future advancements in this domain. Finally,
    the review is concluded by summarizing the key findings and insights obtained
    throughout the study, reinforcing the significance of the integrated N sensing
    and IoT paradigm in addressing environmental and agricultural challenges. N Sensing
    Principles and Technologies There are several types of N sensing technologies
    that can be used for SA, including optical sensors and electrochemical sensors.
    Each of these technologies has its own strengths and limitations and may be more
    suitable for different applications depending on factors such as cost, accuracy,
    and ease of use. Optical sensor Optical sensors are one of the most widely used
    N sensing technologies in SA. These sensors use light to measure the reflectance
    or absorbance of leaves or soil, which can provide information on chlorophyll
    content, N content, and other plant parameters. Optical sensors are relatively
    inexpensive and easy to use and can provide rapid and non-destructive measurements.
    However, they may be affected by environmental factors such as lighting conditions
    and leaf moisture and may not be as accurate as other types of sensors. As shown
    in Fig. 2, Optical sensors can be categorized into three types: chlorophyll sensors,
    reflectance sensors, and fluorescence sensors. Zoom In Zoom Out Reset image size
    Figure 2. Types of optical sensors. Download figure: Standard image High-resolution
    image Chlorophyll sensor A chlorophyll sensor for N is a proximal sensing technology
    that can detect the N needs of crops based on chlorophyll content. Chlorophyll
    is an essential element in photosynthetic protein synthesis and is related to
    the N content of crops. 14 A chlorophyll sensor can be used to assess crop N status
    and optimize N fertilization in various crops, including wheat, maize, and rice.
    15 To measure the chlorophyll content in plant leaves, a chlorophyll meter is
    commonly used. The chlorophyll meters estimate the relative leaf chlorophyll content
    by measuring the absorbance and transmittance of red and near-infrared (NIR) radiation
    by the leaf. 16,17 Transmittance-based chlorophyll meters measure a dimensionless
    value that strongly correlates with actual chlorophyll content, while fluorescence-based
    chlorophyll meters measure the chlorophyll fluorescence emission ratio of red
    and far-red radiation. 18–20 However, there are several commercially available
    chlorophyll meters that differ in their measuring principle, wavelengths used,
    measurement units, and calibration equations, which makes the comparison difficult.
    21–23 Nonetheless, numerous studies have reported strong relationships between
    chlorophyll meter measurements and extractable chlorophyll concentration in the
    form of curvilinear relationships, with a degree of saturation of measurements
    at high chlorophyll contents. 24,25 Standard chlorophyll content versus chlorophyll
    meter relationships have been reported for several different species. 21,23 Figure
    3 demonstrates the working of a transmittance-based chlorophyll sensor. This system
    employs a LED emitting red and near-infrared (NIR) light from the top, which passes
    through the leaf, and a light detector (photo diode) placed below the leaf to
    absorb the transmitted light. Both the LED and photo diode are connected to an
    electronic circuit, which is then integrated with a display system. The figure
    showcases the components and flow of data in the chlorophyll sensor system, enabling
    real-time monitoring and data analysis for precise N assessment in crops. Zoom
    In Zoom Out Reset image size Figure 3. Illustration of a transmittance-based chlorophyll
    sensor system. Download figure: Standard image High-resolution image In practical
    agricultural settings, chlorophyll sensors have proven to be highly beneficial.
    For instance, in corn cultivation, farmers use chlorophyll meters to make informed
    decisions about nitrogen application. These devices offer a quick and reliable
    method to assess the nitrogen content of plants, allowing for precise nitrogen
    management. This not only optimizes crop health and yield but also reduces the
    environmental impact by preventing over-fertilization. 26 By incorporating these
    sensors, farmers can significantly cut down on nitrogen application costs, making
    the practice both economically and environmentally sustainable. Figure 4 demonstrates
    a chlorophyll meter being employed in a corn field, a tool pivotal in making accurate
    in-season nitrogen recommendations. This image illustrates the practical use of
    the device, highlighting its role in guiding nitrogen application to ensure optimal
    plant growth and minimize waste. The chlorophyll meter''s ability to provide real-time,
    actionable data exemplifies the advancements in precision agriculture, aiding
    farmers in making informed decisions that benefit both their yields and the environment.
    Zoom In Zoom Out Reset image size Figure 4. Chlorophyll meter in use. Photo by
    Ricardo Costa, MSU Extension. Download figure: Standard image High-resolution
    image Reflectance sensor Over the past two decades, proximal reflectance sensors
    have been extensively studied to aid in crop N management. 17,27,28 These sensors
    determine crop N status by measuring specific wavelengths of radiation absorbed
    and reflected by the crop foliage. 29–31 Reflectance sensors are categorized as
    passive or active depending on whether they have their own light source. Passive
    sensors have two sets of photodetectors to measure incident and reflected radiation
    while active sensors have their own light source and can distinguish reflected
    radiation from their own source from that of ambient radiation. 32 The wavelengths
    chosen for N assessment correspond to four narrow bands in the visible and NIR
    portions of the spectrum that are sensitive to changes in chlorophyll status,
    foliage density, and biomass that accompany N deficiency. The Normalized Difference
    Vegetation Index (NDVI) is a widely used spectral vegetation index that combines
    reflectance from multiple wavelengths. 33 Reflectance sensors can be used in different
    irradiance conditions and are often mounted on tractors and connected to GPS systems
    for field mapping, making them well-suited for automatic variable rate application
    of mineral fertilizer. 34 Figure 5 presents a comparative demonstration of active
    and passive reflectance sensor systems. In Fig. 4a, the active system utilizes
    a light source to emit radiation onto the plant canopy, and the reflected radiation
    is captured by a light detector. Both the light source and light detector are
    connected to an electronic circuit, which computes the vegetation index by analyzing
    the transmitted and reflected radiation. On the other hand, Fig. 4b illustrates
    the passive sensor system, employing two light detectors - one to capture incident
    radiation and the other to measure reflected radiation. The electronic circuit,
    linked to the detectors, computes the vegetation index based on the differentiation
    of the two captured radiations. The calculated index is then displayed on a display
    system and can be further processed for real-time monitoring and data analysis,
    enabling precise N assessment in crops. Zoom In Zoom Out Reset image size Figure
    5. Illustration of (a) active reflectance sensor system and (b) passive reflectance
    sensor system. Download figure: Standard image High-resolution image Reflectance
    sensors have made significant strides in agricultural applications, as evidenced
    by a study conducted by Arshad Ashraf et al. 35 at the National Agricultural Research
    Centre (NARC) in the Pothwar region. The study utilized Green Seeker technology
    to monitor the growth of main crops like wheat, rice, and oats. The Green Seeker,
    an active reflectance sensor, was employed to acquire NDVI and Red-NIR ratios
    of crops at various growth stages. This technology provided crucial insights into
    the crop''s health and vigor, enabling precise monitoring and assessment of crop
    physiological status. The NDVI values recorded for wheat ranged between 0.1 −
    0.88, illustrating the technology''s capability to capture the dynamic nature
    of crop growth and health. The study underscores the potential of reflectance
    sensors like the Green Seeker in enhancing crop yield forecasts and establishing
    a repository for future satellite-based crop monitoring. 35 Figure 6 depicts the
    Green Seeker technology in action, capturing the NDVI and Red-NIR ratios of the
    crop cover. The figure illustrates the practical use of the handheld Green Seeker
    instrument in the field, demonstrating its effectiveness in real-time monitoring
    of crop health and vigor. This image showcases the innovative approach to precision
    agriculture, highlighting the instrumental role of reflectance sensors in informed
    decision-making and sustainable farming practices. Zoom In Zoom Out Reset image
    size Figure 6. Green Seeker instrument. Download figure: Standard image High-resolution
    image Fluorescence sensor Fluorescence sensors are a type of sensor that detects
    and measures the intensity of fluorescent light emitted by a sample when excited
    by a particular wavelength of light. They use a fluorescent probe or a fluorescently
    labeled molecule that selectively binds to or interacts with the analyte of interest,
    resulting in changes in the fluorescence intensity that can be correlated with
    the analyte concentration. This fluorescence is closely associated with plant
    photosynthetic activity and can be used to monitor crop N status, even in the
    early growth stages. 36–38 These sensors have numerous applications, including
    the measurement of flavonol content in plants and other biological samples. Flavonols
    are a group of plant secondary metabolites that play important roles in plant
    development and defense against biotic and abiotic stresses. A Fluorescence based
    flavonols method to proximally monitor crop N status is based on estimating relative
    flavonol content from fluorescence measurements. 18 Flavonols are a type of secondary
    metabolite whose content in leaves increases under lower N supply, and the content
    is estimated using the chlorophyll fluorescence screening method by flavonol meters.
    39 Two fluorescence-based flavonol meters are commonly used: the DUALEX, a leaf-clip
    instrument that measures fluorescence on a small diameter section of the leaf,
    and the MULTIPLEX, a handheld proximal sensor that measures at 10 cm from the
    leaf and a surface area of 4 to 8 cm in diameter. 20 The meters measure a dimensionless
    value strongly related to the actual amount of flavonols. The Fig. 7 illustrates
    the functioning of a fluorescence sensor system. This system is comprised of a
    light source and a fluorescence detector. The light source emits light onto the
    leaf''s surface, and the fluorescence detector captures the intensity of the fluorescence
    emitted from the leaf upon the excitation of light. The captured fluorescence
    intensity is then processed by the electronic circuit connected to the detector,
    which quantifies the flavonol content present in the leaf. Subsequently, the calculated
    flavonol content is displayed on the display system, providing a clear representation
    of the leaf''s flavonol levels. Zoom In Zoom Out Reset image size Figure 7. Illustration
    of flourescence sensor system. Download figure: Standard image High-resolution
    image Fluorescence sensors, especially those measuring flavonol content, have
    been instrumental in nondestructive diagnostics of crop nitrogen status, enhancing
    precision agriculture. A notable application is the use of Dualex leaf-clip measurements
    in vineyards to assess the nitrogen nutrition of grapevines. This method, which
    involves measuring chlorophyll and epidermal flavonols, allows for a quantitative
    optical estimation of leaf nitrogen content, offering a substantial leap towards
    precision crop management. The nitrogen balance index (NBI), the ratio of chlorophyll
    to epidermal flavonols, has been identified as an excellent estimator of leaf
    nitrogen content, providing a robust and nondestructive approach to determining
    the optimal nitrogen levels necessary for grapevine health and productivity. 40
    Fig. 8 demonstrates the application of the Dualex leaf-clip sensor on grapevine
    leaves. This image illustrates the practical use of the sensor in a vineyard,
    highlighting its role in assessing the nitrogen content of grapevine leaves nondestructively.
    The ability of the Dualex sensor to provide accurate measurements of chlorophyll
    and flavonol content exemplifies its utility in precision viticulture, aiding
    in the optimization of nitrogen management for enhanced grape quality and yield.
    Zoom In Zoom Out Reset image size Figure 8. Fluorescence sensor. Download figure:
    Standard image High-resolution image Table I provides a comprehensive overview
    of various optical sensors, highlighting their sensor types, measuring ranges,
    sensitivity, and applications in nutrient management. Electrochemical sensors
    Electrochemical sensors are valuable N sensing technology utilized in SA. These
    sensors measure the electrical conductivity of soil or plant tissue, serving as
    a proxy for N content. Offering the advantages of being relatively inexpensive
    and easy to use, electrochemical sensors provide real-time measurements of N levels.
    However, their accuracy may be influenced by environmental factors such as soil
    moisture and temperature, requiring regular calibration. Electrochemical nitrate
    detection employs various sensing methods, including potentiometric, amperometric,
    voltammetric, and impedimetric techniques. These methods convert nitrate ions
    into measurable signals such as impedance, potential difference, or current. Nitrate
    detection can be performed using diverse electrodes like copper, silver, platinum,
    and others, with sensitivity contingent on the material and sensing method. While
    conventional electrochemical cells are widely used for their simplicity, sensitivity,
    and low power consumption, they lack portability. In response, miniature electrochemical
    cells have been developed to continuously monitor nitrate levels in aqueous media,
    60–62 requiring high miniaturization, sensitivity, and reusability. Fig. 9 delineates
    the types of electrochemical sensors, illustrating their classification into different
    categories. Zoom In Zoom Out Reset image size Figure 9. Types of Electrochemical
    Sensor. Download figure: Standard image High-resolution image Most electrochemical
    sensors consist of a working electrode, a reference electrode, and a counter electrode,
    which are used to measure the chemical or biological analyte of interest. The
    working electrode is a crucial component of electrochemical sensors, constructed
    from a material suitable for the specific electrochemical reaction being measured.
    It is often modified to enhance the sensor''s sensitivity and selectivity. 63–68
    The reference electrode serves as a stable reference point for measuring the potential,
    current, or impedance in the electrochemical system. 63,64,67,69–74 It is made
    of a material, such as Ag/AgCl 72,75 or a saturated calomel electrode, that maintains
    a stable potential and is separated from the working electrode by an electrolyte
    solution. The counter electrode enables the application of an input potential
    to the working electrode to complete the circuit and facilitate charge flow. It
    should be made of an inert material like carbon or platinum and be significantly
    larger than the working electrode to avoid current limitations. 63,76 The design
    and construction of the counter electrode are pivotal in ensuring the accuracy
    and reliability of the electrochemical sensor. The counter electrode is designed
    in such a way that it does not participate in the specific chemical reactions
    of interest, but rather acts as an electron sink or source to maintain electrical
    neutrality in the system. Fig. 10 showcases a variety of electrochemical sensors
    as reported in the literature. 85,87,110,114 Zoom In Zoom Out Reset image size
    Figure 10. Electrochemical sensors. Download figure: Standard image High-resolution
    image Planar electromagnetic sensors 77–87 come in three types: mesh, meander,
    and interdigital. The mesh and meander sensors consist of an exciting electrode
    and a sensing electrode, using alternating current to generate a high-frequency
    electromagnetic field, which is detected by the sensing electrode. 77–80 Interdigital
    sensors 78,88,89 function as parallel plate capacitors with positive and negative
    electrodes, and their performance is influenced by the material dielectric properties
    and the electrode and material geometry. Further details on different electrochemical
    detection methods are discussed in the following sub-sections. Potentiometric
    detection Potentiometric systems are used for ion concentration detection by measuring
    potential difference between two half-cells connected by a salt bridge. Researchers
    have improved the selectivity and detection limits of nitrate detection by integrating
    ion-selective electrodes (ISE), which directly determines free-ion concentration
    in water. 90,91 Different materials, including nanobiocomposites, 91 polymeric
    membranes, 92 doped polypyrrole, 90 and trihexyltetradecylphosphonium chloride
    (THTDPIC) 93 have been used to create ISE. An artificial neural network 94 has
    been used to determine nitrate contamination levels, and micro-fabricated polymeric
    sensors have been introduced to reduce the bulkiness of potentiometric sensors.
    84,95 These sensors are small, easy to design, cost-effective, and can be mass-produced.
    Fig. 11 demonstrates the working of potentiometric detection in an electrochemical
    sensor. In potentiometric sensors, 63,64 the working electrode responds to the
    analyte''s activity and accumulates a charge potential relative to the reference
    electrode, generating an electrical signal proportional to the analyte''s concentration.
    The reference electrode, also in potentiometric sensors, 63,64,69 maintains a
    constant potential and measures the potential generated by the working electrode.
    The potential difference between the working and reference electrodes can be determined
    using a voltmeter. Zoom In Zoom Out Reset image size Figure 11. Potentiometric
    detection of electrochemical sensor setup. Download figure: Standard image High-resolution
    image Amperometric detection Amperometry is an electrochemical method that measures
    the current generated from oxidation/reduction reactions at a constant potential
    applied to a sensing electrode. It has been available since 1987 96 as a conventional
    benchtop and boasts high sensitivity, detecting nitrate concentrations ranging
    from 0.1 − 1 mM with minimal interference from similar ions. 97 Researchers have
    also reported on Polypyrrole (PPy)-nanowire modified electrodes, which can detect
    nitrate with a detection limit of 1.52 μM and a sensitivity of 336.28 mA/Mcm2.
    98 It is necessary to design sensing electrode to increase the detection method''s
    sensitivity. Fig. 12 demonstrates the operation of amperometric and voltammetric
    detection in an electrochemical sensor setup. In amperometric sensors, 65,66 the
    working electrode detects the current generated by an electrochemical reaction
    between the analyte and a redox chemical or enzyme. The reference electrode 70–72
    maintains a stable potential, which is utilized to measure the current produced
    by the working electrode. The counter electrode completes the electrical circuit
    during the electrochemical reaction occurring at the working electrode. 63 When
    the target analyte interacts with the working electrode, a redox reaction takes
    place, leading to the transfer of electrons and resulting in a flow of current
    between the working electrode and the counter electrode. Zoom In Zoom Out Reset
    image size Figure 12. Amperometric and voltammetric detection of electrochemical
    sensor setup. Download figure: Standard image High-resolution image Voltammetric
    detection Voltammetry is a widely used electrochemical detection method that measures
    the current generated from oxidation/reduction reaction as a function of the controlled
    potential. Researchers have reported various voltammetric methods to detect nitrate
    in water samples. Bodini et al. 99 used a pyrolytic graphite electrode with electrochemically
    deposited copper and cadmium to detect nitrate with a linear range of 1 μM to
    1 mM. Krista et al. 100 used a system of silver, graphite powder, and methacrylate
    resin electrodes to detect nitrate with a range of up to 31 mg l−1, while Shariar
    et al. 101 used an in-situ copper-based electrode with a low detection limit for
    simultaneous nitrate detection in river water using differential pulse voltammetry
    (DPV). Neuhold et al. 102 and Mareček et al. 103 used a carbon-paste electrode
    with a detection limit of 0.5–60 μg ml−1 to detect nitrate in drinking water,
    and a differential pulse voltammetric method has been reported with a detection
    limit of 2.8 μM for nitrate in natural water. Jang et al. 104 reported a new electrochemical
    sensing platform with self-assembly nanobeads-packed (nBP) hetero-columns. The
    operation of voltammetric detection is depicted in Fig. 8. Voltammetric sensors
    involve the working electrode 65 detecting the current while varying a controlled
    potential. In this setup, the reference electrode 74 maintains a constant potential
    and measures the potential difference between the working electrode and the analyte.
    The counter electrode plays a crucial role in completing the electrical circuit
    during the electrochemical reaction taking place at the working electrode. 63
    Impedimetric detection An impedimetric electrochemical sensor is a type of sensor
    that uses the change in electrical impedance of an electrode to detect the presence
    of an analyte. The impedance of an electrode is a measure of its resistance to
    the flow of an electric current. When an analyte is present, it can interact with
    the electrode and change its impedance. 105,106 The sensor consists of a working
    electrode, a reference electrode, and an auxiliary electrode. The working electrode
    is the electrode that is in contact with the analyte, and the reference electrode
    is the electrode that is used to establish a reference potential. The auxiliary
    electrode is used to complete the electrical circuit. It is one of the most widely
    used method to determine amount of N from the various sensing technologies such
    as modified glassy carbon electrode, 107 Ion-Imprinted sensor based on Copper
    Nanoparticles-Polyniline Matrix, 108 Modified Screen-printed Carbon electrode,
    109 Flexible laser-induced graphene electrodes functionalized by CNT decorated
    by Au nanoparticles, 110 Laser-pyrolyzed paper sensors, 111 and IoT-enabled portable
    sensing system. 112 Fig. 13 illustrates the working of impedimetric detection
    in an electrochemical sensor. Impedance-based sensors, 67,68 involve the working
    electrode measuring the electrical impedance of the analyte. The reference electrode
    67,73 is utilized to compare the electrical impedance of the analyte to that of
    the working electrode. Zoom In Zoom Out Reset image size Figure 13. Impedimetric
    detection of electrochemical sensor setup. Download figure: Standard image High-resolution
    image Planar electromagnetic sensor Planar Electromagnetic Sensor can be Mesh/Meander
    or Interdigital used to measure physical properties such as conductivity, dielectric
    properties, and permeability. 79–82,85 PESA can be of Mesh or Meander type and
    is a sensor array that measures physical properties in terms of impedance and
    is highly reliable, with fast response and low cost. Yunus et al. 79 found that
    a series connection provided better performance for nitrate detection than a parallel
    connection, and using gold electrodes and a high-dielectric substrate improved
    the sensitivity of the sensor. Nor et al. 85 designed a PESA with a thin substrate
    on a Printed Circuit Board (PCB) to measure nitrate in water, and Wang et al.
    83 found that increasing the distance between electrodes and decreasing their
    area improved the sensor''s sensitivity. PIS works like a parallel plate capacitor,
    with electrodes providing a single measurement to the material under test (MUT).
    Impedance measurements taken through electrochemical impedance spectroscopy (EIS)
    provide information about the physical properties of the MUT. Alahi et al. 113
    developed a smart sensor for nitrate detection with a detection limit of 0.01–0.5
    mg l−1, and Alahi et al. 114 used an imprinting polymer technique to develop a
    material with a detection range of 1–10 mg l−1 to coat the interdigital sensor.
    Graphene-based electrodes were used by researchers to detect nitrate in water,
    where the detection limit was 1–70 mg l−1. 87 An interdigital sensor based on
    FR4 was used to measure nitrate in water in real-time using the Internet of Things
    (IoT). 115 The system was effective in measuring water from creeks, streams, and
    lakes and could obtain data remotely from the sampling location. The sensitivity
    of both PESA and PIS sensors can be improved by optimizing the design and configuration
    of the sensor, including the pitch gaps and dimensions of the sensing surface.
    Figure. 14 illustrates the geometrical configurations of three types of electromagnetic
    sensors: meander, mesh, and interdigital planar sensors. In the mesh and meander
    sensors, an exciting electrode carries alternating current, generating a high-frequency
    electromagnetic field that permeates the system under test. This induced electromagnetic
    field, in turn, gives rise to eddy currents on conducting or magnetic materials,
    leading to modifications in the generated field. The resulting field alterations
    are then detected by the sensing electrode. 77–80 On the other hand, interdigital
    sensors 78,88,89 function similarly to parallel plate capacitors. The material
    under test (MUT) allows the electric field to pass through it, affecting the capacitance
    and conductance between the positive and negative electrodes. These changes are
    influenced by the dielectric properties of the material and the geometry of the
    electrodes and MUT. Unfortunately, the coplanar electrodes of interdigital sensors
    may result in a low signal-to-noise ratio for measured capacitance. To address
    this, the electrode pattern can be replicated multiple times, forming an interdigital
    structure where one set of electrodes is driven by an AC voltage source while
    the other set is connected to ground. By employing this configuration, an electric
    field is generated between the driven and ground electrodes, with the depth of
    penetration varying according to different wavelengths of the sensor. This approach
    allows for obtaining a stronger signal, enhancing the performance and sensitivity
    of the interdigital sensor. Zoom In Zoom Out Reset image size Figure 14. Planar
    Electromagnetic Sensor (a) Meander (b) Mesh (c) Interdigital. Download figure:
    Standard image High-resolution image Table II summarizes various electrochemical
    sensors, detailing their techniques, limits of detection, linear ranges, materials,
    and applications. Advantages and limitations of existing N sensing technologies
    Optical N sensors utilize the spectral reflectance properties of plants to estimate
    the N content of leaves. They are non-invasive and can be used on living plants.
    Optical sensors have the advantage of being fast, inexpensive, and highly accurate
    in the hands of experienced users. However, they can be affected by environmental
    factors such as light conditions and plant species and require specific calibration
    for different crops and growth stages. For precise chlorophyll meter measurements,
    it is advisable to take multiple readings per field on well-illuminated healthy
    leaves. The diverse leaf anatomy of vegetable plants can present challenges for
    measurement with chlorophyll meters. 28,133,134 In the case of reflectance sensors,
    consistency in sensor angle and height to the targe foliage are required to optimize
    sensor performance. 135–137 To utilize fluorescence sensors effectively, measurements
    should be taken at the leaf level and should be replicated to address potential
    inconsistencies in individual leaf measurements. Furthermore, measurements should
    be taken on the fully expanded and clear leaf of the plants. 138,139 Electrochemical
    N sensors measure the concentration of N in soil by detecting changes in its electrical
    properties. They are often used in fertigation systems and provide continuous
    measurements. These sensors are highly sensitive and can detect low concentrations
    of N, making them ideal for SA. In a study by Amali et al. 140 The authors investigated
    the potential of various nanostructured materials to improve the performance of
    electrochemical nitrate sensors. They found that using intelligent nanomaterials
    significantly improved the analytical performance of nitrate sensors, resulting
    in low operating potential, low detection limits, wide linear analytical ranges,
    and insignificant interferences. The successful application of nanomaterial-based
    electrochemical sensors to analyze nitrate in various matrices, including food,
    water, soil, and PM2.5 samples, demonstrates their reliability as portable on-site
    analytical sensors. However, the study notes that further research is needed to
    improve the stability and reproducibility of electrochemical nitrate sensors in
    complex real-world environments. Other studies, such as those by Patella et al.
    141 Inam et al. 86 Joly et al. 142 and Kim et al. 143 have explored various factors
    that can affect the performance of electrochemical sensors, including the effects
    of ions, temperature, moisture levels, and types of soil. Although Inam et al.
    86 researched a way to reduce interference from other ions and temperature, they
    did not consider the effects of moisture levels and types of soil, highlighting
    a research gap that warrants further investigation. In summary, while electrochemical-based
    N sensors have shown great potential for field applications, they require careful
    calibration due to their susceptibility to interference from other soil and water
    properties, as well as environmental factors such as temperature and humidity,
    and variations in moisture level and soil type. Comparison Table for Nitrogen
    Sensing Technologies The Table III presents a comparison of nitrogen sensing technologies
    across multiple parameters such as sensitivity, cost, environmental influence,
    and applications. It outlines the capabilities and challenges of optical, chlorophyll,
    reflectance, fluorescence, and electrochemical sensors, among others, highlighting
    their suitability for specific tasks like plant monitoring and soil analysis.
    Table III. Comparative overview of nitrogen sensing technologies: advantages,
    limitations, and applications. Sensor Type Principle Sensitivity Range Response
    Time Selectivity Stability Cost Environmental Influence Application Optical Sensors
    Measure reflectance/absorbance of light High Wide Fast Moderate Affected by lighting
    conditions, leaf moisture Low to Moderate Sensitive to lighting and moisture Non-invasive,
    rapid measurements Chlorophyll Sensors Detect chlorophyll content Moderate Moderate
    Moderate High for chlorophyll Prone to saturation at high chlorophyll levels Low
    Sensitive to leaf conditions Used in crop N status assessment Reflectance Sensors
    Measure reflected light High Wide Fast Moderate Variable based on sensor design
    Moderate Affected by ambient light, angle, height Field mapping, variable rate
    application Fluorescence Sensors Detect fluorescence emission High Moderate to
    High Fast High for specific wavelengths Stable in controlled conditions Moderate
    to High Sensitive to environmental conditions Early growth stage monitoring Electrochemical
    Sensors Measure electrical properties related to N content High Narrow Moderate
    to Slow High Requires calibration Low to Moderate Influenced by soil moisture,
    temperature Real-time soil N measurements Amperometric Measure current at constant
    potential Very High Specific to electrode Fast High with selective electrodes
    Stable with proper maintenance Moderate Sensitive to interfering substances Detection
    in various matrices Voltammetric Measure current as a function of controlled potential
    High Dependent on electrode Moderate High with selective electrodes Requires calibration
    Moderate Influenced by solution composition Used in water and soil analysis Impedimetric
    Measure impedance changes Moderate Specific to design Slow Moderate Stable with
    proper design Moderate to High Sensitive to temperature and humidity Used in aqueous
    environments Potentiometric Measure potential difference Moderate Varies with
    electrode Moderate High Requires frequent calibration Low Affected by ion composition
    Used in ion concentration detection Key Observations: (1)   Optical Sensors: Offer
    rapid, non-destructive measurements and are relatively low-cost. However, they
    are sensitive to environmental factors like lighting and moisture. (2)   Chlorophyll
    Sensors: Good for assessing crop N status but can saturate at high chlorophyll
    levels. They are sensitive to leaf conditions. (3)   Reflectance Sensors: Suitable
    for field mapping and variable rate applications. Performance can vary based on
    design and influenced by environmental conditions. (4)   Fluorescence Sensors:
    Highly sensitive and suitable for early growth stage monitoring, but their performance
    is influenced by environmental conditions. (5)   Electrochemical Sensors: Offer
    high sensitivity and real-time measurements but require careful calibration and
    maintenance. (6)   Amperometric Sensors: Very sensitive and specific, ideal for
    various matrices. They are sensitive to interfering substances. (7)   Voltammetric
    Sensors: Useful in water and soil analysis, but their performance is dependent
    on electrode design and solution composition. (8)   Impedimetric Sensors: Useful
    in aqueous environments; however, they are sensitive to temperature and humidity.
    (9)   Potentiometric Sensors: Useful for ion concentration detection, but affected
    by ion composition and require frequent calibration. Electronic System to Integrate
    N Sensor The integration of sensors with an IoT network relies on a critical component:
    the electronic circuit. This circuit plays a vital role by powering the sensor,
    capturing its signal, and processing and conditioning the data before digitizing
    and transmitting it to the IoT network. Fig. 15 illustrates the generalized block
    diagram of the electronic system, encompassing both optical and electrochemical-based
    N sensors. The electronic circuit comprises two key parts: the actuator circuit
    and the sensor circuit. The actuator circuit is responsible for activating the
    N sensor. For optical sensors, 15–17,23,144–149 it provides the light source,
    while for electrochemical sensors, 150–153 it supplies a constant DC voltage or
    voltage waveform to activate the sensor. On the other hand, the sensor circuit
    captures the sensor''s signal, amplifies, filters, and conditions it to ensure
    it is ready for digitization and transmission to the IoT network. 57,154–156 Zoom
    In Zoom Out Reset image size Figure 15. Block diagram of electronic circuit. Download
    figure: Standard image High-resolution image Additionally, the computing system,
    functioning as a System-on-Chip (SoC), plays a pivotal role. It not only facilitates
    sensor actuation if required but also processes data from the sensor circuit,
    prepares data for the IoT network, and establishes communication with a wireless
    modem to create the IoT network. 87,112,113,115,157–171 In the following subsections,
    the specifics of the electronic circuit for both optical and electrochemical sensors
    will be explored, followed by a detailed examination of the computing system.
    This comprehensive approach aims to provide a complete understanding of the electronic
    system''s functionalities for integrating N sensors into the IoT network. Electronic
    circuit for optical sensor The electronic circuit for optical sensors comprises
    two crucial stages: the actuation stage, responsible for providing the necessary
    light source, and the sensor circuit, which includes the detection, amplification,
    and signal conditioning stage. Optical sensors, such as chlorophyll sensors, fluorescence
    sensors, and optical reflectance sensors, all require an actuation stage where
    a specific light source is employed. For chlorophyll sensors, 16,17,172 a light-emitting
    diode (LED) emitting light of a particular wavelength (375 nm − 940 nm) is commonly
    used. This wavelength is absorbed by chlorophyll in the focused sample. Similarly,
    fluorescence sensors 18,38,41,43 employ an LED emitting light at a specific wavelength
    (218 nm − 735 nm) matching the excitation peak of the fluorophore. 173,174 A constant
    current source drives the LED to ensure a stable light output. On the other hand,
    optical reflectance sensors 15,144–149 utilize an LED or a laser diode, chosen
    based on the desired wavelength, intensity, and beam size. The sensor circuit,
    a critical part of optical sensors, includes the detection stage, which typically
    employs a photodiode or phototransistor. For chlorophyll sensors, 175–178 the
    photodiode or phototransistor converts transmitted light into a small current
    or voltage signal, proportional to the chlorophyll content. In fluorescence sensors,
    179–181 a photodiode or photomultiplier tube (PMT) detects weak fluorescence emission,
    biased to operate in the linear range and placed in a dark enclosure to eliminate
    background noise. Optical reflectance sensors 182–185 use the photodiode or phototransistor
    to convert reflected light into a current or voltage signal proportional to surface
    reflectance. The detection stage must be carefully designed to detect weak signals
    while eliminating background noise effectively. The amplification stage for optical
    sensors 57,154–156 typically involves a transimpedance amplifier, a high-gain
    amplifier that converts small changes in light intensity into a voltage signal.
    This signal can be further amplified and filtered. The filtering stage includes
    low-pass and high-pass filters, designed to remove high-frequency noise and low-frequency
    noise (e.g., DC offset), respectively. Careful design and implementation of the
    filtering stage optimize the output signal for accuracy and reliability. After
    filtering, the signal is digitized by an analog-to-digital converter (ADC) before
    analysis, processing, and transmission to the IoT network. Electronic circuit
    for electrochemical sensor The electronic circuit design for an electrochemical
    sensor is highly dependent on the specific type of sensor being utilized, as different
    sensor types may demand distinct configurations. For instance, there are amperometric,
    voltammetric, impedimetric, and potentiometric sensors, each employing varying
    electrode configurations. As a result, diverse electronic circuits are tailored
    to ensure optimal functionality for different sensor types. These electronic circuits
    can be broadly classified into two main stages: the actuator circuit and the sensor
    circuit. Amperometric sensors consist of two crucial circuits: the actuator circuit,
    responsible for controlling the potential difference between the working electrode
    (WE) and the reference electrode (RE), and the sensor circuit, which measures
    the current flowing between the WE and the counter electrode (CE). 150–153 The
    electronic circuit used in amperometry comprises three main components: a power
    supply, a potentiostat, and a current amplifier. 186 The power supply provides
    the necessary voltage to drive the electrochemical cell, while the potentiostat
    precisely regulates the potential of the working electrode (WE). Simultaneously,
    the current amplifier amplifies the current signal measured between the working
    electrode (WE) and the counter electrode (CE). For current measurement, various
    configurations are available, such as transimpedance amplifiers, instrumentation
    amplifiers, current conveyors, and resistor insertion techniques. Although the
    transimpedance amplifier has been the most popular approach for current measurement,
    it does have limitations, including sensitivity to noise, instability, and single-supply-voltage
    issues. In recent years, significant advancements have been made with the introduction
    of potentiostat integrated circuits (IC). These ICs come equipped with built-in
    amplifiers to accurately maintain the potential between the working electrode
    (WE) and the reference electrode (RE). Additionally, they feature integrated transimpedance
    amplifiers to precisely measure the current between the working electrode (WE)
    and the counter electrode (CE). 187–189 By utilizing such integrated circuits,
    amperometric sensor circuits experience reduced noise levels and improved overall
    stability. On the other hand, the electronic circuit for voltammetry shares similarities
    with the circuit for amperometry, but it incorporates an additional function generator
    in the actuator circuit. 190,191 This function generator allows the potential
    of the working electrode to be swept, enabling the study of electrochemical processes
    over a range of potentials. Similarly, the electronic circuit for an impedimetric
    sensor consists of two main circuits: the actuator circuit and the sensor circuit.
    105,106,192 The actuator circuit includes the power supply, which provides the
    voltage necessary to drive the electrochemical cell. It supplies the AC voltage
    used for impedance measurements in the sensor. The sensor circuit comprises the
    impedance analyzer, responsible for measuring the impedance of the sensor. It
    applies the AC voltage from the power supply to the sensor and measures the resulting
    current to determine the impedance. Optionally, a lock-in amplifier circuit can
    be integrated into the sensor circuit to enhance the impedance measurements. 193,194
    The lock-in amplifier amplifies small impedance changes resulting from interactions
    between the analyte and the sensing layer of the sensor. By utilizing a reference
    signal, it demodulates the sensor''s output signal, significantly improving the
    signal-to-noise ratio (SNR) and overall sensitivity of the output signal. Furthermore,
    in potentiometric electrochemical sensors, the electronic circuit consists of
    two distinct circuits: the actuator circuit and the sensor circuit. The actuator
    circuit incorporates the potentiostat, which plays a crucial role in maintaining
    a constant potential difference between the working electrode and the reference
    electrode. By precisely controlling the voltage applied to the working electrode,
    the potentiostat ensures a stable electrochemical environment during measurements.
    On the other hand, the sensor circuit includes the amplifier, a vital component
    that amplifies the small electrical signal generated by the potentiometric sensor.
    This amplification significantly enhances the sensitivity of the sensor, allowing
    for accurate and reliable measurement of the potentiometric response. 195–197
    Finally, after the electronic circuitry generates the output signal, it is digitized
    using an Analog-to-Digital Converter (ADC) and subsequently processed by the computing
    system. Once processed, the signal can be transmitted to the IoT network, enabling
    convenient remote access and monitoring. Computing system for integration of n
    sensing systems with IoT The computing system plays a vital role in integrating
    the N sensing system into the IoT network, and it comprises System-on-Chips (SoCs)
    like microcontrollers, microprocessors, or FPGA-based microcontrollers. These
    SoCs facilitate the control of N sensors and enable various tasks such as signal
    processing, waveform generation, data collection, IoT network establishment, and
    wireless communication. Table III provides a comprehensive summary of the diverse
    computing system utilized by researchers to interface with N sensors. Their applications
    range from computing N concentrations to establishing IoT networks, demonstrating
    the system''s potential to seamlessly integrate N sensing with IoT capabilities.
    The analysis of the above table reveals that researchers have effectively harnessed
    the capabilities of SoCs for signal processing tasks, encompassing amplification,
    filtering, and digitization, which are essential for extracting pertinent information
    from sensor data. This meticulous processing ensures the accuracy and suitability
    of the acquired data for subsequent analysis. Moreover, researchers have successfully
    utilized SoCs to calculate N concentration from samples, proficiently controlling
    sensors by actuating them with various waveforms and capturing desired signals.
    Additionally, SoCs have been instrumental in facilitating the establishment of
    IoT networks, enabling seamless communication between sensors and other IoT devices.
    This connectivity empowers real-time data transmission and remote monitoring,
    thereby bolstering the efficiency of N sensing systems. However, there are still
    research area that needs to be explored such as: Advanced Data Processing: SoCs
    can be further leveraged to implement advanced data processing algorithms, enabling
    more sophisticated analysis and interpretation of the sensor data. This can include
    machine learning techniques to improve accuracy and reliability. Smart Data Aggregation:
    SoCs can be programmed to aggregate data from multiple sensors, allowing for comprehensive
    monitoring of N levels in large-scale agricultural fields or water bodies. This
    data aggregation can provide valuable insights for better decision-making. Energy-Efficient
    Operation: SoCs can be optimized for energy-efficient operation to prolong the
    battery life of the sensors. Implementing power management techniques and low-power
    modes can ensure sustainable and long-term sensor deployment. Real-Time Alerts:
    SoCs can be designed to trigger real-time alerts or notifications when N levels
    exceed certain thresholds, indicating potential environmental issues or agricultural
    needs. These alerts can be sent to farmers, researchers, or relevant authorities
    for prompt action. Enhanced Communication Protocols: SoCs can explore more robust
    and secure communication protocols, ensuring the integrity and privacy of the
    sensor data during transmission. This is particularly important in sensitive environmental
    monitoring and SA applications. Miniaturization and Integration: SoCs can be further
    miniaturized and integrated with sensors to create compact and portable N sensing
    devices. Such devices can be deployed in remote or hard-to-reach locations, expanding
    the scope of environmental monitoring. IoT for N Sensing The \"Internet of Things\"
    (IoT) are the physical items or \"things\" that are connected to the internet
    and equipped with sensors, software, and connections. These devices might be anything
    from home appliances like smart refrigerators and thermostats to complex industrial
    machinery and autonomous vehicles. To increase automation, efficiency, and productivity,
    IoT connects these objects and makes it possible for them to interact with one
    another as well as with other systems and services. 198,199 By leveraging data
    collected from connected devices, businesses and organizations can make more informed
    decisions for their applications. IoT has a lot of potential applications in SA.
    SA involves using data and technology to optimize crop yields, reduce waste, and
    improve sustainability. IoT can play a key role in this by enabling farmers to
    collect and analyze data from various sources in real-time, allowing them to make
    more informed decisions about their crops and operations. Some of the ways IoT
    is used in SA include: Environmental monitoring: Environmental monitoring: IoT
    sensors can be used to monitor soil moisture, temperature, and other environmental
    factors in real-time, allowing farmers to optimize irrigation and fertilizer application.
    For example, a study published in the journal Sensors found that using IoT sensors
    to monitor soil moisture, nutrient levels in soil, and temperature and humidity
    of soil and air in a citrus orchard in the Three Gorges reservoir area resulted
    in a 20% reduction in water and fertilizer usage. 200 Crop health monitoring:
    Sensors and cameras connected to an IoT-based platform can be used to monitor
    crop health and detect issues such as nutrient deficiencies or pest damage. For
    example, a study published in the journal Sensors demonstrated the feasibility
    of an IoT-based platform for collecting and analyzing agricultural environment
    information. This platform was then used to predict infections in Strawberry crops
    based on environmental factors. 201 Livestock monitoring: IoT sensors can be used
    to monitor the health and behavior of livestock, allowing farmers to detect issues
    early and make informed decisions to improve animal welfare. For example, a study
    published in the journal Software: Practice and Experience found that using IoT
    sensors to monitor the behavior of dairy cows provided data on movement pattern,
    activity levels, and social interactions. This data enabled farmers to identify
    potential health issues and adjust herd management practices, ultimately improving
    the well-being of the cows. 202 Equipment monitoring: ''IoT devices can be used
    to monitor the performance and maintenance needs of farm equipment, reducing downtime
    and optimizing operations. For example, research by Tan et al. demonstrated the
    feasibility of combining an IoT platform with a harvester and yield monitoring
    system to monitor the system in real-time with a latency of around 250 s. The
    use of this approach allowed farmers to remotely monitor their fields without
    physically visiting them, resulting in significant savings of both time and money.
    203 Supply chain management: IoT technology can be used to track and monitor crops
    throughout the supply chain, improving traceability and reducing waste. According
    to a review paper in the International Journal of Production, using IoT in supply
    chain management can increase revenue and customer satisfaction, while reducing
    costs and lead times. This is achieved by leveraging real-time data on crop status,
    quality, and location to optimize transportation, storage, and processing. By
    using IoT to enhance supply chain visibility and efficiency, businesses can reduce
    the risk of food safety incidents, respond more quickly to market demands, and
    ultimately improve their bottom line. 204 Overall, IoT has the potential to revolutionize
    SA by enabling farmers to collect and analyze data in real-time, optimizing their
    operations, and improving sustainability. The usage of IoT is increasing exponentially
    in recent years in the field of SA. However, with this growth comes the challenge
    of ensuring that these devices can communicate with each other seamlessly, regardless
    of the underlying technology. This is where IoT network standards come in. IoT
    network standards define the rules and protocols that devices use to communicate
    with each other and with other systems over the internet. By following these standards,
    IoT devices can communicate with each other and with other systems seamlessly,
    regardless of their underlying technology. IoT network standard includes IoT protocol
    and IoT network. An IoT protocol is a set of rules and standards that govern the
    way IoT devices and systems communicate with each other. These protocols define
    the format, content, and timing of messages exchanged between IoT devices and
    servers, as well as the protocols used to transmit these messages over the network.
    IoT protocols can be designed for various layers of the IoT stack, including the
    physical layer, transport layer, application layer, and security layer. Some common
    IoT protocols include MQTT, HTTP, Constrained Application Protocol (CoAP), Advanced
    Message Queuing Protocol (AMQP), Extensible Messaging Presence Protocol (XMPP)
    and Data Distribution Service (DDS), each with its own strengths and weaknesses
    depending on the specific use case. The choice of protocol depends on factors
    such as the nature of the IoT application, the type of devices being used, the
    network topology, and the required performance and reliability characteristics.
    Table IV compares common IoT protocols based on key parameters such as communication
    type, transport layer, message size, header size, QoS support, security, and memory
    requirement. The selection of the appropriate protocol depends on factors like
    the nature of the IoT application, device types, network topology, and desired
    performance and security levels. Table IV. IoT protocol comparison. Protocol Communication
    Type Transport layer Message size Header size Quality of service (QoS) Support
    Security Memory requirement MQTT 205,206 Publish-subscribe messaging protocol
    Transmission Control Protocol/Internet Protocol (TCP/IP) upto 256 MB 2 bytes 0,
    1, 2 Secure sockets layer (SSL)/ Transport layer security (TLS) Low CoAP 207,208
    Request-response protocol User Datagram Protocol (UDP) N/A 4 bytes Confirmable/non-confirmable
    Datagram Transport Layer Security (DTLS) Low HTTP 209,210 Client-server request-response
    protocol TCP/IP N/A N/A N/A SSL/TLS High AMQP 211–213 Publish-subscribe messaging
    protocol TCP/IP N/A 8 bytes N/A TLS Moderate to High DDS 214–216 Data-centric
    publish-subscribe protocol TCP/IP, UDP, and shared memory N/A N/A Best effort
    and reliable delivery Secure DDS, TLS, DTLS Moderate to High XMPP 217 Verbose
    XML based protocol with extensible features (presence, queues, pub/sub) TCP/IP
    N/A N/A N/A TLS Moderate to High Table V presents various wireless technologies
    used for IoT applications, each offering distinct features for seamless communication.
    Bluetooth enables peer-to-peer communication within a 10-meter range, while Wi-Fi
    operates as a local area network with high data speeds up to 7 Gbps and a range
    of 100 meters. Zigbee provides a low-power, short-range, mesh network suitable
    for interconnected devices within a 75-meter range. LoRaWAN is designed for long-range
    communication, reaching up to 15 kilometers, with low power consumption. Cellular
    networks offer flexible options for long-distance communication, accommodating
    varying data speeds and ranges. Understanding these wireless options is crucial
    for making informed decisions when implementing IoT solutions, considering factors
    such as coverage area, data speed requirements, and power constraints. Table V.
    Wireless network for IoT protocol. Wireless technology Functionality Data speed
    Operating range Bluetooth 218,219 Peer-to-peer communication, IoT Up to 2 Mbps
    Up to 10 m Wi-Fi 220,221 Local area network, IoT Up to 7 Gbps Up to 100 m Zigbee
    222 Low-power, short-range, mesh network, IoT Up to 250 Kbps Up to 75 m LoRaWAN
    223 Low-power, long-range, wide area network, IoT Up to 50 kbps Up to 15 km Cellular
    Network Long-distance communication Varies Varies In recent years, there has been
    growing interest in using IoT technology to monitor N levels in water and soil.
    One promising approach is the use of low-cost, IoT-based sensor networks equipped
    with nitrate-selective electrodes to measure nitrate concentrations in real-time.
    A study published in the journal IEEE Transaction on Industrial Electronics demonstrated
    the potential of this approach for nitrate detection in stream water. 113 Another
    study successfully developed a smart nitrate sensing system and monitored N content
    in a creek near Macquarie University in real-time. 115 Akhtar et al. developed
    a low-cost and low-power nitrate sensor that was integrated with an IoT system
    to monitor water with different N concentrations in real-time. 112 Sheikh et al.
    developed a low-priced IoT-based system that used light emitting diodes and photodiodes
    to detect N content in the soil. 180 Lavanya et al. successfully developed an
    IoT system that used light dependent resistors and light emitting diodes with
    fuzzy logic to detect N content in soil. 224 Jiang et al. used a flexible nitrate
    sensor in an IoT sensor network to collect real-time field data. 225 Finally,
    Alahi et al. developed a graphene sensor for nitrate that was integrated with
    an IoT system and compensated for temperature effects to reduce measurement errors.
    87 These studies demonstrate the potential of IoT technology for monitoring N
    levels in water and soil, which can have important implications for environmental
    and agricultural monitoring. The practical applications of IoT in N sensing, as
    demonstrated in these studies, are summarized in Table VI. This table highlights
    the diverse IoT protocols and networks employed across different types of sensors
    and their specific uses in monitoring N levels in various environments. Table
    VI. Table VI. IoT network used in N sensing. Sensor type Iot protocol IoT network
    Application Electrochemical 113 HTTP Wi-Fi Surface and ground water Electrochemical
    114 NA Wi-Fi Water Electrochemical 87 NA Wi-Fi Water Electrochemical 112 NA LoRa
    Water Electrochemical 115 NA LoRa, Wi-Fi Water from a lake, stream, or river Electrochemical
    225 NA LoRa Water stream Optical 224 CoAP Wi-Fi Soil Electrochemical 226 NA Wi-Fi
    Aquaponic system Electrochemical 227 NA ZigBee Nitrate leaches from soil When
    implementing IoT devices, it is crucial to consider environmental factors due
    to their significant impact on wireless communication. Researchers such as Luomala
    et al., Yi Lim et al., and Gabriele et al. 228–230 have conducted studies on the
    effects of various environmental factors across different frequency ranges. Luomala
    et al. and Yi Lim et al. 229,230 focused on the frequency range of 100 MHz to
    2.5 GHz, whereas Gabriele et al. 228 examined the range of 853–870 MHz. Based
    on these studies, environmental factors like temperature, humidity, vibration,
    and gas exposure exhibit varied impacts on wireless communication: 1.   Temperature:
    The studies by Gabriele et al., Luomala et al., and Yi Lim et al. 228–230 consistently
    show that temperature influences radio signal strength. Gabriele et al. and Luomala
    et al. 228,229 observe a negative correlation, where higher temperatures lead
    to weaker signals. However, Yi Lim et al. 230 suggest that higher temperatures
    might actually enhance signal strength. This variation implies that temperature''s
    effect may depend on specific conditions and frequencies. 2.   Humidity: Findings
    on humidity''s impact on signal strength are complex and somewhat inconsistent.
    Gabriele et al. and Luomala et al. 228,229 generally report that high humidity
    weakens signal strength due to the absorption and scattering of radio waves by
    water vapor. Conversely, Yi Lim et al. 230 highlight conflicting research results,
    with some studies indicating that higher humidity could strengthen the signal.
    This necessitates further research for a clearer understanding. 3.   Vibration:
    Gabriele et al. 228 note that vibration, particularly relevant in industrial IoT
    contexts, can reduce transmission performance. Nonetheless, technologies like
    LoRaWAN show resilience to vibration, especially with higher spreading factors.
    4.   Gas Exposure: As explored by Gabriele et al., 228 exposure to gases such
    as CO, NO, and NO2 in industrial settings appears to minimally affect LoRaWAN
    transmission capabilities, demonstrating the robustness of this technology in
    such environments. In conclusion, environmental factors undeniably impact wireless
    communication, yet the specific influences of temperature, humidity, vibration,
    and gas exposure vary significantly based on context, frequency, and technology.
    This emphasizes the need to consider these environmental factors in designing
    and deploying wireless communication systems, particularly in challenging or fluctuating
    environments. Challenges and Opportunities of Integrating N Sensing with IoT N
    sensing technology combined with IoT holds tremendous promise for SA, but several
    limitations must be acknowledged and addressed. Environmental factors such as
    temperature, humidity, vibration, and interference from other electronic devices
    can impact sensor performance, necessitating careful consideration during deployment
    and data interpretation. One significant limitation is the high initial cost of
    setting up an IoT-based N monitoring system, which includes expenses for wireless
    communication and remote server maintenance. Despite the availability of low-cost
    N sensors, the overall system cost can remain relatively high. Moreover, variations
    in sensor accuracy and reliability underscore the importance of proper calibration
    and maintenance to minimize errors. Handling and analyzing large volumes of data
    from IoT-based N sensors can be daunting, requiring specialized skills and software.
    Ensuring data privacy and security is also paramount. Integrating IoT and N sensing
    technology with existing farming or water management systems can prove challenging,
    demanding infrastructure investments and changes to workflows and data management
    practices. Additionally, these devices may require regular maintenance, particularly
    in areas with limited technical support, adding to the need for additional resources
    and expertise. To overcome these limitations, further research is warranted in
    several areas. First, the development of more accurate and reliable sensors capable
    of withstanding environmental variations and interference is essential for continuous
    monitoring. Machine learning algorithms and artificial intelligence techniques
    are critical for calibrating, analyzing, and processing sensor data, delivering
    real-time actionable insights. Research in developing selective electrodes targeting
    nitrate ions and minimizing cross-reactivity with other ions is also crucial.
    Implementing standard IoT protocols, such as MQTT, CoAP, HTTP, AMQP, or DDC, ensures
    reliable and secure data transmission over the network. Similarly, adopting robust
    wireless communication protocols like Wi-Fi, ZigBee, LoRaWAN, or Bluetooth can
    enable data transmission over longer distances and in challenging environments.
    Leveraging machine learning algorithms for analyzing large volumes of sensor data
    can unveil patterns, anomalies, and trends, providing actionable insights to farmers
    and stakeholders in the agriculture industry. Fig. 16 illustrates a range of IoT
    protocols and wireless networks suitable for integration into smart agricultural
    systems, highlighting their potential applications and interoperability. Zoom
    In Zoom Out Reset image size Figure 16. IoT protocols and wireless networks. Download
    figure: Standard image High-resolution image Increasing the sampling rate of collecting
    N data can effectively capture high-frequency variations in N levels. Leveraging
    edge devices for advanced data analytics and machine learning algorithms enable
    data-driven insights and pattern recognition, leading to a deeper understanding
    of N dynamics and more accurate predictions. Another opportunity lies in combining
    data from multiple N sensors to gain a comprehensive view of N levels in water
    and soil, enhancing measurement accuracy and reliability. By addressing these
    limitations and conducting further research in these areas, SA can become more
    efficient and sustainable, potentially boosting crop yield while reducing environmental
    impact. Continued advancements in N sensing technology and IoT integration hold
    promise for revolutionizing modern farming practices. Fig. 17 presents a conceptual
    diagram illustrating the integration of multiple nitrogen sensors into an IoT
    network, highlighting the connectivity and data flow architecture. Zoom In Zoom
    Out Reset image size Figure 17. Conceptual diagram to integrate IoT with N sensor.
    Download figure: Standard image High-resolution image Expanding the Scope of Monitoring
    Beyond Nitrogen Sensing in Smart Agriculture While this paper primarily focuses
    on nitrogen (N) sensing technologies, it''s imperative to recognize the significance
    of a multitude of other parameters that are vital for comprehensive crop health
    and soil quality monitoring. The integration of diverse sensing technologies into
    Internet of Things (IoT) systems can substantially enhance the effectiveness and
    precision of agricultural monitoring. Below, we outline several key parameters
    that, alongside nitrogen, are crucial for a holistic smart agriculture approach:
    (1)   Phosphorus and Potassium (P and K): Phosphorus and potassium are essential
    macronutrients for plant growth. Including sensors for P and K in soil analysis
    provides a more balanced view of soil fertility and guides appropriate nutrient
    management. 231 (2)   Soil pH Monitoring: The pH level of soil significantly impacts
    nutrient availability and microbial health. IoT-enabled pH sensors can offer vital
    data for adjusting soil conditions to optimize crop growth. 232,233 (3)   Soil
    Moisture Content: Critical for efficient water use and plant growth, soil moisture
    levels can be precisely monitored using IoT technologies, aiding in optimal irrigation
    practices and water conservation. 234,235 (4)   Soil Temperature: A key factor
    in seed germination and root development, soil temperature data gathered by sensors
    can inform optimal planting times and other critical agricultural activities.
    236,237 (5)   Salinity (Electrical Conductivity): Soil salinity, affecting water
    uptake and plant health, can be monitored through sensors measuring electrical
    conductivity, providing crucial insights in saline-prone and arid regions. 238,239
    (6)   Organic Matter Content: The quantity of organic matter influences soil structure
    and nutrient availability. Sensing technologies that measure organic matter content
    can guide sustainable soil management practices. 240,241 (7)   CO2 levels in Controlled
    Environments: In greenhouse settings, CO2 concentration is critical for plant
    photosynthesis optimization. CO2 sensors can significantly enhance crop yields
    in these controlled environments. 242,243 (8)   Atmospheric Conditions: Sensors
    that monitor ambient temperature, humidity, and light intensity are integral to
    precision agriculture, enabling tailored crop management and enhancing growth
    conditions. 244 (9)   Pesticide and Herbicide Residues: With a growing focus on
    sustainable farming, technologies capable of detecting chemical residues in soil
    are crucial for environmental protection and ensuring food safety. 245–248 (10)   Micronutrient
    Levels: Monitoring trace elements like zinc, iron, manganese, and copper is essential
    for plant health. Advanced sensors for these micronutrients can provide detailed
    insights into soil nutrient dynamics. 249,250 Additional Considerations: Data
    Integration and Analysis: It is crucial to integrate data from these diverse sensors
    to create a comprehensive agricultural monitoring system. This integration allows
    for a more nuanced understanding of the agricultural ecosystem, facilitating informed
    decision-making. Technological Challenges and Future Research: The successful
    integration of these varied sensors into a cohesive IoT framework presents technological
    challenges, including sensor compatibility, data synchronization, and network
    reliability. Future research should focus on addressing these challenges and exploring
    advanced data analytics and AI integration for predictive insights. User-Friendly
    Interfaces: Developing user-friendly interfaces for farmers and agronomists is
    essential for the effective utilization of complex sensor data. These interfaces
    should facilitate easy access to real-time data, trend analysis, and actionable
    insights, enabling users to make informed decisions swiftly. Environmental Sustainability
    and Stewardship: By expanding the monitoring spectrum beyond nitrogen, we contribute
    significantly to sustainable agricultural practices. This approach aligns with
    environmental stewardship goals, promoting responsible resource management and
    ecosystem health. By broadening the scope of IoT-based monitoring in agriculture
    to include these additional parameters, we can achieve a more nuanced and effective
    management of crops and soil health, paving the way for more sustainable, efficient,
    and productive agricultural practices. Discussion Material Characteristics and
    Their Impact on Sensor Performance: The efficacy of nitrogen sensors in smart
    agriculture is largely dictated by the material properties of the sensors. Recent
    advancements in nanotechnology have led to the development of nanostructured electrodes,
    which have significantly improved the sensitivity and selectivity of electrochemical
    nitrogen sensors. For instance, the use of graphene-based materials has been shown
    to enhance electron transfer, offering higher sensitivity in detecting nitrogen
    levels. However, the interaction between these nanomaterials and environmental
    factors such as humidity and soil acidity poses a challenge, potentially affecting
    sensor longevity and reliability. Therefore, a key area for future research is
    the development of materials that maintain high performance while withstanding
    environmental variabilities. Advancements in IoT Integration and Data Management:
    The integration of nitrogen sensors with IoT networks introduces a new dimension
    to material considerations. The data accuracy and transmission reliability of
    IoT systems are contingent on the stability and robustness of sensor materials
    under varying environmental conditions. Research should focus on materials that
    not only excel in sensor performance but are also conducive to seamless IoT integration.
    This includes ensuring consistent data transmission even in adverse environmental
    conditions, which is crucial for real-time monitoring in smart agriculture. Sustainability
    and Environmental Impact of Sensor Materials: Sustainability is becoming increasingly
    important in the selection of materials for nitrogen sensors. Biodegradable or
    eco-friendly materials are gaining attention, offering a way to minimize the environmental
    impact of sensor deployment in agriculture. Future sensor designs should consider
    not only performance but also the lifecycle and biodegradability of materials,
    aiming to reduce the overall environmental footprint of smart agricultural practices.
    Addressing Scalability and Deployment Challenges: The scalability of nitrogen
    sensors in agriculture hinges on the cost-effectiveness and maintenance requirements
    of the sensor materials. Materials that offer a balance between cost, durability,
    and performance are ideal for large-scale deployment. Practical challenges such
    as the ruggedness of materials in diverse agricultural environments and ease of
    sensor installation also warrant further investigation. Future Design Considerations
    for Nitrogen Sensors: Looking ahead, the development of smart materials with self-calibrating
    or self-cleaning properties could revolutionize nitrogen sensing in agriculture.
    The integration of multi-functional sensors capable of detecting various soil
    parameters, including moisture and pH, alongside nitrogen, could provide a more
    comprehensive soil health assessment. Such advancements would enhance the precision
    and efficiency of agricultural practices, paving the way for more sustainable
    farming methods. Standardization and Interoperability in IoT Systems: The integration
    of nitrogen sensors into IoT systems necessitates the standardization of communication
    protocols and sensor interfaces. This standardization is essential for ensuring
    interoperability among sensors from different manufacturers. Material choices
    can influence the design and functionality of sensors, impacting their compatibility
    within IoT networks. As such, future developments in sensor materials should align
    with the emerging standards in IoT technology to ensure seamless integration and
    functionality. Conclusions The integration of real-time N sensing with IoT technologies
    holds great promise for leverage of nutrient management in SA to SA. However,
    this approach also faces significant challenges that must be addressed. Environmental
    factors such as temperature, humidity, vibration, and interference from other
    electronic devices can affect sensor performance and must be considered during
    deployment. High initial costs for setting up an IoT-based N monitoring system,
    as well as the need for proper sensor calibration and maintenance, are additional
    challenges that must be overcome. Data management and integration also pose challenges,
    including collecting, delivering, and analyzing large amounts of data, ensuring
    data privacy and security, and integrating IoT and N sensing technology with existing
    farming or water management systems. Despite these challenges, there are opportunities
    for further research and development of sensors with high selectivity and sensitivity,
    capable of wireless communication through standardizing IoT protocols. Machine
    learning algorithms and advanced sensing technologies for data collecting and
    mining can help to overcome these challenges. Overall, real-time N sensing and
    IoT integration can provide farmers with valuable insights into crop health and
    nutrient management, leading to improved crop yields and reduced environmental
    impact. The full potential of this approach can be realized with continued research
    and development, collaboration between different stakeholders, and investment
    in the necessary infrastructure. Acknowledgments This research was funded by (1)
    USDA NIFA (Award No. 2022–67021–37601). (2) North Central Regional Sun Grant Center
    at South Dakota State University through a grant provided by USDA NIFA (Grant
    No. SA1500640); and (3) the Hatch Project (No. 3AR652 and 3AH658) funded by USDA
    NIFA through South Dakota Agricultural Experimental Station at South Dakota State
    University. All support and helps were highly appreciated, however, only the authors
    are responsible for the opinions expressed in this paper and for any possible
    errors. Show References Abstract Review Methods N Sensing Principles and Technologies
    Comparison Table for Nitrogen Sensing Technologies Electronic System to Integrate
    N Sensor IoT for N Sensing Challenges and Opportunities of Integrating N Sensing
    with IoT Expanding the Scope of Monitoring Beyond Nitrogen Sensing in Smart Agriculture
    Discussion Conclusions Acknowledgments References You may also like JOURNAL ARTICLES
    Nitrogen balance and use efficiency on dairy farms in Japan: a comparison among
    farms at different scales Nitrogen use efficiency on dairy farms with different
    grazing systems in northwestern Germany Estimation of carbon sequestration in
    China''s forests induced by atmospheric wet nitrogen deposition using the principles
    of ecological stoichiometry Projecting future nitrogen inputs: are we making the
    right assumptions? The importance of climate change and nitrogen use efficiency
    for future nitrous oxide emissions from agriculture Nitrogen loss to the environment
    due to various nitrogen-use efficiencies during milk and beef production in Japan
    Research assistant (m/f/d) combustion technology, safety engineering, explosion
    protection Bundesanstalt für Materialforschung und ‑prüfung (BAM) DESY-Fellowships
    in Experimental Particle Physics DESY Senior Scientist for a Permanent Position
    in Accelerator Physics DESY More jobs Post a job IOPSCIENCE Journals Books IOP
    Conference Series About IOPscience Contact Us Developing countries access IOP
    Publishing open access policy Accessibility IOP PUBLISHING Copyright 2024 IOP
    Publishing Terms and Conditions Disclaimer Privacy and Cookie Policy PUBLISHING
    SUPPORT Authors Reviewers Conference Organisers This site uses cookies. By continuing
    to use this site you agree to our use of cookies. IOP Publishing Twitter page
    IOP Publishing Facebook page IOP Publishing LinkedIn page IOP Publishing Youtube
    page IOP Publishing WeChat QR code IOP Publishing Weibo page"'
  inline_citation: '>'
  journal: Journal of the Electrochemical Society
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Review—Perspectives on the Roles of Real time Nitrogen Sensing and IoT Integration
    in Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Puthiyidam J.J.
  - Joseph S.
  citation_count: '0'
  description: 'Consistent and timely message transmission is pivotal in the success
    of Internet of Things (IoT) communi-cations. IoT applications typically involve
    resource-constrained devices with limited processing power, memory capacity, and
    battery life. These characteristics necessitate the use of specialized communication
    protocols for IoT applications. Message Queue Telemetry Transport (MQTT) is a
    widely adopted protocol within the IoT ecosystem. Ensuring the appropriate message
    size and reliability level is crucial for achieving successful MQTT communication.
    This article empirically assesses MQTT protocol performance across various Quality
    of Service (QoS) levels while considering different message and client sizes.
    Initially, we conducted a comparative analysis of message transfer performance
    between HTTP and MQTT protocols. Subsequently, we delved into the MQTT protocol’s
    performance across three distinct configurations: one publisher-one subscriber,
    multiple publishers-one subscriber, and multiple publishers-multiple subscribers.
    We also examined how message and client sizes impact message transfer latency.
    When employing a 100-byte payload, we observed that the time delay in a network
    comprising 150 clients is 60.71% greater than in a network with 50 clients. Similarly,
    with a message size of 2500 bytes, a network with 50 clients requires 96% less
    time to deliver than a network with 150 clients.'
  doi: 10.37936/ecti-eec.2024221.252941
  full_citation: '>'
  full_text: '>

    "VISIT DOI.ORG DOI NOT FOUND 10.37936/ecti-eec.2024221.252941 This DOI cannot
    be found in the DOI System. Possible reasons are: The DOI is incorrect in your
    source. Search for the item by name, title, or other metadata using a search engine.
    The DOI was copied incorrectly. Check to see that the string includes all the
    characters before and after the slash and no sentence punctuation marks. The DOI
    has not been activated yet. Please try again later, and report the problem if
    the error continues. WHAT CAN I DO NEXT? If you believe this DOI is valid, you
    may report this error to the responsible DOI Registration Agency using the form
    here. You can try to search again from DOI.ORG homepage REPORT AN ERROR DOI: URL
    of Web Page Listing the DOI: Your Email Address: Additional Information About
    the Error: More information on DOI resolution: DOI Resolution Factsheet The DOI
    Handbook Privacy Policy Copyright © 2023 DOI Foundation. The content of this site
    is licensed under a Creative Commons Attribution 4.0 International License. DOI®,
    DOI.ORG®, and shortDOI® are trademarks of the DOI Foundation."'
  inline_citation: '>'
  journal: ECTI Transactions on Electrical Engineering, Electronics, and Communications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Internet of Things Network Performance: Impact of Message and Client sizes
    and Reliability Levels'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kaidi H.M.
  - Izhar M.A.M.
  - Dziyauddin R.A.
  - Shaiful N.E.
  - Ahmad R.
  citation_count: '0'
  description: Healthcare monitoring systems in hospitals and other health facilities
    have grown significantly, and portable healthcare monitoring systems using emerging
    technologies such as Internet of Things (IoT) technologies have aided the advancement
    of healthcare monitoring systems. Many studies have focused on intelligent healthcare
    systems in an IoT context to improve components, including wearable sensors and
    hardware devices, intelligent data collecting and processing, and network connections.
    Even while these applications are necessary and helpful for enhancing wireless
    healthcare settings related to monitoring, detection, and diagnostics, it might
    be challenging to fully understand how IoT characteristics are currently intertwined
    with its architecture. Accordingly, this work adds to the academic literature
    by thoroughly reviewing all significant areas of wireless healthcare monitoring
    system advancements. This research also examines a state-of-the-art healthcare
    monitoring system component under IoT. One hundred and ninety-four related articles
    were collected and filtered based on the system components defined. This study
    includes a thorough review and a list of genuine concerns with novel critical
    solutions. The study can facilitate academics and practitioners by giving them
    direction and vital information for future research.
  doi: 10.1109/ACCESS.2024.3349547
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 12 A Comprehensive
    Review on Wireless Healthcare Monitoring: System Components Publisher: IEEE Cite
    This PDF Hazilah Mad Kaidi; Mohd Azri Mohd Izhar; Rudzidatul Akmam Dziyauddin;
    Nur Ezzati Shaiful; Robiah Ahmad All Authors 24 Full Text Views Open Access Comment(s)
    Under a Creative Commons License Abstract Document Sections I. Introduction II.
    Physiological Measurement and Sensor III. Data Collection IV. Communications V.
    Conclusion Authors Figures References Keywords Metrics Abstract: Healthcare monitoring
    systems in hospitals and other health facilities have grown significantly, and
    portable healthcare monitoring systems using emerging technologies such as Internet
    of Things (IoT) technologies have aided the advancement of healthcare monitoring
    systems. Many studies have focused on intelligent healthcare systems in an IoT
    context to improve components, including wearable sensors and hardware devices,
    intelligent data collecting and processing, and network connections. Even while
    these applications are necessary and helpful for enhancing wireless healthcare
    settings related to monitoring, detection, and diagnostics, it might be challenging
    to fully understand how IoT characteristics are currently intertwined with its
    architecture. Accordingly, this work adds to the academic literature by thoroughly
    reviewing all significant areas of wireless healthcare monitoring system advancements.
    This research also examines a state-of-the-art healthcare monitoring system component
    under IoT. One hundred and ninety-four related articles were collected and filtered
    based on the system components defined. This study includes a thorough review
    and a list of genuine concerns with novel critical solutions. The study can facilitate
    academics and practitioners by giving them direction and vital information for
    future research. The architecture of a healthcare monitoring system consists of
    different components including wearable sensors, hardware devices, intelligent
    data collecting and processi...View more Published in: IEEE Access ( Volume: 12)
    Page(s): 35008 - 35032 Date of Publication: 16 February 2024 Electronic ISSN:
    2169-3536 DOI: 10.1109/ACCESS.2024.3349547 Publisher: IEEE Funding Agency: SECTION
    I. Introduction In 2020, there were 727 million people aged 65, and the number
    of older adults worldwide is expected to double over the next three decades, reaching
    over 1.5 billion in 2050 [1]. The global population aged 65 and up is predicted
    to rise from 9.3% in 2020 to roughly 16.0% in 2050 [1]. People are now motivated
    by health awareness and are eager to self-monitor their fundamental health problems.
    Wearable gadgets are becoming more popular not just in health but also in sports
    [2]. Therefore, biomedical engineering research is now focusing on creating cost-effective
    and conveniently accessible solutions for healthcare services aimed at improving
    both the convenience of use and the comfort of users as life expectancy rises
    and health expenses rise [3]. The advances in wireless communication technology,
    the convenience of deployment, the ubiquity of information, and the low installation
    cost for healthcare monitoring applications have brought more significant advantages
    for healthcare monitoring technology systems. In the last decade, a new architecture
    has arisen in wireless sensor networks (WSNs) by merging two modern technology
    fields: embedded systems and wireless communications and have been successfully
    implemented in real-time applications [4]. Different scenarios in WSN-based e-healthcare
    are summarized below [5]: Daily life supervision - A properly configured WSN can
    detect the patient’s activity and provide valuable feedback, allowing them to
    better organize their daily lives [6]. In-hospital monitoring – The use of WSN
    technology and the establishment of a wireless body area network (WBAN) allows
    for comprehensive care and observation for patients who previously must be kept
    in the hospital for longer period but instead can be recorded and evaluated regularly
    by specialists [7]. In such cases, hospitals set up a static node so patients
    wearing the WSN appliance can stay linked to the monitoring centre while wandering
    around [8]. In-home recovery monitoring following surgery: The WSN technology
    can provide normal readings of several biological parameters after the patient
    is sent home, allows for a faster and more accurate diagnosis of heart diseases,
    and raises the alarm if necessary [9]. Sports training: Using wearable devices,
    the records of athletes’ continual observation analyzed, and training is then
    scheduled accordingly to improve their performance [2]. Falls are unusual activity
    events that can cause significant health concerns in the elderly and extensive
    research was done to reduce significant repercussions and harmful effects [10].
    Pang et al. [11] discussed a systematic review on the detection of near falls
    using wearable devices, including accelerometers, gyroscopes, and insole force
    inducers. Radar and RGB-Depth were utilized due to their contactless and non-intrusive
    monitoring capabilities [12]. Most studies analyzed a single or few near-fall
    types by younger adults in controlled laboratory environments and hardly naturally
    occurring near falls from actual falls or other activities of daily living in
    older people. According to [13], assisted living technologies may broadly be classified
    into three generations. The first-generation technologies consisted of systems
    and gadgets such as a wearable device with a panic or help button that was assistive
    only when they received a request or response from the user for help. The second-generation
    technologies were characterized by their ability to sense when the user needed
    assistance by tracking health-related, user behaviour-related, and user interaction-related
    data to trigger alarms to alert caregivers or medical personnel. The third-generation
    technologies refer to intelligent assistive systems that use a myriad of technologies
    such as artificial intelligence, machine learning, sensor networks, and their
    related applications to detect and predict any assistive needs, for instance,
    in a fall. The positive influence of the Internet of Things (IoT) in healthcare
    alters the patient experience while also boosting the quality of care and providing
    extra health-tracking and security benefits to both patients and healthcare practitioners.
    The IoT-enabled remote healthcare monitoring (RHM) system connects IoT devices
    and integrates their data into the patient record system, streamlining data management
    for enhanced efficiency [14]. The healthcare monitoring system using Healthcare
    Processing with IoT Surveillance (HPIoTS) was proposed [15] with a reasonable
    accuracy level of 97% and provided proper graphical outcomes, it is a robust IoT
    system with advanced capabilities. De Fazio et al. [16] provide a comprehensive
    overview of innovative IoT sensing systems for monitoring biophysical and psychophysical
    parameters, all suitable for integration with wearable or portable accessories.
    The main contributions of this paper are summarized as follows: The components
    of the wireless health monitoring system are reviewed and translated to see trends
    in the study Different types of sensors and wireless communication technology
    used for wireless health monitoring systems were investigated, and the technology
    with efficient and low-cost sensors and communication methods was identified.
    Various fall detection systems were assessed and contrasted in terms of sensor
    components and their effectiveness. A comparative analysis was highlighted of
    the current wireless health monitoring system and fall detection system, considering
    their respective solutions, applicability, and constraints A. Architecture of
    the Wireless Healthcare Monitoring System The healthcare monitoring system works
    according to several stages, as illustrated in Fig 1: Sensor: By using the combination
    of electronic sensors, the physiological signals of the human body could be converted
    to electrical signals in the form of quantitative analysis to evaluate the body’s
    health state [17]. Data collection and processing: As an interface between all
    the sensors; to receive the input and provide an appropriate output through microcontroller
    units (MCU) which are MCU 1 and MCU 2. Both are integrated circuitry designed
    for embedded systems, combining CPU, memory, and I/O peripherals. Communication:
    The information was not meant to be kept, so this is where the networking needs
    to ensure that it will be sent to the doctor in charge. FIGURE 1. Architecture
    of the healthcare monitoring system. Show All SECTION II. Physiological Measurement
    and Sensor The human body consists of a natural signal which carries specific
    information about the physiological system. Physiological vital signs can measure
    the body’s most basic function. Fig 2 represents the trends for types while Fig
    3 shows examples of physiological measurement. FIGURE 2. Trends for the type of
    physiological measurement. Show All FIGURE 3. Physiological measurement. Show
    All Based on the analysis of several previous research, the direction is much
    more focused on measuring heart rate, with a total of 24 out of 35 articles. The
    second highest is the temperature measurement with 15 articles, where blood pressure
    (13 articles), blood oxygen Sp02 (10 articles) and Electrocardiogram (ECG) measurement
    is about nine articles. ECG is a medical test that records the electrical activity
    of the heart over time. The rest of the measurements did not get much attention
    from most of the researchers. The early development of conventional sensors is
    rigid, which was not practical to be used for healthcare purposes. At present,
    an emerging era of sensor technology is swiftly evolving the substrate, resulting
    in improved control and suitability for healthcare applications. The characteristics
    of the sensor, which is the advancement of flexible properties, have made the
    sensor more comfortable and biocompatible to be used in health monitoring applications,
    as elaborated in the following subsections. A. Body Temperature Sensor Body temperature
    is an indicator of the human wellness body with a temperature of each person varies
    depending on gender, age, and health status, and somehow following their daily
    activity. The average normal body temperature can range from 97.6°F (36.4°C) up
    to 99.6°F (37.3°C). There are various ways to measure the temperature, such as
    from the mouth, ear, rectum, or forehead [18]. A standard device for measuring
    body temperature is a thermometer, as shown in Fig 3(a). Different types of temperature
    sensors have their applications. The widely used sensor is LM35 [19], [20], [21],
    [22], [23], [24] due to its low cost and easy setup. A new type of flexible temperature
    sensor that can be easily attached to the skin was designed [25]. A contactless
    infrared body temperature sensor MLX-90614 is used in [26]. Fig 4 shows an example
    of the sensor used for temperature. FIGURE 4. Example of temperature sensor. Show
    All B. Blood Pressure Sensor Blood pressure is one of the critical vital signs
    that can be monitored, as shown in Fig 3(b). The blood pressure sensor measures
    two specific readings, systolic and diastolic, and measured in millimetres of
    mercury (mmHg). When assessing blood pressure, several factors might affect the
    readings, such as age, activity, medications, and the autonomic nervous system
    [27]. There are different methods for pressure measurement, and one of them is
    the oscillometric method and the auscultatory method [28], where the detection
    is based on Korotkoff sound, which comes from the acoustic transducer signal.
    Another blood pressure sensor is the BP300 sensor, a sensitive, accurate, precise
    pressure sensor [29]. Another type used for oscillometric is MEMS (micro-electro-mechanical
    system) sensor. It is a Miniature devices that combine mechanical and electrical
    components. Fig 5 shows the type of measurement tools for measuring blood pressure.
    FIGURE 5. Blood pressure measurement. Show All Recently, smartwatches which use
    an optical sensor can read blood pressure measurements by detecting the changes
    in blood volume in the tissue and the blood pressure estimation is sent to specific
    apps for further interpretation [30]. Another design comes with an inflatable
    strap wristband that will inflate to measure the blood pressure on the wrist [31].
    However, these type of smartwatches are not meant to be used as a medical devices
    or to replace one. Fig 6 shows some of the smartwatches available in the market.
    FIGURE 6. Examples of smartwatch. Show All C. Pulse Rate and Oxygen Sensor Pulse
    rate is the number of times that the heart beats per i minute (bpm) that can be
    measured during the contraction of the ventricle of the heart. The average rate
    for an adult is between 60 to 100 beats per minute and a bit fast, which ranges
    from 100 to 160 beats per minute for an infant. The average pulse rate decreases
    as the person get older [32]. Fig 3(c) shows that the pulse rate can easily be
    measured using hands. The light-dependent resistor (LDR) and piezoelectric sensor
    are used to monitor the heart rate [33], and it concluded that both sensors are
    the most suitable and less expensive. Usually, pulse rate and blood oxygen are
    measured using the same device, the pulse oximeter sensor. Several articles used
    MAX30100 and MAX30102 for pulse oximetry and heart rate monitor sensors [20],
    [34] and showed readings in the range of 95%, which is within the acceptable clinical
    range. The light absorption of red and infrared light of a pulse oximeter measures
    the oxygen saturation of the haemoglobin in the blood [35]. Most pulse oximeters
    need to be wearable, usually on a fingertip, to measure the blood oxygen level
    [36], [37], [38]. Fig 7 represents the type of pulse rate and blood oxygen sensor.
    FIGURE 7. Pulse rate and blood oxygen sensor. Show All D. Electrocardiogram (ECG)
    Healthcare professionals have used different types of ECG lead positioning, ranging
    from 3 lead up to 12 lead electrode placements. Fig 3(d) shows the example of
    an electrode lead positioning for three leads. Electrodes are small patches of
    plastic material used to detect the electrical changes in the cardiac and are
    placed at a specific point on the chest, arms, or legs [39]. A conventionally
    wet electrode is generally made of silver/silver chloride (Ag/AgCl) material and
    must be used with an electrolytic gel as a conductor between the skin and electrode
    [40], [41]. The dry electrode is a silver-coated plate that can be operated without
    the electrolytic gel, and Wang and Fang [42] used dry electrodes to measure real-time
    ECG placed on a smartphone case. Fatih [43] used three positive, negative, and
    neutral leads designed to be used with the e-Health Sensor Platform. Fig 8 shows
    the traditional and modern monitoring of ECG measurements. FIGURE 8. ECG monitoring
    sensor. Show All E. Blood Oxygen (Sp02) Fall Detection The normal range of the
    oxygen-saturated blood of healthy persons should be 96% up to 100% [44], and those
    lower than that range will show signs such as shortness of breath or chest pain.
    Blood oxygen can be measured using the pulse oximeter, which is usually reported
    as Sp02 (saturation of peripheral oxygen). Fig 3(e) shows the pulse oximeter used
    to measure blood oxygen saturation. F. Fall Detection Fall detection is one of
    the technologies important as a medical alert system that can alert other parties
    when someone has an emergency. Fall detection works in an instant, where when
    the detection is triggered, it will automatically send the signal to request help
    [45]. The fall detection sensor, the accelerometer, measures the acceleration
    by calculating the changes in motion and body position in three perpendicular
    data (x, y and z axes) and determining whether it is a fall or not. Janat and
    Haque [46] added a particular checkpoint that must all be satisfied and evaluated
    as fall. Most fall detection sensor is wearable and designed according to [45],
    the steadiest position to reflect the motion of the human body is at the waist.
    It is also found that the sensor position at the waist and wrist has the highest
    accuracy compared to the calf, chest, and thigh sensor positions [47]. Fig 3(f)
    shows an example of fall detection devices. Fig 9 represents the example of sensors
    positioning for fall detection. FIGURE 9. Fall detection sensor [62]. Show All
    Thirty-five papers have been selected for further review on wireless healthcare
    monitoring systems and classified in Table 1 according to the measurement, sensor,
    and communication types used. The last column of the table highlights the findings
    of each paper. Table 1 serves as a preliminary categorization based on measurement,
    sensor, and communication types. The subsequent focus on fall detection is explicitly
    mentioned in Table 2, where a detailed examination of measurement techniques,
    patterns, and sensor types related to fall detection is presented. Both tables
    interpret the pattern trends for the measurement sensor and the types of sensors
    as well as the communication types used. In addition, Table 2 is on reviewing
    fall detection aspects within wireless healthcare monitoring systems. TABLE 1
    Review of Measurement of the Sensors TABLE 2 Review of Fall Detection Fig 10 summarizes
    the type of communication technologies used by researchers on papers summarized
    in Table 1 while Fig 11 summarises papers summarized in Table 2. FIGURE 10. Types
    of communication used by researchers in Table 1. Show All FIGURE 11. Types of
    communication used by researchers in Table 2. Show All 1) Fall Detection: Single
    Sensor Researchers in [45] deploy a single accelerometer sensor in their work.
    They emphasize resource usage; thus, a simple and reliable threshold detection
    algorithm is deployed in their works designed adequately for outdoor applications.
    The algorithm developed does not require the axes of the accelerometer to be in
    a specific mounting orientation. A study in [97] works on improving the noise
    from the sole sensor’s data using confidence intervals and techniques of Leaving-One-Out
    before applying k-Nearest Neighbors (KNN) is a machine learning algorithm for
    classification and regression tasks. Wi-Fi network is used as a transmission medium
    alert for messages. Work in [84] opted to test their fall detector by deploying
    a threshold based Kalman filter method using non-linear metric features, which
    achieved up to 99.4% accuracy on the largest dataset freely available in the literature
    (SisFall) which is the Fall Detection Dataset - Collection of sensor data for
    studying fall detection algorithms. A real-life test leaves an excellent option
    for future enhancement of the device and research such that the false positive
    could be reduced to differentiate better fall and high-acceleration activity of
    daily living (ADLs). ADLs are the basic tasks people do every day, like eating,
    dressing, and bathing. They are important for independence and are used to check
    a person’s ability to care for themselves. They are often used in healthcare and
    rehabilitation settings to assess an individual’s physical and cognitive abilities
    and determine their need for assistance or support. The authors also claimed that
    their device satisfies the single-charged full-day use concerning a simple classification
    method, less active-time sampling rate of 25 Hz, and single-use sensor. In a slightly
    different approach, researchers in [98] use gyroscopes instead of accelerometers
    in their recognition of fall events. Nevertheless, they opted for the application
    of low complexity but advanced detection algorithm of machine learning and meticulous
    pre-processing of data, resulting in the proposed method effectively distinguishing
    fall events from other daily life activities with credible performance parameters:
    Accuracy of 99.52%, Precision of 0.993, Recall of 0.995, and F1-score of 0.994.
    Researchers in [47] proposed a framework for edge computing to process data for
    real-time analysis. They even deploy high-end deep learning of fall classification
    and public datasets for training, while validation is by experiment using the
    proposed sensor device, which includes optimum sampling frequency and ideal sensor
    placements on the subject. Another IoT-based example [92] works on a highly versatile
    fall detection system by allowing any Wi-Fi-enabled devices embedded with accelerometers
    and specific modules to act as fall monitors. Data from these devices are sent
    to the multithreaded server, which hosts a pre-trained machine learning model
    to analyze data and notifies devices of the results, user’s location, and alert
    for fall detection. To better the accuracy performance, [95] presents a personalized
    fall detection system with a deep neural network combined with ensemble techniques
    as a detection algorithm. Based on the real-world experiment, the model significantly
    outperformed the generic fall detection model, especially regarding precision.
    In a study by [84], researchers focused on acquiring data from a single type.
    However, they conducted multiple experiments on this framework and demonstrated
    that multi-sensor fusion leads to better performance of detection systems. 2)
    Fall Detection: Multi-Sensor In the early stage of multi-sensors data acquisition,
    the focus of [23] is on the wireless transmission feasibility of the data to a
    personal computer or workstation. In this case, a comparison between ZigBee and
    Bluetooth modules is discussed, eventually ending with ZigBee for lower power
    consumption. Utilizing sensors fusion advantages, [99] claims single-use accelerometers
    tend to mistake some ADLs as falls. Regarding this, the Euler angle is performed
    with their threshold-based detection to enhance their detection accuracy further.
    The work also verifies the best body location to place the sensors and obtains
    the best acceleration threshold for accurate fall detection. Data transmission
    to the android app on a smartphone using Bluetooth communication, the app will
    emit an alarm sound and issue a call to the emergency contact upon fall detection.
    Regarding user acceptability issues, work by [100] comes out with smart shoes
    equipped with force sensors and accelerometers. Fall detection works independently
    for each shoe, and by combining both sensors’ data, features are calculated to
    achieve the final output. The detailed construction of the hardware is meant for
    user comfort without noticing the presence of the system module. Interestingly
    the module is even equipped with a Bluetooth transmission module to transmit the
    data to the microcontroller Raspberry pi 3 for data processing. The health parameters
    are transferred using aRRFID Technology for tracking and identifying objects using
    radio waves signal to a data acquisition spot for both health and fall data to
    be analyzed before transmitting the results to the server via Bluetooth. In [46],
    thresholds are used as a detection algorithm with several sensors as input parameters.
    Furthermore, to complement the threshold method, the work added a series of checkpoints
    to be satisfied by the analyzed data before deciding on the output. In an emergency,
    an email and a Short Message Service (SMS) Text are used for sending brief messages
    electronically, which are prompted by Global System for Mobile Communications
    (GSM) Standard for cellular communication networks to the receiving device. The
    prominent attribute of the work is the printed stretchable metal-interconnects
    circuit board that benefitted others in terms of budget and feasibility. Different
    from [45], this work underlines the importance of the orientation of the 3-axis
    accelerometer placement on the subject. IoT with multi-sensor fusion in [93] carry
    out scalability test of system architecture for computing and storage resources
    relative to the growing number of monitored user. Several machine learning validations
    were also performed in their work and tested the detection of falls inside a Cloud-based
    data centre and on an Edge IoT device. The device-to-cloud data transmission confirmed
    that a significant size reduction of stored and transmitted data could be achieved
    while performing fall detection on the Edge. In another multi-sensor fusion utilising
    IoT, in [94] sensor is embedded in the eyeglasses, thus addressing the point of
    detection on the head area. Threshold algorithm with complementary filter as a
    method of fall detection, Wi-Fi network is utilised for sending messages tan o
    emergency contact when fall occurrence is detected. Exploiting readily available
    sensor devices, work in [90] explore the device performance with different data
    acquisition scenarios, proposing comprehensive sensing (CS) for data and running
    several machine learning algorithms for best outcome identification. The system
    in [83] consists of several microcontrollers interfacing with specific sensors.
    The temperature sensor is connected to Arduino pro mini microcontroller, transferring
    the data via an integrated Wi-Fi module to a cloud server (ThingSpeak) for monitoring.
    In contrast, ECG sensor data, blood pressure, and oxygen saturation level are
    measured using Photoplethysmogram (PPG) which is optical measurement of blood
    volume changes to assess heart rate and other parameters signal probe and transferred
    via Bluetooth to integrated development environment (IDE) software, (LabVIEW).
    Fall detection through acceleration data reading will only trigger the GSM and
    GPS module to send an alert and the subject’s location to authorities upon exceeding
    the threshold value. Work by [88] came out with special measures for detecting
    the possible fall by analyzing the unusual human gait change that can indicate
    a forthcoming fall. The methods proposed six force sensors installed in the shoe
    linings, three on each shoe. The proposed method and equipment setup is universal
    and adjustable according to the individual case. The accuracy of abnormality gait
    detection reached up to 94%. While in [87] proposing head-mounted device fall
    detection. The detection method was applied on the threshold with several pre-processing
    for each input reading and Madgwick’s filter to improve the accuracy of the estimation
    of orientation, which is inflexible in new input data detection. The sampling
    frequency for the subject’s posture reading is every 50 milliseconds. When the
    reading exceeds the threshold limit, the system will only prompt the Wi-Fi module
    when a fall is detected to notify the emergency contact of the user’s condition.
    Work in [85] focuses on the feasibility of applicating smartwatches to fall detection.
    The choice of sensor location is due to wide acceptance, ergonomic value, and
    low cost of the device. 3) Fall Detection: Ambient/Environment-Based The camera-based
    approach is common in fall detection systems in the ambient-based method. As in
    [101], the work initiates data augmentation to reduce the time spent collecting
    enough data and overcome the overfitting issue. Moreover, with a high-end detection
    algorithm, the system achieves excellent results. A significant contribution by
    [102] exploits the phase and amplitude of the fine-grained Channel State Information
    (CSI) accessible in commodity Wi-Fi devices for activity segmentation and fall
    detection. Further, control characteristics of falls in the time and frequency
    domain for accurate fall segmentation/detection and find the fall’s sharp power
    profile decline pattern in the time-frequency domain. The system consistently
    outperforms state-of-the-art fall detector WiFall [103]. Another work deploying
    commodity W-Fi framework is [91] by collecting disturbance signs induced by human
    motions and applying the discrete wavelet transform (DWT) method to eliminate
    random noise in the data. Next, a deep learning model is utilized, and data are
    uploaded to the proxy server from which the client application obtains the corresponding
    fall information. Force sensor acts less precisely in differentiating between
    lying on the floor and falling; nevertheless, an accelerometer makes a good high-jolt
    detector an additional source for fall detection. Instead of attaching the sensor
    to the user, work in [97] install sensors under floor tiles and analyze both sensors’
    data reading for fall detection. Meanwhile, [104] captures the intricate properties
    of the radar returns and demonstrates profound learning detection superiority
    over conventional and Principal Component Analysis (PCA) which is statistical
    technique for data dimensionality reduction and pattern recognition based methods.
    A unique approach by [86] extracts Doppler signatures from Doppler spectrum signal
    measurement to identify falling events. The work analyses classification performance
    relating to the antenna orientation, polarisation effects, and radiation pattern.
    They also address mitigating limitations in a fall detection system based on a
    single sensor by considering the impact of antenna orientation in the signal model.
    Most fall detection examples above use accelerometers except for the ambient-based
    method, which utilised cameras, radio frequency or sensors attached to the surrounding,
    each with advantages and disadvantages. More importantly, the purpose is for the
    patient / elderly to get timely assistance. The sensor’s location for fall detection
    can be summarized in Fig 12. FIGURE 12. Location of sensor. Show All SECTION III.
    Data Collection Raw data from the sensors usually need an easily readable interface.
    As in several articles, the detection of all sensors have been interface with
    Arduino [19], [21], [33], [34], [42]. Generally, the Arduino (Fig 13) has a Wi-Fi
    connection using the external module and the specification of Ardunio is in Table
    3. Alternatively, an ESP32 is also used as the interface to read the data. ESP32
    microcontroller (Fig 14) has integrated Wi-Fi and dual-mode Bluetooth, a wireless
    communication technology that combines both Classic Bluetooth and Bluetooth Low
    Energy (BLE) which is Wireless communication technology for short-range connections
    into a single device [22]. Besides, the ESP32 has more memory capacity than the
    Arduino itself [19]. The ESP 32 specification is shown in Table 4. Another article
    used a PIC microcontroller (Fig 15) in their research to provide continuous health
    monitoring focusing on temperature and heartbeat. PIC microcontroller offers high
    performance and low power consumption [63]. The PIC microcontroller specification
    is shown in Table 5. TABLE 3 Arduino Specification TABLE 4 Esp 32 Specification
    TABLE 5 Pic Microcontroller Specification FIGURE 13. Arduino and Its specification
    [105]. Show All FIGURE 14. ESP 32 AND ITS SPECIFICATION [106]. Show All FIGURE
    15. PIC microcontroller and Its specification [107]. Show All There are many differences
    between Arduino, Wi-Fi and Bluetooth Module (ESP32) and Peripheral Interface Controller
    (PIC) microcontrollers.One thing to consider in choosing the best interfacing
    module is probably in terms of cost. ESP 32 and PIC microcontrollers are cheaper
    compared to an Arduino. In terms of simplicity, Arduino is more user-friendly
    because it comes with open-source hardware, and the programming environment is
    straightforward, even for the beginner. In terms of features, ESP32 has an advantage
    when it already has built-in an integrated Wi-Fi and Bluetooth module. Compared
    to Arduino, it requires an external module to connect to wireless communication.
    SECTION IV. Communications In a wireless health monitoring system, the wireless
    communication modules are vital to receive or send adequate data to the intended
    location. Wireless health monitoring systems have been developed utilizing a variety
    of communication technologies. It has evolved rapidly from various communication
    modes to fulfil the target application’s requirements. Essentially, there are
    two main types of wireless communication, namely short-range wireless communication
    and long-range wireless communication. The former is usually used to communicate
    amongst devices within the WBAN, whilst the latter establishes a connection between
    the WBAN’s central node and a base station or a satellite so that the data can
    be forwarded to the healthcare system. In this section, we will also discuss the
    communication protocols at the application layer which often hold substantial
    importance due to their critical role in addressing the unique challenges of IoT
    particularly for wireless health monitoring. A. Short-Range Wireless Communications
    Short-range wireless communication often refers to wireless communication with
    a range of less than a hundred meters. Short-range wireless communication is frequently
    employed between wireless health monitoring system nodes, most notably between
    sensor nodes and the central node that does data processing. While short-range
    communication standards can be utilized for other purposes, this survey is focused
    on developing a small WBAN with only a few sensors and single or multiple central
    nodes (i.e. MCUs) and in cases where a Local Area Network (LAN) is a network of
    interconnected devices within a limited geographical area to connect the central
    node/MCU to an access point. There are numerous short-range communication technologies,
    but the most frequently used health monitoring are Bluetooth, Wi-fi, ZigBee, and
    Near Field Communication (NFC) Short-range wireless technology for contactless
    data exchange. A comparison of significant short-range communication technologies
    is shown in Table 6, together with the list of references that employ the associated
    communication technologies. TABLE 6 Comparison of Short-Range Communication Technologies
    Bluetooth is one of the most widely used communications technologies for personal
    area networks since it provides reasonably high bandwidth and is commonly implemented
    in commercial devices like smartphones or laptops. Bluetooth 4.0 communication
    provides data within the transmission range of up to 10 meters and a data rate
    of up to 1 Mbit/s. In [3], [42], and [64], a low-energy version of Bluetooth 4.0,
    which is known as Bluetooth low energy (BLE), is employed in their health monitoring
    systems. BLE is advantageous in terms of its low power consumption. In 2016, Bluetooth
    5 was released, enabling BLE to twice its speed (2 Mbit/s) at the expense of range
    or to double its capacity up to fourfold at the data rate cost [144]. The increase
    in transmissions may be critical for IoT devices, which connect several nodes
    throughout a particular area. In general, Bluetooth is an excellent fit for healthcare
    applications. It is secure and has a good range for WBANs, low latency, low power
    consumption, and robustness to interference [145]. Bluetooth has been frequently
    used in wireless healthcare monitoring systems enabling patients to transmit vital
    signals such as ECG, blood pressure, and oxygen saturation levels to healthcare
    practitioners [143]. Besides focuses, ZigBee is an open global standard for wireless
    technology that enables low-power and low-bandwidth transmissions suitable for
    remote monitoring, control, and sensor network applications [146]. Besides Bluetooth,
    ZigBee is another widely used wireless technology in WBANs since it focuses on
    applications that demand a low data rate and long battery life. A ZigBee network
    is much easier to manage and less expensive than another wireless personal area
    network [24]. Additionally, ZigBee networks have a low transmission delay, making
    them ideal for medical system requirements [23], [66], [122]. ZigBee is expected
    to play a significant role in wireless healthcare monitoring systems by transmitting
    physical parameters between patients and healthcare providers. The primary disadvantage
    of ZigBee is that key exchange can be compromised unless the manufacturer implements
    it extremely well [145]. Additionally, ZigBee is not frequently used in mobile
    devices such as smartphones, whereas BLE is. As a result of this, it is suggested
    that ZigBee would be better suited to fixed-location, standalone applications
    such as home automation than wearable healthcare systems [145]. Another popular
    mode of communication is the Wi-Fi connection. Wi-Fi includes the IEEE 802.11a/b/g/ac
    standards for wireless local area networks. Connecting to an access point (AP)
    or operating in ad hoc mode enables users to surf the Internet at broadband speeds.
    Additionally, Wi-Fi gives the high-speed connectivity of Ethernet without the
    need for a connection. When near an AP, a person can connect to the Internet using
    a Wi-Fi-enabled device such as a computer, smartphone, or handheld device. Nowadays,
    Wi-Fi has played an essential role in modern society due to its unique properties,
    such as extended transmission distance, rapid transmission speed, interoperability
    with other services, and security. In telemedicine devices, Wi-Fi has been employed
    to send data to the intended location [33], [36], [37], [87], [88]. As mentioned
    in [22], using a microcontroller equipped with a built-in Wi-Fi module simplifies
    collecting data and wirelessly transmitting it to IoT websites. Near-field communication
    (NFC) technology enables non-contact point-to-point data exchange between electronic
    devices within a range of about 20 cm [145], [147]. This technology is based on
    RFID and connectivity technologies investigated and developed by Philips, Nokia,
    and Sony. NFC operates at a frequency of 13.56 MHz and transmits data at a rate
    of up to 424 Kbit/s. NFC technology has gained widespread popularity among mobile
    phone vendors and related fields owing to its compatibility with already-established
    technologies such as RFID, smart cards, and contactless cards. NFC applications
    in telemedicine monitoring have recently received increased attention [142], [143].
    It is anticipated that the rapid advancement of information technology will inevitably
    influence the healthcare system soon. B. Long-Range Wireless Communications Short-range
    wireless communication provides communication between the sensors and devices
    within the WBAN. The information from the sensors or MCUs was not meant to be
    kept and needs to be forwarded to the hospital/medical information system or the
    doctor in charge, which may be located hundreds of miles away from the patients.
    This can be accomplished using long-range backhaul communications through a wide-area
    network (WAN). A comparison of significant long-range communication technologies
    is shown in Table 7, together with the list of references that employ the associated
    communication technologies. TABLE 7 Comparison of Long-Range Communication Technologies
    In smart healthcare, various wireless communication technologies can be used to
    transfer data over a long distance between a central node to a base station/satellite.
    Low-Power Wide-Area Networks (LPWANs) are a subset of long-range communication
    standards that are well-suited for IoT applications. An LPWAN typically has a
    range of several kilometres, even in an urban environment. This is significantly
    longer than the range of traditional IoT communications technologies such as Wi-Fi
    or Bluetooth. LPWANs are suitable for a variety of healthcare applications, including
    general and critical health monitoring, receiving emergency calls, and rehabilitation.
    Additionally, this design principle enables low-power device design, extending
    the time between human involvement to recharge or swap batteries. Among the most
    prominent standards for LPWANs are Sigfox, long-range radio WAN (LoRaWAN), and
    narrowband IoT (NB-IoT). Sigfox is an ultra-tight band radio technology with a
    comprehensive star-based framework that creates a highly adaptable worldwide network
    for innovative healthcare applications with extremely low power consumption [148].
    In urban areas, Sigfox has a maximum range of 9.5 kilometres with a low data rate
    of 100b/s, while in rural areas, Sigfox has a range of up to 50 kilometres with
    a data rate of 300b/s. Sigfox is well suited for non-critical applications in
    which message delivery speed and reception acknowledgements are not vital. However,
    in healthcare, it is critical to transfer messages at a reasonable rate successfully.
    Any security breach could harm an individual’s health or the integrity of medical
    databases. As a result, it is recommended in [145] that Sigfox not be used in
    mission-critical healthcare applications. LoRaWAN is a network layer protocol
    built on top of the LoRa specification [186]. It has a star architecture, and
    nodes connect only when necessary, such as after an event or scheduled measurement.
    Additionally, LoRaWAN has a high network capacity, which enables the transmission
    of many messages simultaneously over the network. Due to its range, latency, and
    network capacity, LoRaWAN is generally well-suited for healthcare applications.
    Similar to Sigfox, LoRaWAN works in unlicensed bands, so security and interference
    may be a concern. NB-IoT, which was just standardized in 3GPP Release 13, works
    in permitting the global system for mobile communications (GSM) or long-term evolution
    (LTE) channels and enables long-range, low-power communications [162]. Because
    NB-IoT is based on LTE, most of the existing LTE hardware may be utilized to deploy
    it quickly and effectively. The primary advantage of operating inside licensed
    bands is the lower chance of interference. However, one potential downside is
    that NB-IoT costs will almost certainly be higher than unlicensed bands. NB-IoT
    has a range of up to 35 kilometres due to its high receiver sensitivity of 164
    dB and can achieve the highest uplink data rate of 250 kbit/s [145]. The high
    data rate and extensive range make it excellent for healthcare applications, as
    messages can reach a reasonable distance quickly for even the most crucial health
    situations. NB-IoT is well-suited for medical applications. It is secure, allows
    long-range communications, is energy efficient, and can accommodate many devices.
    The primary disadvantages are the current lack of deployment and higher power
    usage compared to other Low-Power Wide-Area Networks (LPWANS) which are wireless
    networks designed for long-range communication with low power consumption such
    as Sigfox and LoRaWAN. Another mode of long-range communication is cellular communication
    technologies, for example, GSM, GPRS, 3G Universal Mobile Telecommunications System
    (UMTS), 4G LTE which is standard for high-speed wireless communication for mobile
    devices, and 5G LTE-Advanced. Cellular communication technologies, particularly
    4G and 5G, can deliver extremely high data rates with ultra-low latency, making
    them ideal for critical healthcare applications that require real-time multimedia
    content transfer [149]. Furthermore, the cellular network is widely deployed in
    most places. However, because cellular communication technologies are designed
    for mobile phone applications, they have a significant power consumption and are,
    therefore, unsuitable for IoT applications. Extended Coverage—GSM (EC-GSM) was
    introduced to improve GSM for IoT usage, exploiting the existing GSM network.
    Enabling EC-GSM requires updating the software on current GSM gateways. EC-GSM
    improves coverage by up to 20 dB, supports up to 50,000 devices per gateway, and
    offers a data rate of less than 140 kbit/s for both uplink and downlink, which
    is slower than NB-IoT [187]. The power-saving version of LTE for IoT applications,
    known as the LTE Machine Type Communications Category M1 (LTE-M), also has been
    developed to utilize the capacity of an LTE carrier while improving the battery
    life of IoT devices and expanding the coverage of the network. LTE-M, with a maximum
    data rate of 1 Mbit/s, enables more advanced IoT applications. However, it has
    a limited range and can accommodate only about 20,000 nodes per gateway [145].
    LTE-M is unquestionably an ideal solution for a system that requires fast speed,
    enormous amounts of data, and advanced functionality. This may not be the case
    for many healthcare applications that transmit small amounts of essential data
    intermittently and would benefit from long-range, high-capacity gateways, such
    as those found in NB-IoT [145]. The satellite is one of the communication systems
    that provide global coverage. Satellite communications enable the provision of
    various wireless services, including the GPS. Generally, GPS has been used to
    determine position and timing and to direct the user to a specific location. In
    this scenario, some researchers have used GPS to determine the user’s location
    for fall detection applications [45], [83], [85]. C. Communication Protocols Data
    exchange is crucial in IoT, and the application layer provides the messaging functionality
    needed to make IoT services work. The choice of the application layer communication
    protocol plays a pivotal role in determining the efficiency, reliability, and
    real-time responsiveness of wireless healthcare monitoring systems. By selecting
    the most suitable protocol based on the specific requirements of the application,
    healthcare providers can ensure seamless data exchange, timely interventions,
    and improved patient outcomes. Among the key application layer communication protocols
    that cater to different aspects of healthcare monitoring are Message Queuing Telemetry
    Transport (MQTT), Constrained Application Protocol (CoAP), Extensible Messaging
    and Presence Protocol (XMPP), and Advanced Message Queuing Protocol (AMQP). MQTT
    is a messaging transport protocol that is based on publish-subscribe architecture
    and it was first introduced in 1999 [188]. MQTT has gained prominence as a robust
    and efficient communication protocol within wireless healthcare monitoring applications
    [189], [190], [191]. Operating on the publish-subscribe model, MQTT enables medical
    devices to publish health data to specific topics, which are then subscribed to
    by authorized healthcare providers or monitoring systems. This real-time data
    exchange mechanism proves invaluable in scenarios requiring prompt medical interventions
    or remote patient care. MQTT’s lightweight nature ensures minimal overhead on
    devices, making it well-suited for resource-constrained wearable devices and sensors.
    Considering that many IoT devices possess constrained power and storage capabilities,
    the CoAP protocol serves to extend the functionalities of the Hypertext Transfer
    Protocol (HTTP), which tends to be relatively complex, by catering to the specific
    requirements of IoT devices [192]. CoAP’sl architecture makes it ideal for interfacing
    with web services, allowing healthcare data to be easily integrated into existing
    medical systems. CoAP’s design aligns with the requirements of wearable health
    trackers and remote patient monitoring, where energy efficiency is crucial [193].
    With its low overhead and efficient message serialization, CoAP ensures effective
    communication over wireless links with minimal energy consumption. In wireless
    healthcare monitoring, real-time communication and presence tracking are often
    essential. XMPP, originally designed for instant messaging, has been adapted for
    healthcare applications to provide timely alerts and seamless communication between
    patients, caregivers, and medical professionals [194], [195]. XMPP’s support for
    presence management aids in tracking patients’ status, making it suitable for
    emergency scenarios and timely interventions. AMQP is an open standard designed
    for facilitating business communication between applications, functioning asynchronously
    across diverse entities and platforms to provide message services such as privacy,
    queuing, durability, and routing [196], [197]. It operates as a wire-level protocol,
    enabling the reliable exchange of business messages. AMQP’s focus on reliable
    message queuing finds applicability in healthcare monitoring systems that demand
    stringent data integrity and guaranteed delivery [198]. Its sophisticated message
    broker architecture ensures that health data is transmitted and processed reliably,
    making it suitable for critical healthcare applications that involve data analysis
    and processing pipelines. SECTION V. Conclusion A total of thirty-five papers
    have been selected for review. The summarization of the research findings has
    been noted in Table 1 above. Based on Fig 2, it can be said that most of the papers
    reviewed focus on measuring the heart rate followed by measuring the body temperature.
    The table shows that the sensor used for measuring the heart rate mainly uses
    a piezoelectric sensor or MAX30100, a type of built-in pulse oximetry (for measuring
    blood oxygen) and a heart rate sensor. A typical sensor for body temperature,
    which is LM35, has been selected by most researchers due to its suitability and
    ease of setup. However, as this type of sensor is used for measuring body temperature,
    it needs to be attached to the skin compared to other sensing materials. The usual
    device will be equipped with a pressure sensor and a cuff to measure blood pressure.
    This type of measurement is more accurate compared to the available market smartwatch.
    The same goes for ECG measurement. ECG measurement is also available in a variety
    of smartwatches. However, in case of accuracy, the user needs to consult the doctor
    for further examination. For the fall detection sensor, 18 papers have been reviewed,
    as shown in Table 2, where the most common sensor used is the accelerometer sensor.
    By referring to the table, waist and wrist are the selected places to wear for
    the fall detection sensor. Theoretically, when comparing the wrist and the waist,
    it is better to put the sensor at the waist because the wrist will make a lot
    of movement compared to the waist position. Furthermore, fall detection usually
    happens instantly, requiring instant feedback. Based on the review, most of the
    features of the fall detection sensor will make it end up sending an alert message
    to any emergency contact. Furthermore, the communication part must be appropriately
    determined to make a system work wirelessly. Many types of communication can be
    used to transfer the data to the receiver. Usually, in a perfect system, various
    kinds of communication have been used, for example, GPS to track location and
    Wi-Fi to transmit the data to the cloud. Many existing healthcare monitoring systems
    rely on Wi-Fi for short-range communication due to its availability and ease of
    use/setup. Wi-Fi can provide a high data rate but at the expense of significant
    power consumption. Due to this, Wi-Fi is typically utilized to connect the central
    node/MCU to the AP and is not ideal for WBAN. Meanwhile, Bluetooth or BLE is an
    excellent fit for healthcare applications, especially to provide communication
    links for WBANs. It is secure and has a good range for WBANs, low latency and
    low power consumption. Meanwhile, ZigBee is also a good alternative for short-range
    communication, particularly for WBANs, as the ZigBee network is much easier to
    manage and less expensive than other wireless personal area networks. However,
    ZigBee is not frequently used in mobile devices such as smartphones, whereas BLE
    is. As a result, it is suggested that ZigBee would be better suited to fixed-location,
    standalone applications than wearable healthcare systems. Many systems rely on
    GSM messaging services for long-range communications to offer simple updates from
    sensor readings and to transmit an alert message over a long distance. However,
    GSM’s power consumption is high and unsuitable for IoT applications. Meanwhile,
    an LPWAN is a subset of wireless technologies well-suited to the unique requirements
    of machine-to-machine and IoT devices. The long-range and low-power design features
    of LPWANs are suitable for various healthcare applications, including general
    and critical health monitoring, emergency calls, and rehabilitation. Among the
    most prominent standards for LPWANs are Sigfox, LoRaWAN, and NB-IoT. Sigfox and
    LoRaWAN work in unlicensed bands, so security and interference may be a concern
    as opposed to NB-IoT, which operates in licensed bands. However, NB-IoT is more
    expensive and consumes more power than Sigfox and LoRaWAN. Cellular communication
    technologies, notably 4G and 5G, can deliver extremely high data rates with extremely
    low latency, making them perfect for mission-critical healthcare applications
    requiring real-time multi-media content transfer. The main drawback of cellular
    communication technologies is the high-power consumption as they were developed
    for mobile phone applications. Alternative technologies have been developed for
    IoT applications based on cellular communication technologies such as EC-GSM and
    LTE-M providing a more extended range and lower power consumption than conventional
    cellular technologies. Besides, the satellite service GPS also has been used to
    determine users’ location, especially for fall detection applications. Each mode
    of communication has several benefits and drawbacks. The type of communication
    to be used must be appropriately selected and meet the system’s specifications.
    Authors Figures References Keywords Metrics More Like This A 1.2-V 1.35-μW all
    MOS temperature sensor for wireless sensor networks 2015 IEEE International Symposium
    on Circuits and Systems (ISCAS) Published: 2015 Key Technology of Passive Wireless
    Temperature Measurement of Power High-Voltage Switchgear Based on Wireless Sensor
    Network 2022 IEEE Conference on Telecommunications, Optics and Computer Science
    (TOCS) Published: 2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Comprehensive Review on Wireless Healthcare Monitoring: System Components'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ahmad I.
  - Rodriguez F.
  - Kumar T.
  - Suomalainen J.
  - Jagatheesaperumal S.K.
  - Walter S.
  - Asghar M.Z.
  - Li G.
  - Papakonstantinou N.
  - Ylianttila M.
  - Huusko J.
  - Sauter T.
  - Harjula E.
  citation_count: '0'
  description: Industry 4.0 is moving towards deployment using 5G as one of the main
    underlying communication infrastructures. Thus, the vision of the Industry of
    the future is getting more attention in research. Industry X (InX) is a significant
    thrust beyond the state-of-the-art of current Industry 4.0, towards a mix of cyber
    and physical systems through novel technological developments. In this survey,
    we define InX as the combination of Industry 4.0 and 5.0 paradigms. Most of the
    novel technologies, such as cyber-physical systems, industrial Internet of things,
    machine learning, advances in cloud computing, such as edge and fog computing,
    and blockchain, to name a few, are converged through advanced communication networks.
    Since communication networks are usually targeted for security attacks, these
    new technologies upon which InX relies must be secured to avoid security vulnerabilities
    propagating into InX and its components. Therefore, in this article, we break
    down the security concerns of the converged InX-communication networks into the
    core technologies that tie these, once considered distinct, fields together. The
    security challenges of each technology are highlighted and potential solutions
    are discussed. The existing vulnerabilities or research gaps are brought forth
    to stir further research in this direction. New emerging visions in the context
    of InX are provided towards the end of the article to provoke further curiosity
    of researchers.
  doi: 10.1109/OJCOMS.2024.3356076
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Open Journal of the Comm...
    >Volume: 5 Communications Security in Industry X: A Survey Publisher: IEEE Cite
    This PDF Ijaz Ahmad; Felipe Rodriguez; Tanesh Kumar; Jani Suomalainen; Senthil
    Kumar Jagatheesaperumal; Stefan Walter; Muhammad Zeeshan Asghar All Authors 266
    Full Text Views Open Access Under a Creative Commons License Abstract Document
    Sections I. Introduction II. Related Work III. A Brief Introduction to Key Enabling
    Technologies IV. Security of Communications in InX V. Security of Key Industry
    Infrastructure Technologies Show Full Outline Authors Figures References Keywords
    Metrics Abstract: Industry 4.0 is moving towards deployment using 5G as one of
    the main underlying communication infrastructures. Thus, the vision of the Industry
    of the future is getting more attention in research. Industry X (InX) is a significant
    thrust beyond the state-of-the-art of current Industry 4.0, towards a mix of cyber
    and physical systems through novel technological developments. In this survey,
    we define InX as the combination of Industry 4.0 and 5.0 paradigms. Most of the
    novel technologies, such as cyber-physical systems, industrial Internet of things,
    machine learning, advances in cloud computing, such as edge and fog computing,
    and blockchain, to name a few, are converged through advanced communication networks.
    Since communication networks are usually targeted for security attacks, these
    new technologies upon which InX relies must be secured to avoid security vulnerabilities
    propagating into InX and its components. Therefore, in this article, we break
    down the security concerns of the converged InX-communication networks into the
    core technologies that tie these, once considered distinct, fields together. The
    security challenges of each technology are highlighted and potential solutions
    are discussed. The existing vulnerabilities or research gaps are brought forth
    to stir further research in this direction. New emerging visions in the context
    of InX are provided towards the end of the article to provoke further curiosity
    of researchers. Published in: IEEE Open Journal of the Communications Society
    ( Volume: 5) Page(s): 982 - 1025 Date of Publication: 19 January 2024 Electronic
    ISSN: 2644-125X DOI: 10.1109/OJCOMS.2024.3356076 Publisher: IEEE Funding Agency:
    CCBY - IEEE is not the copyright holder of this material. Please follow the instructions
    via https://creativecommons.org/licenses/by/4.0/ to obtain full-text articles
    and stipulations in the API documentation. SECTION I. Introduction Moving through
    the ladder of the industrial revolution on its logical path [1], the industry
    of the future or Industry X (InX) couples the digital and physical world through
    novel scientific and technological transformations, beyond Industry 4.0. Industry
    4.0 [2], is the present big industrial transformation after mechanization, electrification,
    and information were introduced, and it is considered a key step in the advancement
    of the industry to its state-of-the-art [3]. Industry 5.0 is often seen as the
    extension of Industry 4.0 (focusing on data-driven applications and connectivity)
    towards the adoption of advanced artificial intelligence (AI) technologies for
    industrial automation and human-robot collaboration [4]. The European Union (EU)
    commission envisions Industry 5.0 as an extension that will focus on and be an
    enabler for advanced R&D, investment for up- and re-skilling of workers, circular
    economy, and human-centric adoption of digital technologies and AI [5]. InX is
    a combination of technology paradigms in Industry 4.0 and 5.0, as well as drivers
    and processes enabling the continuous evolution of industry beyond Industry 5.0.
    The foundations of Industry 4.0, i.e., connectivity of industrial systems, processes,
    and services through novel communication networks, have become pivotal to the
    success of InX [6]. The fifth-generation wireless networking, known as 5G, facilitates
    the envisioned humongous growth of the Industrial Internet of Things (IIoT), and
    cyber-physical systems (CPS), providing extremely low latency connectivity for
    critical functions of InX. However, advanced communications networks have their
    security challenges and require novel solutions for mitigating these challenges
    [7], [8]. The key technologies of Industry 4.0 include mobile Internet, IoT, CPS,
    cloud computing, big data, and advanced analytics techniques [3]. From the communications
    perspective, each of these has its security weaknesses and vulnerabilities and
    when combined into an ecosystem, the emerging complexity due to mixed criticality
    [9] can further exacerbate the challenges. Therefore, a thorough analysis of the
    security of the underlying communication systems and technologies is necessary
    from many perspectives, yet the main one is the improvement of the overall resilience
    of critical InX applications enabling their uninterrupted role in our societies.
    The security weaknesses in the enabling technologies of InX, which can be used
    by malicious internal and external actors, must be properly studied. For instance,
    weaknesses of most IoT devices in using proper encryption techniques must also
    be brought forth to avoid sending or redirecting sensitive information through
    such devices. Similarly, if physical access to CPS systems cannot be restricted,
    proper security mechanisms must be in place to avoid tampering even with physical
    access. Furthermore, communication networks, such as 5G, have loopholes in terms
    of security as clearly elaborated and outlined in [7], [10]. InX relies on such
    communication networks to connect critical infrastructure and its elements, such
    as IIoT and CPS [11]. The EU Commission recognizes these emerging challenges and
    places resilience as one of the three main pillars of Industry 5.0. Therefore,
    security concerns related to the enabling technologies of InX, such as 5G, CPS,
    IIoT, etc., must be considered at all levels and resolved to avoid possible cascading
    effects due to the reliance of technologies on each other. A. Roadmap to InX:
    Motivation The industrial revolutions have transformed the quality of life of
    most of the world by changing the means of production from human-intensive to
    machine-intensive. Scientific and technological innovations brought the revolutions
    that changed the ways of working, living, using resources, and human experiences.
    The first industrial revolution (Industry 1.0) (1760–1840) was mainly characterized
    by the mechanization of production and steam power. The second industrial revolution
    (Industry 2.0) (1870–1920) was mainly driven by electricity and the development
    of the internal combustion engine. The third industrial revolution (Industry 3.0)
    (1960–2000) was characterized by the development of electronics, computers, and
    telecommunications. The fourth industrial revolution (Industry 4.0) (2000–2025)
    is attributed to the development of Internet technologies, whereas the fifth industrial
    revolution (Industry 5.0) (beyond 2025) revolves around the role of AI. Industry
    X, the term used in this paper, engulfs Industry 5.0 and beyond and is described
    in the rest of this subsection. These revolutions are also depicted in Fig. 1.
    It is important to note that there are differences in definitions and variations
    in the time spans of the revolutions. However, the aim is to provide a brief generic
    background for the rest of the study of this paper. FIGURE 1. Continuum from Industry
    1.0 to Industry 5.0, and then converging to InX. Show All Industry 4.0 has become
    a center of attraction in developed countries and a strong strategic or even political
    goal in the first place [12]. Even though it is considered a fundamental paradigm
    shift in industrial production with great expectations for innovation, the concept
    of Industry 4.0 is only loosely defined and heavily linked to the technological
    developments in the last decade [13]. Considered the driving force behind innovation
    in many fields and dimensions of social development, Industry 4.0 is not a singleton
    technological development, but rather an ecosystem that provides an umbrella of
    distinct technological developments under the guise of industry of the future
    [14]. The main features of Industry 4.0 include i) horizontal integration through
    value networks to facilitate collaboration among corporate sectors, ii) vertical
    integration of hierarchical subsystems in a factory to create a flexible and re-configurable
    manufacturing system, and (iii) end-to-end engineering integration across entire
    value chains to support customization of products [2], [11], [15]. These features
    indicate a strong need for the integration of various systems and services that
    may comprise different combinations of the above stages and can be in different
    geographical locations. Therefore, the security of the communication systems that
    facilitate integrating the systems of Industry 4.0 is of paramount importance
    due to the critical nature of the infrastructure. The basic design principles
    of Industry 4.0 are i) interconnection, ii) information transparency, iii) decentralized
    decisions, and iv) technical assistance [16]. Communication is a core requirement
    to implement these principles. Therefore, beyond traditional industrial communication,
    the major enabler of Industry 4.0 has been the introduction of Internet technologies
    to achieve the required massive interconnection on and across all levels [6].
    This includes modern cloud concepts as well as the IoT and goes far beyond individual
    remote connections to production facilities that have been discussed already 25
    years ago. On the downside, the strong reliance on Internet technologies and the
    increasing use of IT devices on the factory floor has also brought cyber-threats
    closer to the industrial environments where they have an impact on the safety
    and stability of production systems [17]. The European Commission formally introduced
    the term “Fifth Industrial Revolution (Industry 5.0)” in 2021 through the Directorate-General
    for Research and Innovation [18]. The main aim as discussed in [18] was to initiate
    a wider debate on shaping Industry 5.0 in the European context. Industry 5.0 revolves
    around three main drivers, i.e., i) Sustainability, ii) Resilience, and iii) Human-centricity,
    as defined by the European Commission [18]. Even though the roots of Industry
    5.0 are in the concepts of Industry 4.0, the focus of Industry 5.0 remains on
    long-term service to humanity within our planetary boundaries, highlights the
    European Commission. The concepts of Industry 5.0 and Society 5.0, a term coined
    by the Japanese, are related in the sense that Society 5.0 represents a society
    after the dominance of “information” and ripe with the use of IT technologies,
    IoT, AI, robots, and AR, all serving humanity in everyday life and every sphere
    including industries [18]. Even though Industry 5.0 is human-centric, its emphasis
    on advanced digitization, big data, and AI in the digital sphere will meet new
    and emerging requirements of the future industrial landscape, such as InX. Being
    one of the three main visions, resilience is the key pillar to develop a higher
    degree of robustness in industrial production to work normally during disruptions,
    and even provide support to critical infrastructure during times of crisis. Even
    though resilience can be defined according to a specific context, generally resilience
    is “the capacity of a system to absorb disturbances while responding to an ongoing
    change so that the system can sustain its function, structure, and output levels”
    [19], whereas, technological resilience allows industries to adopt to and respond
    to crisis [20]. Industry 5.0 must have resilient strategic value chains, adaptable
    production capacity, as well as enough flexibility in the business processes.
    Furthermore, resilience enables the industry to cope flexibly with disruptive
    changes, and vulnerabilities on many levels including the factory floor, supply
    networks, and industrial systems. However, the general trend in innovation focuses
    on efficiency, whereas resilience is mostly overlooked. Since the main differentiating
    pillars of InX from the earlier industrial revolutions are emerging technologies,
    cybersecurity becomes the main pillar to make InX as resilient as required. Therefore,
    the security of the most important enabling technologies needs a thorough investigation.
    Since communication technologies connect the vital components of the industrial
    ecosystem, the security of communication technologies comes to the forefront for
    securing the overall ecosystem. It is important to note that the main driving
    force for evolution from Industry 4.0 to Industry 5.0 is remote production with
    distributed value chain [21] that requires fool-proof security of enabling connectivity
    technologies. Therefore, in this article, we focus on all technological enablers
    of InX that are used either as communication media or require digital communication
    for its very functionality. Fig. 2 highlights the scope of our paper, where each
    underlying enabling technology converges for enabling InX. We are looking at the
    security aspects of the most relevant technological enablers, as well as the impacts
    arising from their integration into Industry 4.0 and 5.0 concepts. Furthermore,
    we are looking at the security enablers and challenges of future technologies
    adopted by InX. FIGURE 2. Scope of the survey: security implications and impacts
    inherited from different InX technologies, and new security implications arising
    from paradigm integration and from the technology evolution. Show All This work
    is motivated by the increasing cyber security challenges related to the technological
    enablers of InX. As depicted in Fig. 2, many technologies will converge in InX,
    and each enabling technology, such as 5G, IIoT, AI, and AR, to name a few, has
    its security challenges. With its integration into InX, the overall security threat
    landscape will hugely increase. For example, the security threats in 5G as explained
    in [22] can expose production lines to security threats if insecure 5G base stations
    provide the connectivity between different assembly lines. Similarly, AI has many
    security challenges as explained in [23], which can cause serious harm in several
    operations, such as during monitoring and maintenance, in the InX ecosystem. IIoT
    makes the foundation of many systems and services, however, it has been revealed
    in many studies that the firmware of the majority of IIoT devices has inherent
    weaknesses that can be exploited for security attacks, as discussed in Section
    IV. Hence, the applications of these technologies in InX necessitate a thorough
    investigation of the security threat landscape of InX. Therefore, in this article,
    our main motivation is to investigate the consequential security challenges InX
    will face due to the integration of such novel technologies, study the potential
    security solutions, and find the existing security gaps for future research. B.
    Contributions of this Article In the evolution towards InX, what are the most
    important technological enablers of InX that rely on communications networks and
    technologies? Since communications technology will make the backbone of most enabling
    or supporting technologies of InX, what will be the most important security challenges
    (weaknesses and threats) to those technologies and the overall InX ecosystem?
    What are the potential security solutions for those security challenges in each
    of the enabling technologies? What are the main standardization efforts in the
    realm of security of those enabling and supporting technologies of InX? What are
    the main existing security gaps that require further research? In this article,
    the emerging security challenges in communications of technologies of InX are
    identified, discussed, and evaluated to motivate future research in this direction.
    First, the main technologies used to enable InX are highlighted. Then their security
    weaknesses are discussed based on recent state-of-the-art research work. Furthermore,
    the potential security solutions and technological concepts are presented. Future
    research directions are drawn to grasp the attention of researchers to the existing
    security challenges. This article is organized as follows: Section II presents
    the related work, focusing on the existing survey and review articles that either
    focus on the security of Industry 4.0, Industry 5.0, or the important technological
    enablers of InX. Section III provides a brief introduction to the key enabling
    technologies of InX. The section also gives a glimpse of the importance of security
    of the overall ecosystem, as well as the key enabling technologies. Section IV
    focuses on the security of communications networks and technologies in InX. Section
    V discusses the security of the selected technologies in the industrial infrastructure
    technologies, such as IIoT, CPS, and robots, etc., and Section VI details the
    security of industrial applications with examples of augmented reality and blockchain.
    Risk management and standardization efforts are elaborated in Section VII. Important
    insights and lessons learned are discussed in Section VIII. Future research directions
    are presented in Section IX, and the article is concluded in Section X. For smooth
    readability, the organization of the survey is depicted in Fig. 3, and the most
    used acronyms are presented in full form in Table 1. TABLE 1 List of Most Common
    Abbreviations FIGURE 3. Organization of the article. Show All SECTION II. Related
    Work Due to the increasingly critical nature of operations of future industrial
    systems, huge research efforts are underway on various aspects of its security.
    Most research efforts focus on specific themes that can be counted within the
    boundaries of InX. However, there are limited efforts that present security challenges
    and possible solutions in communications of industrial systems as a whole. Since,
    InX uses several technologies that rely on communications, such as IIoT, CPS,
    machine learning, big data, and unmanned aerial vehicle (UAV), to name a few,
    its security has become highly complex. This complexity can be the main reason
    for limited efforts in presenting security challenges and possible solutions for
    the whole InX ecosystem. In this section, we provide a brief literature review
    of existing surveys and review articles on the security of InX, and/or technologies
    that are highly related to InX from the communications perspective. The most relevant
    recent articles are highlighted in Table 2. The main theme of the article is tick-marked
    (✓) concerning the relevant technology. As an example, the first article in Table
    2, Overview of Industry 4.0, focuses on CPS, and thus there is (✓) under CPS.
    TABLE 2 Existing Survey and Literature Review Articles With Main Focus Highlighted
    and Compared to Our Article A survey on opportunities and challenges existing
    in Industry 4.0 is presented in [3]. The authors emphasize on mobile Internet,
    IoT, CPS, cloud computing, and big data as the most important enabling technologies.
    Among the vital challenges are the development of smart devices, the construction
    of a network environment for CPPS, the integration models for CPS and CPPS into
    a homogeneous environment, and the lack of verification and testing platforms
    for CPS. A survey on the security of Industry 4.0 from the aspects of edge computing
    and blockchain, mainly to secure IIoT-based critical infrastructure, is presented
    in [58]. The main focus of the article is on the convergence of edge computing
    and blockchain for scalable security of critical infrastructure. A detailed account
    of security challenges in Industry 4.0 is presented in [43]. The main design principles
    pivotal to Industry 4.0 are interoperability, information transparency, technical
    assistance, and decentralized decisions. Each of these design principles will
    attract new security challenges when converged to practicality in future industries
    since new technologies attract new types of attacks. Security attacks can include
    simple that can be mitigated with simple techniques as well as complex attacks
    that can circumvent the functionality of the whole system. Various attacks are
    highlighted on different enabling components of Industry 4.0 such as CPS, IoT,
    cloud infrastructures, Industrial Control Systems (ICS), and the flow of goods
    and information. The authors also outline security design principles that are
    relevant to each underlying enabling technology. Conti et al. [59] provided a
    review of ICS designs, devices, and security protocols, and evaluated their robustness
    over existing ICS testbeds and datasets. It also offers recommendations for their
    design and reports on the top-performing algorithms. The survey in [60] examines
    how ICS has developed from standalone setups to cloud-based settings, emphasizing
    how these technologies are convergent with the Internet. The study places particular
    emphasis on the application of machine learning techniques to improve cybersecurity
    in the context of cloud-based industrial process migration. The recently published
    survey in [55] highlights the growing necessity for customized cybersecurity measures
    in ICSs by highlighting complex and individualized attacks on key infrastructures.
    Here, the authors examined the benefits of Software-Defined Networking (SDN) in
    creating coordinated intrusion response plans for ICS and provided a taxonomy
    of intrusion response plans. The adaptation of threat modeling for ICSs is summarized
    by Khalil et al. [56] through comprehensive literature evaluation, provided their
    vulnerability to cyberattacks that can have severe consequences. The study emphasizes
    the significance of strategic frameworks covering security, privacy, and improved
    validation metrics in ICS threat modeling approaches. Supervisory control and
    data acquisition (SCADA) systems have become an integral part of modern ICSs.
    SCADA [61], [62] are ICS used to monitor and control critical distributed systems
    that span large geographic areas. Examples of such systems include electric power
    transmission and water distribution systems, and facilities in single sites such
    as manufacturing industries. A survey on the security of SCADA systems is presented
    in [47]. The survey presents protocols, security threats, and possible solutions
    to those threats. Another survey on the security of SCADA systems [63] discusses
    various attacks and countermeasures. However, there is no survey, at the time
    of writing this article, that directly addresses different aspects of security
    in InX. Therefore, we also present survey articles that cover the security of
    each of the most important technologies to communications in InX. Since 5G is
    considered one of the main technological enablers of reliable communications in
    InX, the security of 5G will have strong implications for InX. The security challenges
    in 5G with possible solutions and future research directions are presented in
    [22]. Since 5G is a conglomeration of several technologies, including 4G technologies,
    the security of 5G is highly dependent on those technologies. For example, network
    function virtualization (NFV) [64] and the concepts of software-defined networking
    (SDN) [65] have their own security implications [8], [66], and thus these technologies
    must be properly secured to ensure the security of 5G. Furthermore, due to the
    conglomeration of new devices (e.g., IoT) and services (5G verticals), security
    monitoring must be automated due to the resulting humongous growth in network
    traffic. Therefore, authors in [22] discuss the need for machine learning-based
    automated security systems that can also predict outage or failure of different
    technologies and segments of the network. However, there is no visible work, at
    the time of writing this article, on reviewing the security implications of 5G
    networks on InX or even Industry 4.0. A detailed discussion on the enabling technologies,
    applications, and challenges of the industrial Internet is presented in [28].
    The article discusses the security of the industrial Internet from the perspectives
    of industrial terminal security, industrial data security, industrial communication
    security, and industrial management security. Communication authorization and
    data encryption have been considered to be the most important security concerns.
    A survey on Information and Communication Technologies (ICT) for Industry 4.0
    is presented in [40]. The article highlights the security challenges that can
    arise from the integration of different technologies in Industry 4.0 such as IIoT
    and cloud computing. A detailed survey on IoT-induced security vulnerabilities
    in critical infrastructures is presented in [34]. The authors discuss how malicious
    actors exploit weak IoT technologies as a first step toward compromising critical
    systems connected to those IoT devices. The article [34] further explains the
    security challenges caused to other industrial systems including smart grids,
    smart homes, and building automation systems, and also highlights the possible
    mitigation techniques. In [45] the authors focus on the security of several IoT/IIoT
    applications by classifying threats according to the object of vulnerability,
    either software, network, or data. Also, the role and importance of blockchain
    (as well as its limitations) in IoT/IIoT security are highlighted, and use cases
    such as E-Healthcare, VANET, supply chain, and smart grids are discussed. Issues
    like reducing blockchain feedback latency and computation overhead, and the need
    to develop application-specific security approaches are mentioned as open research
    areas. A survey of IIoT is presented in [67]. The article provides a state-of-the-art
    study on IoT and its relation to industry. Challenges, opportunities, and future
    research directions in IIoT are presented in [33]. A survey on threats to IoT
    is presented in [38], where besides threats to IoT on the general level, a comprehensive
    attack methodology for malware attacks is presented. Persistent attacks include
    node compromise and malware attacks which are attributed to weaknesses in communication
    protocols. Similarly, centralized control architectures can be detrimental because
    of a single point of failure. Furthermore, a systematic survey on the security
    of IIoT with requirements and opportunities presented by fog computing is provided
    in [44]. IoT security is one of the biggest weak points that holds back the adoption
    of IIoT, mainly because of poor security resulting in globally known compromises
    in industrial systems [44]. A survey of practical security vulnerabilities in
    IoT is presented in [37] and [57]. The latter article also addresses the general
    challenges the IoT philosophy creates in structures automation systems. The CPS
    security is often seen as overlapping with IoT security [68]. Therefore, threats
    and defenses for wireless connectivity for IoT and CPS have been surveyed together,
    e.g., in [27]. The differences in the concepts [68] lie in the emphasis: while
    IoT emphasizes identification and Internet connectivity for all kinds of devices,
    the CPS concept emphasizes monitoring, control, and automation of physical processes
    without referred connectivity protocols. Security threats and solutions for CPS
    have been surveyed in [26]. Similarly, a survey on security control and attack
    detection in industrial CPS is presented in [36]. The work presents a security
    overview, keeping in view the limitations of resources of CPS for security, from
    control theory perspectives. The main challenges, such as DoS, replay, and deception
    attacks, are discussed from the engineering perspective. Furthermore, the approaches
    of using honeypots and honeynets for the security of IIoT and CPS are presented
    in [49]. A comparative examination of protocols and architectures of industrial
    wireless sensor networks (WSNs) from the perspectives of existing standards is
    presented in [24]. A survey on data management in Industry 4.0 is presented in
    [39], where the article discusses security laps in the technological enablers
    of assembly lines and industrial robots. Here, the distributed systems to avoid
    sending data over insecure channels and single points of failure, are suggested
    to be adopted. Furthermore, the article [39] highlights that real-time security
    systems are required that detect abnormal behaviors early on to avoid the cascade
    of failures throughout the whole system. Authors in [69] present the applications
    of digital twins and big data in the smart manufacturing process, for carrying
    out predictive maintenance, design of products, and planning during the production
    process. Müller et al. [70] illustrated the relationship of an industry encountered
    with big data analytics, in which the economic study helps to analyze the magnitude,
    direction, and impact of their relation. It helps to provide robust business value
    by marking out vital boundaries by providing empirical evidence. CPS research
    trends related to big data in industry 4.0 along with cloud computing are investigated
    in [71]. In a smart manufacturing process, profit per hour is assessed in production
    processes as a control parameter [72]. It helps to achieve better throughput,
    yield, and optimal decisions and provides good benefits using advanced algorithms
    on industrial big data. There are several survey articles on the security of cloud
    computing [73], [74]. Related to the security of cloud platforms and the security
    of information or data on the cloud platform, authors in [75] survey blockchain
    technologies to improve the privacy and security of cloud platforms. A survey
    on isolation techniques in cloud data centers that can be crucial to InX is presented
    in [76]. A systematic survey on the opportunities that fog computing brings to
    secure industrial systems is presented in [44]. Fog nodes can be used to effectively
    isolate infected nodes, whereas the rest of the industry can perform normally.
    Similarly, fog nodes can perform localized monitoring processes, provide on-premises
    authentication and access control, and perform time-sensitive tasks. Therefore,
    fog computing can improve the resilience of industrial systems [44]. A survey
    on edge computing in IIoT is presented in [48]. The article elaborates on the
    motivation for using edge computing for IIoT, the research progress in this direction,
    and then highlights the potential challenges. The main benefits, outlined in the
    article, include improving the system performance, protecting data security and
    privacy, and reducing operational costs in IIoT environments. A survey on machine
    learning methods for the security of industrial protocols is presented in [77].
    Since the main focus of the article [77] is on the protocols, the security weaknesses
    in many protocols are exposed. The authors provide methods of machine learning
    that are most helpful in analyzing the security of protocols in ICS. A survey
    of machine learning techniques used in the analysis of security and stability
    of power control systems is available in [46]. The article highlights studies
    on various types of machine learning techniques in this regard and discusses their
    strengths and limitations. The security challenges and possible solutions for
    machine learning in communication networks are presented in [78]. Big data analytics,
    machine learning, and the applications of artificial intelligence in wireless
    networks are discussed in [79]. Security issues in cloud robotics environments
    are surveyed in [41]. The authors discuss cryptographic algorithms such as Rives
    Shamir Adleman (RSA), Advanced Encryption Standard (AES), or Elliptic Curve Cryptography
    (ECC), as options for enhancing security against threats such as network or data
    storage attacks. Research work in authentication is identified as the starter
    point of extended research toward the next security phases. In [35], the authors
    perform a study of the most common middleware used by robotics frameworks, their
    cybersecurity capabilities, and the impact of security on communications performance.
    Results show there is no significant effectuation in terms of latency and packet
    loss. Security of UAVs is studied in [80], the authors cover security threats
    such as jamming or spoofing as potential threats. Also, basic use cases related
    to physical layer security (PLS) are mentioned. The authors in [42] focus on PLS
    as an approach for avoiding eavesdropping attacks and thus enhancing security
    on UAVs. Technologies such as multiple input multiple outputs (MIMO) antenna and
    mmWaves are also considered to improve security alongside spectral efficiency.
    The work in [81] focuses on the weaknesses of UAVs for civilian and military use
    cases, as well as countermeasures for efficiently avoiding their exploitation.
    Among the vulnerabilities discussed, we find user-level vulnerabilities, drone
    vulnerabilities, and wireless vulnerabilities. In [82], the authors focus on the
    lack of security mechanisms in widely used UAV and ground control stations (GCSs)
    communication protocols. Different vulnerabilities are identified, among them
    integrity attacks, availability attacks, as well as authenticity attacks. The
    authors in [83] scanned the whole IPV4 address space looking for visible ROS services,
    they were able to obtain readings and manipulate a robot located in a remote laboratory
    as proof of the vulnerabilities of robot systems. Also, some recommendations regarding
    the use of firewalls, VPNs, and exposure limitations are provided. The work in
    [84] focuses on describing the different vulnerabilities present in robot systems,
    from physical vulnerabilities to communication and even software vulnerabilities.
    Also, the authors propose solutions to mitigate possible attacks, including designing
    for security, the use of encryption for secure communications, and the detection
    of security breaches. A review of AR systems in Industry 4.0 with a use-case of
    the shipyard is given in [85]. The principles of Industry 4.0 are discussed to
    pave the way for future digital shipyards, termed Shipyard 4.0. Cloudlets and
    fog computing nodes are suggested for use in the shipyard, similar to Industry
    4.0, to minimize the latency and accelerate rendering tasks while offloading heavy
    computation tasks from cloud platforms. The security of IAR is considered to be
    important, however, not discussed. Several security risks, potential solutions,
    critical assets and goals, and sensitive IAR applications are discussed in [29].
    Auto-Identification (Auto-ID) and traceability technologies for Industry 5.0 are
    discussed in [86]. The main focus of the article is on Different surveys discussing
    various security services offered by blockchain technology are covered in [87],
    [88]. Blockchain-based security in the domain of industry 4.0 applications (e.g.,
    smart manufacturing, smart grids, smart vehicles) are presented in presented in
    [89], [58], [90], [91]. However, despite their growing popularity due to several
    key features such as decentralization, immutability, and transparency, there are
    still several security threats in blockchain that must be resolved before its
    complete adoption in various industrial and manufacturing applications [92], [93].
    In this context, the authors in [94], [95], [96] explored various attacks on the
    blockchain network and possible countermeasures from various perspectives, i.e.,
    threats to the network, attacks on consensus mechanism, and smart contract vulnerabilities.
    A review of blockchain-based solutions for industry 4.0 is presented in [97],
    which also provides an overview of using blockchain to provide security solutions.
    On a holistic level, the security trends and advances in manufacturing systems
    in Industry 4.0 are described in [30]. The three main security requirements based
    on which various solutions and proposals are evaluated are confidentiality, integrity,
    and availability. The article discusses the security implications on a general
    or high level, without going into details about the security of each enabling
    technology. Furthermore, the 5G infrastructure which is considered one of the
    main enabling technologies of future industries, as elaborated in [11], is not
    discussed in depth to understand its security implications. For example, 5G can
    expose factory information through shared cloud environments or provide means
    for the propagation of security vulnerabilities into the industry. SECTION III.
    A Brief Introduction to Key Enabling Technologies InX represents a highly complex
    environment due to the amalgamation of huge number of diverse sets of technologies
    with unique requirements. For example, massive numbers of IIoT will be used and,
    generally, IoT applications have different requirements. Some IIoT applications
    require high reliability and availability, whereas, some applications require
    high throughput and low latency [98]. The priorities of throughput or latency
    might even change over time. Therefore, AI with its disciplines will be a major
    enabler of the applications and technologies of IIoT [99], [100]. Since IIoT will
    generate massive data, big data analytics [101] and AI will play a major role
    in learning the behavior and needs of IIoT and allocate the resources accordingly.
    For connectivity, different communication technologies will be used, leveraging
    the latest developments in networking such as SDN, NFV, and MEC [102], [103],
    for instance, to allocate the necessary resources dynamically. All of the integrated
    technologies of InX will have very distinct and unique, security requirements,
    challenges, and solutions. In this section, we aim to provide a high level overview
    of the security posture of InX. The InX ecosystem is presented in Fig. 4 that
    comprises i) secure communications, that connects all the components within InX,
    ii) secure factory environment, that is composed of different enabling technologies
    that empower the very functionalities of industrial systems, and iii) industrial
    applications, that are used between different industrial systems and external
    stake holders with two specific examples of Augmented Reality (AR) and blockchain.
    In the following subsections, we briefly discuss these as an introduction for
    the security analysis. FIGURE 4. Simplified visualization of InX integrating factory
    and external environments. Show All A. Security of Communications in InX The backbone
    of InX is communication technologies that enable the diverse set of industrial
    systems to work in unison. The main differentiating factor in InX and other industrial
    revolutions is the capabilities of devices to interact with each other through
    communication technologies. Therefore, the security of communications technologies
    is extremely important. The important technologies that are covered under secure
    communications include 5G wireless networks, since 5G is poised to connect future
    industrial systems. We also discuss cloud computing under communications security
    mainly due to its vital role in bringing communications-specific technologies,
    such as core network functions, into critical infrastructures to meet its unique
    demands. The extension of clouds, such as edge computing, may well be part of
    the critical factory environment due to its role in data analytics and machine
    learning, however, we discuss all these concepts together in cloud computing for
    smooth readability. Furthermore, UAV-based communications and standard industrial
    communications technologies are also discussed under secure communications. 1)
    5G Wireless Networks The existing wired systems, even including the latest technologies,
    cannot meet the requirements of InX due to the mobile, remote, and dynamic nature
    of functions and services of InX. Wireless control of industrial processes, on
    the other hand, requires an ultra-fast, secure, and always-available (five-nines
    availability) underlying communication system. Since InX requires connectivity
    of its systems beyond the traditional restricted short-range communications, for
    example in the supply and demand chain, as highlighted in Fig. 4, cellular networks
    have become a necessity for industrial technologies [104], [105]. 5G, in this
    sense, is becoming one of the main enablers of industrial automation [6], [106]
    with new disruptive technologies that fulfill the requirements of InX. For instance,
    5G can serve InX components and services that need extremely low-latency communication,
    such as the operation of robotic arms, using Ultra-reliable low latency communication
    (URLLC) [107], [108], and through the migration of critical services or control
    functions to the vicinity of InX, to edge and fog nodes. Cloud-based systems can
    also help in separating automation functions from the traditional specialized
    physical equipment to help increase flexibility and agility [11]. Since cloud
    computing has become increasingly important in enabling latency-critical services,
    cloud computing is also discussed in the realm of secure communications, even
    though cloud computing is also critical to the factory environment for various
    functions such as data analysis. 2) Cloud Computing Benefiting from higher computing
    and storage resources, cloud computing and its extension in the form of edge and
    fog computing, can bring elasticity to InX. Multi-access Edge Computing (MEC)
    is a standard solution by the European Telecommunications Standards Institute
    (ETSI) for edge computing [109]. The concept of edge computing has been further
    pushed towards the local environment to meet even stricter latency requirements,
    for example, to facilitate lightweight microservices, i.e., nanoservices [110].
    Cloud computing is pivotal to InX because of its main role in other enabling technologies
    of InX such as machine learning and big data analytics, CPS and IoT, and linking
    other physical objects or systems to services [12]. The main delivery mechanism
    of data between the local, edge, and remote clouds, as well as between IIoT or
    CPS and clouds, is considered to be advanced wideband cellular networks [39],
    such as 5G. 3) UAV-Based Communications With the adoption of smart factories (Industry
    4.0) and the envisioning of the InX paradigm, alongside the vast deployment of
    sensors and actuators, production systems need an efficient optimization of data
    transmission, low-latency computation, and dynamic decision-making. InX use case
    scenarios will rely on UAVs for providing ubiquitous wireless connectivity, and
    efficient in-network computation capabilities that allow the processing of sensory
    data on time. UAVs will be mainly deployed as aerial base stations or relay nodes
    for enhancing coverage, capacity, and reliability. Furthermore, UAVs can be deployed
    as flying mobile terminals for enabling real-time video streaming for generating
    situational awareness, item delivery or infrastructure inspections, and sensor
    monitoring [111]. UAVs will also have an important role in supply-chain management
    in InX. 4) Standard Industrial Communication Technologies There is a wide array
    of standardized industrial communication technologies. For example, there are
    different standards for communication between different IIoT devices, communication
    technologies for industrial automation, wired communications, and time-sensitive
    communications. Examples of these standard communication technologies include
    Message Queuing Telemetry Transport (MQTT), Advance Message Queuing Protocol (AMQP),
    Constrained Application Protocol (COAP), and ISA100 Wireless, to name a few. These
    technologies fall in the realm of a secure factory environment, for instance between
    IIoT devices and production lines. However, for smooth readability, we briefly
    discuss these technologies in the section on secure communications. Below we describe
    the most important communication-relying technologies in the secure factory environment.
    B. Security of Key Industry Infrastructure Technologies The factory environment
    is a main industrial site where the actual industry-related functions, such as
    production, happen. Various technologies are highly intertwined with each other.
    For example, IIoT and CPS-based production systems, AI-based automation and monitoring,
    and advanced robots that collaborate for production, as shown in Fig. 4. Below,
    we briefly outline the importance of these technologies in InX along with their
    security. 1) IIoT Beginning with an abstract idea of cost-efficient tagging and
    tracking of “things”, which we use daily, IoT started its movement of towards
    its current use and future visions [112]. Currently, IoT technology has become
    such an important aspect of future societies, that the success of future connectivity
    infrastructures, such as 5G, is tied to the widespread use of IoT, resulting in
    the enormous growth of the IoT landscape [102]. The industry of the future is
    no different, where devices and equipment ranging from tiny to powerful industrial
    systems and applications will rely on IoT [67]. IoT will facilitate pervasive
    or ubiquitous computing by bridging the gap between digital and physical existence
    through low-cost, low-power, and easy-to-deploy digital devices [113], [114],
    [115]. IoT in the sense of InX is the collection of sensors, actuators, robotic
    arms, and other mechanical components having the capability to send or receive
    data over the network or Internet, making also Industrial IoT or IIoT. IIoT has
    to be defined in [116], from which we take the bottom line: IIoT works to optimize
    the overall production value of industries. IIoT has, thus, become a backbone
    of InX, and several proposals exist for improving the performance of IIoT in Inx
    [117]. 2) CPS CPS bridges the gap between physical computing and communication
    infrastructures. The gap is already shrinking as envisioned by smart and gadget-free
    computing environments [118], and research has been initiated on the security
    of such environments [119]. The concept of CPS is an enabler for automation and
    it emphasizes control and sensing technologies as well as machine-to-machine communication.
    CPS enables close interactions of computation and physical processes, typically
    with a feedback loop and often without direct human involvement. Examples of industrial
    processes, where physical processes are sensed and actuated by controller software,
    include, e.g., smart grids, autonomous vehicles, robotic systems, nuclear power
    plants, as well as control systems for dams, oil, and gas industries. CPS, thus,
    exposes expensive and critical physical assets, processes, as well as sensitive
    information to the vulnerabilities and threats coming from the cyber-world. 3)
    Advance Robotics Robots have been an important part of automation systems, often
    synonymous with automation, and constitute the key building blocks of future industrial
    systems [120]. Smart robots designed for performing complex tasks can sense, process,
    and interact with their environment, improving the state of industries by bringing
    extreme precision into play [121]. Robot systems are present in a wide variety
    of use cases, from automotive, aerospace, and defense, to pharmaceutical, and
    distribution centers, as well as food and beverages industries. Moreover, as connectivity
    increases, the originally isolated robot systems are being exposed to either corporate
    networks or the Internet, making them valuable for collecting data and performing
    analysis on quality, reliability, and productivity. 4) Big Data Analytics Big
    data is one of the pillars of InX, with smart connected machines playing a predominant
    role in big data generation [122]. Due to the increasing number of smart devices
    in InX, some produce bursts of data while others sporadically few bytes, the data
    will be big, and therefore analytics for such big data will be inevitable to learn
    and act intelligently in the future. The paradigm shift of industrial transformation
    towards InX, aided by industrial big data is gaining momentum at a different pace
    in different parts of the industry. Big data, mostly the combination of structured,
    semi-structured, or unstructured data is collected from organizations for carrying
    out predictive modeling and analytics. Big data could be acquired from business
    transactions, customer databases, social networks, industrial data, and many other
    sources. There are no definite numerical standards to define the term big, but
    big data is often characterized by 8 Vs: Volume, Velocity, Variety, Veracity,
    Value, Variability, Validity, and Visualization as shown in Fig. 5, typically
    referring to terabytes, petabytes, and exabytes of data. Big data is used in real
    life to create new value for the industries and the customers utilizing the products
    from those smart industries. The trustworthiness of the data, its business value,
    and the variability of ways the business can use and format the data tailored
    for end applications play a crucial role in big data. When big data is deployed
    correctly with appropriate models, it helps industries to improve operations,
    enhance customer service, create personalized campaigns for marketing products,
    and improve the profitability of their ventures. FIGURE 5. Characteristics of
    Big Data with 8Vs that support InX big data management. Show All 5) Machine Learning
    Machine learning has become a critical technology with its tools to predict the
    future course of actions based on current and past states of systems, as well
    as, involved human intervention [123]. Since machine-human interaction is central
    in InX, machine learning is poised to be one of the main enabling technologies,
    as discussed in [124]. With 5G providing computing and storage capabilities in
    the vicinity of InX, machine learning in the network edge [125] in InX will be
    facilitated by 5G [126]. Furthermore, the tools and techniques of machine learning
    will use the (big) data generated from the components of InX such as CPS and IIoT,
    the network (5G), and the diverse services, to name a few. The outcome of the
    machine learning tools and techniques, along with the necessary feedback, will
    be to enable and improve real-time decision-making, resource and risk management,
    systems’ functions and security monitoring, prediction of workload and manpower,
    and improving maintenance and supply chain. One of the most important uses of
    machine learning in InX is related to the prediction of occurrences of events
    in the future [127]. C. Security of Industrial Applications There can be a huge
    number of industrial applications in InX. For example, modern healthcare, public
    transport, and other public infrastructures can be considered as part of InX,
    as discussed in [128]. However, we focus on two distinct application areas, such
    as augmented reality and blockchain, that can become integral to any future industrial
    system or ecosystem when deployed securely. 1) Augmented Reality In InX, augmented
    reality (AR) is a game-changing technology that is transforming maintenance, safety,
    operations, and training. AR provides realistic environments and scenarios much
    more than traditional simulation environments. AR projects digital data into the
    actual world, giving employees real-time insights and direction. With applications
    ranging from product design, warehouse logistics, immersive training, remote support,
    quality control, safety enhancement, data visualization, collaborative work, and
    enhanced consumer experiences, it plays a critical part in InX. Streamlined to
    the unique requirements of future industrial systems, Industrial Augmented Reality
    (IAR) streamlines industrial procedures with AR to lower mistakes and boost the
    output [85]. IAR applications in InX are broad, ranging from manufacturing to
    assembly operations, an online guidance system for training the operators, and
    maintenance to human-robot collaboration [129], [130]. Security in data connectivity,
    device compatibility, and smooth integration with industrial infrastructure are
    essential for the success of IAR in InX for more effective and efficient operations.
    2) Blockchain The InX environment will be a collaborative, intelligent, and connected
    ecosystem comprising humans, machines, and other stakeholders, such as, service
    providers, as well as AI-enabled automation. One of the prime requirements will
    be to establish distributed trust among various entities throughout the whole
    ecosystem [52]. In this regard, blockchain as a distributed technology can offer
    immense added value to InX applications by providing a tamper-proof, decentralized,
    and trustworthy computing platform for multiple involved entities to securely
    exchange their transnational data and/or share/sell/rent the available resources
    among each other without the intervention of any trusted third party or intermediaries
    [131] [132]. Strong defense against cyber threats is facilitated by fundamental
    features of the blockchain, which include decentralization, data privacy measures,
    smart contracts for automatic security enforcement, secure identity verification,
    auditability, and immutable transaction records. Blockchain holds a distributed
    and shared digital ledger, where information is encrypted and validated by all
    participants of the network. Hence, blockchain contributes to improved security
    throughout InX by ensuring supply chain transparency, offering audibility, and
    traceability, and fostering interoperability among various devices that are logically
    and geographically widely distributed [133]. D. A Brief Outline of the Security
    Posture of InX The InX ecosystem is an amalgamation of a large set of technologies.
    The technologies discussed in the prior subsections rely on communications infrastructure,
    such as 5G, as their underlying enabling infrastructure. Since communication technologies
    can be prone to security weaknesses and vulnerabilities, those technologies will
    likely face security threats. Therefore, a thorough security analysis of the InX
    ecosystem is needed, which is the main focus of this article. The security analysis
    is performed under three main parts of the InX ecosystem. These include the i)
    security of communications technologies, ii) the security of different technologies
    used in the factory environment, and iii) the security of critical industrial
    applications. First, the main security challenges for each technology under each
    category are brought forth, and then potential security solutions for those challenges
    are researched. For smooth readability, the most important challenges and their
    respective solutions are highlighted in Table 3. The left column in Table 3 presents
    the enabling technologies of InX, the middle column represents the most important
    challenges, and the last column highlights the solutions with references to articles
    that provide details about the specific solutions. In the following sections we
    discuss these security challenges and solutions, beginning from the security of
    communications in InX. TABLE 3 Summary of Security Challenges and Potential Solutions
    in Enabling Technologies SECTION IV. Security of Communications in InX In this
    section we introduce the main communication technologies along with their security
    footprint. Since, the fifth generation of wireless networks, also known as 5G,
    is poised to connect and combine most of the industrial systems either through
    standalone 5G network or non-standalone 5G network, below we discuss the potential
    of 5G in InX and then discuss the related security landscape. A. 5G Wireless Networks
    Since 5G is crucial for InX, its security is even more important. Furthermore,
    even if there are security challenges within 5G systems, vulnerabilities must
    not propagate to InX. Therefore, proper measures should be in place to not only
    stop security threats in 5G and its technological enablers but also mitigate the
    risks involved with such vulnerabilities. 5G and its key new technologies including
    cloud platforms (MEC and fog nodes), softwarized and virtual networks, and the
    techniques of enhanced mobile broadband (eMBB), and URLLC, etc., do have security
    challenges as discussed in [7], [8], [10], [54]. Therefore, in the following subsections,
    we bring forth the main security challenges and vulnerabilities in 5G, and the
    possible solutions for those challenges and vulnerabilities that are most important
    to InX. 1) Security Challenges The security challenges in 5G related to InX are
    multi-dimensional, from threats to traffic flowing through the network to the
    network entities and components of InX. Industrial traffic can be categorized
    into two types, i.e., cyclic and acyclic, generated by different sources and with
    different time requirements [192]. Cyclic traffic, typically, includes fast data
    exchange between controllers and field devices and the amount of data is usually
    a few bytes. The data can be sensing values and measurements with stringent latency
    requirements such as a few hundred microseconds. The acyclic traffic, comprising
    limited amounts of data, is triggered by unpredictable events such as process
    alarms. Communication networks introduce delay into the system, as discussed in
    [193], and can be struck on the delay constraints, as discussed in [194]. One
    of the main challenges related to meeting the real-time requirements of InX while
    using 5G will be the delay introduced in the backhaul networks, as highlighted
    in [194] for routers and switches. Therefore, any security vulnerability that
    can increase the latency at any intermediate points within 5G will cause availability
    challenges in InX. Industrial communication systems and their challenges with
    future research directions covering the need for 5G-based wireless networks are
    discussed in [192]. An example of industrial network performance is given, which
    outlines an approximate packet delivery time for wireless networks to be in the
    range of a few hundred microseconds. With such stringent requirements, any security
    threat that could exhaust the resources of intermediate nodes, or congest the
    communication link for a millisecond, will be considered successful. The very
    enabling technologies of 5G, such as Software Defined Networking (SDN), NFV, cloud
    computing, and massive MIMO, for example, have their own security challenges.
    Pertinent to InX, technologies centralizing control decisions, such as SDN, will
    cause most challenges in terms of increasing risks related to availability due
    to security vulnerabilities. For example, SDN centralizes the network control
    decisions to (even though logically) centralized control planes, called SDN controllers.
    These controllers have been demonstrated to increase the visibility of network
    control points, even if physically distributed, due to the very nature of their
    operation of installing flow rules in the underlying packet forwarding infrastructure
    [66]. As a result, there can be clear points of interest to be targeted for security
    attacks, such as denial of service (DoS) or resource exhaustion attacks. In the
    case of NFV, hypervisors can be targeted for attacks due to being central to the
    process of virtualization. Other technologically enabling components of 5G such
    as massive MIMO can be targeted for different types of attacks such as active
    and passive eavesdropping [195]. 5G is also becoming the de-facto standard in
    terms of enabling connectivity of many other technologies used in InX that have
    their own security procedures and protocols for connectivity [54]. Examples of
    such technologies include low-power wide area networks (LPWANs) that enable massive
    machine-to-machine (M2M) communications for diverse types of IoT. The security
    challenges in LPWAN are related to the interfaces, air and wired, and the most
    pertinent one is the air interface between end-user devices and the gateways or
    eNBs, as discussed in [196]. Since devices in LPWANs have low capabilities, encryption
    if not provided by the network (5G) will be left to an optional on-demand basis,
    which can result in security breaches. Furthermore, the challenges are related
    to the inherent weaknesses of devices making LPWANs, such as devices in the IoT
    domain, discussed in the IoT Section V-A. 2) Potential Security Solutions The
    network that serves or connects IIoT devices and networks needs to understand
    their unique requirements [197], to adjust or configure itself autonomously to
    fulfill the service requirements. Therefore, the disciplines of AI such as machine
    learning can be used to enable the network to learn the requirements of IIoT autonomously
    and adjust itself accordingly. AI and machine learning algorithms in the edge
    will facilitate quick network response to the needs of IIoT, as described in [198].
    The concepts of cloud computing (e.g., MEC) already facilitate the communication
    networks to fulfill the service requirements of IIoT in terms of providing computing
    and storage resources near mitigate its challenges of resource constraints. The
    extreme densification in future wireless networks (e.g., in 5G) [199], with a
    variety of heterogeneous access networks [200], using new technologies such as
    massive MIMO antennas [201], millimeter Wave (mmWave) [202], aims to cope with
    the challenges of the availability in access networks. SDN and MEC are the key
    technologies to meet the network resource requirements of IIoT [136]. For example,
    the global visibility of the status and stats of network resources coupled with
    programmable control provided by SDN enables run-time service migration from clouds
    to MEC servers or nodes in the environment. One of the naturally secured approaches
    taken in 5G, which is highly important for the security of industrial systems
    and services, is the 5G verticals as outlined in [6]. Using the concepts of virtualization,
    strengthened by the concepts of NFV [203], the verticals isolate traffic generated
    from different sources and thus have the capability to ensure end-to-end security
    of the different industrial processes. Therefore, huge research is going on in
    this direction, mainly from the perspectives of its use cases in InX, as discussed
    in [134]. Multi-access Edge Computing (MEC) has been proposed and used in 5G [204]
    to meet the latency requirements [135], where the different services can be isolated
    through the concepts of verticals as discussed in [134]. Such solutions along
    with URLLC systems [107] effectively address the challenges of latency-critical
    services. The inherent limitations in the technologies of 5G such as SDN, NFV,
    and MIMO need to be addressed first in an isolated fashion followed by security
    hardening of the integrated 5G system [22]. Solutions to the important security
    challenges of the main enabling technologies of 5G such as SDN, NFV, cloud platforms,
    massive MIMO, etc., are discussed in [7], [22]. The security of SDN and NFV in
    the context of IoT is discussed in [205]. The authors outline how the joint use
    of NFV and SDN complements the existing security approaches of IoT. For example,
    how a slice (isolated set of programmable resources) can effectively isolate traffic
    at run time using the programmable nature of the network enabled by SDN. Security
    challenges related to the centralized control points can be mitigated by devolving
    the local decision-making to data plane or localized control point elements, as
    evaluated in [137] for SDN. In terms of security of the radio devices, the nature
    of massive MIMO, for instance, being used in a vicinity provides enough opportunity
    to secure it from passive and active eavesdropping and jamming as discussed in
    [206], [207]. The tunneling beyond the vicinity using IPSec, for instance, can
    also provide the required security. The solutions for maintaining critical communication
    between InX and remote cloud platforms include maintaining redundant links and
    prioritizing traffic according to the critical nature of the traffic, as discussed
    in [208]. In the case of network exposures, some of the devices also have their
    security procedures if the network exposes its traffic for instance in the case
    of exposed air interfaces for IoT as discussed in the challenges above. For example,
    Sigfox devices increase the confidentiality of the data through end-to-end encryption
    as discussed in [138]. However, all the optional choices of security procedures
    such as security configurations and encryption technologies need to be mandated
    and brought into use. B. Cloud Computing Cloud computing will empower data-based
    real-time decisions in InX. Cloud platforms can be either centralized or distributed
    using platforms such as MEC or fog nodes, each having their own benefits and consequences
    in terms of security. Similarly, cloud platforms can be shared among multiple
    users, operators, or services. Such sharing will require the concepts of virtualization
    to be used. Virtualization will also have its security challenges. Furthermore,
    remote cloud systems, including centralized and distributed, will also require
    the underlying communication systems to be secure enough to avoid misadventures
    in terms of security. Therefore, the security of cloud systems is multi-pronged
    and has unique challenges and solutions as described below. 1) Security Challenges
    Cloud computing has its challenges of availability and security. The connectivity
    to local (MECs, fog nodes) or centralized cloud platforms will be mainly provided
    by the latest cellular technologies that have limited coverage areas, whereas
    routes to data centers may be long, exposing connections to congestion or many
    other network problems. Cellular networks also have their challenges of security
    which can expose the systems to further security challenges as discussed in Section
    IV-A. The main challenges that exist in the cloud, such as weaknesses in isolation
    and improper management of virtual machines, will also open InX systems to security
    vulnerabilities, such as DoS, man-in-the-middle attacks, and availability challenges
    that can disrupt the flow of the InX process. The Federal Office for Information
    Security of Germany considered virtual machine manipulation and lack of control
    of user data in the cloud systems among the topmost ten threats to ICSs in 2016
    [209]. The requirements for offering services in industry 4.0 as cloud applications
    are discussed in [210]. The authors outline the requirement of communication links
    from a smart grid system to a cloud-based monitoring system, highlighting the
    possibility of link congestion. The data transfer rate needed in smart grids for
    monitoring the infrastructure, for instance, is at least 500 kbps per node [211].
    Such monitoring relies on communication link providers, who may face congestion
    in their infrastructure without knowing the critical nature of the communication.
    Therefore, link congestion can, inadvertently, become an availability challenge
    for security monitoring of critical functions in cloud systems in InX. IT assets
    that the extension of cloud computing platforms, such as MEC and fog nodes, need
    to manage in the context of InX contain not only data, metadata, and software,
    but also computing, caching, and networking applications. Due to the physical
    exposure, boundary openness, weak computational capacity, device heterogeneity,
    and coarse-grained access control of such IT assets, they are threatened by physical
    security, computing security, communication security, etc. [212]. Compared with
    cloud computing, edge and fog computing are composed of computation-limited hardware
    and heterogeneous firmware. Since distributed dge and fog servers are mainly used
    for processing delay-sensitive and mobile IoT services, most of the computing,
    caching, and networking resources in distributed edge/fog servers are used for
    supporting real-time demand response. However, distributed edge/fog servers do
    not have additional resources to run complex security protection measures, and
    thus, simple physical attacks [212], [213], [214] can compromise a lot of edge/fog
    IT assets. Having noticed this, the adversary favors first capturing several edge/fog
    IT assets and turning them into weapons against upstreaming fog servers [215],
    [216]. Caching data at distributed fog servers is one of the most popular services
    in future industries relying on information-centric networking (ICN) [217]. Considering
    the remoteness and virtual nature of the Internet, the caching strategies and
    cached data will suffer from various cache poisoning attacks such as cache pollution
    attacks, cache side-channel attacks, and cache deception attacks [218]. These
    cache poisoning attacks will result in huge concerns about privacy, security,
    and trust in content placement, content delivery, and content usage for mobile
    users, respectively [219]. Another important trend is to deploy SDN on the edge
    and fog platforms to manage heterogeneous networks and schedule massive traffic
    more efficiently [220], [221]. In such frameworks, the data plane only needs to
    transmit data packets and the control plane focuses on generating/selecting reasonable
    routing paths for each data packet. The attacks on the control and data planes
    of SDN, as discussed in [66], pose significant threats to such frameworks. By
    forging some LLDP data packets in the data plane, an attacker can build fake communication
    links to fool routing algorithms in the control plane to forward packets in the
    data packets to fake communication links or interrupt fog services [222]. 2) Potential
    Security Solutions Cloud platforms, as in the case of InX, can be used to increase
    the security of InX beyond the traditional approaches. Coupled with the latest
    technologies, for instance, virtualization, cloud platforms can be used to separate
    different services within InX based on the criticality of the service. To deal
    with security challenges related to the use of cloud computing platforms in future
    industries, there are many available solutions, which can be divided into three
    aspects: first, edge data encryption and key management; second, security situation
    awareness; and third, certified adversarial defense. To guarantee edge/fog computing
    security, all data on edge devices must be encrypted [153]. However, resource-limited
    edge devices usually cannot support long-term protection over periods of ten or
    more years. Liu et al. [150] proposed the use of lattice-based cryptography to
    design efficient data encryption solutions for edge computing devices in the post-quantum
    IoT. However, most of the data on edge devices will not be stored for a long time
    and a user device often needs to configure multiple security keys or passwords
    for different applications. To simplify the complex key management scheme, a reconfigurable
    edge/fog computing security scheme is proposed, which treats edge servers as a
    new security agent (SA) to execute security authentication and access control
    [151]. Security situation awareness is proposed to construct a security state
    map of the atomized IT assets deployed in different edge computing application
    scenarios. With such a given security state map, security operators can know the
    attack behaviors timely and configure security strategy flexibly [223]. The key
    enabling technology of security situation awareness is network traffic analysis.
    The most popular network traffic analysis technology is deep learning. Known attacks
    are easy to detect by extracting features and configuring rules. The challenging
    and hot task is unknown attack detection. Since the unknown attacks have no accurate
    labels, a semi-supervised learning algorithm is an appreciable method to actively
    detect unknown attacks [152]. In such a scheme, the deep learning model actively
    requests annotations for the newly-arrived network traffic. Combined with the
    decision-making theory, the deep learning unknown attack detection method has
    good interpretability. The security risks brought by artificial intelligence should
    be circumvented through certified adversarial defense. For adversarial attacks,
    adversarial training is an active defense technique, which requires feeding adversarial
    examples into the model training procedure. When the new model learns all permutations
    of the adversary, adversarial attacks cannot fool such a new learning model [145],
    [224]. Recently, differential privacy technology has been perceived to have the
    potential to improve the model robustness and prevent deep gradient leakage [149].
    The essential of differential privacy is adding Gauss noises or Laplace noises
    into the inputs, gradients, or weights of the learning model. By assigning different
    privacy budgets, the trainer can achieve multiple learning models with different
    robustness levels. For backdoor defense, the most effective method is gradient
    pruning, whose performance can also be certified by adjusting the number of pruned
    gradients [148]. Furthermore, machine learning is discussed below. C. UAV-based
    Communications UAVs are pivotal in an increasing number of use cases within Industry
    4.0 and InX (as well as for military and civil operations), mainly due to their
    high mobility in 3D spaces. As UAVs are capable of either autonomous or semi-autonomous
    operations, they require reliable navigation in the form of control and GPS communications.
    This characteristic of UAVs makes them the target of attackers trying to hinder
    their communication links using either simple or well-designed hacks to get their
    control. Furthermore, UAVs are generally computation and energy-constrained devices,
    with limitations that hinder the deployment of complex, and upper-layer-based
    security solutions, which are deemed as computation and energy costly. In the
    same manner, their high mobility combined with their physical fragility paves
    the way for new security challenges. Therefore, we discuss the main security challenges
    and possible solutions for those challenges in the context of InX below. 1) Security
    Challenges Jamming is one of the main threats against UAVs as they provide a strong
    line-of-sight (LoS) in use cases where they act as either a base station, relay
    node, or flying mobile terminal. Strong air-to-ground (A2G) and ground-to-air
    (G2A) communication links improve the reception of malicious eavesdroppers as
    well as ground or aerial jammers, affecting the communications and control channels
    of the UAV [225]. Jamming uses radio interference to degrade wireless communications
    by keeping the channel busy, corrupting the signal at the receiver, and causing
    the transmitter to retreat when sensing the medium is busy. Although jamming attacks
    mostly target the physical layer, cross-layer attacks are also possible as a jammer
    can have similar capabilities to the legitimate nodes in the network [189]. By
    jamming the communications and control channels of a UAV, an attacker would hinder
    communication with other UAVs and with its remote controller. Jamming the GPS
    receiver will block the autonomous flight of a UAV [226]. Another important threat
    is GPS spoofing. In spoofing attacks, signals identical to those of valid satellites
    are generated by the attacker, the receiver cannot identify the real signal and
    chooses the counterfeit as valid based on its power [227]. There are two different
    methods for an attacker to take over a GPS, overt capture, and covert capture.
    In overt capture, a combination of jamming and spoofing attacks is used, whereas
    in covert capture the attacker assumes the target possesses spoofing detection
    measures that must be avoided. The covert nature of GPS spoofing attacks makes
    them difficult to identify (in comparison with the more obvious jamming attacks)
    as the UAV cannot verify whether or not the ground station has been compromised.
    In the same manner, the unencrypted, unauthenticated, and open structure of GPS
    signals alongside their data bit predictability, facilitates the job of the attacker.
    When successful, a GPS spoofing attack can grant the attacker total control over
    the UAV position, velocity, and time [228]. Malware infection is also possible
    as attackers can exploit the vulnerability of embedded communication protocols
    through a reverse shell payload that is injected into a UAV’s memory and installs
    malware on the systems running the ground stations. A reverse shell attack consists
    of a shell session that is initiated from a remote node towards the local machine,
    they are used by attackers that performed a remote command execution attack as
    it is the only way to gain remote shell access through NAT or a firewall. This
    threat is worsened by the applications used for allowing users to pilot UAVs using
    their tablets or mobile phones as wireless remote controls [80]. A combination
    of the aforementioned attacks is used to physically affect the UAVs either by
    capturing, replacement of its cargo, or controlling the drone with the sole purpose
    of crashing it. These physical vulnerabilities are relevant as drones can also
    play a logistic role in InX. 2) Potential Security Solutions An interesting approach
    for jamming protection is PLS, which efficiently protects transmissions between
    network nodes, hindering the efforts of malicious eavesdroppers. Cryptographic
    techniques are widely used for protecting data transmission of the UAVs in the
    upper layers [186], [187]. For protecting the A2G links, some of the techniques
    used are beamforming, trajectory and communications design, and UAV cooperation.
    3D beamforming offers a more refined beam resolution in both elevation and azimuth
    plane (especially effective when used alongside a noise signal), making it an
    attractive option for 5G applications, and nulling the user’s signal in the directions
    of eavesdroppers [207]. Efficient trajectory and communications design is aimed
    at helping the UAV move more freely in the 3D space, avoiding blockage with users
    and incurring blockage with malicious eavesdroppers, thus improving communications
    and secrecy rate [229], [230]. UAV cooperation expects to improve the maneuvering
    limitations of UAVs to increase security performance by deploying multiple collaborative
    UAVs. In this scenario, some of the UAVs might act as jammers being deployed close
    to ground eavesdroppers, and degrading their signal quality by sending noise signals
    [188], [189]. Protection of G2A can be achieved by using the aforementioned techniques,
    as well as implementing device-to-device (D2D) communications. Frequency-hoping
    spread spectrum (FHSS) and direct-sequence spread spectrum (DSSS) is some widely
    applied anti-jamming techniques, although their application is limited due to
    the strong LoS and a spectrum-efficiency trade-off [231]. There are several effective
    countermeasures against GPS spoofing and their application depends on the nature
    of the attack. Techniques useful against basic attacks include the observation
    and comparison of the received signal strength over time [190], and the monitoring
    of the identification codes of GPS satellites to check whether they are constant
    or not [191]. Nevertheless, more experienced attackers can avoid these protective
    measures as they tend to use sophisticated and more complex attacks. Better planned
    attacks can be detected by equipping a UAV with two GPS receivers and checking
    their cross-correlation, however, this method was not efficient against attacks
    sending weak spoofing signals [228], [232]. A technique proposed in [233] can
    detect spoofing attacks via a ground infrastructure that checks real-time information
    regarding the time of arrivals to the expected UAV positions over time, this technique
    has been quite effective in detecting spoofing attacks within two seconds, and
    the attacker’s location within fifteen minutes of monitoring. In [234], the authors
    introduce a system dynamics-based framework that includes a cooperative localization-based
    anti-spoofing mechanism that can determine the real location of an attacked UAV
    based on the location of neighboring UAVs. Finally, malware infection can be avoided
    by using secure communication protocols such as eCLSC-TKEM. Also, on the ground
    station side, privileged access needs to be tightly controlled, avoiding the execution
    of files from the /temp directory, setting up deep packet inspection solutions
    intercepting SSL and TLS connection, alongside a continuous update of the firmware
    to help reduce the possibility of suffering reverse shell attacks [80]. D. Security
    Overview of Standard Industrial Communication Technologies In this subsection,
    we briefly discuss the most important standards for industrial communications
    with their security features. The range of industrial communication systems is
    very wide and spans almost four decades of evolution [6]. Accordingly, the availability
    of security features is diverse. Most older field-level communication systems
    do not provide security at all, which led to the development of defense-in-depth
    concepts [235]. Modern industrial communication systems based on Ethernet and/or
    IP lend themselves to the application of security layers known from the IT world.
    1) MQTT MQTT (Message Queuing Telemetry Transport) is a widely used standard for
    IoT and IIoT (Industrial IoT). MQTT is based on the publish-subscribe model, providing
    an indirect route, via a broker, between publishers and subscribers [236]. The
    presence of MQTT is not limited solely to IoT or IIoT, the standard MQTT-SN (MQTT-Sensor
    Network) offers resource optimization for running on processing and memory-constrained
    devices by using simpler header and payload structures than regular MQTT [237].
    Regardless of its ubiquitous nature, MQTT is vulnerable to security threats as
    its only security feature is unilateral authentication. It lacks security functionalities
    such as access control, or control message security. To secure the communications
    channel, current MQTT implementations make use of TLS (Transport Layer Security)
    between devices and the broker [238]. 2) AMQP AMQP (Advance Message Queuing Protocol)
    is a standard for asynchronous message queuing that facilitates the exchange of
    messages between components of a system, independently of their underlying implementation.
    The AMQP model is capable of emulating store-and-forward queues, as well as topic
    subscriptions, or even content-based routing [239], [240]. Although conceived
    in the financial sector, AMQP is used in a range of challenging applications that
    include autonomous computing, cloud computing, and IoT. Unlike MQTT which is intended
    for telemetry transmissions and aims at constrained devices, AMQP can work with
    both constrained and unconstrained nodes. AMQP implements TLS and SASL (Simple
    Authentication and Security Layer), including modern SASL mechanisms like GS2
    and SCRAM-SHA (Salted Challenge Response Authentication Mechanism). Furthermore,
    AMQP’s design allows for the use of alternative security mechanisms as they are
    developed [241]. 3) CoAP CoAP (Constrained Application Protocol) is a Web transfer
    protocol that provides a client-server (URI-based) model for connecting constrained
    application nodes and easily interfacing with HTTP. CoAP is mainly deployed in
    environments such as smart energy and building automation, since its standardization
    in 2014 research has shown it is an efficient option for low signal strength environments
    [242]. Being UDP-based, the networking overhead associated with TCP is avoided,
    although a UDP-based confirmation and retry model is included to facilitate message
    delivery. CoAP makes use of DTLS (Datagram Transport Layer Security) to secure
    the communications channel, it is based on and provides a similar level of security
    as TLS [243]. 4) ISA 100 Wireless The ISA100 Wireless standards aim to be the
    universal solution for industrial wireless networks. Developed by the ISA100 committee,
    the standards focus on addressing the requirements of the emerging Industry 4.0,
    make use of 6LoWPAN (Low-power Wireless Personal Area Network), include specifications
    regarding protocol stack, system administration, security for low data rate wireless
    devices, among others. It is also fully compatible with smartphones, as well as
    IEEE 802.15x, IEEE 802.11x, and IEEE 802.16x devices [244]. In ISA100 Wireless,
    a security manager entity is in charge of authenticating, storing, and distributing
    end-to-end security keys. Security options are optional and can be deactivated
    in scenarios where end devices are constrained, however, this flexibility poses
    a security threat. One of the standards, the ISA100.11a, uses AES symmetric encryption
    and provides direct messages in a peer-to-peer fashion, the latest version of
    the standard provides security spoofing and reply attacks [245]. 5) 6TiSCH The
    Timeslotted Channel Hopping (TSCH) mode was introduced to the Medium Access Control
    (MAC) portion of the IEEE802.15.4 standard. The TSCH is the standard for industrial
    automation and process control. The IPv6 over TSCH (6TiSCH) is aimed to enable
    the adoption of IPv6 in industrial standards. Details about the security of the
    IETF 6TiSCH are presented in the survey paper [246], which outlines different
    standards for lightweight industrial communications. The security of 6TiSCH is
    still under research, where issues such as sharing secret keys among the network
    nodes are an open question. However, the 6TiSCH architecture defines static scheduling,
    hop-by-hop scheduling, neighbor-to-neighbor scheduling as well as remote monitoring
    and scheduling management, where the security demands are high. Their engagement
    in track forwarding, fragment forwarding, and IPv6 forwarding is highly recommended
    for low-power industrial communication. 6) EtherCAT EtherCAT is an ethernet-based
    control solution for industrial automation sectors. It is capable of addressing
    specific concerns in industries such as rapid response times, minimal data requirement
    for the devices engaged in communication, and efficient cost of implementation.
    With EtherCAT, the master sends data possibly only a single frame for the entire
    node network that will pass through each node [247]. However, the EtherCAT protocol
    lacks connection-based security and flow issues for recognizing the masters and
    slaves in the network, which may lead to vulnerability in the MAC layers, DoS,
    and man-in-the-middle attacks. 7) Profibus The Profibus is one of the most common
    networks used in the industrial automation process. Such a process field bus,
    which is meant for interfacing decentralized peripherals, where can drastically
    reduce the wiring costs. However, one of the serious concerns in the Profibus
    is the authentication issues among the master and slave nodes in the network [248].
    Moreover, they are also susceptible to DoS threats, which need isolation from
    the other devices in the network. SECTION V. Security of Key Industry Infrastructure
    Technologies In this section the security of key technologies in industrial environments
    that rely on communication technologies as their backbone are discussed. For example,
    IIoT and CPS systems are already integrated into industrial systems for a range
    of purposes, ranging from controlling large production and assembly lines to actuators
    in individual components. Similarly, collaborative robots relying on fast communication
    infrastructure co-work to create or assemble different products. Different industrial
    processes are monitored through machine learning techniques using huge amounts
    of data (big data) generated by sensors, IIoT or CPS systems, and communicated
    to nearby edge clouds or centralized clouds for processing. In the following subsections,
    we discuss the security of these technologies that make the factory environment
    and are dependent on communication technologies. A. Industrial Internet of Things
    The use of IIoT is extremely diverse, ranging from nano-chips in healthcare to
    precision agriculture and monitoring oil pipelines over long distances. In InX
    IIoT will be used in massive numbers and will be connected through communication
    networks to enable new services needed by companies such as predictive maintenance
    of industrial equipment, surveillance, remote control, consumption metering, asset
    tracking, transport, etc. Since IoT usually have low capabilities in terms of
    memory and processing [117], the environment in which they operate must provide
    sufficient security. IIoT devices themselves can have security weaknesses either
    inherently or can be compromised due to low resources onboard, as discussed below.
    1) Security Challenges There are several challenges to the smooth operation of
    IoT from various perspectives. For example, the challenges due to the limitations
    of IoT devices in terms of computing, storage, and communication capabilities
    [67], [249], and the challenges imposed by the operating environments, such as
    communication networks [250], [251], that include interference [252], security
    [253], [254], [255], and availability of network resources. One direct consequence
    of low resources, discussed in [33], is that IIoT will mostly be not capable to
    run resource-demanding cryptographic protocols, for instance, based on public-key
    cryptography. An availability challenge in network access is caused by the higher
    number of concurrent access to the network, large overhead during synchronization
    among the devices, and the lack of support for bursty or sporadic arrival of the
    data from IIoT devices and networks [256]. Security challenges of IoT with some
    case studies and their potential solutions are discussed in [257]. The article
    elaborates on attacks due to software failures and vulnerabilities, such as buffer
    overflows in firmware, or through physical tampering in electronic circuits or
    memory of physically captured IoT devices, for instance, copying or changing the
    identifying and authenticating information of devices. Furthermore, the article
    [257] discusses the possibility of eavesdropping and man-in-the-middle (MITM)
    attacks to sniff data traffic and extract critical network information in case
    of the communication lacks encryption. The article also discusses malicious code
    injection with physical access to IoT devices, for example, in a very simple way
    by pressing the hard-reset button. Some of the devices have limitations in terms
    of bandwidth and thus there is an upper bound on the packet header size leaving
    little room for additional security-related information [138]. The low header
    space, low memory, and low processing capabilities make the conventional elliptic-curve
    or asymmetric cryptography not suitable for such devices. For example, asymmetric
    cryptography works with keys of bigger lengths than the payload of sigfox [258]
    of 12 bytes. Similarly, the limited number of message transmissions in Sigfox
    does not allow the parametric exchanges of the elliptic curve algorithms [105].
    The lack of encryption is a major challenge in IIoT communication. For example,
    most of the control components in field bus communication communicate with plain
    text, allowing attackers to compromise the systems with little effort, issue control
    commands, or at least read information [209]. Furthermore, covert channel attacks,
    exploiting traditional client-server communication approach, over Modbus/TCPIP
    communication channels is demonstrated in [259]. It has been shown that signaling
    and man-in-the-middle attacks can be pretty straightforward if some basic information
    or a few nodes of the system are exposed. Industrial wireless sensor networks
    (WSNs) [260] have been considered as one of the pillars of enabling the transition
    from the old-fashioned wired industrial systems toward self-healing and controlling,
    flexible, and intelligent wireless control systems. Several standardized techniques
    for enabling industrial WSNs are discussed in [260]. These include ZigBee, Wireless
    HART, ultra-wideband (UWB), 6LoWPAN, ISA100, and blacktooth and blacktooth Low
    Energy (BLE) techniques. However, ISA 100 is the most commonly accepted standardized
    technique. In the ISA 100 standard, most of the security functions are optional,
    leaving room for security vulnerabilities. On the challenges of Wireless HART
    [261], authors in [262] explain that implementing security in the software of
    embedded devices will consume its processing, so much so that the devices will
    not be able to meet the 10 ms time-slots requirements of Wireless HART. Hardware
    accelerators are proposed, in such cases, to meet the processing requirements
    of security functions such as encryption techniques. 2) Potential Security Solutions
    Due to its massive role in InX, the security of IIoT requires several layers of
    security from strengthening the security of the device through software and hardware-based
    security hardening to operations security and minimizing its impact in case of
    breaches. Hence, the first step is to minimize inhere vulnerability levels of
    IIoT devices and then enforce and increase access control security on physical
    and logical levels on the critical infrastructures. Means to improve the security
    of the overall InX eco-system include [34]: hardening IIoT devices against physical
    and tampering attacks, addressing communication-related weaknesses such as a lack
    of cryptographic techniques, and reducing the potential impacts of such weaknesses
    by identifying dependencies and increasing segmentation. Since IIoT will leverage
    5G technologies for connectivity the security solutions used for 5G will provide
    a good level of security for IIoT communications as discussed in [22]. Furthermore,
    authors in [263] discuss the use of blockchain [264], [265] and edge computing
    to secure the use of IoT in Industry 4.0. Blockchain, as discussed in [180], can
    enable trusted data sharing in a decentralized system comprising many edge nodes.
    Such frameworks, on the one hand, can meet the requirements of latency using MECs,
    and ensure security using blockchain, on the other hand. Security solutions for
    IoT from the perspectives of physical, medium access control, network, and applications
    layers are surveyed in [266]. Different architectural alternatives have been considered
    [267] for securing IoT, including distributed security with blockchains, as well
    as the use of fog and edge computing for data analysis, response, and secure storage-
    The inherent limitations of IIoT that cause major challenges, i.e., resource limitations,
    can be overcome by utilizing the latest developments in other technologies, such
    as the extension of cloud platforms into MECs. The main purpose of MEC is to bring
    computation and storage resources into environments that need them, and SDN can
    be used to program the network at run-time to redirect traffic to such resources.
    Decentralized fog-based secure approaches [268] that use localized processing
    are proposed for the security of IoT in critical environments. Virtualization
    technologies can be used to slice resources into isolated domains even in smaller
    platforms such as MEC for isolation-based security. Furthermore, security systems
    that can be implemented with a low budget in terms of resources are highly important
    for IIoT. Therefore, methodologies such as header compression to enable encryption
    techniques on IoT devices that are capable only of low packet sizes or data rates
    can be useful [34]. One of the important methods of ensuring the timely availability
    of data in critical systems, specifically in industrial mixed-criticality, is
    to prioritize and de-prioritize traffic according to the delay sensitivity, reliability,
    or the criticality of the system, and service or the data. Data can be generally
    classified into safety, monitoring, and control [24]. Ensuring data delivery in
    industrial WSNs for critical systems with strict latency requirements through
    novel priority-aware data flow mechanisms is demonstrated in [9]. A plastic extrusion-based
    process monitoring scenario is used to define the protocol requirements and working
    principle of the proposed method. The protocol schedules access to channels for
    each data flow using a distributed prioritized medium access mechanism to guarantee
    channel access for the most critical traffic over others. B. Cyber-Physical Systems
    CPS can be realized with alternative connectivity mechanisms and support of different
    application protocols. CPS connectivity can be based on 5G and cellular networks,
    IP-based connectivity, or other wireless communication means, including, e.g.,
    WiFi, blacktooth, ZigBee, as well as in distributed cases satellite, and LoRaWAN.
    On top of wired and wireless connectivity alternatives, lay different application-specific
    protocols, such as Modbus and Distributed Network Protocol (DNP3) for ICS as SCADA;
    IEC 61850 for smart grids; as well as controller area network (CAN), vehicle-to-vehicle
    (V2V) and vehicle-to-infrastructure (V2I) protocols for vehicles. Therefore, CPSs
    also have security challenges and threats that migrate from these technologies,
    as described below. 1) Security Challenges The main threats and attack vectors
    both from the cyber and physical world against CPSs are illustrated in Fig. 6.
    Central CPS elements – control system, sensors, and actuators, as well as physical
    processes - are organized into a feedback control loop and presented in Fig. 6
    with brown rectangles. Physical, cyber, and cyber-physical attack paths are illustrated
    with red, yellow, and yellow-red ovals. Remote cyber adversaries may reach CPS
    systems, e.g., through management and control interfaces or software updates.
    CPS with Internet connections will face the remote cyber-threats of Industrial
    IoT as discussed before, in Section V-A. All CPS systems face threats originating
    from local connectivity, insiders, and the physical environment. Threats trying
    to compromise - tamper or disclose - sensing and control interactions. Physical
    threats against sensors and actuators as well as indirectly against the whole
    cyber-physical system are consequences of harsh environmental conditions or hostile
    adversaries within the weakly guarded industrial sites. The integrity of the control,
    sensor, and actuator platforms and software is threatened both by the cyber and
    physical world. Integrity and accuracy of the information collected from the physical
    world affect to the situational awareness and decisions made in the cyber-world.
    Control systems are increasingly utilizing big data and machine learning technologies,
    and are thus vulnerable to malicious or tampered feedback, adversarial learning
    [269], and other challenges, as discussed in Sections V-D and V-E. Consequently,
    physical-world attacks can escalate to malicious or misguided actions in the cyber-world,
    which then may cause even more damages – sabotage, denial of operation, destruction
    of physical devices, and thefts of service – in the physical processes. FIGURE
    6. Security threats in cyber-physical systems. Show All The convergence of critical
    infrastructure cybersecurity and ICS takes vital significance in the context of
    InX. Critical process monitoring and control are crucial to InX’s transformation
    of industrial operations through data-driven processes and innovative technologies.
    To this end, ICS plays a major role. On the other hand, due to the increased digitalization
    and interconnection that come with InX, cyber attacks might interfere with the
    operation of critical infrastructure by exposing ICS components [270]. This demands
    a thorough strategy to protect ICS and, consequently, the larger critical infrastructure
    that underpins InX. A foundational layer of security for InX is formed by safeguarding
    ICS against vulnerabilities, cyberattacks, and nation-state threats, as well as
    by strictly adhering to cybersecurity regulations. This ensures InX’s resilience,
    incident response readiness, and public-private collaboration in the face of constantly
    changing cyber threats. Current challenges include heterogeneity of devices and
    solutions, trust issues, as well as a lack of technical capabilities of devices
    used in industrial domains. The heterogeneity – different applications, various
    types of devices, and protocols – means that the security standards and solutions
    are fragmented. This causes technical interoperability issues and increases the
    complexity of the security architecture. CPS can be based on different connectivity
    and application alternatives. These alternatives have their security protocols
    for assuring the confidentiality and authenticity of the communication. Application-specific
    protocols either integrate their security approaches or rely on the underlying
    communication security. A challenge in the past has been an assumption that CPS
    are closed systems and operated in a trusted physical environment [26]. This leads
    to solutions that are non-secure-by-design. Securing the whole life cycle of CPS
    components is also a challenge. In addition to technical protection during the
    operational time, supply chains must be verified. Components should be assured
    or trusted not to contain hidden vulnerabilities and to provide the required security
    level. In complex industrial settings, the security of supply chain management
    depends on several factors and suppliers, and the amount of involved persons increases
    the risk of insider attacks; the supply chains are dynamic and constantly changing,
    and the liabilities may also be unclear due to lacking legislation. Managing trust
    as well as finding supplier-specific problems and vulnerabilities can become a
    complex challenge [271]. 2) Potential Security Solutions CPS security relies on
    confidentiality, authenticity, and access control functions that are provided
    by a) connectivity mechanisms [27], b) physical layer [170], c) end-to-end protocols
    for CPS applications [171], as well as d) platform and interface controls of controllers,
    sensors, and actuators [163]. Security architecture for addressing known threats
    against CPS systems is facilitated by recommendations and best practice documentation
    that have been produced by industrial cooperation. For instance, ENISA has produced
    guidelines for securing software and development life cycles [272]. Further, cyber
    ranges [179] are emerging to facilitate isolated security testing of CPS. Security
    metrics have been defined [178] to facilitate holistic security analysis and design
    of industrial CPS. CPS is characterized by feedback loops. While these loops for
    control are applied for various industrial applications, they can also provide
    reactive security protection for CPS. Different anomaly detection and machine
    learning approaches [172], [173], [174], [175] have been proposed for CPS to enable
    detection and reactions to intrusions, malware, anomalies, and other threats.
    Solutions for making the control systems robust against malicious or tampered
    feedback data include teaching machine learning to be resistant or to detect adversarial
    samples [273], [274], [275], [276]. Solutions addressing the security challenges
    arising from heterogeneity [176] in the application or the connectivity layer
    can be divided into two main categories: through a common language, which is achieved
    with standards [277] or semantic approaches [278], or through mediating middleboxes,
    such as gateways or proxies. Solutions for industrial communication network security
    are in general applicable to industrial applications of CPS. Technology and process-related
    aspects and requirements for industrial cybersecurity have been specified and
    standardized, e.g., in IEC 62443 [164], [277], which provides a risk-based framework
    for managing the security of industrial actors. In ICS, the problem of sophisticated
    industrial attacks is addressed by NeuPot [279], an ICS honeypot technique based
    on neural networks. Using a time-series forecast model and a Modbus honeypot framework,
    it improves security through better honeypot interaction and cyber threat detection,
    showcasing exceptional efficacy in both areas. The objective of the research presented
    in [280] is to identify off-path false-data-injection attackers in ICS while they
    are in their hiding phase. Using secret keys, the defense approach described in
    [280] continually introduces tiny distortions into sensor data to ensure accurate
    and timely identification of hidden intruders without interfering with regular
    ICS operations. A compromise between control performance and detection efficacy
    is taken into account by the ideal design of ICS watermarking, which was implemented
    in [281]. Here, the technique uses an optimization strategy to estimate the watermark
    strength, and updates detection metrics to lessen the impact of noise. Both theoretical
    analysis and real-world trials show the method’s higher performance. Heterogeneity
    introduces the need for additional solutions and hence complicates systems, which
    in turn may enable new vulnerabilities. These vulnerabilities from complexity
    can be managed by isolating different applications and technologies from each
    other. Due to the existence of different kinds of systems and devices with different
    security capabilities and risks, systems are commonly [277], [282] divided into
    zones or segments with different security levels to isolate security breaches
    and attacks. Network solutions for segregating different CPS processes have leveraged
    learning-assisted network slicing [165] where different applications are automatically
    recognized and isolated. However, in the end, complexity and security challenges
    must be solved separately using approaches that are suitable for the applied technologies
    and physical process, e.g., with power-grid [166], power-plant [167], charging
    station [168], or autonomous vehicle [169] – specific cyber-controls. C. Advance
    Robotics Robots have unique characteristics regarding data collection, learning,
    mobility, and decision-making, they are mainly built through the interconnection
    of a wide variety of components such as sensors, communication devices, and actuators,
    mostly interconnected by a wireless network. Since robots were originally designed
    to be part of isolated systems, security was not an integral part of their design,
    resulting in trivial OS-related, protocol-related, as well as hardware-related
    threats. With the advent of Industry 4.0, paradigms like cloud robotics, and the
    almost ubiquitous presence of robot systems, copious amounts of data produced
    by plants need to be analyzed and sent over communication networks to remote servers
    for further processing. Given the pivotal role of robot systems in InX, security
    in robotics has a top priority due to the impact of their vulnerabilities in the
    chain of production [283]. 1) Security Challenges Software found on robot systems
    is usually outdated and relies on weak or even obsolete cryptographic packages.
    This issue is as relevant for robots as it is for computers, software will no
    longer receive security updates which increases the possibility that vulnerabilities
    become popular among attackers. Since novel security mechanisms are not present,
    the impact of software vulnerabilities radically increases, improving the success
    probability of an attacker, and hindering any detection efforts [181]. Another
    important threat is the lack of security mechanisms in the protocols used for
    robotic systems, as they do not integrate authentication or integrity methods
    to detect suspicious behaviors. The Robot Operating System (ROS) is a popular
    development platform for robotics that uses a publish/subscribe model, from a
    security point of view this model is insecure as publishers cannot verify their
    data, and subscribers can’t verify the data received. The lack of encryption,
    and therefore privacy, increases the risk of attacks like man-in-the-middle as
    well as hijacking. Man-in-the-middle refers to an attack in which a malicious
    node acts as a relay and can alter the communications between two parties who
    are unaware of the situation [284]. A hijacking attack occurs when a malicious
    node assumes control of a session between a server and a client and replaces the
    incoming packets with new packets that are sent toward the destination [285].
    In the same manner, the use of outdated cryptographic libraries is not beneficial,
    as is misconfigured cryptographic software such as shared, symmetric keys for
    virtual private networks (VPNs) [286], [287]. Without proper measures for confidentiality,
    integrity, and privacy, attackers can eavesdrop on published data and modify messages,
    altering the robot’s behavior. More specifically, an attacker can access and modify
    the configuration parameters of robots, alter the logic of the program being executed,
    change the commands being sent by a remote operator, or inject false information
    regarding the robot’s status. Damages caused by the mentioned attacks vary from
    defective products to operator injuries [182]. ROS architectures allow clients
    to initiate remote communication with a robot via its IP address, this is necessary
    for use cases such as remote operation, or video streaming from a robot’s camera.
    Such exposure causes a massive vulnerability as found in [83], where a considerable
    amount of master ROS nodes were listening on port number 11311, leaving the robot
    systems behind them vulnerable to malicious users. Robots are also susceptible
    to physical attacks, like the use of their USB port for executing malicious commands,
    or the connection to a robot’s controller using the RJ-45 port from which the
    attacker can access other system components [288]. 2) Potential Security Solutions
    It is of vital importance to avoid robot systems running on outdated software,
    the best method to achieve this is by regular updates and upgrades. While some
    software often updates in the background, this is not always the case, the principal
    practice is to look for available updates and if available, install them. The
    purpose of updates is to provide general maintenance to software, as well as install
    patches against vulnerabilities and improve threat protection [183]. Similarly,
    upgrades are needed to keep software healthy, they usually introduce considerable
    changes and might not be needed right away. Nevertheless, vendors eventually stop
    supplying updates to old software, and in such a case upgrades are necessary to
    avoid running outdated software [289]. Protocol security can be improved by adopting
    one of the available robot application frameworks, although the security level
    offered varies depending on their popularity and scope. Data Distribution Service
    (DDS) is a connectivity framework for distributed systems capable of performing
    authentication and encryption for remote client discovery via Real-Time Publish-Subscribe
    protocol (RTPS) packets that run over any transport [290]. DDS also offers support
    for Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS),
    besides authentication and encryption DDS is also able to implement access control,
    data tagging, and security events logging [291]. The Internet Communications Engine
    (ICE) is an object-oriented framework that provides encrypted bidirectional connection
    and supports SSL at the transport layer. Although SSL has been rendered as too
    heavy for constraint devices, there are lightweight implementations available
    for embedded applications [292]. The most popular solution is the already introduced
    ROS, which is developed under a publish-subscribe approach. ROS includes its communication
    middleware, but unfortunately, it does not provide security features by default,
    except for client isolation in Virtual Private Networks (VPNs). However, due to
    its wide adoption, ROS has been enriched with several extra features that significantly
    improve its security capabilities. Research has contributed by adding security
    features to ROS, such as the use of Web tokens for secure authentication of remote
    clients [291], [292], [293], and the use of cryptographic methods to ensure data
    confidentiality and integrity as well as the use of an authentication server to
    certify only valid clients form part of the developed application [185]. SROS
    is another extension aimed at providing ROS with modern cryptography and security
    capabilities, enhancing security at transport encryption, access control, and
    process profiles [184], [294]. D. Big Data Analytics Security in the realm of
    big data will be multi-pronged. For example, avoiding errors in the data and its
    analytics will be of paramount importance due to the criticality of the decisions
    based on the data or analytics. Thus the data must be protected from errors as
    well. For example, in InX, there will be large, diverse, structured, or unstructured
    data produced by smart sensors, devices, log files, and video and audio in real-time.
    There will also be decisions based on the data. Security verification before making
    critical decisions based on such data will be extremely important. Security of
    hidden patterns and unknown information extracted from big data is essential for
    better decision-making, preventing situations of uncertainty, and mitigating the
    possibilities of malicious activities. Below, we discuss the most important security
    challenges that are linked to big data in the realm of InX. 1) Security Challenges
    The developments in the management of high-stream industrial data in InX ecosystems
    bring numerous technical challenges. Data will be generated by an overwhelming
    amount in InX. Technology has advanced to the extent that hackers can access the
    data to extract vital information. For example, unauthorized data transmission
    across different unauthenticated groups in InX can lead to data leakages and it
    imparts potential risks to industrial data that need care and security [295],
    [296]. In addition, the lack of proper authorization techniques can result in
    data breaches, which can be an extremely serious concern in InX, resulting in
    access and stealth of sensitive data [297]. False data injection, as discussed
    in [298] is another challenge, through which most of the functional, as well as
    non-functional requirements of data-driven applications in InX, can be in jeopardy.
    The reliability in the transmission and reception of IIoT data is also a serious
    concern. Industrial data acquired from IIoT devices in InX applications, as discussed
    in Section V-A, is prone to corruption attacks unless treated with robust big
    data analytic engines and appropriate encryption schemes [101]. Learning-based
    frameworks used for InX applications, associated with industrial big data, demand
    rigorous training of the data. Such frameworks consume huge computational resources,
    as well as require robust learning models. Furthermore, the training models used
    for data analytics are also subject to security threats and the data could be
    anonymized by hackers [299]. Such learning-based frameworks in InX applications
    are prone to cyber-attacks. The ultimate aim of such threats includes false decision-making.
    Moreover, data spaces in the context of InX are virtual environments that are
    essential to securely organizing and sharing data. Centralized data spaces can
    be prone to DoS or similar attacks, resulting in vulnerabilities like single-point-of-failures
    or restricting availability. Such threat necessitate serious efforts in terms
    of solutions, which are described below. 2) Potential Security Solutions There
    are many use cases of InX in which big-data analytics have already been used.
    The most promising solution for avoiding security breaches and data leakages is
    developed by Xu et al. [139] using a blockchain-based framework integrated with
    watermarks. Here, InX use cases can be used to selectively exchange data with
    other blockchains, which are accountable for resisting information leakage. Injection
    of hardware trojans on industrial data also suppresses the data breach threat
    and avoids data leakages [300]. Such techniques implement Trojan triggers using
    capacitors and are tested under different operating conditions. Trojan trigger
    accounts for securing the big data in InX applications from leakage vulnerabilities.
    Integration of IoT-based frameworks could help monitor and control the cyber security
    attacks on industrial data [140]. Security aspects of IIoT systems in InX applications
    could be carried out by incorporating appropriate security and encryption with
    the support of blockchains [301], which provide secure and trustworthy services.
    Also, the usage of dual dynamic key [302], and lightweight searchable encryption
    protocols [303] enhances the reliability in the transmission of IIoT data. The
    role of learning-based techniques is crucial in industrial big data analytics,
    particularly for anomaly detection on data [142]. Some of the machine learning
    techniques such as SVM and Random forests are used to provide anomaly detection
    [143] using real-time industrial data [141]. Wang et al. [304], propose an approach
    of using feedback on big data and coordinating the behavior of intelligent agents
    for secure decision-making in smart industries. This approach self-organizes the
    agents driven through big data for autonomous decision-making and provides strategies
    for deadlock prevention and intruder avoidance through proper negotiation mechanisms.
    Autonomous inventory management is one of the crucial operational tasks in smart
    industries. The authors in [305], deployed UAVs as autonomous navigating agents
    for automating inventory tasks by processing the big data collected by UAVs. It
    was also integrated with a blockchain architecture for ensuring security and transparency.
    The system is also capable of managing external audits using big data analytics.
    Since cloud systems and extensions of clouds such as edge and fog computing will
    be crucial for InX, and the security of most of the big data will be directly
    affected by the security of cloud platforms, in the following subsection, the
    security of cloud computing platforms in the context of InX is discussed. In the
    context of data spaces, decentralized data sharing, in which data is dispersed
    throughout a network of nodes, rather than kept in a single repository, is essential
    [306]. This decentralization lowers the possibility of a single point of failure
    while improving data security. Interoperability is given top priority in dataspace
    technology, enabling smooth communication across various data sources, formats,
    and protocols. It preserves data sovereignty, guaranteeing that businesses maintain
    authority over their data and abide by privacy laws. Robust security protocols,
    data governance, scalability, and real-time access are essential components that
    facilitate data-driven decision-making and streamline operations. E. Machine Learning
    Machine learning has been widely researched and used for improving the security
    of communication systems [123]. Due to the increasing volumes of data traffic,
    machine learning has been an important field of research specifically in terms
    of security, since human monitoring is rendered useless in traffic analysis. Since
    the learning systems are external to the systems of InX, such as CPS or IIoT systems,
    there are chances of security lapses and vulnerabilities without having the devices
    compromised. This is important in cases of strong isolated industrial domains
    that use machine learning. Therefore, the security of machine learning in the
    context of InX is even more important due to the critical nature of the infrastructure,
    as well as the dependence of many systems of InX on machine learning. Below, we
    discuss some of the most pertinent challenges and potential solutions. 1) Security
    Challenges Even though it is security-hardened, some of the properties of machine
    learning can induce basic vulnerabilities in the systems machine learning operates.
    Several security challenges of machine learning are described in [78], mainly
    concerning 5G. However, the threats can persist in InX. For example, one of the
    main threats that machine learning can induce in the systems is the denial of
    detection (DoD). The DoD can prevent machine learning from generating signals,
    for instance, from events, failures, and even cyber-attacks using adversarial
    examples [307] and data poisoning [308]. Another threat that machine learning
    can induce is leaking sensitive information from the company or factory. These
    attacks will be very critical in InX. The components of InX need to be constantly
    monitored and numerous signals for a vast number of functions and services will
    be created. The blocking of such signals, for instance with DoD, can have serious
    consequences in many stages such as processing and specific maintenance. Similarly,
    if a machine learning algorithm shares data with a malignant entity, the security
    of InX can be compromised. On top of such weaknesses within machine learning systems,
    the concepts of adversarial machine learning [309] that attempt to fool machine
    learning models are worrying. For example, the model poisoning attack shown in
    [310] for federated learning can have huge consequences in InX. By leveraging
    distributed learning, traditional fog computing is evolving toward edge intelligence.
    The security challenges of introducing deep learning in fog computing mainly include
    model fairness [311], adversarial robustness [307], [312] and privacy-preserving
    [146], [313]. Attacks on such edge intelligence frameworks refer to those that
    mislead the deep learning models using poisoned data (e.g., adversarial examples)
    and those that compromise the original inputs of pre-trained learning models using
    any publicly accessible information (e.g., gradients, open datasets, and development
    tools) that is not very privacy-sensitive. Meanwhile, with the rapid deployment
    and increment of deep learning-based intelligent infrastructures, users can have
    the possibility to join/access the edge intelligence as a service (EIaaS) platform
    and share their learning services. In such cases, attacks can happen in edge intelligence
    architecture by providing uncertified data and learning parameters. 2) Potential
    Security Solutions To deal with these challenges of machine learning in InX, trustworthy
    machine learning techniques have drawn much attention [314]. Different from environmental
    modelling [315], such as reinforcement learning, supervised learning, and unsupervised
    learning, trustworthy machine learning is investigated to improve AI’s privacy,
    security, and interpreter-ability. For InX, potential application scenarios of
    machine learning include industrial unmanned systems, industrial data analysis,
    quality detection, etc. Due to its importance in the critical infrastructures
    of InX or industrial society, adversarial threats on machine learning should be
    studied first to identify hidden attack surfaces. Nowadays, known threats including
    adversarial examples as highlighted in [316], such as data poisoning, backdoor,
    and membership attacks have been widely studied, and many defence strategies have
    been implemented. According to the types of adversarial threats, promising defences
    can be divided into four parts: 1) defending against adversarial examples; 2)
    defending against data construction, and 3) defending against backdoor attacks.
    Each part also contains several sub-branches. For adversarial examples, the most
    popular defence methods are adversarial training [317], and differential privacy
    [318]. However, adversarial training often needs more data samples and the added
    noises of differential privacy are harmful to model accuracy. To enable black-box
    defence against the adversarial example of industrial malware classifiers, authors
    in [319] designed a stateful query analysis method and a novel distance metric
    to improve the threat hunting rate. Besides, a conditional generative adversarial
    network is proposed in [307], which also can be used to identify the adversarial
    example of industrial vision applications in a black-box way without reducing
    model accuracy. For data poisoning attacks, there are three different defence
    parameters, including poisoned data detection [320], abnormal feature detection
    [321], and back door model parameter detection [322]. The challenges of preserving
    data privacy in machine learning to maintain company information or factory floor
    plans can be addressed with privacy-preserving federated learning approaches,
    such as discussed in [147]. SECTION VI. Security of Industrial Applications InX
    will have an enormous number of applications, mostly of critical nature dealing
    with critical infrastructure and information. Therefore, its security will be
    extremely important. In this section, the security of two main application areas
    in the realm of InX is discussed. A. Industrial Augmented Reality Industrial augmented
    reality (IAR) applications incorporate tele-presence systems in which a person
    can guide an operator, a person or a robot, remotely to reduce the need of physical
    movements in factory environments [129], [323]. IAR has been used in extremely
    sensitive operations to help operators in complex environments, for example, inspection
    in the aviation industry, as discussed in [324]. IAR also plays an important role
    in mirroring the physical world, such as the factory environment, in a digital
    one, which will be vital for InX [325]. Therefore, its security is also very sensitive
    and must be ensured. In a conventional AR architecture, an AR handheld mobile
    or head-mounted device is the main entity, which can be controlled by smartphones,
    tablets, or special AR glasses like Microsoft HoloLens. An AR application takes
    input data from the camera of the device, stores it, and/or sends it to a remote
    server. This data is then transformed into virtual objects, which renders the
    data and overlay output directly on the user’s perception in the real world [29],
    [326]. Since IAR systems require tactile interaction with users, the IAR system
    need to exchange and manage content as fast as possible and needs to manage a
    large amount of data. The communication between IAR devices is wireless and expected
    to enable dynamic on-demand information sharing, which requires a fast response
    from the remote servers [327]. Modern communication architecture/technologies,
    such as fog edge computing, and cloudlets, extend support to IAR applications.
    Edge computing helps meet the real-time requirements of AR and reduces the dependence
    on uninterrupted high-performance communication channels to the computing servers
    [85]. The advent of 5G brings high bandwidth and low latency to enable users to
    achieve high-fidelity telepresence systems and collaborative augmented reality
    applications [40]. Since IAR involves many 5G-based technologies and comprises
    IoT devices (head-mounted displays [328]), it will incorporate the security challenges
    of these technologies, as well as have its security challenges, as discussed below.
    1) Security Challenges The challenges of IAR are multi-dimensional, including
    those existing in IoT devices (IAR devices), those arising from the communication
    infrastructure (e.g., 5G), and those related to storage of the sensitive data.
    Many risks are associated with the input data, as data is coming from various
    sensors which are always on such as cameras, GPS data, temperature, accelerometer
    readings, and more. The confidentiality, integrity, and availability of this data
    need to be ensured because an attacker can distill sensitive data like passwords,
    and secret formulas, among other private matters from the visual information.
    Continuous sensing and video streaming may not be sensitive to the user but may
    be used by others, such as bystanders resulting in bystander privacy leakage [29],
    [329]. There are also risks involved with the output of AR, such as the capability
    to modify a user’s view of the environment. AR content may include static data
    that consists of non-sensitive data like product images, and tutorials, and sensitive
    data, such as computer-aided design (CAD) models which must be protected. A malicious
    or buggy application may potentially obscure the real-world information or occlude
    virtual content of other applications and may cause other attacks like clickjacking
    [29], [329]. One result of such a security attack can be to show the wrong speed
    limit instead of a real speed limit. Another case can be to cause a sensory overload
    of users by flashing bright lights on the display or delivering intense haptic
    feedback [29], [329]. As AR applications process and access data from various
    sensors, a big risk is involved in stealing the data or misusing that access.
    An attacker has a high interest in retrieving the processing/processed data, to
    try to manipulate the data to lead the machine operator to take wrong measures.
    Overall, this can cause process disruption or even technical and health damage,
    as discussed in [29], [85]. In IAR systems, a lot of collaboration is carried
    out using audio-video teleconferencing and computer-supported collaborative work
    (or CSCW). This enables the live sharing of information among multiple users,
    where interaction takes place in the same shared space physically or virtually,
    using shared space technologies. Using these shared spaces a component vendor
    can help a plant/machine operator to fix an error in a particular machine by embedding
    the instructions into the video stream without visiting the site/location [330].
    Various threats arise in such shared spaces/technologies that include spoofing,
    and unauthorized access from personal area networks (PANs), such as in ZigBee
    or blacktooth PANs [329]. 2) Potential Security Solutions The security assets
    of an IAR architecture need to have adequate mechanisms to protect the input data
    against eavesdropping, voice-spoofing, shoulder-surfing attacks, and manipulation
    [329]. Authorized and authenticated users should be able to access static and
    process data, and read access shall be possible [29]. Biometric authentication,
    such as voice recognition or facial recognition, provides attractive solutions
    for secure authentication and authorization. Khamis et al. [331], [332] proposed
    two multimodal schemes, called GazeTouchPass and GazeTouchPIN, that combine gaze
    and touch for shoulder-surfing resistant user authentication on mobile devices.
    These models require an attacker to simultaneously observe the device screen and
    the user’s eyes to find a password, for example. Looks Good To Me (LGTM) is an
    authentication protocol that uses a combination of facial recognition and wireless
    localization information to cross-authenticate users. In simple words, users can
    authenticate and initiate sharing using an AR head-mounted display (HMD) with
    a wireless connection [156]. HoloPair, however, avoids the use of wireless localization,
    which may be unavailable and inefficient in devices, and instead utilizes the
    exchange of visual cues between users to confirm the shared secret [154]. Lebeck
    et al. [333] has laid the foundation for the security of AR visual output and
    designed a prototype platform called Arya that implements the application output
    control based on the context-specific policies, and evaluated Arya on various
    simulated scenarios [329]. Ahn et al. [334] build upon Arya, a novel system for
    dynamic and complex environments to ensure integrity, availability, and confidentiality
    using reinforcement learning automatically [329]. Anonymization techniques, to
    obfuscate the location of users, can be used to secure location-based services
    in industrial contexts [335]. Biometrics is one of the ways of authenticating
    cloud computing architecture and has potential benefits. Benefits such as scalability,
    cost-effectiveness, reliability, hardware agnostic, and allowing ubiquitous access
    to private data and services. Biometric credentials have the advantage of not
    relying on the user’s memory [336]. Another approach is using the local computing
    and storage enabled by Edge computing. Edge computing helps meet the real-time
    requirements of AR and reduces the dependence on uninterrupted high-performance
    communication channels to the computing servers. One approach for such services,
    in which a sensing device gathers sensitive data in an environment, is moving
    the service or techniques that use that sensitive data into the environment generating
    the sensitive data as discussed in [110]. B. Blockchain Blockchain improves the
    transparency of the overall processes, and therefore generates trust by revealing
    the potential flaws and misbehavior in the operation of different components and
    stakeholders, by keeping track/record of each phase in a particular industrial
    application. Moreover, blockchain would allow a zero-trust management mechanism
    [337], [338] for the InX applications that will regularly ensure each operation
    is carried out in a trustworthy manner. Zero-trust is a security model that assumes
    any person or device attempting to access a network is already compromised, which
    must be verified before access is granted. Blockchain can be used as an enabler
    for zero-trust by, e.g., eliminating the need for a central trusted authority,
    ensuring that data cannot be altered and that all nodes on the network agree on
    the validity of transactions, and providing a transparent and auditable ledger
    that can be used to track user or device activities in a zero-trust systems. Therefore,
    blockchain can fulfill the InX requirements by providing decentralized secure,
    trusted, and optimized solutions [339]. Blockchain technology provides a zero-trust
    computing environment for industrial applications through a shared distributed
    ledger that possesses all the transactions and each of the involved participants
    can monitor these transactions. Thus blockchain further improves the security
    of the whole value chain by ensuring data integrity, transparency, and trust.
    However, the current blockchain systems still suffer from some security threats,
    i.e., at the network level, in the smart contracts/agreements, and during transactions.
    In the following part, we discuss security challenges in blockchain in the context
    of InX. 1) Security Challenges Generally, blockchain technology improves overall
    security and data breaches as it provides key features such as decentralization,
    distributed trust, immutability, and better data access control mechanisms. However,
    there are open challenges for data privacy, for example, because of the openness
    and transparency of transactions among various involved entities of the system.
    The work in [340] presents the need for careful assessment of the transparency
    and privacy of transactions through blockchain-based multi-hop tracking and tracing
    mechanisms. It also imposes a strong emphasis on information accountability, privacy
    in a dynamic environment, and real-world evaluation of blockchain frameworks for
    privacy preservation in industrial supply chains. The use of blockchain technology
    for communication networks raises numerous security and privacy concerns in various
    smart applications. For example, potential threats from network perspectives of
    blockchain may include eclipse attacks, DDoS attacks, Sybil attacks, time-jacking
    attacks, and transaction malleability attacks, among others [94], [341]. The eclipse
    attack in the blockchain network can occur when an adversary wants to take control
    of incoming and outgoing traffic by isolating the IP addresses of the other/legitimate
    nodes through a victim node [162]. Though the blockchain network works/follows
    similarly to the peer-to-peer network, it still suffers from DDoS attacks which
    make the desirable resources unavailable [342]. The Sybil attack allows the hostile
    peer to dominate the whole network by creating several fake identities [158],
    [343]. In a time-jacking attack, the adversary tries to interrupt the mining process
    by inserting inaccurate timestamps [344]. Transaction malleability threats can
    result in an inconsistent state of blockchain and open doors for further attacks
    [345]. One of the popular threats known for the blockchain is the ’51% attack’,
    where a miner node or a group of miner nodes take control over more than 50% of
    the hashing rate/computing power of the network, which results will prevent the
    other miners to mine a new computing block [346]. In this case, the double-spending
    attack is quite certain as the transaction/data can be altered easily and that
    may lead to further challenges in the verification of new transactions [347].
    In a selfish mining attack, a group of miners either want to increase revenue/reward
    by dominating the majority of the network or try to waste the resources for legitimate
    miners [348]. Furthermore, all the transactions in the blockchain systems are
    shared and traceable, which raises privacy risks as the adversaries can easily
    track the real identities of the involved entities [349]. Anonymity is required
    in the case when the sensitive data is shared over the network and any of such
    involved entities/stakeholders can track the traffic of the network. The consensus
    algorithm in the blockchain is dedicated to verifying/validating the authenticity
    of each transaction, but it is still possible to target the authenticity of the
    transactions. The transaction authenticity in the blockchain is highly dependent
    on the cryptographic operations, i.e., each new transaction is connected with
    the previous one using digital signatures/cryptographic schemes [350]. The attacker
    can perform double-spending by delaying or denying the delivery message of the
    new transaction. Blockchain technology also faces several obstacles due to the
    vulnerabilities in smart contracts. For example, there are about 12 different
    kinds of vulnerabilities in the smart contract identified in [351]. Some of the
    most common attacks include re-entrance vulnerability, coding errors, and timestamp
    dependence [263]. These types of threats are likely to occur both in the Ethereum
    Virtual Machine (EVM) and Solidity (programming language). 2) Potential Security
    Solutions There are different solutions for addressing different types of security
    challenges in blockchain. For example, in addressing the network-related threats
    of blockchain, specific approaches are proposed in the scientific literature.
    The challenge of eclipse attack can be countered by proposing an anomaly detection
    system (ADS), and by introducing randomness [162], [160], [161]. Distributed IDS
    mechanisms, game-theory approaches, and proof of activity protocols can be considered
    to address DDoS challenges in the blockchain [352]. Sybil attacks can be resolved
    by developing secure consensus mechanisms [157], and by distributed behavior monitoring
    of miner nodes [158]. To overcome the time-jacking threats, synchronized clocking
    techniques must be placed during the blockchain transactions [353]. Transaction
    malleability attacks can be eliminated using the provenance-based scheme, i.e.,
    provide an extra layer of the provenance [354]. Threats, such as ’51% attack’,
    double-spending, and selfish mining are not very straightforward to launch because
    they require higher computing power. The ’51% related attacks’ can be countered
    by two-phase proof-of-work” (2P-PoW) [355], Random mining group selection approach
    [356], and Proof of Activity protocol [357], [358]. The potential countermeasures
    to the double-spending attacks can be the non-interactive zero-knowledge (NIZK)
    proof, increasing confirmation, and deep inspection/listening/observing [359].
    Several approaches such as the “truth state” strategy [360], the Freshness Preferred
    (FP) strategy [361], and ZeroBlock [362] scheme can be practiced to avoid any
    of such selfish mining threats, [363]. To ensure privacy protection in the blockchain
    systems, some of the potential solutions such as homomorphic encryption technology
    and zero-knowledge proof can be adopted [159]. Furthermore, the concept of off-chains
    (which was originally proposed to improve the scalability of the blockchain systems)
    can play a key role in the confidentiality of the information. Blockchain-based
    decentralized data integrity, security, and trust schemes for Industry 4.0 have
    been proposed in [180]. The proposed framework, called BlockEdge (integration
    of the blockchain and edge computing), provides the necessary levels of security
    within the resource constraints and latency limitations. Also, the research work
    in [263] identified potential security challenges and solutions for blockchain-edge
    integrated communication networks. Various solutions addressing the smart contract-related
    vulnerabilities are presented in [364], [365]. Moreover, authors in [366] classified
    the smart contract attacks into four categories (i.e., malicious acts, weak protocol,
    defraud, and application bugs), and also presented the attack techniques as well
    as the relevant security approaches. SECTION VII. Risk Management and Security
    Standardization InX requires proper risk management to assess the security of
    the overall ecosystem and related consequences. The security of the InX ecosystem
    also needs agreements between different stakeholders to maintain the best security
    policies and approaches. Risk management and standardization play crucial roles
    in this regard. There are also challenges, such as fragmentation in standardization
    related to IIoT [367], which need to be solved through proper security policies
    on the organizational level if standardization fails or introduces delays in applying
    the best practices. Evaluations from other than standardization bodies can also
    be followed. For example, security recommendations for threats and vulnerabilities
    in ICSs, including automation, process control, and I&C systems, are published
    regularly by the German Federal Office for information security [368]. These include
    the latest top threats, countermeasures, or solutions for those threats and the
    existing gaps. Similarly, the National Institute of Standards and Technology (NIST)
    [369] provides a framework for improving the security of critical infrastructure
    [370]. The framework applies to ICSs, CPS, and the IoT, which deploys a risk-based
    approach for managing cyber security risks. Such recommendations must be followed
    besides the specific efforts from standardization bodies. Below we discuss risk
    management and standardization efforts in this regard. A. Risk Management The
    diverse technological issues of InX emphasize the heterogeneous and dynamic nature
    of contemporary cybersecurity. Cybernetics, as a discipline of control and communication
    structures in technical and social systems, helps in approaching cybersecurity
    risk management. Accordingly, when managers organize factories or supply chains,
    they face increasingly complex situations and problems of how to make optimal
    decisions [371], [372], [373]. The diverse approaches in cybersecurity risk management
    include incident response and proactive approaches to preventing and preparing.
    However, whatever organizations’ actions in terms of technical progress, contribute
    to the growth of complexity, making any future response more demanding and urgent.
    To keep up with the development of possibilities, resources, technologies, etc.,
    we can talk of an arms race [374]. In the specific context of industrial environments,
    cybersecurity also has an impact on system safety. It is a relatively recent observation
    that the two aspects, though traditionally treated separately, are interdependent
    and must be considered jointly [17]. An additional implication for cybersecurity
    risk management is that any technical system is only temporarily secure and that
    cybersecurity should be seen as a continuous activity [374]. The way forward will
    be about building resilience in production systems and supply chains. This includes
    considering resilience already in the design phase of new structures, developing
    effective metrics that can help evaluate vulnerability and resilience, and simulating
    complex industrial systems to understand vulnerability issues better [375], [376].
    An important aspect will be to automate safety and security risk assessment and
    extend it from design and engineering time to the regular operation of production
    systems [377]. There should be clear organizational policies regarding security
    policies, methods for implementing those policies, and training of the staff to
    work securely and maintain the security of the systems and components of InX.
    Insufficient policies and lack of knowledge of the staff result not only in direct
    security threats but also in the propagation of security threats through unintended
    facilitation for subsequent attacks. This underscores the need for zero-trust-type
    system approaches. Lack of sufficient security knowledge of the staff can impede
    the detection of threats, recovery from threats, and sanitizing processes. One
    of the most prominent security policies concerns the use of external applications,
    as discussed in the recommendation by the Federal Office for Information Security
    of Germany [378]. Proper monitoring for external applications and internal applications
    with write capabilities must be ensured. Such applications operating in insecure
    environments, for instance, can induce security vulnerabilities. Policies for
    lost devices, passwords, the use of personal/private devices, trust establishment
    techniques, as well as methods for stopping insider attacks, must be devised at
    the organizational level. B. Standardization Efforts Security of industrial systems
    has been the focus of several standardization organizations that are either positioned
    at generic information technology - computer science level or are domain specific,
    as summarized in Table 4. NIST has produced a series of information security guidelines
    and standards, where the flagship document is a collection of special publications
    on managing information security risks [379]. These publications present the basic
    principles at an organizational level for assessing, responding to, and monitoring
    risk. IEC has published the IEC 62443 series of standards on the security of industrial
    networks and communication systems [380]. The IEC approach focuses on the prevention
    and management of security risks. These standards introduce some fundamental concepts
    like process maturity levels, security levels for systems, defense in depth, and
    the division of the system into zones and conduits. The standard offers architecture
    reference models, system partition models, as well as relationships among models
    for security management. Also, IEC 62443 recommends requirements for security
    such as access control, data confidentiality, limited data flow, resource availability,
    identity identification, and authorization, among others. These security requirements
    enable three different security levels, target security levels (SL-T), achieved
    security levels (SL-A), and capability security levels (SL-C). TABLE 4 Relevant
    Standardization Bodies and Their Activities The ISO/IEC 15408 is a three-part
    standard [381] that defines a set of requirements for designing security functions,
    as well as for security assurance and evaluation. ISO/IEC has also produced the
    27000 series of standards (27001,2,3,4,5) [382] on information technology security
    techniques with a broad scope covering technical cybersecurity, as well as privacy
    and confidentiality topics. Apart from generic standards, domain-specific standards
    provide more detailed and focused guidance. As an example in the heavily regulated
    nuclear energy domain, IAEA has published a technical guidance reference manual
    within the nuclear security series [383]. Similarly, IEC 62645 [384] presents
    nuclear Instrumentation and Control cybersecurity requirements and IEC 63096 [385]
    includes security controls that are applicable in the nuclear domain. There are
    other standardization efforts related to individual technologies that are used
    in InX. For example, the 3GPP has set requirements for 5G systems used in industrial
    environments, such as service-level specifications (SLCs) for 5G technology-enabled
    connected industries, and enablers for industrial automation. Similarly, the 3GPP
    has also set technical specification groups (TSGs) to develop new standards for
    relevant technologies such as URLLC, and non-public networks. The TSG-SA working
    group (WG) 2 is responsible for specifications related to industries. The 5G Alliance
    for Connected Industries and Automation (ACIA) is meant to ensure the best possible
    applicability of 5G technology and networks for connected industries. Similarly,
    the 3GPP has also standardization activities related to CPS, IIoT, and machine
    learning, mainly to protect industrial data and systems from manipulation and
    security threats during communication. The specific output of the standardization
    organizations with a short description is presented in Table 4. Below, we discuss
    security features of the most important communication standards developed for
    industrial systems. SECTION VIII. Lessons Learned This study sheds light on the
    revolutionary possibilities of new technologies in the development of InX. These
    technologies serve as the innovation accelerators for InX. The overall InX ecosystem
    is divided into three main parts, i.e., i) secure communications, ii) secure factory
    environment, and iii) industrial applications. The enabling technological components
    of each part are first introduced, followed by a detailed analysis of the security
    landscape of each technology. It is important to mention that the technological
    landscape in InX is huge, which cannot be covered in a single article. Therefore,
    the focus has been laid on selected crucial technologies that heavily rely on
    communications networks and technologies. Overall, the study emphasizes how crucial
    it is to investigate certain use cases to enforce security features related to
    these technologies in InX. Each of these enabling technologies brings with it
    specific security issues that need customized solutions. Examples of crucial factors
    to take into account are safeguarding IIoT and CPS devices against cyberattacks,
    organizing the enormous volumes of data in big data applications leveraging clouds,
    and maintaining the integrity of information through blockchain transactions.
    These lessons highlight the importance of having a thorough security plan that
    takes into account the unique characteristics of each developing technology and
    uses it to propel advancement toward InX. Below, we provide a summary of lessons
    learned in secure communications, secure factory environments, and industrial
    applications. A. Security of Communications Since communications technologies
    make the backbone of InX, the security of communications technologies, such as
    5G, and technologies used for communications-related computations including cloud
    and edge computing are highly important. For example, 5G wireless networks can
    expose industrial systems through the air interface to external threats. Similarly,
    important industrial information stored in cloud servers can expose sensitive
    critical information to third-party vendors, result in information leakage, or
    create bottlenecks and deadlocks during run-time due to congestion or DoS attacks.
    UAV-based communications are considered extremely important in the realm of InX.
    However, due to limited computation capabilities, UAV-based communications will
    bring unique security challenges. Since industrial communications technologies
    were focused mainly during the fourth industrial revolution, various standard
    technologies will evolve for their use in InX. However, the security of those
    standards, such as MQTT, AMQP, and CoAP, to name a few, must also be improved
    to meet the needs of InX, where these technologies will be integrated with novel
    communications technologies, such as 5G, 5G advanced, and eventually 6G. Moreover,
    this study is limited to selected communications technologies, whereas the range
    of communication techniques can be huge in InX. In principle, however, security
    challenges must be first addressed independently within each technology and then
    within the integrated InX ecosystem. B. Security of Factory Environment The security
    of the factory environment is the most crucial and complicated one due to the
    amalgamation of a huge number of devices and technologies. Most technologies relying
    on IIoT and CPS, for instance, will also be vulnerable to security threats due
    to the inherent weaknesses of these technologies. For example, fingerprinting
    the firmware weaknesses in IIoT and CPS systems is an extremely daunting task
    on the one hand, and deploying strong security techniques is infeasible due to
    resource (e.g., computation) limitations, on the other hand. Similarly, collaborative
    robots will require extremely fast communication links, and a delay due to a security
    lapse, such as a man-in-the-middle attack, can cause huge damage. Therefore, specific
    research efforts are needed to strengthen the security of these technologies in
    InX. The study provides important insights into the best practices for overseeing
    and controlling the enormous amounts of data in InX that are foundational for
    big data analytics and machine learning. A well-defined classification is essential
    to efficient data management since it keeps confidential data safe and well-organized.
    Further, a key component of data protection is the standardization of security
    mechanisms like encryption and access controls. A crucial factor to take into
    account is alignment with changing data privacy laws and compliance standards,
    which calls for constant watchfulness to make sure that data activities continue
    to comply with the law. The study highlights the importance of keeping abreast
    of emerging privacy regulations and cultivating an organizational culture of data
    responsibility. This will help InX navigate the complex data governance landscape
    while maintaining security and compliance standards. However, the study is limited
    to few enabling technologies which rely heavily on communications networks and
    technologies. C. Security of Industrial Applications The study provides important
    insights into the security of industrial applications. For example, blockchain
    technology can improve data-sharing security in InX. The decentralized and tamper-proof
    nature of blockchain technology promises to improve security by guaranteeing data
    integrity and lowering the possibility of unwanted changes. Auditability, being
    a crucial component of regulatory compliance inside InX, could be improved by
    the transparency and traceability of blockchain technology. However, the review
    also identifies important challenges. Processing requirements blockchains demand
    reliable infrastructure and energy-related concerns. To further optimize interoperability,
    security, governance, and consensus processes need to be in line with particular
    InX specifications. These lessons highlight the need for a well-bound strategy
    that highlights the security benefits of blockchain technology as well as the
    complex issues associated with its successful integration into InX’s decentralized
    data-sharing system. Since the list of industrial applications can be extremely
    large, we have focused on two application scenarios as examples. D. Overall Security
    Posture of InX The thorough analysis in this review highlights the complex environment
    of InX, where the intersection of different technologies is crucial. As a result
    of the integration of cutting-edge technologies, InX depends on strong security
    policies, procedures, and techniques to safeguard and manage vital infrastructure
    and operations. The dynamic nature of threats demands that different security
    vulnerabilities must be addressed from the overall InX ecosystem perspective.
    InX can effectively manage the intricate cybersecurity problems it faces by promoting
    collaboration between different enabling technologies, guaranteeing the resilience
    of key infrastructures, and improving incident response capabilities. This synthesis
    highlights how crucial it is to take preventative measures to safeguard the transformational
    potential of InX and support its ongoing development in a society that is becoming
    more digitally linked and interconnected. The study reveals that various security
    challenges are common to most enabling technologies of InX, irrespective of whether
    the technology belongs to communications, factory environments, or applications.
    For example, DoS attacks can happen on most centralized control entities in 5G,
    IIoT, and application servers in centralized clouds. Furthermore, a huge number
    of different kinds of IoT, CPS, and UAVs have been proposed and used for monitoring
    the conditions of systems in InX. Those systems rely on the communication infrastructure
    and monitoring tools that use the sensed data/information for further actions.
    Therefore, besides the inherent security challenges of each technology, such as
    IoT and CPS, the security challenges related to the communication infrastructure,
    data analytics, and machine learning, for instance, will have strong implications
    on the security of each technology using them. Therefore, it is important to investigate
    the security of each technology individually, as well as the whole end-to-end
    InX ecosystem in unison to ensure a secure ecosystem. Furthermore, non-conventional
    security approaches, appearing in the form of edge and fog computing to limit
    the computation of sensitive processes to local environments, must also be considered
    for improving the security of the whole InX ecosystem. Limiting the information
    flow to local industrial environments will surely increase the privacy of information
    compared to information flow over the Internet. Moreover, different attack models
    from different technologies can be used together to compromise the security of
    the integrated system. Overcoming such challenges will require strong defense
    techniques also working in unison to counter the combined attack force. Such a
    secure combination of different technologies will require further research from
    different aspects, as described in the following section. SECTION IX. Future Research
    Directions InX will be a shared and connected ecosystem driven by communication
    networks and technologies, mainly 5G and beyond (6G) wireless communication networks.
    In such a shared ecosystem, several relevant enabling technologies are required
    to have intelligent collaboration among each other to fulfill the dynamic needs
    of the InX applications. On the one hand, such integration of various key technologies
    may provide the needed flexibility and opportunities to build the desired network
    architecture and infrastructure for the applications of InX. On the other hand,
    the overall network will be highly complex which can lead to several challenges.
    One of the major challenges for such future networks will be to ensure the required
    degree of security and privacy and enable intelligent security services and trust
    among various involved entities/actors. Hence, this section is dedicated to putting
    some light on the potential future research directions in terms of securing various
    enabling technologies for communication in InX. A. Pervasive AI The evolution
    of telecom infrastructures towards 6G will include highly distributed AI, moving
    the intelligence from the central cloud closer to end nodes in the form of edge
    computing [386]. Distributed AI, aided by distributed edge and fog nodes and omnipresent
    radio technologies connecting those nodes, will complement the industrial process
    ahead of what has been envisioned by InX in many aspects. In addition to existing
    MEC-based solutions, where edge computing is managed at highly-capable server
    nodes integrated into the access network architecture, edge computing is envisioned
    to be extended towards local edge computing, where local nodes provide the needed
    computational capacity with collaborative effort [110]. The resulting three-tier
    computational architecture improves, e.g., resource efficiency by enabling the
    reduction of sensor data through local data analysis, reliability by ensuring
    the operation of critical services during network problems, and privacy by making
    it possible to process private and business-confidential data locally. The complexity
    of the resulting architecture, however, requires an increasing level of distributed
    intelligence at all levels to guarantee efficient, safe, secure, robust, and resilient
    services [386]. The majority of mission-critical and privacy-concerned applications
    of InX demand online distributed learning and training algorithms that can be
    employed at the edge devices [386]. Federated learning (FL) [387] is a promising
    paradigm for privacy-preserving distributed data training, enabling original datasets
    to be kept local while only the edge AI model parameters are shared [386]. Furthermore,
    DRL has shown good performance in various complicated EC scenarios [388]. Combining
    these two is an interesting research direction for InX. The combination of FL
    and DRL has already been studied by Shan et al. [389], where the FL framework
    was integrated with the mobile edge system to train DRL agents in a distributed
    way. From the viewpoint of security in InX, studying novel secure routing schemes
    and trust network topologies for edge intelligence service delivery while considering
    the coexistence of trusted edge nodes with malicious ones [386], would be an interesting
    research direction as well. B. Data spaces The concept of data space has gained
    prominence with European initiatives to develop a reference architecture for secure
    data exchange and data sovereignty. In the frame of InX, we can expect greater
    decentralization and higher complexity. Thus, for future operations, management
    and intelligent decision-making more interfaces need to be integrated. This integration
    should happen based on data space concepts as represented by the Industrial Data
    Space and Gaia-X [390]. With a corresponding reference architecture for secure
    data exchange and trustworthy data sharing, IDS and Gaia-X contribute to the digitization
    of industry and its further evolution. One goal is to accommodate the decentralization
    of industrial architectures, as is the case in supply chains, for example, and
    to bridge the limitations of top-down approaches, both in technological terms
    and concerning the needs of industry, politics, and standardization [391]. Through
    the architecture, different cloud platforms can be connected without losing or
    compromising secure data exchange or control over the data. The mechanisms of
    the architecture place the principle of data sovereignty at the center. Arguably
    the most important component is the connector, which links enterprise architectures
    or even individual, networked devices to data space, and ensures the identity
    and integrity of the connected software systems and components [392]. The result
    is a federated system characterized by trustworthiness, transparency, and interoperability,
    relying on existing and evolving standards [393]. Decentralized data sharing promises
    to enhance data fluidity by facilitating smooth data sharing and cooperation between
    various InX components. System reliability is improved by the inherent resilience
    of decentralized networks, which reduces the possibility of single points of failure.
    The evolution towards InX will depend on the ability of the industry to exploit
    data and become part of the data economy. Therefore, it will be crucial to understand
    the impact of the data space concept on industrial operations and future business
    models and to create the data spaces needed for industrial development [394].
    C. Augmented Reality So far, the focus has been to deliver technologies that make
    IAR applications a possibility to support various industrial processes. These
    applications require different mobile devices including smartphones, tablets,
    PCs, Google glasses, or Microsoft HoleLens. These devices require different types
    of security systems and procedures. Among the most pressing challenges that need
    further research is the security and privacy of transmitted video and audio between
    a remote location and InX facilities. Furthermore, multi-modal authentication
    on IAR devices [332] is needed. Protecting collaborative interactions among parties
    providing live remote support and local operators needs further investigation.
    Since the domain of IAR is still not widely adopted, there is a high possibility
    that new security challenges will arise with the wide adoption of the technology.
    Hence, more research on proactively investigating the potential exposure from
    IAR is needed. The principle of security-by-design must be adopted in designing
    new IAR applications, services, and devices due to the extremely serious nature
    of the involved resources. D. Advanced Robotics As robot systems rise in importance
    for both industry and consumers, also the risk of security threats exploiting
    vulnerabilities from either hardware or software. Security by design is an approach
    that requires the consideration of security requirements for robotics applications
    starting in early development phases and the whole life cycle [395], thus increasing
    trustworthiness. In [396], the authors state how the monitoring and tracking of
    privileged accounts can help to estimate and mitigate the impact of a security
    breach. Anomaly detection and robot behavior fingerprinting are promising research
    directions that will help with controlling data usage and robotic systems identification.
    Finally, improving authentication, authorization, and encryption in robotics frameworks
    is a must, and ROS has the upper hand in this aspect. With the advent of ROS2
    (a merging of DDS and ROS), research toward the next security phases is possible.
    E. Visible Light Communications Extremely high data rates with extremely low latency
    can be provided by Visible Light Communications (VLC) technologies [397]. Factory
    floors lit by VLC, providing super-fast connectivity, will extend sustainable
    communications to actuators and robotic arms, mainly because the existing challenges
    of VLC such as distance and shadow effects will not exist on factory floors. Therefore,
    VLC makes one of the best high-data rate dual-function data delivery technology.
    However, more research is needed on the integration aspects of VLC into equipment
    that may not look suitable for VLC, for instance, due to its fragile nature. The
    security aspects of VLC in InX are more from the physical layer perspective, as
    discussed in [398], due to the nature of the technology needing line-of-sight,
    and use cases of InX related to indoor environments and components. F. Data Sovereignty
    Data sovereignty [399], i.e., self-authority on the control of data including
    its use and dissemination, is very important. Data sovereignty enables managing
    information in a way that is consistent with the laws, practices, and customs
    of the state where the data is located [399]. There are various approaches to
    ensuring data sovereignty including technical and legislative methods. Among the
    latter, various organizations have been formed such as the International Data
    Spaces (IDSs) [400], which has also developed a reference architecture that ensures
    data sovereignty besides the security and privacy of data. The IDS also enables
    the sharing of data in a contract-binding and safe methodology among the corporate
    sectors while storing the data in virtual spaces [401]. G. Automation of Everything
    for Security Industrial automation from the connectivity perspective is a high
    research topic, as discussed in [244]. The automation of networked systems in
    InX will be inevitable. Machine execution of complex functions or in other words,
    automation is used for i) information acquisition, ii) information analysis, iii)
    decision and action selection, and iv) action implementation for accuracy and
    reliability [402]. The complexity in communication networks due to heterogeneity
    in networks, devices, applications, and services along with its criticality in
    InX forces us to automate network operations [403], [404]. Network management
    becomes complicated as the network grows, and security policy enforcement with
    adjusting increasing numbers of parameters further complicates the whole management.
    Since, human-machine interaction has been a major reason for the network downtime
    [405] with security lapses as a consequence [209], [406], due to manual configuration
    of network security technologies [407], [408], automation of security of InX becomes
    an eminent research area. One interesting aspect related to automation that needs
    multi-disciplinary research is the right balance between human and machine control,
    as discussed in [79]. H. Software-Defined Machines Software-defined machines (SDMs)
    bring new opportunities to InX, may that be manufacturing, assembly lines, or
    simply factory floor mobility. The basic concept behind SDM is that machines can
    be configured at run-time for different functionalities by externalizing the control
    and processing functions [409]. Such externalizing would require efficient communications
    technologies with robust security in place. Since 6G aims to provide ubiquitous
    connectivity, securing SDMs will be extremely important. To understand the importance
    of the security of SDMs, consider the case of successful rogue attempts that can
    enable, for instance, robotic arms to cause damage on the factory floor. Therefore,
    the security of SDMs in InX in the era of 6G makes an interesting research area.
    SECTION X. Conclusion In this article, we highlighted the security landscape of
    communications in InX. The main security challenges that can arise from using
    the most enabling technologies of InX are elaborated followed by potential solutions.
    Since InX will use novel technologies that will share, send or receive information
    over communication networks, the security challenges that exist in communications
    networks will have serious consequences on the security of those technologies,
    and as a result on InX. For example, CPS, IoT, and machine learning, to name a
    few, will need to send or receive data. Hence, the security of the communication
    media or network and computational architecture will have direct implications
    on the working of CPS, IoT, and machine learning algorithms. Since this area has
    not been previously explored from the communications security perspective, it
    is highly important to shed light on security concerns, possible solutions, and
    existing gaps to stir further research in this direction. This article also provides
    important insights into future research directions in the domain of InX, to motivate
    research beyond the current state-of-the-art into the 6G era for InX. Authors
    Figures References Keywords Metrics More Like This A Survey of Network Automation
    for Industrial Internet-of-Things Toward Industry 5.0 IEEE Transactions on Industrial
    Informatics Published: 2023 End-to-End Transmission Control for Cross-Regional
    Industrial Internet of Things in Industry 5.0 IEEE Transactions on Industrial
    Informatics Published: 2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Open Journal of the Communications Society
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Communications Security in Industry X: A Survey'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Inanir S.
  - Yuce Y.K.
  citation_count: '0'
  description: Pub/Sub is a common pattern allowing a producer to publish events to
    consumers. In types of Pub/Sub, structure of an event is either identified by
    publishers based-on static rules or by consumers based-on filtering approaches.
    In both scenarios, actors’ total performance might get degraded due to required
    operations (e.g., filtering) impacting throughput. This study focuses on designing
    a filtering approach for both actors of Pub/Sub by reducing data size to be transmitted
    by producers and received and processed by consumers by creating a loosely coupled
    context, in which horizontal alterations to structure of any event can occur.
    Sub Data Path (SDP) approach presents a matching tree to separate an event with
    scope like JSON data, and each key in the relevant event act like a topic without
    being defined as a topic. Thereby, producers only must transmit part of a message
    through a path on the event structure to be located into a former event to create
    new event; consumers can subscribe to any subtopic (key for JSON format) to be
    able to receive data in terms of its own mechanism, not a producer’s design. Therefore,
    creating an event can be completed with different producers which contribute a
    piece of the whole event; Bounded Context structure belongs to microservice architecture
    as a decomposition strategy can be handled by consumers in relation to their own
    business logic. To measure the proposed method, an experiment with gaze points
    collected by an eye tracker has been designed. By performing the filtering method
    for one, two and maximum SDP keys, filtering duration, event size reduction percent
    and transmission duration were revealed. The experimental results imply that the
    proposed method can send 7.5 events in average, instead of sending just one in
    the same period. Also, since worst case of the proposed method based-on events
    in the context can be calculated, an architecture can be prevented from bottlenecks.
    These benefits makes SDP advantageous over similar methods in terms of being both
    a fast and scalable alternative.
  doi: 10.1007/978-3-031-50920-9_36
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Conference on Advanced
    Engineering, Technology and Applications ICAETA 2023: Advanced Engineering, Technology
    and Applications pp 464–481Cite as Home Advanced Engineering, Technology and Applications
    Conference paper Sub Data Path Filtering Protocol for Subscription of Event Parts
    and Event Regeneration in Pub/Sub Pattern Serif Inanir & Yilmaz Kemal Yuce  Conference
    paper First Online: 23 December 2023 77 Accesses Part of the book series: Communications
    in Computer and Information Science ((CCIS,volume 1983)) Abstract Pub/Sub is a
    common pattern allowing a producer to publish events to consumers. In types of
    Pub/Sub, structure of an event is either identified by publishers based-on static
    rules or by consumers based-on filtering approaches. In both scenarios, actors’
    total performance might get degraded due to required operations (e.g., filtering)
    impacting throughput. This study focuses on designing a filtering approach for
    both actors of Pub/Sub by reducing data size to be transmitted by producers and
    received and processed by consumers by creating a loosely coupled context, in
    which horizontal alterations to structure of any event can occur. Sub Data Path
    (SDP) approach presents a matching tree to separate an event with scope like JSON
    data, and each key in the relevant event act like a topic without being defined
    as a topic. Thereby, producers only must transmit part of a message through a
    path on the event structure to be located into a former event to create new event;
    consumers can subscribe to any subtopic (key for JSON format) to be able to receive
    data in terms of its own mechanism, not a producer’s design. Therefore, creating
    an event can be completed with different producers which contribute a piece of
    the whole event; Bounded Context structure belongs to microservice architecture
    as a decomposition strategy can be handled by consumers in relation to their own
    business logic. To measure the proposed method, an experiment with gaze points
    collected by an eye tracker has been designed. By performing the filtering method
    for one, two and maximum SDP keys, filtering duration, event size reduction percent
    and transmission duration were revealed. The experimental results imply that the
    proposed method can send 7.5 events in average, instead of sending just one in
    the same period. Also, since worst case of the proposed method based-on events
    in the context can be calculated, an architecture can be prevented from bottlenecks.
    These benefits makes SDP advantageous over similar methods in terms of being both
    a fast and scalable alternative. Keywords Publisher/Subscriber broker-system loose-coupling
    filtering performance Access provided by University of Nebraska-Lincoln. Download
    conference paper PDF 1 Introduction In today’s world, with Industry 4.0, Internet
    of Things, smart city infrastructures and end-user applications becoming a necessity,
    devices with computing features need to communicate with each other efficiently
    and in accordance with defined rules [1]. Consequently, communication patterns
    that can create the necessary context for the harmonious operation of different
    systems have been defined and it is aimed to find solutions to the problems in
    the field of computing. Among these patterns, Publisher/Subscriber (Pub/Sub) is
    an accepted communication paradigm with the problems it focuses on solving [2,
    3]. The Pub/Sub pattern acts as an intermediate layer for communication between
    producer (Pub) and consumer (Sub) clients, creating a dynamic, flexible, and loosely
    coupled asynchronous communication context [1, 4]. With the establishment of this
    structure, one-to-many or many-to-many communication can be implemented using
    intermediary systems (also called message processing software, broker, or Pub/Sub
    engine [5]) [6, 7]. Basically, by using Pub/Sub with intermediary systems (eg
    Apache Kafka [8]) or alternative architectures developed with software libraries
    (eg ZeroMQ [9]); Pub clients can send an event (message) to the communication
    context. Sub clients can subscribe to the type of event they want to receive and
    receive the events they subscribe to. Additionally, Pub and Sub clients communicate
    anonymously: Sub clients cannot talk to the Pub client that creates the event
    they receive; Pub clients cannot see (identify) Sub clients accessing their events.
    Therefore, it is not possible for Pub clients to specifically send an event to
    a Sub client of their choice and set the condition for all Sub clients to receive
    the current event to create a new event. However, Pub/Sub is a flexible pattern
    that can be adapted to a particular part of an architecture and customized to
    suit requirements. In this respect, it works in a platform-dependent manner with
    the protocols of the systems used [5]. The following possibilities can be achieved
    that distinguish the Pub/Sub pattern from other design patterns [10,11,12]: Loose
    coupling between communication stakeholders in terms of resource, time, and concurrency
    Possibility of high and low level abstraction for different process groups Ability
    to replicate individual data structures across different processes Inter-actor
    division of work for failure recovery and system reconfiguration Generating the
    most stable syslogs before failure Distributed data structures and mechanisms
    to control them Filtering events based on individual consumer needs Filtering
    events for on-demand consumption is about Sub clients subscribing to the type
    of event they want. Hence, the Sub client can get the data it is interested in
    instead of getting entire data in the context of communication. In this respect,
    event filtering prevents transmission of events deemed unnecessary and prevents
    clients from creating their own filtering mechanisms. Event filtering aims to
    reduce the use of network capacity and system resources at clients. Accordingly,
    performance compatibility between systems that do not know each other can be achieved.
    By filtering events, the subscription structure of a Pub/Sub context can be set
    up in three ways: topic-based (also known as group-based or channel-based), content-based,
    and type-based [6]. Topic-based filtering is a structure used for structured/semi-structured
    characterization and categorization of event content. Consumers can subscribe
    to a particular topic, thus, forming a group. In this way, the messages (publications)
    of the producers on a particular subject are distributed to the members of the
    consumer group created for the relevant subject [4, 6]. For example, let’s say
    a group of consumers subscribe to a topic called “alive”. Events shared by producers
    with the tag “alive” are to be received by the respective group consumers. Another
    possible model based on topic-based filtering is the establishment of a hierarchical
    structure among topics. This model is called hierarchy-based filtering and is
    accepted as a derived type of topic-based filtering [13]. For example, let the
    subject “human” be determined as the sub-topic of “alive”. Events published with
    the theme “alive” are distributed among both “alive” and “human”, while events
    with the topic “human” are going to be distributed only among the “human” consumer
    group [11]. Topic-based filtering (hence also hierarchy-based filtering) can be
    ideal for transmission, especially between systems that know each other. However,
    for systems that do not know each other or are loosely coupled, it may result
    in transmission of more than the desired information [14]. On the other hand,
    creating consumer groups in topic-based filtering is simple. Consumers who subscribe
    to a common topic all together represent a group [3, 4]. Content-based filtering
    is a structure used to categorize and query an event within itself, and events
    are not separated from each other by categorizing them in relation to their subject.
    Instead, transmission occurs when the content of an event satisfies a certain
    condition for the consumer [3, 6]. Therefore, conditional expressions can be defined
    by consumers using operators such as “ =  = ”, “ > ”, “ < ”. Conditions and related
    operations in content-based filtering can be implemented in three different ways:
    with a string, with a template object, and with executable pieces of code [11].
    With these methods, even if only a certain part of the event is meaningful to
    consumer (for example, if the “price” field in an event is greater than 90 or
    the “city” field begins, ends with the letter “i” in an expression written in
    SQL or a similar language), the entire event is transmitted to relevant consumer.
    There might cases where messages representing entire event may be unnecessary.
    Such messages are forwarded in topic-based filtering, whereas they are filtered,
    thus, not forwarded in content-based filtering. Therefore, it can help reduce
    network capacity use [14]. However, a formal language suitable for the subscription
    system is required to define equality in use of transmission capacity. On the
    other hand, with the use of formal languages, complex subscription operations
    can seriously slow down system. The fact that consumers can define an infinite
    or more than necessary number of equations and complex filtering requests might
    easily hinder the scalability of the system [14]. In addition, an effective solution
    for the creation of scalable and high-performance consumer groups in content-based
    filtering has not yet been designed [3]. The main reason behind it is that propositions
    to be made for the same data of interest can be expressed using many different
    conditional statements [4]. Type-based filtering is based on data and object type
    definitions and references class, interface, and similar concepts (abstract data
    type) of object-oriented languages (basically based on the principles of the Java
    language). Accordingly, the sub-parts that make up the event are objects [14].
    A well-defined protocol should be used between systems that do not know each other,
    since the mechanisms used in the identification of events must be known. Considering
    the tight coupling between communication stakeholders, it can negatively affect
    the flexibility of certain architectures. On the other hand, when used with non-object-oriented
    languages, there may be problems in defining the class or similar structure that
    realizes subscription. Hence, problems related to a Pub/Sub communication context
    include. Transmission of more than the necessary or desired information, Unnecessary
    transmission of the whole event rather than only the changed parts, Complex subscription
    operations causing the system to slow down and throughput to degrade, Tightly
    coupled communication stakeholders’ potential negative impact on the flexibility
    of communication architecture. In this study, a novel model called Sub Data Path
    (SDP) is proposed for Pub/Sub pattern. SDP tries to establish a standard for reducing
    the transaction and transmission cost of both parties during the group communication
    of producers and consumers. By defining a special protocol within the framework
    of the Pub/Sub pattern for the established communication context, SDP makes it
    possible to perform operations and indexing on its sub-parts instead of the whole
    event, thereby, making the transmission of only the necessary information and
    overcoming the issue of unnecessary transmission of the whole event. SDP also
    allows multiple producers to contribute to generating an event by producing a
    subset of event components/fields. Considering such abilities, here we report
    on SDP’s impact on system performance based on throughput and other basic measures,
    i.e., Average Capacity Gain (ACG) and operational durations compared to types
    of Pub/Sub pattern in operation. To this purpose, experiments were conducted based
    on scenarios using an existing eye-tracking product, which employs Pub/Sub pattern
    for specific functioning. The organization of this article is as follows; In the
    2nd chapter named “Materials and Methods”, the design of the SDP, its principles
    and architecture with an intermediary system are explained, while in the 3rd chapter
    named “Use Case and Performance Evaluation”, the performance of SDP is calculated
    through a sample scenario. In the 4th section, “Conclusion”, an assessment of
    the performance gave in results is investigated to reveal the benefits of SDP
    compared to other Pub/Sub models. In the last section, “Discussion”, there are
    SDP properties based on obtained results, and a short overview for its comparison.
    2 Literature From its early studies to the present day, Pub/Sub methodology has
    increased its importance by diversifying both in Machine-to-Machine architecture
    and standards, as well as in the fields where it is used. There exist many different
    implementations of Pub/Sub available, such as IBM Gryphon [15], Microsoft Scribe
    [16], Bayeux [17], Siena [18], Narada Brokering [19], XMessages [20], Echo [21]
    and others [22,23,24,25], dating back to years between 1990 and 2000. There are
    examples of early application software [4]. They used predominantly topic-based
    filtering, although they varied topologically (e.g., centralized and peer-to-peer).
    Studies using content-based filtering may have scalability and performance deficiencies,
    especially when there are devices that do not know each other in the architecture.
    In addition, in early applications, similar to the popular applications used today,
    various algorithms for fault tolerance can be found to maintain real-time communication
    [23, 25]. The popular systems and applications used today include Apache Kafka
    [8, 26], RabbitMQ [27, 28], Apache ActiveMQ [29], Apache RocketMQ [30], Amazon
    SQS [31], Google Cloud Pub/Sub [32], Eclipse Mosquitto [33], IBM MQ [34] and ZeroMQ
    [9] as a software library example. In recent studies, distributed architecture
    designs that try to prioritize Pub/Sub pattern’s fault tolerance and suitability
    against IoT have been revealed, by using different filtering-like approaches [35,36,37,38,39,40].
    Architectures are generally developed in accordance with topological requirements
    to decide how to achieve minimum data loss, as well as some protocols defining
    the transmission between pub-to-broker-to-sub or decentralized clients to reduce
    data size [35,36,37,38]. As a different example, in a study with an innovative
    aspect, used its own distributed architecture to put events with only same topic
    into same broker [36]. In this structure, decentralized clients connect to another
    client which has got the flag showing the desired topic. Thereby, filtering operation
    to be done on the broker system can be reduced, because a broker houses just one
    topic together with their consumers, not all topics and their potential consumers.
    Different studies have small, many sub applications not housed by a broker design,
    and named as subsystem, by putting the heart of microservice architecture forth
    [40,41,42,43]. Hence, modules such as subscription registration, event storage,
    event transmission are expressed as different functioning components. While many
    studies focus all modules of a monolithic structure, there are some studies focus
    on a module such as storage module of a broker system supporting Pub/Sub. Rodriguez
    et.al also purposes to design an independent storage module working together with
    the broker [42]. In a similar effort to our study, Nasirifard et.al proposed a
    new methodology named as function-based matching, which they applied in microservice-like
    decentralized architecture [40]. In their design, subscription mechanism requires
    a source code, which is a filtering function and upon receiving the source code,
    the broker starts to filter using the filtering function. However, just like content-based
    filtering, we think this operation can only be effective on systems that know
    each other well. Otherwise, there is a potential for various bottlenecks and delays.
    Except for these, some researchers have also focused on decreasing security concerns
    in a communication context created with Pub/Sub [44]. Therefore, a privy and secure
    ground can be prepared for IoT, the topic of daily life of the future. 3 Methodology
    In this section, the details of the SDP model, which tries to create a new standardization
    for the Pub/Sub pattern, and its structure on a central server topology are presented.
    The focus of the SDP is to use filtering mechanisms not only for consumers, but
    to design filtering for both consumers and producers. Having this approach lets
    filtering to be used with a subscription strategy for consumers and a new event
    generation model/strategy for producers. Thus, it is aimed that both client types
    (producer and consumer) use less network capacity and resources during communication.
    In the model, Pub clients (i) can send the changed parts (fields/components) of
    the previous event instead of the whole new event and create a new event or (ii)
    can contribute to a piece of an event that will be created by multiple producers;
    instead of getting the entire event on a topic of interest, sub clients can subscribe
    to the relevant sub-segment of the event and receive only the fragment of topic
    of interest in accordance to their business logic design which defines the scope
    of an entity in the terms of Bounded Context as in microservice architecture [45].
    Subscription and event creation primitives require that the fragment of an event
    be accessible to be able to read and write. Within this perspective, events in
    the context of communication are subjected to Boolean algebra operations through
    a tree structure and filtered based on content. 3.1 Sub Data Path in Pub/Sub Communication
    Pattern By applying the SDP model to Pub-type actors, the parts of the scoped
    data (for example, JSON format or similar non-primitive [string, integer, etc.]
    non-data structure) previously transmitted to the intermediary system (for example,
    JSON format < key: The path information (key from value > pair) and the new data
    to be replaced with the previous part (the value from < key:value > of JSON format)
    must be received by the intermediary system [46]. Fig. 1. Use of Sub Data Path
    in Pub clients. Full size image An example scenario for using SDP for Pub client
    is given in Fig. 1. Accordingly, two messages were sent by the Pub client to the
    intermediary system [47]. After the transmission, the event information was kept
    in a queue structure in the storage layer in the intermediary system, i.e., the
    broker. The first message is a structured event in JSON format. It has the tag
    id:0 as the first element of the queue in the corresponding event storage layer.
    The second message is composed of two separate parts and contains the identifier
    and update value of the sub-part to be changed on the id:0 data. The value of
    “image.url” in the second message indicates that the “url” part (key) that is
    the sub-scope of “image”, which is the sub-scope of the id:0 event, will be changed,
    and “images/0002.jpg” indicates the last value. The broker system matches the
    second message it received by creating a copy of the first message and adds it
    to the queue with the id:1 tag on the storage layer. Thus, a new event is created
    by simply performing a change request on the old data. Also, the concept of creating
    an event with multi-producers can be similarly implemented by removing the first
    message belongs to the corresponding structure. In this point, the event structure
    can be defined on the broker. By the application of SDP model to Sub-type actors,
    an access identifier must be received by the intermediary system (broker) to reach
    the data pieces from which the events are desired to be filtered. The related
    mechanism, by incorporating topic-based filtering into content-based filtering,
    ensures that the topics are inferred from the events and aims to serve as a topic/group
    by identifying the sub-parts that make up the event. Moreover, topic-based filtering
    can also be used in this approach. In other words, events can be categorized by
    topic and sub-segments can be subscribed to. Fig. 2. Use of Sub Data Path in Sub
    clients. Full size image An example scenario for using SDP for Sub client is given
    in Fig. 2. Given in the figure, there is an event configured using JSON with the
    id:0 in the storage layer on the intermediary system; a message regarding the
    subscription request has been sent from the sub client to the broker. Subscription
    request forwarded is “image.url” as a single piece and it is a rule that the equivalent
    of the “url” subject is sent under the “image” subject in the event to be transmitted
    to subscriber by the intermediary system. The event message transmitted from the
    broker system to the Sub client was generated as an output of filtering the “image”
    and “url” fields in the “image” in the id:0 event. 3.2 Sub Data Path in Broker
    The SDP model should be configured in compliance with the intermediary system
    to be used. Therefore, it must act in conjunction with existing protocol and API
    designs in a platform-dependent manner. In addition, SDP can be customized and
    adapted to the needs. There is an example broker system architecture in Fig. 3,
    in which SDP is used. The relevant architecture shows the minimum architectural
    requirements of SDP. The stated requirements are described below., Fig. 3. Use
    of Sub Data Path in Sub clients. Full size image Data Access Layer: All normal
    or SDP transmissions received from Pub clients are aggregated within this layer
    and transferred to the Event Configuration Layer. Event Configuration Layer: It
    is checked whether the received message is created with SDP mechanisms. If the
    message is native SDP message, the requested old event of the Pub client that
    owns the message (for example, the previous or any subsequent event according
    to the designed protocol) is retrieved from the Storage Layer. The desired sub
    piece in the old event received is assigned the value in the new message just
    received. The new event created is sent to the Storage Layer. However, if the
    message is not native SDP, it can be sent directly to the Storage Layer and included
    in the relevant data model, saying that the message is already an event. Consequently,
    this layer can only output events. Storage Layer. It is the event storage layer
    that ensures that any event data received from the Configuration Layer is kept
    in the specified data structure (e.g., queue) and shares it with other layers
    whenever it is asked for it. Registration Layer. All native SDP messages received
    from sub clients are collected by the intermediary system over this layer and
    passed to the Mapping Layer. SDP transmissions can be of two different types.
    The first is that a native SDP message received is only valid for a single event.
    The second is that a native SDP received can be used continuously from the moment
    it is received or until a request declaring that message is not valid anymore
    is received. However, these and similar methods should be created according to
    the purposes of using SDP and the protocols of the platform to be developed and
    used. Mapping Layer. Events received from the Storage Layer are fragmented in
    this layer using the SDP information of consumers and adapted to the form appropriate
    to the subscription topics. For the fragmentation process, it is necessary (i)
    to know the standard (for example, JSON) using which the event is created, and
    (ii) to create a hierarchical graph, as in Graph Theory, that will express its
    sub-parts. Through the hierarchical graph, by computing Boolean Algebra expressions
    (operations) nodes are traversed and visited, and filtering is realized to send
    the requested node or leaf to the relevant consumer. Filtered fields can be sent
    to the Forwarding Layer and shared with relevant consumers. Forwarding Layer.
    Consumer identifiers and event messages to be sent to the relevant consumers passed
    from the Mapping Layer are transmitted to Sub clients via this layer using methods
    such as unacknowledged or reliable acknowledged transmission. 3.3 Event Filtering
    Based on Graph Computations The graph structure is obtained by dividing the extensive
    events in the intermediary system into sub-parts. Each fragment has a unique identifier.
    Below is an example event in JSON format. $$ {\\text{JSON format: }}\\left\\{
    {^{{{\\backprime}}} {\\text{T1}}^{{{\\prime}}} {\\text{:}}\\left\\{ {^{{{\\backprime}}}
    {\\text{T2}}^{{{\\prime}}} {\\text{:}}\\left\\{ {^{{{\\backprime}}} {\\text{T5}}^{{{\\prime}}}
    {\\text{:}}^{{{\\backprime}}} {\\text{L1}}^{{{\\prime}}} } \\right\\}{\\text{,}}^{{{\\backprime}}}
    {\\text{T3}}^{{{\\prime}}} {\\text{:}}\\left\\{ {^{{{\\backprime}}} {\\text{T6}}^{{{\\prime}}}
    {\\text{:L2,}}^{{{\\backprime}}} {\\text{T7}}^{{{\\prime}}} {\\text{:Null}}} \\right\\}{\\text{,
    }}^{{{\\backprime}}} {\\text{T4}}^{{{\\prime}}} {\\text{:}}^{{{\\backprime}}}
    {\\text{L3}}^{{{\\prime}}} } \\right\\}} \\right\\} $$ (1) There is a graph representation
    in Fig. 4 using the related event. In relation with Fig. 4, the identifier might
    represent one of the following three: A new subpart: data block with scope, i.e.,
    node (T); Atomic value: primitive data type (including string), i.e., leaf (L);
    Undefined message: null value. Creating hierarchical layers as in Fig. 4 enables
    traversing and read/write operations on each entity (e.g., node, leaf). The SDP
    definitions received from Pub clients to overwrite the event graph and from Sub
    clients to read from are used here. Typically, the SDP could be defined as follows:
    Processing Part: = Group1 ʌ Group2 ʌ Group3 ʌ… ʌ GroupN Group 1 corresponds to
    the traditional topic used to categorize topics. Although not required, it can
    be used as it can reduce the number of events for which the subscription can be
    specified. This approach forms a hierarchy and ranks groups as part of each other
    and requires that any group becomes a part of another group for an event piece
    to be received. Accordingly, the following condition must hold true: GroupN ∈ Group(N-1)
    - > GroupN Event Piece: = Group1 ʌ (Group1 ∈ Group2) ʌ… ʌ (Group(N-1) ∈ GroupN)
    Fig. 4. Representation of events with their sub pieces as a graph. Full size image
    ASCII characters can be preferred instead of Boolean Algebra operation symbols
    with the following structure since a formal expression is needed to use the corresponding
    logic rule in the implementation step. By reason of this, an expression that can
    be formed using the ‘.’ instead of the AND symbol. With this structure, sample
    processing points (node or leaf to be used in read and write operations) can be
    extracted to receive a desired scope or atomic message over the hierarchical diagram
    in the given JSON format at (1): T5: = T1.T2 and L2: = T1.T3.T6 and L3: = T1.T4.
    The designed SDP structures can have two forms as simple and compound. The transaction
    points T5, L2 and L3 given above are in simple form. The compound form is composed
    of simple forms to create more than one transaction point request. The composite
    structures are shown to reach the T5, L2 and L3 processing points given below:
    T5 ʌ L2 ʌ L3: = (T1 ʌ T2) ʌ (T1 ʌ T3 ʌ T6) ʌ (T1 ʌ T4) T5 ʌ L2 ʌ L3: = T1 ʌ (T2
    ʌ (T3 ʌ T6) ʌ T4) ASCII characters may be preferred over logic symbols with the
    following structure, since the compound structure needs a formal expression to
    be used in the implementation step: T5 ʌ L2 ʌ L3: = T1,T2,T3.T6;T4 The above notation
    replaces the symbols ‘ʌ’ and ‘(‘ with ‘,’; ‘)’ and ‘ʌ’ instead of ‘;’; it only
    uses the ‘.’ character instead of the ‘ʌ’ symbol and thus can express the route
    priorities and descriptions in a shorter way. By using 4 symbols in the second
    expression instead of 8 symbols in the first expression, the SDP message size
    was reduced by 50% for the relevant example within the scope of symbols. After
    this step, T1,T2,T3.T6;T4 message can be sent to the intermediary system for SDP
    that will act at T5, L2 and L3 points. In order to detect the processing points
    in the SDP message by the intermediary system, the expression should be simplified
    according to the character equivalent used in the notation and the value of the
    last group point found should be obtained. The formula (2) shows the method of
    processing point detection after opening the compound SDP notation “T1,T2,T3.T6;T4”
    as T1 ʌ (T2 ʌ (T3 ʌ T6) ʌ T4). 3.4 Broker and Library for SDP For SDP to be implemented
    as a communication pattern, a library was developed in C# and Python programming
    languages. The Broker was implemented based on the given architecture in Python
    programming language and is available as an executable. The relevant projects
    can be reached via the following URL github.com/Serif-NNR/{DRI-Broker-Python,
    DRI-Lib-C-Sharp, DRI-Lib-Python}. 4 Use Case Performance Evaluation and Metrics
    The event that the sub client is interested in and the size of the sub part it
    wants to retrieve may vary. At the same time, the current event, and the size
    of the sub part that the Pub client will use to update that event may change.
    For this reason, the data size that the SDP model requires, and the transmission
    performance of SDP may differ with respect to the configuration of the system
    used. Nevertheless, an example scenario and its results are discussed under this
    section. In the scenario, using a monocular eye tracking system called Pupil Lab
    Core, a heat map is to be created based on data collected from Pupil Capture v1.7.42
    (PC) software [48]. PC is a multi-process architecture application and has a Pub/Sub
    communication backbone created using ZeroMQ [9] for processes to communicate.
    One of the processes collects eye tracking data (events) and publishes data in
    the Pub/Sub backbone for other processes collect and process. Even a separate
    process can subscribe and collect eye tracking data through this backbone for
    processing the data for its purpose. PC software contains different plug-ins,
    too, such as fixation detection (fix) and blink detection (blink) and can change
    an event content (keys and their hierarchy) according to plug-in activation status.
    In Fig. 5, an event collected with “surface” topic from PC is shown. The relevant
    event has been obtained without plug-ins which can increase the event size. Hence,
    the event can be classified and named as “base” event. For analyses, we enable
    fixation and blink plug-ins sequentially and receive 1000 event for each event
    type in accordance with enabled plug-in combinations. Therefore, 4 event types
    were defined: base event, base with fixation, base with blink, and base with fixation
    & blink. The dataset has got 4000 events, 1000 event for each type. By using the
    obtained events, filtering duration and capacity gain (event size reduction percent)
    were measured as well as transmission duration with and without SDP event- event
    without SDP refers to the normal event for which no filtering operation was performed.
    However, since analyses for filtering and transmission are related with number
    of total subscriptions, not number of subscribers, measures based-on these subscriptions
    have been made: 1 SDP for each subscribable SDP keys singularly, Max SDP for the
    all subscribable SDP keys, and 2 SDP for creating a real-world project- a heat
    map. In a heat map, gaze points and their confidence amounts are significant and
    can be used to be able to perform such project as minimum requirements. Therefore,
    “gaze_on_srf.norm_pos” for coordination points on a surface such as a monitor,
    and “confidence” for their reliabilities were prepared as SDP phareses. To calculate
    results correctly, we have indicated average amounts by calculating filtering
    durations 10.000 times, and transmission duration 100 times for each event. These
    operations were completed with a laptop which has Windows 10 OS, Nvidia GeForce
    RTX 3050 Laptop GPU and AMD Ryzen 7 5800H CPU, and with a program implemented
    in Python 3.8 and working as a single thread for broker side. As a note, in the
    experiments, consumer-side which just takes the event from broker works as a different
    process. Fig. 5. Collected base eye tracking data in its original format. Full
    size image 4.1 Results In Table 1, filtering duration and capacity percentages
    are shown. Clearly, there are about 50, 89, 76 and 84 total subscription SDP keys
    respectively for defined event types. Findings reveal that the filtering time
    increases as the number of subscribed SDPs increases. This difference becomes
    more pronounced as the number of SDPs subscribed increases. The same inference
    is true for capacity gain, too. Accordingly, for the worst-case scenario regarding
    eye tracking data; By filtering all SDPs (~89%) in the base with fixation event
    in about 0.0003 s and converting all the events in the base event into SDP events,
    the overall transmission size is reduced by ~ 93% on average. Table 1. Filtering
    duration and capacity gain analyses for the purposes filtering approach Full size
    table In Table 2, transmission durations for SDP phrases and normal events are
    shown together with transmission gain calculated using 1 - (SDP transmission duration
    / normal transmission duration). For all four event types, the results indicate
    a decrease in the transmission duration starting from 88.27% and as high as 98.63%.
    Table 2. Transmission duration analyses for events with and without SDP phrase
    Full size table 5 Discussion The experimental results imply that the filtering
    can be completed in about 0.0003 s in the worst case; and about 0.0000016 s in
    the best case for the given scenario. Thus, for the worst and best case scenarios,
    3.333 and 625.000 events per second could be filtered, respectively, by just one
    thread, without other operations such as transmission. Moreover, results show
    that event size reduction was between 93% as a minimum and ~ 99% as a maximum.
    In relation to this reduction, transmission duration decreased between 87% and ~ 98%.
    In other words, instead of sending a single event to a consumer, we can send up
    to 50 events at the same time. When compared with topic-based filtering model
    of Pub/Sub, proposed filtering requires a certain amount of time of execution.
    To understand that the proposed method can be faster than topic-based methodology,
    filtering and transmission durations should be compared, using max SDP analyses
    for base event. Computations show that transmission of a normal event can be completed
    in 0.00772 s, while transmission of an SDP event can be completed in 0.00093 s.
    When filtering duration is added to SDP transmission duration, we obtain 0.00102
    (=0.00093 + 0.00009) second. In this case, with the proposed filtering approach,
    7.5 events per second can be filtered and transmitted instead of 1 event, which
    results in a 650% increment. Also, the proposed filtering can provide a load that
    can be foreseen while content-based can cause bottlenecks on the broker. Since
    we can calculate the total subscription of an event, we also can find the total
    filtering duration. In other words, regarding to the worst case of our eye tracking
    scenario using the computer configured as mentioned above, 3333 events can be
    sent per second. Thereby, designing the communication context in accordance with
    the worst case of a work to be done would be correct. However, same foresight
    may not be possible for content-based filtering. 6 Conclusion In this study, a
    filtering protocol with a novel architecture for events with extensive structure
    in the Pub/Sub pattern is proposed and its minimum requirements are demonstrated
    through a broker system architecture. With the developed approach, the producer
    clients can transmit the changed parts of their previous events to the intermediary
    system and the consumer clients can receive only the data they need by subscribing
    to the sub-segments (fields) of the events. In this respect, the SDP model uses
    traditional topic-based and content-based filtering together and aims to increase
    performance for communication stakeholders (producer and consumer). The performance
    improvement is mainly about reducing the transmission size. Another aim of the
    study is to apply the filtering method to producers as well. Therefore, compared
    to similar filtering approaches, it uses filtering in two strategies: subscription
    actions and creating new events. Using SDP, Sub clients can customize topic-based
    filtering towards sub-scopes of events. Therefore, the need for Subs to create
    filtering mechanisms can be addressed. Filtering for extensive event fragments
    can have four benefits for Sub clients. Less network capacity can be used as event
    sizes in transmission are reduced. Thus, the data transmission frequency can also
    be increased. Filtering operations of consumers who would apply similar filtering
    operations can be done in the intermediary system. Thus, a certain processing
    load required for filtering is required only in the intermediary system, and reoccurrence
    of the relevant load for each consumer can be avoided. This can lead to improved
    resource consumption, especially between systems that know each other or are loosely
    coupled (for example, only a group of consumers). Consumers can reduce their need
    to know the mechanisms for creating the events they need. Horizontal expansion
    of events for different environmental conditions may become insignificant for
    consumers. At this point, the only information that the consumer needs to know
    is the way to access the desired data. Thus, a loosely coupled environment can
    be gained in the description of the event. It can provide flexibility, especially
    in systems that do not know, or only know each other loosely. Bounded Context
    structure as a decomposition strategy can be defined among different Sub client
    groups [45]. Thereby, a consumer can’t reach the whole event, they receive the
    event parts in accordance with their language of business logic. In other words,
    an event model defined by the producer can be depicted by the consumer as a model
    that has the same meaning but different content. For pub clients, SDP is directly
    focused on less use of network capacity by transmitting only the changed parts
    of an event. But it can also be used for the cost of creating the event to be
    published. In an architecture where more than one producer is involved in event
    creation, reducing transmission between event stakeholders can also reduce other
    additional communication costs. Thereby, the mechanism of creating event by different
    producer stakeholders which alters the parts of the event in accordance with their
    existential purposes can be obtainable, therefore, an event’s producer can be
    many different producers in the concept of Pub/Sub. However, the related mechanism
    containing multi producer wasn’t implemented on the projects mentioned in subsection
    named Broker and Library for SDP. By reason of this, this will be a future work
    for us. The SDP model can be updated according to the requirements of the system
    to be used. For example, instead of a process by which the event is generated
    and stored in the intermediary system using an SDP taken from Pub, a process where
    only the SDP is stored can be designed. Thus, only SDP is stored in the memory
    and events can be generated from the relevant SDP as requested. With this operation,
    storage requirements can also be reduced. Scalability issues in content-based
    filtering will not be present in the SDP model. Because, as a maximum, the number
    of subscriptions is equal to the number of sub-parts (identifiers) of the event,
    and the number of consumers is not the main factor that increases the cost. Therefore,
    the minimum and maximum costs on the intermediary system can be calculated. On
    the other hand, type-based filtering triggers tightly coupled transmission between
    producer and consumer. The types of data received and sent should be known to
    consumers. The horizontal expansion of the event structure may lead to the need
    for new type definitions for consumers. In SDP model, the hierarchical structure
    that forms the event or its sub-part does not have to be known. At this point,
    consumers should know exact location of the item they will use in the hierarchical
    structure. Consumers are not adversely affected if the event expands or changes
    except for the relevant bus. As a future work, we plan to measure the proposed
    method in detail in a setting with more than 10 producers and more than 10 consumers
    at the same time. Additionally, after this end-to-end analysis, we can study a
    software design supporting high-scalability Pub/Sub communication context based
    on proposed architecture with filtering. References Huang, L., Liu, L., Chen,
    J., Lei, K.: An implementation of content-based pub/sub system via stream computation.
    In: Qiu, M. (eds.) Smart Computing and Communication, SmartCom 2017, vol. 10699,
    pp. 344–353. Springer, Cham (2018). https://doi.org/10.1007/978-3-319-73830-7_34
    Chockler, G., Melamed, R., Tock, Y., Vitenberg, R: Constructing scalable overlays
    for pub-sub with many topics. In: Proceedings of the Twenty-Sixth Annual ACM Symposium
    on Principles of Distributed Computing, PODC 2007, Portland, Oregon, USA (2007)
    Google Scholar   Banavar, G., Chandra, T., Mukherjee, B., Nagarajarao, J., Strom,
    R., Sturman D.: An efficient multicast protocol for content-basedpublish-subscribe
    systems. In: Proceedings - International Conference on Distributed Computing Systems,
    pp. 262–272 (1999). https://doi.org/10.1109/ICDCS.1999.776528 Liu, Y., Plale,
    B.: Survey of publish subscribe event systems (2003) Google Scholar   Setty, V.,
    Kreitz, G., Vitenberg, R., van Steen, M., Urdaneta, G., Gimåker, S.: The Hidden
    Pub/Sub of Spotify. In: DEBS’13, pp. 231–240 (2013).https://doi.org/10.1145/2488222.2488273
    Aguilera, M., Strom, R., Sturman, D., Astley, M., Chandra, T.: Matching events
    in a content-based subscription system. In: Symposium on Principles of Distributed
    Computing, pp. 53–61 (1999) Google Scholar   Onica, E., Felber, P., Mercier, H.,
    Piviére, E.: Confidentiality-preserving publish/subscribe: a survey. Assoc. Comput.
    Mach. 49, 1–43 (2016). https://doi.org/10.1145/2940296 Apache Kafka A Brief Introduction.https://kafka.apache.org/intro.
    Accessed 2 Dec 2022 ZeroMQ Guide Chapter2- Sockets and Patterns.http://zguide.zeromq.org/page:chapter2.
    Accessed 22 Dec 2022 Tarkoma, S.: Publish/Subscribe Systems: Design and Principles,
    Section 1.2 Components of a Pub/Sub System. Wiley (2012) Google Scholar   Eugster,
    P., Felber, P., Guerraoui, R., Kermarrec, A.: The many faces of publish/subscribe.
    ACM Comput. Surv. 35(2), 114–131 (2003) Article   Google Scholar   Birman, K.,
    Joseph, T.: Exploiting virtual synchrony in distributed systems. SIGOPS Oper.
    Syst. Rev. 21(5), 123–138 (1987) Article   Google Scholar   Eken, S.: A topic-based
    hierarchical publish/subscribe messaging middleware for COVID-19 detection in
    X-ray image and its metadata. Soft. Comput. 27, 1–11 (2020). https://doi.org/10.1007/s00500-020-05387-5
    Article   Google Scholar   Eugster, P., Guerraoui R., Sventek, J.: Type-Based
    Publish/Subscribe (2000). https://doi.org/10.5075/epfl-thesis-2503 Banavar, G.,
    Chandra, T., Mukherjee, B., Nagarajarao, J., Storm, R., Sturman, D.: An efficient
    multicast protocol for content-based publish-subscribe systems. In: International
    Conference on Distributed Computing Systems (1999) Google Scholar   Castro M.,
    Druschel, P., Kermarrec, A.M., Rowstron, A.: Scribe: a large-scale and decentralized
    publish-subscribe infrastructure - preliminary draft submitted for publication.
    In: 3rd International Workshop on Networked Group Communication (NGC2001), UCL,
    London, UK, pp. 100-110 (2002) Google Scholar   Zhuang, S.Q., Zhao, B.Y., Joseph,
    A.D., Katz, R.H., Kubiatowicz, J.D.: Bayeux: an architecture for scalable and
    fault-tolerant widearea data dissemination. Computer Science Division, Report
    No. UCB/CSD-2–1170, Technical report (2001) Google Scholar   Carzaniga, A., Rosenblum,
    D.S., Wolf, A.L.: Design and evaluation of a wide-area event notification service.
    ACM Trans. Comput. Syst. 19(3), 332–383 (2001) Article   Google Scholar   Fox,
    G., Pallickara, S.: An event service to support grid computational environments.
    J. Concurr. Comput.: Pract. Exp. Special Issue Grid Comput. Environ. (2002) Google
    Scholar   Slominski, A., Simmhan Y., Rossi, A.L., Farrellee, M., Gannon, D.: Xevents/xmessages:
    Application events and messaging framework for grid. Technical report, Indiana
    University (2001) Google Scholar   Eisenhauer, G., Bustamente, F., Schwan, K.:
    Event services for high performance computing. In: Proceedings of the 9th IEEE
    International High Performance Distributed Computing (HPDC), Los Alamitos, CA.
    IEEE Computer Society (2000) Google Scholar   Baldoni, R., Marchetti, C., Verde,
    L.: CORBA request portable interceptors: analysis and applications. Concurr. Comput.:
    Pract. Exp. 15, 551–579 (2003) Google Scholar   Mishra, S., Peterson, L., Schlichting,
    R.: Consul: a communication substrate for fault-tolerant distributed programs.
    Department of Computer Science, The University of Arizona, TR pp. 91–32 (1991)
    Google Scholar   Powell, D.: Delta-4: A Generic Architecture for Dependable Computing.
    Springer, Cham (1991) Book   Google Scholar   Kopetz, H., et al.: Distributed
    fault-tolerant real-time systems: the mars approach. IEEE Micro 9, 25–40 (1989)
    Article   Google Scholar   Kreps, J., Narkhede, N., Rao, J.: Kafka: a distributed
    messaging system for log processing. In: NetDB’11, Athens, Greece (2011) Google
    Scholar   RabbitMQ Homepage. https://www.rabbitmq.com/. Accessed 22 Dec 2022 Dobbelaere,
    P., Esmaili, K.S.: Kafka versus RabbitMQ: a comparative study of two industry
    reference publish/subscribe implementations: industry paper. In: 11th ACM International
    Conference (2017). https://doi.org/10.1145/3093742.3093908 Snyder, B., Bosanac,
    D., Davies, R.: Introduction to Apache ActiveMQ, ActiveMQ in Action, Green Paper
    ISBN: 1933988940 (2010). https://freecontent.manning.com/wp-content/uploads/introduction-to-apache-activemq.pdf
    Fu, G., Zhang, Y., Yu, G.: A fair comparison of message queuing systems. IEEE
    Access 9, 421–432 (2020). https://doi.org/10.1109/ACCESS.2020.3046503 Article   Google
    Scholar   Amazon SQS Homepage. https://aws.amazon.com/tr/sqs/. Accessed 22 Dec
    2022 Google Cloud Pub/Sub Homepage. https://cloud.google.com/pubsub/architecture.
    Accessed 22 Dec 2022 Light, R.A.: Mosquitto: server and client implementation
    of the MQTT protocol. J. Open Source Softw. 2(13), 265 (2017). https://doi.org/10.21105/joss.00265
    Thyagaraj, L.,et al.: IBM MQ as a Service: A Practical Approach, Red Paper, First
    Edition. International Technical Support Organization (2016) Google Scholar   Longo,
    E., Redondi, A., Cesana, M., Arcia-Moret, A., Manzoni, P.: MQTT-ST: a spanning
    tree protocol for distributed MQTT brokers, pp. 1–6 (2020). https://doi.org/10.1109/ICC40277.2020.9149046
    Longo, E., Redondi, A.: Design and implementation of an advanced MQTT broker for
    distributed pub/sub scenarios. Comput. Netw. 224, 109601 (2023). https://doi.org/10.1016/j.comnet.2023.109601.
    ISSN 1389–1286 Guesmi, T., Kalghoum, A., Alshammari, B.M., Alsaif, H., Alzamil,
    A.: Leveraging software-defined networking approach for future information-centric
    networking enhancement. Symmetry 13(3), 441 (2021). https://doi.org/10.3390/sym13030441
    Article   Google Scholar   D’Ortona, C., Tarchi, D., Raffaelli, C.: Open-source
    MQTT-based end-to-end IoT system for smart city scenarios. Future Internet 14(2),
    57 (2022). https://doi.org/10.3390/fi14020057 Article   Google Scholar   Pu, C.,
    Ding, X., Wang, P., Yang, Y.: Practical implementation of an OPC UA multi-server
    aggregation and management architecture for IIoT. In: 2022 IEEE International
    Conferences on Internet of Things (iThings) and IEEE Green Computing & Communications
    (GreenCom) and IEEE Cyber, Physical & Social Computing (CPSCom) and IEEE Smart
    Data (SmartData) and IEEE Congress on Cybermatics (Cybermatics), Espoo, Finland,
    pp. 476–481 (2022). https://doi.org/10.1109/iThings-GreenCom-CPSCom-SmartData-Cybermatics55523.2022.00099
    Hafeez, F., Nasirifard, P., Jacobsen H.: A serverless approach to publish/subscribe
    systems. In: Proceedings of the 19th International Middleware Conference (Posters)
    (Middleware 2018), pp. 9–10. Association for Computing Machinery, New York (2018).https://doi.org/10.1145/3284014.3284019
    Popovic, M., Kordic, B., Basicevic, I., & Popovic, M.: Distributed python software
    transactional memory supporting publish-subscribe pattern. In: 2022 30th Telecommunications
    Forum (TELFOR), Belgrade, Serbia, pp. 1–4 (2022). https://doi.org/10.1109/TELFOR56187.2022.9983693
    Rodriguez, L., Bent, J., Shaffer, T., Rangaswami, R. Infusing pub-sub storage
    with transactions, pp. 23–30 (2022).https://doi.org/10.1145/3538643.3539739 Ahmed,
    N.: MPaS: a micro-services based publish/subscribe middleware system model for
    IoT. In: 2022 5th Conference on Cloud and Internet of Things (CIoT), Marrakech,
    Morocco, pp. 220–225 (2022). https://doi.org/10.1109/CIoT53061.2022.9766670 Hamad,
    M., Finkenzeller, A., Liu, H., Lauinger, J., Prevelakis, V., Steinhorst, S.: SEEMQTT:
    secure end-to-end MQTT-based communication for mobile IoT systems using secret
    sharing and trust delegation. In: IEEE Internet Things J. 10(4), 3384–3406 (2023).
    https://doi.org/10.1109/JIOT.2022.3221857 Richardson, C.: Microservices Patterns
    with Examples in Java. Manning Publications Co., pp. 33–56 (2019). ISBN: 9781617294549
    Google Scholar   JSON Homepage. https://www.json.org/json-en.html. Accessed 22
    Dec 2022 A Data Instance of Javascript Object Notation. https://www.w3schools.com/js/js_json_intro.asp.
    Accessed 22 Dec 2020 Pupil Capture Software v1.7.42 Repo. https://github.com/pupil-labs/pupil/releases/tag/v1.7.
    Accessed 22 Dec 2022 Download references Author information Authors and Affiliations
    Alanya Alaaddin Keykubat University, Alanya, Antalya, Türkiye Serif Inanir & Yilmaz
    Kemal Yuce Corresponding author Correspondence to Yilmaz Kemal Yuce . Editor information
    Editors and Affiliations University of Catania, Catania, Italy Alessandro Ortis
    Istinye University, Istanbul, Türkiye Alaa Ali Hameed National University of Computer
    and Emerging Sciences, Islamabad, Pakistan Akhtar Jamil Rights and permissions
    Reprints and permissions Copyright information © 2024 The Author(s), under exclusive
    license to Springer Nature Switzerland AG About this paper Cite this paper Inanir,
    S., Yuce, Y.K. (2024). Sub Data Path Filtering Protocol for Subscription of Event
    Parts and Event Regeneration in Pub/Sub Pattern. In: Ortis, A., Hameed, A.A.,
    Jamil, A. (eds) Advanced Engineering, Technology and Applications. ICAETA 2023.
    Communications in Computer and Information Science, vol 1983. Springer, Cham.
    https://doi.org/10.1007/978-3-031-50920-9_36 Download citation .RIS.ENW.BIB DOI
    https://doi.org/10.1007/978-3-031-50920-9_36 Published 23 December 2023 Publisher
    Name Springer, Cham Print ISBN 978-3-031-50919-3 Online ISBN 978-3-031-50920-9
    eBook Packages Computer Science Computer Science (R0) Share this paper Anyone
    you share the following link with will be able to read this content: Get shareable
    link Provided by the Springer Nature SharedIt content-sharing initiative Publish
    with us Policies and ethics Download book PDF Download book EPUB Sections Figures
    References Abstract Introduction Literature Methodology Use Case Performance Evaluation
    and Metrics Discussion Conclusion References Author information Editor information
    Rights and permissions Copyright information About this paper Publish with us
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Communications in Computer and Information Science
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Sub Data Path Filtering Protocol for Subscription of Event Parts and Event
    Regeneration in Pub/Sub Pattern
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Hariprasad S.
  - Deepa T.
  citation_count: '2'
  description: As the Internet of Things (IoT), 5G, and Artificial intelligence (AI)
    continue to converge, the number of security incidents and occurrences on the
    networks has recently increased. Since more devices are connected to IoT networks,
    security is becoming a major concern. Conventional intrusion detection systems
    (IDS) are not well suited for use in the complex lightweight IoT environment.
    This research paper presented an IDS for the smart city environment based on IoT-
    Message queuing telemetry transport (MQTT) networks that could detect attacks
    using shallow learning algorithms. The proposed framework has four parts (i) a
    smart city network model with multiple MQTT clients (sensors and IoT devices)
    is created with the help of hardware. (ii) Injected a flooding attack on the MQTT
    broker to create the IDS dataset with normal and attack features, (iii) Based
    on the acute feature selection algorithm to select the optmized features from
    the raw dataset and validated with the Jaccard coefficient. (iv) The dataset is
    further trained and validated using shallow learning algorithms such as extreme
    gradient boosting (XGB), K-nearest Neighbors (KNN) and Random forest (RF). Experimental
    results outperform with better attack detection rate, attack prediction rate and
    improved accuracy over 97% with lower redundancy using selected features. Experimental
    results show that the proposed approach is more vulnerable to attacks in the IoT
    network.
  doi: 10.1007/s11042-023-15788-x
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Multimedia Tools and Applications
    Article An Ensemble Intrusion Detection System based on Acute Feature Selection
    Published: 16 June 2023 Volume 83, pages 8267–8280, (2024) Cite this article Download
    PDF Access provided by University of Nebraska-Lincoln Multimedia Tools and Applications
    Aims and scope Submit manuscript Hariprasad S & Deepa T  189 Accesses 1 Citation
    1 Altmetric Explore all metrics Abstract As the Internet of Things (IoT), 5G,
    and Artificial intelligence (AI) continue to converge, the number of security
    incidents and occurrences on the networks has recently increased. Since more devices
    are connected to IoT networks, security is becoming a major concern. Conventional
    intrusion detection systems (IDS) are not well suited for use in the complex lightweight
    IoT environment. This research paper presented an IDS for the smart city environment
    based on IoT- Message queuing telemetry transport (MQTT) networks that could detect
    attacks using shallow learning algorithms. The proposed framework has four parts
    (i) a smart city network model with multiple MQTT clients (sensors and IoT devices)
    is created with the help of hardware. (ii) Injected a flooding attack on the MQTT
    broker to create the IDS dataset with normal and attack features, (iii) Based
    on the acute feature selection algorithm to select the optmized features from
    the raw dataset and validated with the Jaccard coefficient. (iv) The dataset is
    further trained and validated using shallow learning algorithms such as extreme
    gradient boosting (XGB), K-nearest Neighbors (KNN) and Random forest (RF). Experimental
    results outperform with better attack detection rate, attack prediction rate and
    improved accuracy over 97% with lower redundancy using selected features. Experimental
    results show that the proposed approach is more vulnerable to attacks in the IoT
    network. Similar content being viewed by others Identifying the most accurate
    machine learning classification technique to detect network threats Article Open
    access 05 March 2024 Internet of Things (IoT) Security Intelligence: A Comprehensive
    Overview, Machine Learning Solutions and Research Directions Article 14 March
    2022 E-SDNN: encoder-stacked deep neural networks for DDOS attack detection Article
    12 March 2024 1 Introduction The Internet of Things (IoT) generally refers to
    a network of objects that can collect data and exchange information with other
    objects or servers over the Internet [13, 33]. IoT applications gained in popularity
    and significance because of smart cities, which are occupied by the larger number
    of devices [11, 25, 35]. The nodes in the IoT may collect and analyse user data,
    making it a treasure trove for cyberattacks [3]. The IoT application layer protocols
    such as hypertext transfer protocol (HTTP), the constrained application protocol
    (CoAP), and message queue telemetry transport (MQTT) are used to exchange the
    date in one machine-to-machine (M2M) environment [14]. MQTT protocol transfers
    the data on low-power and unstable networks compared to other protocols such as
    HTTP and CoAP. IBM created the MQTT protocol, and later OASIS became an open-source
    standard protocol for publishing and subscribing to messaging applications. [20].
    Figure 1 shows the general architecture of the publisher/subscriber model for
    the smart city automation system. Any user can publish data on a certain topic,
    and the broker will send the message to any subscriber who has asked to receive
    it, even if they are not connected to the original publisher. The attacker may
    publish data and launch a denial of service (DoS) attack if the MQTT broker has
    no authentication. DoS attack drains the MQTT broker resources. Critical linked
    applications require device security to prevent IoT-MQTT device faults and secure
    data transfer. Fig. 1 MQTT protocol architecture for smart city automation system.
    Full size image An overview of various comprehensive studies related to the MQTT
    Protocol is provided to assist the end users with different taxonomies discussed
    in [19]. The remaining sections are arranged as follows. A description of related
    works is provided in Section 2. The experimental testbed for the proposed methodology
    is described in Section 3. In Section 4, the results and discussion are presented,
    and in Section 5, the paper is concluded. 2 Related works The security aspects
    of MQTT were analyzed, and the protocol was found to be better than other protocols
    in terms of authentication and authorization, data privacy and integrity, and
    communication security. Additionally, the device was successfully implemented
    and tested for the irrigation system, and it was found to make decisions based
    on the collected data in [23]. The MQTT and HTTP protocol communication makes
    it possible to use the data to monitor and detect anomalies in the crop field.
    Due to the small message size, less bandwidth and fast transmission of MQTT is
    preferred over HTTP. Using IoT with MQTT protocol has been studied and found to
    have numerous applications discussed in [15]. These real-time data exchange and
    processing capabilities have enabled smart grids to become more responsive to
    the electricity needs of consumers. This model allows for distributed processing
    of data closer to the edge of the network, improving latency and scalability developed
    [31]. As part of this [27], control Packets are used to maintain data integrity
    and reliability between the nodes, ensuring that the MQTT protocol is implemented
    correctly. According to previous studies, the MQTT applications can be exploited.
    This study [1] an increased performance, reliability, and security level for these
    applications. In fuzzy logic [7], to analyze the data collected from the MQTT
    brokers, identify suspicious behaviour from nodes in the network. It then takes
    action to prevent malicious activities from occurring in the system. IoT data
    transmission is demonstrated in [6] using the MQTT protocol and a formal encryption
    scheme for message transmissions. In [8] study, the MQTT-SN and CoAP are used
    to facilitate media transport in IoT networks, especially in Low-Power and Lossy
    Networks (LLNs). In [10] reliable communication in an IoT environment, an alternative
    protocol such as CoAP may be used, which offers features such as message ordering
    and re-sending of lost messages. In [1] discussed the weaknesses of the MQTT framework-related
    applications. Furthermore, these protocols can be used for many other use cases
    involving IoT. The MQTT architecture and protocols [24] ensure that all messages
    sent between two endpoints are encrypted, making it difficult for a malicious
    actor to intercept and alter the messages. Additionally, analyzing various brokers
    and denial-of-service (DoS) attack and information-gathering techniques allows
    for identifying the least vulnerable broker, reducing the risk of an attack [16].
    Hash message authentication code (HMAC) algorithm is much faster and simpler to
    implement than a complex encryption algorithm. In [4], an HMAC algorithm provides
    a secure authentication process that is more difficult to crack than a traditional
    encryption algorithm is employed instead of a complex encryption algorithm. A[28]
    a framework of such evaluations is necessary to ensure the security of an application
    and its underlying protocol. Table 1 describes the various dataset and algorithms
    utilized for attack detection in IoT networks. Table 1 Related works on IDS with
    IOT using various datasets and algorithms Full size table The MQTT protocol has
    security flaws, including denial of service, identity spoofing, data tampering,
    and information leakage. Internal and external attackers might produce these challenges.
    Researchers have proposed different security procedures and techniques discussed
    in [9]. Internet protocol security analysis enables accurate detection of DoS
    attacks [5], providing a reliable way to protect against malicious traffic. It
    also includes encryption of communication and authentication [12] to ensure secure
    information transmission and protect against malicious attacks. The MQTT protocol
    offers reliable and secure communication, allowing the device to interact with
    the IoT network effectively [29]. It allows a malicious actor to connect to an
    unsecured MQTT instance and exploit its weaknesses. A weakness in MQTT was discovered
    during this investigation: clients can be configured to behave as servers. The
    primary motivation of this article is to detect attacks on smart city environment.
    The new novelty of the work is to design the real-time IoT devices architecture
    with MQTT protocol from homogeneous devices to generate traffic features dataset
    comprising an attack and normal. An acute feature selection (AFS) is applied to
    the dataset and validated with the Jaccard index, which produces an optimized
    dataset. Shallow learning (SL) algorithms have been applied to the proposed AFS-optimized
    dataset to generate the IDS model. 3 Methodology A new framework system for detecting
    intrusions in IoT networks was designed with the help of better acute feature
    selection, as illustrated in Fig. 2. This proposed intelligent IDS system was
    developed in the IoT-MQTT network by merging AFS with a set of rules and the SL
    method. Fig. 2 Proposed framework for Intrusion detection and generation of RPIMQTTSET
    dataset Full size image 3.1 Dataset generation The three scenarios of traffic
    features are considered to generate a dataset as follows, No attacks were involved
    in both subscriber or broker. Subscriber under attack. Broker under attack The
    attack devices send the flooding of CONNECT packets to the subscriber and broker,
    so the subscriber cannot be able to receive the sensor data. These traffic characteristics
    are collected using the tcpdump tool and saved as a pcap referred to as a dataset.
    All MQTT depending on traffic flow characteristics are translated to JSON and
    copied as a CSV file using tshark. Among the raw RPIMQTTSET dataset with 152 attributes
    are 19 flow features, 51 IP features, 58 TCP characteristics, and 24 MQTT features.
    This procedure has been carried out for 300 seconds a week from Monday to Friday
    from 11:00 AM to 11:30 AM. This time duration has been considered with respect
    to the busy usage of IoT devices. 3.2 Acute feature selection The raw dataset
    contains 152 characteristics with these more comprehensive features, the SL algorithms
    generate less accurate results, and more time is needed to train the dataset.
    To improve the accuracy and decrease the complexity of detection time by utilizing
    an AFS method to choose the essential feature. The AFS algorithm first performs
    a feature selection process to reduce the feature set size, then uses a combination
    of the filter, wrapper, and embedded methods to select an optimal subset of features
    from the original dataset. This helps to reduce errors and improve the accuracy
    of the model. Figure 3 illustrates the proposed flow diagram of AFS. Fig. 3 Proposed
    flow diagram of AFS Full size image 3.2.1 Filter-based feature selection Exploratory
    data analysis (EDA) is essential for finding the optimal feature selection from
    a large volume of data. The primary purpose of EDA is to detect any errors or
    outliers present in the dataset, understand the different layouts of the features,
    and then use the pandas data frame for performing EDA. The Biserial correlation
    evaluates statistical parameters between two variables. 3.2.2 Wrapper based feature
    selection The wrapper-based feature selection is implemented using machine learning
    to evaluate and select less features from the dataset. Here the recursive feature
    elimination (RFE), a wrapper feature selection algorithm selects a subset with
    the most relevant features from the original dataset. These reduced features can
    reduce the time complexity of SL algorithms and be more effective. The SL may
    not work correctly with an irrelevant feature so the linear regression model ranks
    the feature by its importance and removes the least important features, and the
    RFE collects and stores the subset of features reduction. 3.2.3 Embedded-based
    feature selection Embedded feature selection is obtained using each iteration’s
    model training phase on the dataset. This least absolute shrinkage and selection
    operator (lasso)[21] based embedded feature reduction is to prevent both under
    and overfitting. The AFS algorithms combine the features obtained from the filter,
    wrapper, and embedded methods by the Jaccard index. Table 2 AFS based dataset
    (feature type N: Numeric, B: Binary) Full size table The total number of features
    selected by AFS is 16. Based on the AFS a total of 17 features with descriptions
    have been mentioned in Table 2. 3.3 Balancing the dataset using SMOTETomek After
    obtaining the optimized dataset, the data need to be cleaned and balanced to improve
    the detection rate of the attacks. 3.3.1 Data Cleaning Data cleaning is checking
    any missing or irrelevant value in the data set. The SL algorithm fails to get
    accurate results if any data is irrelevant. Any empty data in the dataset can
    be identified with the help of the panda’s data frame function. After identifying
    the particular column with irrelevant or empty data, the mean and median are applied
    to fill the data automatically with respect to context. 3.3.2 SMOTETomek The conversion
    of the imbalanced dataset to balanced dataset oversampling using the synthetic
    minority over-sampling technique (SMOTE) and cleaning using Tomek links was performed
    in the RPIMQTTSET. The total raw dataset is 1,81,744 in that total attack features
    are 101443, and the normal features are 80301 after re-sampling using SMOTETomek
    [32] the attack are 99327 features and normal features are 99327 shown in Fig.
    4. Fig. 4 Distribution of Attack feature in RPIMQTTSET dataset Full size image
    3.4 Generation of attack detection model using shallow learning algorithms Shallow
    learning is the type of machine learning algorithm where it learns from the features
    to predict a classification from the real-time input data. Table 3 describes the
    features of various SL algorithms. Table 3 SL Algorithms and its features Full
    size table The performance measures such as accuracy, attack detection rate, attack
    predictive value, normal predictive value, and F1 score have been calculated for
    SL algorithms to validate the dataset. Where true positive(TP), true negative(TN),
    false positive(FP), and false negative(FN). Accuracy-(ACC): The percentage of
    all features correctly defined over all the data is as follows. $$\\begin{aligned}
    ACC=\\frac{TP+TN}{TP+FP+TN+FN} \\end{aligned}$$ (1) Attack Detection rate-(ADR):
    This percentage of the ratio between total features of attack instance to the
    correctly identified attack features is as follows. $$\\begin{aligned} ADR=\\frac{TP}{TP+FN}
    \\end{aligned}$$ (2) Attack predictive value-(APV): The percentage of the ratio
    between attack features instances correctly detected among the expected cases
    as an attack. $$\\begin{aligned} APV=\\frac{TP}{TP+FP} \\end{aligned}$$ (3) Fig.
    5 Confusion matrix Full size image Fig. 6 Receiver operating characteristics Full
    size image Normal predictive value-(NPV): This refers to the percentage of normal
    features instances correctly detected among the real normal features instances
    (Fig. 5). $$\\begin{aligned} NPV=\\frac{TN}{FP+TN} \\end{aligned}$$ (4) F1 Score:
    The F1 Score rate is the ratio of normal requests that are detected as attacks
    overall normal requests as follows: $$\\begin{aligned} F1 score=\\frac{2*TP}{2*TP+FP+FN}
    \\end{aligned}$$ (5) Receiver operating characteristic (ROC): The receiver operating
    characteristic (ROC) curve helps classify the threshold performance model with
    the plot. This plot consists of two parameters, namely true positive rate, and
    false positive rate, as shown in Fig. 6. $$\\begin{aligned} TPR=\\frac{TP}{TP+FN}
    \\end{aligned}$$ (6) $$\\begin{aligned} FPR=\\frac{FP}{FP+TN} \\end{aligned}$$
    (7) Table 4 Performance comparison Full size table Fig. 7 Boxplot Accuracy comparison
    Full size image 4 Discussion This section discusses the results obtained using
    the AFS algorithm with accuracy and other performance metrics. Confusion matrix
    for the SL algorithms such as XGB, KNN, and RF is calculated before and after
    applying the sampling. The confusion matrix is an error matrix to visualize the
    performance on the test data set with certain true values for the SL algorithms
    such as XGB, KNN, and RF before sampling and after sampling, as seen in Fig. 5.
    By sampling the dataset to balance the accuracy is further increased. By sampling
    the dataset to be balanced, the accuracy is further increased as shown in Table
    4. The k-Fold cross-validation has been calculated to compare the SL algorithms
    with box plot graph. Three quartile values are present in the boxplot such as
    median, lower and upper to cross validate the SL algorithms. Figure 7a shows the
    box plot comparison accuracy obtained during 5 fold cross-validation before sampling.
    The average mean of accuracy using KNN, RF, and XGBoost is 96.66%, 96.58%, and
    95.76%. Figure 7b shows the box plot comparison accuracy obtained during 5 fold
    cross-validation after sampling. The average mean of accuracy using KNN, RF, and
    XGBoost is 97.68%, 97.79%, and 97.63%. On comparing before and after sampling,
    there is a variation of 1% in the accuracy. RF algorithm accuracy of 97.84 %,
    91.59 % and 91.85 % accuracy are achieved by the proposed AFS based dataset with
    16 features, the MQTTset dataset with 33 features, and the proposed AFS based
    MQTTset dataset with 21 features respectively as tabulated in Table 5. Table 6
    compares the accuracy of XIIoTdataset[2] and XIIoTdataset with the proposed AFS
    algorithm. The total number of features is 66 in XIIoTdataset. After the proposed
    AFS the number of features is reduced to 44 and improved accuracy up to 1%. Table
    5 Comparative evaluation of the RF Algorithm with AFS based optimized dataset
    and MQTTset dataset in IoT-MQTT homogenous networks Full size table Table 6 Comparison
    of accuracy with XIIoTDataset and Proposed AFS on XIIOTDataset Full size table
    5 Conclusions The IDS dataset has been generated in this work to detect attacks
    in homogenous IoT-MQTT networks. The real-time testbed has been designed to record
    the normal and attack traffic features for three scenarios such as no attacks
    were involved in both subscriber or broker, subscriber under attack, and broker
    under attack. The Jaccard index-based AFS, combining filter, wrapper, and embedded,
    was developed to create the dataset. This optimized dataset has been balanced
    with the help of SMOTETomek. Finally, a real-time attack detection system with
    shallow learning algorithms such as XGB, KNN and RF has been evaluated with an
    accuracy of a balanced dataset above 97%. In future, the multi-modal traffic features
    may be utilized with federated learning for attack detection in heterogeneous
    devices. Data Availability Data available on request from the authors Code Availability
    Not Applicable References Akhtar S, Zahoor E (2021) “Formal specification and
    verification of mqtt protocol in pluscal-2,” Wireless Personal Communications,
    pp. 1–18 Al-Hawawreh M, Sitnikova E, Aboutorab N (2021) X-iiotid: A connectivity-agnostic
    and device-agnostic intrusion data set for industrial internet of things. IEEE
    Internet Things J 9(5):3962–3977 Article   Google Scholar   Conti M, Dehghantanha
    A, Franke K, Watson S (2018) “Internet of things security and forensics: Challenges
    and opportunities,” pp. 544–546 Dinculeană D, Cheng X (2019) Vulnerabilities and
    limitations of mqtt protocol used between iot devices. Appl Sci 9(5):848 Article   Google
    Scholar   Du P, Abe S (2007) “Detecting dos attacks using packet size distribution,”
    in 2007 2nd Bio-Inspired Models of Network, Information and Computing Systems.
    IEEE, pp. 93–96 Gupta V, Khera S, Turk N (2021) Mqtt protocol employing iot based
    home safety system with abe encryption. Multimed Tools Appl 80(2):2931–2949 Article   Google
    Scholar   Haripriya A (2019) Kulothungan K (2019) “Secure-mqtt: an efficient fuzzy
    logic-based approach to detect dos attack in mqtt protocol for internet of things,’’.
    EURASIP J Wirel Commun Netw 1:1–15 Google Scholar   Herrero R (2020) Mqtt-sn,
    coap, and rtp in wireless iot real-time communications. Multimedia Systems 26(6):643–654
    Article   Google Scholar   Hintaw AJ, Manickam S, Aboalmaaly MF, Karuppayah S
    (2021) Mqtt vulnerabilities, attack vectors and solutions in the internet of things
    (iot). IETE J Res 0(0):1–30. https://doi.org/10.1080/03772063.2021.1912651 Article   Google
    Scholar   Hwang HC, Park J, Shon JG (2016) Design and implementation of a reliable
    message transmission system based on mqtt protocol in iot. Wirel Pers Commun 91(4):1765–1777
    Article   Google Scholar   Jin J, Gubbi J, Marusic S, Palaniswami M (2014) An
    information framework for creating a smart city through internet of things. IEEE
    Internet Things J 1(2):112–121 Article   Google Scholar   Kawaguchi R, Bandai
    M (2020) “Edge based mqtt broker architecture for geographical iot applications,”
    In: 2020 International Conference on Information Networking (ICOIN). IEEE, pp.
    232–235 Khan R, Khan SU, Zaheer R, Khan S (2012) “Future internet: The internet
    of things architecture, possible applications and key challenges,” In: 2012 10th
    International Conference on Frontiers of Information Technology, pp. 257–260 Kim
    G, Kang S, Park J, Chung K (2019) An mqtt-based context-aware autonomous system
    in onem2m architecture. IEEE Internet Things J 6(5):8519–8528 Article   Google
    Scholar   Kondoro A, Dhaou IB, Tenhunen H, Mvungi N (2021) Real time performance
    analysis of secure iot protocols for microgrid communication. Futur Gener Comput
    Syst 116:1–12 Article   Google Scholar   Kotak J, Shah A, Rajdev P (2019) “A comparative
    analysis on security of mqtt brokers” Larriva-Novo X, Vega-Barbas M, Villagra
    VA, Rivera D, Alvarez-Campana M, Berrocal J (2020) Efficient distributed preprocessing
    model for machine learning-based anomaly detection over large-scale cybersecurity
    datasets. Appl Sci 10(10):3430 Article   Google Scholar   Layeghy S, Portmann
    M (2022) “On generalisability of machine learning-based network intrusion detection
    systems,” arXiv:2205.04112 Mishra B, Kertesz A (2020) “The use of mqtt in m2m
    and iot systems: A survey,” IEEE Access, vol. 8, pp. 201 071–201 086 MQTT, “MQTT:
    The Standard for IoT Messaging,” 2021. [Online]. Available: https://mqtt.org/
    Muthukrishnan R, Rohini R (2016) “Lasso: A feature selection technique in predictive
    modeling for machine learning,” In: 2016 IEEE international conference on advances
    in computer applications (ICACA). IEEE, spp. 18–20s Narote A, Zutshi V, Potdar
    A, Vichare R (2022) “D-dos attack prediction using machine learning algorithms.”
    Nawandar NK, Satpute VR (2019) Iot based low cost and intelligent module for smart
    irrigation system. Comput Electron Agric 162:979–990 Article   Google Scholar   Park
    CS, Nam HM (2020) “Security architecture and protocols for secure mqtt-sn,” IEEE
    Access, vol. 8, pp. 226 422–226 436 Rathore MM, Ahmad A, Paul A, Rho S (2016)
    Urban planning and building smart cities based on the internet of things using
    big data analytics. Comput Netw 101:63–80 Article   Google Scholar   Sarker IH
    (2021) Cyberlearning: Effectiveness analysis of machine learning security modeling
    to detect cyber-anomalies and multi-attacks. Internet of Things 14:100393 Article   Google
    Scholar   Seoane V, Garcia-Rubio C, Almenares F, Campo C (2021) Performance evaluation
    of coap and mqtt with security support for iot environments. Comput Netw vol 197:18–27
    Article   Google Scholar   Syed NF, Baig Z, Ibrahim A, Valli C (2020) Denial of
    service attack detection through machine learning for the iot. J Inf Telecommun
    4(4):482–503 Google Scholar   Vaccari I, Aiello M, Cambiaso E (2020) Slowite,
    a novel denial of service attack affecting mqtt. Sensors 20(10):2932 Article   Google
    Scholar   Vaccari I, Chiola G, Aiello M, Mongelli M, Cambiaso E (2020) Mqttset,
    a new dataset for machine learning techniques on mqtt. Sensors 20(22):6578 Article   Google
    Scholar   Veeramanikandan M, Sankaranarayanan S (2019) Publish/subscribe based
    multi-tier edge computational model in internet of things for latency reduction.
    J Parallel Distrib Comput 127:18–27 Article   Google Scholar   Wang Z, Wu C, Zheng
    K, Niu X, Wang X (2019) “Smotetomek-based resampling for personality recognition,”
    IEEE Access, vol. 7, pp. 129 678–129 689 Whitmore A, Agarwal A, Da Xu L (2015)
    The internet of things-a survey of topics and trends. Inf Syst Front 17(2):261–274
    Article   Google Scholar   Xin Y, Kong L, Liu Z, Chen Y, Li Y, Zhu H, Gao M, Hou
    H, Wang C (2018) “Machine learning and deep learning methods for cybersecurity,”
    Ieee access, vol. 6, pp. 35 365–35 381 Zanella A, Bui N, Castellani A, Vangelista
    L, Zorzi M (2014) Internet of things for smart cities. IEEE Internet Things J
    1(1):22–32 Article   Google Scholar   Download references Funding This research
    received no external funding Author information Authors and Affiliations Department
    of Electronics and Communication Engineering, SRM Institute of Science and Technology,
    Kattankulathur, Chennai, 603203, Tamilnadu, India Hariprasad S & Deepa T Contributions
    SH; Designed the study and implementation, draft and DT; Conceptualization, Investigation,
    Validation and Review. Corresponding author Correspondence to Deepa T. Ethics
    declarations Conflicts of interest The authors declare no conflict of interest
    Ethical Approval Not Applicable Informed consent Not Applicable Additional information
    Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Springer Nature or its licensor (e.g. a society or other partner) holds exclusive
    rights to this article under a publishing agreement with the author(s) or other
    rightsholder(s); author self-archiving of the accepted manuscript version of this
    article is solely governed by the terms of such publishing agreement and applicable
    law. Reprints and permissions About this article Cite this article S, H., T, D.
    An Ensemble Intrusion Detection System based on Acute Feature Selection. Multimed
    Tools Appl 83, 8267–8280 (2024). https://doi.org/10.1007/s11042-023-15788-x Download
    citation Received 08 February 2022 Revised 13 February 2023 Accepted 05 May 2023
    Published 16 June 2023 Issue Date January 2024 DOI https://doi.org/10.1007/s11042-023-15788-x
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords IoT Security Acute feature selection Shallow learning KNN
    Flooding attacks Use our pre-submission checklist Avoid common mistakes on your
    manuscript. Sections Figures References Abstract Introduction Related works Methodology
    Discussion Conclusions Data Availability Code Availability References Funding
    Author information Ethics declarations Additional information Rights and permissions
    About this article Advertisement Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Multimedia Tools and Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An Ensemble Intrusion Detection System based on Acute Feature Selection
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kherbache M.
  - Ahmed A.
  - Maimour M.
  - Rondeau E.
  citation_count: '0'
  description: The Industrial Internet of Things (IIoT) presents numerous requirements,
    such as reliability, energy efficiency, and real-time performance, among others.
    Digital Twins technology addresses these needs by enabling the simulation, monitoring,
    and optimization of such systems. Specifically, Network Digital Twins (NDTs) have
    recently attracted significant attention from both the industrial and academic
    networking communities. Numerous research efforts focus on the challenge of network
    modeling in this context, as simulation tools can increase cost and computational
    complexity. In this paper, we explore the integration of the formal modeling technique,
    Petri-nets, within the context of NDTs to model the IIoT, enabling data-driven
    Petri-nets. We present an architecture based on open-source tools as a framework
    to encourage researchers to investigate this research direction. Furthermore,
    we validate the proposed architecture through a case study involving a small-scale
    network modeled with Timed Petri-Nets. The results demonstrate the model's effectiveness
    in executing what-if scenarios based on the network's operational parameters to
    predict the Packet Delivery Ratio and enable real-time fault detection. Lastly,
    we conduct a study on the IIoT observability by the NDT to address the challenge
    of virtual–real systems mapping in such a context.
  doi: 10.1016/j.iot.2023.101000
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Background and related work 3. A
    Petri-nets based NDT 4. Case study 5. Results and discussion 6. Conclusion Declaration
    of competing interest Data availability References Show full outline Figures (10)
    Show 4 more figures Tables (3) Table 1 Table 2 Table 3 Internet of Things Volume
    24, December 2023, 101000 Research article Constructing a Network Digital Twin
    through formal modeling: Tackling the virtual–real mapping challenge in IIoT networks
    Author links open overlay panel Mehdi Kherbache, Arsalan Ahmed, Moufida Maimour,
    Eric Rondeau Show more Share Cite https://doi.org/10.1016/j.iot.2023.101000 Get
    rights and content Abstract The Industrial Internet of Things (IIoT) presents
    numerous requirements, such as reliability, energy efficiency, and real-time performance,
    among others. Digital Twins technology addresses these needs by enabling the simulation,
    monitoring, and optimization of such systems. Specifically, Network Digital Twins
    (NDTs) have recently attracted significant attention from both the industrial
    and academic networking communities. Numerous research efforts focus on the challenge
    of network modeling in this context, as simulation tools can increase cost and
    computational complexity. In this paper, we explore the integration of the formal
    modeling technique, Petri-nets, within the context of NDTs to model the IIoT,
    enabling data-driven Petri-nets. We present an architecture based on open-source
    tools as a framework to encourage researchers to investigate this research direction.
    Furthermore, we validate the proposed architecture through a case study involving
    a small-scale network modeled with Timed Petri-Nets. The results demonstrate the
    model’s effectiveness in executing what-if scenarios based on the network’s operational
    parameters to predict the Packet Delivery Ratio and enable real-time fault detection.
    Lastly, we conduct a study on the IIoT observability by the NDT to address the
    challenge of virtual–real systems mapping in such a context. Previous article
    in issue Next article in issue Keywords Network Digital TwinsPetri NetsIIoTModeling
    1. Introduction IoT (Internet of Things) is a key component of Industry 4.0, a
    term that refers to the fourth industrial revolution characterized by the integration
    of digital technologies into manufacturing and other industrial processes [1].
    The IoT integration in Industry 4.0 gave rise to the Industrial IoT (IIoT) [2].
    These networks are used to create smart factories, where machines and production
    systems are interconnected and can communicate with each other to optimize production
    processes, thus, reducing cost, improving efficiency and enabling data-driven
    decision making [3]. The constraints posed by the IoT along with the critical
    nature of the future industrial systems add to the requirements of the IIoT [4].
    The most common requirements can be summarized to reliability, real-time performance,
    energy efficiency, security, interoperability and scalability. Such requirements
    can be satisfied by adopting novel technologies and innovative architectures.
    Digital Twins (DTs) can help satisfy these requirements of IIoT by enabling simulations,
    monitoring, and optimization of IoT devices and systems. A DT is a virtual replica
    of a physical system that reflects its properties, condition and behavior by means
    of models, information and data [5]. Also, it allows controlling the physical
    system with the aim of achieving increased performance and reduced costs. A unique
    feature of a DT is the bidirectional data exchange between itself and its physical
    counterpart. Telemetry is transmitted to the DT to offer insights into the state
    of the physical system, whereas the DT sends back control commands to regulate
    the behavior of the physical system. The networking industry has shown great interest
    in DTs due to their immense potential in improving the field [6]. In this regard,
    specifically, the focus has been on Network Digital Twins (NDTs). However, due
    to being in the early stages of development, NDTs face numerous challenges that
    need to be addressed including scalability, interoperability, real-time requirements,
    data modeling difficulties, security risks, etc [7]. Thus, the ongoing research
    efforts are a crucial initial step towards overcoming these obstacles. Several
    works have started addressing the aforementioned challenges. With respect to the
    difficulties related to the modeling process of a network system, a simplified
    model for Data Center Networks (DCNs) is presented in [8] that builds on information
    retrieved from configuration files and devices status. The network is represented
    using three models, namely, device, network and service models. Graph Neural Networks
    (GNN) are used to construct an NDT in [9], [10], while knowledge graphs are employed
    in [11], [12]. Petri-nets are widely used to model and simulate the behavior of
    discrete systems due to their ability to express the characteristics and the behavior
    of a system through strict mathematical and intuitive graphical expressions. They
    have been used for a long time in computer networks in the context of Local Area
    Networks (LAN) [13], for protocol verification [14] and for evaluating Networked
    Control Systems (NCSs) [15]. With regards to wireless applications, Petri-nets
    are utilized for active product security [16] as well as network security [17].
    The integration of Petri-nets into DTs enables data-driven Petri-net models that
    have the capability to simulate simultaneously both the state-driven behavior
    and the influence of real-time working conditions, operational parameters and
    production load on each individual state of the physical system. In this work,
    Petri-nets are used as a modeling framework for the IIoT within the context of
    the NDT. We propose an architecture that leverages open-source tools to exemplify
    the process of integrating Petri-nets for the purpose of modeling the IIoT in
    the NDT environment. To validate the proposed architecture, Timed Petri-Nets (TPN)
    are leveraged to model a small scale IIoT network aiming to predict its reliability
    based on its operational parameters. Besides, real-time fault detection is also
    investigated by considering the Petri-net model as the baseline one capturing
    the normal behavior of the network. Finally, a study on the observability of the
    system is conducted as an effort to address the challenge of virtual–real mapping
    in the NDT. The remainder of this paper is structured as follows. Section 2 offers
    an overview and relevant literature on network modeling for the NDT and Petri-nets.
    Section 3 elaborates on the incorporation of Petri-nets for modeling the physical
    network in NDTs and categorizes their application into offline and online methods.
    This section also introduces an architecture that integrates Petri-nets into the
    NDT, followed by a case study in Section 4 to validate the proposed framework.
    Section 5 discusses the experimental findings, and finally, we conclude the paper
    and outline future research directions. 2. Background and related work 2.1. Network
    Digital Twin An NDT is a virtual representation of the physical network that has
    the purpose of analyzing, diagnosing, emulating, and then controlling the physical
    network based on data, models and interfaces [7]. Network modeling in the context
    of NDTs is a key enabler for the adoption of DT technology in the networking field.
    Mainly, simulation tools are delicately designed and tightly coupled, leading
    to high execution time, thus, increasing cost and computational power. The authors
    in [6] have experimentally demonstrated that deep learning models (Graph Neural
    Networks, Recurrent Neural Networks) offer very low execution cost compared to
    the traditional packet-level network simulator OMNet++. These approaches and other
    network modeling techniques are currently investigated in the research community
    to enable the full potential of NDT. Particularly to minimize the computational
    requirements and lower execution costs, thus, leading to faster network operations.
    This will allow to forecast performance and prevent network failure in advance
    [18]. In [8], NetGraph is proposed as an NDT platform that enables intelligent
    network maintenance in DCNs. It exploits configuration and state data to represent
    the network using three models (device, network, and service) and provides functional
    blocks such as inventory search and models translation. Ontologies and knowledge
    graphs are used in [11], [12] to model the network and the relationship between
    its components in the digital space. Real-time data from network elements is continuously
    fed into the knowledge graphs to maintain a current view of the network. In [10],
    Graph Neural Networks (GNNs) are used to model the network for accurately estimating
    delay, jitter and loss using real network data including various traffic loads,
    topologies, routing configurations and queue scheduling policies. The results
    show that GNNs effectively model the relational aspect in networks and can generalize
    well to scenarios unseen during training. [9] uses the same modeling technique
    to enable efficient and autonomous management of network slicing in 5G networks.
    The proposed GNN-based model allows capturing the intricate interactions between
    multiple slices, investigating composite traffic generated by slices and generating
    accurate end-to-end slice latency predictions. Such modeling techniques are considered
    data-driven since they rely on real network data. [18] presents a review comparing
    three data-driven network modeling methods and discuss opportunities and challenges
    for performance evaluation from data collection, model construction and application
    prospects. 2.2. Petri nets A Petri-net is a formal modeling technique used to
    represent and analyze systems that involve discrete events and concurrent activities
    [19]. A Petri-net is a directed bipartite graph that consists of two types of
    nodes namely, places and transitions connected through directed edges called arcs.
    Places represent the system’s states, and transitions represent the events that
    cause the system to change its state. The arcs indicate the flow of tokens in
    addition to connecting places with transitions. The tokens represent resources,
    information, or other entities in the system. Petri-nets are often used in the
    analysis and design of systems, such as computer networks, manufacturing processes,
    and biological systems in order to study the behavior, identify potential problems,
    and optimize the performance. TPNs [20] are an extension of the classical Petri-net
    model, incorporating timing information to capture the temporal dynamics of a
    system. In a TPN, transitions or places are associated with time delays, enabling
    the representation of time-dependent behavior and the analysis of real-time systems.
    A time delay can be assigned to either transitions or places. For transitions,
    the time delay represents the duration that it takes to fire once it is enabled.
    When a transition is enabled (i.e., all input places have sufficient tokens),
    a timer starts, and the transition can only fire after the specified time delay
    has elapsed. For places, the time delay represents the duration that a token must
    remain in that place before it can be used to enable a transition. When a token
    arrives at a place with a time delay, it becomes “aged” and the transition can
    only be enabled once the token has “aged” for the specified time delay. TPNs are
    useful for modeling and analyzing systems where time constraints and deadlines
    are critical, such as real-time computing, communication protocols, manufacturing
    processes, or transportation systems. They allow for the examination of system
    performance under various timing conditions, enabling the identification of bottlenecks,
    optimization opportunities, and potential timing-related issues. As previously
    stated, Petri-nets have found extensive application in computer networks, such
    as in LANs [13], where they are exploited for an exhaustive qualitative and quantitative
    analysis of the message exchanges and time constraints of a low-level industrial
    local network for process control. In [14], a formal methodology for specifying,
    analyzing, and verifying protocols using Petri-nets is presented. The authors
    of [15] develop a simulation tool based on Petri-net modeling for assessing NCSs.
    Additionally, Petri-nets have been employed in [16] to address security concerns
    in industrial settings by transforming hazardous products into communicating entities,
    known as active products, which monitor their environment and gather information
    through wireless systems. Petri-nets are used to depict the behavior of these
    active products and the communication flow through a wireless network, thereby
    promoting cooperative interaction among various products. The application of Petri-nets
    in analyzing network security protocols is investigated in [17]. The integration
    of Petri-nets in the context of DTs enables data-driven Petri-nets which can efficiently
    simulate the behavior of the physical system while simultaneously taking into
    account its real-time status. Several works investigate the application prospects
    of such a powerful modeling technology in DTs, for example, the development procedure
    of an electric vehicle [21] to reduce the manufacturing duration by optimizing
    the production plan. In [22], a DT based on Petri-nets is used for real-time simulation
    and feedback control of industrial pipelines. The authors in [23] analyze the
    dataflow of a DT in the context of Industry 4.0 using Petri-nets. Furthermore,
    [24] creates a Petri-net model of a steel reinforcement industry using a synthesis
    procedure that can be used in offline or online contexts of DTs. Additionally,
    the authors in [25] present a data-driven hybrid Petri-net methodology for modeling
    energy behavior, specifically designed for DT-based energy management in manufacturing
    settings. 2.3. Research motivation/gap From the aforementioned works, it is clear
    that network modeling should be extensively investigated for the NDT by exploring
    different modeling approaches. Although there has been substantial research employing
    data-driven techniques such as Graph Neural Networks and ontologies/knowledge
    graphs to model network behavior, these approaches often lack the formal rigor
    and the capacity for real-time fault detection that are essential in mission-critical
    applications. For instance, neural networks based solely on data analysis can
    set control rules, but they act as black boxes. Their lack of explainability is
    not yet accepted in highly critical industrial settings like nuclear power plants
    and avionics. Additionally, they need to gather large amounts of data, consuming
    valuable network bandwidth - a resource we aim to conserve in the IoT. We had
    rather reserve this bandwidth for monitoring the industrial application rather
    than the network. Therefore, we chose formal modeling to not only reduce traffic
    but also to ensure the performance needed for industrial implementation. Petri-nets
    bring a well-defined formal methodology to the table, excelling in both qualitative
    and quantitative analysis. This formal nature of Petri-nets permits mathematical
    rigor in the model, contributing to higher reliability and the possibility for
    formal verification. This is especially critical in applications requiring high
    levels of trust. Moreover, the intuitive graphical representation of Petri-nets
    aids in the visualization and understanding of complex systems behavior. This
    means that there is no hidden logic or unknown transformations; the model’s behavior
    can be traced and explained directly using the graph, ensuring explainability
    unlike “black box” models. Furthermore, Petri-nets are renowned for their efficiency
    in modeling and simulating the behavior of discrete systems, especially within
    a networking context. This stems from their intrinsic properties that aptly represent
    concurrent behaviors, capture simultaneous operations, and precisely depict points
    of resource contention and synchronization needs. Qualitatively, they can identify
    potential errors or bottlenecks in a network, thereby aiding in system verification.
    Quantitatively, Petri-nets provide a framework for evaluating network performance
    metrics and identifying optimization opportunities. This dual capability offers
    a comprehensive approach to understanding and enhancing network systems. Moreover,
    the temporal dimension added by Timed Petri-nets allows for the incorporation
    of crucial time-sensitive parameters, enabling accurate predictions of key performance
    metrics such as Packet Delivery Ratio (PDR). This facilitates real-time monitoring
    and analysis, which are essential for predictive maintenance and fault detection
    in IIoT networks. To the best of our knowledge, this is the first work that seeks
    to leverage Petri-nets for network modeling within the context of the NDT. Particularly,
    an architecture based on open-source tools is proposed to exemplify the process
    of integrating Petri-nets for the purpose of modeling the IIoT in the NDT environment.
    Then, a rigorous case study is conducted in order to enable PDR prediction and
    real-time fault detection in IIoT networks within the context of NDTs. 3. A Petri-nets
    based NDT Previous research has already demonstrated the maturity and efficiency
    of Petri-nets for modeling network protocols behavior. Meanwhile, the data-driven
    approach with real-time updates from the operating network enabled by the NDT
    paradigm paves the way for a new era of Petri-nets utilization. In the context
    of NDTs, Petri-nets can be used either offline to run what-if scenarios or online
    by interacting in real time with the NDT for analysis of network behavior and
    real-time adjustments to optimize its performance. 3.1. Offline usage Petri-nets
    can be exploited offline without direct interaction with the real network to execute
    what-if scenarios aiming at augmenting the cognitive capabilities of the NDT for
    better decision-making. This may include : Performance analysis. Petri-nets are
    able to perform quantitative analysis of the modeled system [26], thus, enabling
    estimation of network performance factors like throughput, latency, and reliability.
    Simulation of different network scenarios by varying traffic patterns and configurations
    helps predict potential future states of the network and identify potential bottlenecks
    or areas for improvement. Network planning and expansion. Petri-nets can be utilized
    to simulate and evaluate various network expansion scenarios [27], such as adding
    new nodes, links, or implementing new technologies. By analyzing the impact of
    these changes on network performance, the NDT can make informed decisions on the
    most effective strategies for network growth. Energy efficiency. Petri-nets can
    model the energy consumption of network components [28], helping to identify potential
    areas for energy savings. By simulating different power management strategies
    and network configurations, the NDT can optimize the energy efficiency of the
    network while maintaining performance. Security analysis. Petri-nets can be used
    to model potential security threats and vulnerabilities in a network [29], allowing
    the NDT to evaluate the effectiveness of security measures. By simulating different
    attack scenarios and analyzing the response of the network, Petri-nets can help
    identify weak points and inform the development of more robust security strategies.
    3.2. Online usage The online usage of Petri-nets for NDTs involves real-time or
    near real-time modeling and analysis of the physical network. In this context,
    the Petri-net model is continuously updated to reflect the current state of the
    actual network and is used to make immediate decisions or adjustments. The following
    are some examples of the online usage of Petri-nets for NDTs: Congestion control.
    Petri-nets can be employed to model and monitor the network real-time traffic
    conditions, enabling dynamic congestion control mechanisms [30]. Based on the
    current network state, the Petri-net model can suggest adjustments to routing
    policies or resource allocations to alleviate congestion and maintain optimal
    network performance. Traffic shaping and Quality of Service (QoS). Petri-nets
    are known for their ability to model concurrent processes [26], hence, they can
    be employed to model concurrent data flows and optimize traffic shaping policies,
    which can prioritize certain types of network traffic and allocate resources accordingly.
    This ensures that critical applications and services receive the appropriate level
    of QoS. Protocol verification. Online Petri-nets models can be used to verify
    the correct implementation and operation of network protocols. By continuously
    comparing the modeled protocol behavior with the actual network operation, discrepancies
    can be identified, and potential errors or vulnerabilities can be addressed in
    real-time. Petri-nets has already been used to model network protocols such as
    CSMA/CA (Carrier Sense Multiple Access/Collision Avoidance) [31], TCP (Transmission
    Control Protocol) [32], [33] and MQTT (Message Queuing Telemetry Transport) [34],
    [35]. With the data-driven approach, one can have a Petri-nets model for each
    network layer including MAC protocols (CSMA, TSCH, etc.), transport protocols
    (TCP, UDP) and application protocols (MQTT, CoAP, etc.). These models are continuously
    running in the NDT and serve as verification models of the protocol stack operating
    in the physical network. Real-time fault diagnosis and recovery. Petri-nets have
    already been used for fault detection and diagnosis in distributed systems with
    an application to telecommunication networks in [36]. In the context of NDTs,
    it can function as a foundational model effectively capturing the anticipated
    normal behavior of the network. This enables the identification of faults when
    deviations arise in the actual network performance. Through continuous network
    monitoring and real-time fault detection, Petri-nets can initiate recovery measures,
    thereby reducing downtime and ensuring network stability. Security monitoring
    and mitigation. This involves real-time detection and response to potential security
    threats. By modeling network behaviors, access control policies, and incident
    impacts, Petri-nets enable the NDT to identify and address vulnerabilities, ensuring
    robust network security [37]. Techniques such as intrusion detection, anomaly
    detection, firewall management, incident response, and continuous security assessment
    can be enabled and contribute towards maintaining the network integrity and stability
    while adapting to evolving threats. Download : Download high-res image (241KB)
    Download : Download full-size image Fig. 1. IIoT-NDT implementation architecture
    incorporating Petri-nets. 3.3. Architecture in the IIoT Since the focus of this
    work is on the IIoT, we present an architecture of the NDT that includes Petri-net
    modeling for an IIoT network. Before digging into the details of the architecture,
    we provide brief definitions of the employed technologies: • MQTT (Message Queueing
    Telemetry Protocol) is a lightweight, publish–subscribe messaging protocol designed
    for IoT applications, especially in low-bandwidth or unreliable networks [38].
    It enables efficient communication between devices and servers through a central
    MQTT broker. Publishers send messages to topics, which are then distributed by
    the broker to subscribers interested in those topics. This decoupling of publishers
    and subscribers enhances scalability and fault tolerance. Key features include
    its lightweight nature, QoS levels and support for retained messages, making MQTT
    suitable for resource-constrained devices and challenging network environments.
    • Eclipse Hono is an open-source framework designed to provide a scalable and
    extensible infrastructure for connecting large numbers of IoT devices to backend
    services [39]. It offers a uniform API (Application Programming Interface) for
    various communication protocols, such as MQTT, CoAP (Constrained Application Protocol),
    and HTTP, enabling seamless integration of devices and services. Hono supports
    multi-tenancy and offers features like authentication, authorization, and telemetry
    data processing, which make it a suitable choice for building robust IoT solutions.
    • Eclipse Ditto is an open-source framework for creating and managing DTs of IoT
    devices [40]. It provides a standardized way to store, update, and access device
    data through APIs, enabling seamless integration with other applications and services.
    Ditto organizes device data into “things” composed of attributes and features,
    allowing developers to model device states and behaviors effectively. By offering
    real-time synchronization and secure access control, Ditto simplifies the development
    of IoT solutions that involve managing DTs. • SNAKES is a versatile and user-friendly
    Python library designed for the creation, manipulation, and analysis of Petri-nets.
    Developed by Franck Pommereau, SNAKES [41] aims to provide a comprehensive toolset
    for working with various types of Petri-nets, including Place/Transition, High-Level,
    and Timed Petri-Nets. The library emphasizes simplicity and extensibility, with
    a clear API and a plugin system that allows users to customize and extend its
    functionalities. SNAKES also supports visualization, enabling users to generate
    graphical representations of their Petri-nets for better understanding and communication
    of the modeled systems. As depicted in Fig. 1, at the local level, the IIoT network
    protocol stack is implemented with Contiki-NG [42] which is an operating system
    for the IoT that implements a low-power IPv6 networking stack. The application
    protocol is MQTT for sending data to the NDT. The IIoT motes publish telemetry
    to a local MQTT broker (Mosquitto [43]) which serves as an intermediary between
    the physical network and its digital counterpart. In this setup, nodes transmit
    data to the broker using a topic named “telemetry”. Simultaneously, a Python-based
    MQTT client subscribes to this topic, receives the published data, and forwards
    it to Eclipse Hono’s MQTT adapter at the cloud level. The selection of this particular
    setup is based on the fact that the IIoT network operates using IPv6 communication,
    while Eclipse Hono and Ditto exclusively support IPv4 communication. This arrangement
    enables seamless communication and data transfer between the actual network and
    its DT. At the cloud level, Eclipse Hono acts as a connectivity layer for the
    IoT network where its MQTT adapter receives the published telemetry that is forwarded
    to Eclipse Ditto for updating the things features (updating the IoT devices state).
    These features are designed based on the case study and the parameters needed
    for the Petri-net model. Details on using Eclipse Hono and Ditto for constructing
    an NDT of the IIoT can be found in [44]. The Petri-net model, implemented using
    SNAKES library, communicates with Eclipse Ditto through its HTTP API to obtain
    the essential “things” features. Ditto provides an HTTP API and a WebSocket to
    applications for retrieving Things-related information, and we employ the HTTP
    API in our architecture. The “things” features are then employed to parameterize
    the Petri-net model. More particularly, the Petri-net model can extract numerous
    features’ values of a number of “things” for calculating a required parameter
    for its functioning, enabling data-driven Petri-net models for the NDT of the
    IIoT. 4. Case study Here we provide a case study of the proposed architecture
    for a small scale network modeled with a TPN. Fig. 2 illustrates the NDT technical
    architecture with the TPN model for the considered case study. The developed framework
    is available in GitHub via the link. The IIoT network is simulated initially using
    Cooja simulator [45] provided by Contiki-NG. Opting to use a simulated network
    during the initial stage of designing the NDT model allows for verification of
    its functionalities prior to the deployment of a real IIoT testbed, as illustrated
    in Fig. 3. In fact, this approach entails employing a simulated network initially
    as part of a verification loop to test the NDT model, ensuring that all implemented
    features are operating correctly and to determine the optimal network configuration.
    Once this has been achieved, a real IIoT testbed can be deployed and integrated
    as an operational network. Table 1 summarizes the parameters of the conducted
    experiments scenario. RPL (Routing Protocol for Low-Power and Lossy Networks)
    is used for both the simulation and the real testbed described below. Simulated
    network. The simulated network consists of three Cooja motes (provided by Cooja
    simulator), two transmitters (nodes , in Fig. 2) and one receiver (node in Fig.
    2 which is a sink and an RPL border-router). The transmitter nodes act as UDP
    (User Datagram Protocol) clients by sending data to the sink and also as MQTT
    clients publishing telemetry to mosquitto MQTT broker via the sink node, which
    are then forwarded to Eclipse Hono as explained previously. CSMA (Carrier Sense
    Multiple Access) is employed on the MAC (Medium Access Control) layer with an
    packets queue buffer for transmitting packets. Three Data Send Intervals (DSIs)
    are considered in this scenario to evaluate the Packet Delivery Ratio (PDR) prediction
    accuracy of the Petri-net model; , and . Download : Download high-res image (472KB)
    Download : Download full-size image Fig. 2. Case study architecture. Reproduced
    from [46]. Download : Download high-res image (209KB) Download : Download full-size
    image Fig. 3. NDT from design to operation. Table 1. Physical network settings.
    Parameter Value Empty Cell Simulation Real testbed Mote type Cooja Mote OpenMote
    B Data Send Intervals (ms) 100, 200, 500 300, 500 MAC protocol CSMA TSCH Queue
    buffer size 8 packets MQTT publish period 20 Data Send Interval Payload size 80
    bytes Routing protocol RPL Experiment duration 30 min Real testbed. The real testbed
    consists of two OpenMote B motes [47], which is an ultra low-power wireless development
    board for IoT applications. It features the Texas Instrument’s CC2538 ARM Cortex-M3
    SoC (System on Chip) and supports the IPv6 stack through open source implementations
    such as Contiki-NG and OpenWSN. As depicted in Fig. 2, two motes are deployed,
    one transmitter and one receiver (the sink) which is plugged to the computer where
    Eclipse Hono & Ditto are deployed, in order to forward telemetry to the NDT. Only
    one transmitter is deployed in this scenario due to the significant interference
    encountered when deploying two transmitters, which hindered their ability to synchronize
    the NDT. Two DSIs are considered to evaluate the prediction accuracy of the Petri-net
    model in this case, and . These are different from the simulation scenario because
    the real motes are not able to support lower DSIs ( , ). Moreover, Time Slotted
    Channel Hopping (TSCH) [48] is employed on the MAC layer with an packets queue
    buffer. The reason behind using TSCH is to guarantee synchronization between the
    two motes for which it manages a globally-synchronized network where the synchronization
    is coordinated by the RPL root towards the leaf nodes along the Directed Acyclic
    Graph of the RPL network. When a node receives a packet, it synchronizes itself
    relative to the time of its parent node. This synchronization is required for
    the online delay calculation, as opposed to the simulated network scenario where
    Cooja simulator takes care of the synchronization. The synchronization rate of
    the NDT is determined by the MQTT publish period, which is set to times the DSI
    in both scenarios. This choice is made to maintain energy efficiency in IIoT motes
    and to avoid disrupting network operations. In fact, if the MQTT publish period
    is excessively high, it may negatively impact network performance. Fig. 4 demonstrates
    the online end-to-end delay calculation method. A transmitter/source node timestamps
    UDP packets with the current time which is referred to as the sent time. Upon
    receiving a packet, the sink node retrieves the sent time value and computes the
    delay as the difference between the reception time and the retrieved value. Then,
    the sink node responds to the transmitter node with a packet containing the calculated
    delay in its payload. Finally, the source node publishes the average delay value
    to the NDT after the aggregation process. We aggregate the delay values within
    the publish period by computing their average value. The twin update delay, which
    is the time required for the MQTT publish packet containing the average delay
    to reach the NDT, is negligible in our scenario since the NDT synchronization
    rate equals times the DSI. In fact, the synchronization interval equals s for
    the worst case scenario when the DSI is set to (simulation), or s when experimenting
    with the real testbed. However, in real-world scenarios, it is crucial to investigate
    the impact of this updating delay on the NDT synchronization. Additionally, the
    potential consequences of MQTT packet losses which could hinder successful updating
    of the NDT should also be explored. An analysis of the impact of MQTT packet losses
    on the system observability is conducted in Section 5.2. The right side of Fig.
    2 depicts the TPN model that we implemented using SNAKES library. We adopted a
    producer–consumer model to reflect the IIoT with multiple sources/producers (place
    P1) and one destination/consumer (place P6). Transition t3 represents successful
    packet reception while t4 models packet loss. The parameters of the model include
    t1 delay which is the nodes’ DSI, t2 delay which is the network end-to-end delay,
    t3 and t4 delays with null values and t5 delay which is between 0 and the nodes’
    DSI. Based on these parameters, we designed a “thing” structure (the IIoT mote
    digital counterpart) with two features, i.e., the DSI and the average delay of
    sending data to the sink. Hence, the IIoT motes publish these two values periodically
    as telemetry in order to update their features in Eclipse Ditto. Download : Download
    high-res image (275KB) Download : Download full-size image Fig. 4. Online end-to-end
    delay calculation and twin updating. The designed data-driven producer–consumer
    model is exploited to run what-if scenarios for PDR prediction in order to maintain
    high network reliability. In addition, it serves as a baseline model capturing
    the normal behavior of the network, thus, a fault is detected when a deviation
    within a certain threshold occurs between the actual PDR, experienced by the physical
    network, and the PDR predicted by the Petri-net model. To demonstrate the utility
    of the model in predicting the PDR, we design a scenario where the network end-to-end
    delay is learned over a -min period by the producer–consumer model. Then, the
    model is launched to predict the PDR with the same duration. In this case, the
    TPN model operates offline allowing it to run faster than the IIoT network, as
    it deals with time units and does not need to adhere to the real network’s timing
    constraints. This results in a more efficient simulation and fast accommodation
    of the real network. Consequently, we run the IIoT network for 30 min for each
    DSI, incorporating a -min network convergence period before initiating the transmission
    of UDP data packets. The MQTT connection process for the transmitter nodes is
    activated after s have elapsed. As for the faults detection functionality, the
    producer–consumer model operates online with the IIoT by retrieving continuously
    the average delay value from the NDT to parameterize transition t2. We design
    a scenario where the IIoT network operates initially with DSI before adding unexpected
    traffic with the goal of disturbing its normal operation and provoking a fault.
    The additional traffic is generated with a DSI, resulting in a global DSI of .
    5. Results and discussion Hereafter, the PDR prediction results are discussed
    for the different considered DSIs, firstly for the simulation scenario before
    moving to the real testbed. In this latter scenario, the real-time faults detection
    functionality is highlighted. Additionally, a study on the observability of the
    system is provided to highlight its importance in the context of NDTs. Finally,
    we discuss the limitations of our approach. 5.1. PDR prediction & faults detection
    The model predicted PDR is calculated using the formula: where #_firing_times_t4
    is the number of firing times of transition t4 which models the number of lost
    packets while #_firing_times_t1 is the number of firing times of transition t1
    which represents the number of sent packets. 5.1.1. Simulation As previously explained,
    the developed producer–consumer model parameters require the DSI and the network
    end-to-end delay. Table 2 presents the experienced end-to-end delay range of the
    simulated physical network for each DSI. Only the minimum and maximum values are
    considered because the intention is to fire the transition t2 randomly within
    the interval. A uniform distribution was chosen for its simplicity and tractability,
    serving as a starting point for this study. This choice allows us to focus on
    validating the overall approach, with the understanding that future work could
    explore alternative distributions to more accurately reflect real-world network
    behavior and further refine the model’s accuracy and applicability. Fig. 5 highlights
    the accuracy of our model PDR prediction where the IIoT PDR is compared to the
    PDR calculated by the Petri-net producer–consumer model for each DSI. The presented
    results showcase the model utility as it is demonstrated by its ability to act
    as a lightweight model mirroring the IIoT behavior and make accurate predictions
    in terms of PDR. In fact, the model provides a platform to run what-if scenarios
    where the required parameters are retrieved from the NDT to anticipate network
    failure in terms of packet loss. If so, the NDT can send control commands to the
    IIoT network to maintain high reliability when the nodes DSI provokes many packet
    losses. More explicitly, the NDT can be configured with the application requirements
    in terms of PDR, i.e., what is the lower bound to qualify a PDR as “good” or “bad”
    for the application. By predicting the PDR based on the network operational parameters,
    the NDT can send commands to reduce the DSI in order to improve reliability when
    the predicted PDR is below the lower bound. Table 2. Experienced end-to-end delay
    range for each DSI - Simulation. DSI (ms) Delay range (ms) 100 [19, 42] 200 [7,
    71] 500 [8, 68] Download : Download high-res image (171KB) Download : Download
    full-size image Fig. 5. Predicted PDR vs. Real network PDR (Simulated network).
    5.1.2. Real testbed The end-to-end delay ranges for the two considered DSIs in
    the real testbed scenario are presented in Table 3. These values are employed
    to parameterize transition t2 in the producer–consumer model, similarly to the
    simulation scenario. We experience higher latency for the DSI compared to the
    low DSIs in the simulation scenario ( , ). This is mainly due to the real world
    Wireless Sensor Networks problems that were not perfectly captured in the simulation
    model, such as multi-path fading, interference, etc. In fact, these problems provoke
    packet loss which increases the number of retransmissions of a packet, thus increasing
    the delay for a packet to reach its destination. Fig. 6 presents the predicted
    PDR by the petri-net model against the real IIoT network PDR for both DSIs. We
    observe an accurate prediction of the petri-net model with very low deviation
    from the real IIoT network for both DSIs, which validates the results obtained
    by simulation. Furthermore, the model can serve as a fault detection module by
    comparing the IIoT PDR with the model’s predicted PDR in real-time (online). Fig.
    7 depicts the PDR curves of the IIoT network against the Petri-net model. We observe
    an accuracy between the Petri-net PDR and the IIoT PDR with an average deviation
    of 2% before the vertical dashed line, which represents the period where the IIoT
    network is running in normal conditions with a DSI. After that, the IIoT PDR drops
    until reaching 90% because we disturbed its normal operation by introducing additional
    traffic of DSI to provoke a fault, while the Petri-net PDR remains at 97%, resulting
    in a deviation of 7%. Thus, if considering for instance the fault detection threshold
    equals to 5%, one can alert the physical system about the potential fault. Knowing
    that the fault is generated in the IIoT network after s of operation and the intersection
    between the fault detection threshold tube and the PDR IIoT curve occurs at around
    s, the fault detection delay in this case equals s. Table 3. Experienced end-to-end
    delay range for each DSI - Real testbed. DSI (ms) Delay range (ms) 300 [44, 1000]
    500 [40, 76] Download : Download high-res image (168KB) Download : Download full-size
    image Fig. 6. Predicted PDR vs. Real network PDR (Real testbed). Download : Download
    high-res image (179KB) Download : Download full-size image Fig. 7. Real-time faults
    detection. 5.2. System observability The observability of the physical network
    by the NDT depends on the volume of collected telemetry and its representativeness,
    the frequency of sending the twin updates defined as the synchronization rate,
    the reliability of the twin updates, among others. In this Section, a study on
    the impact of the twin updates reliability on the NDT’s performance is conducted.
    We employ the MQTT publish messages PDR, which is the ratio of the number of received
    publish messages by the NDT to the number of messages sent by the physical IIoT
    network, as the metric to measure the twin updates reliability. For this analysis,
    two scenarios have been designed by varying the number of the MAC layer retransmissions
    using CSMA in the IIoT. In the first configuration, no retransmissions are allowed
    (set to zero), while in the second configuration, up to two retransmissions are
    permitted. The objective is to evaluate how this parameter influences the MQTT
    publish PDR and demonstrate the direct correlation between this metric and the
    prediction accuracy of the producer–consumer model. Fig. 8 depicts the MQTT publish
    PDR in both scenarios for the three considered DSIs ( , and ). With CSMA retries
    set to zero (Fig. 8(a)), the MQTT publish PDR falls below 50% for the DSI, reaches
    up to 80% for the DSI, and attains 100% when the DSI is set to . In fact, the
    IIoT network experiences high congestion in the first DSI, and since no retransmissions
    are permitted, the nodes are unable to guarantee successful MQTT publish message
    transmissions, leading to numerous packet losses. The IIoT network experiences
    lower congestion for the second DSI, resulting in fewer packet losses as compared
    to the first case. Lastly, the IIoT network is not congested for the DSI and therefore
    can ensure high reliability (100%). On the other hand, the MQTT publish PDR equals
    100% for the three DSIs when CSMA retries equals two, as shown in Fig. 8(b). Since
    the Petri-net model requires the IIoT end-to-end delay to operate, we plot the
    published average-delay values in Fig. 9 for both scenarios. The minimum and maximum
    values for each DSI are considered to parameterize transition t2 in the producer–consumer
    model. Finally, the Petri-net predicted PDR is plotted against the physical IIoT
    network PDR in Fig. 10 for both configurations. We observe a significant inaccuracy
    in PDR prediction for the first scenario (CSMA retries ) when the DSI is set to
    . In this case, the actual PDR of the IIoT network is 43%, while the predicted
    PDR value is 91%. This leads to a 53% deviation, primarily due to the high packet
    loss (57%) experienced with MQTT publish messages for this DSI, as shown in Fig.
    8(a). Moreover, a 21% deviation is observed for the 200 ms DSI, as there is less
    packet loss (23%) compared to the first DSI. Lastly, the Petri-net predicted PDR
    closely matches the IIoT network PDR for the DSI, as no packet loss is recorded
    in both scenarios. Download : Download high-res image (268KB) Download : Download
    full-size image Fig. 8. MQTT publish PDR. Download : Download high-res image (246KB)
    Download : Download full-size image Fig. 9. Published delay values. For the second
    scenario, when the number of permitted CSMA retries is set to two, we observe
    a better prediction accuracy since no packet loss is experienced with the three
    considered DSIs. Although, the producer–consumer model does not perfectly mirror
    the IIoT network which is justified by the 15% deviation for the DSI and a 4.5%
    deviation for the DSI. A deviation threshold can be established to assess the
    prediction accuracy of the model. Based on the results of our study, a 20% threshold
    could be chosen. If the deviation is lower than this threshold, the model’s accuracy
    can be considered satisfactory. Conversely, if the deviation exceeds the threshold,
    the model’s accuracy may be deemed unsatisfactory. The accuracy of the model serves
    as an indicator of the system observability. In this study, we have successfully
    demonstrated a strong correlation between the reliability of the twin update messages
    and the Petri-net model accuracy. Download : Download high-res image (287KB) Download
    : Download full-size image Fig. 10. Predicted PDR vs. Real network PDR. 5.3. Limitations
    Despite the promising results obtained with our approach, we only modeled a small-scale
    network using TPNs to validate our proposition. However, scaling to bigger networks
    remains an issue and brings several challenges. In fact, modeling large-scale
    IIoT scenarios using Petri-nets could be error prone and complex. As the IIoT
    network grows in terms of the number of devices, connections, and processes, the
    Petri-net representing the network can become exceedingly large. This can lead
    to an explosion in the number of places, transitions, and arcs, making the Petri-net
    cumbersome to work with both in terms of visualization and analysis. Given this
    complexity, it might be tempting to abstract certain details for simplicity. However,
    striking a balance between a high-level overview and the necessary granularity
    can be challenging. Too much abstraction might omit crucial details, while too
    little can make the model unwieldy. 6. Conclusion In this work, we tackled the
    challenging problem of network data modeling for the NDT by utilizing Petri Nets
    as a modeling tool. We explored the numerous advantages offered by this well-established
    technique when applied for such purpose, including offline applications (performance
    analysis, network planning, energy efficiency, etc.) and online applications (congestion
    control, traffic shaping and QoS, protocol verification, etc.). We introduced
    a data-driven Digital Twin architecture for the IIoT that incorporates Petri Nets.
    This proposed architecture was assessed through a case study of a small-scale
    network modeled using a lightweight Timed Petri Net producer–consumer model, which
    involved both simulated and real IIoT testbed. The results demonstrated that the
    model is capable of accurately predicting the PDR of the IIoT, making it a valuable
    tool for running what-if scenarios and maintaining high network reliability. Additionally,
    the model serves as a fault detection module, enabling prompt action to be taken
    in case of deviations between the model PDR and the real network PDR. The assessment
    of the system observability highlights the crucial role of reliable twin updates
    in influencing the NDT performance, as demonstrated by the accuracy of the PDR
    prediction in our model. By ensuring high reliability in twin updates, the physical
    system observability using the NDT is enhanced, as a larger volume of telemetry
    data is collected. This increased observability enables a more accurate prediction
    for our model. However, maintaining a perfectly reliable wireless communication
    in real-world scenarios is challenging, which can make it difficult to ensure
    good system observability. Therefore, Artificial Intelligence mechanisms can be
    employed to estimate the values of lost data based on previously collected information.
    As future work, we plan to refine the Timed Petri Net model to more accurately
    represent the networking behavior of the IIoT, taking into account factors such
    as message retransmissions in the event of packet loss and destination acknowledgments
    for received messages. Also, the network end-to-end delay distribution for transition
    t2 should be carefully investigated to more precisely mirror real-world network
    behavior, thereby enhancing the model’s accuracy and broadening its applicability.
    Furthermore, we aim to improve the model to simulate large-scale networking scenarios
    by adopting more advanced Petri nets, such as Hierarchical Petri nets and/or Colored
    Petri nets. These types of Petri nets allow for simplifying the modeling of a
    more complex network, thereby enhancing the generalization capability of the model
    and allowing it to adapt effectively to a wider variety of situations. Declaration
    of competing interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Data availability The link to a Github repository
    containing all the software and data of our research is included in the paper.
    References [1] Ghder Soliman W., Reddy D.V.R.K. Traditional versus fuzzy optimal
    coupling in multi-axis distributed motion control: a pre- IoT- integration procedure
    Adv. Control Appl., 2 (4) (2020), Article e57, 10.1002/adc2.57 arXiv:https://onlinelibrary.wiley.com/doi/pdf/10.1002/adc2.57
    URL https://onlinelibrary.wiley.com/doi/abs/10.1002/adc2.57 View in ScopusGoogle
    Scholar [2] Soliman W.G., Priya B.K., Reddy D.A., Anusha P.V.S., Reddy D.V.R.K.
    Reconfigurable microarchitecture-based PMDC prototype development for IoT edge
    computing utilization IEEE Sens. J., 21 (2) (2021), pp. 2334-2345, 10.1109/JSEN.2020.3020362
    View in ScopusGoogle Scholar [3] Khan I., Javaid M. Role of internet of things
    (IoT) in adoption of industry 4.0 J. Ind. Integr. Manag., 07 (04) (2022), pp.
    515-533, 10.1142/S2424862221500068 arXiv:https://doi.org/10.1142/S2424862221500068
    View in ScopusGoogle Scholar [4] Alabadi M., Habbal A., Wei X. Industrial internet
    of things: Requirements, architecture, challenges, and future research directions
    IEEE Access, 10 (2022), pp. 66374-66400, 10.1109/ACCESS.2022.3185049 View in ScopusGoogle
    Scholar [5] Stark R., Kind S., Neumeyer S. Innovations in digital modelling for
    next generation manufacturing system design CIRP Ann., 66 (1) (2017), pp. 169-172,
    10.1016/j.cirp.2017.04.045 URL https://www.sciencedirect.com/science/article/pii/S0007850617300458
    View PDFView articleView in ScopusGoogle Scholar [6] Almasan P., Ferriol-Galmés
    M., Paillisse J., Suárez-Varela J., Perino D., López D., Perales A., et al. Network
    digital twin: Context, enabling technologies, and opportunities IEEE Commun. Mag.,
    60 (11) (2022), pp. 22-27, 10.1109/MCOM.001.2200012 View in ScopusGoogle Scholar
    [7] Zhou C., Yang H., Duan X., Lopez D., Pastor A., Wu Q., Boucadair M., Jacquenet
    C. Digital Twin Network: Concepts and Reference Architecture Internet Engineering
    Task Force (2022) URL https://datatracker.ietf.org/doc/draft-irtf-nmrg-network-digital-twin-arch/02/,
    Work in Progress Google Scholar [8] H. Hong, Q. Wu, F. Dong, W. Song, R. Sun,
    T. Han, C. Zhou, H. Yang, NetGraph: An Intelligent Operated Digital Twin Platform
    for Data Center Networks, in: Proceedings of the ACM SIGCOMM 2021 Workshop on
    Network-Application Integration, 2021, pp. 26–32. Google Scholar [9] Wang H.,
    Wu Y., Min G., Miao W. A graph neural network-based digital twin for network slicing
    management IEEE Trans. Ind. Inform., 18 (2) (2022), pp. 1367-1376, 10.1109/TII.2020.3047843
    Google Scholar [10] Ferriol-Galmés M., Paillisse J., Suárez-Varela J., Rusek K.,
    Xiao S., Shi X., Cheng X., Barlet-Ros P., Cabellos-Aparicio A. RouteNet-Fermi:
    Network modeling with graph neural networks (2022) arXiv preprint arXiv:2212.12070
    Google Scholar [11] Zhu Y., Chen D., Zhou C., Lu L., Duan X. A knowledge graph
    based construction method for digital twin network 2021 IEEE 1st International
    Conference on Digital Twins and Parallel Intelligence (DTPI), IEEE (2021), pp.
    362-365 CrossRefView in ScopusGoogle Scholar [12] Ma J., Guo Y., Fang C., Zhang
    Q. Digital twin-based zero-touch management for IoT Electronics, 11 (24) (2022),
    p. 4104 CrossRefView in ScopusGoogle Scholar [13] N. Berge, M. Samaan, G. Juanole,
    Y. Atamna, Methodology for LAN modeling and analysis using Petri nets based models,
    in: Proceedings of International Workshop on Modeling, Analysis and Simulation
    of Computer and Telecommunication Systems, 1994, pp. 335–342, http://dx.doi.org/10.1109/MASCOT.1994.284402.
    Google Scholar [14] Billington J., Gallasch G., Han B. a Coloured Petri Net Approach
    To Protocol Verification Springer (2004) Google Scholar [15] B. Brahimi, E. Rondeau,
    C. Aubrun, Integrated approach based on High Level Petri Nets for evaluating Networked
    Control Systems, in: 2008 16th Mediterranean Conference on Control and Automation,
    2008, pp. 1118–1123, http://dx.doi.org/10.1109/MED.2008.4602274. Google Scholar
    [16] Zouinkhi A., Bajic E., Zidi R., Gayed M.B., Rondeau E., Abdelkrim M. Petri
    nets modelling of active products cooperation for active security management 2009
    6th International Multi-Conference on Systems, Signals and Devices, IEEE (2009),
    pp. 1-6 CrossRefGoogle Scholar [17] Xu Y., Xie X. Modeling and analysis of security
    protocols using colored Petri nets. J. Comput., 6 (1) (2011), pp. 19-27 View in
    ScopusGoogle Scholar [18] Hui L., Wang M., Zhang L., Lu L., Cui Y. Digital twin
    for networking: A data-driven performance modeling perspective IEEE Netw. (2022),
    pp. 1-8, 10.1109/MNET.119.2200080 Google Scholar [19] Giua A., Silva M. Petri
    nets and automatic control: A historical perspective Annu. Rev. Control, 45 (2018),
    pp. 223-239, 10.1016/j.arcontrol.2018.04.006 URL https://www.sciencedirect.com/science/article/pii/S1367578818300117
    View PDFView articleView in ScopusGoogle Scholar [20] Zuberek W. Timed Petri nets
    definitions, properties, and applications Microelectron. Reliab., 31 (4) (1991),
    pp. 627-644, 10.1016/0026-2714(91)90007-T URL https://www.sciencedirect.com/science/article/pii/002627149190007T
    View PDFView articleView in ScopusGoogle Scholar [21] G.J. Tsinarakis, P.S. Spanoudakis,
    G. Arabatzis, N.C. Tsourveloudis, L. Doitsidis, Implementation of a Petri-net
    based Digital Twin for the development procedure of an Electric Vehicle, in: 2020
    28th Mediterranean Conference on Control and Automation (MED), 2020, pp. 862–867,
    http://dx.doi.org/10.1109/MED48518.2020.9182784. Google Scholar [22] Dai Y., Shi
    Y., Zhang Z., Tao R., Fang F. Digital twins driving model based on Petri net in
    industrial pipeline 2020 International Conference on Artificial Intelligence and
    Electromechanical Automation (AIEA), IEEE (2020), pp. 283-291 CrossRefView in
    ScopusGoogle Scholar [23] Vitor R.F., Keller B.N., Barbosa D.L.M., Diniz D.N.,
    Silva M.C., Oliveira R.A., Silva S.E.D. Synchronous and asynchronous requirements
    for digital twins applications in industry 4.0. ICEIS (2) (2021), pp. 637-647
    CrossRefView in ScopusGoogle Scholar [24] Tsinarakis G., Sarantinoudis N., Arampatzis
    G. A discrete process modelling and simulation methodology for industrial systems
    within the concept of digital twins Appl. Sci., 12 (2) (2022), 10.3390/app12020870
    URL https://www.mdpi.com/2076-3417/12/2/870 Google Scholar [25] Li H., Yang D.,
    Cao H., Ge W., Chen E., Wen X., Li C. Data-driven hybrid petri-net based energy
    consumption behaviour modelling for digital twin of energy-efficient manufacturing
    system Energy, 239 (2022), Article 122178, 10.1016/j.energy.2021.122178 URL https://www.sciencedirect.com/science/article/pii/S0360544221024269
    View PDFView articleView in ScopusGoogle Scholar [26] Diallo O., Rodrigues J.J.,
    Sene M. Performances evaluation and Petri nets Modeling and Simulation of Computer
    Networks and Systems, Elsevier (2015), pp. 313-355 View PDFView articleView in
    ScopusGoogle Scholar [27] Kouvatsos D.D. Performance Modelling and Evaluation
    of ATM Networks Springer (2013) Google Scholar [28] Dâmaso A., Rosa N., Maciel
    P. Using coloured petri nets for evaluating the power consumption of wireless
    sensor networks Int. J. Distrib. Sens. Netw., 10 (6) (2014), Article 423537 CrossRefView
    in ScopusGoogle Scholar [29] Henry M.H., Layer R.M., Zaret D.R. Coupled Petri
    nets for computer network risk analysis Int. J. Crit. Infrastruct. Prot., 3 (2)
    (2010), pp. 67-75, 10.1016/j.ijcip.2010.05.002 URL https://www.sciencedirect.com/science/article/pii/S1874548210000211
    View PDFView articleView in ScopusGoogle Scholar [30] S. Hafidi, N. Gharbi, Colored
    Petri Nets for Modeling Congestion Control in Wireless Sensor Networks with Retrials,
    in: 2019 IEEE Symposium on Computers and Communications (ISCC), 2019, pp. 998–1003,
    http://dx.doi.org/10.1109/ISCC47284.2019.8969705. Google Scholar [31] J.M. Neto,
    J.S. da Rocha Neto, K. Gorgnio, A. Perkusich, Modeling CSMA-CA protocol with coloured
    petri nets for wireless sensor networks applications, in: 17 International Conference
    on Software Telecommunications and Computer Networks (SofCOM), 2017. Google Scholar
    [32] G. Bao, F. Liu, L. Hong, Modeling and verification of TCP congestion control
    based on colored Petri nets, in: SMC’03 Conference Proceedings. 2003 IEEE International
    Conference on Systems, Man and Cybernetics. Conference Theme - System Security
    and Assurance (Cat. No.03CH37483), 2, 2003, pp. 1045–1050 vol.2, http://dx.doi.org/10.1109/ICSMC.2003.1244550.
    Google Scholar [33] M. Bitam, H. Alla, Performance evaluation of a TCP/IP transmission
    using hybrid Petri nets, in: The 3rd ACS/IEEE International Conference OnComputer
    Systems and Applications, 2005., 2005, p. 54, http://dx.doi.org/10.1109/AICCSA.2005.1387048.
    Google Scholar [34] Rodríguez A., Kristensen L.M., Rutle A. Formal modelling and
    incremental verification of the MQTT IoT protocol Trans. Petri Nets Other Models
    Concurr. XIV (2019), pp. 126-145 CrossRefView in ScopusGoogle Scholar [35] Rodriguez
    A., Kristensen L.M., Rutle A. On modelling and validation of the MQTT IoT protocol
    for M2m communication. PNSE@ Petri Nets/ACSD (2018), pp. 99-118 View in ScopusGoogle
    Scholar [36] R. Boubour, C. Jard, A. Aghasaryan, E. Fabre, A. Benveniste, A Petri
    net approach to fault detection and diagnosis in distributed systems. I. Application
    to telecommunication networks, motivations, and modelling, in: Proceedings of
    the 36th IEEE Conference on Decision and Control, vol. 1, 1997, pp. 720–725 vol.1,
    http://dx.doi.org/10.1109/CDC.1997.650720. Google Scholar [37] Kiviharju M., Venäläinen
    T., Kinnunen S. Towards modelling information security with key-challenge Petri
    nets Jøsang A., Maseng T., Knapskog S.J. (Eds.), Identity and Privacy in the Internet
    Age, Springer Berlin Heidelberg, Berlin, Heidelberg (2009), pp. 190-206 CrossRefView
    in ScopusGoogle Scholar [38] D. Soni, A. Makwana, A survey on mqtt: a protocol
    of internet of things (iot), in: International Conference on Telecommunication,
    Power Analysis and Computing Techniques (ICTPACT-2017), vol. 20, 2017, pp. 173–177.
    Google Scholar [39] Eclipse D. Connect, Command & Control IoT devices (2017) URL
    https://www.eclipse.org/hono/. [Online; Accessed 2022-03-29] Google Scholar [40]
    Eclipse D. Eclipse Ditto™ •open source framework for digital twins in the IoT
    (2017) URL https://www.eclipse.org/ditto/. [Online; Accessed 2022-03-15] Google
    Scholar [41] Pommereau F. SNAKES: A flexible high-level petri nets library (tool
    paper) Application and Theory of Petri Nets and Concurrency: 36th International
    Conference, PETRI NETS 2015, Brussels, Belgium, June 21-26, 2015, Proceedings
    36, Springer (2015), pp. 254-265 CrossRefView in ScopusGoogle Scholar [42] Oikonomou
    G., Duquennoy S., Elsts A., Eriksson J., Tanaka Y., Tsiftes N. The contiki-NG
    open source operating system for next generation IoT devices SoftwareX, 18 (2022),
    Article 101089, 10.1016/j.softx.2022.101089 View PDFView articleView in ScopusGoogle
    Scholar [43] Light R.A. Mosquitto: server and client implementation of the MQTT
    protocol J. Open Sour. Softw., 2 (13) (2017), p. 265 CrossRefGoogle Scholar [44]
    Kherbache M., Maimour M., Rondeau E. Digital twin network for the iIoT using eclipse
    ditto and hono IFAC-PapersOnLine, 55 (8) (2022), pp. 37-42, 10.1016/j.ifacol.2022.08.007
    6th IFAC Symposium on Telematics Applications TA 2022, URL https://www.sciencedirect.com/science/article/pii/S2405896322010801
    View PDFView articleView in ScopusGoogle Scholar [45] F. Osterlind, A. Dunkels,
    J. Eriksson, N. Finne, T. Voigt, Cross-Level Sensor Network Simulation with COOJA,
    in: Proceedings. 2006 31st IEEE Conference on Local Computer Networks, 2006, pp.
    641–648, http://dx.doi.org/10.1109/LCN.2006.322172. Google Scholar [46] M. Kherbache,
    M. Maimour, E. Rondeau, IoT network digital twins modeling using Petri nets, in:
    1er CongrÈS Annuel de la SociÉTÉ D’Automatique de GÉNie Industriel Et de Productique,
    SAGIP 2023, Marseille, France, 2023, URL. Google Scholar [47] Industrial-Shields,
    Openmote home page - OpenMote, URL https://openmote.com/wp-content/uploads/2021/06/content.pdf.
    Google Scholar [48] IEEE std. M. 802.15.4E, part. 15.4: Low-rate Wireless Personal
    Area networks (LR-WPANs) amendament 1: MAC sublayer IEEE standard for Information
    Technology (2012), pp. 1-225, 10.1109/IEEESTD.2012.6185525 Google Scholar Cited
    by (0) View Abstract © 2023 Elsevier B.V. All rights reserved. Recommended articles
    DRL based low carbon economic dispatch by considering power transmission safety
    limitations in internet of energy Internet of Things, Volume 24, 2023, Article
    100979 Renjie Zhu, …, Tomoaki Ohtsuki View PDF A cost-effective LoRaWAN-based
    IoT localization method using fixed reference nodes and dual-slope path-loss modeling
    Internet of Things, Volume 24, 2023, Article 100990 Azin Moradbeikie, …, Sérgio
    Ivan Lopes View PDF Flow and unified information-based DDoS attack detection system
    for multi-topology IoT networks Internet of Things, Volume 24, 2023, Article 100976
    Makhduma F. Saiyed, Irfan Al-Anbagi View PDF Show 3 more articles Article Metrics
    Captures Readers: 5 View details About ScienceDirect Remote access Shopping cart
    Advertise Contact and support Terms and conditions Privacy policy Cookies are
    used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: Internet of Things (Netherlands)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Constructing a Network Digital Twin through formal modeling: Tackling the
    virtual–real mapping challenge in IIoT networks'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Schmidt D.
  - Tagliaro C.
  - Borgolte K.
  - Lindorfer M.
  citation_count: '0'
  description: The number of “smart” devices, that is, devices making up the Internet
    of Things (IoT), is steadily growing. They suffer from vulnerabilities just as
    other software and hardware. Automated analysis techniques can detect and address
    weaknesses before attackers can misuse them. Applying existing techniques or developing
    new approaches that are sufficiently general is challenging though. Contrary to
    other platforms, the IoT ecosystem features various software and hardware architectures.
    We introduce IoTFlow, a new static analysis approach for IoT devices that leverages
    their mobile companion apps to address the diversity and scalability challenges.
    IoTFlow combines Value Set Analysis (VSA) with more general data-flow analysis
    to automatically reconstruct and derive how companion apps communicate with IoT
    devices and remote cloud-based backends, what data they receive or send, and with
    whom they share it. To foster future work and reproducibility, our IoTFlow implementation
    is open source. We analyze 9,889 manually verified companion apps with IoTFlow
    to understand and characterize the current state of security and privacy in the
    IoT ecosystem, which also demonstrates the utility of IoTFlow. We compare how
    these IoT apps differ from 947 popular general-purpose apps in their local network
    communication, the protocols they use, and who they communicate with. Moreover,
    we investigate how the results of IoTFlow compare to dynamic analysis, with manual
    and automated interaction, of 13 IoT devices when paired and used with their companion
    apps. Overall, utilizing IoTFlow, we discover various IoT security and privacy
    issues, such as abandoned domains, hard-coded credentials, expired certificates,
    and sensitive personal information being shared.
  doi: 10.1145/3576915.3623211
  full_citation: '>'
  full_text: '>

    "This website uses cookies We occasionally run membership recruitment campaigns
    on social media channels and use cookies to track post-clicks. We also share information
    about your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Use the check boxes below to
    choose the types of cookies you consent to have stored on your device. Use necessary
    cookies only Allow selected cookies Allow all cookies Necessary Preferences Statistics
    Marketing Show details       skip to main content University of Nebraska Lincoln
    Browse About Sign in Register Journals Magazines Proceedings Books SIGs Conferences
    People Search ACM Digital Library Advanced Search Conference Proceedings Upcoming
    Events Authors Affiliations Award Winners HomeConferencesCCSProceedingsCCS ''23IoTFlow:
    Inferring IoT Device Behavior at Scale through Static Mobile Companion App Analysis
    RESEARCH-ARTICLE OPEN ACCESS SHARE ON IoTFlow: Inferring IoT Device Behavior at
    Scale through Static Mobile Companion App Analysis Authors: David Schmidt , Carlotta
    Tagliaro , Kevin Borgolte , + 1 Authors Info & Claims CCS ''23: Proceedings of
    the 2023 ACM SIGSAC Conference on Computer and Communications SecurityNovember
    2023Pages 681–695https://doi.org/10.1145/3576915.3623211 Published:21 November
    2023Publication History 0 citation 546 Downloads eReaderPDF CCS ''23: Proceedings
    of the 2023 ACM SIGSAC Conference on Computer and Communications Security IoTFlow:
    Inferring IoT Device Behavior at Scale through Static Mobile Companion App Analysis
    Pages 681–695 Previous Next ABSTRACT References Index Terms Recommendations Comments
    ABSTRACT The number of \"smart'''' devices, that is, devices making up the Internet
    of Things (IoT), is steadily growing. They suffer from vulnerabilities just as
    other software and hardware. Automated analysis techniques can detect and address
    weaknesses before attackers can misuse them. Applying existing techniques or developing
    new approaches that are sufficiently general is challenging though. Contrary to
    other platforms, the IoT ecosystem features various software and hardware architectures.
    We introduce IoTFlow, a new static analysis approach for IoT devices that leverages
    their mobile companion apps to address the diversity and scalability challenges.
    IoTFlow combines Value Set Analysis (VSA) with more general data-flow analysis
    to automatically reconstruct and derive how companion apps communicate with IoT
    devices and remote cloud-based backends, what data they receive or send, and with
    whom they share it. To foster future work and reproducibility, our IoTFlow implementation
    is open source. We analyze 9,889 manually verified companion apps with IoTFlow
    to understand and characterize the current state of security and privacy in the
    IoT ecosystem, which also demonstrates the utility of IoTFlow. We compare how
    these IoT apps differ from 947 popular general-purpose apps in their local network
    communication, the protocols they use, and who they communicate with. Moreover,
    we investigate how the results of IoTFlow compare to dynamic analysis, with manual
    and automated interaction, of 13 IoT devices when paired and used with their companion
    apps. Overall, utilizing IoTFlow, we discover various IoT security and privacy
    issues, such as abandoned domains, hard-coded credentials, expired certificates,
    and sensitive personal information being shared. References N. Alexopoulos, M.
    Brack, J. P. Wagner, T. Grube, and M. Mühlhäuser. \"How Long Do Vulnerabilities
    Live in the Code? A Large-Scale Empirical Measurement Study on FOSS Vulnerability
    Lifetimes\". In: 31st USENIX Security Symposium (USENIX Security). Aug. 2022.
    K. Allix, T. F. Bissyandé, J. Klein, and Y. Le Traon. \"AndroZoo: Collecting Millions
    of Android Apps for the Research Community\". In: 13th International Conference
    on Mining Software Repositories (MSR). May 2016. doi: 10.1145/2901739.2903508.
    Android Developers. Security with network protocols. Oct. 27, 2021. url: https://developer.
    android.com/training/articles/security-ssl (visited on 10/07/2022). Show All References
    Index Terms IoTFlow: Inferring IoT Device Behavior at Scale through Static Mobile
    Companion App Analysis Security and privacy Systems security Recommendations On
    the Data Privacy, Security, and Risk Postures of IoT Mobile Companion Apps Data
    and Applications Security and Privacy XXXVI Abstract Most Internet of Things (IoT)
    devices provide access through mobile companion apps to configure, update, and
    control the devices. In many cases, these apps handle all user data moving in
    and out of devices and cloud endpoints. Thus, they ... Read More Static analysis
    for discovering IoT vulnerabilities Abstract The Open Web Application Security
    Project (OWASP), released the “OWASP Top 10 Internet of Things 2018” list of the
    high-priority security vulnerabilities for IoT systems. The diversity of these
    vulnerabilities poses a great challenge toward ... Read More A Systematic Review
    of IoT Security: Research Potential, Challenges, and Future Directions The Internet
    of Things (IoT) encompasses a network of physical objects embedded with sensors,
    software, and data processing technologies that can establish connections and
    exchange data with other devices and systems via the Internet. IoT devices are
    ... Read More Comments 102 References View Table Of Contents Footer Categories
    Journals Magazines Books Proceedings SIGs Conferences Collections People About
    About ACM Digital Library ACM Digital Library Board Subscription Information Author
    Guidelines Using ACM Digital Library All Holdings within the ACM Digital Library
    ACM Computing Classification System Digital Library Accessibility Join Join ACM
    Join SIGs Subscribe to Publications Institutions and Libraries Connect Contact
    Facebook Twitter Linkedin Feedback Bug Report The ACM Digital Library is published
    by the Association for Computing Machinery. Copyright © 2024 ACM, Inc. Terms of
    Usage Privacy Policy Code of Ethics"'
  inline_citation: '>'
  journal: CCS 2023 - Proceedings of the 2023 ACM SIGSAC Conference on Computer and
    Communications Security
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'IoTFlow: Inferring IoT Device Behavior at Scale through Static Mobile Companion
    App Analysis'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Suleman D.
  - Shibl R.
  - Ansari K.
  citation_count: '1'
  description: Networking protocols have undergone significant developments and adaptations
    to cater for unique communication needs within the IoT paradigm. However, meeting
    these requirements in the context of vehicle-to-infrastructure (V2I) communications
    becomes a multidimensional problem due to factors like high mobility, intermittent
    connectivity, rapidly changing topologies, and an increased number of nodes. Thus,
    examining these protocols based on their characteristics and comparative analyses
    from the literature has shown that there is still room for improvement, particularly
    in ensuring efficiency in V2I interactions. This study aims to investigate the
    most viable network protocols for V2I communications, focusing on ensuring data
    quality (DQ) across the first three layers of the IoT protocol stack. This presents
    an improved understanding of the performance of network protocols in V2I communication.
    The findings of this paper showed that although each protocol offers unique strengths
    when evaluated against the identified dimensions of DQ, a cross-layer protocol
    fusion may be necessary to meet specific DQ dimensions. With the complexities
    and specific demands of V2I communications, it’s clear that no single protocol
    from our tri-layered perspective can solely fulfil all IP-based communication
    requirements given that the V2I communication landscape is teeming with heterogeneity,
    where a mixture of protocols is required to address unique communication demands.
  doi: 10.3390/smartcities6050121
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Smart Cities All Article Types Advanced   Journals
    Smart Cities Volume 6 Issue 5 10.3390/smartcities6050121 Submit to this Journal
    Review for this Journal Propose a Special Issue Article Menu Academic Editor Pierluigi
    Siano Subscribe SciFeed Recommended Articles Author Biographies Related Info Link
    More by Authors Links Article Views 1433 Citations 1 Table of Contents Abstract
    Introduction Data Quality and Related Dimensions Overview of Network Protocols
    Survey of Network Protocols Methodology Findings and Discussion Conclusions Author
    Contributions Funding Data Availability Statement Conflicts of Interest Abbreviations
    References share Share announcement Help format_quote Cite question_answer Discuss
    in SciProfiles thumb_up Endorse textsms Comment first_page settings Order Article
    Reprints Open AccessReview Investigation of Data Quality Assurance across IoT
    Protocol Stack for V2I Interactions by Danladi Suleman 1, Rania Shibl 1,* and
    Keyvan Ansari 2 1 School of Science, Technology and Engineering, University of
    the Sunshine Coast, UniSC Moreton Bay, Petrie, QLD 4502, Australia 2 School of
    Information Technology, Murdoch University, Murdoch, WA 6150, Australia * Author
    to whom correspondence should be addressed. Smart Cities 2023, 6(5), 2680-2705;
    https://doi.org/10.3390/smartcities6050121 Submission received: 12 August 2023
    / Revised: 25 September 2023 / Accepted: 27 September 2023 / Published: 6 October
    2023 Download keyboard_arrow_down     Browse Figures Versions Notes Abstract Networking
    protocols have undergone significant developments and adaptations to cater for
    unique communication needs within the IoT paradigm. However, meeting these requirements
    in the context of vehicle-to-infrastructure (V2I) communications becomes a multidimensional
    problem due to factors like high mobility, intermittent connectivity, rapidly
    changing topologies, and an increased number of nodes. Thus, examining these protocols
    based on their characteristics and comparative analyses from the literature has
    shown that there is still room for improvement, particularly in ensuring efficiency
    in V2I interactions. This study aims to investigate the most viable network protocols
    for V2I communications, focusing on ensuring data quality (DQ) across the first
    three layers of the IoT protocol stack. This presents an improved understanding
    of the performance of network protocols in V2I communication. The findings of
    this paper showed that although each protocol offers unique strengths when evaluated
    against the identified dimensions of DQ, a cross-layer protocol fusion may be
    necessary to meet specific DQ dimensions. With the complexities and specific demands
    of V2I communications, it’s clear that no single protocol from our tri-layered
    perspective can solely fulfil all IP-based communication requirements given that
    the V2I communication landscape is teeming with heterogeneity, where a mixture
    of protocols is required to address unique communication demands. Keywords: data
    quality; IoT protocols; IP communication; V2I 1. Introduction Smart cities have
    continued to grow worldwide, giving rise to various innovations such as smart
    agriculture, smart buildings, smart health, and smart transportation. At the core
    of this growth is the Internet of Things (IoT) [1,2,3]. The shift to ubiquitous
    computing has led to the interconnection of smart and embedded devices, resulting
    in the generation of substantial amounts of data, aka “big data” [4]. The continuous
    increase in IoT-generated data underscores the critical importance of data quality
    (DQ) [5]. The success of this IoT paradigm shift relies heavily on DQ guarantees
    [6]. However, ensuring DQ under the current big data collection and transmission
    methods of IoT networks becomes a challenge for various applications. The multifaceted
    nature of big data, characterised by the five Vs, volume, velocity, variety, veracity,
    and value, are some of the constraints faced in ensuring data quality [7]. These
    complexities demand the adoption of meticulous data quality management methodologies
    encompassing comprehensive validation, cleaning, and integration techniques for
    big data applications in various smart city segments. DQ is essential across various
    domains of smart cities, including the cooperative intelligent transportation
    system (C-ITS), which is defined by its interactive components, facilitating various
    communications crucial for its operation. These components include communication
    between Vehicle-to-Vehicle (V2V), Vehicle-to-Infrastructure (V2I), Vehicle-to-Network
    (V2N) and Vehicle-to-Pedestrian (V2P). The integration of communication technologies
    into transportation has ushered in a transformative transference from autonomous
    systems to cooperative ones, which is an integral aspect of smart cities requiring
    high DQ for efficiency and effectiveness. Communications between these components
    of C-ITS are reliant on several protocols to transmit data between nodes, and
    hence, the need to ensure DQ within each of the protocols is paramount. Over the
    past three decades, network protocols have defined and maintained principles of
    data communications and provided foundational protection for data transmission
    [8]. With the emergence of IoT, network protocols have experienced an evolution
    due to the dynamic and constrained nature of IoT devices and networks. Such characteristics
    pose a major challenge, as identified by Shang et al. [9], in integrating the
    existing Transmission Control Protocol/Internet Protocol (TCP/IP) [10] in IoT
    networks. Despite these challenges, IoT supports interoperability with the TCP/IP
    protocol stack, which, however, faces some drawbacks such as throughput, link
    delay, and energy consumption—are metrics that the current TCP/IP protocol stack
    struggles to meet in IoT applications. Furthermore, without optimisation, the
    TCP/IP protocol stack is inadequate for IoT communications within the cloud and
    distributed computing services [11]. To mitigate these challenges, suitable and
    lightweight IoT protocols have been revealed in the literature as fixable alternatives
    for constrained devices [12]. These advancements have led to the application of
    IoT in transportation to increase road safety and enhance cooperative driving
    and traffic management [13]. However, vehicular communications must be precise,
    which requires advanced embedded DQ measures to achieve efficiency, safety, and
    sustainability. Some protocols in the TCP/IP protocol stack do not meet specific
    criteria, such as ensuring the dimensions of DQ for vehicular communications.
    For example, certain protocols lack agility, while others are unreliable or vulnerable
    to cyber-attacks, which impedes the accurate flow of data in vehicular communications.
    Vehicular communication networks are still an active area of research [14,15],
    although several technologies have emerged to support C-ITS. V2I, specifically,
    is an integral part of vehicular communication technologies that promises to optimise
    the efficiency of transportation systems. V2I communications span a wide range
    of applications, including safety and non-safety related. V2I safety applications
    include collision warning, emergency vehicle priority, driver assistance and road
    hazards warming, and speed and intersection warning messages, all aimed at preventing
    road crashes and enhancing mobility [16]. Meanwhile, non-safety applications focus
    on traffic efficiency and optimisation, remote vehicle diagnostics, air pollution
    monitoring and onboard infotainment [17]. These diverse arrays of applications
    stem from various components, technologies and data types involved in the interconnected
    V2I ecosystems. These applications are facilitated using Dedicated Short Range
    Communication (DSRC) [18] and Cellular-Vehicle-to-Everything C-V2X technologies
    [19]. The DSRC and C-V2X technologies establish a communication link between Onboard
    Units (OBU) and Roadside Units (RSU) [20]. An OBU, which is mounted on vehicles,
    allows communication with other OBUs and RUSs [21]. RSUs are part of the infrastructure
    which are strategically positioned along road networks to serve as communication
    nodes or access points for exchanging vital information with trusted authorities
    for traffic management [22]. Collectively, this ecosystem exchanges data for time-critical,
    urban planning, and infotainment use cases with the aim of revolutionising and
    redefining road transportation to improve road safety, comfort, and efficiency.
    Figure 1 shows the V2I communications landscape. Figure 1. Heterogeneous V2I communications.
    The success of the V2I communications ecosystem hinges heavily on the quality
    of data being exchanged and, hence, the importance of assuring DQ in V2I interactions.
    Vehicular communication has a plethora of use cases, and some of these use cases
    have a unique and customised protocol stack. Some use cases in V2I communications
    are time-sensitive or time-critical. Delayed or incomplete data can result in
    vehicles receiving inaccurate information, potentially leading to catastrophic
    outcomes. Therefore, ensuring DQ in V2I communication scenarios is of paramount
    importance. This research aims to investigate the most viable IoT protocols for
    V2I communications, ensuring DQ across the application, transport, and Internet
    layers. This research makes the following contributions: Presents an unconventional
    viewpoint on the IoT protocol stack, underscoring the drawbacks of depending solely
    on a single protocol/layered approach for ensuring reliable data transmission
    within IoT applications. Provides a support framework with a focus on DQ for identifying
    and selecting suitable IoT protocol stack for a specific use case requiring efficient
    data transmission within the V2I ecosystem and IoT applications in general. Presents
    a structured way of organising and customising the IoT protocol stack, making
    it easier to pinpoint areas for adaptation and optimisation. The rest of the paper
    is structured as follows. Section 2 presents a summary of data quality and related
    dimensions. An overview of network protocols is presented in Section 3. Section
    4 presents a survey of the IoT protocol stack. Section 5 presents the research
    methodology. Section 6 presents findings and discussion. The conclusion is presented
    in Section 7. 2. Data Quality and Related Dimensions There is no universally established
    definition for DQ since the concept is subjective to the user, the domain, and
    the context of the use case [23]. Thus, providing DQ continues to pose a challenge
    for developing and deploying the various components of smart cities [24,25,26].
    Due to constant changes in big data characteristics [7,27,28], the demand for
    DQ continues to change. In the context of C-ITS, we define DQ dimensions as data
    characteristics that assess the suitability of data for a specific use case. 2.1.
    Accuracy We define accuracy as the precision and correctness of data while it
    is being transmitted from source to destination. The primary objective is to maintain
    the precision and integrity of data during transmission, preventing any loss,
    errors, or compromise. Localisation accuracy is an example of a use case to support
    automated driving systems [29]. Another use case example can be seen in a real-time
    map update using an MQTT network proposed by Szántó et al. [30] to accurately
    support trajectory planning. 2.2. Availability Availability refers to the continuous
    and uninterrupted data flow between systems or devices in real-time. It ensures
    that data remains readily available and immediately accessible after transmission,
    free of interruptions, delay, or loss. A typical use-case example within V2I is
    incident detection and reporting. As observed by Bhatti et al. [31], inefficient
    accident detection and reporting systems have resulted in an increase in the number
    of fatalities from auto crashes. The authors proposed an accident detection and
    reporting system (ADRS) using Wi-Fi or 3G/4G to transmit and report vehicle telemetry
    data from a crash site to an emergency response unit and a nearby hospital. 2.3.
    Completeness Completeness refers to the extent to which all relevant and necessary
    data elements are included and conveyed in data exchange. It guarantees that no
    critical information is lost on transmission, enabling a comprehensive comprehension
    of the transmitted data for effective use. Completeness is an important characteristic
    of DQ and one of the essential DQ dimensions. For data to be considered complete,
    it must meet the requirements of its intended application. Completeness impacts
    other DQ dimensions, including accuracy, consistency, and timeliness [32]. Kaneyasu
    et al. [33] proposed a transmission control mechanism that considers data completeness
    of large Spatial-temporal data. (STD). In their scheme, each node keeps accounts
    of received packet statuses and dispatches the information only when all packets
    have been accounted for, thereby minimising2 unnecessary transmission and optimising
    wireless bandwidth. STD combines geographical locations and timestamps to provide
    insights. It is worth noting that there is a plethora of applications in V2I interactions,
    ranging from traffic management applications to location-based services. 2.4.
    Confidentiality Confidentiality pertains to safeguarding privacy and preventing
    unauthorised access to sensitive data during transmission. It ensures that sensitive
    or private information remains protected and inaccessible to unauthorised entities.
    A secure and reliable routing approach for mobile networks was proposed by Bhalaji
    [34], using cryptography and the Euclidean Distance formula for confidentiality,
    reliability, and integrity in data transmission. 2.5. Consistency Refers to preserving
    coherence and uniformity of data throughout the data circle. It involves maintaining
    data integrity, a consistent format, meaning, and structure during transmission
    between sending and receiving nodes. Consistency is crucial for accurate interpretation
    and reliable utilisation by intended recipients. A beneficial use-case example
    in V2I is a beacon message broadcasting where homogeneity in broadcast messages
    is essential to relay important/emergency communications. As observed by Liu et
    al. [35], spatial consistency is fundamental in supporting the targeting and effective
    distribution of beacon messages to vehicles within the proximity of infrastructure
    elements, ensuring seamless communication in V2I scenarios. 2.6. Data Integrity
    Refers to the assurance that data remains unaltered, complete, and reliable throughout
    its transmission process. It ensures that data is not tampered with, modified,
    or corrupted during its exchange, maintaining its accuracy and trustworthiness.
    Integrity is measured using data conformity to defined protocols, information
    assurance principles, and standards [36]. Gopinath, Vinoth, and Jaya [37] proposed
    a protocol to support data integrity, using location integrity and multicasting
    to secure data transmission. 2.7. Reliability Pertains to the dependability and
    consistency of data in transmission. It focuses on ensuring that data is delivered
    accurately and consistently without loss, errors, or disruptions. Ensuring packet
    delivery reliability depends on multiple factors. The utilisation of a retransmission-based
    recovery mechanism and packet loss awareness leads to congestion and routing failure
    awareness protocols to guarantee packet reception [38]. These reliability-centric
    initiatives in protocol communications are pivotal in achieving accurate and effective
    data transmission, contributing to overall performance and reliability in V2I
    interactions and communication networks in general. 2.8. Timeliness Timeliness
    refers to the prompt and timely delivery of data within a specified time, ensuring
    its relevance and currency for the intended use. Timeliness underscores the significance
    of transmitting and receiving data within predefined time boundaries, catering
    to the demands of real-time or time-sensitive applications. Timeliness measures
    the currency of data. That is when data was generated and arrived at the destination
    [39]. The timeliness dimension has received a lot of attention in IoT protocol
    research and is one of the most important dimensions in V2I interactions to facilitate
    communications for various use cases, such as emergency warning messages, pedestrian
    safety messages and traffic signal pre-emption, which are safety-critical V2I
    communications. 2.9. Traceability Traceability refers to accurately documenting
    and tracking the provenance of data from source to destination [40]. It involves
    capturing and maintaining a comprehensive audit that identifies data sources,
    including the entities that have accessed or modified the data and the timestamps
    of these activities. Integrating traceability in a system will offer better security
    management, safety management, better response to crises, and overall strengthen
    the performance and coordination of the system [41]. The traceability dimension
    will benefit V2I use case examples like Pseudonym resolution [42,43]. 2.10. Validity
    Validity refers to the quality and trustworthiness of transmitted data. It ensures
    that data is legitimate, accurate, and conforms to predefined criteria, standards,
    or specifications. Various methods determine data validity, including accuracy,
    timeliness, and usability [44]. In addition, validity assesses the fitness of
    data for the desired purpose. 3. Overview of Network Protocols Technological advancements
    and evolution in various IoT applications have spurred the development of various
    lightweight protocols and adaptation of some of the existing TCP/IP protocol stack
    to improve communication in IoT networks [9]. Several studies have addressed shortcomings
    of the conventional TCP/IP protocol stack in fulfilling the fast-paced real-time
    data transmission requirements of vehicular communications [45,46]. In addition,
    the TCP/IP protocol stack was originally designed for best-effort delivery of
    packets across the internet and does not support a fine-grained Quality of Service
    (QoS) coveted in IoT networks. The TCP/IP protocol stack faces significant challenges
    in effectively interfacing with cloud computing and distributed computing services
    without adaptation [11], which is critical for managing the enormous amounts of
    data generated by vehicular networks. In contrast, IoT protocols have demonstrated
    exceptional performance in seamlessly integrating with cloud services and have
    demonstrated compatibility with heterogeneous protocols [47]. This section provides
    an overview of the existing structures of the TCP/IP protocol stack and the new
    IoT protocol stack, solely focusing on the application, transport, and Internet
    layers. The network access layer (Data Link and Physical layers) can operate efficiently
    irrespective of the underlying technologies deployed at the layers above [48].
    Figure 2 Shows the IoT protocol stack. Figure 2. IoT Protocol Stack. 3.1. Application
    Layer The application layer sits at the top of the communication protocol suite,
    irrespective of the prevailing network environment or conditions. It is an abstract
    layer that contains a combination of protocols to facilitate and define how applications
    communicate with others. In addition, these protocols specify how data is formatted,
    transmitted, and received. Hypertext transfer protocol (HTTP), File Transfer Protocol
    (FTP), Simple Mail Transfer Protocol (SMTP), and Domain Name Server (DNS) are
    some of the most popular TCP/IP application protocols. Most TCP/IP application
    protocols operate on a client-server model, in which a client device sends a request
    to the server, and the server acknowledges and responds with the required information
    [49]. This method works well with a typical client-server architecture. Meanwhile,
    the demands for real-time communication in the IoT domain require more efficient
    application protocols. Constrained Application Protocol (CoAP), Message Queuing
    Telemetry Transport (MQTT), Advanced Message Queuing Protocol (AMQP), Extensible
    Messaging, Presence Protocol (XMPP), Data Distribution Service (DDS), and WebSocket
    have been developed and upscaled to address these fast-paced communications in
    IoT applications by providing publish-subscribe or request-reply communication
    architecture which can reduce latency and provide communication improvements in
    IoT systems [50]. Some of these IoT protocols support different QoS, ensuring
    that communication in the IoT environment receives the necessary performance level
    to meet operational requirements, including interoperability and scalability.
    3.1.1. Constrained Application Protocol CoAP is a lightweight protocol apt for
    the ever-increasing Machine-to-Machine (M2M) communications in resource-constrained
    environments [51]. Supporting specific features suitable for V2I communication,
    this protocol implements a request-response architecture between application endpoints,
    which supports QoS that ensures reliable transmissions, simple congestion control,
    and flow control. In addition, CoAP underpins asynchronous message exchange and
    offers a built-in discovery of services and resources. Furthermore, the protocol
    implements an optional subscription mechanism for resource observation. The CoAP
    protocol operates a client-server model like TCP and relies on UDP as the underlying
    transport protocol, establishing a robust connection that ensures reliable communication
    even in dynamic and intermittent connected environments, such as those with high-speed
    connectivity and rapidly changing topologies. CoAP’s compatibility with mobility
    management [52] further enhances its capability to handle high mobility-related
    and handover challenges. Refer to Figure 3 for CoAP architecture. Figure 3. CoAP
    architecture. 3.1.2. The Message Queuing Telemetry Transport MQTT is a lightweight
    protocol designed and used in a plethora of IoT applications and M2M communications
    [53], utilising the publish/subscribe architecture, which is well-suitable for
    remote connections with limited network bandwidth and system resources. This model
    facilitates efficient data dissemination techniques. Its ability to process massive
    volumes of data concurrently while consuming little bandwidth becomes an asset
    in V2I communications, where real-time, widespread information sharing is critical.
    Furthermore, MQTT’s QoS levels ensure message delivery, which is critical in the
    context of traffic safety and infrastructure coordination. The protocol supports
    scalability, which aligns well with the requirements of the V2I environment that
    necessitates efficient and dynamic connectivity between a multitude of clients
    and a central broker. The broker plays an integral role in the MQTT network, effectively
    managing a catalogue of topics, e.g., traffic information and weather conditions,
    that function akin to communication channels. These topics facilitate the publishing
    and subscription of messages, thereby orchestrating the flow of information within
    the V2I domain. Specifically, when a client publishes a message on a given topic,
    the broker ensures this message reaches all clients subscribed to that specific
    topic. The multi-topic subscription capability of MQTT [54] provides clients with
    the advantage of receiving messages from diverse sources, enhancing the scope
    and versatility of information dissemination within the context of V2I. Refer
    to Figure 4 for MQTT architecture. Figure 4. MQTT architecture. 3.1.3. Data Distribution
    Service DDS protocol is a communication standard designed for messaging and data-centric
    exchange in distributed systems, and the protocol dynamically discovers a new
    node within a network architecture such as Vehicular Ad Hoc Network (VANET) and
    Mobile Ad Hoc Network (MANET) [55]. DDS uses the publish-subscribe architecture,
    allowing publishers to disseminate data to multiple subscribers asynchronously
    and in a decoupled manner. DDS is characterised by its support for real-time and
    high-performance communication, achieved using a decentralised architecture with
    a focus on data-centric principles. In the context of V2I applications, supporting
    high data rates and low latency requirements, enabling a single node to subscribe
    and receive information from multiple sources bi-directionally, facilitating effective
    communication. In addition, DDS is a highly functional middleware that is suitable
    for a multitude of V2I communication that supports efficient distributed communication.
    This protocol’s inherent features, such as its reliable communication, scalability,
    interoperability, and flexible configuration of various QoS settings, make it
    a suitable option for V2I applications. Refer to Figure 5 for DDS architecture.
    Figure 5. DDS architecture. 3.1.4. Extensible Messaging and Presence Protocol
    XMPP is an XML-based protocol designed for real-time, extensible communications.
    Originally designed for communication on the internet with ample resources, XMPP
    has now found relevance in the field of IoT applications owing to its distinctive
    attributes [56]. The protocol’s decentralised architecture promotes heterogeneous
    and federated communication by facilitating seamless communication between servers
    and clients. XMPP also support the publish-subscribe communication model, facilitating
    the simultaneous broadcasting of messages to multiple nodes [57]. The extensibility
    and decentralised characteristics present distinct advantages in V2I communication,
    enabling the management of diverse communication services, including real-time
    traffic monitoring, as noted by Hayes and Omar [58]. XMPP could enable immediate
    communication of safety alerts or evacuation instructions from central control
    units to all vehicles in a specific geographic location. The flexibility of XMPP
    also supports the potential for future expansions or adaptations as the requirements
    of the V2I communication system evolve. Refer to Figure 6 for XMPP architecture.
    Figure 6. XMPP architecture. 3.1.5. Advanced Message Queuing Protocol AMQP is
    an open-standard application layer protocol designed and tailored to support communication
    in a distributed environment [59]. AMQP supports various messaging models such
    as point-to-point, publish-and-subscribe, and request-reply, providing flexibility
    in designing distributed systems and enabling effective message-based communication.
    The core feature of AMQP is the guaranteed delivery of messages with its store-and-forward
    feature that ensures reliability [60]. This utilitarian feature is paramount in
    a V2I communication environment where real-time messages are important for the
    successful operation of the entire system. Refer to Figure 7 for AMQP architecture.
    Figure 7. AMQP architecture. 3.1.6. HTTP REST Representational State Transfer
    (REST), often referred to as HTTP REST, is an architectural-style protocol widely
    employed in web development [61]. It adheres to the principle of statelessness,
    where every HTTP request includes all the essential information needed to comprehend
    and handle the request. REST employs GET, POST, PUT, and DELETE methods for various
    operations. This protocol is well suited for scenarios where a vehicle node periodically
    requests information from a server or sends occasional updates. Hireche, Dennai,
    and Kadri [62] present a GET method to disseminate and visualise real-time traffic
    data over REST vehicle web service. This architecture is characterised using clear
    client-server segregation, with the client handling the user interface and experience
    and the server managing data [63]. Refer to Figure 8 HTTP REST Architecture. Figure
    8. HTTP REST Architecture. 3.1.7. WebSocket Established by the Internet Engineering
    Task Force (IETF) in 2011, WebSocket facilitates continued full-duplex communication
    over a single TCP connection. Initially designed for web servers and web browsers,
    WebSocket has gained increasing popularity in IoT applications [64,65]. Contrasting
    HTTP’s request-response model, WebSocket supports both the request-respond and
    publish-subscribe model using real-time data transfer, thus enabling servers to
    provide continuous updates to clients via an ongoing WebSocket connection. This
    dynamic capability is particularly important in IoT applications and is integral
    for V2I applications requiring sustained data exchange for real-time analytics
    and decisions. The real-time data transfer capability of WebSocket is particularly
    valuable in V2I use cases requiring bi-directional communications and interaction
    between vehicles and infrastructural elements like roadside units or traffic control
    centres [66]. For instance, WebSocket is suitable for facilitating instantaneous
    relay of traffic light status to oncoming vehicles, enabling them to adjust their
    speed or plan alternate routes, thereby improving traffic efficiency and safety.
    Refer to Figure 9a for publish and subscribe architecture, Figure 9b for request
    and respond architecture, and Table 1 for the characteristics of application layer
    protocols. Figure 9. (a) WebSocket Req/Res Architecture, (b) WebSocket pub/Sub
    Architecture. Table 1. Characteristics of application layer protocols. 3.2. Transport
    Layer The Transport Layer plays a crucial role in ensuring the successful delivery
    of data packets to the destination. The Transmission Control Protocol (TCP) and
    User Datagram Protocol (UDP) are the two traditional transport protocols. TCP
    is a reliable, connection-oriented protocol that guarantees the delivery of data
    packets to the intended destination. It is a heavyweight protocol with high packet
    overhead. Conversely, UDP is a connectionless protocol that lacks reliability
    in data transmission. While UDP does not provide guaranteed packet delivery, it
    is known for its speed and is used for applications that can tolerate packet loss
    during transmission. With the introduction of innovative transport protocols like
    SCTP [67], DCCP [68], and QUIC [69], the transport layer has attracted significant
    research interest. Additionally, there have been efforts focused on the performance
    optimisation of traditional transport protocols [70] as well as congestion and
    error control [71]. The development of new protocols and upscaling of the traditional
    transport layer protocols are crucial in enabling reliable and efficient communication
    in the rapidly evolving IoT paradigm. 3.2.1. Datagram Congestion Control Protocol
    In 2006, DCCP [68] was standardised by IETF to support applications that require
    timely delivery of data packets, an inherent feature of UDP, also benefiting from
    the congestion control mechanisms of TCP. DCCP aims to reduce network congestion
    while enabling speedy data transfer between nodes. It achieves this by offering
    an unreliable flow of datagrams with congestion control mechanisms in place. DCCP
    is specifically designed to cater to applications like streaming media, online
    multiplayer games, and Voice over IP (VoIP) services. These applications can tolerate
    certain data loss but are sensitive to delays, making them suitable for application
    in IoT communication. 3.2.2. Steam Control Transmission Protocol SCTP was initially
    designed for VoIP and telephony services and standardised in 2007; SCTP is a transport
    layer protocol developed to address limitations inherent in TCP and UDP [72].
    It is distinguished by its multi-streaming and multi-homing capabilities, along
    with the capability to support multiple IP addresses per association. Consequently,
    these unique facets have propelled the expansion of SCTP into a wider array of
    applications, augmenting its significance and relevance in the IoT communication
    landscapes [73]. 3.2.3. Quick UDP Internet Connection The QUIC protocol was developed
    by Google in 2013 specifically to enhance the efficiency and effectiveness of
    web applications [74]. QUIC is a purpose-built protocol that prioritises low-latency
    and secure data transfer across a network. It achieves this objective by leveraging
    UDP as its underlying transport protocol and features similar techniques, such
    as connectionless communication and header compression. QUIC integrates various
    functionalities, including encryption, multiplexing, and connection migration,
    to enhance the efficiency, reliability, and security of data transfer. Its effectiveness
    in reducing latency and enhancing the overall user experience has garnered significant
    attention, especially in applications that necessitate real-time communication
    and low-latency transmission. In addition, QUIC boasts advanced congestion control
    mechanisms and rapid packet loss recovery techniques, contributing to optimised
    network performance [75]. These unique functionalities maintain and preserve connection
    continuity during hand-off, making the protocol particularly desirable in the
    V2I communication landscape. 3.3. Internet Layer The Internet layer, often referred
    to as the network layer, plays a pivotal role in the TCP/IP protocol stack. The
    Internet Protocol (IP) holds paramount significance at this layer. The layer’s
    fundamental role entails facilitating the transmission and reception of data packets
    across interconnected networks, encompassing tasks such as packet forwarding,
    logical addressing, routing and error handling. Unlike connection-oriented protocols,
    the IP protocol operates in a connectionless manner, foregoing the use of acknowledgements
    or connection establishment. These responsibilities are delegated to the protocols
    situated above and below its layer. Consequently, the IP protocol is sometimes
    perceived as lacking reliability on its own [48]. Nevertheless, the IP protocol
    remains indispensable in today’s communication landscape, particularly considering
    the proliferation of networked devices. The surge in Internet connectivity and
    IoT deployments has impacted the availability of Internet Protocol version 4 (IPv4)
    addressing schemes. As a result, IPv4 has exhausted its available addresses for
    internet nodes. To mitigate this issue, the IETF has introduced a new version,
    Internet Protocol Version 6 (IPv6) [76]. In addition to the introduction of IPv6
    as a solution for addressing the shortage, several protocols have been developed
    to support efficient communication in constrained networks. IPv6 over Low-Power
    Wireless Personal Area Networks (6LowPAN), Routing Protocol for Low-Power, and
    Lossy Networks (RPL) are notable protocols in IoT’s Internet layer to support
    efficient transmission and routing in a resource-constrained environment, respectively.
    3.3.1. Low-Power Wireless Personal Area Networks 6LowPAN is an IETF standard facilitating
    the integration of low-power devices into the IoT communication paradigm by transmitting
    IPv6 packets over low-power wireless networks [77]. Providing support to address
    the challenges posed by resource-constrained devices by employing efficient packet
    and header compression techniques, effectively reducing overhead [78]. In addition,
    IPv6 incorporates adaptation and fragmentation mechanisms to handle packet loss
    and variable link quality in low-power nodes. By optimising data transmission
    and network efficiency, 6LowPAN facilitates the seamless integration of IoT devices
    with limited resources into the larger IPv6-based network infrastructures. 6LowPan
    is easily adaptable to an increase in the number of nodes in a network, making
    it a suitable, easy choice for V2I communications. 3.3.2. Routing Protocol for
    Low-Power and Lossy Networks RPL is a distance-vector routing protocol designed
    specifically for low-power and lossy networks (LLNs) to support efficient packet
    routing and reliable paths from source to destination. It is one of the initiatives
    observed by the IETF to solve the unique communication needs of LLNs. These networks
    have a unique set of characteristics, including a limited power supply (often
    battery-powered), high loss rates, low data rates, and a large number of devices.
    [79,80]. LLNs are typically used in sensor networks, smart transportation, smart
    grid, home and building automation, industrial monitoring, and a host IoT application.
    4. Survey of Network Protocols The computing limitations of IoT devices have received
    extensive attention from academia and industry. These efforts have resulted in
    the development of several lightweight protocols to compensate for the constrained
    nature of IoT devices [81]. As a result, several application layer protocols have
    been developed to support communication in IoT networks, each with a unique and
    problem-specific communication solution. Various studies have employed a range
    of methodologies, including experiments [82,83], simulations [84], and testbed
    implementation [85], to compare the performance of various protocols. These evaluations
    used several performance metrics such as bandwidth consumption, efficiency, energy
    consumption, latency, reliability, Round Trip Time (RTT), upload and download
    time, average response time, and throughput. With these metrics, more emphasis
    has been placed on investigating timeliness in the IoT application layer. Mijovic,
    Shehu, and Buratti [81] performed an experiment by comparing the performance of
    three application layer protocols, CoAP, WebSocket, and MQTT, using different
    Internet connections. Protocol efficiency and RTT were the measured metrics. Their
    experiment showed that CoAP achieved the highest protocol efficiency and the lowest
    average RTT, closely followed by WebSocket. The performance of MQTT depended on
    QoS profiles. QoS1 generally achieved better RTT. Another set of comparisons was
    conducted via an experiment by Tandale, Momin, and Seetharam [82]. They measured
    the performance metrics of CoAP, MQTT, and REST HTTP using time and bandwidth
    consumption on a 4G cellular network with a speed of 6 Mbps and an Internet broadband
    connection with a speed of 50 Mbps. Their results showed that CoAP is faster among
    the protocols when transmitting payloads less than 10 kb. MQTT and CoAP outperformed
    REST HTTP when sending smaller payloads. With larger payloads, REST HTTP became
    the faster protocol. Additionally, the experiment showed bandwidth consumption
    is equally reduced in CoAP and MQTT when transmitting smaller payloads. With an
    increase in Payloads, REST HTTP consumed less bandwidth. Assessing these protocols
    over a 4G cellular network is favourable for CoAP and MQTT in V2I communications
    use cases requiring the broadcast of smaller payloads. In Babovic, Protic, and
    Milutinovic [86], the transmission latency and throughput of various sensor data
    sizes and formats were studied using AMQP, DDS, MQTT, and XMPP over the web with
    MQTT outperforming the other protocols in latency. Another experiment was observed
    by Kayal and Perros [87]; their study measured and compared the RTT for different
    loads using CoAP, MQTT, XMPP and WebSocket. CoAP and MQTT showed better response
    times. In another study, Ghotbou and Khansari [88] performed an analytical comparison
    between AMQP, CoAP, DDS, MQTT, MQTT-SN, XMPP, WebSocket, HTTP/1.1, HTTP/2.0, and
    RTP to investigate the most suitable IoT protocol for video transmission over
    LLN. Their comparative analysis showed that CoAP is the most appropriate protocol
    for video transmission due to its associated transport protocol (i.e., UDP), which
    supports best-effort packet delivery. A comparison between CoAP, MQTT, XMPP, and
    AMQP was observed by Sharma and Gondhi [12]; their study revealed that CoAP, AMQP,
    and XMPP ensure reliability by some built-in features. In addition, AMQP and XMPP
    both benefit from the reliability provided by their associated transport protocols,
    e.g., TCP. On the other hand, reliability is provided using the various QoS in
    MQTT. Their research further showed that CoAP, MQTT, and XMPP all support real-time
    communication, while AMQP does not. + A study by Chaudhary, Peddoju, and Kadarla
    [89] compared the performance of AMQP, MQTT, and CoAP and found that MQTT exhibited
    high packet overhead, especially in 3G networks due to QoS requirements. At high
    message volumes, MQTT delivered superior throughput, while CoAP and MQTT (QoS
    1 and 2) maximised bandwidth usage. Furthermore, Gupta [90] conducted a comparative
    study of CoAP, MQTT, WebSocket, XMPP and AMQP to ascertain the most reliable protocol
    using better power usage and latency. CoAP and MQTT performed better when transmitting
    smaller messages, while AMQP and MQTT are in the pole position for QoS reliability,
    and XMPP and AMQP lead in security. Al-Qassab and Aal-Nouman [91] conducted a
    simulation study to compare the most power-efficient protocol for wireless sensor
    networks using CoAP and MQTT-SN. The results showed that CoAP consumed less power.
    Timeliness and reliability have also received much research attention at the application
    layer. While V2I will certainly benefit from this research, more effort is required
    to investigate other factors like security. In the transport layer, TCP and UDP
    are the most prevalent protocols; their limitation in the IoT paradigm has brought
    about the introduction of QUIC, SCTP, and DCCP as promising alternatives. These
    protocols offer improvements in ACK, connection management, and cryptographic
    integration. QUIC shows potential with flexible deployment and promising performance
    [92]. AL-Dhief et al. [93] conducted a study comparing the performance of TCP
    and UDP under varying conditions using simulations to analyse two scenarios: varying
    bandwidth with a fixed packet size and varying packet size with a fixed bandwidth.
    The key metrics used for performance evaluation included end-to-end delay, throughput,
    packet delivery ratio, and packet loss ratio. Their findings indicated that TCP
    consistently outperforms UDP across all metrics in both scenarios, thereby demonstrating
    its greater reliability. Similarly, Wheeb [94] conducted an in-depth comparative
    study of the performance of transport protocols, including UDP, DCCP, SCTP, and
    TFRC (TCP-Friendly rate control), within a wired network environment. Their findings
    indicated that SCTP generally outperformed its counterparts in terms of throughput.
    However, for video streaming, TFRC demonstrated superior performance. This edge
    is attributed to its association with the UDP transport, which provides a TCP-style
    congestion control solution suitable for multimedia and interactive applications
    that demand low-latency and consistent data delivery. Furthermore, DCCP was found
    to have the least end-to-end delay in data traffic transmissions, whereas UDP
    exhibited better performance in video streaming scenarios. The evidence from this
    study suggested that for high throughput and reliable transport requirements,
    SCTP and TFRC could be the optimal choices. In another study, Sahraoui et al.
    [95] conducted a simulation to compare the performance of TCP and UDP for video
    streaming in VANET, examining metrics like throughput, packet delivery ratio,
    end-to-end delay, and Peak Signal-to-Noise Ratio (PSNR). Their results showed
    that UDP offers superior throughput and lower end-to-end delay in comparison to
    TCP due to the absence of congestion control, making it potentially beneficial
    for real-time video streaming despite its relative unreliability. However, TCP’s
    retransmission technique results in a slightly better packet delivery ratio. Park
    and Koh [96] compared the performance of SCTP and TCP using throughput, traffic
    competition, and multi-homing. Their results showed that TCP outperforms SCTP
    with small data sizes, but SCTP surpasses TCP with larger sizes. Both protocols
    compete fairly in traffic handling, and SCTP’s multi-homing offers faster data
    transmission and better throughput compared to its single-homing. Performance
    comparison of modified QUIC (ModQUIC), QUIC, and TCP was carried out by Kharat
    and Kulkarni [97], and ModQUIC produced superior performance both in throughput,
    delay, and loss rate, demonstrating better network performance overall, particularly
    with maximised bandwidth utilisation. In addition, ModQUIC and QUIC outperformed
    TCP in packet loss rate, even in lossy links. Patel, Chatbar, and Shah [98] highlighted
    the performance factors of IPv4 and IPv6. Address space, throughput, security,
    and jitter values were examined, highlighting the advantages of IPv6 over IPv4,
    including efficient routing, simplified configuration, built-in IPsec security,
    and support for new services and mobility. In another study, Sandur and Giri [99]
    compared the performance of 6LoWPAN-CoAP and RPL-CoAP, evaluating average latency
    and Packet Delivery Ratio (PDR). Both protocols saw improved PDR, but RPL-CoAP
    outperformed 6LoWPAN-CoAP in latency. In a similar study, Mahmud et al. [100]
    investigated the pairing of RPL-CoAP and 6LoWPAN-CoAP protocols. Their study showed
    that RPL-CoAP surpassed the 6LoWPAN-CoAP combination in received packets, suggesting
    that the former is a superior option for efficient IoT communication. Table 2
    shows a comparative analysis of IoT protocol from the application, transport,
    and Internet layer in the literature, highlighting performance metrics and the
    best-performing protocols from the analysis. Table 2. Performance evaluation of
    network protocol. 5. Methodology Significant advancements have been made in the
    field of IoT networking concepts due to the extensive array of applications and
    use cases; IoT networking protocols have evolved into a vibrant research area
    influenced by their diverse characteristics [101]. Consequently, considerable
    studies have been dedicated to evaluating and comparing the effectiveness of various
    IoT and related protocols. This study has adopted a simple but effective methodology
    by conducting a literature survey to carefully select publications related to
    networking protocols for constrained devices. To gather pertinent literature within
    this study domain, our literature screening and selection were focused on protocols
    at the application, transport, and Internet layers of the IoT protocol suite.
    The selection process prioritised publications that directly compared the performance
    of different protocols, as these studies provide valuable insights into the strengths
    and weaknesses of each protocol. Additionally, publications that examined the
    fundamental functions and design purposes of the protocols were included in the
    survey. DQ is integral to the success and broad adoption of the IoT paradigm [6].
    Recognising this paramount importance, the second phase of this study focuses
    on identifying the protocols capable of satisfying our study-specific DQ dimensions.
    This was achieved by performing an exhaustive evaluation and analysis of the performances
    of each of the selected protocols [102]. In following this course, we hoped to
    distil the sets of protocols that not only meet but optimally satisfy our study-specific
    DQ dimensions for V2I applications and use cases. To achieve this, we conducted
    a mapping exercise, linking each of the protocols’ design objectives, performance
    evaluations and inherent characteristics to our study-specific DQ dimensions.
    This crucial step was carried out to assess the strengths, suitability, and limitations
    of the protocols and to establish a clear correlation between the capabilities
    of each protocol and their potential to fulfil the communication requirements
    in IP-based V2I interactions, thereby laying the groundwork for a use-case -driving
    approach in V2I. 6. Findings and Discussion 6.1. Mapping Each protocol within
    the protocol suite plays a specific and pivotal role in the overall network performance,
    with combined responsibilities ranging from formatting, managing, routing, forwarding,
    and receiving data packets between nodes. Ensuring communication efficiency in
    a multifaceted V2I communication landscape requires each protocol to perform optimally
    to ensure reliable data transmission across diverse use cases, e.g., beacon message
    broadcasting [103]. It’s imperative to understand the most suitable protocols
    for V2I communications within the context of DQ. In achieving this, mapping the
    protocols to our identified DQ dimensions is essential in identifying: 1. The
    most suitable protocols to deploy in specific use cases. 2. Providing a structured
    way to effectively manage the layered suite to achieve efficiency in data transmission,
    and 3. Making it easier to pinpoint areas for optimisation which leads to an operational
    improvement in the overall performance of the network. This mapping can act as
    a blueprint to support network engineers and managers working on V2I systems in
    deploying IoT devices within traffic infrastructures, providing a useful guide
    in selecting the most suitable protocols based on their identified DQ requirements
    inherent in their specific V2I use-case, such as traffic light managements requiring
    XMPP protocol to communicate traffic light information to upcoming traffic simultaneously,
    the application of MQTT to timely update the availability of parking space in
    a smart parking scenario, the use WebSocket to continually communicate real-time
    traffic information and the use of SCTP to support vehicle infotainments by reliable
    streaming multimedia data. In addition, software developers can also leverage
    this mapping when designing IoT applications, as observed in [104], providing
    them with a detailed understanding of how different protocols may impact their
    application’s performance. Another useful application is that this research can
    provide a support framework for policy formation and standardisation when setting
    guidelines for IoT protocol development and deployments, ensuring that protocols
    are optimised for the IoT paradigm’s diverse and evolving communication demands.
    In a broader sense, this research can stimulate networking communication innovations
    to support V2I communication ecosystems by providing a clear understanding of
    the strengths and weaknesses of various IoT protocols, which could lead to more
    robust and efficient V2I systems, enhancing safety, improving traffic management,
    and ultimately paving the way for fully autonomous driving systems. Refer to Table
    3 for the mapping of DQ dimensions against the various protocols. Table 3. Dimensions
    of DQ against IoT protocols. 6.2. Data Quality Acting as a Complement of Quality
    of Service It is worth noting that this mapping has shown an overlap between DQ
    and QoS with a shared objective of enhancing the performance of networked applications
    and services. These two concepts have shared attributes such as accuracy, availability,
    completeness, reliability, and timeliness [105]. QoS focuses on managing network
    traffic efficiency, resource allocation, and error handling to satisfy expected
    performance for various applications and use cases. Most Application layer protocols
    investigated in this study support QoS with the exception of HTTP REST, XMPP,
    and WebSocket, while at the Transport layer, TCP and SCTP support QoS, and the
    Internet layer supports QoS mechanism by default with the help of Ipv6. However,
    while QoS levels supported at these layers may be sufficient for specific IoT
    applications and use cases, the existing QoS levels and specific configurations
    need further investigation to satisfy the communication standards required in
    some V2I use cases. The focal point of DQ, on the other hand, is “content suitability”,
    which encompasses the assurance that data transmitted via various protocols aligns
    with the expected standards necessary for reliable decision-making processes and
    applications. Within the context of data transmission in IP-based communication
    using the IoT protocol stack, the intersection of QoS and DQ is evident, as mentioned
    earlier. QoS mechanisms available in various layers of the IoT protocol stack,
    depending on the type of protocol deployed, play a pivotal role in maintaining
    and managing the data flow and ensuring end-to-end delivery while supporting various
    DQ dimensions. For instance, prioritisation mechanisms [106,107] enable the delivery
    of time-critical data with high accuracy, meeting accuracy and timeliness dimensions,
    while retransmission mechanisms ensure reliability. The interfacing of these two
    concepts will collectively bolster efficiency and reliability in IP-based V2I
    communications. 6.3. Discussion CoAP and MQTT protocols notably distinguish themselves
    within this multifaceted landscape, largely owing to their broad research base
    and wide deployments. From our in-depth analysis, both protocols satisfactorily
    address five of our specified ten dimensions, including Availability, Completeness,
    Consistency, Data Integrity, and Reliability. The successful adherence to these
    critical DQ dimensions has effectively positioned CoAP and MQTT as the predominant
    protocols in the application layer for V2I communication scenarios. However, their
    prevalence is not a testament that they are the ultimate solution. Rather, it
    indicates the efficacy of these protocols at their domiciled layer. They possess
    a unique characteristic that is beneficial to V2I systems. Nonetheless, acknowledging
    that they can fulfil only five of the ten dimensions effectively either due to
    their design, leveraging the capabilities of their associated transport protocol,
    or other mechanisms infer the importance of employing a variety of other methodologies,
    e.g., cross-layer approach [108,109] to compensate for other dimensions. For example,
    the reliability of data is one of the most coveted dimensions in IoT communications
    and is predominantly supported by layers underneath the application layer, the
    path layers (network and transport layer), and the link layers (data link and
    physical layer) [110]. Protocols such as MQTT and CoAP effectively support reliability
    due to mechanisms present in the protocols [111]. This is a testament to the heterogeneous
    and complex nature of V2I communication, which necessitates a versatile mix of
    protocols for optimal performance. In the transport layer, TCP has always been
    a dominant force. The inherent characteristics of reliability, guaranteed packet
    delivery, and error-checking ensure relevance, which has earned the trust of numerous
    developers. UDP, on the other hand, offers an effortless ‘fire and forget’ transmission
    model which excels in availability due to its connectionless nature and timeliness,
    making it a suitable choice for use cases like Emergency Vehicle Pre-emption [85]
    where low overhead and latency are prioritised. In addition, DCCP mirrors UDP’s
    connectionless architecture but further augments it with a built-in congestion
    control mechanism, making it a promising candidate for streaming media feeds.
    Paralleling the features of UDP, the QUIC protocol offers superior performance
    under various metrics TCP is known for [112], making it a viable choice for a
    plethora of V2I applications. Leveraging the strengths of both TCP and UDP, SCTP
    uniquely combines these traditional protocols to create a distinctive transport
    layer solution. The efficacy of SCTP among its peers in addressing five of our
    DQ dimensions is largely attributed to its inherent multipath, multi-homing, and
    multi-streaming capabilities [113], which can significantly enhance the reliability,
    efficiency, and robustness of V2I communications. The multipath capabilities ensure
    uninterrupted data flow between V2I nodes, even under challenging network conditions.
    This feature is particularly important for real-time traffic management, enabling
    smooth data transmission. The multi-homing feature allows vehicles to maintain
    a sustained connection with multiple infrastructures simultaneously, increasing
    reliability. This is especially beneficial for safety-critical applications like
    collision detection and avoidance. Finally, the multi-streaming capability can
    enable the transfer of diverse data types in separate streams, enhancing data
    delivery efficiency. This capability can significantly improve the performance
    of use cases that involve the exchange of a variety of data, such as traffic information,
    vehicle telemetry, and multimedia data. V2I communications necessitate high availability
    and timely and reliable packet delivery, even under challenging network conditions.
    These are key characteristics the transport layer protocols should effectively
    support that are beneficial to the numerous use cases and are particularly beneficial
    to smart traffic signal coordination [114,115]. Finally, as earlier discussed
    in Section 3, 6LoWPAN is specifically designed to enable IPv6 packets to be transmitted
    while RPL provides routing functionalities for IPv6 packets over constrained networks.
    These protocols underscore their critical role in maintaining robust V2I communication
    by satisfying three critical DQ dimensions: availability, confidentiality and
    reliability. 7. Conclusions Despite the unique capabilities of the various protocols
    within our tri-layered study, there exists a gap in the traceability and validity
    dimensions. Addressing these gaps would involve incorporating additional methodologies,
    such as logging and monitoring systems, data validation rules and implementing
    anomaly detection techniques. Furthermore, adopting a cross-layer fusion approach
    by leveraging the synergy between protocols and layers, such as network conditions
    from the Internet layer, can enhance validity checks in the application layer.
    While all these approaches can potentially improve DQ across all layers, they
    could also lead to potential violations of the existing layered architecture principles.
    Thus, these strategies might introduce trade-offs, such as increased computational
    overhead or system complexity. Hence, achieving an optimal balance between DQ,
    security, system performance and efficiency in a protocol fusion approach is a
    compelling future research direction. Author Contributions Conceptualisation,
    D.S. and K.A.; methodology, D.S.; validation, D.S., K.A., and R.S.; formal analysis,
    D.S.; investigation, D.S.; resources, D.S.; data curation, D.S.; writing—original
    draft preparation, D.S.; writing—review and editing, D.S., K.A., and R.S.; supervision,
    R.S. and K.A. All authors have read and agreed to the published version of the
    manuscript. Funding This research received no external funding. Data Availability
    Statement Not applicable. Conflicts of Interest All authors have declared no conflict
    of interest. Abbreviations 3G Third Generation 4G Fourth Generation 6LowPAN Pv6
    over Low-Power Wireless Personal Area Networks ACK Acknowledgement AMQP Advanced
    Message Queuing Protocol C-ITS Cooperative Intelligent Transportation System C-V2X
    Cellular Vehicle-to-Everything CoAP Constrained Application Protocol DCCP Datagram
    Congestion Control Protocol DDS Data Distribution Service DNS Domain Name Server
    DQ Data Quality DSRC Dedicated Short-range Communication FTP File Transfer Protocol
    GNSS Global Navigation Satellite System. HTTP Hypertext transfer protocol IETF
    Internet Engineering Task Force IoT Internet of things IP Internet Protocol IPv4
    Internet Protocol version 4 IPv6 Internet Protocol version 6 LLNs Low-Power and
    Lossy Networks M2M Machine-to-Machine MANET Mobile Ad Hoc Network ModQUIC Modified
    Quick UDP Internet Connections MQTT Message Queuing Telemetry Transport MQTT-SN
    Message Queuing Telemetry Transport-Sensor Network PDR Packet Delivery Ratio PSNR
    Peak Signal-to-Noise Ratio QoS Quality of services QUIC Quick UDP Internet Connections
    REST Representational State Transfer REST Representational State Transfer RPL
    Routing Protocol for Low-Power and Lossy Networks RTT Round Trip Time SCTP Stream
    Control Transmission Protocol SMTP Simple Mail Transfer Protocol STD Spatial-Temporal
    Data TCP Transmission Control Protocol TCP/IP Transmission Control Protocol/Internet
    Protocol TFRC TCP-Friendly Rate Control UDP User Datagram Protocol V2I Vehicle-to-Infrastructure
    V2V Vehicles-to-Vehicles V2X Vehicle-to-Everything VANET Vehicular Ad Hoc Network
    XMPP Extensible Messaging and Presence Protocol References Ashton, K. That ‘internet
    of things’ thing. RFID J. 2009, 22, 97–114. [Google Scholar] Li, S.; Xu, L.D.;
    Zhao, S. The internet of things: A survey. Inf. Syst. Front. 2015, 17, 243–259.
    [Google Scholar] [CrossRef] Sunyaev, A. The internet of things. In Internet Computing;
    Springer: Cham, Switzerland, 2020; pp. 301–337. [Google Scholar] Sagiroglu, S.;
    Sinanc, D. Big data: A review. In Proceedings of the 2013 International Conference
    on Collaboration Technologies and Systems (CTS), San Diego, CA, USA, 20–24 May
    2013; pp. 42–47. [Google Scholar] Liu, C.; Nitschke, P.; Williams, S.P.; Zowghi,
    D. Data quality and the Internet of Things. Computing 2020, 102, 573–599. [Google
    Scholar] [CrossRef] Karkouch, A.; Mousannif, H.; Al Moatassime, H.; Noel, T. Data
    quality in internet of things: A state-of-the-art survey. J. Netw. Comput. Appl.
    2016, 73, 57–81. [Google Scholar] [CrossRef] Chauhan, S.; Agarwal, N.; Kar, A.K.
    Addressing big data challenges in smart cities: A systematic literature review.
    Info 2016, 18, 73–90. [Google Scholar] [CrossRef] Tanenbaum, A.S. Network protocols.
    ACM Comput. Surv. 1981, 13, 453–489. [Google Scholar] [CrossRef] Shang, W.; Yu,
    Y.; Droms, R.; Zhang, L. Challenges in IoT Networking via TCP/IP Architecture.
    NDN Project. 2016. Available online: https://named-data.net/wp-content/uploads/2016/02/ndn-0038-1-challenges-iot.pdf
    (accessed on 14 April 2023). Forouzan, B.A. TCP/IP Protocol Suite; McGraw-Hill
    Higher Education: Chicago, IL, USA, 2002. [Google Scholar] Shojafar, M.; Cordeschi,
    N.; Baccarelli, E. Energy-efficient adaptive resource management for real-time
    vehicular cloud services. IEEE Trans. Cloud Comput. 2016, 7, 196–209. [Google
    Scholar] [CrossRef] Sharma, C.; Gondhi, N.K. Communication protocol stack for
    constrained IoT systems. In Proceedings of the 2018 3rd International Conference
    on Internet of Things: Smart Innovation and Usages (IoT-SIU), Bhimtal, India,
    23–24 February 2018; pp. 1–6. [Google Scholar] Chand, H.V.; Karthikeyan, J. Survey
    on the role of IoT in intelligent transportation system. Indones. J. Electr. Eng.
    Comput. Sci. 2018, 11, 936–941. [Google Scholar] [CrossRef] Arena, F.; Pau, G.
    An overview of vehicular communications. Future Internet 2019, 11, 27. [Google
    Scholar] [CrossRef] Peng, H.; Liang, L.; Shen, X.; Li, G.Y. Vehicular communications:
    A network layer perspective. IEEE Trans. Veh. Technol. 2018, 68, 1064–1078. [Google
    Scholar] [CrossRef] Malik, R.Q.; Ramli, K.N.; Kareem, Z.H.; Habelalmatee, M.I.;
    Abbas, H. A Review on Vehicle-to-Infrastructure Communication System: Requirement
    and Applications. In Proceedings of the 2020 3rd International Conference on Engineering
    Technology and Its Applications (IICETA), Najaf, Iraq, 6–7 September 2020; pp.
    159–163. [Google Scholar] Ndashimye, E.; Ray, S.K.; Sarkar, N.I.; Gutiérrez, J.A.
    Vehicle-to-infrastructure communication over multi-tier heterogeneous networks:
    A survey. Comput. Netw. 2017, 112, 144–166. [Google Scholar] [CrossRef] Li, Y.
    An overview of the DSRC/WAVE technology. In Quality, Reliability, Security and
    Robustness in Heterogeneous Networks, Proceedings of the 7th International Conference
    on Heterogeneous Networking for Quality, Reliability, Security and Robustness,
    QShine 2010, and Dedicated Short Range Communications Workshop, DSRC 2010, Houston,
    TX, USA, 17–19 November 2010; Revised Selected Papers 7; Springer: Berlin/Heidelberg,
    Germany, 2012; pp. 544–558. [Google Scholar] Wang, X.; Mao, S.; Gong, M.X. An
    overview of 3GPP cellular vehicle-to-everything standards. GetMobile: Mob. Comput.
    Commun. 2017, 21, 19–25. [Google Scholar] [CrossRef] Ansari, K. Joint use of DSRC
    and C-V2X for V2X communications in the 5.9 GHz ITS band. IET Intell. Transp.
    Syst. 2021, 15, 213–224. [Google Scholar] [CrossRef] Wagh, T.; Bagrecha, R.; Salunke,
    S.; Shedge, S.; Lomte, V. A survey on vehicle to vehicle communication. In Computational
    Methods and Data Engineering: Proceedings of ICMDE 2020; Springer: Singapore,
    2020; Volume 2, pp. 163–175. [Google Scholar] Ganeshkumar, N.; Kumar, S. Obu (on-board
    unit) wireless devices in vanet (s) for effective communication—A review. In Computational
    Methods and Data Engineering: Proceedings of ICMDE; Springer: Singapore, 2020;
    Volume 2, pp. 191–202. [Google Scholar] Wang, R.Y.; Strong, D.M. Beyond accuracy:
    What data quality means to data consumers. J. Manag. Inf. Syst. 1996, 12, 5–33.
    [Google Scholar] [CrossRef] Shih, C.S.; Chou, J.J.; Reijers, N.; Kuo, T.W. Designing
    CPS/IoT applications for smart buildings and cities. IET Cyber-Phys. Syst. Theory
    Appl. 2016, 1, 3–12. [Google Scholar] [CrossRef] Perez-Castillo, R.; Carretero,
    A.G.; Rodriguez, M.; Caballero, I.; Piattini, M.; Mate, A.; Kim, S.; Lee, D. Data
    quality best practices in IoT environments. In Proceedings of the 2018 11th International
    Conference on the Quality of Information and Communications Technology (QUATIC),
    Coimbra, Portugal, 4–7 September 2018; pp. 272–275. [Google Scholar] Alwan, A.A.;
    Ciupala, M.A.; Brimicombe, A.J.; Ghorashi, S.A.; Baravalle, A.; Falcarin, P. Data
    quality challenges in large-scale cyber-physical systems: A systematic review.
    Inf. Syst. 2022, 105, 101951. [Google Scholar] [CrossRef] Kapil, G.; Agrawal,
    A.; Khan, R.A. A study of big data characteristics. In Proceedings of the 2016
    International Conference on Communication and Electronics Systems (ICCES), Coimbatore,
    India, 21–22 October 2016; pp. 1–4. [Google Scholar] Sun, Z.; Strang, K.; Li,
    R. Big data with ten big characteristics. In Proceedings of the 2nd International
    Conference on Big Data Research, Weihai, China, 27–29 October 2018; pp. 56–61.
    [Google Scholar] Rehrl, K.; Gröchenig, S. Evaluating localization accuracy of
    automated driving systems. Sensors 2021, 21, 5855. [Google Scholar] [CrossRef]
    [PubMed] Szántó, M.; Hidalgo, C.; González, L.; Pérez, J.; Asua, E.; Vajta, L.
    Trajectory Planning of Automated Vehicles Using Real-Time Map Updates. IEEE Access
    2023, 11, 67468–67481. [Google Scholar] [CrossRef] Bhatti, F.; Shah, M.A.; Maple,
    C.; Islam, S.U. A novel internet of things-enabled accident detection and reporting
    system for smart city environments. Sensors 2019, 19, 2071. [Google Scholar] [CrossRef]
    Issa, S.; Adekunle, O.; Hamdi, F.; Cherfi, S.S.S.; Dumontier, M.; Zaveri, A. Knowledge
    graph completeness: A systematic literature review. IEEE Access 2021, 9, 31322–31339.
    [Google Scholar] [CrossRef] Kaneyasu, H.; Nobayashi, D.; Tsukamoto, K.; Ikenaga,
    T.; Lee, M. Data completeness-aware transmission control for large spatio-temporal
    data retention. In Proceedings of the 2022 IEEE International Conference on Consumer
    Electronics (ICCE), Las Vegas, NV, USA, 7–9 January 2022; pp. 1–5. [Google Scholar]
    Bhalaji, D.N. Reliable data transmission with heightened confidentiality and integrity
    in IOT empowered mobile networks. J. IoT Soc. Mob. Anal. Cloud 2020, 2, 106–117.
    [Google Scholar] Liu, M.; Wang, Y.; Li, H.; Jing, Y.; Zhang, G.; He, W. Analyzing
    V2I Channel and Spatial Consistency through Simulation. In Proceedings of the
    2021 7th International Conference on Computer and Communications (ICCC), Chengdu,
    China, 10–13 December 2021; pp. 453–458. [Google Scholar] Zadorozhny, V.; Krishnamurthy,
    P.; Abdelhakim, M.; Pelechrinis, K.; Xu, J. Data credence in iot: Vision and challenges.
    In Open Journal of Internet of Things (OJIOT), v. 3, N. 1, 114-126, 2017. Special
    Issue: Proceedings of the International Workshop on Very Large Internet of Things
    (VLIoT 2017) in Conjunction with the VLDB 2017 Conference; Research online Publishing:
    Lübeck, Germany, 2017; Volume 3, pp. 114–126. [Google Scholar] Gopinath, S.; Vinoth
    Kumar, K.; Jaya Sankar, T. Secure location aware routing protocol with authentication
    for data integrity. Cluster Comput. 2019, 22 (Suppl. 6), 13609–13618. [Google
    Scholar] [CrossRef] Kafi, M.A.; Othman, J.B.; Badache, N. A survey on reliability
    protocols in wireless sensor networks. ACM Comput. Surv. 2017, 50, 1–47. [Google
    Scholar] [CrossRef] Franco, A.; Landfeldt, B.; Körner, U.; Nyberg, C. Statistical
    guarantee of timeliness in networks of IoT devices. Telecommun. Syst. 2022, 80,
    487–496. [Google Scholar] [CrossRef] Lomotey, R.K.; Pry, J.C.; Chai, C. Traceability
    and visual analytics for the Internet-of-Things (IoT) architecture. World Wide
    Web 2018, 21, 7–32. [Google Scholar] [CrossRef] Corallo, A.; Paiano, R.; Guido,
    A.L.; Pandurino, A.; Latino, M.E.; Menegoli, M. Intelligent monitoring Internet
    of Things based system for agri-food value chain traceability and transparency:
    A framework proposed. In Proceedings of the 2018 IEEE Workshop on Environmental,
    Energy, and Structural Monitoring Systems (EESMS), Salerno, Italy, 21–22 June
    2018; pp. 1–6. [Google Scholar] Zheng, D.; Jing, C.; Guo, R.; Gao, S.; Wang, L.
    A traceable blockchain-based access authentication system with privacy preservation
    in VANETs. IEEE Access 2019, 7, 117716–117726. [Google Scholar] [CrossRef] Qi,
    J.; Gao, T. A privacy-preserving authentication and pseudonym revocation scheme
    for VANETs. IEEE Access 2020, 8, 177693–177707. [Google Scholar] [CrossRef] Pandey,
    R.D.; Snigdh, I. Validity as a Measure of Data Quality in Internet of Things Systems.
    Wirel. Pers. Commun. 2022, 126, 933–948. [Google Scholar] [CrossRef] Hussain,
    R.; Bouk, S.H.; Javaid, N.; Khan, A.M.; Lee, J. Realization of VANET-based cloud
    services through named data networking. IEEE Commun. Mag. 2018, 56, 168–175. [Google
    Scholar] [CrossRef] Al-Omaisi, H.; Sundararajan, E.A.; Alsaqour, R.; Abdullah,
    N.F.; Abdelhaq, M. A survey of data dissemination schemes in vehicular named data
    networking. Veh. Commun. 2021, 30, 100353. [Google Scholar] [CrossRef] Priyadarshi,
    D.; Behura, A. Analysis of different iot protocols for heterogeneous devices and
    cloud platform. In Proceedings of the 2018 International Conference on Communication
    and Signal Processing (ICCSP), Chennai, India, 3–5 April 2018; pp. 0868–0872.
    [Google Scholar] Alani, M.M. Tcp/ip model. In Guide to OSI and TCP/IP Models;
    Springer: Cham, Switzerland, 2014; pp. 19–50. [Google Scholar] Kumar, S. A Review
    on Client-Server based applications and research opportunity. Int. J. Recent Sci.
    Res. 2019, 10, 33857–33862. [Google Scholar] Dizdarević, J.; Carpio, F.; Jukan,
    A.; Masip-Bruin, X. A survey of communication protocols for internet of things
    and related challenges of fog and cloud computing integration. ACM Comput. Surv.
    2019, 51, 1–29. [Google Scholar] [CrossRef] Shelby, Z.; Hartke, K.; Bormann, C.
    The constrained application protocol (CoAP) (No. rfc7252). 2014. Available online:
    https://www.rfc-editor.org/rfc/rfc7252 (accessed on 29 April 2023). Chun, S.M.;
    Park, J.T. Mobile CoAP for IoT mobility management. In Proceedings of the 2015
    12th Annual IEEE Consumer Communications and Networking Conference (CCNC), Las
    Vegas, NV, USA, 9–12 January 2015; pp. 283–289. [Google Scholar] Mishra, B.; Kertesz,
    A. The use of MQTT in M2M and IoT systems: A survey. IEEE Access 2020, 8, 201071–201086.
    [Google Scholar] [CrossRef] Hussein, M.; Galal, A.I.; Abd-Elrahman, E.; Zorkany,
    M. Internet of things (IoT) platform for multi-topic messaging. Energies 2020,
    13, 3346. [Google Scholar] [CrossRef] Kaushik, S.; Poonia, R.C.; Khatri, S.K.
    Comparative study of various protocols of DDS. J. Stat. Manag. Syst. 2017, 20,
    647–658. [Google Scholar] [CrossRef] Bendel, S.; Springer, T.; Schuster, D.; Schill,
    A.; Ackermann, R.; Ameling, M. A service infrastructure for the Internet of Things
    based on XMPP. In Proceedings of the 2013 IEEE International Conference on Pervasive
    Computing and Communications Workshops (PERCOM Workshops), San Diego, CA, USA,
    18–22 March 2013; pp. 385–388. [Google Scholar] Wang, H.; Xiong, D.; Wang, P.;
    Liu, Y. A lightweight XMPP publish/subscribe scheme for resource-constrained IoT
    devices. IEEE Access 2017, 5, 16393–16405. [Google Scholar] [CrossRef] Hayes,
    M.; Omar, T. End to end vanet/iot communications a 5g smart cities case study
    approach. In Proceedings of the 2019 IEEE International Symposium on Technologies
    for Homeland Security (HST), Woburn, MA, USA, 5–6 November 2019; pp. 1–5. [Google
    Scholar] Kramer, J. Advanced message queuing protocol (AMQP). Linux J. 2009, 2009,
    3. [Google Scholar] Bhimani, P.; Panchal, G. Message delivery guarantee and status
    update of clients based on IOT-AMQP. In Intelligent Communication and Computational
    Technologies: Proceedings of Internet of Things for Technological Development;
    IoT4TD 2017; Springer: Singapore, 2018; pp. 15–22. [Google Scholar] Tilkov, S.
    A brief introduction to REST. InfoQ, December 2007, 10. Available online: https://www.espinosa-oviedo.com/web-programming/files/readings/A-Brief-Introduction-to-REST.pdf
    (accessed on 31 April 2023). Hireche, S.; Dennai, A.; Kadri, B. Toward a Novel
    RESTFUL Big Data-Based Urban Traffic Incident Data Web Service for Connected Vehicles.
    Comput. J. 2023. [Google Scholar] [CrossRef] Bayılmış, C.; Ebleme, M.A.; Çavuşoğlu,
    Ü.; Küçük, K.; Sevin, A. A survey on communication protocols and performance evaluations
    for Internet of Things. Digit. Commun. Netw. 2022, 8, 1094–1104. [Google Scholar]
    [CrossRef] Soewito, B.; Gunawan, F.E.; Kusuma, I.G.P. Websocket to support real
    time smart home applications. Procedia Comput. Sci. 2019, 157, 560–566. [Google
    Scholar] [CrossRef] Mitrović, N.; Ðorđević, M.; Veljković, S.; Danković, D. Implementation
    of WebSockets in ESP32 based IoT Systems. In Proceedings of the 2021 15th International
    Conference on Advanced Technologies, Systems and Services in Telecommunications
    (TELSIKS), Nis, Serbia, 20–22 October 2021; pp. 261–264. [Google Scholar] Rahman,
    M.R.; Akhter, S. Real time bi-directional traffic management support system with
    gps and websocket. In Proceedings of the 2015 IEEE International Conference on
    Computer and Information Technology; Ubiquitous Computing and Communications;
    Dependable, Autonomic and Secure Computing; Pervasive Intelligence and Computing,
    Liverpool, UK, 26–28 October 2015; pp. 959–964. [Google Scholar] Ong, L.; Yoakum,
    J. An Introduction to the Stream Control Transmission Protocol (SCTP) (No. rfc3286).
    2002. Available online: https://www.rfc-editor.org/rfc/rfc3286.html (accessed
    on 31 April 2023). Kohler, E.; Handley, M.; Floyd, S. Datagram Congestion Control
    Protocol (DCCP) (No. rfc4340). 2006. Available online: https://www.rfc-editor.org/rfc/rfc4340.html
    (accessed on 31 April 2023). Iyengar, J.; Thomson, M. QUIC: A UDP-based multiplexed
    and secure transport. In RFC 9000; IETF 2021; Available online: https://datatracker.ietf.org/doc/html/rfc9000
    (accessed on 31 April 2023). Abdelsalam, A.; Luglio, M.; Roseti, C.; Zampognaro,
    F. TCP wave: A new reliable transport approach for future internet. Comput. Netw.
    2017, 112, 122–143. [Google Scholar] [CrossRef] Al-Saadi, R.; Armitage, G.; But,
    J.; Branch, P. A survey of delay-based and hybrid TCP congestion control algorithms.
    IEEE Commun. Surv. Tutor. 2019, 21, 3609–3638. [Google Scholar] [CrossRef] Stewart,
    R.; Metz, C. SCTP: New transport protocol for TCP/IP. IEEE Internet Comput. 2001,
    5, 64–69. [Google Scholar] [CrossRef] Eklund, J. Latency Reduction for Soft Real-Time
    Traffic Using SCTP Multihoming. Ph.D. Thesis, Karlstad University Press, Karlstad,
    Sweden, 2016. [Google Scholar] Langley, A.; Riddoch, A.; Wilk, A.; Vicente, A.;
    Krasic, C.; Zhang, D.; Yang, F.; Kouranov, F.; Swett, I.; Iyengar, J.; et al.
    The quic transport protocol: Design and internet-scale deployment. In Proceedings
    of the Conference of the ACM Special Interest Group on Data Communication, Los
    Angeles, CA, USA, 21–25 August 2017; pp. 183–196. [Google Scholar] Megyesi, P.;
    Krämer, Z.; Molnár, S. How quick is QUIC? In Proceedings of the 2016 IEEE International
    Conference on Communications (ICC), Kuala Lumpur, Malaysia, 22–27 May 2016; pp.
    1–6. [Google Scholar] Babatunde, O.; Al-Debagy, O. A comparative review of internet
    protocol version 4 (ipv4) and internet protocol version 6 (ipv6). arXiv 2014,
    arXiv:1407.2717. [Google Scholar] Olsson, J. 6LoWPAN demystified. Tex. Instrum.
    2014, 13, 1–13. [Google Scholar] Tömösközi, M.; Reisslein, M.; Fitzek, F.H. Packet
    header compression: A principle-based survey of standards and recent research
    studies. IEEE Commun. Surv. Tutor. 2022, 24, 698–740. [Google Scholar] [CrossRef]
    Winter, T.; Thubert, P.; Brandt, A.; Hui, J.; Kelsey, R.; Levis, P.; Pister, K.;
    Struik, R.; Vasseur, J.P.; Alexander, R. RPL: IPv6 Routing Protocol for Low-Power
    and Lossy Networks (No. rfc6550). 2012. Available online: https://www.rfc-editor.org/rfc/rfc6550.html
    (accessed on 5 May 2023). Almusaylim, Z.A.; Alhumam, A.; Jhanjhi, N.Z. Proposing
    a secure RPL based internet of things routing protocol: A review. Ad Hoc Netw.
    2020, 101, 102096. [Google Scholar] [CrossRef] Al-Masri, E.; Kalyanam, K.R.; Batts,
    J.; Kim, J.; Singh, S.; Vo, T.; Yan, C. Investigating messaging protocols for
    the Internet of Things (IoT). IEEE Access 2020, 8, 94880–94911. [Google Scholar]
    [CrossRef] Mijovic, S.; Shehu, E.; Buratti, C. Comparing application layer protocols
    for the Internet of Things via experimentation. In Proceedings of the 2016 IEEE
    2nd International Forum on Research and Technologies for Society and Industry
    Leveraging a Better Tomorrow (RTSI), Bologna, Italy, 7–9 September 2016; pp. 1–5.
    [Google Scholar] Tandale, U.; Momin, B.; Seetharam, D.P. An empirical study of
    application layer protocols for IoT. In Proceedings of the 2017 International
    Conference on Energy, Communication, Data Analytics and Soft Computing (ICECDS),
    Chennai, India, 1–2 August 2017; pp. 2447–2451. [Google Scholar] Bansal, M. Performance
    Comparison of MQTT and CoAP Protocols in Different Simulation Environments. Inven.
    Commun. Comput. Technol. 2021, 2017, 549–560. [Google Scholar] Safaei, B.; Monazzah,
    A.M.H.; Bafroei, M.B.; Ejlali, A. Reliability side-effects in Internet of Things
    application layer protocols. In Proceedings of the 2017 2nd International Conference
    on System Reliability and Safety (ICSRS), Milan, Italy, 20–22 December 2017; pp.
    207–212. [Google Scholar] Babovic, Z.B.; Protic, J.; Milutinovic, V. Web performance
    evaluation for internet of things applications. IEEE Access 2016, 4, 6974–6992.
    [Google Scholar] [CrossRef] Kayal, P.; Perros, H. A comparison of IoT application
    layer protocols through a smart parking implementation. In Proceedings of the
    2017 20th Conference on Innovations in Clouds, Internet and Networks (ICIN), Paris,
    France, 7–9 March 2017; pp. 331–336. [Google Scholar] Ghotbou, A.; Khansari, M.
    Comparing application layer protocols for video transmission in IoT low power
    lossy networks: An analytic comparison. Wirel. Netw. 2021, 27, 269–283. [Google
    Scholar] [CrossRef] Chaudhary, A.; Peddoju, S.K.; Kadarla, K. Study of internet-of-things
    messaging protocols used for exchanging data with external sources. In Proceedings
    of the 2017 IEEE 14th International Conference on Mobile Ad Hoc and Sensor Systems
    (MASS), Orlando, FL, USA, 22–25 October 2017; pp. 666–671. [Google Scholar] Gupta,
    P. A Survey of Application Layer Protocols for Internet of Things. In Proceedings
    of the 2021 International Conference on Communication information and Computing
    Technology (ICCICT), Mumbai, India, 25–27 June 2021; pp. 1–6. [Google Scholar]
    Al-Qassab, R.A.; Aal-Nouman, M.I. Performance Evaluation of CoAP and MQTT_SN Protocols.
    In Proceedings of the International Conference on Emerging Technology Trends in
    Internet of Things and Computing, Erbil, Iraq, 6–8 June 2021; Springer International
    Publishing: Cham, Switzerland, 2021; pp. 223–236. [Google Scholar] Polese, M.;
    Chiariotti, F.; Bonetto, E.; Rigotto, F.; Zanella, A.; Zorzi, M. A survey on recent
    advances in transport layer protocols. IEEE Commun. Surv. Tutor. 2019, 21, 3584–3608.
    [Google Scholar] [CrossRef] AL-Dhief, F.T.; Sabri, N.; Latiff, N.A.; Malik, N.N.N.A.;
    Abbas, M.; Albader, A.; Mohammed, M.A.; AL-Haddad, R.N.; Salman, Y.D.; Khanapi,
    M.; et al. Performance comparison between TCP and UDP protocols in different simulation
    scenarios. Int. J. Eng. Technol. 2018, 7, 172–176. [Google Scholar] Wheeb, A.H.
    Performance evaluation of UDP, DCCP, SCTP and TFRC for different traffic flow
    in wired networks. Int. J. Electr. Comput. Eng. 2017, 7, 3552. [Google Scholar]
    [CrossRef] Sahraoui, Y.; Ghanam, A.; Zaidi, S.; Bitam, S.; Mellouk, A. Performance
    evaluation of TCP and UDP-based video streaming in vehicular ad-hoc networks.
    In Proceedings of the 2018 International Conference on Smart Communications in
    Network Technologies (SaCoNeT), El Oued, Algeria, 27–31 October 2018; pp. 67–72.
    [Google Scholar] Park, J.S.; Koh, S.J. Performance Comparison of SCTP and TCP
    over Linux Platform. J. Korean Inst. Commun. Inf. Sci. 2008, 33, 699–706. [Google
    Scholar] Kharat, P.; Kulkarni, M. Modified QUIC protocol for improved network
    performance and comparison with QUIC and TCP. Int. J. Internet Protoc. Technol.
    2019, 12, 35–43. [Google Scholar] [CrossRef] Patel, U.; Chhatbar, J.; Shah, V.
    Comparitive study on ipv4 and ipv6 internet protocol. Int. J. Adv. Eng. Res. Dev.
    2014, 1, 58–62. [Google Scholar] Sandur, A.; Giri, A. Performance Analysis of
    the merged 6L0WPAN-CoAP and RPL-CoAP with different combination of MAC and RDC
    layer protocols. In Proceedings of the 2022 IEEE 2nd Mysore Sub Section International
    Conference (MysuruCon), Mysuru, India, 16–17 October 2022; pp. 1–6. [Google Scholar]
    Mahmud, A.; Hossain, F.; Juhin, F.; Choity, T.A. Merging the communication protocols
    6LoWPAN-CoAP and RPL-CoAP: Simulation and performance analysis using Cooja simulator.
    In Proceedings of the 2019 1st International Conference on Advances in Science,
    Engineering and Robotics Technology (ICASERT), Dhaka, Bangladesh, 3–5 May 2019;
    pp. 1–6. [Google Scholar] Sobin, C.C. A survey on architecture, protocols and
    challenges in IoT. Wirel. Pers. Commun. 2020, 112, 1383–1429. [Google Scholar]
    [CrossRef] Pohl, M.; Kubela, J.; Bosse, S.; Turowski, K. Performance evaluation
    of application layer protocols for the internet-of-things. In Proceedings of the
    2018 Sixth International Conference on Enterprise Systems (ES), Limassol, Cyprus,
    1–2 October 2018; pp. 180–187. [Google Scholar] Bilal, M.; Munir, E.U.; Ullah,
    A. BEMD: Beacon-oriented Emergency Message Dissemination scheme for highways.
    Ad Hoc Netw. 2023, 142, 103095. [Google Scholar] [CrossRef] Callebaut, G.; Leenders,
    G.; Van Mulders, J.; Ottoy, G.; De Strycker, L.; Van der Perre, L. The art of
    designing remote iot devices—Technologies and strategies for a long battery life.
    Sensors 2021, 21, 913. [Google Scholar] [CrossRef] Resner, D.; de Araujo, G.M.;
    Fröhlich, A.A. Design and implementation of a cross-layer IoT protocol. Sci. Comput.
    Program. 2018, 165, 24–37. [Google Scholar] [CrossRef] Singh, M.; Baranwal, G.
    Quality of service (qos) in internet of things. In Proceedings of the 2018 3rd
    International Conference on Internet of Things: Smart Innovation and Usages (IoT-SIU),
    Bhimtal, India, 23–24 February 2018; pp. 1–6. [Google Scholar] Beshley, M.; Kryvinska,
    N.; Seliuchenko, M.; Beshley, H.; Shakshuki, E.M.; Yasar, A.U.H. End-to-End QoS
    “smart queue” management algorithms and traffic prioritization mechanisms for
    narrow-band internet of things services in 4G/5G networks. Sensors 2020, 20, 2324.
    [Google Scholar] [CrossRef] Jung, C. Prioritized Data Transmission Mechanism for
    IoT. KSII Trans. Internet Inf. Syst. 2020, 14, 1–21. [Google Scholar] Tandon,
    A.; Srivastava, P. Location based secure energy efficient cross layer routing
    protocols for IOT enabling technologies. Int. J. Innov. Technol. Explor. Eng.
    (IJITEE) 2019, 8, 368–374. [Google Scholar] Jiang, S. On reliable data transfer
    in underwater acoustic networks: A survey from networking perspective. IEEE Commun.
    Surv. Tutor. 2018, 20, 1036–1055. [Google Scholar] [CrossRef] Kamble, S.J.; Kounte,
    M.R. A Survey on Emergency Vehicle Preemption Methods Based on Routing and Scheduling.
    Int. J. Comput. Netw. Appl. 2022, 9, 60–71. [Google Scholar] [CrossRef] Dey, N.;
    Neha, N.; Hariprasad, M.; Sandhya, S.; Moharir, M.; Akram, M. A Detail Survey
    on QUIC and its Impact on Network Data Transmission. In Proceedings of the 2022
    6th International Conference on Trends in Electronics and Informatics (ICOEI),
    Tirunelveli, India, 28–30 April 2022; pp. 378–385. [Google Scholar] Eklund, J.;
    Grinnemo, K.J.; Brunstrom, A. Using multiple paths in SCTP to reduce latency for
    signaling traffic. Compute. Commun. 2018, 129, 184–196. [Google Scholar] [CrossRef]
    Guo, Q.; Li, L.; Ban, X.J. Urban traffic signal control with connected and automated
    vehicles: A survey. Transp. Res. Part C Emerg. Technol. 2019, 101, 313–334. [Google
    Scholar] [CrossRef] Lee, W.H.; Chiu, C.Y. Design and implementation of a smart
    traffic signal control system for smart city applications. Sensors 2020, 20, 508.
    [Google Scholar] [CrossRef]                  Disclaimer/Publisher’s Note: The
    statements, opinions and data contained in all publications are solely those of
    the individual author(s) and contributor(s) and not of MDPI and/or the editor(s).
    MDPI and/or the editor(s) disclaim responsibility for any injury to people or
    property resulting from any ideas, methods, instructions or products referred
    to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Suleman, D.; Shibl, R.; Ansari, K. Investigation
    of Data Quality Assurance across IoT Protocol Stack for V2I Interactions. Smart
    Cities 2023, 6, 2680-2705. https://doi.org/10.3390/smartcities6050121 AMA Style
    Suleman D, Shibl R, Ansari K. Investigation of Data Quality Assurance across IoT
    Protocol Stack for V2I Interactions. Smart Cities. 2023; 6(5):2680-2705. https://doi.org/10.3390/smartcities6050121
    Chicago/Turabian Style Suleman, Danladi, Rania Shibl, and Keyvan Ansari. 2023.
    \"Investigation of Data Quality Assurance across IoT Protocol Stack for V2I Interactions\"
    Smart Cities 6, no. 5: 2680-2705. https://doi.org/10.3390/smartcities6050121 Article
    Metrics Citations Crossref   1 Scopus   1 Google Scholar   [click to view] Article
    Access Statistics Article access statistics Article Views 28. Dec 7. Jan 17. Jan
    27. Jan 6. Feb 16. Feb 26. Feb 7. Mar 17. Mar 0 500 1000 1500 2000 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Smart Cities, EISSN 2624-6511, Published by MDPI RSS
    Content Alert Further Information Article Processing Charges Pay an Invoice Open
    Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For
    Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Smart Cities
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Investigation of Data Quality Assurance across IoT Protocol Stack for V2I
    Interactions
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Yang S.R.
  - Lin Y.C.
  - Lin P.
  - Fang Y.
  citation_count: '0'
  description: Recently, several Internet of Things (IoT) service platforms have been
    proposed to facilitate IoT application deployment. These platforms typically utilize
    the lightweight MQTT or CoAP application protocol, optimized for massive IoT applications.
    Unfortunately, these protocols are not suitable for the emerging, more sophisticated
    Artificial Intelligence of Things (AIoT). Session initiation protocol (SIP), in
    contrast, is a signaling and controlling protocol for real-time multimedia sessions,
    and has been viewed as a better candidate to provide a full range support of different
    broadband, critical, and industrial AIoT applications. However, there exists no
    generic SIP-based AIoT service platform that supports creations and operations
    of heterogeneous AIoT applications with various quality of service. This article
    presents the first SIP-based AIoT service platform, AIoTtalk, that enables rapid
    development of scalar and multimedia AIoT applications. Moreover, we deploy an
    experimental testbed and two real SIP-based AIoT applications to demonstrate the
    applicability and the performance of our AIoTtalk under both the cloud and edge
    scenarios. The experimental results show that, together with accurate model predictions
    and edge-virtualization auto scaling, AIoTtalk guarantees low latency and high
    quality of experience for messaging and streaming-based AIoT applications.
  doi: 10.1109/JIOT.2023.3265674
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 10 Issue: 16 AIoTtalk: A SIP-Based Service Platform for Heterogeneous
    Artificial Intelligence of Things Applications Publisher: IEEE Cite This PDF Shun-Ren
    Yang; Yi-Chun Lin; Phone Lin; Yuguang Fang All Authors 426 Full Text Views Abstract
    Document Sections I. Introduction II. Related Work III. Overview of IoTtalk IV.
    Problem Definition and Service Architecture V. Design and Implementation of the
    AIoTtalk Server Show Full Outline Authors Figures References Keywords Metrics
    Footnotes Abstract: Recently, several Internet of Things (IoT) service platforms
    have been proposed to facilitate IoT application deployment. These platforms typically
    utilize the lightweight MQTT or CoAP application protocol, optimized for massive
    IoT applications. Unfortunately, these protocols are not suitable for the emerging,
    more sophisticated Artificial Intelligence of Things (AIoT). Session initiation
    protocol (SIP), in contrast, is a signaling and controlling protocol for real-time
    multimedia sessions, and has been viewed as a better candidate to provide a full
    range support of different broadband, critical, and industrial AIoT applications.
    However, there exists no generic SIP-based AIoT service platform that supports
    creations and operations of heterogeneous AIoT applications with various quality
    of service. This article presents the first SIP-based AIoT service platform, AIoTtalk,
    that enables rapid development of scalar and multimedia AIoT applications. Moreover,
    we deploy an experimental testbed and two real SIP-based AIoT applications to
    demonstrate the applicability and the performance of our AIoTtalk under both the
    cloud and edge scenarios. The experimental results show that, together with accurate
    model predictions and edge-virtualization auto scaling, AIoTtalk guarantees low
    latency and high quality of experience for messaging and streaming-based AIoT
    applications. Published in: IEEE Internet of Things Journal ( Volume: 10, Issue:
    16, 15 August 2023) Page(s): 14167 - 14181 Date of Publication: 10 April 2023
    ISSN Information: DOI: 10.1109/JIOT.2023.3265674 Publisher: IEEE Funding Agency:
    SECTION I. Introduction Internet of Things (IoT) represents a connected world
    of a multitude of physical and virtual “things,” capable of sensing and communications.
    Recently, with the advancement of 5G networking, artificial intelligence (AI),
    and big data analytics, the ever-emerging paradigm of AI of Things (AIoT) further
    allows IoT systems/applications to analyze, learn, and react to external IoT devices
    more promptly and intelligently. In a typical IoT network architecture, an IoT
    service platform in the cloud provides all fundamental functionalities for IoT
    applications, such as data storage, device management, and application execution.
    In the past few years, several generic [1], [2], [3], [4], [5], [6], [7] and customized
    [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19] IoT service
    platforms have been proposed to facilitate IoT application deployment. Such IoT
    service platforms utilize IoT application protocols to communicate with IoT devices.
    Widely adopted IoT application protocols range from the early high-overhead HTTP
    to the more recent lightweight MQTT [20] and CoAP [21] protocols. Indeed, MQTT
    and CoAP are suitable for massive IoT applications, which require small data volumes
    and extreme coverage for a large number of low-cost and narrow-bandwidth devices,
    operating mostly based on the short instant messaging semantic. Unfortunately,
    the aforementioned protocols are not suitable for the emerging, more advanced
    IoT applications that are mainly multimedia streaming oriented: 1) broadband IoT
    applications, which require high data rate and large data volumes; 2) critical
    IoT applications, which demand ultrareliable data delivery and ultralow latency;
    and 3) industrial IoT applications for automation, which demand the integration
    of mobile connectivity with wired industrial networking infrastructures for advanced
    industrial automation [22]. The session initiation protocol (SIP), in contrast,
    is a protocol used for signaling and control for real-time multimedia sessions
    within voice, video, and messaging applications. Besides instant messaging for
    one-shot small messages, SIP can also handle the long session semantic for streaming
    data and the publish-subscribe semantic for event notifications. Thus, to provide
    a full range of support for various and more sophisticated IoT application scenarios,
    SIP can be a better choice. Moreover, SIP has been a key protocol in the IP multimedia
    subsystem (IMS) within the 4G LTE/5G NR core networks. More details of the SIP
    procedures will be given and explained in Section V-B. Different SIP semantics
    have been utilized to implement different IoT applications/systems [23], [24],
    [25], [26]. For example, the short instant messaging semantic has been applied
    to smart home automation [23], and the long session and publish-subscribe semantics
    have been utilized to realize a SIP-based IoT emergency system [25]. However,
    to the best of our knowledge, there exists no generic SIP-based AIoT service platform
    that integrates relevant capabilities for application developers to flexibly develop/deploy
    heterogeneous AIoT applications that demand diversified Quality of Service (QoS).
    Furthermore, none of the previously proposed SIP-based IoT systems can readily
    support creations and operations of AIoT applications. This article aims to implement
    an SIP-based AIoT service platform, AIoTtalk, which leverages and enhances IoTtalk
    [6], a generic IoT application management platform, by equipping it with the SIP
    signaling capability and with security guarantee. The main contributions of this
    article are summarized as follows. We propose an SIP-based AIoT service architecture,
    based on which we design and implement our AIoT service platform, namely, AIoTtalk,
    that enables rapid development of heterogeneous (scalar or multimedia) IoT, particularly
    AIoT, applications. We establish a real-world testbed under both the cloud and
    edge scenarios, and deploy two real SIP-based AIoT applications, “real-time short-term
    road traffic prediction” and “neighborhood violence detection,” within AIoTtalk,
    to validate the applicability of our AIoTtalk service platform. We conduct extensive
    experiments using this testbed and the two real SIP-based AIoT applications to
    investigate the performance of our AIoTtalk. This work is extended from our VTC2021-Spring
    conference paper [27] with the following new features: 1) a thorough related-work
    survey; 2) the enhanced service architecture to support multimedia IoT/AIoT applications;
    3) the enhanced SIP msg handler to process multimedia streaming data; 4) a hybrid
    blockchain architecture that allows privacy preservation and public accountability;
    5) AI devices for AIoT applications; 6) enhanced testbed and experiment results;
    and 7) an intensive future-research discussion. SECTION II. Related Work This
    Section reviews the existing IoT service platforms, which can be classified into
    HTTP/MQTT/CoAP-based and SIP-based according to their adopted application protocols.
    Finally, we provide a critical analysis. A. HTTP/MQTT/CoAP-Based IoT Service Platforms
    We classify these IoT service platforms into generic and customized. 1) Generic
    IoT Service Platforms: Generic IoT service platforms can be further divided into
    two sub-categories: Open-Source Platforms: OpenMTC [1] and FIWARE [2] are two
    well-referenced open-source IoT platforms. In OpenMTC, the core features and connectivity
    of the front-end and the back-end implement the functionality for message exchanges
    between devices and the middleware, providing the core logic of the platform.
    On the other hand, FIWARE is an improved OpenStack-based cloud, in which the IoT
    edge includes the IoT gateway to establish and manage the communications between
    the devices and the IoT back-end. Proprietary Platforms: Amazon Web Services (AWS)
    IoT [3] and Microsoft IoT Core [4] are cloud-based IoT platforms, designed to
    connect IoT devices to AWS and Azure cloud platforms, respectively, enabling quick
    development, management, and scaling. In [5], by applying the social IoT concept,
    a cloud-based IoT platform, Lysis, has been proposed, supporting the establishment
    of social relationships among objects in an autonomous manner. In [6], IoTtalk,
    a Python-based IoT management platform, is designed to allow users to define or
    reuse input/output device features (DFs) and create heterogeneous IoT applications
    via a user-friendly Web-based graphical user interface (GUI). In [7], TinyLink
    has been presented, following a top-down approach to IoT applications’ hardware/software
    design, where unified APIs allow to specify the interactions with the underlying
    hardware components. 2) Customized IoT Service Platforms: Customized IoT service
    platforms can be further divided into four sub-categories: Smart Health: In [8],
    iHome Health-IoT, an intelligent home-based platform, has been implemented, which
    operates a medicine box, pharmaceutical packaging, and a wearable bio-medical
    sensor device. Pathinarupothi et al. [9] have presented an IoT-based smart edge
    system for remote health monitoring, employing two novel software engines to process
    wearable vital sensors’ data: 1) rapid active summarization for effective prognosis
    and 2) criticality measure index alerts. In [10], a configurable and adaptable
    platform is designed for comprehensive healthcare parameter monitoring. Via a
    flexible IoT gateway, this platform can establish bidirectional communications
    between end users and medics in real time. Smart City: In [11], an IoT software
    infrastructure has been presented, enabling energy management and new control
    policy simulation in a city district. Santos et al. [12] have developed PortoLivingLab,
    an urban scale, multisource sensing infrastructure, exploiting IoT-inspired data
    collection strategies to facilitate sharing and joint analysis for the characterization
    of urban dynamics. Cirillo et al. [13] have offered methodologies to minimize
    the costs of developing new smart city solutions while maximizing component reusability,
    aiming at forming a live technical community of smart city application creators.
    Smart Home: In [14], a fog computing platform has been proposed to manage energy
    consumption with the customized control-as-services, and minimize the implementation
    cost and time-to-market simultaneously. In [15], an IoT energy management system
    has been presented for smart homes, which applies off-the-shelf business intelligence
    and big data analytics software packages to better manage energy consumption and
    satisfy consumer demands. In [16], a self-learning home management system is given,
    which integrates home energy, demand side, and supply side management subsystems
    for a smart home’s real time operation. Smart Industry: Under the project “Enabling
    Business-Based IoT and Services,” Khaleel et al. [17] have developed an IoT platform
    and the related prototypes, where IoT middleware is deployed to support seamless
    integration of involved heterogeneous components. Kwon et al. [18] have introduced
    the concepts of IoT-based prognostics and systems health management, an enabling
    discipline that utilizes sensors to assess system health, diagnoses anomalous
    behavior, and forecasts the remaining useful asset performance. Wang et al. [19]
    have reported the first effort on the design of an industrial IoT process control
    system, seamlessly integrating HART and WirelessHART network infrastructure with
    hardware/software components of cellular IoT architecture. B. SIP-Based IoT Service
    Platforms Since there exist no SIP-based IoT service platforms, we survey SIP-based
    frameworks and systems for IoT applications, instead. Garroppo et al. [23] have
    proposed an SIP-based domotics framework. This framework applies an SIP-based
    home gateway (SHG), which addresses the compatibility with the SIP infrastructure
    and enables a user to control domotics devices via an SIP client. Andriopoulou
    et al. [24] have proposed the IoTA framework, which supports bidirectional communication
    sessions between healthcare providers and end users and exploits intelligent algorithms
    to detect emergency events from various devices. The work in [25] has proposed
    SEEK, an SIP-based embedded framework for emergency situations, consisting of
    body sensors and a haptic device and enabling embedded devices to initiate calls
    to emergency centers and support IP-based real time monitoring for elderly and
    disabled people. In [26], an IoT-based healthcare system based on Next Generation
    Network IMS has been presented. Via SIP calls and messages, the proposed system
    can automatically send real-time data for patients and/or alerts to doctors and
    place calls for ambulance. C. Critical Literature Analysis Table I provides a
    critical analysis on the literature reviewed in this section. In particular: 1)
    all the generic platforms in [1], [2], [3], [4], [5], [6], and [7] operate mainly
    based on MQTT and CoAP, and cannot flexibly support the development of more sophisticated
    AIoT applications; 2) each of the customized platforms in [8], [9], [10], [11],
    [12], [13], [14], [15], [16], [17], [18], and [19] is aimed at a specific area
    and cannot be readily applied to the development of other fields of AIoT applications,
    exhibiting distinct characteristics; and 3) similarly, the SIP-based frameworks
    and systems in [23], [24], [25], and [26] are limited to unique applications,
    and cannot serve as generic AIoT service platforms. However, recent popular AIoT
    use cases, such as video surveillance (broadband IoT), autonomous and connected
    vehicles (critical IoT), and manufacturing (industrial IoT), all heavily rely
    on multimedia sensing/visioning manipulation. Such AIoT applications motivate
    us to develop SIP-based generic service platforms that can support real-time multimedia
    streaming capability via SIP. TABLE I Critical Literature Analysis SECTION III.
    Overview of IoTtalk In this section, we present a brief overview of IoTtalk [6].
    IoTtalk is an IoT service platform that allows application developers to deploy
    and manage IoT applications easily. In the network domain, IoTtalk operates an
    IoTtalk server [see Fig. 1 (A)], which establishes and maintains relationships
    among IoT devices to realize IoT applications. The IoTtalk server consists of
    three components: 1) the IoTtalk Engine [see Fig. 1 (1)]; 2) the GUI [see Fig.
    1 (2)]; and 3) the Database [DB; see Fig. 1 (3)]. The IoTtalk engine classifies
    IoT devices with their features, executes the service logic of each IoT application,
    and maintains all related data in the DB. The GUI provides a Web-based user interface,
    via which application developers can instruct the IoTtalk engine to set up the
    desired interactions between input and output IoT devices. Fig. 1. IoTtalk architecture.
    Show All In the device domain, input IoT devices, like sensors [see Fig. 1 (B)],
    collect sensing data, while output IoT devices, like actuators [see Fig. 1 (C)],
    turn actuating results into actions. A sensor and an actuator can “interact” with
    each other to operate their IoT applications as follows: 1) the sensor executes
    its sensor/actuator application (SA) to compute the input sensing data and transmit
    the data to the IoTtalk engine and 2) the IoTtalk engine translates the sensing
    data to the actuating result, which will be received by the SA in the actuator,
    triggering the corresponding actions. Note that the communication between the
    SA (in the sensor/actuator) and the IoTtalk engine is achieved via the associated
    device application (DA), which can handle the HTTP-based RESTful APIs [see Fig.
    1 (D)]. Inside the IoTtalk engine, IoT devices are managed in the form of “DFs,”
    which are specific input or output “capabilities” of IoT devices, e.g., “Temperature”
    and “Display.” In fact, the IoTtalk engine realizes the interactions between the
    SAs of two IoT devices through their input DFs (IDFs) and output DFs (ODFs). When
    the IDFs of the input IoT device produce new values, these values are transmitted
    to the IoTtalk engine, where the corresponding (automatically constructed) network
    application [NA; see Fig. 1 (4)] is executed to produce results on the ODFs of
    the output IoT device. SECTION IV. Problem Definition and Service Architecture
    A. Problem Definition Our problem can be divided into the following two parts.
    1) Service Architecture: We should first design a service architecture that can
    flexibly support heterogeneous AIoT application operations based on the SIP signaling
    and IoTtalk. This architecture should meet: Requirement 1: supporting both scalar
    and multimedia sensing/actuating operations via SIP messaging and session semantics,
    respectively; Requirement 2: allowing to define/manipulate AI models in the same
    way as regular sensing/actuating nodes. 2) Service Platform: Then, we should provide
    a detailed realization for our service platform, AIoTtalk, the key enabler of
    our IoT service architecture. This service platform should meet the following
    requirements. Requirement 1: Handling SIP signaling. Requirement 2: Providing
    QoS (e.g., security). Requirement 3: Leveraging IoTtalk’s “service switching”
    functionality. B. AIoTtalk Service Architecture Our AIoTtalk is closely related
    to IoTtalk. In this section, we first discuss its SIP-based IoT service architecture.
    In the next two sections, we will then give the design and implementation details
    of each relevant network entity. As shown in Fig. 2, a set of sensing user agents
    (S-UAs) [see Fig. 2 (A)] interact with another set of actuating user agents (A-UAs)
    [see Fig. 2 (B)] via SIP signaling over the SIP network [see Fig. 2 (C)], where
    the service logics of the IoT applications are hosted and executed in an application
    environment supported by the AIoTtalk server and the IoTtalk server [see Fig.
    2 (D)]. In what follows, we explain the operations of this service model from
    the perspectives of the client and the server, respectively. Fig. 2. SIP-based
    IoT service architecture. Show All 1) S-UAs/A-UAs: In our proposed AIoTtalk IoT
    service architecture, an S-UA $ x contains K (s) $,x scalar IoT input devices
    (SIoT IDs) I (s) x,1 ∼ I (s) x, K (s) $,x and K (m) $,x multimedia IoT input devices
    (MIoT IDs) I (m) x,1 ∼ I (m) x, K (m) $,x , while an A-UA A y contains K (s) A,y
    scalar IoT output devices (SIoT ODs) O (s) y,1 ∼ O (s) y, K (s) A,y and K (m)
    A,y multimedia IoT output devices (MIoT ODs) O (m) y,1 ∼ O (m) y, K (m) A,y .
    Note that the scalar devices here mean that they only manage scalar content (i.e.,
    of the data type of integer, floating point or character). Moreover, an S-UA/A-UA
    can involve in several IoT applications, under each of which a group of IoT IDs
    [ $ x , I (u) x,p ] ’s (where u can be s or m ) can currently interact with another
    group of IoT ODs [ A y , O (v) y,q ] ’s (where v can be s or m ). Below, we will
    use two examples to demonstrate our design. Road Traffic Prediction: For road
    traffic monitoring, each road side unit (RSU) (as an S-UA) in a Section of a big
    city can control a large number of roadside vehicle speed sensors (i.e., as IDs)
    on neighboring road segments and periodically retrieve the sensed speed data.
    These past and current speed data from all the RSUs of the city Section can then
    be “transformed” into a short-term estimated speed over each road segment of the
    city section, which will be displayed on the electronic map (i.e., as an OD) of
    each involved vehicle (as an A-UA) for further usage. Neighborhood Violence Detection:
    A neighborhood violence detection application can conduct audio analytics to constantly
    and automatically monitor the neighborhood environment. Specifically, a smart
    home automation safety system (as an S-UA) deployed at each home of a neighborhood
    can continuously collect the data of its audio sensors (i.e., as IDs) within its
    home environment. Such audio sensor data from each home can then be jointly “transformed”
    into an alert notification to the emergency services (i.e., as ODs) of the surrounding
    police departments (as A-UAs) of the neighborhood for probable reactions. Under
    such group-oriented IoT application scenarios, each S-UA (involving in several
    applications with different A-UAs) periodically formulates an SIP message, encapsulating
    its IDs’ sensing data that should be mapped to the corresponding ODs scattered
    over several involved A-UAs. These sensing SIP messages from numerous S-UAs will
    then be passed to and translated by the AIoTtalk server (collaborating with the
    IoTtalk server according to the service logics, which can be further based on/enhanced
    by AI-model predictions) into actuating SIP messages, each of which is destined
    to an A-UA to trigger the corresponding reactions of individual ODs. All the above
    SIP message transmissions are handled by the underlying network of SIP proxies.
    2) AIoTtalk Server: this IoT service architecture, leveraging the IoTtalk framework,
    the AIoTtalk server provides an environment to execute the service logics of the
    SIP-based IoT applications and manage the involved S-UAs/A-UAs together with their
    IDs/ODs. Technically speaking, from the viewpoint of IoTtalk, the AIoTtalk server
    is essentially an IoTtalk device, which is also equipped with SIP UA functionalities
    for SIP message handling. Following the IoTtalk service model, the AIoTtalk server,
    as an IoTtalk device, implements SA and DA functionalities to handle respective
    tasks. First, in order to support group-oriented IoT application scenarios, the
    SA functionality of the AIoTtalk server allows the developer of a specific application
    to define its input device group (IDG) and output device group (ODG) in the AIoTtalk
    server, and formulate, deploy and execute the service logic of the IoT application
    as an NA in the IoTtalk server (see Section III). Then, the DA functionality of
    the AIoTtalk server will automatically create a DA for this specified application
    (via AIoTtalk SA). Sharing this DA in AIoTtalk, the IDG and ODG of the application
    can connect to their corresponding NA in the IoTtalk, playing the roles of an
    input and an output devices, respectively. That is, through the DA, the IDG and
    ODG can interoperate by periodically updating their IDF/ODF, which are actually
    mapped by the join connection of the respective NA in the IoTtalk engine. The
    AIoTtalk server internally maintains a service table which records the IDG, the
    ODG, and the associated DA that jointly realize each IoT application. Acting as
    an SIP UA, the AIoTtalk server receives and handle those sensing SIP messages
    from the S-UAs. Whenever it receives a sensing SIP message from an S-UA, via the
    service table, it finds the applications in which each enclosed ID is involved,
    and triggers the IoTtalk server to run the service logic of each of these applications
    with the ID’s data (as the input parameter) to obtain the new values of the mapped
    ODs. On the other hand, the AIoTtalk server will also periodically transmit an
    actuating SIP message to each A-UA, enclosing the latest values of the A-UA’s
    ODs. This actuating SIP message can then launch the reaction of each referred
    OD, accomplishing a complete interaction between the two parties of the corresponding
    IoT application. Our AIoTtalk service architecture further supports AIoT applications,
    where, instead of the direct interaction between each pair of IDG and ODG, the
    IDG ID data (maybe via some transformation) are first passed to an (online/offline)
    AI model (residing at the server side) for prediction, whose results (again, maybe
    via some transformation) are then delivered to the ODG ODs, finally triggering
    the desired actions. In our AIoTtalk, such an AIoT application is realized via
    a pair of IoTtalk NAs as follows. The first IoTtalk NA relays the sensing data
    obtained from the IDG (as an IoTtalk input device) to the associated AI model
    (as an IoTtalk output device), which takes the sensing data as its input parameters
    to perform the prediction. Subsequently, the second IoTtalk NA updates the predicted
    actuating results of the AI model (as another IoTtalk input device) back to the
    ODG (as an IoTtalk output device), finishing a complete interaction of the AIoT
    application. SECTION V. Design and Implementation of the AIoTtalk Server As explained
    in Section IV-B, our AIoTtalk service model operates based on the close interactions
    among the AIoTtalk server, AI models, and the IoTtalk server. In particular, as
    illustrated in Fig. 3, the AIoTtalk server and AI models are treated as IoTtalk
    devices, referred to as “AIoTtalk device” [see Fig. 3 (I)] and “AI devices” [see
    Fig. 3 (II)], respectively, exploiting the IoTtalk server’s capability of “service
    switching” between IDFs/ODFs [see Fig. 3 (III)]. In what follows, we will elaborate
    the detailed designs and implementations of the AIoTtalk device and the AI devices,
    respectively. Fig. 3. System architecture of AIoTtalk. Show All A. Software Architecture
    of the AIoTtalk Device The AIoTtalk device implements its own SA and DA functionalities
    to, respectively: 1) offer an application environment to manage those deployed
    SIP-based IoT applications and their IDGs/ODGs and 2) map the IDG/ODG of each
    application to its corresponding NA in the IoTtalk engine. Following such functional
    splitting, the AIoTtalk device is composed of two main software components: 1)
    a single AIoTtalk SA and 2) multiple IoTtalk DAs (one for each application). To
    achieve the assigned goals, the AIoTtalk SA, the core of the AIoTtalk device,
    further consists of four software modules: 1) the AIoTtalk GUI [see Fig. 3 (A)];
    2) the AIoTtalk DB [see Fig. 3 (B)]; 3) the SIP msg handler [see Fig. 3 (C)];
    and 4) the blockchain handler [see Fig. 3 (D)]. On the other hand, each IoTtalk
    DA software module is allocated by the DA manager software module [see Fig. 3
    (E)] to handle the communication between its associated SIP-based IoT application
    and the IoTtalk engine in the IoTtalk server, via HTTP-based RESTful APIs. Please
    note that blockchains are leveraged to function as shared, encrypted/immutable
    open DBs in our AIoTtalk to implement identity authentication/data protection
    for our AIoTtalk’s security guarantee. Next, we will introduce the functionalities
    of these six modules, respectively. 1) AIoTtalk GUI and DB: The Web-based AIoTtalk
    GUI, incorporating a user event handler: 1) handles the AIoTtalk device’s own
    SIP account settings and 2) allows application developers to create new IoT applications.
    For the SIP account settings, it will pass the configuration to the SIP msg handler
    to register the AIoTtalk device’s SIP account to an SIP proxy. For an IoT application
    creation, it allows the application developer to select the corresponding IDs/ODs
    within different S-UAs/A-UAs into an IDG/an ODG with the associated sensing data
    type/actuating result type to join the realization of the IoT application. Note
    that the service logic of the IoT application should be implemented as an NA in
    the IoTtalk server (see Section V-D). For this, the DA manager will be requested
    to allocate a DA to handle this newly created IoT application’s communication
    with its NA in IoTtalk. Afterwards, the account configuration and application
    information will be stored in the AIoTtalk DB. In particular, the AIoTtalk DB
    maintains a service table, which records the triplet (IDG, ODG, DA) for each SIP-based
    IoT application. 2) DA Manager and IoTtalk DAs: Whenever an SIP-based IoT application
    is developed via the AIoTtalk GUI, the DA manager will be instructed to construct
    an IoTtalk DA for registering the application’s IDG/ODG to the IoTtalk engine,
    establishing connections between the IDG/ODG and their involved NA (see the description
    in the AIoTtalk GUI) in the IoTtalk engine. After the registration, the IDG and
    ODG can participate in the IoT application deployed on the IoTtalk server. 3)
    SIP Msg Handler: The SIP msg handler copes with the SIP signaling for: 1) the
    AIoTtalk device’s registration to the serving SIP proxy as an SIP UA, in accordance
    with the SIP account configuration from the AIoTtalk GUI and 2) the messaging
    and streaming between the AIoTtalk device and the S-UAs/A-UAs for both the scalar
    and multimedia IoT applications. Note that the SIP msg handler can pass the SIP
    messages to the blockchain handler for security-related manipulations (if activated).
    The operation of the SIP msg handler will be further discussed in Section V-B.
    4) Blockchain Handler: The blockchain handler applies the blockchain and the smart
    contract mechanisms to support identity authentication and guarantee data confidentiality
    between the S-UAs/A-UAs and the AIoTtalk device. In particular, we implement a
    hybrid blockchain architecture, integrating private and public blockchains, that
    allows privacy preservation and public accountability simultaneously. The operation
    of the blockchain handler will be further discussed in Section V-C. B. Operation
    of SIP Msg Handler To perform its main tasks, the SIP msg handler launches three
    threads: 1) the account thread registers the AIoTtalk device to the serving SIP
    proxy; 2) the message thread deals with SIP messaging; and 3) the session thread
    handles SIP streaming. Note that we enhance the class definitions of the SIP SIMPLE
    client SDK [28] developed by AG Projects, including AccountManager, SIPMessageApplication,
    and SIPSessionApplication, to implement these three threads as follows. 1) Account
    Thread: To register the AIoTtalk device as a SIP UA, the account thread initially
    creates an object of AccountManager to manage the SIP account of the AIoTtalk
    device. Then, whenever the account thread receives an account configuration request,
    it will store the new configuration and register the SIP account to the desired
    SIP proxy, following the SIP registration procedure in Fig. 4(a). Fig. 4. SIP
    procedures handled by the SIP msg handler. (a) SIP registration procedure. (b)
    SIP messaging procedure. (c) SIP streaming procedure. Show All 2) Message Thread:
    Following the SIP messaging procedure in Fig. 4(b), the message thread creates
    an object of SIPMessageApplication to handle SIP MESSAGEs from/to S-UAs/A-UAs.
    For the case of S-UAs, the received SIP MESSAGEs are first stored in the message
    queue, from which the message thread parses each MESSAGE and extracts the enclosed
    sensing data in the FIFO order. Afterwards, via the involved applications’ associated
    IoTtalk DAs (recorded in the service table in the AIoTtalk DB), each sensing value
    will be transmitted to and used in the IoTtalk NAs to compute new actuating results.
    On the other hand, to periodically send a SIP MESSAGE to an A-UA, containing the
    freshest actuating results from the respective IoTtalk NAs (via the IoTtalk DAs),
    the process is similar, but in the reverse direction. 3) Session Thread: The session
    thread creates an object of SIPSessionApplication to handle the SIP streaming
    procedure from an S-UA to the AIoTtalk device and from the AIoTtalk device to
    an A-UA, which consists of three phases: 1) session establishment; 2) media transfer;
    and 3) session teardown. Fig. 4(c) gives the message flow for the former case.
    Specifically, the AIoTtalk device exercises an INVITE state machine from a session’s
    creation to the session’s termination. Once a session is established from an S-UA
    to the AIoTtalk device, a media stream will be connected between them. Next, the
    sensing media packets from the S-UA can be sequentially transmitted to the IoTtalk
    server, via the AIoTtalk device, for the NAs’ operation. Conversely, the latest
    multimedia actuating results can also be transmitted to an A-UA following such
    a SIP session/media stream manipulation. C. Operation of Blockchain Handler Fig.
    5 illustrates the proposed hybrid blockchain architecture between a network of
    S-UAs/A-UAs and the AIoTtalk device, integrating a private blockchain [see Fig.
    5 (A)] with the public Ethereum blockchain [see Fig. 5 (B)]. Here, the private
    blockchain connects the S-UAs/A-UAs and a set of blockchain proxies [BC-proxies;
    see Fig. 5 (C)], while the public Ethereum blockchain connects the set of BC-proxies
    and the AIoTtalk device. In this architecture, the BC-proxies, in the proximity
    of the S-UAs/A-UAs, are developed to securely relay the SIP signaling/media packets
    between the S-UAs/A-UAs and the AIoTtalk device. Moreover, the BC-proxies jointly
    operate a token ring to prevent the single-point-of-failure (SPOF) problem, where
    the BC-proxy currently holding the token will be assigned to serve the S-UAs/A-UAs.
    On the other hand, the blockchain handler in the AIoTtalk device authenticates
    the S-UAs/A-UAs at the application level and immutably records the handled sensing
    data and actuating results. Fig. 5. Hybrid blockchain architecture. Show All The
    detailed operation of this hybrid blockchain architecture is further explained
    in terms of the following three aspects. 1) Smart Contracts: We design and deploy
    three smart contracts for the proposed hybrid blockchain architecture to enable
    secure communication and transactions’ public accountability. Specifically: 1)
    UAInfoStore [see Fig. 5 (D)], operated by the BC-proxies on the private blockchain,
    stores/logs each S-UA/A-UA’s information, including identity, virtual identity
    (used by diTKStore on Ethereum), processed request/response messages, and security
    key; 2) diTKStore [see Fig. 5 (E)], operated by the blockchain handler on Ethereum,
    stores/logs each S-UA/A-UA’s “de-identified” information, including virtual identity,
    processed transactions, and security key; and 3) PVCMgn [see Fig. 5 (F)] on Ethereum
    manages the security keys of the BC-proxies and the blockchain handler for the
    encryption operations over the private connection pre-established between them.
    Note that for security operations, our architecture needs to establish a shared
    secret for each pair of communicating network entities. For this, we apply the
    Elliptic-curve Diffie–Hellman (ECDH) key agreement protocol, which is based on
    one’s own private key and the other’s public key. The relevant exchanged public
    keys are stored beforehand in the corresponding smart contracts (that is, the
    above-mentioned security keys). 2) Smart Contract Registration: Each S-UA/A-UA
    should first compute its ECDH public–private key pair and send a registration
    request enclosing the public key to the serving BC-proxy and the blockchain handler.
    When the serving BC-proxy receives the registration request, it retrieves the
    S-UA/A-UA’s identity and public key, assigns a virtual identity to this S-UA/A-UA,
    and stores such information together with this registration request itself into
    UAInfoStore. Then, the serving BC-proxy relays the registration request to the
    blockchain handler, where the S-UA/A-UA’s original identity is replaced by the
    mapped virtual identity for privacy preservation in the public Ethereum blockchain.
    In particular, the serving BC-proxy uses its own private key and the blockchain
    handler’s public key, prestored in PVCMgn, to compute a shared secret, which is
    in turn applied to encrypt the registration request utilizing the AES algorithm.
    On the other side, the blockchain handler decrypts the registration request, stores
    the S-UA/A-UA’s virtual identity, transaction information, and public key in diTKStore,
    and sends back a successful registration response to the S-UA/A-UA via the serving
    BC-proxy through symmetric security operations but in reverse order. Note that
    the public keys of the BC-proxies and the blockchain handler will be attached
    in the response back to the S-UA/A-UA. 3) Secure Packet Transmission: The SIP
    signaling/media packet transmissions between an S-UA/A-UA and the AIoTtalk device
    are securely handled by the serving BC-proxy and the blockchain handler (together
    with the three smart contracts) through the encrypted private connection between
    them, the same as the case of the registration request. In addition, authentication
    and packet integrity verification are also performed between the S-UA/A-UA and
    the network side. For example, to send a packet, the S-UA/A-UA should first use
    the BC-proxies’ and the blockchain handler’s public keys (together with its own
    private key) to compute the corresponding shared secrets, which are in turn applied
    to derive the Hash-based message authentication codes (HMACs). The two codes are
    attached in the request to the serving BC-proxy and the blockchain handler, which
    can likewise use their private-exchanged public key pairs to compute the shared
    secrets and then their versions of the HMACs for comparison, thus authenticating
    the S-UA/A-UA and verifying the packet’s integrity. D. Procedure for IoTtalk Network
    Application Implementation and Deployment In our AIoTtalk, the service logic of
    an SIP-based IoT application is actually realized via IoTtalk. To implement and
    deploy such a corresponding application over IoTtalk, based on IoTtalk’s IDF-NA-ODF
    operating philosophy explained in Section III, the application developer should
    typically go through the following steps. Step 1 “IDF/ODF Identification”: First,
    the IDF and ODF of the IoTtalk application can be readily identified and defined,
    corresponding to the IDG’s sensing data type and the ODG’s actuating result type,
    respectively, configured in the AIoTtalk device. Step 2 “IDF/ODF Specification”:
    Via the GUI of the IoTtalk server, the NA with respect to the SIP-based IoT application
    can be automatically created in the IoTtalk engine. Specifically, the developer
    can manually add the identified IDF/ODF for selection by using the GUI to express
    the expected functionalities, corresponding to the sensing data type/actuating
    result type of the IDG/ODG. Also, the developer should create an “input device”
    and an “output device” in the IoTtalk server with respect to the IDG and ODG created
    in the AIoTtalk device and associate them with the IDF and ODF. Then, the “input/output
    devices” together with their IDF/ODF can be selected to be included in the NA.
    Step 3 “IDF/ODF Mapping”: Via the GUI of the IoTtalk server, a “join” connection
    (as a part of the NA hosted in the IoTtalk engine) can be established between
    the newly created IDF and ODF modules. With this join connection, the developer
    can specify (using the GUI) how a new value of the IDF module should be mapped
    to a new result of the ODF module. Step 4 “DA Association”: Note that, in the
    AIoTtalk device, a DA is allocated to handle the communication between the IDG/ODG
    of the SIP-based IoT application and the IoTtalk engine using HTTP-based RESTful
    APIs. With a registration to IoTtalk, this DA can associate the IDG/ODG with the
    corresponding created input/output devices together with their IDF/ODF (see Step
    2) in the IoTtalk engine, and can deal with the subsequent interactions between
    them. SECTION VI. Design and Implementation of AI Devices A. Software Architecture
    of AI Devices An AI device, which also follows the IoTtalk device structure, can
    accommodate and execute a specific AI model implemented and pretrained by its
    developer to achieve the customized data prediction or conversion in an SIP-based
    IoT application. As shown in Fig. 3, within an AI device, the AI SA [see Fig.
    3 (F)] manages and carries out the hosted AI model, which is saved in the hierarchical
    data format 5 (HDF5). Note that HDF5, a truly hierarchical, filesystem-like, portable
    scientific data format, allows to store an AI model’s large amount of data in
    a single file, including the model weights and configuration. Specifically, when
    prepared, the pretrained AI model can then be loaded into the AI SA by using the
    load_model function of the keras.models package, enabling subsequent prediction
    operations. On the other hand, the IoTtalk DA [see Fig. 3 (G)] is responsible
    for acquiring the input parameters and updating the output results of the AI model
    from/to the corresponding IDG/ODG in the AIoTtalk device. B. Two Demonstrative
    AI Devices For demonstration purposes, we provide two built-in AI devices in our
    AIoTtalk service platform, each incorporating a deep-learning neural network model.
    The first one is a long short-term memory (LSTM) model for road speed prediction,
    while the second one is a convolutional neural network (CNN) model for audio recognition.
    These two AI models will be applied in two SIP-based IoT applications, whose details
    will be discussed in Section VII. In the following, we briefly summarize the main
    ideas of the two AI models. 1) LSTM Model for Road Speed Prediction: Broadly speaking,
    LSTM is a kind of recurrent neural networks (RNNs). However, different from the
    Simple-RNN, LSTM has a unique architecture so that the problem of vanishing and
    exploding gradients can be resolved. LSTM has been shown to be good at learning
    long-term dependency information, capable of predicting time series data. As Fig.
    6 illustrates, each LSTM cell at time step t utilizes a forget gate, an input
    gate, and an output gate to calculate its memory cell C t and hidden state h t
    , where the forget gate and the input gate are used to control how to forget the
    information from the previous time step and how to add in the new information,
    while the output gate is used to determine how the updated information of C t
    should be output. Fig. 6. LSTM model. Show All First, in terms of the memory cell
    updating, C t is the weighted sum of C t−1 and the candidate memory cell C ~ t
    , which is derived based on the previous hidden state h t−1 and the current data
    x t . In particular, the LSTM cell uses the output f t of the forget gate and
    the output i t of the input gate as the respective weights, determining how much
    of C t−1 and C ~ t should be kept to get the memory cell C t at time t . Next,
    for the hidden state calculation, the LSTM cell uses the output o t of the output
    gate to decide how much of the memory cell C t should be output as the current
    hidden state h t . We create an AI device in AIoTtalk that employs an LSTM model
    trained for road speed prediction. In this model, we use the twelve average speeds
    per minute in the past twelve minutes of a road segment to predict the average
    speed in the next minute on the road segment. 2) CNN Model for Audio Recognition:
    CNNs have been commonly used in image and audio classification. As shown in Fig.
    7, a CNN model consists of different layers: 1) the convolution layers; 2) the
    pooling layers; 3) the fully connected layers; and 4) the classification layer.
    Typically, prior to entering the CNN model, the data should be preprocessed, including
    cleaning, integration, reduction, and transformation. First, each convolution
    layer uses filters to perform convolution operations on the data to extract the
    features of the data, which are represented as the feature maps. Next, the corresponding
    pooling layer reduces the dimension and the noise of the feature maps while retaining
    their important information. Then, the fully connected layers will flatten the
    pooled feature maps into a 1-D element array. Finally, the classification layer
    will pass the 1-D element array into an activation function to classify the input
    data to one of the possible outcome categories. Fig. 7. CNN model. Show All We
    create our second AI device in AIoTtalk that operates a CNN model trained by Salamon
    and Bello [29], [30] for audio recognition. Specifically, Salamon et al. [31]
    used the UrbanSound8K as the data set, which contains thousands of labeled urban
    sounds from ten classes, to train their CNN model, capable of analyzing ambient
    noises around urban environments. Moreover, this model also applied the data preprocessing
    method in [32] first to transform the audio clips into the segmented spectrograms,
    and describe how to feed them to this CNN model. SECTION VII. AIoTtalk Platform
    Validation: Real Deployment of Two SIP-Based IoT Applications This Section validates
    the applicability of our AIoTtalk1 for heterogeneous IoT application developments
    by deploying two real SIP-based AIoT applications within AIoTtalk. A. Real Testbed
    Establishment As illustrated in Fig. 8, we establish a real testbed consisting
    of several S-UAs/A-UAs, an SIP proxy [see Fig. 8 (A)], our AIoTtalk [including
    the AIoTtalk server [see Fig. 8 (B)] and AI models [see Fig. 8 (D)]], and the
    IoTtalk server [see Fig. 8 (C)], where the SIP proxy is built using the well-referenced
    open-source SIP server software, Asterisk [33], for SIP message/session routing.
    Furthermore, we consider the following two cases for our testbed setup. Fig. 8.
    Testbed setup. Show All Cloud Scenario: In this case, the S-UAs/A-UAs are located
    in National Taiwan University, Taipei City, Taiwan, while the SIP proxy, the AIoTtalk
    service platform, and the IoTtalk server are located in National Tsing Hua University,
    Hsinchu City, Taiwan. The distance between the two universities is around 80.3
    km. Edge Scenario: In this case, all the S-UAs/A-UAs, the SIP proxy, the AIoTtalk
    service platform, and the IoTtalk server are located in National Tsing Hua University,
    Hsinchu City, Taiwan. Note that our AIoTtalk is deployed in our proposed network
    function virtualization (NFV)-based multiaccess edge computing (MEC) platform
    [34]. Moreover, in both scenarios, the SIP proxy, the edge platform, and the IoTtalk
    server are installed within physical machines whose computing equipment is shown
    in Table II. TABLE II Computing Equipment of Different Servers in the Testbed
    More specifically, in this edge platform, following the ETSI NFV framework. Open
    source MANO (OSM) is exploited for the NFV management and orchestration (NFV MANO),
    which manages the resources and lifecycle. OpenStack is exploited for the NFV
    infrastructure (NFVI) and virtualized infrastructure manager (VIM), which provide
    the virtualized resources. The AIoTtalk service platform is packaged into a customized
    VM image via OpenStack, which is then formed as a VNF and deployed into the NFV
    environment by using the OSM VNF onboarding. This edge platform supports auto
    scaling and load balancing for our AIoTtalk. Next, to demonstrate the applicability
    of our AIoTtalk, in the following two sections, we implement and deploy the two
    exemplar AIoT applications “real-time short-term road traffic prediction” and
    “neighborhood violence detection,” which are discussed in Section IV-B.1 and exploit
    SIP messaging and streaming, respectively. Note that for each involved S-UA/A-UA
    in our testbed, we actually launch a respective network program that sends/receives
    the SIP MESSAGEs or establishes the SIP SESSION as required. B. Real-Time Short-Term
    Road Traffic Prediction: Demonstrative AIoT Application Exploiting SIP Messaging
    1) Application Description: As shown in Fig. 8(I), in this application, each RSU
    [see Fig. 8(E)] in a city Section periodically sends an SIP MESSAGE to report
    the sensed speed data of its monitored road segments, collected from the roadside
    vehicle speed sensors, to an LSTM AI model (see Section VI-B.1) in the AIoTtalk
    service platform. This short-term LSTM AI model has been pretrained to forecast
    the vehicle speed over each road segment of the city Section in the next 5 min,
    based on the past and current speed data. Upon receipt of the sensed speed data,
    the LSTM AI model will estimate the desired speed values. Then, these short-term
    estimated speed values can be encapsulated into an SIP MESSAGE, a copy of which
    will be sent to each connected vehicle that will pass through the city Section
    [see Fig. 8 (F)]. Eventually, these speed values will be displayed on these vehicles’
    electronic maps, allowing to improve the drivers’ journey efficiency. Following
    the AIoTtalk service model, this AIoT application is realized via two IoTtalk
    NAs, NA1 and NA2: 1) NA1 relays the sensed speed data from the group of roadside
    vehicle speed sensors (as the input device) to the LSTM AI model (as the output
    device) for prediction and 2) NA2 relays the predicted speed data from the LSTM
    AI model (as the input device) to the group of electronic maps (as the output
    device) of the passing vehicles for display. The operation of this application
    involves the joint collaboration among the AIoTtalk server, the LSTM AI model,
    and the IoTtalk server. In the following, we explain the corresponding settings
    required to implement and deploy this AIoT application within our AIoTtalk. 2)
    AIoTtalk Server Settings: The AIoTtalk server interacts with both: 1) the S-UAs/A-UAs
    and their IDs/ODs and 2) the IoTtalk server, and thus needs the developer to conduct
    the following settings, so as to acquire the related application information.
    Step 1: First, an application, named “RoadTrafficPrediction,” should be created
    in the application management page. Step 2: Next, to interact with the S-UAs/A-UAs
    and their IDs/ODs: the ID type “RoadSensor” and OD type “ElecMap” for this application,
    together with their corresponding sensing data type “SensedSpeed-I” and actuating
    result type “PredictedSpeed-O,” should be defined in the ID/OD management page.
    Step 3: Finally, to interact with the IoTtalk server: the IDG, named “RoadSensorGroup,”
    and the ODG, named “ElecMapGroup,” should be defined for this application in the
    device group management page by selecting the involved RoadSensor IDs with the
    sensing data type SensedSpeed-I into the IDG, and also the involved ElecMap ODs
    with the actuating result type PredictedSpeed-O into the ODG. Note that after
    the above steps, the AIoTtalk server will create a DA for this application to
    register the IDG RoadSensorGroup and ODG ElecMapGroup to the IoTtalk server as
    two IoTtalk devices. 3) AI Model Settings: The LSTM AI model participates in two
    IoTtalk NAs, NA1 and NA2: in NA1, it acts as an output device to receive the sensed
    speed data from the input device, the IDG RoadSensorGroup; in NA2, it acts as
    an input device to transmit the predicted speed data to the output device, the
    ODG ElecMapGroup. To reflect these two roles of the LSTM AI model, in the AI model
    management page, the developer needs to conduct the following settings. Step 1:
    First, to interact with the IoTtalk server: the developer should define the device
    type “AI_LSTM,” which is associated with the actuating result type “SensedSpeed-O”
    for the output device of NA1, and with the sensing data type “PredictedSpeed-I”
    for the input device of NA2. Step 2: Then, the developer should upload the pretrained
    LSTM speed prediction model, which will receive data of type SensedSpeed-O as
    its model input, and compute values of type PredictedSpeed-I as its model output.
    At last, a DA for the pretrained LSTM speed prediction model will be automatically
    created to register this model as an IoTtalk output device and an IoTtalk input
    device for NA1 and NA2, respectively. 4) IoTtalk Server Settings: In the IoTtalk
    server, the developer needs to establish the two NAs, NA1 and NA2, via the following
    settings. Step 1: First, for NA1, the developer should create an input IoTtalk
    device RoadSensorGroup with IDF SensedSpeed-I and an output IoTtalk device AI_LSTM
    with ODF SensedSpeed-O; for NA2, the developer should create an input IoTtalk
    device AI_LSTM with IDF PredictedSpeed-I and an output IoTtalk device ElecMapGroup
    with ODF PredictedSpeed-O. Then, the created IoTtalk devices should be selected
    into NA1 and NA2, respectively. Step 2: Next, for NA1, the IDF SensedSpeed-I should
    be mapped to the ODF SensedSpeed-O to generate a join connection “Join 1,” which
    will pass the sensed speed data from the IDG RoadSensorGroup to the LSTM AI model
    AI_LSTM; for NA2, the IDF PredictedSpeed-I should be mapped to the ODF PredictedSpeed-O
    to generate another join connection “Join 2,” which will update the short-term
    estimated speed values computed by the LSTM AI model AI_LSTM to the ODG ElecMapGroup.
    Then, when the IoTtalk engine receives the registration request from the DA of
    each defined input/output device in the AIoTtalk server or the AI model, it can
    finally associate the input/output device with its counterpart input/output device
    in the IoTtalk server, finishing the construction of the NAs. The screenshot of
    the IoTtalk server settings is shown in Fig. 9. Fig. 9. IoTtalk server settings.
    Show All C. Neighborhood Violence Detection: Demonstrative AIoT Application Exploiting
    SIP Streaming 1) Application Description: As shown in Fig. 8 (II), in this application,
    a smart home automation safety system [see Fig. 8 (G)] will continuously stream
    the data collected from its audio sensor to a CNN AI model (see Section VI-B.2)
    in our AIoTtalk via a SIP SESSION. This CNN AI model has been pretrained to recognize
    any suspicious sound (e.g., gunshot, scream, and siren). Then, a corresponding
    alert notification can be encapsulated into an SIP MESSAGE, a copy of which will
    be destined to the emergency service of each surrounding police department [see
    Fig. 8 (H)] of the neighborhood. This AIoT application is implemented as two IoTtalk
    NAs, NA3 and NA4: 1) NA3 relays the audio sensor data from the group of smart
    home automation safety systems to the CNN AI model for recognition and 2) NA4
    relays the alert notifications from the CNN AI model to the group of surrounding
    police departments. In the following, we will briefly summarize the corresponding
    settings of the AIoTtalk server, the CNN AI model, and the IoTtalk server for
    this application. 2) AIoTtalk Server, AI Model, and IoTtalk Server Settings: The
    AIoTtalk Server Settings: The developer should define the IDG “AudioSensorGroup,”
    and the ODG “EmerServGroup” for the application “NeighborhoodViolenceDetection”
    by selecting the involved “AudioSensor” IDs with the sensing data type “Audio-I”
    into the IDG, and also the involved “EmerServ” ODs with the actuating result type
    “Notification-O” into the ODG. The AI Model Settings: The developer should create
    the device type “AI_CNN,” which is associated with the actuating result type “Audio-O”
    for the output device of NA3 and with the sensing data type “Notification-I” for
    the input device of NA4. The IoTtalk Server Settings: For NA3, a join connection
    “Join 3” is established between the input IoTtalk device AudioSensorGroup with
    IDF Audio-I and the output IoTtalk device “AI_CNN” with ODF Audio-O; for NA4,
    another join connection “Join 4” is established between the input IoTtalk device
    AI_CNN with IDF Notification-I and the output IoTtalk device EmerServGroup with
    ODF Notification-O. SECTION VIII. Performance Evaluation This Section conducts
    experiments to investigate the effects of several input parameters on the AIoTtalk’s
    performance using the real testbed and applications developed in Section VII.
    A. Experiment Settings As illustrated in Fig. 10, our experiments consider six
    relevant events that will occur during each operation cycle of our AIoTtalk. Fig.
    10. Timing diagram for AIoTtalk operation. Show All The Sensing Part: a) at τ
    1 , an S-UA sends a sensing SIP MESSAGE/media packet to the AIoTtalk server; b)
    at τ 2 , the sensing SIP MESSAGE/media packet arrives at the AIoTtalk server;
    c) at τ 3 , according to the sensing data, the AIoTtalk server calls an HTTP-based
    RESTful API to update the IDF of each enclosed ID’s IDG in the IoTtalk server;
    and d) each IDF update will trigger the subsequent execution of the corresponding
    two NAs in the IoTtalk server and one AI model, which will eventually update the
    ODF result back to the mapped ODG in the AIoTtalk server at τ 4 . The Actuating
    Part: e) at τ 5 , the AIoTtalk server sends an actuating SIP MESSAGE/media packet
    to each involved A-UA, reflecting its ODs’ latest actuator statuses and f) finally,
    the actuating SIP MESSAGE/media packet is received by the A-UA at τ 6 . In the
    experiments, N s S-UAs interact with N a A-UAs to operate each of the two demonstrative
    AIoT applications. For each sensing SIP MESSAGE/media packet transmission, we
    record the corresponding τ 1 ∼ τ 6 time points to compute the following delay
    segments. t s,S and t S,a : t s,S = τ 2 − τ 1 and t S,a = τ 6 − τ 5 are the sensing
    and actuating SIP MESSAGE/media packet latencies between the S-UA and the AIoTtalk
    server and between the AIoTtalk server and an involved A-UA, respectively. t (s)
    S and t (a) S : t (s) S is the processing time consumed by the AIoTtalk server
    to extract the sensing data from the sensing SIP MESSAGE/media packet and update
    the data to the IDFs within the IoTtalk server, while t (a) S is that consumed
    by the AIoTtalk server to retrieve and pack relevant actuating results into an
    actuating SIP MESSAGE/media packet, for delivery to an involved A-UA. t iot and
    t m : t iot is the total operation time for the sensing data and actuating result
    transmissions between the IoTtalk server and the AIoTtalk server/the AI model
    (via the HTTP-based RESTful API calls), and for the two IoTtalk NA executions,
    while t m is the AI model processing time. Note that in our experiments, we apply
    the network time protocol (NTP) to synchronize the clocks of the involved network
    entities in the testbed. More specifically, we deploy a central NTP server and
    an NTP client on each entity of the S-UAs, the AIoTtalk server, the IoTtalk server,
    the AI models, and the A-UAs, where these entities will periodically synchronize
    their local times with the local time of the central NTP server, allowing us to
    obtain accurate τ 1 ∼ τ 6 time points. B. Experiment Results In the first three
    parts, we discuss the performance results for the case that our proposed hybrid
    blockchain architecture in Section V-C is not activated. Finally, the last part
    presents the results our security-guaranteeing mechanisms achieve for AIoTtalk.
    1) Delay Segment Measurement: We consider the cloud scenario, where an S-UA sends
    a single sensing SIP MESSAGE/media packet to trigger an AIoTtalk operation cycle
    of the road traffic prediction/neighborhood violence detection application, interoperating
    with an A-UA. Fig. 11(a) and (b) demonstrate the incurred delay segments within
    the two applications, respectively, in this experiment. Fig. 11. Delay segment
    measurement. (a) Road traffic prediction. (b) Neighborhood violence detection.
    Show All Fig. 11 shows that the t s,S delay of the first application’s sensing
    SIP MESSAGE [in Fig. 11(a)] is larger than that of the second application’s RTP
    media packet [in Fig. 11(b)]. This is because the SIP MESSAGE is of length 555
    bytes (with a message body 94 bytes for the sensing data), while the RTP media
    packet is of length 218 bytes (encoded with ITU-T G.711 PCMU). Moreover, the parsing
    times t (s) S of both the sensing SIP MESSAGE and RTP media packet at the AIoTtalk
    server are small and can be neglected. We note that the IoTtalk operation times
    t iot are significant, around 165 and 185 ms for the first and the second applications,
    respectively. The first application leads to a smaller t iot since it has a smaller
    sensing data, 94 bytes. On the other hand, the length of the AI model processing
    time t m highly depends on the application type. In our case, the complicated
    audio recognition in the second application can take a t m as large as 155 ms.
    The t (a) S delay of each of the two applications is taken for the AIoTtalk server
    to activate a process and encapsulate a corresponding actuating SIP MESSAGE, whose
    value is around 55 ms. Finally, the actuating SIP MESSAGEs are of length 502 bytes
    (with a message body 40 bytes) and 685 bytes (with a message body 211 bytes) for
    the first and the second applications, respectively, and thus the t S,a delay
    of the first application is slightly smaller than that of the second application.
    2) Performance of the Road Traffic Prediction Application: Define the mean end-to-end
    delay E[ t E ] as the sum of the mean delay of the sensing part and the mean delay
    of the actuating part within a AIoTtalk operation cycle E[ t E ]= ⎛ ⎝ ⎜ ∑ N (s)
    m j=1 [ t s,S (j)+ t (s) S (j)+ t iot (j)+ t m (j)] N (s) m ⎞ ⎠ ⎟ + ⎛ ⎝ ⎜ ∑ N
    (a) m k=1 [ t (a) S (k)+ t S,a (k)] N (a) m ⎞ ⎠ ⎟ (1) View Source where N (s)
    m and N (a) m are the total numbers of transmitted sensing SIP MESSAGEs (which
    go through the sensing part) and encapsulated actuating SIP MESSAGEs (which go
    through the actuating part) during the operation of the road traffic prediction
    application, respectively. Fig. 12(a) and (b) shows the effects of the number
    N s of S-UAs and the number N a of A-UAs on the mean end-to-end delay E[ t E ]
    for the cloud and edge scenarios, respectively. The two figures present a trivial
    result that as N s and N a increase, the communication and computational loads
    increase, and thus E[ t E ] increase accordingly. We note that the E[ t E ] performance
    is mainly dominated by the operation mechanism of the IoTtalk server, which requires
    an interval of 300 ms between two consecutive RESTful API calls to guarantee successful
    IDF updates. Moreover, the E[ t E ] values under the edge scenario are roughly
    10 ms smaller than the corresponding values under the cloud scenario. This results
    from the joint effects of the two facts: 1) the edge scenario allows a lower latency
    between the S-UAs/A-UAs and the AIoTtalk server, and 2) the edge scenario deploys
    the S-UAs/A-UAs within a less powerful AMD-based desktop PC (compared with a virtual
    machine on a Dell EMC PowerEdge R740 rack server in the cloud scenario), which
    can only support a limited amount of threads simultaneously. Fig. 12. Performance
    of the road traffic prediction application. (a) Effects of N s and N a on E[tE]
    (cloud scenario). (b) Effects of N s and N a on E[tE] (edge scenario). (c) Error
    of the LSTM model. (d) Effects of OSM auto scaling (cloud scenario). Show All
    Fig. 12(c) shows the error (accuracy) of our LSTM model, which, based on SUMO
    traffic simulator, uses the twelve average speeds per minute in the past 12 min
    of a road segment to predict the average speed in the next minute on the road
    segment. We perform 100 predictions, and Fig. 12(c) plots the error between each
    pair of the predicted result and the actual data. The f1gure 1 ndicates that the
    prediction error of our LSTM model can roughly be kept below 10% and the average
    prediction error is 4%. Fig. 12(d) shows the effects of the OSM auto scaling mechanism
    of our edge platform on E[ t E ] under the cloud scenario, where N a = 5. Specifically,
    we add 25 more S-UAs into the application per half an hour, and measure the corresponding
    resultant E[ t E ] . In addition, we configure the OSM auto scaling mechanism
    to scale out another VM to host another copy of the AIoTtalk server when N s reaches
    100. We note that when N s is increased to be 100, E[ t E ] is nearly 7 s before
    scaling out is activated. Thus, the OSM auto scaling mechanism can effectively
    improve the E[ t E ] performance to be nearly 5 s even when N s is as large as
    100. 3) Performance of the Neighborhood Violence Detection Application: Similarly,
    we measure the mean end-to-end delay E[ t E ] for the neighborhood violence detection
    application, where a AIoTtalk operation cycle is triggered by an RTP media packet.
    Fig. 13(a) and (b) shows the corresponding results for the cloud and edge scenarios,
    respectively. Likewise, the two figures demonstrate the close-proximity benefit
    under the edge scenario, and that E[ t E ] linearly increases as N s and N a increase
    due to the operation constraint of a 300 ms interval between two consecutive IoTtalk
    RESTful API calls to assure IDF updates. To evaluate the prediction performance
    of the applied CNN model for audio recognition, following [30], we input ten different
    sounds into the CNN model and collect the returned prediction, which are depicted
    in Fig. 13(c). The results indicate that the CNN model has strong confidence on
    recognizing most of the recordings, including air conditioner, car horn, engine
    idling, and siren, but has weak confidence when facing the sound of children playing.
    Moreover, we further compare with the deep neural network (DNN) and LSTM models,
    which are also well applied to audio recognition in the literature. Containing
    only the fully connected layers, without the convolution and pooling layers, the
    DNN model is known for its simple architecture, thus leading to less computation
    time yet acceptable prediction performance. On the other hand, the LSTM model
    has demonstrated its capability of extracting audio time-series features while
    requiring a moderate network size. We note in Fig. 13(c) that each of the three
    models has different performance for different sounds and the CNN model achieves
    the best accuracy in general. Fig. 13. Performance of the neighborhood violence
    detection application. (a) Effects of N s and N a on E[tE] (cloud scenario). (b)
    Effects of N s and N a on E[tE] (edge scenario). (c) Prediction probabilities.
    (d) MOSs of the sensing RTP sessions. Show All Finally, we measure the quality
    of experience of the sensing RTP voice sessions between the S-UAs and the AIoTtalk
    server in terms of the five-level mean opinion score (MOS): 5, 4, 3, 2, and 1,
    representing excellent, good, fair, poor, and bad, respectively. In this experiment,
    the RTP session between each S-UA and the AIoTtalk server is actually divided
    into two subsessions: 1) one between the S-UA and 2) the Asterisk SIP proxy, and
    the other between the Asterisk SIP proxy and the AIoTtalk server. In this case,
    we then use the network packet analyzer Wireshark, installed in the Asterisk SIP
    proxy, to capture the live packet data and conduct the RTP stream analysis upon
    the two subsessions. Specifically, we collect the mean jitters and the counts
    of lost packets, which, following [35], can be subsequently mapped to the corresponding
    MOS values. We consider 2 to 12 RTP sessions between the S-UAs and the AIoTtalk
    server, and depict the resultant MOS values in Fig. 13(d). The statistical results
    indicate that our testbed can guarantee a packet loss ratio less than 1% and a
    mean jitter less than 2 ms for the numbers of sessions less than 12, thus achieving
    MOS 5 (i.e., excellent). However, when the number of sessions is equal to 12,
    we find that the packet loss ratio is increased up to 90%, and the MOS value is
    consequently degraded down to 1 (i.e., bad). 4) Performance of the Proposed Hybrid
    Blockchain Architecture: Based on the cloud scenario, we deploy a ring of three
    BC-proxies, collocated with the S-UAs/A-UAs in National Taiwan University, to
    exercise our security mechanisms together with the blockchain handler for the
    road traffic prediction application. Fig. 14(a) first lists the properties our
    architecture exhibits and the corresponding approaches. Fig. 14(b) further shows
    the extra delay costs consumed by our security mechanisms, for the cases: N s
    is from 2 to 8, and N a is 25. The delays include: 1) ∼ 150 ms for the authentication/integrity
    verification at the serving BC-proxy and the blockchain handler and 2) ∼ 0.8 ms
    for two pairs of encryption/decryption between the serving BC-proxy and the blockchain
    handler. Clearly, compared with the total length of E[ t E ] ’s, the incurred
    delays are tolerable. Fig. 14. Performance of the hybrid blockchain architecture.
    (a) Property analysis. (b) Delay cost ( N a =25) . Show All SECTION IX. Conclusion
    and Future Work In this article, we have designed an SIP-based IoT service platform,
    AIoTtalk, which leverages and enhances our previously developed IoTtalk, by equipping
    it with the SIP signaling ability. We have proposed an SIP-based IoT service architecture,
    based on which we designed and implemented our AIoTtalk, which enables rapid development
    of heterogeneous (scalar or multimedia) IoT, in particular AIoT, applications.
    Moreover, we have established a real testbed under both the cloud and edge scenarios,
    and deployed two real SIP-based AIoT applications, real-time short-term road traffic
    prediction and neighborhood violence detection, within AIoTtalk to validate the
    applicability of our AIoTtalk. Finally, we have conducted experiments using the
    real testbed and the two real SIP-based AIoT applications to demonstrate the performance
    of our AIoTtalk. The experimental results have shown that, together with accurate
    model predictions and edge-virtualization auto scaling, AIoTtalk can guarantee
    low latency and quality of experience for messaging and streaming-based AIoT applications.
    For future work, the emerging AI-powered next generation computing technologies
    [36], integrating cloud/fog/edge/ serverless/quantum computing paradigms, can
    be exploited to guarantee the reliable and efficient operation of AIoTtalk. Accordingly,
    the AIoTtalk service platform can be further shaped into a three-layer hierarchical
    architecture: 1) the computing layer provides an AI-powered cloud/fog/edge integrated
    computing infrastructure for AIoTtalk; 2) the control layer exploits the SDN technology
    to support intelligent traffic control decisions by establishing a global view
    for AIoTtalk; and 3) the service layer contains the AIoTtalk server to handle
    intelligent service-logic execution and data-related manipulation. Based on this
    architecture, we identify possible future directions for AIoTtalk. Computing Layer:
    a) service placement and migration mechanisms dynamically arrange AIoTtalk on
    a suitable cloud, fog, or edge computing environment according to the predicted
    application requirements and user mobility and b) resource scaling mechanism automatically
    allocates adequate cloud, fog, or edge resources for AIoTtalk according to the
    short-term predicted traffic in real time. Control Layer: c) function decoupling
    moves the SIP network (proxies and registrars) and the AIoTtalk functionalities
    to a programmable SDN controller as SDN applications; and d) load balancing mechanism
    through the SDN controller operates at the levels of the SIP proxies and the AIoTtalk
    servers, respectively, for network scalability. Service Layer: e) federated learning
    paradigm enables the local parameter update/global model aggregation interaction
    between the central server and each involved end IoT device via two IoTtalk NAs;
    f) serverless AI model development pattern supports AIoTtalk application developers
    to bring their own containers hosting their locally developed AI models, without
    experiencing execution environment change; g) edge data preprocessing, taking
    advantage of edge servers’ proximity to the end sensors, screens unnecessary data
    locally before being sent to AIoTtalk, thereby reducing network stress; h) quantum
    key distribution, combined with a message authentication scheme, allows AIoTtalk
    to set up cryptographic keys for resistance to the security threats from quantum
    computers; and i) interoperability gateways support multimedia SIP clients to
    interact with other traditional scalar HTTP/MQTT/CoAP clients, without having
    to modify the involved protocols. ACKNOWLEDGMENT The authors would like to extend
    their appreciation to the anonymous reviewers who have carefully reviewed the
    boring implementation details and offer many constructive comments to significantly
    improve the quality of this article. They would also like to express their sincere
    appreciation to their mentor Prof. Yi-Bing Lin, National Yang Ming Chiao Tung
    University, Taiwan, who has not only made critical comments but also offered them
    his original ideas unselfishly. This article is the outcome of his suggestion.
    Authors Figures References Keywords Metrics Footnotes More Like This A study of
    integration Internet of Things with health level 7 protocol for real-time healthcare
    monitoring by using cloud computing 2017 10th Biomedical Engineering International
    Conference (BMEiCON) Published: 2017 Smart Sensor: SoC Architecture for the Industrial
    Internet of Things IEEE Internet of Things Journal Published: 2019 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'AIoTtalk: A SIP-Based Service Platform for Heterogeneous Artificial Intelligence
    of Things Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Tuhaise V.V.
  - Tah J.H.M.
  - Abanda F.H.
  citation_count: '17'
  description: The construction industry is facing enormous pressure to adopt digital
    solutions to solve the industry's inherent problems. The digital twin has emerged
    as a solution that can update a BIM model with real-time data to achieve cyber-physical
    integration, enabling real-time monitoring of assets and activities and improving
    decision-making. The application of digital twins in the construction industry
    is still in its nascent stages but has been steadily growing over the past few
    years. A wide variety of emerging technologies are being used in the development
    of digital twins in diverse applications in construction but it is not immediately
    clear from the literature which ones are key to the successful development of
    digital twins, necessitating a systematic literature review with a focus on technologies.
    This paper aims to identify the key technologies used in the development of digital
    twins in construction in the existing literature, the research gaps and the potential
    areas for future research. This is achieved by conducting a systematic review
    of studies with demonstrative case studies and experimental setups in construction.
    Based on the observed research gaps, prominent future research directions are
    suggested, focusing on technologies in data transmission, interoperability and
    data integration and data processing and visualisation.
  doi: 10.1016/j.autcon.2023.104931
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords Abbreviations 1. Introduction and research
    background 2. Research design 3. Data collection for the literature 4. Data extraction
    and analysis 5. Findings and discussions 6. Research gaps and future research
    7. Conclusions Declaration of Competing Interest Acknowledgements Data availability
    References Show full outline Cited by (20) Figures (1) Tables (4) Table 1 Table
    2 Table 3 Table 4 Automation in Construction Volume 152, August 2023, 104931 Review
    Technologies for digital twin applications in construction Author links open overlay
    panel Valerian Vanessa Tuhaise, Joseph Handibry Mbatu Tah, Fonbeyin Henry Abanda
    Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.autcon.2023.104931
    Get rights and content Under a Creative Commons license open access Highlights
    • Essential components of digital twin applications in construction. • State-of-the
    art of existing technologies for digital twin applications in research literature.
    • Research gaps and future research directions for technologies in digital twin
    applications. Abstract The construction industry is facing enormous pressure to
    adopt digital solutions to solve the industry''s inherent problems. The digital
    twin has emerged as a solution that can update a BIM model with real-time data
    to achieve cyber-physical integration, enabling real-time monitoring of assets
    and activities and improving decision-making. The application of digital twins
    in the construction industry is still in its nascent stages but has been steadily
    growing over the past few years. A wide variety of emerging technologies are being
    used in the development of digital twins in diverse applications in construction
    but it is not immediately clear from the literature which ones are key to the
    successful development of digital twins, necessitating a systematic literature
    review with a focus on technologies. This paper aims to identify the key technologies
    used in the development of digital twins in construction in the existing literature,
    the research gaps and the potential areas for future research. This is achieved
    by conducting a systematic review of studies with demonstrative case studies and
    experimental setups in construction. Based on the observed research gaps, prominent
    future research directions are suggested, focusing on technologies in data transmission,
    interoperability and data integration and data processing and visualisation. Previous
    article in issue Next article in issue Keywords Digital twinDigital construction
    technologiesBuilding information modelling (BIM)Internet of ThingsSystem architectureSystematic
    literature review Abbreviations ANNArtificial Neural NetworkANOVAAnalysis of VarianceAPIApplication
    Programming InterfaceARAugmented RealityBACnetBuilding Automation and Control
    NetworksBIMBuilding Information ModellingBMSBuilding Management SystemCoBieConstruction-Operations
    Building information exchangeGPSGlobal Positioning SystemHTTPHypertext Transfer
    ProtocolIFCIndustry Foundation ClassesIoTInternet of ThingsLANLocal Area NetworkLiDARLight
    Detection and RangingMQTTMessage Queuing Telemetry TransportMRMixed RealityRESTful
    APIRepresentational State Transfer Application Programming InterfaceRFIDRadio
    Frequency IdentificationSQLStructured Query LanguageSVMSupport Vector MachineUAVUnmanned
    Aerial VehicleUWBUltra-Wide BandVLANVirtual Local Area NetworkVRVirtual RealityWSNWireless
    Sensor Networks 1. Introduction and research background The digital twin is a
    revolutionising technology in the industry 4.0 era. The advent of the concept
    can be traced back to Grieve''s presentation for a Product Lifecycle Management
    module at the University of Michigan in 2002 [1]. The concept was not conclusive
    at the time but elaborated the components of a digital twin to be a ‘physical
    product in real space’, a ‘virtual product in virtual space’ and a connection
    between both the physical and virtual products for data exchange. It became more
    evident in 2010 when it was published in the National Aeronautics and Space Administration
    (NASA) modelling, simulation, information technology processing roadmap where
    a digital twin was defined as “an integrated multiphysics, multiscale, probabilistic
    simulation of an as-built vehicle or system that uses the best available physical
    models, sensor updates, fleet history, etc., to mirror the life of its corresponding
    flying twin” [2]. Several definitions of the concept have been made in the following
    years. For example, a digital twin has been referred to as a “realistic model”
    [3], “digital representation” [4], “dynamic virtual model” [5] that possesses
    the properties and behaviour of a system in the physical world. This study adopts
    the early definition of digital twins by Grieves [1]. The digital twin was first
    practically applied in NASA''s Apollo program in 2010, and its application has
    evolved and has spread to other industries since then. Digital twin applications
    have been mainly investigated in manufacturing, aviation, and healthcare [6].They
    have been reported to improve, automate and enhance the efficiency of various
    activities in those industries. The promising abilities of digital twins and the
    rapid advances in emerging smart technologies have attracted interest in their
    application for the construction industry. The term ‘digital twin’ is relatively
    new in the construction research literature. However, there is quite some lack
    of clarity in the concept because of its confusion with the term ‘BIM’. Some authors
    use the two terms interchangeably while others consider them to be different.
    For example, the digital twin has been referred to as BDOs (BIM Digital Objects)
    [7] and as a BIM model with lifecycle data and the ability to carry out simulations
    [8] . The confusion in the usage of the terms might hinder the acceptance of digital
    twins as a new concept in the construction industry [9] . Therefore, it is essential
    to differentiate between digital twins and BIM. BIM has been defined by the UK
    BIM task group as “a collaborative way of working, underpinned by the digital
    technologies which unlock more efficient methods of designing, delivering and
    maintaining physical built assets” [10] . A key feature of BIM is the 3D model
    commonly known as the BIM model which is realised with object-oriented software
    [11]. The BIM model acts as a rich data repository that contains information on
    geometric and functional aspects of an asset [12] and other related data like
    time schedules (4D) [13], cost (5D) estimation [14], asset management [15], etc.
    It can be used to integrate multi-disciplinary information from different project
    lifecycle phases to promote communication [16]. When properly developed and managed,
    the BIM model can provide a wealth of accurate geometric, descriptive and operable
    metadata that can be used to enhance project delivery practices [17]. However,
    the BIM model is limited in providing dynamic real-time data of the physical environment.
    Construction projects and assets are both implemented within a dynamic physical
    environment generating a vast amount of non-geometric data. A significant volume
    of this data is not fully taken advantage of yet it is critical for informed decision-making
    [18] .Thus, the need to collect this data by monitoring assets and projects in
    real time is required. Also, the BIM model has limited capability to process large
    sets of dynamic and multi-form data that require advanced technologies for storage
    and processing. These limitations of BIM models can lead to underutilisation of
    data, ineffective decision-making and inefficient practices with significant cost
    implications. The emerging concept of the digital twin offers an opportunity to
    address the limitations of BIM. In a digital twin system, the physical entity
    is connected to its equivalent virtual model by a data connection that allows
    data exchange between both entities. This implies that a BIM model is a merely
    starting point for the development of a digital twin in construction. With digital
    twin technology, the BIM model is connected to the physical environment to enable
    the bi-directional transfer of data between both entities. This enables the BIM
    model to be updated with real-time data which facilitates improved decision-making
    in the implementation and management of assets. Moreover, digital twins leverage
    advanced data analytics techniques like artificial intelligence for processing
    large sets of data to enable condition monitoring, predictions, diagnostics, prognostics
    and system optimisation . These digital twin capabilities have the potential to
    significantly improve information management and decision-making in various construction
    practices which in turn enhances the efficiency of construction and asset management
    activities. The application of digital twins in the construction industry is a
    growing area of research. Five systematic literature reviews that include Boje,
    et al. [19], Jiang, et al. [20], Opoku, et al. [21], Deng, et al. [22] and Ozturk
    [23] on digital twin applications in construction already exist. Ozturk [23] conducted
    a bibliometric analysis to provide an overview of the research landscape for digital
    twins in the AECO-FM industry. Boje, et al. [19] analysed the perceived abilities
    of a digital twin as applied across various engineering domains and identified
    potential areas in BIM application in the construction phase that can be enhanced
    by a digital twin. Opoku, et al. [21] investigated digital twin applications in
    various project lifecycle phases while Deng, et al. [22] examined the built areas
    that concern digital twins and the capabilities of current state-of-the-art digital
    twins. Jiang, et al. [20] investigated the applications of digital twins in the
    civil engineering sector. None of the reviews has focussed on establishing the
    state of the art of existing technologies for digital twin development in the
    literature. It has been reported that digital twins present significant challenges
    in their development from a technological perspective [[24], [25], [26]]. A wide
    variety of emerging technologies are being used in their development for various
    applications but it is not immediately clear from the literature which ones are
    key to their successful development, necessitating a systematic literature review
    with a focus on technologies. Although the focus here is on technologies, it has
    to be acknowledged that the application and adoption of digital technologies in
    the AEC industry is affected by several organisational challenges such as inadequate
    expertise [27,28], financial constraints [29], cultural barriers [30], resistance
    to change [31] and competing initiatives [32,33] etc., which are out of the scope
    of this study. This paper aims to identify the key technologies used in the development
    of digital twins in construction in the existing literature, the research gaps
    and the potential areas for future research. Typically, the development of a digital
    twin requires a data connection between a physical entity and its equivalent virtual
    model. Modelling technologies are used to generate a virtual model which mirrors
    the parameters of the physical environment such as the geometric structure, functionality,
    state, location, process, and performance [25]. The Internet of Things (IoT) technologies
    enable data connection, which allow for the bi-directional flow of data between
    physical and virtual entities [34]. The IoT technologies collect data from the
    physical environment which is then transmitted to the virtual model using communication
    transmissions in application layer protocols. The collected data is of high volume
    and can be multi-source, requiring big data storage technologies. The dynamic
    data from the physical environment is then integrated and fused into the virtual
    model to provide human-understandable abstractions and inferences [35]. The digital
    twin data can be processed using advanced data analytics technologies to provide
    various services to the users. The processed data is finally available to the
    end users straightforwardly and interactively through data visualisation which
    is supported by visualisation technologies [36]. These technologies collectively
    form the basis for implementing a viable digital twin consisting of a high-fidelity
    model with bi-directional data transfer and data processing capabilities. The
    technologies have been conceptualised into a digital twin system architecture
    with five development layers that include data acquisition, data transmission,
    digital modelling, data/model integration and the service [37]. The data acquisition
    layer consists of technologies for data collection and the collected data set.
    The transmission layer consists of the networking, communications and transmission
    protocols technologies. The digital modelling layer considers the technologies
    for measuring the parameters of the physical entity and for modelling the virtual
    model. The data/model integration layer consists of technologies that support
    data storage, data/model integration and fusion, data processing and analysis,
    visualisation and AI, machine learning and simulation engine. For this study,
    four broad categories that include data storage, data/model integration and fusion,
    data processing and analysis and data visualisation are treated as sub-categories
    of the data/model integration layer. The study uses this architecture as a guiding
    framework to identify the various technologies used in the five development layers
    of digital twins. The study adopts a systematic literature review methodology
    of selected digital twin application studies with construction-related demonstrative
    case studies and experimental setups. Firstly, the generic composition of digital
    twins in the studies is examined. This is followed by the elicitation of data
    about the technologies against the five conceptual digital twin development layers
    by [37]. Moreover, gaps and research issues for digital twin applications are
    discussed in this paper. Following this introduction, the research design is presented
    in Section 2 followed by data collection in Section 3 and data extraction in Section
    4. This is followed by Section 5 which presents the findings and discussions and
    Section 6 that presents the research gaps and future research. Finally, the conclusions
    and limitations are presented in Section 7. 2. Research design 2.1. Research methodology
    A systematic literature review (SLR) is applied in this paper because it follows
    a rigorous and explicit procedure to identify, evaluate and synthesise the existing
    body of knowledge on a specific subject [38]. This approach helps in establishing
    the current state of the art on a subject which aids in identifying research gaps
    and determining future research directions in that subject field. Kitchenham,
    et al. [39] propose that an SLR comprises three stages which include: planning,
    implementation and reporting. The planning phase involves framing the research
    questions and creating criteria for locating the material and search methods.
    This is followed by the implementation phase where the material is collected and
    selected for the study. Lastly, the literature is combined and analysed in the
    reporting phase. This paper applies the preferred reporting items for systematic
    reviews and meta-analyses (PRISMA) method for collecting data for the systematic
    review. The PRISMA method is widely used in systematic reviews since it clearly
    describes the rationale and procedures for identifying, selecting, excluding and
    including literature to improve the accuracy of the systematic review [40]. The
    methodology of the study consists of 1) framing the research questions, 2) data
    collection and processing, 3) data extraction and analysis and 4) summary of findings
    and discussions. 2.2. Research questions To define the scope of interest of the
    SLR, the following research questions were addressed: Q1: What are the components
    of digital twins in digital twin applications in construction? Q2: What are the
    existing technologies used in the development of digital twins? Q3: What are the
    research gaps and potential areas for future research? 3. Data collection for
    the literature This section describes the steps taken to collect the relevant
    literature for the study. A PRISMA workflow diagram for the study is shown in
    Fig. 1. Download : Download high-res image (651KB) Download : Download full-size
    image Fig. 1. PRISMA workflow diagram. 3.1. Performing the search process An initial
    literature search was conducted in the ScienceDirect database because it is one
    of the biggest databases covering a wide range of scientific publications. Moreover,
    it possesses desired attributes for conducting search queries like advanced search
    fields where systematic searches can be conducted [41]. An advanced search with
    keywords executed in the ScienceDirect database with a search string set to (“digital
    twin OR “virtual twin“ OR “cyber-physical system“) AND (“construction industry”
    OR “AEC” OR “construction management” OR “construction engineering“), for publications
    between 2015 and September 2022 and set to only research and review articles.
    The period selected for the search is appropriate because there are very few publications
    on digital twins before 2015. This search yielded a result of 508 records. A similar
    search using the keywords of “digital twin” and “construction industry” was run
    in similar databases like Web of Science and Google Scholar. An additional 153
    records were identified by reading through the titles of the papers in the databases
    and selecting only those that had not been found in ScienceDirect. 3.2. Inclusion
    and exclusion criteria The study gathered a total of 661 articles from both ScienceDirect
    and other additional databases. Inclusion and exclusion criteria were applied
    in three phases. The screening phase began by removing 51 records that were duplicates
    and studies that are not construction-industry related leaving a total of 610
    articles. The second phase of screening involved reading of titles and abstracts
    of the publications and 343 articles were excluded because they were BIM application
    studies and on other related technologies in the construction industry. This left
    behind a total of 267 records. In phase three, 142 records were excluded of which,
    25 were conceptual papers, 92 focused on one feature or technology of the digital
    twin and 25 records emphasised the service or function area for which the digital
    twin is developed. A total of 125 records remained for full-text assessment. An
    inclusion criterion was applied to the remaining 125 records. The inclusion criteria
    considered having 1) a detailed systematic architecture for a digital twin application
    2) a methodology for the implementation 3) the technologies used for the implementation
    and 4) the demonstrative case studies and laboratory setups presented. The introduction,
    methodology and figures of the remaining studies were assessed and scored up to
    4 in terms of those 4 criteria. The eligible papers obtained for the review were
    38 in total and these are shown in Table 1. Table 1. Selected practical studies
    for the systematic review. Item Title of paper Aim of study Reference 1 Towards
    Civil Engineering 4.0: Concept, workflow and application of Digital Twins for
    existing infrastructure To propose a step-by-step workflow process for developing
    a digital twin for an existing asset in the built environment Pregnolato, et al.
    [42] 2 Digital Twin-driven approach to improving the energy efficiency of indoor
    lighting based on computer vision and dynamic BIM To consider the linkage between
    the lighting and surveillance systems and propose a digital twin lighting system.
    Tan, et al. [43] 3 Using IoT for automated heating of a smart home by means of
    Open HAB software platform To develop an IoT based application for managing automated
    heating in a smart home Borissova, et al. [44] 4 Digital twin-enabled real-time
    synchronisation for planning, scheduling, and execution in precast on-site assembly
    To develop a digital twin-enabled real-time synchronisation systems to facilitate
    planning, scheduling and execution during on-site assembly in prefabricated construction
    Jiang, et al. [45] 5 A BIM-IoT and intelligent compaction integrated framework
    for advanced road compaction quality monitoring and management To propose a BIM-IoT
    based framework combined with intelligent compaction prototype for real-time compaction
    quality monitoring and management Han, et al. [46] 6 A digital twin predictive
    maintenance framework of Air handling units based on automatic fault detection
    and diagnostics To propose a digital twin predictive maintenance framework of
    AHU Hosamo, et al. [47] 7 Digital twin-enabled smart modular integrated construction
    system for on-site assembly To propose a digital twin-enabled smart modular integrated
    system with a testbed robotic demonstration for collaborative decision-making
    and daily operation during on-site assembly. Jiang, et al. [48] 8 Augmented reality
    and digital twin system for interaction with construction machinery To develop
    an Augmented Reality (AR) and Digital Twin (DT) based Digital Physical Link (DPL)
    of computing devices found in most construction projects with construction machinery.
    Hasan, et al. [49] 9 BIM- and IoT-based virtual reality tool for real-time thermal
    comfort assessment in building enclosures To investigate the synergistic benefits
    of BIM, the Internet of Things (IoT) and Virtual Reality (VR) for developing an
    immersive VR application for real-time monitoring of thermal comfort conditions.
    Shahinmoghadam, et al. [50] 10 Data driven indoor air quality prediction in educational
    facilities based on IoT network To investigate how to activate the control of
    the indoor conditions according to the occupancy rate by integrating of indoor
    air quality data gathered by the internet of things (IoT) sensors. Tagliabue,
    et al. [51] 11 IoT open-source architecture for the maintenance of building facilities
    To integrate IoT alert systems with BIM models to monitor building facilities
    Villa, et al. [52] 12 A BIM-data mining integrated digital twin framework for
    advanced project management To develop a digital twin-based framework to control
    and optimise the complex construction process Pan and Zhang [53] 13 Integrated
    digital twin and blockchain framework to support accountable information sharing
    in construction projects To develop an integrated digital twin and blockchain
    framework that can selectively store and share important project-related information
    traceably Lee, et al. [54] 14 Digital Twin-Based Safety Risk Coupling of Prefabricated
    Building Hoisting To propose a digital twin-based safety risk management framework
    for prefabricated building hoisting Liu, et al. [55] 15 Intelligent Safety Assessment
    of Prestressed Steel Structures Based on Digital Twins To propose an intelligent
    safety assessment method of prestressed steel structures based on digital twins.
    Liu, et al. [56] 16 Digital Twins and Road Construction Using Secondary Raw Materials
    To establish a fully functioning digital twin of a road constructed using Secondary
    Raw Materials (SRM) Meža, et al. [57] 17 Digital twin for supply chain coordination
    in modular construction To develop a digital twin framework for real-time logistics
    simulation to predict potential logistics risks and accurate module arrival time.
    Lee and Lee [58] 18 Towards an Occupancy-Oriented Digital Twin for Facility Management:
    Test Campaign and Sensors Assessment To facilitate the optimisation of building
    operational stage through advanced monitoring techniques and data analytics Seghezzi,
    et al. [59] 19 Developing a Digital Twin at Building and City Levels: A Case Study
    of West 1 Cambridge Campus To present a system architecture for digital twins
    at both building and city levels. Lu, et al. [37] 20 Digital twin-enabled anomaly
    detection for built asset monitoring in operation and maintenance To propose a
    digital twin-enabled anomaly detection system for asset monitoring and its data
    integration method based on extended industry foundation classes (IFC) in daily
    O&M management. Lu, et al. [60] 21 Digital Twin Hospital Buildings: An Exemplary
    Case Study through Continuous Lifecycle Integration To present a digital twin
    for a hospital building based on the concept of continuous lifecycle integration
    Peng, et al. [61] 22 Data-driven predictive maintenance planning framework for
    MEP components based on BIM and IoT using machine learning algorithms To develop
    an integrated data-driven framework based on BIM and IoT technologies for predictive
    maintenance of building facilities. Cheng, et al. [62] 23 Cyber-physical system
    for safety management in smart construction site To propose a smart construction
    site framework for safety management Jiang, et al. [63] 24 Visualised inspection
    system for monitoring environmental anomalies during daily operation and maintenance
    To explain the development of an AR-supported automated environmental anomaly
    detection and fault isolation method to improve building occupants'' thermal comfort.
    Xie, et al. [64] 25 Cyber-physical postural training system for construction workers
    To propose a cyber-physical postural training environment that integrates virtual
    reality and embodied interaction for construction workers to undergo repetitive
    training and obtain feedback. Akanmu, et al. [65] 26 Prototype of a cyber-physical
    façade system To systematically test the application of individual cyber-physical
    system criteria to facades using a prototype. Böke, et al. [66] 27 Real-Time Process-Level
    Digital Twin for Collaborative Human-Robot Construction Work To propose human-robot
    interaction and collaboration within a real-time, process-level, immersive virtual
    reality (VR) digital twin Wang, et al. [67] 28 Development of a Twin Model for
    Real-time Detection of Fall Hazards To propose and test a digital twin for health
    and safety management on construction sites Messi, et al. [68] 29 Cyber-physical-system-based
    safety monitoring for blind hoisting with the Internet of things: A case study
    To develop a cyber-physical safety monitoring system for blind hoisting in metro
    and underground constructions Zhou, et al. [69] 30 Linking energy-cyber-physical
    systems with occupancy prediction and interpretation through WiFi probe-based
    ensemble classification To propose an occupancy-linked energy-cyber-physical system
    that incorporates WiFi probe-based occupancy detection. Wang, et al. [70] 31 Office
    building occupancy monitoring through image recognition sensors To investigate
    image recognition (ImR) to detect users'' movements in an office building, and
    to provide real-time occupancy data. Antonino, et al. [71] 32 Digital twin: vision,
    benefits, boundaries and creation of buildings To explore issues related to the
    creation of a building''s digital twin and propose a method for its implementation
    for a building facade Khajavi, et al. [72] 33 Wireless electric appliance control
    for smart buildings using indoor location tracking and BIM-based virtual environments
    To present an intuitive point-and-click framework to control electrical fixtures
    in a smart built environment. Rashid, et al. [73] 34 An Internet of Things-enabled
    BIM platform for on-site assembly services in prefabricated construction To propose
    an Internet of Things (IoT)-enabled platform for prefabricated public housing
    projects in Hong Kong. Li, et al. [74] 35 An automated IoT visualisation BIM platform
    for decision support in facilities management To describe an attempt to represent
    and visualise sensor data in BIM with multiple perspectives to support complex
    decisions requiring interdisciplinary information. Chang, et al. [75] 36 BIM-
    and IoT-based monitoring framework for building performance management To propose
    a new monitoring framework based on BIM and IoT. Kang, et al. [76] 37 BIM integrated
    smart monitoring techniques for building fire prevention and disaster relief.
    To construct a BIM-based Intelligent Fire Prevention and Disaster Relief System
    Cheng, et al. [77]  38 Cyber-physical systems for temporary structure monitoring
    To propose CPS-based temporary structures monitoring system that integrates the
    virtual model of a temporary structure and the physical structure on the construction
    job site. Yuan, et al. [78] 4. Data extraction and analysis The study uses Grieve''s
    [1] generic components of a digital twin to identify the essential components
    of a digital twin in the selected studies as indicated in Table 2. We identified
    the essential components of a digital twin using Grieve''s three dimensions of
    a digital twin namely physical entity, virtual entity and the data connection
    between both entities in the various studies. Table 2 shows the elicited data
    on the composition of digital twins in the selected studies. Table 2 comprises
    4 columns for the article reference, physical entity, virtual entity and data
    connection between the physical and virtual entities. Table 2. Components of digital
    twin in the selected studies. Reference Physical entity Virtual entity The data
    connection between physical and virtual entities Pregnolato, et al. [42] Suspension
    bridge 3D FEM (Finite Element Model) IoT sensors Tan, et al. [43] Building with
    a lighting and surveillance system BIM model of lighting system in the building
    Surveillance system with cameras Borissova, et al. [44] Rooms in a single apartment
    3D model of apartment IoT sensors Jiang, et al. [45] Robotic testbed assembling
    structure site 3D model of assembling site RFID (Radio frequency identification)
    and UWB (Ultra-Wide Band) technology Han, et al. [46] Section of a road being
    compacted IFC BIM model to 3D models on a web browser (virtual assets) IoT sensors
    and Satellite positioning and recognition devices Hosamo, et al. [47] Building
    Air handling units with (AHU) a rotary heat exchanger, bypass, heater and cooler
    BIM model of AHU Restful Application Programming Interface (API) over a conventional
    BMS Jiang, et al. [48] Assembly zone of a 3D printed modular building 3D model
    of assembly zone Smart objects Hasan, et al. [49] Analogue of a stationary tower
    crane 3D model of tower crane IoT sensors, Shahinmoghadam, et al. [50] The living
    room of a two-bedroom apartment BIM model of the room IoT sensors and thermography
    imaging Tagliabue, et al. [51] A laboratory in an education building BIM model
    of laboratory RESTful Application Programming Interface (API) Villa, et al. [52]
    Building and a room fan coil 3D model of building and fan coil Wired IoT sensor
    network Pan and Zhang [53] Construction site of a 3 storeyed building 3D point
    cloud model, As-built IFC mode Sensors in laser scanner Lee, et al. [54] Two industrial
    robots building a small mock-up bridge using prefab interlocking bricks The virtual
    robotic construction project for a small mock-up bridge RFID and GPS (Global positioning
    system) technology Liu, et al. [55] Real hoisting site for a prefabricated building
    A virtual model of hoisting site IoT network (Mesh) and RFID Liu, et al. [56]
    Prestressed steel construction site 3D model of the construction site, physical
    model and behaviour model in the finite element model. IoT sensors Meža, et al.
    [57] 300 m access road project in Maribor, Slovenia, BIM model IoT sensors Lee
    and Lee [58] Truck and prefabricated modules BIM model IoT sensors Seghezzi, et
    al. [59] Spaces in an Education building BIM model IoT sensors Lu, et al. [37]
    A university building and building systems BIM model of building and building
    systems like HVAC, etc RESTful Web API and BMS data integrator application, Other
    IoT sensors and QR code-based asset management network Lu, et al. [60] Two centrifugal
    pumps of the HVAC system in a building BIM model of building and pumps IoT sensors
    Peng, et al. [61] Hospital building BIM model of building API Cheng, et al. [62]
    Chiller for a building HVAC system. BIM model of building and chiller. IoT sensor
    network with sensors and a Dedicated Digital Controller (DDC) system Jiang, et
    al. [63] Construction site with machinery, people, tower crane, etc. BIM model
    of people, machinery, components and site environment IoT sensors and positioning
    technologies Xie, et al. [64] A three-storeyed education building BIM model of
    building IoT sensors Akanmu, et al. [65] Real-life construction site with a trainee
    Virtual construction site containing a wooden frame and human avatars Vision and
    component-based sensing systems Böke, et al. [66] Experimental facade 3D model
    of facade IoT sensors Wang, et al. [67] A drywall installation with a 6DOF KUKA
    robot As design BIM model and as-built point clouds of workspace Camera sensors
    on the virtual construction site in Gazebo Messi, et al. [68] Ladder in a laboratory
    room BIM model of laboratory room with a ladder Ultra-wideband (UWB) sensor network
    Zhou, et al. [69] Road tunnel BIM model of road tunnel IoT sensors and actuators
    Wang, et al. [70] Large office space BIM model used to develop energy cyber models
    IoT sensors Antonino, et al. [71] Rooms in an office building BIM model of building
    Image sensors coupled with image recognition (Im) artificial intelligence on Raspberry
    board Khajavi, et al. [72] A building facade BIM model of facade Wireless sensor
    network Rashid, et al. [73] Office room BIM model of office room UWB-based real-time
    location tracking system and UWB localisation tag in a microcontroller Li, et
    al. [74] Construction site of a storeyed building BIM model of storeyed building
    RFID technologies Chang, et al. [75] Classroom in an education building BIM model
    IoT sensors Kang, et al. [76] Office in a building BIM model of building IoT sensors
    Cheng, et al. [77] Campus building BIM model of building IoT sensors Yuan, et
    al. [78] Scaffolding system on a construction site 3D model of the scaffold frame
    IoT sensors This is followed by elicitation of data on the technologies for the
    five conceptual digital twin development layers proposed by Lu, et al. [37]. In
    this section, the data on the technologies from the system architectures of the
    selected studies is elicited for the five development layers of a construction
    digital twin system architecture namely data acquisition, data transmission, digital
    modelling, data/model integration layer and the service layer by Lu, et al. [37]
    as explained in Section 1. The analysis is divided into two parts. The first part
    focuses on the first three layers of data acquisition, data transmission and digital
    modelling layers as shown in Table 3. The second part elaborates on the last two
    layers which include the data/model integration layer and the service layer as
    shown in Table 4. Table 3. Technologies used in the data acquisition, data transmission
    and digital modelling layers in a digital twin architecture. Reference Data acquisition
    layer Transmission layer Digital modelling layer Data collection Data set Network
    and communication Transmission Virtual (3D) modelling Pregnolato, et al. [42]
    Temperature sensors, displacement transducers and strain gauges Mechanical sensor
    data Hybrid wired and WSN (wireless sensor network) MQTT (Message Queuing Telemetry
    Transport) message broker 3D FEM (Finite Element Model). Midas Gen Software Tan,
    et al. [43] Cameras Video stream data LAN (Local Area Network), Internet Not stated
    BIM model. Autodesk Revit, Three.js and Draco Borissova, et al. [44] Temperature
    sensors, motion sensors, door sensors, thermostats, smart contacts Environmental
    sensor data WiFi Raspberry Pi installed openHAB MQTT 3D model. Jiang, et al. [45]
    UWB, RFID tags Positioning data Smart mobile gateway MQTT 3D model. Unity 3D Han,
    et al. [46] Acceleration sensors, speed sensors. Real-time kinematic global navigation
    satellite system (RTK – GNSS) antenna Mechanical sensor data, Positioning data
    Bluetooth MQTT IFC BIM model converted to 3D models on a web browser (virtual
    assets) in Three.js program Hosamo, et al. [47] Restful API over a conventional
    BMS system with hard-wired sensors: NTC-12 K-sensors for temperatures, PTH- 3202-DR
    for pressure, TTH-6040–0 for outdoor temperature and the IVL10 temperature-sensitive
    airflow transmitters. Environmental sensor data Internet and BACnet (Building
    Automation and Control Networks) for data communication among the various equipment,
    devices and sensors Universal Resource Locator via the API BIM model. Autodesk
    Revit Jiang, et al. [48] UWB tag, RFID tag and industrial wearable Positioning
    data, control data Mobile Gateway Operating System (MGOS) light middleware, wireless
    network MQTT 3D modelling. Solidworks and 3D Max Hasan, et al. [49] HC-SRo4 ultrasonic
    distance sensor and accelerometer and gyroscopic sensor(MPU-6050) Micro-controller
    unit (MCU) connects to sensor/actuator network using Arduino sketch Positioning
    data, mechanical sensor data Not stated Not stated Sketchup 3D for BIM model.
    Model imported to Unity 3D Shahinmoghadam, et al. [50] DHT11 sensors for air temperature
    and relative humidity and modern device Rev. P wind sensors (MD0555 category)
    for air velocity . IoT node for FLIR Lepton thermal imaging module VR-based module
    for user-defined input Environmental sensor data, weather data, thermal image
    data Wi-Fi HTTP BIM model. Autodesk Revit Tagliabue, et al. [51] RESTful API to
    collect data from temperature, humidity and CO2 sensors Environmental sensor data
    Internet and Supervisory Control and Data Acquisition (SCADA) for HVAC plant Not
    stated Not stated Villa, et al. [52] SCT-013-000 current sensor, EU:77DE-06-09
    voltage sensor, DS18B20 and PT100 temperature sensors for fan coil. DHT22 sensors
    for ambient temperature, humidity and a light-dependent resistor (LDR) Mechanical
    and environmental Sensor data WiFi, Raspberry Pi (RPi) 3B acts as a router using
    DNSmasq software. Node-Red installed on the RPi. MQTT 3D modelling. Autodesk Revit
    Pan and Zhang [53] UAV (Unmanned Aerial Vehicle) equipped with LiDAR scanner 3D
    point clouds Not stated Not stated Laser scanning to obtain 3D points cloud model.
    Lee, et al. [54] RFID and GPS tags Positioning data Internet, Azure blockchain
    platform to provide IoT hub, web server and blockchain network Not stated Unity
    Software for virtual environment modelling. Liu, et al. [55] Smart camera, wind
    speed, temperature, humidity and air quality sensors. Tower data recorder and
    RFID tags Video and image data, environmental sensor data, state information data
    Self-organising Wi-Fi network Not stated Not stated Liu, et al. [56] Cable compression-tension
    sensors (DH3815), RFID tags, Environmental sensors (wind speed and temperature)
    Mechanical sensor data, environmental sensor data, component information Not stated
    Not stated Autodesk Revit. Laser scanning using a Trimble TX5 3D scanner and Real
    works 8.0 to obtain 3D points cloud. Meža, et al. [57] Temperature sensor, Inductive
    displacement sensor, soil moisture sensor, asphalt strain sensor, horizontal inclinometer
    and pressure pads. Mechanical sensor data Not stated Not stated 3D modelling.
    Autodesk Civil 3D, Revit and Bexel manager BIM analysis and management tool Lee
    and Lee [58] The virtual server generating hypothetical IoT sensor data Location
    and tracking data Not stated Not stated Virtual modelling. Unity 3D Seghezzi,
    et al. [59] High quality Bullet Pro Camera sensors image data Virtual local area
    network (VLAN) and use of static IPs Data stored in an online database and downloaded
    as CSV files Online platform SophyAI. Lu, et al. [37] Monnit wireless sensors
    for environmental parameters like temperature and humidity, BMS sensor network
    and QR codes. Environmental sensor data, component information data Ethernet gateways
    in a wireless communication network HTTP (Hypertext Transfer Protocol) 3D model.
    Autodesk Revit and AECOsim building designer. Laser scanning and photogrammetry.
    Lu, et al. [60] Vibration sensors Mechanical sensor data Not stated Not stated
    3D model. Autodesk Revit Peng, et al. [61] Building automation systems (BAS),
    energy monitoring systems, security monitoring systems, medical gas pipeline systems
    and armarium system sensor networks Environmental sensor data, energy data, video
    data Building systems communication networks HTTP Laser scanning and Mixed Reality
    (MR) application. Cheng, et al. [62] Direct digital control system that receives
    data from temperature sensors, pressure sensors and flow rate sensors Environmental
    sensor data Direct digital control system and BACnet protocol for communications
    between devices Not stated 3D model. Autodesk Revit Jiang, et al. [63] Positioning
    base stations, positioning labels for workers, hoisting positioning devices, ultrasonic
    positioning sensors, laser ranging and 3D gyroscope sensor Positioning data, location
    label data Bluetooth and Wi-Fi HTTP and socket protocol Not stated Xie, et al.
    [64] Monnit wireless sensors for temperature and humidity and sensor data from
    BMS Environmental Sensor data Not stated HTTP Not stated Akanmu, et al. [65] Vision
    and wearable IMUs (Inertia Measurement Units) with a 3-axis accelerometer, gyroscope
    and magnetometer, Vive trackers using a velcro Kinematic data (body movement data)
    Wi-Fi. HTC VIVE Pro''s base station and USB connection Not stated VR environment
    created using the Unity game platform and HTC VIVE Pro device. Autodesk 3D Max
    for creating a human avatar, imported to Unity Böke, et al. [66] Light, gas, temperature,
    humidity and acoustic sensors connected to NodeMCU microcontroller Environmental
    sensor data Wireless local area network (WLAN) MQTT Rhinoceros 6 software for
    the 3D model Wang, et al. [67] Three Microsoft Kinect cameras Image data converted
    to point clouds Not stated gazebo_ros_pkg VR (Virtual Reality) environment using
    Unity 3D and Unified Robotics Description Format (UDRF) for building Robot arm
    model Messi, et al. [68] UWB tags on the ladder Positioning data Node-RED programming
    tool for connecting UWB data to the database MQTT Unity 3D. Zhou, et al. [69]
    Ultrasonic sensors, laser ranging sensors, Wind speed sensors, PM 10 sensors,
    noise sensors, humidity sensors and temperature sensor Positioning data, tracking
    data, and environmental data Self-organising Wi-Fi network Not stated Not stated
    Wang, et al. [70] TA465-X sensor system for airflow, temperature and humidity.
    Cameras for recording occupants. Environmental sensor data, video data Wi-Fi network
    Not stated BIM model Antonino, et al. [71] Cameras Image data Not stated Not stated
    3D modelling. Autodesk Revit Khajavi, et al. [72] Texas Instruments (TI) Sensortag
    CC2650 light sensors Environmental sensor data Raspberry Pi 3B+ network gateway
    using Bluetooth Not stated 3D model. Rashid, et al. [73] UWB anchors and UWB tag
    in handheld clicker Positioning and orientation data UWB radio communication Not
    stated Virtual modelling. Game engine Unity 3D Li, et al. [74] RFID tags on precast
    building components Positioning data IoT gateway and Bluetooth Not stated Not
    stated Chang, et al. [75] Sensors for indoor temperature and humidity connected
    to an Aurdino Mega 2560 R3 microcontroller board Environmental sensor data Not
    stated Not stated 3D model. Autodesk Revit Kang, et al. [76] DHT11 sensors for
    temperature and humidity and PT550 light sensors connected to Arduino microcontroller
    Environmental Sensor data Wired or wireless network MQTT protocol. Mosquitto service
    program to implement MQTT. Python and C# language. BIM model. Autodesk Revit Cheng,
    et al. [77] Bluetooth smoke detector sensors connected to Raspberry Pi 3, Location
    data from mobile applications of users Environmental sensor data, location data
    Wi-Fi and Ethernet Not stated 3D model. Autodesk Revit Yuan, et al. [78] Load
    cells switch sensors, an accelerometer and displacement sensor Mechanical sensor
    data Cloud computing Internet and cloud computing services. 3D model. Autodesk
    Navisworks Table 4. Technologies for the data/model integration and service layers
    in a digital twin architecture. Reference Data/model integration layer Service
    layer Data storage Data/model integration and fusion Data processing and analysis
    Data visualisation Functionality Pregnolato, et al. [42] Not stated Metadata APIs
    into Midas Gen software Calculations and comparison of modelled and measured values
    Midas gen software. Dashboards Real-time monitoring, alerts when thresholds are
    reached Tan, et al. [43] MySQL, Cloud server and database Three.js program. Deep
    learning Three.js program. Dashboards, Trend graphs, Pie charts, Pedestrian count
    Detection of pedestrians, monitoring of pedestrian trends and pedestrian time
    Borissova, et al. [44] Internet my openHAB cloud Not stated Rule-based reasoning
    for time and temperature. Energyplus for simulations Colour coding, time series
    graphs Simulation of effects of the digital infrastructure on the heating loads.
    Jiang, et al. [45] Not stated Unity 3D Time numerical models Unity 3D. Analytic
    charts Real-time monitoring of activities, ticket visualisation and real-time
    task alerts Han, et al. [46] MySQL API into the Three.js program. Computed intelligent
    compaction measurement values are compared against the target values Three.js
    program. Dashboards, Colour coding, time series graphs and alert messages Real-time
    monitoring of compaction progress and quality Hosamo, et al. [47] MSSQL IFC data
    mapped into COBie and FM data using an ontology-based strategy in GraphDB, Semantic
    data description for metadata using Brick schema, Revit C#.NET API add-in plug-in
    using Microsoft Visual Studio Machine learning involves the analysis of variance
    (ANOVA) and support vector machine (SVM) Autodesk Revit. Time series graphs, Maximum
    and minimum sensor values, sensor''s average value and historical value Fault
    detection and prediction in AHU Jiang, et al. [48] Web Database API into Unity
    3D Rule-based reasoning Unity 3D. Real-time status Kanban, analytic charts that
    include line graphs and histograms Real-time positioning tracing for smart objects,
    real-time control for the robots, instantiation for prefabricated modules Hasan,
    et al. [49] Unity 3D server Script coded in Unity''s game engine and the MCU sketch
    application. Augmented Reality (AR) viewfinder Visibility analysis Mobile application
    using marker-based Augmented Reality (AR). Dashboards, parameter values Real Time
    monitoring of operations Shahinmoghadam, et al. [50] Google cloud platform Unreal
    Engine 4 game engine using Oculus Rift S headsets HTTP requests transmit calculated
    values based on sensor data into the game engine VaRest plug-in to cloud storage
    module Calculated indices namely predicted mean vote (PMV) and predicted percentage
    of dissatisfied (PPD) Thermal comfort charts Display environmental and thermography
    data in real-time, display thermal comfort levels using PMV/PPD and bioclimatic
    charts Tagliabue, et al. [51] Asset database Not stated Markov model preparation
    and ANN (artificial neural network) training Time series graphs comfort predictions
    and CO2 predictions Villa, et al. [52] MySQL database, PHP interpreter server
    and Apache web service are used to store data locally. Autodesk forge API on the
    Raspberry Pi (RPi) 3B Rule-based algorithm and alarm system Autodesk Forge platform.
    Monitored fan coil variable values in real-time and dashboards for ambient variables.
    Real-time visualisation of fan coil status. Alarm signals or real-time notifications
    to operators using telegrams or SMS. Pan and Zhang [53] BIM cloud database Not
    stated Data mining techniques Colour coding, time series graphs Bottleneck detection,
    simulation, real-time monitoring and construction progress prediction Lee, et
    al. [54] Azure Microsoft for cloud storage. Add-in plug-in using Unity software
    Compliance checking between as-built BIM and as-planned BIM, Blockchain Unity
    platform. Dashboards in Azure Microsoft for the blockchain platform Providing
    real-time information that was traced via a blockchain network Liu, et al. [55]
    Cloud server Not stated Apriori algorithms for association rules and complex network
    analysis Line graphs and dashboards Visualisation and monitoring for safety management
    Liu, et al. [56] Not stated Not stated Machine learning algorithm using Markov
    chain Autodesk Revit. Line graphs and dashboard on a mobile terminal device Simulating
    various working conditions for structural health predicting of structure and early
    warnings for maintenance Meža, et al. [57] Not stated Open C# API in Bexel Manager.
    Data analysis using Bexel Manager Autodesk Civil 3D. Colour-coded element breakdown
    in a 3D model Centralised data collection platform to analyse the safety of using
    secondary raw materials for road construction Lee and Lee [58] Not stated Unity
    engine API into Bing Maps 3D simulations and data analytics Unity engine. Colour
    coding Real-time monitoring, Simulations of different scenarios Seghezzi, et al.
    [59] Online cloud database SophyAI online platform Visibility analysis SophyAI
    online platform. Anonymous virtual agents, real-time occupancy count, trend graphs
    Visualise real-time occupancy count and movements Lu, et al. [37] A mirrored database
    in a DynamoDB NoSQL database supported by the Amazon web services (AWS) AWS DynamoDB,
    Autodesk forge API and web-based program design (i.e., .Net) using C# and Javascript.
    IFC schema mapping with the asset management system and sensors Cumulative sum
    charts for anomaly point detection in pumps, comparison to predetermined comfort
    threshold to evaluate comfort levels and machine learning algorithms for predicting
    maintenance faults. Autodesk forge platform. Time series graphs, colour coding,
    S curves and dashboards Anomaly detection in pumps, real-time ambient environment
    monitoring and prediction of faults of boilers, and maintenance prioritisation.
    Lu, et al. [60] Amazon Web service (AWS) DynamoDB Ifc Object matching table to
    describe the link between the BIM object Globally Unique Identifier (GUID) and
    corresponding item ID from different data sources. Autodesk forge API and .NET
    using C# and Javascript Sequential analysis techniques and Bayesian online change
    point detection algorithm Cumulative sum control charts (CUSUM) Monitoring of
    the working condition of pumps and anomaly detection Peng, et al. [61] MySQL,
    Private cloud storage and Flink Apache Kafka and Flink, Scheduled ETL (Extract,
    Transform and Load) AI models using popular frameworks like TensorFlow, Keras
    and Pytorch deep learning Dashboards, colour coding, line graphs, bar graphs,
    operation and alarm status, lists, trend charts and real-time animations Visualisation
    for space management, monitoring of energy consumption in the building and building
    systems like the AHU and security system for fault detection Cheng, et al. [62]
    MSSQL BIM and COBie data mapped onto facility data in FM system using a COBie
    connector plug-in IFC 4 extension of sensor entities Autodesk Revit plug-in Comparison
    of real-time sensor data to historical maintenance and Machine learning algorithms
    Autodesk Revit. Time series graphs for temperature, pressure and flow rate. Condition
    monitoring of the chiller and condition prediction of the chillers. Jiang, et
    al. [63] Not stated Not stated Algorithm engines for face recognition, personnel
    positioning and mechanical attitude positioning Colour coding Real-time monitoring
    of operations, worker and component tracking alerts for risks Xie, et al. [64]
    Dynamo DB NoQSL provided by Amazon web services Not stated Anomaly detection algorithms
    including moving average, cumulative sum and a binary segmentation-based change
    point detection method Time series graphs, colour coding, Augmented Reality (AR)
    based visualisation Identification of indoor environmental anomalies and corresponding
    failed assets Akanmu, et al. [65] Not stated VR environment using Unity game platform
    Rule-based reasoning VR environment using Unity game platform. Colour codes for
    different risk levels Monitoring of workers'' postures during operations Böke,
    et al. [66] Cloud ‘Processing’ development environment where the 3D model is loaded
    and sensor and actuator data is received Comparison to thresholds, applying control
    logic Node-RED dashboard for user interface. Data in form of flow charts Real-time
    monitoring, and adaptive actions to the system Wang, et al. [67] Not stated Virtual
    Reality (VR) environment in Unity 3D and Oculus Rift S VR headset, connected to
    ROS Robot Operating Software (ROS) Unity 3D and Oculus Rift S for VR interface.
    Visible agents on site Real-time data that is used to control the Robot on site
    Messi, et al. [68] ArangoDB database Unity 3D game engine for digital twin platform.
    IFC loader to import BIM model information Checking against defined positions
    Unity 3D. Colour coding and user notifications Simulations using real-time data
    Zhou, et al. [69] Alibaba cloud server Not stated Visibility analysis and computation
    Mechanical analysis and computation Colour coding, parameter values Monitoring
    of tunnel operations, early warnings about potential accidents Wang, et al. [70]
    Not stated Not stated Ensemble learning algorithms for occupancy prediction Trend
    graphs Occupancy monitoring and occupancy detection Antonino, et al. [71] Microsoft
    Azure SQL cloud database Not stated Visibility analysis Occupancy values Occupancy
    monitoring Khajavi, et al. [72] Not stated Not stated Matching lux values to the
    defined colour spectrum Colour coding, lux values Visualise the real-time state
    of a façade brightness Rashid, et al. [73] Not stated Unity 3D Positioning algorithm
    Unity 3D. Colour coding Detect interactions between a user and appliance of interest
    to control the appliance Li, et al. [74] Cloud server Not stated Visibility analysis
    Colour coding Progress visualisation and monitoring, Error alerts Chang, et al.
    [75] Not stated Dynamo plug-in into Revit. Firefly suite to link Dynamo and Arduino
    sensor microcontroller Numerical models to integrate values of sensor data into
    a colourful 3D fashion Dynamo in Autodesk Revit. Time series graphs, Colour coding
    in a 3D schematic Visualisation of sensor data for indoor temperature and humidity
    Kang, et al. [76] Data storage for BIM in Mongo database and monitoring data in
    Influx database Revit plug-in written in C# language Data analysis using Python
    and Chronograf tool Revit. Time series graphs and colour coding in 2D schematic
    Visualisation of data in the BIM model Cheng, et al. [77] Cloud database and SQL
    server Autodesk Revit API plug in Algorithms for planning rescue paths Colour-coded
    agents in a 3D schematic, Colour coding on the 3D schematic, Colour coded arrows
    on the 3D schematic Early detection of fires and planning of rescue paths Yuan,
    et al. [78] Amazon Elastic Compute Cloud (Amazon EC2) service using Heidi SQL
    Autodesk Navisworks add-in tool using Microsoft Visio studio Comparisons to user-defined
    thresholds Autodesk Navisworks management and mobile application. Colour coding.
    Warning alerts for potential failures 5. Findings and discussions This section
    presents the findings from the data extraction and analysis of the selected studies
    (Table 1) that is indicated in Table 2, Table 3 and Table 4. 5.1. Components of
    digital twins in construction applications The digital twin applications consisted
    of various physical entities. Most of the studies used buildings and the associated
    building spaces [44,50,51,59,61,64,67,68,70,71,73,[75], [76], [77]]. Some studies
    focused on specific building components and systems such as lighting and surveillance
    system [43], air handling unit [47], fan coil [52], building systems [37], centrifugal
    pumps [60], chiller for an HVAC system [62] and building façade [66,72]. Other
    studies considered the construction and assembling sites for buildings [45,48,49,[53],
    [54], [55], [56],58,63,65,74,78] and road construction sites [46,57,69]. In these
    environments, various resources such as machinery, materials, and workers were
    monitored. Pregnolato, et al. [42] used an existing suspension bridge as their
    physical entity. All the studies contained a 3D model of the physical entity with
    the BIM model being the commonest virtual model. A 3D FEM (Finite Element Model)
    was used for the suspension bridge. The (IoT) Internet of Things sensors were
    the most used devices for creating a data connection between the physical entities
    and their corresponding virtual models. Other technologies that were used include
    RFID (Radio frequency identification), image sensors and image recognition artificial
    intelligence, vision and component-based sensing systems, satellite positioning
    and recognition devices, laser scanning and Restful APIs. 5.2. Technologies in
    digital twin applications The data elicited in Table 3 and Table 4 for is categorised
    under five layers that include data acquisition, data transmission, digital modelling,
    data/model integration and service layers. The data/model integration layer is
    further classified into data storage, data/model integration and fusion, data
    processing and analysis and data visualisation. 5.2.1. Data acquisition layer
    Dynamic data from the physical environment is collected depending on the intended
    functionality of the digital twin. IoT sensors and technologies were the technologies
    used for data acquisition from the physical environment. The IoT sensor networks
    use sensing nodes to communicate the status of a parameter in a surrounding in
    a wireless manner [79]. They measure changes in physical, chemical and electrical
    properties of a surrounding and generate a response in the form of an electrical
    output. Various types of intelligent sensors are used to measure environmental
    parameters that include temperature, humidity, air quality, motion, pressure,
    airflow rates, air velocity, CO2, lux levels, gas, particulate matter (PM) 10,
    smoke and acoustic levels. A wide range of sensors is available to collect data
    on various environmental parameters. For example, DHT11 sensors [50,76] and Monnit
    wireless sensors [64] were used for measuring temperature and humidity. Other
    types of sensors used include Rev. P wind sensors (MD0555 category) for air velocity
    [50], DHT22 sensors for ambient temperature, humidity and a light-dependent resistor
    (LDR) [52], TA465-X sensor system for airflow, temperature and humidity [70],
    Texas Instruments (TI) Sensortag CC2650 light sensors [72] and PT550 light sensors
    [76]. In other cases, sensor data is obtained from already existing monitoring
    systems of buildings. [47] used a Restful API (Application Programming Interface)
    over a conventional BMS (Building Management System) to collect data of the BMS
    hard-wired sensors that include NTC-12 K-sensors for temperature, TTH-6040–0 for
    the outdoor temperature and the IVL10 temperature-sensitive airflow transmitters
    and PTH-3202-DR for pressure. Similarly, a RESTful API was applied to collect
    sensor data from the Supervisory Control and Data Acquisition (SCADA) system for
    HVAC plants with temperature, humidity and CO2 sensors [51]. Cheng, et al. [62]
    obtained sensor data from a direct digital control (DDC) system in an IoT sensor
    network consisting of temperature sensors, humidity sensors, flow rate sensors
    and pressure sensors. IoT sensor technologies are also used to collect mechanical
    data in various applications. For a suspension bridge, temperature sensors were
    used to measure the temperature of the chain links while displacement transducers
    measured the displacement of the saddles [42]. The piezoelectric acceleration
    sensor was used to acquire the vertical acceleration of the vibration wheel to
    monitor the quality of road compaction [46]. To monitor the safety of a scaffolding
    system Yuan, et al. [78] and cables on a prestressed steel structure Liu, et al.
    [56], a column tension-compression sensor and accelerometer with a displacement
    sensor were used respectively. Lu, et al. [60] applied vibration sensors to monitor
    the mechanical condition of a chiller pump. To monitor the mechanical condition
    of a fan coil, SCT-013-000 current sensor, EU:77DE-06-09 voltage sensor, and DS18B20
    and PT100 temperature sensors were used [52]. Meža, et al. [57] used various sensors
    that included temperature sensors, inductive displacement network sensor, soil
    moisture sensors, asphalt strain sensors, horizontal inclinometers network sensors
    and surface sensor pressure pads to obtain real-time data on a road construction
    project. Load cells, switch sensors, an accelerometer and displacement sensor
    were used to monitor the safety of a scaffolding system [78]. The IoT sensor technologies
    can also be used to obtain positioning data in dynamic environments. For example,
    the ultrasonic sensor and gyroscopic sensors were used to collect positioning
    data of resources to detect clashes and accurate placement [49] and track locations
    of resources on site [63]. Zhou, et al. [69] used both ultrasonic sensors and
    laser ranging sensors to track the location of machinery during tunnel operations.
    Akanmu, et al. [65] used vision and wearable IMUs (Inertia Measurement Units)
    with a 3-axis accelerometer, gyroscope and magnetometer as well as Velcro vive
    trackers to obtain body kinematic data. Another use of IoT sensors involved the
    application of cameras and laser scanners. Tan, et al. [43] used a building surveillance
    system to obtain video streams of scenes which were processed by an algorithm
    to detect pedestrians and perceive ambient brightness. A FLIR lepton 2.5 thermal
    imaging module was connected to the Raspberry Pi microprocessor to measure surface
    temperatures to monitor MRT (Mean Radiant Temperature) values at different points
    in the building enclosure [50]. Smart cameras provided video streams recording
    the wearing of safety equipment on site and uploaded to the cloud storage for
    analysis [55]. Seghezzi, et al. [59] used high-quality Bullet Pro Camera sensors
    to capture image data of occupant movement which was registered as a human by
    the deep learning algorithm embedded in the camera sensors to provide a count
    of occupants. Three Microsoft Kinect cameras acquired image data of a robot''s
    workspace environment in Gazebo which was then converted to point clouds [67].
    Antonino, et al. [71] used cameras with image sensors coupled with image recognition
    (Im) artificial intelligence to detect users'' movements in an office building.
    Two overhead cameras were applied to record the entrance and exit events of occupants
    in a room which were then translated into counts of occupants [70]. On the other
    hand, 3D point clouds for a construction site were obtained using a UAV (Unmanned
    Aerial Vehicle) equipped with a LiDAR scanner [53]. To obtain positioning and
    location data, identification and tracking technlogies that include RFID tags,
    UWB tags and the global navigation satellite system (GNSS) were used. RFID systems
    consist of one or more readers and several RFID tags that contain a unique identifier
    which is applied to objects. A tag transmission is triggered by the readers using
    electromagnetic fields to automatically query for the possible presence of tags
    in the surroundings to receive their IDs (identifications) [80]. This enables
    the RFID systems to track or monitor physical objects in real time. On the other
    hand, UWB is a short-range and high-bandwidth communication technology that uses
    radio signals [81]. It can be used to locate and track human beings and objects
    in real time. The GNSS is an outdoor localisation system that uses a satellite-based
    navigation system at a global level. From the analysis, RFID and UWB tags were
    used to collect positioning data of prefabricated components on an assembling
    site (UWB) [48] and smart objects on a construction site [45]. Lee, et al. [54]
    used RFID tags and the GPS (Global Positioning System) to track and locate prefabricated
    blocks on a mock-up bridge site. RFID and UWB tags were used to locate precast
    building components [74] and the position of a ladder [68] respectively. UWB anchors
    and tags provided the position and orientation data on appliances in an office
    room [73]. The real-time kinematic global navigation satellite system (RTK – GNSS)
    was used to obtain location data for construction machinery [46]. The use of sensors,
    RFID and UWB devices, cameras and laser scanning in the construction industry,
    is growing and is well covered in the literature [[81], [82], [83], [84], [85]].
    To be able to collect and transmit useful data, sensor systems consist of various
    functional layers like sensing and transduction, signal processing, data processing,
    signal transmission, etc., [86]. This follows that a high-level sensor system
    architecture can include a microcontroller, wired or wireless interface, memory,
    sensors, display and power. Examples of sensor platforms indicated in some studies
    include NodeMCU micro-controller Böke, et al. [66], Aurdino Mega 2560 R3 microcontroller
    board [75], Raspberry Pi 3B+ [72] and Raspberry Pi 3 [77]. The details on sensor
    architectures and platforms can be found in various studies such as [[87], [88],
    [89]] etc. 5.2.2. Data transmission layer Data transmission involves the processing
    and transporting of raw data from the data acquisition layer. The collected data
    is generally transmitted through the wire and wireless transmission technologies.
    The Wi-Fi wireless short-range technology was used in several applications [44,45,48,52,55,63,69,70,77].
    Wi-Fi is a common communication technology that connects devices in a local area
    network using radio waves. Other examples of short-range wireless technologies
    included wireless local area network (WLAN) [66], Bluetooth [46,63,72,74] and
    ultra-wide-band (UWB) radio communication [68,73]. On the other hand, one study
    used Ethernet wired transmissions [37] while another study by Pregnolato, et al.
    [42] used a hybrid of both wired and wireless networks. In the case of sensor
    data obtained from a Building Management Systems (BMS), the internet and the BACnet
    (Building Automation and Control Networks) protocols were used for data communication
    among the various equipment, devices and sensors as indicated by [47]. The transmission
    of data must conform to communication layer protocols. These protocols are defined
    by different groups such as IEEE (Institute of Electrical and Electronics Engineers),
    IETF (Internet Engineering Task Force), etc., and are officially used as standards
    in the industry. They can be categorised into file transfer protocols and messaging
    protocols which are best suited for web applications and IoT frameworks respectively
    [90]. The most commonly used transmission protocol was MQTT (Message Queuing Telemetry
    Transport) [42,[44], [45], [46],48,52,66,68,76]. MQTT is a lightweight publish/subscribe
    messaging transmission protocol that connects remote sensors to other software
    layers of an application [91]. It is characterised by high latency and suitable
    for restricted equipment, unreliable networks and low bandwidth. It uses a client-server
    architecture whereby the MQTT client publishes messages to an MQTT broker to be
    subscribed to by other clients or retained for future use [92]. The HTTP (Hypertext
    Transfer Protocol) was the other mostly used transmission protocol [37,50,61,63,64].
    The HTTP is a web messaging protocol that supports request/response RESTful web
    architecture [92]. It uses the Universal Resource Identifier (URI) to send data
    from the servers to the client who receives the data through a specific URI. In
    Hosamo, et al. [47] study, a specific URL from the sensor data API was used for
    data transfer to the BIM model. Jiang, et al. [63] used both the HTTP and socket
    protocols for their study. A socket protocol is a standard protocol for transferring
    data from one machine to another [93]. On the other hand, Lee, et al. [54] applied
    an Azure blockchain platform to provide an IoT hub for receiving the GPS data
    from the IoT sensors which was then later sent to the as-built BIM model. Seghezzi,
    et al. [59] stored sensor data in an online database and downloaded it as CSV
    files which was then visualised in the SophyAI online platform. The gazebo_ros_pkgs,
    a set of robot operating software, was used to create a communication interface
    between the Gazebo platform with sensor data and the ROS (Robot Operating Software)
    [67]. 5.2.3. Digital modelling layer This layer involves the development of the
    corresponding virtual model of the physical entity. This process is generally
    done by modelling the digital model. Modelling is the process of “representing
    a physical entity in digital forms that can be processed, analysed, and managed
    by computers” [24]. Through modelling, the physical entity and related information
    are represented in a digital environment. To be able to model the physical entity,
    the parameters of the physical environment such as the geometric structure, functionality,
    state, time, location, process, performance [25] etc. are measured to produce
    a virtual replica that mirrors the physical environment. From the analysis, laser
    scanning was used to obtain the 3D point cloud model of the physical assets [37,53,56,61].
    Other measurement methods included laser tape measurement [73], Mixed Reality
    (MR) [61] and photogrammetry [37]. Modelling parametric design software is used
    to develop the virtual model that mirrors the features of the physical entity.
    Most of the studies used a 3D model (BIM model) to represent the virtual equivalent
    of the physical entity. Autodesk Revit was the most used software for 3D modelling
    of buildings as indicated in these studies [43,47,50,52,60,62,71,75,77].Other
    3D geometric software tools that were applied include Autodesk Navisworks [78],
    Solidworks and 3D Max [45], Sketchup 3D [49] and Rhinoceros 6 software [66].To
    create a BIM model of a road, Autodesk Civil 3D and Autodesk Revit were used [57].
    The former was used to generate the road model while the latter was used to model
    sensors to create the BIM model. Autodesk Revit and AECOsim building designer
    were used to develop geometry models at the system, building and city levels Lu,
    et al. [37]. On the other hand, game development software is also used to develop
    the virtual entity of the digital twin application. A human avatar was modelled
    using the Unity game engine and Autodesk 3D Max [65]. Four studies imported geometric
    data into Unity 3D to develop 3D models [48,54,58,73]. A Virtual Reality (VR)
    environment was created using the Unity 3D platform, Oculus Rift S VR headset
    and the Oculus touch controllers [67].To create a human-robot construction system,
    the Robot arm model was developed using the Unified Robotics Description Format
    (UDRF) and sent to Robot Operating Software (ROS) to be loaded as a game object
    in VR. Moreover, BIM components for the construction site were also loaded into
    the VR environment. Other 3D modelling platforms that were used include Three.js
    program [46] and Midas Gen software [42]. 5.2.4. Data/model integration and fusion
    layer 5.2.4.1. Data storage In the data/model integration layer, the digital twin
    data undergoes a series of stages that include data storage, data/model integration
    and fusion, data processing and analysis and data visualisation to produce useful
    information. Digital twin data is multi-source and of high volume requiring big
    data storage technologies [24]. The selection of a storage database depends on
    the accessibility, scalability, high-performance and management capability of
    massive data. The studies mostly used cloud-based computing platforms for data
    storage. Cloud databases provide adaptable and exceptional backend access for
    computing applications [94]. Examples of the cloud-databases from the studies
    include Internet my openHAB cloud [44], Google cloud platform [50], web database
    [45], BIM cloud database [53], Azure Microsoft for cloud storage [54], cloud servers
    [55,59,66,74], Alibaba cloud server [69], Microsoft Azure SQL cloud database [71],
    Cloud database and SQL server [77], Heidi SQL [78], Amazon Web service (AWS) DynamoDB
    [60,64], MSSQL [47,77], MySQL [43,46,52,61], ArangoDB database [68] and influx
    database [76]. To collect data from already existing building systems like the
    BMS (Building Management System) with security firewalls, a mirrored database
    was used to store all data sets in the protected BMS into DynamoDB NoSQL schema
    [37]. Data was also stored on-premise in Mongo database [76] and using a PHP interpreter
    server and Apache web service [52]. 5.2.4.2. Data/model integration and fusion
    The various digital twin data from the physical and virtual spaces are integrated
    through data fusion techniques to provide human-understandable inferences [35].
    This involves integrating sensor data like environmental data, mechanical data,
    and image and video data into the BIM models to reflect the real-time status of
    the physical entity in the virtual model. This requires the use of technologies
    to provide a platform for hosting the digital twin with both sensor and model
    data. To enable this data integration, customised APIs are built into the 3D model
    software platforms. Therefore, API add-in plug-ins were developed for Autodesk
    Revit [47,62,77], Midas Gen software [42], Bexel Manager [57], Dynamo into Revit
    [75], Autodesk Navisworks [78], Autodesk forge [37,52,60] and Three.js program
    [43,46]. The Unity game engine platform by Unity technologies was used by eight
    studies as the data/model platform [45,48,49,54,58,65,73]. Shahinmoghadam, et
    al. [50] used the Datasmith tool to import geometric data for building spaces
    into an Unreal Engine 4 game engine using Oculus Rift S headsets. Other platforms
    used for data/model integration and fusion included the ‘Processing’ development
    environment [66] and SophyAI online platform [59]. Peng, et al. [61] used data
    processing frameworks that include Apache Kafka and Flink and Scheduled ETL (Extract,
    Transform and Load) to integrate sensor data from 13 subsystems into a virtual
    environment. To integrate the multi-form sensor data and data from other systems
    into the BIM model, the data can be modelled into formal data structures to allow
    for seamless fusion of the data into the model. Four studies provided details
    on the data structures for the integration of the sensor data and 3D models. Hosamo,
    et al. [47] used the Brick schema for the semantic description of the metadata.
    Three studies used semantic data description to map the BIM model data in the
    IFC schema with the sensor systems and asset management systems [37,60,62]. 5.2.4.3.
    Data processing and analysis The digital twin data is processed and analysed using
    advanced technologies to obtain useful information. Table 4 analysis consists
    of both simple and advanced data analysis techniques. Examples of simple data
    analysis techniques include the comparison of measured values against target values/thresholds
    [42,46,50,54,66,68,72,78], visibility analysis [49,59,69,71,74], numerical models
    [48,75] and rule-based reasoning [44,45,52,65]. The other studies applied artificial
    intelligence techniques that include machine learning, deep learning and artificial
    intelligence algorithms for data analysis. Artificial intelligence (AI) involves
    programming a machine to behave in an intelligent manner [95]. Machine learning
    was the most used technique in the studies. Various machine learning techniques
    that include the analysis of variance (ANOVA) and support vector machine (SVM)
    [47,62], Markov model preparation and ANN (artificial neural network) training
    [51], Apriori algorithms and complex network analysis [55], Markov chain [55],
    Cumulative sum charts and machine learning [37] and ensemble learning algorithms
    [70] were applied. Tan, et al. [43] applied deep learning to convert video stream
    data into text data to analyse the pedestrian trend, time and determine the most
    saving energy saving option. Artificial intelligence models using popular frameworks
    like TensorFlow, Keras and Pytorch deep learning were used for event identification,
    fault diagnosis and automated decision making [61]. Algorithms were developed
    for face recognition, personnel positioning and mechanical attitude positioning
    [63], anomaly detection [64], Bayesian online change point detection [60], planning
    rescue paths [77] and positioning [73]. Pan and Zhang [53] applied data mining
    techniques to produce process models, diagnose bottlenecks, and predict progress
    of works. Other studies analysed data using Python and Chronograf tool [76], Bexel
    manager [57], computation mechanical analysis [69], Robot Operating Software (ROS)
    [67] and 3D simulations [58]. 5.2.4.4. Data visualisation The visualisation of
    temporal sensor data in a virtual environment is one of the powerful aspects of
    digital twins. From the analysis, the 3D modelling software platforms are used
    for data visualisation. Examples of these include Autodesk Revit [47,56,62,[75],
    [76], [77]], Midas Gen software [42], Autodesk Navisworks [78], and Autodesk Civil
    3D [57]. Some studies used Autodesk forge [37,52,60] for visualising the sensor
    data in the BIM model. Gaming environment platforms like Unity 3D game engine,
    which possess powerful visualisation capabilities are also used for visualisation
    [45,48,54,58,67,68,73]. Furthermore, game engine platforms can be used to create
    VR (Virtual Reality) environments as indicated by Akanmu, et al. [65] Wang, et
    al. [67] and Shahinmoghadam, et al. [50]. Akanmu, et al. [65] applied a VR environment
    using the Unity game engine. Wang, et al. [67] created a Virtual Reality (VR)
    environment in Unity 3D and Oculus Rift S VR headset that was connected to the
    ROS (Robot Operating Software). Similarly, Shahinmoghadam, et al. [50] used Unreal
    Engine 4 game engine with Oculus Rift S headsets for the VR environment. On the
    other hand, AR (Augmented Reality) was used for visualisation [49,64]. An AR mobile-based
    application was applied to allow the users to interact with the application for
    remotely operating of construction machinery [49]. This was developed using Unity3D
    in the form of a server with AR interfaces and marker images that were uploaded
    as assets. Other software that were used for visualisation include the Three.js
    program [43,46], SophyAI online platform [59] and a Node-RED dashboard in the
    ‘Processing development’ [66]. The processed digital twin data is finally availed
    to the end users straightforwardly in various visualisation forms. The two most
    used methods of visualisation for the digital twin data were colour coding in
    2D and 3D schematics, performance dashboards, and time series graphs supported
    by the visualisation platforms. Other forms of visualisation included trend graphs
    [43,59,61,70], pie charts [43], line graphs [48,55,56,61], real-time status Kanban
    [48], thermal comfort charts [50], S curves [37] and cumulative sum control charts
    [60]. In many studies, the values for monitored parameters like pedestrian count
    and sensor readings for ambient temperature and humidity were indicated on the
    visualisation platforms. Other forms of visualisation involved the use of anonymous
    virtual agents [59,67,77] and real-time animations [61]. Most studies had more
    than one form of visualisation of the data. 5.2.5. Service layer The last layer
    represents the service that digital twin offers to the users. Digital twin offers
    a diverse range of service depending on the context within which it is applied.
    The most common service offered in the studies was real-time monitoring of assets
    and activities. This included monitoring a suspension bridge [42], building façade
    [66], façade brightness [72], pedestrian trends and time [43], construction site
    activities [48], compaction progress and quality [46], smart objects [45], machine
    and worker operations [49,63], construction progress [53,54,74], structural health
    [55], the safety of materials [57], occupancy trends and movements [59], ambient
    environment monitoring [37], working conditions [60], energy consumption [61],
    chiller condition [62], workers'' postures during operations [65], tunnel operations
    [69] and room occupancy [70,71]. Another functionality of the digital twin involved
    early detection: of potential failures in a scaffolding system [78], faults in
    building AHUs [47,61], bottlenecks in on-site construction [53], anomalies in
    a pump''s operations [37] and indoor environment [64], and fires in a building
    [77]. Moreover, digital twins were applied for the prediction of faults in building
    systems [37,47], the condition of a chiller system [62], and comfort and CO2 levels
    in spaces [51]. Also, some applications used digital twins to provide early warnings
    about potential accidents [69] and alarm signals when thresholds are exceeded
    [52]. Some studies showed that digital twin enabled the visualisation of environmental
    and thermal comfort levels [50], fan coil status [52], space use [61], construction
    progress [74] and indoor ambient conditions [75,76]. Other studies showed that
    digital twins can be used for simulations [44,53,56,58,68], real-time control
    of robotic operations [45,67] and home appliances [73]. 5.3. Summary of findings
    The existence of the three components of a physical entity, its virtual model
    and the data connection between both entities highlights a shift away from static
    BIM models to the emerging technology of digital twins in construction. The studies
    show the diverse application of digital twins to various entities in the physical
    environment from building components, buildings, workers, machinery, site resources,
    civil engineering structures, and even at the city level. This implies that digital
    twins can be applied at different levels of granularity of the construction industry
    ecosystem. Data from the physical environment was mainly acquired using IoT sensor
    technologies. Other technologies that include vision and component-based sensing
    devices, RFID and UWB tags were also used. In some cases, sensor data was acquired
    from already existing monitoring systems like the BMS. For the transmission of
    the data, the applications mostly relied on wireless technology. MQTT protocol
    was most used standard communication protocol followed by the HTTP protocol. MQTT
    protocol is favoured for IoT networks because it is designed for use in low bandwidth
    and high latency networks. Moreover, its publish-subscribe strategy that allows
    for one-to-one and one-to-many connections makes it useful for digital twin development
    as it allows for several subscriptions to the sensor data. Also, it is considered
    to be faster than other transmission protocols [91]. On the other hand, the HTTP
    protocol uses a specific Universal Resource Identifier (URI) to send data from
    the servers to the client [92]. However, there was lack of emphasis on the technologies
    for networking, communication and transmission protocols under the data transmission
    layer as over 18 studies did not provide these details in their system architectures.
    For the digital modelling layer, most of the studies used a 3D model, mostly a
    BIM model and four studies used 3D point cloud models. Various parametric design
    software was used to generate the 3D models, with Autodesk Revit being the most
    used modelling software. Four studies imported geometric data into the Unity 3D
    software. One study used a VR environment. For the storage of digital twin data,
    studies mostly used cloud-based computing platforms that exist on the market.
    Customised plug-ins were added to the geometric software platforms for data integration
    and fusion. The Unity cross-platform by Unity technologies was the most used platform
    for data/model integration. However, most of the studies did not provide the details
    of the integration of the sensor, model and other digital twin data in the data/model
    layer. Only four studies provided some details on their data structures for the
    sensor and model data integration. Both simple and advanced data analysis techniques
    were used in the processing and analysis of data, with machine learning being
    the most applied technique for data processing. The visualisation of the data
    was done using the data/model integration platforms. Four studies used VR/AR technologies
    for visualisation and interaction with the users. The presentation of the digital
    twin data was done using 2D graphical methods mostly in form of performance dashboards,
    colour-coding and time-series graphs. 6. Research gaps and future research Through
    the analysis, some challenges and opportunities were identified in three areas
    namely 1) data transmission 2) interoperability and data integration and 3) data
    processing and visualisation, as discussed in this section. 6.1. Data transmission
    The use of wireless technology for creating the network was the most commonly
    used approach in the studies. However, the focus was on the use of short-range
    wireless technologies that included Wi-Fi, Bluetooth and UWB. The use of long-distance
    wireless transmission technologies like digital radio and satellite communication
    needs to be investigated. This is essential for the future of digital twins to
    be expanded to city digital twins, country digital twins and the worldwide scale.
    The most applied standard transmission protocols for data transfer in the studies
    were the MQTT and HTTP protocols. These two protocols are popular in IoT technologies
    [91].However, over 20 studies did not state the details of their communication
    protocols for their applications. It is also the case that the acquisition of
    digital twin data from heterogeneous systems, networks and devices increases the
    complexity of data transmission. Transmission protocols create mediums for data
    transmission using standardised formats. This is essential for achieving a two-way
    data synchronous transmission channel in a digital twin application and enabling
    machine to machine communication. Therefore, the use of standard communication
    protocols for data transmission in digital twins of varying complexity should
    be further investigated. It is the case that digital twins use a diverse range
    of data, some of which is confidential in nature to people and organisations.
    The transmission of such data is prone to cyber-attacks which can essentially
    become a security threat to people''s lives and the infrastructure that is monitored.
    Therefore, it is necessary to consider security requirements and secure transmission
    protocols for the network and communication layer. From the analysis of the studies,
    three studies considered the security and privacy aspects in their digital twin
    monitoring systems. In their proposed digital twin for management of a hospital
    facility, Peng, et al. [61] used only private HTTP APIs inside hospital firewalls
    to address the safety issues about the use of security monitoring videos and visiting
    records of patients. Shahinmoghadam, et al. [50] opted to use a marker-based registration
    method to obtain orthogonal thermal image mosaics taken by a FLIR lepton thermal
    camera instead of using visual cameras to avoid undermining the privacy-preserving
    aspect of their system. Smart contract and block chain technology were integrated
    in a digital twin prototype to increase network security and traceability of data
    [59]. Thus, the issues of privacy-preserving networks and context-aware privacy
    policies are some of the areas that need to be researched [96]. 6.2. Interoperability
    and data integration in digital twins The integration and fusion of the virtual
    model and IoT sensor data are core to the functioning of a digital twin. As indicated
    from the studies, digital twin data is diverse and is collected using different
    types of sensors resulting in heterogeneous data sets like image data, video data,
    positioning data, environmental data, mechanical data, etc. that have to be integrated
    with the BIM model. This data is obtained from disparate and heterogeneous systems
    like the BMS and Asset management system. These systems operate on different software
    platforms with different syntax and schematics. This increases the complexity
    of digital twin models creating integration and interoperability issues at both
    syntax and semantic levels. From the analysis of the studies, most of the studies
    did not provide the details pertaining to the structure of the digital twin data
    for the purpose of data integration. Only four studies provided details for the
    data architecture for integrating the various digital twin data. To integrate
    BIM and FM data, the IFC data of the AHU was mapped onto the relevant COBie and
    FM using an ontology-based strategy in GraphDB [47]. Moreover, a single Brick
    schema model describing the metadata for the AHU, its components and sensor data
    points was developed. Cheng, et al. [62] imported BIM data into COBie spreadsheets
    and then the COBie data was mapped onto the facility data in FM systems. The attribute
    names of COBie data were matched to the attribute names in the FM database table.
    Furthermore, a sensor data model was proposed and used as a basis to extend the
    the Ifcsensor entity to enable sensor entities and attributes to be visualised
    in a BIM model. An IfcObject matching table was used to describe the link between
    the BIM object Globally Unique Identifier (GUID) and corresponding item ID from
    different data sources like the BMS and sensor system [37,60]. These studies use
    semantic data modelling to enable data integration from various sources. The use
    of semantic models and ontologies [97,98] has been proposed for data integration
    and interoperability in digital twin models. Semantic modelling involves the use
    of semantic web-based methods to map data streams, active sensing data and proprietary
    relational data sets and combine them with user preferences to a dynamic structure
    of things [24]. On the other hand, ontologies provide a formal and explicit representation
    of domain concepts that can be shared [99]. Therefore, there is a need to investigate
    semantic data modelling of sensor data, BIM model data and data from other systems
    to aid in moving towards standardising digital twin data by enabling data integration
    and interoperability. The development of rich data models for various applications,
    data sets, different assets and processes is a ripe area of research. Through
    the use of web-based ontologies, the IFC schema, which is the standard format
    for interoperability within the built environment can be extended and linked to
    other domains. Semantic web technologies can help overcome the limitations of
    the IFC standard models by providing flexible methods of data integration across
    various domains and scales to facilitate interoperability among data and systems
    [100]. Therefore, the use of web-based semantic ontologies for digital twin data
    integration should be explored. 6.3. Data processing and visualisation of digital
    twin data Both simple and advanced data analysis techniques were used in the processing
    and analysis of data such as the comparison of measured values against target
    values/thresholds and machine learning respectively. The introduction of artificial
    intelligence techniques such as machine learning offers opportunities for analysing
    the heterogenous and voluminous data of the built environment. Artificial intelligence
    methods attempt to recreate the problem-solving and reasoning abilities of the
    human brain [101]. AI uses machine learning or deep learning models for reasoning
    about the real world [102]. From the analysis, machine learning was the most used
    AI technique in the studies. It involves the use of algorithms that learn from
    the data by automatically extracting patterns within a defined context [103].
    Thus, machine learning algorithms can be applied to a diverse range of functions
    to solve complex problems in the real world. The advent of digital twins in the
    construction industry has led to an increase in dynamic data which creates challenges
    in storing, and processing of this big data and situations of ‘garbage’ data.
    There is a need to explore the use of advanced technologies for storing and processing
    this smart big data as well as managing ‘garbage’ data in the digital twins. The
    use of AI techniques like machine learning and deep learning enables the automatic
    processing of large data sets into useful knowledge for various applications [104].
    Research should be conducted on developing AI models for processing big data to
    tackle various challenges in the industry. For example, expert systems for various
    functions in the different phases of a project lifecycle can be developed. Moreover,
    there is a need to consider realistic practical applications of these systems
    to improve the accuracy and intelligence levels of the applications. This will
    provide more advanced data models and richer data sets that are useful for decision-making
    in various project and asset management functions. The visualisation of the digital
    twin data involved the use of common 3D modelling software platforms and gaming
    environment platforms. There was also the use of more powerful visualisation technologies
    that include Virtual Reality [49,50] and Augmented Reality [64]. Virtual Reality
    (VR) can be defined as the simulation of 3D objects in a virtual world to enable
    real-time interactions in pseudo-natural immersion via sensorimotor channels [105]
    while Augmented Reality involves the use of an interface to overlay digital information
    onto a user''s view, which is often a camera image of the physical environment
    [106]. VR/AR technologies are capable of providing interactive and immersive experiences
    for users in various functions in the built environment [107]. This is achieved
    by the support of devices that can be stationary-based displays, head-based displays
    and hand-held displays. Within digital twin applications, the VR/AR technologies
    enable the user to visualise, engage and also control selected components in the
    physical environment as required. Therefore, future research on the use of VR/AR
    environments for digital twin applications is recommended. Another key aspect
    in the visualisation of digital twin data is the presentation of the data in meaningful
    ways to the users. From the analysis, most of the studies used 2D graphical methods
    to present the digital twin data to the users. However, this diminishes the use
    of a 3D virtual model and environment to reflect the three-dimensional world that
    humans exist in. It is therefore worth exploring alternative approaches to visualising
    temporal data in a BIM model and 3D environments. It is also the case that the
    IoT sensors for digital twins collect data on various parameters in the physical
    environment such as temperature, humidity, pressure, etc. These are abstract parameters
    that cannot be seen but can be measured. With the advanced technologies of digital
    twins, it could be possible to explore various methods of visualising such abstract
    parameters within a digital model. 7. Conclusions The concept of digital twins
    has the potential to improve performance and productivity in the construction
    industry through effective decision-making enabled by real-time condition monitoring,
    predictions, simulations and optimization of processes. The study conducts a systematic
    review of digital twin studies with demonstrative case studies or experimental
    setups to identify the current technologies used in the development of digital
    twins, the research gaps and future focus. The first contribution of the paper
    is the identification of current technologies that have been used in existing
    research literature in the five digital twin conceptual layers by [37] that include
    data acquisition, data transmission, digital modelling, data/model integration
    and services. This has provided a state of the art for the technologies in the
    development of digital twins in the existing research literature. The digital
    twins in the applications have been created using state-of-the-art and off-the-shelf
    technologies and tools that are developed independently and integrated to form
    digital twin platforms. The second contribution of the paper is the identification
    of the research gaps and potential areas for future research from a technological
    perspective. Future research is required on the technologies for data transmission
    in the application layers, interoperability and data integration and advanced
    data processing and data visualisation to generate high-performance digital twins
    with effective bi-directional data exchange capabilities, interoperable and semantic
    data/model integration, advanced data processing and enhanced visualisation and
    navigation by the users. The application of digital twins is still in its nascent
    stages within the construction industry. Most of the identified studies used small-scale
    experiments and case studies to demonstrate the application of digital twins.
    Mature practical applications from industry are missing in the research literature.
    This study was limited to the technologies of digital twins, but the successful
    implementation of digital technologies in practice requires both technological
    and organisational factors to work together. Thus, research on the organisational
    aspects of digital twin applications is recommended. This study is limited to
    the publications obtained from using the seven keywords that were used for searching
    for records in the ScienceDirect database and other additional databases that
    included Web of Science and Google Scholar. The search might have missed out on
    records that were very specific to certain aspects of the AEC industry and those
    that did not use similar keywords. It is therefore recommended to undertake the
    study in specific domains and activities of the construction industry using different
    search terms. Declaration of Competing Interest The authors declare that they
    have no known competing financial interests or personal relationships that could
    have appeared to influence the work reported in this paper. Acknowledgements Valerian
    Vanessa Tuhaise acknowledges the PhD scholarship support from the Commonwealth
    Scholarship Commission in the UK. Data availability No data was used for the research
    described in the article. References [1] M. Grieves Product lifecycle management:
    the new paradigm for enterprises International Journal of Product Development,
    2 (1–2) (2005), pp. 71-84, 10.1504/IJPD.2005.006669 View in ScopusGoogle Scholar
    [2] National Aeronautics and Space Administration Modelling, Simulation, Information
    Technology & Processing Roadmap Available at https://www.nasa.gov/pdf/501321main_TA11-MSITP-DRAFT-Nov2010-A1.pdf
    (2010) [Accessed July 25, 2022] Google Scholar [3] R. Rosen, G. Von Wichert, G.
    Lo, K.D. Bettenhausen About the importance of autonomy and digital twins for the
    future of manufacturing IFAC-PapersOnLine, 48 (3) (2015), pp. 567-572, 10.1016/j.ifacol.2015.06.141
    View PDFView articleView in ScopusGoogle Scholar [4] R. Stark, S. Kind, S. Neumeyer
    Innovations in digital modelling for next generation manufacturing system design
    CIRP Annals, 66 (1) (2017), pp. 169-172, 10.1016/j.cirp.2017.04.045 View PDFView
    articleView in ScopusGoogle Scholar [5] C. Zhuang, J. Liu, H. Xiong Digital twin-based
    smart production management and control framework for the complex product assembly
    shop-floor International Journal of Advanced Manufacturing Technology, 96 (1)
    (2018), pp. 1149-1163, 10.1007/s00170-018-1617-6 View in ScopusGoogle Scholar
    [6] B.R. Barricelli, E. Casiraghi, D. Fogli A survey on digital twin: definitions,
    characteristics, applications, and design implications IEEE Access, 7 (2019),
    pp. 167653-167671, 10.1109/ACCESS.2019.2953499 Google Scholar [7] Y. Al-Saeed,
    D.J. Edwards, S. Scaysbrook Automating construction manufacturing procedures using
    BIM digital objects (BDOs) Construction Innovation (2020), 10.1108/CI-12-2019-0141
    Google Scholar [8] S. Kaewunruen, S. Peng, O. Phil-Ebosie Digital twin aided sustainability
    and vulnerability audit for subway stations Sustainability, 12 (19) (2020), p.
    7873, 10.3390/su12197873 View in ScopusGoogle Scholar [9] S.M.E. Sepasgozar Differentiating
    digital twin from digital shadow: elucidating a paradigm shift to expedite a smart,
    sustainable built environment Buildings, 11 (4) (2021), p. 151, 10.3390/buildings11040151
    View in ScopusGoogle Scholar [10] HM Government Digital Built Britain Level 3
    Building Information Modelling - Strategic Plan Available at https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/410096/bis-15-155-digital-built-britain-level-3-strategy.pdf
    (2015) [Accessed 01.08.2022] Google Scholar [11] T. Cerovsek A review and outlook
    for a ‘building information model’(BIM): a multi-standpoint framework for technological
    development Advanced Engineering Informatics, 25 (2) (2011), pp. 224-244, 10.1016/j.aei.2010.06.003
    View PDFView articleView in ScopusGoogle Scholar [12] C.M. Eastman, C. Eastman,
    P. Teicholz, R. Sacks, K. Liston BIM Handbook: A Guide to Building Information
    Modeling for Owners, Managers, Designers, Engineers and Contractors John Wiley
    & Sons (2011) 0470541377 Google Scholar [13] U. Çelik 4D and 5D BIM: A System
    for Automation of Planning and Integrated Cost Management, Eurasian BIM Forum
    Springer (2019), pp. 57-69, 10.1007/978-3-030-42852-5_5 View in ScopusGoogle Scholar
    [14] A. Jrade, J. Lessard An integrated BIM system to track the time and cost
    of construction projects: a case study Journal of Construction Engineering, 2015
    (2015), pp. 1-10, 10.1155/2015/579486 Google Scholar [15] M. Brunet, A. Motamedi,
    L.M. Guenette, D. Forgues Analysis of BIM use for asset management in three public
    organizations in Quebec, Canada Built Environment Project and Asset Management,
    9 (1) (2019), pp. 153-167, 10.1108/bepam-02-2018-0046 View in ScopusGoogle Scholar
    [16] X. Xu, L. Ma, L. Ding A framework for BIM-enabled life-cycle information
    management of construction project International Journal of Advanced Robotic Systems,
    11 (8) (2014), p. 126, 10.5772/58445 Google Scholar [17] S. Tang, D.R. Shelden,
    C.M. Eastman, P. Pishdad-Bozorgi, X. Gao A review of building information modeling
    (BIM) and the internet of things (IoT) devices integration: present status and
    future trends Automation in Construction, 101 (2019), pp. 127-139, 10.1016/j.autcon.2019.01.020
    View PDFView articleView in ScopusGoogle Scholar [18] A. Khudhair, H. Li, G. Ren,
    S. Liu Towards future BIM technology innovations: a bibliometric analysis of the
    literature Applied Sciences, 11 (3) (2021), p. 1232, 10.3390/app11031232 Google
    Scholar [19] C. Boje, A. Guerriero, S. Kubicki, Y. Rezgui Towards a semantic construction
    digital twin: directions for future research Automation in Construction, 114 (2020),
    Article 103179, 10.1016/j.autcon.2020.103179 View PDFView articleView in ScopusGoogle
    Scholar [20] F. Jiang, L. Ma, T. Broyd, K. Chen Digital twin and its implementations
    in the civil engineering sector Automation in Construction, 130 (2021), Article
    103838, 10.1016/j.autcon.2021.103838 View PDFView articleView in ScopusGoogle
    Scholar [21] D.-G.J. Opoku, S. Perera, R. Osei-Kyei, M. Rashidi Digital twin application
    in the construction industry: a literature review Journal of Building Engineering,
    40 (2021), Article 102726, 10.1016/j.jobe.2021.102726 View PDFView articleView
    in ScopusGoogle Scholar [22] M. Deng, C.C. Menassa, V.R. Kamat From BIM to digital
    twins: a systematic review of the evolution of intelligent building representations
    in the AEC-FM industry Journal of Information Technology in Construction, 26 (2021),
    pp. 58-83, 10.36680/j.itcon.2021.005 View in ScopusGoogle Scholar [23] G.B. Ozturk
    Digital twin research in the AECO-FM industry Journal of Building Engineering,
    40 (2021), Article 102730, 10.1016/j.jobe.2021.102730 View PDFView articleView
    in ScopusGoogle Scholar [24] Q. Qi, F. Tao, T. Hu, N. Anwer, A. Liu, Y. Wei, L.
    Wang, A. Nee Enabling technologies and tools for digital twin Journal of Manufacturing
    Systems, 58 (2021), pp. 3-21, 10.1016/j.autcon.2020.103179 View PDFView articleView
    in ScopusGoogle Scholar [25] D. Jones, C. Snider, A. Nassehi, J. Yon, B. Hicks
    Characterising the digital twin: a systematic literature review CIRP Journal of
    Manufacturing Science and Technology, 29 (2020), pp. 36-52, 10.1016/j.cirpj.2020.02.002
    View PDFView articleView in ScopusGoogle Scholar [26] A. Rasheed, O. San, T. Kvamsdal
    Digital twin: values, challenges and enablers from a modeling perspective IEEE
    Access, 8 (2020), pp. 21980-22012, 10.1109/ACCESS.2020.2970143 View in ScopusGoogle
    Scholar [27] A. Marefat, H. Toosi, R. Mahmoudi Hasankhanlo A BIM approach for
    construction safety: applications, barriers and solutions Engineering Construction
    and Architectural Management, 26 (9) (2019), pp. 1855-1877, 10.1108/ECAM-01-2017-0011
    View in ScopusGoogle Scholar [28] T.O. Olawumi, D.W.M. Chan, J.K.W. Wong, A.P.C.
    Chan Barriers to the integration of BIM and sustainability practices in construction
    projects: a Delphi survey of international experts Journal of Building Engineering,
    20 (2018), pp. 60-71, 10.1016/j.jobe.2018.06.017 View PDFView articleView in ScopusGoogle
    Scholar [29] A. Al-Yami, M.O. Sanni-Anibire BIM in the Saudi Arabian construction
    industry: state of the art, benefit and barriers International Journal of Building
    Pathology and Adaptation, 39 (1) (2021), pp. 33-47, 10.1108/IJBPA-08-2018-0065
    View in ScopusGoogle Scholar [30] X. Zhao, P. Wu, X. Wang Risk paths in BIM adoption:
    empirical study of China Engineering Construction and Architectural Management,
    25 (9) (2018), pp. 1170-1187, 10.1108/ECAM-08-2017-0169 View in ScopusGoogle Scholar
    [31] U. Farooq, S.K.U. Rehman, M.F. Javed, M. Jameel, F. Aslam, R. Alyousef Investigating
    BIM implementation barriers and issues in Pakistan using ISM approach Applied
    Sciences, 10 (20) (2020), p. 7250, 10.3390/app10207250 Google Scholar [32] S.
    Vass, T.K. Gustavsson Challenges when implementing BIM for industry change Construction
    Management and Economics, 35 (10) (2017), pp. 597-610, 10.1080/01446193.2017.1314519
    View in ScopusGoogle Scholar [33] H. Lindblad Black boxing BIM: the public client’s
    strategy in BIM implementation Construction Management and Economics, 37 (1) (2019),
    pp. 1-12, 10.1080/01446193.2018.1472385 View in ScopusGoogle Scholar [34] M. Macchi,
    I. Roda, E. Negri, L. Fumagalli Exploring the role of digital twin for asset lifecycle
    management IFAC-PapersOnLine, 51 (11) (2018), pp. 790-795, 10.1016/j.ifacol.2018.08.415
    View PDFView articleView in ScopusGoogle Scholar [35] M.J. Kaur, V.P. Mishra,
    P. Maheshwari The convergence of digital twin, IoT, and machine learning: Transforming
    data into action M. Farsi, A. Daneshkhah, A. Hosseinian-Far, H. Jahankhani (Eds.),
    Digital Twin Technologies and Smart Cities, Springer Cham (2020) pp. 3-17, 978-3-030-18732-3
    Google Scholar [36] Q. Qi, F. Tao Digital twin and big data towards smart manufacturing
    and industry 4.0: 360 degree comparison IEEE Access, 6 (2018), pp. 3585-3593,
    10.1109/ACCESS.2018.2793265 View in ScopusGoogle Scholar [37] Q. Lu, A.K. Parlikad,
    P. Woodall, G. Don Ranasinghe, X. Xie, Z. Liang, E. Konstantinou, J. Heaton, J.
    Schooling Developing a digital twin at building and city levels: case study of
    West Cambridge campus Journal of Management in Engineering, 36 (3) (2020), p.
    05020004, 10.1061/(asce)me.1943-5479.0000763 View in ScopusGoogle Scholar [38]
    A. Fink . Conducting research literature reviews: From the internet to paper,
    45, Sage publications, Thousand Oaks, California (2014) 978-1-4522-5949-9 Google
    Scholar [39] B. Kitchenham, O. Pearl Brereton, D. Budgen, M. Turner, J. Bailey,
    S. Linkman Systematic literature reviews in software engineering – a systematic
    literature review Information and Software Technology, 51 (1) (2009), pp. 7-15,
    10.1016/j.infsof.2008.09.009 View PDFView articleView in ScopusGoogle Scholar
    [40] A. Liberati, D.G. Altman, J. Tetzlaff, C. Mulrow, P.C. Gøtzsche, J.P.A. Ioannidis,
    M. Clarke, P.J. Devereaux, J. Kleijnen, D. Moher The PRISMA statement for reporting
    systematic reviews and meta-analyses of studies that evaluate health care interventions:
    explanation and elaboration Journal of Clinical Epidemiology, 62 (10) (2009),
    pp. e1-e34, 10.1016/j.jclinepi.2009.06.006 View PDFView articleView in ScopusGoogle
    Scholar [41] M. Gusenbauer, N.R. Haddaway Which academic search systems are suitable
    for systematic reviews or meta-analyses? Evaluating retrieval qualities of Google
    Scholar, PubMed, and 26 other resources Research Synthesis Methods, 11 (2) (2020),
    pp. 181-217, 10.1002/jrsm.1378 View in ScopusGoogle Scholar [42] M. Pregnolato,
    S. Gunner, E. Voyagaki, R. De Risi, N. Carhart, G. Gavriel, P. Tully, T. Tryfonas,
    J. Macdonald, C. Taylor Towards civil engineering 4.0: concept, workflow and application
    of digital twins for existing infrastructure Automation in Construction, 141 (2022),
    Article 104421, 10.1016/j.autcon.2022.104421 View PDFView articleView in ScopusGoogle
    Scholar [43] Y. Tan, P. Chen, W. Shou, A.-M. Sadick Digital twin-driven approach
    to improving energy efficiency of indoor lighting based on computer vision and
    dynamic BIM Energy and Buildings, 270 (2022), Article 112271, 10.1016/j.enbuild.2022.112271
    View PDFView articleView in ScopusGoogle Scholar [44] D.I. Borissova, V.K. Danev,
    M.B. Rashevski, I.G. Garvanov, R.D. Yoshinov, M.Z. Garvanova Using IoT for automated
    heating of a smart home by means of OpenHAB software platform IFAC-PapersOnLine,
    55 (11) (2022), pp. 90-95, 10.1016/j.ifacol.2022.08.054 View PDFView articleView
    in ScopusGoogle Scholar [45] Y. Jiang, M. Li, M. Li, X. Liu, R.Y. Zhong, W. Pan,
    G.Q. Huang Digital twin-enabled real-time synchronization for planning, scheduling,
    and execution in precast on-site assembly Automation in Construction, 141 (2022),
    Article 104397, 10.1016/j.autcon.2022.104397 View PDFView articleView in ScopusGoogle
    Scholar [46] T. Han, T. Ma, Z. Fang, Y. Zhang, C. Han A BIM-IoT and intelligent
    compaction integrated framework for advanced road compaction quality monitoring
    and management Computers and Electrical Engineering, 100 (2022), Article 107981,
    10.1016/j.compeleceng.2022.107981 View PDFView articleView in ScopusGoogle Scholar
    [47] H.H. Hosamo, P.R. Svennevig, K. Svidt, D. Han, H.K. Nielsen A digital twin
    predictive maintenance framework of air handling units based on automatic fault
    detection and diagnostics Energy and Buildings, 261 (2022), Article 111988, 10.1016/j.enbuild.2022.111988
    View PDFView articleView in ScopusGoogle Scholar [48] Y. Jiang, M. Li, D. Guo,
    W. Wu, R.Y. Zhong, G.Q. Huang Digital twin-enabled smart modular integrated construction
    system for on-site assembly Computers in Industry, 136 (2022), Article 103594,
    10.1016/j.compind.2021.103594 View PDFView articleView in ScopusGoogle Scholar
    [49] S.M. Hasan, K. Lee, D. Moon, S. Kwon, S. Jinwoo, S. Lee Augmented reality
    and digital twin system for interaction with construction machinery Journal of
    Asian Architecture and Building Engineering, 21 (2) (2022), pp. 564-574, 10.1080/13467581.2020.1869557
    View in ScopusGoogle Scholar [50] M. Shahinmoghadam, W. Natephra, A. Motamedi
    BIM- and IoT-based virtual reality tool for real-time thermal comfort assessment
    in building enclosures Building and Environment, 199 (2021), Article 107905, 10.1016/j.buildenv.2021.107905
    View PDFView articleView in ScopusGoogle Scholar [51] L.C. Tagliabue, F.R. Cecconi,
    S. Rinaldi, A.L.C. Ciribini Data driven indoor air quality prediction in educational
    facilities based on IoT network Energy and Buildings, 236 (2021), p. 110782, 10.1016/j.enbuild.2021.110782
    View PDFView articleView in ScopusGoogle Scholar [52] V. Villa, B. Naticchia,
    G. Bruno, K. Aliev, P. Piantanida, D. Antonelli IoT open-source architecture for
    the maintenance of building facilities Applied Sciences, 11 (12) (2021), p. 5374,
    10.3390/app11125374 View in ScopusGoogle Scholar [53] Y. Pan, L. Zhang A BIM-data
    mining integrated digital twin framework for advanced project management Automation
    in Construction, 124 (2021), Article 103564, 10.1016/j.autcon.2021.103564 View
    PDFView articleView in ScopusGoogle Scholar [54] D. Lee, S.H. Lee, N. Masoud,
    M.S. Krishnan, V.C. Li Integrated digital twin and blockchain framework to support
    accountable information sharing in construction projects Automation in Construction,
    127 (2021), Article 103688, 10.1016/j.autcon.2021.103688 View PDFView articleView
    in ScopusGoogle Scholar [55] Z. Liu, X. Meng, Z. Xing, A. Jiang Digital twin-based
    safety risk coupling of prefabricated building hoisting Sensors, 21 (11) (2021),
    p. 3583, 10.3390/s21113583 View in ScopusGoogle Scholar [56] Z. Liu, G. Shi, Z.
    Jiao, L. Zhao Intelligent safety assessment of prestressed steel structures based
    on digital twins Symmetry, 13 (10) (2021), p. 1927, 10.3390/sym13101927 View in
    ScopusGoogle Scholar [57] S. Meža, A. Mauko Pranjić, R. Vezočnik, I. Osmokrović,
    S. Lenart Digital twins and road construction using secondary raw materials Journal
    of Advanced Transportation, 2021 (2021), pp. 1-12, 10.1155/2021/8833058 Google
    Scholar [58] D. Lee, S. Lee Digital twin for supply chain coordination in modular
    construction Applied Sciences, 11 (13) (2021), p. 5909, 10.3390/app11135909 View
    in ScopusGoogle Scholar [59] E. Seghezzi, M. Locatelli, L. Pellegrini, G. Pattini,
    G.M. Di Giuda, L.C. Tagliabue, G. Boella Towards an occupancy-oriented digital
    twin for facility management: test campaign and sensors assessment Applied Sciences,
    11 (7) (2021), p. 3108, 10.3390/app11073108 View in ScopusGoogle Scholar [60]
    Q. Lu, X. Xie, A.K. Parlikad, J.M. Schooling Digital twin-enabled anomaly detection
    for built asset monitoring in operation and maintenance Automation in Construction,
    118 (2020), Article 103277, 10.1016/j.autcon.2020.103277 View PDFView articleView
    in ScopusGoogle Scholar [61] Y. Peng, M. Zhang, F. Yu, J. Xu, S. Gao Digital twin
    hospital buildings: an exemplary case study through continuous lifecycle integration
    Advances in Civil Engineering, 2020 (2020), pp. 1-13, 10.1155/2020/8846667 View
    in ScopusGoogle Scholar [62] J.C. Cheng, W. Chen, K. Chen, Q. Wang Data-driven
    predictive maintenance planning framework for MEP components based on BIM and
    IoT using machine learning algorithms Automation in Construction, 112 (2020),
    p. 103087, 10.1016/j.autcon.2020.103087 View PDFView articleView in ScopusGoogle
    Scholar [63] W. Jiang, L. Ding, C. Zhou Cyber physical system for safety management
    in smart construction site Engineering Construction and Architectural Management,
    28 (2020), pp. 788-808, 10.1108/ECAM-10-2019-0578 Google Scholar [64] X. Xie,
    Q. Lu, D. Rodenas-Herraiz, A.K. Parlikad, J.M. Schooling Visualised inspection
    system for monitoring environmental anomalies during daily operation and maintenance
    Engineering Construction and Architectural Management, 27 (2020), pp. 1835-1852,
    10.1108/ECAM-11-2019-0640 View in ScopusGoogle Scholar [65] A.A. Akanmu, J. Olayiwola,
    O. Ogunseiju, D. McFeeters Cyber-physical postural training system for construction
    workers Automation in Construction, 117 (2020), Article 103272, 10.1016/j.autcon.2020.103272
    View PDFView articleView in ScopusGoogle Scholar [66] J. Böke, U. Knaack, M. Hemmerling
    Prototype of a cyber-physical façade system Journal of Building Engineering, 31
    (2020), Article 101397, 10.1016/j.jobe.2020.101397 View PDFView articleView in
    ScopusGoogle Scholar [67] X. Wang, C. Liang, C. Menassa, V. Kamat Real-time process-level
    digital twin for collaborative human-robot construction work 37th International
    Symposium on Automation and Robotics in Construction (IAARC 2020) (2020), pp.
    1528-1535 https://par.nsf.gov/servlets/purl/10282925 View in ScopusGoogle Scholar
    [68] L. Messi, B. Naticchia, A. Carbonari, L. Ridolfi, G.M. Di Giuda Development
    of a Digital Twin Model for Real-Time Assessment of Collision Hazards, Creative
    Construction e-Conference 2020 Budapest University of Technology and Economics
    (2020), pp. 14-19, 10.3311/CCC2020-003 Google Scholar [69] C. Zhou, H. Luo, W.
    Fang, R. Wei, L. Ding Cyber-physical-system-based safety monitoring for blind
    hoisting with the internet of things: a case study Automation in Construction,
    97 (2019), pp. 138-150, 10.1016/j.autcon.2018.10.017 View PDFView articleView
    in ScopusGoogle Scholar [70] W. Wang, T. Hong, N. Li, R.Q. Wang, J. Chen Linking
    energy-cyber-physical systems with occupancy prediction and interpretation through
    WiFi probe-based ensemble classification Applied Energy, 236 (2019), pp. 55-69,
    10.1016/j.apenergy.2018.11.079 View PDFView articleGoogle Scholar [71] M. Antonino,
    M. Nicola, D.M. Claudio, B. Luciano, R.C. Fulvio Office building occupancy monitoring
    through image recognition sensors International Journal of Safety and Security
    Engineering, 9 (4) (2019), pp. 371-380, 10.2495/SAFE-V9-N4-371-380 View in ScopusGoogle
    Scholar [72] S. Khajavi, N. Hossein Motlagh, A. Jaribion, L. Werner, J. Holmström
    Digital twin: vision, benefits, boundaries, and creation for buildings IEEE Access,
    7 (2019), pp. 147406-147419, 10.1109/ACCESS.2019.2946515 View in ScopusGoogle
    Scholar [73] K.M. Rashid, J. Louis, K.K. Fiawoyife Wireless electric appliance
    control for smart buildings using indoor location tracking and BIM-based virtual
    environments Automation in Construction, 101 (2019), pp. 48-58, 10.1016/j.autcon.2019.01.005
    View PDFView articleView in ScopusGoogle Scholar [74] C.Z. Li, F. Xue, X. Li,
    J. Hong, G.Q. Shen An internet of things-enabled BIM platform for on-site assembly
    services in prefabricated construction Automation in Construction, 89 (2018),
    pp. 146-161, 10.1016/j.autcon.2018.01.001 View PDFView articleView in ScopusGoogle
    Scholar [75] K.-M. Chang, R.-J. Dzeng, Y.-J. Wu An automated IoT visualization
    BIM platform for decision support in facilities management Applied Sciences, 8
    (7) (2018), p. 1086, 10.3390/app8071086 View in ScopusGoogle Scholar [76] K. Kang,
    J. Lin, J. Zhang BIM-and IoT-based monitoring framework for building performance
    management Journal of Structural Integrity and Maintenance, 3 (4) (2018), pp.
    254-261, 10.1080/24705314.2018.1536318 View in ScopusGoogle Scholar [77] M.-Y.
    Cheng, K.-C. Chiu, Y.-M. Hsieh, I.-T. Yang, J.-S. Chou, Y.-W. Wu BIM integrated
    smart monitoring technique for building fire prevention and disaster relief Automation
    in Construction, 84 (2017), pp. 14-30, 10.1016/j.autcon.2017.08.027 View PDFView
    articleView in ScopusGoogle Scholar [78] X. Yuan, C.J. Anumba, M.K. Parfitt Cyber-physical
    systems for temporary structure monitoring Automation in Construction, 66 (2016),
    pp. 1-14, 10.1016/j.autcon.2016.02.005 View PDFView articleView in ScopusGoogle
    Scholar [79] L. Atzori, A. Iera, G. Morabito The internet of things: a survey
    Computer Networks, 54 (15) (2010), pp. 2787-2805, 10.1016/j.comnet.2010.05.010
    View PDFView articleView in ScopusGoogle Scholar [80] M. Jia, A. Komeily, Y. Wang,
    R.S. Srinivasan Adopting internet of things for the development of smart buildings:
    a review of enabling technologies and applications Automation in Construction,
    101 (2019), pp. 111-126, 10.1016/j.autcon.2019.01.023 View PDFView articleView
    in ScopusGoogle Scholar [81] A.S. Rao, M. Radanovic, Y. Liu, S. Hu, Y. Fang, K.
    Khoshelham, M. Palaniswami, T. Ngo Real-time monitoring of construction sites:
    sensors, methods, and applications Automation in Construction, 136 (2022), Article
    104099, 10.1016/j.autcon.2021.104099 View PDFView articleView in ScopusGoogle
    Scholar [82] J. Teizer, H. Neve, H. Li, S. Wandahl, J. König, B. Ochner, M. König,
    J. Lerche Construction resource efficiency improvement by long range wide area
    network tracking and monitoring Automation in Construction, 116 (2020), Article
    103245, 10.1016/j.autcon.2020.103245 View PDFView articleView in ScopusGoogle
    Scholar [83] H. Li, G. Chan, J.K.W. Wong, M. Skitmore Real-time locating systems
    applications in construction Automation in Construction, 63 (2016), pp. 37-47,
    10.1016/j.autcon.2015.12.001 View PDFView articleView in ScopusGoogle Scholar
    [84] T. Omar, M.L. Nehdi Data acquisition technologies for construction progress
    tracking Automation in Construction, 70 (2016), pp. 143-155, 10.1016/j.autcon.2016.06.016
    View PDFView articleView in ScopusGoogle Scholar [85] M. Abdulkarem, K. Samsudin,
    F.Z. Rokhani, M.F.A. Rasid Wireless sensor network for structural health monitoring:
    a contemporary review of technologies, challenges, and future direction Structural
    Health Monitoring, 19 (3) (2020), pp. 693-735, 10.1177/1475921719854528 View in
    ScopusGoogle Scholar [86] M.J. McGrath, C.N. Scanaill Key Sensor Technology Components:
    Hardware and Software Overview, Sensor Technologies ApressOpen (2013) pp. 51-77,
    978-1-4302-6014-1 Google Scholar [87] M.S. BenSaleh, R. Saida, Y.H. Kacem, M.
    Abid Wireless sensor network design methodologies: a survey Journal of Sensors,
    2020 (2020), pp. 1-13, 10.1155/2020/9592836 Google Scholar [88] I.F. Akyildiz,
    W. Su, Y. Sankarasubramaniam, E. Cayirci Wireless sensor networks: a survey Computer
    Networks, 38 (4) (2002), pp. 393-422, 10.1016/S1389-1286(01)00302-4 View PDFView
    articleView in ScopusGoogle Scholar [89] L. Yong-Min, W. Shu-Ci, N. Xiao-Hong
    The architecture and characteristics of wireless sensor network 2009 International
    Conference on Computer Technology and Development, vol. 1, IEEE (2009), pp. 561-565,
    10.1109/ICCTD.2009.44 Google Scholar [90] T.M. Tukade, R. Banakar Data transfer
    protocols in IoT-an overview International Journal of Pure and Applied Mathematics,
    118 (2018), pp. 121-138 https://www.researchgate.net/profile/Tanya-Mohan-Tukade-2/publication/324152744_Data_transfer_protocols_in_IoT-an_overview/links/5c64aae1a6fdccb608c11148/Data-transfer-protocols-in-IoT-an-overview.pdf
    Google Scholar [91] X. Liu, T. Zhang, N. Hu, P. Zhang, Y. Zhang The method of
    internet of things access and network communication based on MQTT Computer Communications,
    153 (2020), pp. 169-176, 10.1016/j.comcom.2020.01.044 View PDFView articleGoogle
    Scholar [92] N. Naik Choice of effective messaging protocols for IoT systems:
    MQTT, CoAP, AMQP and HTTP 2017 IEEE international systems engineering symposium
    (ISSE), IEEE (2017), pp. 1-7, 10.1109/SysEng.2017.8088251 Google Scholar [93]
    M. Xue, C. Zhu The socket programming and software design for communication based
    on client/server 2009 Pacific-Asia Conference on Circuits, Communications and
    Systems, IEEE (2009), pp. 775-777, 10.1109/PACCS.2009.89 View in ScopusGoogle
    Scholar [94] H.J. Bhatti, B.B. Rad Databases in cloud computing: a literature
    review International Journal of Information Technology and Computer Science, 9
    (4) (2017), pp. 9-17, 10.5815/ijitcs.2017.04.02 Google Scholar [95] S.J. Rusell,
    P. Norvig Artificial Intelligence: A Modern Approach (3 ed), Pearson Education,
    Inc, Prentice Hall Upper Saddle River; New Jersey, USA (2010) 1-29, 978-0-13-6044259-4
    Google Scholar [96] S. Hameed, F.I. Khan, B. Hameed Understanding security requirements
    and challenges in internet of things (IoT): a review Journal of Computer Networks
    and Communications, 2019 (2019), pp. 1-14, 10.1155/2019/9629381 Google Scholar
    [97] M. Garetti, L. Fumagalli, E. Negri Role of ontologies for CPS implementation
    in manufacturing Management and Production Engineering Review, 6 (4) (2015), pp.
    26-32, 10.1515/mper-2015-0033 View in ScopusGoogle Scholar [98] E. Negri, L. Fumagalli,
    M. Garetti, L. Tanca Requirements and languages for the semantic representation
    of manufacturing systems Computers in Industry, 81 (2016), pp. 55-66, 10.1016/j.compind.2015.10.009
    View PDFView articleView in ScopusGoogle Scholar [99] T.R. Gruber A translation
    approach to portable ontology specifications Knowledge Acquisition, 5 (2) (1993),
    pp. 199-220, 10.1006/knac.1993.1008 View PDFView articleView in ScopusGoogle Scholar
    [100] P. Pauwels, M. Poveda-Villalón, Á. Sicilia, J. Euzenat Semantic technologies
    and interoperability in the built environment Semantic Web, 9 (2018), pp. 731-734,
    10.3233/SW-180321 View in ScopusGoogle Scholar [101] R.A. Brooks Intelligence
    without representation Artificial Intelligence, 47 (1) (1991), pp. 139-159, 10.1016/0004-3702(91)90053-M
    View PDFView articleView in ScopusGoogle Scholar [102] A. Zabin, V.A. González,
    Y. Zou, R. Amor Applications of machine learning to BIM: a systematic literature
    review Advanced Engineering Informatics, 51 (2022), Article 101474, 10.1016/j.aei.2021.101474
    View PDFView articleView in ScopusGoogle Scholar [103] T.M. Mitchell Machine Learning
    McGraw-Hill, NewYork, USA (1997) 0–07–042807-7 Google Scholar [104] T. Hong, Z.
    Wang, X. Luo, W. Zhang State-of-the-art on research and applications of machine
    learning in the building life cycle Energy and Buildings, 212 (2020), Article
    109831, 10.1016/j.enbuild.2020.109831 View PDFView articleView in ScopusGoogle
    Scholar [105] P. Fuchs, G. Moreau, P. Guitton Virtual Reality: Concepts and Technologies
    (Illustrated ed.), CRC Press (2011) 3-10, 978-0-203-80295-3 Google Scholar [106]
    R.T. Azuma A survey of augmented reality Presence Teleoperators and Virtual Environments,
    6 (4) (1997), pp. 355-385, 10.1162/pres.1997.6.4.355 View in ScopusGoogle Scholar
    [107] Y. Zhang, H. Liu, S.-C. Kang, M. Al-Hussein Virtual reality applications
    for the built environment: research trends and opportunities Automation in Construction,
    118 (2020), Article 103311, 10.1016/j.autcon.2020.103311 View PDFView articleView
    in ScopusGoogle Scholar Cited by (20) Feeling-BIM: A digital model to support
    maintenance decisions, based on automatic inspection and dwellers’ feelings 2024,
    Journal of Building Engineering Show abstract Digital twins in the built environment:
    Definition, applications, and challenges 2024, Automation in Construction Show
    abstract Virtual testbed for development and evaluation of power system digital
    twins and their applications 2024, Sustainable Energy, Grids and Networks Show
    abstract AIoT-enabled digital twin system for smart tunnel fire safety management
    2024, Developments in the Built Environment Show abstract Digital twin for intelligent
    tunnel construction 2024, Automation in Construction Show abstract Automated vision-based
    construction progress monitoring in built environment through digital twin 2023,
    Developments in the Built Environment Show abstract View all citing articles on
    Scopus © 2023 The Authors. Published by Elsevier B.V. Recommended articles Work
    estimation of construction workers for productivity monitoring using kinematic
    data and deep learning Automation in Construction, Volume 152, 2023, Article 104932
    Emil L. Jacobsen, …, Søren Wandahl View PDF Component-based robot prefabricated
    construction simulation using IFC-based building information models Automation
    in Construction, Volume 152, 2023, Article 104899 Aiyu Zhu, …, Bauke De Vries
    View PDF Knowledge map and forecast of digital twin in the construction industry:
    State-of-the-art review using scientometric analysis Journal of Cleaner Production,
    Volume 383, 2023, Article 135231 Haiyan Xie, …, Jiayue Xu View PDF Show 3 more
    articles Article Metrics Citations Citation Indexes: 13 Captures Readers: 194
    View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Automation in Construction
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Technologies for digital twin applications in construction
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Wang T.
  - Liang Y.
  - Shen X.
  - Zheng X.
  - Mahmood A.
  - Sheng Q.Z.
  citation_count: '15'
  description: 'Sensor-cloud originates from extensive recent applications of wireless
    sensor networks and cloud computing. To draw a roadmap of the current research
    activities of the sensor-cloud community, we first investigate the state-of-the-art
    sensor-cloud literature reviews published since the late 2010s and discovered
    that these surveys have primarily studied the sensor-cloud in specific aspects,
    security-enabled solutions, efficient management mechanisms, and architectural
    challenges. While the existing surveys have reviewed the sensor-cloud from various
    perspectives, they are inadequate for the three key issues that require urgent
    attention in the sensor-cloud: reliability, energy, and heterogeneity. To fill
    this gap, we perform a thorough survey by examining the origins of the sensor-cloud
    and providing an in-depth and comprehensive discussion of these three key challenges.
    We summarize initial designs of the new edge-based schemes to address these challenges
    and identify several open issues and promising future research directions.'
  doi: 10.1145/3582270
  full_citation: '>'
  full_text: '>

    "This website uses cookies We occasionally run membership recruitment campaigns
    on social media channels and use cookies to track post-clicks. We also share information
    about your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Use the check boxes below to
    choose the types of cookies you consent to have stored on your device. Use necessary
    cookies only Allow selected cookies Allow all cookies Necessary Preferences Statistics
    Marketing Show details       skip to main content University of Nebraska Lincoln
    Browse About Sign in Register Journals Magazines Proceedings Books SIGs Conferences
    People Search ACM Digital Library Advanced Search Journal Home Just Accepted Latest
    Issue Archive Authors Editors Reviewers About Contact Us HomeACM JournalsACM Computing
    SurveysVol. 55, No. 13sEdge Computing and Sensor-Cloud: Overview, Solutions, and
    Directions SURVEY SHARE ON Edge Computing and Sensor-Cloud: Overview, Solutions,
    and Directions Authors: Tian Wang , Yuzhu Liang , Xuewei Shen , Xi Zheng , + 2
    Authors Info & Claims ACM Computing SurveysVolume 55Issue 13sArticle No.: 281pp
    1–37https://doi.org/10.1145/3582270 Published:13 July 2023Publication History
    3 citation 1,168 Downloads eReaderPDF ACM Computing Surveys Volume 55, Issue 13s
    Previous Next Abstract 1 INTRODUCTION 2 SENSOR-CLOUD BACKGROUND 3 SENSOR-CLOUD
    ARCHITECTURE 4 RESEARCH CHALLENGES 5 LEVERAGING THE EDGE COMPUTING FOR A SENSOR-CLOUD
    AND ITS FUTURE DIRECTIONS 6 CONCLUSION REFERENCES Cited By Index Terms Recommendations
    Comments Skip Abstract Section Abstract Sensor-cloud originates from extensive
    recent applications of wireless sensor networks and cloud computing. To draw a
    roadmap of the current research activities of the sensor-cloud community, we first
    investigate the state-of-the-art sensor-cloud literature reviews published since
    the late 2010s and discovered that these surveys have primarily studied the sensor-cloud
    in specific aspects, security-enabled solutions, efficient management mechanisms,
    and architectural challenges. While the existing surveys have reviewed the sensor-cloud
    from various perspectives, they are inadequate for the three key issues that require
    urgent attention in the sensor-cloud: reliability, energy, and heterogeneity.
    To fill this gap, we perform a thorough survey by examining the origins of the
    sensor-cloud and providing an in-depth and comprehensive discussion of these three
    key challenges. We summarize initial designs of the new edge-based schemes to
    address these challenges and identify several open issues and promising future
    research directions. Skip 1INTRODUCTION Section 1 INTRODUCTION Wireless sensor
    networks (WSNs) are able to gather and integrate information into the physical
    world [1]. Meanwhile, sensor data and services have become more and more dependent
    on the cloud [2]. Therefore, in recent years, sensor-cloud infrastructure is becoming
    popular as it can provide an open, flexible, and reconfigurable platform for multiple
    applications [3, 4]. Such applications are closely related to every aspect of
    our daily life, including but not limited to, intelligent transportation, smart
    agriculture, and smart cities [5, 6]. There have been a few state-of-the-art surveys
    covering specific aspects of sensor-cloud systems published since 2017. To identify
    the position of our survey, we summarize the publication years, gap analysis,
    and other metadata of these surveys in Table 1. Specifically, for the column,
    “Involve one of the three key issues,” few implies that less than 30% of the reviewed
    works involve one of the three key challenges, a few means that more than 30%
    but less than 60% of the reviewed works involve one of the three key challenges,
    many suggests that more than 60% of the reviewed works involve one of the three
    key challenges, and all denotes that all of the reviewed works involve one of
    the three key challenges. In addition, these surveys can be classified into four
    groups. In Group 1, sensor-cloud security issues are the primary focus. In Group
    2, efficient management methods are reviewed. Group 3 includes the works pertinent
    to the sensor-cloud architecture, whereas an overview of the sensor-cloud is summarized
    in Group 4. Table 1. Group Ref. Year Edge assisted Involve one of the three key
    issues Gap analysis Group 1 [7] 2019 × a few Ignore security issues in hardware
    layer. [8] 2020 × a few Ignore security issues in transport layer. [9] 2020 ×
    a few Lack of investigating the edge-based solutions. Show More Table 1. Summary
    of the State-of-the-art Published Surveys For sensor-cloud security, Dwivedi et
    al. presented a survey that focused on some of the major security attacks [7].
    Geetha et al. analyzed the integrated security issues of the existing technologies
    [8]. Almolhis et al. introduced some new classes of the security and privacy issues
    and presented security issues in the integrated Internet of Things (IoT)–cloud
    systems [9]. These studies mainly investigate security issues in the sensor-cloud
    from a single perspective, e.g., security attacks or integrated security issues,
    and do not provide a comprehensive review of various aspects of security issues,
    e.g., from a hardware layer, network layer, and transport layer perspective. In
    addition, the above surveys did not deliberate on edge computing as a promising
    solution for the sensor-cloud security with better performance, higher efficiency,
    and more robustness [20, 21]. It is, therefore, indispensable to summarize the
    latest literature to review the field of edge-based solutions. For efficient management
    in the sensor-cloud, Khan et al. presented a survey on energy-efficient data transmission
    in the sensor-cloud that discussed and compared the state-of-the-art techniques
    [10]. Dizdarević et al. surveyed communication protocols that fulfill the IoT
    communication requirements and their potential for implementation in edge-based
    and cloud-based IoT systems [11]. Dwivedi et al. focused on how to minimize the
    energy consumption and communication overhead in the sensor-cloud [12]. Existing
    surveys mostly focus on energy-efficient communication protocols. However, each
    layer within the sensor-cloud may lead to non-effective management, e.g., in aspects
    of energy replenishing level, cloud level, interaction level, and WSNs level,
    and the said surveys ignore these layers. Moreover, similarly to the security
    domain, there are several studies that address edge-based efficient management
    mechanisms; nevertheless, there is a lack of surveys in this area. For sensor-cloud
    architecture, Dwivedi et al. emphasized on the significance of virtualization
    in the sensor-cloud, i.e., in terms of saving time [13]. Ren et al. presented
    a comprehensive survey of emerging computing paradigms, e.g., fog computing and
    mobile edge computing, from the perspective of end-edge-cloud orchestration [14].
    Nazari et al. analyzed the combination of IoT and cloud and detected the challenges
    of such integration [15]. Wu et al. introduced Cloud-Edge-IoT computing architecture
    from the perspective of IoT applications [16]. Misra et al. [17] emphasized on
    theoretical modeling of sensor-cloud and further suggested a paradigm shift of
    technology from traditional WSNs to sensor-cloud architecture. Even if some surveys
    introduced edge computing into the sensor-cloud architecture, they lack specific
    edge-assisted solutions based on those architectures. Furthermore, research on
    sensor-cloud architectures lack an overview of the heterogeneity issue, which
    is, in fact, one of the crucial issues due to the characteristics of the sensor-cloud
    [22, 23, 24, 25, 26]. For a general overview, Ahmad et al. presented a comprehensive
    survey of the enabling cloud-based IoT architectures, services, configurations,
    and security models [18]. Chen et al. reviewed the most recent research efforts
    on existing, real, already deployed consumer-oriented IoT cloud applications [19].
    Rana et al. proposed a comprehensive study that covered various sensor-cloud aspects
    in terms of the architecture, network dynamics, heterogeneity, communication patterns,
    data management, and security [3]. While the above surveys have reviewed the sensor-cloud
    from varying perspectives, they are inadequate for the three key issues that require
    urgent attention in the sensor-cloud: reliability, energy, and heterogeneity.
    These issues arise from the combination of WSNs and cloud computing, and solving
    these issues can improve the performance of the sensor-cloud. Also, a lot of research
    literature has focused on these key issues [22, 23, 24, 25, 26, 27, 28, 29, 30,
    31, 32, 33, 34]; however, most of these works have not been mentioned in the existing
    surveys, and these studies also verify the need for an in-depth survey to overview
    them. In addition, existing surveys have also paid less attention to the edge-based
    solutions. From the analysis of the existing sensor-cloud surveys, as depicted
    in Table 1, we have found that a comprehensive survey is missing that can (i)
    improve the performance of the sensor-cloud and (ii) help better understand the
    sensor-cloud. To fill this gap, we first propose a thorough walk-through of the
    sensor-cloud with a four-layer architecture and its main components. Subsequently,
    an in-depth and comprehensive analysis of the three key challenges is presented.
    Specifically, the first challenge is logically segregated into hardware reliability,
    network reliability, and transmission reliability. The second challenge is categorized
    into two types, namely energy saving methods (i.e., at the WSNs level, interaction
    level, and cloud level) and energy replenishing methods. The third challenge is
    divided into device level, network level, and service level. In this way, this
    work can evaluate all layers of the sensor-cloud in a fine-grained manner and
    can also include most of the existing solutions related to the three key issues.
    Unlike existing surveys, we introduce an edge-based architecture in detail and
    summarize several edge-based solutions to solve the three key issues. We then
    discuss several promising research directions for the edge-based sensor-cloud.
    In summary, we provide a more comprehensive survey of the sensor-cloud. In particular,
    we include the latest high-quality research outputs that have not been included
    in other existing survey articles. We believe this survey can shed new light on
    the further development of the sensor-cloud. In a nutshell, the main contributions
    of this survey are summarized as follows: • A brief classification of the existing
    sensor-cloud surveys is conducted in a bid to highlight the motivation of our
    literature review delineated in this survey. • A thorough walk-through of the
    sensor-cloud with a four-layer architecture and its main components is provided.
    Based on the architecture, an in-depth and comprehensive discussion of the key
    challenges and the state-of-the-art solutions are presented. • An introduction
    of edge-based architecture is provided in detail and several edge-based solutions
    to solve the three key issues are summarized. • The future promising research
    directions of the edge-based sensor-cloud are identified and discussed. The taxonomy
    of the article (as depicted in Figure 1) is presented as follows. Section 2 discusses
    the background of the sensor-cloud. Section 3 describes the overall architecture
    of the current sensor-cloud and its elements. In Section 4, the article further
    analyzes the application of sensor-cloud based on existing relevant research.
    Section 5 gives edge-based recent studies and its future directions. The last
    section provides some concluding remarks. Fig. 1. Fig. 1. The taxonomy of the
    discussed topics. Skip 2SENSOR-CLOUD BACKGROUND Section 2 SENSOR-CLOUD BACKGROUND
    The preliminaries about sensor-cloud systems are introduced, and the reason they
    have become an important research area is discussed in this section. To begin
    with, the definition and characteristics of sensor-cloud are described. A model
    combining WSNs with the cloud computing paradigm was proposed in References [17,
    35, 36]. Distefano et al. proposed a to connect Clouds with the Internet of Things
    [37]. Introducing the benefits of Mobile Cloud Computing and WSNs, Zhu et al.
    also described combining WSNs with mobile cloud computing in Reference [38]. Fortino
    et al. proposed a framework of Body Cloud, which allowed data collected by sensors
    to be uploaded to the cloud data center in which the data were processed and analyzed
    [39]. Yuriyama et al. designed an infrastructure application to realize physical
    nodes virtualization on the cloud [40]. Al-Ghazi et al. put forward an innovative
    vision that worked in vehicular networks and integrated vehicle models through
    mobile devices and cloud computing schemes in Reference [41]. Table 2 shows these
    examples of integration of networks with the cloud. Some traditional methods of
    addressing network problems are introduced to design optimized algorithms and
    protocols [42, 43]. Table 2. Sensor Networks Integration Technology Purpose Main
    Feature Wireless sensor network Sensor-cloud Cloud Computing integrated with WSN
    [12, 48], Cloud of sensors [49] Everything-as-a-Service (XaaS) With the help of
    visualization technologies, users can request nodes that combine partial or multiple
    WSNs to provide services. IoT CoT (Cloud of things) [50, 51], CloudIoT [52], IoT
    cloud [53] IoT-as-a-Service (IoTaaS) Reduces the time for WSNs to store and process
    data. Wireless sensor & actor network Sensor-cloud [54, 55] Software-as-a-Service
    (SaaS) Monitors each physical node and optimizes its energy distribution [48].
    Show More Table 2. Examples of Networks Integrated with Cloud Since cloud computing
    has robust capabilities in data processing and storage [44], it can be used to
    provide a platform for WSNs to manage remote data. Heterogeneous or wrong data
    can also be processed on this platform. Sensor-cloud is a new paradigm combining
    cloud computing with WSNs [45, 46, 47]. It only requires users to send applications
    to sensor-cloud, which automatically distributes some sensor networks to provide
    services in real time. Table 2 presents some examples of the integration of these
    networks with the cloud. Users only need to send application requirements to sensor-cloud,
    which automatically distributes and dispatches some sensor networks to provide
    services in real time. Sensor-cloud provides services through virtualization of
    physical sensors. The virtualization brings benefits to expand the scope of services
    and facilitate the operation of systems [61]. Vendors of various WSNs can upload
    their data to offer more services. The characteristics of sensor-cloud are described
    as follows: • Transparency. Sensor-cloud systems are transparent regarding the
    types of sensors used. Users can obtain sensor services from different vendors
    without constraints of their physical locations and access rules [48, 62]. • Heterogeneity.
    This characteristic can help the sensor-cloud system to process real-time heterogeneous
    data to make critical decisions [63]. The sensor-cloud provides multiple data
    services, such as analysis, monitoring, storage, and computing. • Management.
    The sensor-cloud focuses on managing sensors via clouds [64]. • Sharing. Multi-user
    data sharing can reduce costs of transmission and communication, and increase
    working efficiency [65]. There are many similarities between WSNs and sensor-cloud,
    and the former one provides essential support for the latter. WSNs support many
    application scenarios for more convenient services of sensor-cloud systems. Figure
    2 describes the relations between WSNs and sensor-cloud systems. On the right
    side, a sensor-cloud can serve multiple applications. One of the leading technologies
    involved is virtualization, which can abstract the underlying physical sensor
    nodes. Based on this topology, sensor-cloud systems can meet various needs of
    users and solve some defects resulted from single data applications. With node
    level virtualization, it seems to be possible to serve multiple applications without
    cloud (e.g., Advanticsys, Virtenio); however, it is different from the sensor-cloud
    [66]. Fig. 2. Fig. 2. Comparison of system topologies: (a) WSNs and (b) sensor-cloud.
    The differences between WSNs and sensor-cloud can be summarized in the following
    aspects: (i) Type of service: WSNs are data-centric systemsthat provide similar
    data-related services to different users—however, sensor-cloud is a cloud computing-centric
    architecture, which can provide various types of data-related services to different
    users; (ii) difference between the operational concepts—sensor-cloud provides
    virtualization services for the underlying physical nodes and users, while WSNs
    do not have; and (iii) the energy, computing, and storage capacity of WSNs are
    based on sensor nodes, while the sensor-cloud has high expansion and management
    ability in cloud servers because the data collected by physics nodes can upload
    to cloud directly. Currently, the sensor-cloud has received extensive attention
    from both academia and industry. Sudip et al. analyzed that a sensor-cloud structure
    has more advantages than the traditional network system, which has created immeasurable
    value for businesses and consumers [17]. It has been reported that there is an
    increasing number of manufacturers using the sensor-cloud [67]. Customers can
    fully take advantage of sensor-cloud to send hardware data and sensor data directly
    through the network without writing lines of code and programming for numerous
    servers [68, 69, 70]. The research of sensor-cloud can expand to many potential
    fields to realize integration services by extending the capabilities of underlying
    nodes [71]. A new report from Allied Market Research indicates that the global
    sensor network market is predicted to have a growth rate of 11.3% until 2022 when
    the value of the market will surge to around $241 billion [72]. In the era of
    IoT, sensors are the key to the IoT perception layer. An authoritative data analysis
    shows that by 2020 IoT companies can earn an average annual profit of more than
    $470 billion by selling related comprehensive solutions [73]. Considerable research
    has been conducted on cloud, WSNs, and sensor-cloud in recent years. Figure 3(a)
    shows the search volume results with the keywords of “cloud computing,” “WSNs,”
    and “sensor-cloud” in Google over a nine-year period from 2013 to 2021 [74]. This
    volume reveals that cloud computing remains a hot topic. Moreover, there has been
    a great deal of research on WSNs, and sensor-cloud has been gaining popularity
    over the years. Figure 3(b) shows the number of related papers in Google Scholar,
    which is clear that studies on cloud and WSNs are decreasing while research on
    sensor-cloud remains relatively stable. Sensor-cloud combines the advantages of
    cloud computing and WSNs, which has considerable prospects. Fig. 3. Fig. 3. Trends
    of sensor-cloud research. Skip 3SENSOR-CLOUD ARCHITECTURE Section 3 SENSOR-CLOUD
    ARCHITECTURE Unlike WSNs, sensor-cloud provides more access to underlying sensor
    nodes and offers maintenance and management services to a broader range of users
    [75]. Users are allowed to define their services, which can be provided directly
    by the sensor-cloud platform [76]. This section thoroughly reveals the foundation
    and components of sensor-cloud. 3.1 Sensor-Cloud Architecture There is an increasing
    number of sensor objects interlinked through WSNs in sensor-cloud. Therefore,
    it is necessary for sensor-cloud models to have flexible and layered architectures
    [77]. As depicted in Figure 4, the data switching in sensor-cloud models are designed
    as three parts, physical world, virtualized world, and utility application. It
    aims to consider the orchestration for WSNs and cloud computing. Furthermore,
    it reveals the form of data dissemination and specific functions that determine
    the connection among sensors or end-users [78, 79]. Fig. 4. Fig. 4. The hierarchy
    of data dissemination in sensor-cloud systems. In terms of data quality, cloud
    computing facilitates the processing, analysis, and extraction of WSN data, which
    can manage and control the physical world accurately and intelligently [7]. WSNs
    have a large amount of sensor data but limited processing capacity [80, 81]. The
    combination with cloud computing brings vitality through (i) the integration of
    various vendor platforms, (ii) the improved scalability of data storage, (iii)
    storage-based data access, (iv) resource sharing to data, and (v) the introduction
    of new pricing concepts for selecting Cloud Service Providers (CSPs) as criteria.
    As for how to use the cloud computing facilities in a sensor-cloud system, the
    single-center & multi-terminal pattern is the most typical and important one.
    Such a pattern organizes all types of sensor devices with small distribution ranges
    and requests for the servers of the cloud center or part of the data center as
    a processing center. The user terminals are responsible for obtaining information
    from and delivering it to the data center [82]. The cloud center will set up a
    unified platform for users to operate. Together with the cloud center, sensor
    providers provide optimization services such as hierarchical management and data
    storage with more private clouds. Figure 5 shows a general sensor-cloud system
    architecture with the following layers: Fig. 5. Fig. 5. Senor-cloud system architecture.
    3.1.1 Infrastructure Layer. The first layer is also known as the data plane, which
    has sensors and actuators. These physical nodes in the sensor-cloud will collect
    and process the data [83, 84]. A large number of heterogeneous sensors can be
    added to infrastructures, which can also be added or removed on the fly. The virtualization
    technology in this layer is the foundation for the sharing of physical sensors,
    as well as virtual sensors and virtual sensor groups. Whenever a user sends requests
    to a visualized node or group, the sensor-cloud system will provide data preprocessing,
    uploading, and analyzing services. 3.1.2 Control Layer. This layer is primarily
    responsible for dividing tasks, uploading data generated by the infrastructure
    layer through a secure channel [85]. Before data are transmitted, its provisioning,
    visualization, and monitoring are also completed in this layer. In this context,
    provisioning managers provide automatic provisioning of virtual sensor groups
    [86], which plays an important role in the predefined workflow. The virtualization
    manager is set to virtualize sensor groups automatically [87]. Moreover, the control
    layer also provides monitoring and management for related data, which are received
    and monitored from the proxy of virtual servers [88, 89]. 3.1.3 Service Management
    Layer. The task of the service management layer or middleware layer is to match
    services to the requester by addresses and names. Builders can ignore the heterogeneity
    issues among hardware platforms for follow-up operations because of the characteristics
    of this layer. In addition, the layer processes data and provides services based
    on network protocols [90, 91]. 3.1.4 Application Layer. The application layer
    meets the customer’s requests for service. It is mainly focused on business applications
    and applies the sensor-cloud to enable network services for end-users (e.g., communication
    and operation) [14]. This layer is important to sensor-cloud because it meets
    customers’ requests by providing high-quality intelligent services [92]. For many
    enterprises and companies with a large regional span, it is more suitable to use
    the multi-center and multi-terminal pattern. For example, an enterprise operates
    across many regions or countries. It is necessary to monitor all of its branches
    and ensure the quality of related services for the headquarter. In the same way,
    data or information needs to be quickly shared with the terminals. The premise
    of applying this model is to include public and private clouds, and there is no
    obstacle to the inter-connection among cloud service users. As a result, some
    confidential information, such as commercial secrets, can be kept unrevealed.
    The operations of this system do not affect the transmission and dissemination
    of information. One major task that can be completed through this model is to
    adopt a faster and more efficient method to reach coordination at the highest
    level. Therefore, the architecture of this model can be regarded as the same as
    one-to-many in Section 4. Figure 6 shows the working mechanism of this system.
    In Figure 6, monitoring managers and optimization processes can provide valuable
    information to the design-time environment and help fill the gap between design
    time and runtime [93]. In this process, the heterogeneity of sensor-cloud services
    should be taken into consideration. However, it should cover the requirements
    of all types of service consumers as much as possible [94]. Fig. 6. Fig. 6. The
    multi-center structures of cloud platform in sensor-cloud architecture. User’s
    requirements may vary depending on different scenarios, data sizes, and degrees
    of implementation. Therefore, it is necessary to divide the requirements in sensor-cloud
    systems into temporary scenarios and persistent ones [70]. In a persistent scenario,
    cloud providers need to provide more stable collaboration, and such a requirement
    may exist throughout the operation. After receiving the user’s requests, the Service
    Management Layer will make the overall plan and decide resources and cloud providers.
    Once collaborative automation begins, the control layer can guide management,
    scheduling, and other related decisions. In addition, the control layer needs
    to make an initial decision as required and guides the collaborative agents to
    obtain external resources to complete scheduling with other modules [99]. 3.2
    The Main Components Some main elements are described in this section, which are
    necessary to deliver the functionality of the sensor-cloud and to help readers
    understand the composition and characteristics of the sensor-cloud. The summary
    of existing functions is shown in Table 3. Table 3. Models Sensing Communication
    Management Services OpenIoT [95] Self-organized Web 2.0/Web 3.0 Optimal distributed
    control Mobile sensing applications Pub/Sub [76] — Web 2.0 Event/Stream Monitoring
    and Processing Component SaaS MMDD [96] — Device-to-Device Data traffic monitoring
    Multi-method Data Delivery Show More Table 3. The Characteristics of Sensor-Cloud
    Architecture 3.2.1 Sensing. The sensing device collects data from objects under
    the network coverage within a certain period and then connects them with the database
    and cloud [100]. Table 3 shows that the devices are directly connected to the
    management portals, which are centrally located at the management level to ensure
    that data required for customers can be obtained by a series of sensor devices
    with specific specifications [101, 102]. 3.2.2 Communication. Generally, sensor
    nodes adopt a low-power mode in communication channels with loss and noise. Examples
    of communication protocols used are Web 2.0/3.0, Open Services Gateway initiative,
    and IPv6 over Low-Power Wireless Personal Area Networks [103]. These specify the
    media access control for reliable and scalable communications and illustrate a
    low-power state in the physical layer. 3.2.3 Management. As the name implies,
    sensor-cloud administrators provide management services. Management plays an important
    role in the operation of sensor-cloud systems [104], which can maintain all types
    of sensor groups through location calibration for the application layer and enhance
    virtualization of resources for the control layer. 3.2.4 Service. Overall, most
    of the existing application categories are very complex, with identity authentication,
    information filtering, querying, and collaborative-awareness services as the core
    contents [6]. The heterogeneity of sensor-cloud requires a thorough solution to
    realize ubiquitous services. Skip 4RESEARCH CHALLENGES Section 4 RESEARCH CHALLENGES
    In this section, some challenges that exist in the current sensor-based cloud
    applications will be discussed together with the state-of-the-art developments
    and trends pertinent to the services delivered by a sensor-cloud. As illustrated
    in this section, numerous factors influence the design of a sensor-cloud system,
    including but not limited to, reliability, energy efficiency, and heterogeneity.
    4.1 General Sensor-Cloud Issues Sensor-cloud systems encompass spatially distributed
    sensors or autonomous devices that are capable of sensing and monitoring physical
    environmental conditions in an intelligent and cooperative manner [105]. WSNs
    can provide all types of valuable data, and the same could be applied for several
    domains [106]. Figure 7 depicts general sensor-cloud issues, including security
    issues, trust issues, real-time services, reliability issues, energy issues, and
    heterogeneity issues. Fig. 7. Fig. 7. An example of the sensor-cloud. With the
    development of the sensor-cloud systems, data security issues have become highly
    prominent. Hu et al. designed a facial recognition technique based on the edge
    pattern that had a positive effect on improving the performance in terms of confidentiality,
    integrity, and availability [107]. Henze et al. proposed a control mechanism for
    users to manage data stored in the cloud [108]. A new entity serves as a trusted
    node and acts as a bridge between the WSNs and the cloud server to connect them
    to the gateway. At the same time, the security of communication between the WSNs
    and the cloud is realized, and the encryption mechanism is managed by an authorization
    service. To better address this problem, the authors continued the research and
    proposed a transparent access mechanism for the cloud service developers to use
    data [109]. Trust management plays a significantly important role in guaranteeing
    the privacy and security of a sensor-cloud and helps people overcome uncertainty
    and risky perceptions. Nevertheless, the problem of trust management in a sensor-cloud
    is rarely solved, and defects in this aspect could affect a user’s choice of the
    cloud service. Yang et al. proposed a trust evaluation mechanism to deliver content
    with low-latency based on the Fog Radio Access Networks and presented a Riemannian
    trust-region method to solve the challenges of Low-Rank Matrix Completion [110].
    In Reference [111], a Trust-Assisted Sensor-Cloud was envisaged to improve the
    quality of service of a sensor-cloud to facilitate users to obtain sensory data
    from the cloud. Zhu et al. discussed how the edge-based trust evaluation mechanisms
    could be used to maintain the system security [112]. Centralized analysis and
    processing of data is an indispensable part of the multitudinous applications
    of instantaneity. Li et al. envisaged a novel real-time notification protocol
    composed of two different types of controls, namely (a) urgent actuator-oriented
    control and (b) uplink access and scheduling control [113]. During wireless control
    in the edge computing, this scheme can transmit real-time notification without
    interrupting any sort of ongoing transmissions. To avoid frequent transmission
    of the similar data and multi-user data requests at the same time to a sensor-cloud,
    Zhu et al. proposed a data transfer interaction scheme for multi-users that could
    better guarantee the sensor-cloud users’ requirements regarding the delivery cost
    or delivery time [114]. The above studies mainly pay attention to security issues,
    trust issues, and real-time services and provide feasible solutions to those issues.
    However, the issues on reliability, energy, and heterogeneity are also indispensable
    to be addressed in a sensor-cloud system as they can effectively promote the development
    of a sensor-cloud. Hence, we particularly focus on these issues in this section.
    4.2 Reliability Issues The reliability issues within the sensor-cloud systems
    cannot be fully ignored primarily owing to the following facts. First, wireless
    reliable communication is vulnerable to path loss, shadowing, multi-path fading,
    and similar other key problems [115, 116]. Second, both node faults and link faults
    may result in reliability issues and bring negative impacts for the environment,
    and this itself explains why the topology of a wireless sensor network changes
    dynamically [117]. Third, poor computing power and limited storage capacity of
    these nodes result in a large number of packet loss. Finally, a number of applications
    run in larger networks that reduce the overall reliability of wireless communication
    due to long-distance transmission and multi-hop errors [118]. In the next section,
    the reliability problem is divided into hardware reliability, network reliability,
    and transmission reliability in a logical manner. 4.2.1 Hardware Level. A substantial
    number of the existing methods focus on capturing the state of sensor devices
    and monitoring the performance of nodes. Furthermore, the problem of coordination
    and reconfiguration between the nodes is always addressed by ensuring a solution
    for the reliability of nodes. Farshid et al. proposed a multi-directional adaptive
    sensing algorithm that took into consideration the condition of belief in the
    propagation protocol [27]. In Figure 8, the server can coordinate nodes to achieve
    efficient data processing and reduce overhead, whereas the data center has the
    mandate of fusing and storing the data along with predicting the number of lost
    packets. In Reference [119], Sensor SelComp was proposed as a smart component
    and was implemented on the factories’ shop-floors. It could create the digital
    twin of a machine via sensors so as to ascertain the condition and behavior of
    equipment and subsequently expose its functionalities as services. A novel and
    extensible urban cloud network was proposed in Reference [28]. The system components
    of this model were inspired by the theory of modularization and service composition
    that can maintain the stability and availability of the processing module. Nevertheless,
    the said schemes still need to be extended to achieve the optimal results and
    actual deployment. A fully distributed multi-link scenario is required for the
    follow-up discussion. Fig. 8. Fig. 8. The multi-directional adaptive sensing network
    architecture. 4.2.2 Network Level. The key of reliability on the network level
    lies in two aspects: (i) the tradeoff between reliability and collaboration and
    (ii) the tradeoff between reliability and sharing. Zhou et al. developed an analytical
    framework of reliability-oriented cooperative computation optimization and solved
    an execution time minimization model to obtain the success probability of application
    completion with the constrained computational capacity and application requirements
    [120]. By combining these models, the reliability of communication and computation
    by optimizing the data partitions among different cooperators can be achieved.
    A device/cloud framework had been presented in Reference [121] to enable a tradeoff
    between reliability and collaboration between smart devices and clouds [29]. Kuljeet
    et al. presented an edge-cloud interplay based on the promising paradigm of software-defined
    networks (SDN) [122]. The flow management using SDN is depicted in Figure 9. Both
    the edge devices and the data centers have three states: Waiting, Active, and
    Suspended. According to the data center’s network topology, the number of shortest
    paths between the edge devices is calculated and the traffic monitoring is turned
    on. The SDN controller detects whether the link traffic reaches the threshold
    value of the link bandwidth and dynamically adjusts the state value of an edge
    device. The SDN switches are responsible for judging the status value of the device
    and cloud and whether the data can be exchanged. Through the above scheme, the
    load flow in the data center network can be effectively balanced and the link
    congestion in the data center network can be alleviated. The underlying nodes
    are deployed in a complex environment, and therefore, more research should focus
    on the reliability of a sensor-cloud in various environments to keep the tradeoff
    between reliability and collaboration and the tradeoff between reliability and
    sharing. Fig. 9. Fig. 9. Flow management using SDN. 4.2.3 Transmission Level.
    A reliable energy efficient platform that reduces the energy consumption and maintains
    privacy in transmission process was introduced [123]. The security approach of
    the platform utilizes a modified version of the sharing-based scheme and a precision
    enhanced and encryption mixed privacy preserving data aggregation scheme. A sensor-cloud
    collects and processes information from several sensor networks, enables information
    sharing on a big scale, and collaborates amongst the users via applications on
    the cloud [30]. In the current research, the performance of network architectures
    mainly focuses on setting different priorities, cultivating competition awareness,
    and integrating documents to address different information sources from where
    numerous sensor sets are virtualized. In the near future, more attention would
    perhaps be paid to design an object-oriented storage system and its performance
    of data service can be improved via exploring bandwidth and reliability or latency
    and reliability. 4.3 Energy Issues Similarly to the WSNs, the energy issues also
    act as a bottleneck in restricting the performance of a sensor-cloud. Adequate
    and stable energy supply forms an indispensable basis of data collection in any
    system [124, 125]. In this section, energy issues are categorized into two types,
    namely energy saving methods and energy replenishing methods. The former emphasizes
    the reduction of energy consumption in the sensor-cloud systems via a particular
    architecture or scheme, whereas the latter outlines the methods for stable and
    reliable energy supply for the sensor-cloud systems, especially for WSNs. 4.3.1
    WSNs Level. All of the highlighted methods envisaged algorithms on sensors or
    sensor gates with relatively low computational capacity in contrast to the cloud.
    Therefore, the complexity of algorithms is minimal. However, many studies chose
    sensor gateways to apply their algorithms primarily owing to the differentiation
    advantages. The authors of Reference [126] proposed an optimal bridge node selection
    strategy to minimize the energy consumption during the process of data transmission
    from a sensor network to a sensor-cloud. The study in Reference [127] introduced
    an energy-efficient middleware mechanism for a sensor-cloud. It aimed to minimize
    the data transmission between the sensor gateways and the cloud gateways. Wu et
    al. [128] proposed a method taking into consideration the sampling frequency,
    residual energy, and the importance of sensors for an optimal relay sensor selection
    to balance the energy consumption in WSNs. Similarly, to reduce the energy consumption
    of the sensor-cloud systems, the authors in Reference [129] proposed an event-driven
    data gathering scheme with fuzzy logic. Similarly to WSNs, the architectural designs
    and services’ deployment are more complex in case of the distributed services.
    With an increase in the system throughput, the response time becomes longer and
    longer, resulting in defects in other aspects [31, 130]. At the same time, running
    and maintenance of the system will meet greater challenges along with greater
    difficulties in testing and error detection. 4.3.2 Interaction Level. The methods
    in this sub-section are characterized in accordance with the information provided
    by the WSNs, i.e., the cloud can optimize some parameters, such as the time interval,
    and send them back to the WSNs [32]. Owing to the strong computational power of
    the clouds, complex algorithms can be deployed to achieve optimal results. Javed
    et al. [93] proposed a decentralized smart controller combining the cloud with
    a random neural network to control the heating, ventilation, and air conditioning
    of the buildings. The authors in References [131] segregated sensing missions
    into three different types and separated each type into many fine-grained operations.
    Dinh and Kim [132] proposed a decoupling model for both the information producers
    (i.e., physical sensors) and the information providers. Yan et al. considered
    the optimal time interval selection strategy of the WSNs [133]. Several energy-saving
    methods reduce energy consumption by minimizing the communication between the
    WSNs and the cloud, i.e., either by reducing the data size of a single transmission
    via data compression and decoupling or by reducing the transmission frequency
    in the data prediction, aggregation, and time interval optimization [134]. Nevertheless,
    those schemes require high costs (i.e., for equipment and server) and are often
    attributed to slower implementation speed [135, 136]. Furthermore, the difficulty
    in balancing back-up and regeneration complicates the data migration process.
    4.3.3 Cloud Level. This sub-section emphasizes some of the operations of the cloud,
    i.e., applying machine learning algorithms for the data prediction and optimal
    sensor distribution for different user applications. To predict Bitcoin price
    at different frequencies using machine learning techniques, Chen et al. first
    classified Bitcoin price by the daily price and the high frequency price [137].
    A set of high-dimensional features, including property and network, trading and
    market, and attention and gold spot price, are used for Bitcoin daily price prediction,
    whereas the basic trading features acquired from a cryptocurrency exchange are
    used for 5-minute interval price prediction [138, 139]. Elodie et al. used a genetic
    algorithm to determine the optimal sensor distribution to estimate the horizontal
    stress due to strain observations [140]. Liu et al. proposed a new Bi-Population
    QUasi-Affine TRansformation Evolution algorithm for global optimization and applied
    the proposed algorithm to dynamic deployment in wireless sensor networks to make
    a good balance between exploration and exploitation capability [33]. WSNs could
    upload complex tasks to the cloud to reduce the local energy consumption [34,
    141]. However, energy consumption for the transmission increases as the distance
    between the cloud and WSNs is relatively large. 4.3.4 Replenishing Level. Owing
    to the fact that a cloud-based infrastructure results in increasing the response
    time and the bandwidth consumption, energy replenishing is also one of the research
    directions. This sub-section emphasizes wireless power transferring techniques
    in the sensor-cloud systems, a paradigm that has been attracting attention in
    recent years. In Reference [142], the authors proposed a novel framework combining
    mobile cloud computing with the Microwave Power Transfer. The framework develops
    optimal policies so as to realize the optimization and selection of mobile mode
    in static and dynamic channels for replenishing energy to the mobile devices.
    A wireless charging platform based on quadcopters was proposed by Chen et al.
    [143] to address the charging problems in harsh environments. However, future
    research hot spots may focus on minimizing energy consumption for data processing,
    better task selection, and scheduling at the edge of the network and decentralized
    computing [144]. 4.4 Heterogeneity Issues The heterogeneity issues are segregated
    into three layers in a sensor-cloud multi-tier architecture, as portrayed in Figure
    10. With an increase in the popularity of sensor-cloud, more and more heterogeneous
    sensor networks and cloud applications are embedded into sensor-cloud systems
    and the relationships between the service providers and users are becoming increasingly
    interconnected [25, 26]. Furthermore, a momentous amount of heterogeneous sensor
    data is produced, transmitted, and processed in the sensor-cloud systems on a
    continual basis [24]. Therefore, the heterogeneity issue becomes extremely important
    and indispensable. A simple example of the heterogeneity issue resembles a typical
    transmission application in our daily lives [145]. Imagine that one person plans
    to move from one place to another, and she aims to find different travel information
    to meet her unique requirements. In this scenario, there are three important types
    of providers from the bottom to the top in a sensor-cloud, i.e., the sensor data
    providers (SDPs), CSPs, and transportation service providers [146]. Every sensor
    provider owns a subset of data such as information about bus, car, airplane, and
    ship, and one or more of them send all or part of the sensor data to the sensor-cloud
    providers. We especially focus on heterogeneity at device level, network level,
    and service level in this section. Fig. 10. Fig. 10. Heterogeneity issues in different
    sensor-cloud layers. 4.4.1 Device Level. There are two types of heterogeneity
    issues at the device level. The first one pertains to heterogeneous machines or
    sensors in the same sensor network. For the second one, heterogeneous machines
    or sensors lie in different sensor networks, which is derived from the resource
    sharing of sensor-cloud that virtualizes physical sensor nodes into clouds [48].
    Hwang et al. [22] presented two scenarios: (i) Nodes were physically located in
    the same region and possess similar properties and (ii) heterogeneous sensor nodes
    spread across different geographic regions and were used in the same Virtual Sensors.
    Fazio and Puliafito [147] also put forward two different models: a data-centric
    model and a device-centric model. For the device-centric model, a virtual sensing
    infrastructure could be used to satisfy the specific needs of the users. In regard
    to the device level, the most indispensable heterogeneity issue in the device
    level is the communication between sensor nodes within the same network and cooperation
    amongst sensor nodes from different networks to service one application. Nevertheless,
    all such devices have basic features of servicing one-to-one applications, which
    makes the system less reliable than expected. 4.4.2 Network Level. This type of
    heterogeneity issues is a concern for CSPs that obtain sensor data from several
    SDPs. In a sensor-cloud, a number of sensor networks belong to different SDPs
    and provide different sensor data services. The heterogeneous sensor networks
    also exploit numerous communication technologies, including, but not limited to,
    Wi-Fi, ZigBee, UMTS, and Ethernet. Neiat et al. [148] proposed a bridge node method
    that could be used to solve the transmission challenges from an underlying network
    to the cloud [23]. In the healthcare sector, patients are usually migrated from
    one heterogeneous monitoring area to another. However, how to ensure the interconnection
    between heterogeneous WSNs remains a major problem [149]. As for the network level,
    the integration of the sensor data that stems from the heterogeneous sensor networks
    becomes even more challenging when there is an influx of sensor data required
    to be processed in real time [150]. In addition, researchers also have other concerns,
    such as delay, format translation, and storage mode [119]. 4.4.3 Service Level.
    There are several application services in the sensor-cloud systems; nevertheless,
    each of them possesses different standards and data formats. Under these circumstances,
    users need to intelligently compare a number of these application services before
    they are able to choose the specific one to satisfy their unique requirements
    [154]. As for the users’ mobility, resource provisioning becomes quite uncertain
    under different network environments, as each task is implemented individually
    when complicated multitask applications are offloaded. Qi et al. [155] proposed
    a software-defined infrastructure system to decouple the resource control of the
    mobile clouds from the user plane. At the service level, a number of applications
    are emerging, and users may select diverse heterogeneous services to satisfy their
    requirements. In this case, the focus of the service level should shift to provide
    users with uniform data interfaces from different service providers. Summary.
    Table 4 summarizes the state-of-the-art sensor-cloud research. As for the architecture,
    some new sensor-cloud architectures are proposed to solve different problems,
    but the physical layer or the cloud layer is often idealized to achieve better
    performance [93, 131]. Edge computing has the characteristics of local deployment,
    i.e., closer to the users, offering a low delay, and so on. With the support of
    the edge computing, the edge computing layer acts as the intermediate tier between
    the upper and the lower layers of the cloud and the sensors that can achieve the
    ideal conditions mentioned in the above literature. Besides, running the proposed
    algorithm in the edge layer can further improve system performance. As for reliability,
    the existing methods mainly use complex encryption algorithms or trusted technology
    to ensure reliability but these methods often have a higher time complexity and
    a large delay [22, 151]. The edge layer is closer to users and safer and thus
    the important data can be only uploaded to the edge layer that can further improve
    the reliability of the system. As for mobility, fixed physical nodes are often
    used to collect data [67, 117]. Even mobile nodes are mainly used for mobile data
    collection. These mobile nodes naturally have the advantage of becoming the edge
    nodes. If these nodes constitute the edge layer, then not only the mobility of
    the system but also the delay of the system can be further improved. Table 4.
    Sensor-Cloudkey tech. Features Requirements Cyber approachdescription Details
    of provided APIs Handoff Traffic Clientmodification References Architecture Model
    checking Data sharing and protection Collecting, storing, and sharing data from
    heterogeneous sensors. √ Seamless Down or uplink × [32, 80, 93, 131, 133]. Reliability
    Symbolic execution Updating and patching Monitoring, maintenance, and data processing
    in some high-risk situations. √ Time delay Uplink √ [22, 101, 102, 151]. Mobility
    Theorem proving Authentication, identification, and access control A decentralized
    virtualization environment. × Seamless Uplink √ [30, 46, 67, 90, 116, 120, 121,
    123]. Show More Table 4. Current Sensor-Cloud Research As for load balancing,
    it avoids a situation wherein some edge data centers are heavily loaded while
    others are in an idle state or doing little data processing [13, 153]. Because
    of the mobility of the edge nodes, the system architecture can be dynamically
    adjusted to achieve load balancing. As for energy efficiency, it is a significant
    issue in the edge computing paradigm to reduce the service cost and protect the
    environment [6, 102]. A plethora of research has been conducted to reduce energy
    consumption in the edge computing primarily focusing on the scheduling of incoming
    jobs to improve energy efficiency. As for management, the research focuses on
    a resource abstraction at the sensor level and uninterrupted services are provided
    [24, 25]. Edge computing is introduced to provide computation, storage, and networking
    services between the end users and traditional cloud computing data centers. With
    the help of the edge computing, the current edge computing platform can be expanded
    so as to support secure collaboration and interoperability between different users’
    requested resources. As for overall performance, the papers focus on transmission,
    re-association cost, inter-packet delay, and so on. The performance of the system
    can be improved in respect of nodes management, collection control, data process,
    and data storage in edge computing. In conclusion, most of the existing solutions
    propose a somewhat similar sensor-cloud architecture and none of these studies
    have provided a holistic integrated view of the factors that drives the design
    of a sensor-cloud system. These factors are extremely critical primarily owing
    to the fact that they serve as a useful guideline in the design of a protocol
    (or an algorithm) for the sensor-cloud systems [156]. It is also interesting to
    note that the edge layer is only used in certain specialized scenarios, e.g.,
    in the domain of healthcare. Future studies should consider more general scenarios.
    We, thus, need to enhance the study on the capability of the edge layer to design
    a more secure and sophisticated system that could advance the development of the
    sensor-clouds. Skip 5LEVERAGING THE EDGE COMPUTING FOR A SENSOR-CLOUD AND ITS
    FUTURE DIRECTIONS Section 5 LEVERAGING THE EDGE COMPUTING FOR A SENSOR-CLOUD AND
    ITS FUTURE DIRECTIONS Edge computing could be applied across several industries
    primarily owing to its strong computational and storage capabilities. In this
    section, several research aspects will be examined that mainly focus on how to
    improve the reliability and energy efficiency of a sensor-cloud and how to design
    an efficient scheme to solve the heterogeneity issues in a sensor-cloud system.
    Such models facilitate in eliminating problems, including but not limited to,
    limitations in storage resources, constraints in computing power, and high communication
    costs for the users. This section also discusses some potential enhancements to
    the sensor-cloud systems enabled by the edge computing and highlights further
    improvements as future research directions. 5.1 Proposed Edge Computing Model
    To achieve efficacious system performance, the edge computing model is introduced
    as a supplement to the cloud computing as depicted in Figure 11. This model is
    another contribution of this article. In the three-layered abstract mechanism
    of the sensor-cloud systems, the top-most layer is a cloud service data center
    with strong computational and storage capabilities [56, 57]. The bottom layer
    is a sensor network layer encompassing ordinary sensor nodes [157]. In the middle
    layer, the edge server is composed of nodes possessing strong capability within
    the WSNs. Some localized and real-time computational tasks would be processed
    in the edge nodes [89]. Fig. 11. Fig. 11. An edge-based model in the sensor-cloud
    systems. The introduction of the edge computing breaks the conventional settings
    and extends computing to the edge of the network by employing the promising paradigm
    of distributed computing [158, 159]. Figure 11 delineates the architectural design
    of the edge computing. Sensor-cloud systems contain several advantages, including,
    but not limited to, speeding up data processing, improving efficiency, saving
    the network bandwidth, and improving security and elasticity. However, many important
    IoT use cases are difficult or impossible to implement in a completely cloud-based
    or a thing-based architecture owing to some objective requirements [160]. With
    the introduction of the edge layer, the system can be improved in respect of the
    node management, collection control, data process, and data storage. Besides,
    the edge layer can enhance the traditional WSNs as it can make up for the defects
    in the underlying network, i.e., in terms of energy shortage and insufficient
    compute and storage. Once the key requirements and architecture of the edge are
    clear, it is then possible to further segregate the system into edge elements.
    Subsequently, we can make full use of these elements to generate effective structures
    and the high-level designs. The proposed edge computing model can improve numerous
    aspects of a sensor-cloud that would be elaborated below, thereby implying that
    edge is conducive to solving various problems [161, 162]. 5.2 Leveraging Edge
    Computing for Sensor-Cloud and Its Future Directions 5.2.1 Reliability Issues.
    With an expedited proliferation in the generation of numerous forms of data, the
    emergence of the cloud storage has attracted considerable attention. For the public
    cloud applications, the cloud service providers maintain and orchestrate infrastructure
    [163]. This implies that a user’s data cannot be controlled by herself and the
    reliability of data is at great risk. The data of the users are likely to be delivered
    to the parties who are thus not reliable. To protect users’ privacy, an edge-based
    three-layer storage (TLS) scheme is proposed that enables users to manage the
    data and enhances data security to a certain extent. As illustrated in Figure
    12, the framework mainly makes use of the data storage and the processing capability
    of the edge server. In the three-layered structure, Hash-Solomon code is applied
    to ascertain the minimum volume of data that can be stored locally (e.g., 1%).
    The remaining data are properly segregated and thus uploaded to the edge server
    (e.g., 4%), and the cloud server can protect privacy and ensure the reliability
    and security of the users’ data (e.g., 95%). Such a design effectively protects
    data from being restored to its entirety even if any layer of data is maliciously
    leaked or stolen. Fig. 12. Fig. 12. Applying the three-layer storage scheme. A
    reputation evaluating mechanism was also designed for CSP in edge layer [164].
    Each bad behavior caused by CSP will have a negative influence on itself. The
    reputation evaluation is composed of user’s grade and the basic value of the CSP.
    The user’s grade is subjective. Hence the authors add an objective perspective
    as the basic value of the CSP, which consists of industry metrics, such as storage
    technology, price storage performance, and so on. The percentage of this part
    in the whole value is 70–80% and will be renewed once a year. The proposed design
    has been validated via an experiment. Figure 13(a) reflects the difference between
    TLS and scheme without credit [165] (i.e., no-credit scheme). It is clear that
    the number of failures of CSPs in TLS is less than the number of failures in the
    no-credit scheme. This is because of the CSPs’ self-adjusting according to the
    feedback from the reputation evaluation. Figure 13(b) highlights that the number
    of data loss declines when the number of CSPs increases. Less data loss means
    more reliability of the user’s data, which proves that more CSPs can ensure the
    reliability of the users’ data. However, choosing more CSPs means higher economic
    cost, so how to balance economic cost and data reliability is an interesting research
    direction. Fig. 13. Fig. 13. Performance of the proposed edge-based storage scheme.
    Nevertheless, many reliability challenges need to be addressed shortly. The first
    challenge is transient storage, i.e., the local storage embedded to simplify the
    data management operations may result in new challenges in the context of security
    and privacy [166]. Therefore, studies on the security of the sensor-cloud take
    into consideration sensitive data identification and protection and secure data
    sharing [167, 168]. Against the backdrop of big data, it is possible to combine
    the characteristics of edge computing with the paradigm of deep learning. The
    hierarchical processing mode is a good attempt to amalgamate these two technologies.
    From the extraction and analysis of the features of data, the system can handle
    data persistence to solve the storage and sharing problems of big data so as to
    ensure the security and convenience of the entire system. The second challenge
    is the attack surface, i.e., by decoupling the control plane from the data plane,
    the attack surface for sensor-cloud is enlarged when compared with the conventional
    networks [169]. Edge computing offers technical support to avoid this problem.
    The mobile edge nodes send commands and read data through communication processes,
    whereas the cloud is only the center for data convergence. The control and trust
    of data are addressed as well. To solve the above challenges, federated learning
    [170] has emerged as another promising privacy preserving approach that is integrated
    with the edge computing architecture. A multi-layer federated learning protocol
    needs to be designed for the edge-based sensor-cloud system that adopts two levels
    (i.e., the edge level and the cloud level) of model aggregation enacting different
    aggregation strategies to improve the reliability of the system. 5.2.2 Energy
    Issues. The data acquisition process in a sensor-cloud is primarily constrained
    by the weak communication capabilities of the WSNs [118, 171]. As sensors possess
    low bandwidth and limited energy sources, the ordinary nodes are unable to meet
    the requirements of limited energy in a sensor-cloud system [172, 173]. The proposed
    model is composed of multiple high-performance mobile nodes that can compensate
    for the technical deficiencies between the WSNs and the cloud [174]. In the architecture
    portrayed in Figure 14, the three layers cooperate to maximize the throughput
    and reduce transmission delay to reduce energy consumption. The principle of Voronoi
    from the graph theory is adopted to divide the plane into regions and achieve
    the initial setting of the said architecture. Based on the architecture, a Distributed
    Coordination Function (DCF) was designed to obtain the minimum cost schedule between
    Voronoi areas, to maximize throughput and minimize the latency from WSNs to the
    Cloud. Specifically, they design an energy-efficient routing algorithm for sensors
    in edge layer, which considers energy consumption and hops. Fig. 14. Fig. 14.
    Illustration of the envisaged real-time data collection scheme based on edge.
    To evaluate the proposed algorithm, the authors also compare DCF with Ad hoc On-demand
    Distance Vector Routing (AODV) [175] and Random Rebroadcast Delay (RRD) [176].
    AODV is an on-demand routing method in which the network generates routes at the
    beginning of communication and RRD is a simple random rebroadcast routing protocol
    based on the process of flooding-based route discovery. Experiments portray the
    performance comparison vis-á-vis the other state-of-the-art schemes. Figure 15(a)
    shows the total energy consumption results in which DCF spends less energy than
    RRD and AODV because RRD spends more energy in route finding and AODV needs to
    repair unreachable paths. Figure 15(b) indicates that the number of exhausted
    sensors as a function of data volume increases. Because there is a path selection
    in DCF, the rate of exhausted sensors is approximately 45% less than that of RRD
    and approximately 20% less than that of AODV. In a word, DCF has the merit of
    low energy consumption than RRD and AODV, which proves the proposed scheme in
    Reference [174] can efficiently reduce energy consumption. Fig. 15. Fig. 15. The
    algorithm performance of the three layers cooperative data collection. The energy
    issues from the combination of the sensor-cloud systems and the edge computing
    are far from perfect. In the above scheme, the Voronoi area is formed by the location
    of the mobile station. In the future, we can try to consider the clustering method
    for partition, and design the mobile collection path of the station. In addition,
    combining the traditional methods with the edge computing model is a promising
    way to solve energy issues in the sensor-cloud systems. The traditional energy-saving
    methods reduce energy consumption by minimizing the communication between the
    WSNs and the cloud [177], i.e., either in the form of a reduction in the data
    size of a single transmission namely data compression or decoupling or with a
    cut back in the transmission frequency such as specific data prediction and optimization
    of the data screening and the time interval [178]. In the future, as for the data
    prediction methods, through the historical data collected by the edge layer, the
    data prediction model is established that can greatly reduce energy consumption
    during the process of data transmission [179]. To be more specific, the same prediction
    algorithm could be deployed between the cloud-edge and the edge-end. There is
    no need to transmit data if the data prediction accuracy is acceptable between
    the cloud-edge and the edge-end, which saves lots of energy consumption. For instance,
    as for data screening methods, a data filtering scheme based on the edge computing
    needs to be designed that aims to maintain a spatial dataset through the edge
    servers (i.e., data may either be a single value or a vector data value) and distinguishes
    between the spatial positions via projections on three planes [180]. The data
    values could be displayed intuitively through this mechanism and abnormal values
    would be highlighted directly in the spatial coordinates via the characteristics
    of color and volume followed by their screening and elimination within the subsequent
    operation. In this way, energy consumption can be significantly reduced. Similarly
    to the reliability issues, the federated edge learning [181] method is another
    promising way to improve the energy efficiency in which an edge server coordinates
    a set of edge devices to train a shared machine learning model based on their
    locally distributed data samples. Specifically, during the distributed training,
    the joint communication and computation design can be exploited for improving
    the system’s energy efficiency, wherein both the communication resource allocation
    for aggregating global ML parameters and the computation resource allocation for
    locally updating ML parameters can be jointly optimized. 5.2.3 Heterogeneity Issues.
    As we mentioned, the heterogeneity issues become extremely important and indispensable.
    However, current methods cannot solve the problem well because it is hard to manage
    the various heterogeneous devices [156, 182]. Furthermore, several heterogeneous
    devices are non-trusted, which may produce false sensory data to mislead users
    to make incorrect decisions. To address the heterogeneity issues and to overcome
    the limitations of trust evaluation in the underlying networks, an edge-based
    trust evaluation scheme is proposed [183]. As shown in Figure 16, this hierarchical
    trust mechanism comprises the following three levels: Fig. 16. Fig. 16. Three
    levels of the hierarchical trust mechanism. • The direct trust calculation at
    the first level is ascertained via Equation (1). T packet means the ratio that
    the number of data packets lost. Dela y forward means the time interval from receiving
    data to forwarding data. T history means the history direct trust value to reduce
    the influence of nodes’ value fluctuates with the change of network load and environment.
    The value of Dela y forward is calculated by T packet and T history based on the
    weighted method. For weighted values, w 1 + w 2 =1 . To decrease energy consumption
    in the data transmission, the trust detection period among nodes is maximized
    in a reasonable range, but the trust value might become too old to reflect the
    current trust state of the node. So the weight of T history was cut down in the
    experiment, (1) T direct = (w 1 T packet +w 2 T history )×Dela y forward . • The
    recommendation trust value at the second level is computed via Equation (2). The
    set(neighbor) refers to a trusted node set of the source node. The Tres t (j,k)
    refers to the trust value of node j to node k. The w i (i,j) refers to the weighted
    value of every adjacent node by an arithmetic progression, as Equation (3). Where
    parameter i refers to the location value of nodes and parameter n refers to the
    node number in set(neighbor) . Moreover, synthesis trust is computed via Equation
    (4) in edge layer, which is based on T direct and T recommendation . The weighted
    value of T recommendation is smaller than T direct , and w 3 + w 4 =1 , (2) T
    recommendation = ∑ i∈set(neighbor) w i(i,j) × T (j,k) , (3) w i (i,j)= i ∑ n 1
    i =2× i n(n+1) , (4) T synthesis = w 3 × T direct + w 4 × T recommendation . •
    At the third level, an important part is the analysis of the heterogeneous devices.
    Some heterogeneous devices provide wrong sensor data to lead users to make wrong
    decisions. The edge layer can process sensor data from several nodes at the same
    time and recognize whether there are malicious nodes by some data correlation
    phenomenon indicators, such as similar trajectory, variation trend, fault-tolerant
    interval, and so on. Wang et al. provide a comparison of the periodic update [184]
    and the edge-based approach [183]. For the periodic update, nodes update trust
    values of their neighbor nodes when the period is over. In Figure 17(a), the authors
    randomly add heterogeneous devices in three levels. The proposed scheme indicates
    a more intuitive downward trend in communication cycles, which means the scheme
    can evaluate heterogeneity issues well. In Figure 17(b), the authors add one type
    of condition every five communication cycles. After six communication cycles,
    the edge-based design and periodic update method recognize malicious nodes simultaneously.
    The cleanup method of malicious nodes is implemented at 15 communication cycles,
    and the environment is changed at 16 communication cycles. Some nodes that are
    sensitive to environment display anomalous behaviors that might be misjudged as
    malicious nodes. For those nodes, the edge layer analyzes whether those nodes
    are real malicious by the direct trust tables, recommendation trust tables, long-term
    sensor data, and network topology. After a reasonable delay, the proposed scheme
    recovers misjudgment nodes before the cleanup method at 31 communication cycles.
    The results indicate that the scheme can execute the recovery of misjudged nodes
    and guarantee the permanent stability of the network performance. Fig. 17. Fig.
    17. Performance of the proposed edge-based evaluation mechanism. Similarly to
    the reliability issues and the energy issues, there are several edge-based solutions
    for enhancing improvements in the near future. One of the future research directions
    is to build a trust recovery mechanism in edge layer. The combination of data
    analysis and verification scheme can be used to verify whether the “malicious
    member” is malicious through the known information. Edge-based trust assessment
    is another promising way to solve heterogeneity issues. Edge nodes can be envisaged
    by utilizing their capability of communication that gives full play to the mobility
    of the edge nodes. Edge nodes can move to any heterogeneous devices, thereby constructing
    a trust transmission chain in a bid to collect the data of heterogeneous devices.
    The chain formation needs to be realized in such a way that the total length should
    be as short as possible while avoiding the selection of the untrusted nodes. This
    ensures the accuracy of trust evaluation to improve data quality. Based on the
    trust assessment, mobile data from trusted nodes could be gathered and any untrusted
    sensor nodes could be bypassed to avoid unnecessary movement delay [185, 186].
    Furthermore, one research domain that needs to be researched is the ascertaining
    of trust evaluation of mobile nodes concerning the scope of their activities.
    Thus, a path planning strategy, with no reliance on the previous point-to-point
    evaluation mechanism, may be designed and subsequently employed to transform the
    activity range of mobile nodes into their corresponding parameters for overall
    trust evaluation [187, 188, 189]. Table 5 summarizes the state-of-the-art schemes
    to solve the three key issues. As for the reliability issue, the current research
    mainly adopts the solution based on cloud technology and does not consider the
    tradeoff between reliability and efficiency. Even if some schemes introduce edge
    computing, they do not fully consider the cooperation between cloud and edge in
    computing, storage, and network resources. This causes serious packet loss and
    high data transmission errors. Wang et al. [164] propose TLS scheme to overcome
    the shortcomings that makes a good tradeoff between reliability and efficiency.
    Table 5. Key issues Main Feature Handoff Edge assisted Provided APIs Client modification
    References Reliability Integrating linear error correcting codes and linear homomorphic
    authentication schemes. Data loss × √ √ [163, 165, 166] Allowing only authorized
    servers to jointly test whether a search token matches a stored ciphertext. Number
    of failures √ × √ [167, 168, 169] Including erasure code, malicious modification
    detection and reputation evaluating. Data loss and number of failures √ √ √ [164]
    (Proposed) Show More Table 5. Comparison of Edge-based Schemes As for the energy
    issues, the schemes mainly depend on the underlying devices to collect data, which
    results in large delays and high energy consumption due to the limited energy
    and storage capacity of the underlying devices. Wang et al. [174] propose the
    DCF scheme, which makes full use of the computing capacity of the edge layer and
    reduces energy consumption. As for the heterogeneity issues, the main idea of
    the current scheme is to use centralized cloud servers or only local devices to
    evaluate the underlying nodes and rarely consider the advantages of edge computing,
    thus resulting in high communication cost and abnormal node access. Wang et al.
    [183] propose a scheme that makes full use of the high reliability of the edge
    layer and can reasonably evaluate the nodes. In short, the present research is
    trying to combine sensor-cloud with edge computing. However, on the one hand,
    the current schemes mainly use centralized cloud technology, which does not give
    full play to the advantages of “nearby computing” of edge computing. Sensor-cloud
    and edge computing collaboration is still in the preliminary stage. On the other
    hand, the algorithms are scattered, personalized, and only solve specific problems.
    One of the future research directions is the in-depth collaboration of sensor-cloud
    and edge computing. Skip 6CONCLUSION Section 6 CONCLUSION Sensor-cloud facilitates
    the construction of pervasive data networks by extensively leveraging the paradigms
    of wireless sensor networks and the powerful cloud computing. It has been established
    as a promising notion for the efficiency and reliability in critical services.
    In this article, we offer a more thorough walk-through of sensor-cloud with four-layer
    architecture and the main components. We present a comprehensive survey on over
    180 academic and industrial works related to edge-based sensor-cloud, which focus
    on the various research problems. We contribute to classify those emerging problems
    into three different categories, namely reliability, energy, and heterogeneity,
    and further explore the complexities involved in the state-of-the-art edge-based
    schemes. We then propose a generic edge-based framework that aims to overcome
    the various challenges. We particularly consider those challenges of leveraging
    edge computing for a sensor-cloud and develop several edge-based research prototypes
    targeting the three key challenges, which have great potential to be applied in
    real-world scenarios. As another important contribution of this article, we highlight
    the salient open issues and future directions. These issues are currently the
    focus of extensive research and would continue to receive considerable attention
    in the near future. REFERENCES [1] Wang Ding, Wang Ping, and Wang Chenyu. 2020.
    Efficient multi-factor user authentication protocol with forward secrecy for real-time
    data access in WSNs. ACM Trans. Cyber-Phys. Syst. 4, 3 (May2020), 1–26. Reference
    [2] Wang Tian, Liang Yuzhu, Yang Yi, Xu Guangquan, Peng Hao, Liu Anfeng, and Jia
    Weijia. 2020. An intelligent edge-computing-based method to counter coupling problems
    in cyber-physical systems. IEEE Network 34, 3 (2020), 16–22. Reference [3] Haseeb-Ur-Rehman
    Rana M. Abdul, Liaqat Misbah, Aman Azana Hafizah Mohd, Hamid Siti Hafizah Ab,
    Ali Rana Liaqat, Shuja Junaid, and Khan Muhammad Khurram. 2021. Sensor cloud frameworks:
    State-of-the-art, taxonomy, and research issues. IEEE Sens. J. 21, 20 (2021),
    22347–22370. Reference 1Reference 2Reference 3 [4] Bose Sunanda, Paul Sumit Kumar,
    and Mukherjee Nandini. 2021. Predicting spatio-temporal phenomena of mobile resources
    in sensor cloud infrastructure. ACM Trans. Spatial Algor. Syst. 7, 3 (2021), 1–38.
    Reference [5] Wang Tian, Liang Yuzhu, Jia Weijia, Arif Muhammad, Liu Anfeng, and
    Xie Mande. 2019. Coupling resource management based on fog computing in smart
    city systems. J. Netw. Comput. Appl. 135 (2019), 11–19. Reference [6] Han Guangjie,
    Miao Xu, Wang Hao, Guizani Mohsen, and Zhang Wenbo. 2019. CPSLP: A cloud-based
    scheme for protecting source location privacy in wireless sensor networks using
    multi-sinks. IEEE Trans. Vehic. Technol. 68, 3 (March2019), 2739–2750. Navigate
    to [7] Dwivedi Rajendra Kumar, Saran Munish, and Kumar Rakesh. 2019. A survey
    on security over sensor-cloud. In Proceedings of the 2019 9th International Conference
    on Cloud Computing, Data Science & Engineering (Confluence’19). IEEE, 31–37. Reference
    1Reference 2Reference 3 [8] Geetha R., Suntheya A. K., and Srikanth G. Umarani.
    2020. Cloud integrated IoT enabled sensor network security: Research issues and
    solutions. Wireless Pers. Commun. 113, 2 (2020), 747–771. Reference 1Reference
    2 [9] Almolhis Nawaf, Alashjaee Abdullah Mujawib, Duraibi Salahaldeen, Alqahtani
    Fahad, and Moussa Ahmed Nour. 2020. The security issues in IoT-cloud: A review.
    In Proceedings of the 16th IEEE International Colloquium on Signal Processing
    & Its Applications (CSPA’20). IEEE, 191–196. Reference 1Reference 2 [10] Khan
    Mohammad Farhan, Dwivedi Rajendra Kumar, and Kumar Rakesh. 2019. Towards power
    aware data transmission in sensor cloud: A survey. In Proceedings of the International
    Conference on Computer Networks and Inventive Communication Technologies (ICCNCT’19).
    Springer, 317–325. Reference 1Reference 2 [11] Dizdarević Jasenka, Carpio Francisco,
    Jukan Admela, and Masip-Bruin Xavi. 2019. A survey of communication protocols
    for internet of things and related challenges of fog and cloud computing integration.
    ACM Comput. Surv. 51, 6 (2019), 1–29. Reference 1Reference 2 [12] Dwivedi Rajendra
    Kumar, Kumari Nikita, and Kumar Rakesh. 2020. Integration of wireless sensor networks
    with cloud towards efficient management in IoT: A review. In Proceedings of the
    Advances in Data and Information Sciences. Springer, 97–107. Reference 1Reference
    2Reference 3 [13] Dwivedi Rajendra Kumar and Kumar Rakesh. 2018. Sensor cloud:
    Integrating wireless sensor networks with cloud computing. In Proceedings of the
    5th IEEE Uttar Pradesh Section International Conference on Electrical, Electronics
    and Computer Engineering (UPCON’18). IEEE, 1–6. Navigate to [14] Ren Ju, Zhang
    Deyu, He Shiwen, Zhang Yaoxue, and Li Tao. 2019. A survey on end-edge-cloud orchestrated
    network computing paradigms: Transparent computing, mobile edge computing, fog
    computing, and cloudlet. ACM Comput. Surv. 52, 6 (2019), 1–36. Reference 1Reference
    2Reference 3 [15] Jahantigh Motahareh Nazari, Rahmani Amir Masoud, Navimirour
    Nima Jafari, and Rezaee Ali. 2020. Integration of internet of things and cloud
    computing: A systematic survey. IET Commun. 14, 2 (2020), 165–176. Reference 1Reference
    2 [16] Wu Yulei. 2020. Cloud-edge orchestration for the internet-of-things: Architecture
    and ai-powered data processing. IEEE IoT J. 2020 (2020), 1–14. Reference 1Reference
    2 [17] Misra Sudip, Chatterjee Subarna, and Obaidat Mohammad. 2017. On theoretical
    modeling of sensor cloud: A paradigm shift from wireless sensor network. IEEE
    Syst. J. 11, 2 (June2017), 1084–1093. Navigate to [18] Ahmad Waqas, Rasool Aamir,
    Javed Abdul Rehman, Baker Thar, and Jalil Zunera. 2021. Cyber security in iot-based
    cloud computing: A comprehensive survey. Electronics 11, 1 (2021), 1–34. Reference
    1Reference 2 [19] Chen Fei, Luo Duming, Xiang Tao, Chen Ping, Fan Junfeng, and
    Truong Hong-Linh. 2021. IoT cloud security review: A case study approach using
    emerging consumer-oriented applications. ACM Comput. Surv. 54, 4 (2021), 1–36.
    Reference 1Reference 2 [20] Peng Xiting, Ota Kaoru, and Dong Mianxiong. 2020.
    Multi-attribute based double auction towards resource allocation in vehicular
    fog computing. IEEE IoT J. 7, 4 (2020), 3094–3103. Reference [21] Lin Chuan, Han
    Guangjie, Qi Xingyue, Guizani Mohsen, and Shu Lei. 2020. A distributed mobile
    fog computing scheme for mobile delay-sensitive applications in SDN-enabled vehicular
    networks. IEEE Trans. Vehic. Technol. 69, 5 (2020), 5481–5493. Reference [22]
    Hwang Renhung, Hsueh Yuling, and Chung Haowei. 2014. A novel time-obfuscated algorithm
    for trajectory privacy protection. IEEE Trans. Serv. Comput. 7, 2 (June2014),
    126–139. Navigate to [23] Qi Lianyong, Meng Shunmei, Zhang Xuyun, Wang Ruili,
    Xu Xiaolong, Zhou Zhili, and Dou Wanchun. 2018. An exception handling approach
    for privacy-preserving service recommendation failure in a cloud environment.
    Sensors 18, 7 (June2018), 1–11. Reference 1Reference 2Reference 3 [24] Antonelli
    Fabio, Cortellessa Vittorio, Gribaudo Marco, Pinciroli Riccardo, Trivedi Kishor
    S., and Trubiani Catia. 2020. Analytical modeling of performance indices under
    epistemic uncertainty applied to cloud computing systems. Fut. Gener. Comput.
    Syst. 102 (2020), 746–761. Navigate to [25] Neiat Azadeh, Bouguettaya Athman,
    Sellis Timos, and Mistry Sajib. 2017. Crowdsourced coverage as a service: Two-level
    composition of sensor cloud services. IEEE Trans. Knowl. Data Eng. 29 (July2017),
    1384–1397. Navigate to [26] B. Chunlin Li A., A. Jingpan Bai, Yuan Ge B., and
    A Youlong Luo. 2020. Heterogeneity-aware elastic provisioning in cloud-assisted
    edge computing systems. Fut. Gener. Comput. Syst. 112 (2020), 1106–1121. Navigate
    to [27] Bijarbooneh Farshid, Du Wei, Ngai Edith, Fu Xiaoming, and Liu Jiangchuan.
    2016. Cloud-assisted data fusion and sensor selection for internet of things.
    IEEE IoT J. 3, 3 (June2016), 257–268. Reference 1Reference 2Reference 3 [28] Hao,
    Suling Yufu, and Jinxing Jia. 2015. A scalable cloud for internet of things in
    smart cities. J. Comput. 26, 3 (2015), 1–13. Reference 1Reference 2Reference 3
    [29] Yang Hanbo, Sun Zheng, Jiang Gedong, Zhao Fei, Lu Xufeng, and Mei Xuesong.
    2020. Cloud manufacturing-based condition monitoring platform with 5G and standard
    information model. IEEE IoT J. 8, 8 (2020), 6949–6948. Reference 1Reference 2
    [30] Subashini S. and Mathiyalagan P.. 2020. A cross layer design and flower pollination
    optimization algorithm for secured energy efficient framework in wireless sensor
    network. Wireless Pers. Commun. 112 (2020), 1601–1628. Navigate to [31] Yazdi
    M Amin and Politze Marius. 2020. Reverse engineering: The university distributed
    services. In Proceedings of the Future Technologies Conference (FTC’20). Springer,
    223–238. Reference 1Reference 2 [32] Chakraborty Aishwariya, Misra Sudip, and
    Mondal Ayan. 2020. QoS-aware dynamic cost management scheme for sensors-as-a-service.
    IEEE Trans. Serv. Comput. 2020 (2020), 1–12. Reference 1Reference 2Reference 3
    [33] Liu Nengxian, Pan Jeng-Shyang, et al. 2019. A bi-population QUasi-affine
    transformation evolution algorithm for global optimization and its application
    to dynamic deployment in wireless sensor networks. EURASIP J. Wireless Commun.
    Netw. 2019, 1 (2019), 175. Reference 1Reference 2 [34] Heravan Fatemeh, Moghaddam
    Mohammad, and Seno Seyed. 2016. SDN-based scheduling strategy on load balancing
    of virtual sensor resources in sensor-cloud. In Proceedings of the 8th International
    Symposium on Telecommunications (IST’16). 666–671. Reference 1Reference 2 [35]
    Dwivedi R. K., Singh S., and Kumar R.2019. Integration of wireless sensor networks
    with cloud: A review. In Proceedings of the 9th International Conference on Cloud
    Computing, Data Science and Engineering (Confluence’19). IEEE, 114–119. Reference
    [36] Wang Tian, Liang Yuzhu, Tian Yujie, Bhuiyan Md Zakirul Alam, Liu Anfeng,
    and Asyhari A. Taufiq. 2021. Solving coupling security problem for sustainable
    sensor-cloud systems based on fog computing. IEEE Trans. Sust. Comput. 6, 1 (2021),
    43–53. Reference [37] Distefano Salvatore, Merlino Giovanni, and Puliafito Antonio.
    2012. Enabling the cloud of things. In Proceedings of the IEEE International Conference
    on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS’12).
    IEEE, 858–863. Reference [38] Zhu Chunsheng, Leung Victor, Yang Laurence, and
    Shu Lei. 2013. Collaborative location-based sleep scheduling to integrate wireless
    sensor networks with mobile cloud computing. In Proceedings of the IEEE International
    Workshop on Globecom Workshops (GC Wkshps’13). IEEE, 452–457. Reference [39] Fortino
    Giancarlo, Pathan Mukaddim, and Fatta Giuseppe. 2012. Bodycloud: Integration of
    cloud computing and body sensor networks. In Proceedings of the IEEE International
    Conference on Cloud Computing Technology and Science (CloudCom’12). IEEE, 851–856.
    Reference [40] Yuriyama Madoka and Kushida Takayuki. 2010. Sensor-cloud infrastructure-physical
    sensor management with virtualized sensors on cloud computing. In Proceedings
    of the IEEE International Conference on 13th Network-Based Information Systems
    (NBiS’10). IEEE, 1–8. Reference [41] Abuelela Mahmoud and Olariu Stephan. 2010.
    Taking VANET to the clouds. In Proceedings of the 8th International Conference
    on Advances in Mobile Computing and Multimedia (MoMM’10). ACM, 6–13. Reference
    [42] Ali Ihsan, Gani Abdullah, Ahmedy Ismail, Yaqoob Ibrar, Khan Suleman, and
    Anisi Mohammad. 2018. Data collection in smart communities using sensor cloud:
    Recent advances and taxonomy and future research directions. IEEE Commun. Mag.
    56, 7 (July2018), 192–197. Reference 1Reference 2 [43] Yeh Loyao, Chiang Peiyuu,
    Tsai Yilang, and Huang Jiunlong. 2018. Cloud-based fine-grained health information
    access control framework for lightweight IoT devices with dynamic auditing and
    attribute revocation. IEEE Trans. Cloud Comput. 6, 2 (April2018), 532–544. Reference
    [44] Chatterjee Subarna, Misra Sudip, and Khan Samee U.. 2019. Optimal data center
    scheduling for quality of service management in sensor-cloud. IEEE Trans. Cloud
    Comput. 7, 1 (March2019), 89–101. Reference [45] Ojha Tamoghna, Misra Sudip, Raghuwanshi
    Narendra Singh, and Poddar Hitesh. 2019. DVSP: Dynamic virtual sensor provisioning
    in sensor–cloud-based internet of things. IEEE IoT J. 6, 3 (2019), 5265–5272.
    Reference [46] Wang Tian, Li Yang, Fang Weiwei, Xu Wenzheng, Liang Junbin, Chen
    Yewang, and Liu Xuxun. 2018. A comprehensive trustworthy data collection approach
    in sensor-cloud system. IEEE Trans. Big Data 2018 (March2018), 1–12. Reference
    1Reference 2 [47] Sangulagi P. and Sutagundar A.. 2020. Agent based load balancing
    in sensor cloud. In Proceedings of the International Conference on Inventive Computation
    Technologies (ICICT’20). IEEE, 342–347. Reference [48] Zhu Chunsheng, Li Xiuhua,
    Leung Victor, Hu Xiping, and Yang Laurence. 2014. Job scheduling for cloud computing
    integrated with wireless sensor network. In Proceedings of the IEEE International
    Conference on Cloud Computing Technology and Science (CloudCom’14). IEEE, 62–69.
    Navigate to [49] Albert Zomaya, Flavia Delicato, Igor Santos, Samee Khan, and
    Luci Pirmez. 2015. Olympus: The cloud of sensors. IEEE Cloud Comput. 2, 2 (April2015),
    48–56. Reference [50] Aazam Mohammad and Huh Euinam. 2014. Fog computing and smart
    gateway based communication for cloud of things. In Proceedings of the IEEE International
    Conference on Future Internet of Things and Cloud (FiCloud’14). IEEE, 464–470.
    Reference [51] Alli Adam A. and Alam Muhammad Mahbub. 2020. The fog cloud of things:
    A survey on concepts, architecture, standards, tools, and applications. Internet
    Things 9 (2020), 1–20. Reference [52] Rawat Priyanka, Singh Kamal Deep, Chaouchi
    Hakima, and Bonnin Jean Marie. 2014. Wireless sensor networks: A survey on recent
    developments and potential synergies. J. Supercomput. 68, 1 (April2014), 1–48.
    Reference [53] Vigneswari T. et al. 2021. Smart IOT cloud based livestock monitoring
    system: A survey. Turk. J. Comput. Math. Educ. 12, 10 (2021), 3308–3315. Reference
    [54] Mukherjee Proshikshya, Swain Tanmaya, and Datta Amlan. 2020. Issues of some
    task scheduling strategies on sensor cloud environment. In Smart Intelligent Computing
    and Applications Vol. 160. Springer, 651–663. Reference [55] Chythanya Kanegonda
    Ravi, Kumar KomuravellySudheer, Rajesh Mothe, and Reddy S. Tharun. 2020. Sensor
    cloud: A breakdown information on the utilization of wireless sensor network by
    means of cloud computing. Test Eng. Manage. 82 (2020), 13945–13954. https://www.researchgate.net/publication/340478642.
    Reference [56] Fortino Giancarlo, Parisi Daniele, Pirrone Vincenzo, and Fatta
    Giuseppe. 2014. BodyCloud: A SaaS approach for community body sensor networks.
    Fut. Gener. Comput. Syst. 35 (June2014), 62–79. Reference 1Reference 2 [57] Divi
    Kalyani and Liu Hong. 2013. Modeling of WBAN and cloud integration for secure
    and reliable healthcare. In Proceedings of the 8th International Conference on
    Body Area Networks (BodyNets’13). ICST, 128–131. Reference 1Reference 2 [58] Wan
    Jiafu, Zou Caifeng, Ullah Sana, Lai Chinfeng, Zhou Ming, and Wang Xiaofei. 2013.
    Cloud-enabled wireless body area networks for pervasive healthcare. IEEE Netw.
    27, 5 (September2013), 56–61. Reference [59] Bitam Salim, Mellouk Abdelhamid,
    and Zeadally Sherali. 2015. VANET-cloud: A generic cloud computing model for vehicular
    ad hoc networks. IEEE Wireless Commun. 22, 1 (February2015), 96–102. Reference
    [60] Muhammad Arif, Guojun Wang, and Emilia Balas Valentina. 2018. Secure VANETs:
    Trusted communication scheme between vehicles and infrastructure based on fog
    computing. Stud. Inf. Contr. 27, 2 (2018), 235–246. Reference [61] Madria S.2018.
    Sensor cloud: Sensing-as-a-service paradigm. In Proceedings of the 19th IEEE International
    Conference on Mobile Data Management (MDM’18). IEEE, 13–6. Reference [62] Xu Peng,
    He Shuanghong, Wang Wei, Susilo Willy, and Jin Hai. 2018. Lightweight searchable
    public-key encryption for cloud-assisted wireless sensor networks. IEEE Trans.
    Industr. Inf. 14, 8 (August2018), 3712–3723. Reference 1Reference 2 [63] Pereira
    R., Barros C., Pereira S., Mendes P. M., and Silva C. A.. 2020. A middleware for
    managing the heterogeneity of data provining from IoT devices in ambient assisted
    Living environments. In Proceedings of the IEEE Andes Conference (ANDESCON’20).
    IEEE, 1–6. Reference [64] Lee Eun, Viswanathan Hariharasudhan, and Pompili Dario.
    2018. Model-based thermal anomaly detection in cloud datacenters using thermal
    imaging. IEEE Trans. Cloud Comput. 6, 2 (April2018), 330–343. Reference [65] Wallace
    R. Bruce, Horsfall Frank, Goubran Rafik, El-Haraki Ali, and Knoefel Frank. 2019.
    The challenges of connecting smart home health sensors to cloud analytics. In
    Proceedings of the IEEE Sensors Applications Symposium (SAS’19). IEEE, 1–5. Reference
    [66] Alam Mohammad Nazmul and Glitho Roch H.. 2018. An infrastructure as a service
    for the internet of things. In Proceedings of the IEEE 7th International Conference
    on Cloud Networking (CloudNet’18). IEEE, 1–7. Reference [67] Jiang Jinfang, Han
    Guangjie, Shu Lei, Chan Sammy, and Wang Kun. 2017. A trust cloud model for underwater
    wireless sensor networks. IEEE Commun. Mag. 55, 3 (March2017), 110–116. Navigate
    to [68] Zhu Chunsheng, Li Xiuhua, Leung Victor, Yang Laurence, Ngai Edith, and
    Shu Lei. 2020. Towards pricing for sensor-cloud. IEEE Trans. Cloud Comput. 8,
    4 (2020), 1018–1029. Reference [69] Abdelwahab Sherif, Hamdaoui Bechir, Guizani
    Mohsen, and Znati Taieb. 2015. Cloud of things for sensing as a service: Sensing
    resource discovery and virtualization. In Proceedings of the IEEE International
    Conference on Global Communications (GLOCOM’15). IEEE, 1–7. Reference 1Reference
    2 [70] Hong Huajun, Fan Chingling, Lin Yenchen, and Hsu Chenghsin. 2016. Optimizing
    cloud-based video crowdsensing. IEEE IoT J. 3, 3 (June2016), 299–313. Reference
    1Reference 2 [71] Liu Jianhua, Yu Jiadi, and Shen Shigen. 2018. Energy-efficient
    two-layer cooperative defense scheme to secure sensor-clouds. IEEE Trans. Inf.
    Forens. Secur. 13, 2 (February2018), 408–420. Reference [72] Maiti Prasenjit,
    Shukla Jaya, Sahoo Bibhudatta, and Turuk Ashok. 2018. QoS-aware fog nodes placement.
    In Proceedings of the IEEE International Conference on Recent Advances in Information
    Technology (RAIT’18). IEEE, 1–6. Reference [73] Xiaolong Xu, Xuyun Zhang, Honghao
    gao, and Yuan Xue. 2019. BeCome: Blockchain-enabled computation offloading for
    IoT in mobile edge computing. IEEE Trans. Industr. Inf. 16, 6 (2019), 4187–4195.
    Reference [74] Huang Shi Ming, Yen David C., Yan Ting Jyun, and Yang Yi Ting.
    2021. An intelligent mechanism to automatically discover emerging technology trends:
    Exploring regulatory technology. ACM Trans. Manage. Inf. Syst. 13, 2 (2021), 1–29.
    Reference [75] Fan Z., Yang W., and Tian K.. 2019. An edge computing service model
    based on information-centric networking. In Proceedings of the IEEE 25th International
    Conference on Parallel and Distributed Systems (ICPADS’19). IEEE, 498–505. Reference
    [76] Hassan Mohammad, Song Biao, and Huh Euinam. 2009. A framework of sensor-cloud
    integration opportunities and challenges. In Proceedings of the 3rd International
    Conference on Ubiquitous Information Management and Communication (ICUIMC’09).
    ACM, 618–626. Reference 1Reference 2 [77] Puliafito Carlo, Mingozzi Enzo, Longo
    Francesco, Puliafito Antonio, and Rana Omer F.. 2019. Fog computing for the internet
    of things: A survey. ACM Trans. Internet Technol. 19, 2 (2019), 1–41. Reference
    1Reference 2 [78] Venanzi Riccardo, Kantarci Burak, Foschini Luca, and Bellavista
    Paolo. 2018. MQTT-driven sustainable node discovery for internet of things-fog
    environments. In Proceedings of the IEEE International Conference on Communications
    (ICC’18). IEEE, 1–6. Reference [79] Hamad Salma Abdalla, Sheng Quan Z., Zhang
    Wei Emma, and Nepal Surya. 2020. Realizing an internet of secure things: A survey
    on issues and enabling technologies. IEEE Commun. Surv. Tutor. 22, 2 (2020), 1372–1391.
    Reference [80] Mukherjee Mithun, Shu Lei, and Wang Di. 2018. Survey of fog computing:
    Fundamental and network applications and research challenges. IEEE Commun. Surv.
    Tutor. 20, 3 (March2018), 1826–1857. Reference 1Reference 2 [81] Qadri Yazdan
    Ahmad, Nauman Ali, Zikria Yousaf Bin, Vasilakos Athanasios V., and Kim Sung Won.
    2020. The future of healthcare internet of things: A survey of emerging technologies.
    IEEE Commun. Surv. Tutor. 22, 2 (2020), 1121–1167. Reference [82] Liu C., Hua
    J., and Julien C.. 2019. Scents: Collaborative sensing in proximity iot networks.
    In Proceedings of the IEEE International Conference on Pervasive Computing and
    Communications Workshops (PerCom Workshops’19). IEEE, 189–195. Reference 1Reference
    2 [83] Chiang Mung and Zhang Tao. 2016. Fog and IoT: An overview of research opportunities.
    IEEE IoT J. 3, 6 (December2016), 854–864. Reference [84] Chen Min, Qian Yongfeng,
    Hao Yixue, Li Yong, and Song Jeungeun. 2018. Data-driven computing and caching
    in 5G networks: Architecture and delay analysis. IEEE Wireless Commun. 25, 1 (2018),
    70–75. Reference [85] Mukherjee Amitav. 2018. Fog-aided data reception in next-generation
    MIMO radio access networks with edge sensing. In Proceedings of the IEEE International
    Conference on Communications (ICC’18). IEEE, 1–6. Reference 1Reference 2 [86]
    Kang Jinkyu, Simeone Osvaldo, Kang Joonhyuk, and Shitz Shlomo. 2018. Control-data
    separation with Decemberentralized edge control in fog-assisted uplink communications.
    IEEE Trans. Wireless Commun. 17, 6 (June2018), 3686–3696. Reference [87] Battisti
    A. L. É., Muchaluat-Saade D. C., and Delicato F. C.. 2020. V-PRISM: An edge-based
    IoT architecture to virtualize multimedia sensors. In Proceedings of the IEEE
    6th World Forum on Internet of Things (WF-IoT’20). IEEE, 1–6. Reference 1Reference
    2 [88] Sthapit Saurav, Thompson John, Robertson Neil M., and Hopgood James R..
    2018. Computational load balancing on the edge in absence of cloud and fog. IEEE
    Trans. Mobile Comput. 18, 7 (2018), 1499–1512. Reference 1Reference 2 [89] Diro
    Abebe and Chilamkurti Naveen. 2018. Leveraging LSTM networks for attack detection
    in fog-to-things communications. IEEE Commun. Mag. 56, 9 (September2018), 124–130.
    Reference 1Reference 2 [90] Yang Peng, Zhang Ning, Zhang Shan, Yang Kan, Yu Li,
    and Shen Xuemin. 2017. Identifying the most valuable workers in fog-assisted spatial
    crowdsourcing. IEEE IoT J. 4, 5 (October2017), 1193–1203. Reference 1Reference
    2 [91] Hong Cheol-Ho and Varghese Blesson. 2019. Resource management in fog/edge
    computing: A survey on architectures, infrastructure, and algorithms. ACM Comput.
    Surv. 52, 5 (2019), 1–37. Reference [92] Qiu Tie, Chi Jiancheng, Zhou Xiaobo,
    Ning Zhaolong, and Wu Dapeng Oliver. 2020. Edge computing in industrial internet
    of things: Architecture, advances and challenges. IEEE Commun. Surv. Tutor. 22,
    4 (2020), 2462–2488. Reference [93] Javed Abbas, Larijani Hadi, Ahmadinia Ali,
    Emmanuel Rohinton, Mannion Mike, and Gibson Des. 2017. Design and implementation
    of a cloud enabled random neural network-based decentralized smart controller
    with intelligent sensor nodes for HVAC. IEEE IoT J. 4, 2 (April2017), 393–403.
    Navigate to [94] Challita Stephanie, Paraiso Fawaz, and Merle Philippe. 2017.
    Towards formal-based semantic interoperability in multi-clouds: The FCLOUDS framework.
    In Proceedings of the IEEE International Conference on Cloud Computing (CLOUD’17).
    IEEE, 710–713. Reference [95] LeTun Anh, Quoc Hoan N. Mau, Serrano Martin, Hauswirth
    Manfred, Soldatos John, Papaioannou Thanasis, and Aberer Karl. 2012. Global sensor
    modeling and constrained application methods enabling cloud-based open space smart
    services. In Proceedings of the IEEE Ubiquitous Intelligence and Computing and
    9th International Conference on Autonomic and Trusted Computing (UIC/ATC’12).
    IEEE, 196–203. Reference [96] Zhu Chunsheng, Leung Victor, Wang Kun, Yang Laurence,
    and Zhang Yan. 2017. Multi-method data delivery for green sensor-cloud. IEEE Commun.
    Mag. 55, 5 (May2017), 176–182. Reference [97] Ahmed Sevil, Topalov Andon, and
    Shakev Nikola. 2017. A robotized wireless sensor network based on MQTT cloud computing.
    In Proceedings of the IEEE International Workshop on Electronics and Control and
    Measurement and Signals and their Application to Mechatronics (ECMSM’17). IEEE,
    1–6. Reference [98] Xu Yi and Helal Abdelsalam. 2015. Scalable cloud–sensor architecture
    for the Internet of Things. IEEE IoT J. 3, 3 (2015), 285–298. Reference [99] Zhou
    Jiantao, Xiang Yong, Zhang Leoyu, Chen Fei, Pang Shaoning, and Liao Xiaofeng.
    2017. Computation outsourcing meets lossy channel: Secure sparse robustness decoding
    service in multi-clouds. IEEE Trans. Big Data 4 (June2017), 1–10. Reference [100]
    Celesti Antonio, Fazio Maria, Giacobbe Maurizio, Puliafito Antonio, and Villari
    Massimo. 2016. Characterizing cloud federation in IoT. In Proceedings of the IEEE
    International Workshops on Advanced Information Networking and Applications Workshops
    (WAINA’16). IEEE, 93–98. Reference [101] Ficco Massimo, Esposito Christian, Xiang
    Yang, and Palmieri Francesco. 2017. Pseudo-dynamic testing of realistic edge-fog
    cloud ecosystems. IEEE Commun. Mag. 55, 11 (November2017), 98–104. Reference 1Reference
    2 [102] Li Zhi, Zhou Xianwei, Liu Yanzhu, Xu Haitao, and Miao Li. 2017. A non-cooperative
    differential game-based security model in fog computing. China Commun. 14, 1 (January2017),
    180–189. Navigate to [103] Kim Daewoo, Lee Hyojung, Song Hyungseok, Choi Nakjung,
    and Yi Yung. 2018. On the economics of fog computing: Inter-play among infrastructure
    and service providers and users and edge resource owners. In Proceedings of the
    IEEE International Conference on Communications (ICC’18). IEEE, 1–6. Reference
    1Reference 2 [104] Yang Chi, Puthal Deepak, Mohanty Saraju, and Kougianos Elias.
    2017. Big-sensing-data curation for the cloud is coming: A promise of scalable
    cloud-data-center mitigation for next-generation IoT and wireless sensor networks.
    IEEE Consum. Electr. Mag. 6, 4 (October2017), 48–56. Reference 1Reference 2 [105]
    Roy Arijit, Misra Sudip, and Nag Soumi. 2020. PRIME: An optimal pricing scheme
    for mobile sensors-as-a-service. IEEE Trans. Mobile Comput. 2020 (2020), 1–12.
    Reference [106] Wang Heng, Chen Liuqing, Li Min, and Gong Pengfei. 2020. Consensus-based
    clock synchronization in wireless sensor networks with truncated exponential delays.
    IEEE Trans. Sign. Process. 68 (2020), 1425–1438. Reference [107] Hu Pengfei, Ning
    Huansheng, Qiu Tie, Song Houbing, Wang Yanna, and Yao Xuanxia. 2017. Security
    and privacy preservation scheme of face identification and resolution framework
    using fog computing in internet of things. IEEE IoT J. 4, 5 (October2017), 1143–1155.
    Reference [108] Henze Martin, Hummen René, Matzutt Roman, Catrein Daniel, and
    Wehrle Klaus. 2013. Maintaining user control while storing and processing sensor
    data in the cloud. Int. J. Grid High Perf. Comput. 5, 4 (December2013), 97–112.
    Reference [109] Henze Martin. 2020. The quest for secure and privacy-preserving
    cloud-based industrial cooperation. In Proceedings of IEEE Conference on Communications
    and Network Security (CNS’20). IEEE, 1–5. Reference [110] Yang Kai, Shi Yuanming,
    and Ding Zhi. 2017. Low-rank matrix completion for mobile edge caching in Fog-RAN
    via Riemannian optimization. In Proceedings of the IEEE Global Communications
    Conference (GLOBECOM’17). IEEE, 1–6. Reference [111] Zhu Chunsheng, Leung Victor,
    Yang Laurence, Shu Lei, Rodrigues Joel, and Li Xiuhua. 2015. Trust assistance
    in sensor-cloud. In Proceedings of the IEEE International Conference on Computer
    Communications Workshops (INFOCOM WKSHPS’15). IEEE, 342–347. Reference [112] Zhu
    Liehuang, Zhang Chuan, Xu Chang, and Sharif Kashif. 2018. RTSense: Providing reliable
    trust-based crowdsensing services in CVCC. IEEE Netw. 32, 3 (June2018), 20–26.
    Reference [113] Feng Li, Yang Jie, and Zhang Huan. 2017. RT-notification: A novel
    real-time notification protocol for wireless control in fog computing. Chin. Commun.
    14, 11 (December2017), 17–28. Reference [114] Yu Chiamu, Chen Chiyuan, and Chao
    Hanchieh. 2015. Verifiable and privacy-assured and and accurate signal collection
    for cloud-assisted wireless sensor networks. IEEE Commun. Mag. 53, 8 (August2015),
    48–53. Reference [115] Saha Sajeeb, Habib Md. Ahsan, Adhikary Tamal, Razzaque
    Md. Abdur, and Rahman Md. Mustafizur. 2019. Tradeoff between execution speedup
    and reliability for compute-intensive code offloading in mobile device cloud.
    Multimedia Syst. 25, 5 (2019), 577–589. Reference [116] Olariu Stephan. 2020.
    A survey of vehicular cloud research: Trends, applications and challenges. IEEE
    Trans. Intell. Transport. Syst. 21, 6 (2020), 2648–2663. Reference 1Reference
    2 [117] Bruin Xavi, Tordera Eva, and Tashakor Ghazal. 2016. Foggy clouds and cloudy
    fogs: A real need for coordinated management of fog-to-cloud computing systems.
    IEEE Wireless Commun. 23, 5 (October2016), 120–128. Reference 1Reference 2 [118]
    Chen Xiaoyu, Wang Lening, and Wang Canran. 2018. Predictive offloading in mobile-fog-cloud
    enabled cyber-manufacturing systems. In Proceedings of the IEEE Industrial Cyber-Physical
    Systems (ICPS’18). IEEE, 167–172. Reference 1Reference 2Reference 3 [119] Neto
    Luis, Reis Joao, Silva Ricardo, and Goncalves Gil. 2017. Sensor selcomp and a
    smart component for the industrial sensor cloud of the future. In Proceedings
    of the IEEE International Conference on Industrial Technology (ICIT’17). IEEE,
    1256–1261. Reference 1Reference 2Reference 3 [120] Zhou Jianshan, Tian Daxin,
    Wang Yunpeng, Sheng Zhengguo, Duan Xuting, and Leung Victor C. M.. 2019. Reliability-optimal
    cooperative communication and computing in connected vehicle systems. IEEE Trans.
    Mobile Comput. 19, 5 (2019), 1216–1232. Reference 1Reference 2 [121] Alrawahi
    Ahmed Salim, Lee Kevin, and Lotfi Ahmad. 2019. A multiobjective QoS model for
    trading cloud of things resources. IEEE IoT J. 6, 6 (2019), 9447–9463. Reference
    1Reference 2 [122] Kaur Kuljeet, Garg Sahil, Kaddoum Georges, Ahmed Syed Hassan,
    Gagnon Francois, and Atiquzzaman Mohammed. 2019. Demand-response management using
    a fleet of electric vehicles: An opportunistic-SDN-based edge-cloud framework
    for smart grids. IEEE Netw. 33, 5 (2019), 46–53. Reference [123] Al-Shayeji Mohammad,
    Ebrahim Fahad, et al. 2019. A secure and energy-efficient platform for the integration
    of wireless sensor networks and mobile cloud computing. Comput. Netw. 165, 24
    (2019), 1–13. Reference 1Reference 2 [124] Han Guangjie, Du Jiaxin, Lin Chuan,
    Wu Hongyi, and Guizani Mohsen. 2020. An energy-balanced trust cloud migration
    scheme for underwater acoustic sensor networks. IEEE Trans. Wireless Commun. 19,
    3 (2020), 1636–1649. Reference [125] Zeadally Sherali, Shaikh Faisal Karim, Talpur
    Anum, and Sheng Quan Z.. 2020. Design architectures for energy harvesting in the
    internet of things. Renew. Sust. Energy Rev. 128 (2020), 1–22. DOI: Reference
    [126] Chatterjee Subarna, Sarkar Subhadeep, and Misra Sudip. 2015. Energy-efficient
    data transmission in sensor-cloud. In Proceedings of the IEEE International Conference
    on Applications and Innovations in Mobile Computing (AIMoC’15). IEEE, 68–73. Reference
    [127] Grace Shakena and Sumalatha. 2014. SCA-an energy efficient transmission
    in sensor cloud. In Proceedings of the IEEE International Conference on Recent
    Trends in Information Technology (ICRTIT’14). IEEE, 1–5. Reference [128] Wu Dapeng,
    Yang Boran, Wang Honggang, Wu Dalei, and Wang Ruyan. 2016. An energy-efficient
    data forwarding strategy for heterogeneous WBANs. IEEE Access 4 (September2016),
    7251–7261. Reference [129] Bhunia Suman, Pal Jayita, and Mukherjee Nandini. 2014.
    Fuzzy assisted event driven data collection from sensor nodes in sensor-cloud
    infrastructure. In In Proceedings of the 14th IEEE/ACM International Symposium
    on Cluster and Cloud and Grid Computing (CCGrid’14). IEEE/ACM, 635–640. Reference
    [130] Wang Tian, Liang Yuzhu, Zhang Yilin, Zheng Xi, Arif Muhammad, Wang Jin,
    and Jin Qun. 2020. An intelligent dynamic offloading from cloud to edge for smart
    iot systems with big data. IEEE Trans. Netw. Sci. Eng. 7, 4 (2020), 2598–2607.
    Reference [131] Dalvi Rashmi and Madria Sanjay. 2015. Energy efficient scheduling
    of fine-granularity tasks in a sensor cloud. In Proceedings of the IEEE International
    Conference on Database Systems for Advanced Applications (DASFAA’15). IEEE, 498–513.
    Reference 1Reference 2Reference 3 [132] Dinh Thanh and Kim Younghan. 2017. Information
    centric sensor-cloud integration: An efficient model to improve wireless sensor
    networks lifetime. In Proceedings of the IEEE International Conference on Communications
    (ICC’17). IEEE, 1–6. Reference [133] Yan Zeyuan, Tan Yanyan, Zheng Wei, Meng Lili,
    and Zhang Huaxiang. 2021. Leader recommend operators selection strategy for a
    multiobjective evolutionary algorithm based on decomposition. Inf. Sci. 550 (2021),
    166–188. Reference 1Reference 2 [134] Kurschl Werner and Beer Wolfgang. 2009.
    Combining cloud computing and wireless sensor networks. In Proceedings of the
    11th International Conference on Information Integration and Web-based Applications
    & Services (iiWAS’09). ACM, 512–518. Reference [135] Zhu Chunsheng, Leung Victor,
    Yang Laurence, Hu Xiping, and Shu Lei. 2015. Collaborative location-based sleep
    scheduling for wireless sensor networks integrated with mobile cloud computing.
    IEEE Trans. Comput. 64, 7 (July2015), 1844–1856. Reference [136] Kaur Navroop
    and Sood Sandeep. 2017. An energy-efficient architecture for the internet of things
    (IoT). IEEE Syst. J. 11, 2 (June2017), 796–805. Reference [137] Chen Zheshi, Li
    Chunhong, and Sun Wenjun. 2020. Bitcoin price prediction using machine learning:
    An approach to sample dimension engineering. J. Comput. Appl. Math. 365 (2020),
    1–13. Reference [138] Parmezan Antonio Rafael Sabino, Souza Vinicius M. A., and
    Batista Gustavo E. A. P. A.. 2019. Evaluation of statistical and machine learning
    models for time series prediction: Identifying the state-of-the-art and the best
    conditions for the use of each model. Inf. Sci. 484 (2019), 302–337. Reference
    [139] Hernández-Álvarez Myriam, Hernández Edgar A. Torres, Yoo Sang Guun, et al.
    2019. Stock market data prediction using machine learning techniques. In Proceedings
    of the International Conference on Information Technology & Systems (ICITS’19).
    Springer, 539–547. Reference [140] Elodie Chapoulade, Aurélie Talon, Alaa Chateauneuf,
    Pierre Breul, Guillaume Hermand, and Marc Leconte. 2020. Sensors position optimization
    for monitoring the convergence of radioactive waste storage tunnel. Nucl. Eng.
    Des. 367 (2020), 1–10. Reference [141] Chatterjee Subarna and Misra Sudip. 2015.
    Optimal composition of a virtual sensor for efficient virtualization within sensor-cloud.
    In Proceedings of the IEEE International Conference on Communications (ICC’15).
    IEEE, 448–453. Reference [142] You Changsheng, Huang Kaibin, and Chae Hyukjin.
    2016. Energy efficient mobile cloud computing powered by wireless energy transfer.
    IEEE J. Select. Areas Commun. 34, 5 (May2016), 1757–1771. Reference [143] Chen
    Jiming, Li Songyuan, Chen Shuo, He Shibo, and Shi Zhiguo. 2017. Q-charge: A quadcopter-based
    wireless charging platform for large-scale sensing applications. IEEE Netw. 31,
    6 (November2017), 56–61. Reference [144] Zhao Yisheng, Leung Victor, Zhu Chunsheng,
    Gao Hui, Chen Zhonghui, and Ji Hong. 2017. Energy-efficient sub-carrier and power
    allocation in cloud-based cellular network with ambient RF energy harvesting.
    IEEE Access 5 (February2017), 1340–1352. Reference [145] Wang Tian, Liang Yuzhu,
    Mei Yaxin, Arif Muhammad, and Zhu Chunsheng. 2018. High-accuracy localization
    for indoor group users based on extended Kalman filter. Int. J. Distrib. Sens.
    Netw. 14, 11 (2018), 1–10. Reference [146] Latif Ahmed, Atty Bassem, and Hossain
    Shamim. 2018. Secure quantum steganography protocol for fog cloud Internet of
    Things. IEEE Access 6 (March2018), 10332–10340. Reference [147] Fazio Maria and
    Puliafito Antonio. 2015. Cloud4sens: A cloud-based architecture for sensor controlling
    and monitoring. IEEE Commun. Mag. 53, 3 (March2015), 41–47. Reference [148] Neiat
    Azadeh, Bouguettaya Athman, Sellis Timos, and Dong Hai. 2014. Spatio-temporal
    composition of sensor cloud services. In Proceedings of the IEEE International
    Conference on Web Services (ICWS’14). IEEE, 241–248. Reference [149] Guezguez
    Mohamed, Rekhis Slim, and Boudriga Noureddine. 2017. A sensor cloud for the provision
    of secure and QoS-aware healthcare services. Arab. J. Sci. Eng. 2 (November2017),
    1–24. Reference [150] Javed Abbas, Larijani Hadi, Ahmadinia Ali, and Gibson Des.
    2017. Smart random neural network controller for HVAC using cloud computing technology.
    IEEE Trans. Industr. Inf. 13, 1 (February2017), 351–360. Reference [151] Xia Zhihua,
    Wang Xinhui, Zhang Liangao, Qin Zhan, Sun Xingming, and Ren Kui. 2016. A privacy-preserving
    and copy-deterrence content-based image retrieval scheme in cloud computing. IEEE
    Trans. Inf. Forens. Secur. 11, 11 (November2016), 2594–2608. Reference 1Reference
    2 [152] Butun Ismail, Morgera Salvatore D., and Sankar Ravi. 2014. A survey of
    intrusion detection systems in wireless sensor networks. IEEE Commun. Surv. Tutor.
    16, 1 (May2014), 266–282. Reference [153] Giang Nam, Lea Rodger, Blackstock Michael,
    and Leung Victor. 2018. Fog at the edge: Experiences building an edge computing
    platform. In Proceedings of the IEEE International Conference on Edge Computing
    (EDGE’18). IEEE, 9–16. Reference 1Reference 2 [154] Chatterjee Subarna, Ladia
    Ranjana, and Misra Sudip. 2017. Dynamic optimal pricing for heterogeneous service-oriented
    architecture of sensor-cloud infrastructure. IEEE Trans. Serv. Comput. 10, 2 (March2017),
    203–216. Reference [155] Qi Qi, Liao Jianxin, Wang Jingyu, Li Qi, and Cao Yufei.
    2016. Dynamic resource orchestration for multi-Task application in heterogeneous
    mobile cloud computing. In Proceedings of the Computer Communications Workshops
    (INFOCOM WKSHPS’16). IEEE, 221–226. Reference [156] Cong Peijin, Zhou Junlong,
    Li Liying, Cao Kun, and Li Keqin. 2020. A survey of hierarchical energy optimization
    for mobile edge computing: A perspective from end devices to the cloud. ACM Comput.
    Surv. 53, 2 (2020), 1–44. Reference 1Reference 2Reference 3 [157] Ti Ti Nguyen,
    Vu Nguyen Ha, Long Bao Le, and Schober Robert. 2020. Joint data compression and
    computation offloading in hierarchical fog-cloud systems. IEEE Trans. Wireless
    Commun. 19, 1 (2020), 293–309. Reference [158] Huang Tiansheng, Lin Weiwei, Xiong
    Chennian, Pan Rui, and Huang Jingxuan. 2020. An ant colony optimization-based
    multiobjective service replicas placement strategy for fog computing. IEEE Trans.
    Cybernet. 2020 (2020), 1–14. Reference [159] He Jianhua, Wei Jian, Chen Kai, Tang
    Zuoyin, Zhou Yi, and Zhang Yan. 2018. Multitier fog computing with large-scale
    iot data analytics for smart cities. IEEE IoT J. 5, 2 (April2018), 677–686. Reference
    [160] Moghaddam Mohammad and Garcia Alberto. 2018. A fog-based internet of energy
    architecture for transactive energy management systems. IEEE IoT J. 5, 2 (April2018),
    1055–1069. Reference [161] Bouachir Ouns, Aloqaily Moayad, Tesng Lewis, and Boukerche
    Azzedine. 2020. Blockchain and fog computing for cyber-physical systems: Case
    of smart industry. Computer 53, 9 (2020), 36–45. Reference [162] Zhou Zhenyu,
    Liao Haijun, Wang Xiaoyan, Mumtaz Shahid, and Rodriguez Jonathan. 2020. When vehicular
    fog computing meets autonomous driving: Computational resource management and
    task offloading. IEEE Netw. 34, 6 (2020), 1–7. Reference [163] Yu Yong, Au Manho,
    Ateniese Giuseppe, Huang Xinyi, Dai Yuanshun, Susilo Willy, and Min Geyong. 2017.
    Identity-based remote data integrity checking with perfect data privacy preserving
    for cloud storage. IEEE Trans. Inf. Forens. Secur. 12, 4 (October2017), 767–778.
    Reference 1Reference 2 [164] Wang Tian, Zhou Jiyuan, Huang Minzhe, Bhuiyan MD
    Zakirul Alam, Liu Anfeng, Xu Wenzheng, and Xie Mande. 2018. Fog-based storage
    technology to fight with cyber threat. Fut. Gener. Comput. Syst. 83 (2018), 208–218.
    Reference 1Reference 2Reference 3 [165] Chen Fei, Meng Fengming, Xiang Tao, Dai
    Hua, Li Jianqiang, and Qin Jing. 2020. Towards usable cloud storage auditing.
    IEEE Trans. Parallel Distrib. Syst. 31, 11 (2020), 2605–2617. Reference 1Reference
    2 [166] Liu Xueqiao, Yang Guomin, Susilo Willy, Tonien Joseph, and Shen Jian.
    2021. Privacy-preserving multi-keyword searchable encryption for distributed systems.
    IEEE Trans. Parallel Distrib. Syst. 32, 3 (2021), 561–574. Reference 1Reference
    2 [167] Qian Yi. 2020. 5G wireless communication networks: Challenges in security
    and privacy. IEEE Wireless Commun. 27, 4 (2020), 2–3. Reference 1Reference 2 [168]
    Zhang Jindan, Lu Rongxing, Wang Baocang, and Wang Xu An. 2020. Comment on “privacy-preserving
    public auditing protocol for regenerating-code-based cloud storage.” IEEE Trans.
    Inf. Forens. Secur. 16 (2020), 1288–1289. Reference 1Reference 2 [169] Tiplea
    Ferucio Laurentiu and Hristea Cristian. 2021. PUF protected variables: A solution
    to RFID security and privacy under corruption with temporary state disclosure.
    IEEE Trans. Inf. Forens. Secur. 16 (2021), 999–1013. Reference 1Reference 2 [170]
    Wu Wentai, He Ligang, Lin Weiwei, and Mao Rui. 2021. Accelerating federated learning
    over reliability-agnostic clients in mobile edge computing systems. IEEE Trans.
    Parallel Distrib. Syst. 32, 7 (2021), 1539–1551. Reference [171] Lu Cuixian, Feng
    Guolong, Zheng Yuxin, Zhang Keke, Tan Han, Dick Galina, and Wickert Jens. 2020.
    Real-time retrieval of precipitable water vapor from galileo observations by using
    the MGEX network. IEEE Trans. Geosci. Remote Sens. 58, 7 (2020), 4743–4753. Reference
    1Reference 2 [172] Luo Hanguang, Wen Guangjun, and Su Jian. 2020. Lightweight
    three factor scheme for real-time data access in wireless sensor networks. Wireless
    Netw. 26, 2 (2020), 955–970. Reference [173] Liao Kang, Lin Chunyu, Zhao Yao,
    and Gabbouj Moncef. 2020. DR-GAN: Automatic radial distortion rectification using
    conditional GAN in real-time. IEEE Trans. Circ. Syst. Vid. Technol. 30, 3 (2020),
    725–733. Reference [174] Wang Tian, Zeng Jiandian, Lai Yongxuan, Cai Yiqiao, Tian
    Hui, Chen Yonghong, and Wang Baowei. 2020. Data collection from WSNs to the cloud
    based on mobile Fog elements. Fut. Gener. Comput. Syst. 105 (2020), 864–872. Navigate
    to [175] Ahmad Iftikhar, Ayaz Samreen, Arafat Syed Yasser, Riaz Faisal, and Jabeen
    Humaira. 2013. QoS routing for real time traffic in mobile ad hoc network. In
    Proceedings of the 7th International Conference on Ubiquitous Information Management
    and Communication (ICUIMC’13). 1–6. Reference 1Reference 2 [176] Kim Dabin and
    Ko Young-Bae. 2015. A novel message broadcasting strategy for reliable content
    retrieval in multi-hop wireless content centric networks. In Proceedings of the
    9th International Conference on Ubiquitous Information Management and Communication
    (IMCOM’15). 1–8. Reference 1Reference 2 [177] Zhou Zhangbing, Zhao Deng, Liu Lu,
    and Hung Patrick. 2018. Energy-aware composition for wireless sensor networks
    as a service. Fut. Gener. Comput. Syst. 80 (March2018), 299–310. Reference 1Reference
    2 [178] Gong Wenwen, Qi Lianyong, and Xu Yanwei. 2018. Privacy-aware multidimensional
    mobile service quality prediction and recommendation in distributed fog environment.
    Wireless Commun. Mobile Comput. 4 (April2018), 1–8. Reference 1Reference 2 [179]
    Guo Hui, Rui Lan Lan, and Gao Zhi Peng. 2020. A zone-based content pre-caching
    strategy in vehicular edge networks. Fut. Gener. Comput. Syst. 106 (2020), 22–33.
    Reference [180] Viloria Amelec, Zelaya Nelson Alberto Lizardo, and Mercado-Caruzo
    Nohora. 2020. Design of a network with wireless sensor applied to data transmission
    based on IEEE 802.15.4 standard. Proc. Comput. Sci. 175 (2020), 665–670. Reference
    [181] Wahab Omar Abdel, Mourad Azzam, Otrok Hadi, and Taleb Tarik. 2021. Federated
    machine learning: Survey, multi-level classification, desirable criteria and future
    directions in communication and networking systems. IEEE Commun. Surv. Tutor.
    23, 2 (2021), 1342–1397. Reference [182] Jiang Jinfang, Han Guangjie, Shu Lei,
    Chan Sammy, and Wang Kun. 2017. A trust model based on cloud theory in underwater
    acoustic sensor networks. IEEE Trans. Industr. Inf. 13, 1 (December2017), 342–350.
    Reference 1Reference 2 [183] Wang Tian, Zhang Guangxue, Bhuiyan Md Zakirul Alam,
    Liu Anfeng, Jia Weijia, and Xie Mande. 2020. A novel trust mechanism based on
    fog computing in sensor–cloud system. Fut. Gener. Comput. Syst. 109 (2020), 573–582.
    Navigate to [184] Airehrour David, Gutierrez Jairo A., and Ray Sayan Kumar. 2019.
    SecTrust-RPL: A secure trust-aware RPL routing protocol for Internet of Things.
    Fut. Gener. Comput. Syst. 93 (2019), 860–876. Reference 1Reference 2 [185] Yaseen
    Qussai, AlBalas Firas, Jararweh Yaser, and Ayyoub Mahmoud. 2016. A fog computing
    based system for selective forwarding detection in mobile wireless sensor networks.
    In Proceedings of the IEEE International Workshops on Foundations and Applications
    of Self Systems (FAS-W’16). IEEE, 256–262. Reference 1Reference 2 [186] Abedin
    Sarder Fakhrul, Alam Md. Golam Rabiul, Kazmi S. M. Ahsan, Tran Nguyen H., Niyato
    Dusit, and Hong Choong Seon. 2019. Resource allocation for ultra-reliable and
    enhanced mobile broadband IoT applications in fog network. IEEE Trans. Commun.
    67, 1 (2019), 489–502. Reference 1Reference 2 [187] Zheng Xi, Pan Lei, and Yilmaz
    Erdem. 2017. Security analysis of modern mission critical android mobile applications.
    In Proceedings of the Australasian Computer Science Week Multiconference (MOBILESoft’14).
    ACM, 1–9. Reference 1Reference 2 [188] Peng Sancheng, Wang Guojun, Zhou Yongmei,
    Wan Cong, Wang Cong, Yu Shui, and Niu Jianwei. 2019. An immunization framework
    for social networks through big data based influence modeling. IEEE Trans. Depend.
    Secure Comput. 16, 6 (2019), 984–995. Reference [189] Radhappa Harish, Pan Lei,
    Zheng James Xi, and Wen Sheng. 2018. Practical overview of security issues in
    wireless sensor network applications. Int. J. Comput. Appl. 40, 4 (2018), 202–213.
    Reference Cited By View all Ahmed U, Lin J and Srivastava G. (2023). Exploring
    the Potential of Cyber Manufacturing System in the Digital Age. ACM Transactions
    on Internet Technology. 23:4. (1-38). Online publication date: 30-Nov-2023. https://doi.org/10.1145/3596602
    Fu J, Liu X, Yang J, Yin D and Zhou Z. (2023). Optimization of cavitation characteristics
    of aviation fuel centrifugal pump inducer based on surrogate model. Structural
    and Multidisciplinary Optimization. 66:11. Online publication date: 1-Nov-2023.
    https://doi.org/10.1007/s00158-023-03685-8 Mei Y, Wang W, Liang Y, Liu Q, Chen
    S and Wang T. Privacy-Enhanced Cooperative Storage Scheme for Contact-free Sensory
    Data in AIoT with Efficient Synchronization. ACM Transactions on Sensor Networks.
    0:0. https://doi.org/10.1145/3617998 Index Terms Edge Computing and Sensor-Cloud:
    Overview, Solutions, and Directions Computer systems organization Architectures
    Distributed architectures Computing methodologies Distributed computing methodologies
    Networks Network architectures Security and privacy Recommendations Fuzzy assisted
    event driven data collection from sensor nodes in sensor-cloud infrastructure
    CCGRID ''14: Proceedings of the 14th IEEE/ACM International Symposium on Cluster,
    Cloud, and Grid Computing Wireless Sensor Network(WSN) consists of sensor nodes
    which are deployed densely in an area of interest. The area is intended to be
    sensed or monitored. Each sensor node is a tiny and power constrained device which
    is assigned the task of monitoring. ... Read More Diffusion-based approach to
    deploying wireless sensor networks An important objective of Wireless Sensor Networks
    (WSNs) is to reliably sense data about the environment in which they are deployed.
    Reliability in WSNs has been widely studied in terms of providing reliable routing
    protocols for message dissemination ... Read More Minimum k, ω-angle barrier coverage
    in wireless camera sensor networks Barrier coverage is an important issue in wireless
    sensor networks, which guarantees to detect any intruder attempting to cross a
    barrier or penetrating a protected region monitored by sensors. However, the barrier
    coverage problem in wireless camera ... Read More Comments 150+ References View
    Issue’s Table of Contents Footer Categories Journals Magazines Books Proceedings
    SIGs Conferences Collections People About About ACM Digital Library ACM Digital
    Library Board Subscription Information Author Guidelines Using ACM Digital Library
    All Holdings within the ACM Digital Library ACM Computing Classification System
    Digital Library Accessibility Join Join ACM Join SIGs Subscribe to Publications
    Institutions and Libraries Connect Contact Facebook Twitter Linkedin Feedback
    Bug Report The ACM Digital Library is published by the Association for Computing
    Machinery. Copyright © 2024 ACM, Inc. Terms of Usage Privacy Policy Code of Ethics"'
  inline_citation: '>'
  journal: ACM Computing Surveys
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Edge Computing and Sensor-Cloud: Overview, Solutions, and Directions'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Wielandt S.
  - Uhlemann S.
  - Fiolleau S.
  - Dafflon B.
  citation_count: '4'
  description: Densely distributed sensor networks can revolutionize environmental
    observations by providing real-time data with an unprecedented spatiotemporal
    resolution. However, field deployments often pose unique challenges in terms of
    power provisions and wireless connectivity. We present a framework for wirelessly
    connected distributed sensor arrays for near-surface temperature and/or deformation
    monitoring. Our research focuses on a novel time division duplex implementation
    of the LoRa protocol, enabling battery powered base stations and avoiding collisions
    within the network. In order to minimize transmissions and improve battery life
    throughout the network, we propose a dedicated delta encoding algorithm that utilizes
    the spatial and temporal similarity in the acquired data sets. We implemented
    the developed technologies in a AA battery powered hardware platform that can
    be used as a wireless data logger or base station, and we conducted an assessment
    of the power consumption. Without data compression, the projected battery life
    for a data logger is 4.74 years, and a wireless base stations can last several
    weeks or months depending on the amount of network traffic. The delta encoding
    algorithm can further improve this battery life with a factor of up to 3.50. Our
    results demonstrate the viability of the proposed methods for low-power environmental
    wireless sensor networks.
  doi: 10.1007/s11265-023-01834-2
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Journal of Signal Processing Systems
    Article TDD LoRa and Delta Encoding in Low-Power Networks of Environmental Sensor
    Arrays for Temperature and Deformation Monitoring Open access Published: 22 March
    2023 Volume 95, pages 831–843, (2023) Cite this article Download PDF You have
    full access to this open access article Journal of Signal Processing Systems Aims
    and scope Submit manuscript Stijn Wielandt , Sebastian Uhlemann , Sylvain Fiolleau
    & Baptiste Dafflon   1311 Accesses 3 Citations Explore all metrics Abstract Densely
    distributed sensor networks can revolutionize environmental observations by providing
    real-time data with an unprecedented spatiotemporal resolution. However, field
    deployments often pose unique challenges in terms of power provisions and wireless
    connectivity. We present a framework for wirelessly connected distributed sensor
    arrays for near-surface temperature and/or deformation monitoring. Our research
    focuses on a novel time division duplex implementation of the LoRa protocol, enabling
    battery powered base stations and avoiding collisions within the network. In order
    to minimize transmissions and improve battery life throughout the network, we
    propose a dedicated delta encoding algorithm that utilizes the spatial and temporal
    similarity in the acquired data sets. We implemented the developed technologies
    in a AA battery powered hardware platform that can be used as a wireless data
    logger or base station, and we conducted an assessment of the power consumption.
    Without data compression, the projected battery life for a data logger is 4.74
    years, and a wireless base stations can last several weeks or months depending
    on the amount of network traffic. The delta encoding algorithm can further improve
    this battery life with a factor of up to 3.50. Our results demonstrate the viability
    of the proposed methods for low-power environmental wireless sensor networks.
    Similar content being viewed by others Two-level energy-efficient data reduction
    strategies based on SAX-LZW and hierarchical clustering for minimizing the huge
    data conveyed on the internet of things networks Article 25 May 2022 Multi-model
    Z-compression for high speed data streaming and low-power wireless sensor networks
    Article 29 March 2019 Spatial–temporal compression and recovery in a wireless
    sensor network in an underground tunnel environment Article 07 August 2014 1 Introduction
    The quantification, prediction, and management of natural resources require multi-scale
    observations of near-surface environmental processes. Existing remote sensing
    and ground-based observations alone lack the spatial and/or temporal resolution
    needed to capture the heterogeneity in complex environments, like mountainous
    watersheds [1]. Densely distributed environmental sensor networks can overcome
    some of these limitations, but the concept remains largely unused for near-surface
    monitoring [2]. The slow adoption can be attributed to the unique challenges posed
    by field deployments. This includes a lack of power provisions and network infrastructure,
    climatic and topographic impacts on radio frequency propagation, and mechanical
    issues related to humidity, moisture, pressure, and even wildlife damage. Commercial
    devices for environmental monitoring (as used in [3]) are usually the result of
    a dedicated and costly design process, and low-cost solutions usually consist
    of prototypes with general purpose hardware (e.g., Arduino, Raspberry Pi) [4].
    The cost, replicability, and reliability of these devices prevents system scale-ups
    to hundreds or thousands of distributed sensors. Another limiting factor in large-scale
    deployments of environmental monitoring systems, is the wireless connectivity
    of sensor nodes. Wireless networks of densely distributed sensors can provide
    data with an unprecedented spatial and temporal resolution for environmental research,
    providing new insights that improve the predictive understanding of ecosystems
    and their hydro-biogeochemical processes, and of natural hazards and their triggering
    processes. Real-time data transmission and remote access is useful for sensor
    management and for scheduling maintenance, reducing system downtime, and preventing
    loss of data. In the context of natural resource management and infrastructure
    monitoring, real-time data can drive crucial decision making processes (e.g.,
    water management, landslide early warning systems) [5, 6]. Despite the wide range
    of available low-power wide area network (LPWAN) technologies, the unique requirements
    for environmental monitoring applications result in a non-trivial wireless technology
    implementation. Despite the long range and low power consumption of NB-IoT and
    LTE-M [7], these cellular internet of things (IoT) technologies do not provide
    a solution for environmental sensor networks in remote field sites due to their
    lack of coverage and operation in licensed spectrum. Alternatives in unlicensed
    spectrum include Sigfox and LoRaWAN [8]. For sensor nodes, these technologies
    offer an ultra-low power consumption. However, their base stations were never
    designed for power constrained applications, and backhaul connectivity is usually
    required [9]. Wielandt and Dafflon [10] presented an implementation of the LoRa
    Physical layer in a novel LPWAN protocol stack that offers low power consumption
    for sensor nodes as well as base stations. Because all devices in the network
    are time synchronized, packet reception and transmission can be scheduled on each
    side of a link, resulting in an optimized power and spectrum usage through time
    division duplex (TDD)  and frequency hopping spread spectrum (FHSS). The resulting
    network protocol avoids collisions in the network and allows the use of single-channel
    radios in the nodes and base stations, drastically reducing system complexity,
    cost, and power consumption of the latter [11]. Given the operation in unlicensed
    frequency bands, collisions with packets from external networks are still possible.
    However, the proposed network protocol is aimed towards environmental monitoring
    applications in remote locations where wireless technologies are generally absent.
    In comparison to common internet-of-things devices with few sensors, environmental
    monitoring systems often produce larger amounts of data, requiring particular
    attention to data transmission and compression. Here, we adopt the network protocol
    from [10], and we add a presentation layer that handles data compression, effectively
    reducing network traffic and power consumption of nodes and base stations. Most
    LPWAN devices employ standard payload formats (e.g., CayenneLPP [12]) and/or compression
    techniques (e.g., Huffman encoding) [13]. For the presented implementation, a
    custom payload format and a lossless compression technique is proposed, taking
    advantage of the temporal and spatial similarity in environmental sensor data.
    The proposed protocol stack is implemented in a custom hardware platform for densely
    distributed, vertically resolved environmental measurements. Each sensor node
    comprises a battery powered data logger that is connected to a sensor probe. The
    sensor probes consist of a tube with an array of cascaded, discrete sensors; here
    we present two use cases, one with temperature sensors, and one with alternating
    temperature sensors and accelerometers. When temperature sensors are used, the
    probes can be vertically deployed above the ground for snowpack monitoring, or
    below the ground for identifying subsurface thermal regimes, quantifying soil
    thermal parameters, and estimating heat and/or water fluxes. When temperature
    sensors are alternated with accelerometers, the probes can be used to measure
    soil deformation and related thermo-hydrological properties and processes (e.g.,
    soil movement driven by permafrost thaw). The mechanical design, thermal modeling,
    and the use case scenarios of these sensor arrays have been described and validated
    by Dafflon et al. [14] and Wielandt et al. [15]. This paper focuses on the system
    design, the implementation of the novel network protocol stack and data compression
    techniques, and the effect on power consumption for sensor nodes and base stations.
    2 Wireless Networks for Environmental Monitoring Figure 1 illustrates the architecture
    and services in a real-time environmental monitoring application. Environmental
    sensors connect through LoRa to a low-power base station, which communicates over
    UART with a data publisher. The publisher is connected to a server through a wired
    or wireless communication technology (e.g., Ethernet, LTE, NB-IoT, WiFi). The
    server hosts Mosquitto [16], a service that supports the open publish/subscribe
    MQTT protocol [17], specifically designed for low-cost, low-power operation over
    bandwidth constrained networks. The incoming sensor data is processed by a Python
    script, which decodes all messages and feeds data into a real-time data base.
    InfluxDB is an open-source database specifically targeted at handling time series
    data. [18]. Grafana is the open source service we suggest for data visualization
    [19]. The result is a real-time database and data visualization platform that
    can be accessed by users. Furthermore, users can use the MQTT service to send
    commands to the sensors for network and/or sensor management. Figure 1 Architecture
    and services enabling real-time environmental monitoring. Environmental sensors
    connect through LoRa to a base station, which communicates over UART with a data
    publisher. The publisher is connected to a server with a real-time database and
    a visualization platform for users. Full size image Most of the described protocols
    and technologies have been widely documented and their implementation requires
    little to no research efforts. However, the implementation of an LPWAN for remote
    environmental research applications poses a unique set of technical requirements
    that does not entirely align with current IoT technologies. Environmental sensors
    require accurate real-time clocks for regular time stamped measurements. Delays
    in data transmission are generally acceptable, but data loss should be avoided.
    Furthermore, remote network deployments require not only low-power sensor devices,
    but also low-power infrastructure. LoRaWAN relies on LoRa as an underlying physical
    layer technology that provides long-range, low-power connectivity. However, LoRaWAN
    requires power intensive multi-channel base stations and backhaul connectivity
    [9]. The technology reduces collisions by using orthogonal spreading factors,
    however this does not eliminate collisions in the network. Furthermore, its fair-use
    policy limits the number of transmissions per day, or at least requires a listen-before-talk
    approach [20]. These limitations can be overcome with a novel LoRa based network
    protocol stack, as presented in [10]. The presented stack schedules transmissions
    in a TDD implementation, preventing package collisions. Pseudorandom network parameters
    (e.g., channel, bandwidth (BW), spreading factor (SF), code rate) are calculated
    on both sides of the link based on unique parameters (i.e., network name, device
    ID, time stamp). The protocol is particularly useful for environmental monitoring
    applications, since regular measurements, transmissions, and receptions can be
    implemented in the TDD scheme. Figure 2 illustrates the different states of a
    network with one base station and two sensor nodes. The base station can either
    sleep, wake up to receive data from sensors, or broadcast a network management
    packet that includes the current time and measurement interval. The sensor nodes
    are mostly asleep, but wake up for a variety of reasons: When a scheduled network
    management packet is expected, the nodes will enter a LoRa receive (Rx) state.
    Once every measurement interval, all (m) sensors in the array are read out quasi
    simultaneously and their data is added to a buffer (i.e. data aggregation). After
    t measurement intervals, the buffer is full and a compression algorithm is executed,
    compressing the \\(t\\cdot m\\) sensor values. The algorithm reduces the number
    of transmissions required, resulting in a lower overall power consumption for
    sensor nodes and base stations. The compressed data is transmitted in as many
    packets as required (\\(\\le t\\)). There is one transmission window per measurement
    interval for each node. When all compressed data is transmitted, no new transmissions
    will occur until a new compressed data set is available. $$\\begin{aligned} T_S=\\dfrac{2^{SF}}{BW}
    \\end{aligned}$$ (1) $$\\begin{aligned} T_\\mathrm {preamble}=(n_\\mathrm {preamble}
    +4.25) \\cdot T_S \\end{aligned}$$ (2) $$\\begin{aligned} \\begin{aligned} T_\\mathrm
    {payload}=&T_S \\cdot \\bigg ( 8 + \\max \\bigg \\{ 0, (CR+4) \\\\&\\cdot \\bigg
    \\lceil \\frac{8PL - 4SF + 28 + 16CRC - 20H_\\mathrm {en}}{4SF -2R_\\mathrm {opt}}
    \\bigg \\rceil \\bigg \\} \\bigg ) \\end{aligned} \\end{aligned}$$ (3) $$\\begin{aligned}
    T_\\mathrm {packet}=T_\\mathrm {preamble} + T_\\mathrm {payload} \\end{aligned}$$
    (4) Figure 2 Scheme of TDD transmissions, sensor measurements, and data compression
    in a network with one base station and two sensor nodes (\\(t=3\\)). Full size
    image Following FCC requirements [21], air time (\\(T_\\mathrm {packet}\\)) is
    limited to 0.4 s. The air time depends on the duration of the packet’s preamble
    (\\(T_\\mathrm {preamble}\\)) and payload (\\(T_\\mathrm {payload}\\)). As expressed
    in (1-4), these values are determined by the duration of a LoRa symbol (\\(T_S\\)).
    For sensor data transmissions, SF is a trade-off between range and throughput.
    In this research, \\(SF=9\\) leads to a maximum payload (PL) of 66 bytes following
    (1-4) [22], assuming an 8 bit preamble (\\(n_\\mathrm {preamble} = 8\\)), \\(BW
    = 125\\mathrm {e}3\\), 4/5 code rate (\\(CR=1\\)), cyclic redundancy check (CRC)
    enabled (\\(CRC=1\\)), explicit header (\\(H_\\mathrm {en}=0\\)), and low data
    rate optimization disabled (\\(R_\\mathrm {opt}=0\\)). The package structure is
    layed out in Fig. 3. The packet starts with a 9 bit packet header, containing
    an 8 bit signature for authentication (a pseudorandom bit sequence based on the
    network name, device ID, and time stamp). The subsequent ‘TX_complete’ bit indicates
    if all compressed data has been transmitted, or if another packet will follow.
    When a transmission is complete (TX_complete = 1), the base station and the corresponding
    sensor node will sleep through the remaining time slots to conserve power, as
    indicated in Fig. 2. Because of the small header size (9 bits vs. 117 bits for
    LoRaWAN), payloads of up to 519 bits can be transmitted in each packet. When the
    size of the compressed message exceeds 519 bits, it is split into multiple LoRa
    packets. Figure 3 Packet structure for compressed sensor data. When the size of
    a compressed message exceeds 519 bits, it is split into multiple LoRa packets.
    Full size image Base station transmissions are performed with \\(SF=12\\) and
    \\(BW = 500\\mathrm {e}3\\), given the limited amount of network management data
    and the importance of network range. Following (1-4), this results in a maximum
    package size of 30 bytes, as presented in Fig. 4. The message starts with an 8
    bits pseudorandom signature for identification, followed by a payload descriptor
    to identify the payload contents. In the most common scenario, the network management
    payload consists of a UTC time stamp (7 bytes, with epoch 00:00:00, 01/01/2000)
    and a measurement sample interval (2 bytes). Figure 4 Packet structure for network
    management transmissions. Full size image 3 A Low-Power Hardware Platform with
    Sensor Node and Base Station Functionality Figure 5 presents a hardware platform
    that provides the previously described functionality and meets the requirements
    of a low-cost, low-power, and reliable system for densely distributed, wirelessly
    connected thermal and deformation sensor arrays. Each device consists of a main
    board that can be used as a data logger or wireless base station. In order to
    allow standalone as well as networked sensor deployments, two wireless technologies
    are implemented. Bluetooth low energy (BLE) is selected for local connectivity
    to a computer or smartphone for data offloading and sensor configuration. The
    choice is motivated by the low power consumption and widely demonstrated technological
    maturity of BLE [23]. For long-range networking, we use LoRa technology, as previously
    discussed. In order to implement these technologies, we selected an NRF52832 ARM
    Cortex M4 as a low-power system-on-chip (SoC) with BLE provisions for short-range
    communications. This SoC controls a LoRa modem (RFM95W) for single channel communications
    and can be programmed to operate as a base station or wireless data logger. The
    PCF2129AT real-time clock takes care of the time sensitive tasks as presented
    in Fig. 2. A 4 MB low-power flash chip is used for storing sensor data on-device,
    which enables data logger functionality in offline configurations or data redundancy
    in online data loggers. In base station mode, received sensor data is stored on
    an optional microSDHC memory card, and data is shared with an external data publisher
    over a serial interface, as presented in Fig. 1. The temperature sensor array
    consists of a series of TMP117A sensors with a resolution of \\(0.0078125\\;^\\circ\\)C
    and a factory-assured accuracy of \\(\\pm 0.1\\;^\\circ\\)C [24], which was further
    improved to \\(\\pm 0.015\\;^\\circ\\)C using a calibration technique described
    in [14]. The high resolution and accuracy of the sensors enables observations
    of important environmental processes, e.g., freeze-thaw interfaces. For the temperature/deformation
    array each temperature sensor is accompanied by an ADXL345 accelerometer, allowing
    deformation measurements with a 0.390 mm resolution and a 95% confidence interval
    of \\(\\pm 0.73~\\mathrm {mm}\\) per meter of probe length [15]. The sensors are
    connected to the SoC through an I\\(^2\\)C bus. In order to enable sensor arrays
    of up to 2 m long, the bus speed is limited to 100 kHz and an I\\(^2\\)C bus buffer
    with integrated current sources is used (TCA9803). Each temperature sensor on
    the bus is accompanied by a D-type flip-flop, creating a shift register along
    the sensor array that is used for individually addressing each sensor. All components
    in the system are selected for their operation in the 1.8 V - 3.6 V range, enabling
    the use of two AA batteries without a need for voltage regulators. Our application
    uses Energizer L91 Li/FeS\\(_2\\) cells, which have been rated at 3500 mAh for
    temperatures between \\(-40\\;^\\circ\\)C and \\(60\\;^\\circ\\)C [25]. The red
    blocks in Fig. 5 mark all the components that are directly connected to the power
    supply. The green blocks indicate the parts that are powered down with a load
    switch (TPS22919) whenever possible. This eliminates the impact of the MicroSDHC
    card and the entire sensor array on the device’s sleep power. Figure 5 Block diagram
    of the hardware platform with LoRa sensor node or base station functionality for
    environmental sensor arrays. Red blocks are directly connected to the power supply,
    green blocks can be switched off. Full size image 4 Data Compression for Environmental
    Sensor Arrays 4.1 Use Case 1: Thermal Sensor Arrays The thermal sensor arrays
    consist of a series of m TMP117A sensors [24]. Each sensor produces an output
    of 2 bytes, expressing the temperature in two’s complement format with a 0.0078125
    \\(^{\\circ }\\)C resolution. For each measurement, a time stamp (4 bytes) is
    stored, along with a 10 bits value of the battery voltage (stored as 2 bytes),
    followed by m temperature values of 2 bytes each. For a temperature probe with
    17 sensors, this means that each sample takes up 40 bytes. Given the weight of
    LoRa transmissions in a device’s power budget [26] and the application’s tolerance
    towards delayed sensor data, we follow an approach of data aggregation over time,
    followed by compression, as proposed in [27] and illustrated in Fig. 2. Both data
    aggregation and compression can minimize energy consumption and network traffic,
    especially in tree-based network topologies where relay nodes reduce traffic by
    e.g, eliminating redundant data [28]. In this research, a star topology is employed,
    limiting opportunities for tree-based data aggregation. Other aggregation strategies
    are application driven, e.g., event based reporting, feature extraction. The application
    domain for our technology is environmental science and model development, hence
    we adopt a regular data reporting strategy without data reduction. Table 1 shows
    the aggregated temperature data, which forms a data set that exhibits similarity
    over time and space, because the sensors are deployed in a linear array to measure
    near-surface temperature gradients, and measurements are repeated regularly. While
    LPWAN payloads are often transmitted with lossy compression [29] or no compression
    at all (e.g., CayenneLPP [12]), some studies have investigated lossless data compression
    in LPWAN networks [13, 30]. Dictionary based compression techniques (e.g., Huffman
    encoding) can be a solution for efficient lossless compression, but lost packets
    can impact decoding in the long term and the exchange of dictionaries would cause
    prohibitive overhead for our monitoring system. The required reliability and the
    limited number of dynamic, noisy, and high-resolution temperature data points,
    would result in frequent dictionary updates [31]. In this work we employ a delta
    encoding scheme, which allows the exploitation of spatial and temporal similarity
    with limited computational efforts. Instead of transmitting the entire collection
    of 16 bit temperature values, only \\(T_{1,1}\\) is transmitted as a reference
    value, followed by a series of \\(\\Delta T\\) values. First, the variation over
    space is captured by the \\(\\Delta T_{1,j}\\) values, as expressed in (5). Next,
    the temporal variability is captured according to (6). k expresses the required
    number of bits for the spatial variability (\\(\\Delta T_{1,j}\\)) values, and
    l represents the required number of bits for the temporal variability. Table 1
    Uncompressed temperature data points aggregated over time and space. Full size
    table $$\\begin{aligned} \\Delta T_{1,j}=T_{1,j-1}-T_{1,j}\\quad \\quad j \\in
    \\{2,\\dotsc ,m\\} \\end{aligned}$$ (5) $$\\begin{aligned} \\Delta T_{i,j}=T_{i-1,j}-T_{i,j}\\quad
    \\quad i \\in \\{2,\\dotsc ,t\\} \\quad j \\in \\{1,\\dotsc ,m\\} \\end{aligned}$$
    (6) In order to transmit the compressed data set, a message is composed, as presented
    in Fig. 6. The first 4 bits represent a data format identifier that defines the
    message format and provides flexibility in terms of future sensors and compression
    protocols. Next, m, k, and l are specified (respectively 5, 4, and 4 bits), as
    well as the battery voltage at the time of compression \\(V_{\\mathrm {bat}}\\)
    (10 bits). Finally, the compressed temperature data set is included starting with
    a 16 bits value for \\(T_{1,1}\\). The total size of the message with compressed
    data (\\(s_{\\mathrm {message,temp}}\\)) is determined by (7). $$\\begin{aligned}
    s_{\\mathrm {message,temp}}=\\;&4+5+4+4+10+16 \\\\&+ k \\cdot (m-1) + l \\cdot
    m \\cdot (t-1) \\quad \\mathrm {[bits]} \\end{aligned}$$ (7) Depending on m, k,
    and l, the length of the composed message can exceed the maximum length of a data
    package. However, t time slots are available for transmitting the message, and
    the message can be split up into parts of \\(\\le 519\\mathrm {~bits}\\), as demonstrated
    in the packet structure in Fig. 3. The proposed compression algorithm is lossless,
    which means that all received data can be decoded without any loss of accuracy.
    However, under extreme conditions (e.g., a large number of sensors, significant
    spatial and or temporal variability in measurements) the size of a compressed
    message could exceed the available network throughput (\\(t \\times 519\\mathrm
    {~bits}\\)). In this case all incoming data will be decodable, but the tail of
    the compressed message would be lost. Figure 6 Message structure for compressed
    temperature data. Full size image 4.2 Use Case 2: Temperature/Deformation Sensor
    Arrays The temperature/deformation probes contain an array of m pairs of TMP117A
    temperature sensors and ADXL345 accelerometers [15]. The accelerometers are used
    in static conditions, regularly sampling the Earth’s gravitational vector along
    three axes (x, y, z). These measurements enable the calculation of each sensor’s
    tilt and thus the shape of the entire probe and its deformation over time. Each
    temperature value is represented as a 2 bytes value, and each accelerometer generates
    three 10 bits values (\\(a_\\mathrm {x}\\), \\(a_\\mathrm {y}\\), \\(a_\\mathrm
    {z}\\)) to indicate the acceleration in two’s complement format with a resolution
    of 0.0039 g [32]. For a probe with 16 temperature/acceleration sensor pairs, this
    results in a total sample size of 736 bits (92 bytes). Given the maximum packet
    size of 519 bits, data compression does not only result in a reduced power consumption,
    but it is actually required to ensure that all data can be transmitted using the
    proposed protocol. In order to compress the measurement values, t samples are
    accumulated over time, in analogy to the compression algorithm for thermal sensor
    arrays. Table 2 presents the resulting data set, with temperature values exhibiting
    the same temporal and spatial similarity as explained before, so we employ the
    same delta encoding scheme for these values. Acceleration values exhibit different
    characteristics over time and space, justifying a modified approach for data compression.
    Unlike temperatures, which exhibit daily variations, the soil movements of interest
    are usually small, slow, and not reversible, resulting in a lot of potential for
    data compression. However, spatial similarity is not guaranteed, as soil deformation
    can be highly heterogeneous. Therefore, we generate a set of reference values
    (\\(a_{i,\\mathrm {ref}, \\mathrm {x}}\\), \\(a_{i,\\mathrm {ref}, \\mathrm {y}}\\),
    \\(a_{i,\\mathrm {ref}, \\mathrm {z}}\\)) for all m accelerometers. These reference
    values are used to calculate each sensor’s delta values (\\(\\Delta a_{j,i,\\mathrm
    {x}}\\), \\(\\Delta a_{j,i,\\mathrm {y}}\\), \\(\\Delta a_{j,i,\\mathrm {z}}\\)).
    Given the slow variations in deformation measurements, reference values do not
    need to be updated in every message. Instead, reference values can be updated
    gradually and spread over multiple messages. The number of reference values included
    in each message is a trade-off between compression rate and possible data loss:
    having all reference values included in each message results in low compression
    rates, but it guarantees that every received message can be decoded. When reference
    values are spread over multiple messages, higher compression rates can be achieved,
    but a single packet loss can affect multiple message decodings. In this research,
    we arbitrarily chose to include the reference values of two accelerometers in
    each message. For an \\(m=16\\) probe with \\(t=4\\) and a sampling interval of
    15 min, this means that the entire reference data set will be refreshed every
    8 hours. The calculation of reference values and delta values is presented in
    8. In order to determine which reference values to update and transmit, a daily
    sample count (c) is used. Any network device with a synchronized clock and knowledge
    of the sampling interval can calculate c, so this value does not need to be included
    in the message. For deformation measurements, the expected acceleration values
    are \\(a_\\mathrm {x} = \\mathrm {1~g}\\), \\(a_\\mathrm {y} = \\mathrm {0~g}\\)
    and \\(a_\\mathrm {z} = \\mathrm {0~g}\\) because the probes are deployed vertically
    in the soil [15]. We use these expected values in the calculation of reference
    values, which allows a reduction of the number of bits per reference value (p).
    The number of bits per delta value is defined as (q). Assuming that \\(p\\ge 3\\)
    and \\(q\\ge 1\\), each value can be encoded in the message header using just
    3 bits, as presented in Fig. 7. This table shows the data format (designated as
    ‘0001’) for temperature/deformation arrays, consisting of a 49 bits header, followed
    by the first measurement sample’s encoded temperature and acceleration values
    (which includes two accelerometers’ updated reference values, according to 8).
    Subsequently, the temperature and acceleration values for the remaining samples
    are appended. This approach allows the receiver to start decoding the oldest measurement
    samples in messages that have not yet arrived completely (i.e. messages that have
    been split into multiple packets because they exceeded the 519 bits packet payload
    size). The total size of a message (\\(s_\\mathrm {message,acc}\\)) is expressed
    by 9. $$\\begin{aligned} \\begin{aligned}&\\forall i \\in \\{ 1,...,t\\} \\\\&\\forall
    j \\in \\{ 1,...,m\\} \\end{aligned} {\\left\\{ \\begin{array}{ll} {\\left. \\begin{array}{l}
    a_{i,\\mathrm {ref}, \\mathrm {x}} = \\Delta a_{i,j,\\mathrm {x}} = a_{i,j,\\mathrm
    {x}} -1 \\\\ a_{i,\\mathrm {ref}, \\mathrm {y}} = \\Delta a_{i,j,\\mathrm {y}}
    = a_{i,j,\\mathrm {y}} \\\\ a_{i,\\mathrm {ref}, \\mathrm {z}} = \\Delta a_{i,j,\\mathrm
    {z}} = a_{i,j,\\mathrm {z}} \\\\ p = \\underset{\\begin{array}{c} u \\in \\{\\mathrm
    {x,y,z}\\} \\\\ i,j \\end{array}}{\\mathrm{max}}{(\\lceil \\log _{2} |\\Delta
    a_{i,j,u} |\\rceil +1 )} \\end{array}\\right\\} } &{} {\\begin{aligned} &{} \\text
    {if i = 1 and} \\\\ &{} \\lfloor \\frac{j}{2} \\rfloor \\equiv \\frac{c}{t} \\left(
    \\mathrm {mod} \\frac{m}{2} \\right) \\\\ &{} (\\text {Ref. values})\\end{aligned}}
    \\\\ {\\left. \\begin{array}{l} \\Delta a_{i,j,\\mathrm {x}} = a_{i,j,\\mathrm
    {x}} -a_{i,\\mathrm {ref}, \\mathrm {x}} \\\\ \\Delta a_{i,j,\\mathrm {y}} = a_{i,j,\\mathrm
    {y}} -a_{i,\\mathrm {ref}, \\mathrm {y}} \\\\ \\Delta a_{i,j,\\mathrm {z}} = a_{i,j,\\mathrm
    {z}} -a_{i,\\mathrm {ref}, \\mathrm {z}} \\\\ q = \\underset{\\begin{array}{c}
    u \\in \\{\\mathrm {x,y,z}\\} \\\\ i,j \\end{array}}{\\mathrm{max}}{ ( \\lceil
    \\log _{2} |\\Delta a_{i,j,u} |\\rceil +1 )} \\end{array}\\right\\} } &{} {\\begin{aligned}&{}
    \\mathrm {otherwise} \\\\ &{} (\\Delta \\; \\mathrm {values})\\end{aligned}} \\end{array}\\right.
    } \\end{aligned}$$ (8) $$\\begin{aligned} s_{\\mathrm {message,acc}}=&49 + k \\cdot
    (m-1) + l \\cdot m \\cdot (t-1) \\\\&+2\\cdot 3 \\cdot p + (m\\cdot t -2) \\cdot
    3 \\cdot q\\quad \\mathrm {[bits]} \\end{aligned}$$ (9) Table 2 Uncompressed temperature
    and acceleration values aggregated over time and space. Full size table 5 Results
    5.1 Data Compression To evaluate the efficiency of the proposed compression algorithm
    and its impact on the battery life of nodes and base stations, three data sets
    were acquired. The spatial and temporal profiles for these use cases are considerably
    different, so we evaluate the compression algorithm for each scenario. Figure
    8 presents a 10 months data series with 15 min measurement intervals for an above
    ground thermal sensor array (\\(m=29\\)) for snowpack monitoring in the East River
    watershed, Colorado [33]. The data are characterized by pronounced diurnal temperature
    cycles that fade under snow cover, enabling an estimation of snow thickness over
    time [34]. Figure 9 depicts subsurface temperature data (\\(m=17\\)) for the same
    location, measurement interval, and time frame as the snowpack sensor array. Diurnal
    temperature variations can be observed near the surface, but temperatures at greater
    depth show more temporal stability. Figure 10 shows the temperature and acceleration
    values for a subsurface probe deployed on the Seward Peninsula, near Nome, Alaska,
    measuring every 15 min over a 6 months period. The temperature data show diurnal
    variations near the surface, as well as a deepening freezing front over time.
    As the freezing front evolves, we can also observe a change in acceleration values,
    indicating soil deformation. Table 3 Performance of the compression algorithm
    for two 10-month datasets, and the impact on power consumption. Full size table
    For each data set, Table 3 compares several performance indicators for compressed
    and uncompressed data. The compressed data is evaluated as a function of t: as
    more data is aggregated over time, the efficiency of the compression algorithm
    can be expected to increase. However, higher values of t result in larger delays
    and a larger impact of packet loss. In order to assess the performance of the
    algorithm we consider the number of transmitted packets, and the total size of
    the data set in KB, which leads to an easier to assess compression ratio (compressed
    to uncompressed data set size). Figure 7 Message structure for compressed temperature
    and acceleration data with \\(i \\in \\{2,\\cdots ,t\\}\\), \\(j \\in \\{1,\\cdots
    ,m\\}\\), \\(u \\in \\{\\mathrm {x,y,z}\\}.\\)   Full size image Figure 8 Thermal
    data series for an above ground sensor array (\\(m=29\\)). The array was deployed
    at the \\(300~\\mathrm {km^2}\\) East River watershed, Colorado, and temperatures
    were sampled every 15 min. Full size image Figure 9 Thermal data series for a
    subsurface sensor array (\\(m=17\\)). The array was deployed at the East River
    watershed, Colorado, and temperatures were sampled every 15 min. Full size image
    Figure 10 Data series for a subsurface sensor array for deformation and temperature
    sensing (\\(m=19\\)). The array was deployed at a watershed near Nome, Alaska,
    and data were sampled every 15 min. Full size image Table 3 clearly indicates
    the impact of t for all data sets. Low values of t result in a strong compression
    of the data, but in the case of snowpack measurements this does not necessarily
    lead to a proportional decrease in transmitted packets. This can be explained
    by the potentially inefficient filling of LoRa packets: higher values of t lead
    to larger \\(s_\\mathrm {message}\\) values, which means that more LoRa packets
    contain the maximum payload of 66 bytes. One can also remark that the impact of
    t diminishes as its value increases. Given the larger delays and the increased
    impact of packet loss, we advise a compromise of \\(t \\in \\{3,\\dotsc ,5\\}\\).
    When we compare the different scenarios, it is clear that subsurface temperature
    data offers the greatest potential for compression. This can be attributed to
    the single data type (there is only thermal data and no acceleration measurements
    along x, y, and z axes), and the low spatial and temporal variability that can
    be observed in Fig. 9. The compression ratios for snowpack temperature measurements
    are higher because of the strong diurnal variation in above ground temperatures
    as shown in Fig. 8, leading to a larger entropy. The results for subsurface temperature/deformation
    measurements indicate compression ratios as low as 0.608. Despite the low spatial
    and temporal temperature variability, the compression ratio is significantly higher
    than for the other scenarios. This can be linked to the fact that each measurement
    contains three 10 bits acceleration values, in comparison to a single 16 bits
    temperature value. Despite the highest compression ratios for the temperature/acceleration
    values, the impact of the compression algorithm is the most significant for this
    application. In a scenario without compression the entire data set would require
    39,730 packet transmissions, equalling two transmissions per measurement. The
    compression algorithm reduces the number of packet transmissions to less than
    one per measurement, not only improving battery life, but ensuring the usability
    of the proposed network protocol. In related work [30], compression ratios between
    0.48 and 0.62 are reported. The difference in data sets prevents a direct comparison
    of algorithm performance, but the results presented in this paper demonstrate
    the potential of spatial and temporal similarity for compression purposes. 5.2
    Power Consumption The power consumption of the nodes and base stations is a function
    of the presented hardware layout, communication protocol, compression algorithm,
    and acquired data. In order to assess the battery life of each device in the network,
    a power profile was recorded for each system state. For the calculation of these
    profiles, we measured the DC current along the VCC line under a constant voltage
    of 3.3765 V using a Keithley DMM6500 6.5 digit digital multimeter. Figure 11 presents
    the results of these measurements, along with the required energy for each event.
    The sleep state is characterized by an average power consumption \\(P_\\mathrm
    {avg}\\), which takes into account the 1 Hz power spikes that are associated with
    BLE advertising. The presented results emphasize the impact of LoRa communications
    on a device’s energy budget. The aggregated data can not be reduced due to the
    nature of the application and network topology, but the presented data compression
    technique can reduce network traffic with a minimal energy impact of \\(225 \\upmu
    \\mathrm {J}\\) per compression, indicating the computational simplicity of the
    algorithm. The energy cost of a LoRa transmission is measured at \\(174\\mathrm
    {~mJ}\\), which means that the compression algorithm pays off when LoRa transmission
    can be reduced at least 1/772 (0.13%), a goal that is significantly exceeded as
    indicated in Table 3. As a result, trade-offs in the configuration of the compression
    algorithm in our applications are solely related to data delays and potential
    impacts of packet loss, not energy cost. Figure 11 Power profile for each system
    state, as presented in Fig. 2. Full size image The acquired power profiles are
    used to estimate the battery life for each configuration of the compression algorithm
    in Table 3. For these calculations we consider 15 min measurement intervals and
    we do not take user initiated BLE data transfers into account. The selected AA
    batteries provide an energy supply of 41,580 J [25]. Since the power consumption
    of base stations depends on the amount of network traffic [10] we assume a scenario
    of a single base station with 100 sensor nodes, all exhibiting the same compression
    ratios. The results in Table 3 demonstrate that thermal sensor nodes can last
    for \\(>4.5\\) years on a single pair of AA batteries without data compression.
    For temperature/deformation arrays (\\(m=19\\)), a battery life of 2.8 years can
    be expected, since each uncompressed measurement sample results in two LoRa packet
    transmissions. LoRa transmissions account for 70% of the energy, the sleep state
    is responsible for 27%, and sensor measurements use 2%. This indicates the potential
    benefit of the compression algorithm. As can be seen in Table 3 a node’s battery
    life can even be doubled under favorable conditions (subsurface temperature sensors
    with \\(t=8\\)). For base stations, the potential battery life improvement is
    even more significant. For the scenario without data compression the battery life
    is only one month in networks of temperature sensors, or 16 days in networks of
    temperature/deformation sensors. For base stations, 98% of the energy budget is
    associated with the Rx state. This can be improved considerably if all sensor
    nodes in the network perform data compression. In the case of subsurface temperature
    arrays, base station battery life can be extended with a factor of up to 3.50.
    This enables autonomous operation in remote field sites for multiple months or
    even a year for base stations that use a small solar panel or multiple pairs of
    AA batteries. One can remark that the compression algorithm has a stronger impact
    on the battery lifetime of the base stations than the sensor nodes. This is explained
    by the higher relative importance of the sleep state in a sensor node’s power
    budget, whereas base station power consumption is almost solely attributed to
    the Rx state. In [29], Väänänen et al. present a LoRaWAN sensor platform with
    various lossy data compression methods. The platform exhibits a \\(467{\\upmu
    \\mathrm {W}}\\) sleep power consumption (i.e. 6 times more than the platform
    presented in this paper), which results in a total battery lifetime of 492 days
    without compression. The best performing compression algorithm realizes a power
    savings factor of 1.28 (versus 1.99 in our research). Another solution is presented
    in [13], which reports a power savings factor of 1.45 for a lossless compression
    method. In related work, the power consumption of an iC880a LoRaWAN concentrator
    is reported. Consuming at least 1.44 W, this would result in a battery life of
    less than 8 hours when operating on a couple of AA batteries, which is significantly
    lower than any scenario presented in this paper. 6 Conclusions Distributed environmental
    sensor arrays for above and below surface sensing require specific provisions
    in terms of power and connectivity. In this study, we presented a framework that
    covers the network protocol, a data compression technique, and a hardware platform
    that can be used as a wireless base station or a data logger for environmental
    sensor arrays. The presented wireless interface uses LoRa in a TDD implementation,
    enabling battery operated base stations and eliminating limitations concerning
    package collisions and fair use policies. A lossless data compression method was
    developed, relying on spatial and temporal similarity in the acquired data. This
    algorithm was implemented in a custom AA battery powered hardware platform and
    the power consumption was analyzed for various scenarios. As a wireless sensor
    node, the device exhibits a battery life of \\(>4.5\\) years, which can even be
    doubled with the proposed compression algorithm. As a LoRa base station, the platform’s
    battery life is limited to several weeks or months, depending on the network configuration.
    However, the proposed compression algorithm can increase the battery lifetime
    with a factor of up to 3.50, making environmental distributed sensor deployments
    a viable option. In future work, we will further investigate the impact of measurement
    sampling intervals, the number of nodes, the number of sensors per node, etc.
    We will also develop relay nodes and deploy a sensor network in a mountainous
    watershed to study performance as a function of topography, vegetation, and antenna
    siting. Availability of Data and Materials The data presented in this study are
    openly available in the Next Generation Ecosystem Experiments Arctic Data Collection
    at https://doi.org/10.5440/1907397 References Ho, C. K., Robinson, A., Miller,
    D. R., & Davis, M. J. (2005). Overview of sensors and needs for environmental
    monitoring. Sensors, 5(1), 4–37. https://doi.org/10.3390/s5010004 Article   Google
    Scholar   Strachan, S., Kelsey, E. P., Brown, R. F., Dascalu, S., Harris, F.,
    Kent, G., Lyles, B., McCurdy, G., Slater, D., & Smith, K. (2016). Filling the
    Data Gaps in Mountain Climate Observatories Through Advanced Technology, Refined
    Instrument Siting, and a Focus on Gradients. Mountain Research and Development,
    36(4), 518–527. https://doi.org/10.1659/MRD-JOURNAL-D-16-00028.1 Article   Google
    Scholar   Cable, W. L., Romanovsky, V. E., & Jorgenson, M. T. (2016). Scaling-up
    permafrost thermal measurements in western alaska using an ecotype approach. The
    Cryosphere, 10(5), 2517–2532. https://doi.org/10.5194/tc-10-2517-2016 Article   Google
    Scholar   Léger, E., Dafflon, B., Robert, Y., Ulrich, C., Peterson, J. E., Biraud,
    S. C., Romanovsky, V. E., & Hubbard, S. S. (2019). A distributed temperature profiling
    method for assessing spatial variability in ground temperatures in a discontinuous
    permafrost region of alaska. The Cryosphere, 13(11), 2853–2867. https://doi.org/10.5194/tc-13-2853-2019
    Article   Google Scholar   Ramesh, M. V. (2014). Design, development, and deployment
    of a wireless sensor network for detection of landslides. Ad Hoc Networks, 13,
    2–18. https://doi.org/10.1016/j.adhoc.2012.09.002 Article   Google Scholar   Intrieri,
    E., Gigli, G., Mugnai, F., Fanti, R., & Casagli, N. (2012). Design and implementation
    of a landslide early warning system. Engineering Geology, 147–148, 124–136. https://doi.org/10.1016/j.enggeo.2012.07.017
    Article   Google Scholar   Liberg, O., Sundberg, M., Wang, E., Bergman, J., &
    Sachs, J. (2017). Cellular internet of things: Technologies, standards and performance.
    Oxford, UK: Academic Press. Google Scholar   Mekki, K., Bajic, E., Chaxel, F.,
    & Meyer, F. (2018). Overview of cellular LPWAN technologies for IoT deployment:
    Sigfox, LoRaWAN, and NB-IoT. In 2018 Ieee International Conference on Pervasive
    Computing and Communications Workshops (percom Workshops) (pp. 197–202). IEEE.
    Sornin, N., & Yegin, A. (2017). Lorawan®specification v1.1. Technical report,
    LoRa Alliance. Wielandt, S., & Dafflon, B. (2020). A local LoRa based network
    protocol with low power redundant base stations enabling remote environmental
    monitoring. In 2020 54th Asilomar Conference on Signals, Systems, and Computers
    (pp. 520–523). https://doi.org/10.1109/IEEECONF51394.2020.9443344 Wielandt, S.,
    & Dafflon, B. (2021). Minimizing power consumption in networks of environmental
    sensor arrays using TDD LoRa and delta encoding. In 2021 55th Asilomar Conference
    on Signals, Systems, and Computers (pp. 318–323). https://doi.org/10.1109/IEEECONF53345.2021.9723227
    Niles, K., Ray, J., Niles, K., Maxwell, A., & Netchaev, A. (2021). Monitoring
    for analytes through LoRa and LoRaWAN technology. Procedia Computer Science, 185,
    152–159. Article   Google Scholar   Săcăleanu, D., Popescu, R., Manciu, I., &
    Perişoară, L. (2018). Data compression in wireless sensor nodes with LoRa. In
    2018 10th International Conference on Electronics, Computers and Artificial Intelligence
    (ECAI) (pp. 1–4). IEEE. Dafflon, B., Wielandt, S., Lamb, J., McClure, P., Shirley,
    I., Uhlemann, S., Wang, C., Fiolleau, S., Brunetti, C., Akins, F. H., Fitzpatrick,
    J., Pullman, S., Busey, R., Ulrich, C., Peterson, J., & Hubbard, S. S. (2022).
    A distributed temperature profiling system for vertically and laterally dense
    acquisition of soil and snow temperature. The Cryosphere, 16(2), 719–736. https://doi.org/10.5194/tc-16-719-2022
    Article   Google Scholar   Wielandt, S., Uhlemann, S., Fiolleau, S., & Dafflon,
    B. (2022) Low-power, flexible sensor arrays with solderless board-to-board connectors
    for monitoring soil deformation and temperature. Sensors, 22(7). https://doi.org/10.3390/s22072814
    Light R. A. (2017). Mosquitto: server and client implementation of the MQTT protocol.
    Journal of Open Source Software, 2(13). Naik, N. (2017). Choice of effective messaging
    protocols for IoT systems: MQTT, CoAP, AMQP and HTTP. In 2017 IEEE International
    Systems Engineering Symposium (ISSE) (pp. 1–7). IEEE. Naqvi, S. N. Z., Yfantidou,
    S., & Zimányi, E. (2017). Time series databases and influxdb. Studienarbeit, Université
    Libre de Bruxelles 12. Beermann, T., Alekseev, A., Baberis, D., Crépé-Renaudin,
    S., Elmsheuser, J., Glushkov, I., Svatos, M., Vartapetian, A., Vokac, P., & Wolters,
    H. (2020). Implementation of atlas distributed computing monitoring dashboards
    using InfluxDB and Grafana. In EPJ Web of Conferences (Vol. 245, p. 03031). EDP
    Sciences. AloS, A., Jiazi, Y., Thomas, C., et al. (2016). A study of LoRa: Long
    range & low power networks for the internet of things [j]. Sensors, 16(9), 1466–1475.
    Article   Google Scholar   Part, F. R. (1997). 15.247: Operation within the bands
    902-928 MHz, 2400-2483.5 MHz, and 5725-5850 MHz. Part15: Radio Frequency Devices.
    Sx1276/77/78/79 datasheet rev. 7. (2020). Technical report, Semtech Corporation.
    Gomez, C., Oller, J., & Paradells, J. (2012). Overview and evaluation of bluetooth
    low energy: An emerging low-power wireless technology. Sensors, 12(9), 11734–11753.
    https://doi.org/10.3390/s120911734 Article   Google Scholar   TMP117 high-accuracy,
    low-power, digital temperature sensor with smbus and i2c-compatible interface.
    (2021). Data sheet, Texas Instruments. Crell, C. (2018). Product data sheet -
    Energizer L91 Ultimate Lithium (l91gl1218). Data sheet, Energizer. Google Scholar   Thoen,
    B., Callebaut, G., Leenders, G., & Wielandt, S. (2019). A deployable LPWAN platform
    for low-cost and energy-constrained IoT applications. Sensors, 19(3). https://doi.org/10.3390/s19030585
    Callebaut, G., Leenders, G., VanMulders, J., Ottoy, G., DeStrycker, L., & Vander
    Perre, L. (2021). The art of designing remote IoT devices–technologies and strategies
    for a long battery life. Sensors, 21(3). https://doi.org/10.3390/s21030913 Yanhua,
    H., & Zhang, X. (2016). Aggregation tree based data aggregation algorithm in wireless
    sensor networks. International Journal of Online and Biomedical Engineering (iJOE),
    12(06), 10–15. https://doi.org/10.3991/ijoe.v12i06.5408 Article   Google Scholar   Väänänen,
    O., & Hämäläinen, T. (2021). LoRa-based sensor node energy consumption with data
    compression. In 2021 IEEE International Workshop on Metrology for Industry 4.0
    & IoT (MetroInd4. 0 &IoT) (pp. 6–11). IEEE. Hanumanthaiah, A., Gopinath, A., Arun,
    C., Hariharan, B., & Murugan, R. (2019). Comparison of lossless data compression
    techniques in low-cost low-power (LCLP) IoT systems. In 2019 9th International
    Symposium on Embedded Computing and System Design (ISED) (pp. 1–5). IEEE. Borda,
    M. (2011). Fundamentals in Information Theory and Coding. Berlin, Germany: Springer.
    Book   MATH   Google Scholar   3-axis, \\(\\pm\\)2 g/\\(\\pm\\)4 g/\\(\\pm\\)8
    g/\\(\\pm\\)16 g digital accelerometer - ADXL345 rev. e. (2015). Data sheet, Analog
    Devices. Hubbard, S. S., Williams, K. H., Agarwal, D., Banfield, J., Beller, H.,
    Bouskill, N., Brodie, E., Carroll, R., Dafflon, B., Dwivedi, D., Falco, N., Faybishenko,
    B., Maxwell, R., Nico, P., Steefel, C., Steltzer, H., Tokunaga, T., Tran, P. A.,
    Wainwright, H., & Varadharajan, C. (2018). The East River, Colorado, watershed:
    A mountainous community testbed for improving predictive understanding of multiscale
    hydrological-biogeochemical dynamics. Vadose Zone Journal, 17(1). https://doi.org/10.2136/vzj2018.03.0061
    Dafflon, B., Wielandt, S., Lamb, J., McClure, P., Shirley, I., Uhlemann, S., Wang,
    C., Fiolleau, S., Brunetti, C., Akins, F. H., Fitzpatrick, J., Pullman, S., Busey,
    R., Ulrich, C., Peterson, J., & Hubbard, S. S. (2022). A distributed temperature
    profiling system for vertically and laterally dense acquisition of soil and snow
    temperature. The Cryosphere, 16(2), 719–736. https://doi.org/10.5194/tc-16-719-2022
    Article   Google Scholar   Download references Acknowledgements This work was
    supported by the U.S. Department of Energy, Office of Science, Office of Biological
    and Environmental Research, Next-Generation Ecosystem Experiments-Arctic Project
    (NGEE-Arctic), and the Laboratory Directed Research and Development Program of
    Lawrence Berkeley National Laboratory under U.S. Department of Energy Contract
    No. DE-AC02-05CH11231. Author information Authors and Affiliations Earth and Environmental
    Sciences Area, Lawrence Berkeley National Laboratory, 1 Cyclotron Rd, Berkeley,
    94720, California, USA Stijn Wielandt, Sebastian Uhlemann, Sylvain Fiolleau &
    Baptiste Dafflon Corresponding author Correspondence to Stijn Wielandt. Additional
    information Publisher’s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Open Access This article is licensed under a Creative Commons Attribution 4.0
    International License, which permits use, sharing, adaptation, distribution and
    reproduction in any medium or format, as long as you give appropriate credit to
    the original author(s) and the source, provide a link to the Creative Commons
    licence, and indicate if changes were made. The images or other third party material
    in this article are included in the article''s Creative Commons licence, unless
    indicated otherwise in a credit line to the material. If material is not included
    in the article''s Creative Commons licence and your intended use is not permitted
    by statutory regulation or exceeds the permitted use, you will need to obtain
    permission directly from the copyright holder. To view a copy of this licence,
    visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About
    this article Cite this article Wielandt, S., Uhlemann, S., Fiolleau, S. et al.
    TDD LoRa and Delta Encoding in Low-Power Networks of Environmental Sensor Arrays
    for Temperature and Deformation Monitoring. J Sign Process Syst 95, 831–843 (2023).
    https://doi.org/10.1007/s11265-023-01834-2 Download citation Received 31 May 2022
    Revised 18 October 2022 Accepted 27 December 2022 Published 22 March 2023 Issue
    Date July 2023 DOI https://doi.org/10.1007/s11265-023-01834-2 Share this article
    Anyone you share the following link with will be able to read this content: Get
    shareable link Provided by the Springer Nature SharedIt content-sharing initiative
    Keywords LPWAN Collision avoidance TDD LoRa Delta encoding Environmental sensing
    Use our pre-submission checklist Avoid common mistakes on your manuscript. Sections
    Figures References Abstract Introduction Wireless Networks for Environmental Monitoring
    A Low-Power Hardware Platform with Sensor Node and Base Station Functionality
    Data Compression for Environmental Sensor Arrays Results Conclusions Availability
    of Data and Materials References Acknowledgements Author information Additional
    information Rights and permissions About this article Advertisement Discover content
    Journals A-Z Books A-Z Publish with us Publish your research Open access publishing
    Products and services Our products Librarians Societies Partners and advertisers
    Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy
    choices/Manage cookies Your US state privacy rights Accessibility statement Terms
    and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic
    Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024
    Springer Nature"'
  inline_citation: '>'
  journal: Journal of Signal Processing Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: TDD LoRa and Delta Encoding in Low-Power Networks of Environmental Sensor
    Arrays for Temperature and Deformation Monitoring
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Şeker Ö.
  - Dalkılıç G.
  - Çabuk U.C.
  citation_count: '1'
  description: The Internet of things (IoT) accommodates lightweight sensor/actuator
    devices with limited resources; hence, more efficient methods for known challenges
    are sought after. Message queue telemetry transport (MQTT) is a publish/subscribe-based
    protocol that allows resource-efficient communication among clients, so-called
    brokers, and servers. However, it lacks viable security features beyond username/password
    checks, yet transport-layer security (TLS/HTTPS) is not efficient for constrained
    devices. MQTT also lacks mutual authentication among clients and brokers. To address
    the issue, we developed a mutual authentication and role-based authorization scheme
    for lightweight Internet of things applications (MARAS). It brings mutual authentication
    and authorization to the network via dynamic access tokens, hash-based message
    authentication code (HMAC)-based one-time passwords (HOTP), advanced encryption
    standard (AES), hash chains, and a trusted server running OAuth2.0 along with
    MQTT. MARAS merely modifies “publish” and “connect” messages among 14 message
    types of MQTT. Its overhead to “publish” messages is 49 bytes, and to “connect”
    messages is 127 bytes. Our proof-of-concept showed that the overall data traffic
    with MARAS remains lower than double the traffic without it, because “publish”
    messages are the most common. Nevertheless, tests showed that round-trip times
    for a “connect” message (and its “ack”) are delayed less than a percentile of
    a millisecond; for a “publish” message, the delays depend on the size and frequency
    of published information, but we can safely say that the delay is upper bounded
    by 163% of the network defaults. So, the scheme’s overhead to the network is tolerable.
    Our comparison with similar works shows that while our communication overhead
    is similar, MARAS offers better computational performance as it offloads computationally
    intensive operations to the broker side.
  doi: 10.3390/s23125674
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 12 10.3390/s23125674 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Naveen Chilamkurti
    Subscribe SciFeed Recommended Articles Related Info Links More by Authors Links
    Article Views 1350 Citations 1 Table of Contents Abstract Introduction Related
    Works Procedures of Security Mechanism Implementation and Validation Performance
    Evaluations Discussion of Results Conclusions Supplementary Materials Author Contributions
    Funding Institutional Review Board Statement Informed Consent Statement Data Availability
    Statement Conflicts of Interest References share Share announcement Help format_quote
    Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessArticle MARAS: Mutual Authentication
    and Role-Based Authorization Scheme for Lightweight Internet of Things Applications
    by Özlem Şeker 1,2, Gökhan Dalkılıç 2 and Umut Can Çabuk 3,* 1 Graduate School
    of Natural and Applied Sciences, Dokuz Eylul University, Izmir 35390, Turkey 2
    Department of Computer Engineering, Dokuz Eylul University, Izmir 35390, Turkey
    3 Department of Electrical & Computer Engineering, San Diego State University,
    San Diego, CA 92182, USA * Author to whom correspondence should be addressed.
    Sensors 2023, 23(12), 5674; https://doi.org/10.3390/s23125674 Submission received:
    3 May 2023 / Revised: 11 June 2023 / Accepted: 15 June 2023 / Published: 17 June
    2023 (This article belongs to the Section Internet of Things) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract The Internet of things (IoT) accommodates lightweight
    sensor/actuator devices with limited resources; hence, more efficient methods
    for known challenges are sought after. Message queue telemetry transport (MQTT)
    is a publish/subscribe-based protocol that allows resource-efficient communication
    among clients, so-called brokers, and servers. However, it lacks viable security
    features beyond username/password checks, yet transport-layer security (TLS/HTTPS)
    is not efficient for constrained devices. MQTT also lacks mutual authentication
    among clients and brokers. To address the issue, we developed a mutual authentication
    and role-based authorization scheme for lightweight Internet of things applications
    (MARAS). It brings mutual authentication and authorization to the network via
    dynamic access tokens, hash-based message authentication code (HMAC)-based one-time
    passwords (HOTP), advanced encryption standard (AES), hash chains, and a trusted
    server running OAuth2.0 along with MQTT. MARAS merely modifies “publish” and “connect”
    messages among 14 message types of MQTT. Its overhead to “publish” messages is
    49 bytes, and to “connect” messages is 127 bytes. Our proof-of-concept showed
    that the overall data traffic with MARAS remains lower than double the traffic
    without it, because “publish” messages are the most common. Nevertheless, tests
    showed that round-trip times for a “connect” message (and its “ack”) are delayed
    less than a percentile of a millisecond; for a “publish” message, the delays depend
    on the size and frequency of published information, but we can safely say that
    the delay is upper bounded by 163% of the network defaults. So, the scheme’s overhead
    to the network is tolerable. Our comparison with similar works shows that while
    our communication overhead is similar, MARAS offers better computational performance
    as it offloads computationally intensive operations to the broker side. Keywords:
    authorization; HOTP; IoT; MQTT; mutual authentication 1. Introduction Many electronic
    devices containing sensors/actuators are integrated with networking capabilities
    to enable communications and enhanced automation. Many such devices can also establish
    Internet connections, resulting in the emergence of the Internet of things (IoT)
    concept. The devices that constitute the IoT may include sensors, actuators, interfaces,
    robotics, and storage. They gather, generate, store, and disseminate data and
    further exchange them with other devices connected to the internet. They may even
    manage themselves with no or little human interaction. Wireless sensor networks
    (WSNs) [1], the premise of the IoT, may include a large number of sensor nodes
    that are low-cost, small-sized, and have limited bandwidth, so they can communicate
    over specific lightweight protocols. Many modern IoT deployments include devices,
    functionalities, and goals similar to that of a WSN. This is why they also have
    similar constraints, although they support the Internet Protocol (IP) to some
    extent [2,3,4]. The number of devices connected to the Internet is dramatically
    increasing, thanks to the IoT and its industrial applications. Examples of current
    research topics include the relation between energy availability, sensing quality,
    and the overall throughput in cognitive radio networks powered by energy harvesting
    techniques [5] and maximizing packet collection performance in wireless-powered
    IoT networks [6]. Those highlight the significance of efficient energy management
    and data transmission strategies in IoT networks. On the other hand, IoT devices
    with limited bandwidth, memory, and computing capabilities are also vulnerable
    to security threats. Due to their limitations, traditional security mechanisms
    used in computers are unlikely to be implemented in IoT devices. In addition,
    the sensor nodes can reach out to the Internet via some gateways running on the
    application layer [7]. Therefore, the gateways need to be designed to interpret
    many different protocols. For the gateways and other intermediary elements, this
    poses many design challenges. Message queue telemetry transport (MQTT) (no longer
    accepted as an acronym since version 5.0) is a lightweight communication protocol
    widely adopted in IoT applications due to its resource efficiency, flexibility,
    and scalability [8]. However, it lacks advanced security measures that are highly
    desired in critical applications. Within the scope of this study, we propose a
    security mechanism to provide mutual authentication and role-based authorization
    for the nodes in an IoT ecosystem running the MQTT protocol. The constrained application
    protocol (CoAP), an alternative to MQTT, is also popular in IoT. It utilizes the
    user datagram protocol (UDP) [9] and is comparable to the hypertext transfer protocol
    (HTTP) since it is a web-based scheme. It provides reduced packet header sizes
    for resource-constraint devices. However, the CoAP header size is four bytes,
    whereas the MQTT header size is only two bytes [10]. Moreover, MQTT reportedly
    demonstrates better performance than CoAP in terms of packet losses and transmission
    latencies under increased network traffic [11]. Hence, MQTT is apparently more
    “lightweight”, and thus, it is preferred over CoAP in this study. Before proceeding
    to the details of the problem statement and our novel contributions, we provide
    some background regarding MQTT and other referred concepts. 1.1. Background An
    introduction to the MQTT protocol and its security features is provided in this
    part. There is also a brief discussion on using a hash-based message authentication
    code (HMAC)-based one-time password (HOTP). 1.1.1. Overview of MQTT The MQTT protocol
    was developed by IBM in 1999 and was standardized by the organization for the
    advancement of structured information standards (OASIS) in 2013 [12] to provide
    lightweight machine-type communications. Thanks to its publish/subscribe-based
    architecture, MQTT is a convenient communication protocol for most IoT scenarios.
    It is preferred for devices with limited resources [13,14,15]. Nodes in an MQTT-driven
    network may have different roles. The clients (i.e., mostly sensor/actuator devices)
    can either be publishers or subscribers for any information flow (e.g., sensed
    temperature data). Such flows of information are tagged with topic labels (called
    a “topic”) considering their context (e.g., temperature). Hence, some clients
    may subscribe to certain topics and discard the rest. There are also intermediary
    nodes, called brokers, responsible for distributing the information disseminated
    by the publishers to the interested subscribers. The broker keeps an up-to-date
    record of which client is interested in which topics. So, it shall forward the
    incoming data to the subscribers of that topic by filtering out the access rights.
    The publishers and subscribers do not have prior knowledge of each other. All
    the communication is carried out through the broker(s). A publisher and subscriber(s)
    do not have to be connected to the same network simultaneously [16]. Occasionally,
    a broker may also be a client at the same time [17]. Likewise, a publisher of
    one (or more) arbitrary topics may be a subscriber of others. Other types of nodes
    (e.g., servers, databases, etc.) may optionally co-exist in the ecosystem. MQTT’s
    message packets include three components: a mandatory 2-byte fixed-length header,
    an optional variable-length header, and an optional payload. The fixed-size header
    consists of the control field that contains the 4-bit message type field, the
    4-bit control flag, and the packet length field. MQTT supports 14 unique message
    types that are connection request (CONNECT), connection acknowledgment (CONNACK),
    subscription request (SUBSCRIBE), subscription acknowledgment (SUBACK), unsubscription
    request (UNSUBSCRIBE), unsubscription acknowledgment (UNSUBACK), publish data
    (PUBLISH), publish acknowledgment (PUBACK), publish received (PUBREC), publish
    released (PUBREL), publish complete (PUBCOMP), ping request (PINGREQ), ping response
    (PINGRESP) and disconnection request (DISCONNECT). Section 4 further explains
    these message types and their control flags. 1.1.2. Security Features in MQTT
    Due to its lightness, there is no advanced security mechanism built into the MQTT
    protocol, except for a basic authentication scheme involving a username and password-
    control over a user database. When there are no resource-constrained devices in
    the network, the transport layer security (TLS) protocol can also be used with
    MQTT. It is the most secure way to provide data confidentiality and integrity
    [18]. However, this may not be applicable if lightweight devices are included,
    because allocating a secure end-to-end channel via TLS requires complex and heavy
    computations. If no security mechanism is implemented along with MQTT, then the
    subscribers may grant access to all the messages. Moreover, a malicious publisher
    may act as an attacker and may cause a denial of service (DoS) attack. The use
    of access token(s) was already recommended to provide authentication and authorization
    mechanisms in the existing literature [19], but there is no viable security mechanism
    between the clients and an authorization server, except for the TLS-based hypertext
    transfer protocol secure (HTTPS). HTTPS allows using tokens to manage access control
    [16]. Furthermore, no prior studies have yet suggested a client-side authentication
    of the broker(s), which is necessary to achieve mutual trust and security within
    the ecosystem. This study provides a two-step mutual authentication and authorization
    mechanism using a “trusted” third-party authentication server that runs OAuth
    2.0 [20]. It is also challenging to manage role-based access controls due to the
    potentially high numbers of connected devices. Since MQTT has no native security
    mechanism to address these issues, a dynamic token scheme that includes the scopes
    (i.e., authorized topics) of the clients is considered via the OAuth 2.0 protocol
    [21]. 1.1.3. Using HOTP with MQTT An authorization server (as discussed above),
    HOTP [22], and hash chains can be used to verify the identities of the client
    nodes and the broker(s) communicating via the MQTT protocol. HOTP already became
    a standard in 2005 [23] and is used to provide mutual authentication, as well
    as to prevent replay attacks without requiring time synchronization [24,25]. In
    the background, it relies on the HMAC, a unique secret (K), and also a counter
    value (C) that must be kept synchronized with the HOTP generator (and validator).
    A HOTP is generated through the truncation of a pre-computed HMAC-SHA-1 value,
    as shown below: HOTP (K, C) = Truncate (HMAC_SHA-1 (K, C)) (1) The broker implements
    the HOTP generator role by combining the HOTP with Lamport’s backward hash chain
    scheme [22]. Nonetheless, since the exponentiation of such hash functions needs
    exhaustive computations on the clients (that are presumed to be constrained devices),
    a critical problem arises with Lamport’s original scheme. A feasible solution
    to that issue is to move the computationally heavy phases of the scheme to the
    brokers. Therefore, the hash chain is generated N-times by the broker itself,
    whereas the clients act as the HOTP validators and merely store the hash chain
    values [26]. The clients validate the broker while N decrements until reaching
    zero. They have (HOTP (client ID, 3)) value; ‘3’ is considered due to the handshaking
    procedure. The broker generates the HOTP hash chain value N-times in total, as
    given below, where h is the hashing function p = h (h (… h (HOTP (clientID, 3))
    …)) (2) Last but not least, the advanced encryption standard (AES) [27] (or equivalent)
    is required to provide data confidentiality in the links between the clients and
    the broker(s). In this way, subsistent data integrity can be offered, too. 1.2.
    Problem Statement Concisely listed below are the main problems that this work
    addresses. They have emerged from the special requirements of lightweight IoT
    applications and the insufficiencies of the popular MQTT protocol. The MQTT protocol
    does not natively allow the client nodes to authenticate the brokers and vice
    versa; The MQTT protocol does not natively provide topic-based and role-based
    authorization. So, it is not possible to allow nor disallow certain clients to
    publish on or subscribe to particular topics; The MQTT protocol does not natively
    enforce data encryption and integrity measures; Lightweight IoT applications require
    resource-efficient security features while not degrading the overall performance.
    The symbols and abbreviations used to describe the problem and the solution are
    introduced in Table 1. Table 1. Symbols and abbreviations. 1.3. Contributions
    The distinguished contributions of our work are discussed below: A novel method
    that adds mutual authentication and role-based authorization features to the MQTT
    protocol; To the best of our knowledge, the proposed method is the only one that
    grants mutual authentication among the MQTT clients and the broker(s) without
    relying on a secure channel (e.g., HTTPS); In addition to the two-factor mutual
    authentication, there is a role- and topic-based authorization over a trusted
    third-party server that enforces AES-encrypted messaging. These features altogether
    result in an exceptionally complete security solution for MQTT; The method, when
    applied, does not affect the performance of the system significantly. It only
    causes networking delays that are a tiny fraction of a millisecond. That largely
    distinguishes our work from those implementing TLS/HTTPS between clients and brokers
    (or servers). Our solution can be seen as a protocol extension or a method that
    can be applied on top of MQTT. In the simplest terms, the scheme can be summarized
    as follows: First, a developer sets up the authorization server by recording the
    nodes and the roles/topics in which they are allowed to participate. The broker
    authenticates a client who requests to publish on or subscribe to a topic using
    a pre-shared secret and HOTP. Likewise, the client also authenticates the broker.
    Later, the broker checks the authorization server to assure that the requesting
    client has the right to do what it wants. If authentication and authorization
    are completed successfully, encrypted communication starts between the parties.
    We analyzed the security vulnerabilities of Fremantle et al.’s scheme [21] and
    improved it to achieve satisfactory security features including authorization
    and mutual authentication for all nodes and brokers of MQTT. In the study, they
    suggested using OAuth 2.0 on an 8-bit Arduino Uno device. The connection request
    is made by including an access token as a plain text username in the MQTT connect
    message. Due to the limited memory and processing capacity of Arduino Uno, they
    claimed that generating a refresh token was not feasible. However, this implementation
    introduces potential security vulnerabilities. An attacker may intercept and listen
    to the access tokens transmitted as clear text, compromising the security of the
    system. Additionally, the attacker can generate message traffic and consume the
    device’s energy by continuously flooding connection requests using a constant
    token. To address these security concerns, MARAS incorporates a second authentication
    step. In situations where static plain text must be used, MARAS employs HMAC-based
    one-time passwords. Following successful connections, the HMAC-based OTP is refreshed,
    ensuring that the authentication mechanism remains dynamic and secure. By introducing
    this extra layer of security, MARAS mitigates the risks associated with using
    static plain text tokens and strengthens the overall security of the system. Furthermore,
    in the described scenario, where the access token is transmitted as plain text
    and the attacker has the ability to intercept and reveal the token, there is a
    risk of device spoofing. An attacker could potentially impersonate the device
    and transmit unauthorized or inappropriate messages to the MQTT broker. Such unauthorized
    message transmissions can lead to various security and integrity concerns within
    the system. It can compromise the confidentiality and privacy of the transmitted
    data, manipulate the control and operation of the energy management system, or
    even cause disruptions and malicious actions within the network. To mitigate the
    risk of device spoofing and the transmission of inappropriate messages, MARAS
    implemented additional security measures including the following: Device authentication:
    Implemented with a two-step mutual authentication mechanism combining a token-based
    approach and HOTP with a hash chain, where both a client and an MQTT broker authenticate
    each other to ensure the legitimacy of the communication; Confidentiality: By
    employing hardware-powered AES encryption capabilities provided by devices like
    ESP32, the payload encryption enhances the confidentiality of the messages transmitted
    through MQTT. This added layer of security protects sensitive data from unauthorized
    access or interception; The implementation of the OAuth 2.0 protocol in the existing
    study has played a crucial role in ensuring that all authenticated devices within
    the application can send and receive messages only pertaining to the topic they
    are associated with. This authorization mechanism ensures that devices have the
    necessary permissions to publish or subscribe to specific topics; Considering
    the input and output capabilities of IoT devices, it is essential to have a secure
    and efficient authorization mechanism in place. The OAuth 2.0 protocol aligns
    well with the requirements of IoT devices, as it offers a scalable and flexible
    approach to managing access rights and permissions. 2. Related Works This section
    discusses the previous efforts on securing the MQTT protocol by integrating authentication
    and authorization solutions. The effectiveness of the related works is elaborated
    on, and unresolved issues are pointed out. Fremantle et al. [21] integrated the
    OAuth 2.0 protocol to provide means of access control to the MQTT communications.
    They claim that conventional authorization and authentication systems are not
    suitable for IoT scenarios because it is difficult to manage each device using
    a username–password pair and related role credentials, but they did not provide
    any user interface or interaction scheme between the machine(s) and the developer.
    The access token and the scope(s) are obtained by each client using the OAuth
    2.0 protocol, that is, to manage the authentication and authorization mechanisms
    whenever a client connects to the MQTT broker. The MQTT protocol runs over the
    transmission control protocol (TCP), so it can utilize TLS to provide a secure
    channel in between, but most IoT devices are limited in terms of battery, storage,
    and computational power. Likewise, in their work, the connection between the clients
    and the MQTT broker is established without TLS due to using an 8-bit Arduino as
    the client device. Refreshing the token is challenging because of its limited
    storage. However, merely using the same token leads to security vulnerabilities
    such as eavesdropping, spoofing, and denial of service attacks. Moreover, exchanging
    the scope is also impossible since each scope is paired with an access token.
    Although it is an inspirational work, a viable solution must make use of dynamic
    tokens or passwords. Later, in 2015, Singh et al. [28] provided means of security
    to the MQTT protocol using lightweight elliptic curve cryptography (ECC) to encrypt
    the broadcast messages. The ECC was preferred to optimize the complexity. First,
    the publisher prepares an access list to send to the broker and demands an encryption
    key from the broker. It also adds some information about the user access rights
    to decrypt the messages and sends them to the broker. If a subscriber holds access
    permission for a specific message, it also gets the key from the broker and then
    decrypts the message with this private key. However, no information was given
    regarding how the key would have been generated. Furthermore, the publisher sends
    the access tree (a tree-formed data structure representing the access policy)
    to the broker and gets the key from the broker over a non-secure channel, so that
    an attacker may easily reach this information by eavesdropping. In a home automation
    setup proposed by Upadhyay et al. [29], an access control list (ACL) plugin is
    added on top of the MQTT protocol to prevent access to sensor data. An ACL is
    a list file that includes usernames, encrypted passwords, and topic permissions
    in their model. This approach comes with two major consequences. First, in a dynamic
    and crowded ecosystem, the addition or removal of devices would be typical and
    continuous. This behavior naturally causes the addition or removal of new usernames,
    passwords, and access rights to the list. Hence, the list has to be updated and
    re-shared repeatedly between the devices, which shall cause an undeniable overhead.
    Second, this approach only provides authorization but does not enforce any specific
    authentication control. An MQTT access control system was proposed by Niruntasukrat
    et al. [30]. It is based on OAuth 1.0 authorization protocol to avoid exhaustive
    computations. In addition, one more authentication factor was implemented to disseminate
    a piece of unique credential information over an HTTPS connection to secure the
    tokens. However, the security issues they addressed are only a portion of the
    possible risks, as they argued as well. Although providing authorization, the
    system lacks confidentiality aspects regarding the shared information. It is vulnerable
    to eavesdropping as well as replay, man-in-the-middle, and denial-of-service attacks.
    Zamfir et al. [31] have made a comparative analysis of the security aspects of
    MQTT and CoAP protocols based on the pre-shared key approach and the use of raw
    public keys. The pre-shared key approach relies on symmetric encryption and the
    use of TLS between both ends of the communication. It can be used simply with
    CoAP but is not natively supported in MQTT. Such uses of TLS increase computational
    costs, too. The same limitations also apply to the raw public key method. Both
    protocols support certificates, but they require devastating computational power
    (and energy). However, in our work, payload encryption is made by AES. Yet, there
    is no extra computation or use of non-secure channels for key generation and distribution.
    Rajan et al. [32] proposed a mechanism where the broker uses a secure user profile-based
    data privacy by hierarchical inner product encryption (HIPE) for data subscription.
    So, they managed to allow access only to clients who are authorized in real-time
    video sharing. The study concludes that HIPE encryption and decryption lead to
    some delays in data transmissions. In addition, role-based access control that
    requires a tree-like hierarchy is not usually suitable for IoT scenarios. The
    RES-256 algorithm introduced by Nagarajan et al. [33] offers an access control
    mechanism to enhance the security of healthcare systems, based on the so-called
    Internet of medical things, including advanced encryption mechanisms (e.g., RC6),
    secure key exchange protocols (e.g., ECDSA) and SHA256. Using RC6 for encryption,
    ECDSA for key exchange, and SHA256 for data integrity can contribute to securing
    sensitive data and ensuring the integrity of healthcare information as they are
    well-established cryptographic algorithms. However, the proposed mechanism does
    not mitigate the vulnerabilities associated with weak or short passwords due to
    relying on SHA256. Alshammari [34] proposed another method in the health domain,
    where the pre-shared public key is distributed to clients by the broker and the
    username, and the passwords are verified from the database by the broker. Fathy
    et al. [35] considered an IoT scenario centered on agricultural irrigation with
    sensors and actuator devices, where the authentication between clients and brokers
    needs to be ensured. They provided confidentiality solely between clients by utilizing
    the expeditious cipher (X-cipher) without emphasizing access authorization. The
    study also compared the runtime memory usage performance of the X-cipher, AES,
    and PRESENT encryption algorithms. Shilpa et al. [36] proposed the use of secure
    reliable message communication (SEC-RMC) protocol along with Mosquitto to perform
    MQTT data transmission more securely. In the study, a public–private key exchange
    is made between Mosquitto and clients while it is encrypted via AES for the confidentiality
    of the data. The broker only verifies the topic information with the database
    and then shares it with the subscriber. Unlike this scheme, MARAS provides the
    right to access the topic and the client’s permission to publish or subscribe
    via OAuth 2.0 protocol. In relation to that, [37] compared the runtime performances
    of lightweight encryption algorithms in terms of encryption and decryption operations
    on MQTT payloads. The study evaluates AES-128 Galois/counter mode (GCM), GIFT-combined
    feedback (COFB), Romulus N1, and Tiny JAMBU. While payload encryption provides
    confidentiality for the data transfer, it does not address other crucial aspects
    of secure communication, including authentication, integrity, and protection against
    attacks like replay and impersonation. Relying solely on payload encryption is
    insufficient for comprehensive security in MQTT communication. MARAS approaches
    security holistically and addresses all aspects of secure communication to mitigate
    potential risks and vulnerabilities effectively. When asymmetric encryption is
    preferred, ECC stands as another powerful alternative. Ref. [38] describes implementing
    a public-key encryption system based on ECC to secure data in an MQTT-based energy
    management system. Since ECC uses elliptic curves over finite fields to provide
    strong encryption with relatively smaller key sizes compared to other encryption
    algorithms, for our future work it may be preferred for resource-constrained devices
    like Raspberry Pi in IoT applications. Patel et al. [39] also advocated the use
    of ECC. They proposed a new authentication approach for IoT applications, namely,
    a two-factor level-dependent authentication for generic IoT (LDA-2IoT), where
    they utilized elliptic curve cryptography. The proposed approach allows users
    at a specific level within the hierarchy to access sensor devices deployed either
    below or at the same hierarchical level. The study conducted a validation of the
    LDA algorithm within a communication environment based on MQTT over TLS as its
    secure channel, involving users, gateways, and sensor devices. Using ECC for encryption,
    Saqib et al. [40] introduced a framework to address significant security concerns
    in IoT-based networks. Their approach combines elliptical curve cryptography and
    hash chains to establish a signature-based 3-factor authentication system tailored
    for IoT environments. Like our proposal, MARAS uses a dynamic session key for
    mutual authentication to prevent known session key attacks. Payload encryption
    and access authorization play a crucial role in ensuring the security of their
    MQTT communications. While the study may not have specifically highlighted these
    aspects, it is imperative to address payload encryption and access authorization
    when implementing a secure MQTT protocol. A 2017 study by Katsikeas et al. [41]
    applied payload encryption using different AES modes to the data carried by the
    MQTT protocol. They have concluded that the AES-CBC is the best choice for constrained
    IoT devices. The study provides a solid knowledge base regarding AES-based encryption
    schemes (though it does not cover the AES-CFB mode). However, the research merely
    focuses on confidentiality and ignores other security aspects; yet, there is no
    explanation regarding the preferred key generation and distribution mechanisms.
    Without employing any authentication scheme, a malicious subscriber may capture
    all published information on any topic. Moreover, a malicious publisher can continuously
    flood spam messages and may eventually cause a DoS attack. Bhawiyuga et al. [42]
    have used a JavaScript object notation (JSON) web token (JWT) authentication server
    to authenticate the devices in the MQTT network. This was carried out via a direct
    token exchange between the clients and the broker; the broker then validates the
    tokens by sending them to the authentication server. However, although mentioned
    superficially, their work does not elucidate how a legitimate client device can
    maintain (or re-establish) its connection after its token is expired. Apparently,
    both the broker and the authentication server reject the connection requests in
    such a case. More importantly, while the token is a static one involving a hash
    algorithm to be protected against integrity attacks, it can still be obtained
    by eavesdropping. Hence, the token can be reused by malicious nodes repeatedly
    with a replay attack until it expires. To mitigate such vulnerabilities, a two-step
    authentication scheme involving a dynamic password mechanism must be implemented
    (as we did in our study). Bashir et al. [43] recommended using a trusted third-party
    server to handle key generation and distribution on MQTT. The server generates
    unique client IDs and distributes them to the clients. Thus, they are used as
    a pre-shared key for the encrypted transmission of a second key. The payloads
    of the clients are then encrypted with this second key. In their scenario, the
    initial distribution of the IDs will require a TLS connection unless they are
    sent as cleartext (which is worse). Further, this solution does not prevent replay
    attacks and flooding of vast messages by malicious nodes. So, attackers may easily
    overload the message traffic because the broker does not have a suitable device
    authentication mechanism. In their 2018 study, Wardana et al. [44] presented a
    prototype of an access control mechanism for IoT devices, which is based on the
    use of tokens along with the Redis authorization server. In addition, a secure
    socket layer (SSL) certificate was issued to provide data integrity and confidentiality
    between the cloud and the MQTT broker(s). The proposed mechanism is very concrete
    to its extent; nevertheless, it does not include a procedure for broker authentication
    (by the clients). Another novel security solution for MQTT was suggested by Calabretta
    et al. [45]. They offered a new approach for the MQTT protocol, based on the augmented
    password-authenticated key agreement (AugPAKE) algorithm over the ActiveMQ middleware.
    They also proposed a way to generate authorization tokens for each topic to provide
    topic-specific access control. Their study supersedes a similar prior work also
    based on the use of AugPAKE without TLS, published by Shin et al. [46], which
    lacks authorization features. Despite being broader, [45] ignores the authentication
    of the broker(s) by the clients, which is critical. A paper written by Bali et
    al. [47] points out that a ciphertext-only attacker may also be able to listen
    to the traffic and decrypt the password right after the broker authenticates the
    first publisher and subscriber. They proposed a chaotic lightweight algorithm
    as a precaution against the mentioned ciphertext-only attacks. The algorithm ensures
    that the key is updated periodically by both the broker and the client(s). This
    steady work has two minor flaws: first, it uses TLS for the initial authentication;
    second, it stores a list of topics and authorized clients on the broker. Sundarrajan
    et al. [48] used advanced multiple encryption systems (AMES) based on the Hardy
    Wall encryption, requiring less bandwidth and minimal memory while utilizing the
    MQTT protocol. This is proposed to ensure the secure communication of messages
    without any packet loss. IoT device IDs and user IDs are also to be encrypted
    by the Hardy Wall encryption to provide authentication to some extent. However,
    their model presupposes an unjustifiable trust between the nodes. The paper also
    lacks information regarding security vulnerabilities, related attacks, and their
    potential effects, which are vital in such works. Public key cryptography is already
    a working solution to the authentication problem in MQTT, but key distribution
    is a major issue in this case. Aknın et al. [49] proposed an architecture that
    integrates blockchain and smart contracts into an MQTT setup to ensure data immutability
    and to automate authentication, publishing, and subscribing processes. In their
    architecture, MQTT protocol authentication relies on the use of one-time passwords
    (OTPs). To securely transmit the keys required for OTP generation and message
    encryption, TLS is utilized during the initial phase. Sanjuan et al. [50], like
    [39], have proposed using smart cards to distribute keys to clients and brokers.
    They provided mutual authentication and payload encryption. Although reliable
    against most remote attacks, their method is vulnerable to physical attacks, like
    simply capturing the nodes and the smart cards. On the other hand, Amoretti et
    al. [51] have utilized a cloud server and a token-based authentication scheme.
    They also added support for multiple brokers via broker bridging. However, their
    scheme lacks mutual authentication and payload encryption. The issue of securing
    the MQTT protocol still remains up-to-date, as Blazy et al. in 2021 [52] proposed
    a comprehensive framework for securing the protocol beyond its basic encryption
    scheme. Their authentication mechanism relied on attribute-based signatures. While
    this framework could work well for many IoT systems, it might be too heavy for
    a network populated with lightweight sensors due to the quasi-complex computation
    requirements. In [17], the use of multiple MQTT brokers and the authentication
    of these MQTT brokers were suggested with JSON web tokens. Since the study does
    not cover security requirements, i.e., client-broker authentication, data confidentiality,
    and client authorization, it may be exposed to various attacks such as eavesdropping,
    man-in-the-middle attack, and impersonation attack. The results of our detailed
    comparative analysis are provided later in Section 6. According to our literature
    review, the existing works within this field are either a survey/analysis of the
    security risks concerning the use of plain MQTT; or a (more conventional) security
    scheme that is inefficient (i.e., uses SSL/TLS, etc.); or a (more innovational)
    security scheme that is incomplete (i.e., lacking mutual authentication, vulnerable
    to eavesdropping, etc.). Thus, having a high-level security approach that is both
    efficient and complete at the same time is still a paramount concern, which explains
    why this study is conducted and which problems it resolves. 3. Procedures of Security
    Mechanism In the recent state-of-the-art, a token and a username–password pair
    are used to authenticate the IoT devices over the MQTT protocol. There is no standardized
    or universally accepted security mechanism in the MQTT protocol to provide data
    integrity, confidentiality, and availability. Furthermore, there has yet been
    no implementation of a mechanism that allows the clients to verify the broker
    ID. Three main reasons for the need for a new authentication (and authorization)
    mechanism for the MQTT protocol can be discussed as follows [26,53]. First, if
    there is no authentication mechanism, any malicious or compromised device may
    act as an attacker by either sending (or even flooding) fake messages or accessing
    all the sensitive data. One main problem in developing a suitable authentication
    mechanism is to provide means of “uniqueness” to each device in a large network.
    When the studies in the literature were investigated, the authentication was found
    to be performed mostly with token-based solutions. However, having a fixed token
    as a credential allows the identity information to be eavesdropped on easily.
    To solve this weakness, connecting the devices to an authentication server over
    a secure channel like HTTPS is evaluated. However, it is found to be impractical
    due to the use of IoT devices with constrained resources; moreover, there are
    some reported vulnerabilities [54]. In this study, by applying a second authentication
    factor using dynamic passwords, a major contribution is achieved in case the static
    token is stolen. A lightweight one-time password scheme based on an HMAC is used
    to update the passwords during every connection. Second, a publisher should make
    sure that it sends its own messages to the correct broker, and the subscribers
    must also receive the right messages from the trusted broker. The clients should
    not be directed to an unauthenticated broker in any case. Mutual authentication
    has not been offered in the MQTT protocol. In this study, mutual authentication
    between the clients and the broker is developed by using HOTP with hash chains.
    Last but not least, managing devices’ access rights depend on their interest in
    a topic, and thus messages should not be available to all devices via appropriate
    access restrictions. In this state, using the security mechanism developed with
    OAuth 2.0 to provide access control on Mosquitto, the devices are prevented from
    behaving maliciously. The proposed security procedure follows three sub-steps:
    registration, authentication, and authorization, as introduced in detail below.
    3.1. Registration Step Initially, a developer manually registers all clients to
    the WSO2 identity server (WSO2IS) [55]. This procedure is carried out to implement
    an authorization layer via OAuth 2.0 and to get a unique access token. Remarkably,
    making that manually may not be the most practical way in some “crowded” scenarios,
    but certainly, it is the most secure way to do it (without using TLS). WSO2IS
    creates a client-side secret and the client ID information to obtain an access
    token. Therefore, the client can achieve unique credentials with an ID and a secret.
    In order to request an access token for any client, the developer must submit
    the scope, client ID, and secret information parameters to the WSO2IS via the
    cURL tool. The registration step is shown in Figure 1 to explain how to access
    the token in OAuth 2.0 applications. The “developer” in Figure 1 is a responsible
    person, such as a network owner or an administrator. Flows 2, 4, 5, and 6 are
    secured through HTTPS. Figure 1. Procedure for the initial registration of the
    clients to WSO2IS to obtain access tokens. The second phase of the registration
    in the IoT application is to obtain the client ID and the client secret for each
    connected IoT device (i.e., client) from WSO2IS. Then, the access token is obtained
    via the cURL tool by considering the scope (Figure 1). An example run of the procedure
    is given in the below paragraphs. The scope is defined in JSON format for clients
    as in the example: {“rw”,:“rw”,“Topic”:“\\temperature\\”}. This means that the
    client is a publisher who claims both read and write permissions to transmit and
    receive the “temperature” data to or from the broker. Its base64-encoded version
    is written as the scope to request an access token from WSO2IS apart from the
    devices’ client ID and client secret. Our online supplement provides the resulting
    command (see row 1 of Supplementary Table S2 at srg.cs.deu.edu.tr/publications/2023/maras/—accessed
    on 2 May 2023). The response from the WSO2IS is shown in Figure 2. The scope is
    parsed into the JSON format to compare with the topic of the received PUBLISH
    or SUBSCRIBE messages. Figure 2. The authorization server’s response to a developer
    who attempts to register a client node. The developer manually records the received
    access token into the corresponding client device, along with the client ID and
    client secret (as in Figure 1). The access token shall be used to authenticate
    the client node during its later communications. In this way, an alien device
    that does not hold a valid access token is prevented from joining the network.
    The token’s validity period is specified in the “expires_in” field. If the current
    token is expired, then a new token is issued by the identity server via the “refresh_token”
    field. However, obtaining a new access token by using that field is not a suitable
    method for lightweight IoT devices when communicating over an HTTPS connection
    because this method causes a payload overhead and requires demanding post-processing
    that may be compelling for IoT devices with limited resources. Therefore, the
    token lifecycle is kept as long as the application’s lifecycle. 3.2. Authentication
    Step The username and password are optionally added to the CONNECT message when
    the client connects to the MQTT broker (which is Mosquitto in this study) in order
    to provide authentication. In the scope of this study, the access token is treated
    as the username and is used to identify the devices by sending it to the broker
    via a CONNECT message. The broker configuration file is modified with an application
    that is written in Python programming language. The OAuth 2.0 authorization framework
    is added as a plugin to this application on the Mosquitto MQTT broker. When a
    broker receives a CONNECT message, it verifies the token on WSO2IS using HTTPS.
    This design decision relies on the assumption that a broker node can handle an
    HTTPS connection. If the access token is valid, the broker sends a CONNACK message
    to the client. It should be noted that, unlike the HTTPS communication between
    the broker and the authentication server, a secure channel between the client
    and the broker has not been considered at all. Further, the token is a static
    credential and can be stolen occasionally. Therefore, one more authentication
    factor is added by using a dynamic password that can be generated by concatenating
    the client secret and a HOTP. The CONNECT message is shown in Figure 3, which
    clarifies the optional use of the username and password. Figure 3. A client’s
    request to connect a broker via a CONNECT message with credentials and scope.
    As stated in Figure 3, the authentication parameters include a username and a
    password. The username is essentially the access token, which also includes the
    scope information. The password is an AES encrypted value that contains the client
    secret (a random number) and the HOTP (another ‘randomized’ number). AES encryption/decryption
    key is the client ID. It is distributed by the WSO2IS (that runs OAuth 2.0) to
    the broker(s) through HTTPS, but is manually recorded into the client devices
    due to security concerns (flow 7 in Figure 1). The field “ClientID” is necessary
    in order to identify the client uniquely. It can be a value of up to 65,535 characters
    as in the MQTT 3.1.1 specifications [12], which is significantly different from
    the previous version, which allows only 23 characters. The universal unique identifier
    (UUID), which is 32 characters, the media access control (MAC) address, and the
    serial number of the devices can also be chosen to provide uniqueness. In this
    paper, the client secret, which is obtained from WSO2IS, is preferred as the client
    ID and is 32 characters long. One of the flags in the CONNECT message is “ClientSession”.
    If it is defined as ‘false’, the broker will keep the client’s message depending
    on the QoS level. The QoS level can be 0, 1, or 2, respectively. These settings
    allow storing the message to be transmitted to a client in case of a potentially
    insecure Internet environment. Usernames and passwords are required to provide
    authentication and authorization of the clients. Unless hashing or a secure channel
    is used for username and password, the credentials can be stolen on the go. An
    eavesdropping attack can be confronted due to transferring the credentials as
    plaintext from the clients to the broker. The access token is considered a client’s
    username (a static value) to authenticate the client (by the broker) from the
    records in WSO2IS via an HTTPS connection. Furthermore, the password contains
    a concatenation of the client’s secret and the HOTP in order to provide a dynamic
    credential. Therefore, the password changes in every CONNECT message (one-time
    password). Using a one-way hash function makes it more difficult to guess the
    passwords. The “LastWillMessage” and the “LastWillTopic” (in Figure 3) refer to
    the last will and testament feature of MQTT. By using them, the clients can be
    informed about the topic and the message in case of unexpected Internet breaks.
    The “KeepAlive” field sets the time interval after which the connection between
    the client and the broker will be sustained without forwarding the message. Whether
    the client or the broker is reachable is found by the ping messages, PINGREST,
    or PINGREC. The first authentication step takes place by the OAuth 2.0 authorization
    protocol, and how it is performed is sketched in Figure 4. When an MQTT CONNECT
    message arrives in the Mosquitto broker, the authentication is performed on WSO2IS
    by verifying the access token (username). Mosquitto_pyauth [56], a third-party
    code published on GitHub by Marcin Bahry, provides a Python-based backbone for
    the Mosquitto broker software. Through personal communication, his code is further
    developed to extend its functionality to match our security mechanism. Our efforts
    yielded a novel plugin called MQTT-pyoauth2.0_otp, which runs over Mosquitto to
    implement the security mechanism. The “pwd_check” function of the MQTT-pyoauth2.0_otp
    plugin is called to validate the access token among the existing records of WSO2IS.
    If successful, the client is authenticated by the Mosquitto broker that it is
    connected to. The MQTT-pyoauth2.0_otp plugin calls the introspection application
    program interface (API) to verify the access token from the authorization server
    via the HTTPS protocol. If the client is not registered to the WSO2IS before (or
    removed), the access token authentication will naturally fail, and the response
    of the message will indicate that it is an inactive token. Figure 4. A broker
    attempts to reach WSO2IS via HTTPS to verify an access token of a client. Moreover,
    if the username and password fields are empty in the CONNECT message, the client’s
    connection request will be rejected even without calling the introspection API.
    Thus, Mosquitto will reject an unauthorized client’s request to connect, and a
    response message will be returned with a CONNACK message to the requesting client.
    However, if the access token authentication is successful on WSO2IS but it was
    stolen (due to being static), the second authentication application will be performed.
    The introspection API returns ‘true’, “scope”, and “client ID” fields in response
    in case of confirmation of the requesting client’s access token. This client ID
    can now be used as a key for both AES encryption and HOTP secrets. After the verification
    of the access token, dynamic passwords should be generated. To maintain that feature,
    a MongoDB database has been implemented as the backend record-keeping facility
    in the Mosquitto broker. Dynamic passwords are basically HOTP values that are
    used to prevent replay attacks. The relevant procedure and its steps are shown
    in Figure 5. Thanks to the HOTP, a previously issued password shall be invalid
    after each connection. Thus, a prior connection will be rejected when an attacker
    has eavesdropped on one password and attempted to connect repeatedly. In addition
    to this, mutual authentication between a client and a broker is performed by comparing
    HOTP values. MQTT-pyoauth2.0_otp should generate the HOTP values N times to implement
    the second authentication step. To proceed, the password is deciphered by Mosquitto
    using the AES secret key (the client ID) when the active access token is received
    in the response of the WSO2IS. Thus, the client ID is acquired by the Mosquitto
    broker. So, as shown earlier in Figure 3, the client ID can securely be known
    to the Mosquitto broker without sending it from the client to the broker over
    an insecure channel. This is a crucial functionality. In this way, listening (sniffing)
    to the client ID or guessing the password and accessing the system by imitating
    another client is prevented. The diagram of the procedure is given in Figure 5.
    Figure 5. The second step of authentication, during which a broker authenticates
    a client by checking over MongoDB records. The last six digits of the password
    obtained in the decrypted text represent the (𝑁 + 1)th HOTP value. The remaining
    sequence of characters is the client’s secret information stored on MongoDB as
    ‘user ID’ (analogous to Client ID in our JSON format) to provide uniqueness. The
    client’s secret is searched through MongoDB to find out whether the client has
    generated HOTP values N times or not. If the client does not exist, N consecutive
    HOTP values are generated with the MQTT-pyoauth2.0_otp on the Mosquitto and inserted
    on MongoDB. The synchronization of HOTP between the client and Mosquitto is done
    with status codes being ‘0’, ‘1’, or ‘2’. HOTP values with the status code ‘2’
    indicate an initiated authentication procedure for the broker and the client.
    If the status code of a HOTP value that is associated with an existing client
    secret on MongoDB is ‘2’, the JSON document is updated after the validation of
    the client so that the status code of the (𝑁 − 1)th HOTP value is changed to ‘2’
    from its original value, namely, ‘0’. After completing the authentication steps,
    Mosquitto sends a CONNACK message to the client. That CONNACK message includes
    return codes ‘0’ to ‘5’. When the client is authenticated successfully, the return
    code ‘0’ is given in the response message, implying that the connection request
    is accepted. The remaining codes, namely, ‘1’, ‘2’, ‘3’, ‘4’, and ‘5’, all mean
    that the connection is rejected, so the connection fails. Two of them, ‘2’ and
    ‘5’, are directly related to authentication failure. In the CONNACK message, in
    the case of return code ‘2’, a “bad name or password” is returned as the reply,
    while in the case of code ‘5’, “unauthorized” is returned as the reply. An example
    CONNACK message with return code ‘0’ in our implementation is shown in Figure
    6. Figure 6. An example CONNACK message with return code ‘0’. After the client
    receives a CONNACK message from the Mosquitto broker, in the case of return code
    ‘0’, mutual authentication between the client and the broker can be achieved using
    HOTP. This procedure is shown in Figure 7. Before sending a PUBLISH or a SUBSCRIBE
    message to the broker, the client must first conduct the connection request to
    the right (and authenticated) broker. When there is no such mutual authentication,
    the client can easily be redirected to an unauthorized (or worse, malicious) broker.
    Therefore, this study provides data transmissions between the authorized clients
    and the authorized brokers. So far, in the existing literature, the security measures
    have been studied merely regarding client authentication, but neither security
    issues nor precautions for two-way authentication have been mentioned. The irreversible
    hash chain function with HOTP is preferred to make the decryption difficult without
    a known secret. Figure 7. A client’s verification of a corresponding broker; hence,
    mutual authentication is achieved. 3.3. Authorization Step A client can send messages
    related to its declared topic(s) of interest to the Mosquitto broker, which indicates
    that this client is a publisher (of the stated topic). Additionally, the client
    can request incoming messages from the broker about its topic(s) of interest,
    which indicates that this client is a subscriber (of the stated topic). Hence,
    selective data forwarding is essential in MQTT. Access control management is implemented
    to prevent all the data from being received by all the existing clients. The clients
    have (and permit) access to data that only belongs to the topics they are interested
    in. Packet information for both the MQTT PUBLISH and SUBSCRIBE messages for two
    clients that are a publisher and a subscriber is shown in Figure 8 and Figure
    9. Figure 8. An example PUBLISH message and the consequent messaging sequence.
    Figure 9. The timeline of a SUBSCRIBE message sent from a client to a broker for
    following a topic. After a client authenticates the broker, the client can send
    a PUBLISH message like in Figure 8. The PUBLISH message packet includes a topic
    name to declare the issuing client’s topic of interest. The topic name is a string,
    which is indicated with a slash (e.g., “/temperature/”). The “QoS” field is considered
    for the reliability of the message transmission in case of an unreliable Internet
    connection. It may be one of three levels, namely, ‘0’, ‘1’, or ‘2’, depending
    on the foreseen guarantee of the transmission of the message. When the level ‘0’
    is considered, the protocol transmits the message at most once and thus, does
    not deal with the potential loss of the message. A message is sent only once and
    is not further stored on Mosquitto. When the level is set to ‘1’, the message
    is stored until the client receives the PUBACK message, which will ensure that
    the message is transmitted at least once. The “PacketID” field is used to match
    the PUBLISH message packet with the corresponding PUBACK message packet. At level
    ‘2’ (i.e., the last level), the protocol provides the most reliable transmission
    by delivering a message exactly once so that it ensures the message is received
    and acknowledged over four handshake MQTT message packets. After the client transmits
    the PUBLISH message to the broker, the broker sends the PUBREC message to the
    client, confirming that it has received the PUBLISH message. If the client does
    not receive the PUBREC message, it sends the PUBLISH message repeatedly until
    it receives the PUBREC message with the “DupFlag” (i.e., duplicate flag) field.
    Following the reception of the PUBREC message, the client sends the PUBREL message
    with the packet ID, and the broker sends the PUBCOM message to the client as a
    reply, ensuring that the message is available again. The use of the “DupFlag”
    field is necessary in the case of both QoS ‘1’ and QoS ‘2’ levels. Like the “DupFlag”,
    the packet ID is also important in situations other than the QoS level ‘0’ as
    it defines the uniqueness of the messages. The “Payload” field specifies the message
    content. The QoS level ‘2’ causes higher overheads and is rarely used in lightweight
    networks. When the Mosquitto broker receives a PUBLISH message from a client,
    it calls the “acl_check” function from mqtt_pyauth_oauth2_otp application to decide
    whether the client is authorized or not to send such messages about the specified
    topic. The application calls the introspection API with the corresponding access
    token via HTTPS from WSO2IS to validate the client and obtain its scope information.
    If the access token is valid, the scope information is returned as “base64decode”,
    and then the application parses the scope and compares the received topics from
    the client with the parsed scope information. If the client’s topic information
    and the access permission match the scope information owned by the access token,
    then the client’s authorization is verified. The clients may act as a publisher
    or a subscriber. In any case, they do not transmit their data to each other directly.
    All the communication is taken place over the Mosquitto broker(s). When the broker
    receives a SUBSCRIBE message from a client, the procedure steps in Figure 9 are
    followed to decide whether the client is authorized or not to receive messages
    on the specified topics. After verifying the client’s access rights in correspondence
    with its topics, such as data write and read, the data transmission can successfully
    be completed. Additionally, the UNSUBSCRIBE message is used to remove the request
    of a subscriber from Mosquitto. It includes the subscriber’s topics and packet
    IDs. If the read and write access permissions for a stated topic do not match
    the scope information in the valid access token, the client is declared unauthorized.
    Hence, no message will be sent or received (to/from that client). In the case
    of an invalid access token, the response is returned as an unauthorized client
    without calling the “acl_check” function. 4. Implementation and Validation An
    example case of the proposed scheme is implemented for functionality validation
    and performance evaluation purposes. While this section elaborates on the functionality
    aspects, the performance tests are provided in Section 5. 4.1. Preliminaries Our
    experiments were performed through emulation of wireless sensor nodes and other
    networked devices on a personal computer considering the following details: 4.1.1.
    Evaluation Criteria Considering the objectives of our work (see the problem statement
    in Section 1), we have defined three main security features to assess the functionality
    of our scheme. Accordingly, any MQTT ecosystem that implements MARAS as a security
    layer must: Ensure the uniqueness of every single connected device (i.e., clients,
    brokers, and the server); Allow the Mosquitto brokers to verify every single device
    (i.e., clients and the server) on its local network, as well as ensure that the
    clients validate the broker reciprocally as well; Merely allow the clients with
    legitimate access rights to receive and transmit data through the network. Altogether,
    our implementation directly follows the flowcharts given in Figure 10 and Figure
    11, where the general procedures of the MARAS scheme are illustrated. Therefore,
    as explained later, our demonstration successfully provided all the above criteria.
    Figure 10. Flowchart of the authentication and authorization mechanisms MARAS
    implements. Figure 11. General flowchart of the authentication and authorization
    mechanisms (second step). 4.1.2. System Model, Assumptions, and Configurations
    In the proof-of-concept implementation of this work, the following entities were
    (virtually) created on the same physical computer (equipped with Intel i7 3630QM
    and running Ubuntu), where the inter-node communications took place within the
    local host: One server that runs the OAuth 2.0 protocol; One MQTT broker that
    implements Mosquitto, an open-source message broker written in C language (mosquitto.org—accessed
    on 2 May 2023); Six clients with both publisher and subscriber roles through the
    Eclipse Paho Python client library (eclipse.org/paho—accessed on 2 May 2023).
    The clients (i.e., sensor/actuator nodes) pose the following capabilities: Producing
    any sort of data that can be transmitted as a byte stream (for sensors), reading
    such data (for actuators), or even both (for compound devices); Sending and receiving
    data and control messages through the wireless channels; Processing power is enough
    to perform AES encryption and decryption without any considerable lag. In addition
    to the above, the brokers can do the following: Forwarding messages within the
    network depending on the source and destination addresses they contain; Dropping
    messages sent from or destined to unauthorized devices, per permissions in the
    server. The OAuth 2.0 protocol is preferred to issue authorization privileges
    without revealing the usernames and passwords of the clients. This helps to protect
    user credentials from being reused without consent (or even awareness) of the
    clients (and human users) by malicious applications and/or attackers [57]. For
    the sake of reproducibility, we present the rest of the test settings in the online
    Supplementary Materials (see Supplementary Table S1 at srg.cs.deu.edu.tr/publications/2023/maras/—accessed
    on 2 May 2023). 4.1.3. Test Scenario In order to validate the system’s ability
    to satisfy the given objectives and functionalities introduced in the previous
    section, a test implementation was made. Per the test case, six clients (IDs from
    1 to 6) with different privileges have been defined in the local network. The
    topic information that the clients are interested in and the read/write access
    permissions (i.e., scopes) are shown in Table 2. The scope information of these
    clients is also specified on the server. Then, the client ID and client secret
    information are obtained for each client. Therefore, it is shown that the client
    ID and client secret are unique parameters for each client. The information in
    Table 2 is used to obtain access tokens via the cURL command given in the online
    Supplementary Materials (see row 1 of Supplementary Table S2 at srg.cs.deu.edu.tr/publications/2023/maras/—accessed
    on 2 May 2023). Table 2. The registered client information on WSO2IS. After obtaining
    an access token via the cURL command, the client ID, client secret, access token,
    topic, HOTP value, port number, and the broker’s address are manually recorded
    in the client. The information base of Client 1 is shown in Table 3 as an example.
    Table 3. The information that a CONNECT message contains. When Mosquitto receives
    CONNECT messages from the clients, the first authentication step is run by verifying
    its username on WSO2IS via a secure channel created with an HTTPS connection.
    The contents of the CONNECT message packet are not given as they are not human-readable
    (base64-encoded or AES-encrypted). Wireshark is used to interpret and analyze
    the collected data over the MQTT protocol as a network traffic sniffing tool.
    The raw contents of the sniffed CONNECT message packet of Client 2 are shown in
    Figure 12. Figure 12. A CONNECT message containing credentials sent from client
    2 to a broker. The MQTT packet includes a two-byte fixed header, in which the
    first four bits include the MQTT message types and the last four bits include
    the control flags. The header flag is defined as ‘0 × 10’, which means that the
    first four bits are ‘0001’. This setting points out a CONNECT message type, and
    the last four bits are ‘0000’, which indicates the control flag. There are 14
    message types defined by four bits in the data packets. Additionally, the control
    flag includes a duplicate delivery (DUP) flag for a PUBLISH control packet, the
    quality of services (QoS) indicator, and the retain mode flag. These flags are
    defined, respectively, by one, two, and one bit as in ‘0000’. The variable-length
    header contains a control flag that is not mandatory in all message types. A CONNECT
    message data packet contains the control, length, protocol name, protocol level,
    connect flags, the “keep-alive” field, and the payload. The payload includes the
    client ID (28 bytes), the username (36 bytes), the password (86 bytes), will topic
    (1 bit), and message (1 bit) flags. The control flag is defined as ‘0×c0’ in the
    above example. That means the username and password flags are set to ‘1’, whereas
    the remaining flags of retain (1 bit), QoS (2 bits), clean (1 bit), will (1 bit),
    and reserved (1 bit) are all set to ‘0’ (i.e., ‘1100 0000’). The total packet
    length is equal to 169 bytes. That length is the sum of the header flags (1 decimal)
    + protocol name and version (5 decimals) + connect flags (12 decimals) + keep-alive
    (1 decimal) + client ID (28 decimals) + username (36 decimals) + password (86
    decimals). The username is essentially validated from WSO2IS via HTTPS. If it
    is found to be correct, the client ID information is then returned to the Mosquitto.
    An example response is provided in the online Supplementary Materials (see row
    2 of Supplementary Table S2 at srg.cs.deu.edu.tr/publications/2023/maras/—accessed
    on 2 May 2023). Otherwise, if the username is not valid, WSO2IS returns a different
    message reporting the failed attempt regarding the username validation (see row
    3 of Supplementary Table S2 at srg.cs.deu.edu.tr/publications/2023/maras/—accessed
    on 2 May 2023). If the access token is false, the Mosquitto returns to the client
    as it is an unauthenticated client with the MQTT CONNACK message code as ‘5’.
    Another possibility is that when the username is empty, Mosquitto responds with
    a CONNACK message as a bad username or password, and the connection is rejected.
    4.2. Mutual Authentication The mutual authentication of the parties involves the
    authentication of any client by the broker, and the authentication of the broker
    by all clients, respectively. As the initial step of the authentication measures,
    the connection requests from recently deployed clients that were not previously
    registered to the local network are rejected due to the absence of their corresponding
    access tokens. However, since the connections are established through insecure
    channels, it is possible that a static access token can be sniffed by a malicious
    device so that an attacker can connect to the Mosquitto broker. Yet, the second
    authentication step enforces using a dynamic password that is changing after each
    connection to prevent an attacker from connecting to the server with a previously
    sniffed static access token. Likewise, the attacker is prevented from proceeding
    with a replay attack due to the enforced use of replaced dynamic passwords during
    data transmission to the Mosquitto broker. To achieve that, HOTP is concatenated
    with the client secret to build a unique password on each connection. HOTP also
    makes it difficult to guess an issued password. Moreover, the confidentiality
    of this password is ensured by AES encryption. Since the clients are not allowed
    to communicate with each other directly, all communication occurs through the
    broker(s). Therefore, the AES key should only be known to the Mosquitto broker.
    Instead of transmitting the key from an insecure channel to the Mosquitto broker,
    the client ID is preferred as the AES key that is already known by both the corresponding
    client and the Mosquitto broker. The password is decrypted via client ID by padding
    ‘0’ to generate a 32-byte AES key. Later on, the client secret and (N + 1)th HOTP
    (client) values are obtained as in Table 4. Table 4. The deciphered text. The
    broker acts as a generator for generating and verifying a HOTP value, whereas
    the client stores only the final HOTP value. Afterward, the HOTP value is updated
    according to the verification result on MongoDB. Within the second authentication
    step, the first thing to search on MongoDB is whether the broker generated the
    HOTP value depending on the corresponding client’s secret or not. If not, the
    broker creates HOTP values N times and records them on MongoDB. In our tests,
    the sampling is done by assuming that N is 6. In order to provide synchronization
    between the client and the Mosquitto broker, status codes such as ‘0’, ‘1’, and
    ‘2’ are kept along with each HOTP value depending on the client’s secret. These
    status codes represent a sequence of a process for a client and the broker to
    compare their HOTP values and to calculate a new HOTP value when necessary. For
    example, for an existing user, say Client 1, the user data document stored on
    MongoDB (containing a list of recently generated HOTP values) would look like
    the entries given in Table 4 [21]. Seven consecutive HOTP values are generated
    using the client ID and the number ‘3’ as the secret, respectively. The obtained
    HOTP values are given in the online Supplementary Materials (see Supplementary
    Table S3 at srg.cs.deu.edu.tr/publications/2023/maras/—accessed on 2 May 2023).
    The 7th HOTP value is calculated by updating the secret using the broker’s HOTP
    value, which has the status code ‘2’ (see Supplementary Table S4 at srg.cs.deu.edu.tr/publications/2023/maras/—accessed
    on 2 May 2023), and then this value is compared with the client’s HOTP value.
    If and only if the values are equal, the document based on the client’s secret
    is updated as in the bottom part of Figure 13. Figure 13. Flowchart showing how
    the second step of authentication is executed using HOTPs. A CONNACK message is
    sent to the client when the client is authenticated by comparing the calculated
    HOTP value (which has status code ‘2’) and the HOTP value (client) on Mosquitto.
    At the same time, the broker’s HOTP value is updated with the previous HOTP value
    to make it impossible to guess the HOTP value owing to the use of an irreversible
    hash function. The contents of the CONNACK message data packet are given in Figure
    14 (obtained via Wireshark). Figure 14. A CONNACK message sent from a broker to
    client 2 showing the client is authenticated. As interpreted in the given dump
    records, the authentication is successful and the CONNACK message is received
    with the return code ‘0’, which means that the connection request is approved.
    Before sending or requesting a message on the topic of which the client is concerned,
    the client must ensure that it is communicating with the genuine broker. Therefore,
    mutual authentication is implemented using the HOTP value within a hash chain.
    A client device authenticates the Mosquitto broker by comparing the client’s own
    calculated HOTP (generated using the client ID and the secret, namely, the number
    ‘3’) to the broker’s HOTP value, which has the status code ‘1’. If they are found
    to be identical, the client updates its HOTP value with the HOTP value, whose
    status code is ‘1’. This process [23] is shown in Figure 13. Theoretical problems
    of possible interruptions in the connection are detected using the status codes
    that virtually ensure the synchronization of the HOTP values. In case the CONNACK
    message with result code ‘0’ is received, the client authenticates the broker,
    as illustrated in Figure 13. In case the comparison yields equal values, the client’s
    HOTP value and the document based on the client’s secret are further updated as
    in Figure 13. 4.3. Client Authorization Consider Client 1 publishes a message
    (i.e., string) containing the characters ’36 °C’ (an example temperature value)
    after the successful mutual authentication. The confidentiality of the message
    is provided by AES encryption. This published message data packet is broken down
    using Wireshark in Figure 15. Figure 15. A PUBLISH message sent from client 1
    to a broker after successful authorization is maintained. Assuming the mutual
    authentication of each client is successful, each client should only be allowed
    to access the messages based on its own read/write access permission. Otherwise,
    (possibly irrelevant) data can be exchanged with all connected clients, even the
    not-interested ones. In that case, each unauthorized client will significantly
    inflate the message traffic. In this study, the access control mechanism is provided
    by using an OAuth 2.0 authorization server that gives scope information with a
    valid access token. When a Mosquitto broker receives a PUBLISH message, first,
    the scope information is obtained from WSO2IS if there is a valid access token.
    The scope is returned in JSON format, and then the parsed scope is compared to
    the topic information (which is ‘temperature’ for Client 1). If the compared values
    are identical, Client 1 is authorized and is allowed to send its message. In Table
    5, all clients’ authorities are observed when the authorized Client 1 sends a
    PUBLISH message to the broker regarding the topic ‘temperature’. The message contents
    are given in the online Supplementary Materials (see row 4 of Supplementary Table
    S2 at srg.cs.deu.edu.tr/publications/2023/maras/—accessed on 2 May 2023). Table
    5. Client’s authorization status. As shown in Table 5, Client 7 does not have
    an access token because it is not registered on the WSO2IS authorization server.
    So, Client 7 cannot gain authority for any topic, and the response returns to
    the unauthenticated client regardless of calling the ‘pwd_check’ function. The
    remaining clients are authenticated owing to posing valid access tokens and valid
    HOTP values. However, both Client 5 and Client 6 have ‘read’ permissions for different
    topics; the requested topic does not match their authority, so ACL is denied,
    whereas Client 3 holds written permission for a different topic (i.e., ‘humidity’),
    the ACL is rejected since the topics do not match. Both scope and topic permissions
    of Client 1, Client 2, and Client 4 do match; hence, ACL is successful. A disadvantage
    of the access control mechanism that we recommended is that it cannot be updated
    after the scope is once defined for each access token. We plan to solve this problem
    by expanding the access control model we developed using mobile applications as
    a future study. 5. Performance Evaluations This section includes a brief complexity
    analysis and provides a detailed experimental evaluation. 5.1. Complexity Discussion
    The time complexity of the procedure for registering the clients to WSO2IS to
    obtain access tokens, as visualized in Figure 1, is found as O(N), where N is
    the number of clients in the network, because the registration must be repeated
    for each client device. The complexity of connecting a single Mosquitto broker
    to WSO2IS via HTTPS to verify an access token, as given in Figure 4, is O(1);
    yet, this process can be executed in a parallel fashion if there is more than
    one broker. The second step of the authentication illustrated in Figure 5, where
    a broker authenticates a client over MongoDB records requires N calculations for
    HOTP (if the client was not registered in MongoDB) and this must be repeated for
    each of N clients; therefore, O(N2). Introduced in Figure 7, a client’s efforts
    on verifying the corresponding broker (to secure mutual authentication) again
    require N calculations of HOTP. Although this step is executed for each client,
    the execution is parallel on each client device; hence, O(N) complexity is achieved.
    So, the time complexity for a PUBLISH (Figure 8) or SUBSCRIBE (Figure 9) message
    remains at O(N2) as it will be the dominant term in the sum of all partial complexity
    classes given above. Encryptions and decryptions with AES on both clients and
    brokers have O(1) time complexity, and thus, can be neglected. On the other hand,
    the message complexity for both message types turns out to be O(M), where M is
    the message to be sent. Because each PUBLISH message requires 6 messages to be
    sent within the network, likewise, each SUBSCRIBE message requires 7 messages
    to be sent. Since the increase is a constant factor, the complexity class is not
    affected. 5.2. Runtime Performance The runtime performance of the proposed method
    is measured during a test run made with seven clients, a Mosquitto broker, and
    a WSO2IS authentication server, acting similarly to the scenario described in
    Section 4. While the tests focus more on network performance, it is also possible
    to estimate the clients’ energy consumption. The clients’ roles are again defined
    per Table 5, except Client 7 (which is now a publisher of ‘temperature’). So,
    four clients (1, 2, 3, 7) have been set as publishers (of some temperature, humidity,
    and pressure data), and three clients (4, 5, 6) have been set as subscribers of
    this information. Some comparisons are made between the case of secure communication
    (as described in this paper) and the case of non-secure communication to objectify
    the cost of applying the proposed method, namely, MARAS. Wireshark is used to
    track the network traffic throughout the communication of the parties. The statistics
    are measured via Wireshark, too. Following the initialization of the system, Client
    1, as a publisher, sends a burst of 100 periodic messages containing the temperature
    data ‘36’ and stops. Three minutes later, Client 1 and Client 2 together publish
    100 messages (200 in total) on ‘temperature’. After another three minutes, Client
    1, Client 2, and Client 3 all publish 100 messages (300 in total) on their topics.
    When the third three-minute waiting period is over, lastly, all publishers (i.e.,
    Client 1, Client 2, Client 3, and Client 7) publish 100 messages (400 in total)
    on their topics. Thus, a total of 1000 messages are sent in 4 consecutive burst
    sequences that make a total of 9 min. The messages are sent both as encrypted
    and in plaintext so that the performance is observed by calculating the packet
    overheads and the round-trip time (RTT). Figure 16 compares caused traffic overheads
    between the equivalent communication sessions executed with and without the proposed
    security method per different MQTT message types. The graph unveils an apparent
    redundancy to CONNECT and PUBLISH messages. AES encrypted version of a PUBLISH
    message is 103 bytes long, whereas its plaintext counterpart is only 54 bytes
    (in the case of using 28 bytes for the client ID and 13 bytes for the topic).
    A SUBSCRIBE message is only 3 bytes longer if MARAS is applied. MARAS has 169
    bytes-long CONNECT messages in a total of 237 bytes-long packets, whereas without
    MARAS, pure MQTT has 42 bytes-long CONNECT messages in a total of 110 bytes-long
    packets. Yet, other message types yield very similar results. Figure 16. The traffic
    overhead generated by MARAS compared to non-secure MQTT communication per various
    message types. Figure 17 illustrates the RTT values of an arbitrary “initial”
    CONNECT message for each client. Although somewhat situational, RTT is an indicator
    of the caused traffic overhead and is used to measure communication latencies
    in milliseconds. It is found by calculating the time between the transmission
    of a CONNECT message (sent by the client) and the reception of a corresponding
    acknowledgment message, namely, a CONNACK message (sent by the broker). In detail,
    the process starts whenever a client has to publish a data message to the broker.
    Later, the broker decrypts the received CONNECT message, interprets it, and sends
    a CONNACK message back. Whenever the client receives the acknowledgment, the RTT
    is calculated. Figure 17. The RTT values at each client compared with and without
    using MARAS, obtained by sending a CONNECT message and receiving a CONNACK message
    in response. From Figure 17, the RTT values of clients 1, 2, 4, 5, and 7 become
    significantly higher when MARAS is applied, whereas it has a negligible effect
    for clients 3 and 6. It is because clients 3 and 6 lack the required scope information
    that they cannot make use of secure communication. Hence, without secure communication,
    their packets stay smaller and float faster. Therefore, the security mechanism
    does not degrade any non-secure communication that takes part in different slices
    of a network. Considering the test case mentioned, the traffic over the wireless
    channel can be analyzed in four stages per four message bursts, as explained below:
    In the first three minutes: only one publisher sends 100 messages while three
    subscribers listen; Between the third and sixth minutes (excluding 6:00): two
    publishers send 100 messages each while three subscribers listen; Between the
    sixth and ninth minutes (excluding 9:00): three publishers send 100 messages each
    while three subscribers listen; At the ninth minute: four publishers send 100
    messages each, while three subscribers listen. In Figure 18, the RTT values are
    shown for every single TCP segment that constitutes a total of 1000 PUBLISH messages
    sent by all four publishers. Unlike the previous experiment, the measurements
    here are provided by Wireshark’s TCP analyzer and do not consider the PUBACK messages
    but the TCP ACK responses. The segment numbering is continuous so that the numbers
    do not reset for each message. As described in the scenario, the number of MQTT
    messages released to the medium increases over time. From Figure 18, this behavior
    is even more evident in the secure case. In fact, the non-secure communication
    requires only 1417 packets, whereas the security mechanism requires 2414 packets
    for the same data to be transferred (but securely). Thus, there is a clear tradeoff.
    Figure 18. The RTT values for all TCP segments sent by a client, compared with
    and without MARAS; each segment contains 1000 PUBLISH messages sent through the
    channel. Figure 19 shows the data traffic on the wireless channel during the mentioned
    above test scenario for both secure and non-secure communication. The lines show
    all packets in the TCP traffic, whereas the red dots represent the MQTT packets
    (on TCP port 1883). Additionally, green squares would represent a packet loss,
    but no loss has been recorded. Although the bursts of PUBLISH messages are easily
    observable in both cases, the traffic volume is significantly higher when the
    security mechanism is applied. Nevertheless, the congestion is far from being
    disruptive for any modern IoT or WSN deployment. Figure 19. Volume of data traffic
    generated by bursts of PUBLISH messages sent by a client, compared with (bottom)
    and without (top) using MARAS. 5.3. Comparative Analysis Moving forward with the
    runtime performance of MARAS obtained in our tests, we provide a brief comparative
    outlook referring to similar schemes from the literature. Information provided
    in this part is not a comprehensive analysis as the test environments are not
    equivalent, yet it presents an insight into how MARAS compares to alternatives
    in terms of computation and communication overhead. Our focus is limited to the
    mutual authentication phase since the registration phase of MARAS is manually
    performed once by a developer. For this purpose, the computation and communication
    costs of MARAS are compared to Patel et al. [39] and Saqib et al. [40]. The main
    goal of designing MARAS is to minimize the processing load on the resource-constrained
    publisher and subscriber clients while performing computationally intensive operations
    on the broker(s). The computation cost in MARAS emphasizes the number of cryptographic
    operations used during mutual authentication and the time required for these operations
    on the client and broker sides. Table 6 presents how much time it takes for an
    Eclipse Paho subscriber/publisher client and for a broker to complete the given
    operations on our testbed PC running Ubuntu OS with an Intel i7 3630QM processor.
    In the notation for Table 6 and Table 7, TE is time for symmetric encryption (i.e.,
    AES in MARAS), TD is symmetric decryption that is equivalent to the encryption,
    TH is time for a one-way hash function, THOTP is time for calculating HOTP(s),
    TECA is ECC point addition, TECM is ECC point multiplication, and TAS is time
    for token-based authentication steps performed with introspection API over HTTPS.
    In our case, the convergence times are identical for clients and brokers as we
    run them on identical systems. In a real deployment, a broker’s performance can
    be expected to be slightly (or remarkably) better than the clients. Table 6. Approximate
    time estimates in ms for various cryptographic operations on MARAS. Table 7. Computation
    costs comparison in ms. Table 7, on the other hand, provides a comparative outlook
    on how many (and which) operations are required on various device types with different
    methods, as well as how much time is required to complete those operations. According
    to the results, MARAS performs better than both [39,40]; however, we once again
    note that the testbeds are not equivalent. MARAS requires significantly more operations
    than the others on the broker side (as a result of our motivation to offload the
    heavier operations to the broker); however, the major contribution to the number
    is the repeated hash function, which is actually a very fast operation. For more
    information on the compared works, we encourage the readers to read [39,40], while
    we must note that Table 4 in [39] contains an error regarding the calculated times,
    which we corrected here in Table 7 as 792 ms. Table 8 compares communication costs
    in terms of sent bits in a scenario where there is one publisher client, one subscriber
    client, and one broker so that a publisher seeks authorization to send some data
    to the subscriber over the broker. With MARAS, a client sends a broker 28 bytes
    of client ID + 36 bytes of token (i.e., username) + 86 bytes of password, which
    sum up to 150 bytes (1200 bits). A broker sends the authentication server data
    totaling 334 bytes (2672 bits) over TLS; later, it sends an ack to the client
    totaling 2 bytes (16 bits). While refs. [39,40]’s costs are equivalent, communication
    with MARAS costs less than both when a public channel is used and more than both
    when a TLS channel is used. Table 8. Communication costs comparison in bits. 6.
    Discussion of Results This part summarizes and discusses the functionality validation
    introduced in Section 4 and the performance evaluation given in Section 5. Our
    proof-of-concept implementation showed that MARAS is an easy workaround for securing
    two-way MQTT communications between numerous sensor/actuator devices (i.e., clients),
    intermediary gateways, and servers. It is shown that authorization (of clients)
    and two-way authentication (of clients and brokers) work flawlessly so that all
    devices (i.e., clients, brokers, and the server) included in a MARAS-enabled MQTT
    network environment can ensure the authenticity of every other connected device.
    MARAS implements dynamic encryption using HOTP for authentication, effectively
    preventing replay attacks and man-in-the-middle attacks by rendering password
    reuse invalid in case of interception. Additionally, permission-based authorization
    (for sending and receiving data) is enforced on sensor/actuator devices by an
    identity server through the broker(s). By utilizing OAuth 2.0, the IoT application
    can efficiently manage access control and delegation for a growing number of devices.
    Each device is authenticated and authorized individually, and its unique ID is
    used to enforce access restrictions. This granular level of authorization ensures
    that devices can only access messages and resources that they have been explicitly
    granted permission to, enhancing the overall security and control of the IoT ecosystem.
    We provide our comparative analysis regarding the security features of MARAS and
    existing schemes in Table 9, where authorization stands for simple access control
    (e.g., OAuth 1.0, access control list, tree hierarchy, etc.), the role-based access
    control means advanced node/client authorization by assigned roles (e.g., via
    OAuth 2.0), client authentication means brokers authenticating clients (e.g.,
    via tokens, user name, and password), HOTP stands for the use of HMAC-based one-time
    passwords for authentication, mutual authentication means clients and brokers
    authenticate each other reciprocally (e.g., via HOTP, SSL, nonces, etc.), and
    confidentiality means payload encryption (e.g., AES). As reflected in Table 9,
    no previous attempt could collectively provide all the security features that
    MARAS provides. Table 9. Comparative analysis of existing works and MARAS. Our
    tests also revealed the effects and costs of applying the proposed security mechanism
    on top of an MQTT setup. The results show that there is an apparent tradeoff between
    the communication overhead and the security provided. The actual cost of implementing
    MARAS (in terms of data overhead) can be found using Table 10, where the three
    largest message types are compared. The other message types are not only much
    smaller but also not significantly affected by MARAS; therefore, they can safely
    be ignored. Table 10. Extra network traffic caused by MARAS (in terms of message
    size). From Figure 16 and Table 10, in a long-lasting sensor network scenario
    where the number of data packages to be disseminated to the network is larger
    than 1000, the PUBLISH messages will most likely dominate the network’s traffic
    because the other messages are only sent once (or occasionally). Yet, 1000 is
    a very modest number for many scenarios as a sensor network may cast millions
    of messages in its entire lifetime. Therefore, although the cost increase is larger
    in CONNECT messages, the main cost comes from securing the published data. Hence,
    MARAS shall double the total traffic overhead compared to the non-secure case.
    However, assuming there is no multimedia content, the message sizes are still
    tiny. So, this overhead may be tolerable in most cases if the security of the
    network is a major concern. Yet, our repeated tests showed that round trip times
    for a CONNECT message (and its “ack” counterpart) are only delayed by less than
    a percentile of a millisecond. For a PUBLISH message, the delays again depend
    on the size and frequency of the published information, but we can safely say
    that the delay is upper bounded by 163% of the network defaults. Moreover, (from
    Figure 18), the upper bound of the RTT of a segment (consisting of 1000 PUBLISH
    messages) does not increase with MARAS. So, the scheme’s degrading effects on
    the system performance are limited and tolerable. We have seen that while there
    is an increased data overhead (up to 2×) and potential latency (up to 1.6×), the
    overall impact on system performance has remained within acceptable limits for
    most IoT setups. The additional overhead can be considered a necessary cost for
    enhanced security, which includes mutual authentication, role-based authorization,
    and payload encryption. There are also additional tradeoffs when implementing
    MARAS in IoT applications. These include the impact on energy consumption, scalability,
    and complexity. The additional processing and communication overhead can increase
    energy consumption, especially in battery-powered devices. Scalability is also
    a critical factor to consider in large-scale IoT deployments. The overhead introduced
    can limit scalability as device configurations must be done exhaustively (e.g.,
    the device registration phase for the identity server), although it can be automated.
    Time complexity, as well as development complexity, also increases with the use
    of MARAS. Native MQTT would operate with O(1) complexity for most cases (i.e.,
    publish/subscribe) on the client side, and O(N) on the broker side, while MARAS
    elevates it to O(N) on the client side and O(N2) on the broker side. 7. Conclusions
    The MQTT protocol enables a fast and reliable communication scheme for IoT deployments
    consisting of lightweight sensors and actuator devices. But it does not natively
    implement any advanced security mechanism, conceivably to comply with the tight
    resource constraints of such devices. Yet, it is still critical to secure private
    data in sensitive applications. The use of SSL/TLS and HTTPS may provide significant
    degrees of security but at the cost of high energy consumption, low performance,
    exhaustive computing, and bloated bandwidth. Thus, a lightweight security protocol
    tailored for IoT devices with limited resources is a substantial need among the
    IoT ecosystems. This paper outrightly provides an extension to the MQTT protocol
    to further allow authorization of claimant nodes, mutual authentication of communicating
    parties, the privacy of topics in question, and encryption of sensitive data.
    With MARAS, a Mosquitto broker can authorize the client nodes (and check their
    rights to publish or subscribe to specific topics) through an authentication server
    (WSO2IS that runs OAuth 2.0). Likewise, the nodes and the broker(s) can also authenticate
    each other by comparing their HMAC-based one-time passwords kept at their local
    storage (e.g., MongoDB). Consequently, such trusted communications can be further
    encrypted via AES to ensure confidentiality. This also inherently provides integrity
    protection. Thus, comprehensive security can be brought to the lightweight IoT
    devices that use MQTT. Previous works could not achieve the level of security
    that MARAS grants without utilizing SSL/TLS and HTTPS, which are heavy and costly.
    In practice, the cost of implementing MARAS onto a sufficiently long-lasting sensor
    network is mainly doubling the existing data traffic in the network. This is mainly
    caused by the 90.74% increase in the size of PUBLISH messages, as indicated in
    Table 10. When the number of PUBLISH messages sent within the network exceeds
    1000, they start to account for more than 99% of the cost increase caused by MARAS.
    Nevertheless, this extra load is still non-significant for many WSN or IoT scenarios,
    and the delays are very small compared to what SSL/TLS or HTTPS would cause. Additionally,
    the solution is not solely dependent on the technologies mentioned in this paper,
    yet it can also be implemented using their alternatives (e.g., RabbitMQ instead
    of Mosquitto). Future works will include compatibility with decentralized record-keeping
    systems, support for multi-broker networks, and other means of security (e.g.,
    availability and non-repudiation). MARAS has undergone testing on advanced devices,
    and our upcoming study aims to assess the feasibility of implementing our developed
    MARAS approach on a security-enhanced multi-protocol gateway. This gateway will
    incorporate BLE, Wi-Fi, and ZigBee communication protocols. To accomplish this,
    Mosquitto will be deployed on a Raspberry Pi and configured to support various
    communication technologies with ESP32 devices. This expanded testing will allow
    us to evaluate the effectiveness and compatibility of the MARAS approach within
    a diverse IoT ecosystem involving different communication protocols. In addition,
    the MARAS approach cannot prevent physical attacks. For this, additional security
    is aimed at controlling the received signal strength indicator (RSSI) information
    of the devices and the indoor location, and by detecting the device that does
    not belong to the application. Other future works may include compatibility with
    decentralized record-keeping systems, support for multi-broker networks, and other
    means of security (e.g., availability and non-repudiation). Supplementary Materials
    The following supporting information can be downloaded at: srg.cs.deu.edu.tr/publications/2023/maras/
    (accessed on 2 May 2023). Author Contributions Conceptualization, Ö.Ş. and U.C.Ç.;
    methodology, Ö.Ş. and G.D.; software, Ö.Ş. and U.C.Ç.; validation, G.D.; formal
    analysis, G.D.; investigation, Ö.Ş.; resources, Ö.Ş.; writing—original draft preparation,
    Ö.Ş.; writing—review and editing, U.C.Ç. and G.D.; visualization, Ö.Ş. and G.D.;
    supervision, G.D. All authors have read and agreed to the published version of
    the manuscript. Funding This research received no external funding. Institutional
    Review Board Statement Not applicable. Informed Consent Statement Not applicable.
    Data Availability Statement No new data were created or analyzed in this study.
    Data sharing is not applicable to this article. Conflicts of Interest The authors
    declare no conflict of interest. References Görmüş, S.; Aydın, H.; Ulutaş, G.
    Security for the Internet of Things: A survey of existing mechanisms, protocols
    and open research issues. J. Fac. Eng. Archit. Gazi Univ. 2018, 33, 1247–1272.
    [Google Scholar] Al-Fuqaha, A.; Guizani, M.; Mohammadi, M.; Aledhari, M.; Ayyash,
    M. Internet of Things: A survey on enabling technologies, protocols, and applications.
    IEEE Commun. Surv. Tutor. 2015, 17, 2347–2376. [Google Scholar] [CrossRef] Xu,
    L.D.; He, W.; Li, S. Internet of things in industries: A survey. IEEE Trans. Ind.
    Inform. 2014, 10, 2233–2243. [Google Scholar] [CrossRef] Chiang, M.; Zhang, T.
    Fog and IoT: An overview of research opportunities. IEEE Internet Things 2016,
    3, 854–864. [Google Scholar] [CrossRef] Liu, X.; Xu, B.; Wang, X.; Zheng, K.;
    Chi, K.; Tian, X. Impacts of sensing energy and data availability on throughput
    of energy harvesting cognitive radio networks. IEEE Trans. Veh. Technol. 2023,
    72, 747–759. [Google Scholar] [CrossRef] Song, X.; Chin, K.W. Maximizing Packets
    Collection in Wireless Powered IoT Networks with Charge-or-Data Time Slots. IEEE
    Trans. Cogn. Commun. Netw. 2023. accepted. [Google Scholar] [CrossRef] Zhu, Q.;
    Wang, R.C.; Chen, Q.; Liu, Y.; Qin, W.J. IoT Gateway: Bridging Wireless Sensor
    Networks into Internet of Things. In Proceedings of the IEEE/IFIP 8th International
    Conference on Embedded and Ubiquitous Computing, Hong Kong, China, 11–13 December
    2010; pp. 347–352. [Google Scholar] Chien, H.-Y.; Wang, N.Z. A novel MQTT 5.0-based
    over-the-air updating architecture facilitating stronger security. Electronics
    2022, 11, 3899. [Google Scholar] [CrossRef] Asim, M. A Survey on Application Layer
    Protocols for Internet of Things (IoT). Int. J. Adv. Res. Comput. 2017, 8, 996–1000.
    [Google Scholar] Seoane, V.; Garcia-Rubio, C.; Almenares, F.; Campo, C. Performance
    evaluation of CoAP and MQTT with security support for IoT environments. Comput.
    Netw. 2021, 197, 108338. [Google Scholar] [CrossRef] Soni, D.; Makwana, A.A. Survey
    on MQTT: A Protocol of Internet of Things (IoT). In Proceedings of the International
    Conference on Telecommunication, Power Analysis and Computing Techniques (ICTPACT),
    Chennai, India, 6–8 March 2017; pp. 173–177. [Google Scholar] OASIS MQTT Version
    3.1.1 Plus Errata 01. Available online: http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.pdf
    (accessed on 2 May 2023). Thangavel, D.; Ma, X.; Valera, A.; Tan, H.; Tan, C.K.
    Performance Evaluation of MQTT and CoAP via a Common Middleware. In Proceedings
    of the IEEE Ninth International Conference on Intelligent Sensors, Sensor Networks
    and Information Processing (ISSNIP), Singapore, 21–24 April 2014; pp. 1–6. [Google
    Scholar] Naik, N. Choice of Effective Messaging Protocols for IoT Systems: MQTT,
    CoAP, AMQP and HTTP. In Proceedings of the IEEE International Systems Engineering
    Symposium (ISSE), Vienna, Austria, 11–13 October 2017; pp. 1–7. [Google Scholar]
    Yokotani, T.; Sasaki, Y. Comparison with HTTP and MQTT on Required Network Resources
    for IoT. In Proceedings of the International Conference on Control, Electronics,
    Renewable Energy and Communications (ICCEREC), Bandung, Indonesia, 13–15 September
    2016; pp. 1–6. [Google Scholar] Shinde, S.A.; Nimkar, P.A.; Singh, S.P.; Salpe,
    V.D.; Jadhav, Y.R. MQTT-message queuing telemetry transport protocol. Int. J.
    Res. 2016, 3, 240–244. [Google Scholar] Azzedin, F.; Alhazmi, T. Secure data distribution
    architecture in IoT using MQTT. Appl. Sci. 2023, 13, 2515. [Google Scholar] [CrossRef]
    Munshi, A. Improved MQTT secure transmission flags in smart homes. Sensors 2022,
    22, 2174. [Google Scholar] [CrossRef] [PubMed] Ragothaman, K.; Wang, Y.; Rimal,
    B.; Lawrence, M. Access control for IoT: A survey of existing research, dynamic
    policies and future directions. Sensors 2023, 23, 1805. [Google Scholar] [CrossRef]
    [PubMed] The OAuth 2.0 Authorization Framework. Available online: https://www.ietf.org/rfc/rfc6749.txt
    (accessed on 2 May 2023). Fremantle, P.; Aziz, B.; Kopecky, J.; Scott, P. Federated
    Identity and Access Management for the Internet of Things. In Proceedings of the
    International Workshop on Secure Internet of Things, Wroclaw, Poland, 7–11 September
    2014; pp. 10–17. [Google Scholar] Park, C.S. One-time password based on hash chain
    without shared secret and re-registration. Comput. Secur. 2018, 75, 138–146. [Google
    Scholar] [CrossRef] HOTP: An HMAC-Based One-Time Password Algorithm. Available
    online: tools.ietf.org/pdf/rfc4226.pdf (accessed on 2 May 2023). Kim, H.J.; Kim,
    H.S. AUTHHOTP-HOTP Based Authentication Scheme over Home Network Environment.
    In Computational Science and Its Applications—ICCSA 2011; Murgante, B., Gervasi,
    O., Iglesias, A., Taniar, D., Apduhan, B.O., Eds.; Springer: Berlin/Heidelberg,
    Germany, 2011; Volume 6784, pp. 622–637. [Google Scholar] Saxena, A. Dynamic Authentication:
    Need than a Choice. In Proceedings of the 3rd International Conference on Communication
    Systems Software and Middleware and Workshops (COMSWARE), Bangalore, India, 6–10
    January 2008; pp. 214–218. [Google Scholar] Yerlikaya, Ö. Security Enhanced Lightweight
    Messaging Protocol. Master’s Thesis, Dept. Computer Engineering, the Graduate
    School of Natural and Applied Sciences, Dokuz Eylül University, İzmir, Turkey,
    2018. [Google Scholar] Blazhevski, D.; Stojcevska, B.; Pachovski, V. Modes of
    Operation of the AES Algorithm. In Proceedings of the 10th Conference for Informatics
    and Information Technology (CIIT 2013), Bitola, Macedonia, 18–21 April 2013; pp.
    212–216. [Google Scholar] Singh, M.; Rajan, M.A.; Shivraj, V.L.; Balamuralidhar,
    P. Secure MQTT for Internet of Things (IoT). In Proceedings of the 5th International
    Conference on Communication Systems and Network Technologies, Gwalior, India,
    4–6 April 2015; pp. 746–751. [Google Scholar] Upadhyay, Y.; Borole, A.; Dileepan,
    D. MQTT Based Secured Home Automation System. In Proceedings of the Symposium
    on Colossal Data Analysis and Networking (CDAN), Indore, India, 18–19 March 2016;
    pp. 1–4. [Google Scholar] Niruntasukrat, A.; Issariyapat, C.; Pongpaibool, P.;
    Meesublak, K.; Aiumsupucgul, P.; Panya, A. Authorization Mechanism for MQTT-Based
    Internet of Things. In Proceedings of the IEEE International Conference on Communications
    Workshops, Kuala Lumpur, Malaysia, 23–27 May 2016; pp. 290–295. [Google Scholar]
    Zamfir, S.; Balan, T.; Iliescu, I.; Sandu, F. A Security Analysis on Standard
    IoT Protocols. In Proceedings of the International Conference on Applied and Theoretical
    Electricity (ICATE), Craiova, Romania, 6–8 October 2016; pp. 1–6. [Google Scholar]
    Rajan, M.A.; Varghese, A.; Narendra, N.; Singh, M.; Shivraj, V.L.; Chandra, G.;
    Balamuralidhar, P. Security and Privacy for Real Time Video Streaming Using Hierarchical
    Inner Product Encryption Based Publish-Subscribe Architecture. In Proceedings
    of the 30th International Conference on Advanced Information Networking and Applications
    Workshop, Crans-Montana, Switzerland, 23–25 March 2016; pp. 373–380. [Google Scholar]
    Nagarajan, S.M.; Deverajan, G.G.; Chatterjee, P.; Alnumay, W.; Ghosh, U. Effective
    task scheduling algorithm with deep learning for Internet of health things (IoHT)
    in sustainable smart cities. Sustain. Cities Soc. 2021, 71, 102945. [Google Scholar]
    [CrossRef] Alshammari, H.H. The Internet of things healthcare monitoring system
    based on MQTT protocol. Alex. Eng. J. 2023, 69, 275–287. [Google Scholar] [CrossRef]
    Fathy, C.; Ali, H.M. A secure IoT-based irrigation system for precision agriculture
    using the expeditious cipher. Sensors 2023, 23, 2091. [Google Scholar] [CrossRef]
    [PubMed] Shilpa, V.; Vidya, A.; Pattar, S. MQTT based secure transport layer communication
    for mutual authentication in IoT network. Glob. Transit. Proc. 2022, 3, 60–66.
    [Google Scholar] Winarno, A.; Sari, R.F. A novel secure end-to-end IoT communication
    scheme using lightweight cryptography based on block bipher. Appl. Sci. 2022,
    12, 8817. [Google Scholar] [CrossRef] Ramyasri, G.; Murthy, G.R.; Itapu, S.; Krishna,
    S.M. Data transmission using secure hybrid techniques for smart energy metering
    devices. e-Prime-Adv. Electr. Eng. Electron. Energy 2023, 4, 100134. [Google Scholar]
    [CrossRef] Patel, C.; Doshi, N. LDA-2IoT: A level dependent authentication using
    two factor for IoT paradigm. Comput. Netw. 2023, 223, 109580. [Google Scholar]
    [CrossRef] Saqib, M.; Jasra, B.; Moon, A.H. A lightweight three factor authentication
    framework for IoT based critical applications. J. King Saud Univ. 2022, 34, 6925–6937.
    [Google Scholar] [CrossRef] Katsikeas, S.; Fysarakis, K.; Miaoudakis, A.; Bemten,
    A.V.; Askoxylakis, I.; Papaefsta-thiou, I.; Plemenos, A. Lightweight & Secure
    Industrial IoT Communications via the MQ Telemetry Transport Protocol. In Proceedings
    of the 2017 IEEE Symposium on Computers and Communications (ISCC), Heraklion,
    Greece, 3–6 July 2017; pp. 1193–1200. [Google Scholar] Bhawiyuga, A.; Data, M.;
    Warda, A. Architectural Design of Token Based Authentication of MQTT Protocol
    in Constrained IoT Device. In Proceedings of the 11th International Conference
    on Telecommunication Systems Services and Applications (TSSA), Lombok, Indonesia,
    26–27 October 2017; pp. 1–4. [Google Scholar] Bashir, A.; Mir, A.H. Securing communication
    in MQTT enabled Internet of things with lightweight security protocol. EAI Endorsed
    Trans. Internet Things 2017, 3, e1. [Google Scholar] [CrossRef] Wardana, A.A.;
    Perdana, R.S. Access Control on Internet of Things Based on Publish/Subscribe
    Using Authentication Server and Secure Protocol. In Proceedings of the 10th International
    Conference on Information Technology and Electrical Engineering (ICITEE), Bali,
    Indonesia, 24–26 July 2018; pp. 118–123. [Google Scholar] Calabretta, M.; Pecori,
    R.; Velti, L. A Token-Based Protocol for Securing MQTT Communications. In Proceedings
    of the 26th International Conference on Software, Telecommunications and Computer
    Networks (SoftCOM), Split, Croatia, 13–15 September 2018; pp. 1–6. [Google Scholar]
    Shin, S.; Kobara, K.; Chuang, C.C.; Huang, W. A Security Framework for MQTT. In
    Proceedings of the IEEE Conference on Communications and Network Security (CNS),
    Philadelphia, PA, USA, 17–19 October 2016; pp. 432–436. [Google Scholar] Bali,
    R.S.; Jaafar, F.; Zavarasky, P. Lightweight Authentication for MQTT to Improve
    the Security of IoT Communication. In Proceedings of the ACM International Conference
    Proceeding Series, Kuala Lumpur, Malaysia, 19–21 January 2019; Association for
    Computing Machinery: New York, NY, USA, 2019; pp. 6–12. [Google Scholar] Sundarrajan,
    M.; Narayanan, A.E.A. An authentication scheme for an IoT environment using advanced
    multiple encryption system. Int. J. Innov. Tech. Expl. Eng. 2019, 9, 868–874.
    [Google Scholar] [CrossRef] Aknin, R.; Bentaleb, Y. Enhanced MQTT architecture
    for smart supply chain. Int. J. Adv. Comput. Sci. Appl. 2023, 14, 861–869. [Google
    Scholar] [CrossRef] Sanjuan, E.B.; Cardiel, I.A.; Cerrada, J.A.; Cerrada, C. Message
    queuing telemetry transport (MQTT) security: A cryptographic smart card approach.
    IEEE Access 2020, 8, 115051–115062. [Google Scholar] [CrossRef] Amoretti, M.;
    Pecori, R.; Protskaya, Y.; Veltri, L.; Zanichelli, F. A scalable and secure publish/subscribe-based
    framework for industrial IoT. IEEE Trans. Ind. Inform. 2021, 17, 3815–3825. [Google
    Scholar] [CrossRef] Blazy, O.; Conchon, E.; Klingler, M.; Sauveron, D. An IoT
    attribute-based security framework for topic-based publish/subscribe system. IEEE
    Access 2021, 9, 19066–19077. [Google Scholar] [CrossRef] Yerlikaya, O.; Dalkılıç,
    G. Authentication and Authorization Mechanism on Message Queue Telemetry Transport
    Protocol. In Proceedings of the 2018 3rd International Conference on Computer
    Science and Engineering (UBMK), Sarajevo, Bosnia-Herzegovina, 20–23 September
    2018; pp. 145–150. [Google Scholar] Liu, A.; Alqazzaz, A.; Ming, H.; Dharmalingam,
    B. IoT Verif: Automatic verification of SSL/TLS certificate for IoT applications.
    IEEE Access 2019, 9, 27038–27050. [Google Scholar] [CrossRef] WSO2 Identity Server
    Documentation. Available online: https://docs.wso2.com/display/IS530/Configuring+OAuth2-OpenID+Connect
    (accessed on 2 May 2023). Bachry, M. Mosquitto-Pyauth. Available online: https://github.com/mbachry/mosquitto_pyauth
    (accessed on 2 May 2023). Windley, P.J. API Access control with OAuth: Coordinating
    interactions with the Internet of things. IEEE Consum. Electron. Mag. 2015, 4,
    52–58. [Google Scholar] [CrossRef]                  Disclaimer/Publisher’s Note:
    The statements, opinions and data contained in all publications are solely those
    of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s).
    MDPI and/or the editor(s) disclaim responsibility for any injury to people or
    property resulting from any ideas, methods, instructions or products referred
    to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Şeker, Ö.; Dalkılıç, G.; Çabuk, U.C. MARAS:
    Mutual Authentication and Role-Based Authorization Scheme for Lightweight Internet
    of Things Applications. Sensors 2023, 23, 5674. https://doi.org/10.3390/s23125674
    AMA Style Şeker Ö, Dalkılıç G, Çabuk UC. MARAS: Mutual Authentication and Role-Based
    Authorization Scheme for Lightweight Internet of Things Applications. Sensors.
    2023; 23(12):5674. https://doi.org/10.3390/s23125674 Chicago/Turabian Style Şeker,
    Özlem, Gökhan Dalkılıç, and Umut Can Çabuk. 2023. \"MARAS: Mutual Authentication
    and Role-Based Authorization Scheme for Lightweight Internet of Things Applications\"
    Sensors 23, no. 12: 5674. https://doi.org/10.3390/s23125674 Note that from the
    first issue of 2016, this journal uses article numbers instead of page numbers.
    See further details here. Article Metrics Citations Scopus   1 Google Scholar   [click
    to view] Article Access Statistics Article access statistics Article Views 28.
    Dec 7. Jan 17. Jan 27. Jan 6. Feb 16. Feb 26. Feb 7. Mar 17. Mar 0 500 1000 1500
    For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Sensors, EISSN 1424-8220,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'MARAS: Mutual Authentication and Role-Based Authorization Scheme for Lightweight
    Internet of Things Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Affia A.a.O.
  - Finch H.
  - Jung W.
  - Samori I.A.
  - Potter L.
  - Palmer X.L.
  citation_count: '4'
  description: The concept of the Internet of Things (IoT) spans decades, and the
    same can be said for its inclusion in healthcare. The IoT is an attractive target
    in medicine; it offers considerable potential in expanding care. However, the
    application of the IoT in healthcare is fraught with an array of challenges, and
    also, through it, numerous vulnerabilities that translate to wider attack surfaces
    and deeper degrees of damage possible to both consumers and their confidence within
    health systems, as a result of patient-specific data being available to access.
    Further, when IoT health devices (IoTHDs) are developed, a diverse range of attacks
    are possible. To understand the risks in this new landscape, it is important to
    understand the architecture of IoTHDs, operations, and the social dynamics that
    may govern their interactions. This paper aims to document and create a map regarding
    IoTHDs, lay the groundwork for better understanding security risks in emerging
    IoTHD modalities through a multi-layer approach, and suggest means for improved
    governance and interaction. We also discuss technological innovations expected
    to set the stage for novel exploits leading into the middle and latter parts of
    the 21st century.
  doi: 10.3390/iot4020009
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: IoT All Article Types Advanced   Journals
    IoT Volume 4 Issue 2 10.3390/iot4020009 Submit to this Journal Review for this
    Journal Propose a Special Issue Article Menu Academic Editor Amiya Nayak Subscribe
    SciFeed Recommended Articles Related Info Link More by Authors Links Article Views
    5476 Citations 4 Table of Contents Abstract Introduction IoT Healthcare Components
    Security Risks in IoT Health Devices Practical Examples Inspired by Real-World
    Concerns The Future of IoTHD Security Concluding Remarks Author Contributions
    Funding Data Availability Statement Conflicts of Interest References Altmetric
    share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessReview IoT Health Devices: Exploring Security Risks in the Connected Landscape
    by Abasi-amefon Obot Affia 1,*, Hilary Finch 2,3,*, Woosub Jung 4, Issah Abubakari
    Samori 5, Lucas Potter 6 and Xavier-Lewis Palmer 3,6 1 Institute of Computer Science,
    University of Tartu, 51005 Tartu, Estonia 2 School of Cybersecurity, Old Dominion
    University, Norfolk, VA 23529, USA 3 CYBER Solutions Academy, Franklin, VA 23851,
    USA 4 LENS Laboratory, Department of Computer Science, William & Mary, Williamsburg,
    VA 23185, USA 5 MinoHealth AI Labs, Accra 00233, Ghana 6 School of Engineering
    and Technology, Biomedical Engineering Institute, Old Dominion University, Norfolk,
    VA 23529, USA * Authors to whom correspondence should be addressed. IoT 2023,
    4(2), 150-182; https://doi.org/10.3390/iot4020009 Submission received: 26 February
    2023 / Revised: 21 April 2023 / Accepted: 24 April 2023 / Published: 25 May 2023
    Download keyboard_arrow_down     Browse Figure Versions Notes Abstract The concept
    of the Internet of Things (IoT) spans decades, and the same can be said for its
    inclusion in healthcare. The IoT is an attractive target in medicine; it offers
    considerable potential in expanding care. However, the application of the IoT
    in healthcare is fraught with an array of challenges, and also, through it, numerous
    vulnerabilities that translate to wider attack surfaces and deeper degrees of
    damage possible to both consumers and their confidence within health systems,
    as a result of patient-specific data being available to access. Further, when
    IoT health devices (IoTHDs) are developed, a diverse range of attacks are possible.
    To understand the risks in this new landscape, it is important to understand the
    architecture of IoTHDs, operations, and the social dynamics that may govern their
    interactions. This paper aims to document and create a map regarding IoTHDs, lay
    the groundwork for better understanding security risks in emerging IoTHD modalities
    through a multi-layer approach, and suggest means for improved governance and
    interaction. We also discuss technological innovations expected to set the stage
    for novel exploits leading into the middle and latter parts of the 21st century.
    Keywords: biocybersecurity; cyberbiosecurity; healthcare; IoT; security risk management
    1. Introduction The Internet of Things (IoT) has been steadily rolled out to numerous
    devices worldwide since the mid–late 2000s, starting largely with benign consumer
    items and increasingly into more sensitive areas, including healthcare, transportation,
    and more sensitive services [1]. With the inclusion of the IoT into healthcare,
    significant gains were realized in that patients experienced ease in reporting
    their health status [2,3]. In some cases, those confined gained autonomy [2,3].
    This applies to institutions adopting the IoT, gradual, sparing legislation adopted
    in the past 20 years to fast-track and improve the digitalization and reporting
    of medical information. It has not been just healthcare facilities that have boomed
    with IoT adoption. Modern labs, warehouses, schools, transport equipment, and
    agricultural plots use IoT devices in the 21st century [4], and these remain critical
    in consideration of healthcare impacts as their inputs and interactions impact
    operations. However, consumers and institutions alike have raised significant
    concerns about the continued digitalization of healthcare. The issues causing
    these concerns have occurred, from simple oversights in design to complex implementations
    of IoT health devices (IoTHDs). These have been accompanied by the discovery of
    numerous security vulnerabilities and high volumes of attacks that have been carried
    out [5,6,7,8,9,10,11,12,13,14]. Vulnerabilities in IoTHD design and implementation
    pose immediate data-based threats. These threats include mass data leaks, improper
    forwarding of data, and sometimes even indirectly disrupting the operation of
    other connected devices through a lack of communication or coordination [15,16,17].
    We found vulnerabilities in production-scale and patched devices that have stored
    data in unencrypted, non-proprietary, and easy-to-access formats. However, it
    is worth noting that proprietary formats can frustrate open-source efforts and
    are usually financially motivated but more secure. Alternatively, some vulnerabilities
    leak access to other connected devices, which is problematic for any roll-out
    [17]. Relating to attacks, an increasing amount of health and manufacturing infrastructure
    has been open [17,18] and subject to attacks, such as Advanced Persistent Threats
    (APTs), ransomware, trojans, worms, and loggers [19]. These persistent problems
    within the IoTHD supply chain and health chain of actions pose numerous threats
    to patient health, caregiver service, and national security. Strielkina et al.
    [15] noted the significant problems networked devices posed, including random
    failures, privacy compromise, and deliberate operations disruptions. This paper
    examines the architecture components of IoTHD systems dissected in terms of devices,
    connected software technologies, the backbone infrastructure, and the individuals
    involved—IoTHD stakeholders. The discussion of the devices targets medical imaging,
    medical sensors (used to derive data from being taken advantage of and facilitate
    processes in modern healthcare), external and implanted devices, and virtual home
    assistants. The software discussion is split between legacy systems and AI-based
    software technologies that enable functions within these IoTHDs. The infrastructure
    discussion covers the communication and application backbone relevant to achieving
    medical services. Lastly, using IoTHDs requires a discussion of the relevant people
    and communities. These refer to nation-state actors, healthcare facility personnel,
    and independent and unorthodox communities. With knowledge of the landscape, we
    explore the vulnerabilities in healthcare infrastructure as a subset of the international
    bioeconomy through the lens of IoTHDs. We discuss the components of IoTHDs, vulnerabilities
    and threats leading to security risks, and control suggestions to address the
    security risks in IoTHDs. We propose and apply a multi-layer approach to IoTHD
    security risk management as a beneficial method to facilitate end-to-end security
    in IoTHDs. Lastly, we discuss the purpose of modern and emerging IoTHDs. Understanding
    this allows for an enhanced understanding of emerging and future vulnerabilities
    and threats, i.e., theoretical threat classification due to emerging IoTHD issues
    (in terms of novel attack/defense topologies, emerging social dynamics around
    devices, neuro-link adjacent devices, brain–computer interfaces, and wearable
    and minimally invasive device vulnerabilities) and practical examples with a case
    report in the literature. Following this, we discuss future IoTHD controls/countermeasures
    considerations in terms of device and culture design, practices and training,
    and innovations to introduce as relating to 4th industrial revolution (4IR) technologies
    (relating to AI, blockchain, and others that assist toward automation), applications
    of state defense in the vein of defend forward, and business opportunities that
    can be capitalized upon by enterprising minds. Overall, this condensed survey
    and exploration paper will be a valuable tool for anyone concerned with the security
    of IoTHDs and their potential impact on healthcare and other sectors. We believe
    that our paper can contribute to navigating the complexities and potential risks
    of IoTHDs and those that emerge from them. 2. IoT Healthcare Components IoTHDs
    are gaining popularity in healthcare. Some are legacy devices that do not immediately
    have IoTHD features that can be retrofitted, but many are newly manufactured devices
    that automatically have IoT functionality that can be embedded. Covering important
    common assets they produce in processing patient phenomena is also important.
    According to the literature, over half of the IoTHDs have critical security vulnerabilities
    [20,21]. Before enumerating the vulnerabilities of these devices and the future
    directions of IoTHDs, we define the different types of IoTHDs that we focus on
    in this paper. 2.1. IoT System High-Level Architecture In the literature, the
    extent of the reference architecture used for IoT systems in healthcare examines
    layered models. The architecture of the IoT in healthcare essentially consists
    of three (3) basic layers consisting of the perception, network, and application
    layers [22,23]. Fundamentally, medical information is collected from networked
    medical devices and wearable or implanted sensors and is transmitted through communication
    infrastructures to relevant end-users through software applications for monitoring
    and taking appropriate action. We summarize the high-level architecture of IoT
    components in healthcare. This is visualized in Figure 1. Figure 1. IoT architecture
    layers and their components, adapted from [24]. 2.1.1. Perception Layer This layer
    comprises devices with sensing capabilities where medical devices and wearable
    and implanted sensors are used to obtain real-time patient or end-user medical
    information to facilitate diagnosis and high-quality medical treatments. Such
    devices include Radio Frequency Identification (RFID) tags, infrared sensors,
    imaging equipment, GPS, other medical sensors, and smart device sensors [22,25].
    These devices allow for comprehensive perception through object identification,
    image recognition, location recognition, and actuation and can convert this information
    to digital signals for transmission [25]. We discuss more regarding perception-layer
    devices in Section 2.2. 2.1.2. Network Layer The network layer constitutes wired
    and wireless networks, which connect perception devices, application-layer devices,
    and other network devices to transmit medical information collected at the perception
    layer to the application layer. Communication between things can occur using short-range
    communication technologies, such as RFID (Radio Frequency Identification) and
    NFC (Near-Field Communication), and medium-range communication technologies, such
    as Bluetooth, Zigbee, WiFi, and the global system for mobile (GSM) communications
    [22]. However, high-frequency fourth-generation (4G) and fifth-generation (5G)
    cellular networks are becoming more readily available and providing a reliable
    connection for up to thousands of devices at the same time [25]. 2.1.3. Application
    Layer The application layer interprets and applies data generated at the perception
    layer and transmitted through the network layer. The layer is also responsible
    for providing usability to the end-user, delivering application-specific computing
    services, and data storage. The end-users could be a doctor monitoring their patient’s
    data in real time on a hospital computer, a specialist monitoring their patient’s
    record on a smart device, and a family member of the patient or even the patient
    themselves monitoring vital signs on their smart device. We discuss more regarding
    relevant end-users in Section 2.4. Most promising IoT medical applications are
    facilitated using artificial intelligence (AI) for image analysis in radiology,
    pathology, and dermatology, electronic medical records (EMRs) text recognition
    with natural language processing, and drug activity design, as well as illness
    trajectories, medical outcomes and interventions, and re-admissions predictions
    [26]. Data storage and manipulation are critical aspects of IoT healthcare applications.
    Cloud infrastructures support data-intensive electronic medical records (EMRs),
    patient portals, medical IoT smartphone applications, and big data analytics driving
    decision support systems and therapeutic strategies [27]. 2.2. IoT Healthcare
    Devices Our analysis focuses on IoTHDs, ranging from networked medical devices
    to wirelessly reprogrammable implantable devices and software applications. In
    this paper, we refer to medical devices as any instrument, machine, implant, in
    vitro reagent, or related components intended for the diagnosis or in the cure,
    mitigation, treatment, or prevention of diseases [28]. We discuss examples of
    these IoTHDs and their application to healthcare. 2.2.1. Medical Imaging Medical
    images are becoming even more important due to the advancements in telemedicine.
    Magnetic Resonance Imaging (MRI) and CT (Computed Tomography) are volumetric medical
    imaging methods commonly used for medical diagnosis. X-rays are a more elementary
    mode of medical imagery. Because these images contain important information about
    one’s health concerns, they are usually considered key components that the healthcare
    sector needs to protect in the field of cyberbiosecurity [29,30,31]. One of the
    many forms of medical images is Digital Imaging and Communications in Medicine
    (DICOM). DICOM is a standard for storing and transmitting medical images, which
    gives the biomedical details of the organ that is being examined [32]. DICOM and
    PACS (picture archiving and communication systems) are well-known for medical
    imaging transmission and storage protocols [33]. Typically, CT and MRI images
    can be acquired in the DICOM format and stored in PACS servers where the PACS
    clients, such as doctors and medical staff, can access the stored files through
    the DICOM protocol. However, these medical imaging systems have been exposed to
    malicious attacks because of the lack of critical network security [34,35]. For
    example, DICOM provides encryption options but has also been exposed to malicious
    attacks [36]. Although Generative Adversarial Networks (GANs) are mostly used
    in image fabrication, they can also be used in sensing data. Some studies have
    already shown the feasibility of using GANs in ubiquitous sensing data other than
    images. For example, Erol et al. [37] utilized GANs to generate realistic radar
    data for human activity recognition [37]. While these are not relevant for medical
    procedures, they can be when adapted to specific surgical or other medical techniques
    that are machine guided. For example, deep learning was utilized to attempt noise
    reduction in ultrasound images [38]. This demonstrates the potential for adversaries
    to build means that mimic medical devices’ behavior in time. Beyond the radar
    data, inertial measurement unit (IMU) sensing data or biometric data can always
    be replayed using GANs [39]. In addition, other forms of imaging include smart
    cameras to assist healthcare delivery, including wound analysis in patients with
    diabetes [40], monitoring dermatitis and skin conditions [41] and heart rates,
    and monitoring tear film buildup in dry eye disease [42]. 2.2.2. Medical Sensors
    Besides medical imaging equipment, biometric medical sensors can directly retrieve
    digital output readings from human beings [43]. Medical images are predominantly
    created at a specialized medical facility, but medical sensing data can be collected
    at a hospital or in daily life [44,45]. This is made possible because IoT technologies
    have grown rapidly, and thus ubiquitous sensing is available by wearable devices
    worn by the user that interconnect wearable sensors through wireless connections
    [46,47]. For example, vital sign patches to wirelessly track and monitor heart
    rate, respiration rate, temperature, step count, sleep cycle, stress levels, and
    falls or incapacitation; wireless electrocardiogram monitors [48]; smartwatches
    and Fitbits (to track activity, heart rate, and sleep patterns); fall detectors,
    such as iFall (a wearable accelerometer that communicates with a smartphone and
    the cloud), to detect and respond to patient falls [49]; wearable blood pressure
    monitors [50]; neural sensors to read and understand neural brain signals and
    to infer the state of the brain [51]; and finger pulse oximeters to measure oxygen
    saturation levels in the blood [52]. With the criticality of these devices to
    patient diagnosis, injecting or removing sensing data can also cause a significant
    misdiagnosis. However, a lot of these devices have notably poor signal quality
    already. For instance, wrist-mounted pulse oximeter devices are regularly off
    by a large margin when addressing patients with darker skin tones [52]. Devices
    like these require additional reevaluation on top of their potential to leak data.
    This presents a possible compound disruption to the quality of care in analogously
    deficient devices. As a result, disruptions can further impede the reliability
    of healthcare operations. Thus, future healthcare sectors must ensure that medical
    sensing data are secure. 2.2.3. Implanted Medical Devices As micro-electromechanical
    systems (MEMS) have grown significantly, researchers have made inroads to propose
    medical devices that can be implanted into human bodies—yet popular acceptance
    of these devices may be many years away. This is to say nothing of the current
    reliability of these devices, which may be low. Numerous brain–machine interfaces
    aim to communicate with neural signals of human brains to treat disease conditions
    that are currently difficult to treat reliably [53,54,55,56]. Likewise, implanted
    medical devices not only stay in human bodies but will eventually be parts of
    live devices that can transmit data outside the body [57]. For example, for digital
    (smart) medications, an ingestible sensor (a microfabricated sensor made from
    copper, magnesium, and silicon, in minute quantities) can communicate with an
    external body sensor, such as a wearable sensor patch [23]. In this regard, there
    are multiple vulnerabilities in using such implanted medical devices [58]. For
    example, authentication methods on implanted medical devices are an especially
    pertinent topic [59]. It is also important to consume battery power more efficiently
    [58]. Implanted devices can be hacked to consume inefficiently and reduce user
    life quality. In addition, data availability, integrity, and confidentiality should
    always be available to the users [60]. By doing this, healthcare professionals
    can better manage the implanted devices. 2.2.4. Virtual Medical Home Assistants
    As discussed earlier, advanced IoT technologies can enable patients to be treated
    at home. Virtual medical home assistants could be part of healthcare [16,61,62,63].
    For example, continuous glucose monitors and smart insulin pens (which track dose
    and time and recommend the correct type of insulin to use) [64]; sleep trackers;
    home security cameras; and voice assistants can also be part of healthcare components
    because they generate medical information, e.g., fall events, and transmit them
    to off-site data storage facilities [65,66]. These devices can be used at home
    for remotely monitoring patients’ biomedical status remotely [16]. Specifically,
    smart voice assistants (also known as conversation agents) installed in the home
    setting can support users through conversations, answer specific health-related
    questions without human contact, and collect data for screening and remote patient
    monitoring [67]. Product designers, security experts, human factors engineers,
    and regulators might benefit from considering how the lexicon might affect voice
    assistants. For example, they might want to consider how people of different backgrounds/incomes
    would talk to a doctor and (presumably) a voice assistant differently. Considerations
    within this space might help expose additional vulnerabilities in device operation.
    Additionally, health robots can be applied to support the detection of unhealthy
    behaviors, manage medication use, and assist in rehabilitation therapies [68].
    Overall, the definition of healthcare input data has expanded substantially. Accordingly,
    healthcare should protect these wide scopes of input data from malicious adversaries
    [14,69,70,71,72]. As healthcare organizations become more distributed in treating
    and observing patients, they represent wider attack surfaces. 2.3. IoT Healthcare
    Supporting Technologies Various software components and infrastructure technologies
    support IoTHDs to function effectively. 2.3.1. IoTHD Software Components Software
    components are crucial in enabling various functionalities and facilitating communication
    among different devices and systems, and they need to be designed, developed,
    and tested with security in mind. Healthcare facilities can choose from a wide
    variety of healthcare software programs. Each choice requires high-quality security
    implementations to secure patient data and medical facilities. IT solutions in
    healthcare support medical professionals by automating manual workflow or supporting
    medical workers wherever they work. Most software gathers patient information
    to coordinate the best care among qualified healthcare providers. The Electronic
    Health Record Software (EHR) and Electronic Medical Record Software (EMR) are
    the most used healthcare software. These are the gateways for both patients and
    providers. Other medical software currently available includes Medical Diagnosis
    Software, which enables the real-time transmission of information between providers,
    medical databases, visualization and imaging, medical research, tele-health and
    telemedicine, and patient engagement software [73]. Software for the healthcare
    industry is not currently standardized. Even at its best, some of the current
    healthcare software is cumbersome. The user experience was not prioritized in
    the design of the system interface. Although EHR is intended to simplify the process,
    it can be compromised. As a result, hackers are free to take patient data and
    hold it hostage while exploiting it to make money. Some hospitals still use paper
    medical records because they have not fully migrated to EHR. Teaching hospital
    employees the best ways to secure patient data throughout these changes is crucial.
    As secure as any software is, medical professionals will continue making human
    errors in healthcare. The medical software should be a backup to the provider
    to provide the best possible care. Healthcare systems have also used outdated
    legacy software that is still in use due to its critical functionality but is
    often no longer supported by the manufacturers, making them vulnerable to security
    risks and compatibility issues. One major challenge with legacy software in IoT
    healthcare device systems is the potential for security vulnerabilities. These
    software components no longer receive updates and patches, making them susceptible
    to cyberattacks that exploit known vulnerabilities. This could result in compromised
    sensitive patient data or the device, potentially harming patients [34,74,75].
    Another issue with legacy software is compatibility. As new technologies and systems
    are developed, legacy software may no longer be compatible with newer hardware
    or software. This can create issues when integrating older devices into new systems
    or upgrading existing ones. It is also important to note that in some cases, healthcare
    organizations may be required to continue using legacy software due to regulatory
    or compliance requirements. AI-based software also benefits IoTHDs. AI can read
    available EMR data, including medical history, physicals, laboratory reports,
    imaging, and medications, and contextualize these data to generate treatment and/or
    diagnosis decisions and/or possibilities. Further, it can interpret data from
    various sources. For example, IBM Watson uses AI to read both structured and unstructured
    text in EMR, to read images to highlight primary and incidental findings, and
    to compile relevant medical literature in response to clinical queries [39]. IoT-based
    healthcare and deep machine learning can assist health professionals in seeing
    the unseeable and providing new and enhanced diagnostic capabilities. Although
    diagnostic confidence may never reach 100%, combining machines and clinician expertise
    reliably enhances system performance. For example, compared with the diagnostic
    evaluation by 54 ophthalmologists and senior residents, applying AI to retinal
    images improved the detection and grading of diabetic retinopathy and macular
    edema, achieving high specificity (98%) and sensitivity (90%) [76]. AI and deep
    learning can also optimize disease management, provide big data and analysis generated
    from mHealth apps and IoT devices, and are seeing adoption in healthcare [77].
    Some examples of this include predicting risk, future medical outcomes, and care
    decisions in diabetes and mental health [78] and predicting the progression of
    congestive heart failure [79,80], bone disease [81], Alzheimer disease [82], and
    benign and malignant tumor classification [83]. However, AI-based threats are
    new and emerging. These threats used machine learning techniques to rapidly and
    comprehensively learn new vulnerabilities and attack routes. A recent survey [84]
    listed actual and possible frameworks that can attack devices, software, and other
    assets in health security. 2.3.2. IoTHD Supporting Infrastructure Backbone infrastructures
    are critical in ensuring IoTHDs function effectively, securely, and reliably.
    IoTHDs generate massive amounts of data that need to be processed and analyzed
    in real time, where cloud computing infrastructure provides the necessary processing
    power and storage capacity to handle this data. However, with more cloud apps
    entering the health market, it is just as important that an evidence base supports
    its effectiveness and safety and can deal with the security of health data and
    the reliability and transparency of that data by third parties. Furthermore, it
    has been suggested that centralized cloud storage will present issues in the future
    to users, such as excessive data accumulation and latency, because of the distance
    between IoT devices and data centers. IoTHDs require a reliable and secure communication
    infrastructure to transmit data between devices, servers, and other systems. This
    infrastructure includes wired and wireless networks, protocols, and communication
    standards. Communicated healthcare data are often stored on a local machine (often
    decentralized) or turned over to a central hospital repository. Cloud-based computing
    to support the delivery of health services has many benefits, as it is ubiquitous,
    flexible, and scalable in terms of data acquisition, storage, and transmission
    between devices connected to the cloud [66]. The use of the cloud can be foreseen
    to support data-intensive electronic medical records (EMRs), patient portals,
    medical IoT devices (which can include smartphone apps), and the big data analytics
    driving decision support systems and therapeutic strategies [85]. Decentralized
    data processing and networking approaches may improve the scalability of the IoT
    in healthcare. Edge cloud is a newer cloud computing concept that allows IoT sensors
    and network gateways to process and analyze data themselves (i.e., at the edge)
    in a decentralized fashion, reducing the amount of data required to be communicated
    and managed at a centralized location [31,86]. Similarly, blockchain storage uses
    a decentralized approach to data storage, creating independent blocks containing
    individual sets of information, forming a dependent link in a collective block,
    and creating a network regulated by patients rather than a third party [87]. However,
    the usage of blockchain is minimal for now. There are examples of platforms engineering
    blockchain for medical practice already [20,87]; however, research on edge clouds
    and blockchains in healthcare is still limited and is an important area for future
    research. 2.4. IoT Healthcare Stakeholders Individuals must interface with IoTHDs
    on the front end (usually the Graphical User Interface (GUI)) and back end (usually
    through medical infrastructure). We focus on patients and patient family members,
    healthcare personnel, and IoTHD developers as they have security impacts on IoTHDs
    and their related assets. 2.4.1. Patients and Related Family Members Patients
    and their related family members have a tremendous role in accessing and advocating
    for quality care. It is important to consider the modes of care and the communication
    platforms (smartphone vs. hospital-owned medical device(s)). Healthcare security
    professionals should consider wide scenarios at play with the transmission of
    hospital information. For example, upon obtaining acceptance from the patient,
    or even the patient themself on their smartphone, family members will communicate
    healthcare details differently. 2.4.2. Healthcare Personnel We discuss healthcare
    personnel in degrees of contact with patients. First-degree personnel commonly
    include physicians, nurses, students, receptionists, phlebotomists, technicians,
    surgeons, scribes, emergency response doctors, janitors, security workers, and
    administrators. Contract workers who may be involved with security, the transportation
    of materials, information technology staff, and guest scientists or collaborators
    make up second-degree personnel. Third-degree personnel can work with or associate
    with second-degree personnel or are unpaid, such as students, volunteers, patient
    visitors, and police officers, in limited cases of needed operation, participation,
    and agency. 2.4.3. IoTHD Manufacturers IoTHD manufacturers cover all those in
    charge of building, configuring, and maintaining IoTHDs. IoTHD manufacturers can
    introduce security issues during device manufacturing cycles and should similarly
    sharpen the protection of their most critical manufactured assets. These include
    tighter protocols, vetting, and minimization of interactions with core IP assets,
    offline backups, networking segmentation, web filtering, etc. [88]. Additionally,
    IoTHD manufacturers should assume they are already targets and be aware of phishing
    attacks [88]. 2.5. Security Risk Management To study the security aspects and
    possible risks with IoTHDs, we apply information systems security risk management
    (ISSRM) concepts, defined by Dubois et al. [89], that define the asset, risk,
    and risk treatment-related concepts to guide security risk management. We selected
    the ISSRM method because it supported systematic asset identification and functional
    decomposition of the system [90,91] when compared to other risk management methods
    used for IoT systems, such as NIST (National Institute of Standards and Technology)
    [92], OCTAVE (Operationally Critical Threat, Asset, and Vulnerability Evaluation
    Method) [93], and TARA (Threat Assessment and Remediation Analysis) [94]. Affia
    et al. [95] provides a more detailed comparison of these methods. We also follow
    a threat-driven approach to security risk management [96], developed in line with
    the ISSRM method, to provide security threat analysis support benefits, including
    threat and risk treatment coverage, by leveraging the STRIDE method. We explore
    major concepts of the ISSRM method below: Asset-related concepts—identify relevant
    assets for security risk analysis. It describes the business assets—that represent
    information, data, and processes that bring value to an organization—and system
    assets—that support business assets to protect. Asset-related concepts also describe
    the security criteria (in terms of confidentiality, integrity, and availability)
    that define the security needs of the assets [89]. Risk-related concepts—illustrate
    the vulnerability, threat agent, threats, and risk impact analysis of the assets
    in scope. A security risk is a combination of a security event and its impact
    (negation of the security criterion), harming business and system assets. A vulnerability
    is a characteristic of system assets, constituting its flaws—an implementation
    defect that can lead to a vulnerability [89]. A threat agent refers to an entity
    that has the potential to cause damage to information system assets, thereby initiating
    a threat and becoming the origin of a risk. Typically, a threat agent is identified
    by their motivation, skills, capability, knowledge, available resources, and opportunity
    to carry out an attack [89,97]. A threat event is a component of security risk
    that occurs when a threat targets system assets and exploits their vulnerability.
    The STRIDE method [98] can then be used for security threat analysis [96]. The
    abbreviation STRIDE stands for spoofing (S)—pretending to be someone else to gain
    access to sensitive data or resources, tampering (T)—altering data or code to
    manipulate the application’s behavior or cause it to malfunction, repudiation
    (R)—denying ones actions or the actions of others and making it difficult to track
    down the source of an action, information disclosure (I)—exposing or gaining access
    to information one should not be able to access, denial of service (D)—preventing
    a system from providing its intended service by crashing it, slowing it down,
    or filling its storage, and elevation of privilege (E)—gaining access to functionality
    without authorization [98]. Further in this study, we use STRIDE to guide a security
    threat analysis due to its industrial usage, maturity, high research concentration
    within the security community, and applicability for guiding risk treatment. Risk
    treatment-related concepts—tackle mitigating the identified security risks, guiding
    risk mitigation decisions, security requirements, and controls to treat the risks.
    Security requirements aim to define conditions to be reached by mitigating identified
    security risks and are prerequisites to controls that implement the specified
    security requirements [89]. The STRIDE security requirements can thus guide requirements
    elicitation for risk treatment [96]. In this study, we apply these security risk
    management concepts in a multi-layer approach to understand the security risks
    within the IoTHD ecosystem. 3. Security Risks in IoT Health Devices The examination
    of security risk management in IoT layers through the related work [24] has brought
    to light certain issues that may not have been discovered if the IoT system’s
    architecture was not considered. These issues include research gaps arising from
    an unequal focus on security research on some IoT architecture layers to the detriment
    of others, the effect of risk on one layer cascading to other layers, and the
    necessity of implementing multi-layer risk analysis and defence strategies. Thus,
    we seek to apply a multi-layer approach to IoTHD security management as a beneficial
    method to facilitate end-to-end security in IoTHDs. In this section, we summarize
    our multi-layer IoTHD asset findings in Table 1, discuss the vulnerabilities of
    these IoTHD system assets, highlight relevant threat agents with the motivation
    and expertise to attack IoTHDs, and then formalize threats to IoTHDs in Table
    2. We also provide a multi-layer risk analysis based on real-world scenarios to
    instantiate our approach. 3.1. IoTHD Assets Table 1 summarizes the IoTHD assets
    (system and business assets) based on the discussed IoTHDs and classifies these
    assets into functional areas of each layer. Table 1. IoTHD Architecture-layer
    assets. 3.2. IoTHD Vulnerabilities A vulnerability is a weakness in a system asset,
    group of system assets, or security control that a threat agent could exploit
    to cause harm to the system. As such, medical devices, specifically when they
    are connected to networks, are just as vulnerable as any other networked security
    systems and are subject to security breaches because they are all interconnected
    [100]. As the medical world expands in networking and information technology,
    there are increased opportunities for threat incidents initiated by malicious
    agents that target IoTHD system assets by exploiting their vulnerabilities. IoTHDs
    have become more vulnerable to cybersecurity vulnerabilities due to the rapid
    growth, prioritized role in aiding healthcare diagnosis, and greater connectivity
    between the devices, leading to high-impact clinical treatment and patient safety
    [100]. This section discusses the vulnerabilities of IoTHD system assets within
    their respective IoT layers. 3.2.1. Perception-Layer Vulnerabilities IoTHDs, including
    legacy devices, are vulnerable to physical attacks that render devices unusable.
    Those medical devices are usually expensive and mostly managed by RFID in hospitals
    [101]. Despite the efforts of the protocol-level approaches, medical devices are
    often targeted by physical thefts, which is harder to protect through software
    solutions. Additionally, the potential for smart pills to be a target of theft
    exists as well [102], alongside medical identity theft by stealing fobs, cards,
    and other physical means of accessing healthcare assets. According to Mancini
    et al. [103], medical identity is used to access certain medical benefits by adversaries.
    IoT health devices are also limited in the power and resources they possess [100].
    Thus, encrypting data transmitted by these devices, for instance, can significantly
    slow down their operation, reducing their usable battery life. This is a critical
    issue as some medical devices rely on prolonged battery life, and any reduction
    in it could affect their effectiveness and even pose risks to patients. Data authentication
    is crucial to medical device security because these factors are related to one’s
    medical history and data privacy. IoTHDs may suffer from an elevation of privilege
    attacks (EoP) when device authentication is missing [104]. Implanted devices that
    enable communication between brains, brain-stems, and other parts of the central
    nervous system are vulnerable to unethical access to consumer/patient neural information.
    Although these devices are designed to help mitigate patients’ diseases, adversaries
    can potentially exploit the IoTHDs to extract information from our brains. Several
    researchers have pointed out that this could be a new ethical threat to humans
    in the coming decades [105,106]. 3.2.2. Network-Layer Vulnerabilities Data integrity
    is a key security criterion for securing data generated and transmitted by IoTHDs.
    However, the data integrity of the remotely collected data in communication is
    not always easy. Vulnerabilities in communication are likely to persist. For accessibility,
    any data generated by IoTHDs are usually always available. While adversaries may
    block transmission channels by using jamming or flooding attacks, medical devices
    should be able to provide ceaseless data monitoring [107,108]. The lack of accessibility
    may also cause data integrity, which can be used for altering data stored on IoTHDs
    [78,106]. Automation has boosted medical device manufacturing, providing many
    advantages in improving productivity while reducing unnecessary costs [109,110].
    However, in medical device manufacturing, every component created with network
    capability or means of amplifying, dampening, or re-routing network communications
    creates new avenues of attacks [111]. For example, ransomware can cause massive
    supply-chain disruptions [111]. 3.2.3. Application-Layer Vulnerabilities Many
    computer vision technologies have been proposed to alter images [1,112]. Thus,
    it threatens healthcare sectors that adversaries could apply techniques such as
    modification, swapping, and obscuring toward vulnerable medical images [113,114].
    For example, injecting or removing medical evidence to and from those medical
    images can cause a major misdiagnosis [115,116]. Medical images with insufficient
    security guidelines updates can also often suffer from various malicious manipulation
    attacks [33]. Additionally, adversaries and researchers have proposed more complicated
    attacking models and defense requirements as deep learning techniques evolve.
    For example, CT-GANs (Computed Tomography—Generative Adversarial Networks) [117]
    train GANs to generate fake CT images by having AI learn real medical images [117].
    At the application layer, web services have become a popular means of interfacing
    with existing (and somewhat legacy) systems. However, when it comes to ensuring
    greater interoperability, some implementations can be insecure due to weak authentication
    and the absence of encryption. As a result, there is a risk of information being
    tampered with during transmission. Given the growing importance of IoTHDs, preserving
    data integrity is of utmost importance [100]. The human factor is also a component
    of the application layer. A lack of awareness of cybersecurity issues, poor security
    practices, and the consistent education and training of healthcare personnel,
    patients, and end-users of IoTHDs on cybersecurity risks and their impact contributes
    to the persistent cybersecurity vulnerabilities [100]. Some examples of these
    insecure practices include the insecure disposal of devices containing sensitive
    information or data, sharing passwords, and distributing passwords for device
    access, especially in cases where password protection is required [100]. 3.3.
    Relevant Threat Agents A threat agent can be a person, group, or organization
    that intends to exploit a vulnerability to cause harm to a system intentionally.
    A threat agent is characterized by motivation, available resources, and expertise
    to use an attack method sufficient to trigger a threat. The threat agent is, thus,
    the source of risk. This section highlights relevant threat agents with the motivation
    and expertise to attack IoTHDs. 3.3.1. Nation and State Actors Nation and state
    actors are parties that operate on behalf of governments—with or without that
    government’s public support. These tend to be well-funded entities collaborating
    with other allied countries and often work with “private enterprise” or criminal
    associations [118,119,120]. However, governments can fund operations that are
    often seen as independent. They have been known to be the main parties perpetrating
    cyber warfare largely through APTs contributing sustained operations [13,121].
    For example, various APTs have been noted for interfering in politics, assisting
    in IP theft, participating in extortion attempts, or shoring up military imbalances
    in capacity between nations. A yet unknown source has been behind the “Tardigrade”
    APT targeting biomanufacturing facilities [122]. So far, Tardigrade has been suspected
    of gathering intelligence on vaccine production data [88] to disrupt it. Even
    more unusual is the metamorphic ability of Tardigrade to learn the systems it
    is in, change its signatures when detected, and then act anew. Thus, meaningful
    concerns can be had about new Tardigrade-like and Tardigrade derivatives in development
    or deployed elsewhere, perhaps even other industries. Limited actions can be performed
    while Tardigrade is under examination, but key insights can be gleaned: State
    actors continue to have the means to produce sophisticated works. APTs produced
    are likely to prioritize and maintain autonomy, allowing damages delivered to
    be sustained. Interference can be run through these to disrupt the operations
    of critical healthcare [122]. If APTs can securely deliver hostile software into
    organizations with enough IoTHDs, and those devices are distributed widely enough
    and sufficiently evade patching, they can be a significant means of surveillance.
    The most relevant APTs toward IoTHDs appear to be those that would target both
    IP and operations of such IP. Such could deliver strategic technological gains
    to nation-states while offering positioning to control companies of rival nation-states
    and or their alliances. IoTHD developers should assume they are already targets
    and sharpen the protection of their most critical assets, including tighter protocols,
    vetting, and minimization of interactions with core IP assets. Further, as per
    BIO-ISAC’s reported recommendation for bio manufacturers, all IoTHD developers
    should similarly consider reviewing the degree of backups, networking segmentation,
    and product lead times [88]. Owing to automation in APTs and other means of automated
    attacks, we may see increased automation in defense. 3.3.2. Healthcare Facilities
    and Related Personnel Conversations about healthcare facilities and personnel
    commonly include physicians, nurses, students, receptionists, phlebotomists, technicians,
    surgeons, scribes, emergency response doctors, janitors, security workers, and
    administrators. These are first-degree personnel. The many contract workers who
    may be involved with security, the transportation of materials, information technology
    staff, and guest scientists or collaborators are important to include, which can
    make up the second degree. One more degree can be removed for those who work with
    or associate with workers at the second degree or are unpaid, such as students,
    volunteers, patient visitors, and police officers, in limited cases of needed
    operation, participation, and agency. From the first to the third degree, there
    is a gradient of access to IoTHDs, from higher to lower. Still, all must be considered
    to a degree depending on the tasks at hand and the value of the IoTHD assets,
    for they can all provide an input that can determine a valuable output. Each of
    these degrees of separation entails different trees of attacks on healthcare assets.
    Healthcare personnel need to consider how the IoT either shortens the degree of
    separation or removes barriers entirely. 3.3.3. Independent and Unorthodox Communities
    Unorthodox communities include many diverse actors of different funding groups
    and sizes. Independent actors can include from hobbyists and lone actors to organized
    groups either looking to exploit for intrigue, the repurposing of devices, or
    exploitation or harm. From the ethical hacker end of the spectrum, spaces such
    as those within Community Bio and Makerspaces and groups such as “I Am The Calvary”
    and the “Grinder [Implant] Community” would be those among whom IoHTDs may find
    beneficent uses. These individuals improve technology through identifying vulnerabilities
    and alerting manufacturers, addressing the vulnerabilities directly, positively
    advertising the proper use of the devices, or repurposing the devices within accepted
    frameworks. Toward the other end, lone exhibitors, criminals, and criminal groups
    can be expected to pose considerable, irregular threats to IoTHD users. 3.4. IoTHD
    Security Threats Medical devices, specifically when they are connected to networks,
    are just as vulnerable as any other networked security systems and are subject
    to security breaches because they are all interconnected. IoT devices have increasingly
    become prevalent in healthcare and have improved patient care, remote monitoring,
    and medical research. However, these devices pose security threats that malicious
    actors (see Section 3.3) can exploit. Security threats to IoT devices in healthcare
    can occur at different layers, including the perception, network, and application
    layers. We aggregate the results of the security threats to IoTHDs [123,124,125,126]
    following the STRIDE method [24,96] in Table 2. Table 2. IoTHD security threats
    [24,123,124,125,126]. 3.5. IoTHD Countermeasures As the medical world expands
    in networking and information technology, security threats in IoTHDs will continue
    to impact the future of clinical treatment and patient safety directly. Technical
    controls, governance, resilience measures, unified reporting, context expertise,
    regulation, and standards are general suggestions for the remediation of security
    risks due to IoTHD threats [100]. We discuss countermeasures to IoTHD security
    threats (see Section 3.4) at the perception, network, and application layers [124,126,127].
    3.5.1. Perception/Device-Level Controls In the era of Healthcare 4.0, all the
    sensing data from IoTHDs will be transmitted to remote servers and stored in cloud
    databases [128,129,130]. In addition, due to the nature of IoT devices, various
    sensing capabilities are used. Especially in implanted medical devices and sensors,
    if the data protocols or message formats vary, data protection against a wide
    range of malicious attacks can be more difficult [83]. Thus, more unified networks
    can be built with unified data encryption and transmission schemes to bring more
    protection capabilities against future adversaries [131]. Perception-layer components
    are prone to physical attacks, such as tampering or theft. Physical-layer security
    schemes [124,132] including RFID-based secure algorithms [101] have been suggested
    to protect against physical attacks (i.e., eavesdropping, sniffing, data breach,
    compromised node and device cloning attacks). Researchers have also proposed secure
    data management protocols for medical identity protection [133,134] against medical
    identity theft that allow for privileged attacks. Mashima et al. [135] pioneered
    to secure medical systems against physical theft [135] that creates a trusted
    domain and an online monitoring system. However, medical identity threats cannot
    only be resolved by engineering efforts but also require holistic efforts. Halstead
    et al. [136] emphasized the importance of educating healthcare workers to become
    aware of these physical threats [136]. Medical professionals are not trained to
    deal with security threats, so device manufacturers should provide some security
    on their devices, release patches, and ensure secure products. While medical staff
    have little to do with the security of their devices, the owner of the healthcare
    facility can maintain (buy) strong device security and hire capable cybersecurity
    teams [137]. IoTHD perception-layer components become a more beneficial target
    as they collect patient medical data and control the device. Data hygiene entails
    the removal or limited persistence of data created on or entered into the device
    to reduce the impact of device data breaches and limit how much sensitive data
    can be transmitted to other IoT layers. Developers must consider protocols that
    limit the data taken and the data deciphered to limit thefts, as the ability to
    decode human biosignatures improves [105]. Additionally, data authentication schemes
    (i.e., biometric-based, mutual authentication, etc.) are crucial to medical device
    security because these factors are related to the privacy of one’s medical history
    and data [124]. Such schemes can help remediate impersonation, password intrusion,
    reply, weak authentication, and side-channel attacks. 3.5.2. Network/Communication-Level
    Controls Vulnerabilities in IoTHD communication can be addressed through key management
    schemes (using symmetric or asymmetric approaches) to protect the information
    exchanges between IoTHD system components [124]. With key management, the messages
    to be transmitted are protected with a key, which allows the packets to be encrypted.
    However, with the traditional approaches, there is a possibility of high power
    consumption and complexity [138]. There is also a need to adapt to newer technologies
    such as 5G technology and the emergence of more complex smart applications [124].
    Proxy-based mechanisms can introduce additional security by adding an entity,
    layer, or process to secure the data generated in medical devices and transmitted
    between medical devices and the healthcare platform at the application layer.
    Wu et al. [139] created a proxy-based approach with ciphertext-policy attribute-based
    encryption (CP-ABE) to protect the communications and provide fine-grained access
    control in devices and WBANs. Similarly, Marwan et al. [140] proposed the CloudSec
    framework for data sharing and processing with two cryptosystems (AES and Paillier
    cryptosystems) for data encryption and key management. Secure routing mechanisms
    such as SDN technology [141] protect IoTHDs from attacks such as Wormhole, routing
    attacks, DoS, battery depletion, flooding, Grayhole, etc., that take advantage
    of the high power consumption or low processing capabilities of the transmission
    mechanisms. Thus, deploying secure gathering and routing strategies to incur the
    least communication overheads and transmission costs mitigate these attacks [141,142].
    Intrusion detection techniques are also beneficial for discovering attacks or
    malicious actions in the network or system [124]. Lastly, as with limiting the
    data collected through data hygiene methods, limiting the data transmitted from
    IoTHDs remains important. Despite implicit agreements upon the IoTHDs’ vulnerabilities
    in communication, several studies [143,144] have reviewed the literature on how
    to build reliable data communication protocols or systems. 3.5.3. Application-Level
    Controls Security at this layer is critical because it manages the exchange of
    sensitive data between the device and the user or external systems. Developers
    of IoT health applications should follow secure coding practices, such as input
    validation, output encoding, and data sanitization, to prevent common application-layer
    attacks, such as SQL injection and buffer overflows. While key management schemes
    protect data in transit between the IoT device and the user’s mobile device or
    external systems [100,124], sensitive data should be encrypted at rest in the
    user’s mobile device or external systems. Strong encryption algorithms such as
    AES symmetric key based-schemes and RSA should be used [124]. IoT health devices
    must also ensure data integrity of the data transmitted and received, as incorrect
    data can lead to life-threatening situations. Mechanisms such as check-sums, digital
    signatures, and hash functions can be used to ensure that data have not been tampered
    with. Access control mechanisms can also be implemented to limit authorized users’
    access to sensitive data and device functionality. Authentication mechanisms such
    as username/password, biometrics, or smart cards can be used to authenticate users.
    Secure data aggregation techniques protect the patient’s sensitive information
    aggregated from distributed medical devices (medical sensors) by applying an aggregation
    technique to secure and privatize the information. Tang et al. [145] applied different
    characteristics to implement secure data aggregation techniques, such as differential
    privacy preservation, obliviousness security, patient fair incentives, and data
    aggregation source identification. Chen et al. [146] proposed the federated learning
    paradigm using trained models to implement secure data aggregation. 4. Practical
    Examples Inspired by Real-World Concerns We have followed a high-level layered
    architecture perspective to IoT systems, allowing for a more in-depth asset-oriented
    security risk analysis of IoTHDs within their perception, network, and application
    layers. We applied a suitable security risk management method—the ISSRM method—and
    its domain model [89] to guide our analysis. Our analysis in Section 3 shows that
    a multi-layer security risk management analysis benefits securing IoT health devices.
    By identifying and mitigating potential risks at each layer, IoT health devices
    can be made more secure, protecting user privacy and safety. In this section,
    we summarize this analysis at each layer. 4.1. Risk 1: Medical Image Modification
    Medical imaging systems can comprise sensor equipment to collect CT and MRI images
    in various formats and store, transmit, or share them using the picture archiving
    and communication system (PACS). PACS is networked medical imaging technology
    that facilitates the storage, retrieval, and sharing of medical images. 4.1.1.
    Perception-Layer Risk Analysis In the case of medical imaging using PACS, the
    perception layer includes devices used to capture and configure the CT and MRI
    imagery, as well as the software used. These include the CT scanners, MRI, DR
    device, ultrasound to capture medical imagery, and the modality workstation configuring
    and sending all the imagery in the DICOM format to the PACS server [117]. Vulnerabilities
    in the perception layer may arise from inadequate security measures, such as weak
    passwords, unpatched software, or default settings that have not been changed,
    which can increase the risk of unauthorized access to these assets. The attacker
    with physical access to the perception-layer assets, i.e., the modality workstation,
    can plant the malware by accessing the unlocked workstation. To secure against
    this threat, anti-virus software can be used on modality workstations and should
    be kept up to date [117]. Additionally, digital signatures [147] and digital watermarking
    [148] with each scan and machine learning techniques [149] can be used to detect
    tampered images and, thus, prevent their use for medical diagnosis. 4.1.2. Network-Layer
    Risk Analysis The network layer in this scenario refers to the PACS network infrastructure
    used to transmit and store the medical images, typically in the DICOM format.
    The network layer comprises internal networks, WiFi access points connected to
    the internal network, and an internet connection. PACS which are not directly
    connected to the internet can be indirectly connected via the facility’s internal
    network [150] and are thus vulnerable to attacks. PACS servers exposed to the
    internet pose a high risk of security threats that could compromise the confidentiality,
    integrity, and availability of the medical images stored on the server. Threats
    in this layer could include social engineering attacks, physical access, network
    intrusions, denial-of-service attacks, and other types of attacks that target
    the network infrastructure [151]. The risk of these threats increases when the
    medical images are transmitted over unsecured networks or stored in an unencrypted
    form. For example, an attacker can access the internal network by hacking WiFi
    access points with critical vulnerabilities, such as “Krack” [152] and “BleedingBit”
    [153], where Bluetooth and WiFi electronics are integrated into a single chip.
    To address such threats, healthcare facilities should enable encryption between
    the hosts in their PACS network using proper SSL certificates [117] and remain
    up to date with patches to vulnerable network software. 4.1.3. Application-Layer
    Risk Analysis In the application layer, the risk of unauthorized access to the
    medical images stored on the PACS server can lead to malicious image modification.
    Although most healthcare facilities use local servers, a few have transitioned
    to cloud storage [154], increasing the potential attack surface. When a PACS server
    is exposed to the internet, there is a risk of various security threats that could
    compromise the confidentiality, integrity, and availability of the medical images
    stored on the server. Thus, a threat agent with motivation, expertise, and resources
    to gain unauthorized access to the PACS server can use the CT-GAN technique on
    medical imaging systems, posing a high risk of malicious image modification, leading
    to the loss of integrity of MRI/CT images, misdiagnosis of a severe disease, delayed
    treatment for the affected patients, and a loss of trust in the medical system.
    Vulnerabilities in medical imaging systems, such as inadequate encryption and
    security measures, increase the likelihood and severity of this risk. Mirsky et
    al. [117] also demonstrated how an attacker could compromise medical images on
    PACS servers by designing two conditional GAN models. One injects medical evidence
    into healthy images, while the other removes medical evidence from images with
    detectable tumors [117]. This approach is critical because it can cause a misdiagnosis
    of severe diseases. Pathologies requiring high-resolution scanning would become
    a higher risk of CT-GAN-related attacks [117]. To mitigate this risk, organizations
    should implement adequate security controls, such as encryption (of data in motion
    (DiM) and data at rest (DaR)) and access controls, and limit the exposure the
    PACS server has to the internet [117]. Additionally, organizations should reduce
    the sensitive data collected (e.g., pathologies that do not need a CT scan should
    be discouraged), prioritize pathologies that require high-resolution scanning
    for further security measures, and consider alternatives to CT scanning for pathologies
    that do not require it. Finally, organizations should use risk management methodologies,
    such as the STRIDE method, to identify and address specific threats posed by the
    CT-GAN technique. 4.1.4. Summary Malicious image modification by malicious actors
    can have severe consequences for the affected patients and the medical system.
    Attacker motivations comprise ideological, political, money, fame, and revenge
    motivations; attacker goals vary according to motivations, including to affect
    elections (political), hold data hostage (money), insurance fraud (money), terrorism
    (revenge), etc.; and the impact includes physical (injury and death), mental (trauma
    and life course), and monetary (loss and payouts). These point to nation/state
    actors and unorthodox communities, although independent actors (i.e., hobbyists
    and ethical hackers) may seek to explore such evolving uses of CT-GANs [117].
    Therefore, it is essential to implement appropriate security measures, such as
    strong authentication and access control, data encryption, and regular security
    assessments, to mitigate the risks at each IoT layer. We illustrate a scenario
    of malicious image manipulation in Table 3. 4.2. Risk 2: Malicious Synthesis and
    Camouflage of Genetic Sequences DNA synthesis has become more common [155]. It
    now is a non-trivial threat [156] where genetic sequences being synthesized and
    analyzed for various purposes, such as medical research, drug development, and
    forensic analysis, can be leaked to unauthorized parties or corrupted. 4.2.1.
    Perception-Layer Risk Analysis The perception-layer security risk analysis of
    the DNA synthesis IoT health device system involves identifying risks associated
    with the user’s interaction with the system. In this case, the risk involves the
    attack on the synthesizer through sound waves produced during the operation of
    the synthesizer. The acoustic side-channel attack is a type of “sonic malware”
    or “bioacoustic hacking” that can infer information about the synthesizer’s operation
    and the synthesized DNA sequence [157,158]. This attack requires close physical
    proximity to the DNA synthesizer, which means that healthcare or related personnel
    could be likely threat agents. Alternatively, an attacker can breach systems in
    proximity to the DNA synthesizer (e.g., remote monitoring systems, employee phone/laptop,
    etc.) and record the information leaked in the acoustic side-channel of the DNA
    synthesizer through an existing microphone(s) of those systems [157]. To mitigate
    acoustic side-channel risks, Faezi et al. [157] suggested using physically identical
    components placed in a geometrically uniform manner to remove any variations in
    acoustic emissions. Additionally, preventing unauthorized personnel from accessing
    any room containing a DNA synthesizer helps to maintain confidentiality of the
    synthesized DNA sequences. Any unapproved devices discovered in the same room
    as a DNA synthesizer should be reported as a security threat [157]. 4.2.2. Network-Layer
    Risk Analysis DNA synthesizers can connect to computers, external drives, and
    Ethernet cables. However, operators generally keep the machine disconnected from
    the internet and local networks or use secured protocols to eliminate the possibility
    of cyberattacks [157]. Although the possibility of network-layer attacks is limited,
    security risks target the communication between the DNA synthesizer and any integrated
    external system posing a significant risk to the confidentiality of the synthesized
    DNA sequences. Appropriate security measures, such as encryption, access controls,
    and monitoring for suspicious activity in any room containing a DNA synthesizer,
    can mitigate network-layer risks [157]. 4.2.3. Application-Layer Risk Analysis
    The application-layer security risk analysis of the DNA synthesis IoT health device
    system involves risk impacts stemming from perception-layer threats. When genetic
    sequences are manipulated, these corrupted sequences will be used in various medical
    applications, posing significant risks to genetic research and development [157].
    Routine risk assessments can help identify corrupted sequences and prevent malicious
    actors from exploiting them. 4.2.4. Summary DNA synthesis in medical research,
    drug development, and forensic analysis poses a significant security risk to genetic
    research and development integrity. The risk of malicious DNA synthesis and camouflage,
    particularly through acoustic side-channel attacks, can compromise genetic data
    and misdiagnose severe diseases. Faezi et al. [157] discuss attacker intent, such
    as industrial espionage and bioterrorism; however, because most attacks require
    close physical proximity to the DNA synthesizer, the healthcare or related personnel
    are the likely threat agent (although they can be recruited by a nation/state
    actor or an unorthodox group). To mitigate these risks, appropriate security measures
    must be implemented at the perception, network, and application layers, including
    removing variations in acoustic emissions, encryption, access controls, and monitoring
    for suspicious activity. We illustrate a scenario of a genetic sequences attack
    in Table 3. 4.3. Risk 3: Transport of Critical Materials and Unintentional Advertising
    IoT health devices often use expensive and potentially dangerous materials such
    as radioactive isotopes to function properly, such as in medical devices used
    in radiation therapy or medical imaging. These devices may have communication
    protocols that could be vulnerable to malicious attacks or unintentional exposure,
    leading to serious health risks for the public. For example, in the Goiânia accident,
    numerous people were exposed to radioactive material stolen from a hospital, and
    this could easily happen again [159]. Therefore, assessing the security risks
    at the perception, network, and application layers of these IoT health systems
    and implementing appropriate security measures to protect against such risks is
    important. We illustrate a scenario of attacks exploiting the unintentional advertising
    of critical materials in Table 3. 4.3.1. Perception-Layer Risk Analysis This IoT
    health device system’s perception layer involves medical materials containing
    high-activity radioactive materials. The lack of comprehensive security protocols
    to protect them can result in unintentional advertising, making them a target
    for theft. The theft of these materials can pose severe health risks to the public
    and lead to legal consequences, damaging the reputation of medical device manufacturers
    [160]. Therefore, marking these materials discreetly among professionals is crucial
    to avoid unnecessary exposure to unprepared populations and to implement appropriate
    security measures to protect against malicious attacks [161]. For instance, the
    International Atomic Energy Agency (IAEA) has established guidelines for the security
    of radioactive sources, including physical protection, control and accounting
    requirements, and detection and response to unauthorized access [162]. 4.3.2.
    Network-Layer Risk Analysis The network layer of this IoT health device system
    involves assessing vulnerabilities in the communication protocols of IoTHDs. Network-layer
    security risks may involve the possibility of a malicious actor gaining access
    to IoTHD communication protocols and using them to identify and target medical
    materials containing radioactive isotopes. This could involve network scanning
    or malware to gain unauthorized access to the device or network. Implementing
    appropriate security measures to protect against such attacks, such as encryption
    and access controls, and conducting routine vulnerability testing is necessary.
    Novel engineering efforts are also required to develop more specified security
    protocols to protect against theft and the unintentional exposure of these materials
    and revised education and law enforcement for medical professionals and peripheral
    agencies [163,164]. 4.3.3. Application-Layer Risk Analysis Application-layer security
    risks could include a malicious actor exploiting vulnerabilities in the software
    or firmware of medical devices to gain unauthorized access to sensitive information
    or materials. This could include tactics such as exploiting software vulnerabilities
    or using malware to gain access to device settings or data. Implementing appropriate
    security measures, such as revising education and law enforcement for medical
    professionals and peripheral agencies to ensure the safe handling and disposal
    of radioactive materials, can significantly reduce the risk of malicious attacks
    and unintentional exposure. 4.3.4. Summary Overall, the security risks associated
    with medical devices that use expensive and potentially dangerous materials require
    careful consideration and appropriate measures to ensure the safety of the public
    and the reputation of medical device manufacturers. Healthcare facilities housing
    high-risk radioactive materials and devices become easy targets for theft or sabotage.
    Attackers can be highly motivated and well-resourced unorthodox communities or
    state-sponsored threat actors with specific agendas, such as economic or political
    gain, terrorism, or activism. This could include insiders with privileged access
    to the medical device manufacturer’s systems or facilities. Due to the high value
    of the medical materials involved, the attackers may be highly skilled and sophisticated
    and able to leverage a variety of attack vectors and techniques to achieve their
    objectives [165]. Thus, medical device manufacturers must keep abreast of potential
    malicious actors and implement appropriate security measures to protect against
    malicious attacks and unintentional exposure. This may require novel engineering
    efforts such as blockchain technology to enhance security and traceability in
    managing radioactive sources in medical facilities [164], and revised education
    and law enforcement for medical professionals and peripheral agencies [163]. Table
    3. Practical Security Risk Examples Inspired by Real-World Concerns.           4.4.
    Lessons Learned A multi-layer approach to security risk management is essential
    for IoT health device systems because it helps identify potential risks and threats
    across different system layers. IoT health devices involve interconnected components
    that operate at different levels, including perception, network, and application
    layers. Each of these layers has unique vulnerabilities and threats requiring
    different security measures. At the perception layer, the physical sensors and
    actuators that gather and control data are vulnerable to tampering, eavesdropping,
    and spoofing attacks. Network-layer vulnerabilities can result from unsecured
    wireless communications, weak authentication, and unencrypted data transmission.
    The application-layer vulnerabilities arise from the software and applications
    used to process and store data, including outdated software, unpatched vulnerabilities,
    and weak password policies. IoT health device manufacturers and healthcare organizations
    can identify and assess these vulnerabilities and threats across different system
    layers by taking a multi-layer approach to security risk management. This approach
    enables relevant stakeholders to implement appropriate security measures that
    address the specific risks at each layer. It also helps to ensure that security
    controls are integrated across all layers to provide end-to-end security. Furthermore,
    as we have seen from the scenarios discussed, a multi-layer approach can help
    identify risks across different layers. For instance, in the DNA synthesizers
    scenario, attacks may require physical proximity to the device (at the perception
    layer) and the ability to analyze acoustic signals (at the application layer).
    This highlights the importance of considering security risks spanning different
    IoT system layers and implementing security measures that address these risks.
    5. The Future of IoTHD Security Many new medical technologies are increasingly
    accepted and trusted by medical professionals [166,167,168]. Specifically, we
    will briefly address several innovations of the 4th industrial revolution, including
    artificial intelligence [169], blockchain [170,171], genetic engineering, quantum
    computing, and intersectional/combinatorial use. Innovations with these technologies
    can be expected to set the stage for novel exploits leading into the middle and
    latter parts of the 21st century. 5.1. Administrative (Laws and Policy Changes)
    As discussed above, modern medical devices vary in many aspects, such as software,
    operating systems, and communication protocols. More administrative efforts are
    needed to achieve cybersecurity in various medical devices, especially at the
    law and policy levels. First, governmental health agencies must specifically define
    their roles in cybersecurity administration toward devices [86]. Formulating a
    policy/framework and having vendors follow the guidelines is required. That said,
    a single reliable network that supports heterogeneous medical devices can be newly
    defined, and vendors could promptly integrate existing/new medical devices into
    the secure network. Depending on laws and policy, governments may decide whether
    they utilize existing networks or redesign a network for future IoTHDs [77]. For
    example, current MRI/CT images are connected to centralized pictures archiving
    and communication system (PACS) networks. Building a new framework should consider
    those existing networks [172]. In the new form of medical network frameworks,
    migrating legacy devices effectively is necessary. These gateway designs can include
    but are not limited to data transformation, network protocol design, and encryption/decryption
    schemes. Some medical devices do not have network capabilities; thus, a form of
    data transformation and secure uploading scheme will be needed. Otherwise, adversaries
    could conduct physical data theft attacks or man-in-the-middle attacks. Vendors
    are expected to abide by laws/policy changes at any level of cybersecurity. This
    can be developing security programs or adding two-factor authentication. Both
    administrations and vendors should collaboratively inspect the quality of security
    fulfillment. During the inspection periods, the government may define standardized
    action items as validated and deliverable tests. It is recommended that government
    health agencies define fine-grained requirements with expected outcomes, eventually
    decreasing overall timelines. Vendors can then provide corresponding item results
    in their lab settings. That way, health agencies can assess the risk management
    abilities of the manufacturers. This process should be performed seamlessly; existing
    users would not face denial-of-service experiences. Overall, being aware of cybersecurity
    for medical devices in laws and policies is important. When building a future
    framework/network, governmental and industrial efforts can expedite smoother transitions
    [173]. 5.2. Defending Forward A small but significant amount of the literature
    on the intersections of biosecurity and cybersecurity discusses the national security
    implications at risk. George (2020) speaks about this at length with the health
    of citizens and the status of bioeconomies [174]. Palmer and Karahan [13] discuss
    how intersectional research is important to consider in light of cybersecurity
    defense initiatives under the term “Defend Forward”, given how integral health
    infrastructure is. The careless integration of IoTHDs can threaten military operations
    if they can be widely and acutely exploited. It, therefore, appears sensible that
    further scrutiny be given to IoTHDs as they are considered for purchase and use
    in proximity to military and policing forces, regardless of the country. Further,
    such scrutiny is reasonable to be heightened as 4IR technologies, especially that
    of artificial intelligence, are employed [175]. Several AI-based studies [76,81,82,176,177]
    discuss this at length wherein AI can meaningfully present further hurdles if
    misused or taken advantage of. Future considerations toward defend forward applications
    should be mindful of health infrastructure that is accessible at these intersections.
    5.3. AI Innovations and New Directions According to Kruk et al. [178], about 3.6
    million people die annually due to poor quality healthcare [178]. There is also
    an employment gap of 5.9 million nurses globally [179]. This is alarming and has
    triggered a lot of technological innovations within the space of artificial intelligence
    (AI), machine learning, and the Internet of Things (IoT) to solve these challenges.
    Machine learning techniques have proven to learn complex representations and patterns
    to automate some clinical responsibilities. Internet of Things devices, on the
    other hand, have provided the capabilities to collect high-throughput heterogeneous
    rich data from patients and individuals for training and improving AI algorithms.
    Healthcare workers and patients expect AI to play an important role in diagnosis
    and treatment more effectively and accurately than the current methods [180,181,182,183].
    For example, as AI in computer vision improves image analysis, patients can obtain
    better image quality from medical devices with AI. Likewise, AI characteristics
    can improve the diagnosis and disease management process. This is not to say that
    the applications are not without hurdles, but there exists evidence for optimism
    over time as practitioners improve their integration of artificial intelligence-based
    modalities [184]. We can expect artificial intelligence to improve applications
    in resource-strapped areas. AI and machine learning have permeated every aspect
    of healthcare delivery—identifying and discovering new therapeutics, diagnosing
    diseases and infections, or aiding in treatment decision making. Toward the discovery
    of novel therapeutics and drugs, AI has been used to speed up the virtual screening
    of compounds to narrow the search space for lead compounds or potentially viable
    drugs [185]. This decreases the cost and time it will take to bring new drugs
    to market by pharmaceutical companies. Within disease diagnosis, AI has been used
    to diagnose disease and medical abnormalities from data collected with IoT devices
    (such as wearable fitness devices), medical imaging devices, and blood chemistry
    analyzers [186]. In terms of administering treatments, ML algorithms have been
    used to inform how limited clinical resources should be allocated [187]. For example,
    machine learning algorithms have been used to prioritize patients to maximize
    how clinical resources are used to treat patients. Moreover, ML algorithms have
    aided in determining the optimal time for administering certain treatments. AI
    and ML have shown incredible performance in the past and have demonstrated a lot
    of potential for the future. Despite these, AI in healthcare poses major drawbacks
    that must be addressed as the field evolves. One of these drawbacks is the lack
    of ethnic diversity in some datasets used in training these AI systems [188].
    An AI system is as good as the dataset it was built on. Thus, if certain groups
    of people are not represented in these training datasets, AI systems built on
    these datasets will perform terribly when used on underrepresented groups. Notable
    authors who have discussed issues and potential pathways to solutions regarding
    representation in data and the algorithms handling them can be found among [189,190,191,192,193,194,195].
    Moreover, many AI systems and IoT applications require good infrastructure, such
    as reliable internet and electricity. In resource-constrained environments where
    such amenities are a challenge, it will be almost impossible to deploy these technological
    innovations fully. Thus, more work is needed to investigate ways to deploy these
    technologies in resource-constrained settings. With access to medical data, generative
    AI can generate fake medical information, including MRI/CT images, for which new
    security means have been suggested [117,196,197]. Thus, data generated by IoTHDs
    must be validated by experts or high-performing discriminator models. Building
    a good discriminator model for data protection can help healthcare sectors to
    protect from malicious data fabrication attacks. This approach is needed given
    the data generated. The same aspects can be applied to other types of medical
    data resources. To extrapolate, future cyberbiosecurity models may apply more
    complicated discriminative techniques to detect generic sequences of DNA synthesis
    or other important biological outputs or signatures. In terms of biomolecules,
    biosystems, biomachine interfaces, and biocomputing, there exist many new and
    dynamic targets [155,198]. A single organization or academic institute cannot
    make this approach. Thus, region-wide or nation-wide data collection and research
    collaborations are needed and can expedite more complicated AI solutions [199,200,201,202,203].
    5.4. Innovations of Blockchain Technology Blockchain technology refers to cryptography-linked
    records in chained blocks. It is an emerging technology that may prove essential
    in shoring-up privacy concerns and adding needed avenues of automation in record
    processing [204]. With an eye on privacy, several groups have put forth security
    solutions at this intersection. For example, Kumar and Chand [205] revealed a
    model for using blockchain with the IoT in medical privacy contexts; this builds
    on efforts of protocols which aimed to cover the privacy of PII on the blockchain.
    Those concerned with regulation would be pleased to note that conversation at
    the intersection of blockchain, regulation, and hospital device application is
    alive. Sneha et al. [206] introduced a model that “emphasizes distribution and
    encryption of data, smart contracts, and permissioned blockchain-based architecture”
    within the scope of the FDA review process. Alblooshi et al. [171] developed a
    protocol specifically for medical devices. All in all, blockchain efforts exist
    and are growing. Testing, time, and adoption will tell if the efforts take root.
    They present novel avenues for managing medical data. These reflect just some
    of the innovations taking place with blockchain technology. 5.5. Genetic Engineering
    Genetic engineering is a 4IR technology that has been pacing rapidly [207,208,209,210].
    It allows skilled technicians to change fundamental aspects of organism DNA and
    make profound biomaterials. Of the latter, DNA is being investigated as a programmable
    4D scaffold that may improve wearable technology and offer further bio-digital
    functionality [211,212,213]; in fact, IoT functionality with DNA is already a
    matter of investigation. In the former case, genetic engineering has immediate
    healthcare implications as, for example, this can translate to effective gene
    therapies and allows for crafting tissue and organ grafts that have a much lower
    rejection from those these are implanted into. Sequencing, the decoding of one’s
    genome, is required for this. Thankfully, the cost to sequence genomes per base
    pair has fallen drastically, and the speed to do so on a population basis for
    analyzing a community is here. The advent of COVID-19 provided an important basis
    and means to implement effective genetic surveillance to study population susceptibility
    [214,215]. The means can be minimalized significantly. For example, researchers
    demonstrated that Oxford Nanopore sequencing technology could be utilized via
    a gaming laptop, allowing for sequencing on the go [216]. From the individual
    to the corporate entity to the nation-state, there are many reasons to be interested
    in sequencing. The same goes for information about genetic editing. Cheap gene
    engineering kits and exploration stations, via companies such as The Odin or Amino
    Labs, can be obtained cheaply, allowing for the potential of biomedical exploration
    and prototyping by larger swaths of individuals [207,208]. IoTHDs that utilize
    either gene editing or sequencing may find themselves targets. Companies might
    consider adding these products to their labs and sandboxes to test intermediate
    attacks between connected systems. Reverse engineering and purchasing more advanced
    units, especially industrial and hospital-grade sequencing and diagnostic units,
    may heighten preparedness. 5.6. Quantum Computing Quantum computing conducts complex
    computations by harnessing quantum states. Instead of calculations based on binary
    architecture, quantum computing can hold more information, significantly reducing
    computation times and energy usage. This concept of quantum bit computation could
    eventually lead to accurate diagnosis and precision medicine in healthcare [85].
    Although the advanced processing ability of quantum computing may threaten legacy
    encryption schemes, it can also be used to reinforce the current encryption systems
    with quantum computing power. There is ample opportunity for business opportunities
    in exploring both sides of these uses. 5.7. Intersectional Fusions of 4th IR Technologies
    One potential innovation to be mindful of is the intersection of multiple 4IR
    technologies in the future. An example can be found in a recent avant-garde project
    that fuses biotechnology and blockchain in a decentralized autonomous organization
    (or DAO for short) called BitMouseDAO, sought to encode cryptocurrency into a
    mouse [217]. This would involve genetically engineering the mouse’s DNA to hold
    the key to access an amount of Bitcoin. Fifty (50) years ago, this idea would
    have been considered poor science fiction, but the means of technology exist.
    However, less than twenty (20) years ago, considerable amounts of digital data
    were converted into DNA reliably stored and played back in text or video format.
    In the last decade, a researcher and his team managed to encode malware in DNA
    and use it to perform a remote attack on a DNA sequencer, which spelled immediate
    implications for future healthcare operations [155]. The takeaway is the value
    of pondering what creative teams may produce in their goal to produce novel attacks
    on IoTHDs. It is not out of the question that institutions may one day see novel
    attacks that act on the synchronized actions of patients who seek medical services
    that access their genetic information under the right combination of spiked and
    submitted samples. It is possible from here that complex bio-digital DDOS attacks
    can be made functional for more devastating malware, perhaps in the form of a
    condensed but dynamic machine learning algorithm that eventually winds its way
    through a facility. This scenario is wonderfully contrived for the time being.
    Thankfully, this is not a practical attack in the next few years, but with time,
    testing, and a large enough value target, it very well could be in ten (10) years
    by an enterprising group. Underestimation is an ever-present vulnerability that
    must be frequently assessed. 6. Concluding Remarks The world of medical devices
    is diverse, and varieties that utilize internet connectivity add to this diversity
    and increase use. IoT health devices have become increasingly prevalent in the
    healthcare sector, offering a range of benefits, such as remote monitoring, real-time
    tracking, and improved patient outcomes. Thus, when rapid technological advancements
    outpaced the gradual advancement of healthcare cybersecurity, security concerns
    became difficult to manage. Each interconnected medical device has unique security
    risks, and there is not a one-size-fits-all approach to securing IoTHDs. In this
    paper, we have provided a survey and mapping of IoTHDs, regarding healthcare components
    and the communities that use them, a multi-layer security risk management analysis,
    and future and evolving considerations. Each device presents risks that we have
    classified into the STRIDE threat categories, showing the need to consider the
    security risks of IoTHDs in their environment and focus on security risk management.
    We introduced the multi-layer approach to conducting security risk management
    for these IoTHD systems as it provides a comprehensive view of the system’s security
    posture and enables the implementation of appropriate security measures that address
    vulnerabilities and threats at each layer while ensuring end-to-end security.
    We do not cover all of the forms of IoTHDs but provide a useful introduction to
    thinking about the threat landscape of IoTHDs, proposing that all adoption of
    IoTHDs is done carefully and with the utmost consideration for security risk management.
    Author Contributions Conceptualization, A.-a.O.A., H.F., W.J., I.A.S., L.P., X.-L.P.;
    Methodology, A.-a.O.A., H.F., W.J., L.P., X.-L.P.; Formal analysis, A.-a.O.A.,
    X.-L.P., L.P.; Investigation, A.-a.O.A., H.F., W. J., X.-L.P.; writing—original
    draft preparation, A.-a.O.A., H.F., W.J., L.P., X.-L.P.; Visualization, A.-a.O.A.
    and W.J.; Validation/Verification, A.-a.O.A., H.F., W.J., I.A.S., L.P., X.-L.P.;
    Supervision, A.-a.O.A., X.-L.P. and L.P.; Project administration, A.-a.O.A., X.-L.P.;
    Funding acquisition, X.-L.P.; Review and Editing, A.-a.O.A., H.F., W.J., I.A.S.,
    L.P., X.-L.P. All authors have read and agreed to the published version of the
    manuscript. Funding Publication costs were funded by CYBER Solutions Academy.
    The work itself was a volunteer effort. Data Availability Statement This is a
    review paper and as such no data is available to review. All data used in this
    review was obtained through academic publications or through open-access sources.
    Conflicts of Interest This work was pursued without aim of commercial gain and
    its completion was pursued as a volunteer, educational pursuit drawing from the
    domain understandings of each author. The majority of this work was completed
    by the time most of the authors were still in school or having recently graduated.
    That said, Issah Abubakari Samori is employed as an Artificial Intelligence Engineer
    with MinoHealth AI Labs. Xavier-Lewis Palmer volunteers through educational initiatives
    separately held by CYBER Solutions Academy and MinoHealth AI Labs. References
    Thomasian, N.M.; Adashi, E.Y. Cybersecurity in the internet of medical things.
    Health Policy Technol. 2021, 10, 100549. [Google Scholar] [CrossRef] Sadoughi,
    F.; Behmanesh, A.; Sayfouri, N. Internet of things in medicine: A systematic mapping
    study. J. Biomed. Inform. 2020, 103, 103383. [Google Scholar] [CrossRef] [PubMed]
    Annamalai, M.; Jesintha, D. Smart IoT system based patient monitoring and medicine
    reminder based on registry service selection scheme. Eur. J. Mol. Clin. Med. 2021,
    7, 2710–2721. [Google Scholar] Martin, R. The Internet of Things (IoT)–Removing
    the Human Element. Infosec Writ. 2015, 28, 12. [Google Scholar] Richardson, L.C.;
    Lewis, S.M.; Burnette, R.N. Building capacity for cyberbiosecurity training. Front.
    Bioeng. Biotechnol. 2019, 7, 112. [Google Scholar] [CrossRef] Greenbaum, D. Cyberbiosecurity:
    An Emerging Field that has Ethical Implications for Clinical Neuroscience. Camb.
    Q. Healthc. Ethics 2021, 30, 662–668. [Google Scholar] [CrossRef] [PubMed] Adler,
    A.; Beal, J.; Lancaster, M.; Wyschogrod, D. Cyberbiosecurity and Public Health
    in the Age of COVID-19. In Emerging Threats of Synthetic Biology and Biotechnology;
    Springer: Dordrecht, The Netherlands, 2021; pp. 103–115. [Google Scholar] Perakslis,
    C. Cyberbiosecurity, Ecopsychology, and Beyond: Our Formidable PIT Community [Last
    Word]. IEEE Technol. Soc. Mag. 2020, 39, 84. [Google Scholar] [CrossRef] Potter,
    L.; Palmer, X.L. Human Factors in Biocybersecurity Wargames. In Proceedings of
    the Future of Information and Communication Conference, San Francisco, CA, USA,
    29–30 April 2021; Springer: Berlin, Gemrany, 2021; pp. 666–673. [Google Scholar]
    Hester, R.J. Bioveillance: A Techno-security Infrastructure to Preempt the Dangers
    of Informationalised Biology. Sci. Cult. 2020, 29, 153–176. [Google Scholar] [CrossRef]
    Mazurczyk, W.; Drobniak, S.; Moore, S. Towards a systematic view on cybersecurity
    ecology. In Combatting Cybercrime and Cyberterrorism; Springer: Berlin, Gemrany,
    2016; pp. 17–37. [Google Scholar] Potter, L.; Ayala, O.; Palmer, X.L. Biocybersecurity:
    A Converging Threat as an Auxiliary to War. In Proceedings of the ICCWS 2021 16th
    International Conference on Cyber Warfare and Security, Online, 25–26 February
    2021; Academic Conferences Limited: Reading, UK, 2021; p. 291. [Google Scholar]
    Palmer, X.; Potter, L.N.; Karahan, S. COVID-19 and biocybersecurity’s increasing
    role on defending forward. Int. J. Cyber Warf. Terror. (IJCWT) 2021, 11, 15–29.
    [Google Scholar] [CrossRef] Amiri, A.; Shekarchizadeh, M.; Esfahani, A.R.S.; Masoud,
    G.H. Bio-Cyber Threats and Crimes, the Challenges of the Fourth Industrial Revolution.
    Bioethics 2021, 81, 97. [Google Scholar] Strielkina, A.; Illiashenko, O.; Zhydenko,
    M.; Uzun, D. Cybersecurity of healthcare IoT-based systems: Regulation and case-oriented
    assessment. In Proceedings of the 2018 IEEE 9th International Conference on Dependable
    Systems, Services and Technologies (DESSERT), Kyiv, Ukraine, 24–27 May 2018; IEEE:
    New York, NY, USA, 2018; pp. 67–73. [Google Scholar] Karthick, R.; Ramkumar, R.;
    Akram, M.; Kumar, M.V. Overcome the challenges in bio-medical instruments using
    IOT—A review. Mater. Today Proc. 2021, 45, 1614–1619. [Google Scholar] [CrossRef]
    Gui, Y.; Siddiqui, A.S.; Tamore, S.M.; Saqib, F. Investigation of vulnerabilities
    on smart grid end devices. In Proceedings of the 2019 IEEE CyberPELS (CyberPELS),
    Knoxville, TN, USA, 29 April–1 May 2019; IEEE: New York, NY, USA, 2019; pp. 1–6.
    [Google Scholar] Guttieres, D.; Stewart, S.; Wolfrum, J.; Springs, S.L. Cyberbiosecurity
    in advanced manufacturing models. Front. Bioeng. Biotechnol. 2019, 7, 210. [Google
    Scholar] [CrossRef] [PubMed] Schabacker, D.S.; Levy, L.A.; Evans, N.J.; Fowler,
    J.M.; Dickey, E.A. Assessing cyberbiosecurity vulnerabilities and infrastructure
    resilience. Front. Bioeng. Biotechnol. 2019, 7, 61. [Google Scholar] [CrossRef]
    [PubMed] Norman, I.; Aikins, M.; Binka, F.; Nyarko, K. Hospital all-risk emergency
    preparedness in Ghana. Ghana Med. J. 2012, 46, 1–6. [Google Scholar] Costa, L.;
    Barros, J.P.; Tavares, M. Vulnerabilities in IoT devices for smart home environment.
    In Proceedings of the 5th International Conference on Information Systems Security
    and Privacy, ICISSP, Prague, Czech Republic, 23–25 February 2019; SciTePress:
    Vienna, Austria, 2019; Volume 1, pp. 615–622. [Google Scholar] Khan, R.; Khan,
    S.U.; Zaheer, R.; Khan, S. Future internet: The internet of things architecture,
    possible applications and key challenges. In Proceedings of the 2012 10th International
    Conference on Frontiers of Information Technology, Islamabad, Pakistan, 17–19
    December 2012; IEEE: New York, NY, USA, 2012; pp. 257–260. [Google Scholar] Kelly,
    J.T.; Campbell, K.L.; Gong, E.; Scuffham, P. The Internet of Things: Impact and
    implications for health care delivery. J. Med. Internet Res. 2020, 22, e20135.
    [Google Scholar] [CrossRef] [PubMed] Affia, A.A.O.; Matulevičius, R.; Nolte, A.
    Security risk management in cooperative intelligent transportation systems: A
    systematic literature review. In Proceedings of the OTM Confederated International
    Conferences on the Move to Meaningful Internet Systems, Rhodes, Greece, 21–25
    October 2019; Springer: Berling, Germany, 2019; pp. 282–300. [Google Scholar]
    Sethi, P.; Sarangi, S.R. Internet of things: Architectures, protocols, and applications.
    J. Electr. Comput. Eng. 2017, 2017, 9324035. [Google Scholar] [CrossRef] Miller,
    D.D.; Brown, E.W. Artificial intelligence in medical practice: The question to
    the answer? Am. J. Med. 2018, 131, 129–133. [Google Scholar] [CrossRef] Dang,
    L.M.; Piran, M.J.; Han, D.; Min, K.; Moon, H. A survey on internet of things and
    cloud computing for healthcare. Electronics 2019, 8, 768. [Google Scholar] [CrossRef]
    US Food and Drug Administration. Is the Product a Medical Device; US Food and
    Drug Administration: Silver Spring, MD, USA, 2018; Volume 17. Mahler, T.; Nissim,
    N.; Shalom, E.; Goldenberg, I.; Hassman, G.; Makori, A.; Kochav, I.; Elovici,
    Y.; Shahar, Y. Know your enemy: Characteristics of cyber-attacks on medical imaging
    devices. arXiv 2018, arXiv:1801.05583. [Google Scholar] Jesudoss, A.; Daniel,
    M.J.; Richard, J.J. Intelligent medicine management system and surveillance in
    IoT environment. In Proceedings of the IOP Conference Series: Materials Science
    and Engineering, Kazimierz Dolny, Poland, 21–23 November 2019; IOP Publishing:
    Bristol, UK, 2019; Volume 590, p. 012005. [Google Scholar] Peccoud, J.; Gallegos,
    J.E.; Murch, R.; Buchholz, W.G.; Raman, S. Cyberbiosecurity: From naive trust
    to risk awareness. Trends Biotechnol. 2018, 36, 4–7. [Google Scholar] [CrossRef]
    Larobina, M.; Murino, L. Medical image file formats. J. Digit. Imaging 2014, 27,
    200–206. [Google Scholar] [CrossRef] [PubMed] Eichelberg, M.; Kleber, K.; Kämmerer,
    M. Cybersecurity challenges for PACS and medical imaging. Acad. Radiol. 2020,
    27, 1126–1139. [Google Scholar] [CrossRef] [PubMed] Singh, A.K.; Anand, A.; Lv,
    Z.; Ko, H.; Mohan, A. A survey on healthcare data: A security perspective. ACM
    Trans. Multimid. Comput. Commun. Appl. 2021, 17, 1–26. [Google Scholar] [CrossRef]
    Zarour, M.; Alenezi, M.; Ansari, M.T.J.; Pandey, A.K.; Ahmad, M.; Agrawal, A.;
    Kumar, R.; Khan, R.A. Ensuring data integrity of healthcare information in the
    era of digital health. Healthc. Technol. Lett. 2021, 8, 66–77. [Google Scholar]
    [CrossRef] Wang, Z.; Li, Q.; Wang, Y.; Liu, B.; Zhang, J.; Liu, Q. Medical protocol
    security: DICOM vulnerability mining based on fuzzing technology. In Proceedings
    of the 2019 ACM SIGSAC Conference on Computer and Communications Security, London,
    UK, 11–15 November 2019; pp. 2549–2551. [Google Scholar] Erol, B.; Gurbuz, S.Z.;
    Amin, M.G. GAN-based synthetic radar micro-Doppler augmentations for improved
    human activity recognition. In Proceedings of the 2019 IEEE Radar Conference (RadarConf),
    Boston, MA, USA, 22–26 April 2019; IEEE: New York, NY, USA, 2019; pp. 1–5. [Google
    Scholar] Shen, Z.; Li, W.; Han, H. Deep Learning-Based Wavelet Threshold Function
    Optimization on Noise Reduction in Ultrasound Images. Sci. Program. 2021, 2021,
    3471327. [Google Scholar] [CrossRef] Thiel, A. Biometric identification technologies
    and the Ghanaian ‘data revolution’. J. Mod. Afr. Stud. 2020, 58, 115–136. [Google
    Scholar] [CrossRef] Bhelonde, A.; Didolkar, N.; Jangale, S.; Kulkarni, N.L. Flexible
    wound assessment system for diabetic patient using android smartphone. In Proceedings
    of the 2015 International Conference on Green Computing and Internet of Things
    (ICGCIoT), Greater Noida, India, 8–10 October 2015; IEEE: New Yok, NY, USA, 2015;
    pp. 466–469. [Google Scholar] Połap, D.; Winnicka, A.; Serwata, K.; Kęsik, K.;
    Woźniak, M. An intelligent system for monitoring skin diseases. Sensors 2018,
    18, 2552. [Google Scholar] [CrossRef] Shimizu, E.; Ogawa, Y.; Yazu, H.; Aketa,
    N.; Yang, F.; Yamane, M.; Sato, Y.; Kawakami, Y.; Tsubota, K. “Smart Eye Camera”:
    An innovative technique to evaluate tear film breakup time in a murine dry eye
    disease model. PLoS ONE 2019, 14, e0215130. [Google Scholar] [CrossRef] Ernst,
    T.; Guillemaud, R.; Mailley, P.; Polizzi, J.; Koenig, A.; Boisseau, S.; Pauliac-Vaujour,
    E.; Plantier, C.; Delapierre, G.; Saoutieff, E.; et al. Sensors and related devices
    for IoT, medicine and s mart-living. In Proceedings of the 2018 IEEE Symposium
    on VLSI Technology, Honolulu, HI, USA, 18–22 June 2018; IEEE: New York, NY, USA,
    2018; pp. 35–36. [Google Scholar] Hameed, S.S.; Hassan, W.H.; Latiff, L.A.; Ghabban,
    F. A systematic review of security and privacy issues in the internet of medical
    things; the role of machine learning approaches. PeerJ Comput. Sci. 2021, 7, e414.
    [Google Scholar] [CrossRef] Debar, H.; Beuran, R.; Tan, Y. A Quantitative Study
    of Vulnerabilities in the Internet of Medical Things. In Proceedings of the ICISSP,
    Floriana, Malta, 25–27 February 2020; pp. 164–175. [Google Scholar] Hudson, F.;
    Clark, C. Wearables and medical interoperability: The evolving frontier. Computer
    2018, 51, 86–90. [Google Scholar] [CrossRef] Valanarasu, M.R. Smart and secure
    IoT and AI integration framework for hospital environment. J. ISMAC 2019, 1, 172–179.
    [Google Scholar] Majumder, S.; Chen, L.; Marinov, O.; Chen, C.H.; Mondal, T.;
    Deen, M.J. Noncontact wearable wireless ECG systems for long-term monitoring.
    IEEE Rev. Biomed. Eng. 2018, 11, 306–321. [Google Scholar] [CrossRef] [PubMed]
    Sposaro, F.; Tyson, G. iFall: An Android application for fall monitoring and response.
    In Proceedings of the 2009 Annual International Conference of the IEEE Engineering
    in Medicine and Biology Society, Minneapolis, MN, USA, 3–5 September 2009; IEEE:
    New York, NY, USA, 2009; pp. 6119–6122. [Google Scholar] Kakria, P.; Tripathi,
    N.; Kitipawang, P. A real-time health monitoring system for remote cardiac patients
    using smartphone and wearable sensors. Int. J. Telemed. Appl. 2015, 2015, 8. [Google
    Scholar] [CrossRef] [PubMed] Gruzelier, J.H. EEG-neurofeedback for optimising
    performance. I: A review of cognitive and affective outcome in healthy participants.
    Neurosci. Biobehav. Rev. 2014, 44, 124–141. [Google Scholar] [CrossRef] [PubMed]
    Tedesco, S.; Sica, M.; Ancillao, A.; Timmons, S.; Barton, J.; O’Flynn, B. Accuracy
    of consumer-level and research-grade activity trackers in ambulatory settings
    in older adults. PLoS ONE 2019, 14, e0216891. [Google Scholar] [CrossRef] [PubMed]
    Armstrong, W.; Michael, K. The Implications of Neuralink and Brain Machine Interface
    Technologies. In Proceedings of the 2020 IEEE International Symposium on Technology
    and Society (ISTAS), Tempe, AZ, USA, 12–15 November 2020; IEEE: New York, NY,
    USA, 2020; pp. 201–203. [Google Scholar] Zhu, D.; Bieger, J.; Garcia Molina, G.;
    Aarts, R.M. A survey of stimulation methods used in SSVEP-based BCIs. Comput.
    Intell. Neurosci. 2010, 2010, 1–12. [Google Scholar] [CrossRef] Liu, Q.; Chen,
    K.; Ai, Q.; Xie, S.Q. Recent development of signal processing algorithms for SSVEP-based
    brain computer interfaces. J. Med. Biol. Eng. 2014, 34, 299–309. [Google Scholar]
    [CrossRef] Chevallier, S.; Kalunga, E.K.; Barthélemy, Q.; Monacelli, E. Review
    of Riemannian distances and divergences, applied to SSVEP-based BCI. Neuroinformatics
    2021, 19, 93–106. [Google Scholar] [CrossRef] Moutinho, S. Scientists Entered
    People’s Dreams and Got Them ‘Talking’. 2021. Available online: https://www.science.org/content/article/scientists-entered-peoples-dreams-and-got-them-talking?
    (accessed on 3 January 2023). Leavitt, N. Researchers fight to keep implanted
    medical devices safe from hackers. Computer 2010, 43, 11–14. [Google Scholar]
    [CrossRef] Rostami, M.; Juels, A.; Koushanfar, F. Heart-to-heart (H2H) authentication
    for implanted medical devices. In Proceedings of the 2013 ACM SIGSAC Conference
    on Computer & Communications Security, Berlin, Germany, 4–8 November 2013; pp.
    1099–1112. [Google Scholar] Tabasum, A.; Safi, Z.; AlKhater, W.; Shikfa, A. Cybersecurity
    issues in implanted medical devices. In Proceedings of the 2018 International
    Conference on Computer and Applications (ICCA), Beirut, Lebanon, 25–26 August
    2018; IEEE: New York, NY, USA, 2018; pp. 1–9. [Google Scholar] Zanjal, S.V.; Talmale,
    G.R. Medicine reminder and monitoring system for secure health using IOT. Procedia
    Comput. Sci. 2016, 78, 471–476. [Google Scholar] [CrossRef] Yaacoub, J.P.A.; Noura,
    M.; Noura, H.N.; Salman, O.; Yaacoub, E.; Couturier, R.; Chehab, A. Securing internet
    of medical things systems: Limitations, issues and recommendations. Future Gener.
    Comput. Syst. 2020, 105, 581–606. [Google Scholar] [CrossRef] Aman, A.H.M.; Hassan,
    W.H.; Sameen, S.; Attarbashi, Z.S.; Alizadeh, M.; Latiff, L.A. IoMT amid COVID-19
    pandemic: Application, architecture, technology, and security. J. Netw. Comput.
    Appl. 2021, 174, 102886. [Google Scholar] [CrossRef] [PubMed] Sangave, N.A.; Aungst,
    T.D.; Patel, D.K. Smart connected insulin pens, caps, and attachments: A review
    of the future of diabetes technology. Diabetes Spectr. 2019, 32, 378–384. [Google
    Scholar] [CrossRef] [PubMed] Thamilarasu, G.; Odesile, A.; Hoang, A. An intrusion
    detection system for internet of medical things. IEEE Access 2020, 8, 181560–181576.
    [Google Scholar] [CrossRef] Onik, M.F.A.; Anam, K.; Rashid, N. A secured cloud
    based health care data management system. Int. J. Comput. Appl. 2012, 49, 1–7.
    [Google Scholar] Ilievski, A.; Dojchinovski, D.; Gusev, M. Interactive voice assisted
    home healthcare systems. In Proceedings of the 9th Balkan Conference on Informatics,
    Sofia, Bulgaria, 26–28 September 2019; pp. 1–5. [Google Scholar] Tao, V.; Moy,
    K.; Amirfar, V.A. A little robot with big promise may be future of personalized
    health care. Pharm. Today 2016, 22, 38. [Google Scholar] [CrossRef] Vanhove, M.P.;
    Rochette, A.J.; de Bisthoven, L.J. Joining science and policy in capacity development
    for monitoring progress towards the Aichi Biodiversity Targets in the global South.
    Ecol. Indic. 2017, 73, 694–697. [Google Scholar] [CrossRef] Wall, P.; Saxena,
    D.; Brown, S. Artificial Intelligence in the Global South (AI4D): Potential and
    Risks. arXiv 2021, arXiv:2108.10093. [Google Scholar] Davies, M. Biometrics, surveillance
    technologies and the rise of the ‘security state’ in South Africa. Africa LSE.
    2017. Available online: https://blogs.lse.ac.uk/africaatlse/2017/03/22/biometrics-surveillance-technologies-and-the-rise-of-the-security-state-in-south-africa/
    (accessed on 1 July 2022). Gong, T.; Huang, H.; Li, P.; Zhang, K.; Jiang, H. A
    medical healthcare system for privacy protection based on IoT. In Proceedings
    of the 2015 Seventh International Symposium on Parallel Architectures, Algorithms
    and Programming (PAAP), Nanjing, China, 12–14 December 2015; IEEE: New York, NY,
    USA, 2015; pp. 217–222. [Google Scholar] Subramoniam, S.; Sadi, S. Healthcare
    2.0. IT Prof. 2010, 12, 46–51. [Google Scholar] [CrossRef] Drake, R.; Ridder,
    E. Healthcare Cybersecurity Vulnerabilities. In Proceedings of the International
    Conference on Cybersecurity and Cybercrime, Boston, MA, USA, 16–18 November 2022;
    Volume 9, pp. 49–56. [Google Scholar] Alkinoon, M.; Choi, S.J.; Mohaisen, D. Measuring
    healthcare data breaches. In Proceedings of the Information Security Applications:
    22nd International Conference, WISA 2021, Jeju Island, Republic of Korea, 11–13
    August 2021; Revised Selected Papers 22. Springer: Berlin, Germany, 2021; pp.
    265–277. [Google Scholar] Wang, W.; Kiik, M.; Peek, N.; Curcin, V.; Marshall,
    I.J.; Rudd, A.G.; Wang, Y.; Douiri, A.; Wolfe, C.D.; Bray, B. A systematic review
    of machine learning models for predicting outcomes of stroke with structured data.
    PLoS ONE 2020, 15, e0234722. [Google Scholar] Zuiderwijk, A.; Chen, Y.C.; Salem,
    F. Implications of the use of artificial intelligence in public governance: A
    systematic literature review and a research agenda. Gov. Inf. Q. 2021, 38, 101577.
    [Google Scholar] [CrossRef] Cuningkin, V.; Riley, E.; Rainey, L. Preventing Medjacking.
    AJN Am. J. Nurs. 2021, 121, 46–50. [Google Scholar] [CrossRef] [PubMed] Food and
    Drug Administration. Draft Guidance for Industry and Food and Drug Administration
    Staff: Content of Premarket Submissions for Management of Cybersecurity in Medical
    Devices. 2014. Available online: https://www.fda.gov/regulatory-information/search-fda-guidance-documents/content-premarket-submissions-management-cybersecurity-medical-devices
    (accessed on 1 July 2022). Food and Drug Administration. Medical Device Safety
    Action Plan: Protecting Patients, Promoting Public Health. 2019. Available online:
    https://www.fda.gov/about-fda/cdrh-reports/medical-device-safety-action-plan-protecting-patients-promoting-public-health
    (accessed on 1 July 2022). Akogo, D.A.; Appiah, V.; Palmer, X.L. CellLineNet:
    End-to-end learning and transfer learning for multiclass epithelial breast cell
    line classification via a convolutional neural network. arXiv 2018, arXiv:1808.06041.
    [Google Scholar] van der Wal, D.; Jhun, I.; Laklouk, I.; Nirschl, J.; Richer,
    L.; Rojansky, R.; Theparee, T.; Wheeler, J.; Sander, J.; Feng, F.; et al. Biological
    data annotation via a human-augmenting AI-based labeling system. NPJ Digit. Med.
    2021, 4, 145. [Google Scholar] [CrossRef] [PubMed] Zhang, H.T.; Park, T.J.; Islam,
    A.N.; Tran, D.S.; Manna, S.; Wang, Q.; Mondal, S.; Yu, H.; Banik, S.; Cheng, S.;
    et al. Reconfigurable perovskite nickelate electronics for artificial intelligence.
    Science 2022, 375, 533–539. [Google Scholar] [CrossRef] Sibi Chakkaravarthy, S.;
    Sangeetha, D.; Venkata Rathnam, M.; Srinithi, K.; Vaidehi, V. Futuristic cyber-attacks.
    Int. J. Knowl.-Based Intell. Eng. Syst. 2018, 22, 195–204. [Google Scholar] [CrossRef]
    Srinivas, M.; Durgaprasadarao, P.; Raj, V.N.P. Intelligent medicine box for medication
    management using IoT. In Proceedings of the 2018 2nd International Conference
    on Inventive Systems and Control (ICISC), Coimbatore, India, 19–20 January 2018;
    IEEE: New York, NY, USA, 2018; pp. 32–34. [Google Scholar] Gehl Sampath, P. Governing
    artificial intelligence in an age of inequality. Glob. Policy 2021, 12, 21–31.
    [Google Scholar] [CrossRef] Hooker, S. Moving beyond “algorithmic bias is a data
    problem”. Patterns 2021, 2, 100241. [Google Scholar] [CrossRef] Web Titan. Tardigrade
    Malware Used in Targeted Attacks on Vaccine Manufacturers and Biomedical Firms.
    2021. Available online: https://www.webtitan.com/blog/tardigrade-malware-vaccine-manufacturers-biomedical-firms/
    (accessed on 3 January 2023). Dubois, É.; Heymans, P.; Mayer, N.; Matulevičius,
    R. A systematic approach to define the domain of information system security risk
    management. In Intentional Perspectives on Information Systems Engineering; Springer:
    Berlin Germany, 2010; pp. 289–306. [Google Scholar] Affia, A.A.O.; Matulevičius,
    R. Securing an MQTT-based Traffic Light Perception System for Autonomous Driving.
    In Proceedings of the 2021 IEEE International Conference on Cyber Security and
    Resilience (CSR), Rhodes, Greece, 26–28 July 2021; IEEE: New York, NY, USA, 2021;
    pp. 255–260. [Google Scholar] Abasi-amefon, O.A.; Matulevičius, R.; Tõnisson,
    R. Security Risk Estimation and Management in Autonomous Driving Vehicles. In
    Proceedings of the International Conference on Advanced Information Systems Engineering,
    Melbourne, VIC, Australia, 28 June–2 July 2021; Springer: Berlin, Germany, 2021;
    pp. 11–19. [Google Scholar] Nist, N. Risk management guide for information technology
    systems. NIST Spec. Publ. 2002, 800, 800–830. [Google Scholar] Caralli, R.A.;
    Stevens, J.F.; Young, L.R.; Wilson, W.R. Introducing Octave Allegro: Improving
    the Information Security Risk Assessment Process; Technical report; Carnegie-Mellon
    University, Software Engineering Institute: Pittsburgh, PA, USA, 2007. [Google
    Scholar] Wynn, J.; Whitmore, J.; Upton, G.; Spriggs, L.; McKinnon, D.; McInnes,
    R.; Graubart, R.; Clausen, L. Threat Assessment & Remediation Analysis (TARA):
    Methodology Description Version 1.0; Technical report; The MITRE Corporation:
    Bedford, MA, USA, 2011. [Google Scholar] Affia, A.A.O.; Nolte, A.; Matulevičius,
    R. IoT Security Risk Management: A Framework and Teaching Approach. Informatics
    Educ. 2023, 22. [Google Scholar] [CrossRef] Affia, A.a.O.; Matulevičius, R.; Nolte,
    A. Security Risk Management in E-commerce Systems: A Threat-driven Approach. Balt.
    J. Mod. Comput. 2020, 8, 213–240. [Google Scholar] Matulevičius, R. Fundamentals
    of Secure System Modelling; Springer: Berlin, Germany, 2017. [Google Scholar]
    Shostack, A. Threat Modeling: Designing for Security; John Wiley & Sons: Hoboken,
    NJ, USA, 2014. [Google Scholar] Jabeen, T.; Ashraf, H.; Ullah, A. A survey on
    healthcare data security in wireless body area networks. J. Ambient. Intell. Humaniz.
    Comput. 2021, 12, 9841–9854. [Google Scholar] [CrossRef] [PubMed] Williams, P.A.;
    Woodward, A.J. Cybersecurity vulnerabilities in medical devices: A complex environment
    and multifaceted problem. Med. Devices 2015, 8, 305. [Google Scholar] [CrossRef]
    [PubMed] Aghili, S.F.; Mala, H.; Kaliyar, P.; Conti, M. SecLAP: Secure and lightweight
    RFID authentication protocol for Medical IoT. Future Gener. Comput. Syst. 2019,
    101, 621–634. [Google Scholar] [CrossRef] Cummins, G. Smart pills for gastrointestinal
    diagnostics and therapy. Adv. Drug Deliv. Rev. 2021, 177, 113931. [Google Scholar]
    [CrossRef] Mancini, M. Medical identity theft in the emergency department: Awareness
    is crucial. West. J. Emerg. Med. 2014, 15, 899. [Google Scholar] [CrossRef] Stine,
    I.; Rice, M.; Dunlap, S.; Pecarina, J. A cyber risk scoring system for medical
    devices. Int. J. Crit. Infrastruct. Prot. 2017, 19, 32–46. [Google Scholar] [CrossRef]
    Lesaja, S.; Palmer, X.L. Brain-Computer Interfaces and the Dangers of Neurocapitalism.
    arXiv 2020, arXiv:2009.07951. [Google Scholar] Pycroft, L.; Boccard, S.G.; Owen,
    S.L.; Stein, J.F.; Fitzgerald, J.J.; Green, A.L.; Aziz, T.Z. Brainjacking: Implant
    security issues in invasive neuromodulation. World Neurosurg. 2016, 92, 454–462.
    [Google Scholar] [CrossRef] Wood, D.; Apthorpe, N.; Feamster, N. Cleartext data
    transmissions in consumer iot medical devices. In Proceedings of the 2017 Workshop
    on Internet of Things Security and Privacy, Dallas, TX, USA, 3 November 2017;
    pp. 7–12. [Google Scholar] Kim, J. Energy-efficient dynamic packet downloading
    for medical IoT platforms. IEEE Trans. Ind. Inform. 2015, 11, 1653–1659. [Google
    Scholar] [CrossRef] Chauhan, A. Robotics and automation: The rescuers of COVID
    era. In Artificial Intelligence for COVID-19; Springer: Berlin Germany, 2021;
    pp. 119–151. [Google Scholar] Lepasepp, T.K.; Hurst, W. A systematic literature
    review of industry 4.0 technologies within medical device manufacturing. Future
    Internet 2021, 13, 264. [Google Scholar] [CrossRef] Richmond, S. Stopping The
    Attacks: Cybersecurity In Healthcare Manufacturing. 2021. Available online: https://www.forbes.com/sites/forbestechcouncil/2021/08/17/stopping-the-attacks-cybersecurity-in-healthcare-manufacturing/?sh=4db312231a8d
    (accessed on 3 January 2023). Shen, M.; Deng, Y.; Zhu, L.; Du, X.; Guizani, N.
    Privacy-preserving image retrieval for medical IoT systems: A blockchain-based
    approach. IEEE Netw. 2019, 33, 27–33. [Google Scholar] [CrossRef] Sun, Y.; Lo,
    F.P.W.; Lo, B. Security and privacy for the internet of medical things enabled
    healthcare systems: A survey. IEEE Access 2019, 7, 183339–183355. [Google Scholar]
    [CrossRef] Hatzivasilis, G.; Soultatos, O.; Ioannidis, S.; Verikoukis, C.; Demetriou,
    G.; Tsatsoulis, C. Review of security and privacy for the Internet of Medical
    Things (IoMT). In Proceedings of the 2019 15th international conference on distributed
    computing in sensor systems (DCOSS), Santorini Island, Greece, 29–31 May 2019;
    IEEE: New York, NY, USA, 2019; pp. 457–464. [Google Scholar] Arpaia, P.; Bonavolontà,
    F.; Cioffi, A.; Moccaldi, N. Power Measurement-based Vulnerability Assessment
    of IoT medical devices at varying countermeasures for cybersecurity. IEEE Trans.
    Instrum. Meas. 2021, 70, 1–9. [Google Scholar] [CrossRef] Jackson, G.W., Jr.;
    Rahman, S. Exploring Challenges and Opportunities in Cybersecurity Risk and Threat
    Communications Related To The Medical Internet Of Things (MIoT). arXiv 2019, arXiv:1908.00666.
    [Google Scholar] [CrossRef] Mirsky, Y.; Mahler, T.; Shelef, I.; Elovici, Y. {CT-GAN}:
    Malicious Tampering of 3D Medical Imagery using Deep Learning. In Proceedings
    of the 28th USENIX Security Symposium (USENIX Security 19), Santa Clara, CA, USA,
    14–16 August 2019; pp. 461–478. [Google Scholar] Chen, P.; Desmet, L.; Huygens,
    C. A study on advanced persistent threats. In Proceedings of the Communications
    and Multimedia Security: 15th IFIP TC 6/TC 11 International Conference, CMS 2014,
    Aveiro, Portugal, 25–26 September 2014; Proceedings 15. Springer: Berlin, Germany,
    2014; pp. 63–72. [Google Scholar] Moore, T. The economics of cybersecurity: Principles
    and policy options. Int. J. Crit. Infrastruct. Prot. 2010, 3, 103–117. [Google
    Scholar] [CrossRef] Hu, P.; Li, H.; Fu, H.; Cansever, D.; Mohapatra, P. Dynamic
    defense strategy against advanced persistent threat with insiders. In Proceedings
    of the 2015 IEEE Conference on Computer Communications (INFOCOM), Hong Kong, China,
    26 April–1 May 2015; IEEE: New York, NY, USA, 2015; pp. 747–755. [Google Scholar]
    Palmer, X.L.; Potter, L.; Karahan, S. An Exploration on APTs in Biocybersecurity
    and Cyberbiosecurity. In Proceedings of the International Conference on Cyber
    Warfare and Security, Albany, NY, USA, 17–18 March 2022; Volume 17, pp. 532–535.
    [Google Scholar] BIO-ISAC Media. BIO-ISAC Releases Advisory to Biomanufacturers.
    2021. Available online: https://www.isac.bio/post/tardigrade (accessed on 3 January
    2023). Newaz, A.I.; Sikder, A.K.; Rahman, M.A.; Uluagac, A.S. A survey on security
    and privacy issues in modern healthcare systems: Attacks and defenses. ACM Trans.
    Comput. Healthc. 2021, 2, 1–44. [Google Scholar] [CrossRef] Martínez, A.L.; Pérez,
    M.G.; Ruiz-Martínez, A. A comprehensive review of the state of the art on security
    and privacy issues in Healthcare. ACM Comput. Surv. 2022, 55, 1–38. [Google Scholar]
    [CrossRef] Zubair, M.; Unal, D.; Al-Ali, A.; Shikfa, A. Exploiting bluetooth vulnerabilities
    in e-health IoT devices. In Proceedings of the 3rd International Conference on
    Future Networks and Distributed Systems, Paris, France, 1–2 July 2019; pp. 1–7.
    [Google Scholar] Perez, A.J.; Zeadally, S. Recent advances in wearable sensing
    technologies. Sensors 2021, 21, 6828. [Google Scholar] [CrossRef] Choi, J.; Choi,
    C.; Kim, S.; Ko, H. Medical information protection frameworks for smart healthcare
    based on IoT. In Proceedings of the 9th International Conference on Web Intelligence,
    Mining and Semantics, Seoul, Republic of Korea, 26–28 June 2019; pp. 1–5. [Google
    Scholar] Mohanthy, S.B. Real time internet application with distributed flow environment
    for medical IoT. In Proceedings of the 2015 International Conference on Green
    Computing and Internet of Things (ICGCIoT), Greater Noida, India, 8–10 October
    2015; IEEE: New York, NY, USA, 2015; pp. 832–837. [Google Scholar] Roy, M.; Chowdhury,
    C.; Aslam, N. Designing transmission strategies for enhancing communications in
    medical IoT using Markov decision process. Sensors 2018, 18, 4450. [Google Scholar]
    [CrossRef] Xu, B.; Da Xu, L.; Cai, H.; Xie, C.; Hu, J.; Bu, F. Ubiquitous data
    accessing method in IoT-based information system for emergency medical services.
    IEEE Trans. Ind. Infom. 2014, 10, 1578–1586. [Google Scholar] Elhoseny, M.; Ramírez-González,
    G.; Abu-Elnasr, O.M.; Shawkat, S.A.; Arunkumar, N.; Farouk, A. Secure medical
    data transmission model for IoT-based healthcare systems. IEEE Access 2018, 6,
    20596–20608. [Google Scholar] [CrossRef] Atat, R.; Liu, L.; Ashdown, J.; Medley,
    M.J.; Matyjas, J.D.; Yi, Y. A physical layer security scheme for mobile health
    cyber-physical systems. IEEE Internet Things J. 2017, 5, 295–309. [Google Scholar]
    [CrossRef] Mashima, D.; Ahamad, M. Enabling Robust Information Accountability
    in E-healthcare Systems. In Proceedings of the HealthSec, Bellevue, WA, USA, 8–10
    August 2012. [Google Scholar] Blough, D.M.; Liu, L.; Sainfort, F.; Ahamad, M.
    CT-T: MedVault-Ensuring Security and Privacy for Electronic Medical Records; Technical
    report; Georgia Institute of Technology: Atlanta, GA, USA, 2011. [Google Scholar]
    Mashima, D.; Srivastava, A.; Giffin, J.T.; Ahamad, M. Protecting E-healthcare
    Client Devices against Malware and Physical Theft. In Proceedings of the HealthSec,
    Washington, DC, USA, 11–13 August 2010. [Google Scholar] Halstead, S. Educating
    Health Organization on Cyber Threats. Ph.D. Thesis, Utica College, Utica, NY,
    USA, 2021. [Google Scholar] McMahon, E.; Williams, R.; El, M.; Samtani, S.; Patton,
    M.; Chen, H. Assessing medical device vulnerabilities on the Internet of Things.
    In Proceedings of the 2017 IEEE International Conference on Intelligence and Security
    Informatics (ISI), Beijing, China, 22–24 July 2017; IEEE: New York, NY, USA, 2017;
    pp. 176–178. [Google Scholar] Lee, Y.S.; Alasaarela, E.; Lee, H. Secure key management
    scheme based on ECC algorithm for patient’s medical information in healthcare
    system. In Proceedings of the The International Conference on Information Networking
    2014 (ICOIN2014), Phuket, Thailand, 10–12 February 2014; IEEE: New York, NY, USA,
    2014; pp. 453–457. [Google Scholar] Wu, L.; Chi, H.; Du, X. A Secure Proxy-based
    Access Control Scheme for Implantable Medical Devices. arXiv 2018, arXiv:1803.07751.
    [Google Scholar] Marwan, M.; Karti, A.; Ouahmane, H. Proposal for a secure data
    sharing and processing in cloud applications for healthcare domain. Int. J. Inf.
    Technol. Appl. Sci. 2021, 3, 10–17. [Google Scholar] [CrossRef] Ren, J.; Li, J.;
    Liu, H.; Qin, T. Task offloading strategy with emergency handling and blockchain
    security in SDN-empowered and fog-assisted healthcare IoT. Tsinghua Sci. Technol.
    2021, 27, 760–776. [Google Scholar] [CrossRef] Mehta, R.; Parmar, M. Trust based
    mechanism for securing iot routing protocol rpl against wormhole & grayhole attacks.
    In Proceedings of the 2018 3rd International Conference for Convergence in Technology
    (I2CT), Pune, India, 6–8 April 2018; IEEE: New York, NY, USA, 2018; pp. 1–6. [Google
    Scholar] Rizvi, S.; Kurtz, A.; Pfeffer, J.; Rizvi, M. Securing the internet of
    things (IoT): A security taxonomy for IoT. In Proceedings of the 2018 17th IEEE
    International Conference On Trust, Security and Privacy in Computing and Communications/12th
    IEEE International Conference on Big Data Science and Engineering (TrustCom/BigDataSE),
    New York, NY, USA, 1–3 August 2018; IEEE: New York, NY, USA, 2018; pp. 163–168.
    [Google Scholar] Dinculeană, D.; Cheng, X. Vulnerabilities and limitations of
    MQTT protocol used between IoT devices. Appl. Sci. 2019, 9, 848. [Google Scholar]
    [CrossRef] Tang, W.; Ren, J.; Deng, K.; Zhang, Y. Secure data aggregation of lightweight
    E-healthcare IoT devices with fair incentives. IEEE Internet Things J. 2019, 6,
    8714–8726. [Google Scholar] [CrossRef] Chen, Y.; Qin, X.; Wang, J.; Yu, C.; Gao,
    W. Fedhealth: A federated transfer learning framework for wearable healthcare.
    IEEE Intell. Syst. 2020, 35, 83–93. [Google Scholar] [CrossRef] Cao, F.; Huang,
    H.K.; Zhou, X. Medical image security in a HIPAA mandated PACS environment. Comput.
    Med. Imaging Graph. 2003, 27, 185–196. [Google Scholar] [CrossRef] Singh, A.K.;
    Kumar, B.; Singh, G.; Mohan, A. Medical image watermarking techniques: A technical
    survey and potential challenges. In Medical Image Watermarking: Techniques and
    Applications; Springer: Berlin Germany, 2017; pp. 13–41. [Google Scholar] Ghoneim,
    A.; Muhammad, G.; Amin, S.U.; Gupta, B. Medical image forgery detection for smart
    healthcare. IEEE Commun. Mag. 2018, 56, 33–37. [Google Scholar] [CrossRef] Huang,
    H. Pacs-Based Multimedia Imaging Informatics: Basic Principles and Applications;
    John Wiley & Sons: Hoboken, NJ, USA, 2019. [Google Scholar] Widup, S.; Bassett,
    G.; Hylender, D.; Rudis, B.; Spitler, M. 2015 Verizon Protected Health Information
    Data Breach Report. 2015. Available online: https://www.researchgate.net/publication/289254312_2015_Verizon_Protected_Health_Information_Data_Breach_Report
    (accessed on 1 July 2022). Epia Realpe, L.F.; Parra, O.J.S.; Velandia, J.B. Use
    of KRACK Attack to Obtain Sensitive Information. In Proceedings of the Mobile,
    Secure, and Programmable Networking: 4th International Conference, MSPN 2018,
    Paris, France, 18–20 June 2018; Revised Selected Papers 4. Springer: Berlin, Germany,
    2019; pp. 270–276. [Google Scholar] Seri, B.; Vishnepolsky, G.; Zusman, D. BLEEDINGBIT:
    The Hidden Attack Surface within BLE Chips. 2019. Available online: https://info.armis.com/rs/645-PDC-047/images/Armis-BLEEDINGBIT-Technical-White-Paper-WP.pdf
    (accessed on 1 July 2022). Siwicki, B. Cloud-Based Pacs System Cuts Imaging Costs
    by Half for Rural Hospital | Healthcare IT News. Available online: https://www.healthcareitnews.com/news/cloud-based-pacs-system-cuts-imaging-costs-half-rural-hospital
    (accessed on 3 January 2023). Ney, P.; Koscher, K.; Organick, L.; Ceze, L.; Kohno,
    T. Computer Security, Privacy, and DNA Sequencing: Compromising Computers with
    Synthesized DNA, Privacy Leaks, and More. In Proceedings of the USENIX Security
    Symposium, Vancouver, BC, Canada, 16–18 August 2017; Volume 26, pp. 765–779. [Google
    Scholar] Puzis, R.; Farbiash, D.; Brodt, O.; Elovici, Y.; Greenbaum, D. Increased
    cyber-biosecurity for DNA synthesis. Nat. Biotechnol. 2020, 38, 1379–1381. [Google
    Scholar] [CrossRef] [PubMed] Faezi, S.; Chhetri, S.R.; Malawade, A.V.; Chaput,
    J.C.; Grover, W.; Brisk, P.; Al Faruque, M.A. Oligo-snoop: A non-invasive side
    channel attack against DNA synthesis machines. In Proceedings of the Network and
    Distributed Systems Security (NDSS) Symposium, San Diego, CA, USA, 24–27 February
    2019. [Google Scholar] Faezi, S.; Chhetri, S.R.; Malawade, A.V.; Chaput, J.C.;
    Grover, W.; Brisk, P.; Al Faruque, M.A. Acoustic Side Channel Attack Against DNA
    Synthesis Machines. In Proceedings of the 2020 ACM/IEEE 11th International Conference
    on Cyber-Physical Systems (ICCPS), Sydney, NSW, Australia, 21–25 April 2020; IEEE:
    New York, NY, USA, 2020; pp. 186–187. [Google Scholar] Oliveira, A.R.d.; Hunt,
    J.; Valverde, N.; Brandao-Mello, C.; Farina, R. Medical and related aspects of
    the Goiania accident: An overview. Health Phys. 1991, 60, 17–24. [Google Scholar]
    [CrossRef] [PubMed] Kurnot, J.; Kuca, M.; Neidigk, S. Case Study on the Effectiveness
    of Mechanical Attack Testing to Help Determine Vulnerabilities of a Device that
    Contains Radiological Material and Proven Methods of Addressing such Vulnerabilities.
    In Proceedings of the International Conference on the Security of Radioactive
    Material: The Way Forward for Prevention and Detection, Vienna, Austria, 3–7 December
    2018. [Google Scholar] Choo, K.K.R.; Gai, K.; Chiaraviglio, L.; Yang, Q. A multidisciplinary
    approach to Internet of Things (IoT) cybersecurity and risk management. Comput.
    Secur. 2021, 102, 102136. [Google Scholar] [CrossRef] International Atomic Energy
    Agency. Security of Radioactive Material in Use and Storage and of Associated
    Facilities; Number 11-G (Rev.1) in Implementing Guides; International Atomic Energy
    Agency (IAEA): Vienna, Austria, 2019. [Google Scholar] Darwish, S.; Nouretdinov,
    I.; Wolthusen, S.D. Towards composable threat assessment for medical IoT (MIoT).
    Procedia Comput. Sci. 2017, 113, 627–632. [Google Scholar] [CrossRef] Umayam,
    M.L. Possibilities of Blockchain Technology for Nuclear Security. In Blockchain
    for International Security: The Potential of Distributed Ledger Technology for
    Nonproliferation and Export Controls; Springer: Berlin, Germany, 2021; pp. 55–73.
    [Google Scholar] Rane, S.; Harris, J.T. A Game Theoretical Model of Radiological
    Terrorism Defense. Int. J. Nucl. Secur. 2021, 7, 7. [Google Scholar] [CrossRef]
    Mueller, S. Facing the 2020 pandemic: What does cyberbiosecurity want us to know
    to safeguard the future? Biosaf. Health 2021, 3, 11–21. [Google Scholar] [CrossRef]
    Mantle, J.L.; Rammohan, J.; Romantseva, E.F.; Welch, J.T.; Kauffman, L.R.; McCarthy,
    J.; Schiel, J.; Baker, J.C.; Strychalski, E.A.; Rogers, K.C.; et al. Cyberbiosecurity
    for biopharmaceutical products. Front. Bioeng. Biotechnol. 2019, 7, 116. [Google
    Scholar] [CrossRef] Millett, K.; Dos Santos, E.; Millett, P.D. Cyber-biosecurity
    risk perceptions in the biotech sector. Front. Bioeng. Biotechnol. 2019, 7, 136.
    [Google Scholar] [CrossRef] Lee, K.F.; Qiufan, C. AI 2041: Ten Visions for Our
    Future; Currency: Sydney, NSW, Australia, 2021. [Google Scholar] Schlatt, V.;
    Guggenberger, T.; Schmid, J.; Urbach, N. Attacking the trust machine: Developing
    an information systems research agenda for blockchain cybersecurity. Int. J. Inf.
    Manag. 2022, 68, 102470. [Google Scholar] [CrossRef] Alblooshi, M.; Salah, K.;
    Alhammadi, Y. Blockchain-based ownership management for medical IoT (MIoT) devices.
    In Proceedings of the 2018 International Conference on Innovations in Information
    Technology (IIT), Al Ain, United Arab Emirates, 18–19 November 2018; IEEE: New
    York, NY, USA, 2018; pp. 151–156. [Google Scholar] Chandrasekaran, S.; Subramaniam,
    R. Why IoT Sensors Need Standards—They Could Improve Performance and Spur Development
    of New Applications. 2022. Available online: https://spectrum.ieee.org/why-iot-sensors-need-standards
    (accessed on 3 January 2023). Hardman, A.; Martin, W. Risk Management Framework
    for DoD Medical Devices. In Proceedings of the HIMSS’18, Las Vegas, NV, USA, 5–9
    March 2019. [Google Scholar] George, A.M. The national security implications of
    cyberbiosecurity. Front. Bioeng. Biotechnol. 2019, 7, 51. [Google Scholar] [CrossRef]
    [PubMed] Shaw, J.; Rudzicz, F.; Jamieson, T.; Goldfarb, A. Artificial intelligence
    and the implementation challenge. J. Med. Internet Res. 2019, 21, e13659. [Google
    Scholar] [CrossRef] Jia, Z.; Wang, Z.; Hong, F.; Ping, L.; Shi, Y.; Hu, J. Personalized
    deep learning for ventricular arrhythmias detection on medical IoT systems. In
    Proceedings of the 39th International Conference on Computer-Aided Design, Online,
    2–5 November 2020; pp. 1–9. [Google Scholar] Fang, L.; Li, Y.; Liu, Z.; Yin, C.;
    Li, M.; Cao, Z.J. A practical model based on anomaly detection for protecting
    medical IoT control services against external attacks. IEEE Trans. Ind. Inform.
    2020, 17, 4260–4269. [Google Scholar] [CrossRef] Kruk, M.E.; Gage, A.D.; Joseph,
    N.T.; Danaei, G.; García-Saisó, S.; Salomon, J.A. Mortality due to low-quality
    health systems in the universal health coverage era: A systematic analysis of
    amenable deaths in 137 countries. Lancet 2018, 392, 2203–2212. [Google Scholar]
    [CrossRef] [PubMed] Lu, Z.x.; Qian, P.; Bi, D.; Ye, Z.w.; He, X.; Zhao, Y.h.;
    Su, L.; Li, S.l.; Zhu, Z.l. Application of AI and IoT in clinical medicine: Summary
    and challenges. Curr. Med. Sci. 2021, 41, 1134–1150. [Google Scholar] [CrossRef]
    Isgut, M.; Gloster, L.; Choi, K.; Venugopalan, J.; Wang, M.D. Systematic Review
    of Advanced AI Methods for Improving Healthcare Data Quality In Post COVID-19
    Era. IEEE Rev. Biomed. Eng. 2022, 16, 53–69. [Google Scholar] [CrossRef] Wahl,
    B.; Cossy-Gantner, A.; Germann, S.; Schwalbe, N.R. Artificial intelligence (AI)
    and global health: How can AI contribute to health in resource-poor settings?
    BMJ Glob. Health 2018, 3, e000798. [Google Scholar] [CrossRef] [PubMed] Jiang,
    F.; Jiang, Y.; Zhi, H.; Dong, Y.; Li, H.; Ma, S.; Wang, Y.; Dong, Q.; Shen, H.;
    Wang, Y. Artificial intelligence in healthcare: Past, present and future. Stroke
    Vasc. Neurol. 2017, 2, 230–243. [Google Scholar] [CrossRef] [PubMed] Antwi, W.K.;
    Akudjedu, T.N.; Botwe, B.O. Artificial intelligence in medical imaging practice
    in Africa: A qualitative content analysis study of radiographers’ perspectives.
    Insights Imaging 2021, 12, 80. [Google Scholar] [CrossRef] Ali, O.; Abdelbaki,
    W.; Shrestha, A.; Elbasi, E.; Alryalat, M.A.A.; Dwivedi, Y.K. A systematic literature
    review of artificial intelligence in the healthcare sector: Benefits, challenges,
    methodologies, and functionalities. J. Innov. Knowl. 2023, 8, 100333. [Google
    Scholar] [CrossRef] Urbina, F.; Lentzos, F.; Invernizzi, C.; Ekins, S. Dual use
    of artificial-intelligence-powered drug discovery. Nat. Mach. Intell. 2022, 4,
    189–191. [Google Scholar] [CrossRef] [PubMed] Kumar, Y.; Koul, A.; Singla, R.;
    Ijaz, M.F. Artificial intelligence in disease diagnosis: A systematic literature
    review, synthesizing framework and future research agenda. J. Ambient. Intell.
    Humaniz. Comput. 2022, 1–28. [Google Scholar] [CrossRef] [PubMed] Bajgain, B.;
    Lorenzetti, D.; Lee, J.; Sauro, K. Determinants of implementing artificial intelligence-based
    clinical decision support tools in healthcare: A scoping review protocol. BMJ
    Open 2023, 13, e068373. [Google Scholar] [CrossRef] [PubMed] Kleinberg, G.; Diaz,
    M.J.; Batchu, S.; Lucke-Wold, B. Racial underrepresentation in dermatological
    datasets leads to biased machine learning models and inequitable healthcare. J.
    Biomed Res. 2022, 3, 42–47. [Google Scholar] Gebru, T. Race and gender. In The
    Oxford Handbook of Ethics of AI; Oxfornd University Press: Oxford, UK, 2020; pp.
    251–269. [Google Scholar] Buolamwini, J.; Gebru, T. Gender shades: Intersectional
    accuracy disparities in commercial gender classification. In Proceedings of the
    Conference on Fairness, Accountability and Transparency PMLR, New York, NY, USA,
    23–24 February 2018; pp. 77–91. [Google Scholar] Hoffmann, A.L. Where fairness
    fails: Data, algorithms, and the limits of antidiscrimination discourse. Inform.
    Commun. Soc. 2019, 22, 900–915. [Google Scholar] [CrossRef] John-Mathews, J.M.;
    Cardon, D.; Balagué, C. From reality to world. A critical perspective on AI fairness.
    J. Bus. Ethics 2022, 178, 945–959. [Google Scholar] [CrossRef] Jo, E.S.; Gebru,
    T. Lessons from archives: Strategies for collecting sociocultural data in machine
    learning. In Proceedings of the 2020 Conference on Fairness, Accountability, and
    Transparency, Barcelona, Spain, 27–30 July 2020; pp. 306–316. [Google Scholar]
    Manyika, J. Getting AI right: Introductory notes on AI & society. Daedalus 2022,
    151, 5–27. [Google Scholar] Zhou, J.; Chen, F.; Holzinger, A. Towards explainability
    for AI fairness. In Proceedings of the xxAI-Beyond Explainable AI: International
    Workshop, Held in Conjunction with ICML 2020, Vienna, Austria, 18 July 2020; Revised
    and Extended Papers. Springer: Berlin, Germany, 2022; pp. 375–386. [Google Scholar]
    Gull, S.; Mansour, R.F.; Aljehane, N.O.; Parah, S.A. A self-embedding technique
    for tamper detection and localization of medical images for smart-health. Multimed.
    Tools Appl. 2021, 80, 29939–29964. [Google Scholar] [CrossRef] Levy, M.; Amit,
    G.; Elovici, Y.; Mirsky, Y. The security of deep learning defences for medical
    imaging. arXiv 2022, arXiv:2201.08661. [Google Scholar] Chui, M.; Evers, M.; Manyika,
    J.; Zheng, A.; Nisbet, T. The bio revolution: Innovations transforming economies,
    societies, and our lives. In Augmented Education in the Global Age; Routledge:
    Abingdon, UK, 2023; pp. 48–74. [Google Scholar] Albahri, A.; Duhaim, A.M.; Fadhel,
    M.A.; Alnoor, A.; Baqer, N.S.; Alzubaidi, L.; Albahri, O.; Alamoodi, A.; Bai,
    J.; Salhi, A.; et al. A systematic review of trustworthy and explainable artificial
    intelligence in healthcare: Assessment of quality, bias risk, and data fusion.
    Inf. Fusion 2023, 96, 156–191. [Google Scholar] [CrossRef] Arshad, S.; Arshad,
    J.; Khan, M.M.; Parkinson, S. Analysis of security and privacy challenges for
    DNA-genomics applications and databases. J. Biomed. Inform. 2021, 119, 103815.
    [Google Scholar] [CrossRef] [PubMed] Mahajan, A.; Vaidya, T.; Gupta, A.; Rane,
    S.; Gupta, S. Artificial intelligence in healthcare in developing nations: The
    beginning of a transformative journey. Cancer Res. Stat. Treat. 2019, 2, 182–189.
    [Google Scholar] [CrossRef] Samori, I.A.; Palmer, X.L.; Potter, L.; Karahan, S.
    Commentary on Biological Assets Cataloging and AI in the Global South. In Proceedings
    of the Intelligent Systems and Applications: Proceedings of the 2022 Intelligent
    Systems Conference (IntelliSys), Amsterdam, The Netherlands, 1–2 September 2022;
    Springer: Berlin, Germany, 2022; Volume 3, pp. 734–744. [Google Scholar] Powell,
    E.; Akogo, D.; Potter, L.; Palmer, X.L. Co-leadership and Cross-pollination of
    University and DIY Bio Spaces: An Exploration in Consideration of Biocybersecurity.
    In Proceedings of the Future Technologies Conference (FTC), Vancouver, BC, Canada,
    28–29 November 2021; Springer: Berlin, Germany, 2022; Volume 3, pp. 610–621. [Google
    Scholar] 247 Crypto. JPMorgan becomes First Bank to enter Metaverse Launching
    Virtual Lounge in Decentraland. 2022. Available online: https://24-7-crypto.com/jpmorgan-enter-metaverse-onyx-lounge-decentraland/
    (accessed on 3 January 2023). Kumar, M.; Chand, S. MedHypChain: A patient-centered
    interoperability hyperledger-based medical healthcare system: Regulation in COVID-19
    pandemic. J. Netw. Comput. Appl. 2021, 179, 102975. [Google Scholar] [CrossRef]
    [PubMed] Sneha, S.; Panjwani, A.; Lade, B.; Randolph, J.; Vickery, M. Alleviating
    challenges related to FDA-approved medical wearables using blockchain technology.
    IT Prof. 2021, 23, 21–27. [Google Scholar] [CrossRef] West, R.M.; Gronvall, G.K.
    CRISPR Cautions: Biosecurity implications of gene editing. Perspect. Biol. Med.
    2020, 63, 73–92. [Google Scholar] [CrossRef] [PubMed] Bao, J.; Ma, Y.; Ding, M.;
    Wang, C.; Du, G.; Zhou, Y.; Guo, L.; Kang, H.; Wang, C.; Gu, B. Preliminary exploration
    on the serum biomarkers of bloodstream infection with carbapenem-resistant Klebsiella
    pneumoniae based on mass spectrometry. J. Clin. Lab. Anal. 2021, 35, e23915. [Google
    Scholar] [CrossRef] Bush, J.; Hu, C.H.; Veneziano, R. Mechanical properties of
    DNA hydrogels: Towards highly programmable biomaterials. Appl. Sci. 2021, 11,
    1885. [Google Scholar] [CrossRef] Al-Husainy, M.A.F.; Al-Shargabi, B.; Aljawarneh,
    S. Lightweight cryptography system for IoT devices using DNA. Comput. Electr.
    Eng. 2021, 95, 107418. [Google Scholar] [CrossRef] Dey, S.; Fan, C.; Gothelf,
    K.V.; Li, J.; Lin, C.; Liu, L.; Liu, N.; Nijenhuis, M.A.; Saccà, B.; Simmel, F.C.;
    et al. DNA origami. Nat. Rev. Methods Prim. 2021, 1, 13. [Google Scholar] [CrossRef]
    Liu, A.P.; Appel, E.A.; Ashby, P.D.; Baker, B.M.; Franco, E.; Gu, L.; Haynes,
    K.; Joshi, N.S.; Kloxin, A.M.; Kouwer, P.H.; et al. The living interface between
    synthetic biology and biomaterial design. Nat. Mater. 2022, 21, 390–397. [Google
    Scholar] [CrossRef] Li, Y.C.; Zhang, Y.S.; Akpek, A.; Shin, S.R.; Khademhosseini,
    A. 4D bioprinting: The next-generation technology for biofabrication enabled by
    stimuli-responsive materials. Biofabrication 2016, 9, 012001. [Google Scholar]
    [CrossRef] [PubMed] Bilooei, S.F.; Jovicevic, D.; Iranzadeh, A.; Thomas, A.; Muscat,
    I.; Mpofu, C.; Steiner, H.; Meany, T. Rapid genome surveillance of SARS-CoV-2
    and study of risk factors using shipping container laboratories and portable DNA
    sequencing technology. medRxiv 2022. medRxiv:2022-02. [Google Scholar] Rahman,
    A.; Hossain, M.S.; Alrajeh, N.A.; Alsolami, F. Adversarial examples—Security threats
    to COVID-19 deep learning systems in medical IoT devices. IEEE Internet Things
    J. 2020, 8, 9603–9610. [Google Scholar] [CrossRef] [PubMed] Girgis, S.T.; Adika,
    E.; Nenyewodey, F.E.; Senoo Jnr, D.K.; Ngoi, J.M.; Bandoh, K.; Lorenz, O.; van
    de Steeg, G.; Nsoh, S.; Judge, K.; et al. Nanopore sequencing for real-time genomic
    surveillance of Plasmodium falciparum. bioRxiv, 2022; bioRxiv:2022-12. [Google
    Scholar] Gault, M. The Plan to Put Bitcoin in Mouse DNA with a Genetically Engineered
    Virus. 2022. Available online: https://www.vice.com/en/article/5dg5az/the-quest-to-put-bitcoin-in-mouse-dna-with-a-genetically-engineered-virus
    (accessed on 3 January 2023). Disclaimer/Publisher’s Note: The statements, opinions
    and data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2023 by
    the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Affia, A.-a.O.; Finch, H.; Jung, W.; Samori, I.A.; Potter,
    L.; Palmer, X.-L. IoT Health Devices: Exploring Security Risks in the Connected
    Landscape. IoT 2023, 4, 150-182. https://doi.org/10.3390/iot4020009 AMA Style
    Affia A-aO, Finch H, Jung W, Samori IA, Potter L, Palmer X-L. IoT Health Devices:
    Exploring Security Risks in the Connected Landscape. IoT. 2023; 4(2):150-182.
    https://doi.org/10.3390/iot4020009 Chicago/Turabian Style Affia, Abasi-amefon
    Obot, Hilary Finch, Woosub Jung, Issah Abubakari Samori, Lucas Potter, and Xavier-Lewis
    Palmer. 2023. \"IoT Health Devices: Exploring Security Risks in the Connected
    Landscape\" IoT 4, no. 2: 150-182. https://doi.org/10.3390/iot4020009 Article
    Metrics Citations Crossref   4 Scopus   4 Google Scholar   [click to view] Article
    Access Statistics Article access statistics Article Views 28. Dec 7. Jan 17. Jan
    27. Jan 6. Feb 16. Feb 26. Feb 7. Mar 17. Mar 0k 2k 4k 6k 8k For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   IoT, EISSN 2624-831X, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: IoT
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'IoT Health Devices: Exploring Security Risks in the Connected Landscape'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Menegon J.
  - da Silva Filho L.C.P.
  citation_count: '7'
  description: With the advent of the fourth Industrial Revolution, sensors, machines,
    tools, and intelligent systems became connected and can interact with each other
    along the production chain. Such changes tend to increase productivity, as well
    as to promote changes in the workforce profile, and intensify competitiveness.
    The construction industry, however, has not kept up with other sectors in terms
    of adding technologies to its processes. Among other reasons, the lack of understanding
    about how technologies can be helpful to the industry is one of the main factors
    hindering the adoption. The aim of this work is, therefore, to analyze how the
    changes driven by the so-called Industry 4.0 can impact the construction industry.
    A Systematic Literature Review was conducted to identify the technology trends
    discussed and analyzed by the academy in the last years. We grouped the technologies
    according to their similarity and analyzed which phase of the construction lifecycle
    they could mainly impact. The results provide an essential overview of the vectors
    that may transform the industry in the coming years. It is possible to see that
    technologies such as BIM, along with other virtual environment concepts, and 3D
    Printing are subjects with great expressiveness among the selected papers. Also,
    the planning and management phase tends to be most revolutionized by introducing
    new technologies, followed by the construction stage. This work can contribute
    to developing an innovative vision and culture within the construction industry.
  doi: 10.1007/s40996-022-00989-5
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Iranian Journal of Science
    and Technology, Transactions of Civil Engineering Article The Impact of Industry
    4.0 Concepts and Technologies on Different Phases of Construction Project Lifecycle:
    A Literature Review Review Paper Published: 17 December 2022 Volume 47, pages
    1293–1319, (2023) Cite this article Download PDF Access provided by University
    of Nebraska-Lincoln Iranian Journal of Science and Technology, Transactions of
    Civil Engineering Aims and scope Submit manuscript Julia Menegon & Luiz Carlos
    Pinto da Silva Filho   807 Accesses 5 Citations Explore all metrics Abstract With
    the advent of the fourth Industrial Revolution, sensors, machines, tools, and
    intelligent systems became connected and can interact with each other along the
    production chain. Such changes tend to increase productivity, as well as to promote
    changes in the workforce profile, and intensify competitiveness. The construction
    industry, however, has not kept up with other sectors in terms of adding technologies
    to its processes. Among other reasons, the lack of understanding about how technologies
    can be helpful to the industry is one of the main factors hindering the adoption.
    The aim of this work is, therefore, to analyze how the changes driven by the so-called
    Industry 4.0 can impact the construction industry. A Systematic Literature Review
    was conducted to identify the technology trends discussed and analyzed by the
    academy in the last years. We grouped the technologies according to their similarity
    and analyzed which phase of the construction lifecycle they could mainly impact.
    The results provide an essential overview of the vectors that may transform the
    industry in the coming years. It is possible to see that technologies such as
    BIM, along with other virtual environment concepts, and 3D Printing are subjects
    with great expressiveness among the selected papers. Also, the planning and management
    phase tends to be most revolutionized by introducing new technologies, followed
    by the construction stage. This work can contribute to developing an innovative
    vision and culture within the construction industry. Similar content being viewed
    by others Literature review of Industry 4.0 and related technologies Article 24
    July 2018 A critical review of 3D printing in construction: benefits, challenges,
    and risks Article 10 March 2020 Integrating BIM and AI for Smart Construction
    Management: Current Status and Future Directions Article 03 November 2022 1 Introduction
    All sectors of contemporary society have been somehow impacted by the so-called
    fourth Industrial Revolution (IR). After the advent of mechanization, electricity,
    and digitalization, the use of the Internet, combined with new technologies, tends
    to be the focus of a new paradigm shift in industrial production (Lasi et al.
    2014). With the introduction of information technology in the production process,
    sensors, machines, tools, and intelligent systems connect and interact with each
    other along the production chain. Such a change of perspective tends to trigger
    an increase in productivity and economic and industrial growth, as well as promote
    changes in the workforce profile and intensify competitiveness, both for companies
    and the regions in which they operate (Rubmann et al. 2015). According to Rüßmann
    et al. (2015), the movement has taken root in the manufacturing industry under
    the name Industry 4.0. Still, it is spreading and changing the dynamics of many
    fields, from education to finance. It is estimated that within German manufacturing,
    a leading nation in innovation, the fourth IR could mean 5 to 8% in productivity
    gains and revenue growth of around 30 billion euros per year. Furthermore, a 6%
    increase in job creation is expected in the country between 2015 and 2025 (Rubmann
    et al. 2015). The connection between the physical environment, to which sensors
    and actuators are added, and an Internet network is the basis of Industry 4.0
    so that the various devices can interact with each other (Kamble et al. 2018),
    collect information, and assist in decision-making. For Rubmann et al. (2015)
    and Kagermann (2015), it is in this interaction that the transforming power of
    Industry 4.0 is placed. Frank et al. (2019) classified Industry 4.0 technologies
    into two layers: front-end and base technologies. According to the authors, base
    technologies, such as IoT, Cloud Computing, Big Data, and Data Analytics, connect
    and make the front-end technologies smart, enabling Industry 4.0. Front-end technologies,
    in turn, are those related to operational activities and market needs. These are
    composed of four dimensions of technologies, called \"Four smarts\" by Frank et
    al. (2019): (1) Smart Manufacturing, related to intelligent production and transformation
    activities; (2) Smart Products, which refers to final products with embedded technology
    and can be associated with their offer to customers; (3) Smart Working, related
    to technologies that support the activities carried out by workers, both in terms
    of operational activities and management, planning and supervision (Meindl et
    al. 2021); and (4) Smart Supply Chain, which includes tools related to supply
    chain integration and communication between different agents involved. Dimensions
    1 and 3—smart manufacturing and work—are considered internal to the companies,
    while dimensions 2 and 4—smart product and supply chain—are responsible for the
    external integration of the company with customers and suppliers (Meindl et al.
    2021). Regarding the construction industry, despite its size and importance to
    the economy, the sector has not kept up with the speed of other large sectors
    in terms of adding technologies capable of contributing to the productivity and
    quality of its processes (Hampson et al. 2014). Historically, the construction
    industry tends to hesitate to implement new technologies. The sector usually waits
    for consolidation and only starts to transfer practices after they have already
    been tested and proved successful in other industrial sectors (Dubois and Gadde
    2002; Hampson et al. 2014). The greater resistance to change in the construction
    market is a behavior reported in several surveys (Mcgibbon et al. 2018; Meng et
    al. 2020; Niu et al. 2017; Zaker and Coloma 2018; Zekavat et al. 2015). Such a
    characteristic may be related to the specificity and complexity of the construction
    sector. The construction value chain consists of diverse and numerous collaborators,
    often small and medium-sized companies, which must be coordinated and managed
    (Hampson et al. 2014). Combined with the typical peculiarities of the industry,
    in which many projects are unique and specific, this organization gives rise to
    a diffuse and cautious industry, in which the objectives of those involved are
    rarely clear and aligned. Additionally, the number of resources allocated to Research
    and Development (R and D) in the area of both materials and construction is usually
    modest for the size of the sector, which implies a scarcity of paths and consolidated
    alternatives for innovation and technological progress in the construction industry
    (Oesterreich and Teuteberg, 2016). This fact is a clear limiting factor for innovation
    in the construction industry since investment in R and D is a recognized key to
    the industry''s economic, productive, and technological growth (Hampson et al.
    2014). Even though, some technological development can already be observed in
    the construction market, reaching all phases of a construction project, from design
    to construction and management phases (Porto and Kadlec 2018). Porto and Kadlec
    (2018) argue that there is a growing interest in the market in automating the
    manufacturing of construction elements, an approach that, according to them, can
    add speed and quality control to works. Pereira (2019) mentions that \"smart\"
    technologies and the use of sensors can facilitate the monitoring and supervision
    of construction works, providing data and performance indicators that enable monitoring
    activities and support decision-making. In line with these positions, a report
    on promising technologies for the construction industry, produced by the World
    Economic Forum (2018), points out that connected sensors, smart construction equipment,
    mobile devices, and the use of apps can not only improve productivity, manage
    complexity, reduce delays and additives, but also ensure quality and safety for
    the construction sector. Studies must be conducted to consolidate initiatives
    in the construction sector since the essential knowledge and skills to adapt innovation
    to new scenarios vary according to the geographic location and the peculiarities
    of the involved industry (Schwab 2016). In this way, it is necessary to reflect
    on the context in which the concepts and innovations will be applied; otherwise,
    excess technologies can be adopted and may cause an increase in the complexity
    and disconnection of information (Dallasega et al. 2018; Global Industry Council
    2018). Therefore, academic research can shorten the path to consolidating innovations
    in the construction industry and clarify the steps to be taken and the benefits
    obtained from new technologies. This knowledge is pivotal for the construction
    industry not being left behind in the digital transformation. Part of the challenge
    of transforming the vision into reality is understanding which changes are more
    mature, how we can incorporate them into the construction process, and which phases
    will be affected the most by the digital transformation. With this in mind, the
    following research question was stated: \"How are fourth IR technologies being
    addressed in the construction industry?\". Thus, this study aims to identify which
    technologies are mostly addressed to the construction industry worldwide and which
    phases and dimensions of the construction lifecycle they can mainly affect. Three
    steps were taken to aid in achieving the research aim: To understand which fourth
    Industrial Revolution technologies and concepts are primarily associated with
    the construction industry; To check the status of research on construction innovation
    from 2015 to 2021; To examine the application of new technologies in different
    lifecycle phases of a construction project. To this end, a Systematic Literature
    Review (SLR) was carried out, seeking to identify the trends mainly addressed
    by academia, as well as the usage expectations associated with each of them. We
    grouped the trends according to their similarities and correlations and analyzed
    which phase of the construction lifecycle it could impact, assessing the intensity
    of this impact as well. This paper explains how technologies can contribute to
    increasing productivity, quality, and efficiency of construction projects, specifying
    which stages are receiving the most attention regarding adopting innovations.
    The results provide an important overview of the vectors that may influence the
    industry in the coming years and elucidate the current opportunities for the construction
    sector. 2 Systematic Review Protocol As shown in Fig. 1, the SLR was carried out
    using a four-step approach: search, appraisal, synthesis, and analysis, following
    the recommendations of Booth et al. (2016). Fig. 1 Overview of the literature
    review and research process Full size image To start the search stage, a general
    research protocol was created to systematize and reduce bias. Initially, the main
    search terms were established by extracting the words from the research question
    stated previously. The root terms \"construction\" and \"fourth industrial revolution\"
    were chosen, together with the alternative terms \"construction industry\", \"industry
    4.0\", and \"new technology\". Boolean operators, such as OR and AND, were used
    to define the query applied in this first phase, which was expressed as (\"new
    technology\" OR \"fourth industrial revolution\" OR \"industry 4.0\") AND (\"construction\"
    OR \"construction industry\"). A second search was also conducted with the term
    \"construction 4.0\". In addition to the search terms, a 7-year time-lapse was
    established to restrict the results to contemporary times. Articles published
    between 2015 and 2021 were selected. The search was limited to articles written
    in English, aiming to reduce the language barrier and the risk of mistranslation
    during the content analysis. Exclusion and inclusion complementary criteria were
    adopted to avoid book chapters and restrict the search to engineering scope at
    platforms where this filter was available. The search was applied to the following
    databases using the established protocol: Web of Science; ScienceDirect; Springer;
    ASCE; Sage; Emerald; and Scopus. The databases were chosen due to their multidisciplinarity
    and relevance within the civil engineering scope. The option for several databases
    was to increase the search scope, thus making it possible to reach a more significant
    number of published works. The search returned about seven thousand titles by
    using the keywords and filters abovementioned. Once the search was done with the
    terms and criteria mentioned above, the files with the most significant adherence
    to the study''s theme were selected based on reading the titles. For the databases
    that returned a high quantity of publications (i.e., Springer, ASCE, Emerald,
    and Scopus), the results obtained in the first ten pages of the search, sorted
    by relevance, were analyzed. This decision was based on the adherent works becoming
    scarce from this page, with the search returning many papers unrelated to the
    construction scope. At the end of this selection, 883 articles remained for the
    subsequent phases. In possession of the selected articles, a repetition analysis
    was performed, discarding those selected with duplicity. This repetition check
    eliminated one hundred twenty-three articles, leaving 760 papers. For the remaining
    articles, the appraisal step was started. The abstracts were read to evaluate
    the quality and ratify the adherence to the searched needs. In this phase, only
    papers referring to new technologies applied to the construction industry were
    included, eliminating eventual noise, like papers focused on other engineering
    fields. Once the evaluation stages were concluded, it was possible to reach an
    initial selection of 493 articles, which made it possible to begin the results
    synthesis phase. In this phase, the papers were categorized according to their
    main subject (technology or concept) and based on the stage of the construction
    lifecycle they could impact considering the content of the text. The fourth IR
    technologies and concepts which, according to Oesterreich and Teuteberg (2016),
    have been predominant in the construction field were the basis for the papers’
    classification. These concepts are described in Table 1. It is important to mention
    that some concepts are merged into the initial classification of Oesterreich and
    Teuteberg (2016), e.g., the concept of Blockchain was classified together with
    Big Data, and devices like Laser Scanning are classified within Robotic and Drones.
    Table 1 Prevailing Industry 4.0 technologies and concepts in construction. Full
    size table The data obtained from this classification were quantified, graphed,
    and analyzed. Regarding this information, a final trial occurred, selecting papers
    specifically related to the main construction lifecycle phases: design, planning
    and management (P and M), construction, maintenance, and material supply. Papers
    related to the briefing phase, design choices and coordination, and design activities
    were classified within the Design phase. The P and M phase encompasses papers
    related to both progress monitoring, contract management, and lean construction,
    among others. In the Material Supply phase, those works related to the logistics,
    transportation, and storage of materials were considered. The construction phase
    includes papers that associate technologies with building tasks and could change
    or impact the way to build. Finally, the maintenance phase includes activities
    related to post-construction, such as structural inspections, retrofits, and sensing
    monitoring. Articles related to security, infrastructure, technology adoption
    and acceptance, energy management, and smart cities, for example, were left aside,
    in addition to those that address the concepts in a general manner, without reference
    to the aforementioned specific construction stages. From this selection, 228 papers
    remained. Some data were extracted from the remaining papers to complete the synthesis
    phase. First, information about the authors, year, type (conference proceedings
    or journal articles), and country of publication of the research articles were
    collected. The author''s keywords were assessed as well. Resorting to the Dutch
    software VOSviewer, a keyword map was generated, presenting the main keywords
    and their relations with each other. Finally, the results were analyzed, and the
    outcomes were exposed hereafter. 3 Main Findings 3.1 Year of Publication The survey
    of the information about the year of publication of the articles denotes a significant
    increase in the number of papers published in recent years (Fig. 2). More than
    two-thirds of the selected articles (69%) were published from 2019, which indicates
    a growing trend of interest in the absorption of new technologies by the construction
    industry. It is worth noting the significant increase in the number of papers
    attributed to the year 2020, which almost doubled the number of papers published
    in the previous year. Fig. 2 Year of publication Full size image 3.1.1 Type of
    Publication Articles published in event proceedings were included in the search
    aiming to cover more recent and updated studies, given the dynamic nature of this
    type of publication. Thus, the number of selected items corresponding to each
    publication type was evaluated: journal articles and conference proceedings. As
    can be seen in Fig. 3, more than half of the articles in the selection (68%) were
    published in journals, while 32% came from conference proceedings. Fig. 3 Type
    of publication Full size image One event and one journal appear as the primary
    sources of the papers selected for this study: Construction Research Congress
    and Automation in Construction, with 13 articles each. Next, we have the Journal
    of Construction Engineering and Management, with eleven articles (Fig. 4), followed
    by the International Conference on Construction and Real Estate Management (ICCREM),
    with eight papers. These data are fundamental to understanding the significant
    sources of information on the theme in focus. Fig. 4 Events/journals of publication
    Full size image 3.1.2 Publications by Country The authors'' affiliation was another
    information extracted from the papers to highlight the countries with the higher
    number of research contributions. Authors from 38 different countries around the
    world were identified. As it can be seen in Fig. 5, researchers affiliated with
    USA institutions wrote the majority of papers: 42 out of the 228 selected papers.
    In second place is China, contributing 37 articles, followed by Australia and
    Italy, with 29 and 20 articles, respectively. Other European countries contributed
    to 74 articles, which makes the European continent the origin of most of the selected
    studies. This factor may be related to the region''s high development and its
    protagonist role in Industry 4.0, with Germany as the cradle of the current industrial
    revolution (Kagermann et al. 2013; Lasi et al. 2014). Fig. 5 Country of origin
    of the study Full size image It is also possible to see that Latin America and
    Africa are the continents with the fewest contributions to this literature review,
    with only three and five articles, respectively. Such numbers corroborate the
    need for research development in these regions, aiming at adapting evolving concepts
    and technologies to local realities. 3.1.3 Author''s Keywords Based on the author''s
    keywords, a map was created through the Dutch software VOSviewer (Fig. 6). The
    map considers words with at least two occurrences and arranges them according
    to the link strength. By this image, it is possible to realize the central role
    of \"Building Information Modeling (BIM)\" in the digitization process of the
    construction industry. Besides being the keyword with the highest number of occurrences
    (53), their positioning in the center of the map is noteworthy, considering the
    strong relationships with the vast majority of the other selected words. Another
    term with high occurrence is \"industry 4.0\", followed by \"additive manufacturing\",
    which shows the interest of the academia in this technology. The software automatically
    grouped the keywords that make up the map, considering their co-occurrence and
    interrelationship. Fig. 6 Map of keywords Full size image 3.1.4 Industry 4.0 Technologies
    and Concepts With the final list of articles selected for analysis in hand, it
    was identified each one''s technologies and concepts related to Industry 4.0.
    From this, the data in Fig. 7 were obtained, evidencing the predominance of BIM
    over other concepts. It is noteworthy that the same article may address more than
    one of the listed topics, i.e., a single article may address the use of BIM as
    a facilitator of 3D printing of buildings; then, this article will be counted
    in both \"BIM\" and \"Additive Manufacturing\" categories. Thus, the sum of the
    percentages in Fig. 7''s graph will be more than 100%. Fig. 7 Concepts and technologies
    addressed by the articles Full size image The second most observed subject in
    the selected papers is additive manufacturing, which was addressed in 14.9% of
    the articles and is another interesting trend in construction industry research.
    The next topic is \"Simulation and Modeling\", appearing in 14.0% of the papers.
    Other subjects addressed in more than 10% of the articles are \"Prefabrication
    and Modularization\" (11.8%), \"Sensors and Cyber-Physical Systems (CPS)\" (11.4%),
    and \"Robotics and Drones\" (10.1%). The authors grouped the concepts and technologies
    listed above into five clusters according to their application similarities, as
    shown in Table 2. Concepts related to the use and storage of data were classified
    as \"Data Intelligence\". At the same time, those technologies that contribute
    to the virtualization of tasks were grouped as a \"Virtual Environment\" cluster,
    which is the biggest one. The concepts of robotic/drones and automation that carry
    out or enhance traditional engineering tasks were grouped, as were the concepts
    that have the potential to industrialize the construction site: additive manufacturing
    and prefabrication and modularization. Finally, the cluster \"Smart Objects and
    Technologies\" encompasses technologies that capture and transfer data between
    objects, devices, and operators to turn ordinary objects into smart ones. The
    following section explains more about each of the clusters and their usage. Table
    2 Clusters of concepts Full size table 3.1.5 Construction Lifecycle Phases Impacted
    by the Technologies Another piece of information obtained from the selected references
    concerns the construction phases impacted by each of the technologies and concepts
    listed in the previous item. This information was obtained by reading the titles
    and abstracts of the articles, aiming to understand their approach and identify
    the practical application adopted or suggested for each concept or technology
    in question. With this strategy, it was observed that most of the articles address
    technologies or concepts that can impact the planning and management (P and M)
    phase (37.3%), followed by the construction stage, which represents 32,5% of the
    papers (Fig. 8). Design and maintenance stages are the next, addressed, respectively,
    by 21.5 and 19.7% of the articles. Papers related to material supply (2,6%) are
    less expressive. Again, the same article may be related to more than one stage
    and, therefore, the sum of the percentages will be more than 100%. Fig. 8 Percentage
    of articles related to each construction lifecycle phase Full size image The significantly
    higher number of papers related to P and M compared to the design phase, even
    though BIM is the predominant technology, is justified by the growing approach
    of this tool as a management and planning facilitator rather than just as a new
    way to design. This fact is coupled with the strong focus of other Industry 4.0
    technologies and concepts on optimizing production processes through digitization,
    which is closely linked to planning. The result is in line with previous work,
    which claims that the Construction 4.0 drivers are mostly applied in pre-construction
    phases (Begic and Galic 2021). 4 Impact of IR 4.0 Technologies and Concepts in
    the Construction Phases The application context given by the authors for technologies
    and concepts arising from fourth IR were explored hereafter. The articles were
    analyzed to understand how these technologies can impact construction stages.
    Each cluster and its concepts are explored below. Table 3 comprises the selected
    papers and places them according to the technology and phase of the construction
    project lifecycle they are aligned. Additionally, the construction phases impacted
    by each technology or concept were organized as images to facilitate the results
    visualization (Figs. 9, 10, 11, 12 and 13). The central circle indicates the technology
    or concept analyzed, while the peripheral circles represent the phases related
    to such concepts. The dimensions of the surrounding circles are proportional to
    the number of articles addressed to each stage so that larger circles represent
    the greater focus on the use of technology at that construction lifecycle phase.
    In this way, it is possible to visualize the number of articles that mention the
    use of, for example, BIM in each construction phase. Table 3 Studies related to
    different technologies and phases of the construction lifecycle Full size table
    Furthermore, the four dimensions of industry 4.0, according to the classification
    of Frank et al. (2019)—work, manufacturing, supply chain, and product—are analyzed
    for the different clusters, aiming to identify which dimensions are being addressed
    by the researches and introduce these concepts to the context of the construction
    sector. 4.1 Cluster 1: Data Intelligence The first cluster refers to technologies
    that use and store data in the construction industry and encompass technologies
    considered as base concepts for Industry 4.0 (Frank et al. 2019). The articles
    related to this cluster, as seen in Fig. 9, mention the use of technologies in
    different stages of an engineering project precisely because they are considered
    fundamental for conducting the fourth Industrial Revolution. The design, P and
    M, and maintenance phases appear with a little more prominence, evidencing the
    ability to integrate different phases of a construction project through data storage
    and sharing. Fig. 9 Data intelligence cluster Full size image The concept of Cloud
    Computing is among this cluster, as it allows the user to store and access a large
    amount of data easily and economically. This technology meets the growing need
    for increasingly powerful computers with greater storage capacity since it can
    access information and even run the software directly from the \"cloud\" (Almaatouk
    et al. 2016). Additionally, the same stored data can be accessed in different
    locations in real-time, eliminating physical and temporal barriers to information
    sharing. This factor allows for simultaneous collaboration between different team
    members and stakeholders, even if they are not in the same environment (Merschbrock
    and Munkvold, 2015). In this sense, concepts such as cloud computing are brought
    into construction with the potential to facilitate the sharing of information
    among stakeholders, improving collaboration among those involved, speeding up
    access to project changes and deadlines and tasks'' data (Afolabi et al. 2017;
    Almaatouk et al. 2016). Merschbrock and Munkvold (2015) present cloud computing
    as a collaborative and simultaneous project development tool, even in different
    geographical locations. The BIM-developed models are kept linked in the cloud
    and synchronized daily so that everyone involved is aware of the changes made
    in that period by the various collaborators. Another approach brings the possibility
    of using cloud computing to store and access information about the behavior of
    concrete structures, which can be remotely monitored from the information collected
    and transferred to cloud storage systems (Zhang et al. 2019a). Associated with
    Cloud Computing, we have Big Data, which plays a crucial role in managing the
    enormous amount of data generated all time. Big Data solutions seek to assist
    in collecting and selecting relevant information within the universe of available
    data, doing this quickly, efficiently, and securely (Oesterreich and Teuteberg
    2016). With the aid of Big Data analytics, statistics, and machine learning, it
    is possible, from a database, to simplify the search and choice between different
    engineering project alternatives, as well as evaluate, among other parameters,
    the energy efficiency and construction costs of a residence, for example, considering
    the multiple project possibilities in a quick and automated way, through a kind
    of catalog with an accessible interface for users (Bianconi et al. 2019). Such
    an advance would make it possible to customize homes even in cases of mass production.
    Still, in the context of data use, Perera et al. (2020) present an evaluation
    of the potential of Blockchains in the construction industry. According to the
    authors, these decentralized databases can be used in various ways by the construction
    industry, as they create an immutable, traceable, secure, and accurate history
    of changes and transactions that are not tied to any external administrator. These
    points are noted as positive, especially regarding public procurement, as they
    provide transparency to the transactions. The authors mention the possibility
    of making automated payments for services and materials without needing third-party
    participation, such as banks, reducing delays and deviations in invoicing. In
    addition, Blockchains can be used in asset management and maintenance, generating
    a history of all data related to building or infrastructure works. It makes it
    possible to track suppliers, consult interventions throughout the construction''s
    life cycle, and record and monitor maintenance requests, among others (Perera
    et al. 2020). Finally, within this cluster was included the concept of Product
    Lifecycle Management (PLM), which uses collected and stored data to integrate
    the information about a product throughout its life cycle, from pre-design to
    decommissioning or retrofit (Sudarsan et al. 2005). The use of data generated
    and stored, especially through the use of BIM, has the potential to facilitate
    the management throughout the life cycle of a building. This reality is becoming
    more tangible as the knowledge about managing and using the data originated in
    the design and construction phases in the asset operation and management phases
    mature. Hilal et al. (2019), for example, developed a conceptual model to identify
    critical factors for BIM adoption in the context of Facility Management (FM)—a
    set of multidisciplinary initiatives to improve the efficiency and productivity
    of users, as well as the way how they interact with the built environment (ISO
    2018). Terreno et al. (2016), in turn, evaluated the benefits and challenges of
    BIM/FM integration through three case studies. Both works propose to take advantage
    of information and data about building facilities stored through BIM throughout
    the design and construction phases to improve traditional building management
    processes during operation. 4.2 Cluster 2: Robotics and Automation This cluster,
    as its name suggests, encompasses both technologies of construction processes
    robotization and automation. These concepts are closely related and interconnected
    and tend to optimize conventional engineering tasks, which currently require a
    large amount of skilled labor (Bogue 2018). This way, such technologies can make
    construction easier, more efficient, safer, and more attractive (Oesterreich and
    Teuteberg 2016). The concept of robotics is mainly presented in the selected works
    related to smart work and smart manufacturing activities and is mostly linked
    to the construction and maintenance stages. On the other hand, automation appears
    with a more significant potential to impact the construction phase of the building
    life cycle, which shows the focus of the literature on using this technology as
    a support for smart manufacturing (Fig. 10). Fig. 10 Robotics and automation cluster
    Full size image Robotics area includes the use of devices, such as Unmanned Aerial
    Systems (UAS) and Unmanned Aerial Vehicles (UAV), also known as drones, which
    have their use widespread in recent years and present themselves as a technology
    with the potential to play an important role in the construction industry (Bogue
    2018). Several authors (Álvares et al. 2018; Blinn and Issa 2016; Bogue 2018;
    D''Auria et al. 2018; Heesom et al. 2020; Leaverton 2015; Siwiec 2019; Zhou et
    al. 2018) point out the potential of UAVs and drones, as well as the aerial imagery
    that can be obtained from their use, to enable and facilitate engineering services,
    such as construction and asset management, and inspection and maintenance of buildings
    and infrastructure work. There is also the approach of using robotics to replace
    human labor in everyday tasks, such as in the execution of masonry walls (Bruckmann
    et al. 2018), assembly of prefabricated parts (Mcmeel 2019; Moon et al. 2020;
    Reinhardt et al. 2020) and in welding of machinery parts (Hu 2019), in addition
    to the aid of robotics in the design phase of buildings (Jensen et al. 2020).
    Given the need to automate current construction processes of infrastructure works,
    there are emerging solutions, such as those presented by Hassan et al. (2019)
    and Zhang et al. (2019). Hassan et al. (2019) present resources to ensure the
    maintenance of concrete quality during its transport, with the help of sensors
    that monitor both the temperature and humidity of the mixture and give information
    about the weather and traffic on the route. Based on these data, water sprinkling
    and cooling systems are activated whenever necessary to maintain the required
    concrete properties until the pouring stage. Zhang et al. (2019) approach this
    monitoring in dam construction, where parameters can be controlled to ensure the
    quality of the concreting of Roller Compacted Concrete dams, such as the cement
    paste addition content and vibration level control. The articles also address
    the automation of project and shop drawings, steel structure assembly inspection,
    concrete structure formwork manufacturing, and 3D printing enabling (Chen et al.
    2020; Dai et al. 2020; Din et al. 2020; Feucht et al. 2020; Martinez et al. 2020;
    Moon et al. 2020). 4.3 Cluster 3: Virtual Environment The third cluster deals
    with virtual environment technologies and covers over half of the articles selected
    in this study (52.6%). Through Fig. 11, it is possible to observe that the impact
    of Cluster 3 technology covers different construction stages, from design to building
    maintenance. Both design and P and M phases stand out and are strongly linked
    to the use of BIM and simulation and modeling. Fig. 11 Virtual environments cluster
    Full size image Technologies in this group have a solid potential for support
    workers in the design, P and M, and construction stages. Therefore, they can be
    related to the dimension of smart work. Also, given their potential contribution
    to the production processes optimization, e.g., clash detection and resource management,
    they can help implement smart manufacturing too. BIM has a great potential to
    impact supply chain integration, serving as a collaborative platform between different
    stakeholders. However, it is necessary to focus on information sharing between
    the different parties so that the intelligent supply chain becomes a reality.
    Until then, this is not the dimension most explored in the literature, requiring
    more attention. This cluster encompasses the central theme of this paper, BIM,
    which is considered the driver of the digital advance in construction. This tool
    has been the centralization of the information generated and accumulated at each
    stage of the construction process. It is related somehow to all other technologies
    and concepts listed here. Its application comprehends the most diverse topics
    in the selected articles, from the most traditional ones, such as design phase,
    conflict checking, and three-dimensional visualization (e.g., Gilemkhanov et al.
    2018; Ma and Ma, 2017; Merschbrock and Munkvold 2015; Yan et al. 2015; Zhang et
    al. 2018, etc.), including its capabilities for project management and planning,
    maintenance, and asset inspection (Chan et al. 2016; Heigermoser et al. 2019;
    Hilal et al. 2019; Li et al. 2019; Marchini and Patzlaff 2016; Szelag 2019), its
    use as a crucial part in the implementation of other innovations, such as 3D printing
    (Gradeci and Labonnote 2019; Sakin and Kiroglu 2017), Virtual Reality (Vr) (Yang
    et al. 2016), and the automating of manufacturing and assembly of prefabricated
    parts (Li and Yang 2017; Sabet and Chong 2019; Schimanski et al. 2019). Other
    authors (Guo et al. 2016; Ma and Ma 2017) evaluate the use of BIM associated with
    the Integrated Project Delivery (IPD) concept, a new contracting model that emphasizes
    cooperation and information exchange among stakeholders from the beginning of
    the project, encouraging decentralization, collaboration and information exchange
    throughout the project lifecycle. Guo et al. (2016) analyze the use of the two
    concepts in the development of urban area renovation projects. Another concept
    included in this cluster regards Simulation and Modeling, which refers to articles
    that address modeling and reality simulation tools, aiming to predict the behaviors
    and characteristics of the final product and production stages, as well as guiding
    frameworks for both project and resource management. Most of the papers classified
    in this concept present the use of models and simulations as a way to improve
    productivity and performance of the works, either through the previous identification
    of constraints and their possible solutions (Dallasega et al. 2016, 2019b; He
    and Zhang 2016; Li et al. 2015; Teufl et al. 2018; Wang et al. 2017), either by
    simulating and optimizing the allocation and management of resources and materials
    (Afolabi et al. 2017; Li et al. 2018; Wu et al. 2018). Another approach found
    is the use of 3D modeling to facilitate the design choices, based on the simulation
    of the future performance of the building during its use (Bianconi et al. 2019;
    LEE et al. 2018) e a simulação energética de edificações existentes (Cao et al.
    2017; Gong et al. 2019). Furthermore, some papers bring the use of virtual models
    to assist, using sensors attached to the equipment, the execution of earthwork
    and foundation services (Schoonmaker 2017; Tanoli et al. 2018; Tian and Yue 2016),
    or evaluate through simulations the behavior of an existing structure during the
    use, by using real parameters, (Sousa 2020). Although computer models bring countless
    advantages to the construction reality, enabling the complete immersion of the
    stakeholders in the environment to be built is another advance with strong acceptance
    potential. In this sense, both AR and VR concepts, combined with the aforementioned
    tools, complement this group since these technologies enable the creation of virtual
    environments similar to reality, allowing the interaction and visualization of
    situations in real dimensions (Paelke 2014). VR and AR are brought by the articles
    selected in this paper as a facilitator for decision-making in the design, construction,
    and maintenance stages. In this way, the use of VR to guide design choices considers
    the sensations aroused in users when immersed in different virtually-created environments
    (Zou et al. 2019). Through the data on the human body''s responses to different
    designs, it is possible to make more conducive choices to ensure the well-being
    and productivity of users. Balali et al. (2020) use VR to facilitate the choice
    between different interior finishing, considering aesthetics and cost, through
    the immersion of the client in the designed environment. Still, in the design
    stage, VR can potentially assist in detecting conflicts between different systems
    (Musa et al. 2015). In the execution phase, the AR was explored by McMeel (2019)
    as a tool to assist the assembly of prefabricated parts through the projection
    of identification data on the parts, allowing the recognition and facilitating
    its positioning. Abbas et al. (2020), in turn, evaluated the use of AR as a facilitator
    of the rebar inspection tasks before concreting. In the maintenance phase, there
    is the possibility of using this tool to reconstruct damaged historical buildings
    (Perea and de la Prieto 2018) or even to enable remote inspection of structural
    elements employing on-site images and its subsequent virtual reproduction in real
    dimensions (Brilakis 2017; Maharjan et al. 2020; Mascareñas et al. 2020). 4.4
    Cluster 4: Smart Objects and Technologies This cluster covers some of the most
    characteristic technologies of the fourth IR related to data collection, use of
    sensors, and production digitization. The concepts encompassed here often overlap
    and complement each other, considering the articles related to each. This group’s
    tools are linked, above all, to the potential of facilitating P and M and material
    supply phases, assisting in the control of construction stages and the monitoring
    of buildings in use, contributing to their maintenance (Fig. 12). Fig. 12 Smart
    object and technology cluster Full size image According to the papers analyzed,
    this cluster encompasses technologies that could be related to the four dimensions—4
    smarts—of industry 4.0: work, product, manufacturing, and supply chain. It become
    evident for the concept of Sensors and CPS, which carries the great potential
    of the fourth industrial revolution, as it allows the integration of physical
    objects into digital media. Anyway, even though it is possible to identify several
    possibilities for using these technologies during construction activities, the
    use of sensors for the construction phase does not stand out in front of the other
    phases. Therefore, this topic demands attention in future research. On the other
    hand, mobile devices can be associated with smart work because of the potential
    to integrate information from the construction site with other stages of production,
    allowing remote access to construction site information. Finally, this group encompasses
    the concept of IoT, an Industry 4.0 base technology, evidencing the great importance
    of cluster 4 for the digitization of construction. When common physical systems
    are equipped with sensors and devices, it is said that the objects become \"intelligent\"—Smart
    Objects (SMO). Both interaction and information exchange between various smart
    objects constitutes the Internet of Things concept (IoT), which allows communication
    networks between physical media through the Internet (Niu et al. 2019). Physical
    objects'' behavior data, obtained through devices, are exchanged with each other
    and/or with a remote decision-maker (Hassan et al. 2019), which can automatically
    return preset commands or warnings. There are several potential applications of
    these concepts in the construction industry. In the reviewed papers, IoT is addressed
    to automate and optimize execution processes (Al-Saeed et al. 2020; Axelsson et
    al. 2018; Dai et al. 2020); control parameters during a dam concreting (Zhang
    et al. 2019a) and concrete transportation (Hassan et al. 2019); monitor machinery
    to evaluate risks of damage, maintenance need, pollution emission, and noise rates
    (Rane et al. 2019); to manage and control stocks, machinery, equipment, and human
    resources (Niu et al. 2017; Niu et al. 2019); and monitor the behavior of concrete
    structures (Ghosh et al. 2021) and existing buildings and their facilities through
    Digital Twins (Shahinmoghadam and Motamedi 2019). Information is collected and
    transmitted between the different systems and triggers pre-established actions.
    Once these objects with sensors are connected to a command center, connections
    are created between the physical environment and computer systems, resulting in
    the CPS concept. Similar to IoT, the information acquisition by this system serves
    as a guide for decision-making, either automatically or through controllers (Niu
    et al. 2019). Sensors and CPS are linked to many other technologies already mentioned
    and act as enablers of data acquisition and exchange and, consequently, of Industry
    4.0 itself. Within the scope of built assets, they allow the monitoring of existing
    elements, with the ability to identify and monitor settlements of buildings, bridges,
    and structures in general (Angrisani et al. 2017; Terwel et al. 2015; Yi et al.
    2019) and to monitor the structural behavior of various elements to help identify
    damage and potential risks (Ghosh et al. 2021; Maharjan et al. 2020; Wang et al.
    2020a). For the P and M phase, the elements and systems embedded with sensors
    are capable of integrating various technologies (You and Feng 2020), allowing
    construction progress monitoring (Correa 2018; Kan and Anumba 2019), assisting
    in managing tasks (Kereri; Adamtey, 2019) and controlling inventories, supply
    of materials and labor productivity (Calvetti et al. 2020; Chen et al. 2020; Niu
    et al. 2017, 2019; Spisakova and Kozlovska 2020). Sensors are also helpful as
    aids in performing tasks such as earthworks, concreting dams, and compacting paving
    layers (Kassem et al. 2015; Tanoli et al. 2018; Zhang et al. 2019a). Still, this
    group encompasses the Mobile Computing concept, which covers using smartphones
    and tablets as communication and collaboration support tools throughout the production
    cycle (Oesterreich and Teuteberg 2016). According to Chen and Kamara (2011; (Hasan
    et al. 2019b)), there are three main components of mobile computing: mobile devices,
    wireless networks, and applications. In construction, mobiles have been employed
    as quick access tools to design information and three-dimensional models at the
    construction site (Yang et al. 2016), also demonstrating the potential to assist
    managers in collecting and storing site information, managing construction defects
    as well as communicating with stakeholders (Hasan et al. 2019b). The digitization
    concept is also part of this cluster. It can be defined as the capability of transforming
    the production process and the information, previously analog, into digital, through
    information and communication technologies (ICT) (Hess et al. 2016). Hess et al.
    (2016) differentiate it from digitalization, which concerns changes in the business
    model as a whole and transforms the process, products, and organizational structures.
    The articles of this group address the use of various technologies or concepts
    of Industry 4.0 to digitize construction information. The construction digitization
    process benefits data and information acquisition and sharing, which would not
    be possible in the traditional configuration. 4.5 Cluster 5: Advanced Manufacturing
    The last grouping concerns the advances in the way of building itself. This group,
    the second largest in the number of articles, comprises the technologies that
    aim to transform traditional construction methods, mostly handmade, into processes
    with higher industrialization potential. As expected, the Advanced Manufacturing
    cluster concepts show a strong relationship with the construction phase since
    this group includes many papers related to 3D printing, which is directly associated
    with the execution process. Regarding prefabrication, the great relevance of planning
    is noteworthy, given its strong relationship with studies about lean construction
    and new management techniques (Fig. 13). Fig. 13 Advanced manufacturing cluster
    Full size image In this group, we have both prefabrication and modularization,
    old concepts that have been brought to the fore again by the advent of new technologies
    capable of optimizing them. In some works, the different interaction potentials
    of such technologies with prefabrication and modular construction are exposed
    (Darko et al. 2020; Moon et al. 2020; Razkenari et al. 2019; Sabet and Chong 2019;
    Wang et al. 2020b). In others, the practical point of view is approached with
    studies on the use of different materials, parts formats, and assembly methods
    (Bao and Li 2020a; Gallo et al. 2021; Nibhanupudi and Rahul 2020; Odugu and Achuthan
    2020). Also, some works present the application of Industry 4.0 concepts as aids
    in the management of manufacturing and assembly activities of prefabricated elements
    (Dallasega 2018; Dallasega et al. 2019a; Li et al. 2019; Martinez et al. 2020;
    Park and Ock 2016; Schulze and Dallasega 2020; Teufl et al. 2018; Zhang et al.
    2020), as well as topics related to the automation of project design and parametric
    and generative design concepts (Bianconi et al. 2019; Pasetti monizza et al. 2018;
    Schimanski et al. 2019). Another concept within this cluster is Additive Manufacturing,
    which is addressed in more than 15% of the articles. Also known as 3D printing,
    this technology brings the innovation of printing objects in three dimensions
    and has undergone a vertiginous growth in recent years. In construction, it has
    been addressed the possibility of printing both whole buildings and individual
    parts to be assembled later (Porto and Kadlec 2018). Many works on this topic
    are still presented with an exploratory bias, such as analysis of the use potential,
    barriers to be faced, and possible impacts on production chain. Studies about
    the construction costs and time when using this new technology are also discussed
    (Zhang et al. 2019b) (Diggs-Mcgee et al. 2019), as well as studies to characterize
    the materials used in printing (Ogura et al. 2018; Pacewicz et al. 2018) and evaluation
    of mechanical behavior of elements in the hardened state, for design considerations
    (Martens et al. 2018; Sanjayan et al. 2018b). 3D printing is also tested for constructing
    ceramic blocks of various shapes (Paoletti 2017), showing its versatility in meeting
    different architectural design requirements. The technologies of this last group
    can be strongly related to the dimension of Industry 4.0 that concerns Smart Manufacturing,
    as they are essentially linked to the processing and transformation of the final
    product. However, the association of other technologies with the industrialization
    techniques presented here has the potential to transform the other dimensions
    as well, since one of the great difficulties of the construction industry—the
    artisanal character of the work—would previously be remedied with prefabricated
    and modular construction and 3D printing, opening space to direct the focus of
    innovations to other phases of the construction process, such as supply chain
    integration and improvement of the product to be delivered. In general, it can
    be inferred that all concepts and technologies listed in this study are virtually
    related to the P and M stage, which denotes once again the powerful feature of
    Industry 4.0 to bring improvements to the production process as a whole through
    the decentralization of decision-making, attention to the pre-construction phases,
    and real-time monitoring of stages progress. 5 Final Remarks The construction
    industry is admittedly fragmented, and the difficulty of communication and collaboration
    has always represented a significant barrier to its development. In this scenario,
    incorporating innovations to facilitate processes and interaction between stakeholders
    can significantly advance the sector. The World Economic Forum (2017) listed the
    main factors that will guide and allow technological innovation in construction.
    The factors were divided into three stages: the stimulation of innovation, developing
    the necessary culture to accept change, fostering an approach focused on the client
    and his needs, and creating teams qualified to conceive innovations. Overcoming
    these challenges, it is possible to make the ideas listed above real, establishing
    themselves in the market. Therefore, this study sought to contribute to understanding
    the changes in vogue to subsidize the development of innovative vision and culture
    within the construction industry. Thus, it was possible to identify the main trends
    being lectured by researchers worldwide and understand their potential impact
    on the construction chain. It is evident, through the analysis of the year of
    publication of the selected papers, the growing interest of researchers on the
    subject in recent years, which reflects an increasing need of the construction
    industry for innovative solutions that bring improvements to their processes.
    Moreover, most of the papers in this literature review present exploratory studies,
    denoting a still incipient potential of these technologies. The importation of
    technologies and concepts of the Fourth Industrial Revolution to the construction
    industry is, therefore, in the development and maturation phases, requiring further
    studies, especially from a practical point of view. Another factor that draws
    attention is the small participation of research from developing countries among
    the studies. From the results, it is inferred that the studies are concentrated
    on developed countries. It demonstrates a gap to be filled, given the need to
    adapt research around the world to the reality of the local market in emerging
    countries, taking into account the opportunities and possible barriers to being
    found in these environments. Based on the data presented, it is possible to see
    that technologies such as BIM, along with other virtual environment concepts,
    and 3D Printing are subjects with great expressiveness among the works in this
    research, having reached a higher degree of maturity compared to other themes.
    However, much of the potential of such technologies remains unexplored from the
    point of view of practice. As already mentioned, BIM technology permeates practically
    all the concepts listed in this research and can be considered central to construction
    industrialization worldwide. Although it has been expanding for a few years and
    is being used by several companies in the construction industry, BIM has the potential
    further to impact the reality of construction in its various stages. Also, according
    to the data extracted from this study, the Planning and Management phase tends
    to be most revolutionized by introducing new technologies since it will enormously
    benefit from the improvement in data acquisition, storage, and processing. Next,
    the construction stage tends to be deeply impacted, too, in the face of the development
    of automated construction processes, replacing traditional labor. It is noteworthy
    that, when it comes to front-end technologies, the papers analyzed focus more
    on the internal dimensions of Industry 4.0—smart manufacturing and work—while
    the external dimensions—smart products and supply chain—remain little explored.
    The authors have already presented some construction components with remote communication
    and traceability capabilities. However, considering the buildings and infrastructure
    assets as the final product of the construction sector, there is still a lot to
    advance in research to reach the \"smart product\" status. Additionally, although
    some tasks are being impacted by digitization, there is still a need to advance
    in information integration and the holistic view of technologies in the construction
    sector. The low number of works related to the base technologies, responsible
    for the connection between the different systems, corroborates this fact. These
    need further research attention to support the proper digital transition of the
    construction sector and achieve the anticipated potential for the sector. The
    results obtained and presented are aligned with other studies that have sought
    to map technology trends for the construction industry (Marr 2019; Begic and Galic
    2021). The following steps to be taken from this trend outlining include advancing
    in the understanding of the strengths and weaknesses of the technologies concerning
    the reality of the local industry. The intended unfolding of this work should
    consist of an in-depth analysis of the opportunities, barriers, and impacts of
    each main trend to estimate their effective capacity to incorporate and transform
    the current reality of a developing country''s market. It is necessary to know
    the economic, social, environmental, and ethical impacts involved in adopting
    innovative technologies, as well as to assess the feasibility of their implementation,
    taking into account the industry''s needs and interests. It is necessary to understand
    the costs and benefits that can be obtained from the technologies, as well as
    to know the critical factors that could lead to the success or failure of the
    implemented innovation. It is also important to evaluate the maturity degree of
    both technologies to be adopted and the industry to absorb them. With more precise
    information about the determinants for the success of the technologies, empirical
    studies will be necessary to apply, evaluate, and refine models that serve as
    a guide for technology adoption in different scenarios, aiming to foster its dissemination
    in the local industry. An important consideration to be made about the data presented
    in this study is that they were obtained from a restricted list of selected works,
    which resulted from the search and selection protocol presented in chapter 2,
    with keywords, language, and publication date limitations. Thus, it is fundamental
    to notice that these results need further validation through complementary studies
    and interviews with specialists to corroborate the presented information. References
    Abbas A, Seo J, Kim M (2020) Exploring the Construction task performance and cognitive
    workload of augmented reality-assisted rebar inspection tasks. In: construction
    research congress 2020. American Society of Civil Engineers, Anais Reston, VA
    Disponível em http://ascelibrary.org/doi/10.1061/9780784482865.048 Abou-Ibrahim
    H, Hamzeh F (2020) Planning BIM-based design projects: a product-process framework.
    In: construction research congress 2020. American Society of Civil Engineers,
    Anais Reston, VA Disponível em http://ascelibrary.org/doi/10.1061/9780784482889.080
    Adaloudis M, Bonnin Roca J (2021) Sustainability tradeoffs in the adoption of
    3D Concrete Printing in the construction industry. J Clean Prod 307:127201 Google
    Scholar   Afolabi A, Fagbenle O, Mosaku T (2017) IT management of building materials’
    planning and control processes using web-based technologies. In: Rocha Á, Correia
    AM, Adeli H, Reis LP, Costanzo S (eds) Recent advances in information systems
    and technologies. Springer International Publishing, Cham, pp 12–19. https://doi.org/10.1007/978-3-319-56538-5_2
    Chapter   Google Scholar   Afolabi A et al (2017) The economics of cloud-based
    computing technologies in construction project delivery. Int J Civil Eng Technol
    8(12):233–242 Google Scholar   Aghimien D, Aigbavboa C, Aghimien L, Thwala WD,
    Ndlovu L (2020) Making a case for 3D printing for housing delivery in South Africa.
    Int J Hous Mark Anal 13(4):565–581. https://doi.org/10.1108/IJHMA-11-2019-0111
    Article   Google Scholar   Akinradewo O et al. (2021) Applications of blockchain
    technology in the construction industry. In: Lecture notes in networks and systems.
    Anais Springer International Publishing, Disponível em: https://doi.org/10.1007/978-3-030-80094-9_33
    Almaatouk Q, Othman MSB, Al-Khazraji A (2016) A review on the potential of cloud-based
    collaboration in construction industry. In: 2016 3rd MEC International conference
    on big data and smart city, ICBDSC. Anais IEEE Al-Saeed Y, Edwards DJ, Scaysbrook
    S (2020) Automating construction manufacturing procedures using BIM digital objects
    (BDOs): case study of knowledge transfer partnership project in UK. Constr Innov
    20(3):345–377 Google Scholar   Álvares JS, Costa DB, DE Melo RRS (2018) Exploratory
    study of using unmanned aerial system imagery for construction site 3D mapping.
    Constr Innov 18(3):301–320 Google Scholar   Angrisani L et al. (2017) An innovative
    embedded wireless sensor network system for the structural health monitoring of
    RC structures. In: RTSI 2017 - IEEE 3rd International forum on research and technologies
    for society and industry, conference proceedings Araújo CS et al (2021) Conceptual
    framework for tracking metallic formworks on construction sites using IoT, RFID
    and BIM technologies. In: Santos ET, Scheer S (eds) Lecture notes in civil engineering.
    Springer International Publishing, Cham, pp 865–878. https://doi.org/10.1007/978-3-030-51295-8_60
    Chapter   Google Scholar   Axelsson J, Froberg J, Eriksson P (2018) Towards a
    system-of-systems for improved road construction efficiency using lean and industry
    4.0. In: 2018 13th system of systems engineering conference, SoSE, p. 576–582
    Bademosi F, ISSA RRA (2018) Business value of augmented reality in the construction
    industry. In: Construction research congress 2018. American Society of Civil Engineers,
    Anais Reston, VA. Disponível em https://ascelibrary.org/doi/pdf/10.1061/9780784481301
    Badenko VL et al (2021) Integration of digital twin and BIM technologies within
    factories of the future. Mag Civil Eng 101:1 Google Scholar   Balali V, Zalavadia
    A, Heydarian A (2020a) Real-time interaction and cost estimating within immersive
    virtual environments. J Constr Eng Manage 146(2):1–10 Google Scholar   Balali
    V, Zalavadia A, Heydarian A (2020b) Real-time interaction and cost estimating
    within immersive virtual environments. J Constr Eng Manag 146(2):04019098 Google
    Scholar   Bao Y, Li VC (2020a) Feasibility study of lego-inspired construction
    with bendable concrete. Autom Constr 113:103161 Google Scholar   Bao Y, Li VC
    (2020b) Feasibility study of lego-inspired construction with bendable concrete.
    Autom Constr 113:103161 Google Scholar   Begic H, Galic M (2021) A systematic
    review of construction 4.0 in the context of the bim 4.0 premise. Buildings 11:8
    Google Scholar   Bernardino-Galeana I et al. (2021) Life cycle cost (LCC) and
    sustainability. Proposal of an IFC structure to implement LCC during the design
    stage of buildings. In: Springer Series in Geomechanics and Geoengineering. Springer
    International Publishing, Disponível em https://doi.org/10.1007/978-3-030-61118-7_33
    Bianconi F, Filippucci M, Buffi A (2019) Automated design and modeling for mass-customized
    housing. A web-based design space catalog for timber structures. Autom Constr
    103:13–25 Google Scholar   Blinn N, Issa RRA. Feasibility assessment of unmanned
    aircraft systems for construction management applications. In: Construction research
    congress 2016. American Society of Civil Engineers, Anais Reston, VA, Disponível
    em http://ascelibrary.org/doi/10.1061/9780784479827.203 Bogue R (2018) What are
    the prospects for robots in the construction industry? Ind Robot 45(1):1–6 Google
    Scholar   Booth A, Sutton A, Papaioannou D (2016) Systematic approaches to a successful
    literature review. SAGE Google Scholar   Brandín R, Abrishami S (2021) Information
    traceability platforms for asset data lifecycle: blockchain-based technologies.
    Smart Sustain Built Environ 10(3):364–386 Google Scholar   Brilakis I (2017) Mixed
    reality constructs a new frontier for maintaining the built environment. Proc
    Inst Civil Eng Civil Eng 170(2):53–53. https://doi.org/10.1680/jcien.2017.170.2.53
    Article   Google Scholar   Bruckmann T et al (2018) Concept studies of automated
    construction using cable-driven parallel robots. In: Gosselin C et al (eds) Mechanisms
    and machine science. Springer International Publishing, Cham Google Scholar   Cai
    S, Ma Z, Xiang X (2021) Trends of research and development on construction robotics
    considering the supporting technologies and successful applications. In: International
    conference on computing in civil and building engineering. Springer International
    Publishing, Disponível em: https://doi.org/10.1007/978-3-030-51295-8_72 Calvetti
    D, Mêda P, Gonçalves MC, Sousa H (2020) Worker 4.0: the future of sensored construction
    sites. Buildings 10(10):169. https://doi.org/10.3390/buildings10100169 Article   Google
    Scholar   Cao J et al (2017) Facade geometry generation from low-resolution aerial
    photographs for building energy modeling. Build Environ 123:601–624 Google Scholar   Chan
    B et al (2016) Defining a conceptual framework for the integration of modelling
    and advanced imaging for improving the reliability and efficiency of bridge assessments.
    J Civ Struct Heal Monit 6(4):703–714 Google Scholar   Chen Q et al (2020) Using
    look-ahead plans to improve material flow processes on construction projects when
    using BIM and RFID technologies. Constr Innov 20(3):471–508 Google Scholar   Chen
    Y, Kamara JM (2011) A framework for using mobile computing for information management
    on construction sites. Auto Cons 20(7):776–788. https://doi.org/10.1016/j.autcon.2011.01.002
    Chernick A et al. (2021) On-site BIM-enabled augmented reality for construction.
    In: Proceedings of the 2020 DigitalFUTURES. Springer Singapore, Singaporel, Disponível
    em https://doi.org/10.1007/978-981-33-4400-6_5 Correa FR (2018) Cyber-physical
    systems for construction industry. In: IEEE industrial cyber-physical systems
    (ICPS). IEEE, Disponível em https://ieeexplore.ieee.org/document/8387690/ Craveiro
    F et al (2019) Additive manufacturing as an enabling technology for digital construction:
    a perspective on construction 4.0. Autom Constr 103:251–267 Google Scholar   D’Auria
    S, Sini G, Strollo RM (2018) Aerial Digital photogrammetry and terrestrial laser
    scanning for reconstruction hypothesis of monumental building lost façades: the
    case of villa mondragone. In: Architectural draughtsmanship. Springer International
    Publishing, Cham, Disponível em https://doi.org/10.1007/978-3-319-58856-8_103
    Dai R et al (2020) The digitization of the automated steel construction through
    the application of microcontrollers and MQTT. Constr Robot 4(3–4):251–259 Google
    Scholar   Dallasega P (2018) Industry 40 fostering construction supply chain management:
    lessons learned from engineer-to-order suppliers. IEEE Eng Manag Rev 46(3):49–55
    Google Scholar   Dallasega P, Rauch E, Linder C (2018) Industry 4.0 as an enabler
    of proximity for construction supply chains: a systematic literature review. Comput
    Indus 99:205–225 Google Scholar   Dallasega P et al (2019a) An agile scheduling
    and control approach in ETO construction supply chains. Comput Indus. https://doi.org/10.1016/j.compind.2019.08.003
    Article   Google Scholar   Dallasega P et al (2019b) An agile scheduling and control
    approach in ETO construction supply chains. Comput Indus. https://doi.org/10.1016/j.compind.2019.08.003
    Article   Google Scholar   Dallasega P et al (2020) BIM, augmented and virtual
    reality empowering lean construction management: a project simulation game. Proc
    Manuf 45:49–54 Google Scholar   Dallasega P, Frosolini M, Matt DT (2016) An approach
    supporting real-time project management in plant building and the construction
    industry. In: Proceedings of the Summer school francesco turco. Naples Dallasega
    P et al. (2016) A decentralized and pull-based control loop for on-demand delivery
    in ETO construction supply chains. IGLC 2016. Boston, Disponível em <www.iglc.net>
    Darabseh M, Martins JP (2021) The expected outcomes of implementing a distributed
    file system in the construction industry. Springer International Publishing Google
    Scholar   Darko A et al (2020) Building information modeling (BIM)-based modular
    integrated construction risk management – critical survey and future needs. Comput
    Ind 123:103327 Google Scholar   de Luca D, Osello A (2021) BIM and Mixed reality
    for the new management of storage area. Springer International Publishing Google
    Scholar   Diaz-Perete D et al (2020) New procedure for BIM characterization of
    architectural models manufactured using fused deposition modeling and plastic
    materials in 4.0 Advanced construction environments. Polymers 12(7):1498 Google
    Scholar   Diggs-Mcgee BN et al (2019) Print time vs elapsed time: a temporal analysis
    of a continuous printing operation for additive constructed concrete. Addit Manuf
    28:205–214 Google Scholar   Din ZU, Ather W, Gibson GE (2020) Strategies of BIM
    application with traditional project delivery method: a case of building construction
    industry in Pakistan. In: Construction research congress 2020. American Society
    of Civil Engineers, Reston, VA, Disponível em http://ascelibrary.org/doi/10.1061/9780784482865.065
    Ding C, Kohli R (2021) Analysis of a building collaborative platform for industry
    4.0 based on building information modelling technology. IET Collab Intell Manuf
    3(3):233–242 Google Scholar   Doe RM (2021) An open, integrated modular format:
    for flexible and intelligible architecture, engineering and construction design
    and production. Int J Archit Comput 19(1):23–36 Google Scholar   Dong Y et al
    (2021) Long-term monitoring of dynamic characteristics of high-rise and super
    high-rise buildings using strong motion records. Adv Mech Eng 13(12):1–23 Google
    Scholar   Dossick C, Osburn L, Neff G (2019) Innovation through practice: the
    messy work of making technology useful for architecture, engineering and construction
    teams. Eng Constrction Archit Manag Dounas T, Lombardi D, Jabi W (2020) Framework
    for decentralised architectural design BIM and Blockchain integration. Int J Archit
    Comput 19(2):157–173 Google Scholar   Dubois A, Gadde LE (2002) The construction
    industry as a loosely coupled system: implications for productivity and innovation.
    Constr Manage Econ 20(7):621–631. https://doi.org/10.1080/01446190210163543 Elghaish
    F, Abrishami S, Hosseini MR (2020) Integrated project delivery with blockchain:
    an automated financial system. Autom Constr 114:103182 Google Scholar   Elghaish
    F et al (2021) Blockchain and the ‘Internet of Things’’ for the construction industry:
    research trends and opportunities’. Autom Constr 132:103942 Google Scholar   Fadoul
    A, Tizani W, Osorio-Sandoval CA (2021) A knowledge-based model for constructability
    assessment of buildings design using BIM. In: Lecture notes in civil engineering.
    Springer International Publishing, Disponível em https://doi.org/10.1007/978-3-030-51295-8_13
    Fan S-L, Yeh I-C, Chi W-S (2021) Improvement in estimating durations for building
    projects using artificial neural network and sensitivity analysis. J Constr Eng
    Manag 147(7):1–9 Google Scholar   Fardhosseini MS et al. (2020) The cost-effectiveness
    of integrating digital fabrication for concrete formworks. In: Construction research
    congress 2020. American Society of Civil Engineers, Reston, VA, Disponível em
    http://ascelibrary.org/doi/10.1061/9780784482865.114 Felix NG, Harding JA, Tiwari
    MK (2021) A bespoke PSS development roadmap for construction OEMs. Sādhanā. https://doi.org/10.1007/s12046-021-01689-y
    Article   Google Scholar   Fernandez D et al. (2021) Daily control system for
    the construction of multi-family building projects. In: S. and T. 201 Smart Innovation
    (eds) Smart innovation, systems and technologies. Springer International Publishing,
    Disponível em https://doi.org/10.1007/978-3-030-57548-9_59 Feucht T et al (2020)
    Additive manufacturing by means of parametric robot programming. Constr Robot
    4(1–2):31–48 Google Scholar   Frank AG, Dalenogare LS, Ayala NF (2019) Industry
    4.0 technologies: implementation patterns in manufacturing companies. Int J Product
    Econ 210:15–26 Google Scholar   Freire T et al. (2021) 3D printing technology
    in the construction industry. In: Advances in science, technology & innovation.
    Springer International Publishing, Disponível em https://doi.org/10.1007/978-3-030-35533-3_19
    Gallo P, Romano R, Belardi E (2021) CARES research: product and process digitalization
    for design and manufacturing of prefabricated cardboard panels. J Phys Conf Ser
    2042:1 Google Scholar   Gao W et al (2020) Steel bridge construction of Hong Kong–Zhuhai–Macao
    bridge. Int J Steel Struct 20(5):1498–1508 MathSciNet   Google Scholar   Gao X,
    Pishdad-Bozorgi P (2018) Past, present, and future of BIM-enabled facilities operation
    and maintenance. In: Construction research congress 2018. American Society of
    Civil Engineers, Reston, VA, Disponível em https://ascelibrary.org/doi/pdf/10.1061/9780784481301
    Ghosh A et al (2021) Real-time structural health monitoring for concrete beams:
    a cost-effective ‘Industry 4.0’ solution using piezo sensors. Int J Build Pathol
    Adapt 39(2):283–311 Google Scholar   Gibbs D-J et al (2017) Interactive exhibit
    to assist with understanding project delays. J Leg Aff Disput Resolut Eng Constr
    9(1):04516008 Google Scholar   Gilemkhanov R, Bagautdinov R, Kankhva V (2018)
    Autodesk revit and robot structural analysis in design of framed buildings. Adv
    Intell Syst Comput 692:1036–1045 Google Scholar   Global Industry Council (2018)
    Five keys to unlocking digital transformation in engineering & construction. In:
    Oracle Aconex and Boston Consulting Group Gong X, Michel P, Cantin R (2019) Multiple-criteria
    decision analysis of BIM influences in building energy management. Build Simul
    12(4):641–652 Google Scholar   Gradeci K, Labonnote N (2019) On the potential
    of integrating building information modelling (BIM) for the additive manufacturing
    (AM) of concrete structures. Construction Innovation 723611 Guévremont M, Hammad
    A (2021) Ontology for linking delay claims with 4D simulation to analyze effects-causes
    and responsibilities. J Leg Aff Dispute Resolut Eng Constr 13:4 Google Scholar   Guo
    Y, Li Y, Zhang Y (2016) Research on the application of an IPD model based on BIM
    in an urban village project. In: ICCREM 2016: BIM application and off-site construction
    Habibi Rad M, Mojtahedi M, Ostwald MJ (2021) Industry 4.0, disaster risk management
    and infrastructure resilience: a systematic review and bibliometric analysis.
    Buildings 11:9 Google Scholar   Haeusler MH et al (2021) (Computationally) designing
    out waste: developing a computational design workflow for minimising construction
    and demolition waste in early-stage architectural design. Int J Archit Comput
    19(4):594–611 Google Scholar   Hamdan AH et al (2021) A semantic modeling approach
    for the automated detection and interpretation of structural damage. Autom Constr
    128:103739 Google Scholar   Hampson KD, Kraatz JA, Sanchez AX (2014) R&D investment
    and impact in the global construction industry. Routledge, New York, NY Google
    Scholar   Hasan A et al (2019) Empirical study on implications of mobile ICT use
    for construction project management. J Manag Eng 35(6):1–12 Google Scholar   Hasan
    A et al. (2019a) Investigation into post-adoption usage of mobile ICTs in Australian
    construction projects. Eng Constr Arch Manag Hassan SM, Azab M, Mokhtar A (2019)
    Smart concrete transportation in semi-automated construction sites. 2019 IEEE
    10th Annual Information Technology. Electr Mob Commun Conf IEMCON 2019:661–667
    Google Scholar   He H, Zhang M (2016) Research on intelligent construction and
    integration management of a large-scale construction enterprise based on BIM technology.
    ICCREM 2016. American Society of Civil Engineers, Reston, VA, Disponível em http://ascelibrary.org/doi/10.1061/9780784480274.011
    Heesom D et al (2020) Implementing a HBIM approach to manage the translocation
    of heritage buildings. Eng Constr Arch Manag. https://doi.org/10.1108/ECAM-06-2020-0405
    Article   Google Scholar   Heigermoser D et al (2019) BIM-based last planner system
    tool for improving construction project management. Autom Constr 104:246–254 Google
    Scholar   Hermawan S, Harsono K, Bong N (2020) Sustainable design for passage
    boat ports in remote areas in era construction 4.0 at sidoarjo east java Indonesia.
    J Phys Conf Ser. https://doi.org/10.1088/1742-6596/1625/1/012059%3e Article   Google
    Scholar   Hess T et al (2016) How german media companies defined their digital
    transformation strategies. MIS Q Exec 15(2):103–119 Google Scholar   Hijazi AA
    et al (2021) Rationale for the integration of BIM and blockchain for the construction
    supply chain data delivery: a systematic literature review and validation through
    focus group. J Constr Eng Manag 147(10):1–17 Google Scholar   Hilal M, Maqsood
    T, Abdekhodaee A (2019) A hybrid conceptual model for BIM in FM. Constr Innov
    19(4):531–549. https://doi.org/10.1108/CI-05-2018-0043 Article   Google Scholar   Hu
    M (2019) Talking about new technology and equipment of automatic welding application
    of construction machinery in the future. IOP Conf Ser Mater Sci Eng 626:4 Google
    Scholar   Hwang BG, Zhao X, Yang KW (2019) Effect of BIM on rework in construction
    projects in Singapore: status Quo, magnitude, impact, and strategies. J Constr
    Eng Manag 145(2):1–16 Google Scholar   Igwe US et al (2021) Exploring the potentials,
    impacts, and challenges of mobile technology application in cost management of
    construction projects. Lect Notes Mech Eng. https://doi.org/10.1007/978-981-16-0742-4_4
    Article   Google Scholar   International Organisation for Standardization (2018)
    ISO 41.001 Facility management — Management systems — Requirements with guidance
    for use Jankowski B, Prokocki J, Krzemiński M (2015) Functional assessment of
    BIM methodology based on implementation in design and construction company. Proc
    Eng 111:351–355 Google Scholar   Jelodar MB, Shu F (2021) Innovative use of low-cost
    digitisation for smart information systems in construction projects. Buildings
    11(7):1–16 Google Scholar   Jensen MB, Foged IW, Andersen HJ (2020) A framework
    for interactive human–robot design exploration. Int J Archit Comput 18(3):235–253
    Google Scholar   Jo JH et al (2020) Development of a 3D printer for concrete structures:
    laboratory testing of cementitious materials. Int J Conc Struct Mater 14:13 Google
    Scholar   Kagermann H (2015) Change through digitization—value creation in the
    age of industry 4.0. In: Albach H, Meffert H, Pinkwart A, Reichwald R (eds) Management
    of permanent change. Springer Fachmedien Wiesbaden, Wiesbaden, pp 23–45. https://doi.org/10.1007/978-3-658-05014-6_2
    Chapter   Google Scholar   Kagermann H, Wahlster W, Helbig J (2013) Recommendations
    for implementing the strategic initiative Industrie 4.0: Final report of the Industrie
    4.0 Working Group. Forschungsunion: Berlin, Germany Kamble SS, Gunasekaran A,
    Gawankar SA (2018) Sustainable Industry 40 framework: a systematic literature
    review identifying the current trends and future perspectives. Process Safety
    Environ Prot 117:408–425 Google Scholar   Kan C, Anumba CJ (2019) Digital twins
    as the next phase of cyber-physical systems in construction. computing in civil
    engineering 2019. American Society of Civil Engineers, Reston, VA Karimi S, Iordanova
    I (2021) Integration of BIM and GIS for construction automation, a systematic
    literature review (SLR) combining bibliometric and qualitative analysis. Arch
    Comput Methods Eng 28(7):4573–4594 Google Scholar   Kassem E et al (2015) Development
    of compaction monitoring system for asphalt pavements. Constr Build Mater 96:334–345
    Google Scholar   Kereri JO, Adamtey S (2019) RFID use in residential/commercial
    construction industry. J Eng Design Technol 17(3):591–612 Google Scholar   Khan
    MA (2020) Mix suitable for concrete 3D printing: a review. In: Materials today:
    proceedings. Elsevier Ltd. https://doi.org/10.1016/j.matpr.2020.03.825 Kothman
    I, Faber N (2016) How 3D printing technology changes the rules of the game Insights
    from the construction sector. J Manuf Technol Manag 27(7):932–943 Google Scholar   Kraus
    MA, Drass M (2020) Artificial intelligence for structural glass engineering applications
    — overview, case studies and future potentials. Glass Struct Eng 5(3):247–285
    Google Scholar   Krotov O et al. (2021) The multi-storey concrete printing construction
    technology. Lecture notes in civil engineering. Springer International Publishing.
    https://doi.org/10.1007/978-3-030-72404-7_40 Kula B, Ergen E (2021) Implementation
    of a BIM-FM platform at an international airport project: case study. J Constr
    Eng Manag 147(4):1–14 Google Scholar   Ladron de Guevara M et al (2020) Multi-resolution
    in architecture as a design driver for additive manufacturing applications. Int
    J Arch Comput 18:218–234 Google Scholar   Lasi H et al (2014) Industry 4.0. Bus
    Inf Syst Eng 6(4):239–242 Google Scholar   Leaverton GT (2015) Generation drone:
    the future of utility O&M. In: Electrical transmission and substation structures
    2015. American Society of Civil Engineers, Reston, VA Lee XS et al (2018) Client-oriented
    building mass customization (CoBMC). In: IOP Conference series: materials science
    and engineering, vol 291. 2018 Leone MF, Nocerino G (2021) Advanced modelling
    and digital manufacturing: parametric design tools for the optimization of UHPFRC
    (ultra high-performance Fiber reinforced concrete) shading panels. Autom Constr
    126:103650 Google Scholar   Li J, Yang H (2017) A research on development of construction
    industrialization based on BIM technology under the background of industry 4.0.
    MATEC Web of Conf 100:02046. https://doi.org/10.1051/matecconf/201710002046 Article   Google
    Scholar   Li H et al (2015) A 4D automatic simulation tool for construction resource
    planning: a case study. Eng Constr Archit Manag 22(5):536–550 Google Scholar   Li
    X et al (2019) Developing a conceptual framework of smart work packaging for constraints
    management in prefabrication housing production. Adv Eng Inf 42:100938 Google
    Scholar   Li Q, Zeng Y (2018) “Internet +” speed up for the wisdom sites. In:
    ICCREM 2018. American Society of Civil Engineers, Reston, VA, Disponível em http://ascelibrary.org/doi/10.1061/9780784481721.029
    Li Q, Zhao J, Zhang H (2018) Application of BIM technology in the refined management
    of construction cost. In: ICCREM 2018. American Society of Civil Engineers, Reston,
    VA, Disponível em http://ascelibrary.org/doi/10.1061/9780784481721.018 Li W, Duan
    P, Su J (2021) The effectiveness of project management construction with data
    mining and blockchain consensus. J Ambient Intell Human Comput 0123456789 Liu
    L et al (2021) Indoor navigation supported by the industry foundation classes
    (IFC): a survey. Autom Constr 121:103436 Google Scholar   Liu J, Li G (2018) Research
    on the development of 3D printing construction industry based on diamond model.
    In: ICCREM 2018: analysis of real estate and the construction industry London
    K, Pablo Z, Gu N (2021) Explanatory defect causation model linking digital innovation,
    human error and quality improvement in residential construction. Autom Constr
    123:103505 Google Scholar   Ma Z, Ma J (2017) Formulating the application functional
    requirements of a BIM-based collaboration platform to support IPD projects. KSCE
    J Civ Eng 21(6):2011–2026 Google Scholar   Ma W et al (2021) Generative design
    in building information modelling (Bim): approaches and requirements. Sensors
    21(16):1–26 Google Scholar   Mahadevan M, Francis A, Thomas A (2020) A simulation-based
    investigation of sustainability aspects of 3D printed structures. J Build Eng
    32:101735 Google Scholar   Maharjan D et al. (2020) Enabling human–infrastructure
    interfaces for inspection using augmented reality. Struct Health Monit 147592172097701
    Mannino A, Dejaco MC, Cecconi RE (2021) Building information modelling and internet
    of things integration for facility management—literature review and future needs.
    Appl Sci 11(7):3062 Google Scholar   Mansouri S, Castronovo F, Akhavian R (2020)
    Analysis of the synergistic effect of data analytics and technology trends in
    the AEC/FM industry. J Constr Eng Manag 146(3):1–9 Google Scholar   Marcher C,
    Giusti A, Matt DT (2021) On the design of a decision support system for robotic
    equipment adoption in construction processes. Appl Sci 11:23 Google Scholar   Marchini
    A, Patzlaff JO (2016) Building information modeling (BIM) application in civil
    constructions intending the increase of service life. J Build Pathol Rehabil 1(1):1–9
    Google Scholar   Marr B (2019) The 5 biggest technology trends disrupting engineering
    and design in 2020. Forbes Magazine Martens P, Mathot M, Bos F, Coenders J (2018)
    Optimising 3D printed concrete structures using topology optimisation. In: Hordijk
    DA, Luković M (eds) High tech concrete: where technology and engineering meet.
    Springer International Publishing, Cham, pp 301–309. https://doi.org/10.1007/978-3-319-59471-2_37
    Chapter   Google Scholar   Martinez P, Al-Hussein M, Ahmad R (2020) Intelligent
    vision-based online inspection system of screw-fastening operations in light-gauge
    steel frame manufacturing. Int J Adv Manuf Technol 109(3–4):645–657. https://doi.org/10.1007/s00170-020-05695-y
    Article   Google Scholar   Mascareñas DDL et al. (2020) Augmented reality for
    next generation infrastructure inspections. Struct Health Monit, p. 1–23, 23 set.
    2020. Massari GA (2018) From integrated design to BIM. Architectural draughtsmanship.
    Springer International Publishing. https://doi.org/10.1007/978-3-319-58856-8_85
    Book   Google Scholar   Mcgibbon S, Abdel-Wahab M, Sun M (2018) Towards a digitised
    process-wheel for historic building repair and maintenance projects in Scotland.
    J Cult Herit Manag Sustain Develop 8(4):465–480 Google Scholar   Mcmeel D (2019)
    Robots and AR: towards a platform economy for construction. J Inf Technol Constr
    24(December):527–539 Google Scholar   Mechtcherine V et al (2019) Large-scale
    digital concrete construction – CONPrint3D concept for on-site, monolithic 3D-printing.
    Autom Constr 107:102933 Google Scholar   Meindl B et al (2021) The four smarts
    of Industry 4.0: evolution of ten years of research and future perspectives. Technol
    Forecast Soc Chang 168:120784 Google Scholar   Meng Q et al (2020) A review of
    integrated applications of BIM and related technologies in whole building life
    cycle. Eng Constr Archit Manag 27(8):1647–1677 Google Scholar   Merschbrock C,
    Munkvold BE (2015) Effective digital collaboration in the construction industry
    - A case study of BIM deployment in a hospital construction project. Comput Ind
    73:1–7 Google Scholar   Mesároš P et al (2021) Impact of enterprise information
    systems on selected key performance indicators in construction project management:
    an empirical study. Wireless Netw 27(3):1641–1648 Google Scholar   Molina-Siles
    P et al. (2018) 3D printing as a technological tool geared towards architecture.
    architectural draughtsmanship. Springer International Publishing, , Cham, https://doi.org/10.1007/978-3-319-58856-8_84
    Moon S et al (2020) Fourth industrialization-oriented offsite construction: case
    study of an application to an irregular commercial building. Eng Constr Archit
    Manag 27(9):2271–2286 Google Scholar   Musa MF et al. (2015) The way forward for
    industrialised building system (IBS) in Malaysia. InCIEC 2014 Naboni R, Kunic
    A, Breseghello L (2020) Computational design, engineering and manufacturing of
    a material-efficient 3D printed lattice structure. Int J Archit Comput 18(4):404–423
    Google Scholar   Nibhanupudi P, Rahul GB (2020) Comparative study on use of precast
    framed structure and precast load bearing wall structure. Mater Today Proc 33:537–542
    Google Scholar   Niemelä M et al. (2019) 3D printing architectural freeform elements:
    challenges and opportunities in manufacturing for industry 4.0. In: Proceedings
    of the 36th international symposium on automation and robotics in construction,
    ISARC 2019, pp 1298–1304 Niu Y et al (2017) An SCO-enabled logistics and supply
    chain-management system in construction. J Constr Eng Manag 143(3):1–12 Google
    Scholar   Niu Y, Anumba CJ, Lu W (2019) Taxonomy and deployment framework for
    emerging pervasive technologies in construction projects. J Constr Eng Manag 145(5):1–13
    Google Scholar   Odugu H, Achuthan A (2020) Impact of prefabrication technology
    on profitability using Primavera p6. In: Materials today: proceedings. Elsevier
    Ltd. https://doi.org/10.1016/j.matpr.2020.04.129 Oesterreich TD, Teuteberg F (2016)
    Understanding the implications of digitisation and automation in the context of
    Industry 4.0: a triangulation approach and elements of a research agenda for the
    construction industry. Comput Indus 83:121–139. https://doi.org/10.1016/j.compind.2016.09.006
    Article   Google Scholar   Ogura H, Nerella VN, Mechtcherine V (2018) Developing
    and testing of strain-hardening cement-based composites (SHCC) in the context
    of 3D-printing. Materials 11(8):1–18 Google Scholar   Ólafsson G et al (2021)
    Development of an integrated sacrificial sensor for damage detection and monitoring
    in composite materials and adhesively bonded joints. Struct Health Monit 20(6):3406–3423
    Google Scholar   Oti-Sarpong K, Leiringer R, Zhang S (2020) A critical examination
    of BIM policy mandates: implications and responses. In: Construction research
    congress 2020. American Society of Civil Engineers, Reston, VA http://ascelibrary.org/doi/10.1061/9780784482865.081
    Owusu EK et al. (2020) A turn to smart contracts and future applications towards
    construction innovation: a hybrid-metric review. In: Construction research congress
    2020. American Society of Civil Engineers, Reston, VA. Disponível em http://ascelibrary.org/doi/10.1061/9780784482865.027
    Özalp F, Yilmaz HD (2020) Fresh and hardened properties of 3D high-strength printing
    concrete and its recent applications. Iran J Sci Technol Trans Civ Eng 44:319–330
    Google Scholar   Ozturk IE, Ozturk GB (2019) 3D printing in civil engineering:
    a systematic literature review. ISEC 2019 - 10th international structural engineering
    and construction conference, pp 1–6 Pacewicz K, Sobotka A, Gołek Ł (2018) Characteristic
    of materials for the 3D printed building constructions by additive printing. MATEC
    Web Conf 222:01013. https://doi.org/10.1051/matecconf/201822201013 Article   Google
    Scholar   Paelke V (2014) Augmented reality in the smart factory: supporting workers
    in an industry 4.0. environment. IEEE emerging technology and factory automation
    (ETFA). IEEE Paoletti I (2017) Mass customization with additive manufacturing:
    new perspectives for multi performative building components in architecture. Proc
    Eng 180:1150–1159 Google Scholar   Park HK, Ock JH (2016) Unit modular in-fill
    construction method for high-rise buildings. KSCE J Civ Eng 20(4):1201–1210 Google
    Scholar   Pasetti Monizza G, Bendetti C, Matt DT (2018) Parametric and generative
    design techniques in mass-production environments as effective enablers of Industry
    4.0 approaches in the building industry. Autom Constr 92:270–285 Google Scholar   Patrucco
    A, Ciccullo F, Pero M (2020) Industry 4.0 and supply chain process re-engineering.
    Bus Process Manag J 26:1093–1119 Google Scholar   Paul S, Naik B, Kumar Bagal
    D (2020) Enabling technologies of IoT and challenges in various field Of construction
    industry in the 5G Era: a review. IOP Conf Ser Mater Sci Eng. https://doi.org/10.1088/1757-899X/970/1/012019
    Article   Google Scholar   Pavón RM et al (2021) Use of bim-fm to transform large
    conventional public buildings into efficient and smart sustainable buildings.
    Energies 14(11):1–22 Google Scholar   Peiris PAN et al (2021) A case study on
    early stage adoption of lean practices in prefabricated construction industry.
    Lect Notes Civil Eng. https://doi.org/10.1007/978-981-15-7222-7_48 Article   Google
    Scholar   Perea EC, de la Fuente Prieto J (2018) The future of augmented reality
    in architecture: from real to virtual heritage. In: Perea EC, Valiente EE (eds)
    Architectural draughtsmanship: from analog to digital narratives. Springer International
    Publishing, Cham, pp 1745–1753. https://doi.org/10.1007/978-3-319-58856-8_134
    Chapter   Google Scholar   Pereira KDS (2019) Gestão de Obras PÚBLICAS COM A UTILIZAÇÃO
    DE PAINEL DE INDICADORES: ESTUDO DE CASO EM UMA IFESNatalNatal Perera S et al.
    (2020) Blockchain technology: is it hype or real in the construction industry?
    J Indus Inf Integr 100125 Porto GDBP, Kadlec TMDM (2018) Mapeamento de estudos
    prospectivos de tecnologia na revolução 4.0: Um olhar para a indústria da construção
    civil. Curitiba. www.utfpr.edu.br Poszvek G et al (2021) Fused filament fabrication
    of ceramic components for home use. In: Durakbasa NM, Güneş Gençyılmaz M (eds)
    Digital conversion on the way to industry 4.0: selected papers from ISPR2020,
    september 24-26, 2020 online - Turkey. Springer International Publishing, Cham,
    pp 121–139. https://doi.org/10.1007/978-3-030-62784-3_11 Chapter   Google Scholar   Ramsgaard
    Thomsen M et al (2020) Towards machine learning for architectural fabrication
    in the age of industry 40. Int J Arch Comput 18(4):335–352 Google Scholar   Rane
    SB, Narvel YAM (2021) Leveraging the industry 4.0 technologies for improving agility
    of project procurement management processes. Int J Syst Assur Eng Manag 12:1146–1172
    Google Scholar   Rane SB, Potdar PR, Rane S (2019) Development of project risk
    management framework based on industry 4.0 technologies. Benchmark Int J 28(5):1451–1481.
    https://doi.org/10.1108/BIJ-03-2019-0123 Article   Google Scholar   Ray P, Bera
    DK, Rath AK (2021) Genetic algorithm: an innovative technique for optimizing a
    construction project. In: Lecture notes in civil engineering. https://doi.org/10.1007/978-981-15-4577-1_71>
    Razkenari M et al (2019) Industrialized construction: emerging methods and technologies.
    computing in civil engineering 2019. American Society of Civil Engineers, Reston,
    VA. https://doi.org/10.1061/9780784482438.045 Reinhardt D et al (2020) CoBuilt
    4.0: investigating the potential of collaborative robotics for subject matter
    experts. Int J Archit Comput 18(4):353–370. https://doi.org/10.1177/1478077120948742
    Article   Google Scholar   Roupé M et al (2020) Virtual collaborative design environment:
    supporting seamless integration of multitouch table and immersive VR. J Constr
    Eng Manag 146(12):04020132 Google Scholar   Rubmann M (2015) et al. Industry 4.0:
    the future of productivity and growth in manufacturing industriesboston consulting
    group Sabet PGP, Chong H-Y (2019) Interactions between building information modelling
    and off-site manufacturing for productivity improvement. Int J Manag Proj Bus
    Sakin M, Kiroglu YC (2017) 3D printing of buildings: construction of the sustainable
    houses of the future by BIM. Energy Procedia 134:702–711 Google Scholar   Sanjayan
    JG et al (2018) Effect of surface moisture on inter-layer strength of 3D printed
    concrete. Constr Build Mater 172:468–475 Google Scholar   Schimanski CP et al
    (2019) Pushing digital automation of configure-to-order services in small and
    medium enterprises of the construction equipment industry: a design science research
    approach. Appl Sci 9(18):1–22 Google Scholar   Schimanski CP et al (2021) Integrating
    BIM with lean construction approach: functional requirements and production management
    software. Autom Constr 132:103969 Google Scholar   Schoonmaker SJ (2017) Feasibility
    of construction site 3D model utilization by mobile crane operators. congress
    on technical advancement 2017. American Society of Civil Engineers, Reston, VA.
    https://doi.org/10.1061/9780784481035.003 Schranz C, Urban H, Gerger A (2021)
    Potentials of augmented reality in a bim based building submission process. J
    Inf Technol Constr 26(January):441–457 Google Scholar   Schulze F, Dallasega P
    (2020) Industry 4.0 concepts and lean methods mitigating traditional losses in
    engineer-to-order manufacturing with subsequent assembly on-site: a framework.
    Proc Manuf 51:1363–1370. https://doi.org/10.1016/j.promfg.2020.10.190 Article   Google
    Scholar   Schwab K (2016) A quarta revolução industrial. São Paulo. Edipro Sferra
    AS (2017) Emergency: innovative prefabricated construction components for an eco-solidarity
    architecture. Techne 14:330–336 Google Scholar   Shahinmoghadam M, Motamedi A
    (2019) Review of BIM-centred IoT deployment: state of the art, opportunities,
    and challenges. In: Proceedings of the 36th international symposium on automation
    and robotics in construction, ISARC 2019, pp 1268–1275 Shahmirzadi MR et al (2021)
    Shrinkage behavior of cementitious 3D printing materials: effect of temperature
    and relative humidity. Cem Concret Compos 124:104238 Google Scholar   Shinde R
    et al. (2020) Enhanced road construction process with machine learning and blockchain
    technology. In: 2020 international conference on industry 4.0 technology (I4Tech).
    IEEE. https://ieeexplore.ieee.org/document/9102669/ Siwiec J (2019) Comparison
    of airborne laser scanning of low and high above ground level for selected infrastructure
    objects. J Appl Eng Sci 8(2):89–96 Google Scholar   Solnosky RL (2016) Analytical,
    communication, and information technology directions in the structural industry.
    Pract Period Struct Design Constr. https://doi.org/10.1061/(ASCE)SC.1943-5576.0000253
    Article   Google Scholar   Song Y, Cao P (2021) Research on the construction of
    virtual three-dimensional model of aging housing transformation in Northeast China
    based on mobile communication technology. Int J Wireless Inf Netw 28(3):297–307
    Google Scholar   Sousa H (2020) Advanced FE modeling supported by monitoring toward
    management of large civil infrastructures: the case study of Lezíria Bridge. Struct
    Concr 21(4):1309–1320 Google Scholar   Spisakova M, Kozlovska M (2020) Application
    of RFID technology on construction site – case study. In: Advances in intelligent
    systems and computing. Springer International Publishing. https://doi.org/10.1007/978-3-030-37919-3_4
    Subedi S, Pradhananga N (2021) Mapping datafication in construction-worker safety
    research to minimize injury-related disputes. J Leg Aff Disput Resolut Eng Constr
    13(2):1–29 Google Scholar   Sudarsan R et al (2005) A product information modeling
    framework for product lifecycle management. Comput Aided Des 37(13):1399–1411
    Google Scholar   Sun S et al (2020) Data handling in industry 4.0: interoperability
    based on distributed ledger technology. Sensors 20(11):1–22 Google Scholar   Sun
    H, Fan M, Sharma A (2021) Design and implementation of construction prediction
    and management platform based on building information modelling and three-dimensional
    simulation technology in industry 4.0. IET Collab Intell Manuf 3(3):224–232 Google
    Scholar   Sun H et al. (2021) Research on construction engineering quality management
    based on building information model and computer big data mining. Arab J Sci Eng
    0123456789 Szelag R (2019) Practical aspects of the use BIM technology for existing
    buildings. IOP Conf Ser Mater Sci Eng 471:10 Google Scholar   Tahmasebinia F et
    al (2020) Criteria development for sustainable construction manufacturing in construction
    industry 4.0: theoretical and laboratory investigations. Constr Innov 20(3):379–400
    Google Scholar   Tanoli WA et al (2018) 3D design modeling application in machine
    guidance system for earthwork operations. KSCE J Civ Eng 22(12):4779–4790 Google
    Scholar   Terreno S, Anumba CJ, Dubler C (2016) BIM-based management of building
    operations. In: Construction research congress 2016. American Society of Civil
    Engineers, Reston, VA. https://doi.org/10.1061/9780784479827.203 Terwel K, Hanssen
    R, van Waning H (2015) Predicting structural disasters with radar interferometry.
    In: IABSE conference, Geneva 2015: structural engineering: providing solutions
    to global challenges - report Teufl S et al (2018) Optimised – developing a state
    of the art system for production planning for industry 4.0 in the construction
    industry using simulation-based optimisation. Adv Transdiscipl Eng 7:731–740 Google
    Scholar   Tezel A et al (2020) Preparing construction supply chains for blockchain
    technology: an investigation of its potential and future directions. Front Eng
    Manag 7(4):547–563 Google Scholar   Tian Y, Yue H (2016) Application research
    of BIM technology in computer aided design of building foundation. Chem Eng Trans
    51:427–432 Google Scholar   Torres J et al (2021) Plug and play modular façade
    construction system for renovation for residential buildings. Buildings. https://doi.org/10.3390/buildings11090419
    Article   Google Scholar   Venkatachalam K et al (2021) An effective construction
    monitoring system using sensor centered technologies. Int J Syst Assur Eng Manag.
    https://doi.org/10.1007/s13198-021-01218-4 Article   Google Scholar   Vestin A,
    Säfsten K, Löfving M (2021) Smart factories for single-family wooden houses –
    a practitioner’s perspective. Constr Innov 21:64–84 Google Scholar   Wang L et
    al (2020a) Automatic monitoring system in underground engineering construction:
    review and prospect. Adv Civ Eng 2020:1–16 Google Scholar   Wang M et al (2020b)
    A systematic review of digital technology adoption in off-site construction: current
    status and future direction towards industry 4.0. Buildings 10(11):204 Google
    Scholar   Wang X, Ran Y, Zhu Y (2021) Research on health monitoring for large
    span steel structures. Earth Space Wang X et al. (2017) Research on collaborative
    management of prefabricated construction: integration of design and construction.
    ICCREM 2017 Wang Q et al. (2018) Additive manufacturing: a revolutionized power
    for construction industrialization. In: ICCREM 2018. American Society of Civil
    Engineers, Reston, VA https://doi.org/10.1061/9780784481721.010 Wen J, Gheisari
    M (2020) Using virtual reality to facilitate communication in the AEC domain:
    a systematic review. Constr Innov 20(3):509–542 Google Scholar   World Economic
    Forum, Boston Consulting Goup (2017) Shaping the future of construction inspiring
    innovators redefine the industry World Economic Forum (2018) An action plan to
    accelerate building information modeling (BIM) Wu W et al (2018) DEA-based performance
    evaluation system for construction enterprises based on BIM technology. J Comput
    Civ Eng 32(2):1–10 Google Scholar   Wu W et al (2020) Comparing traditional and
    mixed reality-facilitated apprenticeship learning in a wood-frame construction
    lab. J Constr Eng Manag 146(12):04020139 Google Scholar   Wu H et al (2021) On-site
    construction quality inspection using blockchain and smart contracts. J Manag
    Eng 37:6 Google Scholar   Wu W et al. (2017) Exploring the body of knowledge for
    building information modeling implementation using the delphi method. Computing
    in Civil Engineering 2017. http://ascelibrary.org/doi/10.1061/9780784479247.083
    Yan P, Liu T, Huang S (2015) General contract management based on BIM5D. In: ICCREM
    2015. American Society of Civil Engineers, Reston, VA. http://ascelibrary.org/doi/10.1061/9780784479377.022
    Yang Y et al (2021) Sources of uncertainties in offsite logistics of modular construction
    for high-rise building projects. J Manag Eng 37(3):1–14 Google Scholar   Yang
    C-C, Kamat VR, Menassa CC (2016) BIMap: plan drawings as tangible interfaces for
    building information models. In: Construction Research Congress 2016. American
    Society of Civil Engineers, San Juan. http://ascelibrary.org/doi/10.1061/9780784479827.203
    Yevu SK, Yu ATW, Darko A (2021) Digitalization of construction supply chain and
    procurement in the built environment: emerging technologies and opportunities
    for sustainable processes. J Clean Produc 322:129093 Google Scholar   Yi Z, Jinshen
    G, Xu W (2019) Intelligent settlement monitoring system of high-speed railway
    bridge. J Civ Struct Heal Monit 9(3):307–323 Google Scholar   You Z, Feng L (2020)
    Integration of industry 4.0 related technologies in construction industry: a framework
    of cyber-physical system. IEEE Access 8:122908–122922 Google Scholar   Yusoff
    SNS, Brahim J (2021) Implementation of building information modeling (Bim) for
    social heritage buildings in kuala lumpur. Int J Sustain Constr Eng Technol 12(1):88–99
    Google Scholar   Zaker R, Coloma E (2018) Virtual reality-integrated workflow
    in BIM-enabled projects collaboration and design review: a case study. Vis Eng
    6:1 Google Scholar   Zekavat PR, Moon S, Bernold LE (2015) Holonic construction
    management: unified framework for ICT-supported process control. J Manag Eng 31(1):1–15
    Google Scholar   Zhang Y et al (2020) Process-oriented framework to improve modular
    and offsite construction manufacturing performance. J Constr Eng Manag 146(9):04020116
    Google Scholar   Zhang C et al (2021) Mix design concepts for 3D printable concrete:
    a review. Cem Concr Compos 122:104155 Google Scholar   Zhang Y, Liu H, AL-Hussein,
    M (2018) Recommender system for improving BIM efficiency: an interior finishing
    case study. In: Construction research congress 2018. American Society of Civil
    Engineers, Reston, VA. https://ascelibrary.org/doi/pdf/10.1061/9780784481301 Zhang
    G et al. (2019a) New development of dam construction technology in China. In:
    CCME 2018. http://dpi-proceedings.com/index.php/dtcse/article/view/28627 Zhang
    X et al. (2019) A cost model to evaluate the economic performance of contour crafting.
    In: Computing in civil engineering 2019. American Society of Civil Engineers,
    Reston, VA. http://ascelibrary.org/doi/10.1061/9780784479247.083> Zhou Z, Irizarry
    J, Lu Y (2018) A Multidimensional framework for unmanned aerial system applications
    in construction project management. J Manag Eng 34:3 Google Scholar   Zhou H,
    Gao H (2016) Application of the visualization of BIM technology in construction.
    In: ICCREM 2016. American Society of Civil Engineers, Reston, VA. http://ascelibrary.org/doi/10.1061/9780784480274.012
    Zhu Q et al. (2020) Cognitive benefits of human-robot collaboration in complex
    industrial operations: a virtual reality experiment. In: Construction research
    congress 2020. American society of civil engineers, Reston, VA. http://ascelibrary.org/doi/10.1061/9780784482858.015
    Zou Z, Yu X, Ergan S (2019) Integrating biometric sensors, VR, and machine learning
    to classify EEG signals in alternative architecture designs. In: Computing in
    civil engineering 2019. http://ascelibrary.org/doi/10.1061/9780784479247.083 Download
    references Author information Authors and Affiliations Department of Civil Engineering,
    Federal University of Rio Grande do Sul (UFRGS), Porto Alegre, Rio Grande Do Sul,
    Brazil Julia Menegon & Luiz Carlos Pinto da Silva Filho Laboratório de Ensaios
    e Modelos Estruturais - LEME, 9500 Bento Gonçalves Ave, BLDG 43436 - Sector 4,
    Porto Alegre, RS, Brazil Julia Menegon Corresponding author Correspondence to
    Julia Menegon. Ethics declarations Conflict of interest On behalf of all authors,
    the corresponding author states that there is no conflict of interest. Rights
    and permissions Springer Nature or its licensor (e.g. a society or other partner)
    holds exclusive rights to this article under a publishing agreement with the author(s)
    or other rightsholder(s); author self-archiving of the accepted manuscript version
    of this article is solely governed by the terms of such publishing agreement and
    applicable law. Reprints and permissions About this article Cite this article
    Menegon, J., da Silva Filho, L.C.P. The Impact of Industry 4.0 Concepts and Technologies
    on Different Phases of Construction Project Lifecycle: A Literature Review. Iran
    J Sci Technol Trans Civ Eng 47, 1293–1319 (2023). https://doi.org/10.1007/s40996-022-00989-5
    Download citation Received 09 February 2022 Accepted 18 October 2022 Published
    17 December 2022 Issue Date June 2023 DOI https://doi.org/10.1007/s40996-022-00989-5
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Construction 4.0 New technology Digital transformation Construction
    lifecycle Construction innovation Use our pre-submission checklist Avoid common
    mistakes on your manuscript. Sections Figures References Abstract Introduction
    Systematic Review Protocol Main Findings Impact of IR 4.0 Technologies and Concepts
    in the Construction Phases Final Remarks References Author information Ethics
    declarations Rights and permissions About this article Advertisement Discover
    content Journals A-Z Books A-Z Publish with us Publish your research Open access
    publishing Products and services Our products Librarians Societies Partners and
    advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress
    Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Iranian Journal of Science and Technology - Transactions of Civil Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'The Impact of Industry 4.0 Concepts and Technologies on Different Phases
    of Construction Project Lifecycle: A Literature Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Jara Ochoa H.J.
  - Peña R.
  - Ledo Mezquita Y.
  - Gonzalez E.
  - Camacho-Leon S.
  citation_count: '1'
  description: IoT platforms for the transportation industry are portable with limited
    battery life and need real-time and long-term monitoring operations. Since MQTT
    and HTTP are widely used as the main communication protocols in the IoT, it is
    imperative to analyze their power consumption to provide quantitative results
    that help maximize battery life in IoT transportation systems. Although is well
    known that MQTT consumes less power than HTTP, a comparative analysis of their
    power consumption with long-time tests and different conditions has not yet been
    conducted. In this sense, a design and validation of an electronic cost-efficient
    platform system for remote real-time monitoring is proposed using a NodeMCU module,
    in which experimentation is carried out for HTTP and MQTT with different QoS levels
    to make a comparison and demonstrate the differences in power consumption. Furthermore,
    we characterize the behavior of the batteries in the systems and compare the theoretical
    analysis with real long-time test results. The experimentation using the MQTT
    protocol with QoS 0 and 1 was successful, resulting in power savings of 6.03%
    and 8.33%, respectively, compared with HTTP, demonstrating many more hours in
    the duration of the batteries, which could be very useful in technological solutions
    for the transport industry.
  doi: 10.3390/s23104896
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 10 10.3390/s23104896 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editors Alexandru Lavric
    Liliana Anchidin Adrian I. Petrariu Subscribe SciFeed Recommended Articles Related
    Info Links More by Authors Links Article Views 2078 Citations 3 Table of Contents
    Abstract Introduction Related Work IoT Application Layer Protocols Material and
    Methods System Prototype Results Conclusions and Future Work Author Contributions
    Funding Institutional Review Board Statement Informed Consent Statement Data Availability
    Statement Acknowledgments Conflicts of Interest References share Share announcement
    Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse
    textsms Comment first_page settings Order Article Reprints Open AccessArticle
    Comparative Analysis of Power Consumption between MQTT and HTTP Protocols in an
    IoT Platform Designed and Implemented for Remote Real-Time Monitoring of Long-Term
    Cold Chain Transport Operations by Heriberto J. Jara Ochoa , Raul Peña , Yoel
    Ledo Mezquita , Enrique Gonzalez and Sergio Camacho-Leon * Tecnologico de Monterrey,
    School of Engineering and Sciences, Ave. Eugenio Garza Sada 2501, Monterrey 64849,
    Mexico * Author to whom correspondence should be addressed. Sensors 2023, 23(10),
    4896; https://doi.org/10.3390/s23104896 Submission received: 31 March 2023 / Revised:
    5 May 2023 / Accepted: 12 May 2023 / Published: 19 May 2023 (This article belongs
    to the Special Issue IoT Multi Sensors) Download keyboard_arrow_down     Browse
    Figures Review Reports Versions Notes Abstract IoT platforms for the transportation
    industry are portable with limited battery life and need real-time and long-term
    monitoring operations. Since MQTT and HTTP are widely used as the main communication
    protocols in the IoT, it is imperative to analyze their power consumption to provide
    quantitative results that help maximize battery life in IoT transportation systems.
    Although is well known that MQTT consumes less power than HTTP, a comparative
    analysis of their power consumption with long-time tests and different conditions
    has not yet been conducted. In this sense, a design and validation of an electronic
    cost-efficient platform system for remote real-time monitoring is proposed using
    a NodeMCU module, in which experimentation is carried out for HTTP and MQTT with
    different QoS levels to make a comparison and demonstrate the differences in power
    consumption. Furthermore, we characterize the behavior of the batteries in the
    systems and compare the theoretical analysis with real long-time test results.
    The experimentation using the MQTT protocol with QoS 0 and 1 was successful, resulting
    in power savings of 6.03% and 8.33%, respectively, compared with HTTP, demonstrating
    many more hours in the duration of the batteries, which could be very useful in
    technological solutions for the transport industry. Keywords: Internet of Things
    (IoT); power consumption; Hypertext Transfer Protocol (HTTP); Message Queue Telemetry
    Transport (MQTT); long-term monitoring; NodeMCU 1. Introduction 1.1. IoT Technology
    In our modern world, considerable progress has been made in Internet of Things
    (IoT) technology. IoT systems have had exponential growth, and it is estimated
    that in future years, there will be more than 50 billion IoT devices in the world
    [1,2]. IoT technology has contributed to the development of novel logistics applications
    such as intelligent transportation systems [3], smart traffic monitoring [4,5],
    supply chain tracking [6], smart agriculture [7], damage detection, and monitoring
    the conditions in which goods are transported and stored [8], among many others.
    According to the International Data Corporation (IDC), which is the premier global
    provider of market intelligence and advisory services, the transportation sector
    will have significant growth in the IoT market, and it is expected to reach USD
    195 billion by 2020 [5]. IoT technology is changing the mode of operations in
    logistics and infrastructure, improving efficiency, reliability, safety, and tracking.
    Even though at present, IoT platforms in the transportation industry are widely
    used, they have a big limitation with regard to their power consumption, as most
    of them are planned to be portable. Coupled with this, a change of battery is
    needed at certain intervals of time, particularly for long-term monitoring. 1.2.
    Long-Term Cold Chain Transport Operations Effective cold chain transportation
    helps to reduce losses for companies. When a cold chain breaks down during the
    storage, transportation, and loading and unloading of products, quality and consumer
    health are compromised [9,10]. In the U.S.A., approximately 88 million tons of
    food are wasted year by year, representing almost USD 143 billion in losses [11].
    Food spoilage due to the development of microorganisms is favored when important
    variations in environmental conditions such as temperature, humidity, and light
    intensity occur [12]. Moreover, products are often wasted when failures in refrigeration
    or transportation units take place. Conventional cold chain systems can only display
    and record environmental data in situ [13]; however, monitoring in real time is
    needed for tracking and predicting risks during cold chain transportation [14].
    As aforementioned, it is clear that it is extremely important to find new methods
    and technologies to ensure the quality of products. Because of the great potential
    for monitoring abnormal events related to temperature and humidity and sensitive
    products in real time that facilitates taking corrective actions, IoT technology
    has rapidly been adopted in the supply chain area. Technical Challenges in Cold
    Chain Transportation Despite the benefits of IoT technology that enable interconnectivity
    between sensors, vehicles, and cloud-based IT systems, technical challenges need
    to be considered to maximize a system’s overall performance: Keeping devices connected
    as they move: A system’s architecture must be suited to managing bidirectional
    data transmission and intermittencies in network access when vehicles are in movement.
    Some IoT applications within cold chain transportation could require real-time
    data transmission over long distances. The implementation of embedded systems:
    Commonly, these kinds of devices have minimal resources, including low computation
    power. A lightweight and efficient protocol is required to optimize network bandwidth.
    Scalability: Broadcasting a message to or from many clients in real time is not
    an easy task. Additionally, it is hard to guarantee client–server connections
    when scaling up or down the number of devices connected to an IoT system. Reliable
    and secure data management: Identity, the encryption of messages, and authentication
    protocols must be used to protect data during the transmission process. Energy
    constraints: Even though at present, IoT platforms in the transportation industry
    are widely used, they have a big limitation with regard to power consumption,
    as most of them are planned to be portable. Coupled with this, a change of battery
    is needed at certain intervals of time, particularly for long-term monitoring.
    1.3. Research Contribution The aim of the presented work and the main contributions
    of this paper include the following: The design and implementation of a cost-efficient
    IoT electronic platform for the remote real-time monitoring of long-term cold
    chain transport operations. The evaluation and validation of the performance,
    accuracy, and precision of the sensed variables in the electronic platform. A
    comparative analysis of the power consumption between two of the most used protocols
    in the IoT, namely, the Hypertext Transfer Protocol (HTTP) and Message Queue Telemetry
    Transport (MQTT). The analysis was performed with identical hardware to compare
    the HTTP client/server and MQTT publish/subscribe models. Moreover, the magnitude
    of the quality of service (QoS) using the MQTT protocol was valued as either 0
    or 1. A prediction model for the life cycle of batteries in the implemented platform,
    according to its specifications for long-term tests. The rest of the paper is
    organized as follows. Section 2 describes the related work in terms of IoT architectures
    with NodeMCU and power consumption evaluations between the MQTT and HTTP protocols.
    Then, Section 3 discusses the main features of the MQTT and HTTP IoT protocols.
    Afterward, in Section 4, we describe the materials used to design the platform,
    and we depict the methods and setups to run the experiments. In Section 5, we
    describe the system prototype and the needed cost of each component. Then, Section
    6 presents all the obtained results. This paper concludes in Section 7, wherein
    we provide our conclusions and future work. 2. Related Work 2.1. NodeMCU for IoT
    Applications NodeMCU is a commonly used microcontroller unit (MCU) in wireless
    and IoT applications. It is a low-cost open-source IoT platform that includes
    firmware that runs in an ESP8266 Wi-Fi system on a chip (SoC) from Espressif Systems.
    It is a programmable, simple, and portable microcontroller that can be accessed
    and controlled remotely at any location across the globe at any time. NodeMCU
    can be used for many purposes such as domotics, smart plugs and lights, industrial
    wireless control, IP cameras, sensor networks, wearable electronics, and Wi-Fi
    location-aware devices, among many others [15]. Some remarkable experiments are
    mentioned below. Khan et al. [16] used NodeMCU in a portable biometric attendance
    system for academic purposes with wireless interactions to a web server storing
    information in a MySQL database. All the data on a student are stored in the database
    when a finger is registered, and his/her attendance is counted automatically and
    wirelessly stored in the designed database. Wi-Fi microcontrollers are also frequently
    used in domotics. They are not only used for status indicators of different variables
    but also for efficient control and optimization performance, avoiding the unnecessary
    use of power and resources by turning on/off lights, regulating their intensity,
    and controlling fan and water pump flow [17,18,19]. Abdulahad [20] elaborated
    a system to control air quality, temperature, and humidity in many food stores
    in remote locations through web servers. Two actions are taken: an air cooler
    is turned on to cool down perishable food when some variables reach certain values,
    and an air puller is activated to pull the contamination out of the locations.
    Furthermore, health is an important area in which improvements in IoT technology
    can always be made. Chooruang [21] implemented a heart rate monitoring system
    using an ESP8266 Wi-Fi module (AMICA, Taiwan) in which detection of the real-time
    heart rate of a patient was realized, obtaining a very good percentage error of
    approximately 2% and 6%. Besides heart rate monitoring, blood pressure monitoring
    experiments have been conducted. Singh [22] created an economically user-friendly
    method to detect blood pressure in real time. The prediction program can automatically
    release an appropriate medical dosage invasively in cases of an emergency. In
    addition, blood pressure readings are immediately communicated to emergency contacts
    if the data are outside of the threshold. Some other investigations and experiments
    have been conducted in the IoT area that will have a lot of applications in the
    near future such as in voice-controlled autonomous vehicles [23]. IoT applications
    are limitless and can be used in any area and in any environment with the correct
    sensors, actuators, and displays. 2.2. Power Consumption between HTTP and MQTT
    In terms of the application layer, which is responsible for the interface between
    communications and the application running on the host [24], two of the most representative
    application protocols for IoT technology, namely, HTTP and MQTT, are compared.
    These two protocols play important roles because both protocols are used in the
    experimentation part in Section 5, which gives us important results in Section
    6 related to the power consumption of the system. Wireless communication protocols
    represent a percentage of the total power consumption in an IoT platform, in which
    the battery depends on the selected protocol. Below, some experiments evaluating
    power consumption using the HTTP and MQTT protocols are presented. In [25], energy
    consumption studies on 3G and Wi-Fi transmission using real traffic data were
    conducted. The studies were performed with a modern smartphone for Wi-Fi, a specific
    mobile broadband module for 3G, and a major mobile operator, where the application
    was run using the MQTT and HTTP protocols. MQTT resulted as a better solution
    for energy consumption when the number of users and the sharing interval were
    low. An air control device is presented in [26]. It uses an ESP12E microcontroller
    and a DHT22 temperature sensor in a system using Wi-Fi connectivity. Different
    parameters such as latency and current consumption are compared to obtain the
    most optimal case. The paper concludes that the MQTT protocol has lower latency
    and overhead and power transmission than HTTP, and the battery life of the batteries
    becomes longer with MQTT. In [27], an evaluation of many established messaging
    protocols including MQTT, the Constrained Application Protocol (CoAP), and HTTP
    for IoT systems is conducted, comparing architectures, transport protocols, message
    size, message overload, latency, bandwidth, reliability of QoS, and interoperability,
    among other variables. It establishes that the MQTT protocol consumes less power
    than HTTP and that it is better for power consumption solutions. According to
    [28], MQTT resulted in a better power consumption performance. In the experimentation,
    with 3G technology, 4.1% of the battery per day is saved just by using MQTT over
    HTTPS to maintain an open stable connection, while Wi-Fi technology had similar
    results as well. Finally, in [29], the authors compare MQTT with QoS 0 vs. HTTPS
    protocols, evaluating their performance and battery energy consumption with a
    novel approach in which a developed device acts as an MQTT broker instead of the
    typical cloud-based architecture, eliminating the need for an external internet
    server and making the system simpler and more affordable and secure. It concludes
    that HTTPS is slightly more efficient in terms of establishing connections, while
    MQTT is more efficient during transmission and regarding power consumption. Most
    of the previously presented works agree that the MQTT protocol consumes less power
    than HTTP, which can be used as a very good solution in IoT technology for power
    consumption issues. 3. IoT Application Layer Protocols 3.1. HTTP HTTP is the first
    acknowledged IoT protocol that uses a request/response architecture in a client–server
    model, and it is mainly used to deploy web servers. A web server provides solicited
    data via browsers, and through HTTP, they are delivered in HyperText Markup Language
    (HTML) format. The browsers always begin communication with the petition of an
    HTML document to the server, and then, the document is processed and sends more
    petitions to request scripts, Cascading Style Sheets (CSS), among other aspects.
    Client/Server Architecture The client/server architecture is a request–response
    model consisting of a client and a server system communicating over a computer
    network. This architecture provides an enhanced way to share the workload. The
    client is constantly launching a connection to the server, while the server is
    always waiting for a request from any client. Giving an example, as seen in Figure
    1, a client can be a computer hardware device and a server can be a computer.
    Each of the servers provides a response to the client devices (laptops, tablets,
    and smartphones) [30,31]. Figure 1. Request–response architecture in HTTP. 3.2.
    MQTT Protocol MQTT, developed in 1999, is an open network protocol that transports
    messages between devices and is frequently used in IoT applications. The Transmission
    Control Protocol (TCP) is one of the fundamental sets of protocols on the internet,
    which is important in the MQTT protocol because it usually runs over the TCP/IP.
    Unlike HTTP, the MQTT protocol uses a publish/subscribe architecture, and, although
    HTTP is more used, MQTT has more applications in the wireless area because it
    is faster, requires less bandwidth, and requires less consuming power. An example
    of an MQTT application in the wireless area is in the Web of Things platform (WoT)
    for students’ learning process [32]. The WoT performs remote experimentation with
    a collaborative learning environment and analyzes the data generated via sensors
    displaying relevant information on dashboards. The authors define three layers
    for a full cycle of development in IoT solutions: (1) basic interaction with sensors
    and specific communication protocols; (2) data management models to handle the
    generated data; and (3) the processing and visualization of the most relevant
    indicators in the IoT devices. One of the main advantages of the MQTT protocol
    is the energy saving of the broker when a cloud-based broker is selected because,
    in many experiments, a physical broker must be used to transmit the information,
    such as a Raspberry Pi computer. Furthermore, the power savings are because it
    takes less time, and fewer data packets (bigger data-size packets than HTML) are
    sent. 3.2.1. Publish/Subscribe Architecture In the publish/subscribe architecture,
    as seen in Figure 2, a client publishes information and other clients can subscribe
    to only the information they want to receive. Publishing is the operation in which
    a client wants to send data to the broker and subscribes when the broker sends
    the data to the clients. While HTTP requests to open and close the connection
    at each request, MQTT stays online to always maintain an open channel between
    the broker and the clients. Some of the challenges in this architecture are the
    discovery of publishers and topics and the guaranteed delivery when publishing
    to a distributed database [33]. Figure 2. Publish/subscribe architecture in MQTT
    protocol. Regarding the structure of this architecture, MQTT topics are structured
    in a hierarchical way, similar to folders in a computer where a slash (/) establishes
    the limit. One example of this topical layer structure could be myhome/upperfloor/myroom/temperature.
    Regardless of the QoS level, the interaction sequence in MQTT would be the connection
    between the publisher and the broker where an acknowledgment signal is returned,
    the connection and subscription between the subscriber and the broker with its
    acknowledgment signal, and, finally, the publishing from the publisher to the
    broker and then to the subscriber if it is a subscriber to that topic. 3.2.2.
    Broker The MQTT broker is the heart of the entire MQTT protocol because it is
    the server that transfers messages between senders and receivers. The broker facilitates
    and filters the information between clients. This has many advantages in a system
    [34]: Space: Subscribers and clients do not need to know the IPs of each other.
    Time: Clients do not have to be running at the same time. Synchronization: Publishing
    and receiving information can occur simultaneously, and this does not halt operations.
    3.2.3. Quality of Service All messages are published with a QoS level, which specifies
    the delivery requirement and ensures the reliability of messaging. MQTT supports
    three levels of QoS: 0, 1, and 2 [35,36], which can be seen in Figure 3. In a
    system, clients can have different numbers of QoS levels, and when a client is
    subscribed to a specific topic, the client determines the maximum level of QoS.
    It does not matter if the sender publishes a message on a certain topic with a
    higher QoS level; the system will proceed with the level established by the receiver
    [37]. Figure 3. Packet transmission method with QoS levels in MQTT. QoS 0: “At
    most once”. A message is sent only once, and whether the message was received
    by the client is not verified. This level is the simplest, but it is possible
    to lose packages of data. QoS 1: “At least once”. At level 1, a message is sent,
    and the delivery status is checked via the status check message, called the PUBACK.
    The broker stores messages and sends them until clients have acknowledged their
    delivery, but if a PUBACK is lost, duplicate messages are received by the client
    since there is no confirmation of delivery. QoS 2: “Exactly once”. Messages have
    a second acknowledgment round trip, having four interactions between the client
    and the broker to ensure that the messages are delivered only once. Message loss
    is not possible with QoS 2, but the process is more complicated and sometimes
    requires more time. Comparing the different QoS levels, in [38], cellular network
    and Wi-Fi experimentation was conducted to make a comparison in terms of power
    consumption using the MQTT protocol. The experimentation concluded that QoS 1
    was the level that consumed less power, followed by QoS 2 and finally QoS 0, over
    Transport Layer Security (TLS). QoS 0 and 2 consumed 6.7% and 5% more energy than
    QoS 1, respectively. In [39], a power consumption comparative analysis using MQTT
    was made with different variables in the system, such as the number of publishers
    and subscribers, different amounts of payloads, and different magnitudes of QoS
    levels. In general, QoS 1 and 2 had better power consumption results compared
    with QoS 0. Moreover, as the QoS level increased, the number of messages reaching
    the subscriber in a given period was reduced. 4. Material and Methods 4.1. Hardware
    In the proposed electronic platform, different devices were used for our experimental
    work: a NodeMCU board for data capture, processing, and transmission; a DHT11
    module to collect temperature and humidity measurements; a GY-NEO6MV2 module,
    which is a Global Positioning System (GPS) sensor for geolocation; and a microSD
    card module that allowed the NodeMCU board to communicate with the memory card
    and write or read the information on it. To visualize the relevant data, a Grove
    liquid-crystal display (LCD) with an RGB (red, green, and blue) backlight was
    included. Finally, a portable battery took over to power the whole system platform.
    The different components can be seen in Figure 4. Figure 4. Devices used to design
    the experimental electronic platform: (a) NodeMCU board; (b) DHT11 module and
    GPS sensor; (c) LCD; (d) microSD card module and memory; and (e) portable battery.
    4.2. Measurement Equipment To analyze the behavior of the system, the oscilloscope
    Tektronix TBS1000 (Oregon, USA), a MUL-280 multimeter (Longwood, FL, USA), and
    an NI myDAQ (Austin, TX, USA) data acquirer were needed to measure accurate values
    of voltage, current, power, and energy wasted on the electronic platform. Figure
    5 shows the mentioned measurement equipment. Figure 5. Measurement equipment:
    (a) oscilloscope; (b) multimeter; and (c) NI myDAQ. Data Acquirer Data acquisition
    (DAQ) in electronic prototypes is the process of measuring an electric signal,
    such as voltage or current, with a computer in programmable software. Transductors
    are essential to calculate physical phenomena such as temperature, pressure, light,
    sound, force, and acceleration, among many others, through measurements of changes
    in voltage and current. In comparison with traditional measurement systems such
    as oscilloscopes and multimeters, the DAQ system takes advantage of processing
    power, productivity, visualization, and connectivity skills in the industry with
    powerful, flexible, and cost-effective measurement solutions. A DAQ device is
    an interface between a computer and physical signals. It mainly digitizes analog
    input signals to be interpreted with a computer. Three key components are needed
    in a DAQ device to measure a signal: Signal conditioning: Physical signals are
    usually noisy, and they are not prepared for input into an ADC. Signal conditioning
    is a process that adapts signals to a required input range. This circuit can include
    amplification, attenuation, and filtering. Analog-to-digital converter (ADC):
    Analog signals from sensors are converted into digital signals before being sent
    to the computer. The communication between the DAQ system and the computer is
    digital, so the DAQ system carries out the procedure to transform analog signals
    into digital signals. PC bus: The communication between the DAQ and the PC is
    through a port where the bus works as a communication interface. The ADC makes
    periodic samples of the signal at a predefined rate, which are sent to the PC
    through the PC bus, where the original signal is reconstructed. The most common
    PC buses are USB and Ethernet. A NI myDAQ, as shown in Figure 5c, was needed to
    record readings in the system. It can be used as an oscilloscope, ammeter, voltmeter,
    or function generator, among many other applications. The NI myDAQ uses LabVIEW
    and NI Multisim software and information is sent via a USB PC bus. It has a 16-bit
    resolution and a maximum sampling rate of 200 KS/s. It can work with ± 10V and
    has a very good time resolution of 10 ns. 4.3. Web Development Methodology (Front-End)
    In this prototype, the creation of a web server was very important to display
    the sensed data acquired with the microcontroller. HTML, CSS, and JavaScript were
    some tools required for the elaboration of the front end. 4.3.1. HTTP Dashboard
    Figure 6a illustrates the dashboard design. First, the indicators of the variables
    are displayed showing the actual magnitudes of the temperature and humidity and
    the coordinates, and they are updated every 10 s. The update time can be changed
    to any time greater than 2 s, which is the period in which the DHT11 sensor can
    work with more frequency, but for this prototype, it was decided to make lectures
    every 10 s to have enough space in the memory. Then, a map in real time is displayed,
    as can be seen in Figure 6b. A map design from “mapbox” was obtained, which is
    an American provider of online maps for websites such as Facebook, Snapchat, and
    The Weather Channel, among many others. It has a free option and is a little bit
    limited, but for this project’s purposes, it worked perfectly. Finally, Figure
    6c illustrates 2 graphs of the last 30 registers of the temperature and humidity
    measurements, which are updated every 10 s as the indicators at the top of the
    web server. When the cursor is on one point of the graph, it displays the date
    and the magnitude. Figure 6. HTTP dashboard components: (a) displayed indicators;
    (b) real-time map; and (c) graphs of temperature and humidity. 4.3.2. MQTT Dashboard
    One of the advantages of using MQTT is that programming in Arduino IDE is easier
    than in HTML because it is not necessary to make the design. With the help of
    an MQTT broker, only a connection between the microcontroller and the broker is
    required. In this case, an Adafruit broker was used, and the design of the dashboard
    was directly made on the web page. It is only necessary to give the correct variables
    to display them in different formats. As shown in Figure 7a, the MQTT dashboard
    was made, and it indicates the temperature and humidity of the system. One disadvantage
    is that the broker is limited to many dashboards during free trials. Figure 7.
    MQTT dashboard: (a) displayed indicators; (b) map with location and routes. For
    geolocation purposes, a map in real time is displayed. The cloud-based MQTT Adafruit
    IO broker is limited to only one map designer, and in this case, this is the company
    Leaflet. Adafruit makes everything suitable for its products, and it designed
    libraries focused on good communication between the physical devices and the broker
    and map. Communication between a selected GPS sensor and the interaction with
    the map has its challenges because many tools are required to guarantee this.
    Finally, with the help of these tools, the broker was able to display our location
    and our trajectory in predefined periods. In Section 6, many periods of time are
    defined to analyze the waste of power in function of the number of messages sent
    with the different protocols. In Figure 7b, the route that was taken to travel
    along with the current location can be seen. This location is displayed and updated
    every predefined time according to the experimentation. 4.4. Web Development Methodology
    (Back-End) The back end is in charge of the functionality of the web page in the
    server-side development. It is important to carry out some activities that are
    not easily seen, such as communication with the server, the application, and the
    database. This is what happens when performing any action on a website. For our
    project, Hypertext Preprocessor (PHP) and MySQL tools were used in the back-end
    web development. 4.4.1. Database MySQL is an open-source database management service
    that uses Structured Query Language (SQL) as a specific domain language that is
    widely used in programming. It is the most popular system used with PHP, and it
    is very fast, reliable, and easy to use. A block diagram of the database is presented
    in Figure 8, where there are wired connections between the sensors and the NodeMCU.
    The microcontroller connects via Wi-Fi to the local access point (router) via
    HTTP and connects to the domain and the hosting server. With the code “post-nodemcu.php”,
    it uploads the information to the MySQL database, and with “nodemcu.php”, the
    information can be visualized from anywhere with the correct Uniform Resource
    Locator (URL). Figure 8. Database block diagram. 4.4.2. PHP PHP is a server-side
    scripting language that is especially suited to web development. PHP is used to
    connect and manipulate databases. Two codes, “nodemcu.php” and “post-nodemcu.php”,
    were created to prepare the database to store the readings. “nodemcu.php”: This
    code was created to allow data visualization everywhere. With this code, a web
    server in the created domain is made to have the readings sent to the database
    only by accessing the right link. “post-nodemcu.php”: This code is in charge of
    publishing sensor readings to the MySQL database. The PHP code creates an index
    of the table and prepares it to store the necessary readings in the MySQL database.
    In any system, it is important to save data when the electronic platform is working
    for future analysis if required. In Figure 9, the interface in phpMyAdmin can
    be seen, where all the values of the temperature, humidity, latitude, and longitude
    readings are stored in conjunction with their identification numbers and the times
    of the readings. Each reading was performed every 10 s. Figure 9. Database of
    recorded readings. 4.5. Measurement Methodology Many tools and devices were used
    to facilitate the different measurements in the circuit. A multimeter and an oscilloscope
    were used to see, in the first instance, the operation range of the current and
    the voltage consumed in the electronic platform. The determination of the instantaneous
    power of the electronic platform to conduct statistical procedures and obtain
    conclusions about the system was significant. With the multimeter and oscilloscope,
    it was not possible to carry out those readings; moreover, it was noted that there
    was too much variation in the current in the system according to the readings
    with the multimeter. In that sense, it was necessary to elaborate a program to
    store the values of instantaneous power P instantaneous (n)=V(n) × I(n) (1) and
    obtain the values of the voltage and current at the same time. At the end of the
    experiment, a buffer of lots of readings of the instantaneous power makes the
    statistical analysis more robust than with oscilloscope and multimeter readings.
    For the above-mentioned purpose, a small program in LabVIEW 2019 software was
    developed, wherein the data acquirer NI myDAQ was used to obtain voltage and current
    readings to determine the power of our circuit using the different protocols and
    with the different variables determined during this project. The objective of
    the LabVIEW program is to capture instant power readings, which are exported to
    a spreadsheet in Microsoft Excel to proceed with the statistical procedures. A
    DAQ assistant, which is a based tool that makes the steps to acquiring simple
    measurements in the LabVIEW configuration easier, was needed. Two DAQ assistants
    were necessary in the programming to perform the readings: one for voltage and
    the other one for current. Analog inputs (AI) were used for the voltage readings
    and multimeter inputs (A) for the current readings. The location of the multimeter
    inputs is on one side of the analog and digital pins of the device, as can be
    seen in Figure 10a,b. Figure 10. Schematics for the measurements with the NI myDAQ:
    (a) current measurement; (b) voltage measurement; and (c) complete schematic for
    the electronic platform. When setting up each DAQ assistant, specifying the signals
    that are going to be acquired and declaring them as analog inputs is needed. Voltage
    readings are assigned to “ai0” (analog inputs), while current readings are assigned
    to “dmm” (digital multimeter) pins. Once the configuration is carried out, the
    software shows the correct way to perform the connections. The current measurement
    diagram can be seen in Figure 10a, while the voltage measurement diagram is shown
    in Figure 10b. As was mentioned, in the current measurement, A0, AI, and DIO were
    not used, and only the HI and COM ports in the NI myDAQ were used as an ammeter.
    Moreover, in the voltage measurement, the HI and COM ports were not used, and
    only the AI0 (analog inputs) in the NI myDAQ were used as a signal recorder. Figure
    10c depicts the complete schematic of the proposed electronic platform with the
    voltage and current measurements using the NI myDAQ. The readings are sent via
    USB to the computer to record all the data. Once the readings are saved, statistical
    procedures can proceed to carry out the comparative analysis. The main objective
    of the LabVIEW program is to store lots of instant power data on our electronic
    platform. In Figure 11a, the interface on the front panel of the LabVIEW program
    can be seen, wherein three indicators and three waveform charts can be appreciated.
    In the charts, the readings are recorded according to the programming in the block
    diagram and then exported to a Microsoft Excel spreadsheet. Figure 11. LabVIEW
    programming: (a) front panel; (b) block diagram. In Figure 11b, the block diagram
    programming in LabVIEW can be seen. It is a very simple program, which consists
    of one for-loop that oversees carrying out a reading in each iteration. The DAQ
    assistant is in charge of the current readings and DAQ assistant2 oversees those
    of the voltage. These two signals are multiplied to obtain the power of the system,
    and then it is displayed in a chart, where a total of 100 (N = 100) current, voltage,
    and power readings are recorded. The time between each iteration is 1.5 s, so
    for each test, 150 s (2.5 min) is required. 5. System Prototype In this section,
    the architecture and price of the proposed electronic prototype are presented.
    A block diagram of the portable electric prototype can be seen in Figure 12a.
    The different serial protocols that communicate with the sensors, storage, and
    display can be seen at the bottom of the diagram, where UART is used for the GPS,
    SPI for the microSD, and I2C for the LCD. Then, the prototype establishes communication
    via HTTP or MQTT with the web server or with the Adafruit cloud-based broker,
    depending on which experimentation analysis is required. Communication with the
    MySQL database is realized in both cases. Figure 12. System prototype: (a) block
    diagram; (b) physical setup for experimentation. The cloud-based broker Adafruit
    IO is used in this project. Although the free version has many limitations, such
    as limited feeds variables (10), limited dashboards (5), and a limited sampling
    rate (30 data/minute), it perfectly meets our prototype specifications. Then,
    communication between the microcontroller and the final clients through wireless
    networks is realized to display the sensor readings on the dashboards in real
    time. Finally, the physical prototype can be observed in Figure 12b, where all
    the devices used in this electronic platform can be seen. Price The cost of the
    system is usually considered one of the three primary constraints of any project
    (scope and time are the other two). It is important and depends on us making the
    electronic platform as inexpensive as possible without limiting functionalities.
    In Table 1, the components of our electric platform with their prices can be seen
    to make an estimate of the budget required to elaborate this prototype. The prices
    are seen in dollars and are according to the Alibaba company website. Table 1.
    Components and price of the electronic platform. With USD 22.61, the electric
    platform can be put together. Many times, in IoT projects, LCDs are not required
    because the information can be seen on the dashboards or in the cloud. Therefore,
    with only USD 13.52, a complete real-time system with many sensors can be installed.
    6. Results In this section, a comparative analysis of the power consumption between
    the HTTP and MQTT protocols is conducted. In addition, the prediction model for
    the life cycle of batteries is presented. 6.1. Power Consumption of HTTP and MQTT
    with QoS 0 and 1 A comparison of the consumed power between the HTTP and MQTT
    protocols is presented in Table 2. A total of 3 tests for each of the 100 samples
    were carried out for 2 different situations for HTTP and MQTT with QoS 0 and 1.
    For each protocol, readings of the electronic platform were performed, one with
    the complete working system and another connecting only the microcontroller to
    analyze the power wasted in the NodeMCU without sensors, displays, or memory.
    In this table, the current, voltage, power, and energy were analyzed. In each
    case, the minimum and maximum current, voltage, and instant power were obtained,
    as well as the average power to compare them. From this data, the energy wasted
    in each test was calculated by multiplying the power average times the time for
    which the tests lasted (150 s). Table 2. Power consumption of HTTP and MQTT protocols.
    In addition, the averages of the previous results were obtained. First, the amounts
    of power wasted in the circuits in which only the microcontroller was working
    (without sensors, displays, or memory) were estimated to be very similar, independent
    of the protocol. Only 3.24 mW of power was the biggest difference between the
    average powers in the 3 cases. HTTP wasted 381.62 mW, while with the MQTT protocol,
    380.17 mW was wasted with QoS 0 and 383.31 mW with QoS 1. It can be declared that
    there are no significant differences between these cases when energizing only
    the microcontroller. Secondly, a difference between the average powers can be
    noted. Theoretically, the MQTT protocol with any QoS level wastes less power in
    its operation than HTTP. In the experimentation, a successful result was obtained.
    With MQTT, the circuit was consuming on average 629.68 mW with QoS 0 and 614.33
    mW with QoS 1, while with HTTP the average power was 667.33 mW. The magnitude
    of the difference in the average power consumption between the protocol that consumed
    less power (MQTT with QoS 1) and the protocol that consumed more power (HTTP)
    was 55.83 mW. The difference between HTTP and the MQTT protocol with QoS 0 was
    40.48 mW. Finally, the least difference in power consumption was with the MQTT
    protocol between QoS 0 and 1, being 15.35 mW. In Figure 13, the information in
    Table 2 is illustrated as a graph. The HTTP readings are shifted up with respect
    to the two cases in the MQTT protocol, meaning that HTTP consumes more power than
    the MQTT protocols. The downward peaks for the MQTT protocols can be observed
    in a better way, where QoS 1 has more than QoS 0. Figure 13. Graph of the power
    consumption in HTTP and MQTT protocols. The relationship between the above-mentioned
    cases in terms of power rate is presented in the following equations: Power rate=
    P MQTT0 P HTTP = 629.68 mW 670.16 mW =0.9396 (2) Power rate= P MQTT1 P HTTP =
    614.33 mW 670.16 mW =0.9167 (3) Power rate= P MQTT1 P MQTT0 = 614.33 mW 629.68
    mW =0.9756 (4) which obtain the relation percentages of power consumption in the
    different protocols. Different power rates of 0.9396, 0.9167, and 0.9756 are represented,
    meaning that the MQTT protocol with QoS 1 consumes 91.67% and 97.56% of the total
    average power consumed in HTTP and MQTT with QoS 0, respectively, and the MQTT
    protocol with QoS 0 consumed 93.67% of the power consumed in HTTP. In other words,
    there are power consumption savings in the MQTT cases of 6.03% (QoS 0) and 8.33%
    (QoS 1) with respect to HTTP. With the previous data, the expected lifetime of
    any power supply can be calculated. In the next equation, Battery Life (h)= Battery
    Capacity (Wh) Estimated Power (W) (5) the battery life in hours can be calculated
    for the different protocols. The battery capacity (Wh) was 72 Wh according to
    the battery specifications, while the average power was taken as the estimated
    power. Only one calculation was carried out from the data where only the microcontrollers
    were energized because the average powers were very similar. The average of the
    three values was taken to determine the battery life, while in the complete system,
    the data were taken from the average powers viewed in Table 2. Furthermore, the
    rate of change in the autonomy associated with the useful time of the battery
    can be seen in Table 3. This can be seen as the percentage over time, where 100%
    is divided over the calculation of the battery life to obtain the rate of change
    (%/h). Table 3. Expected battery life. With HTTP, the battery life is expected
    to last 107 h, while in the MQTT protocol with QoS 0 and 1, it is expected to
    last 114 and 117 h, respectively. The expected time savings with the MQTT protocol
    for this battery are 7 and 10 h. As a reference, when only energizing the microcontroller,
    the system is expected to last almost 189 h in all cases. 6.2. Normal and Real
    Distribution of Instantaneous Power Consumption In Table 4, the 3 tests per protocol
    are put together, forming a 300 instantaneous power sample table for each one
    of the cases: HTTP, MQTT QoS 0, and MQTT QoS 1. Table 4. Statistical parameters
    of the 300 samples per protocol. The prediction model will be presented in Section
    6.3, and it is based on the statistical normalization of 300 instantaneous power
    samples, i.e., their distributions are aligned to a normal (Gaussian) distribution,
    as seen in Figure 14a. In this sense, Figure 14a shows the following main statistical
    parameters: the minimum and maximum values, average, standard deviation, variance,
    median, mode, and range between the maximum and minimum values. Figure 14. Power
    consumption in HTTP and MQTT: (a) normal distributions; (b) real distributions.
    In Figure 14b, the real distributions of power consumption can be observed, comparing
    the three different protocols and analyzing the most constant range of values
    presented in the experimentation. The HTTP curve is shifted right, meaning that
    is the one that consumes more power, while MQTT QoS 1 is the protocol that consumes
    less power. 6.3. Prediction Model for Long-Term Tests The previous results can
    be used to characterize the behavior of the batteries in the systems with different
    protocols. Long-term experiments were made to corroborate and analyze this characterization.
    The results of the duration of the battery and the relative errors are analyzed
    in Table 5. Table 5. Theoretical and real discharge of battery. In addition, the
    model assumes a linear discharge of the battery, which is validated by the experimental
    data collected over 84 h and plotted in Figure 15. A steeper slope is noted for
    HTTP with respect to the two-line graphs for the MQTT protocol. This graph shows
    that the battery in the MQTT protocol with QoS 1 will last more than the others
    because it consumes less energy. With the line graphs, the theoretical values
    are presented, while the points indicate the real measurement values. Figure 15.
    Battery life. The linear equations of the battery capacity are given via the next
    equation: %Battery=100 − mt (6) where ‘m’ is equal to the slope, and ‘t’ is the
    time in hours. The number 100 is the maximum percentage of the battery that will
    decrease in time given the rate of change ‘m’. Different values of the rate of
    change are seen in the three different cases of the HTTP and MQTT protocols. Next,
    the theoretical linear equations %Battery MQTT 1=100 − 0.8532t (7) %Battery MQTT
    0=100 − 0.8746t (8) %Battery HTTP=100 − 0.9308t (9) are presented. With the results
    of the long-term experimentation, the real linear equations %Battery MQTT 1=101.25
    − 0.9077t (10) %Battery MQTT 0=101.17 − 0.9236t (11) %Battery HTTP=100.58 − 1.002t
    (12) are obtained, which are very similar to the theoretical linear equations
    previously seen. In Table 6, the theoretical energy consumption data from the
    longtime tests can be seen, while Figure 16 contains the theoretical graphs. Figure
    16. Energy consumption. Table 6. Theoretical energy consumption. Relative Error
    between Theory and Experimentation The relative error is given using the next
    equation: Error p (n)= |Theoretical value−Experimentation value| Theoretical value
    ×100 (13) In Figure 17, the relative error percentage graph of the three cases
    is given. An increase in the error percentage is noted because the error accumulates
    as time passes. The relative error for HTTP is higher than for the other two cases
    of the MQTT protocol. Both cases behave in a very similar way. Figure 17. Relative
    error percentage. Beyond 60 h, the relative error does not behave in a linear
    way, and it behaves as a higher-order function, as can be appreciated in the graph.
    7. Conclusions and Future Work In this paper, we presented the design and implementation
    of a cost-efficient IoT electronic platform for the remote real-time monitoring
    of long-term cold chain transport operations. In terms of cost, with USD 22.61,
    the electric platform can be put together. Moreover, if an LCD is not required
    in the implementation, with only USD 13.52, a complete real-time system can be
    installed. In terms of data validation, for both the HTTP and MQTT implementations,
    a dashboard and a map with real-time data were presented. The displayed data show
    the actual magnitude of the temperature and humidity and the coordinates for geolocation.
    Using our prototype, we conducted experiments to compare the HTTP and MQTT protocols
    with different QoS levels to select better solutions in the IoT area for the transport
    industry. In terms of the MQTT protocol, QoS 0 and QoS 1 were selected as the
    extreme cases in power consumption between the following three levels: QoS 0,
    QoS 1, and QoS 2. According to [38], QoS 1 is the level that consumes less power
    and QoS 0 is that which consumes the most. Nevertheless, for future experimentation,
    we will integrate and validate QoS 2 in our test platform. One of the main advantages
    of the MQTT protocol over HTTP in the IoT is that it consumes less power, which
    is a very important variable in IoT technology, and it could be proved in the
    experimentation. The above seems to be related to the size of the payload header
    format and the fact that, unlike MQTT, HTTP treats one request at a time [40].
    In our results, lots of data on instantaneous power were obtained with an NI myDAQ
    as the voltage and current data acquirer. The MQTT and HTTP protocols with a sampling
    rate of 10 s between each transfer of data were analyzed and 15 min between the
    data transfer to the MySQL database. The entire electronic platform consumed on
    average 629.68 mW and 614.33 mW using the MQTT protocol with QoS 0 and 1, respectively,
    while when using HTTP, the circuit consumed 667.33 mW. The electronic platform
    using the MQTT protocol with QoS 1 resulted in 91.67% of the total average consumed
    power in the electronic platform with HTTP, and 97.56% of the power wasted with
    QoS 0, while QoS 0 resulted in 93.96% of the power wasted in HTTP. There were
    power consumption savings in the MQTT cases of 6.03% (QoS 0) and 8.33% (QoS 1)
    with respect to HTTP. Using the MQTT protocol with QoS 1, the battery is expected
    to last 10 h more than when using HTTP and 3 h more than with QoS 0 with a 72
    Wh portable battery. With QoS 0, the battery is expected to last 7 h more than
    with HTTP. In cargo transport, 7 and 10 more operating hours result in a very
    good improvement in the system, having variables readings working correctly over
    more time. In the experimentation section, HTTP resulted in a bigger discharge
    rate than the MQTT protocols. Another advantage of the MQTT protocol is that no
    energy must be wasted in the broker if using a cloud-based broker, as was the
    one used in the presented prototype. A device-to-gateway model was used in the
    MQTT protocol where the Adafruit IO cloud-based broker acted as a cloud-based
    gateway. In other cases, it is necessary to use another microcontroller as a broker
    to transmit information. Furthermore, we presented a prediction model for the
    life cycle of batteries, according to their specifications for long-term tests.
    The obtained results show that the characterization for a few hours (from 0 to
    48 h) only presents a small relative error of up to 2.24 in comparison with the
    real experimentation. As time passes, an increase in the error percentage is observed
    because the error accumulates. The relative error in HTTP is higher than in the
    other two cases of the MQTT protocol. Both cases behave in a very similar way.
    A limitation of this article is that no analysis of how fast any system can work
    was carried out. It is important to have in mind the type of application in which
    your platform is going to perform. However, in this project, fast readings are
    not necessary because the main idea is to give contributions to future works to
    reduce the power of the circuit. In the IoT, it is very important to take care
    of wasted energy because most of the sensors in a sensor network are connected
    to a small portable battery, which has a limited lifetime. In the HTTP experimentation,
    it was realized that information can be transmitted very fast, but also, the system
    is going to be limited to the specifications of all the components of the circuit.
    In this case, a DHT11 temperature and humidity sensor can read a maximum of data
    every two seconds. In many cases, the velocity of a system depends on the physical
    limitations of the sensors. Another relevant topic to discuss, which was not included
    in the present work, is the evaluation of the differences in power consumption
    in a system with the ability to switch between the different qualities of service
    offered by the MQTT protocol. According to all the presented results, we depict
    some potential strategies to optimize power consumption in IoT-enabled cold chain
    systems: Develop new strategies for the detection of abnormalities in the parameters
    being monitored. New methodologies and systems need to consider the criteria to
    define abnormalities and detect whether transportation vehicles are in movement
    or not due to environmental conditions that could impact the desired range of
    values for temperature and humidity in products. Set the sampling rate according
    to the needs of the application, taking into consideration that the sampling frequency
    is proportional to the power consumption of any system. It would be valuable to
    increase the sampling period without altering the main functions of the electronic
    platform. Develop a hybrid IoT system capable of switching between the different
    levels of services in the MQTT message delivery quality of service according to
    the type of product, the environmental conditions, and the traffic within the
    cold supply chain. Leave out devices that are not indispensable to the performance
    of the system such as LCD, which is used for debugging purposes, and microSD memory,
    which can be substituted with the cloud database. Apply one of the multiple specialized
    methods and techniques to optimize code, which is intended to become smaller,
    executing tasks in a quicker way and performing fewer operations. With code optimization,
    the program is expected to consume less memory and the electronic system less
    power. Finally, this investigation opens the discussion for continuing this work
    in the future in the following different areas: Implementing cellular networks
    and analyzing the consumed power in the electronic platform. Fabricating the electronic
    platform in a PCB-Microelectro-Mechanical System (MEMS) to significantly reduce
    its size and make it more portable. Experimenting with different sampling rates
    to determine differences in power. Associating the data storage and databases
    with cloud providers such as Alibaba Cloud and Amazon Web Services, among others.
    Studying the differences in power consumption when varying many variables such
    as the time of data transmission, the number of subscribers/publishers in the
    system, and the number of sensors in wireless network nodes. Exploring other application
    layer protocols such as CoAP and WebSocket, which also have many uses in actual
    IoT applications. Author Contributions Conceptualization, H.J.J.O. and S.C.-L.;
    data curation, R.P., Y.L.M., E.G. and S.C.-L.; formal analysis, H.J.J.O.; funding
    acquisition, S.C.-L.; investigation, H.J.J.O.; methodology, H.J.J.O. and S.C.-L.;
    project administration, S.C.-L.; resources, S.C.-L.; software, H.J.J.O.; supervision,
    S.C.-L.; validation, H.J.J.O., R.P., Y.L.M., E.G. and S.C.-L.; visualization,
    S.C.-L.; writing—original draft, R.P., Y.L.M. and S.C.-L.; writing—review and
    editing, R.P., E.G. and S.C.-L. All authors have read and agreed to the published
    version of the manuscript. Funding This research was funded by the Tecnologico
    de Monterrey, through the research group on Innovation in Smart Digital Technologies
    and Infrastructure, and by the National Robotics Laboratory of the Northeast and
    Central Area of Mexico at the School of Engineering and Sciences. Institutional
    Review Board Statement Not applicable. Informed Consent Statement Not applicable.
    Data Availability Statement The data presented in this study is available in https://www.repositorionacionalcti.mx/recurso/oai:repositorio.tec.mx:11285/637503,
    accessed on 11 May 2023. Acknowledgments We thankfully acknowledge the CONACYT
    (National Council for Science and Technology of Mexico) for the Master’s and mobility
    scholarships awarded to H.J.J.-O. Conflicts of Interest The authors declare no
    conflict of interest. The funders had no role in the design of this study; in
    the collection, analysis, or interpretation of the data; in the writing of the
    manuscript; or in the decision to publish the results. References Xu, L.; McArdle,
    G. Internet of too many things in smart transport: The problem, the side effects
    and the solution. IEEE Access 2018, 6, 62840–62848. [Google Scholar] [CrossRef]
    Abraham, S.C. Internet of things (IoT) with cloud computing and machine-to-machine
    (M2M) communication. IJETST 2016, 3, 4654–4661. [Google Scholar] [CrossRef] Muthuramalingam,
    S.; Bharathi, A.; Rakesh Kumar, S.; Gayathri, N.; Sathiyaraj, R.; Balamurugan,
    B. IoT based intelligent transportation system (IoT-ITS) for global perspective:
    A case study. In Internet of Things and Big Data Analytics for Smart Generation;
    Kacprzyk, J., Lakhmi, C.J., Eds.; Springer International Publishing: Cham, Switzerland,
    2019. [Google Scholar] Sherly, J.; Somasundareswari, D. Internet of Things based
    smart transportation systems. IRJET 2015, 2, 1207–1210. [Google Scholar] Xie,
    X. Key Applications of the Smart IoT to Transform Transportation Systems; In WIOMAX
    Report, Washington, USA. 2018. Available online: http://www.wiomax.com/doc/report/WIO-TR-18-001.pdf
    (accessed on 11 May 2023). Tadejko, P. Application of Internet of Things in logistics-current
    challenges. JEMI 2015, 7, 54–64. [Google Scholar] Trilles, S.; Torres-Sospedra,
    J.; Belmonte, O.; Zaragaza-Soria, F.J.; González-Pérez, A.; Huerta, J. Development
    of an open sensorized platform in a smart agriculture context: A vineyard support
    system for monitoring mildew disease. Sustain. Comput. Inform. Syst. 2020, 28,
    100309. [Google Scholar] [CrossRef] Causevic, S.; Colakovic, A.; Haskovic, A.
    The model of transport monitoring application based on Internet of Things. In
    Proceedings of the International Scientific Conference on Science and Traffic
    Development, Opatija, Croatia, 10–11 May 2018. [Google Scholar] Davis, K.F.; Downs,
    S.; Gephart, J.A. Towards food supply chain resilience to environmental shocks.
    Nat. Food 2021, 2, 54–65. [Google Scholar] [CrossRef] [PubMed] Raak, N.; Symmank,
    C.; Zahn, S.; Aschemann-Witzel, J.; Rohm, H. Processing- and product-related causes
    for food waste and implications for the food supply chain. Waste Manag. 2017,
    61, 461–472. [Google Scholar] [CrossRef] Pocas Ribeiro, A.; Rok, J.; Harmsen,
    R.; Rosales Carreón, J.; Worrell, E. Food waste in an alternative food network-a
    case-study. RCR Adv. 2019, 149, 210–219. [Google Scholar] [CrossRef] Gormley,
    R.; Brennan, M.; Butler, F. Upgrading the Cold Chain for Consumer Food Products;
    The National Food Centre, TEAGASC, Agriculture and Food Development Authority:
    Dublin, Ireland, 2000. [Google Scholar] Wang, J.; Wang, H.; He, J.; Li, L.; Shen,
    M.; Tan, X.; Min, H.; Zheng, L. Wireless sensor network for real-time perishable
    food supply chain management. Comput. Electron. Agric. 2015, 110, 196–207. [Google
    Scholar] [CrossRef] Tamplin, M.L. Integrating predictive models and sensors to
    manage food stability in supply chains. Food Microbiol. 2018, 75, 90–94. [Google
    Scholar] [CrossRef] ESP8266 Wi-Fi MCU, Espressif Systems. Available online: https://www.espressif.com/en/products/socs/esp8266
    (accessed on 30 March 2023). Kaium Khan, A.; Ahmed Shaem, T.; Rahman, M.; Zowad
    Khan, A.; Shah Alamgir, M. A portable and less time consuming wireless biometric
    attendance system for academic purpose using NodeMCU microcontroller. In Proceedings
    of the 2018 21st International Conference of Computer and Information Technology
    (ICCIT), Dhaka, Bangladesh, 21–23 December 2018. [Google Scholar] Mahindar, R.;
    Prakash, M.; Ghosh, S.; Mukherjee, S.; Ghosh, R. IoT-based home appliances control
    system using NodeMCU and blynk server. Int. Adv. Res. J. Sci. Eng. Technol. 2018,
    5, 16–22. [Google Scholar] Shelke, P.; Kulkarni, S.; Yelpale, S.; Pawar, O.; Singh,
    R.; Deshpande, K. A NodeMCU based home automation system. Int. Res. J. Eng. Technol.
    2018, 5, 127–129. [Google Scholar] Chan May, O.A.; Sandoval Gio, J.; Peña Koo,
    J.J. Internet de las cosas para controlar el encendido y apagado de aires acondicionados
    y luminarias. Pist. Educ. 2016, 38, 100–119. [Google Scholar] Abdulahad Aziz,
    D. Webserver based smart monitoring system using esp8266 node mcu module. Int.
    J. Sci. Eng. Res. 2018, 9, 801–807. [Google Scholar] Chooruang, K.; Mangkalakeeree,
    P. Wireless heart rate monitoring system using mqtt. Procedia Comput. Sci. 2016,
    86, 160–163. [Google Scholar] [CrossRef] Singh, B.; Urooj, S.; Mishra, S.; Haldar,
    S. Blood pressure monitoring system using wireless technologies. Procedia Comput.
    Sci. 2019, 152, 267–273. [Google Scholar] [CrossRef] Sachdev, S.; Macwan, J.;
    Patel, C.; Doshi, N. Voice-controlled autonomous vehicle using IoT. Procedia Comput.
    Sci. 2019, 160, 712–717. [Google Scholar] [CrossRef] Puñal Pereira, P. Efficient
    IoT Framework for Industrial Applications. Ph.D. Thesis, School of Industrial
    Electronics, Lulea, Sweden, 2016. [Google Scholar] Vergara, E.J.; Nadjm-Tehrani,
    S.; Prihodko, M. Energybox: Disclosing the wireless transmission energy cost for
    mobile devices. Sustain. Comput. Inform. Syst. 2014, 4, 118–135. [Google Scholar]
    [CrossRef] Luthfi, F.; Juanda, E.A.; Kustiawan, I. Optimization of data communication
    on air control device based on Internet of Things with application of http and
    mqtt protocols. In Proceedings of the IOP Conference Series: Materials Science
    and Engineering, Bandung, Indonesia, 16 November 2017. [Google Scholar] Naik,
    N. Choice of effective messaging protocols for IoT systems: MQTT, CoAP, AMQP and
    http. In Proceedings of the 2017 IEEE International Systems Engineering Symposium
    (ISSE), Vienna, Austria, 11–13 October 2017. [Google Scholar] Power Profiling:
    Https Long Polling vs. MQTT with ssl on Android. Available online: http://stephendnicholas.com/posts/power-profiling-mqtt-vs-https
    (accessed on 30 March 2023). Espinosa-Aranda, J.L.; Vallez, N.; Sanchez-Bueno,
    C.; Aguado-Araujo, D.; Bueno, G.; Deniz, O. Pulga, a tiny open-source mqtt broker
    for flexible and secure IoT deployments. In Proceedings of the 2015 IEEE Conference
    on Communications and Network Security (CNS), Florence, Italy, 28–30 September
    2015. [Google Scholar] Veerasamy, B.D. Creating a model http server program using
    java. arXiv 2010, arXiv:1003.1497. [Google Scholar] Kumar, S. A review on client-server
    based applications and research opportunity. IJRSR 2019, 10, 33857–33862. [Google
    Scholar] Pastor-Vargas, R.; Tobarra, L.; Robles-Gómez, A.; Martin, S.; Hernández,
    R.; Cano, J. A wot platform for supporting full-cycle IoT solutions from edge
    to cloud infrastructures: A practical case. Sensors 2020, 20, 3770. [Google Scholar]
    [CrossRef] [PubMed] Happ, D.; Wolisz, A. Limitations of the pub/sub pattern for
    cloud based IoT and their implications. In Proceedings of the 2016 Cloudification
    of the Internet of Things (CIoT), Paris, France, 23–25 November 2016. [Google
    Scholar] Bryce, R.; Shaw, T.; Srivastava, G. MQTT-G: A publish/subscribe protocol
    with geolocation. In Proceedings of the 2018 41st International Conference on
    Telecommunications and Signal Processing (TSP), Athens, Greece, 4–6 July 2018.
    [Google Scholar] Lee, S.; Kim, H.; Hong, D.K.; Ju, H. Correlation analysis of
    mqtt loss and delay according to qos level. In Proceedings of the The International
    Conference on Information Networking 2013 (ICOIN), Bangkok, Thailand, 28–30 January
    2013. [Google Scholar] Longo Imedio, J.E.L. Aplicación de Domótica en el Contexto
    de IoT. Master’s Thesis, Facultad de Informática, Madrid, España, 2019. [Google
    Scholar] Tena, A.R.; Kristensen, L.M.; Rutle, A. On modelling and validation of
    the MQTT IoT protocol for M2M communication. CEUR Workshop Proc. 2018, 2138, 99–118.
    [Google Scholar] Baranauskas, E.; Toldinas, J.; Lozinskis, B. Evaluation of the
    impact on energy consumption of mqtt protocol over tls. In Proceedings of the
    IVUS 2019 International Conference on Information Technologies, Kaunas, Lithuania,
    25 April 2019. [Google Scholar] Viswanathan, A. Analysis of Power Consumption
    of the MQTT Protocol. Master’s Thesis, School of Information Sciences, University
    Park, PA, USA, 2017. [Google Scholar] Digital Transformation in Transportation
    and Logistics with IoT and MQTT. Available online: https://www.hivemq.com/solutions/transportation/digital-transformation-in-transportation-and-logistics-with-iot-and-mqtt/
    (accessed on 30 March 2023).     Disclaimer/Publisher’s Note: The statements,
    opinions and data contained in all publications are solely those of the individual
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or
    the editor(s) disclaim responsibility for any injury to people or property resulting
    from any ideas, methods, instructions or products referred to in the content.  ©
    2023 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open
    access article distributed under the terms and conditions of the Creative Commons
    Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share
    and Cite MDPI and ACS Style Jara Ochoa, H.J.; Peña, R.; Ledo Mezquita, Y.; Gonzalez,
    E.; Camacho-Leon, S. Comparative Analysis of Power Consumption between MQTT and
    HTTP Protocols in an IoT Platform Designed and Implemented for Remote Real-Time
    Monitoring of Long-Term Cold Chain Transport Operations. Sensors 2023, 23, 4896.
    https://doi.org/10.3390/s23104896 AMA Style Jara Ochoa HJ, Peña R, Ledo Mezquita
    Y, Gonzalez E, Camacho-Leon S. Comparative Analysis of Power Consumption between
    MQTT and HTTP Protocols in an IoT Platform Designed and Implemented for Remote
    Real-Time Monitoring of Long-Term Cold Chain Transport Operations. Sensors. 2023;
    23(10):4896. https://doi.org/10.3390/s23104896 Chicago/Turabian Style Jara Ochoa,
    Heriberto J., Raul Peña, Yoel Ledo Mezquita, Enrique Gonzalez, and Sergio Camacho-Leon.
    2023. \"Comparative Analysis of Power Consumption between MQTT and HTTP Protocols
    in an IoT Platform Designed and Implemented for Remote Real-Time Monitoring of
    Long-Term Cold Chain Transport Operations\" Sensors 23, no. 10: 4896. https://doi.org/10.3390/s23104896
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   3
    Scopus   1 Web of Science   3 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 28. Dec 7. Jan 17. Jan 27.
    Jan 6. Feb 16. Feb 26. Feb 7. Mar 17. Mar 0 500 1000 1500 2000 2500 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Comparative Analysis of Power Consumption between MQTT and HTTP Protocols
    in an IoT Platform Designed and Implemented for Remote Real-Time Monitoring of
    Long-Term Cold Chain Transport Operations
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Esposito M.
  - Belli A.
  - Palma L.
  - Pierleoni P.
  citation_count: '4'
  description: Smart objects and home automation tools are becoming increasingly popular,
    and the number of smart devices that each dedicated application has to manage
    is increasing accordingly. The emergence of technologies such as serverless computing
    and dedicated machine-to-machine communication protocols represents a valuable
    opportunity to facilitate management of smart objects and replicability of new
    solutions. The aim of this paper is to propose a framework for home automation
    applications that can be applied to control and monitor any appliance or object
    in a smart home environment. The proposed framework makes use of a dedicated messages-exchange
    protocol based on MQTT and cloud-deployed serverless functions. Furthermore, a
    vocal command interface is implemented to let users control the smart object with
    vocal interactions, greatly increasing the accessibility and intuitiveness of
    the proposed solution. A smart object, namely a smart kitchen fan extractor system,
    was developed, prototyped, and tested to illustrate the viability of the proposed
    solution. The smart object is equipped with a narrowband IoT (NB-IoT) module to
    send and receive commands to and from the cloud. In order to evaluate the performance
    of the proposed solution, the suitability of NB-IoT for the transmission of MQTT
    messages was evaluated. The results show how NB-IoT has an acceptable latency
    performance despite some minimal packet loss.
  doi: 10.3390/s23094459
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 9 10.3390/s23094459 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editors Antonio Puliafito
    Giovanni Pau Ilsun You Subscribe SciFeed Recommended Articles Related Info Links
    More by Authors Links Article Views 3721 Citations 4 Table of Contents Abstract
    Introduction Background Materials and Methods Experimental Evaluation Results
    Conclusions Author Contributions Funding Informed Consent Statement Acknowledgments
    Conflicts of Interest Abbreviations References share Share announcement Help format_quote
    Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessArticle Design and Implementation of
    a Framework for Smart Home Automation Based on Cellular IoT, MQTT, and Serverless
    Functions by Marco Esposito , Alberto Belli , Lorenzo Palma and Paola Pierleoni
    * Department of Information Engineering (DII), Università Politecnica delle Marche,
    60131 Ancona, Italy * Author to whom correspondence should be addressed. Sensors
    2023, 23(9), 4459; https://doi.org/10.3390/s23094459 Submission received: 2 March
    2023 / Revised: 12 April 2023 / Accepted: 29 April 2023 / Published: 3 May 2023
    (This article belongs to the Special Issue Internet of Things for Smart Homes
    Ⅲ) Download keyboard_arrow_down     Browse Figures Review Reports Versions Notes
    Abstract Smart objects and home automation tools are becoming increasingly popular,
    and the number of smart devices that each dedicated application has to manage
    is increasing accordingly. The emergence of technologies such as serverless computing
    and dedicated machine-to-machine communication protocols represents a valuable
    opportunity to facilitate management of smart objects and replicability of new
    solutions. The aim of this paper is to propose a framework for home automation
    applications that can be applied to control and monitor any appliance or object
    in a smart home environment. The proposed framework makes use of a dedicated messages-exchange
    protocol based on MQTT and cloud-deployed serverless functions. Furthermore, a
    vocal command interface is implemented to let users control the smart object with
    vocal interactions, greatly increasing the accessibility and intuitiveness of
    the proposed solution. A smart object, namely a smart kitchen fan extractor system,
    was developed, prototyped, and tested to illustrate the viability of the proposed
    solution. The smart object is equipped with a narrowband IoT (NB-IoT) module to
    send and receive commands to and from the cloud. In order to evaluate the performance
    of the proposed solution, the suitability of NB-IoT for the transmission of MQTT
    messages was evaluated. The results show how NB-IoT has an acceptable latency
    performance despite some minimal packet loss. Keywords: internet of things; home
    automation; smart appliance; narrowband IoT; MQTT; serverless 1. Introduction
    Completely automated smart homes are on the way to becoming a well-established
    reality. The ever increasing number of smart objects in the smart home environment
    requires the definition of standardized and flexible protocols for commands and
    state information exchange, besides optimal strategies for processing a large
    number of commands. New technologies such as serverless computing and ad hoc communication
    protocols can be leveraged to manage a large fleet of smart objects, while also
    ensuring good accessibility and intuitive user interfaces. Serverless computing
    is an emerging cloud-computing paradigm that represents a promising development
    for many application fields, from micro- and web-services [1], to the the internet
    of things (IoT) [2,3], edge computing [4] and artificial intelligence (AI) [5],
    or even for domain-specific scientific applications [6,7]. Serverless computing
    operates at the crossing point of different models that have emerged alongside
    cloud computing, such as function as a service (FaaS) and pay-per-use models,
    and technologies such as event-driven programming, virtualization, and containerization
    [4]. Serverless computing comes with automated scalability and resource provisioning,
    meaning that resources assigned by the serverless platform scale depending on
    the number of functions that are running and the resource demand of each of those
    functions. These characteristics make serverless particularly appealing for applications
    that need to manage a large pool of users or, in the field of the internet of
    things and smart objects, a large number of devices [2]. The pioneering commercial
    platform for serverless computing was Lambda [8], developed by Amazon Web Services
    (AWS), the Amazon cloud platform. Lambda remains one of the most popular platforms
    for the development of serverless applications. A recent work by the authors of
    this paper [9] showed how AWS satisfies many key performance indicators in IoT
    applications, also compared to other competitors such as Microsoft Azure and Google
    cloud Platform, both of which now also offer serverless and FaaS services. Lambda
    also comes with extensive integration with Amazon Alexa [10], the voice assistant
    on Amazon Echo. Voice interfaces are seeing a wider use in different application
    fields, from voice assistants to home automation, as they constitute a more natural
    and intuitive interface to interact with smart objects and environments, as well
    as improving accessibility [11]. This paper proposes and experimentally evaluates
    a framework that represents a synergistic union of different cloud-computing and
    IoT-related technologies that can enable accessible and automated home environments.
    The framework is easy to replicate, is scalable, and is transparent to the underlying
    smart object or appliance that uses it due to the use of serverless technologies
    and a custom-defined command exchange protocol based on the message queue telemetry
    transport (MQTT) protocol. MQTT [12] is the main middleware service used in most
    cloud platforms for the IoT, therefore simplifying the interfacing of IoT devices
    and smart objects with the cloud. Compared to other protocols such as HTTP, which
    is also employed in many serverless solutions [3], MQTT messages have a small
    overhead that makes the protocol suitable for machine-to-machine applications.
    Furthermore, MQTT does not impose a format for its payload, making it extremely
    flexible [13], and the use of topics adds a further degree of freedom for the
    implementation of custom applications. As the introduction of new communication
    technologies in such applications requires careful evaluation in terms of the
    overall application latency, the aim of this paper is to evaluate the performance
    of a framework for smart home appliances equipped with narrowband IoT (NB-IoT)
    modules to send and receive messages to/from the cloud. NB-IoT is a low-power
    wide area network (LPWAN) protocol by the Third-Generation Partnership Project
    (3GPP), designed to provide wide connectivity to a huge number of IoT devices
    in massive deployment scenarios and in scenarios that require good radio coverage
    and lower power consumption, such as smart metering [14,15]. NB-IoT devices can
    reach nominal life times of around 10 years with small and infrequent messaging
    [16], with an overall good power consumption performance compared to other communication
    technologies, both cellular and not [17]. Cellular technologies such as NB-IoT
    can be employed to embed additional services that require internet connectivity
    in home and kitchen appliances, adding negligible power consumption to their normal
    mode of operation and advancing the machines as a service (MaaS) model [18,19]
    and servitization of the products [20]. The framework proposed in this paper includes
    a smart IoT device making use of the aforementioned MQTT-based command protocol,
    and a serverless application on the cloud to manage devices and commands received
    through Amazon Alexa or through a dedicated application. The NB-IoT protocol was
    tested to determine if it is suitable to dispatch MQTT messages between MQTT clients.
    Automatic speech recognition (ASR) software already adds a delay to the overall
    application latency, and the execution of Lambda functions also adds a (minimal)
    latency, but the message exchange delay might severely degrade the user experience
    if it hinders the prompt execution of commands. For the demonstration of the proposed
    framework viability, a smart extractor fan system was designed, prototyped, and
    tested as a practical use case. An experimental test-bed with a NB-IoT node sending
    and receiving MQTT messages was therefore set up to evaluate the latency performance
    of the protocol in this context. This work is organized as follows. Section 2
    explains the main technologies employed in the proposed system, and illustrates
    some recent works in the field of home automation and vocal interfaces for smart
    homes. Section 3 goes into detail about the proposed system and the NB-IoT evaluation
    test-bed, while Section 5 gives the results of the evaluation. Lastly, Section
    6 draws conclusions about the work and contributions of this paper. 2. Background
    Many smart home automation papers propose APIs or practical implementations of
    smart device use cases, employing protocols ranging from HTTP to MQTT to CoAP,
    which has also shown potential for home automation applications [21]. Crisan et
    al. [22] proposed and developed an API for smart home automation called qtoggle
    to control any IoT device in the smart home environment with a TCP/IP stack via
    HTTP requests, regardless of the type of smart object or device. Sarkar et al.
    [23] proposed a framework to manage IoT devices in smart buildings using the serverless
    paradigm. Their proposed system consists of gas and humidity sensors and smart
    bulbs, and the serverless platform of choice was the OpenFaas platform. Froiz-Míguez
    et al. [24] proposed a framework for fog computing in smart homes called Ziwi,
    which enables the coexistence of Zigbee and Wifi devices on the same smart home
    framework. MQTT is used for its small code footprint and for addressing compatibility
    between smart devices. The increasing usage of MQTT in machine-to-machine applications
    has been stressed by Biswajeeban et al. [25], stemming from its lightweight design
    and its publish/subscribe architecture. Most frameworks employing this protocol
    require the implementation of security mechanisms (such as TLS) that add some
    extra overhead to the communication. As research on the topic of security in MQTT
    is increasing [26,27], various recent papers have also focused on the implementation
    of new security mechanisms designed specifically for MQTT-based smart home environments
    [28,29]. Different recent works explored the potentiality of integrating Amazon
    Alexa or, more generally, voice services into the smart environment to enable
    interactive and accessible interfaces. Iliev et al. [11] proposes a distributed
    framework for smart homes that uses natural language processing (NLP) to develop
    a human/smart environment interface. Their solution introduces a fog node for
    the deployment of intelligent user interface (IUI) software to reduce the voice
    interface response delay and to decrease bandwidth load. Krishnamurthi et al.
    [30] analyzed different data fusion and techniques for work offloading in IoT
    applications, such as fog and edge computing, which can find use in different
    IoT fields, including smart homes. The interface is designed to understand domain-specific
    natural language to support under-resourced languages that lack available ASR
    software, such as Amazon Alexa. Lee et al. [31] explored the possibility of using
    Amazon Alexa to build smart home services for the elderly or to enhance the effectiveness
    of existing services such as “carebots”. Bodgan et al. [32] proposed a framework
    that integrates voice assistants into smart offices for various tasks such as
    ambient control and interaction with various services. This paper proposes a very
    flexible framework for smart home automation that embeds a voice interface, while
    in addition evaluating the use of cellular technologies for the dispatching of
    MQTT messages for commands and status updates. The introduction of cellular communication
    in these frameworks, if carefully evaluated, can aid in the implementation of
    different services in home and kitchen appliances, enabling, for example, predictive
    maintenance and remote monitoring services to be built on top of said frameworks.
    The flexibility of the serverless model and the use of MQTT, which is the main
    middleware in the cloud technologies described above, allowed for the integration
    of the different services provided by AWS, including voice interaction services.
    Furthermore, NB-IoT has been evaluated to test its efficiency in serving a framework
    based on MQTT. The remaining part of this section describes the technologies used
    for the design, testing, and evaluation of the proposed framework, embedding a
    smart extractor fan prototype. The details of the implementation and fusion of
    the aforementioned technologies are detailed in Section 3. 2.1. Narrowband IoT
    NB-IoT is a cellular technology based on long-term evolution (LTE) introduced
    by 3GPP. NB-IoT reduces the LTE protocol stack functionalities to make it suitable
    for IoT applications. A brief comparison of NB-IoT with other LPWAN communication
    protocols aimed at comparable applications is in Table 1. Compared to protocols
    such as LoRaWAN and Sigfox, NB-IoT works in LTE bands and does not require the
    use of a gateway. It provides extended coverage to delay-tolerant, low-cost, low-energy
    IoT applications, reaching good energy performance even in the worse-case, continuous
    transmission scenarios when compared to other communication protocols [17]. It
    represents a valuable choice for application fields that require massive deployments,
    good coverage and low data rates, including smart metering [33], smart grids [34],
    smart cities [35], healthcare [36,37,38], and industrial applications [39]. To
    the best of the authors’ knowledge, it has still been seldom applied in home automation
    [40], mostly in home surveillance or metering applications [41,42], and rarely
    using MQTT. Cellular connectivity provides opportunities for enterprises to embed
    additional services into home appliances [20]. Furthermore, NB-IoT will be used
    in the machine-to-machine communication use case in 5G networks and will coexist
    with other services in the 5G environment [43]. While some works exist on the
    application layer performance over NB-IoT [44,45], this work mainly focuses on
    latency issues for the smart home use case, with the goal of ensuring a good user
    experience for the vocal interaction subsystem. Table 1. Comparison of communication
    protocols for IoT and machine-to-machine applications. 2.2. MQTT MQTT is an OASIS
    standard messaging protocol designed to be lightweight and to have a small code
    footprint [12]. MQTT is one the main protocols that is used for the IoT and for
    the implementation of middleware services, alongside COAP, AMQP and HTTP [49].
    It is nowadays used in many application scenarios, such as smart homes and smart
    buildings [50,51], smart cities [52], smart grids and energy management [53,54],
    smart agriculture [55], environmental monitoring and early warning [56], and so
    on. Furthermore, the main cloud platforms for the IoT use MQTT as their middleware
    service and brokering protocol [9]. MQTT is a publish/subscribe message protocol
    that decouples data producers and data consumers through the use of a central
    entity called “broker”, a server responsible for dispatching messages among MQTT
    clients. brokers contain a list of topics, which are strings that are organized
    hierarchically. The MQTT client can either subscribe to a topic, publish a message
    on a topic, or both. When a client publishes a message on a certain topic, the
    broker will forward it to every client that has subscribed to that topic. MQTT
    includes a series of security mechanisms, including password and username authentication,
    and authentication with transport layer certificate exchange. Data encryption
    can be guaranteed with protocols such as the transport layer security protocol
    (TLS), as is performed in AWS, or it can be implemented at the application layer
    to provide end-to-end encryption. 2.3. Amazon Web Services Amazon Web Services
    is one of the most famous and oldest cloud platforms, offering services ranging
    from databases and data analytics to internet of things and mobile computing,
    besides many services dedicated to enterprises [57]. The smart appliance system
    proposed in this paper makes use of AWS IoT core, AWS Lambda, and two data storage
    services, AWS S3 and DynamoDB. Furthermore, Amazon Cloudwatch, a service used
    to monitor AWS resources and applications, is used to keep track of the performance
    and cost of each deployed service. 2.3.1. AWS IoT Core AWS IoT core is the AWS
    platform for the internet of things. It allows devices to connect to the cloud
    and other AWS services. The architecture of AWS IoT core is described in Figure
    1. The central component of the architecture is the message broker, which dispatches
    messages to and from things (i.e., IoT devices) and other AWS services and user
    applications. AWS IoT core supports MQTT and MQTT over Websockets, but clients
    can also publish messages on the broker using HTTP. A rules engine is available
    to automatically process messages and to generate triggers. Each IoT device has
    an associated “shadow” to keep track of its status, and shadows are stored in
    a corresponding registry. Various security and identity mechanisms are employed
    to guarantee secure communication between the broker and devices, including TLS
    data encryption [58] and secure authentication with X.509 certificates [59]. Figure
    1. Architecture of AWS IoT core (adapted from [9]). 2.3.2. AWS Lambda AWS Lambda
    is a serverless computing platform that lets users deploy applications and run
    code without managing servers, delegating to Lambda all the server and operating
    system maintenance, including capacity provisioning and automatic scaling of resources,
    while leaving the code as the sole responsibility of the developer. Lambda can
    be used to build IoT backends and countless other applications. Lambda functions
    are event-driven, meaning that they are instantiated to manage events. Each function
    is usually linked to an event source that generates triggers and will contain
    a series of handlers to manage those triggers. Various AWS services are event
    sources and can be configured to trigger Lambda functions, including Amazon Alexa
    skills and AWS IoT core rules. 2.4. Amazon Alexa Amazon Alexa skills employ ASR
    and natural language understanding technology [60] for the development of custom
    applications that take vocal commands as input, convert them into text, interpret
    them to execute various actions, and possibly return a vocal response to the user
    that invokes the application. Alexa skills can be configured to send messages
    to various endpoints, including Lambda functions, essentially turning vocal commands
    into Lambda triggers. The components of an Alexa skill invocation are the following:
    A wake word, such as “Alexa”, to turn on the device; An invocation name, the de
    facto name of the Alexa skill that is being invoked; An utterance, telling the
    Alexa skill what action to execute, or, in Alexa skill jargon, which “intent”
    is to be called; Optionally, a series of custom “slots”, which are additional
    variables that are being passed to the intent. Intents produce a message in JSON
    format that is then forwarded to a Lambda endpoint. The Lambda function will parse
    the JSON message content, call a dedicated handler based on the intent, execute
    the handler’s routine, and lastly produce a JSON response message that is sent
    back to the Alexa skill. 3. Materials and Methods The design proposed in this
    paper is applicable to any kitchen or home appliance due to the flexibility of
    the MQTT protocol and the serverless paradigm. It provides a valuable framework
    for the management of smart appliances that can be easily replicated in any smart
    home system. It leverages technologies in the field of serverless and machine-to-machine
    communication to create interactive smart objects with dedicated on-demand services,
    with good accessibility due to the use of vocal interfaces. A description of the
    proposed framework for a smart appliance system follows in this section, and in
    particular, the design of the hardware and the serverless application for a smart
    kitchen extractor fan are outlined. The framework is completely application agnostic
    and can be replicated with any kitchen appliance or smart home device. The cloud-developed
    application makes use of Amazon Alexa to build a vocal interface and provides
    touchless interaction with the smart object. A phone application acting as an
    MQTT publisher can also be used to send commands to the appliance. MQTT makes
    the framework extremely flexible, and it makes the integration with cloud platforms
    (in this case, with AWS) simple and secure due to the use of certificates securely
    stored on the device by the use of a cryptochip. MQTT is also used to receive
    status updates from the smart object. The serverless framework provides efficient
    replicability and scalability properties to the application, and most importantly,
    it rationalizes resource allocation on the cloud when managing a large number
    of devices. 3.1. Smart Extractor Fan Design The kitchen extractor fan is controlled
    by a device whose block diagram is illustrated in Figure 2. It consists of a microcontroller
    (referred to as “micro-host”) that interfaces with various peripherals and controls
    the ventilation motor and a set of lights. A NB-IoT chip is used to receive commands
    from the cloud in MQTT format over NB-IoT. The MQTT protocol guarantees a simple
    and secure interface toward the cloud through the native use of TLS encryption
    and authentication. The AWS IoT core requires authentication over MQTT with X.509
    certificates. A cryptochip is used to securely connect and authenticate the AWS
    IoT core. Such a device can securely store certificates on the IoT device and
    authenticate the AWS IoT core. Figure 2. Block diagram of the smart extractor
    fan. The device receives messages from the cloud, parses them, and executes commands
    based on the content of their payload. It also sends state updates toward the
    cloud. Firmware updates can be received over the air using MQTT, simplifying the
    deployment of new firmware on large fleets of devices. 3.2. Architecture of the
    Serverless Cloud Application An application was designed for the management and
    control of smart objects. The application is developed using AWS Lambda and the
    MQTT protocol to provide flexible interaction between the users and the extractor
    fan. Amazon Alexa is used to implement a vocal interface for the control of the
    smart object. State updates are also sent by the fan using the custom commands
    protocol and are processed by a dedicated Lambda function on the cloud to keep
    track of the state of each device. The application was developed on AWS, and the
    serverless platform of choice was Amazon Lambda. Two Lambda functions were implemented
    in NodeJS (JavaScript) using the AWS SDK: one to forward user commands to devices,
    either by an application or Alexa skill, and the other to handle state updates
    from the devices. JavaScript, being a high-level interpreted language, lends itself
    quite naturally to the development of serverless or FaaS applications and, alongside
    Python, is one of the most used languages for the development of serverless applications
    [3]. Lambda functions comprised one or more handlers that are used to manage triggers,
    which can be received by various outside services, including Amazon Alexa or AWS
    IoT core. Each handler was defined on the basis of the custom command protocol
    and of the intents that were implemented in the Alexa skill. This way, users are
    able to control and monitor all the admissible states of the devices. The project
    uses two AWS storage services: Amazon S3 and Amazon DynamoDB. DynamoDB is used
    to store devices states and devices and user identifiers. Similarly to the approach
    used in [61] to store Lambda code, in this project, Amazon S3 is used to store
    the device firmware. This way, each device can download any firmware version at
    any moment, greatly simplifying software updates and the deployment of new code.
    A software update can be initiated by sending the url of the S3 bucket containing
    the new firmware inside an MQTT command. The device will then download the file
    from the S3 bucket and execute the firmware update in autonomy. An Alexa skill
    has been developed to interact with the devices. The endpoint of the skill is
    Amazon Lambda. A Lambda function is triggered when a command is invoked by the
    user. The Alexa skill takes care of translating input vocal commands into text
    and then translates text into JSON inputs that can be parsed by Lambda functions.
    Each JSON input produced by the Alexa skill also contains a user identifier that
    is used by Lambda to retrieve (from DynamoDB) the device ID associated with the
    user that invoked the skill. This mechanism guarantees that Lambda functions are
    only able to control the fans corresponding to the user that invoked the Alexa
    skill from their personal account. Custom slots are used to define a series of
    extra identifiers to distinguish between different fans when a user owns or controls
    more than a single fan. Figure 3 illustrates the message flow of the application.
    Green boxes indicate vocal commands and responses, yellow boxes are messages in
    JSON format generated by the Alexa skill, and the pink box indicates the payload
    of the MQTT message generated by the AWS application and forwarded to the device.
    Figure 3. Messages flow from the user command up to the MQTT message generated
    by AWS that is forwarded to the device. The complete description of the smart
    appliance system is illustrated in Figure 4. When a user invokes the Alexa skill
    with a valid intent, i.e., an Alexa skill intent for which a handler was defined,
    the skill triggers Lambda and passes a JSON message to it, containing both the
    UserID and a string identifying the handler required to manage that request. The
    Lambda function queries DynamoDB for the identifier(s) of the device(s) owned
    by that user. If the user owns more than one device, then a custom slot in the
    Alexa intent is used to distinguish between their multiple devices and retrieve
    the correct identifier from DynamoDB. Once Lambda knows the device to send the
    command to, and on the basis of the intent, it publishes an MQTT message on AWS
    IoT core following the commands protocol for that specific device. The device,
    having subscribed to its individual topics at start-up, will receive the message,
    parse its payload, and execute a command according to its content. Whenever it
    receives a command, the device will also publish an update on its status on its
    dedicated OutState topic. It is also possible to configure a “refresh time” at
    the monitoring topics, i.e., a time at which the devices sends periodic updates
    on the topic. An AWS IoT core rule is implemented to handle state updates and
    to invoke a second Lambda function, which updates a DynamoDB table with the new
    state information. The state information is used to monitor devices and their
    activities, but it also allows users to ask the Alexa skill for the state of the
    fan, and it uses “feedback” commands that require the Lambda function to know
    the current state of the device (e.g., “lower the ventilation”, “raise the ventilation”,
    and similar commands). The implementation of feedback intents makes the communication
    between the smart appliance and the user feel more “natural”. At the same time,
    periodic refreshes at short intervals amplify the application load on the cloud
    and the number of transmissions, which might not be suitable for certain devices
    or communication protocols. For such use cases, it might be required to set a
    longer refresh time or to only enable refreshes when there is a state update via
    outside command. The refresh option has been used for the experimental evaluation
    of the smart object work load on the cloud. Figure 4. Architecture of the proposed
    smart fan application. 4. Experimental Evaluation An experiment was carried out
    to evaluate the use of narrowband IoT to dispatch MQTT messages across MQTT clients.
    The goal of the experiment was to provide an estimation of the time needed to
    forward a message to/from an MQTT client over NB-IoT to show whether the protocol
    is suitable for applications, such as the one developed in this paper, that require
    an acceptable latency performance to ensure a good user experience. The experiment
    involves the following nodes An MQTT Client (Client 1) that publishes messages
    on a dedicated topic named Topic1; An MQTT broker; A NB-IoT module subscribed
    to Topic1 and publishing on a dedicated topic named Topic2; A second MQTT Client
    (Client 2) subscribed to Topic2. This experimental setup is shown in Figure 5.
    The two MQTT clients might represent cloud applications sending or receiving messages
    from a smart object, such as vocal commands or state updates, while the NB-IoT
    device stands for the smart object itself. This setup reflects the interaction
    between users and the smart extractor fan system, where client 1 might be a Lambda
    function publishing a command on the broker to control the NB-IoT module/smart
    fan, which will then immediately publish a status update on the OutState topic
    once it sets the correct output variables. Figure 5. Diagram of the evaluation
    testbed used to evaluate NB-IoT latency for dispatching MQTT messages. At the
    start of the evaluation, the board registers to the NB-IoT network, connects to
    the MQTT broker, and it subscribes to Topic1. At the same time, the two clients
    also establish a connection to the MQTT broker, and Client 2 subscribes to its
    assigned topic. After waiting a short time to ensure that each MQTT client has
    successfully connected to the broker, Client 1 will publish a first message on
    Topic1, containing a timestamp 𝑇1 representing the start of the communication.
    The broker then forwards the message to the evaluation board. The board will then
    publish a new message on Topic2 containing 𝑇1 and the time elapsed between reception
    of the first message from the broker and the transmission of the second message.
    The broker will forward this message to Client 2, which will save the timestamp
    of reception ( 𝑇2 ). This information, alongside the one obtained from the first
    client, the board, and the broker, is used to evaluate latency at different sections
    of the communication. The procedure is repeated multiple times at intervals of
    10 s between each message. The two MQTT clients were implemented on a computer
    using the Paho-MQTT [62] Python library. The MQTT broker was deployed on a different
    machine in the same network. The broker of choice was the Eclipse’ Mosquitto [63]
    broker. The MQTT clients are synchronized using the network time protocol. The
    NB-IoT module is connected to a mobile IoT network, which provides acceptable
    network coverage and reliability. In debug mode, Mosquitto does not provide a
    precision for packets logging below the second. However, the time difference between
    the transmission of the packet and its reception on the broker is not higher than
    a second, as verified on the Mosquitto log file. Therefore, considering symmetrical
    links and a negligible delay for the communication between the clients and the
    broker on the same network, the communication delay between the broker and the
    smart object was estimated as 𝑇 𝑁𝐵−𝐼𝑜𝑇 = 𝑇 2 − 𝑇 1 −Δ 2 , in which Δ represents
    the time elapsing between the reception of the message on the board and the transmission
    of a message toward the broker. 5. Results The performance of the developed smart
    fans was monitored using Amazon Cloudwatch and forcing a situation with frequent
    calls to Lambda. By setting a refresh time of 1 min for the OutState topic, the
    Lambda function responsible for updating the state database is called once every
    minute by the AWS IoT rule that handles messages received on the OutState topic.
    The function simply parses the JSON message forwarded to it by AWS IoT core, containing
    the new states and the identifier of the smart object, and updates a DynamoDB
    table with this new information, also increasing a usage atomic counter on the
    table to keep track of the usage of each smart device. Such a frequent refresh
    time might be incompatible with NB-IoT, given the high transmission load compared
    to the relatively low throughput expected of applications using this protocol,
    but more suitable to WiFi implementation. Furthermore, configuring the device
    so that the OutState topic is refreshed only when there is a state variable change
    is an implementation choice with an acceptable load for NB-IoT, and possibly a
    more realistic work condition for the smart home object. In the case of the Cloudwatch
    evaluation, the goal was to evaluate a situation with frequent calls to the serverless
    Lambda function; therefore, the number of state updates was incremented. The results
    of the evaluation are shown in Figure 6 and Figure 7. The device was left on for
    about 24 h and the Cloudwatch Lambda insights service was used to keep track of
    various parameters. Figure 6 shows the median, 90th percentile, and maximum duration
    of Lambda function calls, computed in intervals of 5 min. Figure 7 shows the maximum
    CPU usage time and network load during 24 h, computed in 5-min intervals. Figure
    6. Median, 90th percentile, and maximum duration of a lambda function calls, computed
    in intervals of 5 min. Figure 7. Maximum CPU (top) and network (bottom) usage
    during the Lambda function testing, computed in intervals of 5 min. The spikes
    in duration correspond to “cold starts” that were also recorded by Cloudwatch.
    A cold start is the time required to allocate cloud resources to instantiate a
    Lambda function environment for the first time. Each Lambda function is only kept
    “warm” for a certain amount of time, requiring a new, prolonged startup to instantiate
    a new execution environment once the execution environment turns “cold”. Setting
    up provisioned concurrency can help mitigate the effect of cold starts when there
    are multiple devices invoking the Lambda function. The results of the experimental
    evaluation carried out to evaluate the use of narrowband IoT to send MQTT messages
    through MQTT clients are shown in Figure 8. The delay has a mean value of 0.447
    s, with occasional spikes of up to 11.41 s. The 90th percentile is 0.527 s, and
    the standard deviation is 0.938 s. The contribution of Δ is negligible and has
    minimal variations across multiple repetitions. Figure 8. Estimated latency from
    the NB-IoT device to the MQTT broker. To investigate the reason behind the spikes,
    the experiment was repeated keeping track of packet numbers and MQTT acknowledgment
    (ACK) messages received by the board. Having set the MQTT quality of service to
    1, the MQTT broker forwards an ACK message toward the board whenever a message
    has been published correctly. The NB-IoT board firmware was therefore slightly
    modified so that, after an ACK is received from the broker, a second MQTT message
    containing the current ACK number and Δ is also immediately published on Topic2.
    Client 2 therefore keeps track of the packet numbers, their associated timestamps,
    and the ACK numbers, besides computing the time difference between the timestamp
    of reception and the timestamp sent by Client 1, as in the previous experimental
    setup. The new experiment flow is detailed in Figure 9. Figure 9. Sequence diagram
    of the experiment used to investigate latency spikes by keeping track of packet
    numbers and ACK messages. The iteration of the experiment described in the Figure
    comprises the following steps. At first, a packet P1 containing a timestamp T1
    and packet number 𝑁1=1 is sent to the broker. P1 is then forwarded by the NB-IoT
    board and is correctly acknowledged; therefore, 𝑛ACK1 is also set to 1 and sent
    to Client 2. The difference between T1 and the timestamp of reception (T2) is
    computed by Client 2 and is referred to as T21 in the figure. The delay in this
    case is below a reasonable value, i.e., not corresponding to a latency spike.
    During the following transmission, no ACK is received for packet P2, and thus,
    nACK is not increased and P2 is reinserted in the output queue. At the third transmission,
    the board sends both P2 and the new P3 packet and receives an ACK for both messages.
    𝑛ACK for P3 is not set to 3 in this case to keep track of the previously lost
    ACK message, meaning that both P2 and P3 have an associated 𝑛ACK=𝑛ACK2=2 . By
    looking at log entries on Client 2 where a packet has an associated packet number
    that is different from its ACK number, it is therefore possible to find packets
    for which the previous ACK message was not received by the board. These packets
    also correspond to spikes in latency in the resulting latency graph, meaning that
    the spikes are most likely due to the development of an output queue in the NB-IoT
    board. The loss of an ACK message could be because the publish message did not
    reach the broker or the ACK message from the broker was lost in transmission.
    In this last case, since MQTT QoS is set to 1, there is no guarantee that each
    message will not be forwarded twice toward Client 2. Client 2 does not receive
    any duplicate message, meaning that the reason for a lack of ACK messages on the
    NB-IoT board is most likely because the original publish message traveling on
    the NB-IoT network was lost. The average loss across the two experiments is about
    0.8%. The latency for the second experiment was in line with the previous one,
    even if slightly lower (0.3845 s). 6. Conclusions In this paper, a generalized
    and flexible framework for smart object applications in a smart home environment
    was proposed, leveraging MQTT, the serverless computing platform Amazon Lambda,
    Amazon ASK, and NB-IoT. The framework consists of smart objects receiving messages
    from the cloud through a dedicated message-exchange protocol and interactive vocal
    interfaces, with serverless functions deployed on the cloud to monitor and control
    the objects. A practical use case based on this framework was also developed,
    prototyped, and tested. The smart object, a smart kitchen fan, is equipped with
    a NB-IoT module and makes use of a custom command exchange protocol based on MQTT.
    A vocal interface was developed using Amazon Alexa and Lambda, enabling vocal
    control of all the smart object’s controllable states. The suitability of NB-IoT
    for MQTT messages dispatching was tested and showed a good latency performance,
    excluding some peaks that were evaluated and traced back to the formation of MQTT
    queues on the sender due to lost packets. Excluding cold starts, Lambda execution
    times are below 200 ms, positively contributing to an overall quasi-real time
    interaction between users and the smart object. Such a connected object could
    integrate additional customized services such as predictive maintenance and consumption
    control, enabled by cellular connectivity and simplified by resource provisioning
    on the cloud. Author Contributions Conceptualization, M.E., L.P., A.B. and P.P.;
    methodology, L.P., A.B. and P.P.; validation, M.E., L.P., A.B. and P.P.; formal
    analysis, M.E., L.P., A.B. and P.P.; investigation, M.E., L.P. and A.B.; writing—original
    draft preparation, M.E., L.P. and A.B.; writing—review and editing, M.E., A.B.
    and L.P.; visualization, M.E.; supervision, L.P., A.B. and P.P.; project administration,
    P.P.; funding acquisition, P.P. All authors have read and agreed to the published
    version of the manuscript. Funding This work is supported by Marche Region in
    the implementation of the financial program POR MARCHE FESR 2014-2020, project
    “Miracle” (Marche Innovation and Research Facilities for Connected and Sustainable
    Living Environments), CUP B28I19000330007. The authors are grateful to Gitronica
    S.p.A. (Via Virgilio Guzzini, 12 62010 Montelupone (MC) Italy) for the opportunity
    to collaborate in this project. Informed Consent Statement Not applicable. Acknowledgments
    The authors extend their appreciation to Marche Region in the implementation of
    the financial program POR MARCHE FESR 2014-2020, project “Miracle” (Marche Innovation
    and Research Facilities for Connected and sustainable Living Environments), CUP
    B28I19000330007. The authors are grateful to Gitronica S.p.A. (Via Virgilio Guzzini,
    12 62010 Montelupone (MC) Italy) for the opportunity to collaborate in this project.
    Conflicts of Interest The authors declare no conflict of interest. Abbreviations
    The following abbreviations are used in this manuscript: IoT Internet of Things
    AI Artificial Intelligence FaaS Function as a Service OS Operating System ASK
    Amazon Skills Kit ASR Automatic Speech Recognition MQTT Message Queue Telemetry
    Transport HTTP Hypertext Transfer Protocol NB-IoT Narrowband Iot LPWAN Low-Power
    Wide Area Network 3GPP Third-Generation Partnership Project MaaS Machine as a
    Service References Eismann, S.; Scheuner, J.; Eyk, E.V.; Schwinger, M.; Grohmann,
    J.; Herbst, N.R.; Abad, C.L.; Iosup, A. A Review of Serverless Use Cases and their
    Characteristics. arXiv 2020, arXiv:2008.11110. [Google Scholar] Wang, I.C.; Qi,
    S.; Liri, E.; Ramakrishnan, K.K. Towards a Proactive Lightweight Serverless Edge
    cloud for internet-of-Things Applications. In Proceedings of the 2021 IEEE International
    Conference on Networking, Architecture and Storage (NAS), Riverside, CA, USA,
    24–26 October 2021; pp. 1–4. [Google Scholar] [CrossRef] Cassel, G.A.S.; Rodrigues,
    V.F.; da Rosa Righi, R.; Bez, M.R.; Nepomuceno, A.C.; André da Costa, C. Serverless
    computing for internet of things: A systematic literature review. Future Gener.
    Comput. Syst. 2022, 128, 299–316. [Google Scholar] [CrossRef] Aslanpour, M.S.;
    Toosi, A.; Cicconetti, C.; Javadi, B.; Sbarski, P.; Taibi, D.; Assuncao, M.; Gill,
    S.S.; Gaire, R.; Dustdar, S. Serverless Edge Computing: Vision and Challenges.
    In Proceedings of the 2021 Australasian Computer Science Week Multiconference,
    Dunedin, New Zealand, 1–5 February 2021. [Google Scholar] [CrossRef] Paraskevoulakou,
    E.; Kyriazis, D. ML-FaaS: Towards exploiting the serverless paradigm to facilitate
    Machine Learning Functions as a Service. IEEE Trans. Netw. Serv. Manag. 2023.
    Early Access. [Google Scholar] [CrossRef] Bebortta, S.; Das, S.K.; Kandpal, M.;
    Barik, R.K.; Dubey, H. Geospatial Serverless Computing: Architectures, Tools and
    Future Directions. ISPRS Int. J. Geo-Inf. 2020, 9, 311. [Google Scholar] [CrossRef]
    Malawski, M.; Gajek, A.; Zima, A.; Balis, B.; Figiela, K. Serverless execution
    of scientific workflows: Experiments with hyperflow, aws lambda and google cloud
    functions. Future Gener. Comput. Syst. 2020, 110, 502–514. [Google Scholar] [CrossRef]
    AWS Lambda Overview. Available online: https://aws.amazon.com/lambda/?nc1=h_ls
    (accessed on 25 January 2022). Pierleoni, P.; Concetti, R.; Belli, A.; Palma,
    L. Amazon, Google and Microsoft Solutions for IoT: Architectures and a Performance
    Comparison. IEEE Access 2020, 8, 5455–5470. [Google Scholar] [CrossRef] Alexa
    Developer Documentation. Available online: https://developer.amazon.com/en-US/docs/alexa/documentation-home.html
    (accessed on 25 January 2022). Iliev, Y.; Ilieva, G. A Framework for Smart Home
    System with Voice Control Using NLP Methods. Electronics 2023, 12, 116. [Google
    Scholar] [CrossRef] MQTT Specification. Available online: https://mqtt.org/mqtt-specification/
    (accessed on 25 January 2022). Desbiens, F. MQTT. In Building Enterprise IoT Solutions
    with Eclipse IoT Technologies: An Open Source Approach to Edge Computing; Apress:
    Berkeley, CA, USA, 2023; pp. 67–101. [Google Scholar] [CrossRef] Mwakwata, C.B.;
    Malik, H.; Mahtab Alam, M.; Le Moullec, Y.; Parand, S.; Mumtaz, S. Narrowband
    internet of things (NB-IoT): From Physical (PHY) and Media Access Control (MAC)
    Layers Perspectives. Sensors 2019, 19, 2613. [Google Scholar] [CrossRef] Hwang,
    S.H.; Liu, S.Z. Survey on 3GPP Low Power Wide Area Technologies and its Application.
    In Proceedings of the 2019 IEEE VTS Asia Pacific Wireless Communications Symposium
    (APWCS), Singapore, 28–30 August 2019; pp. 1–5. [Google Scholar] [CrossRef] Mekki,
    K.; Bajic, E.; Chaxel, F.; Meyer, F. A comparative study of LPWAN technologies
    for large-scale IoT deployment. ICT Express 2019, 5, 1–7. [Google Scholar] [CrossRef]
    Díaz Zayas, A.; Rivas Tocado, F.J.; Rodríguez, P. Evolution and Testing of NB-IoT
    Solutions. Appl. Sci. 2020, 10, 7903. [Google Scholar] [CrossRef] Soldani, D.;
    Pentikousis, K.; Tafazolli, R.; Franceschini, D. 5G networks: End-to-end architecture
    and infrastructure [Guest Editorial]. IEEE Commun. Mag. 2014, 52, 62–64. [Google
    Scholar] [CrossRef] Tran, V.; Lenssens, B.; Kassab, A.; Laks, A.; Rivière, E.;
    Rosinosky, G.; Sadre, R. Machine-as-a-Service: Blockchain-based management and
    maintenance of industrial appliances. Eng. Rep. 2022, 2022, e12567. [Google Scholar]
    [CrossRef] Paiola, M. Digitalization and servitization: Opportunities and challenges
    for Italian SMES. Sinergie Ital. J. Manag. 2018, 36, 11–22. [Google Scholar] Tariq,
    M.A.; Khan, M.; Raza Khan, M.T.; Kim, D. Enhancements and Challenges in CoAP—A
    Survey. Sensors 2020, 20, 6391. [Google Scholar] [CrossRef] Stolojescu-Crisan,
    C.; Gal, J. A Home Energy Management System. In Proceedings of the 2022 International
    Symposium on Electronics and Telecommunications (ISETC), Timisoara, Romania, 10–11
    November 2022; pp. 1–4. [Google Scholar] [CrossRef] Sarkar, S.; Wankar, R.; Srirama,
    S.N.; Suryadevara, N.K. Serverless Management of Sensing Systems for Fog Computing
    Framework. IEEE Sens. J. 2020, 20, 1564–1572. [Google Scholar] [CrossRef] Froiz-Míguez,
    I.; Fernández-Caramés, T.M.; Fraga-Lamas, P.; Castedo, L. Design, Implementation
    and Practical Evaluation of an IoT Home Automation System for Fog Computing Applications
    Based on MQTT and ZigBee-WiFi Sensor Nodes. Sensors 2018, 18, 2660. [Google Scholar]
    [CrossRef] Mishra, B.; Kertesz, A. The Use of MQTT in M2M and IoT Systems: A Survey.
    IEEE Access 2020, 8, 201071–201086. [Google Scholar] [CrossRef] Husnain, M.; Hayat,
    K.; Cambiaso, E.; Fayyaz, U.U.; Mongelli, M.; Akram, H.; Ghazanfar Abbas, S.;
    Shah, G.A. Preventing MQTT Vulnerabilities Using IoT-Enabled Intrusion Detection
    System. Sensors 2022, 22, 567. [Google Scholar] [CrossRef] Buccafurri, F.; De
    Angelis, V.; Nardone, R. Securing MQTT by Blockchain-Based OTP Authentication.
    Sensors 2020, 20, 2002. [Google Scholar] [CrossRef] Munshi, A. Improved MQTT Secure
    Transmission Flags in Smart Homes. Sensors 2022, 22, 2174. [Google Scholar] [CrossRef]
    Baek, J.; Kanampiu, M.W.; Kim, C. A Secure internet of things Smart Home Network:
    Design and Configuration. Appl. Sci. 2021, 11, 6280. [Google Scholar] [CrossRef]
    Krishnamurthi, R.; Kumar, A.; Gopinathan, D.; Nayyar, A.; Qureshi, B. An Overview
    of IoT Sensor Data Processing, Fusion, and Analysis Techniques. Sensors 2020,
    20, 6076. [Google Scholar] [CrossRef] Lee, E.; Vesonder, G.; Wendel, E. Eldercare
    Robotics—Alexa. In Proceedings of the 2020 11th IEEE Annual Ubiquitous Computing,
    Electronics and Mobile Communication Conference (UEMCON), New York, NY, USA, 28–31
    October 2020; pp. 0820–0825. [Google Scholar] [CrossRef] Bogdan, R.; Tatu, A.;
    Crisan-Vida, M.M.; Popa, M.; Stoicu-Tivadar, L. A Practical Experience on the
    Amazon Alexa Integration in Smart Offices. Sensors 2021, 21, 734. [Google Scholar]
    [CrossRef] [PubMed] Pennacchioni, M.; Di Benedette, M.G.; Pecorella, T.; Carlini,
    C.; Obino, P. NB-IoT system deployment for smart metering: Evaluation of coverage
    and capacity performances. In Proceedings of the 2017 AEIT International Annual
    Conference, Cagliari, Italy, 20–22 September 2017; pp. 1–6. [Google Scholar] [CrossRef]
    Li, Y.; Cheng, X.; Cao, Y.; Wang, D.; Yang, L. Smart Choice for the Smart Grid:
    Narrowband internet of things (NB-IoT). IEEE Internet Things J. 2018, 5, 1505–1515.
    [Google Scholar] [CrossRef] Kadusic, E.; Zivic, N.; Ruland, C.; Hadzajlic, N.
    A Smart Parking Solution by Integrating NB-IoT Radio Communication Technology
    into the core IoT Platform. Future Internet 2022, 14, 219. [Google Scholar] [CrossRef]
    Zhang, H.; Li, J.; Wen, B.; Xun, Y.; Liu, J. Connecting Intelligent Things in
    Smart Hospitals Using NB-IoT. IEEE Internet Things J. 2018, 5, 1550–1560. [Google
    Scholar] [CrossRef] Daraghmi, Y.A.; Daraghmi, E.Y.; Daraghma, R.; Fouchal, H.;
    Ayaida, M. Edge/Fog/cloud computing Hierarchy for Improving Performance and Security
    of NB-IoT-Based Health Monitoring Systems. Sensors 2022, 22, 8646. [Google Scholar]
    [CrossRef] Thedy, J.; Liao, K.W.; Tseng, C.C.; Liu, C.M. Bridge Health Monitoring
    via Displacement Reconstruction-Based NB-IoT Technology. Appl. Sci. 2020, 10,
    8878. [Google Scholar] [CrossRef] Dangana, M.; Ansari, S.; Abbasi, Q.H.; Hussain,
    S.; Imran, M.A. Suitability of NB-IoT for Indoor Industrial Environment: A Survey
    and Insights. Sensors 2021, 21, 5284. [Google Scholar] [CrossRef] Han, C.; Zhang,
    W.; Li, M.; Tian, Y. Design of Smart Home System Based on Nb-Iot. J. Phys. Conf.
    Ser. 2022, 2254, 012039. [Google Scholar] [CrossRef] Li, T.; Hou, P. Application
    of NB-IoT in Intelligent Fire Protection System. In Proceedings of the 2019 International
    Conference on Virtual Reality and Intelligent Systems (ICVRIS), Jishou, China,
    14–15 September 2019; pp. 203–206. [Google Scholar] [CrossRef] Sisavath, C.; Yu,
    L. Design and implementation of security system for smart home based on IOT technology.
    Procedia Comput. Sci. 2021, 183, 4–13. [Google Scholar] [CrossRef] Muteba, K.;
    Djouani, K.; Olwal, T. 5G NB-IoT: Design, Considerations, Solutions and Challenges.
    Procedia Comput. Sci. 2022, 198, 86–93. [Google Scholar] [CrossRef] Khan, B.;
    Pirak, C. Experimental Performance Analysis of MQTT and CoAP Protocol Usage for
    NB-IoT Smart Meter. In Proceedings of the 2021 9th International Electrical Engineering
    Congress (iEECON), Pattaya, Thailand, 10–12 March 2021; pp. 65–68. [Google Scholar]
    [CrossRef] Larmo, A.; Ratilainen, A.; Saarinen, J. Impact of CoAP and MQTT on
    NB-IoT System Performance. Sensors 2019, 19, 7. [Google Scholar] [CrossRef] [PubMed]
    Khanh, Q.V.; Hoai, N.V.; Manh, L.D.; Le, A.N.; Jeon, G. Wireless communication
    technologies for IoT in 5G: Vision, applications, and challenges. Wirel. Commun.
    Mob. Comput. 2022, 2022, 3229294. [Google Scholar] [CrossRef] Wang, S.Y.; Chang,
    J.E.; Fan, H.; Sun, Y.H. Comparing the performance of NB-IoT, LTE Cat-M1, Sigfox,
    and LoRa for IoT end devices moving at high speeds in the air. J. Signal Process.
    Syst. 2022, 94, 81–99. [Google Scholar] [CrossRef] Khalifeh, A.; Aldahdouh, K.A.;
    Darabkh, K.A.; Al-Sit, W. A Survey of 5G Emerging Wireless Technologies Featuring
    LoRaWAN, Sigfox, NB-IoT and LTE-M. In Proceedings of the 2019 International Conference
    on Wireless Communications Signal Processing and Networking (WiSPNET), Chennai,
    India, 21–23 March 2019; pp. 561–566. [Google Scholar] [CrossRef] Naik, N. Choice
    of effective messaging protocols for IoT systems: MQTT, CoAP, AMQP and HTTP. In
    Proceedings of the 2017 IEEE International Systems Engineering Symposium (ISSE),
    Vienna, Austria, 11–13 October 2017; pp. 1–7. [Google Scholar] [CrossRef] Macheso,
    P.; Manda, T.D.; Chisale, S.; Dzupire, N.; Mlatho, J.; Mukanyiligira, D. Design
    of ESP8266 Smart Home Using MQTT and Node-RED. In Proceedings of the 2021 International
    Conference on Artificial Intelligence and Smart Systems (ICAIS), Coimbatore, India,
    25–27 March 2021; pp. 502–505. [Google Scholar] [CrossRef] Pierleoni, P.; Conti,
    M.; Belli, A.; Palma, L.; Incipini, L.; Sabbatini, L.; Valenti, S.; Mercuri, M.;
    Concetti, R. IoT Solution based on MQTT Protocol for Real-Time Building Monitoring.
    In Proceedings of the 2019 IEEE 23rd International Symposium on Consumer Technologies
    (ISCT), Ancona, Italy, 19–21 June 2019; pp. 57–62. [Google Scholar] [CrossRef]
    D’Ortona, C.; Tarchi, D.; Raffaelli, C. Open-Source MQTT-Based End-to-End IoT
    System for Smart City Scenarios. Future Internet 2022, 14, 57. [Google Scholar]
    [CrossRef] Manowska, A.; Wycisk, A.; Nowrot, A.; Pielot, J. The Use of the MQTT
    Protocol in Measurement, Monitoring and Control Systems as Part of the Implementation
    of Energy Management Systems. Electronics 2023, 12, 17. [Google Scholar] [CrossRef]
    Veichtlbauer, A.; Heinisch, A.; von Tüllenburg, F.; Dorfinger, P.; Langthaler,
    O.; Pache, U. Smart Grid Virtualisation for Grid-Based Routing. Electronics 2020,
    9, 1879. [Google Scholar] [CrossRef] Vitali, G.; Francia, M.; Golfarelli, M.;
    Canavari, M. Crop Management with the IoT: An Interdisciplinary Survey. Agronomy
    2021, 11, 181. [Google Scholar] [CrossRef] Esposito, M.; Palma, L.; Belli, A.;
    Sabbatini, L.; Pierleoni, P. Recent Advances in internet of things Solutions for
    Early Warning Systems: A Review. Sensors 2022, 22, 2124. [Google Scholar] [CrossRef]
    Gupta, B.; Mittal, P.; Mufti, T. A Review on Amazon Web Service (AWS), Microsoft
    Azure, Google cloud Platform (GCP) Services. In Proceedings of the 2nd International
    Conference on ICT for Digital, Smart, and Sustainable Development, ICIDSSD 2020,
    Jamia Hamdard, India, 27–28 February 2020. [Google Scholar] [CrossRef] Alexa Developer
    Documentation. Available online: https://docs.aws.amazon.com/iot/latest/developerguide/data-protection.html
    (accessed on 25 January 2022). Alexa Developer Documentation. Available online:
    https://docs.aws.amazon.com/iot/latest/developerguide/authentication.html (accessed
    on 25 January 2022). Këpuska, V.; Bohouta, G. Next-generation of virtual personal
    assistants (Microsoft Cortana, Apple Siri, Amazon Alexa and Google Home). In Proceedings
    of the 2018 IEEE 8th Annual Computing and Communication Workshop and Conference
    (CCWC), Las Vegas, NV, USA, 8–10 January 2018; pp. 99–103. [Google Scholar] [CrossRef]
    George, G.; Bakir, F.; Wolski, R.; Krintz, C. NanoLambda: Implementing Functions
    as a Service at All Resource Scales for the internet of things. In Proceedings
    of the 2020 IEEE/ACM Symposium on Edge Computing (SEC), San Jose, CA, USA, 12–14
    November 2020; pp. 220–231. [Google Scholar] [CrossRef] Eclipse Paho Pyhthon Client.
    Available online: https://www.eclipse.org/paho/clients/python/ (accessed on 24
    October 2022). Light, R.A. Mosquitto: Server and client implementation of the
    MQTT protocol. J. Open Source Softw. 2017, 2, 265. [Google Scholar] [CrossRef]
    Disclaimer/Publisher’s Note: The statements, opinions and data contained in all
    publications are solely those of the individual author(s) and contributor(s) and
    not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility
    for any injury to people or property resulting from any ideas, methods, instructions
    or products referred to in the content.  © 2023 by the authors. Licensee MDPI,
    Basel, Switzerland. This article is an open access article distributed under the
    terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Esposito, M.; Belli, A.; Palma, L.; Pierleoni,
    P. Design and Implementation of a Framework for Smart Home Automation Based on
    Cellular IoT, MQTT, and Serverless Functions. Sensors 2023, 23, 4459. https://doi.org/10.3390/s23094459
    AMA Style Esposito M, Belli A, Palma L, Pierleoni P. Design and Implementation
    of a Framework for Smart Home Automation Based on Cellular IoT, MQTT, and Serverless
    Functions. Sensors. 2023; 23(9):4459. https://doi.org/10.3390/s23094459 Chicago/Turabian
    Style Esposito, Marco, Alberto Belli, Lorenzo Palma, and Paola Pierleoni. 2023.
    \"Design and Implementation of a Framework for Smart Home Automation Based on
    Cellular IoT, MQTT, and Serverless Functions\" Sensors 23, no. 9: 4459. https://doi.org/10.3390/s23094459
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   3
    ads   1 Scopus   4 PubMed   1 PMC   1 Web of Science   1 Google Scholar   [click
    to view] Article Access Statistics Article access statistics Article Views 28.
    Dec 7. Jan 17. Jan 27. Jan 6. Feb 16. Feb 26. Feb 7. Mar 17. Mar 0k 1k 2k 3k 4k
    5k For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Sensors, EISSN 1424-8220,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Design and Implementation of a Framework for Smart Home Automation Based
    on Cellular IoT, MQTT, and Serverless Functions
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bano S.
  - Tonellotto N.
  - Cassarà P.
  - Gotta A.
  citation_count: '1'
  description: Federated Learning (FL) is a distributed optimization method in which
    multiple client nodes collaborate to train a machine learning model without sharing
    data with a central server. However, communication between numerous clients and
    the central aggregation server to share model parameters can cause several problems,
    including latency and network congestion. To address these issues, we propose
    a scalable communication infrastructure based on Information-Centric Networking
    built and tested on Apache Kafka®. The proposed architecture consists of a two-tier
    communication model. In the first layer, client updates are cached at the edge
    between clients and the server, while in the second layer, the server computes
    global model updates by aggregating the cached models. The data stored in the
    intermediate nodes at the edge enables reliable and effective data transmission
    and solves the problem of intermittent connectivity of mobile nodes. While many
    local model updates provided by clients can result in a more accurate global model
    in FL, they can also result in massive data traffic that negatively impacts congestion
    at the edge. For this reason, we couple a client selection procedure based on
    a congestion control mechanism at the edge for the given architecture of FL. The
    proposed algorithm selects a subset of clients based on their resources through
    a time-based backoff system to account for the time-averaged accuracy of FL while
    limiting the traffic load. Experiments show that our proposed architecture has
    an improvement of over 40% over the network-centric based FL architecture, i.e.,
    Flower. The architecture also provides scalability and reliability in the case
    of mobile nodes. It also improves client resource utilization, avoids overflow,
    and ensures fairness in client selection. The experiments show that the proposed
    algorithm leads to the desired client selection patterns and is adaptable to changing
    network environments.
  doi: 10.1016/j.comcom.2023.04.010
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related work 3. System model 4. Federated
    learning communication architecture 5. Federated learning client selection 6.
    Federated learning performance 7. Conclusion and future work CRediT authorship
    contribution statement Declaration of Competing Interest Acknowledgements Data
    availability References Vitae Show full outline Cited by (1) Figures (11) Show
    5 more figures Tables (3) Table 1 Table 2 Table 3 Computer Communications Volume
    205, 1 May 2023, Pages 45-57 Artificial intelligence of things at the edge: Scalable
    and efficient distributed learning for massive scenarios Author links open overlay
    panel Saira Bano a b, Nicola Tonellotto a, Pietro Cassarà b, Alberto Gotta b Show
    more Add to Mendeley Share Cite https://doi.org/10.1016/j.comcom.2023.04.010 Get
    rights and content Abstract Federated Learning (FL) is a distributed optimization
    method in which multiple client nodes collaborate to train a machine learning
    model without sharing data with a central server. However, communication between
    numerous clients and the central aggregation server to share model parameters
    can cause several problems, including latency and network congestion. To address
    these issues, we propose a scalable communication infrastructure based on Information-Centric
    Networking built and tested on Apache Kafka®. The proposed architecture consists
    of a two-tier communication model. In the first layer, client updates are cached
    at the edge between clients and the server, while in the second layer, the server
    computes global model updates by aggregating the cached models. The data stored
    in the intermediate nodes at the edge enables reliable and effective data transmission
    and solves the problem of intermittent connectivity of mobile nodes. While many
    local model updates provided by clients can result in a more accurate global model
    in FL, they can also result in massive data traffic that negatively impacts congestion
    at the edge. For this reason, we couple a client selection procedure based on
    a congestion control mechanism at the edge for the given architecture of FL. The
    proposed algorithm selects a subset of clients based on their resources through
    a time-based backoff system to account for the time-averaged accuracy of FL while
    limiting the traffic load. Experiments show that our proposed architecture has
    an improvement of over 40% over the network-centric based FL architecture, i.e.,
    Flower. The architecture also provides scalability and reliability in the case
    of mobile nodes. It also improves client resource utilization, avoids overflow,
    and ensures fairness in client selection. The experiments show that the proposed
    algorithm leads to the desired client selection patterns and is adaptable to changing
    network environments. Previous article in issue Next article in issue Keywords
    6GFederated LearningIn-network cachingPublish/subscribeClients selectionEdge computingInformation-centric
    networking 1. Introduction While 5G mobile systems are still being actively deployed
    worldwide, the research community has already begun to investigate the latest
    technological developments for the next generation of 6G mobile systems [1]. In
    this context, the proliferation of Artificial Intelligence (AI) applications and
    Internet-of-Things (IoT) devices continues to drive the evolution of mobile networks,
    and 6G is anticipated to change the paradigm of mobile communications systems
    from “connected things” to “connected intelligence” [2]. One of the main goals
    of 6G mobile communication systems is to orchestrate communication, computation
    and control as components of a holistic system to achieve better sustainability
    and energy efficiency [3]. In this 6G eco-system, ubiquitous AI-based technologies
    and Machine Learning (ML) are essential in optimizing the orchestration of the
    above components. Traditionally, ML systems are trained by collecting the required
    data on a single server, but this approach raises several issues, such as data
    reliability and confidentiality, and increases communication costs and latency.
    Furthermore, considering data security and user privacy, the General Data Protection
    Regulation (GDPR) discourages the acquisition and transmission of user data [4].
    To address the above issues, Google has introduced the concept of Federated Learning
    (FL) [5]. FL is a new approach in which ML algorithms are trained on multiple
    decentralized devices, with all data remaining on the device. In the FL process,
    a group or subset of clients independently train a ML model with their local data.
    These clients then exchange the parameters of the local ML models with a Model
    Aggregation Server (MAS), which averages these model parameters to create a global
    ML model. The MAS then propagates this global ML model to all participating clients
    [5]. This eliminates the need for a central repository for shared data, as required
    by traditional centralized ML training. However, implementing FL on resource-constrained
    client devices is difficult in real-world scenarios because the parameters describing
    ML models, such as neural networks (NNs), can be as large as a billion in many
    applications. Nevertheless, several FL frameworks have been proposed to develop
    FL-based applications, such as TensorFlow Federated [6], FedEval [7], FedML [8],
    PySyft [9], and Flower [10]. These frameworks are based on a network-centric communication
    paradigm that requires direct communication between clients and servers. The network-centric
    paradigm relies on a central server that is a single point of failure and cannot
    provide reliability for ubiquitous AI applications for 6G systems [1]. Therefore,
    clients cannot send or receive data to or from the server if the connection fails
    or the server is unavailable, especially for mobile or vehicular nodes with limited
    connectivity. In contrast, a communication paradigm such as Information-Centric
    Network (ICN) can ensure that information is exchanged between two endpoints (clients
    and server) even in the event of failures by caching and replicating data within
    the network. The expected benefits of this ICN paradigm are higher efficiency,
    better scalability in terms of bandwidth requirements, and higher robustness under
    challenging communication conditions, such as in vehicular scenarios. It should
    be noted that ICN still requires a TCP/IP connection for data transmission, although
    some solutions have been proposed based on other, more efficient protocols such
    as QUIC [11]. Therefore, ICN is generally considered as an overlay network built
    on ossified network-centric protocols. Exploiting the benefits of the ICN paradigm,
    we design a scalable communication architecture of FL for a vehicular scenario.
    This communication architecture aims to support mobile nodes where connectivity
    is intermittent by providing in-network caching capabilities. We develop this
    communication paradigm using Apache Kafka® [12], a distributed data streaming
    platform. In the proposed FL communication paradigm, the Kafka entity called broker
    is configured at the edge in which the model parameters are managed as an event
    or message organization structure called topics. The Kafka broker, acting as an
    intermediate instance, receives data from publishers (that generate the model
    parameters) in topics and distributes this data to subscribers (who use the model
    parameters). Hence, we decouple the client nodes from the MAS and form a many-to-many
    communication model between publishers and subscribers. This decoupling makes
    distributed systems more flexible, scalable, and resilient to connection failures
    than the traditional client/server paradigm [13]. In the proposed ICN-based FL
    communication paradigm, the large number of local model parameters sent by clients
    to the broker to obtain an accurate global model can lead to broker congestion.
    One of the solutions could be to limit the number of participating clients in
    the federation process. Many client selection techniques were proposed in the
    literature, such as in [14], [15], but these techniques are based on static clients.
    They do not adequately consider client selection in dynamic vehicular scenarios.
    In this context, we propose a mechanism to select clients participating in global
    model updating in massive scenarios, i.e., with many potentially active clients,
    to reduce broker congestion. This congestion control mechanism limits the number
    of client updates received to avoid queue overflow. An early design of this client
    selection mechanism, namely FedTCS, was presented in [16] using a time-based approach
    with exponentially distributed timers. In this paper, we extend the analysis of
    FedTCS by giving a complete account of the selection techniques for FL clients
    and testing different time distributions, such as the uniform or beta distribution.
    In addition, we consider clients with heterogeneous resources and training times.
    In this work, we demonstrate through experiments the numerous advantages of the
    proposed infrastructure: better scalability for FL scenarios, temporal and spatial
    decoupling between clients and MAS, data availability while avoiding overflowing
    broker queues. Finally, we prove the effectiveness of our ICN paradigm by comparing
    its performance with that of a network-centric paradigm, i.e., Flower [10]. We
    also present a performance analysis to demonstrate the scalability of the proposed
    client selection method, which uses an equal selection probability to accommodate
    stragglers during the FL process while optimally matching the expected number
    of clients to the queue size. The remainder of this paper is organized as follows.
    Section 2 introduces recent advances in FL communication and Apache Kafka®, and
    the background of FL client selection techniques. Section 3 presents the reference
    scenario and the considered assumptions of the proposed architecture. Then, Section
    4 describes the proposed ICN-based FL communication architecture. Section 5 presents
    the client selection procedure using the architecture described in Section 4.
    Then, Section 6 evaluates the performance of the proposed architecture along with
    the client selection mechanism. Finally, conclusions are drawn in Section 7, including
    possible directions for future work. 2. Related work This section briefly reviews
    the work related to the proposed communication architecture and client selection
    process. In this context, we discuss the background, related work, and communication
    perspective of Apache Kafka®, a publish/subscribe model and relevant existing
    work on client selection in FL. 2.1. Federated learning Federated Learning is
    a distributed learning system proposed by Google [5] that trains ML models on
    distributed systems. The main idea was to protect user privacy by keeping all
    data on users’ devices and sharing only the ML model parameters during the training
    process. FL is widely used in various fields, including health care, finance,
    and transportation. The authors in [17] presented a practical application of FL
    for mobile keyboard prediction. The authors showed how FL can be used to train
    personalized speech models on user devices while maintaining privacy. Li et al.
    [18] investigated the performance of FL on non-IID data silos, where data may
    be distributed differently across different devices. While FL solves the privacy
    problem, numerous challenges arise when using FL in real-world scenarios [19].
    These issues include the communication cost required to transfer the ML model
    parameters between MAS and the distributed client devices and the low computational
    power of the client devices. In this work, we use the publish/subscribe communication
    mode (pub/sub) to reduce the communication cost of FL. The communication cost
    of FL has been the subject of many studies. In [20], the NN quantization strategy
    for time series prediction reduces communication costs by minimizing the size
    of ML model parameters exchanged between clients and the server. In addition,
    a significant bottleneck in scaling distributed training also arises from the
    communication load on the server caused by updating multiple clients in the FL
    process. Several strategies have been proposed to solve this communication bottleneck,
    including compression [21], quantization [20], and efficient client selection
    [22]. In [23], the authors propose an adaptive gradient compression method to
    increase the communication efficiency of FL. Specifically, the proposed algorithm
    adjusts the compression ratio of each client according to its different characteristics.
    The FL framework FedPAQ [24], aims to reduce the total number of communication
    rounds and the associated cost. This is achieved by using quantization techniques
    on the uplink, which helps to reduce the communication overhead. The work in [25]
    meets the requirements of FL from the communication efficiency point of view by
    compressing both upstream and downstream communications with Sparse Ternary Compression
    (STC) and optimal Golomb encoding of ML model parameters. Their proposed method
    is also able to handle a large number of clients by using partial client participation
    in FL. However, we take a different approach by performing FL using the pub/sub
    communication model, while the other previously mentioned methods focus on a network-centric
    communication model. The main goal of the proposed approach is to develop a communication-efficient
    FL framework that benefits both static and non-static users (mobile nodes). 2.2.
    Apache Kafka® Apache Kafka®, a distributed messaging platform used for data stream
    processing [12]. In Apache Kafka®, messages are created by message producers (in
    our case, vehicles) and stored in queues called topics at the broker, where topic
    subscribers can then retrieve them. These topics are the queues where the messages
    are stored. Each topic can have numerous duplicate partitions stored on different
    Kafka brokers. The ability to use numerous broker instances, which gives the Kafka
    cluster fault-tolerance properties, is another factor that makes Kafka highly
    scalable and suitable for distributed learning systems such as FL. In addition
    to Apache Kafka® there are other event streaming platforms such as ActiveMQ [26],
    RabbitMQ [27], and Google Pub/Sub [28]. In Table 1 we compare popular messaging
    systems used for distributed computing and real-time data processing with Apache
    Kafka®. While different streaming platforms can be useful in different scenarios,
    Apache Kafka® offers more scalability, performance, flexibility, and data retention
    capabilities, making it more suitable for the considered scenario and a more popular
    choice for real-time data processing. There is comparatively little research on
    ML applications using ICN and Kafka. Feraudo et al. have developed a pub/sub-based
    selection mechanism for IoT devices that participate asynchronously in the FL
    process [29]. In [30], the researchers developed a method for training and deriving
    ML models that feed the continuous dataset directly into the ML model via the
    Kafka pipeline, as opposed to training ML models with static data. The authors
    in [31] proposed an IoT-based optimized cache setting in the ICN for mobile multimedia
    content using ML to reduce access time. They proposed a location prediction method
    and an intelligent network edge caching technique to improve the user experience.
    In [32], the authors developed a low-latency distributed messaging system to provide
    a data-centric perspective on the connected vehicles ecosystem. Table 1. Comparison
    of the different streaming platforms with their advantages (pros) and disadvantages
    (cons) Features Apache Kafka RabbitMQ ActiveMQ Google Pub/Sub Scalability High
    Very low Low to medium High Throughput High Medium to high Low Medium to high
    Latency Low Medium Medium to high Low Fault tolerance ✓ ✓ ✓ ✓ Reliability ✓ ✓
    ✓ ✓ Data compression ✓ ✗ ✓ ✓ Communication protocol TCP AMQP Multiple Multiple
    Delay queuing No Yes No No Consume mode Pull Push/Pull Pull Push/Pull Distributed
    units Topics Queues Channels Topics Compatibility Excellent Good Poor Good Usability
    High (Open-source) High (Open-source) Medium to low Medium(Price based) Used by
    Linkedin, Netflix AT & T, Walmart Mollie Facebook Reddit BlaBlaCar There are only
    a few papers in the literature that contrast the information-centric paradigm
    (pub/sub) and the network-centric paradigm. According to the authors of [33],
    pub/sub models are preferable for distributed real-time systems because they are
    inexpensive and easy to implement with polling techniques. The authors of [34]
    compared the request–response and pub/sub models based on many criteria, including
    mobility, timeliness, and adaptability. They also proposed a communication strategy
    that combines the two systems into a hybrid system that is network- and information-centric.
    In their paper [35], Eugster et al. compared the typical request–response method
    with a pub/sub strategy in three dimensions, i.e., time, space, and synchronization
    decoupling. 2.3. Clients selection While the FL algorithm was originally based
    on a random and uniform selection of clients [5], this scheme proved to be biased
    and converged to a suboptimal minima of the convergence problem. For this reason,
    the notion of unbiasedness was introduced by the authors in [36]. Unbiased client
    sampling is used to optimize the original FL cost function while minimizing the
    number of active clients per FL round. Many other client selection schemes have
    also been proposed in the literature, such as in [14], where researchers attempt
    to solve the client selection problem with client’s non-homogeneous resources.
    In their proposed framework, the Multi-Access Edge Computing (MEC) operator invites
    a randomly selected group of clients and asks them to report their available resources.
    The MEC operator selects only the clients with enough resources to complete the
    task in the FL process. In [15], the researchers described the client selection
    technique that selects only the clients that have suffered high losses in their
    local ML model to speed up convergence and significantly reduce communication
    overhead. In [37], the authors proposed FedMCCS, which considers clients’ resources,
    including CPU, memory, time, and energy, to determine whether they are capable
    of participating in the FL task. FedMCCS selectively increases the number of participating
    clients in each FL round, taking into account the resources of each client and
    its ability to effectively train and deliver the required ML model updates. However,
    in this paper, we propose a client selection mechanism for FL that uses the pub/sub
    network model to select clients during each FL round, taking into account constraints
    such as network and edge resources. 3. System model In this section, we provide
    a detailed description of the reference scenario and the assumptions we made for
    the development of our communication infrastructure, which is suitable to achieve
    FL in vehicular scenarios while minimizing the communication overhead. This work
    has two main objectives: to develop an efficient communication architecture for
    FL, suitable for mobile nodes, and to efficiently select clients using this communication
    paradigm to reduce broker congestion. The proposed infrastructure is based on
    edge computing to leverage the processing power of edge servers capable of handling
    distributed tasks such as FL with mobile nodes that require minimizing communication
    latency with the central server [38]. We use the ICN communication paradigm because
    it provides in-network caching capabilities and decouples clients from MAS, which
    increases robustness to connection failures. We assume that each vehicle has a
    5G radio and can communicate with the edge using a pub/sub protocol. We also assume
    that each vehicle has the computational resources necessary to train an NN model
    on local data. The MAS runs in the cloud, and the Kafka broker is located at the
    edge. Communication flows from the vehicles (clients), which generate updated
    local model parameters, to the broker, which stores these models and provides
    them to MAS, which aggregates them in the cloud, as shown in Fig. 1. Once the
    aggregation of the models is complete, this global NN model is stored at the edge
    broker from where the vehicle clients can download it for further training. Download
    : Download high-res image (254KB) Download : Download full-size image Fig. 1.
    Overview of the proposed ICN-based FL communication architecture. Our infrastructure
    uses the Apache Kafka® broker1 to decouple the clients and the MAS. Thus, if the
    MAS is not available when the vehicles send their updated local NN model parameters,
    the broker at the edge can store these model parameters and make them available
    to the MAS. Once the federated model is available, it can be sent to the broker
    at the edge for the vehicles to download as needed. Thus, the communication between
    MAS and the vehicles is done through the Kafka brokers at the edge, which forms
    a two-hop communication path, as shown in Fig. 1. Since the broker at the edge
    collects model updates from clients, it can relieve MAS of much of the communication
    load and reduce the delay caused by clients uploading and downloading model parameters.
    In this distributed architecture, we defined the Kafka broker’s topics as data
    queues. Topics serve as logical channels to separate messages from vehicles to
    the MAS server (uplink) and vice versa. The name of each topic is its key value,
    which clients use to log in to the Kafka broker. We have defined two topics on
    the broker: clients_data, to which the clients publish their model parameters,
    and averaged_result, where the MAS publishes the aggregated model. The entity
    (client or MAS) that wants to send a model to the topic on the broker is called
    a producer and uses the Kafka Producer API. In contrast, the entity that wants
    to download the model from the broker uses the Kafka Consumer API. After developing
    the communication paradigm, we develop an efficient client selection mechanism
    for our infrastructure to avoid Kafka broker queue overflows and congestion caused
    by massive traffic of client model parameters. Even though the global ML model
    accuracy increases when many clients are involved, it is necessary to consider
    the edge resources on which the broker is deployed. Since the queue size is finite,
    it is important to reduce the queue overflow. The queue size depends on the arrival
    of model updates from clients and the departure of model updates, i.e., towards
    MAS. The overflow can be limited in different ways. One way to reduce queue overflow
    is to increase the capacity of the system by increasing or expanding the physical
    space of the queue [39]. However, the large queues lead to an increase in delays.
    Another possibility is to increase parallelism at the edge and use multiple queues,
    which might require additional Kafka brokers [40]. There is also a possibility
    to configure the Kafka broker with a shorter message retention time, which would
    reduce the number of messages in the queue, but could potentially lead to message
    losses if the system processing the messages is too slow [40]. In [41], the authors
    propose a method based on the drift plus penalty technique to solve stochastic
    network utility maximization problems such as buffer overflow and queue stability.
    The authors also propose a method that guarantees network queue stability; they
    provide evidence that their method can converge to the optimal solution in a finite
    time. The queue can also be stabilized by making the departure rate higher than
    the arrival rate, i.e., the ratio between the average number of arrivals and the
    number of departures is less than one. However in our proposed system, we assume
    that the departures are i.i.d., i.e., independent and identically distributed,
    and depend on the channel capacity between the edge and the MAS in the cloud.
    However, we can change the number of arrivals by limiting the number of participating
    clients in the federation process. Therefore, client selection is crucial to avoid
    congestion. We solve client selection problem by introducing a Control Agent (CA)
    at each edge that serves different regional clusters for the client selection
    process, as shown in Fig. 2. CA uses ACKs (short messages as acknowledgements)
    to control the flow of model parameters to and from clients. In our architecture,
    we propose an activation mechanism for the CA that depends on timers, as described
    in the following sections. Once selected, each vehicle client trains its model
    over a set of local epochs and then serves as a producer that sends its local
    model parameters to the broker. Each client’s model update is split into discrete
    data packets before being sent to the broker. The splitting facilitates the transmission
    of the models, which may even include millions of parameters in many cases. Note
    also that in the client selection algorithm, we refer to the topic defined in
    the Kafka broker as the “edge queue” because topics are stored in queues over
    the edge. The steps for one round of the FL process using the proposed communication
    paradigm are shown in Fig. 3 and are as follows: Download : Download high-res
    image (153KB) Download : Download full-size image Fig. 2. Overview of the client
    selection mechanism in FL with the control agent at the edge. 1. The vehicular
    clients train their models by using local data; 2. Each client splits its updated
    model parameters into batches and runs the Kafka Producer API to send these batches
    to the broker at the edge to be stored in the specified topic named clients_data;
    3. The MAS runs the Kafka Consumer API and retrieves all models from the topics
    clients_data and performs model averaging; 4. After averaging, the MAS splits
    the averaged model into batches and runs the Kafka Producer API to send these
    batches to the broker at the edge to be stored in the specified topic named averaged_result;
    5. Each client runs the Kafka Consumer API and retrieves the updated model parameters
    from the topic averaged_result; 6. The steps from 1 to 5 are executed until convergence
    to the desired global model is achieved. Download : Download high-res image (190KB)
    Download : Download full-size image Fig. 3. Steps for a round of FL in ICN-based
    communication architecture [42]. 4. Federated learning communication architecture
    In this section, we evaluate the effectiveness of the proposed communication architecture
    for the scenario with massively distributed vehicles in FL. For the performance
    analysis, we compare the method described in the previous section, which is based
    on an information-centric paradigm, with another method based on the network-centric
    paradigm, namely Flower [10]. Flower is a new FL framework for designing and developing
    FL-based solutions that provide higher level abstractions for designing network
    architectures. It is one of the few frameworks that supports execution on multiple
    ML frameworks, such as TensorFlow and PyTorch. The MAS in Flower interacts with
    clients via Remote Procedure Call (RPC) [43]. RPC is an interaction-based method
    that uses a request–response protocol for communication. When MAS selects the
    client for training in Flower, it sends the training and initial model parameters
    to all connected clients. The client receives these parameters, calls one of the
    client methods to use for training with its local data, and sends back the updated
    local model parameters. All clients must be connected until the FL process is
    complete. We compare the network-centric and ICN-based architectures as fairly
    as possible by using the same client selection strategy and neural model parameters
    in both architectures during the FL process. For our experimental setup, we use
    the Kafka framework version 3.0.0 running on a Jetson Xavier NX device with a
    64 GB memory card. Our experimental setup includes a broker on the edge and the
    MAS in the cloud. Both the broker and the cloud run on a Jetson Xavier NX. The
    clients run on two PCs with the Debian operating system, the Kafka Python API,
    Python 3.8, and PyTorch installed. We use one PC as a dense server to emulate
    many FL clients and the other one to emulate only one FL client that examines
    the network parameters used to calculate the times for a FL round. Using two PCs,
    we avoid bias in the experimental results caused by the excessive computational
    overhead of emulating the dense group of clients and examining the parameters.
    In the FL process, each client trains its model on its local dataset. The datasets
    for each client are heterogeneous to better represent the real use case where
    each client acquires its data randomly and independently. However, to provide
    an accurate and fair comparison of the performance of the FL method based on the
    ICN-based architecture and the network-based architecture, we need to guarantee
    that the training time of the clients is the same on average in both cases. For
    this reason, we assume that each client has the same average number of data samples.
    However, this assumption does not hold for the client selection algorithm to account
    for the heterogeneity of the clients and their different training times. As a
    dataset, we use the MNIST2 dataset, which contains a collection of 60k training
    samples and 10k samples for test data. Each data sample represents a handwritten
    digit image of 28 × 28 pixels. To compare the performance between the proposed
    information-centric architecture and the network-centric architecture, we study
    the time required to complete a full round of FL for a 5G network scenario, assuming
    a network bandwidth of 100 MB /s and a delay of 1 ms for the communication links,
    and varying the number of clients. The 5G network conditions are emulated using
    the NetEm tool [44]. NetEm provides functions for testing protocols by emulating
    wide-area network characteristics such as packet delay, jitter, loss, and various
    bandwidth settings. In real-world environments, client network speeds vary widely
    by region. However, for our experiments, we assume a homogeneous upload speed
    based on the 5G use case in the automotive industry. The federation is achieved
    through an NN model consisting of three layers: an input, a hidden, and an output
    layer. For all experiments, the parameters of the model are initialized randomly.
    Each experiment is run five times, and performance is evaluated as an average
    over these runs. Each client runs five local epochs during training using the
    Adam optimizer [45] with a batch size of samples and a 0.001 learning rate. The
    number of clients involved in the federation process varies in the set . The results
    on the time required per FL round with the proposed architecture and the one based
    on Flower are shown in Fig. 4. The results show that Flower performs better when
    only a small number of clients are involved in the FL procedure, while as the
    number of clients increases, the time for a FL round also increases. This performance
    degradation is due to the flash crowd situation that occurs when clients send
    their models to the MAS simultaneously, which increases the requests to the server.
    The results of the proposed ICN-based architecture show comparable performance
    to the Flower-based architecture for a small number of clients; instead, a remarkable
    performance improvement is achieved in the case of a large number of clients.
    With only 64 clients, we achieved almost 40% less time to complete a round FL
    compared to the network-centric architecture. In our architecture, where clients
    are decoupled from the server through the use of a middleware entity, i.e., a
    broker at the edge, we minimize the flash crowd effect by allowing clients to
    send their models regardless of MAS availability. We also compare the characteristics
    of the proposed framework with the baseline framework, Flower. It is clear that
    we achieve the same characteristics as Flower, such as scalability and ML framework
    agnosticism, since users can perform their FL tasks with any ML framework. It
    also provides client heterogeneity, as decoupling clients from MAS via a broker
    supports heterogeneity, as MAS does not know anything about the type of clients
    connected or their origin. Additionally, this decoupling adds another layer of
    security in FL. This is because performing all computations on the device, e.g.,
    in FL, is not sufficient to ensure privacy, as the ML models transmitted to the
    server can be used to retrieve sensitive information for privacy intrusions, and
    systems based on FL are obviously not compliant with the GDPR [46]. Therefore,
    it is necessary to protect clients’ information. In our proposed architecture,
    a broker in the middle is also helpful to ensure the anonymization of clients’
    information, such as the name and location of each client [47]. Thus, our proposed
    algorithm not only improves client privacy, but also scales up for massive client
    scenarios in FL and is suitable for both static and non-static users. Download
    : Download high-res image (193KB) Download : Download full-size image Fig. 4.
    Time per round of FL with different number of clients for 5G use-case for Flower
    and ICN-based architecture. 5. Federated learning client selection In this section,
    we analyse the proposed client selection algorithm and its performance regarding
    the average number of selected clients using different timer distributions for
    the vehicular communication scenario considered in this work. Client selection
    is critical in FL, as too many clients can lead to overflows when edge resources
    are limited. For this reason, the proposed client selection algorithm moderates
    the number of randomly selected clients publishing their models on a broker for
    the FL process, reducing broker congestion, latency, queue length, and computational
    overhead. In order to implement the client selection algorithm, a change to the
    communication architecture defined in the previous section is required. This involves
    introducing a new topic on the Kafka broker at the edge called control, which
    is used by the previously defined CA for client selection in FL. The proposed
    algorithm also considers the heterogeneity of resources and the training time
    required for each client. Moreover, the proposed algorithm selects clients that
    can complete their training within a certain threshold and low latency, and it
    also selects stragglers with equal probability. Furthermore, the client selection
    procedure removes the assumption of homogeneous local datasets made in the previous
    section. For the proposed timer-based client selection algorithm, we assume that
    the set of all clients is available for each round of the FL procedure. Before
    the start of each round, MAS sends the global model parameters and a configuration
    message to all clients. The configuration message contains the following information:
    the current round of FL, the time interval from which we extract the timer values,
    and the parameters that characterize the distributions of the timers, such as
    those of the exponential or beta distribution. After receiving the configuration
    message from MAS, each client runs a backoff timer for a time in seconds, drawn
    from a distribution with support in . When the timer expires, each client trains
    its NN model using its locally available data and sends the updated model parameters
    to the broker. Along with its model update, the client also sends to the broker
    the information about the current FL-round to which the update refers and its
    timer value in seconds. Using these factors, the server can determine whether
    it needs to change the value for the next round based on the number of updates
    received. It also uses the parameter to check if a received model update is part
    of the current FL round. After receiving model updates from the first client that
    has the ( ) value, CA is activated at the edge. Then CA sends an ACK back to MAS
    and the clients that have subscribed to the control topic or are involved in the
    FL process. Upon receiving an ACK, MAS reads the client model parameters from
    the topic clients_data and performs aggregation using the FedAvg algorithm to
    create the global model [5]. The MAS sends the global model into the topic averaged_result.
    However, the clients receiving the ACK suppress their training and do not send
    their model parameters if it has not yet completed or if their timers have not
    yet expired to save computational resources. While the MAS sends the and ( ) for
    the next FL round after performing aggregation based on the expected number of
    clients and the maximum possible round latency. A full round of FL consists of
    the above procedure. This process is repeated until the accuracy of the overall
    model is achieved. We now formalize the evaluation of the average number of selected
    clients assuming a given probability distribution for the variable using the results
    in [48] for groups of users. In this analysis, we define as the one-way delay
    between each client and the MAS and as the one-way delay between each client and
    its respective edge. For simplicity, we consider the homogeneous delays between
    the clients and the edge, and the edge to the MAS (cloud). Let and , with , be
    the probability density functions (PDFs) of the statistically independent random
    variables of the time interval and the client-broker communication delays , respectively.
    The random variables , for , denote the time between the generation of the configuration
    message by the MAS and the expiration of the back-off time on the th client. Assuming
    independence of and , the PDF of the random variable is calculated as the convolution
    of and  [49]: (1) In the same way, the PDF of the random variable can be calculated,
    which represents the time between sending the configuration message and receiving
    the ACK message from the MAS. So, the PDF of is given as: (2) Furthermore, by
    assuming a constant delay between the client and the edge broker and between the
    edge broker and the MAS such that and , the PDFs and are as follows: Now we calculate
    the expected number of clients using the results in [50]. To do this, we define
    the Bernoulli random variable , which describes whether the client sends a message
    with the model updates or not . Thus, the expected number of received model updates
    can be calculated as follows: (3) where can be calculated considering that a client
    sends its model updates when it has not yet received ACK from CA. Thus, the probability
    that it does not receive ACK is given as follows: (4) where is the cumulative
    distribution function of . The proposed analysis is valid for any timer distribution.
    However, we run a simulation to find for the proposed architecture using three
    different distributions for the back-off timer: the uniform, beta, and exponential
    distributions for clients . 5.1. Uniform distribution To select a subset of clients
    from a large number of clients for FL, the first timer-based technique we used
    is based on a uniform distribution in which all timer values are uniformly distributed
    in an interval of . Thus, the density of is given as: (5) The timer values extracted
    by each client from this uniform distribution are given by using the inverse transform
    sampling [49], which provides the following equation for the timer: (6) where
    is uniformly distributed over , and . Thus, the expected number of clients in
    the case of a uniform distribution of timers is given by Eqs. (3), (4): (7) The
    result in Eq. (7) shows that the average number of clients generally increases
    linearly with the number of clients with a slope of . However, if is large so
    that , then increases with a slope smaller than . Indeed, implies that with high
    probability, each client sends its model before receiving ACK. As increases, this
    probability decreases, as does the number of clients that can send their model
    updates. Fig. 5 shows the results of the average number of selected clients for
    a uniformly distributed timer. Each point on the curves is the average over simulations.
    The analysis of the simulations shows that the clients that set their timer within
    a time interval of can send the model updates to the edge, where is the delay
    of receiving the ACK from CA after receiving the model updates from the first
    client with “ ”. The clients whose back-off timer is longer than this length will
    suppress the training. Moreover, is the only parameter that can affect . This
    means that we can update the parameter to control the queue load (broker) at the
    edge in FL. Using large values for reduces broker congestion at the edge. Conversely,
    decreasing increases traffic due to model updates and consequently increases queue
    load. Furthermore, does not affect the FL rounds required to converge to the optimal
    global model, as shown in Section 6. Nevertheless, each round is delayed by a
    known factor . Thus, there is a tradeoff between using more clients to converge
    faster and using fewer clients to avoid congestion. Download : Download high-res
    image (187KB) Download : Download full-size image Fig. 5. Expected number of clients
    with different timer choices with uniform distributed timers. 5.2. Exponential
    distribution In this section, experiments are conducted to calculate the average
    number of selected clients using the exponential distribution with rate . More
    precisely, the truncated exponential distribution is used [51], since the support
    of the timer random variable is the finite interval , so the probability density
    is given as follows: (8) Using inverse transform sampling, the samples for the
    timer can be generated by the equation: (9) where, is uniformly distributed in
    as described before. So the expected number of clients for the truncated exponential
    distribution is given as: (10) Download : Download high-res image (314KB) Download
    : Download full-size image Fig. 6. Expected number of clients with different timer
    choices with exponentially distributed timers. The results in Eq. (10) show that
    if , all clients send their model updates. However, if we fix the time interval
    , the average number of clients is determined by Eq. (10). This Equation is composed
    of two terms: The first grows linearly, while the second is negatively exponential,
    which reduces the first so that the average number of clients is asymptotic as
    the number of clients increases. For the truncated exponential density, we analyse
    for and by varying both and considering the uniform training times; the results
    are shown in Fig. 6(a). The Figure shows that for we have an optimal number of
    clients, which means that the load offered to the queue at the edge is small.
    However, for , the weight of the timer density shifts towards , which allows for
    a large number of model updates. For , on the other hand, the timer samples are
    again in a small interval, i.e., closer to , which allows a large number of model
    parameters, but fewer than in the last case. The experiments are repeated by fixing
    the value and varying for a different number of clients; the results are shown
    in Fig. 6(b). The expected number of clients is inversely proportional to , as
    in the uniform distribution case. However, in the exponential distribution case,
    remains almost constant even if we increase the value of for a large number of
    clients. The exponential distribution parameter affects the probability of timers
    with values close to , which means that the number of clients suppressing their
    model increases when the considered values of are all larger than . So we can
    change the edge queue utilization by adjusting the parameter even if the number
    of clients increases. 5.3. Beta distribution The next distribution for which we
    studied the client selection is the beta distribution. The beta distribution has
    two parameters, and  [52]. Given a parameter , and a support of the interval ,
    the probability density function is given as: (11) With the help of the inverse
    transform sampling, the samples for the timer are calculated by the equation:
    (12) where, is uniformly distributed in . The expected number of clients for the
    beta distribution is given as: (13) Analysing the result in Eq. (13), we find,
    as in the previous cases, that for time intervals less than or equal to all clients
    can send updates. Instead, for time intervals greater than , is provided by a
    function where MAS can adjust the two parameters and to change the number of expected
    clients. Fig. 7(a) shows the simulation results of the expected number of selected
    clients when varies. Fig. 7(a) shows an optimal number of when ; this means that
    for the given value of , a large number of clients suppressed their model updates.
    Changing the value of has similar effects on the number of clients selected as
    in the previous distributions. From the analysis of Eq. (13) along with the simulation
    results, it can be seen that for values of , the timer samples in the interval
    are closer to , which can lead to a large number of models. For , the timer sample
    values are closer to in a small interval, which again increases the number of
    clients. In Fig. 7(b), we set the optimal value of to examine the effects of different
    intervals. It is clear that a smaller leads to a large number of clients while
    increasing beyond a certain value does not have much impact on the number of clients.
    The results obtained in Section 5 for suppressing client updates for the considered
    distribution scenario indicate that by using a parametric distribution for timer
    selection and keeping the interval size , it is possible to prevent edge queue
    overflow for a large number of clients by using probabilistic timers that add
    minimal latency to the FL round. In addition, the results obtained with exponential
    and beta distributions provide a more accurate estimate of the number of clients
    than the uniform distribution due to their convex nature. From the results, we
    also conclude that the exponential distribution is an appropriate choice for sampling
    the timers. Download : Download high-res image (322KB) Download : Download full-size
    image Fig. 7. of selected clients for model updates given beta-distributed timers.
    6. Federated learning performance In this section, we evaluate the performance
    of the FL process for the proposed communication architecture and client selection
    algorithm. As described earlier, each client performs local training and sends
    model parameters to the broker. These model updates are retrieved from MAS via
    the broker and combined into a global NN model in each communication round, as
    shown in Fig. 3. However, the cost and communication overhead between participating
    clients and the broker at the edge can be a significant bottleneck when multiple
    clients are involved. In addition, storing model updates in edge queues, as described
    previously, can cause congestion in the edge infrastructure. Therefore, there
    is a need to reduce the overflow of edge queues due to the large number of clients.
    In this work, we propose to select a small subset of clients and send the model
    parameters of these selected clients to the server using a time-based backoff
    method. Experiments are performed with a set of clients , a broker at the edge,
    and a MAS in the cloud for simulation. We used the MNIST dataset to run our simulations.
    The learning model is based on a three-layer NN with neurons in the hidden layer,
    an input and output layer, a batch size of samples, a learning rate of 0.01, and
    local epochs performed by each client before model updates are sent to the broker.
    In addition, the weight assigned to each client for aggregation by MAS corresponds
    to the size of the dataset used by each client for training. Also, we terminate
    the FL process after achieving a classification accuracy of 97% of the global
    model. For client selection in FL, we chose timers with exponential distributions
    that perform better than uniform and beta distributions in terms of model suppression,
    as evaluated in Section 5. The exponentially distributed timer has the following
    parameters: and . We repeat each experiment times to calculate the average FL
    round count for the selected clients with a confidence interval of 95%. The hyperparameters
    and the different variables used for the simulation are shown in Table 2. Using
    the above parameters, we study the impact of the proposed client selection algorithm
    on global model accuracy, communication overhead, and broker load. We find that
    limiting the number of clients sending their model parameters in the FL process
    reduces the communication cost and frees up the computational resources of the
    remaining clients, allowing faster convergence in a smaller number of FL rounds.
    Table 2. Hyperparameters settings and variables used in the simulation. Hyperparameters
    Value Variables Value Learning rate 0.01 5 Batch size 32 10 Local epochs 10 (delay
    in sec) 1 C (Clients in FL) In Fig. 8 we show the variation in the number of FL
    rounds for different numbers of clients. Fig. 8 shows the FL rounds required to
    achieve 97% accuracy for different values of the parameter and with selected FL
    clients. It can be seen that the number of rounds drops rapidly from a maximum
    of with clients to rounds with clients to obtain the federated model that provides
    the prescribed accuracy. Note that we set the desired accuracy to 97% to study
    the impact of selecting a different number of clients with the proposed timer-based
    client selection mechanism. Also, we considered sending the updated global model
    to all clients, not just those selected during the client selection process. The
    reduced number of rounds required for convergence compensates for the increased
    communication overhead of sending the global model to all clients. The empirical
    results show that our strategy increases the learning effectiveness and ensures
    a more consistent and fair performance for all clients. In fact, with the proposed
    algorithm, we achieve convergence with only a few clients and a smaller number
    of FL rounds. Clients Heterogeneity in Federated Learning: Now we analyse the
    impact of client heterogeneity on the client selection algorithm. Client heterogeneity,
    which includes heterogeneity of systems and data, is one of the main problems
    of FL. Differences in client performance, such as the frequency of CPU, data size,
    and transmission performance, are referred to as system heterogeneity, while data
    heterogeneity refers to differences in the distribution of data across clients,
    i.e., non-iid (non-independent and identical) data distribution [53]. Each of
    these conditions directly leads to differences in training latency across clients.
    Besides the heterogeneity of data and devices, the other main problem of FL is
    the dynamic environment in which the communication network can fail and devices
    can lose connectivity, such as mobile nodes (vehicles). This is due to the fact
    that many of the clients involved in the system are mobile, and this problem is
    exacerbated in a vehicle scenario. To overcome these problems, the communication
    architecture is developed in the above section using the pub/sub paradigm. In
    the following, we show the numerical results that demonstrate the resilience of
    the method based on the proposed FL architecture to client heterogeneity. We account
    for client heterogeneity by dividing clients into four classes: , , , and , where
    each class has the same number of clients. Class has the fastest clients, which
    means their training will finish earlier, while class has the slowest clients
    They can be slow for two reasons: either they have a large amount of data to train
    the NN model, or they consist of simpler and slower hardware. The simulations
    are performed considering the available resources of the clients. In this way,
    the FL procedure can avoid selecting clients that are not able to complete the
    training and that could interfere with the ongoing FL rounds or lead to delayed
    responses. By specifying the values of in the proposed algorithm, we introduce
    a known delay in each FL round, i.e., equal to . However, in previous scenarios,
    the delay in FL was based on the slowest device in the system, which is not known
    in advance. Experiments are performed separately for each of the time distributions
    considered in this work: Uniform, Exponential, and Beta. The results show that
    suppression of client updates while maintaining the required classification accuracy,
    i.e. 97%, is best achieved with the Exponential distribution. Download : Download
    high-res image (285KB) Download : Download full-size image Fig. 8. Expected number
    of clients selected using a timer with exponential distribution when = 10 and
    with different time intervals , and the number of FL rounds for a given number
    of clients. Figs. 9(a)–9(c) show the simulation results for the client selection
    algorithm in the case of uniformly distributed timers. As mentioned earlier, for
    homogeneous client training times, we obtain the updates from all clients at time
    , as shown in Eq. (7). However, we now consider heterogeneous client resources,
    which include fast and slow devices. For this reason, it is not possible to get
    the updates from all clients, since the training suppression by the slowest clients
    is combined with the training suppression by the timers. Moreover, the number
    of clients continues to decrease as increases, as can be seen in Figs. 9(b), 9(c).
    This is because the clients of all classes extract larger timer values and therefore
    get ACK. The ACK is generated by CA when the model parameters are received from
    the client with the fastest class and a smaller timer value. This behaviour, that
    the number of clients decreases while increases, holds for all timers mentioned,
    both for homogeneous and heterogeneous clients. From Figs. 9(a)–9(c), it can also
    be seen that the proposed client selection algorithm selects clients from all
    four groups, which shows that the proposed selection algorithm is not affected
    by the heterogeneity of clients, but only by the parameter computed by MAS. Moreover,
    each timer value for each client is independent and random. Thus, there is a possibility
    that clients in classes and receive a larger timer value than clients in categories
    and , and that they receive the ACK before their timer or training is complete.
    This behaviour of independent selection from each class makes the algorithm more
    dynamic. Therefore, the algorithm also selects clients that train their model
    on a larger dataset, i.e., the clients that belong to the slower classes that
    place more emphasis on global model convergence, and the clients that can provide
    their updates quickly, which contributes to faster convergence. Figs. 10(a)–10(c)
    show the simulation results for the client selection algorithm in the case of
    beta-distributed timers with . The results again show that MAS selects clients
    from all groups along with CA. However, in this case, clients of classes , , and
    are preferred over class . This is because we chose the optimal value of , which
    allows for better suppression of clients since all timers are nearly distributed.
    As a result, the selection of clients increasingly depends on the training times
    of the clients. In the case of , client selection is again more evenly distributed
    between groups as the density of timers moves towards . Nevertheless, the stragglers
    are not completely neglected. Download : Download high-res image (149KB) Download
    : Download full-size image Fig. 9. Selection of clients using heterogeneous resources
    from four classes with uniform-distributed timers. Figs. 11(a)–11(c) show the
    simulation results for the client selection algorithm in the case of exponentially
    distributed timers with . The results show that MAS distributes the clients more
    evenly among the groups in this case, and that we do not select only clients from
    one category or the fastest clients, but from all four classes. Also, fewer clients
    are selected compared to the uniform and beta-distributed timers, especially for
    and . The simulation results show that the exponentially distributed timers allow
    the FL method to load the queue less at the edge than in the case of the uniform
    and beta distributions. Thus, the properties we obtained for homogeneous training
    timers with different timers also hold for the heterogeneous clients. Download
    : Download high-res image (159KB) Download : Download full-size image Fig. 10.
    Clients selection using heterogeneous resources from four classes with beta-distributed
    timers by setting . We need to select clients from four different classes and
    to perform a fair selection among all of them in each round of FL, such that the
    slowest clients can also participate in the FL process. To this end, we measure
    the fairness of each group in each round of FL using Jain’s fairness index [54]
    as given in Eq. (14): (14) Download : Download high-res image (155KB) Download
    : Download full-size image Fig. 11. Clients selection using heterogeneous resources
    from four classes with exponential timers by setting . The Jain index is a fairness
    criterion that takes into account all users of the system. Because of its simplicity
    and ease of understanding, the Jain index is still one of the most popular measures
    for comparing the fairness of allocations in computer networks, but we used it
    to justify selection from different groups of clients in the FL process. The value
    corresponds to the fairest allocation where all users have the same benefit. In
    the case of FL, the value of corresponds to the same number of clients from each
    category. Therefore, the FL process must consider the tradeoff between model accuracy
    and index maximization to avoid overloading the broker during client selection.
    We calculated the fairness of client selection among all the proposed probabilistic
    timers to determine which of them is fairest in client selection. Table 3 shows
    the results of the Jain index evaluated for the uniform, exponential and beta
    distributed timers. The results in this Table show that the uniformly distributed
    timers provide a higher value for . The results also show that the fairness of
    the uniformly distributed timers remains almost the same across different time
    intervals. However, uniformly distributed timers suppress fewer client updates,
    resulting in many model updates being transmitted to the edge queue. The results
    for the exponentially distributed timers are comparable to the values for the
    uniformly distributed case for . In fact, in the exponentially distributed case
    for , a large number of clients from all four classes are involved in the FL process
    due to the backoff timer values. But as mentioned earlier, the exponentially distributed
    timers provide better load balancing in the queue at the edge than the other distributions.
    Moreover, for all timers, fairness decreases at and then increases again at higher
    values. In summary, our proposed client selection algorithm provides the best
    performance in terms of fairness and load offered to the queue at the edge with
    exponentially distributed timers. Table 3. Jain fairness index for different probabilistic
    timers distribution and different values of . Probability values Distribution
    2 4 6 8 10 Uniform 0.9831 0.9828 0.9825 0.9841 0.9835 Beta 0.9564 0.8365 0.8764
    0.9047 0.9133 Exponential 0.9803 0.7777 0.8791 0.9304 0.9554 7. Conclusion and
    future work In this study, we implemented an edge-based architecture for FL adapted
    to communication and computation costs. We decompose the global problem of an
    efficient FL system for mobile and resource-constrained devices into two subproblems.
    In our solution process, we focus on a communication-efficient framework for FL,
    which is our first research question, and the second is client selection in FL
    considering the resource-constrained edge infrastructure. The ICN-based framework
    for communication-efficient FL can be used for mobile vehicle nodes because it
    enables asynchronous and scalable communication. According to the simulation results,
    the proposed framework can provide better FL results than a network-centric architecture
    and significantly reduce the time required to perform a FL round. Another advantage
    of this architecture is that it reduces the load on MAS, since in the ICN paradigm,
    a MAS serves only a small number of brokers, which in turn distribute model updates
    to all vehicles in the environment. This architecture also helps reduce latency
    while solving the problem of intermittent connectivity for mobile users. Moreover,
    decoupling the clients from MAS via the brokers helps to overcome the privacy
    challenges in FL. Therefore, we show that the pub/sub paradigm is the most promising
    communication model for FL. After defining the communication architecture, we
    investigated a client selection mechanism for the FL process by considering the
    load on the edge queues where the edge broker caches model updates uploaded by
    connected clients. The proposed client selection mechanism uses different probabilistic
    timers and determines the effective distribution in case of device heterogeneity
    and different number of clients. This time-based client selection mechanism requires
    very little state on each client device, requires only network data transmission
    support, and adapts to massive client scenarios. We have studied probabilistic
    feedback timers for up to 1000 clients through experiments and analysis. Our main
    results are: exponentially distributed timers provide better client update suppression
    than systems based on uniform and beta distributed timers, and reduce queue overflows.
    The algorithm works for both heterogeneous and homogeneous clients and can therefore
    be used in almost any system, such as satellite-based networks. It also allows
    to control the bandwidth for uploading model parameters by adjusting different
    parameters depending on the latency for each FL round and the expected number
    of clients. The proposed system, which dynamically adjusts the selection frequency,
    reduces client participation to avoid queue overflow and improves the robustness
    of the system. We also investigated the fairness of the proposed client selection
    algorithm based on different client categories by considering their heterogeneity.
    In this way, we prove an optimal tradeoff between efficiency and fairness from
    the Jain index point of view and show that our proposed algorithm ensures fairness
    in selecting clients from different classes. In the future, we will extend our
    test environment to include a cluster of brokers and orchestrate them at the edge
    using the Kafka APIs. We will refine the methods and details of the client selection
    technique by also considering the heterogeneous delays between edge and client
    devices. To leverage data from unmanned aerial vehicles or remote areas, we would
    also investigate how to move the nodes at the edge to a low-orbit satellite constellation
    to create an orbital edge infrastructure. CRediT authorship contribution statement
    Saira Bano: Conceptualization, Validation, Investigation, Writing – original draft,
    Writing – review and editing, Visualization, Project administration. Nicola Tonellotto:
    Conceptualization, Investigation, Writing – review and editing, Supervision, Project
    administration. Pietro Cassarà: Conceptualization, Investigation, Writing – review
    and editing, Supervision. Alberto Gotta: Conceptualization, Investigation, Writing
    – review and editing, Supervision, Project administration. Declaration of Competing
    Interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Acknowledgements This work has been supported by the H2020 TEACHING
    project, Italy (GA#871385). All authors have read and agreed to the published
    version of the manuscript. Data availability Data will be made available on request
    References [1] Liu Y., Yuan X., Xiong Z., Kang J., Wang X., Niyato D. Federated
    learning for 6G communications: Challenges, methods, and future directions China
    Commun., 17 (2020), pp. 105-118 CrossRefView in ScopusGoogle Scholar [2] Letaief
    K.B., Chen W., Shi Y., Zhang J., Zhang Y.-J.A. The roadmap to 6G: AI empowered
    wireless networks IEEE Commun. Mag., 57 (2019), pp. 84-90, 10.1109/MCOM.2019.1900271
    View in ScopusGoogle Scholar [3] Shi Y., Yang K., Jiang T., Zhang J., Letaief
    K.B. Communication-efficient edge AI: Algorithms and systems IEEE Commun. Surv.
    Tutor., 22 (2020), pp. 2167-2191 CrossRefView in ScopusGoogle Scholar [4] Letaief
    K.B., Shi Y., Lu J., Lu J. Edge artificial intelligence for 6G: Vision, enabling
    technologies, and applications IEEE J. Sel. Areas Commun., 40 (2021), pp. 5-36
    Google Scholar [5] McMahan B., Moore E., Ramage D., Hampson S., y Arcas B.A. Communication-efficient
    learning of deep networks from decentralized data Artificial Intelligence and
    Statistics, PMLR (2017), pp. 1273-1282 View in ScopusGoogle Scholar [6] Tensorflow
    Federated,TensorFlow, URL: https://www.tensorflow.org/federated. Google Scholar
    [7] Chai D., Wang L., Chen K., Yang Q. FedEval: A benchmark system with a comprehensive
    evaluation model for federated learning (2020) CoRR, arXiv:2011.09655 Google Scholar
    [8] He C., Li S., So J., Zeng X., Zhang M., Wang H., Wang X., Vepakomma P., Singh
    A., Qiu H., Zhu X., Wang J., Shen L., Zhao P., Kang Y., Liu Y., Raskar R., Yang
    Q., Annavaram M., Avestimehr S. FedML: A research library and benchmark for federated
    machine learning (2020) arXiv:2007.13518 Google Scholar [9] Ryffel T., Trask A.,
    Dahl M., Wagner B., Mancuso J., Rueckert D., Passerat-Palmbach J. A generic framework
    for privacy preserving deep learning (2018) arXiv:1811.04017 Google Scholar [10]
    Beutel D.J., Topal T., Mathur A., Qiu X., Parcollet T., de Gusmão P.P.B., Lane
    N.D. Flower: A friendly federated learning research framework (2021) arXiv:2007.14390
    Google Scholar [11] Kumar P., Dezfouli B. Implementation and analysis of QUIC
    for MQTT Comput. Netw., 150 (2019), pp. 28-45 View PDFView articleView in ScopusGoogle
    Scholar [12] Kreps J., Narkhede N., Rao J., et al. Kafka: A distributed messaging
    system for log processing Proceedings of the NetDB, vol. 11 (2011), pp. 1-7 View
    in ScopusGoogle Scholar [13] Al-Madani B., Al-Roubaiey A., Baig Z.A. Real-time
    QoS-aware video streaming: A comparative and experimental study Adv. Multimedia,
    2014 (2014) Google Scholar [14] Nishio T., Yonetani R. Client selection for federated
    learning with heterogeneous resources in mobile edge ICC 2019-2019 IEEE International
    Conference on Communications, ICC, IEEE (2019), pp. 1-7 CrossRefGoogle Scholar
    [15] Cho Y.J., Gupta S., Joshi G., Yağan O. Bandit-based communication-efficient
    client selection strategies for federated learning 2020 54th Asilomar Conference
    on Signals, Systems, and Computers, IEEE (2020), pp. 1066-1069 Google Scholar
    [16] Bano S., Tonellotto N., Cassarà P., Gotta A. FedTCS: Federated Learning with
    Time-based Client Selection to Optimize Edge Resources (2022) Google Scholar [17]
    Hard A., Rao K., Mathews R., Beaufays F., Augenstein S., Eichner H., Kiddon C.,
    Ramage D. Federated learning for mobile keyboard prediction (2018) arXiv arXiv:1811.03604
    Google Scholar [18] Q. Li, Y. Diao, Q. Chen, B. He, Federated Learning on Non-IID
    Data Silos: An Experimental Study, in: 2022 IEEE 38th International Conference
    on Data Engineering (ICDE), 2021, pp. 965–978. Google Scholar [19] Yang Q., Liu
    Y., Chen T., Tong Y. Federated machine learning: Concept and applications ACM
    Trans. Intell. Syst. Technol., 10 (2019), pp. 1-19 CrossRefView in ScopusGoogle
    Scholar [20] Tonellotto N., Gotta A., Nardini F.M., Gadler D., Silvestri F. Neural
    network quantization in federated learning at the edge Inform. Sci., 575 (2021),
    pp. 417-436 View PDFView articleView in ScopusGoogle Scholar [21] Konečnỳ J.,
    McMahan H.B., Yu F.X., Richtárik P., Suresh A.T., Bacon D. Federated learning:
    Strategies for improving communication efficiency (2016) arXiv preprint arXiv:1610.05492
    Google Scholar [22] Yang H.H., Arafa A., Quek T.Q., Poor H.V. Age-based scheduling
    policy for federated learning in mobile edge networks ICASSP 2020-2020 IEEE International
    Conference on Acoustics, Speech and Signal Processing, ICASSP, IEEE (2020), pp.
    8743-8747 CrossRefView in ScopusGoogle Scholar [23] Yang W., Yang Y., Dang X.,
    Jiang H., Zhang Y., Xiang W. A novel adaptive gradient compression approach for
    communication-efficient federated learning 2021 China Automation Congress, CAC
    (2021), pp. 674-678, 10.1109/CAC53003.2021.9728013 View in ScopusGoogle Scholar
    [24] Reisizadeh A., Mokhtari A., Hassani H., Jadbabaie A., Pedarsani R. Fedpaq:
    A communication-efficient federated learning method with periodic averaging and
    quantization International Conference on Artificial Intelligence and Statistics,
    PMLR (2020), pp. 2021-2031 View in ScopusGoogle Scholar [25] Sattler F., Wiedemann
    S., Müller K.-R., Samek W. Robust and communication-efficient federated learning
    from non-iid data IEEE Trans. Neural Netw. Learn. Syst., 31 (2019), pp. 3400-3413
    Google Scholar [26] Snyder B., Bosanac D., Davies R. Introduction to apache activemq
    Act. MQ Action (2017), pp. 6-16 View in ScopusGoogle Scholar [27] Ionescu V.M.
    The analysis of the performance of rabbitmq and activemq 2015 14th RoEduNet International
    Conference-Networking in Education and Research, RoEduNet NER, IEEE (2015), pp.
    132-137 CrossRefView in ScopusGoogle Scholar [28] Krishnan S.P.T., Gonzalez J.L.U.,
    Krishnan S.P.T., Gonzalez J.L.U. Google cloud pub/sub Building Your Next Big Thing
    with Google Cloud Platform: A Guide for Developers and Enterprise Architects,
    Springer (2015), pp. 277-292 CrossRefGoogle Scholar [29] A. Feraudo, P. Yadav,
    V. Safronov, D.A. Popescu, R. Mortier, S. Wang, P. Bellavista, J. Crowcroft, CoLearn:
    Enabling federated learning in MUD-compliant IoT edge networks, in: Proceedings
    of the Third ACM International Workshop on Edge Systems, Analytics and Networking,
    2020, pp. 25–30. Google Scholar [30] Martín C., Langendoerfer P., Zarrin P.S.,
    Díaz M., Rubio B. Kafka-ML: Connecting the data stream with ML/AI frameworks (2020)
    arXiv preprint arXiv:2006.04105 Google Scholar [31] Tang Y., Guo K., Ma J., Shen
    Y., Chi T. A smart caching mechanism for mobile multimedia in information centric
    networking with edge computing Future Gener. Comput. Syst., 91 (2019), pp. 590-600,
    10.1016/j.future.2018.08.019 View PDFView articleView in ScopusGoogle Scholar
    [32] Du Y., Chowdhury M., Rahman M., Dey K., Apon A., Luckow A., Ngo L.B. A distributed
    message delivery infrastructure for connected vehicle technology applications
    IEEE Trans. Intell. Transp. Syst., 19 (2017), pp. 787-801 CrossRefView in ScopusGoogle
    Scholar [33] Oh S., Kim J.-H., Fox G. Real-time performance analysis for publish/subscribe
    systems Future Gener. Comput. Syst., 26 (2010), pp. 318-323 View PDFView articleView
    in ScopusGoogle Scholar [34] Rodríguez-Domínguez C., Benghazi K., Noguera M.,
    Garrido J.L., Rodríguez M.L., Ruiz-López T. A communication model to integrate
    the request-response and the publish-subscribe paradigms into ubiquitous systems
    Sensors, 12 (2012), pp. 7648-7668 CrossRefView in ScopusGoogle Scholar [35] Eugster
    P.T., Felber P.A., Guerraoui R., Kermarrec A.-M. The many faces of publish/subscribe
    ACM Comput. Surv., 35 (2003), pp. 114-131 View in ScopusGoogle Scholar [36] Li
    X., Huang K., Yang W., Wang S., Zhang Z. On the convergence of FedAvg on non-IID
    data (2019) arXiv preprint arXiv:1907.02189 Google Scholar [37] AbdulRahman S.,
    Tout H., Mourad A., Talhi C. FedMCCS: Multicriteria client selection model for
    optimal IoT federated learning IEEE Internet Things J., 8 (2020), pp. 4723-4735
    Google Scholar [38] Khan W.Z., Ahmed E., Hakak S., Yaqoob I., Ahmed A. Edge computing:
    A survey Future Gener. Comput. Syst., 97 (2019), pp. 219-235 View PDFView articleView
    in ScopusGoogle Scholar [39] Jiang H., Wang Y., Lee K., Rhee I. DRWA: A receiver-centric
    solution to bufferbloat in cellular networks IEEE Trans. Mob. Comput., 15 (2015),
    pp. 2719-2734 Google Scholar [40] Reinecke P., Casassa Mont M. Big data for security:
    1 MEPS Kafka processing pipeline and beyond (2016) Google Scholar [41] Neely M.J.
    A simple convergence time analysis of drift-plus-penalty for stochastic optimization
    and convex programs (2014) arXiv preprint arXiv:1412.0791 Google Scholar [42]
    Bano S., Tonellotto N., Cassarà P., Gotta A. KafkaFed: Two-tier federated learning
    communication architecture for Internet of Vehicles 2022 IEEE International Conference
    on Pervasive Computing and Communications Workshops and Other Affiliated Events,
    PerCom Workshops (2022), pp. 515-520, 10.1109/PerComWorkshops53856.2022.9767510
    View in ScopusGoogle Scholar [43] Nelson B.J. Remote Procedure Call Carnegie Mellon
    University (1981) Google Scholar [44] Hemminger S., et al. Network emulation with
    netem Linux Conf Au, Vol. 5, Citeseer (2005), p. 2005 Google Scholar [45] Kingma
    D.P., Ba J. Adam: A method for stochastic optimization (2014), 10.48550/ARXIV.1412.6980
    URL: https://arxiv.org/abs/1412.6980 Google Scholar [46] Truong N., Sun K., Wang
    S., Guitton F., Guo Y. Privacy preservation in federated learning: An insightful
    survey from the GDPR perspective Comput. Secur., 110 (2021), Article 102402 View
    PDFView articleView in ScopusGoogle Scholar [47] Arshad S., Azam M.A., Rehmani
    M.H., Loo J. Recent advances in information-centric networking-based internet
    of things (ICN-IoT) IEEE Internet Things J., 6 (2018), pp. 2128-2158 Google Scholar
    [48] Nonnenmacher J., Biersack E.W. Optimal multicast feedback Proceedings. IEEE
    INFOCOM’98, the Conference on Computer Communications. Seventeenth Annual Joint
    Conference of the IEEE Computer and Communications Societies. Gateway to the 21st
    Century (Cat. No. 98), vol. 3, IEEE (1998), pp. 964-971 View in ScopusGoogle Scholar
    [49] Popoulis A., Pillai S.U. Probability, random variables, and stochastic processes
    McGraw-Hill, Boston, MA (1991) Google Scholar [50] Castillo E. Extreme Value Theory
    in Engineering Academic, New York (1988) Google Scholar [51] Al-Athari M.F.M.
    Estimation of the mean of truncated exponential distribution J. Math. Stat., 4
    (2008), p. 284 View in ScopusGoogle Scholar [52] Pfeiffer P.E. Probability for
    Applications Springer Science & Business Media (2012) Google Scholar [53] Liu
    X., Li H., Lu X., Xie T., Mei Q., Feng F., Mei H. Understanding diverse usage
    patterns from large-scale appstore-service profiles IEEE Trans. Softw. Eng., 44
    (2017), pp. 384-411 CrossRefGoogle Scholar [54] Jain R., Durresi A., Babic G.
    Throughput fairness index: An explanation ATM Forum Contribution, vol. 99 (1999)
    Google Scholar Cited by (1) Enhancement of edge-based surveillance videos based
    on bilateral filtering 2024, Computer Communications Show abstract Saira Bano
    received her M.Sc. in Telecommunications Engineering from Politecnico di Torino,
    Italy, in 2020. She is currently pursuing her PhD in Information Engineering at
    the University of Pisa, Italy, and conducting research at the Institute of Information
    Sciences and Technologies (ISTI) of the National Research Council (CNR), Pisa,
    Italy. Her research interests include information-centric networks, mobile and
    pervasive computing, cyber–physical systems, federated learning, machine learning,
    and data science. Nicola Tonellotto received his M.Sc and Ph.D in 2002 and 2008,
    respectively. He is associate professor at the Information Engineering Department
    of the University of Pisa since 2022 and honorary research fellow in the College
    of Science & Engineering of the School of Computing Science of the University
    of Glasgow since 2020. From 2002 to 2019 he was researcher at the Information
    Science and Technologies Institute “A. Faedo” of the National Research Council
    of Italy. His main research interests include Cloud Computing, Web Search, and
    Information Retrieval, with a particular focus on efficient data processing in
    distributed computing architectures. He co-authored more than 80 papers on these
    topics in peer reviewed international journals and conferences. He is co-recipient
    of the ACM SIGIR 2015 Best Paper Award. Pietro Cassará received his M.Sc. degrees
    in Telecommunication and Electronic Engineering from University of Palermo in
    the 2005, and its Ph.D. degree in the 2010, jointly with the State University
    of New York. Nowadays, he is staff member of the Institute of Science and Information
    Technologies (ISTI), at the National Research Council (CNR), Pisa, Italy, and
    since 2017 he has been temporary staff member of the CMRE lab at the NATO of La
    Spezia. He is currently a member of the IEEE ComSoc and VTS Committees, his research
    interests include wireless sensor network and IoT communications. He has been
    participating in European, ESA, and National funded projects. Alberto Gotta received
    his M.Sc and Ph.D in 2002 and 2007, respectively. He is a researcher of the Institute
    of Information Science and Technologies (ISTI) of the National Research Council
    (CNR), Italy. His research interests include traffic engineering, satellite and
    non-terrestrial networks, aerial networks, IoT, sensor networks, and machine learning
    for communications. He has been principal investigator of several EU, national,
    regional and ESA funded R&D projects. He co-authored more than 100 papers among
    which the most cited article in 2012 and 2013 on Elsevier Computer Communications
    and the second most cited article from 2019 on Elsevier Array. He serves the TPCs
    of flagship ComSoc conferences and symposia and also the editorial boards of MDPI
    Sensors, MDPI Network, Frontiers, the International Journal of Informatics and
    Communication Technology (IJ-ICT), the International Journal of Power Electronics
    and Drive Systems (IJPEDS), and the Journal of Computer Networks and Communications
    (JCNC). 1 https://kafka.apache.org/. 2 http://yann.lecun.com/exdb/mnist/. View
    Abstract © 2023 Elsevier B.V. All rights reserved. Part of special issue Trustworthy
    Artificial Intelligence in B5G/6G networks Edited by Giovanni Nardini, Alessandro
    Renda, Panagiotis Demestichas, Nandana Rajatheva View special issue Recommended
    articles Enabling privacy by anonymization in the collection of similar data in
    multi-domain IoT Computer Communications, Volume 203, 2023, pp. 60-76 Renato Caminha
    Juacaba Neto, …, Fabrice Theoleyre View PDF Quantum fingerprinting for heterogeneous
    devices localization Computer Communications, Volume 204, 2023, pp. 43-51 Ahmed
    Shokry, Moustafa Youssef View PDF SRAKN: Secure Roaming Authentication and Key
    Negotiation protocol for Space Information Network Computer Communications, Volume
    206, 2023, pp. 22-37 Junyan Guo, …, Tianshuai Zheng View PDF Show 3 more articles
    Article Metrics Captures Readers: 13 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computer Communications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Artificial intelligence of things at the edge: Scalable and efficient distributed
    learning for massive scenarios'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Pousibet-Garrido A.
  - Escobedo P.
  - Guirado D.
  - Ristic G.S.
  - Palma A.J.
  - Carvajal M.A.
  citation_count: '2'
  description: 'This paper reports the development, evaluation and validation of DosiTag,
    a dosimetric platform based on Near Field Communication (NFC) technology. The
    designed system comprises two main parts: a passive NFC sensing tag as the dosimeter
    unit, which includes a commercial P-channel MOSFET transistor as radiation sensor;
    and an NFC-enabled smartphone running a custom-developed application as the reader
    unit. Additionally, a cloud service based on the messaging protocol Message Queue
    Telemetry Transport (MQTT) has been implemented using a broker/client architecture
    to allow the storage and classification of the patient''s data. The dosimeter
    tag was designed using commercial low-power integrated circuits (ICs) and it can
    operate without any external power supply or battery, being supplied by the smartphone
    through the radio frequency (RF) energy harvested from the NFC link. The radiation
    dose is measured through the increase of the DMOS transistor source voltage using
    the smartphone as the reader unit. Two tag prototypes have been characterized
    with a 6 MV photon beam and radiation doses up to 57 Gy and 42 Gy, respectively.
    The achieved average sensitivity is (4.37 ± 0.04) mV/Gy with a resolution of 2
    cGy, which goes beyond the state-of-the-art of previous NFC dosimeters and places
    DosiTag as a low-cost promising electronic platform for dose control in radiotherapy
    treatments.'
  doi: 10.1016/j.sna.2023.114295
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical Abstract Keywords 1. Introduction 2. Materials
    and methods 3. Results and discussion 4. Conclusions CRediT authorship contribution
    statement Declaration of Competing Interest Acknowledgements Data availability
    References Vitae Show full outline Cited by (2) Figures (7) Show 1 more figure
    Tables (1) Table 1 Sensors and Actuators A: Physical Volume 354, 1 May 2023, 114295
    Batteryless NFC dosimeter tag for ionizing radiation based on commercial MOSFET
    Author links open overlay panel A. Pousibet-Garrido a, P. Escobedo a, D. Guirado
    b c, G.S. Ristic d, A.J. Palma a, M.A. Carvajal a Show more Add to Mendeley Share
    Cite https://doi.org/10.1016/j.sna.2023.114295 Get rights and content Under a
    Creative Commons license open access Highlights • NFC batteryless tag. • pMOS
    transistor as radiation sensor. • Smartphone application to manage the tag and
    to upload the data to the cloud. • Radiation measurements were thermal compensated
    using the thermal model, and a forwards p-n junction. • Short term fading study.
    Abstract This paper reports the development, evaluation and validation of DosiTag,
    a dosimetric platform based on Near Field Communication (NFC) technology. The
    designed system comprises two main parts: a passive NFC sensing tag as the dosimeter
    unit, which includes a commercial P-channel MOSFET transistor as radiation sensor;
    and an NFC-enabled smartphone running a custom-developed application as the reader
    unit. Additionally, a cloud service based on the messaging protocol Message Queue
    Telemetry Transport (MQTT) has been implemented using a broker/client architecture
    to allow the storage and classification of the patient’s data. The dosimeter tag
    was designed using commercial low-power integrated circuits (ICs) and it can operate
    without any external power supply or battery, being supplied by the smartphone
    through the radio frequency (RF) energy harvested from the NFC link. The radiation
    dose is measured through the increase of the DMOS transistor source voltage using
    the smartphone as the reader unit. Two tag prototypes have been characterized
    with a 6 MV photon beam and radiation doses up to 57 Gy and 42 Gy, respectively.
    The achieved average sensitivity is (4.37 ± 0.04) mV/Gy with a resolution of 2
    cGy, which goes beyond the state-of-the-art of previous NFC dosimeters and places
    DosiTag as a low-cost promising electronic platform for dose control in radiotherapy
    treatments. Graphical Abstract Download : Download high-res image (219KB) Download
    : Download full-size image Previous article in issue Next article in issue Keywords
    MOSFET dosimeterNFC sensing tagBatterylessSmartphone 1. Introduction In an effort
    to improve the quality of the medical use of ionizing radiation, in vivo dosimetry
    (IVD) emerged as a direct method of measuring the radiation doses received by
    patients during their radiotherapy sessions. The use of IVD has become more widespread
    since the World Health Organization (WHO) and other entities considered it an
    effective way of checking the quality of the entire radiotherapy process [1],
    [2]. Current solutions for such dose measurements are based on detectors like
    diodes, thermoluminescent dosimeters (TLDs), metal oxide semiconductor field-effect
    transistors (MOSFETs), film badges or optically stimulated luminescence dosimeters
    (OSLDs) [3]. In the case of MOSFETs, the p-type devices generate during irradiation
    electron-hole pairs proportional to the delivered dose, which can be later read
    using an appropriate metering system [4]. Their advantages include good linearity,
    very compact size, immediate readout and easy calibration, thus becoming increasingly
    popular both commercially [5], [6] and in research [7], [8], [9]. To further improve
    the sensitivity, transistors with thick gate oxides specially designed for radiation
    detection have been manufactured, known as RADFETs (Radiation-Sensitive Field
    Effect Transistors) [10], [11], [12]. However, for radiation doses used during
    typical radiotherapy sessions, the possibility of using commercial MOSFETs as
    dosimeters instead of RADFETs can greatly reduce the cost of the dosimetry system
    [13]. Nevertheless, achieving such a dosimetry system with commercial MOSFETs
    [14], [15], [16], [17] requires a reader unit implementing the necessary signal
    conditioning stages in terms of amplification, filtering and compensation of the
    temperature effect [7], [13], [18]. The reader units for these dosimetric systems
    are usually desktop-based devices [7], which require the use of cables connected
    to the sensor modules placed on the patient, thus making the process cumbersome
    and uncomfortable for the patient. To make the system more comfortable for the
    patient and user-friendly for the healthcare personnel, wireless RFID or NFC-based
    systems have been proposed [7], [19], [20], [21]. With this approach, only the
    NFC dosimetric sensing tag and a smartphone with a custom application are required.
    A smartphone can be currently purchased for a relatively low price and developing
    a custom smartphone application is feasible with the completely accessible integrated
    development environments (IDE''s) provided by the main mobile software distributors
    (Android and iOS). Therefore, the implementation of this type of systems is a
    very cost-effective solution with great potential for market access [22]. In addition,
    if NFC technology [23] is used and the tag’s power consumption is sufficiently
    low, no batteries are required and consequently the cost, maintenance and complexity
    of the system will greatly decrease. For this reason, several examples of NFC
    sensing tags can be found in the literature [24], [25], [26], [27]. Since the
    power consumption of the MOSFET-based dosimeters is usually low [7], [8], [9],
    [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22],
    [23], [24], [25], [26], [27], [28], [29], it is possible to implement a battery-less
    NFC dosimeter. In this work, we present the development, characterization and
    validation in hospital facilities of DosiTag, an enhanced NFC-based dosimeter
    for ionizing radiation with wireless power and communication. The system is composed
    of a credit-card size NFC tag that incorporates a MOSFET-based sensor module and
    a smartphone to supply the system and read out the dose measurements. The presented
    system is an enhanced and redesigned version of a previous NFC-based dosimeter
    from our research group [7], where a number of novelties and improvements have
    been implemented. Firstly, the inclusion of a microcontroller unit (MCU) allows
    the full control of the measurement variables (e.g., measurement time, start/end
    control, etc.), the possibility to endow the pins with new and diverse functionalities
    (e.g., turn on/off the sensor module) as well as the use of several Analog-to-Digital
    Converter (ADC) modules and the full implementation of bidirectional communication
    between the microcontroller and the smartphone. Secondly, a new amplification
    stage has been designed to increase the system resolution. Additionally, the new
    version allows the irradiation of the complete dosimeter tag, not only the sensor
    module, and the total irradiation dose has been increased. The new compact design
    allows the possibility of tag encapsulation, so that the dosimeter tag can be
    sterilized or submerged in liquids. Regarding the reader unit, a new smartphone
    app has been developed from scratch and Internet-of-Things (IoT) capabilities
    have been included thanks to the implementation of a cloud service based on MQTT
    protocol [30], [31], [32], [33] which allows storage, distribution, and classification
    of the patient’s data. 2. Materials and methods 2.1. Experimental 2.1.1. Simulation,
    fabrication, and characterization tools For thermal characterization of the radiation
    sensor, the device was entered into a climatic test chamber VCL4006 (Vötoshch
    Industrietechnik, Germany) and the electrical characterization was conducted using
    a custom-developed reader based on 12-bit ADC model MCP3208 (Microchip, Chandler,
    Arizona, USA). Numerical simulations for the optimization of the tag antenna design
    were conducted using ADS, i.e., Advanced Design Simulator software (Keysight Technologies,
    Santa Clara, CA, USA). The final prototype of the PCB (Printed Circuit Board)
    was fabricated on 1.5-mm FR-4 substrate. For NFC antenna characterization, the
    precision impedance analyzer model Agilent 4294 A (Keysight Technologies, Santa
    Clara, California, USA) was employed. Android Studio 2021.1.1 was the IDE employed
    to program the custom smartphone application. The app was designed and validated
    with Android 10 QKQ1 (API level 29). However, the app supports diverse Android
    versions since the lowest API level supported is 21 (Android 5.0). The smartphone
    model used as the NFC reader was the Xiaomi Redmi Note 9 Pro (Xiaomi, Beijing,
    China). 2.1.2. Sample preparation and irradiation setup A Linear Accelerator (LINAC)
    Siemens Artiste (SiemensAG, Germany) was employed to irradiate two replicas of
    the prototype based on the commercial p-type MOSFET ZVP3306 (Diode Inc., Plano,
    TX, USA). The total area of each tag was irradiated in sessions of 3 Gy with a
    20 × 20 cm2 field and 6 MV photon beams. The isocenter of the irradiation source
    was placed on the zone of the tag where the pMOSFET sensor is located. To measure
    in electronic equilibrium condition in the sensor, a 1.5-cm thick solid water
    layer was located on top of the PCBs, and 5 cm thick solid water was placed below
    it. For this purpose, a 3D-printed holder for the boards was designed and fabricated
    with PLA using a 3D printer model Creality cr-x (Shenzhen Creality 3D Technology
    Co., Ltd, Shenzhen, China). With this methodology, a total dose of 57 Gy was irradiated
    for the first tag and 42 Gy for the second tag. To test and evaluate the response
    of the DosiTag, the obtained results have been compared with our previously developed
    NFC dosimeter [7] as well as with our desktop dose reader [34] using the same
    pMOSFET as radiation sensor. As usual in this kind of sensors, to evaluate the
    increment of the threshold voltage shift, a constant current drain and a diode
    configuration (drain short-circuited with the gate) were used to measure this
    increment on the source terminal of the transistor [8], [10][35], [36], [37],
    [38]. 2.2. DosiTag design 2.2.1. System architecture The functional block diagram
    of the dosimetric system is depicted in Fig. 1a, including all the functional
    blocks of the NFC tag; the wireless connection to the smartphone through the NFC
    link for RF power supply and communication; and the IoT integration by means of
    the cloud architecture based on the MQTT broker/client protocol. As shown in Fig.
    1a, the NFC sensing tag consists of an RFID chip and antenna, an ultra-low power
    MCU to acquire the measurements, a voltage regulator to provide a regulated voltage
    reference for the ADC of the microcontroller, a charge pump to double this voltage
    as supply voltage, a current source, conditioning circuitry, a temperature sensor,
    an instrumentation amplifier (IA) to increase the resolution of the system, and
    the radiation sensor module, composed of a pMOSFET and a JFET. The different components
    of the tag and the IoT integration will be explained in the next subsections.
    On the other hand, Fig. 1b shows a photograph of the final DosiTag prototype (dimensions
    of 76 ×40 mm2) with the physical functional blocks. Download : Download high-res
    image (584KB) Download : Download full-size image Fig. 1. (a) Block diagram of
    the NFC tag including the radiation sensor module; (b) Photograph of the fabricated
    NFC tag with the functional blocks and dimensions. 2.2.2. RFID chip and antenna
    The NFC chip M24LR64E (STMicroelectronics, Geneva, Switzerland) along with an
    ad-hoc designed planar antenna was used as energy harvester to enable the development
    of battery-less design, data storage, and communication between the MCU and the
    smartphone [39]. This NFC chip operates in the High Frequency band (HF, 13.56 MHz)
    and it includes an I2C serial communication port. Since this RFID chip does not
    directly provide a regulated voltage in the energy harvesting mode, a low dropout
    voltage regulator (LDO) (2.5 V regulator MCP1824T-2502E, Microchip, Chandler,
    Arizona) was included to supply the system. When correctly coupled to the reader
    (i.e., the user’s smartphone), the NFC chip is able to provide a maximum current
    that is selectable (300 µA, 1, 3, or 7 mA) according to the harvested electromagnetic
    (EM) field, which is enough to power the additional circuitry. In the case that
    the EM field is not sufficient to provide the required power, the chip cuts off
    the output voltage so that the system does not turn on. This is an advantage in
    terms of repeatability since the delivered power to the system will be always
    the same as long as the coils of the tag and the smartphone are correctly overlapped.
    The custom-designed tag antenna is a planar coil based upon the internal capacitance
    of the M24LR64E NFC chip (Fig. 1b). This antenna has a dual purpose, since it
    is used to establish bidirectional communication with the smartphone and also
    to harvest the RF energy to supply the tag. The internal tuning capacitor of the
    NFC chip has a value of 27.5 pF at 13.56 MHz. Therefore, we require a coil of
    5.01 μH to get a parallel LC resonant circuit at the desired HF frequency. The
    final dimensions and number of turns obtained after numerical simulations were
    38 mm × 19 mm and N = 10 turns, being 250 µm both the interspacing between the
    conductor lines and their width. 2.2.3. Microcontroller unit An ultra-low power
    microcontroller PIC16LF1703 (Microchip, Chandler, Arizona) is used to acquire
    the measurements from the different sensors, storing the data in the EEPROM memory
    of the NFC chip through the I2C port. The microcontroller uses three ADCs for
    this task, whose range is the same than the supply voltage range, i.e., from 0
    up to 2.5 V. Firstly, after setting the cut off frequency of the Low Pass Filter
    (LPF) in the amplification stage, the direct pMOSFET source voltage is measured,
    and subsequently the amplified source voltage is measured. For this purpose, conditioning
    circuitry was designed to adapt the source voltage of the sensor to the common-mode
    rejection ratio of an ultra-low power rail-to-rail instrumentation amplifier INA321
    (Texas Instruments, Dallas, TX, USA). A Pulse Waveform Modulation (PWM) signal
    is generated with the Capture/Compare/PWM (CCP) module of the MCU, which is low-pass
    filtered (see Fig. 1a) to assure a constant voltage, restart the measurement and
    prevent the output voltage from trespassing the ADC range limits [28]. Finally,
    since MOSFET threshold voltage is highly temperature-dependent, the temperature
    sensor MCP9701A (Microchip, Chandler, Arizona) was included in the tag design
    to monitor the temperature with a resolution of 0.125 °C, which is used for thermal
    compensation (see Section 3.2). 2.2.4. Signal conditioning and power management
    The most straightforward way to measure the threshold voltage shift of the transistor
    is to bias it at constant drain current and to set up the pMOSFET in diode configuration
    (short-circuiting drain and gate) [36,13,28]. For this purpose, the tag conditioning
    circuit includes a current source and a buffer to avoid the loading from the conditioning
    circuitry. The implementation of the current source was conducted using the temperature-compensated
    circuit LM334 from Texas Instruments (Dallas, TX, USA) using the topology suggested
    by the manufacturer to reduce the output current thermal drift [7]. The buffer
    is a general-purpose bipolar transistor BC848C (Infineon AG, Germany), whose role
    is to prevent the subtraction of the drain current by the emitter resistor and
    the ADC, and it is also used for thermal drift correction, as shown in the previous
    work [7]. The selected collector current is dependent on the value of the collector
    resistor, the source voltage ( ) and the selected drain current, all of which
    will be described in the next subsections for the pMOSFET ZVP3306. The output
    voltage of the conditioning circuit must be between 0 and 2.5 V to accommodate
    the ADC input voltage range. However, to take advantage of the Common Mode Rejection
    Ratio (CMRR) of the INA321 instrumentation amplifier and to achieve constant gain,
    the output must lie approximately between 0.8 and 1.5 V. Thus, a reference voltage
    ( ) was included to decrease the voltage value before the ADC input and the of
    the IA. In accordance with the conditioning circuitry shown in Fig. 1a, the ADC
    input voltage and the instrumentation amplifier is given by Eq. (1): (1) where
    (sensor source voltage), (bipolar transistor base-emitter voltage), and voltages
    are shown in Fig. 1a. The chosen reference voltage was the model LM385–1.2 from
    Texas Instruments, which is capable of providing a stable voltage of 1.23 V with
    a thermal drift of typically 20 ppm/°C. The major constraint is that the reverse
    current needs to lie in the range from 10 μA to 20 mA. Considering that the collector
    voltage of the buffer was around 2.1 V at the selected bias current of the ZVP3306,
    that is, approximately 0.9 V after the , a 7.5 kΩ collector resistor was included
    to ensure a reverse current of 120 μA, which lies within the adequate range of
    this reference voltage. On other hand, the instrumentation amplifier INA321 was
    included to increase the accuracy and resolution of the system. The inverter input
    ( ) is controlled by a PWM signal generated by the microcontroller and doubly
    low-pass filtered to ensure a constant voltage in the input [36], [40]. The voltage
    after the conditioning circuitry is directly measured by the ADC of the microcontroller
    and is the non-inverter input ( ) of the IA (see Fig. 1a). The signal is amplified
    by a gain of 45 and measured by other ADC input of the MCU. Thus, the resolution
    was considerably increased, obtaining 2.44 mV/count in the direct voltage source
    ADC channel and 0.05 mV/count in the amplified ADC channel (see Fig. 1a). It is
    worth mentioning that a voltage ripple below 1 mV was obtained at the output of
    the INA321, which is lower than the accuracy of the ADC, so it does not affect
    the measurement. The energy harvested by the tag antenna is firstly rectified
    by the NFC chip and then regulated using the voltage regulator. The resulting
    power is finally used to supply the DC-DC voltage pump, which is based on the
    ADM660 IC (Analog Devices, USA). This IC was selected because of its low quiescent
    current of only 600 μA, and because its implementation only requires two external
    capacitors, thus implying a reduced number of components in the PCB and easier
    implementation. Thus, the regulated voltage of 2.5 V is augmented up to 5 V in
    order to achieve a higher maximum value of the drain-to-source voltage. Assuming
    the ADM660 has the efficiency of a usual DC-DC converter (80 %) and taking into
    account the quiescent current of 600 μA and the voltage regulator MCP1824T-2502
    quiescent current (120 μA), a total power around 3.3 mW must be provided by the
    M24LR64E IC. Finally, to supply the INA321 in the voltage range specified by the
    manufacturer (2.7–5.5 V), four 1N4148 diodes (Onsemi, Phoenix, Arizona) were used
    to reduce the voltage from the charge pump down to 3 V. In this way, when the
    instrumentation amplifier is saturated at high voltage, it does not exceed the
    input span of the microcontroller ADC. 2.2.5. Sensor module The radiation sensor
    is based on the general-purpose DMOS transistor model ZVP3306, which we had already
    tested and evaluated with our desk reader unit [40]. The module sensor also includes
    a P-channel JFET that avoids the potential damage during the storage and irradiation
    process caused by electrostatic discharge (Fig. 1a) by connecting the drain and
    source terminals of the pMOSFET. This configuration was validated in the previous
    NFC-based dosimeter [7] with the J175 JFET (Eindhoven, Netherlands), similar to
    the sensor module for the desk reader [36], where an N-channel JFET was used.
    However, for this work the J177 (NXP Semiconductors, Eindhoven, Netherlands) was
    chosen. In the present work, the gate was directly connected to the charge pump
    supply voltage, which was sufficient to disconnect the JFET. Finally, during the
    storage and irradiation period, the voltage in the gate of the JFET is 0 V, so
    the transistor is ON and prevents the electrostatic discharges in the pMOSFET
    sensor. Moreover, this sensor module can be controlled by an output pin of the
    microcontroller to perform several measurements without the need to power the
    board multiple times. 2.3. Software design 2.3.1. Smartphone application The NFC
    chip M24LR64E-R is compliant with the Android NFC-V standard and compatible with
    the ISO15693 RFID specification. On this basis, the smartphone application was
    built on the ISO15693 specification and uses specific NFC commands to communicate
    and control the device. The commands can be executed via RF by the smartphone
    or via I2C by a microcontroller. Fig. 2a, b show some screenshots of the application
    user interface. Before approaching the smartphone to the DosiTag, the user has
    to fill several fields of personal data related to the patient, as shown in Fig.
    2a. Then, the next screen is shown (Fig. 2b), which is composed of text fields
    that show information such as the tag UID, ambient temperature, date of the measurement,
    duty cycle of the PWM for the IA, and direct and amplified voltage shift of the
    pMOSFET source. Download : Download high-res image (255KB) Download : Download
    full-size image Fig. 2. (a-b) Screenshots of the custom-designed Android application;
    (c) Experimental setup for NFC measurements. The user can now approach the smartphone
    to the DosiTag to trigger the NFC link. At this point, the system is powered by
    the EM field harvested from the smartphone and one second later the measurements
    of the temperature and the direct and amplified source voltage are taken by the
    microcontroller. 1024 measurements are taken at the maximum sample frequency of
    the ADC, averaged by the microcontroller and recorded in the NFC EEPROM to be
    subsequently sent to the smartphone. The delay of one second is necessary for
    the system to correctly stabilize so that the measurements are always taken at
    the same time. This is an important issue because an initial decay of the source
    voltage takes place when a pMOSFET is biased due to the activation of the interface
    state. We can minimize the effect of this decay by always using the same time
    during which the pMOSFET is biased prior to conducting the source voltage measurements.
    The acquired ADC measurements are read and displayed by the smartphone when the
    user presses the “READ” button. This process must be repeated two times, before
    and after the irradiation, to calculate the increment of the voltage source. Finally,
    the source voltage shift is displayed on the screen. Once this process has been
    completed, the user can publish the final value of the voltage source shift in
    the MQTT broker to be read by another MQTT client to store and graph each patient’s
    data. 3. Results and discussion 3.1. NFC antenna performance The fabricated planar
    coil was characterized over the frequency before and after attaching the NFC chip.
    In the first case, the obtained inductance value and quality factor (Q) of the
    coil is shown in Fig. 3a. The inductance value at 13.56 MHz is 4.86 μH, which
    is very close to the desired inductance of 5.01 μH. The achieved quality factor
    is higher than 50, adequate for an efficient energy harvesting. The LC resonant
    circuit is completed once the M24LR64E NFC chip is attached to the PCB. Consequently,
    a new frequency sweep was conducted to measure both the phase and impedance of
    the resonant circuit. As can be observed in Fig. 3b, the antenna resonates at
    a frequency of 13.62 MHz, close enough to the designed frequency of 13.56 MHz
    so that a parallel tuning capacitor was not necessary to adjust the frequency
    of resonance. Download : Download high-res image (138KB) Download : Download full-size
    image Fig. 3. (a) Measured inductance (L) and quality factor (Q) of the fabricated
    planar coil without the M24LR64E NFC chip; (b) Measured impedance and phase of
    the antenna with de M24LR64E chip attached. 3.2. Thermal dependence The designed
    circuitry for thermal compensation and conditioning is similar to the one shown
    in our previous NFC dosimeter unit [7] (see Fig. 1a). As in the previous work,
    to bias the device for reading out and reducing the thermal coefficient of the
    drain voltage, the BJT collector and pMOSFET drain currents were properly selected.
    A linear model is assumed for the thermal behavior as already assumed in previous
    works with good results [7]. Therefore, the thermal voltage drift can be expressed
    as follows: (2) where is the thermal coefficient of the direct input voltage of
    the ADC, is the thermal coefficient of the amplified ADC input voltage, is the
    thermal coefficient of the pMOSFET source voltage, and is the linear temperature
    coefficient of the BJT base-emitter voltage. Since the thermal drift of the voltage
    reference is small, it can be neglected, so the thermal drift in the ADC voltage
    is given by the following Eq. (3): (3) Therefore, if and are very close, the thermal
    coefficient of the input voltage of the ADC is greatly minimized. In a previous
    work [40], we characterized the thermal drift of the ZVP3306 for multiple currents.
    With these results, in the previous NFC reader [7] we used a current value of
    220 μA for the ZVP3306 in the saturation region with the gate and source short-circuited,
    and collector current of the buffer of 30 μA to improve the thermal dependence.
    However, for this DosiTag, it has been necessary to readjust these currents due
    to the addition of the IA and the MCU. Finally, to improve the thermal dependence,
    we used a drain current of 190 μA for the ZVP3306 in the saturation region with
    the gate and source short-circuited, obtaining a thermal coefficient of and a
    collector current for the buffer of 120 μA, so the thermal coefficient was . It
    should be noted that the temperature dependence of the LM334 current source was
    measured in the previous work [7] with a 12 kΩ resistor, a resistance that is
    equivalent to the ZVP3306 at 220 μA. The experiment concluded with a very low
    thermal drift of 70 nA/°C. To conduct the DosiTag thermal dependence characterization,
    the tag was powered up using a DC power source at 5 V and it was located inside
    the climate chamber, where the temperature was swept from 10 up to 50 °C in increments
    of 5 °C. The source voltage of the pMOSFET transistor ( ), the amplified source
    voltage of the pMOSFET transistor ( ), and the emitter voltage of the bipolar
    transistor ( ) were measured and the corresponding linear temperature coefficients
    were calculated. The direct thermal coefficient was reduced from down to , which
    is in good agreement with our previous work [7]. If we normalize dividing by the
    gain the output signal of the IA, the thermal coefficient results in , which is
    considerably lower than the direct thermal coefficient of the previous NFC dosimeter.
    The reduction of the thermal coefficient in the amplified channel is mainly due
    to the IA having a negative thermal dependence. Finally, a reduction of 75 % in
    the direct thermal coefficient and 82% in the amplified normalized thermal coefficient
    was obtained. 3.3. Irradiation measurements Two replicas of the developed DosiTag
    system were irradiated using the experimental setup described in Section 2.1.2.
    The first one was used to check the durability and the resistance of the electronics
    against the ionizing radiation, and only measured the direct source voltage of
    the pMOSFET. It was experimentally checked that the system was still working properly
    after an irradiated dose of 57 Gy. In the second prototype, the instrumentation
    amplifier was employed to improve the accuracy and the resolution of the dosimeter.
    In both cases, the source voltage was measured three minutes after each irradiation
    to minimize short-term fading effect. Therefore, this DosiTag has been designed
    in order to have one channel with lower resolution for the measurement of high
    doses (e.g., 10 Gy) and a channel with much higher resolution for the measurement
    of low doses (e.g., 3 Gy) so that the increase of the amplified source voltage
    does not exceed 0.7 V (see Section 2.2.4) as this is the range where the ADC and
    IA operate with higher linearity. As shown in Fig. 4, very good linearity was
    obtained in the increase of both the direct and amplified normalized source voltage
    as a function of the received dose. Download : Download high-res image (91KB)
    Download : Download full-size image Fig. 4. Accumulated source voltage shift as
    a function of the measured dose. Data bar errors are smaller than symbols. The
    obtained average sensitivity of the low-resolution channel (LRC) of the DosiTag
    unit was (4.35 ± 0.17) mV/Gy, while the sensitivity of the high-resolution channel
    (HRC) was (4.37 ± 0.04) mV/Gy with a resolution of 79 cGy and 2 cGy, respectively.
    The achieved results are in good agreement with the average sensitivity measured
    in previous studies of the DMOS transistor ZVP3306 [13], [41] including the previous
    NFC dosimeter [7], which was (4.75 ± 0.15) mV/Gy with a resolution of 17 cGy.
    This means that we have achieved an improvement of the resolution by a factor
    of 8. Finally, it should be noted that each sample plotted on the Fig. 4 is the
    mean of three measurements taken after each irradiation. Source voltage recovery
    after irradiation was studied using a new sample of the system. This prototype
    was irradiated in three batches of 3 Gy, and after the last irradiation, the source
    voltage was measured every 10 min for two hours. According to Fig. 5, the source
    voltage decays with an average slope of (−6.3 ± 0.4) µV/min, which is in agreement
    with a previous study [42]. This recovery implies a dose underestimation of (−1.62 ± 0.06)
    mGy/min. Therefore, the error due to source voltage recovery can be considered
    negligible if the measurement is performed in the first 10 min after irradiation.
    Download : Download high-res image (92KB) Download : Download full-size image
    Fig. 5. Recovery of the source voltage after irradiation after an irradiation
    of 9 Gy. To evaluate the response of the DosiTag at low doses and to determine
    the system resolution, a set of 4 irradiation sessions of 50 mGy was performed.
    A thermal correction was applied using the thermal coefficient obtained in Section
    3.2 and the temperature measured with the temperature sensor included in the prototype.
    In the last session (0.2 Gy in Fig. 6), the DosiTag was cooled by 1.7 °C before
    irradiation to study the thermal correction during irradiation. The obtained results
    are shown in Fig. 6, where thermal correction reduced the error due to the thermal
    shift in the last irradiation session, thus allowing the system to detect irradiation
    doses of 5 cGy. Download : Download high-res image (86KB) Download : Download
    full-size image Fig. 6. Accumulated source voltage shift as a function of the
    absorbed dose obtained in low-dose experiments: data without thermal correction
    (empty symbols), and data with thermal correction (solid symbols). Dashed line
    shows the linear fit of the data with thermal correction. 3.4. Advantages and
    limitations of the system As previously stated, DosiTag is an enhanced design
    of an earlier version of NFC dosimeter developed in our research group [7]. As
    a summary, Table 1 shows the main improvements and/or novelties of DosiTag system
    compared to the previous version. Apart from these advantages, the system also
    presents some limitations that deserves a mention. In particular, the inclusion
    of the amplification stage entails the inconvenience of the establishment time
    of the low pass filter for fixing the inverting input to the desired voltage.
    Therefore, the system must wait a minimum of one second before making the measurement.
    On the other hand, a correct alignment between the tag and the smartphone coils
    is required so that enough energy is harvested to power the system up. This means
    that the smartphone must be held in the correct position (i.e., correctly aligned
    with the tag and at a short distance) for at least one second while it is placed
    on the patient. Table 1. Improvements and/or novelties of the presented DosiTag
    system over the previous NFC-based dosimeter. Feature Previous NFC dosimeter [7]
    DosiTag Improvement/novelty Circuit architecture Only NFC chip MCU + NFC chip
    Inclusion of MCU allows the full control of the measurement variables (time, start/end,
    etc.) NFC chip model SL13A (AMS) M24LR64E (STMicroelectronics) The SL13A chip
    is a discontinued device Sensitivity 4.75 ± 0.15 mV/Gy 4.37 ± 0.04 mV/Gy Although
    average sensitivity has slightly been reduced, its associated uncertainty has
    been significantly reduced Resolution 17 cGy 2 cGy Resolution has improved by
    a factor of 8 Total dose 20 Gy 42 Gy Total irradiation dose has been increased
    Smartphone Rooting required No need to root No root access is needed in the smartphone
    Smartphone app Designed for Android 5.1 Designed for Android 10 Smartphone app
    has been redesigned and improved. Higher Android versions are supported IoT capabilities
    No IoT implemented Cloud service (based on MQTT protocol) Integration with IoT
    allows classification, distribution and storage of patient’s data Irradiation
    area Only sensor module Whole tag New version allows the irradiation of the complete
    dosimeter tag, not only the sensor module Tag encapsulation Not possible Possible
    Previous sensor connector made tag encapsulation impossible to be sterilized or
    submerged in liquids Holder structure Ad-hoc wood structure No structure/holder
    is required Previous version required a holder structure to ensure adequate and
    repeatable energy harvesting 4. Conclusions A battery-less and wireless dosimetric
    system composed of an NFC tag with a pMOSFET-based dosimeter, a smartphone as
    the reader unit, and a cloud service based on MQTT protocol has been developed
    and evaluated in hospital facilities with potential application in dosimetry control
    of radiotherapy treatments. This DosiTag system is based on a previous NFC dosimeter
    that has been redesigned and improved in several aspects. In particular, the system
    resolution has been improved by a factor of 8 thanks to the use of an instrumentation
    amplifier. Moreover, the thermal drift has been further reduced using a commercial
    bipolar buffer, obtaining a reduction of the thermal coefficient by 82 %. The
    measurement process, data storage and cloud publication are conducted through
    a custom-developed smartphone application. The inclusion of the MQTT broker to
    upload the measured data enables the classification of the dosimetry data and
    the identification of the NFC reader unit used for each patient, thus allowing
    a personalized follow-up and individual control of the patients. The integration
    of the sensor module on the PCB allows the board to be encapsulated and sterilized.
    The dosimetric characterization was conducted using a LINAC in hospital facilities,
    obtaining a sensitivity of (4.35 ± 0.17) mV/Gy for the low resolution channel
    and (4.37 ± 0.04) mV/Gy for the high resolution channel. The resolution of the
    LRC and HRC was 79 cGy and 2 cGy. The results are in good agreement with previous
    works and the system is still accurate after high radiation doses despite the
    entire area of the tag is irradiated. In conclusion, the achieved improved features
    of the developed DosiTag system support its potential use for clinical dose measurement
    in radiotherapy treatments. CRediT authorship contribution statement Pousibet-Garrido:
    Prototyping, experimentation, Writing – review & editing. P. Escobedo: Prototyping,
    Experimentation, reviewing and editing. D. Guirado: Experimentation, reviewing
    and editing, Data curation, Formal analysis, Methodology. G.S. Ristic: Writing
    – review & editing, Formal analysis. A.J. Palma: Conceptualization, Methodology,
    Writing – review & editing, Supervision. M.A. Carvajal: Conceptualization and
    data analysis, Investigation, Writing – review & editing, Supervision. Declaration
    of Competing Interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Acknowledgements This research has been partially
    funded by Junta de Andalucía (Spain), projects numbers PI-0505–2017 FEDER/Junta
    de Andalucía-Consejería de Economía y Conocimiento Project B-TIC-468-UGR18, Proyecto
    del Plan Nacional I + D: PID2019–104888GB-I00 and Proyectos I + D + i Junta de
    Andalucía 2018: P18-RT-3237. This work was also conducted in the framework of
    H2020 ELICSIR project (grant No. 857558). P. Escobedo thanks grant IJC2020-043307-I
    funded by MCIN/AEI/ 10.13039/501100011033 and by “European Union NextGenerationEU/PRTR”.
    Data availability Data will be made available on request. References [1] Development
    of Procedures for In Vivo Dosimetry in Radiotherapy, (2016). https://www.iaea.org/publications/8962/development-of-procedures-for-in-vivo-dosimetry-in-radiotherapy.
    (Accessed 28 September 2022). [2] World Health Organization, F.R. of Institut
    für Strahlenhygiene des Bundesgesundheitsamtes (Germany), Quality assurance in
    radiotherapy: a guide prepared following a workshop held at Schloss Reisensburg,
    Federal Republic of Germany, 3–7 December 1984, World Health Organization, 1988.
    https://apps.who.int/iris/handle/10665/40423. (Accessed 28 September 2022). [3]
    T. Kron, J. Lehmann, P.B. Greer Dosimetry of ionising radiation in modern radiation
    oncology Phys. Med Biol., 61 (2016), pp. R167-R205, 10.1088/0031-9155/61/14/R167
    View in ScopusGoogle Scholar [4] L.L. Gunderson, J.E. Tepper, J.A. Bogart, eds.,
    Clinical Radiation Oncology, fourth ed., Elsevier, Philadelphia, PA, 2016. https://www.clinicalkey.com/#!/browse/book/3-s2.0-C20130006482.
    (Accessed 28 September 2022). [5] Best Medical Canada Products - MobileMOSFET,
    (n.d.). http://www.bestmedicalcanada.com/product_mobilemos.html. (Accessed 28
    September 2022). [6] A. Rozenfeld, Radiation Sensor and Dosimeter, US8742357B2,
    2014. https://patents.google.com/patent/US8742357B2/en. (Accessed 28 September
    2022). Google Scholar [7] M.A. Carvajal, P. Escobedo, M. Jiménez-Melguizo, M.S.
    Martínez-García, F. Martínez-Martí, A. Martínez-Olmos, A.J. Palma A compact dosimetric
    system for MOSFETs based on passive NFC tag and smartphone Sens. Actuators A Phys.,
    267 (2017), pp. 82-89, 10.1016/j.sna.2017.10.015 View PDFView articleView in ScopusGoogle
    Scholar [8] S. Alshaikh, M. Carolan, M. Petasecca, M. Lerch, P. Metcalfe, A. Rosenfeld
    Direct and pulsed current annealing of p-MOSFET based dosimeter: the “MOSkin Austral
    Phys. Eng. Sci. Med., 37 (2014), pp. 311-319, 10.1007/s13246-014-0261-1 View in
    ScopusGoogle Scholar [9] M.A. Garcia Inza, S.H. Carbonetto, J. Lipovetzky, A.N.
    Faigon, Radiation Sensor Based on MOSFETs Mismatch Amplification for Radiotherapy
    Applications, (2016). doi: 10.1109/TNS.2016.2560172. Google Scholar [10] A. Holmes-Siedle,
    L. Adams RADFET: a review of the use of metal-oxide-silicon devices as integrating
    dosimeters Int. J. Radiat. Appl. Instrum. Part C Radiat. Phys. Chem., 28 (1986),
    pp. 235-244, 10.1016/1359-0197(86)90134-7 View PDFView articleGoogle Scholar [11]
    A. Kelleher, W. Lane, L. Adams A design solution to increasing the sensitivity
    of pMOS dosimeters: the stacked RADFET approach IEEE Trans. Nucl. Sci., 42 (1995),
    pp. 48-51, 10.1109/23.364881 View in ScopusGoogle Scholar [12] R.A. Price, C.
    Benson, K. Rodgers, Development of a RadFET linear array for intracavitary in
    vivo dosimetry in external beam radiotherapy and brachytherapy, in: 2003 IEEE
    Nuclear Science Symposium. Conference Record (IEEE Cat. No.03CH37515), 3, 2003,
    1494–1498. https://doi.org/10.1109/NSSMIC.2003.1352160. Google Scholar [13] M.S.
    Martínez-García, J.T. del Río, A. Jaksic, J. Banqueri, M.A. Carvajal Response
    to ionizing radiation of different biased and stacked pMOS structures Sens. Actuators
    A Phys., 252 (2016), pp. 67-75, 10.1016/j.sna.2016.11.007 View PDFView articleView
    in ScopusGoogle Scholar [14] C. Ehringfeld, S. Schmid, K. Poljanc, C. Kirisits,
    H. Aiginger, D. Georg Application of commercial MOSFET detectors for in vivo dosimetry
    in the therapeutic x-ray range from 80 kV to 250 kV Phys. Med. Biol., 50 (2005),
    pp. 289-303, 10.1088/0031-9155/50/2/008 View in ScopusGoogle Scholar [15] J.N.
    Roshau, D.E. Hintenlang Characterization of the angular response of an “isotropic”
    MOSFET dosimeter Health Phys., 84 (2003), pp. 376-379, 10.1097/00004032-200303000-00012
    View in ScopusGoogle Scholar [16] H.A. Farroh, A. Nasr, K.A. Sharshar A study
    of the performance of an N-Channel MOSFET under gamma radiation as a dosimeter
    J. Electron. Mater., 49 (2020), pp. 5762-5772, 10.1007/s11664-020-08330-4 View
    in ScopusGoogle Scholar [17] G. Bharanidharan, D. Manigandan, K. Devan, V. Subramani,
    N. Gopishankar, T. Ganesh, R. Joshi, G. Rath, J. Velmurugan, P. Aruna, S. Ganesan
    Characterization of responses and comparison of calibration factor for commercial
    MOSFET detectors Med. Dosim., 30 (2005), pp. 213-218, 10.1016/j.meddos.2005.08.004
    View PDFView articleView in ScopusGoogle Scholar [18] O.F. Siebel, J.G. Pereira,
    M.C. Schneider, C. Galup-Montoro, A MOSFET dosimeter built on an off-the-shelf
    component for in vivo radiotherapy applications, in: Proceedings of the Fifth
    Latin American Symposium on Circuits and Systems, IEEE, 2014, 1–4. https://doi.org/10.1109/LASCAS.2014.6820261.
    Google Scholar [19] V.V. Prikhodko, A.S. Alexeyev, P.A. Guskov, S.G. Novikov,
    A.I. Somov, V.V. Svetukhin Technical note: ID-card-size dosimeter based on radiochromic
    films for continuous personnel monitoring Med. Phys., 48 (2021), pp. 3216-3222,
    10.1002/mp.14893 View in ScopusGoogle Scholar [20] Passive radiofrequency x-ray
    dosimeter tag based on flexible radiation-sensitive oxide field-effect transistor,
    Science Advances, (n.d.). https://www.science.org/doi/10.1126/sciadv.aat1825.
    (Accessed 30 September 2022). [21] A.S. Beddar, M. Salehpour, T.M. Briere, H.
    Hamidian, M.T. Gillin Preliminary evaluation of implantable MOSFET radiation dosimeters
    Phys. Med. Biol., 50 (2005), pp. 141-149, 10.1088/0031-9155/50/1/011 View in ScopusGoogle
    Scholar [22] F. Li, Y. Bao, D. Wang, W. Wang, L. Niu Smartphones for sensing Sci.
    Bull., 61 (2016), pp. 190-201, 10.1007/s11434-015-0954-1 View PDFView articleView
    in ScopusGoogle Scholar [23] V. Coskun, B. Ozdenizci, K. Ok A survey on near field
    communication (NFC) technology Wirel. Pers. Commun., 71 (2013), pp. 2259-2294,
    10.1007/s11277-012-0935-5 View in ScopusGoogle Scholar [24] P. Teengam, W. Siangproh,
    S. Tontisirin, A. Jiraseree-amornkun, N. Chuaypen, P. Tangkijvanich, C.S. Henry,
    N. Ngamrojanavanich, O. Chailapakul NFC-enabling smartphone-based portable amperometric
    immunosensor for hepatitis B virus detection Sens. Actuators B Chem., 326 (2021),
    Article 128825, 10.1016/j.snb.2020.128825 View PDFView articleView in ScopusGoogle
    Scholar [25] P. Escobedo, M.D. Fernández-Ramos, N. López-Ruiz, O. Moyano-Rodríguez,
    A. Martínez-Olmos, I.M. Pérez de Vargas-Sansalvador, M.A. Carvajal, L.F. Capitán-Vallvey,
    A.J. Palma Smart facemask for wireless CO2 monitoring Nat. Commun., 13 (2022),
    p. 72, 10.1038/s41467-021-27733-3 View in ScopusGoogle Scholar [26] M. Boada,
    A. Lazaro, R. Villarino, D. Girbau Battery-less NFC sensor for pH monitoring IEEE
    Access, 7 (2019), pp. 33226-33239, 10.1109/ACCESS.2019.2904109 View in ScopusGoogle
    Scholar [27] A. Lazaro, M. Boada, R. Villarino, D. Girbau Color measurement and
    analysis of fruit with a battery-less NFC sensor Sensors, 19 (2019), p. 1741,
    10.3390/s19071741 View in ScopusGoogle Scholar [28] A compact and low cost dosimetry
    system based on MOSFET for in vivo radiotherapy, Elsevier Enhanced Reader, (n.d.).
    https://doi.org/10.1016/j.sna.2012.05.024. [29] M. Garcia-Inza, M. Cassani, S.
    Carbonetto, M. Casal, E. Redín, A. Faigón 6MV LINAC characterization of a MOSFET
    dosimeter fabricated in a CMOS process Radiat. Meas., 117 (2018), pp. 63-69, 10.1016/j.radmeas.2018.07.009
    View PDFView articleView in ScopusGoogle Scholar [30] D. Dinculeană, X. Cheng
    Vulnerabilities and limitations of MQTT protocol used between IoT devices Appl.
    Sci., 9 (2019), p. 848, 10.3390/app9050848 View in ScopusGoogle Scholar [31] D.
    Soni, A. Makwana, A survey on MQTT: a protocol of internet of things (IOT), in:
    Proceedings of the International Conference on Telecommunication, Power Analysis
    and Computing Techniques (ICTPACT-2017), 20, 173–177. Google Scholar [32] R.A.
    Atmoko, R. Riantini, M.K. Hasin, IoT real time data acquisition using MQTT protocol,
    J. Phys. Conf. Ser., 853 (2017) 012003. https://doi.org/10.1088/1742–6596/853/1/012003.
    Google Scholar [33] H.C. Hwang, J. Park, J.G. Shon Design and implementation of
    a reliable message transmission system based on MQTT protocol in IoT Wirel. Pers.
    Commun., 91 (2016), pp. 1765-1777, 10.1007/s11277-016-3398-2 View in ScopusGoogle
    Scholar [34] M.A. Carvajal, M.S. Martínez-García, D. Guirado, J. Banqueri, A.J.
    Palma Dose verification system based on MOS transistor for real-time measurement
    Sens. Actuators A Phys., 247 (2016), pp. 269-276, 10.1016/j.sna.2016.06.009 View
    PDFView articleView in ScopusGoogle Scholar [35] N.D. Vasović, G.S. Ristić A new
    microcontroller-based RADFET dosimeter reader Radiat. Meas., 47 (2012), pp. 272-276,
    10.1016/j.radmeas.2012.01.017 View PDFView articleView in ScopusGoogle Scholar
    [36] O.F. Siebel, J.G. Pereira, R.S. Souza, F.J. Ramirez-Fernandez, M.C. Schneider,
    C. Galup-Montoro A very-low-cost dosimeter based on the off-the-shelf CD4007 MOSFET
    array for in vivo radiotherapy applications Radiat. Meas., 75 (2015), pp. 53-63,
    10.1016/j.radmeas.2015.03.004 Google Scholar [37] A. Kelleher, M. O’Sullivan,
    J. Ryan, B. O’Neill, W. Lane Development of the radiation sensitivity of PMOS
    dosimeters IEEE Trans. Nucl. Sci., 39 (1992), pp. 342-346, 10.1109/23.277514 Google
    Scholar [38] J.R. Schwank, S.B. Roeske, D.E. Beutler, D.J. Moreno, M.R. Shaneyfelt
    A dose rate independent pMOS dosimeter for space applications IEEE Trans. Nucl.
    Sci., 43 (1996), pp. 2671-2678, 10.1109/23.556852 Google Scholar [39] M24LR64E-R
    - Dynamic NFC/RFID tag IC with 64-Kbit EEPROM, Energy Harvesting, I2C bus and
    ISO 15693 RF Interface - STMicroelectronics, (n.d.). https://www.st.com/en/nfc/m24lr64e-r.html.
    (Accessed 28 September 2022). [40] M.A. Carvajal, M.S. Martínez-García, D. Guirado,
    A. Martínez-Olmos, A.J. Palma Thermal compensation technique using the parasitic
    diode for DMOS transistors Sens. Actuators A Phys., 249 (2016), pp. 249-255, 10.1016/j.sna.2016.09.004
    Google Scholar [41] B. Eslami, S. Ashrafi Effect of gamma ray absorbed dose on
    the FET transistor parameters Results Phys., 6 (2016), pp. 396-400, 10.1016/j.rinp.2016.07.003
    Google Scholar [42] S.M. Pejovic, M.M. Pejovic, D. Stojanov, O. Ciraj-Bjelac Sensitivity
    and fading of pMOS dosemeters irradiated with X-ray radiation doses from 1 to
    100 cGy Radiat. Prot. Dosim., 168 (2016), pp. 33-39, 10.1093/rpd/ncv006 Google
    Scholar Cited by (2) Extensive thermal-range simulation study of interface traps
    and oxide charges in an oxide-optimized MOS-capacitive radiation sensor for space
    applications 2024, Journal of the Korean Physical Society NFC Implementation Methods
    for ESP32 Based IoT Systems 2023, 2023 International Conference on Advanced Technologies,
    Systems and Services in Telecommunications, TELSIKS 2023 Antonio Pousibet-Garrido
    was born in La Carolina (Spain) in 1998. He received the B.S. degree in Telecommunication
    Engineering, and the M.Sc. degree in Industrial Electronics, both from the University
    of Granada (Granada, Spain) in 2021 and 2022, respectively. Since 2023, he is
    Ph.D. student of Information and Communication Technologies at the University
    of Granada. His research interests include NFC-based sensorized systems, and dosimetry-related
    studies. Pablo Escobedo Araque was born in Jaén (Spain) in 1989. He received the
    Major degrees in Telecommunication Engineering and Electronics Engineering from
    the University of Granada (Granada, Spain) in 2012 and 2013, respectively, and
    the Master’s degree in Computer and Network Engineering in 2014. In 2018, he received
    his Ph.D. degree in design and development of printed sensor systems on flexible
    substrates at the same Institution. He is currently a postdoctoral researcher
    at the ECSens Group (Department of Electronics and Computer Technology, University
    of Granada). His research interests include the development of printed sensor
    systems on flexible substrates, including RFID/NFC tags with sensing capabilities,
    for applications in multiple fields such as environmental monitoring, clinical
    and health analysis/diagnosis, smart packaging of goods and food, and wearable
    systems for sports activity and biomedical monitoring. Damián Guirado Llorente
    was born in Murcia (Spain) in 1967, obtained his MSc degree in Physics in 1993
    and his Ph.D. degree in 2012 both at the University of Granada (Spain). He works
    at the San Cecilio University Hospital in Granada as medical physics specialist,
    and he has combined his clinical activity, as a healthcare specialist, with research
    activity; developing his professional career at the same time he has participated
    in several research projects with an orientation according to this circumstance:
    the clinical application of their results. He is interested in various topics
    related to medical physics, such as ionizing radiation dosimetry and metrology,
    radiation therapy and radiobiology. Goran Ristic was born on August 2, 1964 in
    Niš, Serbia. He received the B.Sc. degree in physics, and the M.Sc. and Ph.D.
    degrees in electronics at University of Niš, Serbia, in 1990, 1994 and 1998. He
    is a Full Professor and Head of Applied Physics Laboratory at the Faculty of Electronic
    Engineering, University of Niš. His research includes radiation dosimeters, the
    reliability of MOS transistor (the radiation and post-irradiation effects, as
    well as the electrical and post-electrical stress effects), the electrical discharge
    and recombination processes in the afterglow periods in gases, and medical X-ray
    imaging. He is is author or co-author of more than 100 research papers, including
    80 papers in journals from WoS list. On the basis of SCOPUS data, his papers have
    been cited more than 1500 times (excluding self citations), and his H – index
    is 18 (excluding self citations). Alberto J. Palma is full Professor of Electronic
    Technology at the University of Granada, received his M.Sc. in Physics (1991)
    and Ph.D. in Physics (1995) from the Faculty of Sciences, University of Granada
    (Spain). Since 1992, he has been working on trapping of carriers in different
    electronic devices (diodes and MOS transistors) including characterization and
    simulation of capture cross sections, random telegraph noise, and generation-recombination
    noise in devices. He founded, together with Prof. Capitán-Vallvey, the interdisciplinary
    group ECsens, which includes Chemists, Physicists and Electrical and Computer
    Engineers at the University of Granada in 2000. His current research interests
    are the design, development and fabrication of sensors and portable instrumentation
    for environmental, health and food analysis and monitoring. He is also interested
    in printed sensors, flexible electronics and capillary-based microfluidic devices.
    Miguel A. Carvajal Rodríguez was born in 1977 in Granada (Spain). He received
    the MSc degrees in Physics in 2000 and the MSc degree in Electronic Engineering
    in 2002, both from the University of Granada; and the Ph.D. degree in Electronic
    Engineering from the University of Granada in 2007 about the development a dosimeter
    system based on commercial MOSFETs. Currently he works as tenured Professor at
    the University of Granada. His research interests include the effects of irradiation
    and post-irradiation in MOSFET transistors, RFID tags with sensor capabilities,
    gas sensor and electrochemiluminescent sensors, and their applications to handheld
    instrumentation. © 2023 The Author(s). Published by Elsevier B.V. Recommended
    articles A normally off time-of-event logging system triggered by a battery-less
    sensor Sensors and Actuators A: Physical, Volume 354, 2023, Article 114306 Shunsuke
    Yamada, Hiroshi Toshiyoshi View PDF Nafion modified electrochemical sensor integrated
    with a feedback-loop indium-gallium-zinc oxide thin-film transistor for enhancing
    dopamine detection limit Sensors and Actuators A: Physical, Volume 354, 2023,
    Article 114287 Keng-Yi Tsai, …, Jian-Jang Huang View PDF 5-DOF cone-shaped piezoelectric
    positioning robot for optical systems Sensors and Actuators A: Physical, Volume
    354, 2023, Article 114280 Andrius Čeponis, …, Regimantas Bareikis View PDF Show
    3 more articles Article Metrics Citations Citation Indexes: 1 Captures Readers:
    12 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: 'Sensors and Actuators A: Physical'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Batteryless NFC dosimeter tag for ionizing radiation based on commercial
    MOSFET
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Tariq U.
  - Ahmed I.
  - Bashir A.K.
  - Shaukat K.
  citation_count: '23'
  description: The emergence of the Internet of Things (IoT) technology has brought
    about tremendous possibilities, but at the same time, it has opened up new vulnerabilities
    and attack vectors that could compromise the confidentiality, integrity, and availability
    of connected systems. Developing a secure IoT ecosystem is a daunting challenge
    that requires a systematic and holistic approach to identify and mitigate potential
    security threats. Cybersecurity research considerations play a critical role in
    this regard, as they provide the foundation for designing and implementing security
    measures that can address emerging risks. To achieve a secure IoT ecosystem, scientists
    and engineers must first define rigorous security specifications that serve as
    the foundation for developing secure devices, chipsets, and networks. Developing
    such specifications requires an interdisciplinary approach that involves multiple
    stakeholders, including cybersecurity experts, network architects, system designers,
    and domain experts. The primary challenge in IoT security is ensuring the system
    can defend against both known and unknown attacks. To date, the IoT research community
    has identified several key security concerns related to the architecture of IoT
    systems. These concerns include issues related to connectivity, communication,
    and management protocols. This research paper provides an all-inclusive and lucid
    review of the current state of anomalies and security concepts related to the
    IoT. We classify and analyze prevalent security distresses regarding IoT’s layered
    architecture, including connectivity, communication, and management protocols.
    We establish the foundation of IoT security by examining the current attacks,
    threats, and cutting-edge solutions. Furthermore, we set security goals that will
    serve as the benchmark for assessing whether a solution satisfies the specific
    IoT use cases.
  doi: 10.3390/s23084117
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 8 10.3390/s23084117 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editors Raffaele Bruno
    Alessandra Rizzardi Antonio Puliafito Subscribe SciFeed Recommended Articles Related
    Info Links More by Authors Links Article Views 57295 Citations 24 Table of Contents
    Abstract Introduction General Design, Components, and Protocols for the Internet
    of Things Potential Security Issues with the Internet of Things What Distinguishes
    IoT Anomaly Detection from IT Security? Classification of Internet of Things Access
    Control Roadmap for Securing IoT Devices Conclusions and Our Recommendations Author
    Contributions Funding Institutional Review Board Statement Informed Consent Statement
    Data Availability Statement Acknowledgments Conflicts of Interest References share
    Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessReview A Critical Cybersecurity Analysis and Future Research Directions
    for the Internet of Things: A Comprehensive Review by Usman Tariq 1,*, Irfan Ahmed
    2, Ali Kashif Bashir 3 and Kamran Shaukat 4 1 Management Information System Department,
    College of Business Administration, Prince Sattam Bin Abdulaziz University, Al-Kharj
    16278, Saudi Arabia 2 Department of Computer Science, College of Engineering,
    Virginia Commonwealth University, Richmond, VA 23284, USA 3 Department of Computing
    and Mathematics, Manchester Metropolitan University, Manchester M156BH, UK 4 School
    of Information and Physical Sciences, The University of Newcastle, Newcastle 2308,
    Australia * Author to whom correspondence should be addressed. Sensors 2023, 23(8),
    4117; https://doi.org/10.3390/s23084117 Submission received: 28 February 2023
    / Revised: 4 April 2023 / Accepted: 14 April 2023 / Published: 19 April 2023 (This
    article belongs to the Section Internet of Things) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract The emergence of the Internet of Things (IoT)
    technology has brought about tremendous possibilities, but at the same time, it
    has opened up new vulnerabilities and attack vectors that could compromise the
    confidentiality, integrity, and availability of connected systems. Developing
    a secure IoT ecosystem is a daunting challenge that requires a systematic and
    holistic approach to identify and mitigate potential security threats. Cybersecurity
    research considerations play a critical role in this regard, as they provide the
    foundation for designing and implementing security measures that can address emerging
    risks. To achieve a secure IoT ecosystem, scientists and engineers must first
    define rigorous security specifications that serve as the foundation for developing
    secure devices, chipsets, and networks. Developing such specifications requires
    an interdisciplinary approach that involves multiple stakeholders, including cybersecurity
    experts, network architects, system designers, and domain experts. The primary
    challenge in IoT security is ensuring the system can defend against both known
    and unknown attacks. To date, the IoT research community has identified several
    key security concerns related to the architecture of IoT systems. These concerns
    include issues related to connectivity, communication, and management protocols.
    This research paper provides an all-inclusive and lucid review of the current
    state of anomalies and security concepts related to the IoT. We classify and analyze
    prevalent security distresses regarding IoT’s layered architecture, including
    connectivity, communication, and management protocols. We establish the foundation
    of IoT security by examining the current attacks, threats, and cutting-edge solutions.
    Furthermore, we set security goals that will serve as the benchmark for assessing
    whether a solution satisfies the specific IoT use cases. Keywords: IoT security;
    data security; network security; anomaly detection and countermeasures 1. Introduction
    The Internet of Things (IoT) has emerged as a critical technology in modern society,
    with significant implications for cybersecurity. IoT devices are ubiquitous, interconnected,
    and often lack essential security features, leaving them vulnerable to a range
    of cyber threats. Malicious actors can exploit these vulnerabilities to gain sensitive
    data, launch distributed denial-of-service (DDoS) attacks, and even take control
    of critical infrastructure. A large-scale cyber-attack on IoT networks could have
    severe consequences, including disrupting essential services and causing widespread
    economic damage. The IoT is a complex network of interconnected devices and individuals
    collaborating to monitor and exchange information about their usage and environmental
    conditions. The system consists of smart devices equipped with embedded systems
    comprising CPUs, sensors, and connectivity hardware that collect, transmit, and
    respond to information obtained from their surroundings within the IoT ecosystem.
    These IoT devices communicate with an IoT gateway or another edge device to exchange
    sensor data with each other. The data is either transferred to the cloud for analysis
    or processed locally. Periodically, these devices exchange information and take
    appropriate actions based on that exchange. In most cases, IoT devices function
    autonomously without any human intervention. The IoT is a rapidly expanding field
    with unique challenges regarding device interoperability, data privacy, and security.
    IoT not only enables individuals to live and work more efficiently and gives them
    greater control over their lives. Businesses rely heavily on the IoT because it
    provides technological devices for automating enterprise environments. With IoT,
    organizations can obtain real-time insights into how various systems function,
    allowing them to optimize processes and reduce labor costs. Furthermore, IoT provides
    visibility into business transactions, reduces manufacturing and shipping costs,
    and enhances service efficiency. Intelligent IoT apps, also known as prefabricated
    SaaS systems, are equipped with machine learning techniques to analyze vast volumes
    of data collected from interconnected sensors, providing corporate users with
    actionable insights via interfaces. By monitoring KPIs (key performance indicators),
    MTBF (mean time between failure) rates, and other metrics in real-time, IoT dashboards
    and alerts can help detect irregularities and initiate automatic repairs or preventative
    actions. One of the biggest obstacles the IoT brings is ensuring its security.
    These devices gather sensitive data, such as what you say and do at home and the
    workplace. Users’ trust in the IoT hinges on its dependability, yet it has a dismal
    track record of securing data. Many connected systems fail to adequately safeguard
    users’ and device data by mismanaging it while it is stored and in transit. Even
    in well-established programs, software vulnerabilities are constantly being uncovered,
    yet many IoT devices cannot be updated, leaving them permanently vulnerable. Due
    to their intrinsic lack of protection, IoT devices such as routers and cameras
    are increasingly targeted by hackers who exploit them as part of massive, interconnected
    botnets. According to estimates from technology analyst firm IDC (International
    Data Corporation) [1], IoT devices will produce 79.4 zettabytes of data in the
    next five years. Some of this Internet of Things data will be “compact and anomalous”,
    as predicted by IDC. This means it will only consist of relatively short updates,
    such as those provided by sensors or smart meters. In addition, devices such as
    security cameras with built-in computer vision might produce massive amounts of
    data. According to IDC’s forecasts, the amount of data generated by Internet of
    Things (IoT) devices will skyrocket in the following years. The report claims
    that while video surveillance is the current leader in data production, other
    industries and medical applications will soon overtake it. Interconnected drones
    with built-in cameras were also projected to become an important data collection
    tool. Data from a wide variety of sensors, including audio, video, and specialized
    automotive sensor data, will be generated by autonomous vehicles in the near future.
    Conducting a thorough vulnerability investigation [2] is the first step in creating
    an IoT-enabled environment. This involves looking at the devices, protocols, and
    user/customer backends of the infrastructure to identify possible weak points.
    Risk management and assessment must be performed throughout the IoT implementation
    lifecycle, especially when the deployment is larger or spans more regions. Due
    to the many data formats and processing capabilities of IoT devices, there is
    no “one size fits all” cybersecurity solution that can protect any Internet of
    Things deployment. Figure 1 shows that most IoT solutions are reasonably priced
    and aimed toward the consumer market, with little thought given to issues such
    as security and privacy. Cybercriminals are eager to take advantage of such vulnerabilities
    by adding them to a botnet or exploiting them to spy on their owners. As a result,
    we must take measures to safeguard this technology. In addition, the urgency of
    this need is only going to rise as the number of available IoT devices continues
    to proliferate. Due to limited capacity and varied design, IoT devices are open
    to various security risks. Threats to wireless ad hoc networks increase when devices
    are deployed to uncontrolled and potentially dangerous environments. It is common
    in hetnets [3] to experience attacks such as sinkholes, blackholes, wormholes,
    sybils, denial-of-service (DoS), node capture, and node injection. Figure 1. IoT
    Security Considerations (Inspiration for Figure 1 was inherited from: Building
    trust in IoT devices with powerful IoT security solutions. (Telit-Cinterion).
    Thales Group. https://www.thalesgroup.com/en/markets/digital-identity-and-security/iot/iot-security
    (accessed on 5 February 2023)). During our literature review, we were able to
    identify several key research gaps in securing the IoT, such as: There is a lack
    of comprehensive security solutions for IoT devices. The number of devices and
    the different applications that they are used for having resulted in a complex
    ecosystem that is hard to secure. This complexity is exacerbated by the limited
    computational resources of many IoT devices, which makes it difficult to implement
    advanced security solutions. There is a lack of protocol standardization in IoT
    device security. The lack of universal security measures makes it easier for attackers
    to exploit vulnerabilities, resulting in a higher risk of security breaches. Without
    a common taxonomy, it becomes difficult to ensure the security of an IoT ecosystem,
    which consists of several different types of devices, communication protocols,
    and applications. There is a need for research to identify new security risks
    that arise from the integration of IoT devices with other systems, such as layer-based
    services. The integration of IoT devices with diverse systems introduces new vulnerabilities,
    which need to be identified and addressed. There is a need for more research on
    access control driven anomalies and countermeasures related to IoT devices. The
    massive deployment of these devices has led to the collection of vast amounts
    of data, and it is essential to ensure that this data is protected from unauthorized
    access and misuse. To ensure the security of private information, it is necessary
    to safeguard the data collected by IoT devices, as depicted in Figure 2. Additionally,
    it is important to protect the communication between these devices to prevent
    unauthorized interception of data. In some cases, IoT settings involve physical
    entities exchanging data to provide users with relevant information. This highlights
    the criticality of securing these devices. The potential security threats associated
    with the Internet of Things can have severe consequences, including data breaches,
    loss of sensitive information, and compromised personal privacy. Thus, addressing
    the security concerns related to the IoT is vital to ensure its safe and efficient
    operation. Figure 2. Basic security taxonomy for the IoT. We acknowledge that
    IoT security vulnerabilities are vast & complex and covering all of them in a
    research paper is not always feasible. In this regard, we want to point out that
    the selection of security vulnerabilities discussed in our research paper is based
    on various factors, such as the research objectives, the scope of the study, the
    availability of data, and the relevance to the research question. We acknowledge
    that other security vulnerabilities related to the IoT exist, and are also important
    to address. However, the inclusion of all IoT security vulnerabilities in the
    paper would have been beyond the scope of the research, and it may have led to
    an overly broad and unfocused discussion. Therefore, we focused on specific security
    vulnerabilities that were most relevant to the research question and objectives
    while acknowledging that other vulnerabilities exist in the IoT ecosystem. In
    order to discern dissimilarities among the published literature, we have taken
    into account several factors, including the range of the literature; research
    methods employed; level of scrutiny (i.e., methodology, outcomes, and limitations);
    reliability of sources (such as academic journals, white papers, and industry
    publications); a preferred timeframe (from 2019 to February 2023); and a particular
    focus has been given to literature that highlights gaps in current research with
    pragmatic suggestions for enhancing cybersecurity within IoT systems. In this
    paper, the remaining content is structured as follows: In Section 2, the general
    design, components, and protocols for the Internet of Things are discussed. Section
    3 focuses on potential security concerns with the IoT. Section 4 introduces the
    unique aspects of IoT anomaly detection compared to IT security. Section 5 explains
    the classification of IoT Access Control. Section 6 presents our perspective on
    how artificial intelligence (AI) and machine learning (ML) can impact IoT security.
    Lastly, in Section 7, this review paper is concluded. 2. General Design, Components,
    and Protocols for the Internet of Things Even though there is no set template
    for IoT design, it often consists of three distinct but interconnected layers:
    observation, network, and application. However, CISCO, a digital communication
    corporation, took it a step farther and added a total of seven levels [4]. CISCO
    defined layers were (1) physical devices, (2) communication and processing, (3)
    data analysis and transformation, (4) data storage, (5) data aggregation and abstraction,
    (6) application, and (7) collaboration and business process. As per Figure 3,
    we have focused on the security vulnerabilities which concern observation, network,
    and application layers. A multi-layered protection method aims to ensure that
    every component of the IoT cybersecurity strategy has a backup to compensate for
    any weaknesses or shortcomings. Together, these layers strengthen enterprise defenses
    and lay the framework for an effective cybersecurity strategy for the Internet
    of Things (IoT). Furthermore, we have also examined the National Institute of
    Standards and Technology (NIST) Cybersecurity Framework [5], which is based on
    primary functions, such as Identify, Protect, Detect, Respond, and Recover. Figure
    3. IoT risk taxonomy at the observation layer. We implemented a “Tuple Model”
    to create a threat scenario for IoT security. The model consisted of the attacker,
    the attack vector, the target, and/or the impact. The attacker element identified
    the entity or group responsible for the attack, while the attack vector element
    described the method or means used to execute the attack. The target element represented
    the specific IoT device or system under attack, while the impact element described
    the potential consequences or damage resulting from the attack. This Tuple Model
    provided a framework for capturing the diversity of threats and vulnerabilities
    in an IoT system and facilitated the development of a comprehensive threat model
    that accounted for all possible scenarios. Consequently, this model could be expanded
    to include additional elements to capture more complex threats, such as multi-stage
    attacks or those that involve multiple targets. 2.1. Observation Layer A variety
    of IoT sensors and other hardware components make up the observation layer, which
    is also in charge of data exchange and gathering. Sensors and other technologies
    detecting and relaying information are crucial to the Internet of Things. [6].
    A WSN uses a network of wirelessly connected, intelligent sensors to collect information
    about environmental conditions. Sensitive information is sent to a central hub
    or base station via a single or several relay stations. Figure 3 provides a comprehensive
    and systematic analysis of security threats at the observation layer of the IoT.
    The figure identifies various categories of potential security threats at this
    layer, including physical, device, and data security. By breaking down the potential
    threats into these categories, the figure offers a clear and organized overview
    of the risks that need to be addressed when securing the observation layer of
    the IoT. 2.2. Network Layer With the help of the observation layer’s input, the
    network layer stores or transmits the gathered data to the application layer for
    further processing. When it comes to the context of the Internet of Things, this
    layer is the most crucial, since it unifies the numerous forms of communication
    technology that make it possible for IoT devices to communicate with one another.
    Among the most popular of these communication methods are ZigBee [7], BLE (i.e.,
    piconet) [8,9], 6LoWPAB [10,11,12], LoRaWAN [13,14,15], and readable tags. The
    criteria for wireless technologies driven by use cases (i.e., applications) and
    the Internet of Things architecture are outlined in Table 1. This paper mainly
    focuses on IoT security, which can have overlapping concepts with classical wireless
    networks. While some of the content can be applied to both, there are differences
    between IoT devices and classical wireless network devices. IoT devices are often
    low capability, have limited power sources, generate large volumes of data, and
    can be left unattended for extended periods. Therefore, it is crucial to consider
    the unique characteristics of IoT devices when designing security measures. On
    the other hand, classical wireless networks and devices may have different requirements
    and capabilities. While some security principles may apply across both types of
    networks, the specific implementation and considerations can differ. Therefore,
    the paper may have emphasized the need to address IoT security threats explicitly
    that can be overlapping to the broader context of wireless networks. There are
    several similarities in the protocols and standards used in both IoT and classical
    wireless networks. For example, both use the IEEE 802.11 standard for wireless
    LANs, and both use the Transmission Control Protocol/Internet Protocol (TCP/IP)
    for communication. Both also use security protocols such as Wi-Fi Protected Access
    (WPA) and Transport Layer Security (TLS) to protect data transmission. However,
    there are also some differences in the protocols and standards used in the two
    types of networks. For instance, IoT devices often use low-power, low-data-rate
    wireless technologies (i.e., explained in Table 1. Assessment of Wireless IoT
    Technologies) such as Zigbee or Bluetooth Low Energy (BLE), whereas classical
    wireless networks tend to use high data rate protocols such as long-term evolution
    (LTE) or WiMAX. Additionally, IoT devices often have limited processing power
    and memory, which affects the type of protocols and standards that can be used.
    Therefore, specialized protocols such as Constrained Application Protocol (CoAP)
    and Message Queuing Telemetry Transport (MQTT) are frequently used in IoT devices.
    Specific criteria were given attention for both local and remote scenarios, including
    Internet of Things gateways, wireless device connectivity, hardware connectors,
    and communication protocols. Table 1. Assessment of wireless IoT technologies.
    ‘x’ means not-available, and ‘✓’ means available. Figure 4 offers a comprehensive
    analysis of the security threats that are specific to the network layer of IoT.
    The figure is a useful tool for understanding and visualizing the complex security
    issues at this layer, including various network protocols, communication technologies,
    and architectures. The taxonomy is organized into several categories, such as
    network protocol vulnerabilities, network infrastructure vulnerabilities, and
    malicious network traffic, and provides a detailed breakdown of the different
    types of threats that can occur in each category. This systematic approach helps
    to identify potential vulnerabilities in the network layer of IoT, which can inform
    the development of effective security measures to mitigate these risks. Figure
    4. IoT risk taxonomy at the network layer. 2.3. Application Layer When it comes
    to interoperability between IoT devices and their communication networks, the
    application layer is the key. It mediates between the activities of an IoT device
    and the subsequent transfer of data to the network in a usable manner. Several
    considerations, including the type of device and the task it will carry out, determine
    the optimal protocol for every given Internet of Things application. Constraint
    Application Protocol (CoAP) [16,17,18] and Message Queueing Telemetry Transport
    (MQTT) [19,20,21] are the most often used application protocols. CoAP was developed
    to let low-power, low-resource devices connect to the Internet of Things via slow,
    unreliable networks. Its primary use is in M2M (machine-to-machine) systems, which
    facilitates communication between machines to carry out tasks such as metering
    and controlling HVAC (heating, ventilation, and air conditioning) systems and
    smart lighting. Information transfer in CoAP occurs via UDP (User Datagram Protocol).
    CoAP uses the encryption and authentication features of UDP to keep data safe.
    CoAP employs Datagram TLS (Transport Layer Security) over UDP in the same way
    that HTTP (Hypertext Transfer Protocol) employs TLS over TCP (Transmission Control
    Protocol). RSA (Rivest-Shamir-Adleman) [22], AES (Advanced Encryption Standard)
    [23,24,25], and other ciphers are all supported by DTLS (Datagram Transport Layer
    Security). MQTT was created as a minimalist publish/subscribe message system,
    ideally suited for establishing connections between remote devices with a low
    resource need and limited bandwidth. MQTT is an excellent option for wireless
    networks with variable latency due to periodic throughput restrictions or unstable
    connectivity. TLS security-enabled MQTT protocol can support bi-direction communication
    among millions of devices in a reliable, lightweight, and efficient manner [26,27,28].
    An investigation has revealed the following differences between MQTT and CoPA
    that should be considered while implementing IoT technologies: (a) MQTT is a TCP-based
    protocol, while CoAP is an HTTP-based protocol. CoAP can also use UDP for more
    efficient communication, making it a good fit for low-power, lossy networks. REST
    is an architectural style for building web services and is often used in conjunction
    with CoAP to provide a standardized interface for web-based applications to interact
    with IoT devices. (b) MQTT uses a topic-based approach for message routing, where
    messages are published to a topic and subscribers can subscribe to specific topics
    to receive messages. CoAP/REST uses URIs (Uniform Resource Identifiers) to identify
    resources, which can be manipulated using standard HTTP methods such as GET, PUT,
    POST, and DELETE. (c) MQTT provides three QoS levels, while CoAP/REST provides
    four. MQTT QoS levels range from 0 to 2, with 0 providing no guarantees and 2
    providing the highest level of reliability. CoAP/REST QoS levels range from 0
    to 3, with 0 providing no guarantees and 3 providing the highest level of reliability.
    (d) MQTT supports bidirectional communication between clients and servers, while
    CoAP/REST supports both unidirectional and bidirectional communication. (e) MQTT
    has basic security features, such as username and password authentication, but
    it lacks more advanced security features such as message encryption and authorization.
    On the other hand, CoAP/REST provides more comprehensive security features such
    as message integrity, confidentiality, and authentication using Datagram Transport
    Layer Security (DTLS). (f) MQTT has a larger maximum payload size than CoAP/REST,
    making it a better option for applications requiring large data transfer. CoAP/REST
    is designed for constrained environments and has a smaller maximum payload size.
    (g) MQTT provides higher reliability than CoAP/REST, particularly at higher QoS
    levels. MQTT QoS level 2 provides assured message delivery, while CoAP/REST only
    provides a best-effort approach. (h) MQTT is a standardized protocol that is widely
    used in the IoT industry. CoAP/REST, while also a standard protocol, is not as
    widely used in the IoT industry and is more commonly used in the machine-to-machine
    (M2M) communications domain. (i) MQTT has a lower overhead than CoAP/REST due
    to its simpler message format and smaller header size. This makes it a better
    option for applications that require low-latency communication and efficient use
    of network resources. Figure 5 serves as a comprehensive analysis of security
    risks and threats associated with the application layer of the Internet of Things
    architecture and is structured logically and systematically, thereby facilitating
    a more thorough understanding of the nature and complexity of these potential
    security issues. Figure 5. IoT risk taxonomy at the application layer. 3. Potential
    Security Issues with the Internet of Things Most Internet-enabled gadgets are
    not built with security in mind. There are, therefore, many inherent risks to
    the safety of the IoT, some of which can be catastrophic. IoT security has a paucity
    of defined standards and regulations compared to other technical solutions. What
    is more, most individuals are unaware that their IoT devices put them at risk.
    Some security challenges afflicting the IoT include a lack of transparency, insufficient
    security integration, vulnerabilities in open-source code, unpatched vulnerabilities,
    insecure APIs (application programming interfaces), and insufficient testing.
    Data, Network and Device Security Cybersecurity must be in place at every stage
    of the lifecycle of an IoT-interconnected environment to protect that infrastructure
    from unauthorized access, alteration, or loss. It is a plan of action that consider
    not only the technological safeties such as firewalls and virus protection but
    also the user protections such as proper authentication and access limitations
    and logical safeguards such as encryption and secure programming for applications.
    Table 2 provides a comprehensive overview of the security challenges in each layer
    and proposes suitable solutions to mitigate these risks. The critical analysis
    of research questions (i.e., attack, portrayal, and purpose) and the extensive
    review of related literature provides the research community with valuable insights
    and guidance in navigating the vast IoT security landscape. Table 2. Threats to
    the security of the Internet of Things. Thus, in context of Table 2, it is evident
    that the security flaws in the IoT may very well have devastating effects on businesses
    and individuals alike. Data theft, cyber-attacks, and the suspension of essential
    services are all possible results of a vulnerability being exploited. In addition
    to the risk of sanctions and legal action, security flaws can increase expenses
    for the companies employing the device. Additionally, hackers can use security
    flaws in IoT devices to access and change the data being transferred from these
    devices in the real world. Last, but not least, security flaws can be exploited
    to cause malfunctions or even total shutdowns of devices or networks. 4. What
    Distinguishes IoT Anomaly Detection from IT Security? The IoT infrastructure can
    vary widely depending on the specific use case and requirements. However, in general,
    a typical IoT infrastructure may include hardware, software, and network components
    such as: (a) Hardware: Microcontroller or microprocessor with low power consumption
    and wireless connectivity (e.g., Wi-Fi, Bluetooth, and Zigbee); Sensors and actuators
    for data acquisition and control; Power source (e.g., battery, energy harvesting,
    and power adapter); Memory and storage for data and software; Security features
    (e.g., secure boot, encryption, and access control). (b) Network: Wireless communication
    protocols (e.g., Wi-Fi, Bluetooth, Zigbee, and LoRaWAN); Network topology (e.g.,
    star, mesh, and point-to-point); Gateway or edge device for data aggregation and
    processing; Cloud or server infrastructure for data storage and analysis; Security
    protocols (e.g., SSL/TLS, VPN, firewalls, and intrusion detection/prevention).
    (c) Software: Operating System (e.g., embedded Linux, FreeRTOS, and Zephyr); Middleware
    (e.g., MQTT, CoAP, and AMQP); Database (e.g., Apache Cassandra, MongoDB, and InfluxDB);
    Application Development Tools (applied) (e.g., software development kits (SDKs)
    and integrated development environments (IDEs). In consideration with benchmarking
    details of applied hardware, network and software specifications, when compared
    to standard IT security technologies such as firewalls, IDSs, and Data Security
    and Consequence Administration Procedure (DSCAP), the idea of anomaly discovery
    is very distinct both technologically and in terms of the fundamental monitoring
    strategy. As seen in Table 3, detecting anomalies requires looking within, as
    well as outside of, a network. Anomaly detection is an alternative method of security
    to the more conventional firewalls and intrusion detection systems. When deciding
    whether a certain action poses a risk, both rely on the latest security updates
    released by IT security service providers. As a direct consequence, current strategies
    for protection are continually falling behind potential attackers. As the so-called
    blacklists maintained by security entities are never updated until after an attack
    has already taken place. This kind of patching leaves networks vulnerable to intrusion,
    especially in the IoT/IIoT/IoMT industry, where updates are often delayed preventing
    disruption and failures. Table 3. Limits for detecting anomalies in data. Consequently,
    authenticating IoT devices is crucial to establishing confidence that the devices
    being linked are in fact what they claim to be. Therefore, effective access control
    can regulate who can access and utilize what resources and under what conditions.
    5. Classification of Internet of Things Access Control The term “access control”
    describes a class of security mechanisms that restrict users’ permission to access
    particular components of a networked computing and sensing environment. It is
    a fundamental part of any governance system designed to protect an organization’s
    or a municipality’s Internet of Things infrastructure from outside threats. Access
    control can be physical or logical, depending on the system’s needs being protected.
    An IoT-enabled access control system is a useful tool for ensuring the safety
    of buildings, classrooms, dormitories, and intangible technological assets such
    as servers and computer equipment. Logical access control is a method of controlling
    who may access what is on a network, including computers, servers, and data. Logical
    access control systems examine multiple identifiers such as passwords, PINs, biometric
    scans, cryptographic keys, etc. to verify and provide access to the appropriate
    individuals or entities. Today’s complex IoT landscapes, which include on-premises
    and cloud-based resources, make it difficult to manage an access control system.
    To function, access controls must first determine the identity of the requesting
    device or entity, verify that the requesting process or service is indeed who
    it claims to be, and then allow the requesting account or IP address the privileges
    and access rights corresponding to that identity. Easy-to-Use Reference File systems
    and procedures such as Access Protocol and Security Assertion Markup Language
    are only two examples of the kinds of things that do give access controls by verifying
    and approving users and organizations before providing them access to systems
    and operations. Conclusively, it is worth highlighting variety of access control
    systems available, and it is not uncommon for them to be used in tandem with one
    another as part of an enterprise’s identity and access management (IAM) framework.
    Applications can be installed locally, on the cloud, or in both scenarios. To
    varying degrees, it may prioritize either the internal or external access management
    of an IoT network’s user base. As highlighted in Table 4, in order to determine
    whether a user should be granted access, attribute-based access control (ABAC)
    looks at the user’s characteristics instead of their behavior. The fundamental
    benefit of ABAC is its ease of use, since the underlying technical permission
    settings can be masked behind user profiles, which can be modified by anyone possessing
    the appropriate rights and still ensure the user’s desired degree of access provided
    their attributes are true. Rouhani et al. [114] presented a method that offers
    a degree of transparency to the extent that those requesting access to a resource
    and the administrators of that asset may both advantage from using it. The technique
    that had been proposed presents a system architecture with an application that
    was predicated on Hyperledger Fabric. This technology achieves a high degree of
    effectiveness while maintaining a low level of computation complexity. The viability
    of the suggested approach was demonstrated through the examination of a use case
    involving separate digital libraries. Unfortunately, authors failed to address
    the coefficient of decentralization aspect of futuristic systems. When the Internet
    of Things infrastructure spans more than one point and a portion or all those
    spots run their own identity management, then the IoT infrastructure is said to
    have decentralized access permissions. Such an environment does not have a single,
    consistent policy and mechanism for controlling access to the network. If applied
    access control is not centralized, administration, management, and adherence will
    all be more difficult to manage, which is why it is so important to have logically
    centralized control. Table 4. Access control models and methods for the Internet
    of Things: an analysis. fully triumphed, partially triumphed, not triumphed. Li
    et al. [115] highlighted the ability of CP-WABE to safeguard information security
    on the Internet of Health Things (IoHT) as a crucial component of a highly appreciated
    security technique for attaining flawless access control. To tackle this limitation,
    a novel method of formulating access policies was devised that makes use of 0–1
    coding technology. The strategy’s proponents argue that it can be used to design
    a powerful and adaptable CP-WABE for the IoHT. In the projected method, contextual
    circumstances could enhance each rule’s preset building elements, known as strategy
    bits, which were connected with agents and other functional restrictions. The
    applied steps of reform were: (a) defining rules for adopters, hosts, applications,
    and other entities, as well as activities and resources, (b) forming strategies
    with reusable building blocks called “regulatory elements”, and (c) “governance
    modules”. Access control was tested and found equally effective in firewall, server,
    application, database, and data layer. Song et al. [116], introduced an innovative
    IoT management approach that leverages distributed ledger technology to aid organizations
    in setting up an effective supply chain. The design relies on a peer-to-peer fallback
    procedure, a private data segregation and communication approach, and a security
    token-based authentication and authorization system. The access control system
    was divided into two subsystems: the registrar and the inspection. The primary
    responsibility of the registrar’s role was to enroll data in accordance with a
    registration regulation that must be upheld by all businesses in the supply chain.
    Additionally, it is flexible enough to accommodate rescheduling or even outright
    cancellation. The inspection section monitors the subjects’ behavior and searches
    for signs of misconduct before rendering judgments and handing down penalties.
    Researchers were able to strengthen IoT access control and guarantee the safety
    of all permitted devices by keeping track of all important data and events in
    a distributed ledger. The loss of even a single node in a blockchain network might
    make reaching consensus unfeasible, leading to the eventual collapse of the network.
    The data of the peer with the problem might be lost if it does not commit immediately.
    By employing a backup peer, both the primary and backup peer may connect to the
    inspection server and start collecting real-time data. Without the requirement
    for a dedicated subchannel, sensitive information may be sent and stored utilizing
    the system’s built-in data segregation and communication modules. The projected
    method guaranteed the stability of the system by taking into consideration all
    aspects of network performance and scalability. Considering aforementioned justifications,
    an immutable, transmittable identifier of authority should be used in “capability-based
    access control”. The identification serves as both a link to and authorization
    to utilize a certain resource. To gain access to a feature, a device must go through
    a different channel than the entity itself. Public capabilities may be accessed
    by any device, whereas private ones can be used by only those who have been granted
    access. The IoT node can “borrow” the capability it needs to get a storage pointer
    if it has previously produced and obtained it. Consequently, the form that a capability
    can take upon acquisition is determined at the moment of its creation. Bouras
    et al. [117] presented IoT-CCAC, an IoT consortium-specific distributed capability-based
    access control framework. Since it has the best qualities of both blockchain and
    traditional libraries, a blockchain-based repository is used to achieve excellent
    efficiency. The authorization process confirms (a) the validity of the token,
    (b) the approval of access right, (c) the availability of the asset, and (d) the
    fulfillment of conditions. The IoT-CCAC methodology performed satisfactorily and
    is well suited for smart city and enterprise network use cases. By tracing the
    paths used by credentials, Li et al. [118] proposed “traceable capability-based
    access control (TCAC)” that makes it possible to revoke or modify access permissions.
    To facilitate the verification, denial, and modification of permissions, authors
    designed a novel competence token and established a temporal capability tree (TCT)
    that can produce privilege trends programmatically. Based on the results of the
    tests, TCAC is significantly quicker than both comparative methods, CapBAC [128,129]
    and xDBAuth [130], when it comes to confirming tokens and cancelling or updating
    them. A total of 73.3% of users/devices who were previously unavailable may now
    be located using TCAC’s assignment and random access features. This provides new
    insights into the relationships between permissions and delegation and opens up
    potential strategies for protecting IoT infrastructure throughout the use case
    environment. Fossen [119] advocated a capability-based, four-part approach. When
    interacting with a RESTful API, the web app must save and utilize the tokens granted
    to the user by the “authority-server (AS)”. The AS tracks and controls the tokens
    and functionality. The RESTful API’s filter component does the verification and
    then passes the feature on to the API’s main logic. Logic handles both database
    connectivity and information processing. In a total of nine steps, each part interacts
    with all the others. The filter and the logic were the two main components of
    the RESTful API’s design; the filter was responsible for receiving HTTP requests
    containing access tokens, validating those tokens, and retrieving the corresponding
    attributes before passing them on to the logic. After receiving a request from
    a user, the RESTful API logic runs the requested protocol function for which the
    authority has granted permission. The implemented experiment ensured granular
    control over which API calls were made while using the RESTful interface. The
    framework enabled the programmer to define the user interface options for the
    system. Coarse-grained access control was employed in the traditional library
    implementation, with access representing an entity rather than an attribute of
    content. Unfortunately, a few important design choices (such as, proof-of-concept
    (PoC), delete-all, update-all, read-all, etc. and policy sheets for ruleset API)
    were ignored during access control implementation that restricts supporting complex
    data models. One alternative is to implement “rule-based access control” (RBAC)
    [131]. Using RBAC, admins can grant or revoke privileges to devices based on their
    user profiles and the tasks they need to do. It is possible to categorize devices
    according to their responsibilities, since the amount of system access they need
    is often determined by the tasks they do inside a network. Roles that need access
    to the devices are then granted authorization to do so. If appropriate permissions
    are established for each task, access control will be easy to implement and maintain.
    The procedures of rule-based access control are as follows: the authorization
    rules are implemented throughout the whole access control system and are established
    by the security administrator. After the device has shown its legitimacy, its
    access is granted or denied depending on the comparison between the device’s permissions
    and the group policy. As a result of RBAC, the administrator can save time on
    procedural and ICT (information communication technology) support tasks, make
    the IoT system more secure and compliant, give each user and device only the permissions
    they need to do their job effectively, and free up extra throughput. Saha et al.
    [120] advocated distributed Decentralized Hybrid Access Control for smart contracts
    (DHACS) for the IIoT (industrial Internet of Things). The idea of DHACS was to
    provide a more accessible, dependable, and secure access control mechanism for
    IIoT. The approach depends on the useful properties of blockchain technology,
    particularly the supply of smart contracts that makes possible a decentralized
    heterogeneous access control mechanism. The DHACS consensus process integrated
    many models for access control into a single solution, including role-based models,
    rule-based models, and organizational models. With the current set of ongoing
    operations and their related access constraints in mind, the activity pooler and
    block maker churned out blocks. While DHACS was initially developed for use in
    a private blockchain, it can be simply converted to function with a public blockchain
    or consortium blockchain to accommodate geographically scattered dependencies.
    For blockchain-based permission to be deemed completely decentralized, several
    entities must take part in the process of specifying and evaluating security regulations.
    There are a few challenges with the DHACS, such as how can a decentralized and
    lightweight access control solution be offered for distributed and enhanced IoT
    settings, given that IoT devices have limited computing and storage capacity?
    How can we ensure proper authentication (federated, completely decentralized,
    etc.)? Can an established framework be used, or do many configurations need to
    be combined? What criteria must be met when picking a blockchain scheme (private
    or public)? Attempting to combine RBAC with blockchain technology presented its
    own set of difficulties [132]. The first concern is the incompatibility (lack
    of standardization) of blockchain applications in various contexts and sectors.
    The incompatibility between RBAC and blockchain technology can be addressed by
    designing smart contracts that incorporate RBAC policies. The smart contract can
    specify access control rules based on roles and permissions, and these rules can
    be enforced by the blockchain network. The RBAC policies can be defined by IoT
    network consortium that is deploying the blockchain network, and the smart contract
    can be programmed to ensure that only authorized entities can access the relevant
    resources. The second problem pertains to the amount of power consumed by the
    consensus mechanism that prevents wastage of resources. The process of reaching
    consensus can be energy-intensive, especially when using proof-of-work consensus
    algorithms. The third challenge relates to the latency that can be introduced
    by the additional bandwidth requirements of the blockchain network. Finally, implementing
    blockchain protocols in practical, nonindustrial environments presents a significant
    challenge. Ubiquitous security can be achieved in a specific IoT context by enforcing
    security regulations, closed-loop monitoring, simplifying governance, and implementing
    comprehensive defense. PerBAC (pervasive-based access control model) was based
    on a strategy presented by El Bouanani et al. [121] that was developed after extensive
    research was conducted on several well-known access controls. This strategy was
    being distinguished by its interpretation of the decision-making algorithm, its
    depiction of abstract entities with features as a core principle, and the collaboration
    aspects necessary to maintain the case under a wide range of network conditions.
    When this algorithm is paired with information gathered from IoT environments,
    it could help improve access control decisions based on dynamic rules and entities.
    The proposed comprehension of the features, the dynamic entities, and their exploitation
    through the “aco” protocol generates a unique access control model tailored for
    the IoT paradigm. Thus, as per aforementioned context, in order to establish a
    safe connection between a client device and a server across a network, the server
    must first broadcast an identity to the client device. The service can comply
    with the user’s request if the identification is entered when the user is physically
    close to the service. Pervasive secure access is distinguished by its ability
    to detect risk at each point of interconnection using a variety of techniques
    (such as spotting anomalies in client behavior or considering contextual clues
    such as location and device, etc.) and to request enhanced authentication from
    the client only when necessary. Yu et al. [125] proposed an Internet of Things
    (IoT) supply chain “secure data sharing scheme (SDSM)” that integrates blockchain
    technology with ciphertext-based entity encoding. This method can be used to set
    up tiered partnerships with different levels of access permissions. In addition,
    scholars proposed a metric based on the blockchain’s history ledger that could
    be used to rapidly establish the extent of relationships among users. To support
    partnership-based access controls, the approach combines participant-specific
    features into the ciphertext-based attribute cryptosystem. As a result, access
    permissions can be fine-tuned to a greater degree. It is expected that, by 2025,
    edge devices such as smartphones, wearables, connected automobiles, and so on
    would be responsible for creating 10% of all content and processing 45% of all
    data [133]. Fog computing is expected to replace artificial intelligence, Internet
    of Things application development, and fifth-generation wireless networks (5G)
    within the next five years. It is an extremely virtualized system that connects
    user devices to traditional cloud data centers for storage and processing power.
    Fog computing is characterized by its low latency, position tracking, edge location,
    extensibility, real-time data and cloud interface, and online interaction support.
    To prevent modifications to cache and increase its reliability, Wang et al. [123]
    proposed a new lightweight label-based access control system (LACS). In order
    to ensure security, LACS checks the legitimacy of the approved fog nodes. Specifically,
    the LACS might verify the fog nodes’ eligibility for access to the caching service
    by verifying the authenticity of the shareable files containing encoded label
    values. Increasing efficiency and minimizing risks were the driving forces for
    the creation of LACS. The proposed technique successfully removed the noise source
    (the malicious fog node), freeing up some additional space for data storage, network
    bandwidth, and computational resources. However, its execution time must be reduced
    to the lowest possible measurable value (in milliseconds). On top of that, it
    verifies that requests are coming from approved fog nodes before denying them.
    In fog-enhanced IoT systems, Zhang et al. [127] presented an outsourced access
    control scheme with hidden access structures (OAC-HAS). Three distinct benefits
    result from the OAC-HAS approach. In the first place, it presents a fog-cloud
    computing (FCC) setting that could be used for outsourcing. Then, it creates a
    method for external verification to ensure the integrity of data encryption activities
    carried out by fog nodes. Finally, it ensures confidentiality by sealing off access
    points to sensitive data. The suggested OAC-HAS method accomplishes a dynamic
    access policy, protects users’ privacy, and provides better precision in fog-enhanced
    IoT systems, as evidenced by the security evaluation and experimental outcomes.
    In order to share information with gateways, applications, servers, and cloud
    infrastructures, IoT devices require reliable connections to the aforementioned
    nodes. Communication between devices and the cloud must be continuous and two-way
    for there to be an IoT. Remember that a good proof-of-concept may fail when deployed
    globally; therefore, make connectivity a major priority early in your Internet
    of Things project to avoid problems later on. The majority of internet connections
    today originate from cellular devices. Since it leverages already-existent global
    networks, cellular IoT is an obvious choice for many applications. Since cellular
    networks are already present in virtually every region of the world, the IoT was
    able to leverage this preexisting infrastructure. Lee et al. [124] introduced
    a density-clustering based “base station (BS)” modulation solution for lowering
    the power requirements of IoT networks (DeCoNet). To determine the optimal number
    of BSs and their optimal locations while accounting for differences in user density,
    experts used features gathered via density clustering methods to design the narrowing
    perimeter used to change the status of BSs in complete cellular IoT networks.
    Researchers determined the boundaries of each cluster’s area by averaging the
    distance between the cluster’s farthest border users in DBSCAN with the average
    routing in OPTICS. System-wide security necessitates network level slicing, the
    protection of application-based functions both in distributed clouds and in edge
    computing interconnections. In mobile telecommunication networks, there are four
    main routing components: the radio access network, the core network, the transport
    network, and the linking channel. Different types of traffic—signaling, data,
    and management—are carried by different layers of the network architecture. Every
    “sector” in a network consists of these three components. With regards to cybersecurity,
    all three layers are open to various forms of attack. The three-dimensional world
    is vulnerable to several threats that are universal. The access control system
    of a mobile network is essential. If the security of the core network or the management
    systems is breached, it might put the entire mobile network’s services at danger.
    By applying suitable access control, reduction in data consumption and increased
    energy efficiency can be achieved. Sivaselvan et al. [126] argued that the software
    deployment of authentication protocols in IoT is riddled with security flaws,
    rendering the built-in authentication method useless. However, several of the
    security threats that are common on the Internet of Things can compromise the
    existing authentication methods for IoT that are not based on firmware. In addition,
    there are gaps in context-awareness, accessibility, compatibility, and cybersecurity
    in the state-of-the-art methods to access control for the Internet of Things.
    Due to these constraints, a reliable authentication and authorization solution
    was required to protect the ever-increasing number of IoT devices. As a result,
    Sivaselvan presented SUACC-IoT, a secure and trustworthy universal authentication
    and access management solution for the Internet of Things. Capabilities served
    as the foundation for the planned system, with each capacity acting as a token
    that granted authorized organizations access to the network. The capability token
    is utilized in the proposed system to manage and approve usage of scarce IoT resources.
    Simple cryptographic building blocks such as symmetric key encryption/decryption,
    message authentication codes, and cryptographic hashes are all that are required
    to operate the system. It was shown that SUACC-IoT is safe from the types of attacks
    often used in the IoT, including those that can be executed in probabilistic polynomial
    time. Conclusively, it is worth highlighting that multiple factors increase the
    difficulty of implementing authentication and authorization protocols in an IoT
    setting. That is because most devices are typically limited by their battery,
    memory, network speed, and computing power. The throughput of popular authentication
    protocols makes most conventional verification and permission approaches unfeasible
    to run on resource constrained IoT devices. Another issue is that devices are
    occasionally placed in locations where it would be challenging or impossible to
    implement physical security measures. In addition to this, there is an extremely
    diverse selection of hardware and software stacks that must be taken into consideration.
    As a result, in comparison to more conventional computer settings, we see widespread
    use of a wide variety of devices interacting via a wide variety of standards and
    protocols. 5.1. Cryptographic Paradigm in IoT To ensure that only authorized entities
    have access to data transmitted across IoT networks, cryptography can be used
    for authentication and encryption. When it comes to cryptography in the IoT, there
    are a few tried-and-true methods. Symmetric key encryption [134,135] is often
    used to secure confidential data because of its efficiency and speed. Another
    kind of encryption used in the IoT is public key encryption [136,137], which uses
    a pair of keys—a public one for encrypting and a private one for decrypting. Encrypting
    data with asymmetric keys takes more time, but the private key is never exposed,
    making this technique safer. Cryptography with elliptic curves [138,139], in addition
    to symmetric key algorithms, is used in the IoT. Digital signatures that can be
    used for authentication are generated using elliptic curve cryptography. Lastly,
    a process called hashing [140,141], in which the data is converted into a code
    of a set length, can be used to assure data integrity. This technique ensures
    that no data has been altered in transit. To confine the research boundary, we
    have identified the following lemmas: (a) An IoT device’s security measures must
    meet the standards set forth by the IoT device application. An “always-on” interoperability
    method is preferable to the periodic activation and deactivation of communication
    networks when an IoT system application has to transfer data often. Data from
    IoT devices should be gathered as efficiently as possible and compressed before
    being sent over the network. Coordinating several IoT Services delivered by a
    single communications module within a single IoT device application is essential
    for making efficient use of the network. To avoid seeming as though they are all
    functioning unison, application software operating on IoT devices should utilize
    a random pattern to request network connection. The data should be encrypted from
    edge to edge using the IoT system software. Before beginning any data transfer,
    the IoT device application must verify that it can communicate with the IoT platform.
    The level of security provided by the encryption technique should be commensurate
    with the IoT Service. (b) The IoT-based technology must follow all required communication
    specifications. The application running on the IoT device should not have to constantly
    reestablish the modem’s network connection. When an Internet of Things device
    framework does not require constant information exchange and therefore may function
    with some delay in its IoT Service. (c) IoT infrastructure should follow the throughput,
    latency, and yield-related parameters. The Internet of Things device application
    must include “temporal resynchronization” capability, both for local and distant
    connections. In order to conduct an accurate comparison of the various Internet
    of Things devices regarding communication technology and interoperability, there
    are a few essential factors that need to be taken into consideration. These crucial
    aspects include the type of protocol that is now being utilized, the spectrum
    of the connectivity, the throughput, the reaction time, the power efficiency,
    and the dependability. Zigbee [7], Wi-Fi [8], Bluetooth [9], LoRaWAN [14], and
    Z-wave [142] are just some of the popular choices accessible when it comes to
    protocols. There are also a lot of other possibilities available. It is essential
    to keep in mind that the kind of protocol and interface that is utilized will
    change depending on the particular application, as well as the devices that are
    being utilized. For instance, if two different devices need to communicate with
    one another across a considerable distance, then a wireless protocol such as LoRaWAN
    may be the ideal option. On the other hand, if two devices need to communicate
    with one another over a short distance and the amount of data being sent is minimal,
    then a wired protocol such as Serial Peripheral Interface (SPI) may be the superior
    option. As a result, cryptography is applied in Internet of Things (IoT) deployments
    to safeguard the communication that occurs between the various devices. As a result,
    cryptography is applied in Internet of Things (IoT) deployments to safeguard the
    communication that occurs between the various devices. Examples of typical cryptographic
    approaches that are utilized in Internet of Things (IoT) communication include
    asymmetric-key algorithms such as Elliptic Curve Cryptography (ECC) and hash functions
    such as the Secure Hash Algorithm. Both algorithms are used to hash data. Another
    illustration of this would be symmetric-key algorithms such as the Advanced Encryption
    Standard (AES) (SHA). Additionally, cryptography can be used to safeguard the
    identities of devices on a network and to guarantee that data does not become
    corrupted or altered while it is being transmitted from one point to another.
    Figure 4 illustrates the organizational structure for the classification of cryptographic
    techniques used on the Internet of Things. There is a basic difference between
    symmetric and asymmetric encryption in that the former uses the same key for both
    encryption and decryption, while the latter uses two different keys—one public
    and one private. When compared to symmetric encryption, asymmetric encryption
    is more secure but slower and less efficient, because the private key is not shared.
    5.1.1. Symmetric Ciphering Block Cipher Methods Using a symmetric block cipher,
    information is encrypted and decrypted in chunks of a fixed size. Combining it
    with an authentication mechanism that uses a secret key to encode and decode the
    data adds an extra layer of security, such as Hash-based Message Authentication
    Code (HMAC) [143] or Cipher-based Message Authentication Code (CMAC) [144]. Block
    ciphers can be used in many different modes of operation, allowing for the creation
    of novel encryption systems. In the IoT, block cipher methods provide strong encryption
    for secure data transmission and are well-suited for low-power devices due to
    their efficiency. However, these methods can be vulnerable to attacks if the encryption
    key is compromised or if there are implementation errors, and they may introduce
    processing delays, which can be problematic for real-time applications. Data Encryption
    Standard (DES) IoT networks frequently use the symmetric key encryption method
    known as Data Encryption Standard (DES) [145] to safeguard sensitive data in transit.
    It is a tried-and-true method of keeping sensitive data safe, and it is still
    widely employed today. When encrypting data, DES employs the Feistel network and
    a 56-bit key. Due to the rapid advancement of technology, DES is no longer encouraged
    for use in new applications because of its weak key size in comparison to more
    modern algorithms. A more secure alternative to the DES algorithm is Triple DES
    (3DES) [146]. When compared to the original DES algorithm, 3DES’s key benefit
    is the greater security it provides. Since it employs not just one but three 56-bit
    keys, 3DES is considerably harder to crack than DES, which only employs a single
    56-bit key. In addition, assaults such as related-key attacks are harder to pull
    off against 3DES. Last, but not least, 3DES is compatible with DES, making the
    transition from DES to 3DES a simple one. Advanced Encryption Standard (AES) Alternatively,
    there are three different key lengths available when using an Advanced Encryption
    Standard (AES) [147] to encrypt data: 128 bits, 192 bits, and 256 bits. An AES
    key used in an IoT network must be securely maintained and periodically updated
    to prevent unauthorized access. Computational complexity is the fundamental downside
    of AES. Compared to other symmetric encryption methods such as DES, it is a sluggish
    algorithm. Additionally, AES encryption necessitates extra memory, which might
    be an issue in embedded systems with constrained resources [148]. TwoFish An improved
    version of the TwoFish encryption algorithm was presented by Hsiao et al. [149],
    which used a systematic method of design in conjunction with a chaotic masking-based
    method of exchanging encrypted data. Data transmissions employing chaotic synchronization
    have recently been called into question owing to attacks by hackers who deny data
    across the public network. Therefore, the TwoFish encryption method was combined
    with a chaotic synchronization strategy to foil hacker attacks. By doing so, the
    encrypted communication is shielded in a more secure network for transferring
    information. During our assessment, we found that the enormous block size (i.e.,
    block size of 128 bits, which can support a key size of 256 bits) and complicated
    key scheduling of the TwoFish algorithm make it unsuitable for hardware implementation.
    On top of that, as compared to other block ciphers, the algorithm’s slowness makes
    it less acceptable for use in contexts that necessitate rapid processing. In addition,
    unlike more common algorithms such as AES. TwoFish is a highly secure encryption
    algorithm that uses a large block size and key size, which makes it resistant
    to brute force attacks. Due to the computationally intensive nature of this encryption
    algorithm, it may not be suitable for IoT devices with limited processing power
    and resources. Nevertheless, TwoFish has not been the subject of much cryptographic
    examination because of its low adoption rate. It is possible that this might lead
    to yet-undetected security flaws. Figure 6 presents a taxonomy of cryptographic
    methods applied in the IoT environment. This diagram systematically analyzes the
    security threats present in the IoT environment and the various cryptographic
    methods that can be employed to mitigate those risks. The taxonomy categorizes
    cryptographic methods into four primary groups: symmetric, asymmetric, ciphering
    protocols and hashing methods. Each group has several subcategories that describe
    the specific encryption methods that can be used in the IoT environment. Comprehensive
    details are furnished in subsequent sections. Figure 6. Taxonomy of cryptographic
    methods applied in the IoT environment. Stream Cipher Methods By using the exclusive-or
    (XOR) function, stream ciphers combine a stream of plaintext sequences with a
    stream of pseudorandom cryptographic hash sequences to encrypt data. If used properly,
    stream ciphers can provide a robust layer of security for a wide range of communications
    settings, including wireless networks, the Internet, and associated transactions
    [150]. In order to encrypt data, stream ciphers frequently use a keystream that
    is calculated from a secret key. Data bits or bytes are encrypted using the keystream,
    and then, the keystream is discarded. RC4 The RC4 stream cipher [151] is now among
    the most widely used encryption tools because of its efficiency and simplicity
    of implementation. This stream cipher operates in bytes and allows for a wide
    range of key sizes. Depending on the use case, it can employ either a 64-bit or
    128-bit key size. RC4 is a popular cipher; however, it has several security weaknesses
    that make it less secure than others, such as AES. Furthermore, a brute force
    attack against RC4 may be used to recreate the key if the attacker has enough
    time and the message digests. Given this, it is clear that alternative ciphers
    such as AES should be used wherever possible. 2. Salsa20 A 256-bit key payload
    encryption that does not preserve keystream blocks across transmissions is the
    specialty of the Salsa20 crypt family [152]. When set to counter mode, Salsa20
    functions as a stream cipher that uses a checksum function to encrypt and decrypt
    64-byte messages. This is why it is widely used in many encrypted contexts and
    considered safe. Salsa20′s limited 64-bit nonce input hampers its usefulness in
    many applications. As a result of putting an emphasis on encoding efficiency rather
    than security, Salsa20 can become susceptible to certain attacks (i.e., side-channel
    attacks such as timing attacks) [153]. It can also be difficult to discern if
    decoding was successful, as there is no “crib” or known value in the plaintext.
    The lack of message integrity in Salsa20 presents an additional security risk
    that may reduce trustworthiness. 3. ChaCha20-Poly1305 The ChaCha20 [154] stream
    cipher generates a legitimate, seemingly random stream of bits by combining the
    outcomes of three basic arithmetic operations: addition, rotation, and exclusive-or
    (XOR). To guarantee the authenticity of a communication, Poly1305 authenticators
    generate two tags, an authentication tag and a verification tag. The ChaCha20-Poly1305
    [155] method has a longer nonce intervals and was developed for collision-free
    random number generation. The ChaCha20-Poly1305 algorithm has certain problems
    because of its susceptibility to spoofing attacks. This means that a threat actor
    can create communications that seem to come from a wanted source while in reality
    they are falsified. The method is also susceptible to key reuse attacks, in which
    an adversary encrypts messages using a single nonce and decrypts them using a
    different key. Lastly, but not least, the method is vulnerable to collisions.
    As a result, an adversary who discovers two communications sharing the same authentication
    tag may be able to generate a third message using the same tag. 4. Grain 128a
    Grain 128a [156] is a 128-bit key cipher that has an initialization vector (IV)
    that is 96 bits long and an output stream that is 128 bits long. A linear shift
    register, a nonlinear shift register, and an output function are the fundamental
    building blocks of the Grain-128a. Grain-128a is a lightweight cryptographic algorithm
    suitable for resource-constrained IoT devices. As a result of its birthday paradox
    vulnerability [157], Grain-128a is an insecure system. This indicates that the
    cipher’s security could be breached if an adversary gained access to the pre-output
    stream and utilized it to find a distinguisher that could be used to divulge the
    key. Such an attack would impair the cipher’s ability to keep information private.
    As a result of its slow key setup time, Grain-128a is also unsuitable for applications
    that need speed. Since, Grain-128a has a maximum key size of 128 bits, which could
    be inadequate for certain applications. 5. A5 Family The most widely recognized
    use for the A5 family of symmetric stream ciphers is as the cryptographic protocols
    used in mobile broadband and subsequent technologies. The A5 algorithms [158]
    are developed with a primary emphasis on both efficiency and safety, and they
    are meant to run on inexpensive, commodity servers. GSM is susceptible to attacks
    due to several shortcomings, one of which being the relatively short key length
    utilized in A5. The design and implementation of the algorithms are both incorrect,
    and both can be exploited by attackers, even those with limited computer capability.
    The decryption process might take place in a timeframe that is exceptionally near
    to real time. (a) A5/1 A5/1 is utilized to construct a 114 input bits of output
    sequence for every spurt, and then that string is XORed with the 114 bits before
    the burst is modulated [159]. The initialization of A5/1 is accomplished by utilizing
    a 64-bit key in conjunction with a publicly available 22-bit subscript. The A5/1
    cipher has a number of benefits, some of which include its relatively high resilience
    to well-known attacks, as well as its relatively minimal overhead, which makes
    it acceptable for usage on low-power devices. In addition to this, the key size
    is rather manageable, which contributes to its overall ease of implementation.
    The A5/1 cipher is vulnerable to linear and differential cryptanalysis, and its
    unchanging key requires regular key changes to stay secure. In addition, because
    of its minimal computing overhead, it is susceptible to cyber-attacks using brute
    force. (b) A5/2 A weaker version A5/2 was proposed to offer a scalable solution
    for inter-GSM (Global System for Mobile Communications (GSM) network communication,
    allowing for backwards compatibility with older GSM hardware [160]. A5/2′s benefits
    lie in its minimal complexity and its capability to offer robust encryption with
    a small key size. As an added bonus, it has a significant degree of protection
    against common plaintext vulnerabilities. However, A5/2 has several drawbacks,
    such as being vulnerable to statistical attacks and not being capable of providing
    reliable encryption with larger key lengths. The key used to encode a particular
    message can be determined by an intruder using a related key attack, which A5/2
    is vulnerable to. (c) A5/3 The Kasumi algorithm [161], created by Mitsubishi Electric,
    is a block cipher utilized in 3G and LTE (long-term evolution) cellular standards,
    and it forms the basis of the succeeding version A5/3 [158,162]. Security analysis
    has shown that A5/3, which employs a 128-bit key, is impervious to all currently
    known attacks. The encryption of A5/3 is more secure, it can withstand more known
    plaintext attacks, and it provides better performance in embedded applications.
    The intricacy of the system increases the effort required for both configuration
    and administration, which is a drawback. In addition, A5/3 is more computationally
    complex than A5/1, which makes it more power-hungry and, as a result, less appropriate
    for usage in portable electronic devices. 6. HC-128 Wireless communications, secure
    data storage, and secure access to content are just some of the many use cases
    for HC-128, which is built to withstand linear and differential cryptanalysis
    [163]. OpenSSL [164] and Botan [165] are two examples of cryptographic libraries
    that support it, and its specifications can be found in RFC 4503 [166]. The HC-128
    stream cipher is a great option because of its high level of security and reliable
    implementation. In addition to being extremely quick, it also requires relatively
    little memory. Key sizes can be anything from 64 bits up to 128 bits, providing
    an extra layer of protection. Unfortunately, the requirement for a reasonably
    large array of 4 kb is the most significant shortcoming of the HC-128 method.
    This can be problematic for use when memory is constrained. The method is novel
    and not as frequently used as other algorithms, therefore interoperability concerns
    across applications are possible. 7. Rabbit It is quite safe, since it uses 128-bit
    keys and a 64-bit initialization vector [167]. Compared to other popular encryption
    algorithms, Rabbit stands out due to its exceptional software efficiency, with
    a stated encryption/decryption throughput of 3.7 clock cycles per byte on a Core
    i7 CPU. It is effective in both software and hardware setups. Compared to other
    symmetric encryption techniques, Rabbit is more secure because it uses more complex
    functions for key formation and configuration transitions. These characteristics
    make it harder for an attacker to guess the cipher’s output. Furthermore, Rabbit
    is resistant to timing attacks since it encrypts each byte of data in the same
    amount of time. One limitation that Rabbit cipher may exhibit is that it uses
    a linear feedback shift register, which is not as secure as other applied algorithms
    [168]. Moreover, it has a limited key length of 128 bits, which makes it vulnerable
    to brute force attacks. 5.1.2. Asymmetric Ciphering Asymmetric Ciphering is used
    in the IoT for encryption and authentication. It offers scalability and flexibility
    for IoT applications, making it a great choice for secure communication. If there
    is a requirement for secure communication between two or more devices without
    the sharing of private keys, asymmetric encryption is the way to go. Its widespread
    use has led to its implementation in several practical contexts, including digital
    signatures and encrypted digital communication. Use cases for asymmetric encryption
    include remote access, file transmission, and the exchange of sensitive information.
    Furthermore, authentication and permission for safe access to networks and services
    are commonly provided using asymmetric encryption. Rivest–Shamir–Adleman (RSA)
    Crypto Algorithm RSA is a public key encryption method used in encryption for
    IoT technologies [169]. The RSA method is widely utilized in IoT applications,
    including SSL/TLS certificates, data encryption, and secure communication because
    of its reputation as an efficient and safe algorithm. The RSA method depends on
    how challenging it is to factor a huge integer into its prime components. The
    method employs both a public and private key for encoding and decoding. During
    our analysis and investigation, we have found that if the communication entity
    loses the private key, it becomes irreparable and may lead to security compromise.
    Furthermore, an adversary can read all communications if it controls the private
    key. The size of the payload of an RSA-encrypted communication varies with the
    length of the message and the size of the RSA key. The typical payload size for
    a 2048-bit key is about 256 bytes. Although RSA supports encryption keys of any
    length, the most common sizes are 1024, 2048, and 4096 bits. Encryption is more
    robust when using bigger key sizes. The advantages of using RSA in IoT include
    strong security, widely accepted and implemented, and suitability for key management.
    However, its disadvantages include high computational requirements, slower processing
    speed, and vulnerability to certain attacks if not implemented correctly. Digital
    Signature Standards (DSS) In order to ensure that all data transmitted over the
    internet is secure and legitimate, IoT relies on the Digital Signature Standard
    (DSS) [170,171]. The Federal Information Processing Standard (FIPS) defines methods
    for digital signature generation and verification. By using a specific DSS, information
    can be protected from modification during transmission. It also serves as an authentication
    mechanism for safe access to network-based resources. The major shortcoming of
    DSS is that there are many different digital signature standards and most of them
    are incompatible with each other, which complicates the sharing of data streams.
    Depending on the technique and the message length, the payload size of a DSS signature
    can range from very small to very large. The standard payload size is between
    40 and 50 bytes. DSS encryption keys are normally 1024 bits in length; however,
    this length can be increased for certain uses. For even more protection, IoT devices
    can make use of encryption keys that are 2048 bits in length or more. Elliptical
    Curve Cryptography (ECC) Public key encryption using elliptic curves (also known
    as Elliptic Curve Cryptography or ECC) allows for the generation of cryptographic
    keys that are lower in size, more secure, and more quickly generated than other
    methods [172]. As an alternative to the RSA cryptographic technique, ECC is widely
    utilized in applications and data storage. Due to its low power consumption, short
    key size, and efficiency in encryption and decryption, ECC is well suited for
    usage in IoT devices. ECC is utilized in digital signatures, encrypted file transfers,
    encrypted emails, and secure network access. The ECC security relies on the difficult-to-solve
    elliptic curve discrete logarithm challenge. The payload size of ECC is determined
    by the type of ECC algorithm that is being used in conjunction with the length
    of the encryption key. The payload of an encrypted message is proportional to
    the size of the encryption key. For instance, the payload size and required encryption
    key size for ECC NIST P-256 and ECC NIST P-384 are both 256 and 384 bits, respectively
    [173]. Regrettably, ECC necessitates more computing power and memory than alternative
    public key techniques. Moreover, compared to other public key methods, ECC is
    more susceptible to quantum computing attacks; hence, it is essential to use a
    key size that is high enough to offer the appropriate level of security. Thus,
    ECC offers strong security with smaller key sizes, making it ideal for resource
    constrained IoT devices. However, its implementation requires more computational
    power than traditional cryptography, which can impact performance and increase
    power consumption. NTRUEncrypt The lattice-based encryption system NTRUEncrypt
    [174] can be used to offer post-quantum security for IoT devices. Its lightweight
    architecture makes it ideal for protecting devices with limited resources, such
    as those seen in IoT (Internet of Things) implementations in the linked home,
    industrial, and automotive sectors. Since it makes effective use of resources,
    NTRUEncrypt is also an appealing solution for delivering post-quantum security
    to IoT devices. This makes it an interesting alternative. Depending on the message
    length and the NTRU key size, the NTRUEncrypt payload size will vary. The normal
    payload size for the APR2011_439 configuration [175] is roughly 54 bytes. Keys
    greater than 439 bits are supported by NTRUEncrypt, however this is the default
    length. There is a direct correlation between key size and encryption security;
    bigger keys are more robust. The primary drawback of NTRUEncrypt is the potential
    for higher storage and transmission costs due to the size of its public keys.
    The size of the key used determines how secure it is, and it can be computationally
    costly. 5.1.3. Ciphering Protocols IoT ciphering techniques are applied to encrypt
    data in transit to the cloud or between IoT devices. Verification and encoding
    are often used together in these systems. Cryptographic protocols such as IPSec,
    S/MIME, TLS, and SSH are used to secure data and communications over the internet.
    IPSec is a suite of protocols used for authentication and encryption of IP packets,
    while S/MIME is used for secure data transmission. TLS is the successor to SSL
    and is used to secure web traffic using HTTPS. Finally, SSH is a secure shell
    protocol used for secure remote logins and file transfers. Internet Protocol Security
    (IPSec) Encapsulating Security Payload (ESP) and Authentication Header (AH) are
    two instances of the suite of protocols known collectively as Internet Protocol
    Security (IPSec) [176]. The AH protocol protects the validity and integrity of
    the IP packet, whereas the ESP protocol protects privacy and secrecy. Due to the
    fact that one of the most important goals of the Internet of Things is to ensure
    the safety of data while it is being transmitted between various devices and the
    cloud, IPSec has become increasingly popular. IPv6, the Internet’s next-generation
    protocol, incorporates IPSec by default; nonetheless, IPSec is backwards compatible
    with IPv4. Additionally, IPSec is not just backwards compatible with protocols
    such as TCP/UDP but also with cryptosystems such as the RSA and Digital Signature
    Algorithm (DSA). Furthermore, it can send data across public networks safely,
    since it can tunnel past network address translation (NAT) and firewalls [177].
    Our analysis found that IPSec’s configuration and management can be challenging,
    making it one of the protocol’s key downsides. Moreover, IPSec requires two distinct
    protocols—the AH protocol and the ESP protocol—both of which can be challenging
    to maintain with and debug. In addition to that, IPSec is not equipped to deal
    with multicast traffic; thus, it could not work for your needs. Conversely, IPSec
    does not guarantee the confidentiality of transmitted data, since it does not
    provide end-to-end encryption. Secure/Multipurpose Internet Mail Extensions (S/MIME)
    The Internet of Things uses the encryption standard S/MIME (Secure/Multipurpose
    Internet Mail Extensions) while transferring data across the network [178]. In
    order to perform its two main functions, S/MIME requires the use of digital certificates
    for verification and encryption. When it comes to protecting the data provided
    by Internet of Things devices, enterprises can rest easy knowing that S/MIME provides
    the highest degree of encryption available. Users may quickly and easily adopt
    this protocol to secure their Internet-connected devices, because S/MIME is compatible
    with Windows IoT. S/MIME’s include authentication, nonrepudiation, data integrity,
    and encryption. S/MIME requires a user to have an X.509 digital certificate with
    both a public key and a private key in order to function. Encryption is performed
    with the public key, whereas digital signatures are generated with the private
    key. A communication can only be secure if it is encrypted using the recipient’s
    public key before being sent. Digital signatures require the sender to sign the
    communication using their own private key. For verification, the recipient will
    utilize the sender’s public key. In addition, S/MIME supports secure file transfer
    protocols such as FTPS and SFTP, and it can also be used for secure data transmission
    utilizing Transport Layer Security (TLS) [179]. Lastly, S/MIME also serves to
    establish a secure connection between web servers. One of the limitations of S/MIME
    is that it is not always feasible to authenticate the sender’s identity, which
    might lead to security concerns with regard to the management of identities. Thus,
    S/MIME is a suitable choice for IoT devices that require secure communication
    with end-to-end encryption and digital signatures to protect sensitive data. Nonetheless,
    the need for exchanging public keys can pose difficulties in deploying it on a
    large scale. Moreover, the intricate and resource-intensive implementation of
    S/MIME can have an impact on the performance of devices with limited resources.
    Transport Layer Security (TLS) To protect sensitive information and guarantee
    message authenticity, integrity, and nonrepudiation, TLS is utilized. TLS enables
    authentication using digital certificates and supports several different encryption
    techniques [180]. TLS also reinforces a number of key exchange protocols, such
    as RSA and Diffie-Hellman, in order to enable clients and servers to engage in
    secure connection handshakes with one another. TLS 1.3 is the most recent version
    of the protocol, and it incorporates a few extra security measures [181]. These
    additional security features include forbidding Rivest Cipher 4 (RC4) negotiation,
    perfect forward secrecy (PFS), and required message-digest-5 algorithm (MD5) cryptographic
    hashes. The overhead that relates to the TLS protocol can be problematic for IoT
    servers that have a restricted amount of processing power and memory. This is
    one of the downsides of the TLS protocol. In addition, TLS has the potential to
    be susceptible to man-in-the-middle (MiTM) attacks [182]. However, TLS can also
    increase the processing overhead and communication latency, which may be problematic
    in resource-constrained IoT devices with limited processing power and battery
    life. Secure Shell Protocol (SSH) IoT makes use of a network protocol known as
    the secure shell protocol (SSH) to provide safe access to a variety of resources
    and systems. SSH is utilized in the process of securing, configuring, managing,
    maintaining, and operating network routers, servers, and other components of core
    network [183]. Authentication, data encryption, and data integrity are all covered
    by SSH protocols. An SSH connection encrypts data and communication between two
    devices. Data is encrypted with a symmetric key algorithm while using SSH, such
    as with AES or DES. In addition to this, it authenticates the user by employing
    an asymmetric key method, such as RSA, to exchange keys with them. When authenticating
    communications, SSH is also capable of using a variety of hashing algorithms,
    such as SHA-1 (Secure Hash Algorithm 1) and MD5. In addition, the SSH protocol
    supports a variety of tunneling protocols, such as port forwarding and X11 forwarding,
    which enables users to safely tunnel network connections by using the SSH protocol.
    Since SSH does not provide authentication of the server, an IoT device could not
    be aware if a malicious server is being utilized, because SSH does not support
    authentication of the server. As SSH is not inherently compatible with a few operating
    systems (e.g., Tizen OS v4.0), it is possible that additional software may need
    to be installed in order to use it [184]. This is another one of SSH’s many downsides.
    In fact, SSH is known to make extensive use of a server’s resources, which might
    inhibit its overall performance. In addition, SSH calls for the use of an external
    authentication system and calls for the environment to be appropriately set up
    for security. 5.1.4. Hashing (Integrity) IoT apps employ hashing algorithms such
    as MD5 and SHA-1 to keep data safe. Hash methods are used to generate a fixed-length
    outcome from an input of arbitrary length. The hash has the potential to detect
    any modifications to the primary data, making the latter unchangeable and secure
    [185]. SHA-1 and SHA-2 are the two most common secure hashing algorithms. SHA-1
    is a relatively ambivalent algorithm that generates a 160-bit hash, while SHA-2
    is more secure and generates a 256-bit hash. The most up-to-date member of the
    family, SHA-3, generates a hash value of 512 bits [186]. The fundamental benefit
    of adopting hashing algorithms in Internet of Things applications is that they
    provide a safe method of authenticating data, ensuring that the data has not been
    tampered with and is originating from a trustworthy source [187]. Hashing algorithms
    are perfect for use in encryption, since they are quick to compute and produce
    a different hash for each input. SHA-1 SHA-1 creates a 160-bit hash, considerably
    boosting the security and integrity of stored data. In order to verify that information
    has not been tampered with in transit, the SHA-1 technique is used to generate
    a unique hash for each input. SHA-1 is widely used in IoT applications since it
    is fast and can generate a different hash for each input, and it is also significantly
    faster than its counterparts [188]. To verify that a message has not been tampered
    with, another technique called HMAC (Hash-based Message Authentication Code) is
    used, and it makes use of SHA-1. The primary drawback of SHA-1 is that it lacks
    security; as a result, it is now deemed obsolete and is no longer recommended
    for use in applications that need high levels of security. SHA-2 Numerous IoT
    implementations rely on the secure hashing technique SHA-2 for data transmission
    and storage. It is a hash function used in cryptography that generates an output
    of a predetermined length from the input. When compared to its predecessor, the
    Secure Hash Algorithm 1 (SHA-1), SHA-2 offers increased security and resistance
    to common attack vectors [189]. To generate a fixed-length hash from an input
    message of arbitrary length, SHA-2 relies on the Merkle-Damgard technique. It
    is made up of four individual algorithms: SHA-224, SHA-256, SHA-384, and SHA-512
    [190]. The hashing algorithms SHA-224 and SHA-256 use 32-bit blocks, whereas SHA-384
    and SHA-512 employ 64-bit blocks. SHA-2′s key benefits are its security, speed,
    and reliability. The security provided by SHA-2 is far superior to its predecessor,
    SHA-1. In addition, it is quicker than SHA-1, which makes it applicable for a
    far wider variety of applications. As an added bonus, SHA-2 is secure, since it
    can withstand lengthier attacks [191]. The most significant disadvantage of SHA-2
    is its compatibility, since the length of the hash, which is 256 bits, may be
    excessively large for certain applications. SHA-3 Internet of Things applications
    use the cryptographically robust hashing algorithm SHA-3 to hash data securely.
    Using SHA-3′s hashes is a reliable way to ensure the safety and privacy of data
    with a 512-bit size [152]. SHA-3 is a reliable hashing algorithm, since it cannot
    be compromised by collision attacks [192], unlike SHA-1 and SHA-2. Furthermore,
    SHA-3 is superior to other algorithms in speed and its ability to generate a different
    hash for each input, making it a prime candidate for use in cryptography. The
    main problem of SHA-3 is compatibility concerns. Incompatibilities can occur between
    applications and Runtime environments that do not support SHA-3. The 512-bit hash
    length may also be excessive for some applications. MD5 IoT applications frequently
    use MD5 (message-digest-5), a cryptographic hash function, for purposes including
    data error checking, authentication, and digital signatures. It is designed to
    have minimal collisions and has a low computational cost [193]. Therefore, it
    can be implemented in systems that need a high level of safety. MD5′s key benefits
    in IoT applications are its efficiency, low collision rate [194], and strong security.
    It is very simple to use and incorporate into programs, because it is widely supported
    in most programming languages. The MD5 hashing algorithm is susceptible to collisions,
    which is the primary drawback of employing it in IoT applications. The likelihood
    of two distinct inputs yielding the same hash is minimal, yet it is nevertheless
    possible. This could lead to problems such as authentication bypass. BLAKE2 The
    BLAKE2 hash function is significantly quicker than Sha-256, while yet being at
    least as safe as the accepted standard, SHA-3. For the optimum efficiency on multiprocessor
    or parallel processing CPUs, BLAKE2 provides the eight-way parallel BLAKE2sp,
    as well as the four-way parallel BLAKE2bp. When it comes to the Internet of Things,
    BLAKE2 has the algorithms that are needed to meet network specifications. BLAKE2
    is at its best on 64-bit processors, where it can achieve throughputs of one gigabyte
    per second (3.08 cycles per byte) on an Intel Core i5-6600 [195]. The BLACK2 hash’s
    primary benefits are its high resilience to brute force attacks and its low memory
    requirements. In addition, the technique has modest computing requirements, making
    it suitable for use in low-power Internet of Things devices. The main disadvantage
    of the BLACK2 hash is that it is vulnerable to collision attacks [196]. RIPEMD-160
    Internet of Things (IoT) applications make use of a cryptographic hash function
    called RIPEMD-160, which has a bit length of 160. The RIPEMD-160 algorithm produces
    a one-of-a-kind, unforgeable hash for each input, which can be used to check the
    validity of the information [197]. It is immune to collision attacks, and RIPEMD-160
    is regarded more secure than its predecessor, RIPEMD-128. RIPEMD-160 is ideally
    suited for use in encryption, since it is quicker than many alternative algorithms,
    and it can provide a unique hash for each input. The fundamental flaw of the RIPEMD-160
    cryptographic hash algorithm is that its output is only 160 bits in size. This
    renders the system vulnerable to brute force attacks, since an attacker may try
    every possible value for the 160 bits until they discover one that produces the
    same result as the message being cracked. Whirlpool For the purposes of encryption
    and data integrity checking, Whirlpool generates a 512-bit hash. The Whirlpool
    algorithm creates a unique, immutable hash for each input, which can be used to
    determine whether data is legitimate. Since it is immune to collision attacks,
    Whirlpool is a more robust hashing algorithm than SHA-1, SHA-2, and RIPEMD-160
    [198]. Whirlpool’s primary drawback is that it needs more memory than other hashing
    algorithms to maintain and analyze the data. Furthermore, length extension attacks
    may be used against Whirlpool, allowing an attacker to take a known hash and append
    additional characters to it without altering the resultant hash. Tiger The Tiger
    cryptographic hash method was developed specifically for remote systems. Any message
    submitted to the algorithm will be converted into a 128-bit digest. Tiger can
    withstand brute force attacks while yet being incredibly lightweight and functional
    [199]. Tiger’s key benefit is that it uses minimal processing power, making it
    suitable for use in battery-operated Internet of Things gadgets. Tiger hashing
    is vulnerable to pseudo-near-collision attacks, which can be used to create two
    different inputs that produce the same hash. 6. Roadmap for Securing IoT Devices
    The exponential growth of IoT devices has rendered them vulnerable to cyber-attacks,
    necessitating the development of a roadmap to secure these devices through the
    formulation of guidelines and standards. Such a roadmap must consider the challenges
    inherent in securing IoT devices, including the diverse range of devices and communication
    protocols, resource limitations, and the need for Denial-of-Service (DoS) resistance.
    Additionally, it must consider end-to-end security, novel network architectures,
    bootstrapping of a security domain, and operational challenges. The security measures
    implemented must be able to handle the complexities associated with mobility and
    IP network dynamics, ensure cryptographic agility, and safeguard individual privacy.
    Furthermore, incorporating Artificial Intelligence (AI) and Machine Learning (ML)
    to enhance IoT security is critical. By leveraging AI and ML, entities can significantly
    improve their ability to safeguard sensitive data, forestall cyber-attacks, and
    minimize the risk of business disruption. Likewise, the quantum security rules
    related to IoT can have a significant impact on the security of IoT devices and
    networks. Quantum computing has the potential to break many of the cryptographic
    algorithms that are currently used to secure IoT devices and networks. This means
    that sensitive data, such as personal and operational information, can be at risk
    of being accessed by unauthorized parties. However, the development of quantum-resistant
    cryptographic algorithms can help mitigate these risks. These algorithms are designed
    to withstand attacks from both classical and quantum computers, making them a
    more secure option for IoT devices and networks. In addition, the implementation
    of quantum key distribution (QKD) can provide a higher level of security for data
    transmission between IoT devices. QKD is a method of encrypting data using quantum
    principles, which can make it impossible for a third party to intercept or access
    the data without being detected. In context of access control paradigm, one promising
    future direction is to incorporate contextual information into decisions. This
    means considering the node’s location, time of day, and other factors when determining
    whether to grant access to a resource. Another direction is to leverage the power
    of blockchain technology to implement decentralized access control mechanisms
    that can provide better security and privacy guarantees. Ultimately, access control
    policies need to be updated and refined continually as new threats and vulnerabilities
    emerge. 6.1. How Can Artificial Intelligence (AI) and Machine Learning (ML) Change
    IoT Security? As technology advances, so do the threats to security posed by malicious
    actors. Artificial intelligence (AI) and machine learning are two technologies
    that can be used to protect IoT systems from cyber-attacks in the future. Fundamentally,
    AI can be used to analyze massive amounts of data quickly for potential anomalies
    or suspicious activities, which could indicate a breach in security protocols.
    By leveraging powerful algorithms, AI can detect patterns faster than humans ever
    could and alert network administrators when it finds something out of place before
    any damage is done. This type of proactive approach will help ensure that networks
    remain secure even if attackers try novel methods or techniques not seen before
    by traditional cybersecurity solutions, such as firewalls or antivirus software
    programs. Subsequently, machine learning offers another layer of protection against
    cyber-attacks because it allows computers to learn from past experiences without
    being explicitly programmed with rules on how they should react in certain situations.
    Machine learning models also allow for real time analysis meaning they are always
    up-to date on current threats while still being able to identify new ones as well;
    this helps reduce false positives caused by outdated threat signatures found within
    legacy systems, making them more reliable overall compared to other existing solutions
    out there today. Ultimately, both AI and machine learning offer scalability, which
    means these technologies will not require additional resources every time you
    need them due to their ability to self-adjust according to different parameters
    set forth beforehand. With all these advantages combined into one comprehensive
    package makes clear why many experts believe utilizing artificial intelligence
    and machine learning-based IoT security solutions will become standard going forward,
    protecting device relay data better than ever before. Adversarial attacks, in
    which an adversary deliberately manipulates data to deceive the system, are a
    serious problem for AI and ML, and some algorithms are difficult to read, leading
    to challenges in identifying the underlying cause of security breaches [200].
    Techniques such as explainable AI and adversarial training have been offered by
    researchers as ways to address these issues. Artificial intelligence and machine
    learning have their drawbacks, but they also have their benefits, such as the
    ability to process massive volumes of data and spot anomalous behavior in real
    time [201]. For this reason, including explainable AI and adversarial training
    can improve the trustworthiness and reliability of IoT systems by providing transparency
    and understanding of the AI models and their decision-making processes, as well
    as enhancing the resilience of these systems against potential cyber-attacks and
    adversarial behavior. This can ultimately lead to better performance and user
    experience and increased adoption and acceptance of IoT technologies. 6.2. Risk
    Factors The development of AI and ML-based IoT security is a double-edged sword.
    On the one hand, it offers many advantages in terms of increased efficiency and
    improved protection from cyber threats (i.e., as stated in an earlier section);
    on the other hand, there are potential risks associated with its use that must
    be carefully considered. In this section we have discussed three key areas where
    AI and machine learning can pose a significant risk to IoT security: privacy concerns,
    algorithmic bias, and data breaches. To begin, there are security and privacy
    concerns associated with IoT devices that use artificial intelligence. As these
    systems become increasingly sophisticated at recognizing patterns in user behavior
    or detecting anomalies in system usage data, they may inadvertently collect personal
    information without users’ knowledge or consent, potentially leading to serious
    violations of individual rights, such as the right to privacy under GDPR regulations.
    It is important for IoT network administrators to use these technologies to ensure
    that their policies protect against unauthorized collection while still allowing
    them access only to the necessary data needed for practical monitoring purposes.
    The second issue is the prevalence of acknowledged bias in AI technology employed
    by businesses, from parametric search engine results to facial recognition software
    used by law enforcement organizations worldwide. The incorrect detection of hostile
    behavior on an IoT network can lead to social injustice and false alarms if the
    algorithms employed to make those judgments are biased. Before implementing new
    algorithm-based solutions, businesses should do thorough testing, independent
    audits, and frequent reevaluation procedures. Furthermore, organizations should
    spend the time and effort to set up secure configurations across all connected
    devices. They should also ensure that the patching and updating process is carried
    out regularly to close any newly discovered vulnerabilities before they are exploited
    maliciously. Ultimately, while there are numerous benefits given by the deployment
    of AI and ML-driven Internet of Things security systems, there are also substantial
    concerns that must be considered, lest we face tragic results in the future if
    appropriate precautions are not taken right now. 6.3. Future Directions: Decisive
    Remarks We envision the following future directions of IoT security in the context
    of ML, AI, and pervasive computing: (a) Development of lightweight and efficient
    ML and AI models for IoT devices with limited resources while ensuring their security
    and privacy. (b) Exploration of new security models and protocols for securing
    communication and data exchange among heterogeneous IoT devices and networks.
    (c) Adoption of pervasive hardware-based security solutions such as trusted execution
    environments, secure boot, and secure storage to strengthen the security of IoT
    devices and prevent physical tampering and attacks. (d) Integration of adaptive
    and scalable blockchain technology to enable secure and transparent data sharing
    and management among IoT devices and stakeholders. (e) Design and development
    of new authentication (e.g., enabled with lightweight quantum encryption) and
    access control mechanisms (e.g., continuous authentication, context awareness,
    decentralization, and user-centric) to ensure the integrity and confidentiality
    of IoT data and prevent unauthorized access and usage. (f) Exploration of new
    models and frameworks for addressing privacy and ethical concerns in the collecting,
    processing, and sharing of IoT data, particularly in pervasive computing. 7. Conclusions
    and Our Recommendations The research indicates that, as IoT technology advances,
    the associated security risks also increase. The increasing frequency of cyber-attacks
    involving the exploiting of a typical IoT device to gain access and compromise
    the entire network has underscored the importance of IoT security. Ensuring the
    safety of networks that rely on IoT devices has become an essential priority.
    IoT security encompasses a diverse range of techniques, strategies, protocols,
    and actions that aim to minimize the growing vulnerabilities posed by IoT to modern
    businesses. To ensure that the IoT networks are protected from potential attacks,
    it is crucial that computer science/engineering experts, such as researchers,
    scientists, and academics, stay up to date with the latest IoT security solutions.
    This paper provides a comprehensive overview of the most critical security considerations
    related to the Internet of Things. We briefly review how literature suggests using
    IoT security on various tiers. Furthermore, we give a transient breakdown of the
    IoT threat vectors and mitigation strategies. We analyze the consequences of the
    attack and link them to the countermeasures that have been recommended. IoT-enabled
    enterprises ought to understand and develop comprehensive monitoring tools to
    quickly detect any unusual activities on their networks. These tools should utilize
    advanced detection tools by exploiting enabling technologies, such as machine
    learning and artificial intelligence algorithms, to analyze large datasets generated
    during normal network operations and alert administrators of deviations from the
    norm. By allowing organizations to respond quickly to security incidents and anticipate
    potential threats before they occur, layered-focused defense mechanisms can significantly
    minimize the downtime resulting from cyber-attacks. Author Contributions Conceptualization,
    U.T. and I.A.; methodology, U.T., I.A. and A.K.B.; software, U.T., I.A. and K.S.;
    validation, U.T., I.A. and A.K.B.; formal analysis, U.T., I.A., A.K.B. and K.S.;
    resources, U.T.; data curation, U.T. and K.S.; writing—original draft preparation,
    U.T. and I.A.; writing—review and editing, U.T., A.K.B. and K.S.; visualization,
    U.T. and A.K.B.; supervision, U.T.; project administration, U.T. and funding acquisition,
    U.T. All authors have read and agreed to the published version of the manuscript.
    Funding This research was funded by Prince Sattam bin Abdulaziz University, Saudi
    Arabia through project number 2023/RV/8. Institutional Review Board Statement
    The study was conducted according to the guidelines of the Declaration of Deanship
    of Scientific Research, Prince Sattam Bin Abdulaziz University, Saudi Arabia.
    Informed Consent Statement Not applicable. Data Availability Statement Not applicable.
    Acknowledgments This study was sponsored by Prince Sattam bin Abdulaziz University
    through project number 2023/RV/8. Conflicts of Interest The authors declare no
    conflict of interest. References Das, A.; Yashkova, O. Market Analysis Perspective:
    Worldwide Internet of Things, 2022—Infrastructure and the Intelligent Edge. (IDC)
    from IDC: The Premier Global Market Intelligence Company. October 2022. Available
    online: https://www.idc.com/getdoc.jsp?containerId=US49735922 (accessed on 15
    January 2023). Alaba, F.A.; Othman, M.; Hashem, I.A.; Alotaibi, F. Internet of
    Things security: A survey. J. Netw. Comput. Appl. 2017, 88, 10–28. [Google Scholar]
    [CrossRef] Wani, A.R.; Gupta, S.K.; Khanam, Z.; Rashid, M.; Alshamrani, S.S.;
    Baz, M. A novel approach for securing data against adversary attacks in UAV embedded
    HetNet using identity based authentication scheme. IET Intell. Transp. Syst. Early
    View 2022, 1–19. [Google Scholar] [CrossRef] CONNECT. Fast Innovation Requires
    Fast IT. Building the Internet of Things. December 2022. Available online: https://www.cisco.com/c/dam/global/en_ph/assets/ciscoconnect/pdf/bigdata/jim_green_cisco_connect.pdf
    (accessed on 5 January 2023). NIST. Cybersecurity Framework. Cybersecurity Framework
    Version 1.1. 12 November 2013. Available online: https://www.nist.gov/cyberframework
    (accessed on 5 January 2023). Cao, C.; Tang, Y.; Huang, D.; Gan, W.; Zhang, C.
    IIBE: An Improved Identity-Based Encryption Algorithm for WSN Security. Secur.
    Commun. Netw. 2021, 2021, 1–8. [Google Scholar] [CrossRef] Yu, H.J.; Kim, C.H.;
    Im, S.S.; Oh, S.H. ZigBee Authentication Protocol with Enhanced User Convenience
    and Safety. J. Inf. Secur. 2022, 22, 81–92. [Google Scholar] [CrossRef] Sofi,
    A. Bluetooth Protocol in Internet of Things (IoT), Security Challenges and a Comparison
    with Wi-Fi Protocol: A Review. Int. J. Eng. Tech. Res. 2016, 5, 1–7. [Google Scholar]
    [CrossRef] Barua, A.; Al Alamin, M.A.; Hossain, M.S.; Hossain, E. Security and
    Privacy Threats for Bluetooth Low Energy in IoT and Wearable Devices: A Comprehensive
    Survey. IEEE Open J. Commun. Soc. 2022, 3, 251–281. [Google Scholar] [CrossRef]
    Aloufi, K.S. 6LoWPAN Stack Model Configuration for IoT Streaming Data Transmission
    over CoAP. Int. J. Commun. Netw. Inf. Secur. (IJCNIS) 2022, 11, 304–312. [Google
    Scholar] [CrossRef] Zhang, L.; Ma, M.; Qiu, Y. An enhanced handover authentication
    solution for 6LoWPAN networks. Comput. Secur. 2021, 109, 102373. [Google Scholar]
    [CrossRef] Mbarek, B.; Ge, M.; Pitner, T. Proactive trust classification for detection
    of replication attacks in 6LoWPAN-based IoT. Internet Things 2021, 16, 100442.
    [Google Scholar] [CrossRef] Ingham, M.; Marchang, J.; Bhowmik, D. IoT security
    vulnerabilities and predictive signal jamming attack analysis in LoRaWAN. IET
    Inf. Secur. 2020, 14, 368–379. [Google Scholar] [CrossRef] Ugwuanyi, S.; Paul,
    G.; Irvine, J. Survey of IoT for Developing Countries: Performance Analysis of
    LoRaWAN and Cellular NB-IoT Networks. Electronics 2021, 10, 2224. [Google Scholar]
    [CrossRef] Kuntke, F.; Romanenko, V.; Linsner, S.; Steinbrink, E.; Reuter, C.
    LoRaWAN security issues and mitigation options by the example of agricultural
    IoT scenarios. Trans. Emerg. Telecommun. Technol. 2022, 5, 33. [Google Scholar]
    [CrossRef] Seoane, V.; Garcia-Rubio, C.; Almenares, F.; Campo, C. Performance
    evaluation of CoAP and MQTT with security support for IoT environments. Comput.
    Netw. 2021, 197, 108338. [Google Scholar] [CrossRef] Bilal, D.; Rehman, A.U.;
    Ali, R. Internet of Things (IoT) Protocols: A Brief Exploration of MQTT and CoAP.
    Int. J. Comput. Appl. 2018, 179, 9–14. [Google Scholar] [CrossRef] Tsai, W.C.;
    Tsai, T.H.; Wang, T.J.; Chiang, M.L. Automatic Key Update Mechanism for Lightweight
    M2M Communication and Enhancement of IoT Security: A Case Study of CoAP Using
    Libcoap Library. Sensors 2022, 22, 340. [Google Scholar] [CrossRef] Park, J.H.;
    Kim, H.S.; Kim, W.T. DM-MQTT: An Efficient MQTT Based on SDN Multicast for Massive
    IoT Communications. Sensors 2018, 18, 3071. [Google Scholar] [CrossRef] Lee, J.G.;
    Lee, S.J.; Kim, Y.W. Attack Detection and Classification Method Using PCA and
    LightGBM in MQTT-based IoT Environment. J. Inf. Secur. 2022, 22, 17–24. [Google
    Scholar] [CrossRef] Hussein, N.; Nhlabatsi, A. Living in the Dark: MQTT-Based
    Exploitation of IoT Security Vulnerabilities in ZigBee Networks for Smart Lighting
    Control. IoT 2022, 3, 450–472. [Google Scholar] [CrossRef] Venkatraman, S.; Overmars,
    A. New Method of Prime Factorisation-Based Attacks on RSA Authentication in IoT.
    Cryptography 2019, 3, 20. [Google Scholar] [CrossRef] Hung, C.W.; Hsu, W.T. Power
    Consumption and Calculation Requirement Analysis of AES for WSN IoT. Sensors 2018,
    18, 1675. [Google Scholar] [CrossRef] Sheikhpour, S.; Ko, S.B.; Mahani, A. A low
    cost fault-attack resilient AES for IoT applications. Microelectron. Reliab. 2021,
    123, 114202. [Google Scholar] [CrossRef] Sreekanth, M.; Jeyachitra, R. Implementation
    of area-efficient AES using FPGA for IOT applications. Int. J. Embed. Syst. 2022,
    15, 354. [Google Scholar] [CrossRef] OPEN. MQTT—The Standard for IoT Messaging.
    MQTT—The Standard for IoT Messaging. December 2022. Available online: https://mqtt.org/
    (accessed on 2 January 2023). Muñoz Castañeda, Á.L.; Mata, J.A.A.; Aláiz-Moretón,
    H. Characterization of threats in IoT from an MQTT protocol-oriented dataset.
    Complex Intell. Syst. 2023, 1–16. [Google Scholar] [CrossRef] Kim, G.; Park, J.;
    Chung, K. MQTT-based Gateway System for Auto-configuration of IoT Devices and
    Services. J. KIISE 2019, 46, 385–390. [Google Scholar] [CrossRef] Yu, H.; Park,
    Y. Design and implementation of IIoT edge device for collecting heterogeneous
    machine data. J. Internet Electron. Commer. Resarch 2021, 21, 23–32. [Google Scholar]
    [CrossRef] Vaclavova, A.; Strelec, P.; Horak, T.; Kebisek, M.; Tanuska, P.; Huraj,
    L. Proposal for an IIoT Device Solution According to Industry 4.0 Concept. Sensors
    2022, 22, 325. [Google Scholar] [CrossRef] [PubMed] Pappalardo, M.; Virdis, A.;
    Mingozzi, E. An Edge-Based LWM2M Proxy for Device Management to Efficiently Support
    QoS-Aware IoT Services. IoT 2022, 3, 169–190. [Google Scholar] [CrossRef] Debroy,
    S.; Samanta, P.; Bashir, A.; Chatterjee, M. SpEED-IoT: Spectrum aware energy efficient
    routing for device-to-device IoT communication. Future Gener. Comput. Syst. 2019,
    93, 833–848. [Google Scholar] [CrossRef] Che, B.; Liu, L.; Zhang, H. KNEMAG: Key
    Node Estimation Mechanism Based on Attack Graph for IoT Security. J. Internet
    Things 2020, 2, 145–162. [Google Scholar] [CrossRef] Agrawal, S.; Das, M.L.; Lopez,
    J. Detection of Node Capture Attack in Wireless Sensor Networks. IEEE Syst. J.
    2019, 13, 238–247. [Google Scholar] [CrossRef] Kim, M.; Suh, T. Eavesdropping
    Vulnerability and Countermeasure in Infrared Communication for IoT Devices. Sensors
    2021, 21, 8207. [Google Scholar] [CrossRef] [PubMed] Alharbi, I.A.; Almalki, A.J.;
    Alyami, M.; Zou, C.; Solihin, Y. Profiling Attack on WiFi-based IoT Devices using
    an Eavesdropping of an Encrypted Data Frames. Adv. Sci. Technol. Eng. Syst. J.
    2022, 7, 49–57. [Google Scholar] [CrossRef] Singh, Y.; Mohindru, V. Node authentication
    algorithm for securing static wireless sensor networks from node clone attack.
    Int. J. Inf. Comput. Secur. 2018, 10, 129. [Google Scholar] [CrossRef] Jenisha,
    R. Node to Node Communication Security in IOT Networks. Int. J. Res. Appl. Sci.
    Eng. Technol. 2022, 10, 3212–3226. [Google Scholar] [CrossRef] Staniec, K.; Kowal,
    M. On Vulnerability of Selected IoT Systems to Radio Jamming—A Proposal of Deployment
    Practices. Sensors 2020, 20, 6152. [Google Scholar] [CrossRef] Khadr, M.H.; Salameh,
    H.B.; Ayyash, M.; Elgala, H.; Almajali, S. Jamming resilient multi-channel transmission
    for cognitive radio IoT-based medical networks. J. Commun. Netw. 2022, 24, 666–678.
    [Google Scholar] [CrossRef] Chung, W.J. Modeling and Simulation of Replay Attack
    Detection using V2X Message in Autonomous Vehicles in WSN based IoT Environment.
    Int. J. Eng. Adv. Technol. 2020, 9, 1279–1286. [Google Scholar] [CrossRef] Yildirim,
    M.; Demiroğlu, U.; Şenol, B. An in-depth exam of IoT, IoT Core Components, IoT
    Layers, and Attack Types. Eur. J. Sci. Technol. 2021, 28, 665–669. [Google Scholar]
    [CrossRef] Ramadan, M.; Abdollahi, F. An active approach for isolating replay
    attack from sensor faults. Eur. J. Control 2023, 69, 100725. [Google Scholar]
    [CrossRef] Abdulla, H.; Al-Raweshidy, H.; SAwad, W. ARP Spoofing Detection for
    IoT Networks Using Neural Networks. SSRN Electron. J. 2020, 20, 1–9. [Google Scholar]
    [CrossRef] Singh, A.; Sikdar, B. Adversarial Attack and Defence Strategies for
    Deep-Learning-Based IoT Device Classification Techniques. IEEE Internet Things
    J. 2022, 9, 2602–2613. [Google Scholar] [CrossRef] Mehta, M.; Patel, K. Experimental
    Study of Location Spoofing and Identity Spoofing Attack in Internet of Things
    Network. Int. J. Intell. Inf. Technol. 2022, 18, 1–13. [Google Scholar] [CrossRef]
    Madhurikkha, S.; Sabitha, R. Hierarchical Honey Bee Model to Avoid Sleep Deprivation
    Attack in MANET. Int. J. Eng. Technol. 2018, 7, 358. [Google Scholar] [CrossRef]
    Vivekanadam, B. A Novel Hybrid HNN and Firefly Algorithm to Overcome Denial of
    Sleep Attack on Wireless Sensor Nodes. J. Ubiquitous Comput. Commun. Technol.
    2021, 2, 223–227. [Google Scholar] [CrossRef] Bani-Yaseen, T.; Tahat, A.; Kastell,
    K.; Edwan, T.A. Denial-of-Sleep Attack Detection in NB-IoT Using Deep Learning.
    J. Telecommun. Digit. Econ. 2022, 10, 14–38. [Google Scholar] [CrossRef] Yoon,
    J. Deep-learning approach to attack handling of IoT devices using IoT-enabled
    network services. Internet Things 2020, 11, 100241. [Google Scholar] [CrossRef]
    Abbasi, M.; Plaza-Hernandez, M.; Prieto, J.; Corchado, J.M. Security in the Internet
    of Things Application Layer: Requirements, Threats, and Solutions. IEEE Access
    2022, 10, 97197–97216. [Google Scholar] [CrossRef] Rodionov, A.; Belyanin, V.;
    Gorbunov, A. Improving the Methods for Protecting Information from Unauthorized
    Access. NBI Technol. 2018, 2, 39–43. [Google Scholar] [CrossRef] Aldhyani, T.H.H.;
    Alkahtani, H. Cyber Security for Detecting Distributed Denial of Service Attacks
    in Agriculture 4.0: Deep Learning Model. Mathematics 2023, 11, 233. [Google Scholar]
    [CrossRef] Jin, R.; Zhang, H.; Liu, D.; Yan, X. IoT-based detecting, locating
    and alarming of unauthorized intrusion on construction sites. Autom. Constr. 2020,
    118, 103278. [Google Scholar] [CrossRef] Minu, R.I.; Nagarajan, G.; Munshi, A.;
    Venkatachalam, K.; Almukadi, W.; Abouhawwash, M. An Edge Based Attack Detection
    Model (EBAD) for Increasing the Trustworthiness in IoT Enabled Smart City Environment.
    IEEE Access 2022, 10, 89499–89508. [Google Scholar] [CrossRef] Tahir, M.; Sardaraz,
    M.; Muhammad, S.; Saud Khan, M. A Lightweight Authentication and Authorization
    Framework for Blockchain-Enabled IoT Network in Health-Informatics. Sustainability
    2020, 12, 6960. [Google Scholar] [CrossRef] Ayfaa, B.; Apa, C. LMAAS-IoT: Lightweight
    Multi-factor Authentication and Authorization Scheme for Real-time Data Access
    in IoT Cloud-based Environment. J. Netw. Comput. Appl. 2021, 192, 103177. [Google
    Scholar] [CrossRef] Mohammad, A.; Al-Refai, H.; Alawneh, A.A. User Authentication
    and Authorization Framework in IoT Protocols. Computers 2022, 11, 147. [Google
    Scholar] [CrossRef] Mullen, G.; Meany, L. Assessment of buffer overflow based
    attacks on an IoT operating system. In Proceedings of the 2019 Global IoT Summit
    (GIoTS), Aarhus, Denmark, 17–21 June 2019; pp. 1–6. [Google Scholar] [CrossRef]
    Mazumdar, N.; Roy, S.; Nag, A.; Singh, J.P. A buffer-aware dynamic UAV trajectory
    design for data collection in resource-constrained IoT frameworks. Comput. Electr.
    Eng. 2022, 100, 107934. [Google Scholar] [CrossRef] Akhtar, M.S.; Feng, T. A Systemic
    Security and Privacy Review: Attacks and Prevention Mechanisms over IOT Layers.
    ICST Trans. Secur. Saf. 2022, 8, e5. [Google Scholar] [CrossRef] Zeng, J.Y.; Chang,
    L.E.; Cho, H.H.; Chen, C.Y.; Chao, H.C.; Yeh, K.H. Using Poisson Distribution
    to Enhance CNN-based NB-IoT LDoS Attack Detection. In Proceedings of the 2022
    IEEE Conference on Dependable and Secure Computing (DSC), Edinburgh, UK, 22–24
    June 2022; pp. 1–7. [Google Scholar] Rani, S.J.; Ioannou, I.; Nagaradjane, P.;
    Christophorou, C.; Vassiliou, V.; Charan, S.; Pitsillides, A. Detection of DDoS
    attacks in D2D communications using machine learning approach. Comput. Commun.
    2023, 198, 32–51. [Google Scholar] [CrossRef] Kareem, M.K.; Aborisade, O.D.; Onashoga,
    S.A.; Sutikno, T.; Olayiwola, O.M. Efficient model for detecting application layer
    distributed denial of service attacks. Bull. Electr. Eng. Inform. 2023, 12, 441–450.
    [Google Scholar] [CrossRef] Alduais, N.; Abdullah, J.; Jamil, A. APRS: Adaptive
    real-time payload data reduction scheme for IoT/WSN sensor board with multivariate
    sensors. Int. J. Sens. Netw. 2018, 28, 211. [Google Scholar] [CrossRef] Khosravi,
    M.R.; Samadi, S. Efficient payload communications for IoT-enabled ViSAR vehicles
    using discrete cosine transform-based quasi-sparse bit injection. EURASIP J. Wirel.
    Commun. Netw. 2019, 2019, 262. [Google Scholar] [CrossRef] Wang, H.; Singhal,
    A.; Liu, P. Tackling imbalanced data in cybersecurity with transfer learning:
    A case with ROP payload detection. Cybersecurity 2023, 6, 2. [Google Scholar]
    [CrossRef] Jung, J.H.; Gohar, M.; Koh, S.J. CoAP-Based Streaming Control for IoT
    Applications. Electronics 2020, 9, 1320. [Google Scholar] [CrossRef] Gladson Oliver,
    S.; Purusothaman, T. Lightweight and Secure Mutual Authentication Scheme for IoT
    Devices Using CoAP Protocol. Comput. Syst. Sci. Eng. 2022, 41, 767–780. [Google
    Scholar] [CrossRef] Ahmad, M.Z.; Adenan, A.R.; Rohmad, M.S.; Yussoff, Y.M. Performance
    Analysis of Secure MQTT Communication Protocol. In Proceedings of the 2023 19th
    IEEE International Colloquium on Signal Processing & Its Applications (CSPA),
    Kedah, Malaysia, 3–4 March 2023; pp. 225–229. [Google Scholar] [CrossRef] Jang,
    W.; Jeong, D.; Lee, S. A Method of IoT Object Control based on MQTT for Enhancing
    Object Mobility. J. Korean Inst. Inf. Technol. 2022, 20, 107–119. [Google Scholar]
    [CrossRef] Husnain, M.; Hayat, K.; Cambiaso, E.; Fayyaz, U.U.; Mongelli, M.; Akram,
    H.; Ghazanfar Abbas, S.; Shah, G.A. Preventing MQTT Vulnerabilities Using IoT-Enabled
    Intrusion Detection System. Sensors 2022, 22, 567. [Google Scholar] [CrossRef]
    Celesti, A.; Fazio, M.; Villari, M. Enabling Secure XMPP Communications in Federated
    IoT Clouds Through XEP 0027 and SAML/SASL SSO. Sensors 2017, 17, 301. [Google
    Scholar] [CrossRef] [PubMed] Jun, H.J.; Yang, H.S. Performance of the XMPP and
    the MQTT Protocols on IEC 61850-Based Micro Grid Communication Architecture. Energies
    2021, 14, 5024. [Google Scholar] [CrossRef] Yoshino, D.; Watanobe, Y.; Yaguchi,
    Y.; Nakamura, K.; Ogawa, J.; Naruse, K. AMQP Communication Interface on RT Middleware
    for highly-reliable IoR System Construction. Proc. JSME Annu. Conf. Robot. Mechatron.
    (Robomec) 2019, 2019, 2A1-M09. [Google Scholar] [CrossRef] Srivastava, A.; Shah,
    P. Identification of the Issues in IoT Devices with HSTS Not Enforced and Their
    Exploitation. In Proceedings of the 2021 International Conference on Security
    and Information Technologies with AI, Internet Computing and Big-Data Applications,
    Taichung City, Taiwan, 18–20 November 2021; Springer: Cham, Switzerland, 2023;
    pp. 325–334. [Google Scholar] [CrossRef] Chatzoglou, E.; Kouliaridis, V.; Kambourakis,
    G.; Karopoulos, G.; Gritzalis, S. A hands-on gaze on HTTP/3 security through the
    lens of HTTP/2 and a public dataset. Comput. Secur. 2023, 125, 103051. [Google
    Scholar] [CrossRef] Bezawada, B.; Bachani, M.; Peterson, J.; Shirazi, H.; Ray,
    I.; Ray, I. Behavioral fingerprinting of iot devices. In 2018 Workshop on Attacks
    and Solutions in Hardware Security; ACM: New York, NY, USA, 2018; pp. 41–50. [Google
    Scholar] [CrossRef] Lee, S.; Abdullah, A.; Jhanjhi, N.; Kok, S. Classification
    of botnet attacks in IoT smart factory using honeypot combined with machine learning.
    PeerJ Comput. Sci. 2021, 7, e350. [Google Scholar] [CrossRef] Menard, P.; Bott,
    G.J. Analyzing IOT users’ mobile device privacy concerns: Extracting privacy permissions
    using a disclosure experiment. Comput. Secur. 2020, 95, 101856. [Google Scholar]
    [CrossRef] Bindrwish, F.B.; Ali, A.N.A.; Ghabban, W.H.; Alrowwad, A.; Fallatah,
    N.A.; Ameerbakhsh, O.; Alfadli, I.M. Internet of Things for Digital Forensics
    Application in Saudi Arabia. Adv. Internet Things 2023, 13, 1–11. [Google Scholar]
    [CrossRef] Shanmugapriya, R.; Santhosh Kumar, S.V.N. Comprehensive survey on data
    dissemination protocols for efficient reprogramming in Internet of Things. Concurr.
    Comput. Pract. Exp. 2022, 34, e7280. [Google Scholar] [CrossRef] Salah, S.; Amro,
    B.M. Big picture: Analysis of DDoS attacks map-systems and network, cloud computing,
    SCADA systems, and IoT. Int. J. Internet Technol. Secur. Trans. 2022, 12, 543–565.
    [Google Scholar] [CrossRef] Gowtham, M.; Pramod, H.B. Semantic Query-Featured
    Ensemble Learning Model for SQL-Injection Attack Detection in IoT-Ecosystems.
    IEEE Trans. Reliab. 2022, 71, 1057–1074. [Google Scholar] [CrossRef] Fanani, G.;
    Riadi, I. Analysis of Digital Evidence on Denial of Service (DoS) Attack Log Based.
    Bul. Ilm. Sarj. Tek. Elektro 2020, 2, 70. [Google Scholar] [CrossRef] Anthi, E.;
    Williams, L.; Javed, A.; Burnap, P. Hardening machine learning denial of service
    (DoS) defences against adversarial attacks in IoT smart home networks. Comput.
    Secur. 2021, 108, 102352. [Google Scholar] [CrossRef] Shah, Z.; Ullah, I.; Li,
    H.; Levula, A.; Khurshid, K. Blockchain Based Solutions to Mitigate Distributed
    Denial of Service (DDoS) Attacks in the Internet of Things (IoT): A Survey. Sensors
    2022, 22, 1094. [Google Scholar] [CrossRef] Singhal, P.; Sharma, P.; Arora, D.
    An approach towards preventing iot based sybil attack based on contiki framework
    through cooja simulator. Int. J. Eng. Technol. 2018, 7, 261. [Google Scholar]
    [CrossRef] Pu, C.; Choo, K.K.R. Lightweight Sybil Attack Detection in IoT based
    on Bloom Filter and Physical Unclonable Function. Comput. Secur. 2022, 113, 102541.
    [Google Scholar] [CrossRef] Vaishnavi, S.; Sethukarasi, T. Retraction Note to:
    SybilWatch: A novel approach to detect Sybil attack in IoT based smart health
    care. J. Ambient Intell. Humaniz. Comput. 2022, 14, 539. [Google Scholar] [CrossRef]
    Tripathy, A.K.; Sinha, M.; Mishra, A.K. A sinkhole prevention mechanism for RPL
    in IoT. Int. J. Comput. Sci. Eng. 2020, 23, 262. [Google Scholar] [CrossRef] Jebadurai,
    I.J.; Paulraj, G.J.L.; Jebadurai, J. Mitigating Sinkhole attack in RPL based Internet
    of Things Environment using Optimized K means Clustering technique. In Proceedings
    of the 2022 6th International Conference on Electronics, Communication and Aerospace
    Technology, Coimbatore, India, 1–3 December 2022; pp. 502–507. [Google Scholar]
    [CrossRef] Bilal, A.; Hasany, S.M.N.; Pitafi, A.H. Effective modelling of sinkhole
    detection algorithm for edge-based Internet of Things (IoT) sensing devices. IET
    Commun. 2022, 16, 845–855. [Google Scholar] [CrossRef] Shiranzaei, A.; Khan, R.Z.
    An Approach to Discover the Sinkhole and Selective Forwarding Attack in IoT. J.
    Inf. Secur. Res. 2018, 9, 107. [Google Scholar] [CrossRef] Prathapchandran, K.;
    Janani, T. A trust aware security mechanism to detect sinkhole attack in RPL-based
    IoT environment using random forest—RFTRUST. Comput. Netw. 2021, 198, 108413.
    [Google Scholar] [CrossRef] An, G.H.; Cho, T.H. Improving Sinkhole Attack Detection
    Rate through Knowledge-Based Specification Rule for a Sinkhole Attack Intrusion
    Detection Technique of IoT. Int. J. Comput. Netw. Appl. 2022, 9, 169. [Google
    Scholar] [CrossRef] Yang, N.; Chen, K.; Wang, M. SmartDetour: Defending Blackhole
    and Content Poisoning Attacks in IoT NDN Networks. IEEE Internet Things J. 2021,
    8, 12119–12136. [Google Scholar] [CrossRef] Kaur, R.; Sandhu, J.K.; Pundir, M.;
    Mehta, A. Blackhole Prevention Techniques Using Machine Learning. SSRN Electron.
    J. 2021, 11, 100241. [Google Scholar] [CrossRef] Kumar, R.; Venkanna, U.; Tiwari,
    V. A Time Granular Analysis of Software Defined Wireless Mesh Based IoT (SDWM-IoT)
    Network Traffic Using Supervised Learning. Wirel. Pers. Commun. 2020, 116, 2083–2109.
    [Google Scholar] [CrossRef] Shahraki, A.; Taherkordi, A.; Haugen, Y. TONTA: Trend-based
    Online Network Traffic Analysis in ad-hoc IoT networks. Comput. Netw. 2021, 194,
    108125. [Google Scholar] [CrossRef] Mishra, S. Network traffic analysis using
    machine learning techniques in IoT network. Int. J. Veh. Inf. Commun. Syst. 2022,
    9, 107–123. [Google Scholar] [CrossRef] Li, Y.; Qin, Y. Real-Time Cost Optimization
    Approach Based on Deep Reinforcement Learning in Software-Defined Security Middle
    Platform. Information 2023, 14, 209. [Google Scholar] [CrossRef] Kwon, S.; Park,
    S.; Cho, H.; Park, Y.; Kim, D.; Yim, K. Towards 5G-based IoT security analysis
    against Vo5G eavesdropping. Computing 2021, 103, 425–447. [Google Scholar] [CrossRef]
    Lauria, F. How to Footprint, Report and Remotely Secure Compromised IoT Devices.
    Netw. Secur. 2017, 2017, 10–16. [Google Scholar] [CrossRef] Tang, F.; Kawamoto,
    Y.; Kato, N.; Yano, K.; Suzuki, Y. Probe Delay Based Adaptive Port Scanning for
    IoT Devices with Private IP Address Behind NAT. IEEE Netw. 2020, 34, 195–201.
    [Google Scholar] [CrossRef] Gibson, D. IoT law and order. Netw. Secur. 2021, 2021,
    20. [Google Scholar] [CrossRef] Nguyen-An, H.; Silverston, T.; Yamazaki, T.; Miyoshi,
    T. IoT Traffic: Modeling and Measurement Experiments. IoT 2021, 2, 140–162. [Google
    Scholar] [CrossRef] Kore, A.; Patil, S. IC-MADS: IoT Enabled Cross Layer Man-in-Middle
    Attack Detection System for Smart Healthcare Application. Wirel. Pers. Commun.
    2020, 113, 727–746. [Google Scholar] [CrossRef] Kilinçer, L.F.; Ertam, F.; Şengür,
    A. Automated Fake Access Point Attack Detection and Prevention System with IoT
    Devices. Balk. J. Electr. Comput. Eng. 2020, 8, 50–56. [Google Scholar] [CrossRef]
    Jamil, H.; Ali, A.; Jamil, F. Spoofing Attack Mitigation in Address Resolution
    Protocol (ARP) and DDoS in Software-Defined Networking. J. Inf. Secur. Cybercrimes
    Res. 2022, 5, 31–42. [Google Scholar] [CrossRef] Banadaki, Y.M.; Robert, S. Detecting
    Malicious DNS over HTTPS Traffic in Domain Name System using Machine Learning
    Classifiers. J. Comput. Sci. Appl. 2020, 8, 46–55. [Google Scholar] [CrossRef]
    Humaira, F.; Islam, M.S.; Luva, S.A.; Rahman, M.B. A Secure Framework for IoT
    Smart Home by Resolving Session Hijacking. Glob. J. Comput. Sci. Technol. 2020,
    20, 9–20. [Google Scholar] [CrossRef] Satapathy, A.; Livingston, J. A Comprehensive
    Survey on SSL/ TLS and their Vulnerabilities. Int. J. Comput. Appl. 2016, 153,
    31–38. [Google Scholar] [CrossRef] Rouhani, S.; Belchior, R.; Cruz, R.S.; Deters,
    R. Distributed attribute-based access control system using permissioned blockchain.
    World Wide Web 2021, 24, 1617–1644. [Google Scholar] [CrossRef] Li, H.; Yu, K.;
    Liu, B.; Feng, C.; Qin, Z.; Srivastava, G. An Efficient Ciphertext-Policy Weighted
    Attribute-Based Encryption for the Internet of Health Things. IEEE J. Biomed.
    Health Inform. 2022, 26, 1949–1960. [Google Scholar] [CrossRef] Song, Q.; Chen,
    Y.; Zhong, Y.; Lan, K.; Fong, S.; Tang, R. A Supply-chain System Framework Based
    on Internet of Things Using Blockchain Technology. ACM Trans. Internet Technol.
    2021, 21, 1–24. [Google Scholar] [CrossRef] Bouras, M.A.; Xia, B.; Abuassba, A.O.;
    Ning, H.; Lu, Q. IoT-CCAC: A blockchain-based consortium capability access control
    approach for IoT. PeerJ Comput. Sci. 2021, 7, e455. [Google Scholar] [CrossRef]
    [PubMed] Li, C.; Li, F.; Huang, C.; Yin, L.; Luo, T.; Wang, B. A Traceable Capability-based
    Access Control for IoT. Comput. Mater. Contin. 2022, 72, 4967–4982. [Google Scholar]
    [CrossRef] Fossen, K. Exploring Capability-Based Security in Software Design with
    Rust. Master’s Thesis, The University of Bergen, Bergen, Norway, 2022. Available
    online: https://hdl.handle.net/11250/3001153 (accessed on 5 February 2023). Saha,
    R.; Kumar, G.; Conti, M.; Devgun, T.; Kim, T.H.; Alazab, M.; Thomas, R. DHACS:
    Smart Contract-Based Decentralized Hybrid Access Control for Industrial Internet-of-Things.
    IEEE Trans. Ind. Inform. 2022, 18, 3452–3461. [Google Scholar] [CrossRef] El Bouanani,
    S.; El Kiram, M.A.; Achbarou, O.; Outchakoucht, A. Pervasive-Based Access Control
    Model for IoT Environments. IEEE Access 2019, 7, 54575–54585. [Google Scholar]
    [CrossRef] Astillo, P.V.; Kim, J.; Sharma, V.; You, I. SGF-MD: Behavior Rule Specification-Based
    Distributed Misbehavior Detection of Embedded IoT Devices in a Closed-Loop Smart
    Greenhouse Farming System. IEEE Access 2020, 8, 196235–196252. [Google Scholar]
    [CrossRef] Wang, Q.; Chen, D.; Zhang, N.; Qin, Z.; Qin, Z. LACS: A Lightweight
    Label-Based Access Control Scheme in IoT-Based 5G Caching Context. IEEE Access
    2017, 5, 4018–4027. [Google Scholar] [CrossRef] Lee, W.; Jung, B.C.; Lee, H. DeCoNet:
    Density Clustering-Based Base Station Control for Energy-Efficient Cellular IoT
    Networks. IEEE Access 2020, 8, 120881–120891. [Google Scholar] [CrossRef] Yu,
    C.; Zhan, Y.; Sohail, M. SDSM: Secure Data Sharing for Multilevel Partnerships
    in IoT Based Supply Chain. Symmetry 2022, 14, 2656. [Google Scholar] [CrossRef]
    Sivaselvan, N.; Bhat, K.V.; Rajarajan, M.; Das, A.K.; Rodrigues, J.J.P.C. SUACC-IoT:
    Secure unified authentication and access control system based on capability for
    IoT. Clust. Comput. 2022, 22, 1–20. [Google Scholar] [CrossRef] Zhang, J.; Cheng,
    Z.; Cheng, X.; Chen, B. OAC-HAS: Outsourced access control with hidden access
    structures in fog-enhanced IoT systems. Connect. Sci. 2020, 33, 1060–1076. [Google
    Scholar] [CrossRef] Nakamura, S.; Enokido, T.; Takizawa, M. Information Flow Control
    Based on the CapBAC (Capability-Based Access Control) Model in the IoT. Int. J.
    Mob. Comput. Multimed. Commun. 2019, 10, 13–25. [Google Scholar] [CrossRef] Nakamura,
    S.; Enokido, T.; Takizawa, M. Information Flow Control Based on Capability Token
    Validity for Secure IoT: Implementation and Evaluation. Internet Things 2021,
    15, 100423. [Google Scholar] [CrossRef] Silva, C.; Barraca, J.P. Dynamic Delegation-based
    Privacy Preserving in IoT Architectures. In Proceedings of the 2022 9th International
    Conference on Future Internet of Things and Cloud (FiCloud), Rome, Italy, 22–24
    August 2022; pp. 46–54. [Google Scholar] [CrossRef] Pal, S.; Jadidi, Z. Protocol-Based
    and Hybrid Access Control for the IoT: Approaches and Research Opportunities.
    Sensors 2021, 21, 6832. [Google Scholar] [CrossRef] Namane, S.; Ben Dhaou, I.
    Blockchain-Based Access Control Techniques for IoT Applications. Electronics 2022,
    11, 2225. [Google Scholar] [CrossRef] Nadkarni, A.; McCarthy, D.; Filkins, P.;
    Mehra, R. Internet of Things and Intelligent Edge: Infrastructure. IDC: The Premier
    Global Market Intelligence Company. Available online: https://www.idc.com/getdoc.jsp?containerId=IDC_P35569
    (accessed on 30 December 2022). Kandele, S.; Paul, S. Key Assignment Scheme with
    Authenticated Encryption. IACR Trans. Symmetric Cryptol. 2018, 2018, 150–196.
    [Google Scholar] [CrossRef] Sarkar, A. A symmetric neural cryptographic key generation
    scheme for Iot security. Appl. Intell. 2022, 22, 1–19. [Google Scholar] [CrossRef]
    López Delgado, J.L.; Álvarez Bermejo, J.A.; López Ramos, J.A. Homomorphic Asymmetric
    Encryption Applied to the Analysis of IoT Communications. Sensors 2022, 22, 8022.
    [Google Scholar] [CrossRef] Suresh Kumar, M.; Purosothaman, T. Multivariate Broadcast
    Encryption with Group Key Algorithm for Secured IoT. Comput. Syst. Sci. Eng. 2023,
    45, 925–938. [Google Scholar] [CrossRef] Liu, Z.; Seo, H. IoT-NUMS: Evaluating
    NUMS Elliptic Curve Cryptography for IoT Platforms. IEEE Trans. Inf. Secur. 2019,
    14, 720–729. [Google Scholar] [CrossRef] Chauhan, C.; Ramaiya, M.K.; Rajawat,
    A.S.; Goyal, S.B.; Verma, C.; Raboaca, M.S. Improving IoT Security Using Elliptic
    Curve Integrated Encryption Scheme with Primary Structure-Based Block Chain Technology.
    Procedia Comput. Sci. 2022, 215, 488–498. [Google Scholar] [CrossRef] Han, K.;
    Lee, W.K.; Hwang, S.O. cuGimli: Optimized implementation of the Gimli authenticated
    encryption and hash function on GPU for IoT applications. Clust. Comput. 2021,
    25, 433–450. [Google Scholar] [CrossRef] Chien, H.-Y. Two-Level-Composite-Hashing
    Facilitating Highly Efficient Anonymous IoT and D2D Authentication. Electronics
    2021, 10, 789. [Google Scholar] [CrossRef] Braghin, C.; Lilli, M.; Riccobene,
    E. A Model-based approach for Vulnerability Analysis of IoT Security Protocols:
    The Z-Wave case study. Comput. Secur. 2022, 127, 103037. [Google Scholar] [CrossRef]
    Castellon, C.E.; Roy, S.; Kreidl, O.P.; Dutta, A.; Bölöni, L. Towards an Energy-Efficient
    Hash-based Message Authentication Code (HMAC). In Proceedings of the 2022 IEEE
    13th International Green and Sustainable Computing Conference (IGSC), Pittsburgh,
    PA, USA, 24–25 October 2022; pp. 1–7. [Google Scholar] [CrossRef] Narlagiri, S.;
    Malathy, V.; Sudharani, C.; Sridevi, C.; Chakradhar, A. Modified advanced encryption
    standard using cipher based message authentication code algorithm. In Proceedings
    of the AIP Conference Proceedings, Sathyamangalam, India, 25–26 March 2022; AIP
    Publishing LLC: Melville, NY, USA, 2022; Volume 2418, p. 030011. [Google Scholar]
    [CrossRef] Kureshi, R.R.; Mishra, B.K. A Comparative Study of Data Encryption
    Techniques for Data Security in the IoT Device. In Internet of Things and Its
    Applications; Springer: Singapore, 2022; pp. 451–460. [Google Scholar] [CrossRef]
    Rivero, J.; Huynh, T.N.B.; Smith-Evans, A.; Thao, O.; Cheng, Y. Analyzing the
    Efficiency of Lightweight Symmetric Ciphers on IoT Devices. California State University
    Sacramento. 2021, pp. 1–6. Available online: https://scholarworks.calstate.edu/downloads/m326m683z
    (accessed on 27 February 2023). Altameem, A.; Poonia, R.C.; Saudagar, A.K.J. A
    Hybrid AES with a Chaotic Map-Based Biometric Authentication Framework for IoT
    and Industry 4.0. Systems 2023, 11, 28. [Google Scholar] [CrossRef] Tsantikidou,
    K.; Sklavos, N. Hardware Limitations of Lightweight Cryptographic Designs for
    IoT in Healthcare. Cryptography 2022, 6, 45. [Google Scholar] [CrossRef] Hsiao,
    F.H. Chaotic synchronization cryptosystems using a Twofish encryption algorithms.
    Asian J. Control 2022, 24, 1022–1041. [Google Scholar] [CrossRef] Bhagat, V.;
    Kumar, S.; Gupta, S.K.; Chaube, M.K. Lightweight cryptographic algorithms based
    on different model architectures: A systematic review and futuristic applications.
    Concurr. Comput. Pract. Exp. 2023, 35, e7425. [Google Scholar] [CrossRef] Hachim,
    E.A.W.; Abbas, T.; Gaata, M.T. Modified RC4 Algorithm for Improve Data Protection
    in Cloud Environment. In Proceedings of the 2022 International Conference on Information
    Technology Systems and Innovation (ICITSI), Bandung, Indonesia, 8–9 November 2022;
    pp. 295–299. [Google Scholar] [CrossRef] Najm, H. Data authentication for web
    of things (WoT) by using modified secure hash algorithm-3 (SHA-3) and Salsa20
    algorithm. Turk. J. Comput. Math. Educ. (TURCOMAT) 2021, 12, 2541–2551. [Google
    Scholar] [CrossRef] Paul, K. Vulnerability Analysis of Salsa20: Differential Analysis
    and Deep Learning Analysis of Salsa20. Master’s Thesis, Universitetet i Sørøst-Norge,
    Norge, Norway, 2020. [Google Scholar] Aamir, M.; Sharma, S.; Grover, A. ChaCha20-in-Memory
    for Side-Channel Resistance in IoT Edge-Node Devices. IEEE Open J. Circuits Syst.
    2021, 2, 833–842. [Google Scholar] [CrossRef] Serrano, R.; Duran, C.; Sarmiento,
    M.; Pham, C.K.; Hoang, T.T. ChaCha20–Poly1305 Authenticated Encryption with Additional
    Data for Transport Layer Security 1.3. Cryptography 2022, 6, 30. [Google Scholar]
    [CrossRef] Liu, W.; Gao, J. Quantum security of Grain-128/Grain-128a stream cipher
    against HHL algorithm. Quantum Inf. Process. 2021, 20, 1–22. [Google Scholar]
    [CrossRef] Carlson, A.; Dutta, I.; Ghosh, B. Using the Collision Attack for Breaking
    Cryptographic Modes. In Proceedings of the 2022 13th International Conference
    on Computing Communication and Networking Technologies (ICCCNT), Kharagpur, India,
    3–5 October 2022; pp. 1–7. [Google Scholar] [CrossRef] Madani, M.; Tanougast,
    C. FPGA implementation of an optimized A5/3 encryption algorithm. Microprocess.
    Microsyst. 2020, 78, 103212. [Google Scholar] [CrossRef] Gundaram, P.K.; Tentu,
    A.N.; Allu, S.N. State Transition Analysis of GSM Encryption Algorithm A5/1. J.
    Commun. Softw. Syst. 2022, 18, 36–41. [Google Scholar] [CrossRef] Zhang, B. Cryptanalysis
    of GSM encryption in 2G/3G networks without rainbow tables. In Proceedings of
    the25th International Conference on the Theory and Application of Cryptology and
    Information Security, Kobe, Japan, 8–12 December 2019; Springer: Cham, Switzerland,
    2019; pp. 428–456. [Google Scholar] [CrossRef] Muthalagu, R.; Jain, S. A novel
    modified KASUMI block chiper for global system for mobile communications. Int.
    J. Comput. Appl. 2021, 43, 805–811. [Google Scholar] [CrossRef] Manz, O. Symmetric
    Ciphers. In Encrypt, Sign, Attack. Mathematics Study Resources; Springer: Berlin/Heidelberg,
    Germany, 2022; Volume 4. [Google Scholar] [CrossRef] Kumar, A.; Mishra, P.R.;
    Pal, S.K.; Ojjela, O. Analysis of variability and degree of non-linearity of HC-128.
    J. Discret. Math. Sci. Cryptogr. 2021, 24, 2093–2108. [Google Scholar] [CrossRef]
    Walden, J. The impact of a major security event on an open source project: The
    case of OpenSSL. In Proceedings of the 17th International Conference on Mining
    Software Repositories, Seoul, Republic of Korea, 29–30 June 2020; pp. 409–419.
    [Google Scholar] [CrossRef] Alrowaithy, M.; Thomas, N. Investigating the performance
    of C and C++ cryptographic libraries. In Proceedings of the 12th EAI International
    Conference on Performance Evaluation Methodologies and Tools, Palma, Spain, 12–15
    March 2019; pp. 167–170. [Google Scholar] [CrossRef] Boesgaard, M.; Vesterager,
    M.; Zenner, E. Information on RFC 4503. 21 January 2021. Available online: https://www.rfc-editor.org/info/rfc4503
    (accessed on 13 January 2023). Surantha, N. Secure Portable Virtual Private Network
    with Rabbit Stream Cipher Algorithm. Procedia Comput. Sci. 2018, 135, 259–266.
    [Google Scholar] [CrossRef] Marpaung, J.A.; Ndibanje, B.; Lee, H.J. Higher-Order
    Countermeasures against Side-Channel Cryptanalysis on Rabbit Stream Cipher. J.
    Inf. Commun. Converg. Eng. 2014, 12, 237–245. [Google Scholar] [CrossRef] Sajid,
    F.; Hassan, M.A.; Khan, A.A.; Rizwan, M.; Kryvinska, N.; Vincent, K.; Khan, I.U.
    Secure and Efficient Data Storage Operations by Using Intelligent Classification
    Technique and RSA Algorithm in IoT-Based Cloud Computing. Sci. Program. 2022,
    2022, 2195646. [Google Scholar] [CrossRef] Bhutta, M.N.M.; Bhattia, S.; Alojail,
    M.A.; Nisar, K.; Cao, Y.; Chaudhry, S.A.; Sun, Z. Towards Secure IoT-Based Payments
    by Extension of Payment Card Industry Data Security Standard (PCI DSS). Wirel.
    Commun. Mob. Comput. 2022, 2022, 9942270. [Google Scholar] [CrossRef] Kerry, C.F.;
    Gallagher, P.D. Digital Signature Standard (DSS); FIPS PUB 186–4; Information
    Technology Laboratory, National Institute of Standards and Technology: Gaithersburg,
    MD, USA, 2013. [Google Scholar] Alhayani, B.S.; Hamid, N.; Almukhtar, F.H.; Alkawak,
    O.A.; Mahajan, H.B.; Kwekha-Rashid, A.S.; Alkhayyat, A. Optimized video internet
    of things using elliptic curve cryptography based encryption and decryption. Comput.
    Electr. Eng. 2022, 101, 108022. [Google Scholar] [CrossRef] Verma, U.; Bhardwaj,
    D. A secure lightweight anonymous elliptic curve cryptography-based authentication
    and key agreement scheme for fog assisted-Internet of Things enabled networks.
    Concurr. Comput. Pract. Exp. 2022, 34, e7172. [Google Scholar] [CrossRef] Matiyko,
    A.A. The Comparative Analysis of NTRUCipher and NTRUEncrypt Encryption Schemes.
    Mathematical and Computer Modelling. Ser. Tech. Sci. 2019, 19, 81–87. [Google
    Scholar] [CrossRef] DENIAL. Bouncycastle Fails NTRU Generation. Stack Overflow.
    15 April 2014. Available online: https://stackoverflow.com/questions/23095051/bouncycastle-fails-ntru-generation
    (accessed on 13 January 2023). Hauser, F.; Haberle, M.; Schmidt, M.; Menth, M.
    P4-IPsec: Site-to-Site and Host-to-Site VPN With IPsec in P4-Based SDN. IEEE Access
    2020, 8, 139567–139586. [Google Scholar] [CrossRef] Hong, S. Issues and Security
    on IPSec: Survey. J. Digit. Converg. 2014, 12, 243–248. [Google Scholar] [CrossRef]
    Khan, A.F.; Anandharaj, G. A Multi-layer Security approach for DDoS detection
    in Internet of Things. Int. J. Intell. Unmanned Syst. 2020, 9, 178–191. [Google
    Scholar] [CrossRef] Aravind, K.A.; Naik, B.R.; Chennarao, C.S. Combined Digital
    Signature with SHA Hashing Technique-based Secure System: An Application of Blockchain
    using IoT. Turk. J. Comput. Math. Educ. (TURCOMAT) 2022, 13, 402–418. [Google
    Scholar] Varo, Q.; Lardier, W.; Yan, J. Dynamic Reduced-Round TLS Extension for
    Secure and Energy-Saving Communication of IoT Devices. IEEE Internet Things J.
    2022, 9, 23366–23378. [Google Scholar] [CrossRef] Kumari, N.; Mohapatra, A.K.
    A comprehensive and critical analysis of TLS 1.3. J. Inf. Optim. Sci. 2022, 43,
    689–703. [Google Scholar] [CrossRef] Alwazzeh, M.; Karaman, S.; Shamma, M.N. Man
    in The Middle Attacks Against SSL/TLS: Mitigation and Defeat. J. Cyber Secur.
    Mobil. 2020, 9, 449–468. [Google Scholar] [CrossRef] Timko, A.M. Cybersecurity
    of Internet of Things Devices: A Secure Shell Implementation. 2022. Available
    online: https://urn.fi/URN:NBN:fi:amk-202205139197 (accessed on 10 March 2023).
    Kaiser. SSH Client/Server for SM-R760. SSH Client/Server for SM-R760|Tizen Developers.
    3 February 2001. Available online: https://developer.tizen.org/forums/general-support/ssh-clientserver-sm-r760
    (accessed on 13 January 2023). Ganeshkumar, P.; Albalawi, T. A Locality-Sensitive
    Hashing-Based Jamming Detection System for IoT Networks. Comput. Mater. Contin.
    2022, 73, 5943–5959. [Google Scholar] [CrossRef] Khadidos, A.O.; Shitharth, S.;
    Khadidos, A.O.; Sangeetha, K.; Alyoubi, K.H. Healthcare Data Security Using IoT
    Sensors Based on Random Hashing Mechanism. J. Sens. 2022, 2022, 1–17. [Google
    Scholar] [CrossRef] Wang, F.; Zhu, M.; Wang, M.; Khosravi, M.R.; Ni, Q.; Yu, S.;
    Qi, L. 6G-Enabled Short-Term Forecasting for Large-Scale Traffic Flow in Massive
    IoT Based on Time-Aware Locality-Sensitive Hashing. IEEE Internet Things J. 2021,
    8, 5321–5331. [Google Scholar] [CrossRef] Lin, C.H.; Liu, J.C.; Chen, J.I.Z.;
    Chu, T.P. On the Performance of Cracking Hash Function SHA-1 Using Cloud and GPU
    Computing. Wirel. Pers. Commun. 2019, 109, 491–504. [Google Scholar] [CrossRef]
    Martino, R.; Cilardo, A. Designing a SHA-256 processor for blockchain-based IoT
    applications. Internet Things 2020, 11, 100254. [Google Scholar] [CrossRef] Zellagui,
    A.; Hadj-Said, N.; Ali-Pacha, A. Comparative Study Between Merkle-Damgård And
    Other Alternative Hashes Construction. In Proceedings of the Second Conference
    on Informatics and Applied Mathematics IAM, Guelma, Algeria, 24–25 April 2019;
    Volume 180, pp. 30–34. [Google Scholar] Al-Odat, Z.A.; Khan, S.U.; Al-Qtiemat,
    E. A modified secure hash design to circumvent collision and length extension
    attacks. J. Inf. Secur. Appl. 2022, 71, 103376. [Google Scholar] [CrossRef] Tang,
    Y.; Zeng, G.; Han, W. Classification of disturbance vectors for collision attack
    in SHA-1. Sci. China Inf. Sci. 2015, 58, 1–10. [Google Scholar] [CrossRef] Kumar,
    K.K.; Ramaraj, E.; Srikanth, B.; Rao, A.S.; Prasad, P.B.V.N. Role of MD5 Message-Digest
    Algorithm for Providing Security to Low-Power Devices. In Proceedings of the 2022
    6th International Conference on Intelligent Computing and Control Systems (ICICCS),
    Madurai, India, 25–27 May 2022; pp. 352–358. [Google Scholar] [CrossRef] Kuznetsov,
    A. Parallel algorithm for MD5 collision attack. Program Syst. Theory Appl. 2015,
    6, 61–72. [Google Scholar] [CrossRef] RFC 7693. BLAKE2. BLAKE2—Fast Secure Hashing.
    13 June 2018. Available online: https://www.blake2.net/ (accessed on 14 January
    2023). EL Makhtoum, H.; Bentaleb, Y. Comparative Study of Keccak and Blake2 Hash
    Functions. In Networking, Intelligent Systems and Security; Springer: Singapore,
    2022; pp. 343–350. [Google Scholar] [CrossRef] Liu, F.; Dobraunig, C.; Mendel,
    F.; Isobe, T.; Wang, G.; Cao, Z. Efficient collision attack frameworks for RIPEMD-160.
    In Proceedings of the 39th Annual International Cryptology Conference, Santa Barbara,
    CA, USA, 18–22 August 2019; Springer: Cham, Switzerland, 2019; pp. 117–149. [Google
    Scholar] [CrossRef] Asare, B.T.; Quist-Aphetsi, K.; Nana, L. Using RC4 and whirlpool
    for the encryption and validation of data in IoT. In Proceedings of the 2019 International
    Conference on Cyber Security and Internet of Things (ICSIoT), Accra, Ghana, 29–31
    May 2019; pp. 114–117. [Google Scholar] [CrossRef] Venkatesan, R.; Srinivasan,
    B.; Rajendiran, P. Tiger hash based AdaBoost machine learning classifier for secured
    multicasting in mobile healthcare system. Clust. Comput. 2019, 22, 7039–7053.
    [Google Scholar] [CrossRef] Waguie, F.T.; Al-Turjman, F. Artificial Intelligence
    for Edge Computing Security: A Survey. In Proceedings of the 2022 International
    Conference on Artificial Intelligence in Everything (AIE), Lefkosa, Cyprus, 2–4
    August 2022; pp. 446–450. [Google Scholar] [CrossRef] Arp, D.; Quiring, E.; Pendlebury,
    F.; Warnecke, A.; Pierazzi, F.; Wressnegger, C.; Rieck, K. Dos and don’ts of machine
    learning in computer security. arXiv 2020, arXiv:2010.09470. [Google Scholar]                Disclaimer/Publisher’s
    Note: The statements, opinions and data contained in all publications are solely
    those of the individual author(s) and contributor(s) and not of MDPI and/or the
    editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Tariq, U.; Ahmed, I.; Bashir, A.K.; Shaukat,
    K. A Critical Cybersecurity Analysis and Future Research Directions for the Internet
    of Things: A Comprehensive Review. Sensors 2023, 23, 4117. https://doi.org/10.3390/s23084117
    AMA Style Tariq U, Ahmed I, Bashir AK, Shaukat K. A Critical Cybersecurity Analysis
    and Future Research Directions for the Internet of Things: A Comprehensive Review.
    Sensors. 2023; 23(8):4117. https://doi.org/10.3390/s23084117 Chicago/Turabian
    Style Tariq, Usman, Irfan Ahmed, Ali Kashif Bashir, and Kamran Shaukat. 2023.
    \"A Critical Cybersecurity Analysis and Future Research Directions for the Internet
    of Things: A Comprehensive Review\" Sensors 23, no. 8: 4117. https://doi.org/10.3390/s23084117
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   24
    Scopus   23 Web of Science   7 ads   7 PMC   1 PubMed   1 Google Scholar   [click
    to view] Article Access Statistics Article access statistics Article Views 28.
    Dec 7. Jan 17. Jan 27. Jan 6. Feb 16. Feb 26. Feb 7. Mar 17. Mar 0k 20k 40k 60k
    80k For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Sensors, EISSN 1424-8220,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Critical Cybersecurity Analysis and Future Research Directions for the
    Internet of Things: A Comprehensive Review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Li F.
  - Guo T.
  - Li X.
  - Wang J.
  - Xia Y.
  - Ma Y.
  citation_count: '1'
  description: Cloud desktop represents an outstanding product in the domain of cloud
    computing, which refers to the desktop cloud, desktop virtualization and virtual
    desktop. Cloud desktop explores the virtualization technology to concentrate computing
    resources, which delivers traditional computer desktops (operating system interfaces)
    or applications deployed in the pooled computing resources to polymorphic terminals
    through the Internet. As a distinctive product of cloud computing, cloud desktop
    has been a hot topic since its inception. Today, the virtualized resource pool
    of cloud computing achieves the elastic and dynamic expansion of resources, which
    brings the desktop system from an independent personal computer to a centralized
    physical server. Consequently, the great improvement in basic network conditions
    makes it possible to transmit high-quality desktops over the network. There are
    two key factors for cloud desktops, one of which is the virtualization technology
    on the server side and the other one, which is the transmission protocol of cloud
    desktops. The cloud desktop transmission protocol mainly completes the transmission
    of graphics, images and audio from the server to the user terminal. The transmission
    of input information from the user terminal, called DaaS (Desktop-as-a-Service),
    includes the input information of peripherals such as a mouse, keyboard, printer
    and so on. The efficiency of the transmission protocol determines the basic delivery
    capability of the cloud desktop, while the bearer protocol and graphics and image
    processing methods in the transmission protocol determine the interactive experience
    of the cloud desktop. Different protocols have their characteristics and applicable
    space. This paper spies on application and transport layer communication protocols
    to meet DaaS communication requirements. This paper describes the internal mechanism
    of various transport protocols applicable to a cloud desktop from the principle
    level and points out the pros and cons and the current application environment.
    It can be seen that these methods solve the transmission efficiency of burst traffic,
    improve user experience and reduce bandwidth consumption, which are the development
    direction of transmission protocols.
  doi: 10.3390/electronics12071572
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Electronics All Article Types Advanced   Journals
    Electronics Volume 12 Issue 7 10.3390/electronics12071572 Submit to this Journal
    Review for this Journal Propose a Special Issue Article Menu Academic Editor Cheng-Chi
    Lee Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links
    Article Views 1307 Citations 1 Table of Contents Abstract Introduction Related
    Work Performance Factors Affecting Desktop Transport Protocols Efficient Desktop
    Transport Protocol Conclusions Author Contributions Funding Institutional Review
    Board Statement Informed Consent Statement Data Availability Statement Acknowledgments
    Conflicts of Interest Abbreviations References share Share announcement Help format_quote
    Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessReview Transportation of Service Enhancement
    Based on Virtualization Cloud Desktop by Fan Li 1, Tengda Guo 2, Xiaohui Li 3,*,
    Junfeng Wang 1, Yunni Xia 4 and Yong Ma 5 1 College of Computer Science, Sichuan
    University, Chengdu 610065, China 2 College of Software Engineering, Sichuan University,
    Chengdu 610065, China 3 School of Cyber Science and Engineering, Sichuan University,
    Chengdu 610065, China 4 School of Computer, Chongqing University, Chongqing 400030,
    China 5 School of Computer Information Engineering, Jiangxi Normal University,
    Nanchang 330022, China * Author to whom correspondence should be addressed. Electronics
    2023, 12(7), 1572; https://doi.org/10.3390/electronics12071572 Submission received:
    2 March 2023 / Revised: 21 March 2023 / Accepted: 23 March 2023 / Published: 27
    March 2023 (This article belongs to the Special Issue Innovative Defense Technologies
    in 5G and beyond Mobile Networks Using Machine Learning) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract Cloud desktop represents an outstanding product
    in the domain of cloud computing, which refers to the desktop cloud, desktop virtualization
    and virtual desktop. Cloud desktop explores the virtualization technology to concentrate
    computing resources, which delivers traditional computer desktops (operating system
    interfaces) or applications deployed in the pooled computing resources to polymorphic
    terminals through the Internet. As a distinctive product of cloud computing, cloud
    desktop has been a hot topic since its inception. Today, the virtualized resource
    pool of cloud computing achieves the elastic and dynamic expansion of resources,
    which brings the desktop system from an independent personal computer to a centralized
    physical server. Consequently, the great improvement in basic network conditions
    makes it possible to transmit high-quality desktops over the network. There are
    two key factors for cloud desktops, one of which is the virtualization technology
    on the server side and the other one, which is the transmission protocol of cloud
    desktops. The cloud desktop transmission protocol mainly completes the transmission
    of graphics, images and audio from the server to the user terminal. The transmission
    of input information from the user terminal, called DaaS (Desktop-as-a-Service),
    includes the input information of peripherals such as a mouse, keyboard, printer
    and so on. The efficiency of the transmission protocol determines the basic delivery
    capability of the cloud desktop, while the bearer protocol and graphics and image
    processing methods in the transmission protocol determine the interactive experience
    of the cloud desktop. Different protocols have their characteristics and applicable
    space. This paper spies on application and transport layer communication protocols
    to meet DaaS communication requirements. This paper describes the internal mechanism
    of various transport protocols applicable to a cloud desktop from the principle
    level and points out the pros and cons and the current application environment.
    It can be seen that these methods solve the transmission efficiency of burst traffic,
    improve user experience and reduce bandwidth consumption, which are the development
    direction of transmission protocols. Keywords: cloud desktop; virtualization;
    transport protocol; quality of experience 1. Introduction Cloud computing is a
    mature and widely used technology on the current Internet. People have come into
    contact with cloud computing invisibly. For example, people such as company personnel
    department staff can use cloud computing at home for cloud office work. Desktop
    as a service (DaaS), software as a service (SaaS), platform as a service (PaaS)
    and infrastructure as a service (IaaS) are the four services provided by cloud
    computing [1]. Recently, general service providers have combined these three services
    to provide users with much higher work efficiency. The global cloud computing
    market maintained steady growth in 2021, growing to USD 90.89 billion from USD
    64.29 billion in 2020, according to Gartner data [2]. Among global cloud platforms,
    the share of Amazon web services (AWS) fell slightly compared with last year,
    reaching 38.92%. Microsoft and Alibaba Cloud ranked second and third, respectively,
    while their market shares have expanded. Among the top six global cloud vendors,
    there are three Chinese cloud vendors, with Alibaba Cloud, Huawei Cloud and Tencent
    Cloud ranking third, fifth and sixth, respectively. From a regional perspective,
    the growth rate of the cloud computing IaaS market in Asia Pacific (APAC) is much
    higher than the global average [3]. In 2021, it achieved a scale of 33.16 billion
    US dollars, up 47.92% year on year. Among them, markets such as Malaysia, Indonesia
    and Thailand are leading the growth rate in the Asia-Pacific region. Gartner data
    shows that the Alibaba Cloud has long been at the forefront of the Asia-Pacific
    market share and reached 25.53% in 2021. In addition, Amazon AWS, Microsoft, Huawei
    and Tencent rank second to fourth in that order. DaaS [4] represents a cloud-based
    hosting service that allows subscribers to deploy virtual desktops to subscribers
    employees. These kinds of desktops can be effortlessly deployed anyplace and near
    any client. Therefore, this enables workers to access applications and businesses
    when required. Desktops are centrally administered and have no use for any in-house
    infrastructure to host. When hosted in the central cloud, DaaS is analogous to
    the virtual desktop infrastructure rather than an on-premises data center. DaaS
    provides a steady virtual desktop environment to improve collaboration among enterprise
    users. DaaS has obvious advantages, the first one of which is to improve security.
    Data security is critical to any company, and to be sure, several companies want
    to enforce strict desktop management policies for employees who have full control
    and manage and access employees’ data over the network. DaaS providers typically
    do not keep data on local computers, thus eliminating the possibility of data
    breaches or unauthorized access. Secondly, DaaS can be accessed from any device
    that can connect to the Internet, regardless of device software or operating system.
    Business users can securely access their cloud desktops from any device. Thirdly,
    DaaS effectively reduces and minimizes operating costs. The cost of maintaining
    and installing the hardware required to run each virtual desktop ranges from capital
    to operating expenses. Most DaaS providers provide access to cloud desktops on
    request to consolidate a set of memory, computing and storage resources to meet
    user needs. Fourthly, it enhances business continuity. In situations where the
    physical presence of current employees or staff is challenging, the need for a
    simple, secure and convenient approach to business continuity has increased. Overall,
    DaaS is one such convenient method to enhance business continuity, improve the
    overall agility of an enterprise and respond to rapidly changing business environments.
    Since the data are on a cloud desktop, they provide the added advantage of simplifying
    disaster recovery. The virtual network computing (VNC) protocol is a bridge between
    the terminal device and the private cloud. When users use the private cloud desktop
    environment for office work, they use the VNC protocol to transmit messages such
    as images, mice and keyboards [5,6]. VNC enables users to remotely operate cloud
    resources. The image transmission of VNC adopts the remote frame buffer (RFB)
    protocol. The RFB protocol works on the frame buffer level and does not depend
    on any operating system and terminal equipment [7]. It is for this reason that
    VNC can be cross-platform, but VNC’s lack of support for audio and video streaming
    has become its weakness. It has little effect on people who only use VNC for office
    work. However, with the continuous development of multimedia, people are not satisfied
    with exploiting a private cloud for office work, and the shortcomings of VNC have
    gradually attracted people’s attention. In the private cloud desktop environment,
    it needs to be a set of protocols that can connect to the cloud desktop environment.
    VNC, remote desktop protocol (RDP) [8], simple protocol for independent computing
    environment (SPICE) [9] and other remote desktop connection protocols are remote
    desktop connection protocols widely used in cloud computing. VNC has the advantage
    of being cross-platform, using the VNC protocol in the private cloud desktop environment
    enables office staff to use Apple computers or mobile phones for office work.
    For Internet companies, VNC can be used for server-side operation and maintenance
    management. This protocol is a lightweight protocol, which is easy to install
    and does not require special configuration, and there are many versions of VNC
    protocols on its network, such as Real VNC, Tight VNC and Ultra VNC versions [10],
    some of which are open-source code. It is because of these advantages that this
    protocol is favored by people. However, with the continuous advancement of science
    and technology, computer hardware and software have been greatly improved. Office
    workers are not satisfied with exploiting VNC to edit documents and make PPTs
    but hope that they can be used for entertainment during their rest time, such
    as listening to music, watching movies, etc. The shortcomings of VNC, that is,
    VNC’s lack of support for audio and video [11], are also clearly exposed. These
    shortcomings also make VNC gradually lose its market competitiveness, so the optimization
    and improvement of VNC protocol in audio and video are also imminent. The improvement
    of audio and video transmission technology is mainly reflected in the realization
    of the compression algorithm of audio and video data and the synchronization of
    audio and video. For the compression algorithm of video data, there is H.264,
    joint photographic experts group (JPEG) and JPEG2000 and other video compression
    algorithms [12]. In recent years, H.265 algorithms have also quietly emerged.
    These algorithms have a high data compression ratio, which greatly reduces the
    amount of video data transmission. There are also many audio compression algorithms,
    such as Opus, and adaptive cruise control (ACC), which are all excellent audio
    compression algorithms. In this paper, both application and transport layer communication
    protocols are investigated to fulfill the DaaS communication requirements. To
    this end, this article first outlines the traditional cloud desktop transfer protocol
    and then briefly introduces the performance factors that affect the desktop transfer
    protocol. Then, this paper investigates possible potential protocol candidates,
    the main features of each version of the protocol, and summarizes the performance
    issues of each protocol. In addition, this article also researches business-oriented
    metrics, such as data latency, bandwidth and video playback quality, to evaluate
    performance in document editing, audio and video streaming and web browsing. 2.
    Related Work For audio and video synchronization, many scholars in academia have
    conducted in-depth research [13], and many kinds of audio and video synchronization
    strategies have been produced to improve user experience and achieve audio and
    video synchronization. For example, in the time axis synchronization method proposed
    by Jansen [14], the SPICE protocol uses a synchronous timestamp solution to solve
    the problem of audio and video synchronization. The timestamp synchronization
    technology is divided into relative timestamp and absolute timestamps, which is
    the absolute timestamp of the whole network used. For some streaming media, people
    adopt a synchronization scheme based on real-time transport protocol (RTP) in
    pursuit of real-time video so as to achieve the effect of audio and video synchronization.
    The performance of an efficient desktop transmission protocol can be measured
    from resource occupation (CPU, network bandwidth), desktop fluency (whether it
    is stuck in use), frame loss rate (whether part of the picture is lost), picture
    quality (picture clarity and color reproduction), peripheral support (compatibility,
    recognition speed, read and write speed) and other aspects to test and evaluate.
    Currently, epidemic remote desktop connection protocols include Microsoft’s RDP
    protocol [15], Red Hat’s SPICE protocol [16] and VNC protocol, which have their
    own advantages and disadvantages in audio and video transmission. Desktop cloud
    has been widely used in various fields in recent years because of its advantages
    of providing users with the desktop, application, and data delivery services in
    one-stop and ensuring user experience. Schematic diagram of the smallest cloud
    computing system is shown as Figure 1. To use virtual desktops or applications
    in the cloud data center, users must rely on the remote desktop protocol to interact
    with remote virtual machines through network transmission. The remote desktop
    protocol is one of the key technologies that determine the user experience in
    the desktop cloud. At present, the mainstream protocols mainly include Microsoft’s
    RDP protocol, Citrix’s inter-center agreement (ICA) protocol [17], VMware’s PC
    over IP (PCoIP) protocol [18], the open-source SPICE protocol and the VNC protocol.
    Figure 1. Schematic diagram of the smallest cloud computing system. The RDP protocol
    was first developed by Citrix and has been continuously optimized and improved
    since it was purchased by Microsoft. The RDP protocol has supported graphic processing
    unit (GPU) acceleration since version 7.1, which has improved the user’s visual
    experience qualitatively. The RDP protocol has also achieved good results in device
    redirection and audio and video. RDP 8.0 protocol relies on the underlying transmission
    control protocol (TCP) and user datagram protocol (UDP) and no longer supports
    only TCP like the previous version. Consequently, the transmission provides maximum
    performance in the case of network loss and can be changed based on network conditions
    between the two protocols. It can be used for conversion; that is, data retransmission
    is avoided by using the forward error connection technology, which greatly improves
    the transmission performance. In terms of video transmission, the RDP protocol
    can use two schemes, which are image-based rendering and video-based encoding
    [19]. Before transmission, the performance of the client will be judged to decide
    which video transmission scheme to use. The image transmission based on the video
    coding scheme will segment the image, entropy encodes the image and transmit its
    video image to the client. It has its own audio transmission channel in audio
    transmission and adds the audio redirection function, which streams audio from
    the remote session host to the client. However, its code is not open-source and
    not cross-platform, making it difficult to use in the enterprise. The ICA protocol
    is developed by the Citrix company. It is more complete than the RDP protocol
    in terms of function and performance. ICA can control the bandwidth and is independent
    of the operating system that supports it well. The ICA protocol uses some data
    compression, data encryption and connection optimization technologies so that
    the user’s connection only occupies a small amount of bandwidth, which efficiently
    reduces the amount of data transmission and greatly improves the overall performance.
    The security design controls the authorization of centralized access through policy-based
    control and establishes a secure access network. At the same time, it strengthens
    the authentication of user identity and conducts corresponding audit monitoring
    to improve its security. In terms of peripheral device redirection, ICA uses a
    bus-driven device redirection method, so it can be used normally in most user
    environments. The PCoIP protocol was originally developed by Teradici to improve
    the responsiveness of desktop images and the quality of virtual desktops displayed.
    After 2008, it was jointly developed by Teradici and VMware. Unlike traditional
    desktop display protocols, which are designed to deliver applications, the PCoIP
    protocol was built from the ground up for desktop delivery. Highly optimized with
    adaptive technology to ensure the best user experience regardless of where the
    user is located on the local area network (LAN) or wide area network (WAN). Different
    from many other protocols, the transport layer of the PCoIP protocol is based
    on the UDP protocol. This can maximize the use of bandwidth, making it smooth
    during video playback. Its transmission efficiency will be faster than the RDP
    protocol. The PCoIP protocol flexibility supports multiple platforms, such as
    Windows, Linux, Mac, Android, iOS, Chrome and the web. The latest version is released
    with VMware Horizon 6.0, which has low bandwidth usage and good image quality.
    The SPICE protocol is a remote desktop connection protocol proposed by Redhat
    and is open-source. The protocol has the characteristics of high reliability and
    dynamic adaptation. The remote desktop effect realized on the client side based
    on the SPICE protocol can achieve the same experience as a real computer desktop.
    This protocol is mainly used for accessing virtualized desktops shown in Figure
    2, through which users can directly access virtual machine desktops. The SPICE
    protocol, based on a multi-layer structure design, provides users with a large
    number of multimedia interfaces. Its core design realizes intelligent access to
    virtual machine server hardware resources and terminal device resources. The protocol
    will decide whether to render the access result on the server or the terminal
    device through dynamic judgment. The dynamic determination method can cope with
    a variety of network environments, so even in a poor network environment, it can
    still present a good desktop display effect. The SPICE protocol is one of the
    few open-source protocols that can be compared with commercial protocols. Figure
    2. SPICE communication protocol. The general process of the SPICE protocol in
    audio and video transmission is that when the SPICE server detects that there
    is video playback, motion joint photographic experts group (MJPEG) [20] is used
    to compress the video data. The audio and video data are stamped with a system
    timestamp and sent to the SPICE client. When the client receives the audio and
    video data sent by the SPICE server, it decodes and plays synchronously. The video
    of the SPICE protocol is encoded and transmitted by MJPEG, but its compression
    rate is low, and there are repetitions. In the case of compression, in terms of
    audio transmission, SPICE has a custom audio channel. However, it is directly
    transmitted without encoding and compression in audio transmission. Lan Yuqing
    [21] et al. improved the SPICE protocol and changed the MJPEG encoding to JPEG2000
    [22], which is used for encoding and transmission. The JPEG2000 algorithm is an
    improvement of the JPEG algorithm. It can handle the conversion between ordinary
    images and videos well and has a good video streaming effect. Because the SPICE
    protocol also has the disadvantage that the video freezes under low bandwidth,
    and compressing the video on the server will consume more CPU resources [23].
    The media player and media agent modules are added to SPICE to overcome the disadvantages
    of SPICE and reduce CPU consumption by adapting it to low-bandwidth networks.
    Compared with the above four protocols, the overall design idea of the VNC protocol
    is simpler because it uses pixel data as the display encoding primitive for desktop
    images, unlike low-level graphics commands that require the cooperation of the
    operating system to display. This feature of the desktop makes it not limited
    by the operating system; that is, the VNC protocol has good cross-platform performance.
    The initial application scenario of VNC was to provide interaction for thin terminal
    systems. Later, with the development of cloud computing, it was applied to the
    cloud platform as a remote desktop protocol. Because of this, the VNC protocol
    is not essentially generated by the desktop cloud, so when the VNC protocol is
    used in the cloud platform, many features are not suitable for the cloud platform
    in terms of function and performance. For example, in the desktop cloud scenario,
    the user needs to play audio, or because of the particularity of the office environment,
    the local USB device needs to be redirected to the virtual machine desktop. However,
    these functions are not supported by VNC, which greatly limits the user’s usage
    scenarios. Although the VNC protocol supports image transmission, it does not
    have many optimization mechanisms for application scenarios where the frame rate
    changes rapidly. Therefore, in the application scenario where the frame rate changes
    rapidly, such as playing a video, the picture will be seriously stuck and dropped,
    and the user’s sense of use is extremely poor. The VNC protocol is a cross-platform
    remote interaction protocol. Although it supports both lazy update and server-side
    active push strategy in image transmission, its default main method is the lazy
    update strategy. In the beginning, there was no development of VNC. Considering
    the use of VNC to transmit video streams, the RFB protocol used does not support
    video streams [24]. Compared with protocols such as RDP and SPICE, VNC does not
    support audio, which is also a major disadvantage. When optimizing video transmission,
    on the other hand, there are already some good solutions abroad, such as adding
    a message accelerator on the VNC server to speed up the transmission of images,
    but the image encoding has not been improved, and there will be update requests
    and request responses on the transmission channel. Therefore, for VNC audio and
    video transmission, it is necessary to select an audio and video encoding method
    suitable for network transmission, achieving its synchronization effect while
    transmitting and finally making users have a good viewing experience. After scholars
    and experts have proposed many audio and video transfer schemes, they need to
    have a transfer standard to regulate so as to meet the judgment of whether audio
    and video are synchronized in different scenarios. Therefore, the standardization
    organization has formulated the quality of service (QoS) standard to specify the
    audio and video synchronization range [25,26]. 3. Performance Factors Affecting
    Desktop Transport Protocols There are many transport schemes where QoS standards
    are required. We call it audio and video synchronization under this scheme. This
    section will emphasize the factors that affect the performance of desktop transport
    protocols. 3.1. Graphical Data Processing Method At present, there are two main
    ways to process graphics data: Based on bitmap data transmission, the graphics
    data are rendered on the server side and then compressed and transmitted. However,
    the disadvantage is that under high resolution, the edges of the text and pictures
    will have jagged edges, such as Sangfor’s service rating application protocol
    (SRAP) protocol. Vector-based data transmission splits multiple formats of the
    client and then transmits it to the client for rendering. The feature is that
    it is clear whether it is enlarged or reduced. The vector data transmission mode
    occupies a lower bandwidth than that of the bitmap. 3.2. Transport Layer Protocol
    There are two main types of transport methods: The TCP protocol is mainly used
    to transmit data with high-security requirements, such as printer data, user operation
    data, etc., but it is slower than UDP transmission; The UDP protocol is used for
    some data transmissions that do not require high completeness. Although fast,
    it will drop frames. For example, when watching a video, several frames may be
    skipped in the middle. For example, the frame loss phenomenon of NComputing’s
    user experience platform (UXP) protocol is more serious. 3.3. Compression and
    Caching Technology Lossy compression and lossless compression are the two main
    methods for solving this problem, which is shown in Figure 3. According to the
    literal, it is also well understood that lossy compression means that the transmitted
    data are damaged, while lossless compression means that the data are complete
    and undamaged. The most intuitive difference between the two is the transmission
    of image data (as shown in the figure below). There are two compression techniques:
    Figure 3. Cloud virtual desktop image compression technology. The image after
    lossless compression is still clear, while the image after lossy compression is
    blurred. Lossy compression can only ensure clear images unless it is used in conjunction
    with client-side rendering. For lossless compression, if the amount of data transmission
    is large, it will also appear unsmooth. For example, the RDP protocol belongs
    to lossless compression, but the fluency is not good. Microsoft’s later launch
    of RemoteFX technology accelerated the image transfer, which was this time smooth,
    but still has some losses. Therefore, there must be a trade-off between the two.
    A high-quality compression algorithm needs to balance the two, which can not only
    ensure clear image quality but also effectively reduce the amount of data transmission,
    thereby reducing the bandwidth requirements. 3.4. Peripheral Support Technology
    In fact, each protocol provides technology for virtual multi-channel support.
    Simply put, in order to guarantee the normal operation of peripheral devices,
    the desktop transmission protocol must establish a path for each device to ensure
    its normal and orderly passage. Caching technology saves frequently used display
    elements, such as fonts and graphics, and obtains them directly if needed without
    sending repeated requests to the server so as to provide efficient desktop transmission
    performance. 4. Efficient Desktop Transport Protocol The desktop transmission
    protocol is an important part of the cloud desktop solution. It directly specifies
    the data transmission method between the cloud host and the cloud terminal. It
    is a set of rules for orderly and efficient data transmission between the cloud
    host and the cloud terminal. People often say “is the desktop speed fast” and
    “the number of users with them” to ask whether the desktop transmission protocol
    is efficient or not. 4.1. Different Perspectives for Improving Virtual Cloud Desktop
    Delivery An efficient desktop transmission protocol is to achieve faster data
    transmission and higher resource utilization with a better algorithm so as to
    deliver a cloud desktop solution with a smooth, short response time, clear picture
    and sound and high user density. Therefore, the desktop transfer protocol is the
    technical core of the cloud desktop. 4.1.1. For the Host Other conditions being
    equal, the better the host configuration, the higher the user density. However,
    the host itself is not a product that cloud desktop manufacturers must provide;
    on account friends can buy it by themselves. It is just because the deployment
    process of some domestic cloud desktop solutions is more complicated and requires
    manufacturering professionals to complete. Therefore, for the convenience of customers
    or other commercial factors, manufacturers simply install and configure their
    own cloud desktop software on the cloud host and then bundle and sell them to
    customers, which is what we call a “one-stop” intimate service. 4.1.2. For the
    Network The stability directly affects the stability of the cloud desktop. Generally
    speaking, the data of the host and the cloud terminal rely on the internal LAN
    transmission. As for the external network, it depends on your own needs and can
    be purchased from a telecom operator. 4.1.3. For Desktop Transfer Protocol The
    desktop transmission protocol refers to a set of special data transmission rules,
    which can make the data transmission between the cloud host and the cloud terminal
    orderly and efficient so as to achieve a “rich and smooth” user experience. In
    brief, it is a set of rules for playing football. Each player (each data) has
    its own path, and players must cooperate well to pass the ball and score goals
    quickly. It directly determines the cloud desktop performance and is a key factor.
    When we look at the performance of cloud desktops, the first thing to look at
    is this. There are two main transport layer protocols: The TCP protocol is mainly
    used to transmit data with high security requirements, such as printer data, user
    operation data, etc., but it is slower than UDP transmission; The UDP protocol
    is used for data transmission that does not require high completeness. Although
    fast, it will drop frames. For example, when watching a video, several frames
    may be skipped in the middle. For example, the frame loss phenomenon of NComputing’s
    UXP protocol is more serious. The data transmitted between the cloud host and
    the cloud terminal includes video, audio, image, keyboard and mouse inputs and
    other peripheral inputs. The performance of the efficient desktop transmission
    protocol can be measured from resource occupation, desktop fluency, frame loss
    rate, drawing, peripherals support and other aspects to test and evaluate. It
    should be noted that the desktop transfer protocol applied to virtual desktop
    infrastructure (VDI) and shared cloud desktops are different. When other conditions
    are the same, exploiting the same desktop transmission protocol in a shared cloud
    desktop, the transmission speed will be faster than that of a VDI. After all,
    the stadium is different (because the virtual cloud desktop VDI has more virtual
    layers), the distance is long and the passing time will naturally be longer. In
    fact, with the same desktop transmission protocol, cloud desktops with different
    architectures have different effects on the resource utilization of the host.
    The host resource utilization of shared cloud desktops is higher than that of
    VDI, which is shown in Figure 4, because of the principle difference between the
    two cloud desktops. The shared cloud desktop can directly utilize the host’s hardware
    resources, while the virtual cloud desktop calls the host’s hardware resources
    through the intermediate virtual layer. In virtual cloud desktops, the first-class
    bare metal version of the virtual software has higher resource utilization than
    the second-class virtual software based on the installation of virtual software
    on the system. Figure 4. Desktop transport protocol architecture. Cloud desktop
    transmission protocols are mostly low-overhead, fast and instant communication
    protocols. Cloud desktop protocols are mainly oriented to applications, including
    file editing, audio and video streaming and web surfing. Such protocol methods
    or strategies can also be applied to satellite communication links, sensor communication
    links such as drones, intelligent transportation communication links, Internet
    of Things, mobile applications and small networked devices, such as smart homes,
    smart medical care, etc. The metrics that the cloud desktop protocol focuses on
    are data latency, bandwidth and video playback quality. The quality of video playback
    includes two layers of meaning. One is to estimate the output based on the traffic
    in the network, and the other is to evaluate the user-perceived QoE of real experience.
    4.2. Algorithms for DaaS Transfer Most cloud desktop communication optimization
    protocols are improved by the transmission mechanism, mainly for low-cost, low-bandwidth
    instant messaging. The message queuing telemetry transport (MQTT) protocol [27]
    is also based on the TCP/IP protocol stack, which mainly uses the publish/subscribe
    message mode, which is a message publishing mode that realizes one-to-many communication
    through lightweight code. The protocol is not only lightweight but also simple,
    highly open and easy to implement, which has extensive applications. There are
    three participating identities for MQTT protocol communication, namely publisher,
    broker and subscriber. When messages are transmitted by this protocol, they have
    an associated QoS and topic. In general, the device under the cloud is equivalent
    to the client. The client uses the MQTT program or device, which can publish application
    messages to other correlative subscribers. Clients subscribe to request to receive
    related application messages, and clients unsubscribe to remove the request to
    accept app messages. Clients can also disconnect from the server. The server adopts
    network connections from subscribers, accepts business messages published by subscribers,
    processes subscription and unsubscribe requests from subscribers and relays application
    messages to eligible subscribed subscribers. The server is not the endpoint of
    the data, it is just a transit point for the data. Subscriptions contain a topic
    filter and the utmost QoS level. Subscriptions are matched with a single session,
    which can contain multi-subscription. Each subscription to a session has a specific
    topic filter. The levels of MQTT message quality are segmented into three aspects,
    with level 0 being handed out at most once. The delivery of the data packets is
    integrated and dependent on the underlying TCP/IP network. There is no response
    and retransmission defined in this policy, and the data packets will either be
    turned over at the server only once. The packet by Level 1 policy is distributed
    at least once. The server’s message reception is confirmed by the PUBACK segment.
    If the communication link or the sending device is exceptional, or the confirmation
    data packet is not received within the prescriptive time, the sender will resend
    the data packet with the DUP bit set in the message header. Level 2 is only dispatched
    once, which is the top level of data packet delivery; packet loss and duplication
    are unacceptable, and there is connatural overhead in exploiting this quality
    of service level. For the RDP protocol, previous studies have not conducted research
    on public virtual scenarios and traffic models. In [17], the traffic model and
    QoE measurement of virtual hosts in the public cloud are studied, especially the
    evaluation of traffic data experienced a delay, occupied bandwidth and video traffic
    quality. It focuses on comparing multiple transport remote desktop protocol solutions
    in different WAN environments, evaluates the user-perceived experience quality
    for image quality, interactivity and gives mean opinion score (MOS) values. The
    research results show that burst data flow is still an important problem facing
    the cloud desktop transmission protocol and has issues that need to be addressed.
    In [28], it was evaluated by studying the application of PCoIP (PC-over-IP) protocol
    in WAN scenarios. In 2008, VMware announced the joint development of PCoIP with
    Teradid to improve its own VDI solution, VMware View. PCoIP is closely integrated
    with hardware, data encoding and decoding and graphics processing can be performed
    through specialized hardware, allowing the CPU to have the energy to do other
    things, and there are monitors that integrate PCoIP display chips. PCoIP is based
    on the UDP protocol, and UDP transmission is unreliable, but UDP does not have
    the complex checksum data recovery of the TCP three-way handshake, and the transmission
    speed is fast, which is suitable for multimedia transmission. The native PCoIP
    protocol does not have the redirection capability of peripherals, such as serial
    and parallel ports, but some TC manufacturers make up for the lack of this function
    through additional port redirection plug-ins. In [29], the performance of the
    RDP protocol is explored for different applications, and experiments are carried
    out with its user application experience, such as playback quality and delay.
    In [17], the author also conducted an analogical QoE study, mainly aimed at the
    ICA protocol. Although all of the papers provide MOS assessments, especially for
    RDP, VNC, ICA, and PCoIP are compared. In [30,31], video quality is assessed in
    terms of transmitted data size, and the findings of cloud QoE are carried out
    for disparate cloud-based services, including cloud storage with lower latency
    and interactivity requirements, system services, multimedia on-demand services,
    communication and teleconferencing services and cloud desktop interaction services.
    The achievement of these studies provides a basis for developing prospective cloud
    services with QoE requirements and for determining the scale of the underlying
    network supply infrastructure, Especially with respect to mobile access technology.
    In the literature [32], the user’s QoE is also evaluated by detecting the task
    time completed by the user’s application level, such as the time taken by the
    user to complete text input, mouse operation and click refresh. The scheme comparison
    is carried out, and in the paper [33], the same author does compare the RDP with
    the ICA protocol. Studies have shown that these common cloud desktop protocols
    each have their own areas of adaptation, but most of the research is not based
    on real scene environments, and most of the research work is based on some simulation
    verification platforms, such as NetEm [34], and other simulation environment tools
    with certain random packet loss and link delay. In research [35], a new network
    transport protocol is built based on AWS. It supplies an extraordinarily reliable,
    extendable and low-budget infrastructure platform in the cloud environment, supporting
    more than one million enterprises, governments, startups and organizations in
    hundreds of countries around the world. This protocol is a scalable and reliable
    data transmission protocol. It utilizes the large-scale network paths of the public
    cloud and takes into account the problems of unbalanced load and differential
    link delay of the protocol, realizing multi-tenancy in an elastic network with
    scalability and on-demand capacity. The problem of transmission cost-effectiveness
    is to avoid the problem of data overload on a certain path by sending a large
    amount of data to multiple network paths as much as possible, but it may cause
    the problem of out-of-sequence data packets. SRD responds to network congestion
    as quickly as possible by customizing the Nitro network interface card (NIC) to
    avoid frequent pulling of data traffic. For transmission throughput, packet loss
    rate (PLR), inter-protocol fairness, intra-protocol fairness and high-speed file
    transfer, research [36] controls data congestion by judging network conditions.
    The protocol mainly uses round-trip time (RTT) to determine the bottleneck queue
    size, known as delay-based adaptive congestion control (DACC), by considering
    the presence of background flows. This kind of strategy explores the network state
    immediately and modulates the transfer delivery rate appropriately. Theoretical
    experiments prove that the advantages of DACC are better in multiple QoS indicators,
    and the identification of congestion is more prepared. In research [36], the authors
    propose a new cross-layer-based cwnd initialized method for DACC. This method
    provides the best incipient value of the congestion window based on the available
    bandwidth. It can quickly adapt to network conditions so as to reduce packet loss
    and retransmission. DACC incorporates a queuing delay variation-based scheme that
    properly takes into account the impact of data flow and all other background flows
    on congestion. DACC incorporates a scheme based on the variation of queuing delay,
    which properly takes into account the impact of data flow and all other background
    flows when a traffic jam happened. Current real-time video systems usually consist
    of two portions: the transport protocol and the video codec. The transport protocol
    is responsible for delivering the compressed video to the subscriber, processing
    acknowledgment and congestion indication. After that, the mean data rate on the
    network route is assessed and feeds the estimated data rate back to the codec
    module. The codec chooses the encoding parameters, e.g., frame rate and quality
    settings, after which it produces a compressed video stream with a medial bit
    rate close to the predicted network’s natural capacity. Ultimately, the complete
    transmission of the video can be guaranteed without stuttering or the dropped
    frames phenomenon. In research [37], Salsify combines the packet-by-packet congestion
    control of the transport protocol and the frame-by-frame rate control of the video
    codec. Salsify is a dedicated architecture for network video transfer with instantaneity
    that tightly integrates a video codec and a network transport protocol. The method
    responds seasonably to changing network conditions without causing packet loss
    and queuing delays. It avoids causing network buffer overflows or queuing delays
    by matching network varying capacity and video transfer rates. Salsify’s video
    codec explores optional encodings for each video frame at various quality degrees
    to match the compressed length to the instantaneous capacity of the network. When
    the network can accommodate a video frame, the corresponding video frame is sent.
    Salsify achieves lower video latency and higher video quality over variable network
    paths compared to FaceTime, Hangouts, Skype and WebRTC. In [38], two problems
    with existing PCCs working over WAN are addressed. First, wide-area traffic has
    different RTTs, which can cause real-time data corruption problems caused by imperfect
    scheduling. Second, there is an RTT delay in credit-triggered data transmission,
    which reduces network performance. This paper studies FLASHPASS, a transmission
    method with high throughput and low loss through ACC on shallow-buffer WAN, which
    can effectively solve the above two problems. First, the problem of the imperfect
    height of data packets is avoided by performing data transmission timing calibration.
    Efficient credit allocation is then carried out through selective discarding mechanisms
    and over-provisioning. The evaluation shows that FLASHPASS effectively reduces
    the overall process completion time of TCPCubic and ExpressPass, and achieves
    a better QoS experience for users. In the multi-path data transmission research
    literature [39], in order to cope with the dynamic workload, application-aware
    performance should be maintained. New protocol designs must be able to reconfigure
    routing and inter-Pod topology. The key to Gemini is the optimal integration of
    topology and routing, exploiting robust estimates of upcoming traffic from multiple
    historical traffic matrices as input. Gemini is a system designed to achieve these
    targets on commodity hardware while infrequently reconfiguring the network, making
    these modular designs applicable enough to deploy very shortly. Gemini reduces
    data bursts by sending these bursts of data traffic to multiple paths, thereby
    reducing data packet loss. The research uses a variety of data schemes for testing,
    such as dividing the data into low-volatility data, high-volatility data, etc.
    For low-volatility data, the protocol finds the topology and routing scheme with
    the least cost as quickly as possible. For highly fluctuating data, the protocol
    uses a tuned multi-traffic matrix and hedging to avoid frequent topology reconfiguration
    and only slightly increases the data route length. For this reason, Gemini can
    sustain existing traffic loads over a multi-path topology, combined with powerful
    decision-making algorithms to determine when to reconfigure and whether to use
    hedging, ultimately significantly reducing the cost of existing structures. In
    addition [40], the multi-path transmission control protocol (MPTCP) coupled congestion
    control algorithm concentrates on combining multiple available links to increase
    the bandwidth, MPTCP is designed to adhere to the following two principles, first,
    application compatibility with applications as long as those that can run in the
    TCP environment can be run in the MPTCP environment without any modification.
    Second, network compatibility, MPTCP is compatible with other protocols. It also
    avoids using MP-TCP more aggressively than regular TCP streams on each link. This
    gives rise to very traditional action when network paths do not share congested
    links. Targeting network paths with different characteristics (i.e., available
    bandwidth, PLR and latency) increases the likelihood of network congestion, resulting
    in higher reordering, buffer congestion and unnecessary retransmission overhead.
    The currently implemented MP-TCP scheduler suffers from low channel utilization
    due to its traditional congestion window (cwnd) adaptation scheme. Therefore,
    this protocol hurts application-level throughput performance. To address these
    issues, the study proposes an adaptive data scheduling strategy (ADSS) [41], which
    dynamically adjusts the enhancement of cwnd according to the RTT changes of the
    paths. To adjust the transmission rate of each route according to the estimated
    RTT variation, an adaptive fast retransmission strategy is also designed and implemented.
    Research shows that compared with the MP-TCP scheduler, A-DSP can effectively
    reduce data transmission time, and the scheme can still guarantee the throughput
    of data transmission under different link packet loss rates, bandwidth and delay,
    effectively improving the efficient data transmission under multi-path. For short
    remote procedure calls (RPCs), it provides a tail latency of <50 μs and a cloud
    environment architecture with a packet loss rate close to zero. Swift [42] achieves
    terminal-to-terminal latency by exploiting additive increase multiplicative decrease
    (AIMD) control and pacing under extreme congestion. The Swift protocol utilizes
    very-low base latency as a solution to respond quickly to network and end-host
    dynamics. The scheme is a centralized or in-network credit-based/explicit feedback
    scheme. In a large number of high-speed transmission protocols, the delay has
    always been the best measure of network congestion. Swift further decomposes the
    end-to-end RTT to separate the structure from the host problem. Forward fabric
    delay is the summation of the serialization, propagation and queuing delays of
    packets on the switch between the source and destination. It also includes NIC
    serialization latency and better control of network congestion by separating fabric
    and host delays. Swift realizes the continuous low tail completion time of short
    remote procedure calls and provides high throughput for long remote procedure
    calls. Higher link speeds also mean congestion is more likely to occur. The current
    solution is usually to use some reactive protocols similar to TCP, DCTCP and TIMELY.
    These protocols only react after congestion occurs. Reactive protocols have many
    problems, including excessively long switch queues, severe packet loss due to
    in-cast problems and very slow convergence. These problems get worse at higher
    link speeds. In [43], a congestion control scheme based on proactive congestion
    control (PCC) is proposed. Compared with reactive congestion control, it has a
    queue length close to 0, 0 packet loss and faster convergence speed. Unlike reactive
    solutions, proactive solutions proactively schedule network transfers based on
    the availability of network resources. The three receiver drivers shown here are
    typical active congestion control protocols, which allocate link resources by
    sending credits from the receiver. Aelous adopts the minimum rate control, all
    streams will be sent at wire speed within the first RTT, and these packets sent
    at wire speed are called unscheduled packets. The packets after the first RTT
    will adjust the sending rate through credit, and call them schedule packets, the
    planned packets. The purpose of this is to maximize the use of spare bandwidth.
    The problem that the first RTT of PCC cannot be used is solved by selective packet
    loss, the priority queue (that is FIFO) is not used, and the excellent performance
    of PCC is also retained. Many Internet applications require high bandwidth but
    are not time-sensitive and can also be effectively utilized in cloud desktop data
    transmission. This prompts the congestion control “scavenger” to voluntarily give
    in to higher-priority applications. Low extra delay background transport (LEDBAT)
    has the following three goals: First, it can fill the bandwidth and get the utmost
    out of the network when there is no other flow on the neck of a bottle link. The
    second is to ensure a low queuing delay when there is no other data flow; due
    to the increase in the window of the CUBIC flow, when the queuing delay is introduced,
    it tries not to increase the queuing delay. The third is when there is high priority
    competition for bandwidth, LEDBAT actively sells the bandwidth and reduces the
    window. However, the existing scavenger protocol LEDBAT often fails to budge suffers
    from performance flaws and requires a separate codebase from other transport protocols.
    In research [44], it was proposed that PCC Proteus could act as an efficient scavenger
    or master protocol. The goals of the Proteus and LEDBAT protocols are the same;
    both are to utilize the remaining bandwidth in the link. However, in order to
    achieve higher link utilization, delay skew is used as a competing signal, as
    well as noise tolerance techniques in dynamic environments. The protocol has more
    possible business capabilities and can switch between multiple data transmission
    modes, which should indicate that the Proteus protocol can significantly improve
    page load times and DASH video delivery capabilities, and its hybrid mode significantly
    reduces bandwidth constraints, such as rebuffering in restricted environments.
    4.3. Privacy Preserving for DaaS Transfer The precondition for fully utilizing
    and mining the excellent performance of cloud desktops is a trustworthy cloud
    data environment, including cloud data storage security and cloud data transmission
    security. Data integrity and privacy are key issues in cloud computing, and data
    are stored in different geographical locations, so consideration is given. Therefore,
    data integrity and privacy protection clauses are the most prominent factors that
    users worry about in the cloud computing environment. This section will mainly
    discuss the security of cloud data and use this as support for cloud desktops.
    As the world digitizes, the pressure on data storage continues to grow, and massive
    storage of data has driven the development of cloud storage. However, this increases
    possible risks, such as unauthorized access, data disclosure, sensitive information
    disclosure and privacy disclosure. Refs. [45,46] propose a general cloud storage
    security framework and analyze the challenges it faces. It discusses antileakage
    and data integrity, which points out the difficulties in solving new issues such
    as privacy protection and machine learning in cloud storage. Moreover, advanced
    encryption standard (AES) ciphers can be used for data security. The delay calculation
    of data encryption increases the delay time of encrypted data. An encryption method
    for cloud data storage is proposed [47]. Users and cloud service providers, respectively,
    use elliptic curve integrated encryption schemes (ECIES) and AES for encryption
    to achieve storage integrity, confidentiality and efficient computing. CryptoGA
    [48], based on the genetic algorithm (GA), is proposed to solve the integrity
    and privacy issues of cloud data transmission. Ref. [49] discusses the implementation
    of cloud data security from another perspective. Data are divided into ordinary
    data and sensitive data, and more sensitive data are further divided into two
    parts. Each part is encrypted and distributed across multiple clouds, while ordinary
    data are uploaded in encrypted form to a single cloud, which is more efficient
    and faster than popular encryption methods. On the other hand, on the basis of
    ensuring the security of cloud storage, the security of cloud transmission is
    also of great value for discussion. Ref. [50] explains cloud cryptography. Several
    mechanisms are used in cloud cryptography to add a high level of security to protect
    data from infiltration, hacking or being compromised by malware. This can also
    play a certain role in cloud data transmission. Based on the above discussion
    on data security and privacy, with the further development of the research, cloud
    security will be further guaranteed, and the use value of cloud desktops will
    be further improved. 5. Conclusions Desktop virtualization has flourished and
    has been widely deployed over the past several years. In order to be content with
    the transmission requirements of timeliness and reliability of screen updatse
    in a desktop virtualization environment, a QoE-based perceptual transmission scheme
    is urgently needed. This paper first introduces the related concepts and architecture
    of the desktop cloud, then introduces the related concepts of the remote desktop
    protocol, reviews the optimization applied to data delivery in the desktop virtualization
    system and briefly introduces the transmission scheme carried out for delay-sensitive
    data and communicates the methods for visual perception QoE measurement. After
    research, the solutions to several current mainstream protocols are compared and
    analyzed. The video encoding and compression algorithms involved in the image
    transmission in the remote desktop protocol are compared and analyzed. Finally,
    the remote desktop protocol and high-speed transfer protocol are reviewed. We
    study application layer protocols designed or adapted for DaaS solutions, focusing
    on their possible implementation in IoT, cloud computing and data center-based
    systems. Users only need to focus on business, have operating systems and applications
    to use, install appropriate desktop system templates, install application software
    for terminal devices that access cloud desktops, prepare images, publish to users
    and upgrade and maintain images. Cloud desktop service providers provide back-end
    service reading and writing hardware and provide corresponding cloud desktop transmission
    protocol support services and system management to ensure users’ QoE experience
    in the process of exploiting cloud desktops. High desktop transmission protocol
    is important to achieve faster data transmission and higher resource utilization
    with better algorithms so as to improve the user experience, that is, smooth delivery,
    short response time, clear picture and sound and high user density. The desktop
    transfer protocol is the technical core of cloud desktop manufacturers. Author
    Contributions All members of our team have different contributions to the research
    work. More specifically, F.L., T.G. and X.L. drafted the manuscript, and performed
    validation. J.W., Y.X. and Y.M. supervised and revised the manuscript. All authors
    have read and agreed to the published version of the manuscript. Funding The National
    Key Research and Development Program under Grant 2022YFB3305203; the National
    Natural Science Foundation of China under Grant U2133208 and Grant 62101368; the
    Basic Research Program of China under Grant 2021-JCJQ-ZQ-082; the Sichuan Youth
    Science and Technology Innovation Team under Grant 2022JDTD0014; the Sichuan Province
    Science and Technology Support Program under Grant 2022YFG0168; the Science and
    Technology Program of Guizhou Province under Grant Qianke Support [2022] General
    076; the Sichuan University Postdoctoral Research and Development Fund under Grant
    2022SCU12115. Institutional Review Board Statement Not applicable. Informed Consent
    Statement Not applicable. Data Availability Statement Data sharing is not applicable
    to this article as no new data were created. Acknowledgments This work was supported
    in part by the National Key Research and Development Program under Grant 2022YFB3305203;
    in part by the National Natural Science Foundation of China under Grant U2133208
    and Grant 62101368; and in part by the Basic Research Program of China under Grant
    2021-JCJQ-ZQ-082; and in part by the Sichuan Youth Science and Technology Innovation
    Team under Grant 2022JDTD0014; and in part by the Sichuan Province Science and
    Technology Support Program under Grant 2022YFG0168; and in part by the Science
    and Technology Program of Guizhou Province under Grant Qianke Support [2022] General
    076; and in part by the Sichuan University Postdoctoral Research and Development
    Fund under Grant 2022SCU12115. Conflicts of Interest The authors declare no conflict
    of interest. Abbreviations The following abbreviations are used in this manuscript:
    AWS Amazon Web Services ACC Adaptive Cruise Control ICA Inter-Center Agreement
    PCoIP PC over IP VNC Virtual Network Computing RFB Remote Frame Buffer SPICE Simple
    Protocol for Independent Computing Environment IoT Internet of Things SaaS Software
    as a Service PaaS Platform as a Service IaaS Infrastructure as a Service DaaS
    Desktop as a service RTP Real-time Transport Protocol RDP Remote Display Protocol
    GPU Graphic Processing Unit TCP Transmission Control Protocol UDP User Datagram
    Protocol LAN Local Area Network WAN Wide Area Network MJPEG    Motion Joint Photographic
    Experts Group USB Universal Serial Bus DTN Delay Tolerant Networks SRAP Service
    Rating Application Protocol UXP User Experience Platform VDI Virtual Desktop Infrastructure
    MQTT Message Queuing Telemetry Transport PSNR Peak Signal to Noise Ratio MOS Mean
    Opinion Score QoS Quality of Service QoE Quality Of Experience RD Remote Desktop
    NICs Network Interface Cards HPC High Performance Computing ML Machine Learning
    EC2 Elastic Compute Cloud SRD Software Defined Radio RTT Round Trip Time DACC
    Delay-Based Adaptive Congestion Control PLR Packet Loss Ratio ACC Active Congestion
    Control MPTCP Multi-path Transmission Control Protocol ADSS Adaptive Data Scheduling
    Strategy AIMD Additive Increase Multiplicative Decrease RPCs Remote Procedure
    Calls SPF Scheduled Packet First LEDBAT Low Extra Delay Background Transport NDP
    Neighbor Discovery Protocols FCT Flow Completion Time ITS Intelligent Transportation
    System HTTP HyperText Transfer Protocol CoAP Constrained Application Protocol
    REST Resource Representational State Transfer References Mohammed, C.M.; Zeebaree,
    S.R. Sufficient comparison among cloud computing services: IaaS, PaaS, and SaaS:
    A review. Int. J. Sci. Bus. 2021, 5, 17–30. [Google Scholar] Bello, S.A.; Oyedele,
    L.O.; Akinade, O.O.; Bilal, M.; Delgado, J.M.D.; Akanbi, L.A.; Ajayi, A.O.; Owolabi,
    H.A. Cloud computing in construction industry: Use cases, benefits and challenges.
    Autom. Constr. 2021, 122, 103441. [Google Scholar] [CrossRef] Tsai, W.L. Constructing
    assessment indicators for enterprises employing cloud IaaS. Asia Pac. Manag. Rev.
    2021, 26, 23–29. [Google Scholar] [CrossRef] Zheng, H.; Wang, J.; Zhang, J.; Li,
    R. IRTS: An Intelligent and Reliable Transmission Scheme for Screen Updates Delivery
    in DaaS. ACM Trans. Multimed. Comput. Commun. Appl. (TOMM) 2021, 17, 1–24. [Google
    Scholar] [CrossRef] Benomar, Z.; Longo, F.; Merlino, G.; Puliafito, A. Cloud-based
    enabling mechanisms for container deployment and migration at the network edge.
    ACM Trans. Internet Technol. (TOIT) 2020, 20, 1–28. [Google Scholar] [CrossRef]
    Trevizan, R.D.; Obert, J.; De Angelis, V.; Nguyen, T.A.; Rao, V.S.; Chalamala,
    B.R. Cyberphysical Security of Grid Battery Energy Storage Systems. IEEE Access
    2022, 10, 59675–59722. [Google Scholar] [CrossRef] Wang, H.; Dai, H.; Qiu, M.;
    Liu, M. Optimization of Remote Desktop with CNN-based Image Compression Model.
    In Proceedings of the Knowledge Science, Engineering and Management: 14th International
    Conference KSEM 2021, Tokyo, Japan, 14–16 August 2021; Springer: Cham, Switzerland,
    2021; pp. 692–703. [Google Scholar] Bai, T.; Bian, H.; Abou Daya, A.; Salahuddin,
    M.A.; Limam, N.; Boutaba, R. A machine learning approach for rdp-based lateral
    movement detection. In Proceedings of the 2019 IEEE 44th Conference on Local Computer
    Networks (LCN), Osnabrueck, Germany, 14–17 October 2019; pp. 242–245. [Google
    Scholar] Hou, W.; Wang, J. Video region detection algorithm for virtual desktop
    protocol. J. Comput. Appl. 2018, 38, 1463. [Google Scholar] Bitton, R.; Shabtai,
    A. A machine learning-based intrusion detection system for securing remote desktop
    connections to electronic flight bag servers. IEEE Trans. Dependable Secur. Comput.
    2019, 18, 1164–1181. [Google Scholar] [CrossRef] Garcia, M.; Quiroga, J.; Ortin,
    F. An infrastructure to deliver synchronous remote programming labs. IEEE Trans.
    Learn. Technol. 2021, 14, 161–172. [Google Scholar] [CrossRef] Xiao, W.; Wan,
    N.; Hong, A.; Chen, X. A Fast JPEG Image Compression Algorithm Based on DCT. In
    Proceedings of the 2020 IEEE International Conference on Smart Cloud (SmartCloud),
    Washington, DC, USA, 6–8 November 2020; pp. 106–110. [Google Scholar] Kanellopoulos,
    D. Inter-destination Multimedia Synchronization: A Contemporary Survey. Infocommun.
    J. 2019, XI, 10–21. [Google Scholar] [CrossRef] Jansen, J.; Cesar, P.; Bulterman,
    D.C.; Stevens, T.; Kegel, I.; Issing, J. Enabling composition-based video-conferencing
    for the home. IEEE Trans. Multimed. 2011, 13, 869–881. [Google Scholar] [CrossRef]
    Kraev, Y.; Firsov, G.; Kakov, D. Authentication via RDP Using Electronic Identifiers.
    In Proceedings of the 2021 IEEE Conference of Russian Young Researchers in Electrical
    and Electronic Engineering (ElConRus), Moscow, Russia, 26–29 January 2021; pp.
    2361–2365. [Google Scholar] Qin, D. A compression and transmission method for
    surveillance video data using SPICE protocol and DWT in cloud desktop environment.
    J. Ambient. Intell. Humaniz. Comput. 2019, 1–9. [Google Scholar] [CrossRef] Magana,
    E.; Sesma, I.; Morato, D.; Izal, M. Remote access protocols for Desktop-as-a-Service
    solutions. PLoS ONE 2019, 14, e0207512. [Google Scholar] [CrossRef] Pocarovsky,
    S.; Orgon, M. Comparison of application dynamics in two types of CLOUD solutions.
    In Proceedings of the 2020 12th International Congress on Ultra Modern Telecommunications
    and Control Systems and Workshops (ICUMT), Brno, Czech Republic, 5–7 October 2020;
    pp. 154–158. [Google Scholar] Garcia, D.C.; Dorea, C.; Ferreira, R.U.; Freitas,
    D.R.; de Queiroz, R.L.; Higa, R.; Ismael Seidel Testoni, V. Differential Transform
    for Video-Based Plenoptic Point Cloud Coding. IEEE Trans. Image Process. 2022,
    31, 1994–2003. [Google Scholar] [CrossRef] [PubMed] Venkatesan, R.; Pandiaraj,
    A.; Selvakumar, M. A Recurrent Neural Network for Image Deblocking Detection and
    Quality Enhancement. In Proceedings of the 2023 5th International Conference on
    Smart Systems and Inventive Technology, Tirunelveli, India, 23–25 January 2023;
    pp. 1–8. [Google Scholar] Lan, Y.; Xu, H. Research on technology of desktop virtualization
    based on SPICE protocol and its improvement solutions. Front. Comput. Sci. 2014,
    8, 885–892. [Google Scholar] [CrossRef] Li, W.; Wang, B.; Yu, J.; Zhu, C.; Xiao,
    S.; Sheng, J. The optimization of Transparent-Desktop service mechanism based
    on SPICE. Concurr. Comput. Pract. Exp. 2016, 28, 4543–4556. [Google Scholar] [CrossRef]
    Cesar, P.; Bulterman, D.C.; Kernchen, R.; Hesselman, C.; Boussard, M.; Spedalieri,
    A.; Gao, B. Multimodal Adaptation and Enriched Interaction of Multimedia Content
    for Mobile Users. In Taiwanese-French Conference on Information Technology; INRIA:
    Taipei, Taiwan, 2008; pp. 230–239. [Google Scholar] Richardson, T.; Wood, K.R.
    The RFB Protocol; ORL: Cambridge, UK, 1998. [Google Scholar] Marri, S.R.; Reddy,
    P.C. A Survey on Streaming Adaptation Techniques for QoS and QoE in Real-Time
    Video Streaming. In Smart Computing Techniques and Applications; Springer: Singapore,
    2021; pp. 455–465. [Google Scholar] Pokhrel, S.R.; Qu, Y.; Gao, L. QoS-aware personalized
    privacy with multipath TCP for industrial IoT: Analysis and design. IEEE Internet
    Things J. 2020, 7, 4849–4861. [Google Scholar] [CrossRef] Shinde, S.A.; Nimkar,
    P.A.; Singh, S.P.; Salpe, V.D.; Jadhav, Y.R. MQTT-message queuing telemetry transport
    protocol. Int. J. Res. 2016, 3, 240–244. [Google Scholar] Metzler, J. Virtualization:
    Benefits, Challenges, and Solutions; Riverbed Technology: San Francisco, CA, USA,
    2011; pp. 1–24. [Google Scholar] Huse, S.M.; Mark Welch, D.B.; Voorhis, A.; Shipunova,
    A.; Morrison, H.G.; Eren, A.M.; Sogin, M.L. VAMPS: A website for visualization
    and analysis of microbial population structures. BMC Bioinform. 2014, 15, 41.
    [Google Scholar] [CrossRef] [PubMed] [Green Version] Casas, P.; Schatz, R. Quality
    of experience in cloud services: Survey and measurements. Comput. Netw. 2014,
    68, 149–165. [Google Scholar] [CrossRef] Kim, M.; Cui, Y.; Han, S.; Lee, H. Towards
    efficient design and implementation of a hadoop-based distributed video transcoding
    system in cloud computing environment. Int. J. Multimed. Ubiquitous Eng. 2013,
    8, 213–224. [Google Scholar] Schlosser, D.; Staehle, B.; Binzenhöfer, A.; Boder,
    B. Improving the QoE of citrix thin client users. In Proceedings of the 2010 IEEE
    International Conference on Communications, Cape Town, South Africa, 23–27 May
    2010; pp. 1–6. [Google Scholar] Jarschel, M.; Schlosser, D.; Scheuring, S.; Hoßfeld,
    T. An evaluation of QoE in cloud gaming based on subjective tests. In Proceedings
    of the 2011 Fifth International Conference on Innovative Mobile and Internet Services
    in Ubiquitous Computing, Seoul, Republic of Korea, 30 June–2 July 2011; pp. 330–335.
    [Google Scholar] Zheng, H.; Liu, D.; Wang, J.; Liang, J. A QoE-perceived screen
    updates transmission scheme in desktop virtualization environment. Multimed. Tools
    Appl. 2019, 78, 16755–16781. [Google Scholar] [CrossRef] Shalev, L.; Ayoub, H.;
    Bshara, N.; Sabbag, E. A cloud-optimized transport protocol for elastic and scalable
    hpc. IEEE Micro 2020, 40, 67–73. [Google Scholar] [CrossRef] Verma, L.P.; Sharma,
    V.K.; Kumar, M.; Kanellopoulos, D. A novel Delay-based Adaptive Congestion Control
    TCP variant. Comput. Electr. Eng. 2022, 101, 108076. [Google Scholar] [CrossRef]
    Fouladi, S.; Emmons, J.; Orbay, E.; Wu, C.; Wahby, R.S.; Winstein, K. Salsify:
    Low-Latency Network Video through Tighter Integration between a Video Codec and
    a Transport Protocol. In Proceedings of the 15th USENIX Symposium on Networked
    Systems Design and Implementation (NSDI 18), Renton, WA, USA, 9–11 April 2018;
    pp. 267–282. [Google Scholar] Zeng, G.; Qiu, J.; Yuan, Y.; Liu, H.; Chen, K. FlashPass:
    Proactive congestion control for shallow-buffered WAN. In Proceedings of the 2021
    IEEE 29th International Conference on Network Protocols (ICNP), Dallas, TX, USA,
    1–5 November 2021; pp. 1–12. [Google Scholar] Zhang, M.; Zhang, J.; Wang, R.;
    Govindan, R.; Mogul, J.C.; Vahdat, A. Gemini: Practical reconfigurable datacenter
    networks with topology and traffic engineering. arXiv 2021, arXiv:2110.08374.
    [Google Scholar] Tomar, P.; Kumar, G.; Verma, L.P.; Sharma, V.K.; Kanellopoulos,
    D.; Rawat, S.S.; Alotaibi, Y. CMT-SCTP and MPTCP Multipath Transport Protocols:
    A Comprehensive Review. Electronics 2022, 11, 2384. [Google Scholar] [CrossRef]
    Verma, L.P.; Sharma, V.K.; Kumar, M.; Mahanti, A. An adaptive multi-path data
    transfer approach for MP-TCP. Wirel. Netw. 2022, 28, 2185–2212. [Google Scholar]
    [CrossRef] Kumar, G.; Dukkipati, N.; Jang, K.; Wassel, H.M.G.; Wu, X.; Montazeri,
    B.; Wang, Y.; Springborn, K.; Alfeld, C.; Ryan, M.; et al. Swift: Delay is simple
    and effective for congestion control in the datacenter. In Proceedings of the
    Annual conference of the ACM Special Interest Group on Data Communication on the
    Applications, Technologies, Architectures, and Protocols for Computer Communication,
    Virtual, 10–14 August 2020; pp. 514–528. [Google Scholar] Hu, S.; Bai, W.; Zeng,
    G.; Wang, Z.; Qiao, B.; Chen, K.; Tan, K.; Wang, Y. Aeolus: A building block for
    proactive transport in datacenters. In Proceedings of the Annual conference of
    the ACM Special Interest Group on Data Communication on the Applications, Technologies,
    Architectures, and Protocols for Computer Communication, Virtual, 10–14 August
    2020; pp. 422–434. [Google Scholar] Meng, T.; Schiff, N.R.; Godfrey, P.B.; Schapira,
    M. PCC proteus: Scavenger transport and beyond. In Proceedings of the Annual Conference
    of the ACM Special Interest Group on Data Communication on the Applications, Technologies,
    Architectures, and Protocols for Computer Communication, Virtual, 10–14 August
    2020; pp. 615–631. [Google Scholar] Yang, P.; Xiong, N.; Ren, J. Data Security
    and Privacy Protection for Cloud Storage: A Survey. IEEE Access 2020, 8, 131723–131740.
    [Google Scholar] [CrossRef] Lee, B.H.; Dewi, E.K.; Wajdi, M.F. Data security in
    cloud computing using AES under HEROKU cloud. In Proceedings of the 2018 27th
    Wireless and Optical Communication Conference (WOCC), Hualien, Taiwan, 30 April–1
    May 2018; pp. 1–5. [Google Scholar] Tyagi, M.; Manoria, M.; Mishra, B. A Framework
    for Data Storage Security with Efficient Computing in Cloud. In International
    Conference on Advanced Computing Networking and Informatics: ICANI-2018; Springer:
    Singapore, 2019. [Google Scholar] [CrossRef] Tahir, M.; Sardaraz, M.; Mehmood,
    Z.; Muhammad, S. CryptoGA: A cryptosystem based on genetic algorithm for cloud
    data security. Clust. Comput. 2021, 24, 739–752. [Google Scholar] [CrossRef] Shahid,
    F.; Ashraf, H.; Ghani, A.; Ghayyur, S.A.K.; Shamshirband, S.; Salwana, E. PSDS–Proficient
    Security Over Distributed Storage: A Method for Data Transmission in Cloud. IEEE
    Access 2020, 8, 118285–118298. [Google Scholar] [CrossRef] Dubey, H.; Kumar, S.;
    Chhabra, A. Cyber Security Model to Secure Data Transmission using Cloud Cryptography.
    Cyber Secur. Insights Mag. 2022, 2, 9–12. [Google Scholar] Disclaimer/Publisher’s
    Note: The statements, opinions and data contained in all publications are solely
    those of the individual author(s) and contributor(s) and not of MDPI and/or the
    editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Li, F.; Guo, T.; Li, X.; Wang, J.; Xia, Y.;
    Ma, Y. Transportation of Service Enhancement Based on Virtualization Cloud Desktop.
    Electronics 2023, 12, 1572. https://doi.org/10.3390/electronics12071572 AMA Style
    Li F, Guo T, Li X, Wang J, Xia Y, Ma Y. Transportation of Service Enhancement
    Based on Virtualization Cloud Desktop. Electronics. 2023; 12(7):1572. https://doi.org/10.3390/electronics12071572
    Chicago/Turabian Style Li, Fan, Tengda Guo, Xiaohui Li, Junfeng Wang, Yunni Xia,
    and Yong Ma. 2023. \"Transportation of Service Enhancement Based on Virtualization
    Cloud Desktop\" Electronics 12, no. 7: 1572. https://doi.org/10.3390/electronics12071572
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   1
    Scopus   1 Google Scholar   [click to view] Article Access Statistics Article
    access statistics Article Views 28. Dec 7. Jan 17. Jan 27. Jan 6. Feb 16. Feb
    26. Feb 7. Mar 17. Mar 0 500 1000 1500 For more information on the journal statistics,
    click here. Multiple requests from the same IP address are counted as one view.   Electronics,
    EISSN 2079-9292, Published by MDPI RSS Content Alert Further Information Article
    Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI
    Guidelines For Authors For Reviewers For Editors For Librarians For Publishers
    For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org
    Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Electronics (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Transportation of Service Enhancement Based on Virtualization Cloud Desktop
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Anees T.
  - Habib Q.
  - Al-Shamayleh A.S.
  - Khalil W.
  - Obaidat M.A.
  - Akhunzada A.
  citation_count: '4'
  description: The Web of Things is an improvement on the Internet of Things (IoT)
    that incorporates smart objects into both the web architecture (application) and
    the internet (network). WoT applications are inescapable in residential homes
    and communities. The intent behind WoT applications is to increase sustainable
    development for reducing resource consumption. The Web of Things (WoT) aims to
    create a decentralized Internet of Things. Edge computing addresses IoT computing
    demands by reducing the escalation in resource congestion situations. In edge
    computing data is placed closed to the end users which diverts computation load
    from the centralized data centers. Furthermore, the dispersed structure balances
    network traffic and minimizes traffic peaks in IoT networks. Therefore, resulting
    in reducing transmission delays between edge servers and end users which improves
    response times for real-time WoT applications. Low battery supply to nodes with
    enough power resources can increase the lifespan of the individual nodes by moving
    processing and communication overhead from the nodes. This paper integrates WoT
    and edge computing and compares their functionalities. In addition, it demonstrates
    how edge computing enhances WoT performance and concentrates on transmission,
    storage, and computation aspects. Furthermore, for performance evaluation it categorizes
    edge computing based on different architectures. Moreover, the challenges of Web
    of Things and edge computing have been discussed in terms of bandwidth, latency,
    energy, and cost. Finally, advantages of the Web of Things and edge computing
    have been discussed.
  doi: 10.3390/su15075983
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sustainability All Article Types Advanced   Journals
    Sustainability Volume 15 Issue 7 10.3390/su15075983 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editors Torsten
    Reimer Julia Rayz Subscribe SciFeed Recommended Articles Related Info Link More
    by Authors Links Article Views 2107 Citations 6 Table of Contents Abstract Introduction
    Review of WoT and Edge Computing Integration of Wot and Edge Computing Challenges
    and Advantages of Edge Computing and WoT Future Challenges Conclusions and Future
    Remarks Author Contributions Funding Institutional Review Board Statement Informed
    Consent Statement Data Availability Statement Conflicts of Interest References
    share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessArticle The Integration of WoT and Edge Computing: Issues and Challenges
    by Tayyaba Anees 1, Qaiser Habib 1, Ahmad Sami Al-Shamayleh 2, Wajeeha Khalil
    3, Muath A. Obaidat 4 and Adnan Akhunzada 5,* 1 Department of Software Engineering,
    School of Systems and Technology, University of Management and Technology, Lahore
    54770, Pakistan 2 Department of Networks and Cybersecurity, Faculty of Information
    Technology, Al-Ahliyya Amman University, Amman 19328, Jordan 3 Department of Computer
    Science and Information Technology, Peshawar Campus, University of Engineering
    and Technology, Peshawar 25000, Pakistan 4 Department of Computer Science, City
    University of New York, New York, NY 10019, USA 5 College of Computing & IT, University
    of Doha for Science and Technology, Doha 24449, Qatar * Author to whom correspondence
    should be addressed. Sustainability 2023, 15(7), 5983; https://doi.org/10.3390/su15075983
    Submission received: 6 February 2023 / Revised: 15 March 2023 / Accepted: 16 March
    2023 / Published: 30 March 2023 (This article belongs to the Special Issue The
    Application of Communication Technology in Smart Residential Communities) Download
    keyboard_arrow_down     Browse Figures Review Reports Versions Notes Abstract
    The Web of Things is an improvement on the Internet of Things (IoT) that incorporates
    smart objects into both the web architecture (application) and the internet (network).
    WoT applications are inescapable in residential homes and communities. The intent
    behind WoT applications is to increase sustainable development for reducing resource
    consumption. The Web of Things (WoT) aims to create a decentralized Internet of
    Things. Edge computing addresses IoT computing demands by reducing the escalation
    in resource congestion situations. In edge computing data is placed closed to
    the end users which diverts computation load from the centralized data centers.
    Furthermore, the dispersed structure balances network traffic and minimizes traffic
    peaks in IoT networks. Therefore, resulting in reducing transmission delays between
    edge servers and end users which improves response times for real-time WoT applications.
    Low battery supply to nodes with enough power resources can increase the lifespan
    of the individual nodes by moving processing and communication overhead from the
    nodes. This paper integrates WoT and edge computing and compares their functionalities.
    In addition, it demonstrates how edge computing enhances WoT performance and concentrates
    on transmission, storage, and computation aspects. Furthermore, for performance
    evaluation it categorizes edge computing based on different architectures. Moreover,
    the challenges of Web of Things and edge computing have been discussed in terms
    of bandwidth, latency, energy, and cost. Finally, advantages of the Web of Things
    and edge computing have been discussed. Keywords: Web of Things; edge computing
    1. Introduction The internet has grown to be a crucial medium for online communication
    nowadays. On the other hand, small embedded servers are now readily available
    thanks to decades of research into the technology of a small web server. Web services
    in particular have shown to be crucial for developing interactive applications
    on the internet nowadays. Smart components with embedded web servers are readily
    added into an existing website as web resources. Reusing current web standards
    and technology to connect the online and offline worlds is only logical. In light
    of this, a study application views IoT as part of the Web of Things (WoT). With
    the help of smart devices, existing web technologies may be improved and repurposed
    to provide new apps and services, flexibility, personalization, and high productivity.
    In brief, WoT allows the devices to speak the same language in order to be able
    to communicate and interact with one another, which is distinct from the standard
    IoT approach that assigns the device an ordinary IP address and permits the device
    to connect to the internet and work online more freely. A collection of web services
    may be located, labeled, and utilized according to the WoT idea. By expanding
    web-only services from the network world to the online world and worldwide services,
    it therefore broadens the spectrum of traditional web services. Additionally,
    WoT is actually an ecosystem of services that aims to arrange various service
    kinds in a helpful manner to make them more intelligent and human-centered. The
    internet has grown to be a crucial medium for online communication nowadays. Consumers
    may now choose from a variety of smart devices, including voice-activated smart
    speakers, smart plugs, smart lighting, smart sensors, smart door locks, and more.
    IoT and smart cities are mutually inseparable since the idea of a smart city is
    built on the integration of IoT technologies. Data about numerous facets of residents’
    life can be collected via IoT devices such as sensors and cameras. For IoT applications
    (smart transportation, smart grid, smart city, etc.), a more delicate scenario
    develops, meaning that extremely quick response times are not negotiable and should
    not be satisfied with conventional cloud computing-based services. A summarized
    previous effort, current work, and a fully integrated approach to the IoT and
    edge were presented [1,2,3,4,5,6,7]. On an edge network, near to the user, edge
    computing combines computation and data storage [8,9,10,11,12,13,14,15]. When
    we compare edge computing and cloud computing, edge computing will transfer data
    and computation to network edge which can considerably reduce the latency in message
    transfers [12]. The greater amount of site visitors can be lowered since the threshold
    compute node areas are in the direction of end users. Redirecting visitors from
    overloaded nodes to free nodes can improve response times for WoT applications
    in comparison to similar cloud computing services. The success of the Internet
    of Things and cloud services needs edge computing. In edge computing, data computation
    occurs partially at the network edge which reduces burden on the cloud. Edge computing
    is used to reduce latency, battery life problems, bandwidth costs, privacy and
    security issues [8]. Security and privacy are very important concerns for sustainable
    development of smart homes and residential communities. Over-the-counter, computing
    may also send calculations and overhead communication from limited battery nodes
    or power to nearby nodes with significant electrical resources. By doing this,
    the limited battery nodes lifespan can be increased, hence extending the WoT community’s
    existence. The paper is divided into multiple sections: we briefly go through
    the fundamental ideas of edge computing and the Web of Things (WoT) and talk about
    how the two technologies could be combined in Section 2. The integration of the
    web of things and edge computing are discussed in Section 3; we have presented
    an edge computing based WoT architecture as well. In Section 4, the challenges
    and advantages of WoT and edge computing have been outlined. In Section 5, future
    challenges have been discussed. In Section 6, the conclusion of the paper has
    been presented. 2. Review of WoT and Edge Computing In this part, the fundamental
    ideas of edge computing and the Web of Things (WoT) have been explored and discussed
    including how the two technologies could be combined. Further, working of different
    authors on Web of Things is discussed in Table 1. 2.1. Web of Things The use of
    web-based technologies to access information and document services gave rise to
    the Web of Things (WoT). Every physical thing in World of Warcraft has a digital
    equivalent known as a “Virtual Object” or “Web Object” [16]. These items may be
    accessed through the HTTP (Hypertext Transfer Protocol) protocol by using the
    RESTful API, which is based on the REST (Representational State Transfer) property.
    An OWL-based semantic specification, a REST API to access its features and operations,
    and an HTML or JSON representation of the web object are all possible. There are
    three ways how online material is incorporated into the web: first, directly hosted
    on a hardware; second, embedded; and third, webserver. An embedded device with
    only 200 bytes of RAM and 7 KB of code may operate the web server with clever
    configuration [17]. A web server integrated into a gateway device or a cloud service
    can be used to control the physical content of non-convertible goods. The gateway
    device in these applications transforms traffic to HTTP into a virtual object
    identification. Figure 1 depicts these three referral techniques. The Index contains
    a summary of online integrated technology authorization [18]. Applications in
    WoT communicate with objects using the RESTful API and the HTTP standard protocol.
    Figure 1. An Overview of WoT Model. As a result, the document is simple to retrieve,
    usable in online applications, and compatible with already existing web resources
    [17]. By highlighting sensory abilities and reviving the global open market, it
    encourages the development of cyber-physical services and added value [19]. WoT
    effectively transforms the outside world into a collection of online software
    resources. Table 1. Important information of papers along with citation of papers
    on Web of Things. 2.2. Integration Pattern for Connecting Things to Web 2.2.1.
    Direct Integration The straightforward model is a straightforward integration
    paradigm in which the gadget is directly exposed into the Web of Things API, which
    is beneficial for reasonably capable devices with TCP/IP and HTTP capabilities
    and direct internet connectivity (e.g., Wi-Fi cameras). For home network devices
    that might need to employ NAT or TCP tunneling to disconnect firewalls, this pattern
    might be challenging. It also exposes the gadget to risks to its security on the
    internet as shown in Figure 2. Figure 2. Direct Integration Pattern. 2.2.2. Gateway
    Integration For devices having applications that can utilize the HTTP server directly
    and use the gateway to integrate them with the web, the gateway integration paradigm
    can be helpful. Figure 3 shows that this pattern was beneficial for devices using
    PAN network technologies, such as Bluetooth or ZigBee offline, or devices with
    low power. All varieties of IoT devices that are already connected to the web
    may be integrated via the gateway. Figure 3. Gateway Integration. 2.2.3. Cloud
    Integration In the cloud integration paradigm, a cloud server serving as a distant
    gateway is given access to the Web of Things API, and the device converses with
    the server in the background via a separate protocol. This strategy is helpful
    for several devices that need to be integrated centrally throughout a wide region
    as shown in Figure 4. Figure 4. Cloud Integration. 2.3. Edge Computing The management,
    processing, and distribution of data from billions of devices worldwide is changing
    as a result of edge computing. End-to-End computing systems are still being propelled
    by the explosive expansion of Internet of Things (IoT) devices and new applications
    that demand real-time processing capability. End-to-End computing systems can
    create or support real-time applications such as video processing and analytics,
    driverless cars, artificial intelligence, and robots more quickly thanks to quick
    network technologies such as 5G wireless. At the most fundamental level, using
    computers eliminates the reliance on location and puts counting and data storage
    closer to the devices where it is gathered. This makes sure that data, especially
    real-time data, is free of latency problems that could affect the performance
    of an application. Additionally, by lowering the quantity of data that has to
    be processed in a central or cloud-based environment, organizations may save money
    by processing locally. In response to the growing number of Internet of Things
    (IoT) devices that connect to the internet in order to access the cloud and recover
    data, edge computing can be very helpful. Additionally, a lot of IoT devices produce
    a lot of data when they are in use. In Table 2, we have mentioned several works
    related to the Internet of Things and the Web of Things. Mostly, authors have
    found that interoperability due to heterogeneity is the biggest problem for IoT
    and WoT environments, which can be solved mainly by using different standards.
    In our opinion, there is a need to develop more open standards for IoT and WoT.
    Additionally, there is a need to find out more solutions for interoperability
    in these environments due to the expected extensive use of IoT in the upcoming
    future. Furthermore, there is a need to work more on interoperability issues where
    edge computing is used as less research has been published on edge computing.
    Table 2. Important information of papers along with citation of paper. Edge computing
    ia used by many people these days. We have mentioned the most significant works
    related to Edge Computing in In Table 3. Table 3. Work of different authors on
    edge computing. 2.3.1. Edge Computing Architecture Using computer resources outside
    of traditional and cloud data centers, edge computing is a technology that allows
    work to be completed near to where data is produced and where actionable analytics
    can be carried out deeper. Engineers can develop applications by utilizing and
    controlling computing resources situated in distant locations, such as factories,
    shops, warehouses, hotels, distribution centers, or automobiles because it substantially
    reduces latencies, lowers demands on network bandwidth, increases privacy of sensitive
    information, and enables operations even when networks are disrupted. More nodes
    could be needed to transfer application functionality to the edge. The following
    are some of the essential elements of the edge ecosystem. 2.3.2. Cloud It can
    be a repository for applications, and it could be a public or private cloud. These
    clouds host and distribute software necessary to organize and control the numerous
    edge zones. These cloud workloads will communicate with edge workloads, local
    workloads, and device workloads. All the data those other nodes require may come
    from and be stored in the cloud. 2.3.3. Edge Device A tablet is a unique gadget
    with a built-in computer. Peripherals such as small manufacturing machinery, ATMs,
    smart cameras, or autos might be the subject of interesting research. This gadget
    often has constrained computational capabilities owing to financial reasons. End-to-end
    devices frequently have 1 or 2 cores, 128 MB of RAM, and maybe 1 GB of permanent
    local memory ARM or x86 class CPUs. Although they have great power, peripherals
    are the same as they are now. 2.3.4. Edge Node Any device or edge server that
    can utilize a computer is referred to as an edge node. On Android gadgets, including
    Android tablets and Android telephones, we put in force aspect. IoT edge nodes
    perform three responsibilities: they get hold of statistics from IoT nodes, perform
    semantic analysis, and supply data to cloud servers. For communique, it uses Socket
    and the MQTT (MQ Telemetry Transport) purchaser, and for semantic reasoning, it
    makes use of the Jena framework. There are two working modes for it: the first
    mode entails the brink nodes storing the ontology domestically; the second mode
    entails the brink nodes using an HTTP request to obtain the ontology from the
    remote Ontology Repository Server, which may additionally transmit any or all
    of the ontology. Figure 5 depicts the brink nodes’ procedure. These nodes first
    wait for RDF (Resource Description Framework) facts from IoT nodes, then use the
    nearby repository to seek up the ontology or make an HTTP name to the semantic
    server. They then perform the analysis and simultaneously transfer the statistics
    to the cloud server. Figure 5. Workflow to Edge Node. 2.3.5. Edge Cluster/Server
    An edge server is a computer which is situated in a distant office, such as a
    factory, retail space, hotel, or some financial institution. Typically, industrial
    PCs or rack computers are used to construct terminals and servers. End-to-end
    servers with 8, 16, or more processing cores, 16 GB of memory, and hundreds of
    GB of local storage have been very typical. Business operations and shared resources
    are supported by an end-to-end cluster or server. 2.3.6. Edge Gateway An edge
    gateway is often an edge cluster or server that offers services for network tasks
    such protocol compilation, termination networking, tunneling, security systems,
    or wireless connections in addition to being able to handle corporate duties and
    shared services. Edge ports are frequently distinct from peripheral devices, even
    if certain edge devices can perform limited network functions or act as gateways.
    IoT sensors are static devices without built-in or computer memory that gather
    and transmit data to the edge or cloud. This makes it impossible to ship containers.
    2.3.7. Edge Computing Implementation Edge computing has concentrated on creating
    edge computational models in order to make use of the aforementioned structure.
    The first two patterns generally resolve the following: Hierarchical Model: The
    edge structure is divided into categories, defining resources and functions based
    on distance, considering that edge/cloudlet servers might be utilized by end users
    in various locations. As a result, the hierarchical model must specify the edge
    computing network’s topology. Numerous studies on the hierarchical model have
    been conducted. In [48] for instance, a phased paradigm using Mobile edge computing
    (MEC) servers and cloud infrastructure was developed. Because the MEC enables
    them to meet their computational and storage demands, mobile users in this model
    may access the services they have requested. Tong, L., Y. Li, and W. Gao in [49]
    has proposed a cloud-based methodology that may be utilized to deliver the required
    loads for mobile users. In this concept, the terminal servers are utilized in
    conjunction with a regional edge cloud that is constructed as a tree configuration
    and used cloudlet servers at the network edge. The computing capabilities of peripheral
    servers may be reconstructed to handle heavy loads by adopting this design procedure
    [50]. Software Defined Model: Additionally, maintaining IoT and edge computing
    will be quite challenging given that hundreds of apps with millions of users and
    end devices have been involved. IT management complexity may be successfully addressed
    by Software Defined Networking (SDN) [51,52,53,54]. The SDN model has been the
    subject of several research projects. For example, in [53], the capabilities of
    MEC systems with software-defined systems provide a suitable software model. Costs
    related to management and administration might be decreased in this way as mentioned
    by Du, P. and A. Nakao in [54]. In order to merge the capabilities of MEC systems
    with software-defined systems, a special software model should be proposed. Management
    and administrative costs might be decreased in this way. Authors in [55] presented
    a cutting-edge operating system that strengthens network and service platforms
    by utilizing freely accessible open-source technologies. Salman, O., et al. in
    [56] planned to combine three novel ideas: Network Functions Virtualization, Software
    Defined Networking (SDN), and MEC. The system may then be scaled up to support
    IoT deployments anywhere while achieving the highest MEC performance on the mobile
    network. Lin, T., et al. in [57] offer the creation of intelligent applications
    within the Software Defined Virtual infrastructure of the smart edge frameworks,
    which may be utilized to facilitate the creation of a broad variety of distributed
    network resources and applications. 3. Integration of Wot and Edge Computing We
    have discussed WoT integration and edge computing capabilities in this section.
    We compared the functionality of the WoT and the edge computing in order to demonstrate
    how edge computing enhances WoT performance. We have also concentrated on transmission,
    storage, and computation aspects. 3.1. Overview The Thing Description (TD) proxy
    format, which is based on JSON, must be handled and parsed by the user. The information
    model and the format’s output in JSON-LD compliant can be processed using either
    JSON libraries or a JSON-LD processor. In addition to facilitating semantic processing,
    such as interpreting RDF triples, anticipating semantics, and completing tasks
    based on ontological terms, the usage of JSON-LD processors in TD processing can
    provide greater freedom. TD is an example (i.e., it discusses each item, not just
    certain sorts of objects) and goes beyond the standard (web) language. There may
    be other representations of objects such as HTML-based user interfaces, just business
    visualizations, or non-web presentations in closed programs. However, at least
    one TD presentation is necessary in order to qualify. Interacting with a particular
    object using WoT Thing Description, which is a standardized and understandable
    machine format, enables interaction between all the different IoT platforms, such
    as biological systems. A Thing directory that manages the list of available objects
    and often keeps track of their TD representation can also help with this. A Web
    of Things can be created by connecting the definitions of things in WoT with other
    objects and other online resources. To reflect the Network-to-Network interface,
    or WoT Interface of a Thing, items must be handled in the network system components
    using a software stack. Nothing may also serve as a synopsis of the apparent business.
    Providing a single WoT Object Description with an integrated set of visual business
    capabilities is one design choice. When a composition is quite complicated, its
    TD may relate to Sub Things that are arranged hierarchically inside the composition.
    Only broad information and possibly all-encompassing capabilities have been present
    in the main TD, which serves as an entrance point. This makes it possible to gather
    together some elements of More Complex Things. Figure 6 interprets the Data Analysis
    and Monitoring using IoT and edge computing technology. In addition to hierarchical
    structures, constraints also apply to broad connections between objects and other
    resources. Link types describe how items are connected, such as a switch that
    controls a light or a room that is motion-activated. Figure 6. Data Analysis and
    Monitoring using IoT edge computing Technology. In general, Web linkages between
    items allow people and machines to browse the Web of Mediators, which can serve
    as proxies for objects, with the Mediator having a definition for a WoT Thing
    that is similar to the original Thing but points to the WoT Interface made available
    by the Mediator. Mediators can design a new item in the Multiple Items offered
    or enhance existing items with additional skills, thus creating a real company.
    Since Mediators have WoT Thing definitions and a WoT interface, they seem to consumers
    as Objects, and as a consequence, they will not be shown in Objects in the form
    of a horizontal device such as the Web. Identity in WoT object descriptions should
    allow for several TDs to represent the same distinctive item or specific visible
    business. With the customer, items can be grouped together to enable Thing-to-Thing
    communication. Usually, the conductor can be included into the software component,
    which also utilizes the Object behavior. This may use a Thing to specify the customer
    conductor configuration. IoT sensors are collecting big data that are expected
    to grow exponentially every year. Using edge computing allows businesses to simplify
    and accelerate analytics and obtain the right information at the right time, as
    shown in Figure 6. All IoT application ranges, including the tool level, the limitation
    level, and the cloud level, adhere to WoT standards. This encourages common place
    connections with APIs in all relevant ranges and enables a variety of integration
    models, such as cloud computing, or more specifically, a connected cloud, as well
    as Thing-to-Thing, Thing-to-Gateway, Thing-to-Cloud, and Gateway-to-Cloud. In
    IoT applications, PC structures for two or more carrier providers. Figure 7 represents
    the edge computing-based WoT architecture. An embedded device with sensors and
    actuators that connects the mobile business, where Things are housed, however,
    was not required by WoT; it can be on an IoT device directly, an edge device such
    as a gateway, or the cloud. A typical deployment project is one in which local
    networks cannot be accessed through the internet because of a firewall or IPv4
    Network Address Translation (NAT) devices. WoT allows for intermediaries between
    Things and Consumers in order to address this problem. Figure 7. Edge computing-based
    WoT Architecture. 3.2. WoT Performance Demands 3.2.1. Transmission The sum of
    the transmission time and the processing time may be used to determine the overall
    reaction time. IoT devices often continually produce vast volumes of data, but
    they only have a few computational uses [58]. In fact, considerable network delays
    are undesirable and cannot satisfy Quality of Service (QoS) standards. Vehicle-to-Vehicle
    and Vehicle-to-Infrastructure communication are two specific examples. Response
    times should also be very fast when it comes to issues with public safety and
    requirements for first responders. For real-time data collecting and analysis
    applications, edge computing provides conventional cloud components that offer
    several dispersed computer nodes close to end users [4]. In addition, edge computation
    nodes have a sufficient processing capability to meet IoT requirements. Therefore,
    IoT application requirements can employ edge computing’s quick transmission time
    rather than the delays in typical cloud services such as Amazon Cloud or Google
    Cloud. 3.2.2. Storage IoT was a fantastic source of data, as it was not already
    a significant component of large-scale data generation. IoT must thus load huge
    data at the edge or into cloud storage. However, faster upload times are an advantage
    of edge storage uploads [59]. It was a challenge to guarantee the integrity, information
    protection, anonymization, denial, and renewal of the original data since edge
    nodes work for many businesses [60,61]. Additionally, edge nodes’ storage capacity
    is constrained and cannot be compared to cloud data centers’ huge and long-term
    storage capacities. The complexity of data management is further increased by
    the usage of several edge nodes, which have been integrated when data has been
    required. 3.2.3. Computation Numerous IoT devices have limited computing and power
    capabilities, making it impossible to execute complicated computations locally.
    The majority of the time, IoT devices merely gather data and transmit it to robust
    Computing Nodes for processing and analysis. Measuring the edge computing capability
    was a challenging task because edge nodes’ processing power was constrained. However,
    IoT needs can be completely addressed even with low processing power requirements
    for IoT devices, particularly in real-time applications with edge nodes. Edge
    nodes also lower IoT device power consumption by loading computational tasks.
    That developed an issue for IoT. Thing Descriptions’ (TDs) capacity to offer an
    abstract interface was one of the Web of Things’ most potent characteristics.
    When device capabilities, device suppliers, or new computer capabilities are made
    available, this abstraction might not change. Affordances may or may not be equivalent
    to the physical entity described by the same TD. A software simulation of a TD-compliant
    device is referred to as a Virtual Object. The majority of the time, these inputs
    will be related to data streams that, when analyzed by Artificial Intelligence
    (AI), will enable that program to imitate the characteristics, operations, and
    events that would typically be given by a real-world physical device. In a straightforward
    scenario, software may decipher data from a new door sensor product and imitate
    the behaviors, characteristics, and events that the older device supported. With
    this feature, consuming software may protect itself against the assault of bringing
    new devices into the ecosystem and remain unmodified. The original item description
    will still serve as the interface definition in the consuming program. If the
    situation is more complicated, software can handle the data stream to simulate
    a real device. These Virtual Objects make it possible to upgrade the capturing
    hardware, in this example, a video camera, without having to fully rebuild the
    program that was designed to use the Thing’s original description. As seen in
    Figure 8, dataflow may also be utilized to allow fresh descriptions of objects
    alongside older ones and to imitate several Virtual Entities. It will be much
    easier for device owners to maintain their software and hardware if they can utilize
    existing Thing Descriptions as an abstraction for Virtual Objects. Figure 8. Edge
    Computing based WoT Architecture. Use software emulation to provide support for
    earlier descriptions of objects on modern devices. Offer innovative, potent multipurpose
    gadgets that can handle a variety of Things’ Descriptions. Let older and newer
    versions of devices coexist in a device. Protect current software from modifications.
    4. Challenges and Advantages of Edge Computing and WoT The Web of Things and edge
    computing have several challenges and advantages. These challenges and advantages
    of WoT and edge computing have been covered in this section. 4.1. Challenges of
    Web of Things 4.1.1. Search and Discovery of Smart Things The search and discovery
    of Smart Things is a significant issue confronting the World Wide Web, examining
    a huge number of web pages. As a result, the great notion of locating Things becomes
    extremely impractical when searching by reading HTML pages with links. Because
    objects are made up of location-based information, often switch between different
    contexts, and have wordy HTML submissions, searching for them is far more difficult
    than searching for documents. Compared to typical web pages, the key is smaller.
    Recent advancements in semantic description, such as Micro formats, which may
    be integrated with HTML presentations, will undoubtedly assist to improve the
    perception of the services offered by Web Objects [62,63]. It might be necessary
    to inform any person or organization of the existence, capabilities, and details
    of the desired web service. For instance, in order to negotiate a shared objective
    to establish a new group in accordance with specific requirements, objects need
    to know the identities of smart objects and web services in their environment.
    To WoT, search engines are crucial. According to [62], there are primarily two
    methods for developing a search engine. The push approach involves pushing active
    sensor results to the search engine, which then uses the information to address
    queries proactively. In the smart object-based crowdsourcing environment, this
    approach cannot scale. It can only be applied to systems with a few devices. As
    an alternative, the pull approach has the search engine send pertinent data to
    the sensor only after receiving the user’s query. Although this approach can be
    scaled up, it is valued for its precision and promptness. Here, our attention
    is on the latter. More crowdfunding than ever before is being supported by the
    web and smart object integration. The internet offers a lot of the web-based services
    and information found in the physical world. More services may be beneficial and
    convenient for users, but WoT is not a search engine’s worst nightmare. With the
    massive amount of web content created every day and the mass search of Web2.0,
    search engines are not an easy task, let alone the mass search of Web3.0 created
    by trillions of smart objects. A search engine that enables looking for physical
    world services that meet specific criteria will also be the main service for WoT.
    Static or slowly changing content written by humans rules the conventional web.
    WoT’s content is constantly evolving because smart items are generated automatically
    [64]. As a result, searching for frequently changing content will be supported
    by the WoT search engine. This is the main issue because the search engine is
    built on the premise that most web content changes gradually and that updating
    its index infrequently is sufficient. With many devices in the physical world
    operating at a frequency of minutes or seconds, this is not possible for WoT.
    However, some web resources or services are only useful at specific times. Future
    installations will also be produced dynamically depending on the situation. Web
    services for resources might need to be dynamically searched for and retrieved
    in real time. The dynamics of WoT, which are brought about by features such as
    the movement and connectivity of intelligent objects, make this issue even more
    challenging. Real-time information searching and real-time web service discovery
    are supported by the WoT search engine. On this subject, some ground-breaking
    work has been performed. The web infrastructure that already exists can be used
    to support the publishing of sensor and entity data, as demonstrated by Ostermaier,
    B., et al. [65]. The authors examine and improve current methods (such as Wang,
    H., et al. [66], Tan, C.C., et al. [67], Yap, K.-K., V. Srinivasan, and M. Motani
    [68], etc.). In their work [68], the authors proposed an architecture and system
    capable of rapidly searching physical objects. They noted that emerging technology
    trends such as smart textiles, smart paints, RFID tags, smart dust, and HP’s Memory
    Spot suggest that a broad range of physical objects will soon be equipped with
    small devices having fundamental communication and processing capabilities. 4.1.2.
    Data Inconsistency The current state of the IoT generally demonstrates that a
    large number of devices are producing real-time data through their interactions.
    Following the conversion to WoT, a justification for processing the supplied data
    has been explained. It provides a set of three IoT devices to demonstrate the
    overall scenario. Every IoT device produces data, which Reasoner will have access
    to. IoT Device 1, the first of these devices, produces static data, but IoT Devices
    2 and 3 provide data that are incompatible. The IoT network protocol gathers all
    of this data, which are then analyzed by a suitable device, such as a smartphone,
    computer, or router, and then converted and incorporated into WoT. After being
    updated by an RDF identifier, the data produced by the IoT device will be converted
    to the Semantic Web. Then, Reasoner may receive this data, which is already provided
    as triplets in accordance with Semantic Web standards. In the end, Reasoner provides
    consumers with results via a website or another web-based means. The facts, however,
    are not always accurate; frequently, they display negativity. When portrayed as
    being challenging to grasp, incompatible data is described as data that is delivered
    in an ambiguous context. The weight of this information on the choice may change
    significantly as a result of this ambiguity, which might provide contradictory
    or inconsistent results. Contradicting information arises when two separate sources
    give conflicting information, yet one of them is essential. That was forced into
    an unstoppable pattern that is unable to provide a clear sequence for various
    data sources as a result of the proliferation of IoT applications. As a result,
    managing the contradictory data produced by various IoT sources can be the largest
    problem. The right conversion protocol that enables Reasoners to analyze this
    data is currently absent, although there are instances where Reasoners can function
    with fixed data from a single source if it goes over the full network of IoT devices.
    Otherwise, it can result in inconsistent results for the user or possibly harm
    the machine on which it is installed. Therefore, it is crucial for end users to
    fix data errors in WoT [69]. 4.1.3. Security The development of proper authorization
    procedures is required to prevent data leakage or poor performance on shared WoT
    resources since security is a key concern for the IoT and WoT domains [64]. However,
    it is crucial to make a distinction between platform access control and object
    access control. In regard to the first function, WoT uses contemporary web technology
    to authenticate users when they enter the platform; content visibility can also
    be automatically changed [28]. The latter now only has two visible levels (public
    or private); however, it is possible to identify which subscription policy has
    the strongest characters. The access policy for the Thing, in contrast, is specified
    in its TD. The current version of the W3C WoT has established a number of authorization
    models, including token-based models, for restricted access to the topic. Data
    encryption is crucial, but security best practices and robust user, device, service,
    and application authentication mechanisms were also required. 4.1.4. IoT Protocol
    There is a significant gap between IoT transactions and advances that continue
    to emphasize the need for covert layers that freely interact with core IoT technologies
    to ease the curve and improve service development boost overall sustainability
    and developer learning. The numerous device and version suppliers that are available
    can be helped by the abstraction layers. IoT devices are in danger when security
    issues are discovered since they are frequently hacked and may not be able to
    change their software [70]. Utilizing device ports that are software upgradeable,
    as opposed to working on hardware-delayed devices, can help achieve this goal
    and offer superior security. In truth, gateways can make use of device drivers,
    but this raises the issue of which drivers will be necessary for each individual
    device and will need the usage of common APIs by drivers to meet IoT standards.
    4.1.5. Identity Verification As part of end-to-end security and trust management,
    identity verification is crucial for devices, users, apps, and services. It cannot
    be presumed that WoT users are real or capable of authenticating, unlike typical
    web application users. As a result, developing techniques for validating metadata,
    such as the existence of data, the position of a certain sensor, and many other
    identifiers, will be necessary for trust management to know your customer’s needs.
    Well-known brands, stringent testing procedures, and even the availability of
    a big number of individuals in terms of reputation management can serve as the
    foundation for this trust. In [71], the authors offer a threat analysis for IP
    packet fragmentation attacks against the 6LoWPAN adaption layer and suggest a
    mitigation method that uses time stamps and dots appended to fragment IDs to thwart
    such attacks. For instance, to ensure present and future compatibility with other
    web-based software applications, Chen, G., et al. [72] depend on open data portability
    protocols such as OData, oEmbed, OpenID17, and OAuth18. Only specific groups are
    permitted to use certain online services. An authentication proxy between users
    and smart objects, the Social Access Controller (SAC) prototype, is implemented
    by Guinard et al. [73]. Access control between objects cannot be handled by UN-based
    approaches, which can only handle access control between persons and things. It
    is anticipated that a universal yet dispersed access control system would allow
    for interdependent behavior while protecting the owners’ privacy. 4.1.6. Resilience
    We will need to focus on resilience as the usage of WoT based applications grows,
    and services will need to keep up with demand. Hardware or software malfunctions,
    such as relevant updates, may prevent or cause some mistakes. Services must be
    designed to withstand breakdowns, including the capability of implementing the
    proper corrective actions when sensory reading has been acknowledged to be impractical.
    Resilience may also be put to the test by cyber threats from adversarial nations.
    To combat this, considerable attention will need to be paid to fixing security
    weaknesses, diligent observation of fraudulent activity, and the implementation
    of strong countermeasures such as security devices. 4.1.7. Things and Avatars
    Usually, more data than the raw data sensor can offer was needed for applications
    and services. Data must also be contextualized within the context of other sources.
    Regulatory systems must also contextually translate their acts into actions for
    the contractor. WoT must be able to simulate the actual world at various production
    levels, allowing for free, competitive marketplaces for services at each level.
    Because items in World of Warcraft are not just linked gadgets, items may have
    one or more avatars or presentations. Access control and data management regulations,
    as well as ownership, detailed descriptions, and services, are all features of
    avatars. The avatar can also be accessible via web technologies and has a URI.
    Avatars assist in developing software and services that mix data from several
    sources with varying degrees of output. 4.1.8. Smart Searches Intelligent goal-based
    searches will have more chances to open service standards. Additionally, the procedure
    begins as it usually does when the user enters a search string. Using an easy-to-use
    interface tailored to a particular aim, search engines utilize six-way rules to
    identify targets, extract pertinent search parameters, and lead them to registered
    services. These specialized services may make further service requests as necessary,
    but in order to appear on the search engine results page, they must be able to
    deliver results in under a second. Be aware that the user can access a particularly
    challenging question in the results by clicking on a link or symbol. This enables
    users to receive time-consuming chores as out-of-band alerts. 4.1.9. Legal Implications
    Legal implications might be the customer paying for services that are free or
    inexpensive. Since the contract is set up between the service provider and the
    customer for premium services, it can be reversed. There could be disagreement
    on the test technique with regard to trust and reference. As WoT raises the likelihood
    of accidents, the insurance sector may be in disarray. 4.2. Advantages of Web
    of Things 4.2.1. Current Open Ecosystem There are many of ways to use already-developed
    languages such as JavaScript, data input techniques such as Efficient XML Interchange
    (EXI) and JSON, metadata and data formatting tools such as those created by Open
    Data group, as well as protocols such as HTTP and the Web. These were only a few
    secrets: for instance, utilizing driver’s devices on gateways that employ the
    IoT protocol, JavaScript may be used directly to interface with IoT sensors and
    actuators in the browser, whether they are in the cloud or at the network’s edge.
    These devices operate the forum and show web settings. This can be performed with
    ease on smartphones and tablets, and operating systems such as iOS and Android
    already offer native APIs for Bluetooth or Near-Field Communication (NFC) access
    to onboard sensors and proximity devices. In the future, this work may combine
    APIs with different protocols, such as MQTT (MQ Telemetry Transport) and CoAP
    (Constraint Application Protocol). Other devices nearby can be notified via Low
    Power Bluetooth [74]. 4.2.2. Home Hubs Another alternative to hosting services
    are home hubs. Nowadays, most individuals have a hub at home that serves as a
    Wi-Fi hotspot for high-speed internet access. It is likely that these gadgets
    will evolve into platforms for offering IoT home gadget services. These centers
    must include open standards that allow consumers to install service with any provider
    they choose if they are to have the best chance of success. Portal devices that
    can be placed close to the home will also be necessary to access IoT devices outside
    of the hub. A key component of a smart home is the ability of residential facilities
    and household appliances to communicate with one another thanks to the “ECHONET
    Lite” protocol. An HTTP message interpreter can be used by WoT clients to connect
    to the ECHONET Lite Web API application. Supporting transparent communication
    between WoT consumers and non-WoT devices that use the HTTP protocol as a transport
    protocol, such as the ECHONET Lite Web API device, may be desired for the WoT
    standard as shown in Figure 9. Figure 9. Home WoT System Architecture. Configuration
    by the user of the device before starting to use the service ○ The user of the
    device logs in to the server of the “Household Management Service Provider” with
    which the user has a contract. ○ The user specifies the lighting, air conditioning,
    and security sensor operating modes for when the user is away from home, when
    the user returns home, and when the specified time has elapsed after the user
    returned home. When the device user leaves home ○ The user of the device accesses
    the server of the “Home Management Service Provider” using a smartphone and informs
    the server that the user is about to leave the home. ○ The server updates the
    operating modes of the lighting, air conditioning, and security sensor according
    to the configuration entered by the user during the time when the user is away
    from home. ○ The server reads the operating modes of the lighting, air conditioning,
    and security sensor and informs the user’s smartphone about these operating modes.
    4.2.3. Cloud Platforms Platforms built on the cloud may be planned to expand flexibly
    as platform loads increase. One illustration is the Cloud Foundry-based open-source
    design forum and service naming which can allow using Node-RED and be transmitted
    to the naming cloud through this forum. Service owners may create security guidelines
    that take access control, static flow analysis, and robust monitoring into consideration.
    4.2.4. Standard Vocabularies and Repository A standard method for identifying
    the links supplied by services and the websites are necessary in the free market
    for services. A helpful analogy for organizing Linux packages is that of a tree,
    where each package contains its own name, version number, and declaration of the
    names and spacing of the other packages it depends on. However, how can you promote
    the reuse of metadata and data words and support current repositories that developers
    can browse and search, where they are encouraged to post brand-new phrases. 4.2.5.
    Monetizing It goes without saying that generating a positive environment such
    as this requires monetizing a service. This will require vendor-neutral open standards
    for web-scale ecosystems. The Web Payments Interest Group, which the W3C has created,
    aims to eliminate web requests from payment systems. In reality, this can take
    the form of one-time fees, recurring charges, charges for individual usage, or
    non-discriminatory procedures for providing particular users or groups of users
    accesses to a particular service. The basis for legally enforceable agreements
    between service providers and customers may be found in contract law, which is
    essentially the same across the board. These agreements can apply to policies
    that provide data owners choice over how the data is used and for what reasons
    in addition to payment systems. 4.2.6. Cyber Physical Systems In order to accomplish
    common system objectives such as regulating traffic on city highways, keeping
    a comfortable climate in huge buildings, and monitoring close to the smart grid
    for power supply, the network-physical system really controls the sensor and actuator
    lock. To fulfil the demands for low latency and tight connection across several
    actuators, control of such systems must be extended to the edge of the network
    and represented at multiple output levels. As a result, protocols will have to
    be modified to account for latency and vibration requirements, and it is possible
    that the service layer will have to transfer QoS requirements to the network layer.
    Furthermore, as latency may be less important than process intensity, different
    output levels may have different needs. 4.3. Challenges of Edge Computing 4.3.1.
    Bandwidth High bandwidth can speed up transmission times from a latency standpoint,
    especially for huge data such as videos [75,76]. We can set up access to wireless
    bandwidth with short-term transmission so that we can transfer data to the edge.
    On the other hand, operating on the edge can dramatically reduce latency compared
    to working in the cloud if the workload can be managed there. Additionally, the
    bandwidth between the edge and the cloud is preserved. As an illustration, practically
    all data in a smart home setting may be handled at the doorstep using Wi-Fi or
    other high-speed communication techniques. Additionally, the shorter transmission
    increases the transmission’s dependability. However, even if the transmission
    distance cannot be decreased since the edge can meet the computing need, the data
    is processed sooner at the edges, and the download data size is significantly
    decreased. To considerably minimize the quantity of data in the case of smart
    cities, it has been advised to analyze photographs before downloading. Particularly
    when using the carrier’s data infrastructure, it helps conserve the user’s bandwidth.
    Globally speaking, bandwidth is preserved in both scenarios and is available for
    use by other domains to upload and download data. Therefore, we must determine
    if a high-bandwidth connection is required and what speeds are appropriate given
    the constraint. Additionally, in order to avoid concurrency and latency, there
    were some needs to consider the available computing capacity and bandwidth consumption
    in order to precisely calculate the workload allocation for each layer. Users
    write their own code and deploy it on the cloud while using cloud computing. Where
    computing will take place in the cloud must be decided by the cloud provider.
    Users have little to no understanding of how the program functions. One benefit
    of cloud computing is that the user can see right through the infrastructure.
    Many calculations can be carried out at the edge rather than a central cloud,
    as described in edge computing [77]. 4.3.2. Latency One of the most crucial performance
    testing measures, particularly for collaborative apps and services, is latency
    [78,79,80,81]. Advanced computational capabilities are offered by cloud servers.
    They are capable of completing complicated tasks quickly, including speech recognition
    and picture processing. The computation time is not, however, constrained by the
    delay. Real-time application/interaction behavior can be significantly impacted
    by long-term WAN latency [81,82]. Workload should be properly minimized at a neighboring
    layer with adequate processing power at the network’s edge in order to avoid delays.
    Instead of uploading all the pictures, for instance, in the case of a smart city,
    phones can be utilized to process the local photographs first and transmit the
    information that might be lost back to the cloud. The front edge will be processed
    considerably more quickly due to the sheer volume of photos and their size. A
    close-up strategy might not, however, always be the best choice. In order to locate
    the appropriate layer, there is a need to consider instructions on how to utilize
    the application. It would be preferable to upload the image to a nearby door or
    tiny center if the user is playing a game because the phone counting gadget is
    already in use. 4.3.3. Energy Batteries are a crucial component of every network.
    Edge loading work might be viewed as a technique for the final seam construction
    [83,84] with therefore more energy-efficient to relax all of the burden (or a
    portion of it) at the edges rather than depending on it, given a particular workload.
    The right balance between the computer’s power use and transmission capacity is
    crucial. Generally speaking, it must first consider the workload’s advantages.
    If there is no network signal [85], transmission capacity will also depend on
    the size of the data and the available bandwidth. Only when the airpath is shorter
    than utilizing the local computer do we prefer to employ edge computing. However,
    the overall power consumption should equal the total cost of energy for each layer
    employed if we are interested in the edge compute process as a whole rather than
    simply the endpoints [81,86]. A local and transmission cost calculator may be
    used to estimate the power consumption of each layer for the final point layer.
    The precise assignment plan can alter in this situation. For instance, the workload
    is continually being uploaded to the top tier because the local data center layer
    is busy. Multi-step transmission can greatly improve performance as compared to
    terminal computing, but it also consumes more power. 4.3.4. Cost From the perspective
    of service providers, such as YouTube, Amazon, and others, edge computing allows
    them to operate with the least amount of latency and power, which can enhance
    their performance and user experience. They may therefore handle the same unit
    of labor while making more money. For instance, it may position a popular film
    on the edge of the building layer based on the preferences of numerous residents.
    You might be released from this task and given an extremely challenging one on
    the edge of the city floor. The overall sum may be raised. The investment made
    by the service provider was equal to what it costs to build and maintain each
    layer’s materials. Providers may impose fees on customers depending on location
    data in order to maximize the value of each layer’s location data. To ensure service
    provider profitability and user approval, new cost models need to be updated.
    4.4. Advantages of Edge Computing 4.4.1. Distributed Computing A distributed computer
    in a distant data center might utilize the application just as much as one in
    a central data center; hence, edge infrastructure must constantly be accurately
    assessed. 4.4.2. Security and Accessibility Companies may integrate technological
    and physical security by integrating with single-premise applications in the data
    center, creating a virtual barrier around resources. Edge computing transforms
    the security landscape by demanding the same network and mobile security models
    on remote servers in order to track location and traffic patterns. Given that
    using a computer may need access to a very large number of devices, IT teams will
    need to clearly map user access privileges. 4.4.3. Backup The data generating
    environment is often what drives the end-to-end computing approach. When selecting
    how to secure these assets, network bandwidth needs will be just as crucial as
    storage media concerns since it might not be practical to create a backup across
    the network. 4.4.4. Data Accumulation Data is a crucial corporate asset, and if
    it is not collected and managed properly, it could eventually pose new problems
    and potentially lead to debt. Both data access and storage are crucial, and both
    require network integration as a component of the data lifecycle. 4.4.5. Control
    and Management Although edge zones in an organization, private cloud, or even
    public cloud might be flexible, managers and controllers must adhere to the same
    procedures and guidelines wherever they can. The new orchestration tools should
    enable enterprises to manage apps without hindrance, regardless of location. 4.4.6.
    Scale The scope of everything the IT team performs expands as more highly connected
    devices are added to the edge. In the end, edge computing is increasingly used
    across all computer domains, including computation, networking, storage, management,
    security, authorization, and more. When putting apps on the network, business
    owners need to be aware of this edge: measure the impact of edge on anything IT-related,
    not only as additional distant gear. 5. Future Challenges The integration of the
    Internet of Things (IoT) and edge computing presents several current and future
    challenges, including: Data Management: Handling the massive amounts of data generated
    by IoT devices and ensuring their timely and efficient processing at the edge
    is a major challenge [86]. Security: Ensuring the security of IoT devices and
    the data they generate is a critical challenge, as these devices are often vulnerable
    to hacking and cyber-attacks [87,88,89]. Another problem is that the integration
    of smart things into the standard Internet introduces additional security challenges
    because the majority of Internet technologies and communication protocols were
    not designed to support Internet of Things [90]. Interoperability: Ensuring interoperability
    between different IoT devices and edge computing systems is a challenge, as it
    requires standardization and common protocols [91]. Scalability: Scaling edge
    computing systems to meet the demands of growing IoT networks is a challenge,
    as it requires efficient resource utilization and effective management [92]. Latency:
    Reducing latency in IoT networks and edge computing systems is a challenge, as
    it requires efficient data processing and communication [93]. Energy Efficiency:
    Ensuring energy efficiency in IoT devices and edge computing systems is a challenge,
    as it requires energy-saving algorithms and strategies [94]. Integration with
    Cloud Computing: Integrating edge computing with cloud computing is a challenge,
    as it requires seamless communication and coordination between these two systems
    [77,95,96]. Cost Effectiveness: Ensuring cost-effectiveness in IoT and edge computing
    systems is a challenge, as it requires efficient resource utilization and effective
    cost management [97]. Searching resources in WoT is also a big challenge, especially
    dynamic searching and intent based searching [63]. Many physical objects (Things)
    are connected to the internet and are accessible through a web interface, and
    efficient searching of Things is required as there is a significant increase in
    IoT devices [98]. Searching of suitable Things from billions of device is also
    difficult because of multiple Things performing the same functionality, but some
    devices are near to the user or free at some time which can respond more accurately
    and efficiently which depends upon the selection of the right Thing [99]. These
    challenges highlight the need for ongoing research and development in the fields
    of WoT and edge computing to overcome these obstacles and advance the integration
    of these technologies. Implementing edge in WoT presents open research challenges.
    There is heterogeneity in the computing and communication technologies used in
    WoT-based edge computing. Communication technologies may be heterogeneous in terms
    of data transfer rate, transmission distance, and bandwidth, whereas computing
    platforms may have a variety of operating systems and hardware architectures.
    The need to create software solutions that can be applied in various environments
    is one of the challenges of edge computing. Because different applications are
    deployed in edge devices, this problem is very important. In order to facilitate
    the execution of workloads concurrently on various levels of hardware, programmers
    should create a programming model for edge nodes that is supported by task-level
    and data-level parallelism. Use a language that supports hardware heterogeneity
    as a second factor. Different devices and sensors connect to and communicate with
    the edge server and each other in this heterogeneous environment using different
    communication protocols. Due to the unique interfaces on these devices, particular
    communication protocols are needed. In order to facilitate communication between
    these heterogeneous devices in the WoT, standard protocols and interfaces should
    be developed since different vendors produce various types of devices in the WoT.
    The quick development of new devices makes it difficult to develop standard protocols
    and interfaces in WoT. The provision of resources and services at the hardware
    and software levels anywhere, at any time for the WoT subscription is included
    in the availability in the WoT-based edge computing environment. Due to the unique
    interfaces on these devices, particular communication protocols are needed. In
    order to facilitate communication between these heterogeneous devices in the WoT,
    standard protocols and interfaces should be developed since different vendors
    produce various types of devices in the WoT. The quick development of new devices
    makes it difficult to develop standard protocols and interfaces in the WoT. We
    have discussed most significant open challenges and guidelines for future in Table
    4. Table 4. Open Challenges and Guidelines. Ensuring the availability of resources
    and services for WoT-based edge computing environments, anytime and anywhere,
    is a crucial aspect. Availability, which encompasses the mean time between failures,
    the probability of failure, and the mean time to recovery, is essential in providing
    hardware and software resources and services to WoT subscribers. However, addressing
    the challenge of maintaining availability for the increasing WoT population is
    a complex research area. One way to improve availability is to enhance the mean
    time between failures while reducing both the mean time to recovery and the probability
    of failure. In the context of the Web of Things (WoT), numerous devices capable
    of generating data are connected through a network and send vast quantities of
    raw data to the edge device. For edge devices, it is computationally challenging
    to analyze such large data. Risks to security are also connected to this. It is
    advisable to carry out pre-processing of data at the gateway level to eliminate
    noise/low quality data, detect events, and ensure privacy protection. A higher
    layer will receive the processed data to provide additional services in the future.
    However, this process is not without its share of issues. To ensure privacy and
    security, applications operating on edge devices should not have access to this
    raw data. Therefore, during data pre-processing, data details should be eliminated.
    Hiding the specifics of the captured data, however, might affect how usable the
    data is. The amount of raw data that should be filtered is another issue, as many
    applications cannot produce accurate results using such data. Because data does
    not cross the network, edge computing has a positive impact on cybersecurity.
    The network is, however, exposed by the extremely dynamic environment at the network
    edge. The fact that different devices are interconnected in WoT creates a variety
    of security risks. The data presented to these applications should be in an encrypted
    or concealed format, as numerous edge applications execute there. Otherwise, anyone
    can access the open data and use them for illicit purposes. For instance, if a
    home is wired to the Internet of Things, personal information such as health records
    can be taken. The issue here is how to maintain the service without jeopardizing
    privacy. The raw data should not be visible to applications running on edge devices.
    Before it reaches the edge device, personal information can be removed. However,
    edge nodes should be equipped with security measures that are more robust. High
    latency will be impacted by a crowded network, weak signal, and a slow router.
    Additionally, new techniques for gauging latency are needed. Based on data size,
    evaluate the effectiveness of storing RDF data in various forms. If the RDF data
    has a different structure, finding the same format has a different level of efficiency.
    Consequently, a more intricate measurement could be carried out using the RDF
    data structure. To use a large data set for our scalability experiments, consider
    the future exponential growth of WoT. Everything around us, including a refrigerator,
    an oven, a bed, a table, and even a pencil, will eventually become intelligent
    WoT devices. Future studies may examine the best way to assign tasks and the performance-enhancing
    criteria. For the sake of optimization, it was also necessary to determine how
    to divide the RDF data, rules, and ontology. The edge computing paradigm’s parallel
    execution of reasoning tasks will speed up processing and enhance performance.
    The correlation between transfer speed, reasoning speed, and storage speed determines
    the degree of improvement. The performance improvement might eventually peak at
    steady state if the relationship between these rates is fixed. Performance will
    also be improved by adding more edge nodes. Future research should focus on finding
    the best way to divide up RDF rules and data. 6. Conclusions and Future Remarks
    IoT is the next significant internet potential. It is more about the connection
    or interaction between intelligent things (i.e., things and people). Furthermore,
    all intelligent entities must be able to communicate freely. Thus, WoT has emerged
    as the dominant trend supporting the growth of IoT. Web of Things applications
    are an essential part in residential smart homes and smart communities. They provide
    necessary services which are required for increasing sustainable development of
    smart residential communities and for reducing their resource consumption. In
    this paper, WoT and edge computing integration have been discussed. It provides
    an overview of the functionality of WoT and edge computing as well as the impact
    of edge computing (i.e., storage, transmission, and computational aspects) to
    enhance WoT applications overall performance. Moreover, edge computing has the
    capabilities to handle real-time massive communications and computation. In contrast,
    cloud computing approaches have also been reviewed. Edge computing has the potential
    to lower down the transmission latency between end users and edge servers, leading
    to better response times for real-time WoT-based applications compared to cloud
    computing. WoT will be certainly essential to people’s lives in the future as
    smart cities and communities are all based on it; ; however, WoT faces several
    challenges (i.e., search and discovery of smart things, data inconsistency, security
    and identity verification, scalability, interoperability, etc.) that have been
    argued. Additionally, the battery life of restricted nodes can be increased by
    decreasing the cost of moving data and moving computers, as well as by enhancing
    communication between nodes with limited battery capacity, and nodes with crucial
    power increase the lifespan of the overall IoT systems. The bulk of future IoT
    applications may be implemented using web technologies, which are widely used
    and provide all the flexibility and functionality required, including real-time
    messaging, security, interoperability, and discovery. Author Contributions Conceptualization,
    T.A. and Q.H.; methodology, A.A., M.A.O. and W.K.; software, T.A. and Q.H.; validation,
    A.S.A.-S. and A.A.; formal analysis, T.A. and W.K.; investigation, M.A.O. and
    A.A.; resources, W.K.; data curation, M.A.O. and A.S.A.-S.; writing—original draft
    preparation, Q.H.; writing—review and editing, A.A., M.A.O. and W.K.; visualization,
    A.S.A.-S. and Q.H.; supervision, T.A. All authors have read and agreed to the
    published version of the manuscript. Funding This research received no external
    funding. Institutional Review Board Statement Not applicable. Informed Consent
    Statement Not applicable. Data Availability Statement Not applicable. Conflicts
    of Interest The authors have no conflict of interest. References Corcoran, P.;
    Datta, S.K. Mobile-edge computing and the internet of things for consumers: Extending
    cloud computing and services to the edge of the network. IEEE Consum. Electron.
    Mag. 2016, 5, 73–74. [Google Scholar] [CrossRef] Vallati, C.; Virdis, A.; Mingozzi,
    E.; Stea, G. Mobile-edge computing come home connecting things in future smart
    homes using LTE device-to-device communications. IEEE Consum. Electron. Mag. 2016,
    5, 77–83. [Google Scholar] [CrossRef] Dastjerdi, A.V.; Buyya, R. Fog computing:
    Helping the Internet of Things realize its potential. Computer 2016, 49, 112–116.
    [Google Scholar] [CrossRef] Georgakopoulos, D.; Jayaraman, P.P.; Fazia, M.; Villari,
    M.; Ranjan, R. Internet of Things and edge cloud computing roadmap for manufacturing.
    IEEE Cloud Comput. 2016, 3, 66–73. [Google Scholar] [CrossRef] Jutila, M. An adaptive
    edge router enabling internet of things. IEEE Internet Things J. 2016, 3, 1061–1069.
    [Google Scholar] [CrossRef] Sabella, D.; Vaillant, A.; Kuure, P.; Rauschenbach,
    U.; Giust, F. Mobile-edge computing architecture: The role of MEC in the Internet
    of Things. IEEE Consum. Electron. Mag. 2016, 5, 84–91. [Google Scholar] [CrossRef]
    Chiang, M.; Zhang, T. Fog and IoT: An overview of research opportunities. IEEE
    Internet Things J. 2016, 3, 854–864. [Google Scholar] [CrossRef] Shi, W.; Cao,
    J.; Zhang, Q.; Li, Y.; Xu, L. Edge computing: Vision and challenges. IEEE Internet
    Things J. 2016, 3, 637–646. [Google Scholar] [CrossRef] Frankston, B. Mobile-Edge
    Computing versus The Internet?: Looking beyond the literal meaning of MEC. IEEE
    Consum. Electron. Mag. 2016, 5, 75–76. [Google Scholar] [CrossRef] Garcia Lopez,
    P.; Montresor, A.; Epema, D.; Datta, A.; Higashino, T.; Iamnitchi, A.; Barcellos,
    M.; Felber, P.; Riviere, E. Edge-Centric Computing: Vision and Challenges. ACM
    SIGCOMM Comput. Commun. Rev. 2015, 45, 37–42. [Google Scholar] [CrossRef] [Green
    Version] Mao, Y.; You, C.; Zhang, J.; Huang, K.; Letaief, K.B. A survey on mobile
    edge computing: The communication perspective. IEEE Commun. Surv. Tutor. 2017,
    19, 2322–2358. [Google Scholar] [CrossRef] [Green Version] Yu, W.; Liang, F.;
    He, X.; Hatcher, W.G.; Lu, C.; Lin, J.; Yang, X. A Survey on the Edge Computing
    for the Internet of Things. IEEE Access 2017, 6, 6900–6919. [Google Scholar] Li,
    H.; Shou, G.; Hu, Y.; Guo, Z. Mobile edge computing: Progress and challenges.
    In Proceedings of the 2016 4th IEEE International Conference on Mobile Cloud Computing,
    Services and Engineering (MobileCloud), Oxford, UK, 29 March–1 April 2016. [Google
    Scholar] Mach, P.; Becvar, Z. Mobile edge computing: A survey on architecture
    and computation offloading. IEEE Commun. Surv. Tutor. 2017, 19, 1628–1656. [Google
    Scholar] [CrossRef] [Green Version] Hatcher, W.G.; Booz, J.; McGiff, J.; Lu, C.;
    Yu, W. Edge Computing Based Machine Learning Mobile Malware Detection. 2017. Available
    online: https://www.google.com.hk/search?q=Edge+computing+based+machine+learning+mobile+malware+detection&ei=hNIXZJnlE7S6seMPys-EgAU&ved=0ahUKEwiZt-7_x-n9AhU0XWwGHconAVAQ4dUDCA4&uact=5&oq=Edge+computing+based+machine+learning+mobile+malware+detection&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQA0oECEEYAFAAWABg_AVoAHABeACAAW6IAW6SAQMwLjGYAQCgAQKgAQHAAQE&sclient=gws-wiz-serp
    (accessed on 27 February 2023). Christophe, B.; Boussard, M.; Lu, M.; Pastor,
    A.; Toubiana, V. The web of things vision: Things as a service and interaction
    patterns. Bell Labs Tech. J. 2011, 16, 55–61. [Google Scholar] [CrossRef] Duquennoy,
    S.; Grimaud, G.; Vandewalle, J.-J. The web of things: Interconnecting devices
    with high usability and performance. In Proceedings of the 2009 International
    Conference on Embedded Software and Systems, Hangzhou, China, 25–27 May 2009;
    IEEE: Piscataway, NJ, USA, 2009. [Google Scholar] Ngu, A.H.; Gutierrez, M.; Metsis,
    V.; Nepal, S.; Sheng, Q.Z. IoT middleware: A survey on issues and enabling technologies.
    IEEE Internet Things J. 2016, 4, 1–20. [Google Scholar] [CrossRef] Stirbu, V.
    Towards a restful plug and play experience in the web of things. In Proceedings
    of the 2008 IEEE International Conference on Semantic Computing, Santa Monica,
    CA, USA, 4–7 August 2008; IEEE: Piscataway, NJ, USA, 2008. [Google Scholar] Baraković,
    S.; Baraković Husić, J.; Maraj, D.; Maraj, A.; Krejcar, O.; Maresova, P.; Melero,
    F.J. Quality of life, quality of experience, and security perception in web of
    things: An overview of research opportunities. Electronics 2020, 9, 700. [Google
    Scholar] [CrossRef] Niwarlangga, A.C.; Candra, M.Z.C. Application framework for
    semantic web of things. In Proceedings of the 2020 7th International Conference
    on Advance Informatics: Concepts, Theory and Applications (ICAICTA), Online, 8–9
    September 2020; IEEE: Piscataway, NJ, USA, 2020. [Google Scholar] Datta, S.K.;
    Bonnet, C. Advances in web of things for IoT interoperability. In Proceedings
    of the 2018 IEEE International Conference on Consumer Electronics-Taiwan (ICCE-TW),
    Taichung, Taiwan, 19–21 May 2018; IEEE: Piscataway, NJ, USA, 2018. [Google Scholar]
    Kamilaris, A.; Pitsillides, A.; Prenafeta-Bold, F.X.; Ali, M.I. A Web of Things
    based eco-system for urban computing-towards smarter cities. In Proceedings of
    the 2017 24th International Conference on Telecommunications (ICT), Limassol,
    Cyprus, 3–5 May 2017; IEEE: Piscataway, NJ, USA, 2017. [Google Scholar] Younan,
    M.; Khattab, S.; Bahgat, R. From the wireless sensor networks (WSNs) to the Web
    of Things (WoT): An overview. J. Intell. Syst. Internet Things 2021, 4, 56–68.
    [Google Scholar] [CrossRef] Cimmino, A.; Poveda-Villalón, M.; García-Castro, R.
    eWoT: A semantic interoperability approach for heterogeneous iot ecosystems based
    on the web of things. Sensors 2020, 20, 822. [Google Scholar] [CrossRef] [Green
    Version] Premkumar, M.; Ashokkumar, S.R.; Mohanbabu, G.; Jeevanantham, V.; Jayakumar,
    S. Security behavior analysis in web of things smart environments using deep belief
    networks. Int. J. Intell. Netw. 2022, 3, 181–187. [Google Scholar] [CrossRef]
    Parwej, F.; Akhtar, N.; Perwej, Y. An empirical analysis of web of things (WOT).
    Int. J. Adv. Res. Comput. Sci. 2019, 10, 32–40. [Google Scholar] [CrossRef] Sciullo,
    L.; Gigli, L.; Trotta, A.; Di Felice, M. WoT Store: Managing resources and applications
    on the web of things. Internet Things 2020, 9, 100164. [Google Scholar] [CrossRef]
    Vanden Hautte, S.; Moens, P.; Van Herwegen, J.; De Paepe, D.; Steenwinckel, B.;
    Verstichel, S.; Ongenae, F.; Van Hoecke, S. A dynamic dashboarding application
    for fleet monitoring using semantic web of things technologies. Sensors 2020,
    20, 1152. [Google Scholar] [CrossRef] [PubMed] [Green Version] Pastor-Vargas,
    R.; Tobarra, L.; Robles-Gómez, A.; Martin, S.; Hernández, R.; Cano, J. A wot platform
    for supporting full-cycle iot solutions from edge to cloud infrastructures: A
    practical case. Sensors 2020, 20, 3770. [Google Scholar] [CrossRef] Marsh-Hunn,
    D.; Trilles, S.; González-Pérez, A.; Torres-Sospedra, J.; Ramos, F. A Comparative
    Study in the Standardization of IoT Devices Using Geospatial Web Standards. IEEE
    Sensors J. 2020, 21, 5512–5528. [Google Scholar] [CrossRef] Vresk, T.; Čavrak,
    I. Architecture of an interoperable IoT platform based on microservices. In Proceedings
    of the 2016 39th International Convention on Information and Communication Technology,
    Electronics and Microelectronics (MIPRO), Opatija, Croatia, 30 May–3 June 2016;
    IEEE: Piscataway, NJ, USA, 2016. [Google Scholar] Trilles, S.; Calia, A.; Belmonte,
    Ó.; Torres-Sospedra, J.; Montoliu, R.; Huerta, J. Deployment of an open sensorized
    platform in a smart city context. Futur. Gener. Comput. Syst. 2017, 76, 221–233.
    [Google Scholar] [CrossRef] Huang, C.Y.; Wu, C.H. Design and implement an interoperable
    Internet of Things application based on an extended OGC sensorthings API Standard.
    In Proceedings of the The International Archives of the Photogrammetry, Remote
    Sensing and Spatial Information Sciences, Prague, Czech Republic, 12–19 July 2016.
    [Google Scholar] Trilles, S.; Torres-Sospedra, J.; Belmonte, Ó.; Zarazaga-Soria,
    F.J.; González-Pérez, A.; Huerta, J. Development of an open sensorized platform
    in a smart agriculture context: A vineyard support system for monitoring mildew
    disease. Sustain. Comput. Inform. Syst. 2020, 28, 100309. [Google Scholar] [CrossRef]
    Kotsev, A.; Schleidt, K.; Liang, S.; Van der Schaaf, H.; Khalafbeigi, T.; Grellet,
    S.; Lutz, M.; Jirka, S. Extending INSPIRE to the Internet of Things through SensorThings
    API. Geosciences 2018, 8, 221. [Google Scholar] [CrossRef] [Green Version] Kotsev,
    A.; Minghini, M.; Tomas, R.; Cetl, V.; Lutz, M. From spatial data infrastructures
    to data spaces—A technological perspective on the evolution of European SDIs.
    ISPRS Int. J. Geo-Inf. 2020, 9, 176. [Google Scholar] [CrossRef] [Green Version]
    Granell, C.; Kamilaris, A.; Kotsev, A.; Ostermann, F.O.; Trilles, S. Internet
    of things. In Manual of Digital Earth; Springer Singapore: Singapore, 2020; pp.
    387–423. [Google Scholar] Trilles, S.; Luján, A.; Belmonte, Ó.; Montoliu, R.;
    Torres-Sospedra, J.; Huerta, J. SEnviro: A sensorized platform proposal using
    open hardware and open standards. Sensors 2015, 15, 5555–5582. [Google Scholar]
    [CrossRef] [Green Version] Cao, K.; Liu, Y.; Meng, G.; Sun, Q. An overview on
    edge computing research. IEEE Access 2020, 8, 85714–85728. [Google Scholar] [CrossRef]
    Porambage, P.; Okwuibe, J.; Liyanage, M.; Ylianttila, M.; Taleb, T. Survey on
    multi-access edge computing for internet of things realization. IEEE Commun. Surv.
    Tutor. 2018, 20, 2961–2991. [Google Scholar] [CrossRef] [Green Version] Sha, K.;
    Yang, T.A.; Wei, W.; Davari, S. A survey of edge computing-based designs for IoT
    security. Digit. Commun. Netw. 2020, 6, 195–202. [Google Scholar] [CrossRef] Ahmed,
    E.; Rehmani, M.H. Mobile Edge Computing: Opportunities, Solutions, and Challenges;
    Elsevier: Amsterdam, The Netherlands, 2017; pp. 59–63. [Google Scholar] Pan, J.;
    McElhannon, J. Future edge cloud and edge computing for internet of things applications.
    IEEE Internet Things J. 2017, 5, 439–449. [Google Scholar] [CrossRef] Premsankar,
    G.; Di Francesco, M.; Taleb, T. Edge computing for the Internet of Things: A case
    study. IEEE Internet Things J. 2018, 5, 1275–1284. [Google Scholar] [CrossRef]
    [Green Version] Liu, Y.; Peng, M.; Shou, G.; Chen, Y.; Chen, S. Toward edge intelligence:
    Multiaccess edge computing for 5G and Internet of Things. IEEE Internet Things
    J. 2020, 7, 6722–6747. [Google Scholar] [CrossRef] Hamdan, S.; Ayyash, M.; Almajali,
    S. Edge-computing architectures for internet of things applications: A survey.
    Sensors 2020, 20, 6441. [Google Scholar] [CrossRef] Jararweh, Y.; Doulat, A.;
    AlQudah, O.; Ahmed, E.; Al-Ayyoub, M.; Benkhelifa, E. The future of mobile cloud
    computing: Integrating cloudlets and mobile edge computing. In Proceedings of
    the 2016 23rd International Conference on Telecommunications (ICT), Thessaloniki,
    Greece, 16–18 May 2016; IEEE: Piscataway, NJ, USA, 2016. [Google Scholar] Tong,
    L.; Li, Y.; Gao, W. A hierarchical edge cloud architecture for mobile computing.
    In Proceedings of the IEEE INFOCOM 2016-The 35th Annual IEEE International Conference
    on Computer Communications, San Francisco, CA, USA, 10–14 April 2016; IEEE: Piscataway,
    NJ, USA, 2016. [Google Scholar] Ahmed, E.; Akhunzada, A.; Whaiduzzaman, M.; Gani,
    A.; Ab Hamid, S.H.; Buyya, R. Network-Centric Performance Analysis of Runtime
    Application Migration in Mobile Cloud Computing. Simul. Model. Pract. Theory 2015,
    50, 42–56. [Google Scholar] [CrossRef] Wang, G.; Zhao, Y.; Huang, J.; Wang, W.
    The controller placement problem in software defined networking: A survey. IEEE
    Netw. 2017, 31, 21–27. [Google Scholar] [CrossRef] Zhu, D.; Yang, X.; Zhao, P.;
    Yu, W. Towards effective intra-flow network coding in software defined wireless
    mesh networks. In Proceedings of the 2015 24th International Conference on Computer
    Communication and Networks (ICCCN), Las Vegas, NV, USA, 3–6 August 2015; IEEE:
    Piscataway, NJ, USA, 2015. [Google Scholar] Jararweh, Y.; Doulat, A.; Darabseh,
    A.; Alsmirat, M.; Al-Ayyoub, M.; Benkhelifa, E. SDMEC: Software defined system
    for mobile edge computing. In Proceedings of the 2016 IEEE international conference
    on cloud engineering workshop (IC2EW), Berlin, Germany, 4–8 April 2016; IEEE:
    Piscataway, NJ, USA, 2016. [Google Scholar] Du, P.; Nakao, A. Application specific
    mobile edge computing through network softwarization. In Proceedings of the 2016
    5th IEEE International Conference on Cloud Networking (Cloudnet), Pisa, Italy,
    3–5 October 2016; IEEE: Piscataway, NJ, USA, 2016. [Google Scholar] Manzalini,
    A.; Crespi, N. An edge operating system enabling anything-as-a-service. IEEE Commun.
    Mag. 2016, 54, 62–67. [Google Scholar] [CrossRef] Salman, O.; Elhajj, I.; Kayssi,
    A.; Chehab, A. Edge computing enabling the Internet of Things. In Proceedings
    of the 2015 IEEE 2nd World Forum on Internet of Things (WF-IoT), Milan, Italy,
    14–16 December 2015; pp. 603–608. [Google Scholar] Lin, T.; Park, B.; Bannazadeh,
    H.; Leon-Garcia, A. Demo abstract: End-to-end orchestration across SDI smart edges.
    In Proceedings of the 2016 IEEE/ACM Symposium on edge computing (SEC), Washington,
    DC, USA, 27–28 October 2016; IEEE: Piscataway, NJ, USA, 2016. [Google Scholar]
    Bonomi, F.; Milito, R.; Natarajan, P.; Zhu, J. Fog computing: A platform for internet
    of things and analytics. In Big Data and Internet of Things: A Roadmap for Smart
    Environments; Springer: Berlin/Heidelberg, Germany, 2014; pp. 169–186. [Google
    Scholar] Jiang, H.; Shen, F.; Chen, S.; Li, K.-C.; Jeong, Y.-S. A secure and scalable
    storage system for aggregate data in IoT. Futur. Gener. Comput. Syst. 2015, 49,
    133–141. [Google Scholar] [CrossRef] Hossain, M.M.; Fotouhi, M.; Hasan, R. Towards
    an analysis of security issues, challenges, and open problems in the internet
    of things. In Proceedings of the 2015 IEEE world congress on services, New York,
    NY, USA, 27 June–2 July 2015; IEEE: Piscataway, NJ, USA, 2015. [Google Scholar]
    Yang, X.; Wang, T.; Ren, X.; Yu, W. Survey on improving data utility in differentially
    private sequential data publishing. IEEE Trans. Big Data 2017, 7, 729–749. [Google
    Scholar] [CrossRef] Guinard, D.; Trifa, V.; Wilde, E. A resource oriented architecture
    for the web of things. In Proceedings of the 2010 Internet of Things (IOT), Tokyo,
    Japan, 29 November–1 December 2010; IEEE: Piscataway, NJ, USA, 2010. [Google Scholar]
    Faheem, M.R.; Anees, T.; Hussain, M. The Web of Things: Findability Taxonomy and
    Challenges. IEEE Access 2019, 7, 185028–185041. Available online: https://ieeexplore.ieee.org/abstract/document/8935107
    (accessed on 27 February 2023). [CrossRef] Sardar, R.; Anees, T. Web of Things:
    Security Challenges and Mechanisms. IEEE Access 2021, 9, 31695–31711. [Google
    Scholar] [CrossRef] Ostermaier, B.; Römer, K.; Mattern, F.; Fahrmair, M.; Kellerer,
    W. A real-time search engine for the web of things. In Proceedings of the 2010
    Internet of Things (IOT), Tokyo, Japan, 29 November–1 December 2010; IEEE: Piscataway,
    NJ, USA, 2010. [Google Scholar] Wang, H.; Tan, C.C.; Li, Q. Snoogle: A search
    engine for pervasive environments. IEEE Trans. Parallel Distrib. Syst. 2009, 21,
    1188–1202. [Google Scholar] [CrossRef] [Green Version] Tan, C.C.; Sheng, B.; Wang,
    H.; Li, Q. Microsearch: When search engines meet small devices. In Proceedings
    of the Pervasive Computing: 6th International Conference, Pervasive 2008, Sydney,
    Australia, 19–22 May 2008; Springer: Berlin/Heidelberg, Germany, 2008. [Google
    Scholar] Yap, K.-K.; Srinivasan, V.; Motani, M. Max: Human-centric search of the
    physical world. In Proceedings of the 3rd international conference on Embedded
    networked sensor systems, San Diego, CA, USA, 2–4 November 2005; pp. 166–179.
    [Google Scholar] Blanco, J.M.; Ge, M.; Pitner, T. Modeling Inconsistent Data for
    Reasoners in Web of Things. Procedia Comput. Sci. 2021, 192, 1265–1273. [Google
    Scholar] [CrossRef] Schneier, B. The internet of things is wildly insecure-and
    often unpatchable. Schneier Secur. 2014, 6. Available online: https://www.wired.com/2014/01/theres-no-good-way-to-patch-the-internet-of-things-and-thats-a-huge-problem/
    (accessed on 27 February 2023). Kim, H. Protection against packet fragmentation
    attacks at 6LoWPAN adaptation layer. In Proceedings of the 2008 International
    conference on convergence and hybrid information technology, Daejeon, Republic
    of Korea, 28–30 August 2008; IEEE: Piscataway, NJ, USA, 2008. [Google Scholar]
    Chen, G.; Yau, N.; Hansen, M.; Estrin, D. Sharing Sensor Network Data; UCLA: Center
    for Embedded Network Sensing: Los Angeles, CA, USA, 2007. [Google Scholar] Guinard,
    D.; Trifa, V. Towards the web of things: Web mashups for embedded devices. In
    Proceedings of the Workshop on Mashups, Enterprise Mashups and Lightweight Composition
    on the Web (MEM 2009), Madrid, Spain, 20 April 2009. [Google Scholar] Lin, X.;
    Andrews, J.G.; Ghosh, A.; Ratasuk, A. An overview of 3GPP device-to-device proximity
    services. IEEE Commun. Mag. 2014, 52, 40–48. [Google Scholar] [CrossRef] [Green
    Version] Greenberg, A.; Hamilton, J.; Maltz, D.A.; Patel, P. The Cost of a Cloud:
    Research Problems in Data Center Networks; ACM: New York, NY, USA, 2008; pp. 68–73.
    [Google Scholar] Armbrust, M.; Fox, A.; Griffith, R.; Joseph, A.D.; Katz, R.;
    Konwinski, A.; Lee, G.; Patterson, D.; Rabkin, A.; Stoica, I. A view of cloud
    computing. Commun. ACM 2010, 53, 50–58. [Google Scholar] [CrossRef] [Green Version]
    Alam, Q.; Malik, S.U.; Akhunzada, A.; Choo, K.-K.R.; Tabbasum, S.; Alam, M. A
    Cross Tenant Access Control (CTAC) Model for Cloud Computing: Formal Specification
    and Verification. IEEE Trans. Inf. Forensics Secur. 2016, 12, 1259–1268. [Google
    Scholar] [CrossRef] Jackson, K.R.; Ramakrishnan, L.; Muriki, K.; Canon, S.; Cholia,
    S.; Shalf, J.; Wasserman, H.J.; Wright, N.J. Performance analysis of high performance
    computing applications on the amazon web services cloud. In Proceedings of the
    2010 IEEE Second International Conference on Cloud Computing Technology and Science,
    Indianapolis, IN, USA, 30 November–3 December 2010; IEEE: Piscataway, NJ, USA,
    2010. [Google Scholar] Li, A.; Yang, X.; Kandula, S.; Zhang, M. CloudCmp: Comparing
    public cloud providers. In Proceedings of the 10th ACM SIGCOMM conference on Internet
    measurement, Melbourne, Australia, 1–30 November 2010. [Google Scholar] Wadhwa,
    H.; Aron, R. TRAM: Technique for Resource Allocation and Management in Fog Computing
    Environment. J. Supercomput. 2022, 78, 667–690. [Google Scholar] [CrossRef] Hussain,
    S.M.; Wahid, A.; Shah, M.A.; Akhunzada, A.; Khan, F.; ul Amin, N.; Arshad, S.;
    Ali, I. Seven Pillars to Achieve Energy Efficiency in High-Performance Computing
    Data Centers. In Recent Trends and Advances in Wireless and IoT-Enabled Networks;
    Springer International Publishing: Cham, Switzerland, 2019. [Google Scholar] Satyanarayanan,
    M. Mobile computing: The next decade. ACM SIGMOBILE Mob. Comput. Commun. Rev.
    2011, 15, 2–10. [Google Scholar] [CrossRef] Miettinen, A.P.; Nurminen, J.K. Energy
    efficiency of mobile clients in cloud computing. In Proceedings of the 2nd USENIX
    Workshop on Hot Topics in Cloud Computing (HotCloud 10), Boston, MA, USA, 22–25
    June 2010. [Google Scholar] Chun, B.-G.; Ihm, S.; Maniatis, P.; Naik, M.; Patti,
    A. Clonecloud: Elastic execution between mobile device and cloud. In Proceedings
    of the Sixth Conference on Computer Systems, Alzburg, Austria, 10–13 April 2011.
    [Google Scholar] Ding, N.; Wagner, D.; Chen, X.; Pathak, A.; Hu, Y.C.; Rice, A.
    Characterizing and modeling the impact of wireless signal strength on smartphone
    battery drain. ACM SIGMETRICS Perform. Eval. Rev. 2013, 41, 29–40. [Google Scholar]
    [CrossRef] [Green Version] Ma, M.; Wang, P.; Chu, C.-H. Data management for internet
    of things: Challenges, approaches and opportunities. In Proceedings of the 2013
    IEEE International Conference on Green Computing and Communications and IEEE Internet
    of Things and IEEE Cyber, Physical and Social Computing, Beijing, China, 20–23
    August 2013; IEEE: Piscataway, NJ, USA, 2013. [Google Scholar] Toor, A.; ul Islam,
    S.; Sohail, N.; Akhunzada, A.; Boudjadar, J.; Khattak, H.A.; Din, I.U.; Rodrigues,
    J.J. Energy and Performance Aware Fog Computing: A Case of DVFS and Green Renewable
    Energy. Future Gener. Comput. Syst. 2019, 101, 1112–1121. [Google Scholar] [CrossRef]
    Khan, M.T.; Akhunzada, A.; Zeadally, S. Proactive Defense for Fog-to-Things Critical
    Infrastructure. IEEE Commun. Mag. 2022, 60, 44–49. [Google Scholar] [CrossRef]
    Khan, W.Z.; Rafique, W.; Haider, N.; Hakak, S.; Imran, M. Internet of Everything:
    Enabling Technologies, Applications, Security and Challenges. 2022. Available
    online: https://www.techrxiv.org/articles/preprint/Internet_of_Everything_Enabling_Technologies_Applications_Security_and_Challenges/21341796
    (accessed on 27 February 2023). Mosenia, A.; Jha, N.K. A comprehensive study of
    security of internet-of-things. IEEE Trans. Emerg. Top. Comput. 2016, 5, 586–602.
    [Google Scholar] [CrossRef] Noura, M.; Atiquzzaman, M.; Gaedke, M. Interoperability
    in internet of things: Taxonomies and open challenges. Mob. Netw. Appl. 2019,
    24, 796–809. [Google Scholar] [CrossRef] [Green Version] Gupta, A.; Christie,
    R.; Manjula, R. Scalability in internet of things: Features, techniques and research
    challenges. Int. J. Comput. Intell. Res. 2017, 13, 1617–1627. [Google Scholar]
    Shukla, S.; Hassan, M.F.; Tran, D.C.; Akbar, R.; Paputungan, I.V.; Khan, M.K.
    Improving latency in Internet-of-Things and cloud computing for real-time data
    transmission: A systematic literature review (SLR). Clust. Comput. 2021, 1–24.
    [Google Scholar] [CrossRef] Liu, C.H.; Fan, J.; Branch, J.W.; Leung, K.K. Toward
    QoI and energy-efficiency in Internet-of-Things sensory environments. IEEE Trans.
    Emerg. Top. Comput. 2014, 2, 473–487. [Google Scholar] [CrossRef] Botta, A.; De
    Donato, W.; Persico, V.; Pescapé, A. Integration of cloud computing and internet
    of things: A survey. Futur. Gener. Comput. Syst. 2016, 56, 684–700. [Google Scholar]
    [CrossRef] Haghi Kashani, M.; Rahmani, A.M.; Jafari Navimipour, N. Quality of
    Service-Aware Approaches in Fog Computing. Int. J. Commun. Syst. 2020, 33, e4340.
    [Google Scholar] [CrossRef] Febrer, N.; Folkvord, F.; Lupiañez-Villanueva, F.
    Cost-effectiveness assessment of internet of things in smart cities. Front. Digit.
    Health 2021, 3, 662874. [Google Scholar] [CrossRef] [PubMed] Faheem, M.R.; Anees,
    T.; Hussain, M. Development of a Novel Ranking Mechanism and Search Engine in
    Web of Things; OSF: Galesburg, IL, USA, 2022. [Google Scholar] Faheem, M.R.; Anees,
    T.; Hussain, M. Keywords and Spatial Based Indexing for Searching the Things on
    Web. KSII Trans. Internet Inf. Syst. 2022, 16, 1489–1515. [Google Scholar] Ahmed,
    E.; Gani, A.; Sookhak, M.; Ab Hamid, S.H.; Xia, F. Application optimization in
    mobile cloud computing: Motivation, taxonomies, and open challenges. J. Netw.
    Comput. Appl. 2015, 52, 52–68. [Google Scholar] [CrossRef] Yang, R.; Yu, F.R.;
    Si, P.; Yang, Z.; Zhang, Y. Integrated blockchain and edge computing systems:
    A survey, some research issues and challenges. IEEE Commun. Surv. Tutor. 2019,
    21, 1508–1532. [Google Scholar] [CrossRef] Khan, W.Z.; Aalsalem, M.Y.; Khan, M.K.;
    Arshad, Q. Data and privacy: Getting consumers to trust products enabled by the
    Internet of Things. IEEE Commun. Surv. Tutor. 2019, 8, 35–38. [Google Scholar]
    [CrossRef] Hussein, N.; Nhlabatsi, A. Living in the Dark: MQTT-Based Exploitation
    of IoT Security Vulnerabilities in ZigBee Networks for Smart Lighting Control.
    IoT 2022, 3, 450–472. [Google Scholar] [CrossRef] Al-Roomi, M.; Al-Ebrahim, S.;
    Buqrais, S.; Ahmad, I. Cloud computing pricing models: A survey. Int. J. Grid
    Distrib. Comput. 2013, 6, 93–106. [Google Scholar] [CrossRef] Bertolli, C.; Buono,
    D.; Mencagli, G.; Torquati, M.; Vanneschi, M.; Mordacchini, M.; Nardini, F.M.
    Resource discovery support for time-critical adaptive applications. In Proceedings
    of the 6th International Wireless Communications and Mobile Computing Conference,
    Caen, France, 28 June–2 July 2010. [Google Scholar] Kientopf, K.; Raza, S.; Lansing,
    S.; Güneş, M. Service Management Platform to Support Service Migrations for IoT
    Smart City Applications. In Proceedings of the 2017 IEEE 28th Annual International
    Symposium on Personal, Indoor, and Mobile Radio Communications (PIMRC), Montreal,
    QC, Canada, 8–13 October 2017; pp. 1–5. [Google Scholar] Kirci, P. Ubiquitous
    and Cloud computing: Ubiquitous computing. In Resource Management and Efficiency
    in Cloud Computing Environments; IGI Global: Hershey, PA, USA, 2017; pp. 1–32.
    [Google Scholar] Ahmed, E.; Gani, A.; Khan, M.K.; Buyya, R.; Khan, S.U. Seamless
    application execution in mobile cloud computing: Motivation, taxonomy, and open
    challenges. J. Netw. Comput. Appl. 2015, 52, 154–172. [Google Scholar] [CrossRef]
    Li, X.; Liu, S.; Wu, F.; Kumari, S.; Rodrigues, J.J. Privacy preserving data aggregation
    scheme for mobile edge computing assisted IoT applications. IEEE Internet Things
    J. 2018, 6, 4755–4763. [Google Scholar] [CrossRef]  Disclaimer/Publisher’s Note:
    The statements, opinions and data contained in all publications are solely those
    of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s).
    MDPI and/or the editor(s) disclaim responsibility for any injury to people or
    property resulting from any ideas, methods, instructions or products referred
    to in the content.  © 2023 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Anees, T.; Habib, Q.; Al-Shamayleh, A.S.; Khalil,
    W.; Obaidat, M.A.; Akhunzada, A. The Integration of WoT and Edge Computing: Issues
    and Challenges. Sustainability 2023, 15, 5983. https://doi.org/10.3390/su15075983
    AMA Style Anees T, Habib Q, Al-Shamayleh AS, Khalil W, Obaidat MA, Akhunzada A.
    The Integration of WoT and Edge Computing: Issues and Challenges. Sustainability.
    2023; 15(7):5983. https://doi.org/10.3390/su15075983 Chicago/Turabian Style Anees,
    Tayyaba, Qaiser Habib, Ahmad Sami Al-Shamayleh, Wajeeha Khalil, Muath A. Obaidat,
    and Adnan Akhunzada. 2023. \"The Integration of WoT and Edge Computing: Issues
    and Challenges\" Sustainability 15, no. 7: 5983. https://doi.org/10.3390/su15075983
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   6
    Web of Science   4 Scopus   4 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 28. Dec 7. Jan 17. Jan 27.
    Jan 6. Feb 16. Feb 26. Feb 7. Mar 17. Mar 0 500 1000 1500 2000 2500 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Sustainability, EISSN 2071-1050, Published by MDPI
    RSS Content Alert Further Information Article Processing Charges Pay an Invoice
    Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers
    For Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sustainability (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'The Integration of WoT and Edge Computing: Issues and Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Łuczak D.
  - Brock S.
  - Siembab K.
  citation_count: '5'
  description: The human-centric and resilient European industry called Industry 5.0
    requires a long lifetime of machines to reduce electronic waste. The appropriate
    way to handle this problem is to apply a diagnostic system capable of remotely
    detecting, isolating, and identifying faults. The authors present usage of HTTP/1.1
    protocol for batch processing as a fault diagnosis server. Data are sent by microcontroller
    HTTP client in JSON format to the diagnosis server. Moreover, the MQTT protocol
    was used for stream (micro batch) processing from microcontroller client to two
    fault diagnosis clients. The first fault diagnosis MQTT client uses only frequency
    data for evaluation. The authors’ enhancement to standard fast Fourier transform
    (FFT) was their usage of sliding discrete Fourier transform (rSDFT, mSDFT, gSDFT,
    and oSDFT) which allows recursively updating the spectrum based on a new sample
    in the time domain and previous results in the frequency domain. This approach
    allows to reduce the computational cost. The second approach of the MQTT client
    for fault diagnosis uses short-time Fourier transform (STFT) to transform IMU
    6 DOF sensor data into six spectrograms that are combined into an RGB image. All
    three-axis accelerometer and three-axis gyroscope data are used to obtain a time-frequency
    RGB image. The diagnosis of the machine is performed by a trained convolutional
    neural network suitable for RGB image recognition. Prediction result is returned
    as a JSON object with predicted state and probability of each state. For HTTP,
    the fault diagnosis result is sent in response, and for MQTT, it is send to prediction
    topic. Both protocols and both proposed approaches are suitable for fault diagnosis
    based on the mechanical vibration of the rotary machine and were tested in demonstration.
  doi: 10.3390/s23073755
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all Typesetting math: 100%   Journals Topics Information Author Services
    Initiatives About Sign In / Sign Up Submit   Search for Articles: Sensors All
    Article Types Advanced   Journals Sensors Volume 23 Issue 7 10.3390/s23073755
    Submit to this Journal Review for this Journal Propose a Special Issue Article
    Menu Academic Editors Qiong Wang Teng Huang Yan Pang Subscribe SciFeed Recommended
    Articles Related Info Links More by Authors Links Article Views 1974 Citations
    5 Table of Contents Abstract Introduction General Structures of Data Collection
    and Processing for Fault Diagnosis Internet of Things Protocols for Batch and
    Stream Processing of Fault Diagnosis General Structure of Fault Diagnosis and
    Perspective Maintenance Feature Extraction Methods Demonstration of Fault Diagnosis
    with MQTT Communication Recognition of a Time–Frequency RGB Image of Vibration
    Discussion Conclusions Author Contributions Funding Institutional Review Board
    Statement Informed Consent Statement Data Availability Statement Conflicts of
    Interest References share Share announcement Help format_quote Cite question_answer
    Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order
    Article Reprints Open AccessArticle Cloud Based Fault Diagnosis by Convolutional
    Neural Network as Time–Frequency RGB Image Recognition of Industrial Machine Vibration
    with Internet of Things Connectivity by Dominik Łuczak *, Stefan Brock and Krzysztof
    Siembab Faculty of Automatic Control, Robotics and Electrical Engineering, Poznan
    University of Technology, 60-965 Poznań, Poland * Author to whom correspondence
    should be addressed. Sensors 2023, 23(7), 3755; https://doi.org/10.3390/s23073755
    Submission received: 5 March 2023 / Revised: 30 March 2023 / Accepted: 31 March
    2023 / Published: 5 April 2023 (This article belongs to the Topic AI and Data-Driven
    Advancements in Industry 4.0) Download keyboard_arrow_down     Browse Figures
    Versions Notes Abstract The human-centric and resilient European industry called
    Industry 5.0 requires a long lifetime of machines to reduce electronic waste.
    The appropriate way to handle this problem is to apply a diagnostic system capable
    of remotely detecting, isolating, and identifying faults. The authors present
    usage of HTTP/1.1 protocol for batch processing as a fault diagnosis server. Data
    are sent by microcontroller HTTP client in JSON format to the diagnosis server.
    Moreover, the MQTT protocol was used for stream (micro batch) processing from
    microcontroller client to two fault diagnosis clients. The first fault diagnosis
    MQTT client uses only frequency data for evaluation. The authors’ enhancement
    to standard fast Fourier transform (FFT) was their usage of sliding discrete Fourier
    transform (rSDFT, mSDFT, gSDFT, and oSDFT) which allows recursively updating the
    spectrum based on a new sample in the time domain and previous results in the
    frequency domain. This approach allows to reduce the computational cost. The second
    approach of the MQTT client for fault diagnosis uses short-time Fourier transform
    (STFT) to transform IMU 6 DOF sensor data into six spectrograms that are combined
    into an RGB image. All three-axis accelerometer and three-axis gyroscope data
    are used to obtain a time-frequency RGB image. The diagnosis of the machine is
    performed by a trained convolutional neural network suitable for RGB image recognition.
    Prediction result is returned as a JSON object with predicted state and probability
    of each state. For HTTP, the fault diagnosis result is sent in response, and for
    MQTT, it is send to prediction topic. Both protocols and both proposed approaches
    are suitable for fault diagnosis based on the mechanical vibration of the rotary
    machine and were tested in demonstration. Keywords: image recognition; HTTP; MQTT;
    feature extraction; convolutional neural network; time–frequency domain; short-time
    Fourier transform; sliding discrete Fourier transform 1. Introduction Modern factories,
    cites, and households are equipped with an increasing number of electromechanical
    systems, which consume energy and have limited lifetimes. The appropriate maintenance
    of these devices can increase their useful life, which is cost-effective and environmentally
    friendly, reducing the number of electronic waste. In the literature, the term
    “electronic trash” or “trash” can also be found [1,2,3], but more often it is
    “electronic waste”, “e-waste” [4,5] or WEEE (Waste Electrical and Electronic Equipment)
    [6,7,8]. Maintenance of industrial machines is more demanding due to the complexity
    of electrical and mechanical parts. Perspective maintenance allows to avoid the
    unwanted stoppage of the production cycle and prevents unwanted damages of equipment.
    Deep understanding of available tools and the application of fault diagnosis is
    more demanding with the number of scientific articles already published in the
    field. Under keyword “fault diagnosis”, Google Scholar lists nearly 1.6 million
    articles. Limitation of results to “industrial machines” with operator AND gives
    1.6 thousand articles. Another aspect of modern factories, cities, and households
    is increasing capability of exchange data through the global Internet network,
    which is named IoT (Internet of Things) or more narrowly, IIoT (Industrial Internet
    of Things) for industrial interconnections. Another term is Industry 4.0 which
    “describes the organization of production processes based on technology and devices
    autonomously communicating with each other along the value chain” [9,10]. However,
    the new term “Industry 5.0” was introduced towards a sustainable, human-centric
    and resilient European industry [8]. The publication database with the keyword
    “fault diagnosis” and “IoT” gives almost 12.3 thousand publications in the field.
    Therefore, both areas of fault diagnosis and IoT are popular and a growing field
    in the research area. The review of the patent database gives a new view on IoT
    and fault diagnosis. Since January 2020, the IPC (International Patent Classification)
    has been extended with the subclass G16Y titled “information and communication
    technology specially adapted for the internet of things”. Additionally, subgroup
    G16Y40/00 “IoT characterized by the purpose of the information processing” is
    dedicated to maintenance and management. Further detailed classification symbols
    are G16Y40/10 for detection; monitoring, G16Y40/20 analytics; diagnosis and G16Y40/40
    maintenance of things. The Espacenet patent search gives nearly 2.8 thousand patents
    in a search by classification symbols G16Y40/10, G16Y40/20, and G16Y40/40. In
    the following sections, the author makes efforts to present a brief review of
    fault diagnosis and IoT, however, due to the large number of articles and patents,
    the limited pages of articles, and the limited time resources of the author, some
    aspects were omitted. The manuscript is organized as follows: In chapter 2, general
    structure of the data collection system with local and Internet connectivity is
    described, which gives a view of the communication aspects of the fault diagnosis
    system with IoT for batch and stream data processing; in chapter 3, in detail
    are described IoT protocols such as HTTP (Hypertext Transfer Protocol) and MQTT
    (Message Queuing Telemetry Transport) for batch and stream data processing and
    their usage for data ingestion and data routing in the fault diagnosis system;
    in chapter 4, the structure of the fault diagnosis system from the signal processing
    point of view is presented; in chapter 5, different feature extraction methods
    that can be used for diagnosis in frequency domain such as FFT (fast Fourier transform)
    algorithms (radix-2 and radix-4), STFT (short-time Fourier transform), and group
    of algorithms of SDFT (sliding discrete Fourier transform) are explained; in chapter
    6, a demonstration rig with MQTT connectivity is presented with dataset description
    in the time domain, frequency domain, and time–frequency domain. Based on preliminary
    selected single-axis data (gyroscope Z axis) in frequency domain features calculated
    by SDFT, a classifier was trained and tested which is an enhancement and reduction
    of computation requirements in comparison to features calculated by STFT; in Chapter
    7, a proposed concept of usage 3-axis acceleration and 3-axis gyroscope sensor
    to create RGB (red, green, and blue) images from six time–frequency domain features
    which can be recognized by CNN (convolutional neural network) is presented and
    verified. The proposed approach proves that CNN can be successfully used in multispectrogram
    recognition which are organized into RGB images for fault diagnosis without the
    need for preliminary selection of the vibration axis. The proposed recognition
    of the RGB six-spectrogram and enhanced usage of SDFT instead of STFT was compared
    with other available methods and the results are shown in Table 1. CNN is used
    in vision-based recognition and vision applications [11,12,13,14]. Therefore,
    CNN can be applied to recognize specially prepared time–frequency images, as shown
    in the proposed method. Table 1. Comparison of proposed and enhanced methods.
    2. General Structures of Data Collection and Processing for Fault Diagnosis The
    IoT maintenance system is based on measurements delivered in time series to the
    cloud. The most important part is to prepare data pipelines for fast transmission
    from sensors to the fault diagnosis server. At low level, analogue sensors are
    handled by ADC (analogue-to-digital converter). However, modern sensors are equipped
    with ADC and communication interfaces. Therefore, the sensor is connected to thing
    (microcontroller or microcomputer) by communication interface like SPI (Serial
    Peripheral Interface), I2C (Inter-Integrated Circuit), UART (universal asynchronous
    receiver-transmitter) or another device-specific communication interface. In the
    first stage of buffer, the classical producer–consumer application is applied
    between the sensor and the thing (microcontroller) where the sensors are equipped
    with internal buffers of several samples. The sensor is a producer of data and
    the thing is a consumer. The next stage is the use of data by microcontroller
    internal algorithms. The next stage of buffering is a producer–consumer application
    where the microcontroller is a data producer and the consumer is a cloud (server)-based
    fault diagnosis system. In each stage of data processing, the producer–consumer
    uses buffer for data. The general structure of the buffer-connected data pipelines
    is presented in Figure 1. Modern buffers offer routing to selected destinations
    which lead to processing in chain by micro services which are easy to modify compared
    to change in one large service. The collected data can be processed by the fault
    diagnosis system in two general ways, (a) batch processing or (b) stream processing.
    Batch processing is performed with data collected in a time window, but not often.
    Data stream processing is similar to batch processing but is performed repetitively
    in micro batch and can use the result of the previous micro batch result in the
    current micro batch processing. Figure 1. General structure of data pipelines
    in fault diagnosis. The general structure of data pipelines presented does not
    explain which protocol is used by the thing to ingest data to the cloud. Data
    collected in the thing network called OT (Operational Technology) are ingested
    into the cloud in the IT (Information Technology) network by the bridge system
    (Figure 2). OT part of the network is very wide. In IIoT, fieldbus interfaces
    can be CAN (Controller Area Network), RS232 (Recommended Standard 232), RS485
    (Recommended Standard 485), industrial Ethernet, HART (Highway Addressable Remote
    Transducer), and other physical layers. The main fieldbus technologies used in
    industry are presented in the IEC (International Electrotechnical Commission)
    61784-1:2019 standard [19]. The 2019 standard groups communication technologies
    into 19 CPF (Communication Profile Families). The CPFs are divided into 24 profiles:
    Foundation™ Fieldbus H1 (31.25 kbit/s), HSE (High-speed Ethernet); ControlNet,
    Ethernet/IP™, DeviceNet®, Profibus DP (Decentralized Peripherals) and PA (Process
    Automation), P-NET®, WorldFIP® which has 3 profiles, Interbus® which has 3 profiles,
    CC-Link (Control and Communication Link) which has 3 profiles, HART®, WirelessHART®,
    SERCOS (acronym for SErial Realtime COmmunications System) I and II, and Mechatrolink-II
    and M-III. Each CPF profile has described the physical layer, the data link layer,
    and the application layer of the OSI-ISO (Open System Interconnection—Open Source
    Initiative) model (Figure 3). The IT network has adopted well the network and
    transport layer by IPv4 (Internet Protocol version 4) [20], IPv6 (Internet Protocol
    version 6) [21] and connectionless UDP (User Datagram Protocol) [22], and connection-oriented
    TCP (Transmission Control Protocol) [23], respectively. Layers above the transport
    layer are described in the next section. The link layer used by physical and data
    is Ethernet defined by standard 802.3-2022 [24] approved on 13 May 2022. The physical
    layer allows for the use of operation over coaxial, twisted pair, or fiber optic
    cables, or electrical backplanes. The Ethernet standard covers speeds of operation
    from 1 Mb/s to 400 Gb/s. Figure 2. General network structure with network bridge.
    Figure 3. Model OSI-ISO Open System Interconnection—Open Source Initiative. 3.
    Internet of Things Protocols for Batch and Stream Processing of Fault Diagnosis
    The protocols used in the presentation layer in OSI-ISO model (Figure 3) are generally
    responsible for ensuring the security of transmission in three main aspects: authentication,
    confidentiality, and integrity of data. The fault diagnosis server side of the
    channel is always authenticated, and the client (microcontroller) side is optionally
    authenticated. Confidentiality means that the data sent over the channel after
    establishment is only visible to the endpoints. Integrity means that data sent
    over the channel after establishment cannot be modified by attackers without detection.
    The latest version of TLS (Transport Layer Security) is 1.3 [25] presented in
    2018. The layer allows us to use asymmetric cryptography or symmetric cryptography
    with a pre-shared key. The highest level in the reference model is the application
    layer, where the HTTP (Hypertext Transfer Protocol) and MQTT (Message Queuing
    Telemetry Transport) protocols are widely used in IoT applications. The text-based
    HTTP protocol was widely used in version 1.1 [26] developed in 1997 [27]. HTTP/1.1
    can be upgraded to the WebSocket protocol [28], which is useful for established
    connections to exchange data streams in a bidirectional manner. The next version
    2.0 of HTTP was shown in 2015 [29], where the protocol was changed to binary encoding
    instead of text. The newest version 3.0 of HTTP was introduced in June 2022 [30].
    HTTP/3 uses a new transport layer protocol QUIC (Quick UDP Internet Connections)
    [31] standardized in 2021 instead of TCP. The QUIC transport protocol uses UDP
    and TLS to provide a stream of binary frames between client and server. Streams
    can be intended by the client or server as unidirectional or bidirectional. The
    HTTP/1.1 protocol can be adopted in the batch processing of faults as the request–response
    principle (Figure 1). The connection is closed by the fault diagnosis server after
    the response has been sent to the client request. HTTP/1.1 upgraded to WebSocket,
    HTTP/2, and HTTP/3 are suitable for the stream processing principle (Figure 1)
    because the connection is not closed after the server sends the response. The
    HTTP server can be implemented on the microcontroller (thing) or on the remote
    computer (cloud), see Figure 4. Figure 4. Client–server architecture with HTTP/1.1.
    Fault diagnosis as batch processing with HTTP/1.1 request–response header is shown
    in Figure 5. The microcontroller acts as an HTTP client which sends sensor-collected
    data in JSON (JavaScript Object Notation) format of 4294 character length by the
    POST method. The server path is /…/predict.php in the request line. The HTTP server
    responds 200 OK in the status line, which means that the data were processed correctly
    and machine state prediction is given in the response message body in JSON format.
    Presented response contains predicted class “prediction”:“idle” and probability
    “score” of each class as array in order: normal, idle, and fault. Figure 5. HTTP/1.1
    request–response as batch processing of machine state prediction. Data from the
    application layer are encapsulated by lower layer headers. Figure 6 presents the
    encapsulation of HTTP/1.1 response from server to client. Data from HTTP/1.1 layer
    are put into the field payload of TCP and the header of TCP needs to be filled.
    The default TCP port is 80 for the HTTP/1.1 server. Figure 6. Response from the
    fault prediction server with HTTP/1.1 encapsulated in the lower layers of the
    OSI-ISO model. The data segment is then a payload for IPv4, and the IPv4 header
    needs to be filled. The IPv4 header field upper-layer protocol is set to 6. The
    destination address and the source address must be known. The last encapsulation
    is into an Ethernet frame where the data packet is a payload of the Ethernet frame,
    and the header of the Ethernet needs to field. The hardware MAC (media access
    control address) destination address and source address need to be known. If only
    the IPv4 destination address is known before sending the Ethernet frame, the MAC
    destination address must be resolved by the ARP (Address Resolution Protocol)
    [32]. The other application layer protocol adopted for IoT applications is MQTT
    in version 3.1.1 [33] published in 2015 and version 5.0 [34] updated in 2019.
    MQTT provides client–server publish/subscribe messaging (Figure 7). The client
    connects to the server (broker) and subscribes to the topic. Messages published
    by other clients to the same topic will be pushed to all clients subscribed to
    this topic by the broker (server). MQTT use TCP at transport layer which establishes
    a connection as long as the client requires. The default destination TCP port
    of the broker is 1883. Figure 7. MQTT 3.1 client–server architecture. The three
    step TCP handshake from the 52432 client port to the 1883 server port is presented
    in Figure 8 to establish the connection. After successful subscription, the MQTT
    microcontroller client send messages to other clients through the broker. The
    topic can be treated as a buffer name in the producer–consumer architecture. The
    designed fault diagnosis system consists of two MQTT clients subscribed to topics:
    sensor/IMU6DOF/raw and sensor/IMU6DOF/predict. The microcontroller MQTT client
    writes sensor data to the topic sensor/IMU6DOF/raw, and the MATLAB MQTT client
    retrieves those samples in JSON format. Received samples are transformed into
    features by digital signal processing methods, which are then evaluated by the
    classification algorithm. The prediction of classification algorithm is transformed
    into JSON (e.g., {“prediction”:“idle”,“score”:[0,0.9999999955,4.5E-9]}) and sent
    to sensor/IMU6DOF/predict topic. Figure 8. Captured MQTT v3.1 packets captured
    with TCP handshake for microcontroller MQTT client write sensor data to the topic
    sensor/IMU6DOF/raw as stream processing (micro batch) for machine state prediction.
    MQTT can be used in either stream and batch data processing (Figure 1) of a fault
    diagnosis system. It is important to note that all messages are sent throughout
    the broker, which leads to central-oriented messaging with routing possibilities.
    Many clients who subscribed to the same topic received the same data. Therefore,
    clients can perform different micro services on the same data stream like feature
    extraction, data storage in a database, or visualization of data stream. This
    leads to transmission of one-to-many (one-point to multiple points) messages.
    In contrast to MQTT, WebSocket allows only point-to-point data streaming without
    the built-in message routing mechanism. Another protocol used in IoT applications
    is CoAP (Constrained Application Protocol), defined in 2014 [35]. The protocol
    is dedicated to 8-bit microcontrollers with limited RAM (random access memory)
    and ROM (read-only memory). CoAP typical applications include smart energy and
    building automation. The direct quote from study [35] follows: “The goal of CoAP
    is not to blindly compress, but rather to realize a subset of REST (representational
    state transfer) common with HTTP but optimized for M2M (machine-to-machine) applications.”
    Many similarities to HTTP can be found. Similarly to HTTP, the CoAP uses request/response
    model with GET, PUT, POST, and DELETE methods. In contrast to HTTP, the CoAP uses
    the UDP protocol in the transport layer (see Figure 3). The use of UDP protocol
    in transport layer is unreliable which means that it does not handle missing packets,
    duplicate packets or packets retrieved in a different order caused by a different
    path of packets in the Internet. Therefore, in 2018 [36], CoAP was designed to
    use TCP, TLS, and WebSocket transports. According to the Content-Type (see Section
    3.1.1.5 in [26]) and Content-Encoding (see Section 3.1.2.2 in [26]) part in HTTP
    1.1, many different data types are allowed in the message body part. Commonly
    adopted content types for the IoT application are JSON (JavaScript Object Notation)
    [37,38], XML (Extensible Markup Language) [39] or raw bytes. The full list of
    the allowed media types [40] is published by IANA (Internet Assigned Numbers Authority)
    in [41]. More than 1500 available formats are in the single application section
    of Media Types published on 21 November 2022. All allowed formats are grouped
    into sections, which are as follows: application, audio, font, example, image,
    message, model, multipart, text, video. Up-to-date XML media types “application/xml”
    or “text/xml” were published in 2014 [42] and the up-to-date JSON media type “application/json”
    was published in 2017 [43]. 4. General Structure of Fault Diagnosis and Perspective
    Maintenance The fault diagnosis system (Figure 9) detects faults based on changes
    in features over time. The fault diagnosis system works with the client–server
    architecture in the IT network [44,45,46,47,48,49,50]. The features are extracted
    from raw measurements and data or pre-processed data. Fault detection means recognition
    in the change of machine state caused by one or more faults. It can be treated
    as anomaly state detection, so any state different from normal behavior can be
    detected. Fault isolation is the recognition of which parts of the machine have
    faults. Finally, fault identification answers how wide the damages are. The information
    about the fault can be used by the maintenance team to repair the system. However,
    if repair is not possible immediately and the system cannot be stopped safely,
    then FTC (fault tolerant control) is a key component. The system can have hardware
    redundancy, which will be used if failure occurs, however, it is expensive to
    duplicate parts and not always technically possible to apply. FTC allows to continue
    the system usage of the system with performance constrains [51,52,53,54,55,56].
    Figure 9. General structure of the fault diagnosis system. Fault diagnosis can
    be made only on data, which is called a data-driven approach. Another option is
    to prepare a mathematical model of the diagnosed system and analyze the residual
    data between the model and the system. Today, the investigated system model is
    called a digital twin [57,58,59,60,61,62,63,64]. Modeling is a very wide area
    in which static behavior [65,66,67], dynamic changes and continuous system [68,69],
    and discrete states [70] of systems can be modeled. Contrary to the analysis of
    model and real system residuum is the analysis of estimated parameters of system.
    The fault diagnosis system compares the estimated parameters in a predefined bounded
    region. The fault is announced if one of the parameters is outside the defined
    boundaries longer than the chosen amount of time. The sensor presented in Figure
    9 can be any kind. It can be an additional sensor only for fault diagnosis or
    a sensor already present in the system used by the control algorithms. The electromechanical
    machine or power system can be investigated by many different sensors and signals:
    current [71,72] and voltage [73,74], torque [75,76], angular velocity/position
    [77,78], linear 3-axis acceleration/speed/position [16,17], Doppler laser vibrometer
    [79], transmission coefficient and reflexion coefficient of omnidirectional antenna
    [80], strain/tension [81,82,83,84], power consumption [85,86,87,88], internal/external
    temperature at selected points [89,90] or surface temperature by thermal camera
    [91,92], depending on frequency range: displacement [93], vibrations [15,18,94,95,96],
    sound [97,98,99], sound from several microphones [100] or ultrasound [101,102],
    vibro-acoustic [103], chemical analysis of lubrication [104,105], chemical analysis
    by spectral imaging [106,107,108,109], camera imaging in human colour spectrum
    [110,111,112,113], and signals to virtual image [114,115,116,117,118]. 5. Feature
    Extraction Methods The decision made by the fault diagnosis system can be taken
    based on data in the time domain [119,120] or other domains, for example, the
    frequency domain [121,122,123,124], the time–frequency domain [125,126,127,128,129,130,131]
    or the time-scale domain [132,133,134,135]. Analysis with frequency domain is
    achieved by using one of the FFT (fast Fourier transform) algorithms. These algorithms
    decompose the analyzed signal into sinusoidal/cosinusoidal components at frequency
    from 0 Hz up to half of the sampling frequency. The use of the fast Fourier transform
    algorithm radix-2 [136,137] requires a number of samples equal 𝑁= 2 𝑘 ,𝑘∈ℕ . However,
    the radix-4 algorithm requires 𝑁= 4 𝑘 [138,139]. The authors in their publications
    mostly inform the reader about the use of FFT without mentioning the algorithm
    used [140,141,142]. Frequency analysis can be applied to stationary signals in
    one time window. On the other hand, if knowledge about the sinusoidal/cosinusoidal
    components and time of their duration in the analyzed signal is required, then
    time–frequency analysis needs to be applied. The use of FFT on short time-shifted
    windows leads to the STFT (short-time Fourier transform) method. STFT changes
    a one-dimensional time series signal into a two-dimensional time and frequency
    [143,144,145]. The STFT parameters are as follows: time window shape (e.g., rectangle,
    Hamming [146,147], Hanning [148,149]), step size or overlap of next time window
    that influence time resolution, time window length that influence frequency resolution
    𝑓 𝑟𝑒𝑠 = 𝑓 𝑠 /𝑁 , where 𝑁 —signal length in samples and 𝑓 𝑠 —sampling frequency.
    Selection of time window length is a trade-off between good time localization
    or good frequency localization of the sinusoidal/cosinusoidal components. STFT
    requires an FFT calculation on each shifted time window. If the step size is equal
    to 1, it means that FFT will be calculated on 𝑁−1 old and 1 new samples, which
    is not computationally effective. The problem of spectrum update at each new sample
    was solved using the SDFT method (sliding discrete Fourier transform). SDFT was
    presented in 1997 [150] and well described in 2003 (rSDFT, 2003) [151] with an
    update in 2004 (rSDFT, 2004) [152]. Using study [152], the single spectrum component
    𝑆 𝑘 at frequency 𝑘 is calculated by 𝑆 𝑘 (𝑛)= 𝑒 𝑗2𝜋𝑘/𝑁 ( 𝑆 𝑘 (𝑛−1)+𝑥(𝑛)−𝑥(𝑛−𝑁))
    , where 𝑁 —signal length in samples, 𝑛 —time index, 𝑥 —signal value. The discrete
    transfer function of study [152] is 𝐻 𝑟𝑆𝐷𝐹𝑇,2004 (𝑧)= 𝑒 𝑗2𝜋𝑘/𝑁 (1− 𝑧 −𝑁 )/(1−
    𝑒 𝑗2𝜋𝑘/𝑁 𝑧 −1 ) , which allows for stability analysis of the algorithm. In 2010,
    mSDFT (modulated SDFT) was introduced [153]. In study [153], SDFT 2003 with the
    2004 update was named rSDFT (recursive SDFT). The mSDFT compared to rSDFT-2004
    has reduced the accumulated error and potential instabilities. The stability of
    algorithms was analyzed and a new guaranteed stable SDFT algorithm (gSDFT) was
    published in 2015 [154]. The gSDFT algorithm has slightly smaller accumulated
    errors and better performance compared to mSDFT. Other improvements of mSDFT,
    called cascade integrator comb (CIC)—SDFT, which allow the embedded usage of the
    B-spline window function, were presented in 2017 [155]. In the same year, optimal
    sliding DFT (oSDFT) was presented [156], which reduces the number of multiplications
    by 73.44%, 64.58%, 82.30%, and 29.17% as compared to FFT, rSDFT, mSDFT, and gSDFT,
    respectively. The oSDFT accelerates the sliding transform process by 57.02%, 7.51%,
    39.77%, and 9.38% compared to the FFT, rSDFT, mSDFT, and gSDFT algorithms, respectively.
    Misleading may be the name oSDFT (observer-based SDFT) introduced in 2018 [157],
    which uses the state observer method for digital signal processing purposes. 6.
    Demonstration of Fault Diagnosis with MQTT Communication The demonstration shows
    classification of computer fan work into classes: idle, normal, or fault. The
    failure is caused by a paper clip added to the fan blade. The prepared demonstration
    setup (shown in Figure 10) consists of a NUCLEO board with STM32F746ZG microcontroller
    that handles the IMU-6 DOF (inertial measurement unit with 6 degrees of freedom)
    MPU6050 sensor. Data are collected synchronously with constant sampling time equal
    to 5 ms (sampling frequency 200 Hz). The vector of 128 samples from the 3-axis
    accelerometer and 3-axis gyroscope is then transformed into JSON (JavaScript Object
    Notation) as the object {“accelerometer”:{“x”:[],“y”:[],“z”:[]},”gyroscope”:{“x”:[],“y”:[],“z”:[]}},
    where the array “[]” contain samples. Data are sent on the topic “sensor/IMU6DOF/raw”
    by the MQTT client implemented in the microcontroller to the MQTT broker hosted
    on a personal computer. Eclipse Mosquitto™ was used as an MQTT broker [158]. The
    data stream was processed in real time by MATLAB R2022b with the MQTT client [159].
    Figure 10. Demonstration system for fan fault diagnosis. The first stage is data
    collection at predefined class states for several seconds. Data collected in one
    micro batch in time domain are shown in Figure 11. Data were collected for three
    states of the fan: (1) idle class—fan power is switched off, (2) normal class—fan
    power without paper clip is switched on, and (3) fault class—fan power with paper
    clip is switched on. The time domain signal for the idle class has a constant
    signal with noise, the signal in the normal class has small oscillations, and
    the signal in the fault class has significant oscillations compared to previous
    classes. Data were transformed to the frequency domain by the FFT function in
    MATLAB, resulting in a complex number vector. The absolute value of the complex
    numbers is shown in Figure 12. Each class has different frequency features in
    the range of 0 Hz to 100 Hz. The most significant change in frequency occurs on
    the Z axis of the gyroscope. Figure 11. Accelerometer and gyroscope time domain
    data in 3-axis: red—X, green—Y, and blue—Z. Figure 12. Accelerometer and gyroscope
    frequency domain data in 3-axis: red—X, green—Y, and blue—Z. The second stage
    of preparation was the extraction of features using mSDFT [153]. Each step of
    mSDFT returns 33 complex numbers at frequencies in the range from 0 Hz to 100
    Hz. The algorithm was implemented in MATLAB and the absolute values of the complex
    number were stored in the files. Each row of the file contains 33 points that
    were used as a feature vector. The sliding discrete Fourier transform result can
    be gathered after each new sample. The multiple spectrums calculated at different
    times are shown in Figure 13 and Figure 14. The time–frequency analysis showed
    that for each class, the dominant frequency components are constant and do not
    vary with time. Figure 13. Accelerometer data in the time–frequency domain using
    mSDFT in the 3-axis: top row, Z, middle row, Y, bottom row—X. Figure 14. Gyroscope
    data in the time–frequency domain using mSDFT in 3-axis: top row—Z, middle row—Y,
    bottom row—X. The third stage of the demonstration requires the preparation of
    a classification. The features saved in the files for each class were read and
    loaded into MATLAB Classification Learner [160]. Several classifiers were trained,
    and the best was used for real-time verification. The dataset has 4200 observation
    sets randomly divided into 80% training and 20% test dataset. The training process
    was carried out on 1120 sets of fault class, 1120 sets of idle class, and 1120
    sets of normal class. One set consists of 33 frequency features calculated by
    mSDFT from the gyroscope Z axis signal. The confusion matrix of the trained classifier
    is shown in Figure 15. The classifier can be used by applying new calculated features
    to predictFcn in MATLAB. The prediction result is sent to the MQTT sensor/IMU6DOF/predict
    topic in the data pipeline (see Figure 1). Figure 15. Confusion matrix of the
    trained classifier (train—left; test—right). 7. Recognition of a Time–Frequency
    RGB Image of Vibration Data from each axis of IMU 6-DOF were transformed into
    the time–frequency domain by applying STFT (short-time Fourier transform) with
    32 samples of window length and 31 samples of overlap (see Figure 16, Figure 17,
    Figure 18, Figure 19 and Figure 20). As a result of STFT at 128 time domain samples
    of single axis, there was a two-dimensional signal of 65 frequencies at 97 time
    moments. The process was repeated for each axis of accelerometer and gyroscope.
    Finally, six images for 128 × 6 samples of IMU 6-DOF were obtained in the time–frequency
    domain for each class: idle in Figure 17, normal in Figure 18, and fault in Figure
    19. These six images are combined into one RGB (red, green, and blue) image of
    size 130 × 97 × 3 in Figure 16; representative RGB images for each class are shown
    in Figure 20. Figure 16. STFT RGB image creation and convolutional neural network
    architecture. Figure 17. STFT RGB image of idle class for accelerometer x, y,
    and z axis (top) and gyroscope x, y, and z (bottom). Figure 18. STFT RGB image
    of normal class for accelerometer x, y, and z axis (top) and gyroscope x, y, and
    z (bottom). Figure 19. STFT RGB image of the fault class for the accelerometer
    x, y, and the z axis (top) and gyroscope x, y, and z (bottom). Figure 20. Time–frequency
    RGB images for class: idle (left), normal (middle), fault (right). Data collected
    in the time domain for each class were converted into time–frequency RGB images.
    Together, the dataset has 2670 RGB images divided into classes: fault with 890
    RGB images, idle with 890 RGB images, and normal with 890 RGB images. All images,
    which were divided into training and validation datasets. From the dataset, 80%
    is the training set (2136 RGB images) and 20% is the testing set (534 RGB images)
    which were randomly selected. CNN (convolutional neural network) training was
    performed in MATLAB Deep Learning Toolbox [161] with the support of NVIDIA GPU
    (graphics processing unit) with CUDA® (Compute Unified Device Architecture). Validation
    of the trained convolution neural network confirms good classification, shown
    as a confusion matrix in Figure 21. Figure 21. Confusion matrix of the trained
    (left) and tested (right) CNN classifier. 8. Discussion The cloud-based fault
    diagnosis system is suitable for human-centric and resilient European Industry
    5.0 that requires a long lifetime of machines to reduce the amount of e-waste.
    A large number of industrial protocols used, of which only part are grouped in
    Communication Profile Families, underline the problem of data collection and ingestion
    into the cloud system. However, Internet protocols are developed separately without
    considering the needs of industrial processes. Therefore, the adoption of existing
    and new Internet protocols for industrial processes is a challenge. Batch and
    stream processing requires different handling. Batch processing can be applied
    with the request–response HTTP/1.1 protocol with a closing connection. However,
    stream processing requires an established connection for a long time, which can
    be achieved by WebSocket, HTTP/2.0, HTTP/3.0 or MQTT v3.1 and v5.0. It is worth
    considering the data exchange problem as a producer–consumer problem with a buffer
    in the middle. The producer can collect data from many different sensor technologies
    to investigate the normal and abnormal behavior of an industrial system. An interesting
    concept is the usage-only energy meter with the energy consumption profile for
    fault diagnosis. The decision about fault detection is made on the selected signal
    characteristics. A wide range of diagnostic applications, especially in rotating
    machines, use frequency analysis or time–frequency analysis. Therefore, short-time
    Fourier transform (STFT) and sliding discrete Fourier transform algorithms (rSDFT,
    mSDFT, gSDFT, and oSDFT) were underlined in the article. In batch processing,
    FFT (radix-2 or radix-4) or STFT can be applied. Real-time stream processing in
    the frequency domain can be performed using one of the SDFT algorithms. The manuscript
    contains a demonstration of the fan fault diagnosis. Data were collected synchronously
    using a 3-axis accelerometer and a 3-axis gyroscope and microcontroller. The data
    collected were transformed into a JSON text structure. Those data in JSON are
    sent to an HTTP server for batch processing and as a result, fault diagnosis server
    returns a prediction in JSON format. Another investigation was conducted by sending
    data collection in JSON from the microcontroller client to the MQTT broker in
    real time as a stream (micro batch) on the sensor/IMU6DOF/raw topic for fault
    prediction. This approach allowed us to use two fault diagnosis predictors (two
    MQTT clients subscribed to sensor/IMU6DOF/raw topic) based on mSDFT and the second
    based on recognition of the time–frequency RGB image of vibration. For the first
    predictor, the time series data were transformed into the frequency domain by
    the mSDFT and evaluated by classification algorithm. The second predictor calculates
    six STFT and combines the result into an RGB image which is evaluated by the convolutional
    neural network. The result of both predictors is sent to sensor/IMU6DOF/predict
    topic in JSON format which contains the predicted state and probability for each
    class. This approach allowed us to classify the state of machine by two different
    algorithms and can be further extended by other algorithms to ensure voting of
    prediction from different algorithms to increase software algorithm redundancy.
    9. Conclusions The presented two communication methods allow for rapid prototyping
    of the fault diagnosis system with cloud connectivity. The HTTP server allows
    for one-to-one fault diagnosis, where data from one microcontroller are evaluated
    by one fault diagnosis server endpoint. On the other hand, MQTT allowed for one-to-many
    fault diagnoses when the same data were evaluated by two fault diagnosis clients
    with different feature extraction and different classification algorithms. HTTP
    and MQTT use TCP, however, due to connection closing in HTTP and connection remaining
    in MQTT, their work differently and both are suitable for fault diagnosis. In
    the authors’ opinion, it is more convenient to use MQTT for rapid prototyping
    and modularity of a variety of environments of the fault diagnosis system. The
    authors have shown two approaches for fault diagnosis. One is based on frequency
    analysis which was enhanced in comparison to classical ones by usage of sliding
    Fourier transform (SDFT) instead of fast Fourier transform (FFT). This modification
    allows us to update the spectrum based on a new sample in time domain and spectrum
    in the previous step, which work as an IIR (Infinite Impulse Response) filter
    where filter input is one time domain sample and filter output is one frequency
    domain sample (complex number). The second proposed approach transforms data from
    IMU 6-DOF sensor into six spectrograms by STFT, which are used to create an RGB
    image. This time–frequency RGB image is evaluated by a convolutional neural network
    for fault diagnosis. The proposed approach proves that CNN can be successfully
    used in multispectrogram recognition which are organized into RGB images for fault
    diagnosis without the need for preliminary selection of a vibration axis. Future
    research will be focused on increasing the TRL (technology readiness level). Research
    was carried out at TRL 1 to validate the proof of principles and concept. Further
    work will be conducted to increase the TRL to higher levels to validate in the
    laboratory environment the rotary electric machine (electric drive) with fault
    diagnosis system. At the next TRL, more faults of electric drive will be considered
    with different natures (electrical and mechanical), e.g., fault in inverter topology,
    fault in bearing, and shaft cracks. Author Contributions Internet of Things, D.Ł.;
    SDFT and time–frequency RGB image feature extraction, D.Ł.; demonstration of fault
    diagnosis system, D.Ł.; fan fault selection, D.Ł. and S.B.; electromechanical
    faults review, D.Ł., S.B. and K.S. All authors have read and agreed to the published
    version of the manuscript. Funding This work has been funded by the National Science
    Centre, Poland, grant number 2015/17/N/ST7/03796. Institutional Review Board Statement
    Not applicable. Informed Consent Statement Not applicable. Data Availability Statement
    Not applicable. Conflicts of Interest The authors declare no conflict of interest.
    References Kasper, W.C. Power from Trash. Environ. Sci. Policy Sustain. Dev. 1974,
    16, 34–38. [Google Scholar] [CrossRef] Sullivan, J. Trash or Treasure: Global
    Trade and the Accumulation of E-Waste in Lagos, Nigeria. Afr. Today 2014, 61,
    89–112. [Google Scholar] [CrossRef] Kan, Y.; Liu, H.; Yang, Y.; Wei, Y.; Yu, Y.;
    Qiu, R.; Ouyang, Y. Two Birds with One Stone: The Route from Waste Printed Circuit
    Board Electronic Trash to Multifunctional Biomimetic Slippery Liquid-Infused Coating.
    J. Ind. Eng. Chem. 2022, 114, 233–241. [Google Scholar] [CrossRef] Ji, X.; Yang,
    M.; Wan, A.; Yu, S.; Yao, Z. Bioleaching of Typical Electronic Waste—Printed Circuit
    Boards (WPCBs): A Short Review. Int. J. Environ. Res. Public Health 2022, 19,
    7508. [Google Scholar] [CrossRef] [PubMed] Rene, E.R.; Sethurajan, M.; Kumar Ponnusamy,
    V.; Kumar, G.; Bao Dung, T.N.; Brindhadevi, K.; Pugazhendhi, A. Electronic Waste
    Generation, Recycling and Resource Recovery: Technological Perspectives and Trends.
    J. Hazard. Mater. 2021, 416, 125664. [Google Scholar] [CrossRef] [PubMed] Pan,
    X.; Wong, C.W.Y.; Li, C. Circular Economy Practices in the Waste Electrical and
    Electronic Equipment (WEEE) Industry: A Systematic Review and Future Research
    Agendas. J. Clean. Prod. 2022, 365, 132671. [Google Scholar] [CrossRef] Marinello,
    S.; Gamberini, R. Multi-Criteria Decision Making Approaches Applied to Waste Electrical
    and Electronic Equipment (WEEE): A Comprehensive Literature Review. Toxics 2021,
    9, 13. [Google Scholar] [CrossRef] Breque, M.; De Nul, L.; Petridis, A. Directorate-General
    for Research and Innovation (European Commission). In Industry 5.0: Towards a
    Sustainable, Human Centric and Resilient European Industry; Publications Office
    of the European Union: Luxembourg, 2021; ISBN 978-92-76-25308-2. [Google Scholar]
    Smit, J.; Kreutzer, S.; Moeller, C.; Carlberg, C. Industry 4.0, European Parliament,
    Policy Department A: Economic and Scientific Policy; European Parliament: Strasbourg,
    France, 2016. [Google Scholar] [CrossRef] Teixeira, J.E.; Tavares-Lehmann, A.T.C.P.
    Industry 4.0 in the European Union: Policies and National Strategies. Technol.
    Forecast. Soc. Chang. 2022, 180, 121664. [Google Scholar] [CrossRef] Piechocki,
    M.; Kraft, M.; Pajchrowski, T.; Aszkowski, P.; Pieczynski, D. Efficient People
    Counting in Thermal Images: The Benchmark of Resource-Constrained Hardware. IEEE
    Access 2022, 10, 124835–124847. [Google Scholar] [CrossRef] Kraft, M.; Aszkowski,
    P.; Pieczyński, D.; Fularz, M. Low-Cost Thermal Camera-Based Counting Occupancy
    Meter Facilitating Energy Saving in Smart Buildings. Energies 2021, 14, 4542.
    [Google Scholar] [CrossRef] Ptak, B.; Pieczyński, D.; Piechocki, M.; Kraft, M.
    On-Board Crowd Counting and Density Estimation Using Low Altitude Unmanned Aerial
    Vehicles—Looking beyond Beating the Benchmark. Remote Sens. 2022, 14, 2288. [Google
    Scholar] [CrossRef] Yu, Y.; Samali, B.; Rashidi, M.; Mohammadi, M.; Nguyen, T.N.;
    Zhang, G. Vision-Based Concrete Crack Detection Using a Hybrid Framework Considering
    Noise Effect. J. Build. Eng. 2022, 61, 105246. [Google Scholar] [CrossRef] Chen,
    H.-Y.; Lee, C.-H. Vibration Signals Analysis by Explainable Artificial Intelligence
    (XAI) Approach: Application on Bearing Faults Diagnosis. IEEE Access 2020, 8,
    134246–134256. [Google Scholar] [CrossRef] Kim, M.S.; Yun, J.P.; Park, P. Deep
    Learning-Based Explainable Fault Diagnosis Model With an Individually Grouped
    1-D Convolution for Three-Axis Vibration Signals. IEEE Trans. Ind. Inform. 2022,
    18, 8807–8817. [Google Scholar] [CrossRef] Zhang, X.; Zhao, Z.; Wang, Z.; Wang,
    X. Fault Detection and Identification Method for Quadcopter Based on Airframe
    Vibration Signals. Sensors 2021, 21, 581. [Google Scholar] [CrossRef] Wang, Y.;
    Yang, M.; Li, Y.; Xu, Z.; Wang, J.; Fang, X. A Multi-Input and Multi-Task Convolutional
    Neural Network for Fault Diagnosis Based on Bearing Vibration Signal. IEEE Sens.
    J. 2021, 21, 10946–10956. [Google Scholar] [CrossRef] IEC 61784-1:2019 Industrial
    Communication Networks—Profiles Part 1: Fieldbus Profiles. Available online: https://webstore.iec.ch/publication/59887#additionalinfo
    (accessed on 28 October 2022). RFC791; Internet Protocol. Internet Engineering
    Task Force: Fremont, CA, USA, 1981. RFC2460; Internet Protocol, Version 6 (IPv6)
    Specification. Internet Engineering Task Force: Fremont, CA, USA, 1998. RFC768;
    User Datagram Protocol. Internet Engineering Task Force: Fremont, CA, USA, 1980.
    RFC793; Transmission Control Protocol. Internet Engineering Task Force: Fremont,
    CA, USA, 1981. IEEE Std 802.3-2022 (Revision of IEEE Std 802.3-2018); IEEE Standard
    for Ethernet. IEEE: Piscataway, NJ, USA, 2022. [CrossRef] RFC8446; The Transport
    Layer Security (TLS) Protocol Version 1.3. Internet Engineering Task Force: Fremont,
    CA, USA, 2018. RFC2616; Hypertext Transfer Protocol—HTTP/1.1. Internet Engineering
    Task Force: Fremont, CA, USA, 1999. RFC2068; Hypertext Transfer Protocol—HTTP/1.1.
    Internet Engineering Task Force: Fremont, CA, USA, 1997. RFC6455; The WebSocket
    Protocol. Internet Engineering Task Force: Fremont, CA, USA, 2011. RFC7540; Hypertext
    Transfer Protocol Version 2 (HTTP/2). Internet Engineering Task Force: Fremont,
    CA, USA, 2015. RFC9114; HTTP/3. Internet Engineering Task Force: Fremont, CA,
    USA, 2022. RFC9000; QUIC: A UDP-Based Multiplexed and Secure Transport. Internet
    Engineering Task Force: Fremont, CA, USA, 2021. RFC826; An Ethernet Address Resolution
    Protocol: Or Converting Network Protocol Addresses to 48.Bit Ethernet Address
    for Transmission on Ethernet Hardware. Internet Engineering Task Force: Fremont,
    CA, USA, 1982. MQTT Version 3.1.1. Available online: http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/errata01/os/mqtt-v3.1.1-errata01-os-complete.html
    (accessed on 31 October 2022). MQTT Version 5.0. Available online: http://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html
    (accessed on 31 October 2022). RFC7252; The Constrained Application Protocol (CoAP).
    Internet Engineering Task Force: Fremont, CA, USA, 2014. RFC8323; CoAP (Constrained
    Application Protocol) over TCP, TLS, and WebSockets. Internet Engineering Task
    Force: Fremont, CA, USA, 2018. JSON. Available online: https://www.json.org/json-en.html
    (accessed on 23 November 2022). ECMA-404; The JSON Data Interchange Syntax; Ecma
    International, 2nd edition, Geneva, Switzerland, December 2017. Available online:
    https://www.ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf
    (accessed on 30 February 2023). Extensible Markup Language (XML). Available online:
    https://www.w3.org/XML/ (accessed on 23 November 2022). RFC6838; Media Type Specifications
    and Registration Procedures. Internet Engineering Task Force: Fremont, CA, USA,
    2013. Media Types. Available online: https://www.iana.org/assignments/media-types/media-types.xhtml
    (accessed on 23 November 2022). RFC7303; XML Media Types. Internet Engineering
    Task Force: Fremont, CA, USA, 2014. RFC8259; The JavaScript Object Notation (JSON)
    Data Interchange Format. Internet Engineering Task Force: Fremont, CA, USA, 2017.
    Mendes, M.J.G.C.; Neto, Í.M.M.S.; Calado, J.M.F. Fault Diagnosis System via Internet
    Applied to a Gantry Robot—A Proposal for Industry 4.0. In Proceedings of the 2018
    IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC),
    Torres Vedras, Portugal, 25–27 April 2018; pp. 160–166. [Google Scholar] Jagatheesaperumal,
    S.K.; Rahouti, M.; Ahmad, K.; Al-Fuqaha, A.; Guizani, M. The Duo of Artificial
    Intelligence and Big Data for Industry 4.0: Applications, Techniques, Challenges,
    and Future Research Directions. IEEE Internet Things J. 2022, 9, 12861–12885.
    [Google Scholar] [CrossRef] Natesha, B.V.; Guddeti, R.M.R. Fog-Based Intelligent
    Machine Malfunction Monitoring System for Industry 4.0. IEEE Trans. Ind. Inform.
    2021, 17, 7923–7932. [Google Scholar] [CrossRef] Rastogi, V.; Srivastava, S.;
    Mishra, M.; Thukral, R. Predictive Maintenance for SME in Industry 4.0. In Proceedings
    of the 2020 Global Smart Industry Conference (GloSIC), Chelyabinsk, Russia, 17–19
    November 2020; pp. 382–390. [Google Scholar] Anil Kumar, T.C.; Bhusal Sharma,
    N.; Mishra, A.K.; Patil, P.; Sarveswara Reddy, S.; Bhardwaj, R. Fault Identification
    Model Using IIoT for Industrial Application. Meas. Sens. 2022, 24, 100526. [Google
    Scholar] [CrossRef] Radonjić, M.; Vujnović, S.; Krstić, A.; Zečević, Ž. IoT System
    for Detecting the Condition of Rotating Machines Based on Acoustic Signals. Appl.
    Sci. 2022, 12, 4385. [Google Scholar] [CrossRef] Behera, S.; Misra, R. Generative
    Adversarial Networks Based Remaining Useful Life Estimation for IIoT. Comput.
    Electr. Eng. 2021, 92, 107195. [Google Scholar] [CrossRef] Casado-Vara, R.; Vale,
    Z.; Prieto, J.; Corchado, J.M. Fault-Tolerant Temperature Control Algorithm for
    IoT Networks in Smart Buildings. Energies 2018, 11, 3430. [Google Scholar] [CrossRef]
    [Green Version] Akay, A.; Lefley, P. Open-Circuit Fault-Tolerant Control of Multi-Phase
    PM Machines by Compensating the d-q Axes Currents. Energies 2021, 14, 192. [Google
    Scholar] [CrossRef] Patel, H.R.; Shah, V.A. Stable Fault Tolerant Controller Design
    for Takagi–Sugeno Fuzzy Model-Based Control Systems via Linear Matrix Inequalities:
    Three Conical Tank Case Study. Energies 2019, 12, 2221. [Google Scholar] [CrossRef]
    [Green Version] Nguyen, N.P.; Hong, S.K. Fault Diagnosis and Fault-Tolerant Control
    Scheme for Quadcopter UAVs with a Total Loss of Actuator. Energies 2019, 12, 1139.
    [Google Scholar] [CrossRef] [Green Version] Siembab, K.; Zawirski, K. Modified
    Space Vector Modulation for Fault Tolerant Control of PMSM Drive. In Proceedings
    of the 2016 IEEE International Power Electronics and Motion Control Conference
    (PEMC), Varna, Bulgaria, 25–28 September 2016; pp. 1064–1071. [Google Scholar]
    Łuczak, D.; Siembab, K. Comparison of Fault Tolerant Control Algorithm Using Space
    Vector Modulation of PMSM Drive. In Proceedings of the 16th International Conference
    on Mechatronics—Mechatronika 2014, Brno, Czech Republic, 3–5 December 2014; pp.
    24–31. [Google Scholar] Moghadam, F.K.; Nejad, A.R. Online Condition Monitoring
    of Floating Wind Turbines Drivetrain by Means of Digital Twin. Mech. Syst. Signal
    Process. 2022, 162, 108087. [Google Scholar] [CrossRef] Leng, J.; Wang, D.; Shen,
    W.; Li, X.; Liu, Q.; Chen, X. Digital Twins-Based Smart Manufacturing System Design
    in Industry 4.0: A Review. J. Manuf. Syst. 2021, 60, 119–137. [Google Scholar]
    [CrossRef] Peng, F.; Zheng, L.; Peng, Y.; Fang, C.; Meng, X. Digital Twin for
    Rolling Bearings: A Review of Current Simulation and PHM Techniques. Measurement
    2022, 201, 111728. [Google Scholar] [CrossRef] Wang, T.; Cheng, J.; Yang, Y.;
    Esposito, C.; Snoussi, H.; Tao, F. Adaptive Optimization Method in Digital Twin
    Conveyor Systems via Range-Inspection Control. IEEE Trans. Autom. Sci. Eng. 2022,
    19, 1296–1304. [Google Scholar] [CrossRef] Nguyen, T.; Duong, Q.H.; Nguyen, T.V.;
    Zhu, Y.; Zhou, L. Knowledge Mapping of Digital Twin and Physical Internet in Supply
    Chain Management: A Systematic Literature Review. Int. J. Prod. Econ. 2022, 244,
    108381. [Google Scholar] [CrossRef] Teng, S.Y.; Touš, M.; Leong, W.D.; How, B.S.;
    Lam, H.L.; Máša, V. Recent Advances on Industrial Data-Driven Energy Savings:
    Digital Twins and Infrastructures. Renew. Sustain. Energy Rev. 2021, 135, 110208.
    [Google Scholar] [CrossRef] Unal, P.; Albayrak, Ö.; Jomâa, M.; Berre, A.J. Data-Driven
    Artificial Intelligence and Predictive Analytics for the Maintenance of Industrial
    Machinery with Hybrid and Cognitive Digital Twins. In Technologies and Applications
    for Big Data Value; Curry, E., Auer, S., Berre, A.J., Metzger, A., Perez, M.S.,
    Zillner, S., Eds.; Springer International Publishing: Cham, Switzerland, 2022;
    pp. 299–319. ISBN 978-3-030-78307-5. [Google Scholar] Cohen, Y.; Singer, G. A
    Smart Process Controller Framework for Industry 4.0 Settings. J. Intell. Manuf.
    2021, 32, 1975–1995. [Google Scholar] [CrossRef] Zhu, G.; Li, Z.; Wu, N. Model-Based
    Fault Identification of Discrete Event Systems Using Partially Observed Petri
    Nets. Automatica 2018, 96, 201–212. [Google Scholar] [CrossRef] Xu, B.; Yin, X.;
    Yin, X.; Wang, Y.; Pang, S. Fault Diagnosis of Power Systems Based on Temporal
    Constrained Fuzzy Petri Nets. IEEE Access 2019, 7, 101895–101904. [Google Scholar]
    [CrossRef] Wang, H.; Wu, Y.; Min, G.; Miao, W. A Graph Neural Network-Based Digital
    Twin for Network Slicing Management. IEEE Trans. Ind. Inform. 2022, 18, 1367–1376.
    [Google Scholar] [CrossRef] Łuczak, D. Nonlinear Identification with Constraints
    in Frequency Domain of Electric Direct Drive with Multi-Resonant Mechanical Part.
    Energies 2021, 14, 7190. [Google Scholar] [CrossRef] Luczak, D. Mathematical Model
    of Multi-Mass Electric Drive System with Flexible Connection. In Proceedings of
    the 2014 19th International Conference on Methods and Models in Automation and
    Robotics (MMAR), Miedzyzdroje, Poland, 2–5 September 2014; pp. 590–595. [Google
    Scholar] Luczak, D.; Nowopolski, K. Identification of Multi-Mass Mechanical Systems
    in Electrical Drives. In Proceedings of the 2014 16th International Conference
    on Mechatronics—Mechatronika (ME), Brno, Czech Republic, 3–5 December 2014; pp.
    275–282. [Google Scholar] Huang, W.; Du, J.; Hua, W.; Lu, W.; Bi, K.; Zhu, Y.;
    Fan, Q. Current-Based Open-Circuit Fault Diagnosis for PMSM Drives With Model
    Predictive Control. IEEE Trans. Power Electron. 2021, 36, 10695–10704. [Google
    Scholar] [CrossRef] Wu, C.; Guo, C.; Xie, Z.; Ni, F.; Liu, H. A Signal-Based Fault
    Detection and Tolerance Control Method of Current Sensor for PMSM Drive. IEEE
    Trans. Ind. Electron. 2018, 65, 9646–9657. [Google Scholar] [CrossRef] Jiang,
    L.; Deng, Z.; Tang, X.; Hu, L.; Lin, X.; Hu, X. Data-Driven Fault Diagnosis and
    Thermal Runaway Warning for Battery Packs Using Real-World Vehicle Data. Energy
    2021, 234, 121266. [Google Scholar] [CrossRef] Chang, C.; Zhou, X.; Jiang, J.;
    Gao, Y.; Jiang, Y.; Wu, T. Electric Vehicle Battery Pack Micro-Short Circuit Fault
    Diagnosis Based on Charging Voltage Ranking Evolution. J. Power Sources 2022,
    542, 231733. [Google Scholar] [CrossRef] Gao, S.; Xu, L.; Zhang, Y.; Pei, Z. Rolling
    Bearing Fault Diagnosis Based on SSA Optimized Self-Adaptive DBN. ISA Trans. 2022,
    128, 485–502. [Google Scholar] [CrossRef] Wang, C.-S.; Kao, I.-H.; Perng, J.-W.
    Fault Diagnosis and Fault Frequency Determination of Permanent Magnet Synchronous
    Motor Based on Deep Learning. Sensors 2021, 21, 3608. [Google Scholar] [CrossRef]
    Feng, Z.; Gao, A.; Li, K.; Ma, H. Planetary Gearbox Fault Diagnosis via Rotary
    Encoder Signal Analysis. Mech. Syst. Signal Process. 2021, 149, 107325. [Google
    Scholar] [CrossRef] Ma, J.; Li, C.; Zhang, G. Rolling Bearing Fault Diagnosis
    Based on Deep Learning and Autoencoder Information Fusion. Symmetry 2022, 14,
    13. [Google Scholar] [CrossRef] Abbas, S.H.; Jang, J.-K.; Kim, D.-H.; Lee, J.-R.
    Underwater Vibration Analysis Method for Rotating Propeller Blades Using Laser
    Doppler Vibrometer. Opt. Lasers Eng. 2020, 132, 106133. [Google Scholar] [CrossRef]
    Dutta, S.; Basu, B.; Talukdar, F.A. Classification of Motor Faults Based on Transmission
    Coefficient and Reflection Coefficient of Omni-Directional Antenna Using DCNN.
    Expert Syst. Appl. 2022, 198, 116832. [Google Scholar] [CrossRef] Zhang, X.; Niu,
    H.; Hou, C.; Di, F. An Edge-Filter FBG Interrogation Approach Based on Tunable
    Fabry-Perot Filter for Strain Measurement of Planetary Gearbox. Opt. Fiber Technol.
    2020, 60, 102379. [Google Scholar] [CrossRef] Zhang, P.; Lu, D. A Survey of Condition
    Monitoring and Fault Diagnosis toward Integrated O&M for Wind Turbines. Energies
    2019, 12, 2801. [Google Scholar] [CrossRef] [Green Version] Wu, J.; Yang, Y.;
    Wang, P.; Wang, J.; Cheng, J. A Novel Method for Gear Crack Fault Diagnosis Using
    Improved Analytical-FE and Strain Measurement. Measurement 2020, 163, 107936.
    [Google Scholar] [CrossRef] Fedorko, G.; Molnár, V.; Vasiľ, M.; Salai, R. Proposal
    of Digital Twin for Testing and Measuring of Transport Belts for Pipe Conveyors
    within the Concept Industry 4.0. Measurement 2021, 174, 108978. [Google Scholar]
    [CrossRef] Pu, H.; He, L.; Zhao, C.; Yau, D.K.Y.; Cheng, P.; Chen, J. Fingerprinting
    Movements of Industrial Robots for Replay Attack Detection. IEEE Trans. Mob. Comput.
    2022, 21, 3629–3643. [Google Scholar] [CrossRef] Rafati, A.; Shaker, H.R.; Ghahghahzadeh,
    S. Fault Detection and Efficiency Assessment for HVAC Systems Using Non-Intrusive
    Load Monitoring: A Review. Energies 2022, 15, 341. [Google Scholar] [CrossRef]
    Sabry, A.H.; Nordin, F.H.; Sabry, A.H.; Abidin Ab Kadir, M.Z. Fault Detection
    and Diagnosis of Industrial Robot Based on Power Consumption Modeling. IEEE Trans.
    Ind. Electron. 2020, 67, 7929–7940. [Google Scholar] [CrossRef] Sánchez-Sutil,
    F.; Cano-Ortega, A.; Hernández, J.C. Design and Implementation of a Smart Energy
    Meter Using a LoRa Network in Real Time. Electronics 2021, 10, 3152. [Google Scholar]
    [CrossRef] Wang, Z.; Tian, B.; Qiao, W.; Qu, L. Real-Time Aging Monitoring for
    IGBT Modules Using Case Temperature. IEEE Trans. Ind. Electron. 2016, 63, 1168–1178.
    [Google Scholar] [CrossRef] Dhiman, H.S.; Deb, D.; Muyeen, S.M.; Kamwa, I. Wind
    Turbine Gearbox Anomaly Detection Based on Adaptive Threshold and Twin Support
    Vector Machines. IEEE Trans. Energy Convers. 2021, 36, 3462–3469. [Google Scholar]
    [CrossRef] Glowacz, A. Fault Diagnosis of Electric Impact Drills Using Thermal
    Imaging. Measurement 2021, 171, 108815. [Google Scholar] [CrossRef] Al-Musawi,
    A.K.; Anayi, F.; Packianather, M. Three-Phase Induction Motor Fault Detection
    Based on Thermal Image Segmentation. Infrared Phys. Technol. 2020, 104, 103140.
    [Google Scholar] [CrossRef] Li, Z.; Zhang, Y.; Abu-Siada, A.; Chen, X.; Li, Z.;
    Xu, Y.; Zhang, L.; Tong, Y. Fault Diagnosis of Transformer Windings Based on Decision
    Tree and Fully Connected Neural Network. Energies 2021, 14, 1531. [Google Scholar]
    [CrossRef] Rauber, T.W.; da Silva Loca, A.L.; de Assis Boldt, F.; Rodrigues, A.L.;
    Varejão, F.M. An Experimental Methodology to Evaluate Machine Learning Methods
    for Fault Diagnosis Based on Vibration Signals. Expert Syst. Appl. 2021, 167,
    114022. [Google Scholar] [CrossRef] Meyer, A. Vibration Fault Diagnosis in Wind
    Turbines Based on Automated Feature Learning. Energies 2022, 15, 1514. [Google
    Scholar] [CrossRef] Lee, J.-H.; Pack, J.-H.; Lee, I.-S. Fault Diagnosis of Induction
    Motor Using Convolutional Neural Network. Appl. Sci. 2019, 9, 2950. [Google Scholar]
    [CrossRef] [Green Version] Cao, Y.; Sun, Y.; Xie, G.; Li, P. A Sound-Based Fault
    Diagnosis Method for Railway Point Machines Based on Two-Stage Feature Selection
    Strategy and Ensemble Classifier. IEEE Trans. Intell. Transp. Syst. 2022, 23,
    12074–12083. [Google Scholar] [CrossRef] Shiri, H.; Wodecki, J.; Ziętek, B.; Zimroz,
    R. Inspection Robotic UGV Platform and the Procedure for an Acoustic Signal-Based
    Fault Detection in Belt Conveyor Idler. Energies 2021, 14, 7646. [Google Scholar]
    [CrossRef] Karabacak, Y.E.; Gürsel Özmen, N.; Gümüşel, L. Intelligent Worm Gearbox
    Fault Diagnosis under Various Working Conditions Using Vibration, Sound and Thermal
    Features. Appl. Acoust. 2022, 186, 108463. [Google Scholar] [CrossRef] Yao, Y.;
    Wang, H.; Li, S.; Liu, Z.; Gui, G.; Dan, Y.; Hu, J. End-To-End Convolutional Neural
    Network Model for Gear Fault Diagnosis Based on Sound Signals. Appl. Sci. 2018,
    8, 1584. [Google Scholar] [CrossRef] [Green Version] Zhang, Z.; Li, J.; Song,
    Y.; Sun, Y.; Zhang, X.; Hu, Y.; Guo, R.; Han, X. A Novel Ultrasound-Vibration
    Composite Sensor for Defects Detection of Electrical Equipment. IEEE Trans. Power
    Deliv. 2022, 37, 4477–4480. [Google Scholar] [CrossRef] Wang, W.; Xue, Y.; He,
    C.; Zhao, Y. Review of the Typical Damage and Damage-Detection Methods of Large
    Wind Turbine Blades. Energies 2022, 15, 5672. [Google Scholar] [CrossRef] Wang,
    X.; Mao, D.; Li, X. Bearing Fault Diagnosis Based on Vibro-Acoustic Data Fusion
    and 1D-CNN Network. Measurement 2021, 173, 108518. [Google Scholar] [CrossRef]
    Maruyama, T.; Maeda, M.; Nakano, K. Lubrication Condition Monitoring of Practical
    Ball Bearings by Electrical Impedance Method. Tribol. Online 2019, 14, 327–338.
    [Google Scholar] [CrossRef] [Green Version] Wakiru, J.M.; Pintelon, L.; Muchiri,
    P.N.; Chemweno, P.K. A Review on Lubricant Condition Monitoring Information Analysis
    for Maintenance Decision Support. Mech. Syst. Signal Process. 2019, 118, 108–132.
    [Google Scholar] [CrossRef] Rizk, P.; Younes, R.; Ilinca, A.; Khoder, J. Wind
    Turbine Ice Detection Using Hyperspectral Imaging. Remote Sens. Appl. Soc. Environ.
    2022, 26, 100711. [Google Scholar] [CrossRef] Rizk, P.; Younes, R.; Ilinca, A.;
    Khoder, J. Wind Turbine Blade Defect Detection Using Hyperspectral Imaging. Remote
    Sens. Appl. Soc. Environ. 2021, 22, 100522. [Google Scholar] [CrossRef] Meribout,
    M. Gas Leak-Detection and Measurement Systems: Prospects and Future Trends. IEEE
    Trans. Instrum. Meas. 2021, 70. [Google Scholar] [CrossRef] Li, Y.; Yu, Q.; Xie,
    M.; Zhang, Z.; Ma, Z.; Cao, K. Identifying Oil Spill Types Based on Remotely Sensed
    Reflectance Spectra and Multiple Machine Learning Algorithms. IEEE J. Sel. Top.
    Appl. Earth Obs. Remote Sens. 2021, 14, 9071–9078. [Google Scholar] [CrossRef]
    Zhou, Q.; Chen, R.; Huang, B.; Liu, C.; Yu, J.; Yu, X. An Automatic Surface Defect
    Inspection System for Automobiles Using Machine Vision Methods. Sensors 2019,
    19, 644. [Google Scholar] [CrossRef] [Green Version] Yang, L.; Fan, J.; Liu, Y.;
    Li, E.; Peng, J.; Liang, Z. A Review on State-of-the-Art Power Line Inspection
    Techniques. IEEE Trans. Instrum. Meas. 2020, 69, 9350–9365. [Google Scholar] [CrossRef]
    Davari, N.; Akbarizadeh, G.; Mashhour, E. Intelligent Diagnosis of Incipient Fault
    in Power Distribution Lines Based on Corona Detection in UV-Visible Videos. IEEE
    Trans. Power Deliv. 2021, 36, 3640–3648. [Google Scholar] [CrossRef] Kim, S.;
    Kim, D.; Jeong, S.; Ham, J.-W.; Lee, J.-K.; Oh, K.-Y. Fault Diagnosis of Power
    Transmission Lines Using a UAV-Mounted Smart Inspection System. IEEE Access 2020,
    8, 149999–150009. [Google Scholar] [CrossRef] Ullah, Z.; Lodhi, B.A.; Hur, J.
    Detection and Identification of Demagnetization and Bearing Faults in PMSM Using
    Transfer Learning-Based VGG. Energies 2020, 13, 3834. [Google Scholar] [CrossRef]
    Long, H.; Xu, S.; Gu, W. An Abnormal Wind Turbine Data Cleaning Algorithm Based
    on Color Space Conversion and Image Feature Detection. Appl. Energy 2022, 311,
    118594. [Google Scholar] [CrossRef] Kreutz, M.; Alla, A.A.; Eisenstadt, A.; Freitag,
    M.; Thoben, K.-D. Ice Detection on Rotor Blades of Wind Turbines Using RGB Images
    and Convolutional Neural Networks. Procedia CIRP 2020, 93, 1292–1297. [Google
    Scholar] [CrossRef] Xie, T.; Huang, X.; Choi, S.-K. Intelligent Mechanical Fault
    Diagnosis Using Multisensor Fusion and Convolution Neural Network. IEEE Trans.
    Ind. Inform. 2022, 18, 3213–3223. [Google Scholar] [CrossRef] Łuczak, D.; Brock,
    S.; Siembab, K. Fault Detection and Localisation of a Three-Phase Inverter with
    Permanent Magnet Synchronous Motor Load Using a Convolutional Neural Network.
    Actuators 2023, 12, 125. [Google Scholar] [CrossRef] Liang, M.; Cao, P.; Tang,
    J. Rolling Bearing Fault Diagnosis Based on Feature Fusion with Parallel Convolutional
    Neural Network. Int. J. Adv. Manuf. Technol. 2021, 112, 819–831. [Google Scholar]
    [CrossRef] Toma, R.N.; Kim, J.-M. Induction Motor Bearing Fault Diagnosis Using
    Statistical Time Domain Features and Hypertuning of Classifiers. In Advances in
    Computer Science and Ubiquitous Computing; Park, J.J., Fong, S.J., Pan, Y., Sung,
    Y., Eds.; Springer: Singapore, 2021; pp. 259–265. [Google Scholar] Bi, X.; Cao,
    S.; Zhang, D. Diesel Engine Valve Clearance Fault Diagnosis Based on Improved
    Variational Mode Decomposition and Bispectrum. Energies 2019, 12, 661. [Google
    Scholar] [CrossRef] [Green Version] Wang, J.; Li, S.; Xin, Y.; An, Z. Gear Fault
    Intelligent Diagnosis Based on Frequency-Domain Feature Extraction. J. Vib. Eng.
    Technol. 2019, 7, 159–166. [Google Scholar] [CrossRef] Li, H.; Feng, G.; Zhen,
    D.; Gu, F.; Ball, A.D. A Normalized Frequency-Domain Energy Operator for Broken
    Rotor Bar Fault Diagnosis. IEEE Trans. Instrum. Meas. 2021, 70, 3009011. [Google
    Scholar] [CrossRef] Luczak, D. Frequency Analysis of Mechanical Resonance in Direct
    Drive. In Proceedings of the 2012 12th IEEE International Workshop on Advanced
    Motion Control (AMC), Sarajevo, Bosnia and Herzegovina, 25–27 March 2012; pp.
    1–5. [Google Scholar] Ramteke, S.M.; Chelladurai, H.; Amarnath, M. Diagnosis and
    Classification of Diesel Engine Components Faults Using Time–Frequency and Machine
    Learning Approach. J. Vib. Eng. Technol. 2022, 10, 175–192. [Google Scholar] [CrossRef]
    Lim, H.; Kwon, G.-Y.; Shin, Y.-J. Fault Detection and Localization of Shielded
    Cable via Optimal Detection of Time–Frequency-Domain Reflectometry. IEEE Trans.
    Instrum. Meas. 2021, 70, 3092514. [Google Scholar] [CrossRef] Iglesias-Martínez,
    M.E.; Antonino-Daviu, J.A.; Fernández de Córdoba, P.; Conejero, J.A. Rotor Fault
    Detection in Induction Motors Based on Time-Frequency Analysis Using the Bispectrum
    and the Autocovariance of Stray Flux Signals. Energies 2019, 12, 597. [Google
    Scholar] [CrossRef] [Green Version] Luczak, D. Spectral Analysis of Digital Filter
    Tuned for Mechanical Resonant Frequency Reduction in Multi-Mass Mechanical Systems
    in Electrical Direct Drive. Int. J. Simul. Syst. Sci. Technol. 2020, 17, 11.1–11.8.
    [Google Scholar] [CrossRef] Strack, J.L.; Carugati, I.; Orallo, C.M.; Maestri,
    S.O.; Donato, P.G.; Funes, M.A. Three-Phase Voltage Events Classification Algorithm
    Based on an Adaptive Threshold. Electr. Power Syst. Res. 2019, 172, 167–176. [Google
    Scholar] [CrossRef] Yoon, Y.; Brahma, A. Air–Fuel Ratio Imbalance Diagnostic of
    Spark-Ignited Engines With Modulated Sliding Discrete Fourier Transform. J. Dyn.
    Syst. Meas. Control 2020, 142, 081003. [Google Scholar] [CrossRef] Peña-Alzola,
    R.; Sztykiel, M.; Jones, C.E.; Norman, P.J.; Moore, G.; Pou, J.; Burt, G.M. First-Fault
    Detection in DC Distribution With IT Grounding Based on Sliding Discrete Fourier-Transform.
    IEEE Trans. Power Electron. 2021, 36, 3649–3654. [Google Scholar] [CrossRef] Li,
    X.; Bi, F.; Zhang, L.; Yang, X.; Zhang, G. An Engine Fault Detection Method Based
    on the Deep Echo State Network and Improved Multi-Verse Optimizer. Energies 2022,
    15, 1205. [Google Scholar] [CrossRef] Gu, J.; Peng, Y.; Lu, H.; Chang, X.; Chen,
    G. A Novel Fault Diagnosis Method of Rotating Machinery via VMD, CWT and Improved
    CNN. Measurement 2022, 200, 111635. [Google Scholar] [CrossRef] Łuczak, D. Mechanical
    Resonance Frequensies Identyfication of Direct Drive Using Wavelet Analysis. In
    Proceedings of the 2012 17th International Conference on Methods & Models in Automation
    & Robotics (MMAR), Miedzyzdroje, Poland, 27–30 August 2012; pp. 29–32. [Google
    Scholar] Łuczak, D. Mechanical Vibrations Analysis in Direct Drive Using CWT with
    Complex Morlet Wavelet. Power Electron. Drives 2023, 8, 65–73. [Google Scholar]
    [CrossRef] Singleton, R. A Method for Computing the Fast Fourier Transform with
    Auxiliary Memory and Limited High-Speed Storage. IEEE Trans. Audio Electroacoust.
    1967, 15, 91–98. [Google Scholar] [CrossRef] Cooley, J.W.; Tukey, J.W. An Algorithm
    for the Machine Calculation of Complex Fourier Series. Math. Comput. 1965, 19,
    297–301. [Google Scholar] [CrossRef] Corinthios, M.J.; Smith, K.C.; Yen, J.L.
    A Parallel Radix-4 Fast Fourier Transform Computer. IEEE Trans. Comput. 1975,
    C-24, 80–92. [Google Scholar] [CrossRef] Corinthios, M.J. A Fast Fourier Transform
    for High-Speed Signal Processing. IEEE Trans. Comput. 1971, C-20, 843–846. [Google
    Scholar] [CrossRef] Soares, M.N.; Mollet, Y.; Kinnaert, M.; Gyselinck, J.; Helsen,
    J. Multiphysical Time- and Frequency-Domain Fault Detection and Isolation Technique
    for Power-Electronic Converters in DFIG Wind Turbines. IEEE Trans. Power Electron.
    2021, 36, 3793–3802. [Google Scholar] [CrossRef] Han, T.; Ding, L.; Qi, D.; Li,
    C.; Fu, Z.; Chen, W. Compound Faults Diagnosis Method for Wind Turbine Mainshaft
    Bearing with Teager and Second-Order Stochastic Resonance. Measurement 2022, 202,
    111931. [Google Scholar] [CrossRef] Li, H.; Fan, B.; Jia, R.; Zhai, F.; Bai, L.;
    Luo, X. Research on Multi-Domain Fault Diagnosis of Gearbox of Wind Turbine Based
    on Adaptive Variational Mode Decomposition and Extreme Learning Machine Algorithms.
    Energies 2020, 13, 1375. [Google Scholar] [CrossRef] [Green Version] Liu, D.;
    Cheng, W.; Wen, W. Rolling Bearing Fault Diagnosis via STFT and Improved Instantaneous
    Frequency Estimation Method. Procedia Manuf. 2020, 49, 166–172. [Google Scholar]
    [CrossRef] Wang, Z.; Yang, J.; Li, H.; Zhen, D.; Xu, Y.; Gu, F. Fault Identification
    of Broken Rotor Bars in Induction Motors Using an Improved Cyclic Modulation Spectral
    Analysis. Energies 2019, 12, 3279. [Google Scholar] [CrossRef] [Green Version]
    Grcić, I.; Pandžić, H.; Novosel, D. Fault Detection in DC Microgrids Using Short-Time
    Fourier Transform. Energies 2021, 14, 277. [Google Scholar] [CrossRef] Fu, X.;
    Yang, K.; Liu, M.; Xing, T.; Wu, C. LightFD: Real-Time Fault Diagnosis with Edge
    Intelligence for Power Transformers. Sensors 2022, 22, 5296. [Google Scholar]
    [CrossRef] Liu, J.; Hao, R.; Zhang, T.; Wang, X. Vibration Fault Diagnosis Based
    on Stochastic Configuration Neural Networks. Neurocomputing 2021, 434, 98–125.
    [Google Scholar] [CrossRef] Miao, Y.; Zhang, B.; Li, C.; Lin, J.; Zhang, D. Feature
    Mode Decomposition: New Decomposition Theory for Rotating Machinery Fault Diagnosis.
    IEEE Trans. Ind. Electron. 2023, 70, 1949–1960. [Google Scholar] [CrossRef] Shi,
    H.; Li, Y.; Bai, X.; Zhang, K. Sound-Aided Fault Feature Extraction Method for
    Rolling Bearings Based on Stochastic Resonance and Time-Domain Index Fusion. Appl.
    Acoust. 2022, 189, 108611. [Google Scholar] [CrossRef] Douglas, S.C.; Soh, J.K.
    A Numerically-Stable Sliding-Window Estimator and Its Application to Adaptive
    Filters. In Proceedings of the Conference Record of the Thirty-First Asilomar
    Conference on Signals, Systems and Computers (Cat. No.97CB36136), Pacific Grove,
    CA, USA,, 2–5 November 1997; Volume 1, pp. 111–115. [Google Scholar] Jacobsen,
    E.; Lyons, R. The Sliding DFT. IEEE Signal Process. Mag. 2003, 20, 74–80. [Google
    Scholar] [CrossRef] [Green Version] Jacobsen, E.; Lyons, R. An Update to the Sliding
    DFT. IEEE Signal Process. Mag. 2004, 21, 110–111. [Google Scholar] [CrossRef]
    Duda, K. Accurate, Guaranteed Stable, Sliding Discrete Fourier Transform [DSP
    Tips & Tricks]. IEEE Signal Process. Mag. 2010, 27, 124–127. [Google Scholar]
    [CrossRef] Park, C.-S. Fast, Accurate, and Guaranteed Stable Sliding Discrete
    Fourier Transform [Sp Tips&Tricks]. IEEE Signal Process. Mag. 2015, 32, 145–156.
    [Google Scholar] [CrossRef] Gudovskiy, D.A.; Chu, L. An Accurate and Stable Sliding
    DFT Computed by a Modified CIC Filter [Tips & Tricks]. IEEE Signal Process. Mag.
    2017, 34, 89–93. [Google Scholar] [CrossRef] Park, C.-S. Guaranteed-Stable Sliding
    DFT Algorithm With Minimal Computational Requirements. IEEE Trans. Signal Process.
    2017, 65, 5281–5288. [Google Scholar] [CrossRef] Kollar, Z.; Plesznik, F.; Trumpf,
    S. Observer-Based Recursive Sliding Discrete Fourier Transform [Tips & Tricks].
    IEEE Signal Process. Mag. 2018, 35, 100–106. [Google Scholar] [CrossRef] Eclipse
    Mosquitto. Available online: https://mosquitto.org/ (accessed on 22 November 2022).
    Create MQTT Client Connected to Broker—MATLAB. Available online: https://www.mathworks.com/help/icomm/ug/icomm.mqtt.client.html
    (accessed on 22 November 2022). Train Models to Classify Data Using Supervised
    Machine Learning—MATLAB. Available online: https://www.mathworks.com/help/stats/classificationlearner-app.html
    (accessed on 23 November 2022). Deep Learning Toolbox. Available online: https://www.mathworks.com/products/deep-learning.html
    (accessed on 7 February 2023).     Disclaimer/Publisher’s Note: The statements,
    opinions and data contained in all publications are solely those of the individual
    author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or
    the editor(s) disclaim responsibility for any injury to people or property resulting
    from any ideas, methods, instructions or products referred to in the content.  ©
    2023 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open
    access article distributed under the terms and conditions of the Creative Commons
    Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share
    and Cite MDPI and ACS Style Łuczak, D.; Brock, S.; Siembab, K. Cloud Based Fault
    Diagnosis by Convolutional Neural Network as Time–Frequency RGB Image Recognition
    of Industrial Machine Vibration with Internet of Things Connectivity. Sensors
    2023, 23, 3755. https://doi.org/10.3390/s23073755 AMA Style Łuczak D, Brock S,
    Siembab K. Cloud Based Fault Diagnosis by Convolutional Neural Network as Time–Frequency
    RGB Image Recognition of Industrial Machine Vibration with Internet of Things
    Connectivity. Sensors. 2023; 23(7):3755. https://doi.org/10.3390/s23073755 Chicago/Turabian
    Style Łuczak, Dominik, Stefan Brock, and Krzysztof Siembab. 2023. \"Cloud Based
    Fault Diagnosis by Convolutional Neural Network as Time–Frequency RGB Image Recognition
    of Industrial Machine Vibration with Internet of Things Connectivity\" Sensors
    23, no. 7: 3755. https://doi.org/10.3390/s23073755 Note that from the first issue
    of 2016, this journal uses article numbers instead of page numbers. See further
    details here. Article Metrics Citations Scopus   5 Web of Science   4 Crossref   4
    PubMed   1 PMC   1 Google Scholar   [click to view] Article Access Statistics
    Article access statistics Article Views 28. Dec 7. Jan 17. Jan 27. Jan 6. Feb
    16. Feb 26. Feb 7. Mar 17. Mar 0 500 1000 1500 2000 2500 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Cloud Based Fault Diagnosis by Convolutional Neural Network as Time–Frequency
    RGB Image Recognition of Industrial Machine Vibration with Internet of Things
    Connectivity
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
