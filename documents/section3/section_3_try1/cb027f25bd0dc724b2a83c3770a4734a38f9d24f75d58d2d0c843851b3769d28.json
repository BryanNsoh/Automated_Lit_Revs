[
    {
        "title": "A Nearest Neighbors based Data Filter for Fog Computing in IoT Smart Agriculture",
        "doi": "10.1109/MetroAgriFor50201.2020.9277661",
        "description": "In smart agriculture, the Internet of Things (IoT) makes it possible to analyze and manage agricultural yield to increase productivity, reduce wasted resources, and decrease irrigation costs. In IoT systems, if data management is entirely performed in the cloud, the system may not work correctly due to connectivity problems, which is common in some remote regions where the agribusiness thrives. A fog computing solution enables the IoT system to process data faster and deal with intermittent connectivity. However, a high number of packets sent from the fog to the cloud can cause link congestion with mostly useless data traffic. Dealing with fog data filtering is a challenge because it requires knowing which data is essential to send to the cloud. This paper proposes an approach to collect and store data in a smart agriculture environment and two different methods filtering data in the fog. We designed an experiment for each filtering method, using a real dataset containing temperature and humidity values. In both experiments, the fog filters the data using the k-Nearest-Neighbors (kNN) algorithm, which classifies data into categories according to their value ranges. In the first experiment, the fog classifies the data and generates an output of the number of data categories. In the second experiment, data is classified and also compressed based on the previously obtained categories using the runlength encoding (RLE) technique to preserve the data time series nature. Our results show that data filtering reduces the amount of data sent by the fog to the cloud.",
        "journal": "2020 IEEE International Workshop on Metrology for Agriculture and Forestry, MetroAgriFor 2020 - Proceedings",
        "authors": [
            "Ribeiro F.M.",
            "Prati R.",
            "Bianchi R.",
            "Kamienski C."
        ],
        "citation_count": "16",
        "full_text": "\"This website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising purposes. To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards Authors Citations ADVANCED SEARCH Conferences >2020 IEEE International Works... A Nearest Neighbors based Data Filter for Fog Computing in IoT Smart Agriculture Publisher: IEEE Cite This PDF Franklin Magalh\u00e3es Ribeiro; Ronaldo Prati; Reinaldo Bianchi; Carlos Kamienski All Authors 12 Cites in Papers 345 Full Text Views Abstract Document Sections I. Introduction II. Background and Related Work III. FOG Data Flow IV. Research Design and Methods V. Results Show Full Outline Authors Figures References Citations Keywords Metrics Footnotes Abstract: In smart agriculture, the Internet of Things (IoT) makes it possible to analyze and manage agricultural yield to increase productivity, reduce wasted resources, and decrease irrigation costs. In IoT systems, if data management is entirely performed in the cloud, the system may not work correctly due to connectivity problems, which is common in some remote regions where the agribusiness thrives. A fog computing solution enables the IoT system to process data faster and deal with intermittent connectivity. However, a high number of packets sent from the fog to the cloud can cause link congestion with mostly useless data traffic. Dealing with fog data filtering is a challenge because it requires knowing which data is essential to send to the cloud. This paper proposes an approach to collect and store data in a smart agriculture environment and two different methods filtering data in the fog. We designed an experiment for each filtering method, using a real dataset containing temperature and humidity values. In both experiments, the fog filters the data using the k-Nearest-Neighbors (kNN) algorithm, which classifies data into categories according to their value ranges. In the first experiment, the fog classifies the data and generates an output of the number of data categories. In the second experiment, data is classified and also compressed based on the previously obtained categories using the runlength encoding (RLE) technique to preserve the data time series nature. Our results show that data filtering reduces the amount of data sent by the fog to the cloud. Published in: 2020 IEEE International Workshop on Metrology for Agriculture and Forestry (MetroAgriFor) Date of Conference: 04-06 November 2020 Date Added to IEEE Xplore: 08 December 2020 ISBN Information: DOI: 10.1109/MetroAgriFor50201.2020.9277661 Publisher: IEEE Conference Location: Trento, Italy Funding Agency: SECTION I. Introduction There are various challenges to be overcome in modern agriculture, such as pest control, production costs, and irrigation optimization. One way to manage agriculture resources is through the concept of smart agriculture, which aims to integrate services in rural areas and to use their resources intelligently through IoT technologies [1], [2]. In the agriculture context, it is possible to use smart applications to avoid wastes and to manage resources. For example, to make an irrigation decision [3], an application could perceive relevant data using IoT, like weather conditions, soil moisture, or crop growth stage. IoT systems can handle an enormous amount of data through physical devices (sensors and actuators) transmitting and receiving data in an application context [4]. However, most of these systems only process the collected data on a central server. Fog computing allows data analyses locally at the edge [5], reducing the need for decisions making by an external server (connected through the Internet) and reducing the need to send data to a cloud [6]. Fog computing can store, analyze, and filter the data received by the sensors without dependency on the constant cloud connection availability [6]. Additionally, using fog computing, the actuator can execute a decision near real-time [7], [8], [5]. Then, in a smart irrigation context, based on data collected by sensors, the fog can decide when, where, and how much water is needed to irrigate a crop and the system will perform this action immediately. Fog computing can reduce network data traffic [7], [8]. However, it is challenging to manage fog data flow, considering scalability, security, data storage capacity, processing power, and battery limitations [9]. In this paper, we propose a fog computing approach to collect, filter, store, and transmit data in a smart farming application, using two filtering methods in the fog. In the both filtering methods, we propose to use a well-known supervised learning algorithm, the k-Nearest-Neighbors (kNN) [10], like a fog data filter, to reduce the amount of data stored in the fog/cloud and optimize the data channel throughput between fog and cloud communication channel. We propose the use of two fog-based data filter methods and design an experiment to evaluate each filtering method. We discovered that, in smart agriculture, the fog should be capable of learning with the farm environment to know when the filter should be applied. In the first experiment, we used a filtering method that executes the kNN technique, which reduced approximately 97% of the data the fog needs to transfer to the cloud. We also observed that the fog should split the filter period to know about the data behavior when the data have many variations. In the second experiment, we used a filtering method that executes the combined kNN and the run-length encoding (RLE) techniques [17]. This method reduces the data size by approximately 98% and clearly maintains the time-series nature for different data categories. This paper is organized as follows: In Section 2 we describe the literature background and related work, Section 3 details our approach to smart agriculture, Section 4 describes fog data filter experiments, Section 5 reports the results discussed in Section 6. Finally, Section 7 presents conclusions and future work. SECTION II. Background and Related Work A. Fog Computing Fog computing could deal with the challenge of massive data analysis in real-time on the edge [11]. With fog computing, IoT systems may perform faster data analysis, a significant advantage for latency-sensitive systems. A hierarchical Fog-based IoT architecture includes three stages: thing, fog, and cloud [6], [12]. The thing stage consists of embedded systems like sensors, actuators, and devices that allow users to connect to fog. The fog stage consists of physical machines, switches, routers, and access points, where the collected data can be processed. The cloud stage is connected to the fog stage (fog) by a gateway over the Internet. B. kNN Algorithm The k-Nearest-Neighbors (kNN) algorithm [10] is a machine learning algorithm used to classify new data samples into categories. It computes the Euclidean distance between the values of a new data sample with other previously classified samples to finds the k samples closer to the new data sample. Thus, the algorithm classifies the new data samples, according to the most often k nearest neighbors. The underlying assumption is that objects close to each other have a higher probability of belonging to the same category. Therefore, this estimation allows us to identify the category to which the new data sample belongs. As in smart agriculture, the values collected by sensors can be redundant. Using the kNN will allow the fog to maintain a smaller number of data in the Fog database. Here we choose the kNN algorithm because its computational cost is small and compatible with resource-constrained IoT devices, unlike recent algorithms such as deep neural networks. Furthermore, it has no additional computing cost to learn the training data set during the fog filter execution. However, it is possible to use other machine learning classification algorithms, like decision trees or random forest, since any other algorithms from this kind can classify the data. C. Run-Length Encoding (RLE) Run-length encoding (RLE) is a data compression technique that preserves the order of data values [17], which makes it possible to recover the data by the original order. In other words, when we apply RLE in a data time series, it is possible to recover the order of the events that occurred in the time series. D. Related Work The investigation in [8] showed that system time to respond drops 73% when fog analyses data locally against a cloud. The fog could also reduce the cloud's sending data by 93%, as shown in research by [7]. However, these studies do not lead to real scenarios and devices scalability, since in real applications, IoT deals with thousands of sensors. Though a fog-based data filter can obtain gains, it is still challenging to find a solution that can cover different IoT scenarios, such as a farm irrigation scenario. Therefore, dealing with fog data-level communication is a research challenge [13]. SECTION III. FOG Data Flow Our proposal involves adopting a fog computing approach in smart agriculture, where sensors are responsible for collecting the data and a fog node for data storage, analysis, filtering, and the transmission of the filtered data to the cloud (Fig. 1). In our proposal, the fog receives data from the sensors and filters it by choosing to execute two different filtering methods using a data classification technique, to reducing data size, and consequently, the data traffic between fog and cloud. The data flow works as follows: the sensors collect data from a farm environment and send it to the fog. The data arrives in the fog through a network server, transferring the raw data to the data storage module and the data analytics module. The data analytics module analyses the raw data to make decisions, then, it stores the decisions in fog memory and sends the decisions to actuators to irrigate a crop. The data storage module is responsible for storing data in memory. It can provide past decisions and filtered data to the analytics module. Furthermore, the data storage module provides the raw data periodically to the fog data filter. After a specific time period, the fog filters the (old) raw data stored, classifies it, deletes this (old) raw data from memory and sends the classified data to the cloud via the MQTT protocol. Thus, the cloud may need (in the future) to perform an analysis with historical classified data. Therefore, the system operates processing the data locally, without any cloud action. Fig. 1. Conceptual Fog Data Flow to Smart Agriculture. Show All In a real farm scenario, the data may be sent by sensors via LoRaWAN, whose packets contain values such as temperature and humidity. On the other hand, the fog typically hosts different software modules, such as data analytics, data storage, data filtering, and the LoRaWAN backend server, such as ChirpStack1 (Fig. 1). The use of LoRaWAN in smart agriculture has many advantages, such as providing security to the data communication channel, extending sensor battery lifetime, and providing a longrange distance in the transmission between the sensors and the fog [1], [2]. The fog data filter can operate by two methods. The choice between the two fog data filter methods is a design choice. The first method is responsible for the data classification using the kNN and for quantifying the number of data in a category and sending those accounted categories to the cloud. The second method uses the kNN and the run-length encoding (RLE) techniques to compress each classified data register by the order, to preserve the time-series nature of the data categories. The fog filter runs at intervals initially defined by the application developer, but the fog may automatically configure this interval depending on the context or on abrupt variations in the data patterns. With this approach, we expect to reduce the amount of raw. The fog data filter has three advantages, namely (i) creating a new dataset for future decision-making based on the characteristics of the categories, (ii) decreasing the data traffic between fog and cloud, and (iii) reducing the data storage requirements in fog and cloud. SECTION IV. Research Design and Methods A. Training Data Set For dealing with smart agriculture, we used the data categories reported by the review work in [15] as a training dataset, which specifies the temperature and humidity best conditions for tomatoes cultivation. Shamshiri et al., define the weather conditions for tomatoes crop as lower optimal, upper optimal, lower failure, upper failure, lower marginal, upper marginal, and optimal. Additionally, we defined critical dry and cold and humid categories because some value range conditions are not defined by [15]. We generated the training dataset2 with 962 registers, using a rule with temperature intervals of 1\u00b0C, and humidity intervals of 5 in 5%. We summarize this rule into general intervals in Table 1. TABLE I. Training Dataset We also calculated the ROC area to evaluate the data training model performance. Then, we plotted the ROC curves for each class (category) in the training dataset (Table 1). On average, the ROC returned a performance of 89% for the data-training model (Fig. 2). Fig. 2. ROC curves for each class (category) to the training dataset. Show All B. Input (Test) Data Set Since our scope is the data filtering, we assume that the data is already available in the fog node. We used a dataset collected in August 2013 near the Cuerda del Pozo reservoir, in Soria, Spain [14], with 44,026 temperature and humidity records. C. Experiment Design and Execution Both fog filtering methods perform kNN to categorize the data of an original data set [14] according to the training data set. We used the Python programming language to implement the fog data filter module, where for the kNN we used k=3. We divided the classification process into two rounds: for the round 1, we classified the data collected between 00:00 and 06:00 and for the round 2, between 06:01 and 12:00 (both on the first day of August 2013). We choose this time interval because we consider that the cloud receives a classified data file every 6 hours in a real scenario. We conducted experiments with the fog filter, using a real dataset [14], and training the dataset (Table 1) based in [15]. We executed the round 1 and round 2 data time series in experiments for each filtering method. Both filtering methods perform the following steps: (i) read temperature and humidity records, (ii) normalize data on a scale of 0 to 1 (where 0 and 1 correspond to the lowest and highest value in the training dataset, respectively), (iii) calculate the Euclidean distance to classify the records and (iv) generate an output with categorized data. In the first experiment, after the data classification, the filter counts the number of occurrences for each data category. On the other hand, in the second experiment, the filter performs the run-length encoding technique that counts and joins same consecutive data categories, during the kNN classification. We also generated graphical plots of input data and output data. SECTION V. Results After executing the kNN algorithm in two rounds, we obtained the categorized data, generating two graphic plots for each round: (i) a contour plot for the input dataset and (ii) a two-dimensional correlogram, with the data categories distribution. To generate the correlogram and the contour plot, we used the seaborn library in the Python programming language. A. Input (Test) Dataset Density Distribution Fig. 3 depicts two contour curve plots to visualize the input data's behavior, showing the density distribution of all temperature and humidity records for rounds 1 and 2. The contour curve plots (Fig. 3) are on the same scale and allow us to visualize the highest data density according to color tone (in dark blue). Therefore, the value ranges with the darker coloring reveal the most frequent episodes. Fig. 3. Contour curve plot of input data (to round 1 and round 2). Show All For round 1, the lowest and highest temperature values were 14.1\u00b0C and 18.4\u00b0C, respectively, while the lowest and highest humidity values were 53.4% and 75.4%, respectively, with the standard deviation of the temperature equals to 1.1375 and the standard deviation of humidity equals to 5.3143. For round 2, the lowest and highest temperature values were 15.1\u00b0C and 28.6\u00b0C, respectively, while the lowest and highest humidity values were 23.4% and 68.69%, respectively, with the standard deviation of the temperature equals to 4.11 and the standard deviation of humidity equals to 13.2867. In round 1, the average temperature was 16.01\u00b0C, and the average humidity was 64.43%. In round 2, these averages were 22.44\u00b0C and 43.76%. Also, Fig. 2 reveals a higher value dispersion in round 2 data input, which it is more evident when we observe the standard deviation of temperature and humidity for round 2. B. Experiment 1: Data Classification After executing the first filtering method, it generated an output file (in CSV format) containing the data categories and the number of data classified in that category (Table 2). This output file may then be sent from fog to cloud, instead of the original raw data. Note that there are originally 721 temperature and humidity records in the dataset, 361 in round 1, and 360 in round 2. By filtering, we reduced the data to a table with nine classes and the respective number of occurrences for each class (Table 2). Therefore, we always have as output a file with nine categories and nine numbers of occurrences for each data category. In round 1, the original input data has 5277 bytes, and the output file has 149 bytes. In round 2, the original input data has 5381 bytes, and the output file has 151 bytes. Then, there was a reduction in the total data volume of approximately 97% for both rounds in this context. TABLE II. Filtered Data Output (to round 1 and round 2) We observed that categories marginal, lower optimal, and optimal correspond to 100% of the input data in round 1, and categories critical dry, marginal, and cold and humid correspond to 85% of the input data in round 2 (Table 2). This behavior happens because the input data values from rounds 1 and 2 occur more frequently in the temperature and humidity intervals covered by these categories in the training dataset (Fig. 3). Fig. 4. Correlogram of round 1 and 2 categories (different scales) Show All Fig 4 shows a correlogram for each round comprising four graphic plots. The correlogram includes two density plots and two dispersion plots, highlighting the category density according to temperature and humidity. In some density curves, we observed that classes overlap, although it does not prevent data classification from occurring because we deal with two attributes. The overlap in the humidity or temperature curves happens because many training data categories cover the same ranges (Table 1). C. Experiment 2: RLE and Data Classification The second filtering method performs kNN and RLE. In a data time series, the kNN produces a category for each data record. The RLE counts the quantity of the same categories that appear consecutively and then generates an output containing the category name and the number of consecutive occurrences for that category. We obtained the output of this filtering method for round 1 and round 2 in Table 3. After it, the fog concatenates each output line into a string, according to the categories' occurrence order, keeping the time-series nature of the data. TABLE III. Filtered Data Output According to the Order of Data Time Series (to round 1 and round 2) In round 1, the output is a text file containing the string: \\\"1op3ma15op3ma1op4ma1op1ma7op2ma1op4ma1op2ma 3op4ma1op4ma3op2ma6op3ma1op4ma2op4ma105op72l o12ma9lo9ma71lo\\\", as the same output order in Table 3. In round 2, the output is a text file containing the string: \\\"81ch7ma12lo11op1ma6op2ma2op79ma8uf1cd3uf1cd1uf 1cd3uf2cd1uf1cd2uf9cd2uf9cd1uf3cd1uf4cd1uf105cd\\\", as the same output order shown in Table 3. Note that round 1 has 361 registers with 5277 bytes, and the round 2 has 360 registers with 5381 bytes. The filtering using kNN and RLE reduced the data size for round 1 to 102 bytes and for the round 2 to 93 bytes, i.e., a reduction of 98,06% and 98,27%, respectively. SECTION VI. Discussion We perceived that in round 1, the input data had close values and categories due to the thermal amplitude controlled by relative humidity. However, this did not occur in round 2, as the data had a high thermal amplitude of more than 10 degrees Celsius, which is expected in the Soria region (Spain) in August. In experiment 1, we observed that, instead of waiting 6 hours or a defined period to send the data to the cloud, the fog data filter should automatically adapt to the weather situation or any context circumstances. If the cloud receives data with abrupt values as in round 2, there will be no knowledge about the historical data behavior in the future. For example, the cloud will not know the weather variations that occurred in this period. Therefore, to not risk future analysis of historical data stored in the cloud, we observed evidence in this investigation, suggesting that the IoT system to smart agriculture should have an adaptive mechanism to learn from the context and decide the optimal time interval to perform the data filtering periodically. Consequently, the fog based IoT system should learn by the agricultural context. In experiment 2, we observed that the filter reduced the data size because the RLE joined many consecutive repeated categories. However, supposing that the input only has different consecutive categories, the output size will be close to the original input data size, but, differently from the first method, the fog filter using RLE always maintains the time-series nature of the data. So, there is a trade-off between choosing fog data filter methods. SECTION VII. Conclusion and Future Work In this paper, we presented an approach to collect, store, analyze, and filter data in a smart agriculture scenario. We also proposed a solution to filter the data in the fog using the k-Nearest-Neighbors (kNN) algorithm. We analyzed the fog data filter considering a smart irrigation context, using a real database, exploring the attributes (dimensions) of temperature and humidity [14]. For the filtering context, we considered a tomato crop used as training data [15]. In this work, the experiments represented a proof of concept because the training data samples are limited since we generated it artificially based on [15]. Our first and second fog filter methods reduced the size of the data stored in the fog, respectively, by 97% and 98%, and consequently, the future data traffic between fog and cloud. For the first fog filter method, the data volume is equivalent to the number of categories (multiplied by two), and the problem domain defines the number of categories. However, the data volume of the second filter method depends on the data time series classification. For using the fog data filter, the problem domain in the smart agriculture application must be well defined. Contexts with many dimensions can increase algorithm operations and demand high CPU power on fog computing. Therefore, the system designers need to determine which attributes are relevant to collect by the sensors in the smart agriculture context. In the investigation, we also realized that the filtering time and interval must be automatically defined by the smart agriculture system, whose system must learn the context circumstances to perform the filter. In other words, the smart agriculture system should adapt the filter itself based on the sensors collected data from the farm environment. Finally, as future work, we will implement the adaptive fog data filter capable of learning by the crop context. We also intend to replicate the experiment in an operational IoT system, using a case study of SWAMP pilots [16], which provides a hardware infrastructure to a real smart farming scenario. ACKNOWLEDGMENTS This research has been jointly funded by the European Commission in Europe and MCTIC/RNP in Brazil, under the EUB-02-2017 IoT Pilots call. It is also supported by the Federal Institute of Education, Science and Technology of Maranh\u00e3o (IFMA). Authors Figures References Citations Keywords Metrics Footnotes More Like This Application to Determine Water Volume for Agriculture Based on Temperature & Humidity Using Wireless Sensor Network 2016 International Conference on Knowledge Creation and Intelligent Computing (KCIC) Published: 2016 Design issues for wireless sensor networks and smart humidity sensors for precision agriculture: A review 2015 International Conference on Soft Computing Techniques and Implementations (ICSCTI) Published: 2015 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity. \u00a9 Copyright 2024 IEEE - All rights reserved.\"",
        "analysis": "",
        "verbatim_quote1": "",
        "verbatim_quote2": "",
        "verbatim_quote3": "",
        "relevance_score1": 0,
        "relevance_score2": 0,
        "limitations": "",
        "inline_citation": "",
        "full_citation": ""
    },
    {
        "title": "2013 2nd International Conference on Sensors, Measurement and Intelligent Materials, ICSMIM 2013",
        "doi": null,
        "description": "The proceedings contain 343 papers. The special focus in this conference is on Sensors, Measurement and intelligent Materials. The topics include: On-line oil condition monitoring system; research on K distribution in Anderson-darling goodness-of-fit test; the method for extraction of marine underwater electromagnetic anomalous field; thermal test of lunar rock drill bit in vacuum environment; high sediment concentration underwater communication using current field; dynamic analysis of the acoustic velocity profile observation underwater glider; research on energy harvesting device based on spatial electric field; on-line monitoring method of drive motor operational for on-load tap changers; study on the working fluid conductivity measuring technology of MSWEDM; study on the technology development status of ballistic identification; the design of TPMS hand-held diagnostic instrument; design of remote reservoir water level monitoring system based on GPRS; design of a remote water monitoring system; study of novel percussion medical signal measurement mode; study of micro vibration measurement using the model of STM; deformation monitoring method based on photogrammetry technology; infrared monitoring studies of winding temperature rise in electrical equipment; design of oil-water interface meter based on segmental capacitance sensors; the fall detection method based on the wireless acceleration sensor; an air quality monitoring system based on sensor array and framework of cloud computing; strain measurement for sheet metal forming based on close range photogrammetry; research on self-calibration of circular artifacts; influence of He buffer gas pressure on Cs atomic polarizability; camera calibration method based on circle plane board; study on the forecast model of water quantity on the basis of BP artificial neural network; the monitoring software design of performance test-bed of heat pump unit; water level intelligent monitoring system based on mobile terminal and PC terminal; design of embedded indoor multiple dangerous gas detection alarm system; multi-touch wireless monitoring system based on android; distributed monitoring and control system for energy saving based on RPC; research on multi-channels data selector of telemetry data of BMK; development of DSD from SCM to PC; pseudo Cohen time-frequency distributions in infinite variance noise environment; noise analysis and filtering for laser active imaging system; analysis and study on GNSS data under EHV transmission environment by using TEQC; blind source separation of noisy mixed speech signals; a new 3D coordinates acquisition method on base of single camera; method for testability demonstration test based on cost optimization; cloud computing model for big geological data processing; membership calculation based on dimension hierarchical division; study of English pronunciation quality evaluation system with tone and emotion analysis capabilities; a study for removal of pipe vibration on swirlmeter; about timekeeping activities at NTSC; image stereo correspondence method for stereo vision; a color image enhancement based on improved genetic algorithm; the application of project management maturity model; relativity analysis of technology business incubating ability; coherent optical OFDM-PON using phase diversity receiver and phase estimation; ultra broadband power amplifier based on GaN HEMT; the research of CNC constant voltage power; the key technologies analysis of automotive head-up display; study on the optimal layout of distributed generations; high power ytterbium-doped fiber super-fluorescent sources; design of a AC current source for inductive loads; low distortion analog front-end for digital electret microphone; research and design of panoramic parking system based on davinci technology simulation and analysis of three-dimensional arterial trees; the convective heat transfer in furcated blood vessels; analyzing tree dynamic modeling under outdoors environment; study on average support probability oriented to electromechanical integration system; oscillation for third-order nonlinear delay dynamic equations on time scales; attitude solution for carrier based on quaternion differential equation of Picard solver; numerical simulation of atmospheric pressure glow discharges in coaxial tube; study on dynamic behavior of ancient timber structures roof; applications of multi-point mirror supporting; the method of tree dynamic modeling under rainfall field; the design and establishment of 3D urban underground pipeline plan aid system; mathematical modeling and simulating of microscan for area CCD; computer-aided system design for exercise load evaluation; the application of correlation recognizing technology in failure prognostic system; analysis on slope stability based on factor sensitivity; application of computer-aided visual in advertising design; the loading ability analysis of spiral spline; study of speed adjustment in friction drive for aerostatic guide way components; mechanical characters experimental about reinforced concrete profiled pipe culvert; research on the reverse mold assembly technology based on product gene; a survey on shaft voltage of large generator; realization of the car tire puncture in virtual environment; research on heat sink for LED stage lighting lamp; modeling and simulation of deicing vehicle brake; experimental study on high-pressure fog cooling systems in greenhouses; adaptable product platform-based product family design of crane; dynamic response modeling of fluid-solid coupling for wet brake disc; study on join fastness of silent chain; steady and transient properties of side-gated nano transistors; a spike-like ionic current behavior via graphene nanopore; fighting fires of carbon dioxide in the closed buildings; study of anti-friction performance of spherical fes nanoparticle; study on anti-freezing performance of organic fluorine siloxane nano coating; kinetic and thermodynamic study adsorbing methylene blue on nanozirconia; research on simulation of cartridge backward spinning process; study on preparation and properties of MRP/HDPE composite; study of the prospects of the use of high-strength steel shapes; current status and development trend of power big data for the smart grid; application of virtual reality technology in teaching; semantic-driven information recommendation system; future internet trends research; application of knowledge management in e-commerce based on fuzzy theory; analysis of cloud computing infrastructure; a software defect prediction model during the test period; design and analysis of supervisory platform of campus energy saving; implementation of smart home system based on internet of things; application of middleware for callcenter in the housing fund management center; a robust neonatal facial pain cues classification; the design and study of fractal graph based on visual C++; content-enhanced matrix factorization for recommender systems; space-time chebyshev pseudospectral method for burgers equation; on the monomial B?-character of a finite ?-separable group; a variable step size LMS based on sparsity for system identification; a enterprises supplier evaluating system using fuzzy-AHP; the optimizion of the training process based on adaboost algorithm; improvement and application of template matching algorithm; job-shop scheduling on exhibition logistics based on genetic algorithms; research on ATS device resources matching algorithm based on minimum weighted distance; improved algorithm of fractal compression based on average deviation; a hybrid recommender algorithm based on an improved similarity method; research on clustering analysis based on SOM; a model of classification for e-nose based on genetic algorithm; small-GEAR in the specific scenarios of small network; an adaptive model for mobile Ad Hoc networks; wireless network security problems and coping strategies; research of the DNS server deployment in multi-export network; research of improved algorithm for MIMO channel estimation; development of system SMPSL for bit communication; development of system SMPSL for analog communication; service-oriented QoS guarantee based on access category traffic; a data transmission strategy proposed for subsea surveillance; anti-interference communication based on cognitive radio; the secure communication scheme of DSRC based on watermark and VPN; the research of the component-based satellite network protocols; design of embedded romote smart home control system; meteorological instruments visualized verification integrated system; the design and implementation of P2P traffic intelligent guidance system; research status of fault diagnosis based on support vector machine; the design and implementation of intelligent farmland irrigation system; visual design and implementation of the stock information system; an embedded system used as intelligent node of distributed surveillance; a network traffic monitor model based on campus network and research and implementation of muck truck regulatory system; impedance control system for a biped skating robot.",
        "journal": "Applied Mechanics and Materials",
        "authors": [],
        "citation_count": "0",
        "full_text": null,
        "analysis": "",
        "verbatim_quote1": "",
        "verbatim_quote2": "",
        "verbatim_quote3": "",
        "relevance_score1": 0,
        "relevance_score2": 0,
        "limitations": "",
        "inline_citation": "",
        "full_citation": ""
    }
]