- analysis: '>'
  authors:
  - Barik R.K.
  - Dubey H.
  - Misra C.
  - Borthakur D.
  - Constant N.
  - Sasane S.A.
  - Lenka R.K.
  - Mishra B.S.P.
  - Das H.
  - Mankodiya K.
  citation_count: '39'
  description: This book chapter discusses the concept of edge-assisted cloud computing
    and its relation to the emerging domain of “Fog-of-things (FoT)”. Such systems
    employ low-power embedded computers to provide local computation close to clients
    or cloud. The discussed architectures cover applications in medical, healthcare,
    wellness and fitness monitoring, geo-information processing, mineral resource
    management, etc. Cloud computing can get assistance by transferring some of the
    processing and decision making to the edge either close to client layer or cloud
    backend. Fog of Things refers to an amalgamation of multiple fog nodes that could
    communicate with each other with the Internet of Things. The clouds act as the
    final destination for heavy-weight processing, long-term storage and analysis.
    We propose application-specific architectures GeoFog and Fog2Fog that are flexible
    and user-orientated. The fog devices act as intermediate intelligent nodes in
    such systems where these could decide if further processing is required or not.
    The preliminary data analysis, signal filtering, data cleaning, feature extraction
    could be implemented on edge computer leading to a reduction of computational
    load in the cloud. In several practical cases, such as tele healthcare of patients
    with Parkinson’s disease, edge computing may decide not to proceed for data transmission
    to cloud (Barik et al., in 5th IEEE Global Conference on Signal and Information
    Processing 2017, IEEE, 2017) [4]. Towards the end of this research paper, we cover
    the idea of translating machine learning such as clustering, decoding deep neural
    network models etc. on fog devices that could lead to scalable inferences. Fog2Fog
    communication is discussed with respect to analytical models for power savings.
    The book chapter concludes by interesting case studies on real world situations
    and practical data. Future pointers to research directions, challenges and strategies
    to manage these are discussed as well. We summarize case studies employing proposed
    architectures in various application areas. The use of edge devices for processing
    offloads the cloud leading to an enhanced efficiency and performance.
  doi: 10.1007/978-3-319-73676-1_14
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Cloud Computing for Optimization:
    Foundations, Applications, and Challenges pp 367–394Cite as Home Cloud Computing
    for Optimization: Foundations, Applications, and Challenges Chapter Fog Assisted
    Cloud Computing in Era of Big Data and Internet-of-Things: Systems, Architectures,
    and Applications Rabindra K. Barik, Harishchandra Dubey, Chinmaya Misra, Debanjan
    Borthakur, Nicholas Constant, Sapana Ashok Sasane, Rakesh K. Lenka, Bhabani Shankar
    Prasad Mishra, Himansu Das & Kunal Mankodiya  Chapter First Online: 27 February
    2018 1867 Accesses 43 Citations Part of the book series: Studies in Big Data ((SBD,volume
    39)) Abstract This book chapter discusses the concept of edge-assisted cloud computing
    and its relation to the emerging domain of “Fog-of-things (FoT)”. Such systems
    employ low-power embedded computers to provide local computation close to clients
    or cloud. The discussed architectures cover applications in medical, healthcare,
    wellness and fitness monitoring, geo-information processing, mineral resource
    management, etc. Cloud computing can get assistance by transferring some of the
    processing and decision making to the edge either close to client layer or cloud
    backend. Fog of Things refers to an amalgamation of multiple fog nodes that could
    communicate with each other with the Internet of Things. The clouds act as the
    final destination for heavy-weight processing, long-term storage and analysis.
    We propose application-specific architectures GeoFog and Fog2Fog that are flexible
    and user-orientated. The fog devices act as intermediate intelligent nodes in
    such systems where these could decide if further processing is required or not.
    The preliminary data analysis, signal filtering, data cleaning, feature extraction
    could be implemented on edge computer leading to a reduction of computational
    load in the cloud. In several practical cases, such as tele healthcare of patients
    with Parkinson’s disease, edge computing may decide not to proceed for data transmission
    to cloud (Barik et al., in 5th IEEE Global Conference on Signal and Information
    Processing 2017, IEEE, 2017) [4]. Towards the end of this research paper, we cover
    the idea of translating machine learning such as clustering, decoding deep neural
    network models etc. on fog devices that could lead to scalable inferences. Fog2Fog
    communication is discussed with respect to analytical models for power savings.
    The book chapter concludes by interesting case studies on real world situations
    and practical data. Future pointers to research directions, challenges and strategies
    to manage these are discussed as well. We summarize case studies employing proposed
    architectures in various application areas. The use of edge devices for processing
    offloads the cloud leading to an enhanced efficiency and performance. Keywords
    Big data Edge computing Fog computing Cyber-physical systems Cloud computing Smart
    health Geoinformation systems Information systems Access provided by University
    of Nebraska-Lincoln. Download chapter PDF 14.1 Introduction Cloud GIS framework
    facilitated sharing and exchange of geospatial data belonging to various stakeholders.
    It created an environment that enabled wide variety of users to retrieve, access
    and disseminate geospatial data along with associated meta data in a secure manner
    [31]. It has the functionality for decision making, storage for various data types,
    fetching data and maps as per user’s demand, querying, superimposing and analyzing
    the data and generating final reports (maps) to administrators and planners[63].
    CloudGIS framework has leveraged for environmental monitoring, natural resource
    management, healthcare, land use and urban planning, watershed, marine and coastal
    management [32]. There are numerous emerging applications of CloudGIS framework.
    CloudGIS has the ability to integrate and analyze heterogeneous thematic layers
    along with their attribute information to create and visualize alternative planning
    scenarios. User friendly CloudGIS has made Geospatial Information Systems (GISs)
    a preferred platform for planning in global, regional, national and local level
    using various analyzes and modeling functionalities. CloudGIS integrates common
    geospatial database operations such as query formation, statistical computations
    and overlay analysis with unique visualization functionalities [32]. These features
    distinguish CloudGIS from other spatial decision support systems. It is a widely
    used tool in public and private sector for explaining events, predicting outcomes
    and designing strategies [70]. Geospatial data contains informative temporal and
    geospatial distributions [48]. In traditional setup of CloudGIS framework, we
    send the data to cloud server where these are processed and analyzed. This scheme
    takes large processing time and require high Internet bandwidth. Fog computing
    overcomes this problem by providing local computation near the clients or cloud.
    Fog computing enhances the CloudGIS by reducing latency at increased throughput.
    Fog devices such as Intel Edition and Raspberry Pi etc. provides low-power gateway
    that can increase throughput and reduces latency near the edge of geospatial clients.
    In addition, it reduces the cloud storage for geospatial big data. Also, the required
    transmission power needed to send the data to cloud is reduced as now we send
    the analysis results to cloud rather than data. This leads to improvement in overall
    efficiency. Fog devices can act as a gateway between clients such as mobile phones
    [7, 12]. The increasing use of wearables in smart telehealth system led to generation
    of huge medical big data. Cloud and fog services leverage these data for assisting
    clinical procedures. IoT Healthcare has been benefited from this large pool of
    generated data. It suggests that the use of low-resource machine learning on Fog
    devices which kept close to wearables for smart telehealth. For traditional telecare
    systems, the signal processing and machine learning modules are deployed in cloud
    that process physiological data. This book chapter also presents a Fog architecture
    that relied on unsupervised machine learning big data analysis for discovering
    patterns in physiological data. So both geospatial and medical data was processed
    at the edge using of fog devices and finally has stored at the cloud layer. The
    present book chapter has made the following contributions: It gives the detail
    concepts and architectural framework of about the edge, cloud and fog computing;
    It presents the big data concept in the field of geospatial and medical applications;
    It discusses about management of services, optimization, security and privacy
    in fog computing as well as edge computing environment; There are two case studies
    i.e. malaria disease management and telemonitoring of patients with Parkinson’s
    diseases have been elaborated with the use of different fog assisted cloud architecture;
    14.2 Edge Assisted Cloud Computing 14.2.1 Cloud and Edge Data are gradually produced
    and processed at the edge of the network. Same works have been done before in
    micro data center and cloudlet. Cloud backend does not efficiently handle the
    processing of big data that is generated at the edge. Edge computing allows for
    more edge devices or sensors to interface with the cloud in larger scale [34,
    62]. Since the cloud computing environments are not efficient for edge data due
    to throughput and latency need. The data has to be transferred to cloud and processing
    being done there. The analysis is later to be communicated to the edges. In light
    of these facts, we need another layer of computational nodes referred as Fog computing
    to tackle local processing and inference at reduced latency and increases throughput
    [55]. In the edge computing concept, the things are both data producers and/or
    consumers. Both play important roles. At the network edge, the nodes perform computational
    tasks as well as request service from the cloud. Edge computers store data temporarily,
    perform computations and in this way translate some of the analysis from cloud
    to edge node. In addition, it reduced latency, transmission power and increase
    throughput. The design of edge nodes and their arrangement is decided by the application
    requirements such as remote telecare of patients with Parkinson’s disease [23,
    28, 52]. The edge computing paradigm manages the computations near sensor nodes
    such as wearables, smart watches [21, 64]. Edge computing offers several advantages
    over cloud processing. It assists the cloud backend, in a way that it is complementary
    analysis happens at edges and cloud such as preliminary diagnosis of diseases
    at edge and long-term decision making in cloud backend. For example, a smart mobile
    is the edge between the cloud layer and body things, a gateway in a smart home
    is the edge between the cloud and home things, a micro data center and a cloudlet
    is the edge between the cloud and a mobile device. From these point of view, the
    edge computing is the exchangeable with fog computing. But edge is focused more
    towards the things side where fog computing is mainly focusing on the infrastructure
    side [3, 57, 62]. 14.2.2 Cloud Computing Cloud facilitates on-demand resources
    and facilities over the web. It possesses adequate storage and computational infrastructure
    for data analysis and visualization. Cloud computing provided a transition from
    desktop to cloud servers. Various web processing architectures have created in
    an open environment with shared assets [70]. It was facilitated by four distinct
    types of service model, i.e., infrastructure as a service (IaaS), platform as
    a service (PaaS), software as a service (SaaS) and database as a service (DaaS).
    These four types of service models are depicted in Fig. 14.1. IaaS model includes
    virtual machines (VM) and storage area for storing of data. IaaS balances the
    computational load in cloud computing. Users could access the software and/or
    install those through VM. Users have access to hard system vai IaaS model. This
    way the end users have online access to hardware platform as per their needs [14].
    PaaS ensures availability of programming models via web. It has possibility of
    execution of these program for addressing the user’s need. It ensures that web
    apps could be used without installation or download of any software [9, 44]. SaaS
    service model allows software deployment in a way that users could run applications
    without installing those on their system. However, this model is limited to a
    set of services [1, 47]. A more flexible model, DaaS provide its users access
    to a database without software installation or hardware setup or configuration.
    All of the administrative and maintenance tasks are handled by the service providers.
    Customers can have control over the database depending on the service providers
    [15, 42]. All the above discussed models were used for various application areas.
    Particularly SaaS and DaaS model are dedicated for geospatial applications. Analysis
    and storage of geospatial data requires a robust framework. Such system works
    on top of PaaS service model in CloudGIS framework. It is a robust platform using
    that organizations interrelate with technologies, tools and expertise to nurture
    deeds for producing, handling and using geographical statistics and data. Fig.
    14.1 The characteristics of cloud computing service models Full size image It
    deploys a unique instance, multi tenant design that permits more than one client
    to contribute assets without disrupting each other. This integrated hosted service
    method helps installing patches and application advancements for users’ transparency.
    Another characteristic is embrace of geospatial web services and as an established
    architectural methodology in engineering [46]. Many cloud platforms uncover the
    applications statistics and functionalities via geospatial web services [30].
    These permit clients to query or update different types of cloud services and
    applications. It is a tool that assimilates software cloud with enterprise SOA
    infrastructure [58]. Figure 14.2 shows the system architecture for CloudGIS framework
    [29]. Fig. 14.2 Systems view of CloudGIS framework with three categories of clients
    (thick, thin and mobile). It has client-tier layer, application-tier layer divided
    into different web services and data-tier layer with geospatial and meta-data
    storage [29] Full size image The client tier layer consists of three types of
    clients i.e. thin, thick and mobile clients. These three types of clients have
    the main function to visualization functionality for geospatial information. Mobile
    clients are users operating through mobile devices. The users those are working
    on web browsers are defined to be thin clients. In thin clients, users do not
    require any additional software for the operation. Thick clients are the users
    processing or visualizing the geospatial data in standalone system where it requires
    additional software for full phase operation [38]. The application tier comprises
    the main geospatial services executed by servers. It is an intermediate amongst
    the different clients and providers. Dedicated server for each application is
    operated for services such as Web Map Service (WMS), Web Coverage Service (WCS),
    Web Feature Service (WFS), Web Catalog Service (CSW) and Web Processing Service
    (WPS) /emphetc. [58]. Dedicated application server is responsible for requests
    to and from clients. In addition, services include three types of applications
    namely catalog, data servers and processing servers. Catalog servers are employed
    to search the meta information regarding the stored spatial data. It is an important
    components for controlling geospatial information in cloud. The catalog service
    has implementation of a standard publish-find-bind model. This model is defined
    by OGC web service architecture. Data server deals with the WMS, WCS and WFS [17].
    Processing server offers geospatial processes that allow different clients to
    smear in WPS standard geospatial data [66]. Detail explanation of every process
    done by client request, forward the desire processing service with input of several
    factors, specifies and provides definite region in leaping box and feedbacks with
    composite standards. Data tier layer has spatial data long with related information.
    System utilizes the layer to store, recover, manipulate and update the geospatial
    data for further analysis. Data can be stored in different open source DBMS packages,
    simple file system or international organizations (e.g., Bhuvan, USGS, Open Street
    Map, Google) [67]. The system architecture of CloudGIS shows that geospatial data
    are one of the key components in data layer for the handling geospatial analysis
    [61]. The widespread use of cloud for geospatial data storage and analysis lead
    to generation of large amount of data from different areas [69]. This gives rise
    to the geospatial big data discussed in next section. 14.2.3 Fog Computing Cloud
    computing paradigm has the limitation as most of the cloud data centers are geographically
    centralized. These data centers are not located near the proximity of users or
    devices. Consequently, latency-sensitive and real time computation service requests
    by the distant cloud data centers has often suffer large network congestion, round
    trip delay and degraded service quality. Edge computing is an emerging technology
    for resolving these issues [53]. Edge computing provide the computation nodes
    near the edge, i.e., close to the clients. It enables the desired data processing
    at the edge network that consists of edge devices, end devices and edge server
    [37]. Devices are the smart objects, mobile phones whereas routers, bridges, wireless
    access points are the employed as edge servers. These components function co-operatively
    for supporting the capability of edge computation [62]. This paradigm ensures
    fast response to computational demands and after computation, the analysis report
    could be transferred to cloud backend. Edge computing is not associated with any
    kind of cloud services model and communicate more often with end devices. Various
    combination of edge and cloud computing lead to emergence of several computational
    paradigms such as mobile cloud computing (MCC), mobile edge computing (MEC) [57],
    Fog computing. These are considered the budding extension of edge and cloud computing
    as shown in Fig. 14.3 [56]. Cisco proposed Fog computing in 2012 [20] as a paradigm
    that decentralizes the computations towards users so that quality of service be
    improved [59]. Fog computing do not require computational resources from cloud
    data centers [60]. In this way, data storage and computation are brought closer
    to the users leading to reduced latencies as compared to communication overheads
    with remote cloud servers [71]. It refers to a computing paradigm that uses interface
    kept close to the devices that acquire data. It introduces the facility of local
    processing leading to reduction in data size, lower latency, high throughput and
    thus power efficient systems. Fog computing has successfully applied in smart
    cities [35] and healthcare [28]. Fig. 14.3 Different schemes of mobile cloud computing,
    edge computing, Fog and cloud computing [53] Full size image Fog devices are embedded
    computers such as Intel Edison and Raspberry Pi that acts a gateway between cloud
    and mobile clients [5]. From the above discussions, we can see that it requires
    an efficient, reliable and scalable Fog computing based GIS framework for sharing
    and analysis of geospatial and medical big data across the web. Fog computing
    is a novel idea that helps to increase throughput and reduce latency at the edge
    of the client with respect to cloud computing environment (See Fig. 14.4). Fig.
    14.4 Fog computing is as an intermediate layer between edge computing layer and
    cloud layer. The Fog computer layer has enhanced the efficiency by providing computing
    near the edge computing devices. This framework is very much useful for geospatial
    application, healthcare, smart city, smart grid and smart home etc. [23] Full
    size image 14.2.4 Geospatial and Medical Big Data As Big data from geospatial
    and medical domains is increasing in terms of variety, size it demands new architectures
    for efficient analysis. It includes large data sets whose sizes is beyond the
    ability of commonly used software tools. It requires special tools to acquire,
    curate, manage, and process big data in realistic time frames [2, 26]. Big data
    is generated in multiple forms. Most of the big data is semi-structured, quasi-structured
    or unstructured, that makes the processing challenging. Big data if processed
    in an efficient manner helps in finding useful analytics related to disease prevention,
    crime or businesses etc. The data size is increasing at an exponential rate as
    a result of increased use of wearable and mobile devices, radio-frequency identification
    (RFID) readers, and remote sensing. Geospatial data has always big data with the
    combination of remote sensing, GIS and GPS data [48]. In these days, big data
    analytics for geospatial systems is receiving attention. Geospatial big data usually
    refer to datasets beyond the processing capability of traditional infrastructures
    [51]. Geospatial data are categorized into raster, vector and graph data. Raster
    include geospatial images obtained from satellites, security cameras and aerial
    vehicles. The raster data are utilized by government agencies for analysis, prediction
    and decision making. Feature extraction, change detection and pattern mining are
    some examples of analyzing raster data. Vector consist of points, lines and polygons
    features. For example, in Google maps, the various temples, bus stops and churches
    are marked with points data whereas lines and polygons correspond to the road
    networks. Spatial correction, pattern analysis and hot spot detection is usually
    done using vector data. Graph appears in form of road networks. Here, an edge
    represents a road segment and a node denotes an intersection or a landmark. Due
    to diversity of health related ailments and variety of treatments and outcomes
    in health sector, there are numerous health care data have generated. That gives
    rise to the concept of medical big data. Electronic health records, clinical registries,
    biometric data, patient-reported data, medical imaging and different administrative
    claim record are the main sources for medical big data. Medical big data have
    several typical features that are different from big data from other disciplines.
    These data are often hard to access and investigators in the medical area are
    aware of risks related to data privacy and access [49]. Big data poses some challenges
    for data analysis with cloud computing. Reliability, manageability and low cost
    are the key factors that make cloud computing useful for data processing. However,
    the security and privacy are the main concerns for processing sensitive data.
    Particularly in health geo-informatics applications with sensitive data, we require
    secure processing [36]. For minimizing privacy and security threats, the data
    should be utilized as per the user’s context for limited amount of data access
    within the model. After processing the data should be transferred to the next
    level for final processing of data analysis. That will benefit the data security
    and privacy. 14.3 Performance Criterion 14.3.1 Management of Services In consideration
    of management service at edge and fog network, it has argued that there are different
    kinds of features such as isolation, extensibility, differentiation and reliability
    should assure. Every services in edge and fog network, it has to be execute with
    proper priority of services. For example, in health care system, heart failure
    detection has the higher order priority as compared with other services [37, 64].
    14.3.2 Optimization Edge computing leads to improved latency, power efficient,
    at high throughput and reasonable quality of service. These attributes make edge
    computing an attractive alternative for efficient analysis of big data. Initially,
    businesses would require investment to augment cloud with edge computing and optimize
    it for a given application. The data collection, processing and transfer could
    be optimized for a given application. While some general purpose architectures
    can be built, the optimization for each application have to be done separately.
    It is important to note that in era of edge and fog computing, we assist the cloud
    computing by employing edge computers. We do not intend to replace cloud by edge
    or Fog computers as cloud is still required for long-term contextual storage and
    analysis [21, 57]. Latency is an important aspects of cloud based systems. For
    some applications such as remote monitoring of patients, it is more important
    than other. For improved latency, the data analysis should be performed To decrease
    the latency, the workload should better to finish in the nearest layer which has
    enough calculation ability to the things at the edge, cloud and fog network. From
    the point of view with respect to latency, high bandwidth reduces the transmission
    time, particularly for large data set. It has to be correctly decide the workload
    allocation in each and every layer, it needs to consider the bandwidth usage information
    and computation capability in the layers to keep away from delay and competition
    [37, 62]. 14.4 Case Study I: Malaria Disease Management 14.4.1 Health GIS For
    medical solutions, sharing patient’s private data, preparing it further analysis
    have been challenging partly due to heterogeneous nature of data and also their
    geographical distributions. It lead to confluence of geo-information system and
    healthcare solutions into health GIS paradigm. Occurrence and spread of diseases
    such as Malaria, Chikungunya is correlated to geographical boundaries and related
    to time related factors. So, during few months of an year and for certain regions
    of a state or country these are more important than others. In past, Cloud computing
    has facilitated a means of data collection, process, monitoring and managements
    of disease information through web interface [65]. However, interoperability,
    integrating various heterogeneous data remains challenges in cloud-based health
    GIS systems. The problem can be tackled in different ways. With the emergence
    of fog computing, it is possible to have dedicate fog nodes are handling heterogeneity,
    scalability and interoperability issues. The cloud would still be the final destination
    of metadata and/or processing results [33]. From the different literature reviews,
    it is summarized that, it requires an efficient, reliable and scalable fog computing
    based framework for enhanced analysis of geospatial big data. We proposed the
    FogGIS framework and associated methods such as compression techniques, overlay
    analysis, energy saving strategies, scalability issues [50], various time analysis
    and comparative study. We considered the geospatial data of malaria vector borne
    disease positive maps of Maharastra, India from 2011 to 2014 for performing a
    case study. 14.4.2 Malaria Vector Borne Disease Positive Maps of Maharastra, India
    Maharashtra is a state in the western region of India. It is also the second most
    populous state and third largest by area. It is bordered by the Arabian sea to
    the west, Karnataka to the south Gujarat and the Union territory of Dadra and
    Nagar Haveli to the northwest, Telangana to the southeast, Madhya Pradesh to the
    north, Chhattisgarh to the east and Goa to the southwest. It spans over an area
    of 307,731 km2 or 9.84% of the total geographical area of India. In total, it
    has 41000 villages and 378 urban cities. It has one of the highest levels of urbanization
    among all Indian states. The secondary health data positive cases of malaria and
    number of death due to malaria are collected from the National Vector Borne Disease
    Control Program (NVBDCP), New Delhi. Climatic data includes all the surface parameters
    like temperature, rainfall, humidity, wind speed etc. are collected from the National
    Data Centre (NDC) and India Meteorological Department (IMD), Pune, India. The
    inputs of positive cases and the deaths (number of persons) were fed in Quantum
    GIS software and region wise maps with district boundaries were generated. It
    includes incidence of malaria with the interval of 2011–2014 to see the trend
    and pattern of the incidence of Malaria in Maharashtra and finally find out the
    trend with the help of linear regression equation: y = a \\(+\\) bx where b value
    shows the rate of change per decade thus the trend of malaria from 2011 2014 generated
    in the form of Map. The creation of geospatial database are significant and tedious
    assignment where efficacy in system development and implementation. Integrated
    geo-health database creation include stages such as inputs of data on geo-health
    data and related non-geo-health attributes data, its authentication by connecting
    with same set of data. Geospatial database delivers a platform in that organizations
    interrelate with technologies to nurture actions for spending, handling and generating
    geo-health data. The development of geo-health database supports in various administrative
    and political levels through these decision-making functions. Quantum GIS 2.14.3
    is the OS GIS software selected to examine the competences w.r.t. creation of
    geospatial database. The procedure model of geo-health database creation is recurring
    or frequent in nature and each operation improves the study and strategy steps
    through assessment and testing of a complete component. In complete component,
    Quantum GIS has set up an malaria geo-health database by the help of political
    map of India. QGIS is also used for integrated geo-health database creation. After
    geo-health database designed, the next step is to propose the model for better
    analysis of geo-health data. 14.4.3 Proposed Architecture This section describes
    various components of the proposed GeoFog4Health framework and discusses the methods
    implemented in it. It has discussed the hardware, software and methods used for
    compression of geospatial big data. It has been employed Intel Edison and Raspberry
    Pi as fog computing device in proposed GeoFog4Health framework [5]. Intel Edison
    is powered by a rechargeable lithium battery and contains dual-core, dual-threaded
    500MHz Intel Atom CPU along with a 100 MHz Intel Quark micro controller. It possesses
    1 GB memory with 4 GB flash storage and supports IEEE 802.11 a,b,g,n standards.
    It connects to WIFI and has been used UbiLinux operating system for running compression
    utilities. Raspberry Pi B Platforms have been used. Raspberry Pi has consisted
    of a 900 MHz 32-bit quad-core ARM Cortex-A7 CPU with 1 GB RAM. For WiFI connectivity
    in Raspberry Pi, it has been used WIFI dongle of Realtek RTL8188CUS chip set.
    In the proposed framework, it has been used both Intel Edison and Raspberry Pi
    in every fog node for better efficiency in time analysis that will be discuss
    in later section. Figure 14.5 has shown the proposed GeoFog4Health framework,
    it has categorized into four layers as cloud layer, fog layer, intermediate fog
    Layer and client-tier layer. The cloud layer is mainly focused on overall storage
    and analysis of geo-health data. In cloud layer, it has been implemented to add
    GeoSpark [72] for real time geospatial big data processing on the top of the Hadoop
    Ecosystem. The fog layer works as middle tier between client-tier layer and intermediate
    fog Layer. It has been experimentally validated that the fog layer is characterized
    by low power consumption, reduced storage requirement and overlay analysis capabilities.
    In fog layer, all fog nodes have been developed with Intel Edison and Raspberry
    Pi processor for processing of geo-health data. The additional intermediate fog
    layer has been added between fog layer and cloud layer for load overhead in fog
    layer. Thus, intermediate fog layer has been used for refinement of processing
    and storing of geo-health data in cloud storage area. In client-tier, the categories
    of users have been further divided into thick clients, thin clients and mobile
    clients environment respectively. Processing and analysis of geo-health data can
    be possible within these three environments. In the proposed framework, the processing
    of every fog node, it is found that lots of energy has been realized and it should
    be properly managed. It also experiments the different overlay analysis and lossless
    compression techniques in GeoFog4Health framework. Fig. 14.5 Conceptual diagram
    of the proposed GeoFog4Health architecture with four layers (client-tier layer,
    fog layer, intermediate fog layer and cloud layer [6]) Full size image 14.4.4
    Energy Efficiency In this section, the analytical model has introduced for the
    energy saving management of intermediate fog layer in GeoFog4Health. The proposed
    framework has investigated the energy saving management using finite buffer batch
    service buffering system with change over time and multiple vacations. It has
    been studied that the overall message delay in the uplink channel and performance
    of mean number of fog node data packets in the buffer, buffering delay and probability
    of blocking in the fog layer. Lots of energy has been required for handling heavy
    traffic of fog node data from fog and intermediate fog layer. With vacation mode
    operation, intermediate fog layer node does not listen to the node of fog layer
    continuously but it alternates the active state and the vacation state. It has
    considered a finite buffer batch service buffering system with multiple vacation
    and changeover time. Let, it has been assumed a and b as the threshold values
    of activating the intermediate fog layer service and service capacity, respectively.
    Whenever the intermediate fog layer node finished all its work, it goes to vacation,
    an internal timer that is exponentially distributed with parameter \\(\\theta
    \\) is then started and the intermediate fog layer node awakes to check the buffer
    content of the fog layer. When upon awaking the intermediate fog layer finds that
    there are still less than \\(j (0 \\le j \\le a-2)\\) data frames, it goes to
    vacation again. If the number of data frames in the buffer of the fog layer is
    \\(a-1\\) either at a service completion epoch or at a vacation termination point,
    the intermediate fog layer service will wait for some more time that is called
    changeover time. The change over time is exponentially distributed with parameter
    \\(\\gamma \\). If there is an arrival during the change over time, the intermediate
    fog layer service will start immediately, otherwise, it will go for a vacation
    period. If after a vacation period, the intermediate fog layer finds a non-empty
    buffer, it serves all data frames present at that point and also all new data
    frames that arrive while the intermediate fog layer service is working, until
    the buffer becomes empty again at the fog layer end and the whole procedure is
    repeated. 14.4.4.1 Analytical Model It has been considered a Markov chain with
    the state space \\(\\{ {(i,j)|0 \\le i \\le N, j=0,}1 \\bigcup {(a-1,2)}\\}\\)
    where i gives the buffer size and j represents the state of the server. The process
    is in the state (i, 0) if there are i data frames waiting in the buffer and the
    server is in sleep mode. It is in state (i, 1) if there are i data frames waiting
    in the base station buffer and the mobile station service unit is busy and it
    is in state \\((a-1,2)\\) if there are \\(a-1\\) data frames in the buffer and
    the server is waiting in the system. Using probabilistic argument at steady state,
    we obtain the following system of equations $$\\begin{aligned} \\beta P_{0,0}=
    & {} \\alpha P_{0,1},\\end{aligned}$$ (14.1) $$\\begin{aligned} \\beta P_{i, 0}=
    & {} \\beta P_{i-1,0}+\\alpha P_{i,1},~1 \\le i \\le a-2, \\end{aligned}$$ (14.2)
    $$\\begin{aligned} (\\beta + \\theta ) P_{a-1,0}= & {} \\beta P_{a-2,0}+\\gamma
    P_{a-1,2},\\end{aligned}$$ (14.3) $$\\begin{aligned} (\\beta + \\theta ) P_{i,0}=
    & {} \\beta P_{i-1,0},~a \\le i \\le N-1, \\end{aligned}$$ (14.4) $$\\begin{aligned}
    \\theta P_{N,0}= & {} \\beta P_{N-1,0},\\end{aligned}$$ (14.5) $$\\begin{aligned}
    (\\beta + \\alpha )P_{0,1}= & {} \\beta P_{a-1,2}+\\alpha \\sum _{s=a}^{b} P_{s,1}+\\theta
    \\sum _{s=a}^{b}P_{s,0},\\end{aligned}$$ (14.6) $$\\begin{aligned} (\\beta + \\alpha
    )P_{i,1}= & {} \\beta P_{i-1,1} +\\theta P_{i+b,0}+ \\alpha P_{i+b,1}, ~1\\le
    i \\le N-b, \\end{aligned}$$ (14.7) Using normalization condition \\(\\sum \\limits
    _{i=0}^{N}P_{i,0}+\\sum \\limits _{i=0}^{N}P_{i,1}+P_{a-1,2}=1\\) we recursively
    solved the equations. 14.4.4.2 Performance Measures The state probabilities of
    the incoming job request at arrival times are known, we can find out various performance
    measuring parameters like average number of job requests in the buffer \\(L_{q}\\),
    average time spending in the buffer \\(W_{q}\\) and the probability of blocking
    (PBL). They are given by \\(L_{q}=\\sum _{i=1}^{N} i P_{i,0}+\\sum _{i=1}^{N}i
    P_{i,1}+(a-1) P_{a-1,2}\\). The probability of blocking is given by \\({ PBL}=P_{N,0}+P_{N,1}\\).
    The average time spending in the buffer using Little’s rule is \\(W_{q}=L_{q}/
    \\beta {''}\\), where \\(\\beta {''}=\\beta (1-{ PBL})\\) is the effective arrival
    rate. Table 14.1 Result of compression in proposed framework using malaria geo-health
    data Full size table 14.4.5 Results and Discussions 14.4.5.1 Data Compression
    and Overlay Analysis In the present research, it has been used a well known popular
    compression algorithms for reduction of the malaria geo-health data size. The
    concept of compression in geo-health data have been used in several areas like
    in network and mobile GIS framework for minimization of their data size [16, 43,
    73]. Present study, it has been translated the various compression techniques
    from mobile platform to the proposed framework [55]. After completion of compressed
    resultant geospatial data at fog layer, it later transmits to the cloud layer.
    The cloud layer has stored the compressed data or decompressed the data before
    processing, analyzing and visualizing the resultant one. Presently, we are using
    lossless compression techniques such as .rar, .gzip, .zip, Various lossless compression
    techniques has been applied at fog Layer and the result has shown in Table 14.1.
    In this section, data analysis particularly overlay analysis is performed for
    malaria vector borne disease positive maps of Maharastra, India. Overlay analysis
    is one of the important data analysis in that, it has superimpose various geospatial
    data in a common platform for better analysis of raster and vector geospatial
    data. It has been found that 2 number of shape files related to malaria information
    mapping are overlaying with google satellite layer. In the present study, it has
    been used the malaria death mapping data of Maharastra from 2011–2014; has been
    processing in GeoFog4Health. The overlay analysis of various vector data and raster
    data of particular area has been performed. Initially, the developed datasets
    have been opened with Quantum GIS; desktop based GIS analysis tools, and performed
    some join operations [8]. Fig. 14.6 Integrated geo-health database of Malaria
    Full size image Fig. 14.7 Overlay operation on thin client environment in qgis
    cloud [39] Full size image The desired overlay operation has been done with standalone
    application, are known as thick client operation that has been shown in Fig. 14.6.
    In Fig. 14.6, it has been visualized with OpenStreet maps and the two shape files
    are invoked in one platform on Quantum GIS desktop environment. In Quantum GIS,
    plugin named as QGISCloud has been installed. The said plugin has the capability
    of storing various raster and vector data set in cloud database for further overlay
    analysis.After storing in cloud database, it also generates the mobile and thin
    client link for visualization of both vector and raster data set. Figures 14.7
    and 14.8 shows the overlay analysis on thin and mobile client respectively. It
    observes that the overlay analysis is a useful technique for visualization of
    geo-health data. In GeoFog4Health, it has been used Raspberry Pi in every Fog
    Node for better efficiency in time analysis. In the proposed framework, during
    the processing of every fog node consumes so many energy and cost. Thus, it is
    found that lots of energy has been realized and it should be properly management.
    So the next section describes the better strategy for energy efficiency and management
    in GeoFog4Health. Fig. 14.8 Overlay operation on mobile client environment in
    qgis cloud [40] Full size image Fig. 14.9 Performance comparison between Cloud
    GIS and GeoFog4Health framework using intel edition and raspberry Pi Full size
    image 14.4.5.2 Analysis of Computation Time We used Intel Edition and Raspberry
    Pi as fog device in proposed GeoFog4Health architecture. Running time of Intel
    Edison is greater time than that of Raspberry Pi. Intel Edison has been produced
    the processing time of order of NLog(N) where N defines the size of dataset. It
    has found that Raspberry Pi has completed the desire process almost two times
    faster than that of Intel Edison with scale up to larger than 125 or more data
    sets. The main network has been designed in each framework between the client-tier
    layer and the cloud layer. It is assumed that the mean arrival rate of transmitted
    data would be once per minute assuming that the fog node can place in the locations
    where only a small number of devices in that area exist. The average waiting time
    for each and every fog node has been calculated by Little’s Law [41]. It has been
    used malaria positive information geospatial data for the different test of bench-marking
    experiment. It has also calculated the average load of memory, CPU, processing
    time in percentage and average power consumption in watt. Figure 14.9 shows the
    various performance comparison between cloud GIS and GeoFog4Health framework using
    Intel Edition and Raspberry Pi processor. From the comparison analysis, it has
    been shown that while running one set at a instant of time, the average waiting
    time for Cloud GIS framework is 189:45 s, the average waiting time for GeoFog4Health
    framework with Intel Edition processor is 73:57 s where as with Raspberry Pi processor
    has around 10:20 seconds. It has also experimented that the service rate with
    Raspberry Pi is one third of Intel Edition in GeoFog4Health framework. It is found
    that the proposed framework with Raspberry Pi has been consuming 199 mW = s where
    as GeoFog4Health framework with Intel Edition has 522 mW = s when both these frameworks
    are in active state. Table 14.2 Comparison of Cloud GIS and FogGIS architecture
    Full size table 14.4.5.3 Comparative Analysis of Cloud GIS and Proposed Architecture
    Both Cloud GIS and GeoFog4Health framework have specific meaning for a service
    range with in the cloud computing environment and client-tiers that provide the
    mutual benefit to each other and interdependent services that leads to the greater
    storage capacity, control and communication possible anyplace with in the specified
    range [18]. Table 14.2 outlines the comparison characteristics of Cloud GIS and
    FogGIS framework [6]. Fig. 14.10 Proposed SmartFog architecture for enhanced analytics
    in wearable internet of medical things. It is developed and evaluated for telehealth
    application Full size image 14.5 Case Study II: Telemonitoring of Patients with
    Parkinson’s Disease 14.5.1 Telemonitoring of Patients with Parkinson’s Disease
    Telehealth monitoring is very effective for the speech language pathology, and
    smart devices can be effective in such situations. Several signs indicate the
    relationship of dysarthria, speech prosody and acoustic features. Patients with
    Parkinson’s disease are always accompanied by dysarthria. Characterized by the
    monotony of speech, variable rate, reduced stress, imprecise consonants and breathy
    and harsh voice. It suggested that excessive F0 variation and range in speakers
    with severe dysarthria exist. Another important acoustic feature for dysarthria
    is the amplitude of the speech uttered by the patients with Parkinson’s disease.
    It also mentioned about reduced vocal intensity in hypokinetic dysarthria in Parkinson
    disease. For assisting to the patients, it presents a Fog Computing architecture,
    SmartFog (see Fig. 14.10) that relied on unsupervised clustering for discovering
    patterns in pathological speech data obtained from patients with Parkinson’s disease(PD).
    The patients with PD use smartwatch while performing speech exercises at home.
    The speech data were routed into the Fog computer via a nearby tablet/smart phone
    [24]. 14.5.2 Proposed Architecture: SmartFog The Fog computer extracts loudness
    and fundamental frequency features for quantifying pathological speech. The speech
    features were normalized and processed with k-means clustering. When we see an
    abnormal change in features, results are uploaded to the cloud. In other situations
    data is only processed locally. In this way, Fog device could perform “smart”
    decision on when to upload the data to cloud computing layer for storing. It developed
    two prototype using Intel Edison and Raspberry Pi. Both of the prototypes were
    used for comparative analysis on computation time. Both systems were tested on
    real world pathological speech data from telemonitoring of patients with Parkinson’s
    disease. The increasing use of wearables in smart telehealth system led to generation
    of huge medical big data [23, 25, 49]. The telehealth services leverage these
    data for assisting clinical procedures. It also suggested to use of low-resource
    machine learning on Fog devices kept close to the wearable for smart telehealth
    [13, 22, 27]. That is why in the present book chapter, it discussed the development
    and implementation of a smartfog framework. This developed framework helps mitigate
    the amount of data processed at the cloud layer. It is also playing as the role
    of orchestrator in the process of data acquisition, conditioning, analysis and
    short-term storage. Finally, it compared the results of benchmarking experiments
    to those of realistic payloads to explore limitations in scale. Edge computing
    refers to the enabling technologies which allow computation to be performed at
    the edge of the network. For downstream data and upstream data, it utilized the
    cloud services and IoT services simultaneously. In this case, it defined edge
    as any computing and network resources along with the path between cloud data
    centers and data sources. 14.5.3 Fog-Based Machine Learning 14.5.3.1 Clinical
    Feature Extraction Feature engineering is the initial step in any machine learning
    analysis. It is the process of proper selection of data metric to input as features
    into a machine learning algorithm. In K-means clustering analysis, the selection
    of features that are capable of capturing the variability of the data are essential
    for the algorithm to find the groups based on similarity. The subjects were patients
    with Parkinson’s disease and the features chosen were the average fundamental
    frequency (F0) and Average amplitude of the speech utterance. Speech data from
    the patients with Parkinson’s disease were collected. For analysis 164 speech
    samples were considered.These samples comprised of sound files with utterances
    as a short /a/, a long /a/, a normal then high pitched /a/ ,a normal then low
    pitched /a/ and phrases. The feature extraction is done with the help of Praat
    scripting language [11]. For pitch, the algorithm performs an acoustic periodicity
    detection on the basis of an accurate auto correlation method. For calculating
    the intensity the values in the sound are first squared, then convolved with a
    Gaussian analysis window. The intensity is calculated in decibels. 14.5.3.2 K-Means
    Clustering K-means clustering is a type of unsupervised learning, that is used
    for exploratory data analysis of no labeled data [10]. K-means is a method of
    vector quantization and is quite extensively used in data mining. The main goal
    of this algorithm is to find groups in the data, the number of groups represented
    by the variable K. This algorithm works iteratively to assign each data point
    to one of K groups based on the features that are provided. The input to the algorithm
    are the features and the value of K. K centroids are initially randomly selected,
    then the algorithm iterates until convergence. This algorithm aims to minimize
    the squared error function J. where chosen distance measure is Euclidean distance
    between the data point and cluster center. Feature Engineering is an essential
    part in this algorithm. Authors in [45], uses optimized K-means, that clusters
    the statistical properties such as variance of the probability density functions
    of the clusters extracted features. In [54] the authors have used clustering on
    database containing feature vectors extracted from Malay digits utterances. The
    features extracted in [54] were the Mel Frequency Cepstral Coefficients (MFCC).
    In our work we have chosen average fundamental frequency and average intensity
    as features extracted from the speech files for applying K-means clustering. Fig.
    14.11 K-means clustering plot Full size image 14.5.4 Results and Discussions 14.5.4.1
    K-Means Clustering Plot For our analysis we have chosen speakers with 164 speech
    samples with utterances that are a short /a/, a long /a/, a normal then high pitched
    /a/,a normal then low pitched /a/ and phrases. The features chosen are average
    fundamental frequency and intensity. Feature extraction is done using praat [11]
    an acoustic analysis software and using praat scripts that uses standard algorithms
    to extract pitch and intensity mentioned in the discussion above. The results
    are shown in the the form of plots.The k-means clustering analysis is done on
    python programming language. The plots below show the Clusters of the speech data
    samples used in the analysis.Different colors represent different mutually exclusive
    groups. The analysis is done with 2, 3 and 4 number of clusters, i.e. the value
    of k chosen as 2 and 3 and 4 respectively. Figure 14.11a shows the K-means clustering
    plot for two clusters shown with different colors.The python script is run on
    Raspberry Pi and Intel Edison to generate the results. Figure 14.11b displays
    the k-means cluster plot for 4 clusters designated with four different colors
    in a 3D plot.Each observation belongs to the cluster with the nearest mean in
    k-means clustering.We have used k-means for feature learning performed in the
    fog device. Figure 14.11c shows the k-means clustering plot for three clusters
    with different colors in 3D. 14.5.4.2 Performance Comparison The Raspberry Pi
    provides a low-cost computing terminal. The Edison is a deeply embedded IoT computing
    module. There is a difference of processor speed and power consumption in Edison
    and Raspberry Pi. The Machine Learning algorithms were run on both of the devices
    and their Run time, average CPU usage and Memory usage have been calculated. Fig.
    14.12 A comparison of intel edison and raspberry pi Full size image The Fig. 14.12
    shows comparison of Intel Edison and raspberry Pi fog devices. The ideal system
    will minimize run time, maximize CPU usage, and use a modest amount of memory.
    The raspberry Pi either outperformed or matched the Edison in each of these criterion.
    The raspberry Pi was not capable of generating a graphical output for this type
    of analysis in a real-time response threshold of 200 ms. How ever, without a need
    for complex graphics, the raspberry Pi was able to reach the threshold clocking
    in at 160 ms. 14.6 Conclusions In this book chapter, we developed and validated
    GeoFog, Fog2Fog architectures for application-specific case studies. Intel Edison
    processor and Raspberry Pi were used as Fog processors in fog computing layers.
    Fog nodes not only reduce storage requirements but also results in efficient transmission
    at improved throughput and latency. Fog of things is collection of all nodes between
    client layer and cloud. The edge computing done on fog nodes creates an assistive
    layer in scalable cloud computing. With increasing use of wearables and internet-connected
    sensors, enormous amount of data is being generated. Clean and curating such data
    for extraction of useful features can be easily done on fog nodes. The cloud could
    be reserved for long-term analysis. In this study, we proposed and validated a
    Fog-based GIS framework for enhanced analysis of geo-health data. Fog devices
    reduced the storage requirements, transmission power leading to overall efficiency.
    Fog computing enhances the data analysis by increasing the throughput and reducing
    the latency. Geo-health data of malaria vector borne disease positive maps of
    Maharashtra state in India was used for case study. We analyzed the energy saving
    and cost analysis for proposed GeoFog4Health architecture. Further, the comparison
    of computation time showed the efficacy of proposed Fog architecture over Cloud
    GIS for enhanced analysis of geo-health data. Thus, the fog devices add edge intelligence
    in geo-health data analysis by introducing local processing within cloud computing
    environments. Fog computing emphasizes proximity to end-users unlike cloud computing
    along with local resource pooling, reduction in latency, better quality of service
    and better user experiences. This paper relied on Fog computer for low-resource
    machine learning. As a use case, we employed K-means clustering on clinical speech
    data obtained from patients with Parkinson’s disease (PD). Proposed Smart-Fog
    architecture can be useful for health problems like speech disorders and clinical
    speech processing in real time as discussed in this paper.Fog computing reduced
    the onus of dependence on Cloud services with availability of big data.There will
    be more aspects of this proposed architecture that can be investigated in future.We
    can expect Fog architecture to be crucial in shaping the way big data handling
    and processing happens in near future. References A. Amiri, Application placement
    and backup service in computer clustering in software as a service (SaaS) networks.
    Comput. Oper. Res. 69, 48–55 (2016) Article   MathSciNet   Google Scholar   J.
    Andreu-Perez, C.C. Poon, R.D. Merrifield, S.T. Wong, G.Z. Yang, Big data for health.
    IEEE J. Biomed. Health Inf. 19(4), 1193–1208 (2015) Article   Google Scholar   R.
    Barik, H. Dubey, R.K. Lenka, K. Mankodiya, T. Pratik, S. Sharma, Mistgis: Optimizing
    geospatial data analysis using mist computing. in International Conference on
    Computing Analytics and Networking (ICCAN 2017) (Springer, 2017) Google Scholar   R.
    Barik, H. Dubey, K. Mankodiya, Soa-fog: Secure service-oriented edge computing
    architecture for smart health big data analytics. in 5th IEEE Global Conference
    on Signal and Information Processing 2017 (IEEE, 2017), p. 15 Google Scholar   R.K.
    Barik, H. Dubey, A.B. Samaddar, R.D. Gupta, P.K. Ray, FogGIS: Fog computing for
    geospatial big data analytics. arXiv preprint http://arxiv.org/abs/1701.02601arXiv:1701.02601
    (2016) R. Barik, H. Dubey, S. Sasane, R.K. Lenka, C. Misra, N. Simha, K. Mankodiya,
    Fog computing-based enhanced geohealth big data analysis. in 2017 International
    Conference on Intelligent Computing and Control, I2C2 (IEEE, 2017) Google Scholar   R.
    Barik, R.K. Lenka, H. Dubey, N.R. Simha, K. Mankodiya, Fog computing based SDI
    framework for mineral resources information infrastructure management in india.
    in 2017 International Conference on Intelligent Computing and Control, I2C2 (IEEE,
    2017) Google Scholar   R. Barik, A. Samaddar, R. Gupta, Investigations into the
    efficacy of open source GIS software. Map World Forum (2009) Google Scholar   S.
    Bera, S. Misra, J.J. Rodrigues, Cloud computing applications for smart grid: A
    survey. IEEE Trans. Parallel Distribut. Syst. 26(5), 1477–1494 (2015) Article   Google
    Scholar   C.M. Bishop, Neural Networks for Pattern Recognition (Oxford university
    press, Oxford, 1995) Google Scholar   P. Boersma, D. Weenink, Praat-a System for
    Doing Phonetics by Computer [Computer Software] (Institute of Phonetic Sciences,
    University of Amsterdam, The Netherlands, 2003) Google Scholar   F. Bonomi, R.
    Milito, J. Zhu, S. Addepalli, Fog computing and its role in the internet of things.
    in Proceedings of the First Edition of the MCC Workshop on Mobile Cloud Computing
    (ACM, 2012), p. 13–16 Google Scholar   D. Borthakur, H. Dubey, N. Constant, L.
    Mahler, K. Mankodiya, Smart fog: Fog computing framework for unsupervised clustering
    analytics in wearable internet of things. in 5th IEEE Global Conference on Signal
    and Information Processing 2017 (IEEE, 2017), p. 15 Google Scholar   A. Botta,
    W. De Donato, V. Persico, A. Pescape, Integration of cloud computing and internet
    of things: a survey. Future Gener. Comput. Syst. 56, 684–700 (2016) Article   Google
    Scholar   H.T. Chang, T.H. Lin, A database as a service for the healthcare system
    to store physiological signal data. PloS one 11(12), e0168935 (2016) Article   Google
    Scholar   F. Chen, H. Ren, Comparison of vector data compression algorithms in
    mobile gis. in 2010 3rd IEEE International Conference on Computer Science and
    Information Technology (ICCSIT), vol. 1, (IEEE, 2010), p. 613–617 Google Scholar   Z.
    Chen, N. Chen, C. Yang, L. Di, Cloud computing enabled web processing service
    for earth observation data processing. IEEE J. Sel. Top. Appl. Earth Obs. Remote
    Sens. 5(6), 1637–1649 (2012) Article   Google Scholar   M. Chiang, T. Zhang, Fog
    and iot: An overview of research opportunities. IEEE Internet Things J. 3(6),
    854–864 (2016) Article   Google Scholar   N. Constant, D. Borthakur, M. Abtahi,
    H. Dubey, K. Mankodiya, Fog-assisted wIoT: A smart fog gateway for end-to-end
    analytics in wearable internet of things. arXiv preprint arXiv:1701.08680 (2017)
    A.V. Dastjerdi, H. Gupta, R.N. Calheiros, S.K. Ghosh, R. Buyya, Fog computing:
    Principles, architectures, and applications. arXiv preprint arXiv:1601.02752 (2016)
    S. Dey, A. Mukherjee, Robotic slam: a review from fog computing and mobile edge
    computing perspective. in Adjunct Proceedings of the 13th International Conference
    on Mobile and Ubiquitous Systems: Computing Networking and Services (ACM, 2016),
    p. 153–158 Google Scholar   H. Dubey, N. Constant, K. Mankodiya, RESPIRE: A spectral
    kurtosis-based method to extract respiration rate from wearable ppg signals. in
    2nd IEEE/ACM International Conference on Connected Health: Applications, Systems
    and Engineering Technologies (CHASE) (IEEE, Philadelphia, USA, 2017) Google Scholar   H.
    Dubey, N. Constant, A. Monteiro, M. Abtahi, D. Borthakur, L. Mahler, Y. Sun, Q.
    Yang, K. Mankodiya, Fog computing in medical internet-of-things: Architecture,
    implementation, and applications. in Handbook of Large-Scale Distributed Computing
    in Smart Healthcare (Springer International Publishing AG, 2017) Chapter   Google
    Scholar   H. Dubey, J.C. Goldberg, K. Mankodiya, L. Mahler, A multi-smartwatch
    system for assessing speech characteristics of people with dysarthria in group
    settings. in 2014 IEEE 16th International Conference on e-Health Networking, Applications
    and Services (Healthcom) (IEEE, 2015) Google Scholar   H. Dubey, R. Kumaresan,
    K. Mankodiya, Harmonic sum-based method for heart rate estimation using ppg signals
    affected with motion artifacts. J. Ambient Intell. Hum. Comput. (2016) Google
    Scholar   H. Dubey, M.R. Mehl, K. Mankodiya, BigEAR: Inferring the ambient and
    emotional correlates from smartphone-based acoustic big data. in IEEE International
    Workshop on Big Data Analytics for Smart and Connected Health (IEEE, Washington
    DC, USA, 2016) Google Scholar   H. Dubey, A. Monteiro, L. Mahler, U. Akbar, Y.
    Sun, Q. Yang, K. Mankodiya, FogCare: fog-assisted internet of things for smart
    telemedicine. Future Gener. Comput. Syst. (2016) Google Scholar   H. Dubey, J.
    Yang, N. Constant, A.M. Amiri, Q. Yang, K. Makodiya, Fog data: Enhancing telehealth
    big data through fog computing. in Proceedings of the ASE BigData and SocialInformatics
    2015 (ACM, 2015), p. 14 Google Scholar   K. Evangelidis, K. Ntouros, S. Makridis,
    C. Papatheodorou, Geospatial services in the cloud. Comput. Geosci. 63, 116–122
    (2014) Article   Google Scholar   S. Fang, Y. Zhu, L. Xu, J. Zhang, P. Zhou, K.
    Luo, J. Yang, An integrated system for land resources supervision based on the
    iot and cloud computing. Enterprise Inf. Syst. 11(1), 105–121 (2017) Article   Google
    Scholar   J. Georis-Creuseveau, C. Claramunt, F. Gourmelon, A modelling framework
    for the study of spatial data infrastructures applied to coastal management and
    planning. Int. J. Geogr. Inf. Sci. 31(1), 122–138 (2017) Article   Google Scholar   G.
    Giuliani, P. Lacroix, Y. Guigoz, R. Roncella, L. Bigagli, M. Santoro, P. Mazzetti,
    S. Nativi, N. Ray, A. Lehmann, Bringing GEOSS services into practice: A capacity
    building resource on spatial data infrastructures (SDI). Trans. GIS 21, 811–824
    (2016) Article   Google Scholar   C. Granell, O.B. Fernandez, L. Daz, Geospatial
    information infrastructures to address spatial needs in health: collaboration,
    challenges and opportunities. Future Gener. Comput. Syst. 31, 213–222 (2014) Article   Google
    Scholar   N. Gupta, R.K. Lenka, R.K. Barik, H. Dubey, Fair: A hadoop-based hybrid
    model for faculty information retrieval system. in 2017 International Conference
    on Intelligent Computing and Control (I2C217), IEEE, June 23–24, 2017 (IEEE, Coimbatore,
    India, 2017), p. 16 Google Scholar   G.P. Hancke, G.P. Hancke Jr. et al., The
    role of advanced sensing in smart cities. Sensors 13(1), 393–425 (2012) Article   Google
    Scholar   L. He, P. Yue, L. Di, M. Zhang, L. Hu, Adding geospatial data provenance
    into SDIa service-oriented approach. IEEE J. Sel. Top. Appl. Earth Obs. Remote
    Sens. 8(2), 926–936 (2015) Article   Google Scholar   T. Higashino, Edge computing
    for cooperative real-time controls using geospatial big data. in Smart Sensors
    and Systems (Springer, 2017), p. 441–466 Google Scholar   http://boundlessgeo.com/products/opengeo-suite/.
    Accessed 27th Jan 2017 http://qgiscloud.com/rabindrabarik2016/malaria?mobile=false.
    Accessed 27th Jan 2017 http://qgiscloud.com/rabindrabarik2016/malaria?mobile=true.
    Accessed 27th Jan 2017 https://www.isixsigma.com/dictionary/littles-law/. Accessed
    12th Jan 2017 A. Jain, N. Mahajan, Introduction to database as a service. in The
    Cloud DBA-Oracle (Springer, 2017), p. 11–22 Chapter   Google Scholar   H. Ji,
    Y. Wang, The research on the compression algorithms for vector data. in International
    Conference on Multimedia Technology (ICMT), 2010 (IEEE, 2010), p. 14 Google Scholar   B.
    Joshi, B. Joshi, K. Rani, Mitigating data segregation and privacy issues in cloud
    computing. in Proceedings of International Conference on Communication and Networks
    (Springer, 2017), p. 175–182 Google Scholar   H.A. Kadhim, L. Woo, S. Dlay, Novel
    algorithm for speech segregation by optimized kmeans of statistical properties
    of clustered features. in 2015 IEEE International Conference on Progress in Informatics
    and Computing (PIC) (IEEE, 2015), p. 286–291 Google Scholar   Z. Khan, D. Ludlow,
    R. McClatchey, A. Anjum, An architecture for integrated intelligence in urban
    management using cloud computing. J. Cloud Comput. Adv. Syst. Appl. 1(1), 1 (2012)
    Article   Google Scholar   S.H. Kim, S.Y. Jang, K.H. Yang, Analysis of the determinants
    of software-as-a-service adoption in small businesses: Risks, benefits, and organizational
    and environmental factors. J. Small Bus. Manag. (2016) Article   Google Scholar   J.G.
    Lee, M. Kang, Geospatial big data: challenges and opportunities. Big Data Res.
    2(2), 74–81 (2015) Article   MathSciNet   Google Scholar   C.H. Lee, H.J. Yoon,
    Medical big data: promise and challenges. Kidney Res. Clin. Pract. 36(1), 3 (2017)
    Article   Google Scholar   R.K. Lenka, R.K. Barik, N. Gupta, S.M. Ali, A. Rath,
    H. Dubey, Comparative analysis of spatialhadoop and geospark for geospatial big
    data analytics. in 2nd International Conference on Contemporary Computing and
    Informatics (IC3I 2016) (IEEE, 2016) Google Scholar   Y. Ma, H. Wu, L. Wang, B.
    Huang, R. Ranjan, A. Zomaya, W. Jie, Remote sensing big data computing: challenges
    and opportunities. Future Gener. Comput. Syst. 51, 47–60 (2015) Article   Google
    Scholar   L. Mahler, H. Dubey, C. Goldberg, K. Mankodiya, Use of smartwatch technology
    for people with dysarthria. in In the Proceedings of the Motor Speech Conference
    (Madonna Rehabilitation Hospital, 2016) Google Scholar   R. Mahmud, R. Buyya,
    Fog computing: A taxonomy, survey and future directions. arXiv preprint http://arxiv.org/abs/1611.05539arXiv:1611.05539
    (2016) S. Majeed, H. Husain, S. Samad, A. Hussain, Hierarchical k-means algorithm
    applied on isolated malay digit speech recognition. Int. Proc. Comput. Sci. Inf.
    Technol. 34, 33–37 (2012) Google Scholar   A. Monteiro, H. Dubey, L. Mahler, Q.
    Yang, K. Mankodiya, Fit: A fog computing device for speech tele-treatments. in
    2nd IEEE International Conference on Smart Computing (SMARTCOMP 2016) (IEEE, At
    Missouri, USA, 2016) Google Scholar   A. Munir, P. Kansakar, S.U. Khan, Ifciot:
    integrated fog cloud iot architectural paradigm for future internet of things.
    arXiv preprint http://arxiv.org/abs/1701.08474arXiv:1701.08474 (2017) S. Nunna,
    K. Ganesan, Mobile edge computing. in Health 4.0: How Virtualization and Big Data
    are Revolutionizing Healthcare (Springer, 2017), p. 187–203 Chapter   Google Scholar   S.S.
    Patra, R. Barik, Dynamic dedicated server allocation for service oriented multi-agent
    data intensive architecture in biomedical and geospatial cloud. in Cloud Technology:
    Concepts, Methodologies, Tools, and Applications (IGI Global, 2015), p. 2262–2273
    Google Scholar   S. Sareen, S.K. Gupta, S.K. Sood, An intelligent and secure system
    for predicting and preventing zika virus outbreak using fog computing. Enterprise
    Inf. Syst. 121 (2017) Google Scholar   S. Sarkar, S. Chatterjee, S. Misra, Assessment
    of the suitability of fog computing in the context of internet of things. IEEE
    Trans. Cloud Comput. (2015) Google Scholar   B. Schaffer, B. Baranski, T. Foerster,
    Towards spatial data infrastructures in the clouds. in Geospatial Thinking (Springer,
    2010), p. 399–418 Google Scholar   W. Shi, J. Cao, Q. Zhang, Y. Li, L. Xu, Edge
    computing: vision and challenges. IEEE Internet Things J. 3(5), 637–646 (2016)
    Article   Google Scholar   J. Smith, W. Mackaness, A. Kealy, I. Williamson, Spatial
    data infrastructure requirements for mobile location based journey planning. Trans.
    GIS 8(1), 23–44 (2004) Article   Google Scholar   X. Sun, N. Ansari, EdgeIoT:
    mobile edge computing for the internet of things. IEEE Commun. Mag. 54(12), 22–29
    (2016) Article   Google Scholar   B. Vanmeulebrouk, U. Rivett, A. Ricketts, M.
    Loudon, Open source gis for hiv/aids management. Int. J. Health Geogr. 7(1), 53
    (2008) Article   Google Scholar   X. Wang, H. Zhang, J. Zhao, Q. Lin, Y. Zhou,
    J. Li, An interactive web-based analysis framework for remote sensing cloud computing.
    ISPRS Ann. Photogramm. Remote Sens. Spat. Inf. Sci. 4, W2 (2015) Google Scholar   B.
    Wu, X. Wu, J. Huang, Geospatial data services within cloud computing environment.
    in 2010 International Conference on Audio Language and Image Processing (ICALIP)
    (IEEE, 2010), p. 1577–1584 Google Scholar   C.P. Yang, Geospatial cloud computing
    and big data (2017). https://doi.org/10.1016/j.compenvurbsys.2016.05.001 Article   Google
    Scholar   C. Yang, R. Raskin, M. Goodchild, M. Gahegan, Geospatial cyberinfrastructure:
    past, present and future. Comput. Environ. Urban Syst. 34(4), 264–277 (2010) Article   Google
    Scholar   C. Yang, Q. Huang, Z. Li, K. Liu, F. Hu, Big data and cloud computing:
    innovation opportunities and challenges. Int. J. Digit. Earth 10(1), 13–53 (2017)
    Article   Google Scholar   S. Yi, C. Li, Q. Li, A survey of fog computing: concepts,
    applications and issues. in Proceedings of the 2015 Workshop on Mobile Big Data
    (ACM, 2015), p. 37–42 Google Scholar   J. Yu, J. Wu, M. Sarwat, Geospark: A cluster
    computing framework for processing largescale spatial data. in Proceedings of
    the 23rd SIGSPATIAL International Conference on Advances in Geographic Information
    Systems (ACM, 2015), p. 70 Google Scholar   H. Zhu, C.P. Yang, Data compression
    for network GIS. in Encyclopedia of GIS (Springer, 2008), p. 209–213 Chapter   Google
    Scholar   Download references Acknowledgements This material is based upon work
    supported by the National Science Foundation under Grant No. (#1652538). Any opinions,
    findings, and conclusions or recommendations expressed in this material are those
    of the author(s) and do not necessarily reflect the views of the National Science
    Foundation. Author information Authors and Affiliations KIIT University, Bhubaneswar,
    Odisha, India Rabindra K. Barik, Chinmaya Misra, Bhabani Shankar Prasad Mishra
    & Himansu Das Center for Robust Speech Systems, University of Texas at Dallas,
    Dallas, Texas, TX-75080, USA Harishchandra Dubey Wearable Biosensing Lab, University
    of Rhode Island, Kingston, Rhode Island, RI-02881, USA Debanjan Borthakur, Nicholas
    Constant & Kunal Mankodiya Savitribai Phule Pune University, Pune, India Sapana
    Ashok Sasane IIIT Bhubaneswar, Bhubaneswar, India Rakesh K. Lenka Corresponding
    author Correspondence to Rabindra K. Barik . Editor information Editors and Affiliations
    School of Computer Engineering, KIIT University, Bhubaneswar, Odisha, India Bhabani
    Shankar Prasad Mishra School of Computer Engineering, KIIT University, Bhubaneswar,
    Odisha, India Himansu Das Department of Information and Communication Technology
    , Fakir Mohan University, Balasore, Odisha, India Satchidananda Dehuri School
    of Computer Engineering, KIIT University, Bhubaneswar, Odisha, India Alok Kumar
    Jagadev Rights and permissions Reprints and permissions Copyright information
    © 2018 Springer International Publishing AG About this chapter Cite this chapter
    Barik, R.K. et al. (2018). Fog Assisted Cloud Computing in Era of Big Data and
    Internet-of-Things: Systems, Architectures, and Applications. In: Mishra, B.,
    Das, H., Dehuri, S., Jagadev, A. (eds) Cloud Computing for Optimization: Foundations,
    Applications, and Challenges. Studies in Big Data, vol 39. Springer, Cham. https://doi.org/10.1007/978-3-319-73676-1_14
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-319-73676-1_14
    Published 27 February 2018 Publisher Name Springer, Cham Print ISBN 978-3-319-73675-4
    Online ISBN 978-3-319-73676-1 eBook Packages Engineering Engineering (R0) Share
    this chapter Anyone you share the following link with will be able to read this
    content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Publish with us Policies and ethics Download book PDF Download book
    EPUB Sections Figures References Abstract Introduction Edge Assisted Cloud Computing
    Performance Criterion Case Study I: Malaria Disease Management Case Study II:
    Telemonitoring of Patients with Parkinson’s Disease Conclusions References Acknowledgements
    Author information Editor information Rights and permissions Copyright information
    About this chapter Publish with us Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Studies in Big Data
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Fog Assisted Cloud Computing in Era of Big Data and Internet-of-Things:
    Systems, Architectures, and Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
