- analysis: '>'
  authors:
  - Goyal P.
  - Sharda R.
  - Saini M.
  - Siag M.
  citation_count: '1'
  description: Neural computing methods pose an edge over conventional methods for
    drought stress identification because of their ease of implementation, accuracy,
    non-invasive approach, cost-effectiveness, and ability to predict in real time.
    To ensure proper irrigation scheduling and prevent major yield losses, the objective
    was to develop a deep learning (DL)-based custom convolutional neural network
    (CNN) framework for in situ identification and classification of drought stress
    in maize crops. An original image dataset was created by acquiring 2703 RGB images
    of maize crops under natural daylight conditions to incorporate noise and varied
    backgrounds. The dataset was augmented and divided in a ratio of 7:2:1 for the
    training, validation, and test sets. A custom-CNN model was built using feature
    blocks, fully connected layers, and dense layers, and compared with five state-of-the-art
    CNN architectures, i.e. InceptionV3, Xception, ResNet50, DenseNet121 and EfficientNetB1.
    The results revealed that the custom CNN model achieved accuracies of 98.71% and
    98.53% on the training and test sets, respectively. In comparison, the ResNet50
    and EfficientNetB1 transfer-learned CNN architectures achieved an equivalent accuracy
    of 99.26% each, followed by DenseNet121 with a 98.90% accuracy on the test set.
    The Xception model performed the worst, with the highest accuracy of 91.91% on
    the test set. The results demonstrate that the developed custom CNN model should
    be adopted for real-time implementation on resource-constrained edge devices because
    of the lower number of parameters (0.65 million parameters) compared to other
    state-of-the-art architectures.
  doi: 10.1007/s00521-023-09219-z
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Neural Computing and Applications
    Article A deep learning approach for early detection of drought stress in maize
    using proximal scale digital images Original Article Published: 17 November 2023
    Volume 36, pages 1899–1913, (2024) Cite this article Download PDF Access provided
    by University of Nebraska-Lincoln Neural Computing and Applications Aims and scope
    Submit manuscript Pooja Goyal, Rakesh Sharda , Mukesh Saini & Mukesh Siag  285
    Accesses Explore all metrics Abstract Neural computing methods pose an edge over
    conventional methods for drought stress identification because of their ease of
    implementation, accuracy, non-invasive approach, cost-effectiveness, and ability
    to predict in real time. To ensure proper irrigation scheduling and prevent major
    yield losses, the objective was to develop a deep learning (DL)-based custom convolutional
    neural network (CNN) framework for in situ identification and classification of
    drought stress in maize crops. An original image dataset was created by acquiring
    2703 RGB images of maize crops under natural daylight conditions to incorporate
    noise and varied backgrounds. The dataset was augmented and divided in a ratio
    of 7:2:1 for the training, validation, and test sets. A custom-CNN model was built
    using feature blocks, fully connected layers, and dense layers, and compared with
    five state-of-the-art CNN architectures, i.e. InceptionV3, Xception, ResNet50,
    DenseNet121 and EfficientNetB1. The results revealed that the custom CNN model
    achieved accuracies of 98.71% and 98.53% on the training and test sets, respectively.
    In comparison, the ResNet50 and EfficientNetB1 transfer-learned CNN architectures
    achieved an equivalent accuracy of 99.26% each, followed by DenseNet121 with a
    98.90% accuracy on the test set. The Xception model performed the worst, with
    the highest accuracy of 91.91% on the test set. The results demonstrate that the
    developed custom CNN model should be adopted for real-time implementation on resource-constrained
    edge devices because of the lower number of parameters (0.65 million parameters)
    compared to other state-of-the-art architectures. Similar content being viewed
    by others Machine learning for leaf disease classification: data, techniques and
    applications Article Open access 18 October 2023 Deep learning techniques to classify
    agricultural crops through UAV imagery: a review Article 05 March 2022 Automation
    in Agriculture by Machine and Deep Learning Techniques: A Review of Recent Developments
    Article 21 April 2021 1 Introduction Maize (Zea mays) or corn is the most widely
    cultivated and consumed crop throughout the world. The annual production of maize
    in the year 2021–22 reached 1.2 billion metric tons, with the USA being the largest
    producer [1]. It is the third most important cereal crop after wheat and rice,
    which contributes toward the global food security. However, maize crop is extremely
    sensitive to heat and drought stress [2] and its production will be significantly
    impacted by the climate change. Climate change will result in increased temperatures,
    change precipitation distribution patterns, and reduce the amount of rainfall
    received in a year, which will further accelerate the frequency of droughts worldwide
    [3]. Maize, an extremely heat- and drought-sensitive crop [2], is one of the most
    negatively impacted crops [4]. In general, plant stress disrupts plant metabolism
    in many ways [5], resulting in reduced growth and significant crop yield reductions
    [6,7,8,9]. Abiotic stress factors are also expected to become more frequent and
    intense as a result of climate change [10]. Among the various abiotic stresses,
    water/drought stress is the most prominent factor that severely impacts crop growth,
    physiology and ultimately affects crop yields. The physiological response of plants
    to an insufficient supply of water is referred to as drought stress. Drought was
    found to be responsible for an approximately 20–30% reduction in maize yield in
    China and India [11]. Another study reported a yield loss of 40% on a global scale
    [12]. Drought stress resulted in 45–92% yield reductions in different crops [13].
    The onset of drought varies with crop type, variety, and growth stage [14]. The
    identification of this stress is especially important for water-sensitive crops,
    such as maize [13]. Exposure of maize to drought conditions at the tasseling stage
    results in significant yield loss [15]. Maize crops may respond in either elastic
    (reversible) or plastic (irreversible) manner, depending on the degree of stress
    [10]. Therefore, it is pertinent to identify drought stress at a stage where the
    effects of stress can be reversed with timely irrigation to maximize the yield
    potential of the crop. However, identifying drought stress, particularly during
    the initial stages, is a challenging task. Traditionally, various direct and indirect
    methods have also been used for stress measurement. Lab-based methods that measure
    leaf water potential or leaf water content often involve destructive sampling.
    Other direct methods involve the installation of sophisticated intricate sensors
    in the field. These sensors are generally expensive and time-consuming, and the
    measurements are point-based and may not consider spatial variability in actual
    field conditions. The lack of continuous in situ monitoring has given way to indirect
    methods, such as remote or proximal sensing, which offer better alternatives for
    the precise and accurate identification of water stress. Imaging techniques offer
    a noninvasive and nondestructive method for plant stress detection. Depending
    on the range of the sensor, imaging can be either simple red-blue-green (RGB)
    imagery (acquired using digital cameras in the visible range of 400–700 nm) or
    thermal, multispectral, hyperspectral, or florescence imaging. Apart from visible-range
    imaging, other imaging options serve as expensive alternatives and are easily
    influenced by atmospheric variations. Digital RGB images captured on a proximal
    scale can be combined with advanced computer-vision methods to provide important
    insights into plant stress analyses. With recent advancements in the field of
    computer vision, artificial intelligence (AI)-based techniques such as machine
    learning (ML) and image processing techniques have been used widely for the detection
    and identification of different types of biotic and abiotic stresses using digital
    image-based datasets [16,17,18,19,20]. Zhuang et al. [19], used SVM and GBDT to
    detect water stress in maize crop by creating a dataset comprising of three categories
    of images, i.e., well-watered, reduced water and drought stressed. The developed
    model achieved an accuracy of 90.39% and gave comparable accuracy when tested
    on images from open-field conditions with variable illumination intensity. Although
    ML models have demonstrated great success in the recognition of plant stress,
    the process of manual feature extraction fails to generalize to a different task,
    causing a lack of automation. Therefore, the developed ML model is unsuitable
    for real-time field implementation. Deep learning (DL), which is essentially a
    subset of ML, simplifies the learning process by eliminating the need for manual
    feature extraction. Deep learning typically solves this problem by using various
    forms of neural networks. It performs hierarchical feature extraction using various
    convolution layers that automatically extract useful information from an image.
    Image classification saw a breakthrough through convolutional neural networks
    (CNN), a type of DL network, that has been used extensively for the identification
    and classification of different types of biotic and abiotic stresses using digital
    image datasets [21,22,23,24,25,26,27]. This network has alternate convolutional
    and pooling layers, followed by fully connected layers. This network extracts
    image features by dividing an image into small blocks and assigning individual
    weights. It has been documented that DL models generally provide higher accuracy
    than ML models. In a follow up study by [19], An et al., [25], used transfer learning
    approach with ResNet50 and ResNet152 models to improve drought stress detection
    accuracy with the same dataset. The results revealed that the models trained from
    scratch took longer and were less accurate than the transfer-learned models. The
    transfer-learned ResNet50 and ResNet152 models achieved accuracies of 96% and
    95.09%, respectively, and performed better than the SVM and GBDT. Azimi et al.,
    [28] created a dataset of chickpea crop under controlled conditions to detect
    water stress at 3 stages, i.e., control, young seedling and before flowering.
    They utilized a variant of CNN-Long short-term memory (CNN-LSTM), which achieved
    an accuracy of 98.52% and 97.78% on the JG-62 and Pusa-372 varieties, respectively.
    Earlier studies leveraged freely available datasets to develop classification
    models for drought stress detection in different crops. However, most studies
    employed datasets that were built under strict imaging protocols, where the lighting,
    background, illumination, and angles were predefined. There is no doubt that these
    imaging protocols help reduce background noise and aid in enhancing accuracy,
    resulting in good models. However, these models lack robustness and perform poorly
    under actual field conditions, which limits the deployment of the developed model
    in real-time scenarios. Very few studies have reported the use of in situ image
    datasets with varied backgrounds and lighting intensities for plant stress detection
    [21, 29, 30]. The objective of this study was to develop a robust image classification
    model built on a maize crop dataset acquired in real field experiments to replicate
    actual field conditions. A custom CNN pipeline that can be used in real time will
    be built from scratch to detect drought stress in maize crops. Along with the
    custom CNN model, various state-of-the-art CNN architectures such as InceptionV3,
    Xception, ResNet50, DenseNet121, and EfficientNetB1 were transfer-learned and
    compared with our custom-CNN architecture to arrive at the best performing model.
    2 Methodology 2.1 Experimental setup The maize crop was planted in an open field
    environment at the Research Farm of the Department of Soil and Water Engineering,
    Ludhiana, during the spring (2021) and Kharif (2021) seasons. Seeds were sown
    on February 12, 2021, and July 3, 2021, for the spring and kharif seasons, respectively.
    The experimental fields were divided into four plots. Each main plot was further
    divided into sub-plots such that three different types of maize varieties (i.e.,
    PMH-08, PMH-10 and DKC-9108 in spring season and PMH-1, PMH-11, PMH-13 during
    Kharif season) were grown under full irrigation (100% of the recommended dose
    of irrigation) and deficit irrigation (20% deficit of the recommended dose of
    irrigation) under mulched conditions. The main plots were replicated four times.
    Surface drip irrigation was used to irrigate the raised beds. The seeds were planted
    on raised beds in paired rows. Different varieties of maize were sown manually
    using the dibbling method. The field soil was first tested for the available nutrients
    in the soil, and fertigation was applied in accordance with the package of practices
    recommended by PAU, Ludhiana. Full irrigation was applied in the initial stages
    of crop growth in both treatments to ensure normal sprouting. 2.2 Image acquisition
    Digital images were captured manually at regular intervals using a Sony DSC-HX400V
    RGB camera to capture healthy and drought-stressed images of maize crops under
    varied background and lighting conditions. The other camera specifications include
    an ISO of 80, shutter speed of 1/60, and aperture of f/5. For image acquisition,
    the camera angle was maintained at approximately 45° from the vertical axis of
    the plant. Because the images were captured in natural daylight conditions, the
    image background varied considerably from soil, mulch, sky, building, human subjects
    such as hands, dirt, etc., including the illumination intensity throughout the
    day. The incorporation of such varied backgrounds, along with sunlight intensity,
    would enhance the robustness of the proposed model and incorporate it directly
    without significant alterations. Most of the images were captured throughout the
    day, starting from the high-knee stage of the maize crop until the start of the
    tasseling stage. The crop growth period was selected based on the sensitivity
    of the maize crop to water stress during this stage. 2.3 Dataset preparation A
    total of 2704 images, each with a size of 5184 × 3888, belonging to two classes,
    the first being the healthy class (1421 images) and the second being the drought-stressed
    class (1283 images), were captured and labeled to create the original dataset.
    An image dataset comprising 1000 images per class is considered satisfactory for
    classification tasks using CNNs, as the world’s largest collection of datasets,
    called ‘ImageNet’, also consists of an average of 1000 images per class [31].
    [32] also used an original dataset comprising 656 original images to train a CNN
    model. The collected images were resized to (224 × 224) and rescaled to 1/255
    pixels for the custom CNN model. The entire dataset was divided in a ratio of
    7:2:1 for the training, validation, and test sets. The batch size was maintained
    at 32. The training set provides the data for the learning process to fit the
    model parameters, the validation set aids in feature selection, and fine-tunes
    the hyperparameters associated with the model. The developed model was then tested
    on the test set to obtain an unbiased evaluation of the developed model. The images
    in the training and validation sets were subjected to preprocessing techniques,
    as shown in Fig. 1. Some image augmentation techniques included horizontal and
    vertical flipping, rotation between 0–10 degrees, image zoom to the range of 20%,
    and width and height shift range maintained at 0.2, which shears the images to
    20% width and height. Augmentation was applied batch-wise on the fly. This means
    that each image in a training batch is subjected to random transformations and
    returns newly transformed data on the go. Data augmentation was applied to the
    training and validation sets, while the test set was not augmented. This process
    of applying random transformations makes the model robust and allows for multiprocessing,
    parallelization of the loading process, and faster computation. All models were
    run for 50 epochs. Fig. 1 Different types of pre-processing applied to the training
    and validation dataset Full size image 2.4 Development of the custom CNN framework
    The custom and other CNN architectures were written and executed in Python 3.8.8,
    using TensorFlow (2.8). TensorFlow is an open-source machine-learning library
    used to perform image classification using Keras. The software was run on a Windows
    PC with an Intel Core i5-6200U CPU 2.30 GHz and 8 GB RAM. The custom CNN framework
    is a sequential pipeline containing a stack of convolutional layers, which form
    the major building block of the CNN. It has a group of filters, also called kernels,
    that extract features, such as color, edges, or textures, which are useful for
    image characterization and form a feature or activation map. Activation functions
    add a nonlinear component to the output of the previous layer for faster convergence
    and to prevent the problem of vanishing gradients. A Rectified Linear Unit (ReLU)
    was used as an activation function in the CNN layers. Two convolutional layers
    were followed by a max-pooling layer, which selects the maximum value from each
    patch of the feature map generated by the convolutional filter. The output of
    this operation is a feature map that contains the most prominent features of the
    previous layers. This is followed by a dropout layer, which intentionally drops
    random information from the neurons of the previous layers before heading to the
    next layer to improve processing, reduce computational time, and avoid model overfitting.
    The dropped neurons were not updated during the backward pass. Thus, the custom
    CNN model consisted of four feature blocks, followed by a flattened layer. The
    flatten layer serves as a connection between the convolutional layers and the
    fully connected layer, which converts the resultant 2D arrays from the pooled
    feature maps to a single long continuous linear vector. Finally, the fully connected
    layers, also called dense layers, contain several neurons that receive input from
    all the neurons of the previous layer. The last dense layer contains two neurons,
    and it applies another activation function called “softmax” to assign the outputs
    of the previous layers to their specified target class. The Adaptive Moment Estimation
    (Adam), an advanced form of the stochastic gradient descent method, was used as
    an optimizer to adjust the learning rate (initially kept at 0.001) of the weights
    of the neural network. The sparse categorical cross-entropy loss function was
    used to calculate the model loss. This tends to minimize the difference between
    the actual and predicted outputs. For all models, the model weights were saved
    at every epoch when the validation accuracy improved. Similar architectures have
    been used by other researchers to customize CNN model architecture [32]. The custom-CNN
    model architecture used in this study is illustrated in Fig. 2. Fig. 2 Frame work
    of the custom CNN Model Full size image 2.5 Transfer learning architectures employed
    The custom CNN model was compared with five state-of-the-art CNN architectures:
    InceptionV3, Xception, ResNet50, DenseNet121, and EfficientNetB1. The transfer
    learning approach was used to leverage the learnings of these architectures trained
    on a ‘ImageNet’ dataset to solve a similar but different problem. In this approach,
    these pre-trained models are used as a starting point to solve the current problem
    instead of training the model from scratch. This approach improves the existing
    models for a specific use case and significantly reduces storage and computational
    resources to a great extent. The initial architecture is generally frozen to avoid
    any loss of information that these models have learned from previous tasks. Additional
    trainable layers were added on top of the frozen layers to apply the old features
    to the predictions of a new dataset. In our case, a max-pooling, flatten, and
    dense layer was added to the stack of frozen layers, and the models were then
    trained for 50 epochs. These CNN architectures employed for transfer learning
    require image size in specific formats (as mentioned in Table 1) and specific
    input data preprocessing, which were adjusted for individual models. The architecture
    of these models is briefly explained in the following paragraphs. Table 1 Key
    specifications of the architectures employed (obtained from the official Keras
    documentation) Full size table InceptionV3 is a 48-layer deep CNN model first
    introduced by [33]. This is an advanced version of GoogLeNet [34], which belongs
    to the family of Inception networks. InceptionV3 uses multiple convolution filters
    of different sizes that run in parallel layers, allowing it to extract input features
    at multiple scales. The factorized 7 × 7 convolutions, along with auxiliary classifiers,
    allow the propagation of label information down the network. The auxiliary classifiers
    as regularizers deal with the problem of vanishing gradients. Thus, InceptionV3
    allows efficient utilization of computational resources with efficient dimensionality
    reduction without compromising accuracy. Xception, also known as the extreme version
    of the Inception model, was first introduced by [35]. Its architecture comprises
    a linear stack of depth-wise separable convolutions with residual/skip connections.
    It first uses pointwise convolution to map the cross-channel correlations and
    maps the spatial correlations of every output channel separately. The ability
    of the model to look at the channel and spatial correlations independently in
    successive steps allows it to maintain cross-channel features along with a reduced
    parameter count. ResNet50 is a 50-layer deep CNN that uses residual connections
    to perform identity mapping [36]. The layers learn the residual functions with
    reference to the input layer instead of learning the unreferenced functions. The
    stacked residual layers that learn the residual mapping are added element-wise
    to form the network. Here, the state is passed from one ResNet module to another;
    ResNets can achieve higher accuracy, even at considerably high depths. DenseNets
    contain a series of densely connected blocks connected by transition layers. Each
    layer obtains “collective knowledge” from all preceding layers and passes on its
    own feature maps to all subsequent layers [37]. The feature maps of the previous
    maps were concatenated and used as inputs. Transition layers apply batch normalization,
    a 1 × 1 convolution and 2 × 2 pooling layers to downsample the information from
    the previous dense block. All layers, i.e., those within the same dense block
    and transition layers, spread their weights over multiple inputs which allows
    deeper layers to use features extracted early on. DenseNet-121 has 120 convolutions
    and 4 average pooling layers. Because of their unique connections between layers,
    they alleviate the problem of vanishing gradients with reduced number of parameters.
    EfficientNets are the latest developments in state-of-the-art CNN architectures.
    Originally proposed by [38], it uses a unique compound coefficient approach to
    uniformly scale all three dimensions of depth, width, and resolution instead of
    using a fixed set of scaling coefficients for optimal performance improvement.
    This architecture adjusts the layers of the network using scaling coefficients
    that are determined using a grid search method. The resulting coefficients were
    used to scale the baseline network to the desired target model size. This novel
    scaling in a structured manner renders its accuracy superior to that of other
    CNN architectures. The base EfficientNetB0 network is based on the mobile inverted
    bottleneck convolutions (MBConv), similar to MobileNetV2. The network used in
    this study was EfficientNetB1, which was obtained by scaling the EfficientNetB0
    network. A flowchart of the methodology used in this study is shown in Fig. 3.
    Fig. 3 Flowchart of the steps taken for classification of the drought stress in
    maize Full size image 2.6 Model evaluation metrics The performance of the custom
    and other CNN architectures employed was evaluated on the basis of evaluation
    metrics such as accuracy, sensitivity, specificity, precision, and F1-score. All
    these parameters are calculated in terms of true positives (TP), true negatives
    (TN), false positives (FP) and false negatives (FN). Here, TP and TN represent
    the number of correct predictions of the water-stressed and healthy maize crop,
    respectively. FP, also known as type 1 error, predicts the healthy maize class
    as being water stressed. FN, also known as type 2 error, predicts water-stressed
    maize plants to be healthy. The classification accuracy represents the ratio of
    the correct predictions of both stressed and healthy maize images to the total
    number of images in the test set, as given by Eq. (1). $${\\text{Accuracy}} =
    \\frac{{\\text{TP + TN}}}{{\\text{TP + TN + FP + FN}}}$$ (1) $${\\text{Precision}}
    = \\frac{{{\\text{TP}}}}{{\\text{TP + FP}}}$$ (2) $${\\text{Sensitivity}} = {\\text{Recall}}
    = \\frac{{{\\text{TP}}}}{{\\text{TP + FN}}}$$ (3) $${\\text{Specificity}} = \\frac{{{\\text{TN}}}}{{\\text{TN
    + FP}}}$$ (4) $$F1_{{{\\text{SCORE}}}} = \\frac{{2*{\\text{Precision}}*{\\text{Recall}}}}{{{\\text{Precision}}
    + {\\text{Recall}}}}$$ (5) The confusion matrix extends beyond the simple accuracy.
    It is a tabular representation of the model predictions versus the ground-truth
    labels. Here, each row represents the instances in the actual class whereas the
    columns represent the instances of the predicted class. In the case of binary
    classification, there is a 2 × 2 matrix and diagonal elements if the matrix represents
    the correct predictions in each category. A representation of the different elements
    of the confusion matrix for our problem is shown in Fig. 4. Precision evaluates
    the model based on positive predictions. It is the ratio of the correctly predicted
    stressed crop from the overall predictions of stressed crop. Recall or sensitivity
    refers to the ratio of the correct predictions of the stressed crop to the actual
    number of stressed crop images. Thus, the model was evaluated based on its ability
    to predict the stressed class. Specificity focuses on healthy class predictions.
    It measures the proportion of the healthy class correctly predicted as healthy.
    Both sensitivity and specificity are similar; however, sensitivity calculates
    the true stress rate, whereas specificity calculates the false stress rate. The
    F1-score represents the weighted average of precision and recall. It is a more
    useful measure for evaluating the accuracy of binary classification models, especially
    in the case of an imbalanced data distribution in the dataset. The best value
    for the F1-score is 1, and the worst is 0. All metrics are defined in Eqs. (1–5).
    Fig. 4 Different elements of the confusion matrix as represented in the result
    section Full size image 3 Results The results of the different models during the
    training and validation phases during the first 10 epochs are presented in Fig.
    5. The graphs show that almost all models had a smooth transition from low training
    accuracy during the first epoch to fairly high accuracy in the 10th epoch. Comparing
    the different models, the Xception and custom-CNN models started with lowest training
    accuracy of 61.66% and 69.55%, respectively, while the other 4 models started
    with comparatively higher initial accuracies. The DenseNet121, EfficientNetB1,
    InceptionV3 and ResNet50 models started with an initial training accuracy of 85.53%,
    89.03%, 91.40% and 93.33%, respectively, moving gradually to 98.92%, 99.09%, 98.93%
    and 98.82%, respectively, at the end of 10th epoch. Similar to the training accuracy
    trend, the training loss also decreased gradually with an increase in the number
    of epochs. The initial cross-entropy training loss was highest for the Xception
    model at 0.89, closely followed by DenseNet121, custom-CNN, ResNet50, InceptionV3
    and EffcientNetB1 having training losses of 0.62, 0.58, 0.56, 0.50, and 0.40,
    respectively. At the end of 10th epoch, the training loss was highest for Xception
    model at 0.30, followed by ResNet50, custom-CNN, InceptionV3, DenseNet121 and
    EfficientNetB1 where the training loss reduced to 0.15, 0.14, 0.04, 0.04 and 0.03,
    respectively. Fig. 5 Comparative performance of various DL models in terms of
    accuracy and loss during the training and validation phase for the first 10 epochs
    Full size image Despite the smooth transitions of accuracy and cross-entropy loss
    in the training phase, the validation accuracy and loss graphs were characterized
    by a fair share of peaks and troughs during the initial training phase of 10 epochs.
    Validation accuracy and validation loss kept fluctuating for Xception and custom-CNN
    models, while the other four models, i.e., ResNet50, InceptionV3, DenseNet121
    and EfficientNetB1 were relatively stable. Toward the end of 10th epoch, the validation
    accuracy was the highest for DenseNet121 at 99.61%, closely followed by InceptionV3,
    EfficientNetB1, ResNet50 and custom-CNN having validation accuracy of 98.82%,
    98.44%, 98.05% and 97.66%, respectively. Xception model had the least validation
    accuracy of 88.48% at the end of 10th epoch. A similar trend was observed for
    validation loss curves, where the validation loss was highest for Xception model
    at 0.277, followed by ResNet50, IncpetionV3, custom-CNN and EfficientNetB1 having
    validation loss of 0.20, 0.16, 0.083, 0.081 and 0.065, respectively. DenseNet121
    showed the least validation loss of 0.0112 at the end of the 10th epoch. The learning
    curves of all investigated models for the entire training duration of 50 epochs
    are shown in Fig. 6. Model checkpoints were added after every epoch to monitor
    the validation accuracy, and model weights were saved at every instance of increase
    in the validation accuracy. The graphs clearly show that the training and validation
    accuracy curves of all the models follow a smooth trend and are on an increasing
    trend after the 10th epoch. The training and validation accuracy curves of the
    custom-CNN, Xception, DenseNet121 and EfficientNetB1 were comparatively smoother
    than those of the InceptionV3 and ResNet50 models, which still had minor troughs
    as the training continued. The custom-CNN model achieved a train accuracy of 96.07%
    at the 13th epoch, followed by DenseNet121 (96.34% at 2nd epoch), InceptionV3
    (96.45% at 2nd epoch), EfficientNetB1 (97.79% at 2nd epoch) and ResNet50 (98.60%
    at 3rd epoch). The Xception model could not surpass an accuracy of 96% even after
    50 epochs. Owing to the model checkpoints, the best model was saved at the last
    increase in validation accuracy. Therefore, the last model weights for the model
    custom-CNN, Xception, ResNet50, InceptionV3, DenseNet121 and EfficientNetB1 were
    saved at 48th, 30th, 42nd, 38th, 25th and 26th epoch, respectively. These epochs
    correspond to a train-validation accuracy of (98.44–99.02%), (92.25–94.53%), (99.52–100%),
    (99.24–99.80%), (98.92–100%), (99.03–98.24%) for the custom-CNN, Xception, ResNet50,
    InceptionV3, DenseNet121 and EfficientNetB1 models, respectively. Fig. 6 Percentage
    change in accuracy and loss during the training and validation phase when the
    models were trained for 50 epochs a Custom-CNN, b Xception, c InceptionV3 d ResNet50,
    e DenseNet121 f EfficientNetB1 Full size image Upon close inspection, the learning
    curves for training and validation loss for the different models vary significantly
    from each other. The training and validation losses for the custom-CNN and Xception
    models decreased gradually over time with no major differences between them. Although,
    the training and validation loss were higher for Xception model, i.e. 0.18 and
    0.18 compared to the custom-CNN, i.e., 0.05 and 0.03, respectively, toward the
    end of 50th epoch, the training and validation loss for the InceptionV3 and ResNet50
    model did not decrease gradually. The graphs for both these models were characterized
    by higher peaks for the validation loss compared to the training loss, indicating
    instances of overfitting. The ResNet50 model showed higher instances of overfitting
    because of large gap between the train and validation loss, both in between the
    epochs and also toward the end of 50th epoch, compared to the InceptionV3 model.
    The train and validation loss at the end of the 50th epoch for the ResNet50 model
    was 0.03 and 0.27, making a generalization gap of 0.24 between the two loss curves.
    On the other hand, the training and validation loss for InceptionV3 model was
    0.08 and 0.09, respectively, much lesser gap than the ResNet50 model. The DenseNet121
    and EfficientNetB1 models were comparatively more stable and performed relatively
    better than the rest of the four models in terms of training and validation loss
    curves. The train and validation loss at the end of 50th epoch for DenseNet121
    was only 0.02 and 0.01, and for EfficientNetB1, it was 0.02 and 0.09, respectively.
    Although EfficientNetB1 showed higher training accuracy in the initial phases,
    it showed slight instances of overfitting as the plot for validation loss decreased
    initially but started increasing toward the end of the 50th epoch. Since the model
    weights for EfficientNetB1 were saved at 26th epoch, it was able to achieve lower
    training and validation loss. The generalization gap for EfficientNetB1 was also
    higher at 6.75% compared to DenseNet121, i.e.1.44%. From an overall perspective
    of both training and validation accuracy and loss curves, the DenseNet121 model
    achieved better performance compared to other networks. The trained models were
    evaluated on the test set containing 10% (272 images) of the total image dataset,
    which was not used previously in the model training process. The confusion matrices
    generated by the different models are shown in Fig. 7. The elements of the confusion
    matrix were in accordance with the representation shown in Fig. 4. Continuing
    a similar trend as exhibited by the previous graphs, the Xception model performed
    the worst on the test dataset, as it had the lowest predictions of TNs and TPs.
    The type-1 error, i.e., FP was also highest for Xception, followed by custom-CNN
    and DenseNet121, and nil for InceptionV3, ResNet50 and EfficientNetB1. In terms
    of type-2 error, i.e., FNs, was also highest for Xception, followed by InceptionV3
    and custom-CNN and least for ResNet50, DenseNet121 and EfficientNetB1 models.
    Different evaluation metrics were calculated from the generated confusion matrix
    on the test set, the values for which are given in Table 2. The test accuracy
    and F1-score were the highest for the ResNet50 and EfficientNetB1 models, followed
    by DenseNet121, custom-CNN, InceptionV3 and Xception models. The test accuracy
    and F1-score were the highest for the ResNet50 and EfficientNetB1 models, followed
    by DenseNet121, custom-CNN and InceptionV3. Xception achieved the lowest test
    accuracy of 91.91%. In terms of precision and specificity, which represent stressed
    crop and healthy class predictions, respectively, ResNet50 and EfficientNetB1
    scored the maximum percentage, followed by custom-CNN and DenseNet121 models.
    Xception model resulted in the least precision (97.35%) and specificity (97.90%)
    values. Recall/sensitivity was the highest for InceptionV3 model (98.53%), followed
    by ResNet50, DenseNet121 and EfficientNetB1, where the recall values were 98.45%
    each. Xception had the least specificity (85.27%). Although DenseNet121 performed
    better than the ResNet50 and EfficientNetB1 models on the training and validation
    datasets, the higher accuracies of the ResNet50 and EfficientNetB1 models can
    be attributed to the fact that the best model weights were saved whenever there
    was an improvement in the validation accuracy despite the peaked values in their
    validation loss curves. Fig. 7 Results of the confusion matrix as applied on the
    10% test dataset containing 272 images of the model a Custom-CNN b Xception c
    InceptionV3 d ResNet50 e DenseNet121 f EfficientNetB Full size image Table 2 Evaluation
    metrics of the different models Full size table Some of the sample predictions
    for the test set given by the custom-CNN model are shown in Fig. 8. The results
    showed that the custom-CNN model built from starch fairs well among the other
    transfer-learned architectures. Similar custom CNN models, which involve much
    lesser number of layers and have lower computational complexity have been developed
    by other authors as well, which performed well for the respective datasets. Zhuang
    et al. [39], used a shallow CNN with 6 convolutional layers to classify 3 categories
    of water stress recognition in maize. Similarly, a lightweight 6 layered CNN network
    was used by [40] to classify sick and healthy grapevine plants. Azimi et al. [27],
    also reported similar performance of the custom-CNN architecture with the VGG16
    and InceptionV3 models when applied for water stress detection in chickpea plant
    shoot images. The comparative evaluation metrics of the different models showed
    that the state-of-the-art transfer-learned architectures performed slightly better
    than the custom-CNN model. The results revealed that ResNet50 and EfficientNetB1
    models achieved highest F1-score of > 99% on the test sets. Different forms of
    ResNet architectures have been applied successfully in different studies and have
    achieved acceptable accuracies. ResNet50 achieved the highest accuracy among the
    seven CNN architectures employed for the classification of sugarcane lodged images
    from unlodged ones [41]. Esgario et al., [42] compared AlexNet, GoogleNet, VGG16,
    ResNet50 and MobileNetV2 for biotic stress classification and severity estimation
    in coffee leaves, where the ResNet50 architecture obtained the highest accuracy
    of 95.24% and 86.51%, respectively, on both the tasks and outperformed the rest
    of the architectures. Sunil et al. [43], used ResNet50 and VGG16 architectures
    to classify weeds from the crop under different backgrounds in greenhouse conditions,
    where the ResNet50 achieved higher average F1-score of 99% compared to the 92%
    in case of the VGG16 model. Fig. 8 Sample predictions of the custom-CNN model
    on the test set along with the confidence percentage Full size image EfficientNets
    are the most recent developments in the transfer-learning domain and have not
    been used extensively. In our study, although the EfficientNetB1 network became
    unstable during the later stages of the training, however, since the best weights
    were saved during the initial epochs, the model performance was better when applied
    to the test set. Atila et al. [44], compared VGG16, ResNet50, Inception V3 and
    all variants of EfficientNet (B0-B7) to classify 39 classes of Plant Village dataset,
    where the B4 and B5 variants of EfficientNet model outperformed the rest of the
    models under original as well as augmented dataset conditions. Candido-Mireless
    et al. [45], achieved an average accuracy and precision of 97.2% and 95.8% when
    the used EfficientNetB3 architecture to classify stressed images from healthy
    grape vineyard images in natural illumination conditions, compared to the other
    3 transfer learned architectures, i.e., VGG16, ResNet50 and InceptionV3. In addition,
    similar to our observations, the ResNet50 model showed higher variability during
    experimentation compared to other architectures. In another study, a variant of
    EfficientNet, called EfficientNetB4 was applied to classify nutritional deficiencies
    using RGB imagery in sugar beet and orange trees, where it achieved Top-1 accuracy
    of 98.65% and 98.52%, respectively, on both datasets [46]. Jung et al. [47], compared
    five different transfer learned architectures for crop classification, disease
    detection and disease classification in three different crops, out of which the
    EfficientNet model gave the best results. Shahoveisi et al., [48] classified rust
    disease in 3 field crops using Xception, ResNet50, EfficientNetB4, and MobileNet
    architectures, where the best results were attained by the EfficientNetB4 model
    (accuracy = 94.29%) followed by the ResNet50 (93.52%) model. In terms of stability,
    DenseNet121 was found to be the most stable model among all transfer-learned models
    used in this study. The performance of DenseNet121 (F1-score- 98.83%) was comparable
    to the best models in our use case. In another study, the accuracy of DenseNet121
    was second best (92.41%) after the ResNet50 (92.61%) on the test set, which achieved
    the highest accuracy among the 5 transfer-learned architectures for classification
    of biotic stresses in paddy crop [49]. DenseNets have also been found to perform
    well for leaf disease classification [50]. The results obtained after training
    the custom-CNN as well as other transfer-learned architectures reveal that all
    the models achieved an acceptable accuracy and precision levels for drought/water
    stress identification for maize crop and can be successfully deployed in real-time
    actual field conditions to quantify the maize stress in the form of an application
    on the IoT embedded and other mobile devices. However, since the majority of the
    IoT devices are characterized by constrained resources in terms of memory and
    computational requirements, the model selection for the deployment on these devices
    should also consider the size of the model. Figure 9 shows the number of trainable,
    non-trainable, and total parameters for the different CNN architectures evaluated
    in this study. The inference time of a deep learning model is directly proportional
    to the number of trainable parameters. By examining the trainable parameters,
    InceptionV3 had the lowest trainable parameters at 16,386, closely followed by
    DenseNet121 at 18,434 and EfficientNetB1 at 23,042. Custom-CNN had the highest
    number of trainable parameters, at 653,266, which was also the total number of
    parameters in this model. However, another factor to note from the graph is that
    the custom-CNN model has a significantly lower number of total parameters than
    the other transfer-learned architectures employed. Therefore, it is expected that
    although the inference time of the custom-CNN model might be slightly higher,
    it will require less energy and disk storage space in contrast to the other models
    which have a much higher number of parameters. The performance of a 23-layered
    simple custom-CNN architecture was comparable to ResNet and NasNet models, which
    are much larger in size for classification of three levels of nitrogen stress
    in sorghum crop [51]. Razfar et al. [52], also showed that a 5-layered custom
    CNN architecture showed higher detection accuracy (97.7%) with lower latency and
    memory usage for weed detection in soybean crops and were therefore recommended
    for edge-based vision systems. If the initial frozen layers of the employed state-of-the-art
    architectures were also fine-tuned instead of transfer learning, the number of
    trainable parameters in these architectures would have been much higher than that
    in the custom-CNN model. Also, the test accuracy of the best models, i.e., ResNet50
    and EfficientNetB1 was only higher by 1.03% compared to the custom-CNN model.
    Therefore, the developed custom-CNN model is a perfect fit for deployment on resource-constrained
    devices because it is small in size without much compromise on the accuracy front.
    Fig. 9 Graph showing the number of trainable, non-trainable and total parameters
    of the different CNN architectures Full size image One of the highlights of this
    study is that the dataset was acquired in actual field conditions and that too
    manually with a handheld camera; therefore, most of the images in the dataset
    do not possess a specific background or image of a particular plant at a fixed
    angle during different time steps. Variability in illumination intensity, background,
    and other objects surrounding the plant makes it suitable for mobile applications.
    The custom-CNN model can potentially achieve a high degree of automation. This
    will prove beneficial to potential farmers and researchers for timely intervention
    and mitigation of problems by applying proper crop management strategies that
    can effectively boost crop yields. 4 Conclusions The present work discusses the
    successful implementation of a custom-built CNN model from scratch with fewer
    layers having much fewer parameters and compares it against well-established transfer-learned
    architectures such as InceptionV3, Xception, ResNet50, DenseNet121, and EfficientNetB1
    to classify drought stress during the initial stages in a maize-crop dataset acquired
    during actual field experimentation under open conditions. This comprehensive
    assessment of different architectures helps us understand the superior model among
    the rest. Considering all the evaluation metrics applied to the test set, the
    best results were achieved by the InceptionV3, ResNet50, and EfficientNetB1 models.
    However, on the combined front of accuracy and stability, DenseNet121 was found
    to be a better choice among the rest of the models. The performance of Xception
    model was found to be the worst. The results exhibit that the performance of the
    custom-CNN model was equivalent to the other deeper and much heavier transfer-learned
    models, without significantly compromising on the accuracy front. The proposed
    custom-CNN model can be further integrated with real-time mobile applications
    to provide timely information regarding the onset of water stress. This study
    will be especially useful for farmer communities and irrigation managers, who
    can leverage this technology for drought stress detection at the field level in
    real time. Data availability Not applicable. References Anonymous (2022) https://www.statista.com/statistics/1156213/global-corn-production/#:~:text=In%202021%2F22%20marketing%20year,followed%20by%20China%20and%20Brazil
    Zhao F, Zhang D, Zhao Y, Wang W, Yang H, Tai F, Hu X (2016) The difference of
    physiological and proteomic changes in maize leaves adaptation to drought, heat,
    and combined both stresses. Front Plant Sci 7:1471. https://doi.org/10.3389/fpls.2016.01471
    Article   Google Scholar   Mukherjee S, Mishra A, Trenberth KE (2018) Climate
    change and drought: a perspective on drought indices. Current Climate Change Reports
    4(2):145–163 Article   Google Scholar   Tebaldi C, Lobell DJ (2018) Differences,
    or lack thereof, in wheat and maize yields under three low-warming scenarios.
    Environ Res Lett 13:065001 Article   Google Scholar   Zhang H, Sonnewald U (2017)
    Differences and commonalities of plant responses to single and combined stresses.
    Plant J 90:839–855. https://doi.org/10.1111/tpj.13557 Article   Google Scholar   Rejeb
    IB, Pastor V, Mauch-Mani B (2014) Plant responses to simultaneous biotic and abiotic
    stress: molecular mechanisms. Plants 3:458–475. https://doi.org/10.3390/plants3040458
    Article   Google Scholar   Pandey P, Irulappan V, Bagavathiannan MV, Senthil-Kumar
    M (2017) Impact of combined abiotic and biotic stresses on plant growth and avenues
    for crop improvement by exploiting physio–morphological traits. Front Plant Sci
    8:537. https://doi.org/10.3389/fpls.2017.00537 Article   Google Scholar   Ahmad
    B, Raina A, Khan S (2019) Impact of biotic and abiotic stresses on plants, and
    their responses. In: Wani S (ed) Disease resistance in crop plants. Springer,
    Cham, pp 1–20 Google Scholar   Cohen I, Zandalinas SI, Huck C, Fritschi FB, Mittler
    R (2021) Metaanalysis of drought and heat stress combination impact on crop yield
    and yield components. Physiol Plant 171:66–76. https://doi.org/10.1111/ppl.13203
    Article   Google Scholar   Salika R, Riffat J (2021) Abiotic stress responses
    in maize: a review. Acta Physiol Plantarum 43(9):130 Article   Google Scholar   Zaidi
    P, Yadav M, Maniselvan P, Khan R, Shadakshari T, Singh R, Pal D (2010) Morpho-physiological
    traits associated with cold stress tolerance in tropical maize (Zea mays L.).
    Maydica 55:201–208 Google Scholar   Daryanto S, Wang L, Jacinthe PA (2016) Global
    synthesis of drought effects on maize and wheat production. PLoS ONE 11:e0156362.
    https://doi.org/10.1371/journal.pone.0156362 Article   Google Scholar   Fahad
    S, Bajwa AA, Nazir U, Anjum SA, Farooq A., Zohaib A, Sadia S, Nasim W, Adkins
    S, Saud S, Ihsan M Z (2017) Crop production under drought and heat stress: plant
    responses and management options. Front Plant Sci p.1147. Demirevska K, Zasheva
    D, Dimitrov R, Simova-Stoilova L, Stamenova M, Feller U (2009) Drought stress
    effects on Rubisco in wheat: changes in the Rubisco large subunit. Acta Physiol
    Plant 31:1129–1138. https://doi.org/10.1007/s11738-009-0331-2 Article   Google
    Scholar   Anjum SA, Wang LC, Farooq M, Hussain M, Xue LL, Zou CM (2011) Brassinolide
    application improves the drought tolerance in maizethrough modulation of enzymatic
    antioxidants and leaf gas exchange. J Agron Crop Sci 197:177–185. https://doi.org/10.1111/j.1439-037X.2010.00459
    Article   Google Scholar   Singh AK, Ganapathysubramanian B, Singh AK, Sarkar
    S (2016) Machine learning for high throughput stress phenotyping in plants. Trends
    Plant Sci 21(2):110–124 Article   Google Scholar   Naik HS, Zhang J, Lofquist
    A, Assefa T, Sarkar S, Ackerman D, Singh A, Singh AK, Ganapathysubramanian B (2017)
    A real-time phenotyping framework using machine learning for plant stress severity
    rating in soybean. Plant Methods 13(1):1–2 Article   Google Scholar   Pantazi
    XE, Moshou D, Oberti R, West J, Mouazen AM, Bochtis D (2017) Detection of biotic
    and abiotic stresses in crops by using hierarchical self-organizing classifiers.
    Precis Agric 18(3):383–393 Article   Google Scholar   Zhuang S, Wang P, Jiang
    B, Li M, Gong Z (2017) Early detection of water stress in maize based on digital
    images. Comp Elect Agri 140:461–468 Article   Google Scholar   Anami BS, Malvade
    NN, Palaiah S (2020) Classification of yield affecting biotic and abiotic paddy
    crop stresses using field images. Info Process Agri 7(2):272–285 Google Scholar   Mohanty
    SP, Hughes DP, Salathe M (2016) Using deep learning for image-based plant disease
    detection. Front Plant Sci 7:1419 Article   Google Scholar   DeChant C, Wiesner-Hanks
    T, Chen S, Stewart EL, Yosinski J, Gore MA, Lipson H (2017) Automated identification
    of northern leaf blight-infected maize plants from field imagery using deep learning.
    Phytopathol 107(11):1426–1432 Article   Google Scholar   Ghosal S, Blystone D,
    Singh AK, Ganapathysubramanian B, Singh A, Sarkar S (2018) An explainable deep
    machine vision framework for plant stress phenotyping. Proc Natl Acad Sci 115(18):4613–4618
    Article   Google Scholar   Too EC, Yujian L, Njuki S, Yingchun L (2019) A comparative
    study of fine-tuning deep learning models for plant disease identification. Comp
    Elect Agri 161:272–279 Article   Google Scholar   An JY, Li WY, Li MS, Cui SR,
    Yue HR (2019) Identification and classification of maize drought stress using
    deep convolutional neural network. Symmetry 11(2):256 Article   Google Scholar   Picon
    A, Seitz M, Alvarez-Gila A, Mohnke P, Ortiz-Barredo A, Echazarra J (2019) Crop
    conditional convolutional neural networks for massive multi-crop plant disease
    classification over cell phone acquired images taken on real field conditions.
    Comp Elect Agri 167:105093 Article   Google Scholar   Anami BS, Malvade NN, Palaiah
    S (2020) Deep learning approach for recognition and classification of yield affecting
    paddy crop stresses using field images. Artif Intl Agri 4:12–20 Google Scholar   Azimi
    S, Wadhawan R, Gandhi TK (2021) Intelligent monitoring of stress induced by water
    deficiency in plants using deep learning. IEEE Trans Instrum Meas 70:1–13 Article   Google
    Scholar   Zhang X, Yue Q, Fanfeng M, Chengguo F, Mingming Z (2018) Identification
    of maize leaf diseases using improved deep convolutional neural networks. IEEE
    Access 6:30370–30377 Article   Google Scholar   Chandel NS, Chakraborty SK, Rajwade
    YA, Dubey K, Tiwari MK, Jat D (2020) Identifying crop water stress using deep
    learning models. Neural Comput Appl 17:1–15 Google Scholar   Deng J, Dong W, Socher
    R, Li L J, Li K, Fei-Fei L (2009) ImageNet: A large-scale hierarchical image database.
    In: Proceedings of the IEEE conference on computer vision and pattern recognition.
    Miami, FL, USA, pp 248–255 Zhuang S, Wang P, Jiang B, Li M (2020) Learned features
    of leaf phenotype to monitor maize water status in the fields. Comp Elect Agri
    172:105347 Article   Google Scholar   Szegedy C, Vanhoucke V, Ioffe S, Shlens
    J, Wojna Z (2016) Rethinking the inception architecture for computer vision. In:
    Proceedings of the IEEE conference on computer vision and pattern recognition,
    pp 2818–2826 Szegedy C, Liu W, Jia Y, Sermanet P, Reed S, Anguelov D, Rabinovich
    A (2015) Going deeper with convolutions. In: Proceedings of the IEEE conference
    on computer vision and pattern recognition, pp 1–9 Chollet F (2017) Xception:
    deep learning with depthwise separable convolutions. In: Proceedings of the IEEE
    conference on computer vision and pattern recognition, 1251–1258 He K, Zhang X,
    Ren S, Sun J (2016) Deep residual learning for image recognition. In: Proceedings
    of the IEEE conference on computer vision and pattern recognition, pp 770–778
    Huang G, Liu Z, Van Der Maaten L, Weinberger K Q (2017) Densely connected convolutional
    networks. In: Proceedings of the IEEE conference on computer vision and pattern
    recognition, pp 4700–4708 Tan M, Le Q (2019) Efficientnet: rethinking model scaling
    for convolutional neural networks. In: International conference on machine learning,
    pp 6105–6114. PMLR Zhuang S, Ping W, Boran J, Maosong L (2020) Learned features
    of leaf phenotype to monitor maize water status in the fields. Comp Elect Agri
    172:105347 Article   Google Scholar   Nagi R, Tripathy SS (2022) Deep convolutional
    neural network based disease identification in grapevine leaf images. Multimed
    Tools Appls 81(18):24995–25006 Article   Google Scholar   Modi RU, Chandel AK,
    Chandel NS, Dubey K, Subeesh A, Singh AK, Kancheti M (2023) State-of-the-art computer
    vision techniques for automated sugarcane lodging classification. Field Crops
    Res 291:108797 Article   Google Scholar   Esgario JG, Krohling RA, Ventura JA
    (2020) Deep learning for classification and severity estimation of coffee leaf
    biotic stress. Comp Elect Agri 169:105162 Article   Google Scholar   Sunil GC,
    Koparan C, Ahmed MR, Zhang Y, Howatt K, Sun X (2022) A study on deep learning
    algorithm performance on weed and crop species identification under different
    image background. Artif Intell Agri 6:242–256 Google Scholar   Atila U, Ucar M,
    Akyol K, Ucar E (2021) Plant leaf disease classification using EfficientNet deep
    learning model. Ecol Inform 61:101182. https://doi.org/10.1016/j.ecoinf.2020.101182
    Article   Google Scholar   Candido-Mireles M, Hernandez-Gama R, Salas J (2023)
    Detecting vineyard plants stress in situ using deep learning. Comp Elect Agri
    210:107837 Article   Google Scholar   Espejo-Garcia B, Malounas I, Mylonas N,
    Kasimati A, Fountas S (2022) Using EfficientNet and transfer learning for image-based
    diagnosis of nutrient deficiencies. Comp Elect Agri 196:106868 Article   Google
    Scholar   Jung M, Song JS, Shin AY, Choi B, Go S, Kwon SY, Park J, Park SG, Kim
    YM (2023) Construction of deep learning-based disease detection model in plants.
    Sci Rep 13(1):7331 Article   Google Scholar   Shahoveisi F, Taheri Gorji H, Shahabi
    S, Hosseinirad S, Markell S, Vasefi F (2023) Application of image processing and
    transfer learning for the detection of rust disease. Sci Rep 13(1):5133 Article   Google
    Scholar   Malvade NN, Yakkundimath R, Saunshi G, Elemmi MC, Baraki P (2022) A
    comparative analysis of paddy crop biotic stress classification using pre-trained
    deep neural networks. Artif Intell Agri 6:167–175 Google Scholar   Sai Reddy B,
    Neeraja S (2022) Plant leaf disease classification and damage detection system
    using deep learning models. Multimed Tools Appl 81(17):24021–24040 Article   Google
    Scholar   Azimi S, Kaur T, Gandhi TK (2021) A deep learning approach to measure
    stress level in plants due to Nitrogen deficiency. Measurement 173:108650 Article   Google
    Scholar   Razfar N, True J, Bassiouny R, Venkatesh V, Kashef R (2022) Weed detection
    in soybean crops using custom lightweight deep learning models. J Agri Food Res
    8:100308 Google Scholar   Download references Acknowledgements This research was
    supported by IIT Ropar Technology and Innovation Foundation (iHub – AWaDH) for
    Agriculture and Water Technology Development Hub, established by the Department
    of Science & Technology (DST), Government of India, at the Indian Institute of
    Technology, Ropar in the framework of National Mission on Interdisciplinary Cyber
    Physical Systems (NM – ICPS). Author information Authors and Affiliations Department
    of Soil and Water Engineering, Punjab Agricultural University (PAU), Ludhiana,
    India Pooja Goyal, Rakesh Sharda & Mukesh Siag Department of Computer Science
    and Engineering, IIT Ropar, Rupnagar, India Mukesh Saini Corresponding author
    Correspondence to Rakesh Sharda. Ethics declarations Conflict of interest The
    authors declare that they have no known competing financial interests or personal
    relationships that could influence the work reported in this study. Additional
    information Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Springer Nature or its licensor (e.g. a society or other partner) holds exclusive
    rights to this article under a publishing agreement with the author(s) or other
    rightsholder(s); author self-archiving of the accepted manuscript version of this
    article is solely governed by the terms of such publishing agreement and applicable
    law. Reprints and permissions About this article Cite this article Goyal, P.,
    Sharda, R., Saini, M. et al. A deep learning approach for early detection of drought
    stress in maize using proximal scale digital images. Neural Comput & Applic 36,
    1899–1913 (2024). https://doi.org/10.1007/s00521-023-09219-z Download citation
    Received 30 May 2023 Accepted 21 October 2023 Published 17 November 2023 Issue
    Date February 2024 DOI https://doi.org/10.1007/s00521-023-09219-z Share this article
    Anyone you share the following link with will be able to read this content: Get
    shareable link Provided by the Springer Nature SharedIt content-sharing initiative
    Keywords CNN Transfer learning Abiotic stress Computer vision Image classification
    Use our pre-submission checklist Avoid common mistakes on your manuscript. Sections
    Figures References Abstract Introduction Methodology Results Conclusions Data
    availability References Acknowledgements Author information Ethics declarations
    Additional information Rights and permissions About this article Advertisement
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Neural Computing and Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A deep learning approach for early detection of drought stress in maize using
    proximal scale digital images
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Morchid A.
  - Muhammad Alblushi I.G.
  - Khalid H.M.
  - El Alami R.
  - Sitaramanan S.R.
  - Muyeen S.M.
  citation_count: '0'
  description: 'Context: Food security is highly reliant on agricultural activity
    to drive the world economy. However, this activity is in great danger due to climatic
    changes and improper use of irrigation techniques. Consequently, the lives of
    numerous individuals worldwide are in jeopardy. In light, this paper investigates
    the promise of smart irrigation systems based on new technology. Objective: To
    meet the growing demand for water in agriculture, this study presents an intelligent
    irrigation system that uses cutting-edge technologies of (1) cloud computing,
    (2) embedded systems, and (3) Internet-of-Things (IoT). The main objective is
    to demonstrate how this innovative strategy can effectively manage water resources,
    supporting food security through cutting-edge agricultural technology. Methods:
    This paper proposes a smart irrigation system based on cutting-edge technologies
    like the embedded system, Internet of Things (IoT), and cloud computing as a groundbreaking
    strategy to improve food security through the implementation of advanced agricultural
    technology. This system supervises real-time monitoring of crucial environmental
    factors such as (1) moisture, (2) humidity, (3) temperature, and (4) water levels,
    in smart agriculture practices. In addition, this system employs the latest sensors,
    including the module (DHT22), water level sensor, and moisture sensors, which
    are connected to the widely used embedded system (ESP32). The system uses the
    ThingSpeak cloud and ThingView app to enable wireless communication between the
    device and the farm owner, enhancing their interaction. The automated control
    of the two water pumps is based on the readings of various environmental factors.
    Moreover, this will also present a mathematical-driven function known as linear
    interpolation to calibrate the water level sensor in percentage. This system was
    created using the V-model software development approach. Results and conclusion:
    Farmers can access comprehensive farm data from anywhere in the world as the sensor
    data is transmitted in real-time to both the ThingSpeak cloud and the ThingView.
    This capability allows for more precise crop irrigation and increased production.
    The study''s findings demonstrate a striking 70% reduction in water consumption
    for soil irrigation when utilizing the proposed smart irrigation system. This
    paper underscores the significant promise of smart irrigation systems, driven
    by IoT, embedded systems, and cloud computing, to conserve water resources and
    advance food security. Significance: This article proposes an innovative solution
    that reduces soil irrigation water consumption by 70% compared to traditional
    methods. It explores how smart irrigation can improve the sustainability of agriculture
    and positively influence food security.'
  doi: 10.1016/j.jssas.2024.02.001
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Outline Highlights
    Abstract Keywords Nomenclature 1. Introduction 2. Architecture of the proposed
    scheme 3. Algorithm and V-model of the proposed scheme 4. Results and discussion
    5. Conclusion and future work Declaration of competing interest References Show
    full outline Figures (16) Show 10 more figures Tables (5) Table 1 Table 2 Table
    3 Table 4 Table 5 Journal of the Saudi Society of Agricultural Sciences Available
    online 22 February 2024 In Press, Corrected ProofWhat’s this? High-technology
    agriculture system to enhance food security: A concept of smart irrigation system
    using Internet of Things and cloud computing Author links open overlay panel Abdennabi
    Morchid a, Ishaq G. Muhammad Alblushi b, Haris M. Khalid c d, Rachid El Alami
    a, Surendar Rama Sitaramanan e, S.M. Muyeen f Show more Share Cite https://doi.org/10.1016/j.jssas.2024.02.001
    Get rights and content Under a Creative Commons license open access Highlights
    • Food security and its dependance on agricultural activity. • A hi-tech smart
    irrigation system. • IoT and cloud computing interface. • Mathematical function
    to calibrate water level. • V model design for food security. Abstract Context
    Food security is highly reliant on agricultural activity to drive the world economy.
    However, this activity is in great danger due to climatic changes and improper
    use of irrigation techniques. Consequently, the lives of numerous individuals
    worldwide are in jeopardy. In light, this paper investigates the promise of smart
    irrigation systems based on new technology. Objective To meet the growing demand
    for water in agriculture, this study presents an intelligent irrigation system
    that uses cutting-edge technologies of (1) cloud computing, (2) embedded systems,
    and (3) Internet-of-Things (IoT). The main objective is to demonstrate how this
    innovative strategy can effectively manage water resources, supporting food security
    through cutting-edge agricultural technology. Methods This paper proposes a smart
    irrigation system based on cutting-edge technologies like the embedded system,
    Internet of Things (IoT), and cloud computing as a groundbreaking strategy to
    improve food security through the implementation of advanced agricultural technology.
    This system supervises real-time monitoring of crucial environmental factors such
    as (1) moisture, (2) humidity, (3) temperature, and (4) water levels, in smart
    agriculture practices. In addition, this system employs the latest sensors, including
    the module (DHT22), water level sensor, and moisture sensors, which are connected
    to the widely used embedded system (ESP32). The system uses the ThingSpeak cloud
    and ThingView app to enable wireless communication between the device and the
    farm owner, enhancing their interaction. The automated control of the two water
    pumps is based on the readings of various environmental factors. Moreover, this
    will also present a mathematical-driven function known as linear interpolation
    to calibrate the water level sensor in percentage. This system was created using
    the V-model software development approach. Results and conclusion Farmers can
    access comprehensive farm data from anywhere in the world as the sensor data is
    transmitted in real-time to both the ThingSpeak cloud and the ThingView. This
    capability allows for more precise crop irrigation and increased production. The
    study''s findings demonstrate a striking 70% reduction in water consumption for
    soil irrigation when utilizing the proposed smart irrigation system. This paper
    underscores the significant promise of smart irrigation systems, driven by IoT,
    embedded systems, and cloud computing, to conserve water resources and advance
    food security. Significance This article proposes an innovative solution that
    reduces soil irrigation water consumption by 70% compared to traditional methods.
    It explores how smart irrigation can improve the sustainability of agriculture
    and positively influence food security. Keywords Cloud computingEmbedded systemFood
    securityInternet-of-things (IoT)Intelligent sensorsIrrigation systemSmart agricultureThingSpeak
    platformV model Nomenclature Acronyms AI Artificial Intelligence CPU Central Processing
    Unit DHT22 Digital Humidity & Temperature GDP Gross Domestic Product Hs Humidity
    Sensor ID Identity I2C Inter Integrated Circuit IoT Internet of Things LED Light
    Emitting Diode LCD Liquid Crystal Display MCU Marvel Cinematic Universe MQTT Message
    Queuing Telemetry Transport Ms Moisture Sensor PC Personal Computer s Seconds
    SDIO Secure Digital Input Output SPI Serial Peripheral Interface T-Pump Tank Pump
    Ts Temperature Sensor ToffTP Turning Off Tank Pump ToddWP Turning Off Watering
    Pump TonTP Turning On Tank Pump TonWP Turning On Watering Pump HC-SR04 Ultrasonic
    Distance Sensor UART Universal Asynchronous Receiver/Transmitter Ws Water Level
    Sensor W-Pump Watering Pump Wi-Fi Wireless Fidelity WSN Wireless Sensor Network
    1. Introduction 1.1. Agriculture – food security, gross domestic product, world
    population, and climate change Agriculture plays a crucial role in ensuring food
    security and has a significant impact Gross Domestic Product (GDP) of the country.
    With the projected increase the global population, there will be a greater need
    for agricultural production (FAO et al., 2022). The need for food will in-fact
    rise significantly as the world''s population continues to grow. Also, it is expected
    that the world population will surpass 10 billion by 2050. To fulfil the increased
    demand caused by population growth, food production must increase by almost 70
    % (Giller et al., 2021). For agriculture to satisfy this need, it must adapt and
    expand. However, due to additional difficulties brought about by climate change
    and water constraints, existing agricultural methods are no longer enough to supply
    this expanding need (Elijah et al., 2018). 1.2. Smart agriculture – sustainability,
    production, and resources Smart agriculture is rapidly implementing contemporary
    technology to address these issues and boost production and sustainability (Ahmed
    et al., 2018, Lindgren et al., 2018). For instance, a recent scientific field
    called “smart irrigation” employs data-intensive techniques to maximize water
    consumption and boost agricultural production. Farmers may gain useful information
    from sensors and data analytics in agriculture to better understand how their
    actions affect the soil. Farmers may use data gleaned from environmental parameter
    monitoring and analysis to improve practices, make well-informed decisions about
    resource use, and identify crop problems early on. This improves sustainability
    and creates a deeper comprehension of the link between farming and land (Idoje
    et al., 2021, Ojha et al., 2015). Technology in agriculture is essential for resource
    conservation, reducing the environmental effect of farming operations, and feeding
    the world''s population. With the advent of the digital age, sophisticated technologies
    are replacing old farming techniques. These systems provide enormous quantities
    of data that may be used to optimize resources used and boost agricultural output.
    Hence, the use of technology and data-driven decision-making in agriculture will
    boost productivity, decrease waste, and protect the planet''s natural resources
    (Weersink et al., 2018, Khan et al., 2021). Agriculture, not only plays a crucial
    part in providing food security and sustainability, but it also significantly
    contributes to a nation''s economic development (Beckman and Countryman, 2021).
    As was already established, agriculture has a big influence on a country''s GDP.
    1.3. Agriculture, economic, innovative technology, scope, and possible potential
    of the paper In reality, throughout history, agriculture has been a key factor
    in the economic success of numerous nations. In rural regions, especially agriculture,
    not only produces food but also, opens doors to employment. For farmers and those
    who work in the agricultural value chain, such as processors, marketers, and exporters,
    it is a significant source of revenue. As a result, agriculture has the ability
    to promote economic expansion, reduce poverty, and improve living conditions.
    Investments in innovative agriculture technology have the potential to accelerate
    economic growth. Farmers can boost their earnings, produce more food with fewer
    resources, and open new markets for their goods with the aid of modern agricultural
    systems and smart technology (Bathaei and Štreimikienė, 2023, Blakeney, 2022).
    In light of the economic considerations and the imperative to optimize the use
    of this vital resource, the implementation of computerized smart systems in North
    Africa and worldwide has become crucial (Assouli et al., 2018). The proposed paper
    presents an advanced smart irrigation system that aims to revolutionize agricultural
    efficiency and increase yields. With a broad scope that includes innovative irrigation
    technologies and cutting-edge technological applications such as the Internet
    of Things, cloud computing, and embedded system, the paper focuses on improving
    food security. Through potential stability and the promotion of sustainable agricultural
    practices, the study also envisages a future in agriculture contributing to the
    promotion of global food stability. 1.4. Intelligent irrigation – internet, deep
    Learning, Machine Learning, and motivation of this work The intelligent irrigation,
    utilizing state-of-the-art technology like Internet-integrated systems, plays
    a pivotal role in collecting precise data (such as temperature, humidity, and
    soil moisture), this helps in demonstrating its effectiveness in practical applications,
    and facilitating remote control (Rahman et al., 2020, Pramanik et al., 2022, Abba
    et al., 2019, Munir et al., 2021). Consequently, the utilization of the Internet
    in recent years reflects significant advancements in integrated systems, particularly
    in developed nations, leading to remarkable improvements in water conservation
    and production efficiency (Abi Saab et al., 2019, Pasika and Gandla, 2020). Additionally,
    the emergence of cutting-edge technologies such as deep learning, machine learning,
    and artificial intelligence in agriculture contributes further to the maintenance
    and boost of the outcome (Talaviya et al., 2020, Saleem et al., 2021, Subeesh
    and Mehta, 2021). Motivated by global food security concerns, this research focuses
    on irrigation. Meeting the food needs of a growing population while preserving
    water resources is of paramount importance. Current traditional irrigation practices
    affect yields and food security. The study proposes an intelligent irrigation
    system that integrates IoT and cloud technologies. This innovation makes it possible
    to conserve water efficiently, increase yields, and feed crops well. With broad
    global application, this approach advances smart farming, helping to improve food
    security and sustainability. 1.5. Smart irrigation, Internet of Things, ThingSpeak,
    and focus of this work Numerous cutting-edge technologies, including the IoT,
    have broad applications. It is hard for farmers to personally visit and monitor
    every part of the farms they oversee, which might result in inconsistent watering.
    Losses in money and poor crop quality are consequently a result of this. In order
    to solve this problem and streamline the agricultural process, the research papers
    (Ayaz et al., 2019, Habib et al., 2023), suggest an intelligent irrigation system
    that makes use of cutting-edge IoT technology. These studies (Kamienski et al.,
    2019, García et al., 2020), also introduce the concept of “smart agriculture,”
    which makes use of data technology to increase agricultural output and raise the
    overall quality. Furthermore, the mentioned works (Pathak et al., 2019, Ndunagu
    et al., 2022), make use of the ThingSpeak platform, which provides a complete
    solution for gathering and storing data acquired from agricultural sensors and
    controllers, to meet the needs of farm operators. This portal is a useful resource
    for collecting and preserving important agricultural data. Wireless sensor networks
    are utilized by these papers while creating autonomous plants. By using a smart
    irrigation system, irrigation settings may be managed automatically (Tiglao et
    al., 2020, Lloret et al., 2021, Zervopoulos et al., 2020, Morchid et al., 2022,
    Morchid et al., 2021). In these studies (Olisa et al., 2021, Hussen Hajjaj et
    al., 2020, Hanan et al., 2019, Tham et al., 2022), a water level sensor was utilized.
    Specifically, The HC-SR04 device of the real-time water level monitoring system
    is used to accurately measure the water level as a key component. Further, this
    study presented a review of applications of IoT and sensor technology to increase
    food security and agricultural sustainability (Morchid et al., 2024). The focus
    of this study is to provide a smart irrigation system that that would use cloud
    computing and embedded IoT technologies to optimize water utilization and make
    sure plants get the right quantity of water. The research shows how this method
    might increase agricultural yields, decrease water waste, and assist offset the
    problem of food security. The system''s feasibility for application in many places
    around the world is also emphasized in this paper, supporting the progress of
    smart agriculture. 1.6. Main contribution of this work The main contribution of
    this paper is expressed as follows. Fig. 1 also shows the graphical abstract of
    the proposed scheme based on these contributions. • A smart irrigation system
    is proposed using new technologies like the IoT, embedded systems, and cloud computing
    as a groundbreaking strategy to improve food security through the implementation
    of advanced agricultural technology. • The proposed system supervises real-time
    monitoring of crucial environmental factors such as moisture, temperature, humidity,
    and water levels in smart agriculture practices. • The proposed system also employs
    state-of-the-art sensors which includes the (1) humidity and temperature sensor
    module (DHT22), (2) water level sensor, and (3) moisture sensors. All these sensors
    are connected to the widely-used embedded system (ESP32). The system uses the
    ThingSpeak cloud to enable wireless communication between the device and the farm
    owner, enhancing their interaction. • Farmers can access comprehensive farm data
    from anywhere in the world as the sensor data is transmitted in real-time to both
    the ThingSpeak cloud and the ThingView application. This capability allows for
    more precise crop irrigation and increased production. • The proposed scheme also
    presents a mathematical-driven function known as linear interpolation to calibrate
    the water level sensor in percentage. This smart irrigation system was created
    using the V model software development approach. • The suggested solution in this
    paper uses 70 % less water for soil irrigation compared to traditional techniques.
    It is more efficient and environmentally friendly since it prevents drowning crops
    and draining water beds. • The proposed article also examines the effects of smart
    irrigation on agricultural sustainability and its impact on food security. Download
    : Download high-res image (522KB) Download : Download full-size image Fig. 1.
    Graphical abstract of the proposed paper. 1.7. Formation of the remaining paper
    The formation of the remaining paper is structured as follows: The architecture
    of the proposed scheme is described in Section 2. Section 3 discusses the algorithm
    of the proposed system. Section 4 discusses the results and discussion of the
    proposed system. Finally, the conclusions and future work are presented in the
    last Section 5. The framework of the paper can also be seen in Fig. 2. Download
    : Download high-res image (270KB) Download : Download full-size image Fig. 2.
    Paper framework of the paper. 2. Architecture of the proposed scheme Smart irrigation
    systems gather information on soil moisture and other parameters using several
    IoT devices and sensors. These sensors can detect the moisture content of the
    soil, temperature, humidity, and even water level. They can also capture images
    of the crops to track their development and general health. Remote control of
    an irrigation system using data obtained from sensors and wireless communication
    with a cloud-based platform for analysis. The data is processed and analyzed on
    a cloud-based platform which makes use of models and algorithms to find the best
    watering plan depending on the information gathered. The irrigation system is
    connected to a small computer called an embedded board which can regulate the
    irrigation system''s water flow depending on instructions. Through a mobile application,
    farmers can access and monitor the system, which gives them real-time information
    on the soil moisture, weather, and irrigation schedule. Through the app, they
    may manually operate the irrigation system or modify the watering schedule. Farmers
    can increase agricultural yields and optimize irrigation thanks to this. As it
    only supplies the crops with the water they require, this technology also conserves
    water resources and lowers expenses. Furthermore, crop planning and research may
    be done using the data gathered by the smart irrigation system. Farmers, for instance,
    might spot trends in crop growth and pinpoint the perfect circumstances for a
    certain crop by examining data collected over time. Future agricultural yield
    optimization and crop planting schedule decisions may both be made using this
    knowledge. In the context of smart irrigation, wireless sensor networks (WSNs)
    enable autonomous plant management through functions such as environmental monitoring,
    nutrient management, disease detection, automated irrigation, and communications.
    Wireless sensor networks provide real-time data on factors such as temperature,
    humidity, soil moisture, water level, and nutrient levels. They support adaptive
    control systems, use low-power nodes for greater energy efficiency, and enable
    remote monitoring and control through cloud integration. Overall, WSNs contribute
    to the creation of autonomous plants by facilitating data-driven decision-making
    and optimizing plant conditions to improve crop productivity and sustainability.
    On the other hand, the integration of various sensors into WSNs is essential for
    plant autonomy. The most common sensors are those measuring temperature, humidity,
    soil moisture, light, nutrients, pests, water levels, and wind. Collectively,
    these sensors help improve plant-related processes. The integration of various
    sensors improves the accuracy and efficiency of autonomous plant management systems,
    enabling informed decisions to be made to improve crop productivity and sustainability.
    2.1. The architecture of the system This section describes the structure of the
    smart irrigation system shown in Fig. 3. The system is made up of three essential
    parts: IoT devices, cloud computing, and application interface. Internet connectivity
    enables consumers from all around the world to view and track their farm data.
    Download : Download high-res image (337KB) Download : Download full-size image
    Fig. 3. The smart irrigation system''s IoT architecture. The irrigation system
    is an automated electronic system that is intended to efficiently manage irrigation
    scheduling. Its primary goal is to accommodate the changing needs of plants as
    they develop. Through the analysis of soil moisture content, the system determines
    the precise percentage of water necessary for irrigation, ensuring accurate scheduling
    for various agricultural seasons and crop varieties. The key aims of smart irrigation
    encompass optimizing water consumption to reduce costs, enhancing agricultural
    productivity, benefiting farms, fostering energy efficiency, and ensuring food
    security through utilizing new technologies like the IoT, cloud computing, embedded
    systems, and sensors. The IoT architecture of the proposed system, shown in Fig.
    3, comprises three fundamental components: (1) IoT devices, (2) cloud computing,
    and (3) the application interface. The components of IoT devices include sensors,
    actuators, a control unit, and a gateway, among others. These sensors are in charge
    of monitoring critical environmental factors including air humidity, air temperature,
    soil moisture, and water level within the smart farm. The soil moisture sensor
    is used to measure the soil moisture content. In addition, the DHT22 device, which
    is famous for its accuracy, was used, which is a two-in-one combined sensor to
    measure humidity and temperature. In addition, the HC-SR04 ultrasonic distance
    sensor is used to detect water levels. The ESP32 microcontroller-powered control
    unit receives sensor readings and coordinates the actuators to make sure that
    the plants are watered on schedule. The ESP32 microcontroller is appropriate for
    larger-scale applications since it has adequate memory capacity and improved processing
    capability. The smart irrigation system''s actuators are essential for carrying
    out instructions from the ESP32 controller. In our system, a water sprinkler is
    used to water the plants, and a water pump is used to fill the tank. The next
    development in the IoT device architecture is the addition of a gateway. The gateway
    gathers sensed data from the control unit and carries out critical data processing
    operations to enable intelligent aggregation, optimize network traffic, and lower
    energy consumption. It effectively bundles the essential components of the particular
    process model and sends them to the cloud, leading to appreciable decreases in
    latency and costs at higher levels. The data is continually processed by conventional
    cloud computing systems when it is received from the gateway. Cloud computing
    is the focus of our system architecture''s second component. Farmers now have
    access to a huge variety of data that was gathered through the control unit and
    delivered over the gateway console, thanks to this layer. Farmers may gather,
    view, and analyze real-time data streams by utilizing the cloud-based IoT analytics
    platform ThingSpeak. ThingSpeak is a complete data management platform that enables
    farmers to design unique data visualizations using their own technology. The platform
    allows for the collection, visualization, analysis, and derivation of useful insights
    from live data streams. Using the ThingSpeak platform to post data or the ThingView
    app to retrieve data, farmers may communicate with the system. The irrigation
    system architecture is completed by the application interface, often known as
    the front layer. Results of data processing, such as soil moisture, humidity,
    temperature, and water level, are shown in this user-facing component. Farmers
    may get real-time data visualizations using ThingSpeak and use the knowledge to
    guide their decisions. This interface makes it possible for the farmer and the
    system to communicate seamlessly, which makes it easier to monitor and manage
    the irrigation systems. 2.2. Calibration of the water level In this section, the
    sensor calibration method is employed in the proposed work. The HC SR04 device
    was utilized to measure the water level. Several studies (Olisa et al., 2021,
    Hussen Hajjaj et al., 2020, Hanan et al., 2019, Tham et al., 2022), have employed
    an ultrasonic sensor to determine the water level. However, these papers did not
    provide a mathematical calculation for the calibration procedure of the ultrasonic
    sensor used to measure the water level. In the proposed study, a calibration technique
    is utilized to study the water level sensor. This technique involves a linear
    interpolation function, referred to as the water level sensor calibration, which
    establishes a relationship between the sensor''s values and the corresponding
    water level. (1) expresses this relationship in a linear formula. Specifically,
    when the maximum value of the sensor is represented in centimeters, the minimum
    value corresponds to the %, and vice versa. Fig. 4 visually illustrates this relationship
    between the sensor''s values and the water level in %. Download : Download high-res
    image (183KB) Download : Download full-size image Fig. 4. Architecture of the
    water level calibration. The calibration process was used to accurately adjust
    the input of the ultrasonic sensor. The sensor is connected to the ESP32 Microcontroller
    for seamless integration and data processing. During the system startup, we obtain
    synchronized sensor data for a duration of 2 sec. Subsequently, we conduct a thorough
    analysis of the system, focusing on the highest and lowest values of the sensor
    readings. The HC-SR04 device is capable of measuring distances ranging from 2
    cm to 400 cm. Equation (1) represents the mathematical interpolation function
    used to detect the water level in percentages, such as 5 %, 30 %, etc. This linear
    interpolation representation of our proposed system is as follows: (1) In the
    given linear interpolation (1), the variables used are defined as follows: Y:
    Output of the water level in %. X: Input of the water level in cm. m: Coefficient.
    P: Zero adjustment. The coefficient may be computed as in equation (2) if we assume
    that the difference between the highest and minimum values is equal to the h2
    described in equation (3). Consequently, level Y is equal to 1 when X is equal
    to the maximum value (Max). Further context or computation can be used to calculate
    the value of P, which represents zero adjustments as flow in equation (4). (2)
    (3) (4) In the proposed paper, it has been determined that the maximum distance
    in the water tank is 25 cm, and the minimum reading is h1 = 5 cm. Therefore, based
    equation (3) the difference between the maximum and minimum values (h2) is calculated
    as h2 = Max - Min = 25 cm − 5 cm = 20 cm. Using this information, the coefficient
    (m) can be calculated as m = -99/h2 = −99/20 = −4.95. (4) is obtained as follows:
    (4) For instance, if X  = Min = h1 = 5 cm, the value of the water level (Y) will
    be 99 %. On the other hand, if X  = Max = 25 cm, the water level value will be
    0 %. The discussion of this study towards the linear interpolation has important
    implications for sustainable agriculture, smart irrigation systems, and food security.
    This representation permits precise detection of water levels at various places
    in a tank or reservoir by creating a link between the values of the water level
    sensor and corresponding percentages. This interpolation may be used by smart
    irrigation systems to optimize water use and enhance agricultural operations.
    Farmers and system controllers can plan irrigation and manage water resources
    more effectively by continually monitoring the water levels. The system can deliver
    the proper quantity of water to crops using this real-time data, preventing over-
    or under-irrigation. This strategy offers two advantages. Firstly, it promotes
    sustainability and ensures that just the appropriate amount of water is delivered,
    therefore conserving water resources. Secondly, the representation helps to preserve
    crop health and production, enhancing food security, by precisely determining
    water levels. According to the mathematical calibration technique presented in
    this article, integrating linear interpolation into the smart irrigation system
    offers significant advantages. The accuracy of the water level sensor is significantly
    increased by this mathematical calibration technique, providing reliable information
    for making informed irrigation decisions. By enabling the system to accurately
    assess soil moisture levels, thereby reducing the risks associated with over-
    or under-watering, the use of linear interpolation improves overall irrigation
    planning. In particular, by reducing water wastage and complying with sustainable
    farming methods, this strategy improves resource efficiency. Linearization also
    improves accuracy. In addition, the approach increases the reliability of data-driven
    decision-making of the smart irrigation system, which in turn fosters stakeholder
    confidence in the accuracy of the system to make well-informed and effective management
    decisions. Linear interpolation effectively optimizes agricultural operations
    by precisely calibrating the sensors, particularly water level sensors, in the
    smart irrigation system presented in this paper. This enhancement enables better
    irrigation scheduling, guaranteeing accurate soil moisture measurements and reducing
    water wastage. The result is greater resource efficiency, in line with sustainable
    practices. What''s more, improved precision has a positive impact on crop productivity,
    promoting plant health and increasing overall agricultural output. This section
    includes a method for calibrating the water level sensor that will provide farmers
    with accurate results. This calibration technique optimizes the possibilities
    of seamless and secure soil irrigation management by facilitating effective process
    control. This strategy differs noticeably from the approaches put forward by authors
    (Olisa et al., 2021, Hussen Hajjaj et al., 2020). 3. Algorithm and V-model of
    the proposed scheme The algorithmic aspect of the proposed approach comprises
    three essential elements. It begins with a visual flowchart illustrating how the
    method works. Next, it explains the process of accessing the ESP32 station and
    establishing a Wi-Fi connection. Finally, it presents the pseudo-code, details
    of the system equipment, and V Model. This combination of algorithmic representation
    and equipment information is a valuable resource for researchers, developers,
    and enthusiasts who want to understand how the system works. 3.1. Flow chart of
    the proposed scheme The smart irrigation system algorithm created particularly
    for smart agriculture is shown in detail in Fig. 5. The algorithm encompasses
    all stages of the software code, beginning with the initialization of the sensors
    and ending with the display of sensors data on both the ThingSpeak platform and
    the ThingView application. Download : Download high-res image (369KB) Download
    : Download full-size image Fig. 5. Flow chart of the proposed smart irrigation
    system. The initialization of the temperature, humidity, moisture, and water level
    sensors is the first step in our system''s flow chart in order to get correct
    values from these sensors. The sensor parameters are adjusted as needed after
    initialization to ensure accurate readings. Next, the system checks if the ESP32
    microcontroller, the ESP32 used in the system, is connected to the ThingSpeak
    cloud. If not, the system tries connection with the cloud. Additionally, the sensor
    data is printed on the console for monitoring purposes. For the moisture sensor,
    if the reading falls below 40 %, indicating a low moisture level in the soil,
    the watering pump (W-Pump) is activated, and the green LED indicator is turned
    on. Conversely, if the reading exceeds 40 %, the pump remains switched off. The
    DHT22 sensor, responsible for measuring air temperature and humidity, continuously
    reads the values every 2 s while checking for any potential errors. If the temperature
    reading exceeds 45 °C, indicating a high temperature, the yellow LED is illuminated;
    otherwise, the yellow LED remains off. In the case of the water level sensor,
    if the reading indicates a level below 10 %, indicating a low water level in the
    tank, the tank pump (T-Pump) is activated, and the red LED is turned on. Conversely,
    if the reading is above 10 %, the tank pump remains off, and the red LED remains
    unlit. Every 2 s, the suggested smart irrigation system''s data is updated (2S).
    On the LCD, the sensors'' whole output is shown in real time. The system also
    instantly transmits all sensor data to the ThingSpeak cloud and ThingView app.
    In order to provide accurate and current information on the system''s performance,
    the data is updated every 2 s. Overall, this Smart Irrigation System makes sure
    that plants and crops receive enough water, and it runs well with little assistance
    from humans. In addition, this flow chart makes sure that the sensors are working
    properly, checks their readings, and initiates the required actions in response
    to predetermined thresholds, as shown by the activation of pumps and indicators.
    3.2. Accessing ESP32 station and Wi-Fi connection process 3.2.1. Accessing ESP32
    station The embedded system (ESP32) is typically linked to a wireless router,
    which acts as an access point for the ESP32 to connect to the local network in
    these situations. In most cases, the ESP32 is set up as a station, enabling it
    to connect to the router and access the network. In this setup, we would need
    toc be connected to the same local network as the ESP32 in order to control it.
    This implies that we may operate the ESP32 from any device that is also linked
    to the same network, such as IoT embedded systems (including other ESP32 devices),
    IoT gateways (which may include routers), and IoT terminals like PCs or smartphones
    as illustrated in Fig. 6. Our system can access and manage the ESP32 from anywhere
    in the range of that network as long as these devices are linked to it. Download
    : Download high-res image (298KB) Download : Download full-size image Fig. 6.
    Accessing the ESP32 station from anywhere. 3.2.1.1. Wi-Fi connection process The
    accompanying flow chart serves as an illustration of the methodical flow that
    the design process for creating a Wi-Fi connection adheres to. The ESP32 microcontroller
    is initially initialized to guarantee good operation. The system then confirms
    that the microcontroller is effectively linked to a Wi-Fi network. The information
    is swiftly and in real-time delivered to the ThingSpeak cloud platform after the
    connection has been verified. As shown in Fig. 7, this guarantees that all sensor-generated
    data is easily accessed and shown on the ThingSpeak platform and the associated
    ThingView application. Download : Download high-res image (198KB) Download : Download
    full-size image Fig. 7. Flow chart of ESP32 Wi-Fi connection process. 3.3. Pseudo-code
    and equipment of the system In order to program, develop, and visualize the algorithm''s
    structure, the pseudo-code is supplied below. The algorithm for the suggested
    irrigation system is shown in Table 1. This pseudo-code defines the simulation
    of intelligent irrigation based on an embedded system that monitors environmental
    conditions, controls pumps, and communicates with the cloud (The ThingSpeak platform
    and the ThingView application). It starts by defining constants for the different
    thresholds in lines 1–2. The program uses variables to represent sensor readings,
    pump states, and connection status in lines 3–11. Initialise built-in devices
    such as ESP32 and sensors in lines 12–13. Table 1. Algorithm 1. Pseudo-code of
    the proposed schemes //Define constants: 1: Min_Moisture_Thereshold = 40 2: Min_Water_Level_Thereshold
    = 10 //Variables: 3: Ts ← Temperature 4: Hs ← Humidity 5: Ms ← Moisture 6: Ws
    ← Water level 7: TonWP = false ← Watering pump state 8: TonTP = false ← Tank pump
    state 9: ToffWP = false ← Watering pump state 10: ToffTP = false ← Tank pump state
    11: Max = 20 ← Maximum distance between ultrasonic sensor and water surface 12:
    Initialize ESP32 ← Embedded board 13: Initialize sensors ← Initialization of the
    (Ts, Hs, Ms, Ws) 14: While true: // Simulate sensor readings: 15: Ts = GetTemperature()
    ← read value (Ts) 16: Hs = GetHumidity() ← read value (Hs) 17: Ms = GetMoisture()
    ← read value (Ms) 18: Ws = GetWaterLevel() ← read value (Ws) // Perform two-point
    calibration on moisture sensor: 19: Moisture = map(Ms, 4095, 2413, 0, 100) ← Calibration
    using function map() // Calculate water level using linear interpolation: 20:
    WaterLevel = -4.95 * Ws + 1 + (99 * Max) / 20 ← Based equation Y = mX + P // Simulate
    ThingSpeak and ThingView communication: 21: if (ESP32 is connected with ThingSpeak
    Cloud): 22:  Print collected data on the monitor 23:  Send data to ThingSpeak
    platform 24:  Send data to ThingView app 25: else: 26:  Try to connect again //
    Control watering pump based on moisture level: 27: if (Moisture <= Min_Moisture_Thereshold):
    28:  TonWP = true 29:  ToffWP = false 30: else: 31:  TonWP = false 32:  ToffWP
    = true // Control tank pump based on water level: 33: if (WaterLevel <= Min_Water_Level_Thereshold):
    34:  TonTP = true 35:  ToffTP = false 36: else: 37:  TonTP = false 38:  ToffTP
    = true 39: Delay (2 s) ← Repeat for each period of 2S 40: End While The main loop
    (While true) is executed continuously, simulating the real-time behavior of the
    system on lines 14–40. Within the loop: Sensor values (temperature, humidity,
    moisture, water level) are (1) simulated, although actual sensor data is used
    in practice. (2) The humidity sensor reading is calibrated on a percentage scale.
    (3) The water level is calculated by linear interpolation. (4) The simulated data
    is sent to the cloud platforms (ThingSpeak and ThingView) for visualization and
    analysis. (5) The state of the connection to the cloud is simulated. (6) Control
    logic evaluates humidity and water levels to determine pump conditions. (7) Pump
    control flags (TonWP, ToffWP, TonTP, ToffTP) are set based on the control logic
    conditions. (8) A simulation delay has been introduced between iterations. The
    code uses placeholder functions to read sensors, set values, and check connectivity
    to the cloud. These functions need to be implemented to interact with real devices
    and services. In general, this pseudo-code demonstrates the logic of the system
    that collects sensor data, communicates with the cloud (ThingSpeak and ThingView),
    and controls pumps according to predefined thresholds. Table 2 briefly gives the
    hardware components used in this design, and explains the particular uses for
    which it was used. It includes the controllers, sensors, pumps, and other devices
    used in this system. Table 2. The equipment of the system. Sr. no Hardware Functions
    1. ESP32 Microcontroller The ESP32 is a flexible microcontroller with a variety
    of features and capabilities. It may be used in combination with a host MCU as
    a secondary device or as an independent system. Reduced communication stack overhead
    on the main application processor is one of its main benefits. The ESP32 can also
    communicate with other systems, allowing the inclusion of Bluetooth and Wi-Fi
    features via SPI/SDIO or I2C/UART interfaces. Because of its adaptability, the
    ESP32 is a potent tool for several applications. 2. DHT22 (AM2302) It is a two-in-one
    combination sensor for measuring ambient air humidity and temperature, all with
    high accuracy. 3. Soil Moisture Sensor A device used to detect moisture or water
    content in the soil. Farmers and gardeners use the information to make informed
    decisions about watering and watering schedules by gaining vital insight into
    soil moisture content. 4. HC-SR04 – Ultrasonic Distance Sensor The device is used
    to measure and monitor the water level within a tank, giving vital data for effective
    water management. 5. Tank Pump The tank pump was employed to recharge the tank
    when it became empty. This device contributes to the system''s continued operating
    effectiveness and offers a dependable water source for irrigation needs. 6. Watering
    Pump The watering pump is responsible for irrigating the soil by delivering water
    to the plants 7. Relay_1 A relay was utilized to activate the tank pump for tank
    refilling when it becomes empty. 8. Relay_2 A relay was used to control the watering
    pump responsible for soil irrigation. 9. Power Supply Powering all of the system''s
    components with electrical energy is the power source''s main duty. This power
    source acts as the system''s main energy source, supplying each component with
    the energy it needs to operate properly, including the sensors, actuators, controllers,
    and communication modules. By providing dependable power, the system can function
    without interruption, making it possible to complete activities like data gathering,
    processing, and communication successfully. 3.4. V Model of the smart irrigation
    system A crucial element of our approach is the integration of sensor and control
    system data into the V model, which guides the development of the best irrigation
    program. Within the framework of the V model, which is a software development
    methodology, we have created an intelligent irrigation system exploiting the IoT
    and an integrated board such as the ESP32. This board transmits data to the cloud,
    including platforms such as ThingSpeak, and enables remote monitoring via the
    ThingView application. As shown in Fig. 8 the exact ways to apply the V model,
    in this case, are as follows: (1) Requirements Gathering and Analysis: The requirements
    for the system are gathered and examined at this stage of the V Model. This involves
    identifying the system''s users, such as farmers and agricultural engineers, their
    requirements and goals (such as automating irrigation based on weather and soil
    conditions and sending data to the cloud for remote monitoring and analysis),
    as well as any limitations that must be taken into account (such as cost, and
    compatibility with existing equipment). (2) System Design: The system architecture
    and general design are developed at this stage. This entails a choice of sensors
    to track soil moisture, temperature, and water level, an embedded board such as
    ESP32 to collect and process sensor data, and a wireless communication module
    such as Wi-Fi to transmit sensor data to a remote server or a cloud-based platform
    such as ThingSpeak. Designing the control system that will be used to create the
    ideal irrigation schedule is also part of this phase. (3) Implementation: The
    integration of sensor and control system data into the Model V is a crucial step
    in the implementation of our intelligent irrigation system. At this stage, the
    system is activated, the control system is configured and the integrated board,
    such as the ESP32, is programmed. A connection to the cloud is established, enabling
    the irrigation system to be monitored and operated remotely. It''s important to
    note that this phase also includes the integration of sensor data into the control
    system, enabling the best irrigation program to be determined. The code practice
    for sending sensor data to the ThingSpeak cloud platform is also implemented during
    this stage. This seamless integration of components guarantees optimum system
    efficiency, enabling precise, responsive management of the irrigation program
    according to environmental conditions and specific crop needs. (4) Verification:
    To make sure the system satisfies the criteria established in step one, this stage
    entails testing it. Functional testing, performance testing, and integration testing
    are all part of this. The communication between the embedded board and the ThingSpeak
    cloud platform as well as the communication between the embedded board and the
    remote server or cloud-based platform are both tested at this stage. (5) Maintenance:
    The deployment of the system and any required upkeep and upgrades are done in
    this final phase of the V Model. This stage also entails keeping an eye on the
    system''s operation and making any required modifications. Additionally, it entails
    testing the connectivity, upgrading the firmware, and making sure that new software
    versions are compatible. This stage also entails keeping an eye on the information
    transmitted to ThingSpeak and resolving any transmission problems. Download :
    Download high-res image (230KB) Download : Download full-size image Fig. 8. V
    model for smart irrigation system. Using an ESP32 microcontroller with large memory
    capacity and enhanced processing capability confers several advantages, especially
    in the area of our smart irrigation system. The selection of an ESP32 microcontroller
    with robust memory capacity and processing capability improves the efficiency,
    responsiveness, and adaptability of our smart irrigation system, supporting the
    optimization of irrigation of crops and promoting sustainable agricultural practices.
    4. Results and discussion In this section, we provide a detailed analysis of the
    proposed Smart Irrigation System, including its results and efficiency compared
    to existing scientific papers. We also look at how the system affects agricultural
    sustainability and how it helps provide food security. The innovation of this
    study lies in its integration of cutting-edge technology like embedded system
    cloud computing and the IoT. The system makes it possible to monitor and manage
    irrigation operations in real-time by leveraging IoT devices, sensors, and actuators.
    Utilizing cloud computing enables data storage, analysis, and decision-making,
    which results in enhanced irrigation control and optimum water utilization. This
    novel strategy transforms conventional approaches by improving irrigation operations''
    accuracy, efficacy, and sustainability. Efficiently sent to ThingSpeak platforms
    and the ThingView app, data from simulated sensors represent environmental parameters
    such as temperature and humidity. Data is provided securely regularly, simulating
    sensor updates in real-time, using the MQTT protocol for communication. Cloud
    platforms can be configured to accurately visualize data using graphs and charts,
    enabling real-time monitoring and analysis, just like with field data. 4.1. Experimental
    results The experimental results of the proposed irrigation system are presented
    in Table 3. The table provides continuous measurements of various parameters including
    soil moisture, temperature, and humidity, as well as outputs from the water level
    sensor in centimeters and the water level in percentages. These measurements were
    recorded over a period of seven days. Additionally, Table 3 includes information
    on the status of data transmission to the platform and app, indicating whether
    the data was successfully sent, and the response time of 2 s. It should be noted
    that the weather conditions during the data collection period were normal, with
    no rainfall. These comprehensive measurements provide valuable insights into the
    performance of the smart system, showcasing the variations in soil moisture, temperature,
    humidity, and water level over the seven-day period. Such data is critical for
    optimizing irrigation strategies and ensuring efficient water management in agricultural
    practices. Cloud computing, in particular the integration of the MathWorks laboratory
    into the ThingSpeak platform of our intelligent irrigation system, improves data
    storage, analysis, and irrigation control decision-making through scalable storage,
    remote access to all data, and real-time analytics on ThingSpeak. This contributes
    to cost-effectiveness, improved security, collaborative management, reliability,
    efficient data processing, collaborative decision-making, and good results. Table
    3. Tables experimental results of the proposed study. No. Temperature (°C) Humidity
    (%) Soil moisture (%) Water level (Cm) Water level caliber (%) Send data to cloud
    Response time (s) 1. 25.20 °C 35.00 % 40.50 % 06.81 Cm 90.00 % Yes 2 s 2. 26.30
    °C 36.00 % 55.30 % 07.42 Cm 87.00 % Yes 2 s 3. 25.10 °C 69.25 % 60.10 % 09.44
    Cm 77.00 % Yes 2 s 4. 27.56 °C 40.22 % 75.10 % 14.89 Cm 50.00 % Yes 2 s 5. 28.12
    °C 39.13 % 76.12 % 15.90 Cm 54.00 % Yes 2 s 6. 26.80 °C 59.20 % 80.01 % 16.61
    Cm 40.00 % Yes 2 s 7. 27.90 °C 45.30 % 65.10 % 10.45 Cm 72.00 % Yes 2 s This study
    presents a method for calibrating the moisture sensor used in the research. To
    calibrate the moisture sensor input, a two-point calibration method was used in
    the studies (Ndunagu et al., 2022, Tiglao et al., 2020). Moisture sensor data
    were taken during the first 2 s of the system loop, indicating the lowest and
    maximum predicted values of the readings. The function moisture = map (moisture,
    4095, 2413, 0, 100) was used to do a two-point calibration on the moisture sensor''s
    natural outputs. The function mapping approach is used in the demonstration section
    to calibrate the humidity sensor. A few configurations must be made before the
    ESP32 Microcontroller can be started. The moisture sensor''s minimum and maximum
    readings are defined specifically. Values for the moisture sensor vary from a
    minimum of 4095 to a high of 2413. A function is used to transform the sensor
    value from 0 % to 100 %, with 100 % indicating the maximum value, in order to
    make the reading procedure easier for consumers. The user-friendly interpretation
    of the sensor readings is ensured by this change. Two-point calibration is of
    significant importance in the calibration process of the moisture sensor of our
    intelligent irrigation system. This method involves calibrating the sensor to
    two different moisture levels, typically representing the extremes of the moisture
    spectrum. The importance of using a two-point calibration method lies in its ability
    to improve accuracy, account for variability in soil conditions, account for dynamic
    moisture ranges and allow customization for specific agricultural applications.
    This meticulous calibration approach is fundamental to ensuring the efficiency
    of the smart irrigation system in optimizing water. 4.2. Results on the platform
    in real-time The ThingSpeak cloud receives data obtained by our system. So we
    can use our mobile app or our PC to obtain or download it for free using the platform
    ThingSpeak or the app ThingView. Fig. 9 shows some farm temperature readings displayed
    on the ThingSpeak. The farm owner can now connect to the cloud and see the graphical
    output to check the status of the farm. The maximum value of the temperature read
    is 25.5 °C, and the minimum value is 24.9 °C. On the ThingSpeak platform, Fig.
    10 displays some on-farm air humidity data. The maximum value of the humidity
    read is 35.00 % and the minimum value is 39.4 %. The farm owner may now connect
    to the cloud and examine the farm''s status using the graphical output. Download
    : Download high-res image (98KB) Download : Download full-size image Fig. 9. The
    value of temperature on the ThingSpeak platform in real-time. Download : Download
    high-res image (100KB) Download : Download full-size image Fig. 10. The value
    of humidity on the ThingSpeak platform in real-time. The soil moisture data of
    farm is shown in Fig. 11 on ThingSpeak. It shows that the soil was initially dry.
    When the water pump was turned on, the moisture sensor registered around 80 %.
    The range of soil moisture measured ranged from 0 % to 82 %. On the other hand,
    Fig. 12 illustrates how the water level was around 80 % when the irrigation water
    pump was switched on, which caused the water storage to be depleted. The data
    from the moisture sensors combined with the observations of the water level sheds
    light on the dynamic interaction between soil moisture levels, water pump performance,
    and water storage management and offers useful insights into the irrigation process.
    These findings support wise agricultural practices by enabling informed decision-making
    and effective water resource management. Download : Download high-res image (89KB)
    Download : Download full-size image Fig. 11. The value of moisture on the ThingSpeak
    platform in real-time. Download : Download high-res image (121KB) Download : Download
    full-size image Fig. 12. The value of water level on the ThingSpeak platform in
    real-time. Every 2 s, the ESP32 microcontroller sends data on the temperature,
    humidity, soil moisture, and water level to the ThingSpeak IoT analytics platform.
    The farmer may easily access this information via the ThingSpeak channel, giving
    them a simple and precise way to keep an eye on their field. Additionally, the
    data may be exported to an Excel document using the ThingSpeak channel''s “export
    recent data” function, enabling additional analysis and investigation. Additionally,
    an application called ThingView, which is available for free download from the
    Google Play Store, makes it simple to retrieve the data from ThingSpeak on mobile
    devices. The farm owner may remotely access all the data with this smartphone
    application, making it simple and convenient to manage the irrigation system.
    The use of this smart irrigation system is essential because it guarantees precise
    and timely irrigation of agricultural plants, creating the ideal environment for
    plant growth. The field or farm owner''s overall farming experience is considerably
    improved by this method. Further, implementing our smart irrigation system requires
    a high level of technical expertise. The system is designed and implemented by
    specialists before being delivered to farmers. Farmers, meanwhile, benefit from
    a ready-to-use system that requires a minimum of technical knowledge for daily
    operations. The graphical display of the smart irrigation system includes needle
    values that represent the real-time sensor data. Colored sections can be applied
    to various measurement sites (widgets) to improve clarity. A red number on the
    water sensor in the tank, which indicates that the water level is critically low,
    is an example of how red color is used to indicate danger. As illustrated in Fig.
    13, the green color denotes no problems, whereas the yellow color stands in the
    center of problems and no problems, indicating the start of a potentially troublesome
    period. The solution also enables tracking of channel locations and particular
    modifications to channel content. In order to do this, a channel sitemap is created,
    which details the placement of feed data. By inputting the latitude and longitude
    coordinates in the “Channel settings” tab of the channel view, the channel location
    may be displayed. The channel map of our system is shown in Fig. 14, which gives
    a summary of the data''s spatial distribution. These functions and visual representations
    help users gain a deeper knowledge of the system''s data, making it simpler for
    them to recognize urgent circumstances and efficiently monitor channel content.
    Download : Download high-res image (324KB) Download : Download full-size image
    Fig. 13. The graphic data display widgets in the smart irrigation system offer
    easy access to visual representations of the measured and processed data on ThingSpeak
    channels. The widgets of the sensors, including, respectively, (a) temperature,
    (b) humidity, (c) moisture, and (d) water level. Download : Download high-res
    image (327KB) Download : Download full-size image Fig. 14. Location of the system.
    4.3. Results on the app in real-time The ThingView app, depicted in Fig. 15, provides
    a comprehensive display of all the values obtained from our proposed system, including
    temperature, humidity, soil moisture, and water level. The farm owner may simply
    view all the data remotely through their phone thanks to this user-friendly mobile
    application. This strategy is particularly important since watering agricultural
    plants demands close attention. Our Smart Irrigation System seeks to solve this
    by providing an accurate study to guarantee timely and effective plant watering.
    A farm owner may properly monitor and manage the irrigation process thanks to
    the system''s capabilities, which improve agricultural operations and guarantee
    the health of the farm or field. Download : Download high-res image (468KB) Download
    : Download full-size image Fig. 15. The output of the sensors on the ThingView
    app, including, respectively, (a) temperature, (b) humidity, (c) moisture, and
    (d) water level. 4.4. Calculated the water usage decrease Through a combination
    of observation and testing, it is possible to quantify and demonstrate the decrease
    in water use compared to traditional irrigation techniques. Table 4 may be used
    to show how our intelligent irrigation system, which is based on the IoT and embedded
    technology, lowers the water level: Table 4. Calculated the water usage decrease.1
    System Period Water level (%) Traditional 10 days 100 % Smart Irrigation (IoT)
    10 days 30 % 1 IoT is the acronym of the internet of things. The information gathered
    from the conventional and smart irrigation systems was then compared and examined.
    By subtracting the quantity of water used in a smart irrigation system from the
    amount used in a traditional irrigation system and dividing the result by the
    amount used in a conventional irrigation system, the decrease in water consumption
    can be computed. The water usage of the area''s conventional irrigation system
    should first be monitored and documented. The amount of water utilized during
    a particular time period in this paper''s 10 days was measured using sensors.
    The next step is to install and set up a smart irrigation system based on IoT
    and embedded devices. The system has sensors that can monitor temperature, humidity,
    and other environmental variables including humidity, temperature, moisture, and
    water level. An expected 10-day testing and monitoring period are used to compare
    the smart irrigation system to the conventional irrigation system. The same measurements
    and records are utilized to determine how much water is consumed in a smart irrigation
    system as in a traditional irrigation system. The water level decrease is calculated
    by taking the water level used by the traditional irrigation system (100 %) and
    subtracting the water level used by the smart irrigation system (30 %). The result
    is (100–30)/100, which equals 0.7 or 70 % of the original water level. Reducing
    irrigation water consumption by more than 70 % faces challenges such as potential
    impacts on crops, environmental considerations, climate change adaptation, effective
    soil moisture management, technological limitations, and farmer education. This
    research successfully transforms conventional methodologies by articulating a
    breakthrough in irrigation accuracy and efficiency. It presents a smart irrigation
    system that combines cloud computing, embedded systems, and the IoT. It makes
    use of state-of-the-art sensors, such as DHT22 and water level sensors coupled
    to ESP32, for data transfer to the cloud and real-time monitoring. The accuracy
    and operating efficiency of water-level sensors are enhanced by a new mathematical
    function called linear interpolation. By using 70 % less water, the system that
    has been put in place is in line with environmentally beneficial standards. The
    study explores more general implications for agricultural sustainability and worldwide
    food security, highlighting significant advancements in accuracy and efficacy
    achieved by the suggested smart irrigation system. 4.5. Comparison and discussion
    Table 5 provides a comparative analysis of various IoT-based water use monitoring
    systems, highlighting key functionalities, devices, Parameters, calibration approaches,
    v-models, and their ability to reduce water consumption. The articles included
    in the comparison were selected based on their relevance to water usage monitoring
    and IoT applications. Table 5. Comparison of related research.2 Paper ID Year
    Platform Application Embedded Devices Parameters Sensor Calibration V model Software
    Reduce Water Usage Pramanik et al., 2022 2022 Croplytics Croplytics cl Arduino
    Uno, GSM Model, LoRa Soil moisture No No No Abba et al., 2019 2019 ThingSpeak
    No Arduino Uno Temperature, Humidity, Soil moisture Yes (moisture) No No Munir
    et al., 2021 2021 Firebase Android platform Arduino Uno, GSM Model Temperature,
    Humidity, Soil moisture No No No Pasika et all., 2020 2020 ThingSpeak ThingView
    Arduino Mega Turbidy, Soil pH, Temperature, Humidity, Water level No No No García
    et al., 2020 2020 No No No No No No No Tiglao et al., 2020 2020 Web page ATMega328,
    NRF24L01 Temperature, Humidity, Soil moisture, No No No PS 2024 ThingSpeak ThingView
    ESP32 Temperature, Humidity, Soil moisture, and Water level Yes (Soil moisture,
    and Water level) Yes 70 % 2 PS is the acronym of the proposed scheme. The paper
    (Pramanik et al., 2022) focuses on an IoT-based water usage monitoring system
    using the Croplytics platform with Arduino Uno, LoRa devices, and a GSM model.
    In comparison, our paper (PS) differs by using the ThingSpeak platform and ESP32
    device to monitor temperature, humidity, soil moisture, and water level. Unlike
    paper (Pramanik et al., 2022), our system incorporates sensor calibration, which
    improves data accuracy. In addition, your paper introduces the V Model software
    and helps to reduce water consumption by 70 %, presenting a more advanced and
    comprehensive approach to water conservation. The authors of this work (Abba et
    al., 2019), present an IoT system using Arduino Uno and ThingSpeak to monitor
    humidity, temperature, and soil moisture. Our paper (PS) goes further by using
    ESP32 to improve data collection, covering additional parameters (water level)
    and incorporating sensor calibration for soil moisture and water level measurements.
    This increases the accuracy and reliability of your system''s data. In addition,
    our integration of V Model software and the successful reduction in water consumption
    underlines the depth of our approach beyond what work (Abba et al., 2019) offers.
    The authors of this study (Munir et al., 2021), focus on a water consumption monitoring
    system based on an Android platform with GSM and Arduino Uno models. In contrast,
    our proposed scheme (PS) uses the ESP32 device via the ThingSpeak platform. Our
    system (PS) measures temperature, humidity, soil moisture, and water level, providing
    a wider range of data points compared to the study (Munir et al., 2021). The addition
    of sensor calibration and V Model software to our (PS) study improves the accuracy
    and robustness of our solution. On the other hand, the authors of this study (Pasika
    et al., 2020), presented an Arduino Mega-based system using ThingSpeak to monitor
    soil pH, turbidity, temperature, humidity, and water level. Our PS extends its
    capabilities by using the ESP32 to monitor temperature, humidity, soil moisture,
    and water level. The integration of sensor calibration, Model V software, and
    a 70 % reduction in water consumption in our PS system represent developments
    beyond the scope of this study (Pasika et al., 2020). The authors (García et al.,
    2020), presented a research paper in 2020 related to a study of the latest smart
    irrigation techniques to determine the factors observed in existing systems. This
    paper does not use the realisation of the irrigation system including the integration
    of sensors and embedded systems to drive the irrigation. However, our PS use of
    ESP32, full parameter coverage, sensor calibration, V Model software, and reduced
    water consumption contributes to a more sophisticated and impactful system than
    suggested by the study (García et al., 2020). The authors [29] presented a paper
    focusing on temperature, humidity, and soil moisture monitoring using ATMega328
    and NRF24L01. Our PS features by integrating an ESP32 to monitor temperature,
    humidity, soil moisture, and water level via ThingSpeak. The inclusion of sensor
    calibration, Model V software, and a significant reduction in water consumption
    improve the robustness and efficiency of our solution beyond that proposed in
    the study (Tiglao et al., 2020). The studies conducted by the authors (Abba et
    al., 2019, Tiglao et al., 2020), employed the DHT11 device for temperature and
    humidity measurements. However, this sensor exhibits low accuracy when measuring
    temperatures above zero, rendering decimal value transfer unnecessary and impacting
    agricultural productivity. In contrast, our approach involved utilizing the DHT22
    device which offers the capability of measuring temperatures and humidity, with
    a precision of 0.1 units. This kind of sensor enables more precise and trustworthy
    readings, improving data accuracy and encouraging better agricultural results.
    Our intelligent irrigation system is based on the ESP32, known for its outstanding
    features such as low power consumption, ample memory, Wi-Fi, Bluetooth, and exceptional
    speed. Moreover, ESP32-based boards are cost-effective and offer analog and digital
    inputs and outputs, making them ideal tools for reading numerous analog input
    values in intelligent farming and Smart Irrigation Systems. The estimated total
    cost of the proposed intelligent irrigation system is approximately US $60, making
    it an affordable and cost-effective solution. This low-cost nature of the system
    aligns with our goal of providing a practical and accessible option, particularly
    for low-income farmers, in contrast to the methods described by the authors in
    systems (Pramanik et al., 2022, Abba et al., 2019). In contrast to conventional
    irrigation methods that rely on groundwater drainage and can lead to excessive
    water consumption and crop flooding, our system utilizes innovative technologies
    to provide precise and demand-based soil irrigation. By adapting to the specific
    water needs of the crops, our system has the potential to significantly reduce
    water usage by more than 70 %. This efficient and targeted approach ensures optimal
    resource utilization while promoting sustainable agriculture practices. None of
    the scientific papers referenced in this study have used the V model. In contrast,
    our paper which used the V model software design, presents a methodical and organized
    approach to software development, significantly improving the overall quality
    of our irrigation system. 4.6. Smart irrigation improves food security The use
    of the IoT, cloud computing, and other cutting-edge technologies in Smart Irrigation
    Systems can have a significant impact on food security as seen in the Fig. 16.
    Here are some of the ways this technology enhances food security: (1) Improved
    Crop Yields: By implementing intelligent irrigation systems based on IoT to provide
    crops with the right quantity of water at the right time, crop yields may be boosted.
    This can help ensure a steady supply of food by reducing the likelihood of crop
    failures caused by droughts or other environmental factors. (2) Improved Water
    Efficiency: Smart irrigation systems based on IoT use information from sensors
    and weather stations to choose the best irrigation schedule, reducing water waste
    and maximizing water efficiency. (3) Remote Access and Control: Through a mobile
    application, smart irrigation systems using IoT can be accessed and operated remotely,
    allowing farmers to check on and make adjustments to their irrigation systems
    even when they are not in their fields. Farmers who live in rural places or who
    have access issues owing to physical restrictions may find this to be of particular
    benefit. (4) Making Decisions Based on Data: Intelligent irrigation systems based
    on IoT gather a lot of information on soil moisture, weather, and crop growth.
    This information may be used to make better decisions about crop planning, irrigation
    schedules, and other aspects that impact crop yields. (5) Climate Change Adaptation:
    Smart irrigation systems based on IoT can assist farmers in adapting to the shifting
    weather patterns brought on by climate change. These devices can assist farmers
    in modifying their irrigation schedules and other management measures to take
    into account such as changes in temperature, precipitation, and other environmental
    factors by giving real-time data on soil moisture and meteorological conditions.
    Download : Download high-res image (182KB) Download : Download full-size image
    Fig. 16. Smart irrigation for food security. Overall, by increasing crop yields,
    raising water efficiency, and giving farmers the resources, they need to make
    wiser decisions, smart irrigation systems could have a significant impact on food
    security. In addition, it can promote sustainable agriculture and help adapt to
    climate change. The proposal of this paper will contribute effectively to ensuring
    food security. The use of the IoT, cloud computing, and other cutting-edge technology
    in smart irrigation systems has the potential to have a significant influence
    on food security. In addition to increasing agricultural yields and water efficiency,
    these technologies also enable remote monitoring and data-driven decision-making,
    all of which may help ensure a more reliable food supply. This essay will examine
    how smart irrigation affects food security and how it may help maintain agriculture.
    The research paper highlighted smart irrigation systems as a groundbreaking approach
    to integrating new technologies like the IoT, embedded systems, and cloud computing.
    One notable innovation is the real-time data transmission to the ThingSpeak cloud
    and the visualization of the data through the ThingView app. This implementation
    allows for seamless monitoring and control of the irrigation system. By leveraging
    these technologies, the paper enables farmers and agricultural stakeholders to
    access vital information about soil moisture, temperature, and other environmental
    parameters in real-time. This innovation improves decision-making processes, enhances
    resource management, and promotes sustainable agricultural practices. The utilization
    of the ThingSpeak cloud and ThingView app for data visualization represents a
    significant advancement in smart agriculture, providing a user-friendly interface
    for efficient irrigation management. This paper presented a mathematical method
    for sensor calibration that brings innovation to the field by ensuring precise
    and reliable measurements. Additionally, the V model software design offers a
    systematic and structured approach to software development, enhancing the overall
    quality of our irrigation system. The paper focus on examining the impact of smart
    irrigation on food security. Better resource management in smart irrigation systems
    results in more sustainable, efficient, and environmentally friendly agricultural
    practices, with observable benefits in terms of water conservation, energy efficiency,
    crop yield, cost reduction, and overall agricultural sustainability. The analysis
    and interpretation of data in smart agriculture transforms the raw data of sensors
    into actionable information through many functions such as data cleaning and integration,
    application of advanced analytics, providing visual representations, interpreting
    models and providing real-time recommendations to farmers for informed decision-making
    and optimized farming practices. 5. Conclusion and future work In conclusion,
    the article proposed the concept of a “smart irrigation system using embedded
    Systems, IoT, and cloud computing” as an innovative solution to enhance food security
    and promote sustainable agriculture. By harnessing advanced technologies, this
    system aims to optimize irrigation practices, conserve water resources, and support
    long-term agricultural sustainability. The system makes use of cutting-edge technology
    like cloud computing, embedded system, and the IoT to provide real-time monitoring,
    control, and data analysis of irrigation operations. This system supervised real-time
    monitoring of crucial environmental factors such as moisture, humidity, temperature,
    and water levels in smart agriculture practices. The system used the ThingSpeak
    cloud to enable wireless communication between the device and the farm owner,
    enhancing their interaction. Furthermore, the ESP32 controller is linked to both
    a watering pump for soil irrigation and a water pump to refill the tank during
    low water levels. The automated control of the two water pumps is based on the
    readings of various environmental factors. Farmers can access comprehensive farm
    data from anywhere in the world as the sensor data is transmitted in real-time
    to both the ThingSpeak cloud and the ThingView application. This capability allows
    for more precise crop irrigation and increased production. Moreover, this will
    also present a mathematical-driven function known as linear interpolation to calibrate
    the water level sensor in percentage. This smart irrigation system was created
    using the V model software development approach. The solution suggested in this
    paper uses 70 % less water for soil irrigation than conventional techniques. In
    addition, this paper addressed the impact of smart irrigation using the latest
    technology on food security and its ability to support sustainable agriculture.
    The implementation of this smart irrigation system has the potential to revolutionize
    the agricultural sector, addressing key challenges and paving the way for a more
    secure and sustainable food production system. The future work of this paper involves
    integrating modern technologies and utilizing an MQTT broker to enhance the Smart
    Irrigation System. By merging multiple nodes, the system can handle increased
    data analysis and control elements for large-scale applications such as smart
    farms spanning thousands of hectares. The MQTT broker can further optimize irrigation
    strategies and resource management. On the other hand, future work of this paper
    will include the integration of the concept of smart agriculture within the framework
    of cyber-physical human systems. Declaration of competing interest The authors
    declare that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. References
    Abba et al., 2019 S. Abba, J. Wadumi Namkusong, J.-A. Lee, M. Liz Crespo Design
    and performance evaluation of a low-cost autonomous sensor interface for a smart
    IoT-based irrigation monitoring and control system Sensors, 19 (2019), p. 3643,
    10.3390/s19173643 View in ScopusGoogle Scholar Abi Saab et al., 2019 M.T. Abi
    Saab, I. Jomaa, S. Skaf, S. Fahed, M. Todorovic Assessment of a smartphone application
    for real-time irrigation scheduling in mediterranean environments Water, 11 (2019),
    p. 252, 10.3390/w11020252 Google Scholar Ahmed et al., 2018 N. Ahmed, D. De, I.
    Hussain Internet of things (IoT) for smart precision agriculture and farming in
    rural areas IEEE Internet Things J., 5 (2018), pp. 4890-4899, 10.1109/JIOT.2018.2879579
    View in ScopusGoogle Scholar Assouli et al., 2018 O. Assouli, H.E. Bilali, A.
    Abouabdillah, R. Harbouze, N.E. Jaouhari, M. Chaoui, R. Bouabid Transition from
    surface to drip irrigation in morocco: analysis through the multi-level perspective
    AGROFOR, 3 (2018), 10.7251/AGRENG1803142A Google Scholar Ayaz et al., 2019 M.
    Ayaz, M. Ammad-Uddin, Z. Sharif, A. Mansour, E.-H.-M. Aggoune Internet-of-Things
    (IoT)-based smart agriculture: toward making the fields talk IEEE Access, 7 (2019),
    pp. 129551-129583, 10.1109/ACCESS.2019.2932609 View in ScopusGoogle Scholar Bathaei
    and Štreimikienė, 2023 A. Bathaei, D. Štreimikienė A systematic review of agricultural
    sustainability indicators Agriculture, 13 (2023), p. 241, 10.3390/agriculture13020241
    View in ScopusGoogle Scholar Beckman and Countryman, 2021 J. Beckman, A.M. Countryman
    The importance of agriculture in the economy: impacts from COVID-19 Am. J. Agric.
    Econ., 103 (2021), pp. 1595-1611, 10.1111/ajae.12212 View in ScopusGoogle Scholar
    Blakeney, 2022 M. Blakeney Agricultural innovation and sustainable development
    Sustainability, 14 (2022), p. 2698, 10.3390/su14052698 View in ScopusGoogle Scholar
    Elijah et al., 2018 O. Elijah, T.A. Rahman, I. Orikumhi, C.Y. Leow, M.N. Hindia
    An overview of internet of things (IoT) and data analytics in agriculture: benefits
    and challenges IEEE Internet Things J., 5 (2018), pp. 3758-3773, 10.1109/JIOT.2018.2844296
    View in ScopusGoogle Scholar FAO et al., 2022 FAO, IFAD, UNICEF, WFP, WHO, 2022.
    The State of Food Security and Nutrition in the World 2022: Repurposing food and
    agricultural policies to make healthy diets more affordable, The State of Food
    Security and Nutrition in the World (SOFI). Rome, Italy. Google Scholar García
    et al., 2020 L. García, L. Parra, J.M. Jimenez, J. Lloret, P. Lorenz IoT-based
    smart irrigation systems: an overview on the recent trends on sensors and IoT
    systems for irrigation in precision agriculture Sensors, 20 (2020), p. 1042, 10.3390/s20041042
    View in ScopusGoogle Scholar Giller et al., 2021 K.E. Giller, T. Delaune, J.V.
    Silva, K. Descheemaeker, G. van de Ven, A.G.T. Schut, M. van Wijk, J. Hammond,
    Z. Hochman, G. Taulya, R. Chikowo, S. Narayanan, A. Kishore, F. Bresciani, H.M.
    Teixeira, J.A. Andersson, M.K. van Ittersum The future of farming: Who will produce
    our food? Food Sec., 13 (2021), pp. 1073-1099, 10.1007/s12571-021-01184-6 View
    in ScopusGoogle Scholar Habib et al., 2023 S. Habib, S. Alyahya, M. Islam, A.M.
    Alnajim, A. Alabdulatif, A. Alabdulatif Design and implementation: an IoT-framework-based
    automated wastewater irrigation system Electronics, 12 (2023), p. 28, 10.3390/electronics12010028
    View in ScopusGoogle Scholar Hanan et al., 2019 H. Hanan, A.A.N. Gunawan, M. Sumadiyasa
    Water level detection system based on ultrasonic sensors HC-SR04 and ESP8266-12
    modules with telegram and buzzer communication Media, I2M 18 (2019), pp. 305-309
    https://doi.org/10.18280/i2m.180311 CrossRefView in ScopusGoogle Scholar Hussen
    Hajjaj et al., 2020 S.S. Hussen Hajjaj, M.T. Hameed Sultan, M.H. Moktar, S.H.
    Lee Utilizing the Internet of Things (IoT) to develop a remotely monitored autonomous
    floodgate for water management and control Water, 12 (2020), p. 502, 10.3390/w12020502
    Google Scholar Idoje et al., 2021 G. Idoje, T. Dagiuklas, M. Iqbal Survey for
    smart farming technologies: challenges and issues Comput. Electr. Eng., 92 (2021),
    Article 107104, 10.1016/j.compeleceng.2021.107104 View PDFView articleView in
    ScopusGoogle Scholar Kamienski et al., 2019 C. Kamienski, J.-P. Soininen, M. Taumberger,
    R. Dantas, A. Toscano, T. Salmon Cinotti, R. Filev Maia, A. Torre Neto Smart water
    management platform: IoT-based precision irrigation for agriculture Sensors, 19
    (2019), p. 276, 10.3390/s19020276 View in ScopusGoogle Scholar Khan et al., 2021
    N. Khan, R.L. Ray, H.S. Kassem, S. Hussain, S. Zhang, M. Khayyam, M. Ihtisham,
    S.A. Asongu Potential role of technology innovation in transformation of sustainable
    food systems: a review Agriculture, 11 (2021), p. 984, 10.3390/agriculture11100984
    View in ScopusGoogle Scholar Lindgren et al., 2018 E. Lindgren, F. Harris, A.D.
    Dangour, A. Gasparatos, M. Hiramatsu, F. Javadi, B. Loken, T. Murakami, P. Scheelbeek,
    A. Haines Sustainable food systems-a health perspective Sustain Sci, 13 (2018),
    pp. 1505-1517, 10.1007/s11625-018-0586-x View in ScopusGoogle Scholar Lloret et
    al., 2021 J. Lloret, S. Sendra, L. Garcia, J.M. Jimenez A wireless sensor network
    deployment for soil moisture monitoring in precision agriculture Sensors, 21 (2021),
    p. 7243, 10.3390/s21217243 View in ScopusGoogle Scholar Morchid et al., 2024 A.
    Morchid, R. El Alami, A.A. Raezah, Y. Sabbar Applications of internet of things
    (IoT) and sensors technology to increase food security and agricultural sustainability:
    benefits and challenges Ain Shams Eng. J., 15 (2024), Article 102509, 10.1016/j.asej.2023.102509
    View PDFView articleView in ScopusGoogle Scholar Morchid et al., 2021 Morchid,
    A., El Alaoui, M., El Alami, R., Qjidaa, H., El Khadiri, K., Mehdaoui, Y., 2021.
    Design and Realization of Fire Safety System for Controlling and Monitoring a
    Siren Using Arduino Uno, in: Motahhir, S., Bossoufi, B. (Eds.), Digital Technologies
    and Applications, Lecture Notes in Networks and Systems. Springer International
    Publishing, Cham, pp. 433–445. https://doi.org/10.1007/978-3-030-73882-2_40. Google
    Scholar Morchid et al., 2022 Morchid, A., El Alami, R., Qjidaa, H., El Alaoui,
    M., Touati, H., El Khadiri, K., Ouazzani-Jamil, M., 2022. Fire Safety System Implementation
    for Controlling and Monitoring a Siren in Smart Farm Using Gas Sensor and Flame
    Sensor, in: Motahhir, S., Bossoufi, B. (Eds.), Digital Technologies and Applications,
    Lecture Notes in Networks and Systems. Springer International Publishing, Cham,
    pp. 733–742. https://doi.org/10.1007/978-3-031-01942-5_73. Google Scholar Munir
    et al., 2021 M.S. Munir, I.S. Bajwa, A. Ashraf, W. Anwar, R. Rashid Intelligent
    and smart irrigation system using edge computing and IoT Complexity, 2021 (2021),
    p. e6691571 Google Scholar Ndunagu et al., 2022 J.N. Ndunagu, K.E. Ukhurebor,
    M. Akaaza, R.B. Onyancha Development of a wireless sensor network and IoT-based
    smart irrigation system Appl. Environ. Soil Sci., 2022 (2022), p. e7678570 Google
    Scholar Ojha et al., 2015 T. Ojha, S. Misra, N.S. Raghuwanshi Wireless sensor
    networks for agriculture: the state-of-the-art in practice and future challenges
    Comput. Electron. Agric., 118 (2015), pp. 66-84, 10.1016/j.compag.2015.08.011
    View PDFView articleView in ScopusGoogle Scholar Olisa et al., 2021 S.C. Olisa,
    C.N. Asiegbu, J.E. Olisa, B.O. Ekengwu, A.A. Shittu, M.C. Eze Smart two-tank water
    quality and level detection system via IoT Heliyon, 7 (2021), p. e07651 View PDFView
    articleView in ScopusGoogle Scholar Pasika and Gandla, 2020 S. Pasika, S.T. Gandla
    Smart water quality monitoring system with cost-effective using IoT Heliyon, 6
    (2020), p. e04096 View PDFView articleView in ScopusGoogle Scholar Pathak et al.,
    2019 Pathak, A., AmazUddin, M., Abedin, Md.J., Andersson, K., Mustafa, R., Hossain,
    M.S., 2019. IoT based Smart System to Support Agricultural Parameters: A Case
    Study. Procedia Computer Science, The 16th International Conference on Mobile
    Systems and Pervasive Computing (MobiSPC 2019), The 14th International Conference
    on Future Networks and Communications (FNC-2019), The 9th International Conference
    on Sustainable Energy Information Technology 155, 648–653. https://doi.org/10.1016/j.procs.2019.08.092.
    Google Scholar Pramanik et al., 2022 M. Pramanik, M. Khanna, M. Singh, D.K. Singh,
    S. Sudhishri, A. Bhatia, R. Ranjan Automation of soil moisture sensor-based basin
    irrigation system Smart Agric. Technol., 2 (2022), Article 100032, 10.1016/j.atech.2021.100032
    View PDFView articleView in ScopusGoogle Scholar Rahman et al., 2020 M.W. Rahman,
    M.E. Hossain, R. Islam, M.H.A. Rashid, M.N.A. Alam, M.M. Hasan Real-time and Low-cost
    IoT based farming using raspberry Pi Indones. J. Electr. Eng. Comput. ScienCe,
    17 (2020), pp. 197-204 https://doi.org/10.11591/ijeecs.v17.i1.pp197-204 View in
    ScopusGoogle Scholar Saleem et al., 2021 M.H. Saleem, J. Potgieter, K.M. Arif
    Correction to: automation in agriculture by machine and deep learning techniques:
    a review of recent developments Precis. Agric., 22 (2021), pp. 2092-2094, 10.1007/s11119-021-09824-9
    View in ScopusGoogle Scholar Subeesh and Mehta, 2021 A. Subeesh, C.R. Mehta Automation
    and digitization of agriculture using artificial intelligence and internet of
    things Artif. Intell. Agric., 5 (2021), pp. 278-291, 10.1016/j.aiia.2021.11.004
    View PDFView articleView in ScopusGoogle Scholar Talaviya et al., 2020 T. Talaviya,
    D. Shah, N. Patel, H. Yagnik, M. Shah Implementation of artificial intelligence
    in agriculture for optimisation of irrigation and application of pesticides and
    herbicides Artif. Intell. Agric., 4 (2020), pp. 58-73 View PDFView articleView
    in ScopusGoogle Scholar Tham et al., 2022 P.E. Tham, Y.J. Ng, N. Vadivelu, H.R.
    Lim, K.S. Khoo, K.W. Chew, P.L. Show Sustainable smart photobioreactor for continuous
    cultivation of microalgae embedded with internet of things Bioresour. Technol.,
    346 (2022), Article 126558, 10.1016/j.biortech.2021.126558 View PDFView articleView
    in ScopusGoogle Scholar Tiglao et al., 2020 N.M. Tiglao, M. Alipio, J.V. Balanay,
    E. Saldivar, J.L. Tiston Agrinex: a low-cost wireless mesh-based smart irrigation
    system Measurement, 161 (2020), Article 107874, 10.1016/j.measurement.2020.107874
    View PDFView articleView in ScopusGoogle Scholar Weersink et al., 2018 A. Weersink,
    E. Fraser, D. Pannell, E. Duncan, S. Rotz Opportunities and challenges for big
    data in agricultural and environmental analysis Ann. Rev. Resour. Econ., 10 (2018),
    pp. 19-37, 10.1146/annurev-resource-100516-053654 View in ScopusGoogle Scholar
    Zervopoulos et al., 2020 A. Zervopoulos, A. Tsipis, A.G. Alvanou, K. Bezas, A.
    Papamichail, S. Vergis, A. Stylidou, G. Tsoumanis, V. Komianos, G. Koufoudakis,
    K. Oikonomou Wireless sensor network synchronization for precision agriculture
    applications Agriculture, 10 (2020), p. 89, 10.3390/agriculture10030089 View in
    ScopusGoogle Scholar Cited by (0) © 2024 The Authors. Production and hosting by
    Elsevier B.V. on behalf of King Saud University. Recommended articles IoT-digital
    twin-inspired smart irrigation approach for optimal water utilization Sustainable
    Computing: Informatics and Systems, Volume 41, 2024, Article 100947 Ankush Manocha,
    …, Munish Bhatia View PDF Possibilities and limits of modelling of long-range
    economic consequences of air pollution – A case study Heliyon, Volume 10, Issue
    4, 2024, Article e26483 Zoltán Lakner, …, Viktória Molnár View PDF Crop mapping
    in smallholder farms using unmanned aerial vehicle imagery and geospatial cloud
    computing infrastructure Heliyon, Volume 10, Issue 5, 2024, Article e26913 Shaeden
    Gokool, …, Tafadzwanashe Mabhaudhi View PDF Show 3 more articles About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Journal of the Saudi Society of Agricultural Sciences
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'High-technology agriculture system to enhance food security: A concept of
    smart irrigation system using Internet of Things and cloud computing'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Akbari M.
  - Syed A.
  - Kennedy W.S.
  - Erol-Kantarci M.
  citation_count: '0'
  description: In the midst of rising global population and environmental challenges,
    smart agriculture emerges as a vital solution by integrating advanced technologies
    to optimize agricultural practices. Through data-driven insights and automation,
    it tackles the necessity for sustainable resource management, enhancing productivity
    and resilience in the face of complex food security and ecological concerns. The
    prospects of utilizing the Internet of Things (IoT) for smart agriculture are
    tremendous, where many IoT devices can be deployed for local environment monitoring,
    precision farming, autonomous irrigation, and, soil management. In some use cases
    like smart monitoring and agrochemical applications, UAV-enabled mobile-edge computing
    (MEC) is proposed as an enabler to provide IoT nodes with additional resources
    by hosting their computation functions. From the implementation perspective, to
    flexibly manage the computation functions in UAVs and/or MEC server, the emerging
    network function virtualization (NFV) can be utilized. However, efficient orchestration
    of the virtualized functions would be a challenge. In this paper, we consider
    a decentralized UAV-aided MEC system for smart agricultural applications in which
    the processing nodes benefit from the NFV technology. We aim to propose a method
    for efficiently orchestrating the NFVs while some important metrics are minimized,
    i.e., the age of information (AoI) and total network energy consumption. Especially,
    we consider the case in which the network state is not fully observable to the
    orchestrator or the observations are exposed to uncertainties. Consequently, the
    problem is formulated as a decentralized partially observable Markov decision
    process (DEC-POMDP). As the formulated problem is NP-complete, we exploit some
    structural features of the proposed scheme to introduce the concept of symmetry
    and simplify the problem. Then, a novel decentralized federated learning-based
    solution is proposed to solve the problem. Simulation results show the effectiveness
    of the proposed approach in minimizing the total network energy consumption and
    achieving AoI values less than 200:msec to support demanding real-time applications.
  doi: 10.1109/OJCOMS.2024.3363132
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Open Journal of the Comm...
    >Volume: 5 AoI-Aware Energy-Efficient SFC in UAV-Aided Smart Agriculture Using
    Asynchronous Federated Learning Publisher: IEEE Cite This PDF Mohammad Akbari;
    Aisha Syed; W. Sean Kennedy; Melike Erol-Kantarci All Authors 79 Full Text Views
    Open Access Under a Creative Commons License Abstract Document Sections I. Introduction
    II. Related Works III. System Model IV. Problem Formulation V. DEC-POMDP Formulation
    Show Full Outline Authors Figures References Keywords Metrics Footnotes Abstract:
    In the midst of rising global population and environmental challenges, smart agriculture
    emerges as a vital solution by integrating advanced technologies to optimize agricultural
    practices. Through data-driven insights and automation, it tackles the necessity
    for sustainable resource management, enhancing productivity and resilience in
    the face of complex food security and ecological concerns. The prospects of utilizing
    the Internet of Things (IoT) for smart agriculture are tremendous, where many
    IoT devices can be deployed for local environment monitoring, precision farming,
    autonomous irrigation, and, soil management. In some use cases like smart monitoring
    and agrochemical applications, UAV-enabled mobile-edge computing (MEC) is proposed
    as an enabler to provide IoT nodes with additional resources by hosting their
    computation functions. From the implementation perspective, to flexibly manage
    the computation functions in UAVs and/or MEC server, the emerging network function
    virtualization (NFV) can be utilized. However, efficient orchestration of the
    virtualized functions would be a challenge. In this paper, we consider a decentralized
    UAV-aided MEC system for smart agricultural applications in which the processing
    nodes benefit from the NFV technology. We aim to propose a method for efficiently
    orchestrating the NFVs while some important metrics are minimized, i.e., the age
    of information (AoI) and total network energy consumption. Especially, we consider
    the case in which the network state is not fully observable to the orchestrator
    or the observations are exposed to uncertainties. Consequently, the problem is
    formulated as a decentralized partially observable Markov decision process (DEC-POMDP).
    As the formulated problem is NP-complete, we exploit some structural features
    of the proposed scheme to introduce the concept of symmetry and simplify the problem.
    Then, a novel decentralized federated learning-based solution is proposed to solve
    the problem. Simulation... (Show More) Published in: IEEE Open Journal of the
    Communications Society ( Volume: 5) Page(s): 1222 - 1242 Date of Publication:
    07 February 2024 Electronic ISSN: 2644-125X DOI: 10.1109/OJCOMS.2024.3363132 Publisher:
    IEEE Funding Agency: SECTION I. Introduction Smart farming in the contemporary
    world has gained paramount importance while playing a pivotal role in revolutionizing
    agricultural practices [1]. Conversely, the increasing global population along
    with environmental challenges have made the adoption of smart farming techniques
    indispensable. By leveraging data-driven insights, automation, and precision agriculture,
    smart farming not only enhances productivity but also addresses the pressing need
    for sustainable resource management [2]. On the other hand, the Internet of Things
    (IoT) has been a promising technology to provide connection among a large volume
    of devices that are deployed to provide a specific service for smart agriculture.
    A wide range of different use cases such as smart greenhouse monitoring, pest
    control, and irrigation/soil management can be considered [1], [3]. These use
    cases are mostly computation intensive and delay-sensitive [1], [4], [5]. A large
    volume of connected devices implies a large volume of data that must be processed
    accurately in a timely manner [6]. Such data computation and analysis demands
    a significant amount of processing and storage resources which put a constraint
    on energy-limited IoT devices. Depending on the specific application, the aggregated
    data from monitoring sensors, and captured images/videos from installed cameras
    in the field need to be processed in real-time to turn raw data into usable information.
    Introducing IoT and its applications in modern agriculture provides this industry
    with suitable tools to support farmers for better productivity, quality, and profitability
    [1]. Therefore, the scope of IoT extends beyond just agricultural land, encompassing
    a broader spectrum that includes the supply chain as well [7], [8]. Battery-operated
    IoT devices lack the capability to perform energy-intensive computations independently.
    Additionally, they face challenges related to limited processing power and storage
    capacity [9]. Therefore, MEC is proposed as a promising technology to address
    these limitations by offering additional computation and storage resources for
    IoT systems. This is achieved by providing servers where IoT devices can offload
    their computation tasks [10], [11]. On the other hand, large-scale agricultural
    operations often involve the distribution of IoT devices across expansive areas.
    In such scenarios, challenges may emerge concerning communication, particularly
    with issues related to the limited reachability between IoT devices and MEC infrastructure.
    To address these challenges, a proposed solution involves the integration of a
    network comprising unmanned aerial vehicles (UAVs) to enhance the capabilities
    of MEC [12], [13]. This approach aims to mitigate communication limitations stemming
    from the constrained transmission power of IoT devices and simultaneously improve
    network coverage. Due to the easy-to-deploy, cost-effective, and strong capabilities
    of the UAVs, UAV-aided MEC has attracted much attention and is widely utilized
    in smart agriculture to provide a high-quality line-of-sight (LoS) link to IoT
    devices [1], [3], [5], [14], [15], [16], [17]. The versatility and mobility exhibited
    by UAVs in response to changing weather conditions, alongside their straightforward
    deployment and economically viable maintenance costs, collectively establish UAVs
    as a proficient solution for supplying IoT devices with the necessary resources.
    Nevertheless, the UAVs themselves are quite often battery-powered which means
    their available energy is limited [6]. 1) Age of Information Besides energy, the
    freshness of information is another important aspect that needs to be considered
    in environmental monitoring and smart agriculture applications in which rapid
    protective and/or recovery actions are needed. Being more specific, within the
    realm of environmental monitoring applications and precision farming [18] in a
    UAV-aided MEC network, the IoT devices are strategically dispersed throughout
    specified regions to seamlessly gather real-time environmental data. Then the
    collected and pre-processed data by the UAVs finds its transmission route toward
    a localized MEC server; where a comprehensive analysis is conducted to facilitate
    the extraction of pertinent insights. These insights, in turn, play a pivotal
    role in fostering prompt agricultural decision-making and actions. The objectives
    can be the refinement of operations, the performance optimization, or the reduction
    of expenditure [1], [14], [19]. This expansion of smart agriculture’s scope ensures
    a secure and sustainable food supply chain, underpinned by contextual and situational
    awareness derived from real-time event processing [20]. Accordingly, such applications
    are characterized by their intensive computational demands and time-sensitive
    nature [1], [3], [5], [14], [18]. Concisely, the freshness of information becomes
    a critical factor that demands careful consideration. Packet delay and inter-delivery
    times, as two exemplary metrics that are commonly used to quantify the performance
    of real-time applications, are not adequate to represent the freshness of information
    received at the destination. Recently, age of information (AoI) has been proposed
    as a novel criterion to quantitatively evaluate the freshness of information [6],
    [17], [21]. For a flow of data packets, and with emphasis on the freshness of
    data at the destination, AoI is defined as the time elapsed from receiving the
    most recent packet belonging to that data-packet flow [22], [23]. 2) Network Function
    Virtualization (NFV) From the above discussion, in the context of UAV-enabled
    smart agriculture paradigm – which constitutes the focal point of this paper –
    UAVs are confronted with a substantial amount of data necessitating prompt processing.
    This scenario embodies a dynamic computational framework wherein a bunch of processing
    functions demands seamless implementation across both the UAVs and the local server
    [20], [24], [25]. NFV is a key technology for implementing and managing computing
    machines in a reliable, efficient, and robust manner [26]. The NFV virtualizes
    the network functions (NFs) and abstracts them from the physical hardware, which
    enables rapid service function chaining (SFC) and service provisioning in UAV-aided
    MEC applications [27]. Considering the data-intensive and computation-based application
    of smart agriculture, multiple computing functions in the form of virtual network
    functions (VNF) should be deployed sequentially and orderly to provide the processed
    data for the final decision-making at the local MEC-server. Utilizing NFV significantly
    enhances the agility in deploying and managing network components and improves
    the robustness and scalability of networks [27], [28]. Therefore, a critical challenge
    to address is the optimal and efficient placement of Virtual Network Functions
    (VNFs) and determining how to route information packets among VNF components over
    the available NFV infrastructure, i.e., UAVs and the MEC server. The decision
    to distribute and allocate VNFs between both UAVs and the server, rather than
    solely on one of them, aligns with the primary goal of the proposed scheme—to
    minimize the Age of Information (AoI) while maintaining energy efficiency. Network
    traffic and the workload on both UAVs and MEC servers fluctuate over time, while
    changing channel conditions between the parties necessitate adjustments in the
    required communication resources for packet forwarding. Furthermore, certain processing
    functions, such as compression, may alter the packet size, so the trade-off of
    performing these functions locally and sending the smaller packets with spending
    fewer communication resources versus doing the entire processing locally becomes
    pivotal. Consequently, the placement must dynamically adjust to new conditions
    to ensure the minimization of AoI and energy efficiency [28]. In light of this,
    a general condition has been considered where the VNFO can, depending on network
    conditions (processing node resources, service type, and channel conditions),
    decide on the optimal placement to minimize AoI and energy consumption. The work
    presented in [24] is a use-case of the practical implementation of smart agriculture
    in real-world contexts; where, the authors leverage a confluence of cloud computing,
    edge computing, and NFV technology to conceive a comprehensive framework tailored
    to the essential demands of soilless precision farming practiced within a fully-recirculating
    greenhouse [24]. 3) Federated Reinforcement Learning (FRL) The VNF placement and
    scheduling in our network settings can be expressed as integer programming with
    some constraints that reflect the service requirements and the network infrastructure’s
    restrictions. Nevertheless, this problem is NP-complete and there is no standard
    solver that can solve such problems in polynomial time [29], especially for large-scale
    networks where the required computation to find the optimal solution increases
    exponentially. Recently, machine learning algorithms and artificial intelligent
    (AI) based solutions appear as a viable way to solve such complex problems in
    polynomial time [17], [29], [30]. Since its inception in 2017 [31], Federated
    Learning (FL) has reshaped many emerging intelligent IoT systems toward advanced
    FL architecture. The distributed nature of FL, where some agents cooperatively
    train a global ML model without directly sharing the local data, makes FL an attractive
    alternative to traditional centralized ML schemes. To be more specific, FL by
    pushing intelligent ML functions to the network edge enhances the privacy and
    scalability of IoT applications and networks [30]. In this paper, our focus is
    on use cases in smart agriculture that require live streaming and analysis, such
    as surveillance and environmental monitoring. Specifically, we address the flexible
    dynamic orchestration of NFV-enabled SFCs within the context of delay-sensitive
    services. The approach involves distributing VNFs across processing nodes, utilizing
    UAVs and local MEC server in a UAV-aided MEC network. The objective is to perform
    SFC while ensuring the freshness of information by jointly minimizing AoI and
    total energy consumption throughout the network. Condensing the system model and
    the definition of the problem, we present the following key insights: In the realm
    of smart agriculture applications, real-time information is collected by IoT devices
    on a smart farm and transmitted through hovering UAVs to the local server. VNFs
    must be executed sequentially on the raw packets, as they represent split functionalities
    of a single processing job. Meanwhile, certain VNFs, such as compression, may
    potentially alter packet sizes. Various service types are assumed, each with its
    specific VNF chain. The challenge involves determining the optimal placement and
    scheduling of VNF chains on processing nodes (UAVs and the local server), accounting
    for processing time, transmission delay, and power consumption (both transmit
    and processing power) in a distributed manner. We will demonstrate analytically
    that the problem: Exhibits circular symmetry, wherein the optimal policies of
    the agents (UAVs) are identical. The local observations of the agents serve as
    sufficient statistics for determining the optimal policy, We will show how these
    two features will simplify the problem significantly. Subsequently, we present
    a novel solution for solving the modeled problem. The main contributions of our
    paper are summarized as follows: To the best of our knowledge this is the first
    time that the problem of dynamic orchestration of NFV-enabled SFCs in a multi-hop
    UAV-aided MEC network for smart agriculture is considered, while the problem is
    formulated as a joint AoI and Energy minimization. We formulate this joint optimization
    problem as a decentralized partially observable MDP (DEC-POMDP), where the parties
    are not aware of the true state and just make decisions based on their local observations.
    We adopted the structural feature of the problem and have analytically shown that
    under the satisfaction of certain symmetry conditions, the local observation of
    the parties (agents) would be a sufficient statistic for determining the optimal
    solution. As the formulated problem is NP-complete, we proposed a novel FL-based
    algorithm called Asynchronous FL Deep Q-Network (AFDQN) in which a set of distributed
    parties learn in parallel and aggregate their own experience through a coordinator.
    A Multi-hop network is considered, where the UAVs can offload their computing
    tasks to the other UAVs as well as the local MEC server. The rest of the paper
    is organized as follows: In Section II some state-of-the-art studies will be reviewed.
    Section III describes the system model and the main components of the system in
    detail. Section IV presents the problem definition and formulation. In Section
    V, the problem is expressed as a DEC-POMDP, and some analytical results are given
    that support our proposed FL-based solution presented in Section VI. The complexity
    analysis of the proposed algorithm is presented in Section VII. The effectiveness
    and performance of the proposed scheme is demonstrated in Section VIII. Finally,
    Section IX concludes the paper. SECTION II. Related Works In this section, we
    review some state-of-the-art studies on AoI and energy-aware UAV-aided MEC for
    smart agriculture. The prospects of using UAVs for smart agriculture are immense.
    Moreover, UAVs are easy to deploy and cost-effective which motivates their use
    in smart agriculture [1], [6], [32]. For a comprehensive survey on IoT-based smart
    agriculture and the emerging technologies mentioned in the previous section refer
    to [1]. In [13], Mozaffari et al. have considered the reliable design of IoT’s
    uplink communication in a scenario in which multiple UAVs are deployed to collect
    data from ground IoT devices. In particular, a framework for jointly optimizing
    the trajectory of the UAVs, IoT-to-UAV association, and IoT’s uplink power is
    proposed with the aim of minimizing the total energy consumption and mobility
    of the UAVs. However, in the formulated problem, the delay of the forwarded data
    across the UAV network is not considered. Nguyen et al. [5] have considered this
    issue as the problem of processing deadline-critical tasks which are fed to a
    network of hovering UAVs that support the IoT devices deployed in a smart farm.
    It is assumed that the smart farm is equipped with a multi-access MEC infrastructure.
    In such a circumstance, the energy-efficient monitoring problem is modeled as
    a multi-objective maximization problem which aims to maximize the number of tasks
    that are successfully processed before their deadline. Then, a Q-Learning-based
    solution is proposed to solve the problem. The same authors in [5] have extended
    their proposed scheme to a DQN-based solution [33] and to a multi-actor-based
    risk-sensitive RL approach [32]. Although, the goal of the aforementioned studies
    is to minimize the energy consumption in the network, however, the proposed solutions
    are basically centralized and the communication overhead of the centralized approaches
    is itself a source of energy waste. The AoI as a metric for determining the freshness
    of information has been used in some recent works On UAV-aided IoT networks [6],
    [17], [23], [34], [35]. Buyukates and Ulukus [34] examined a status update system
    where update packets require processing to extract embedded useful information.
    The source node sends information to a computation unit (CU) with a master node
    and worker nodes. The master node assigns tasks, aggregates results, and sends
    them back to the source node for updating. The analysis focuses on the age performance
    of various schemes in the presence of stragglers, considering i.i.d. exponential
    transmission delays and i.i.d. shifted exponential computation times. Then, the
    best scheme that minimizes the average age is presented. In [35], the authors
    analyzed the average age of information (AoI) and average peak AoI (PAoI) in a
    multiuser Mobile Edge Computing (MEC) system. The system considers three computing
    schemes: local computing, edge computing, and partial computing (where the computational
    tasks are partially performed at the edge and the remaining is performed by the
    local server). To address the complexity, upper and lower bounds on average AoI
    are provided, enabling an examination of optimal offloading decisions based on
    MEC system parameters. In [6], Han et al. modeled a UAV-aided IoT network using
    a Markov chain. The freshness of data packets is defined using AoI and they analyzed
    the IoT devices as first-come-first-served (FCFS) model and M/M/1 queue. Sun et
    al. [17], employed AoI to propose an AoI-energy-aware data collection scheme for
    IoT networks in which the UAVs are used to collect data. Here, AoI is used to
    quantify the temporal correlation among data packets. Then, an algorithm for determining
    the UAV’s flight speed, hovering locations, and allocated bandwidth to IoT devices
    is proposed that jointly minimizes energy consumption and the weighted sum of
    expected average AoI in the network. In [23], a UAV-aided wireless powered IoT
    scheme is proposed, where a UAV flies from a data center toward IoT sensory nodes
    to transfer energy and collect their information and then it returns back to the
    data center. The goal is to minimize the average AoI of the collected data from
    sensor modes. For such circumstances, an optimization problem is formulated, and
    then a suboptimal method is proposed that first decomposes the problem into two
    subproblems. The solution to the first subproblem is the input for the second
    subproblem. It is worth mentioning that the AoI is basically an end-to-end metric;
    Hence, even though the aforementioned works try to minimize the AoI, for the use
    cases in smart agriculture that the captured data needs some live processing before
    being turned into useful information, these approaches are not effective as they
    just consider the problem of finding the best data flow path. In the context of
    UAV-aided MEC for IoT networks, each service can be represented as a service function
    chain (SFC) consisting of ordered processing functions in the form of VNFs that
    can be geographically placed on to local MEC-server or the UAVs. However, in a
    network with numerous IoT devices and dynamic network load, the placement of VNF
    instances and routing among them in an optimal and efficient manner is a challenging
    problem [27], [28]. In the literature, this problem is referred to as the SFC
    dynamic orchestration problem (SFC-DOP) [27]. In [27], Liu et al. presented a
    DRL-based framework for dynamic SFC orchestration in IoT networks. Huang et al.
    in [36] dealt with the problem of scalability and flexibility of static orchestration
    of NFV-enabled SFCs. Then, a FL-based SFC orchestration is proposed which is scalable
    and benefits from low communication cost. Table 1 presents an overview of the
    previously mentioned studies, emphasizing the main topics they concentrated on.
    Although, in the literature, the UAV-aided MEC architecture is mainly proposed
    as a technique to compensate for the energy and computational limitations of IoT
    networks, however, existing solutions for NFV-enabled SFC require IoT nodes to
    exchange large volumes of local data with a centralized server or among the distributed
    agents. Considering the energy limitation of IoT devices and battery-powered UAVs,
    this significantly causes waste of the network energy. In this paper, we deal
    with this inconsistency and propose a novel FL-based solution for the dynamic
    orchestration of SFCs in a multi-hop and UAV-aided MEC network. To the best of
    our knowledge, this is the first time that the problem of dynamic orchestration
    of NFV-enabled SFCs in a multi-hop UAV-aided MEC network is considered. What makes
    our approach unique is the adoption of the inherent structural aspects of the
    problem, typical in most scenarios, to introduce a decentralized solution that
    is analytically demonstrated to be valid. The proposed method is asynchronous
    FL-based, enabling distributed parties to independently learn locally and subsequently
    contribute to the training of the global model asynchronously [38], [39]. In other
    words, the parties are allowed to directly share gradients with the coordinator
    (here, the MEC server) after every local update and asynchronous of the other
    parties. This further enhances the training speed and efficiency of our proposed
    approach [39]. The coordinator in turn can perform the aggregation and update
    the global model whenever an update from one of the distributed parties is received.
    This approach improves the whole system’s scalability and alleviates the straggler
    impact, i.e., users who may have slower performance [38]. TABLE 1 Summary of Related
    Works The following notations are used throughout the remainder of the paper.
    Matrices and sets are denoted by Bold upper-case characters, and vectors are denoted
    by bold lower-case characters. The cardinality of a set A is represented by |A|
    . The expected value of random variable X is denoted by E[X] . The indicator function
    1 A (a) is defined as 1 A (a)=1 if the element a belongs to A , and 1 A (a)=0
    if the element a does not belong to A . SECTION III. System Model A. General Description
    We consider a real-time IoT network for smart agriculture applications, where,
    the IoT network provides real-time monitoring and visibility to network operators
    by video/image streaming. For such circumstances, several use cases from remote
    monitoring to security can be considered. As it is depicted in Fig. 1, a set N
    of N IoT devices collect real-time information from a smart farm and send the
    packets to a local server. A UAV-aided MEC architecture is considered, where packets
    are forwarded through an Aerial Network consisting of U hovering UAVs toward the
    local server. We consider applications in which some processing functions, from
    primary processes (e.g., compression) to advanced ones (e.g., object recognition)
    must be sequentially performed on the raw packets. Each IoT device is associated
    with one of the UAVs in its range. U denote the set of all U UAVs in the network.
    The local server is indeed a MEC-server1 denoted by M . A set S={ S k } K k=1
    with |S|=K different service types is assumed. Each service type S k itself consists
    of a set F k ={ F k f } F k f=1 including F k different processing functions that
    should be performed on the packets of that service and F denotes a set of all
    processing functions of all services, F= ⋃ k∈S ( F k ) . The input and output
    packet sizes of the function f of service type k are ρ k f and ϱ k f , respectively.
    FIGURE 1. System model. Show All Let s k n ∈{0,1} denote the service type k∈S
    in IoT node n∈N is active, s k n =1 , or not, s k n =0 . In each IoT node one
    of the K different services is running, ∑ k∈S s k n =1,∀n∈N . To perform the processing
    functions, the MEC-server M and each UAV u is able to run F= ∑ k∈S F k different
    VNF types on their physical computing machine.2 The proposed architecture is based
    on ETSI-NFV standard [40] which is a globally accepted architecture for implementing
    the NFV. According to ETSI-NFV, in each physical machine (processing node) p∈U∪M
    (All U UAVs and the local server M), the VNF manager (VNFM) is responsible to
    manage its computing and storage resources among the VNFs it hosts. The total
    available resources at processing node p is indicated by C p , the computing capacity
    in Hz, and B p , the memory capacity in Byte. The VNF orchestrator (VNFO), hosted
    by the local server, places and schedules the chain of VNFs through Aerial Domain
    and Local (MEC) Server. For a summary of the key symbols and variables used in
    the system model and problem formulation, refer to Table 2. TABLE 2 Key Symbols
    and Variables B. VNF Placement and Scheduling We consider a discrete-time system
    with two hierarchical timing levels. First, the time is divided into equal time
    slots TS with duration T indexed by t=1,2,… . On top of that, we have the VNF-scheduling
    time slots t ~ with duration T ˜ that is multiples of T , and it is a single round
    of VNF placement and scheduling update. At the beginning of each time slot t ~
    , the VNFO updates the VNF placements. Each UAV u segregates data packets from
    IoT nodes sharing the same service type, say k , into a packet-flow Υ k u (t)
    , which it then transmits across the aerial network to the local server. The set
    F k ={ V fk } F k f=1 of F k different VNFs (processing functions) must be performed
    on data packets of the IoT nodes with service type k . At the beginning of each
    VNFO-level time slot t ~ , the VNFO determines the set of processing nodes Δ k
    u ( t ~ ) that participate in serving the k th service packet-flow Υ k u (t) of
    UAV u at t th TS. Each selected processing node p∈U∪M that belongs to Δ k u (
    t ~ ) performs a subset B k up ( t ~ ) of all functions F k that is supposed to
    be performed on the packet flow of service type k belongs to UAV u : B k up (
    t ~ )={ F k f  :  f ˙ k up ≤f≤ f ¨ k up }, B k up ( t ~ )⊆ F k , (1) View Source
    where f ˙ k up (S) and f ¨ k up (E) are the first and the last function (VNF)
    that p performs on the packet flow of service type k of UAV u . In summary, for
    each packet-flow Υ k u (t) , the VNFO selects and schedules the processing nodes
    that handle F k . These nodes can be each one of any other UAVs (intra-domain
    offloading) or local server (inter-domain offloading). Remark 1:Let P to−do p
    ( t ~ )={(u,k,f) : f∈ F k u is running on p} indicate a set of all assigned VNFs
    to the processing node p∈U∪M . We assume all assigned VNFs P to−do p ( t ~ ) to
    processing node p should be finished in a single round of VNF scheduling t ~ .
    Fig. 2 provides a comprehensive representation of crucial elements related to
    the proposed orchestration solution and the communication dynamics within the
    network. Operating at two distinct timing levels, the figure elucidates: 1) The
    VNFO timing (Tier 1), emphasizing interactions pivotal for establishing the proposed
    orchestration solution, and 2) the network-wide communication (Tier 2), encompassing
    all entities within the network. FIGURE 2. Network-wide timing model. Show All
    The upper segment of the figure illustrates how UAV 1 manages received packet
    flows from IoT nodes, accommodating two distinct service types. Following the
    assumed VNFO policy in a single round of VNF placement and scheduling, it is evident
    that for packets of service type 1, UAV1 processes them and subsequently forwards
    them to UAV3. UAV3, after performing the assigned VNFs, then forwards the packets
    to the local server, i.e., the final destination. Conversely, for packets of service
    type 2, UAV1 initiates some initial processing and then directly forwards them
    to the local server, where all remaining VNFs are executed. The lower section
    of the figure is dedicated to illustrating VNFO level operation, depicting control
    packets exchanged between the local server and agents for the training of the
    VNFO model. Further clarification on this VNFO communication is postponed to subsequent
    sections within the article. C. Communication (Access) Network There are three
    communication links among the network nodes: the wireless links between IoT nodes
    and an aerial network consisting of UAVs, the UAV-to-UAV wireless links, and the
    wireless link between the UAVs and the local terrestrial server. Let random process
    g nu (t)∈C denote the channel loss between IoT node n∈N and UAV u∈U , then the
    achievable bit rate of node n in up-link direction at time instant t will be R
    nu (t)= w n log 2 (1+ p nu | g nu (t)| σ 2 ),∀n∈N,u∈U , where w n and σ 2 denote
    the channel bandwidth of IoT device n and the noise variance, respectively, and
    p nu is the transmission power level. The channel between IoT nodes and UAVs and
    between UAVs and the local server can be modeled as an air-to-ground channel model
    [41]. According to this model, the path loss, g nu can be calculated as [37],
    g nu (t)= ( 4πf c ) 2 d 2 (t) η e , (2) View Source where f , c , and d are frequency
    of operation, speed of light, and distance between the transmitter and receiver,
    respectively; and η e is the average of excessive path loss in two cases of existing
    a LoS path, η LoS e , and non-LoS case, η nLoS e , η e = p LoS × η LoS e +(1−
    p LoS )× η nLoS e , (3) View Source where p LoS is the probability that a LoS
    path exists and can be closely approximated as [37], p LoS = 1 1+aexp−b(ψ−a) ,
    (4) View Source where, a and b are environment-related parameters. Similarly,
    in the downlink direction, the achievable bit rate of the link between UAV u∈U
    and MEC server M at time instant t will be R uM (t)= w uM log 2 (1+ p uM | g uM
    (t)| σ 2 ),∀u∈U , where w uM denotes the channel bandwidth, σ 2 is the noise variance,
    p uM is the transmission power level, and random process g uM (t)∈C denotes the
    channel Loss at time t . Finally, the UAV-to-UAV wireless channel also follows
    the same mathematical model, however, the only difference is that the probability
    of existing LoS is equal to 1, p LoS =1 . For each UAV u and service type k ,
    τ k u (t) is defined as the expectation value of IoT access network delay with
    respect to transmission rate R nu (t) , τ k u (t)= E R nu [ τ k nu (t)], τ k nu
    (t)= D nu /C+ Λ k nu / R nu (t), (5) View Source where, E R nu denotes the expectation
    with respect to R nu , D nu is distance between IoT node n∈N and UAV u∈U and Λ
    k nu is the packet length of service type S k ∈S . For the aerial radio links,
    Let random process g u u ´ (t)∈C denote the channel power gain between UAV u∈U
    and UAV (or local server M) u ´ ∈U∪M , then the achievable bit rate of the link
    at time instant t will be R u u ´ = w u u ´ log 2 (1+ p u u ´ | g u u ´ (t)| σ
    2 ),∀n∈N,u∈U∪M , where w u u ´ denote the channel bandwidth between UAV u , and
    UAV (or local server) u ´ , σ 2 is the noise variance, and p u u ´ is the transmission
    power level. In the following sections, we will focus on the VNFO’s functionality,
    and resource allocation of the radio access part is beyond the scope of this paper;
    hence, without loss of generality, we assume a fixed power and bandwidth allocated
    to all the participating nodes. SECTION IV. Problem Formulation Let χ fk pu (
    t ~ )∈{0,1} denote whether the processing node p at time slot t is selected to
    run VNF function f on the packet of the k th service type of UAV u : χ fk pu (
    t ~ )= { 1, 0, if p∈ Δ k u ( t ~ )andf∈ B k pu ( t ~ ) otherwise ∀k∈S,u∈U. (6)
    View Source For each service type k∈S of UAV u , only one of the processing nodes
    (UAVs or MEC-server) must be selected for serving each function f∈ F k : ∑ p∈U∪M
    χ fk pu ( t ~ )=1,∀f∈ F k , ∑ p∈U∪M χ fk pu ( t ~ )=0,∀f∄ F k . (7) View Source
    The relation (7), both left and right expressions together, implies that the packets
    belonging to the service packet-flows travel a loop-free route. Each packet belongs
    to packet-flow Υ k u (t) needs a specific computational capacity c fk in CPU cycle.
    Assuming that all the processing capacity of processing node p in a single time
    slot with duration T ˜ is C p T ˜ , to be assured that the computing capacity
    of the selected processing node is enough to serve the assigned VNFs and the scheduler
    does not exceed the processing node’s budget, the following condition at each
    VNF-scheduling time slot t ~ should be satisfied: ∑ u∈U ∑ k∈S ∑ f∈ F k 1 P to−do
    p ( t ~ ) (u,k,f) c fk ≤ C p T ˜ ,∀p∈U∪M. (8) View Source The same condition also
    needs to be fulfilled regarding the storage capacity requirement b fk (in Bytes):
    ∑ u∈U ∑ k∈S ∑ f∈ F k 1 P to−do p ( t ~ ) (u,k,f) b fk ≤ B p ,∀p∈U∪M (9) View Source
    where B p is the total amount of available storage capacity of the processing
    node p . A. Age of Information In order to quantify the freshness of the received
    packet at the destination, the AoI metric is adopted. As soon as an IoT node has
    a packet to send, it connects to its serving UAV and sends packets.3 For each
    packet flow of service type k that UAV u∈U receives directly from the IoT nodes
    that are connected to it and running this service type, the arrival time t k u
    is defined as the time elapsed from the beginning of the time slot t in which
    any packet has arrived in. Let Θ k u (t) denote the AoI of the packet-flow of
    service type k in UAV u , it can be calculated as, Θ k u (t)={ τ k u +T− t k u
    , Θ k u (t−1)+T, if  α k u (t)=1 if  α k u (t)=0 ∀k∈S,u∈U (10) View Source where
    binary variable α k u (t)∈{0,1} indicates whether any new packet of service flow
    k at TS t is received, α k u (t)=1 , or not, α k u (t)=0 . By definition, for
    every time slot t in which the UAV does not receive a new packet from a service
    packet flow, the AoI of that service packet flow increases by T . On each received
    packet from IoT node n with service type k , the set F n k of VNFs (processing
    functions) should be performed. As stated above, the VNFO determines the set of
    processing nodes p∈ Δ k u ( t ~ ) that participate in performing the VNFs on packet-flow
    Υ k u (t) by performing the set B k up ( t ~ ) of VNFs. B k up ( t ~ )=∅ means
    p hosts none of the required VNFs of Υ k u (t) . Let Δ k u ( t ~ )={ p 1 , p 2
    ,…, p L } denote the sequence of all UAVs that are already selected to sequentially
    do the chain of VNFs on the received packets of service type k . The processing
    time of every packet of this flow will be, Φ k u (t)= ∑ p v ∈ Δ k u ( t ~ ) ⎛
    ⎝ ⎜ ⌈ τ fk p v−i p v (t) T ⌉T+ ∑ ϑ∈ B k u p v ( t ~ ) (⌈ θ k ϑ T ⌉T ⎞ ⎠ ⎟ ), ∀k∈S,u∈U
    τ fk p v−i p v (t)= D p v−i p v /C+ Λ p v−i p v ( F k f )/ R p v−i p v (t) F k
    f = f ¨ k u p v−i , (11) View Source where θ k ϑ is the run time of ϑ th VNF for
    service type k , Λ p v−i p v ( F k f ) is the packet length of service type S
    k ∈S after doing the last VNF f ¨ k u p v−1 of the chain in p v−1 , and, Assuming
    that the queueing delay is negligible, τ fk p v−1 p v is total transmission delay
    between p v−1 and p v consists of propagation delay and transmission delay. If
    the binary variable β k u ( t ~ )∈{0,1} indicates whether the VNF scheduling (at
    VNF-scheduling time slots t ~ ) for the flow of packets belong to service type
    k of UAV u was successful, then, the AoI at the Local server will be, Π k u (t)={
    Θ k u (t)+ Φ k u (t), Π k u (t−1)+ T ˜ , if  β k u ( t ~ )=1 if β k u ( t ~ )=0
    ∀k∈S,u∈U. (12) View Source Note that T ˜ is the duration of a single round of
    VNF placement and scheduling. B. Energy Consumption The energy consumption of
    the network in the uplink direction can be calculated as, P UL (t)= ∑ n∈N ∑ k∈S
    ∑ u∈U s k n p nu Λ k nu / R nu (t), (13) View Source where Λ k nu / R nu (t) is
    the transmission time between IoT node n , with service type k , and UAV u at
    TS t . The other energy-consuming part of the access network is transmission among
    the processing nodes. If we represent the energy consumption in the aerial domain
    (including UAV-to-UAV and UAV-to-MEC links) at TS t with P Aerial (t) , then it
    will be as, P Aerial (t)= τ fk p v−i p v (t)= F k f = ∑ u∈U ∑ k∈S ∑ p v ∈ Δ k
    u p p v−i p v τ fk p v−i p v (t), D p v−i p v /C+ Λ p v−i p v ( F k f )/ R p v−i
    p v (t), f ¨ k u p v−i , (14) View Source where Λ p v−i p v ( F k f ) , f ¨ k
    u p v−1 and τ fk p v−1 p v are defined like (11). Finally, if Ψ k ϑ denotes the
    power each machine, that hosts the ϑ th VNF of service type k , consumes to run
    this VNF on each packet of this service type, then, the total network-wide required
    energy for performing the VNFs across a single packet of all service type can
    be calculated as follows: P NFV = ∑ u∈U ∑ k∈S ∑ p v ∈ Δ k u ∑ ϑ∈ B k u p v Ψ k
    ϑ θ k ϑ . (15) View Source In a single term, P NFV represents the energy consumption
    resulting from VNFs processing. Using (13)–(15), the total energy consumption
    of the network to process a single packet across all the service types belonging
    to all UAVs would be, P Total (t)= P UL (t)+ P Aerial (t)+ P NFV . (16) View Source
    The UAVs use a battery, hence their available energy to do the processes and perform
    the required communications is limited. Therefore, we need an energy-efficient
    VNFO solution with minimum communication overhead. A centralized ML method will
    be optimal, but it requires a large communication transaction to share the local
    observation with the central controller. Another drawback of adopting centralized
    architecture is that the centralized coordinator is not scalable and from the
    processing and communication viewpoint is a single point of failure. Therefore,
    in this paper, we deal with proposing a solution for the following problem of
    distributed NFV orchestration through the UAVs as distributed VNFO agents. Problem
    1 (Distributed VNFO for Joint AoI and Energy Minimization):Considering the service
    requirements of IoT nodes, UAVs/MEC-server available resources, and the condition
    of access networks, what is the optimal strategy of VNF placement and scheduling
    in each UAV to jointly minimize the average AoI and total energy consumption at
    the Local Server: Minimize χ fk pu ( t ~ ) s.t. γ AoI [ 1 UK ∑ u∈U ∑ k∈S Π k u
    (t)]+ γ E P total (t), ∑ p∈U∪M χ fk pu ( t ~ )=1,∀f∈ F k , ∑ p∈U∪M χ fk pu ( t
    ~ )=0,∀f∄ F k , ∑ u∈U ∑ k∈S ∑ f∈ F k 1 P to−do p ( t ~ ) (u,k,f) c fk ≤ C p T,
    ∀p∈U∪M, ∑ u∈U ∑ k∈S ∑ f∈ F k 1 P to−do p ( t ~ ) (u,k,f) b fk ≤ B p , ∀p∈U∪M.
    (17) View Source In each VNFO-level time slot T ˜ the orchestrator sequentially
    decides on the chain of VNFs of the service flows belonging to UAVs. For a class
    of stochastic sequential decision-making problems, the Markov Decision Process
    (MDP) has been a powerful framework for the mathematical formulation and study
    of this type of problems. Another point that is worth mentioning is that our proposed
    method in Section VI is FL-based where the UAVs follow the same model trained
    cooperatively. Therefore, minimizing the average AoI over UAVs or minimizing the
    maximum value of AoI over UAVs are basically the same. Depending on the environment
    state, the MDP output will be the best action (or at least the best upon the history
    of the observations and actions) which maximizes a specific utility function [42].
    For the case that the state is not fully observable to the deciding agent or the
    agent’s observations are exposed to noise or some source (sort) of uncertainties,
    another extended class of decision-making processes called Partially Observable
    MDP (POMDP) is adopted [43]. Both MDP and POMDP in their original scope are defined
    centralized [42], [43]. Partially Observable Stochastic Game (POSG) is the extended
    version of POMDP in which a set of distributed agents are involved in the decision-making
    process [44], [45]. By definition, if every agent has the same individual reward
    function, the POSG model becomes the Decentralized POMDP (DEC-POMDP) [45]. In
    the following two sections, first, we show how the problem can be modeled as a
    DEC-POMDP and then we will present our proposed method to solve the developed
    DEC-POMDP. SECTION V. DEC-POMDP Formulation In a multi-agent MDP with state uncertainty,
    a DEC-POMDP is formally defined as a tuple with the following definition. Definition
    1 (DEC-POMDP Model):DEC-POMDP G with a set U of U agents is defined as a tuple
    G=⟨U,S, b 0 ,A,O,T,O,R⟩ , where S is the finite set of global environment states,
    b 0 is the probability of the environment initially being in state s∈S , A= ∏
    u∈U A u is the joint action of all agents, where A u is the set of actions available
    to agent u , O= ∏ u∈U O u is joint observation, where O u is the observations
    available to agent u , T is the transition function T :  ⋃ s∈S (s×A(s))×S→[0,1]
    , where T( s ´ |s,A(s)) is defined as the transition probability from state s
    to s ´ by doing joint action A(s) , O is the observation function O :  ⋃ s∈S (s×A(s))×O→[0,1]
    , where O(O|s,A(s)) is defined as the joint observation at state s by doing joint
    action A(s) , R={ r u } U−1 u=0 is a set of reward functions r u  :  ⋃ s∈S (s×A(s))→R
    , where r u (s,A(s)) is defined as the reward received by u when A(s) is executed
    at the global state s . In a DEC-POMDP, each agent u∈U based on its local observation
    o u ∈ O u and a local policy π u performs an independent action a u ∈ A u . In
    each partially observable state s , the joint action A(s)= ∏ u∈U a u (s) from
    the joint policy P= ∏ u∈U π u determines the next global state s ´ and joint observations
    O according to transition and observation probability of T( s ´ |s,A(s)) and O(O|s,A(s))
    , respectively. According to Problem 1, our purpose is to find the best choice
    for the sets Δ k u (t) of processing nodes p and B k up (t) of the VNF chains
    for serving packet-flow Υ k u (t) of any service type k∈S of UAVs u∈U in a distributed
    manner. Remark 2 (Source of Uncertainties):We have considered a multi-hop network
    architecture, as depicted in Fig. 3, in which, 1) each agent u is not aware of
    the other agents’ observation o −u  (−u refers to all the agents except u , o
    −u = ∏ u ´ ≠u o u ´ ) , nor the action a −u ,4 2) each agent observes the result
    of doing its own action and the actions of the other agents, while it is not aware
    of the global state nor the action of the other agents. Therefore, according to
    Definition 1, it can be inferred that Problem 1 in its decentralized form is a
    DEC-POMDP. FIGURE 3. System model as a DEC-POMDP. Show All In DEC-POMDP, each
    agent based on its actions and observations creates a local database that in time
    t can be represented as h u ( t ~ )={ a u ( t ~ −1), o u ( t ~ ) } t ~ t ~ =1
    ,∀u∈U , where a u ( t ~ −1) and o u ( t ~ ) are the action of u at time slot t
    ~ −1 and its corresponding observation at t ~ . All the information is available
    to all the U agents at time t ~ defines as the joint history H( t ~ )= ∏ u∈U h
    u ( t ~ )={A( t ~ −1),O( t ~ ) } t ~ t ~ =1 . The POMDP state is hidden from the
    agents. Hence, the agents would not be able to choose their actions based on knowing
    the true state. The standard approach for dealing with POMDPs is to find a solution
    to the fully observable equivalent belief-MDP [43]. Where, belief B(s, t ~ )=P(s(
    t ~ )=s|H( t ~ ),B(0)),∀s∈S defines as a probability distribution over the state
    space of the original POMDP knowing the joint history H( t ~ ) , i.e., all the
    available information from the sequence of interactions that the agents have had
    until now,where B(0) is the initial value the belief state function. Belief state
    function B(s, t ~ ) is known as sufficient statistic for the history H( t ~ )
    [45]. Upon performing a new interaction at t ~ +1 , the belief value is updated
    from the belief point at time t considering the new interaction {A( t ~ −1),O(
    t ~ )} . Despite the current hidden state, in DEC-POMDP the agents need to infer
    the action (the policy) of the other agents. This leads to the definition of multi-agent
    belief function [46] with the following definition, b u  :  ⋃ s∈S (s× π −u (s))→[0,1],∀u∈U
    b u, t ~ (s, π −u )=P(s( t ~ )=s, π −u | h u ( t ~ ), b u (0)), π −u = ∏ u ´ ∈U,
    u ´ ≠u π u ´ . (18) View Source As it is evident, the multi-agent belief function
    is defined in a space that is a combination of the hidden global state s and joint
    policy π −u of the other agents. From Bellman expectation equation [47], the action-value
    function Q π u, t ~ [(s, π −u ), a π u ] is the expected return starting from
    state hidden state s , taking action a π u according to policy π u , while the
    other agents follow the joint policy π −u , Q π u, t ~ [(s, π −u ), a π u, t ~
    ]= E{ R u [(s, π −u ), a π u, t ~ ] + γ u Q π u, t ~ +1 [( s ´ , π −u ), a π u,
    t ~ +1 ]}. (19) View Source where the action-value function decomposed into immediate
    reward plus discounted action-value of the successor state, and γ u is the discount
    factor of agent u . With some mathematical manipulation, (19) can be written as,
    Q π u, t ~ [(s, π −u ), a π u, t ~ ]= R u [(s, π −u ), a π u, t ~ ] + γ u ∑ (
    o u , o −u )∈O O[ o u , o −u |s,( a π u , a −π −u )] ∑ s ´ ∈S T[ s ´ |s,( a −π
    −u )] × ∑ ( a π u , a −π −u )∈A π u ( a π u | s ´ ) Q π u,t [( s ´ , π −u ( o
    −u )), a ´ π u, t ~ +1 ( o u )]. (20) View Source Using (18), for a given belief
    state function b u, t ~ (s, π −u ) , the action-value function Q π u, t ~ ( b
    u, t ~ , a π u, t ~ ) will be, Q π u, t ~ ( b u, t ~ , a π u, t ~ )= ∑ s∈S ∑ π
    −u b u, t ~ (s, π −u ) Q π u, t ~ [(s, π −u ), a π u, t ~ ]. (21) View Source
    For an enough large value of t ~  ( t ~ →∞) , the goal is to find the optimal
    policy π ∗ u among available policies π u which leads to the optimal Q-value (action-value)
    function, Q ∗ u, t ~ ( b u, t ~ , a u, t ~ )=arg max π Q π u, t ~ ( b u, t ~ ,
    a π u, t ~ ). (22) View Source There is no straightforward solution for the aforementioned
    DEC-POMDP problem. Among decentralized methods, multi-agent solutions also need
    a large volume of communication overhead between the agents to share their local
    observations to converge. FL does not have the communication overhead of the centralized
    techniques and also does not necessitate the agents to share all of the data and
    local observations to converge. Although this specification is for providing privacy,
    in our problem it provides us with the gain of energy efficiency that arises because
    the agents (UAVs) do not need to share all of their observations. A few efforts,
    [45], [48], [49], have been made in the literature to capture and exploit some
    structural specifications of the understudied system (application) to find or
    at least simplify the problem of finding optimal policy (22). One of these works
    is one presented by Yongacoglu et al. [48], in which the authors have developed
    a class of POSGs that is characterized by symmetry across players in terms of
    cost and state dynamics. In view of this research, within the APPENDIX, we introduce
    a class of Symmetric DEC-POMDP and prove that Problem 1belongs to this class and
    is Circularly Symmetric. This implies that the best agents’ policy, π ∗ are the
    same, { π u } U−1 u=0 = π ∗ . In essence, this necessitates a distributed solution
    to determine the best policy while ensuring uniformity across all agents. Furthermore,
    in accordance with the circular symmetry characteristic of the problem, in Corollary
    22 we prove that local observations serve as sufficient statistics for each agent
    to ascertain the best policy. Corollary 22 guarantees that the local observation
    h u ( t ~ ) serves as a sufficient statistic to determine the optimal policy π
    ∗ for the agents (UAVs). This implies that the information encapsulated in the
    local observations of the individual agents is comprehensive enough to determine
    the optimal policy π ∗ . While this corollary does not suggest a particular method
    for identifying the optimal policy, it is promising and justifies our proposed
    FL-based algorithm in which the agents collaboratively engage in training a globally
    shared model. This approach aligns with the notion that leveraging decentralized
    insights from each agent’s local observations can contribute to the derivation
    of an effective and globally optimal policy because their observations are sufficient
    statistics. Capitalizing on the promising findings in this section, the subsequent
    section introduces our proposed approach to address Problem 1. SECTION VI. Symmetry-aided
    Asynchronous Federated DQN Framework In this section, we introduce our proposed
    Asynchronous Federated Deep Q-Network (AFDQN) algorithm and the components we
    have used in the proposed model as depicted in Fig. 4. In traditional RL, the
    problem is modeled as an MDP consisting of a tuple {s( t ~ ),a( t ~ ),r( t ~ ),s(
    t ~ +1)} . At each decision-making time t ~ , the agent is at state s( t ~ ) and
    takes an action a( t ~ ) based on a policy π that causes a state transition from
    s( t ~ ) to s( t ~ +1) while an immediate reward r( t ~ ) incurred. For our POMDP
    case in which the true state of the network is hidden, the true state s( t ~ )
    is replaced with belief-state b( t ~ ) . Mainly, the RL aims to guide the agent
    to find the best policy π ∗ defined as the best mapping from observation o( t
    ~ ) to action a( t ~ ) that maximizes the expected cumulative discounted future
    rewards R( t ~ )= E π { ∑ ∞ l=t γ (l− t ~ ) r(l)} , where γ∈[0,1] is a discount
    factor indicating how much future rewards is important. For our DEC-POMDP problem,
    this relation maps to (19). FIGURE 4. Block diagram of the proposed Asynchronous
    Federated-DQN (AFDQN). Show All A. Deep Q-Network (DQN) Part To estimate Q-value
    functions (21), deep reinforcement learning (DRL) is deployed, where Q-values
    are predicted using deep neural networks (DNNs) as function approximators. The
    estimated Q -functions are represented by { Q u ( o u ( t ~ ), a u ( t ~ ); θ
    u ( t ~ )) } U−1 u=0 , where the parameter θ u ( t ~ ) represents the weights
    of the agent u ’s neural network (NN). The updated value of θ u ( t ~ ) is used
    to approximate the true values of Q u ( t ~ ) [21], [50]. Let’s define the loss
    function L( θ u ( t ~ )) as the expectation value of the mean squared error of
    the estimated Q-value Q u ( o u ( t ~ ), a u ( t ~ ); θ u ( t ~ )) from the target
    value y( t ~ ) [21], L( θ u ( t ~ ))=E[(y( t ~ )− Q u ( o u ( t ~ ), a u ( t ~
    ); θ u ( t ~ )) ) 2 ], (23) View Source where, y( t ~ )= r u ( t ~ )+γ max a u
    ( t ~ +1) Q u ( o u ( t ~ +1), a u ( t ~ +1); θ u ( t ~ )) and a u ( t ~ +1) indicates
    the agent’s action generated by the DNN at t ~ +1 , given the observation o u
    ( t ~ +1) . At each iteration, the deep Q -function approximator is trained to
    learn the best estimate of the Q-function by minimizing the loss function L( θ
    u ( t ~ )) . To improve the stability of the algorithm and cope with samples correlation,
    as depicted in Fig. 4, two novel techniques, namely Fixed Target Network [51]
    and Experience Replay Buffer [52] are deployed, respectively. Utilizing these
    two techniques, the loss function L( θ u ( t ~ )) can be written as L( θ u ( t
    ~ )) = E D [( r u ( t ~ )+γ max a u ( t ~ +1) Q u (b( t ~ +1), a u ( t ~ +1);
    θ ´ u ( t ~ )) − Q u ( o u ( t ~ ), a u ( t ~ ); θ u ( t ~ )) ) 2 ], (24) View
    Source where θ ´ u ( t ~ ) denotes the target network parameters, and the expectation
    E D is taken over the randomly selected mini-batches of samples from the replay
    buffer D . B. Federated Learning Part As it is illustrated in Fig. 4, we have
    two main entities, the set U={0,1,…,U−1} of UAVs that are our distributed agents
    or in FL terminology, the agents, and the coordinator that in our model is local
    server (MEC-server). FL allows the UAVs (agents) to train a shared global model
    parameterized by θ g that is an exact copy of the agents’ local model { θ u }
    u=U−1 u=0 using their own dataset { D u } u=U−1 u=0 , while the original data
    remains in UAVs. After local training, agents share their local model updates
    with the coordinator. The coordinator then aggregates the received updates to
    build the global model θ g . As a result, relying on the distributed data training
    at the agents, the local server is able to enhance the training performance without
    significant communication overhead as it just needs an update of the local model
    parameters, not the agents’ local data. The federated learning procedure of our
    proposed method includes the following key steps. 1) Distributed Local Training
    Primarily, the local server initializes the global model, θ g,0 , and transmit
    it to the agents. Upon receiving θ g,0 , during VNFO time slots t ~ the agents
    interact with environment and train their local model { θ u ( t ~ ) } u=U−1 u=0
    using their own data set { D u ( t ~ ) } u=U−1 u=0 by minimizing a loss function
    { L u ( θ u ( t ~ )) } u=U−1 u=0 , θ ∗ u =arg min π u L u ( θ u (( t ~ ))),∀u∈U.
    (25) View Source Then, the agents upload their local update on { θ u ( t ~ ) }
    u=U−1 u=0 to the coordinator for aggregation. 2) Model Aggregation After collecting
    the agents’ local model updates, the next step is aggregating them into a new
    version of the global model which is performed by the coordinator by solving the
    following optimization problem. Problem 2 (Model Aggregation):Given the local
    model updates { θ u ( t ~ ) } u=U−1 u=0 of all agents, and knowing the local loss
    functions { L u (⋅) } u=U−1 u=0 , what is the optimal strategy for aggregating
    the local model that minimizes the global loss, θ ∗ g , L ∗ g =arg min L g , θ
    g L g ( ∏ u∈U L u ( θ g (( t ~ )))). (26) View Source According to Problem 2,
    θ ∗ g is the optimal value for θ g with having the local updates in hand; and
    L ∗ g is the best function (the best method) for aggregating the local loss function.
    The loss-aggregation function L ∗ g indicates the relative contribution of each
    agent on the global model, however, there is not a fixed method for determining
    this function and it depends mostly on the structure and specific features of
    the problem. Corollary 1:According to Lemma 2, The best setting for loss functions
    is (24) and { L u (⋅) } u=U−1 u=0 =L(⋅) , The optimal way for aggregating the
    local updates is averaging among the agent’s contributions, thus (25) can be rewritten
    as, θ ∗ g = ∑ u∈U ω u θ u , where ω u represents the relative contribution of
    each agent on the global model. After the derivation of a new update of θ g the
    coordinator broadcasts it to all agents. Upon receiving the update from the coordinator,
    the agents upgrade their local model accordingly. Until achieving a predefined
    level of accuracy or convergence of the global loss function, this process is
    continued. C. Asynchronous Networking The communication among the network entities
    follows the time slots t , but slot scheduling in which the agents share their
    own local model with the coordinator is distributed and asynchronous. Upon receiving
    an update, the coordinator aggregates it with the global model and updates the
    agents with the newly updated global model. In this way, we do not impose a strict
    constraint on synchronous communication with the local server (the coordinator).
    This significantly decreases the networking overhead in comparison with synchronous
    federation among distributed agents. During the training phase, we consider episodes
    in which the agent presets to a random initialization setting and starts interaction
    with the environment, and learns from its experience. Each episode contains T
    ˆ VNF scheduling round t ~ . In the deployment phase, the stream of packets that
    belong to different services is assigned based on an optimally determined VNF
    placement/scheduling policy. To avoid service interruption any fine-tuning and
    policy adaption to environmental changes, including the time the algorithm spends
    on fine-tuning and finding the optimal solution by coordinating multiple agents
    to train the global model, can be done in parallel. Definition 2 (Global Update
    Period):global update period 1≤η≤ T ˆ is defined as the period of updating the
    coordinator by the agents. We have two special settings, AFDQN-SGD ( η=1 ): In
    this case, every VNF scheduling slot t ~ , the agent sends the locally calculated
    SGD, ∇ θ L u ( θ u ( t ~ )) to the coordinator. Then, the coordinator uses the
    received local data to perform one step of gradient descent: θ g ( t ~ +1)= θ
    g ( t ~ )− γ ˙ ∇ θ L u ( θ u ( t ~ )). (27) View Source AFDQN-Avg ( η= T ˆ ):
    In this case, only one time during each episode, the agent sends the whole parameter
    θ u ( t ~ ) to the coordinator. Then, the coordinator updates θ g ( t ~ ) accordingly,
    θ g ( t ~ +1)=(1− γ ¨ ) θ g ( t ~ )+ γ ¨ θ u ( t ~ ), (28) View Source where,
    γ ˙ and γ ¨ are AFDQN-SGD and AFDQN-Avg forgetting factors, respectively. Introducing
    the forgetting factors γ ˙ and γ ¨ allows for the adjustment of learning rates
    during model updates. Rather than updating the global model instantly upon receiving
    a local update, it is beneficial to employ a weighted average approach, considering
    both the most recent update and the previous value of the Agent’s NN weight θ
    g . This approach, known as Asynchronous Weight Averaging [53] in the literature,
    proves advantageous in alleviating the impact of outdated updates, commonly referred
    to as stale weights, and consequently, it enhances overall stability. The only
    point is that the forgetting factors should be chosen small enough. Another worth
    mentioning point is that the AFDQN-SGD and a centralized approach doing mini-batch
    SGD in the local server are essentially different as the former is asynchronous,
    distributed, and fully based on local data. The details of the proposed AFDQN
    algorithm are described in Algorithm 1. Algorithm 1: AFDQN- η Algorithm Show All
    Considering our optimization problem, for each agent u∈U at VNF scheduling round
    t ~ , we define the observation space O u , the action space A u , and the reward
    function R u as follows: Observation: We define the observation space as a vector
    of: 1) CPU and storage requested by the local service flows { Υ k u (t)|t= t ~
    } k as { c fk (t)|t= t ~ } f,k and { b fk (t)|t= t ~ } f,k , respectively, 2)
    available CPU { C p } p and storage { B p } p of the processing nodes, 3) service
    arrival time { t k u } k , and 4) the transmission rate { R u p ´ } U∖ u ´ ∪M
    of the links between agent u and the other processing nodes. Therefore, the observation
    o u ( t ~ ) can be written as O u ( t ~ )= {{ c fk (t) } f,k ,{ b fk (t) } f,k
    , { C p } p ,{ B p } p ,{ t k u } k ,{ R u p ´ } U∖u⋃M } t= t ~ . (29) View Source
    Action: The action space is defined as all possible placement of the required
    VNFs for service flows { Υ k u (t)|t= t ~ } k as A u ( t ~ )={ χ fk pu ( t ~ )},∀p∈U∪M,k∈S,f∈
    F k . (30) View Source Reward: Our objective is to orchestrate the VNFs in a way
    that jointly minimizes the average AoI and total energy consumption over the network.
    So we define the reward as a linear combination of three terms as follows: R u
    ( t ~ )= ζ ¯ ¯ ¯ u ( t ~ )= Π ¯ ¯ ¯ ¯ ( t ~ )= ζ k u ( t ~ )= δ NFV ζ ¯ ¯ ¯ u
    ( t ~ )+ δ AoI Π ¯ ¯ ¯ ¯ ( t ~ )+ δ E P total ( t ~ ), 1 K ∑ k∈S ζ k u ( t ~ )
    1 UK ∑ u∈U ∑ k∈S Π k u ( t ~ ) { +1, −10, if (7)-(9)are satisfied otherwise. (31)
    View Source where δ NFV , δ AoI and δ E are the normalization factors for NFV
    scheduling result, AoI, and the energy consumption, respectively; ζ k u ( t ~
    ) is defined as the reward assigned to the result of NFV placement for service
    flow Υ k u (t)|t= t ~ . SECTION VII. Complexity Analysis In this section, we determine
    the computational complexity of the proposed Algorithm 1. We analyze the algorithm’s
    complexity through two distinct phases: Model Training and Action Selection, which
    occur during the deployment of the trained model. During each iteration of the
    global update period η , the process involves the training of local models by
    the agents (UAVs) and subsequently, the asynchronous aggregation of these local
    models by the MEC server to form the global model. The complexity of the local
    model training conducted by the agents can be expressed as the sum of two components:
    the complexity of action selection and the complexity of the back-propagation
    algorithm for each sample within the replay buffer. This sum is then further multiplied
    by the mini-batch size and η . It is worth noting that the multiplication by the
    mini-batch size accounts for the fact that, in each training iteration, the local
    agent randomly selects a mini-batch of samples from its own local replay buffer.
    The computational complexity of action selection in a fully connected neural network
    with a fixed number of hidden layers and neurons in each hidden layer is directly
    proportional to the sum of the input size and the output size of the neural network
    being used [54], [55]. The input size of the neural network is equivalent to the
    size of the state space, which from (29) is given by 2KF+2(U+1)+K+(U−1)+1 ; and,
    the output size of the neural network is equal to the size of the action space.
    which from (30) is given by KF(U+1) . It’s worth recalling that F= ∑ k∈S F k represents
    the overall count of distinct VNFs required to be executed across all service
    types. Hence, the computational complexity associated with action selection is
    represented by O(KFU) . Conversely, as indicated in equation [54], [55], for a
    specific sample extracted from the replay buffer, the computational complexity
    of the back-propagation process is directly proportional to the product of the
    neural network’s input and output sizes. Consequently, in our specific scenario,
    derived from the preceding computations, the overall algorithmic complexity for
    each agent can be expressed as O(ηO K 2 F 2 U) , where, O denotes the batch size.
    From Algorithm 1, each agent repeats the whole process of local model training
    η times preceding sharing the results with the local server. The last step is
    the aggregation process. While our algorithm conducts asynchronous aggregation,
    it’s important to note that the processing load escalates proportionally with
    the number of UAVs, U . As a result, the overall computational complexity for
    the training phase across the entire network is given by O(ηO F 2 K 2 U 2 ) .
    Based on the prior discussion, the complexity associated with the action selection
    for all U agents during the deployment phase is denoted as O(KF U 2 ) . SECTION
    VIII. Performance Evaluation In this section, the performance of the proposed
    algorithm is evaluated. The performance results are compared for four different
    methods of AFDQN-SGD, AFDQN-Avg, AFDQN with parameter η≠{1, T ˆ } , and a centralized
    case. In the centralized DQN method, all the observations are forwarded to the
    local server and the local server performs the VNF scheduling. Hence, its performance
    can be considered as an upper bound for the proposed AFDQN method. A. Simulation
    Setup The simulation is implemented by Python using OpenAI gym [56], a widely
    used tool for developing RL algorithms, and conducted in a computer with Intel
    Core i7–10700 CPU 2.90 GHz and 64 GB RAM. Using simulation, the impact of parameter
    η , the number of IoT nodes, and the effect of the received load by the agents
    are evaluated. To this purpose, while T ˆ =60 , five different values for the
    parameter of η consisting of 1 (corresponds to AFDQN-SGD), 10, 20, 30, and 60
    (corresponds to AFDQN-Avg) are considered. The other model parameters and simulation
    settings are summarized in Table 3 and Table 4. The proposed system model entirely
    matches none of the existing related works. However, the simulation parameters
    have been chosen to be in line with the typical values commonly used in similar
    studies within this context [6], [32], [33], [36], [37]. TABLE 3 Model Parameters
    and Simulation Settings Part I TABLE 4 Model Parameters and Simulation Settings
    Part II B. Simulation Results In Fig. 5, the convergence behavior of the AFDQN
    method is compared with the centralized method as a baseline. The two extreme
    cases of AFDQN-SGD and AFDQN-Avg are considered. As is evident from this figure,
    for the AFDQN method we have some variations around the value where it converged.
    The absolute value of these variations in AFDQN-Avg is more than AFDQ-SGD, and
    in AFDQN-SGD’s case, they are around the value achieved by the centralized method.
    Also, the AFDQN-Avg converged to a smaller value for total return, we expect this
    result will also be reflected in the performance of AFDQN-Avg against AFDQN-SGD.
    This will be investigated in the following experiments. In Fig. 6(a) and Fig.
    6(b), the minimum achievable average AoI and total energy consumption are investigated.
    The AoI value is averaged over all the agents and the total energy consumption
    is defined as the total energy consumption for sending a single packet of each
    service flow through the network from IoT nodes toward the local server. As can
    be seen, the maximum energy consumption of the three methods is limited to a maximum
    value corresponding to the maximum value of resources that the processing nodes
    can allocate to the requests. As a result, the negative side effect of the methods’
    drop in performance is mostly reflected in the value of the averaged AoI. For
    the AFDQN-Avg, this point is evidenced in Fig. 6(a), where we can see that at
    several points the values of the averaged AoI are more than 1 second. However,
    this is the worst-case choice for selecting the global update period η . Form
    Fig. 6(a), for the proposed AFDQN, we could achieve an average AoI of less than
    200 msec, which is acceptable for most real-time applications. Therefore, performance
    close to the centralized case can be achieved by the proposed method in a distributed
    manner, relying solely on the local observations of the UAVs and the sharing of
    trained local models, thus eliminating the need for exchanging the local observations,
    which can be time and energy-consuming. FIGURE 5. Episodic reward of agent 1 for
    the proposed method compared with centralized architecture. All agents follow
    the same policy, which is a copy of the cooperatively-trained global model. Show
    All FIGURE 6. (a) Average episodic AoI. (b) Average episodic total energy consumption
    of the proposed method compared with centralized architecture. All agents follow
    the same policy, which is a copy of the cooperatively-trained global model. Show
    All In Fig. 7(a) and Fig. 7(b), the network energy efficiency versus service availability
    is drawn. The network-wide energy efficiency is defined as the total number of
    successfully-supported service flows divided by the total energy consumption throughout
    the network to send a single packet from each one of the services flows. Also,
    service availability is defined as the percentage of the service flows that are
    supported successfully. In Fig. 7(a), the average network energy efficiency and
    the sample values in our simulation, as well as the standard deviation of the
    value, for AFDQN- 20 (η=20) are shown. The averaged network efficiency with increasing
    the value of the service availability increases in a way that for the service
    availability of more than 80 percent, it converges to around 82 percent. This
    convergence for large value of service availability shows that we were eventually
    able to provide energy efficiency as one of our objective functions. In Fig. 7(b),
    where the proposed AFDQN method with different values of η∈{20,30,60} is compared
    with the centralized approach, it can be seen that the energy efficiency of the
    centralized approach degrades as the availability reaches 100%. This behavior
    is because the centralized method has a single NN for all UAVs. For the availability
    values near 100%, the centralized agent is not able to do the job as efficiently
    as the AFDQN method where each agent has its own NN. FIGURE 7. Network-wide energy
    efficiency vs. percentage of service availability. The shaded area represents
    the standard deviation (SD) from the average value: (a) For AFDQN with η=20 .
    Sample values are shown for more illustration. (b) For AFDQN with η=20 , η=30
    , AFDQN-Avg and centralized architecture. Show All As illustrated in Table 3,
    the load of services (in terms of requested CPU and storage resources) is modeled
    as a normalized uniform random variable. The standard deviation (SD) of the values
    for both CPU request values and storage is 1.3 percent. In Fig. 8, the impact
    of increasing this value, up to 6 times the primary value of 1.3, on the network’s
    performance is examined. The network is first trained with the primary input-load
    SD value of 1.3, and then, we incrementally raised the SD of the input load. This
    can be implicitly considered as a test under non-stationary load. It is evident
    that in this situation the AoI will increase, as illustrated in Fig. 8. To be
    more specific, we considered a threshold of one second for the acceptable AoI.
    Hence, we have also drawn a graph of AoI violation (in percentage) in conjunction
    with the bar chart of averaged AoI to better reflect the effect of the load SD.
    The results demonstrate that the AFDQN-Avg method has better performance in this
    situation, which appears to contradict our previous observations where we concluded
    that decreasing the global update period improves the performance. This observation
    can be explained using the non-stationary behavior of the input load. In this
    case, the AFDQN-Avg lets the agents learn the variations and input model better,
    in comparison with AFDQN-10, which was chosen as an example for a case between
    two extreme cases, AFDQN-SGD and AFDQN-Avg. FIGURE 8. Averaged-AoI and AoI-violation
    percentage for AFDQN-10 and AFDQN-Avg versus standard deviation (SD) of the load
    normalized by SD of the load in the training phase. Show All The effect of increasing
    the number of IoT nodes per agent (UAV) on AoI and Energy consumption is investigated
    in Fig. 9. For this experiment, two AFDQN-10 and AFDQN-Avg cases are considered.
    The results show that AFDQN-10 had better performance than AFDQ-Avg. Another important
    point that should be mentioned relates to the behavior of the network for a large
    number of IoT nodes, e.g., 120 or more. As the number of IoT nodes increases,
    the load of the agents increases directly, this means that there are more CPU
    and storage requests. Because the resources in the processing nodes are limited,
    there comes a point where an increase in the number of IoT nodes will lead to
    more request rejection responses. In this situation, the fresh packets will drop,
    and that causes an increase in the AoI value. However, the network energy consumption
    does not change because the volume of the active processes does not change and
    remains equal to the maximum capacity of the processing nodes. FIGURE 9. The effect
    of increasing the number of IoT nodes per agent (UAV) on AoI and energy consumption.
    Show All For further exploration, Fig. 10 and Fig. 11 compare the performance
    of the proposed algorithm against two baseline algorithms: Multi-agent DQN (MDQN)
    [57] and the adapted version of heuristic Minimum-Delay algorithm [58]. In MDQN
    the agents operate independently based on locally trained models without coordination.
    The agents are equipped with an identical neural network featuring the same specifications
    as AFDQN. Conversely, the Minimum Delay algorithm selects actions at each VNF
    scheduling round t ´ to minimize end-to-end delay (not AoI) between IoT nodes
    and the local server. FIGURE 10. Averaged-AoI and AoI-violation percentage for
    AFDQN-avg compared with MDQN and Minimum-Delay versus standard deviation (SD)
    of the load normalized by SD of the load in the training phase. Show All FIGURE
    11. The effect of increasing the number of IoT nodes per agent (UAV) on AoI and
    energy consumption for AFDQN-avg compared with MDQN and Minimum-Delay. Show All
    In Fig. 10, a comparison similar to Fig. 8 assesses the impact of increasing load
    standard deviation (SD) on network performance in terms of AoI and AoI violation.
    Generally, an increase in SD raises the average AoI and AoI violation percentage
    for all methods, as larger SD values force agents to find the best action across
    a larger state space. As it is evident, the proposed AFDQN method exhibits the
    smallest average AoI and AoI violation percentage compared to baseline methods.
    However, the Minimum Delay method performs the worst due to its localized short-term
    target. Finally in Fig. 11, the impact of increasing the number of IoT nodes per
    agent (UAV) on the proposed method’s performance in terms of AoI and energy consumption
    is explored and compared with MDQN and Minimum Delay algorithms. Results demonstrate
    the superior performance of the proposed AFDQN method compared to baselines. Additionally,
    as the number of IoT nodes reaches 120 and beyond, there is an increased demand
    for CPU and storage; limited resources in processing nodes eventually lead to
    increased rejection of requests, causing a rise in AoI. However, network energy
    consumption remains unchanged, as the volume of active processes remains equal
    to the maximum capacity of processing nodes. SECTION IX. Conclusion We considered
    the problem of dynamic orchestration of NFV-enabled SFCs in smart agriculture
    applications to jointly minimize the AoI and energy consumption throughout the
    network. Especially, the problem is formulated as a decentralized POMDP. Then,
    adopting the symmetric structure of the network, we analytically proved that the
    optimal policy among the agents is behaving similarly. Accordingly, a novel federated-based
    DQN method was proposed to solve the problem efficiently. The proposed method
    is distributed and energy efficient, as the local agents just need to share the
    parameters of their locally trained model with each other. Although the primary
    goal of this method is to provide privacy among the agents, in our problem, this
    significantly decreased the communication overhead, and additionally, the total
    energy consumption of the network. In terms of freshness of information, the AoI
    is minimized jointly, and the achieved value for the AoI, while the parameter
    setting is set to be close to real values, is appropriate for most real-time applications.
    Appendix In this section, we aim to simplify the problem of determining the optimal
    policy (22) by utilizing some structural specifications of the developed system
    and problem. Inspiring by the work presented by Yongacoglu et al. [48], we introduce
    a class of Symmetric DEC-POMDP based on the Definition and Lemma presented below.
    Definition 3 (Symmetric DEC-POMDP):A DEC-POMDP is called symmetric if the following
    conditions hold: A u = A u ´ and γ u = γ u ´ , ∀u, u ´ ∈U∀u∈U , ∀a∈A , and an
    arbitrary permutation function σ(.) : r u (s,σ(a))= r σ(u) (s,a) , and T(⋅|s,σ(a))=T(⋅|s,a)
    . Lemma 1:Let G be a symmetric DEC-POMDP, for any u, u ´ ∈U , if π u = π u ´ ,
    then, π u is ϵ -best-response to π −u if and only if π u ´ is ϵ -best-response
    to π − u ´ , where ϵ -best-response (for an arbitrary ϵ≥0) defines as a policy
    that achieves (reach) a reward (cost) within ϵ of the maximum (minimum) value.
    In our VNF scheduling problem, as it is depicted in Fig. 3, at each VNF scheduling
    round t ~ , each distributed agent u∈U , has K packet-flow { Υ k u (t)|t= t ~
    } K k=1 belong to different services each of which requires running F k different
    VNFs on their packets. The agents decide on how to place these VNFs into available
    processing nodes, i.e., other U−1 UAVs, the local server, or itself, in a way
    that jointly minimizes the average AoI and energy consumption according to (17).
    All the agents follow the same goal and the priorities among the agents are the
    same. Without loss of generality, we assume that the agents have chosen the same
    discount factor, { γ u } u∈U =γ . Thus, it can be found that the agents conceptually
    have the same model; an intuitive inference that can be figured out better using
    the following Index Mapping rule. Definition 4 (Index Mapping):For each function
    f∈ F k of packet-flow Υ k u (t)|t= t ~ , by definition we assume that the policy
    π u ( t ~ ) outputs I fk u ∈{0,1,…,U−1,M} is the i th candidate processing node,
    I i , as depicted in Fig. 12. The actual selected processing node among p∈{u∪{
    u ´ } u ´ ≠u ∪M} , will be, p u ( t ~ )={ [(u+i)modU] th UAV, M, if  I i ≠ I M
    if  I i = I M , ∀ I fk u = I i . (32) View Source Then, χ fk pu (|t= t ~ )=1 ,
    and X k u , B k pu will be updated accordingly. FIGURE 12. Index mapping mechanism.
    Show All Now, according to Definition 3and Definition 4, the following lemma can
    be driven. Lemma 2:Problem 1is a symmetric DEC-POMDP. Proof:According to Definition
    4, the agents have the same set of actions { A u } u∈U ={ I i } i∈U∪M , so the
    condition (i) of Definition 3 is met. Let define C ℓ as circular shift operand
    with arbitrary value of ℓ , C ℓ (⋅)=[⋅+ℓ]modU . Considering a circular shift of
    ℓ over joint action A , C ℓ (A) , we will have, a C ℓ (u) = a u , thus from (32),
    for each I fk C ℓ (u) = I fk u = I i the selected processing node p C ℓ (u) (t)
    will be, p C ℓ (u) ( t ~ )={ [( C ℓ (u)+i)modU] th UAV, M, if  I i ≠ I M if  I
    i = I M , ∀ I fk C ℓ (u) = I i . View Source Or, p C ℓ (u) ( t ~ )= C ℓ ( p u
    ( t ~ )). (33) View Source Equation (33) means Problem 1 is circularly symmetric.
    To be more specific, we do not have any special dependency on the identity of
    the agents and the state transitions depend only on the profile of joint actions
    performed by all agents. Accordingly, permuting the agents’ actions does not change
    the conditional transition probabilities, T(⋅|s, C ℓ (A))=T(⋅|s,A) , and this
    permutation will lead to a corresponding permutation of rewards, r C ℓ (u) (s,A)=
    r u (s, C ℓ (A)) . Hence, the second condition of Definition 3 is also satisfied
    and the proof is complete. According to Lemma 2, being circularly symmetric means
    that the best agents’ policy, π ∗ are the same, { π u } U−1 u=0 = π ∗ . For such
    a condition, Lemma 1implies that the problem of finding the best policy can be
    reduced to finding π ∗ u , the best response to ∏ u ´ ≠u π u ´ , while π u ´ =
    π u ,∀ u ´ ≠u . Although this result is promising, from an implementation viewpoint,
    proposing a distributed solution for finding the best policy while requiring the
    same policy for all the agents is challenging. Recalling (18), in addition to
    the current hidden state, in DEC-POMDP the agents need to infer the action (the
    policy) of the other agents. The subsequent Corollary establishes a connection
    between this inference and solely relying on the local observations of the agents,
    thereby rendering it feasible. Corollary 2:With the same initialization of the
    belief function, { b u (0) } U−1 u=0 =b(0) , for a circularly symmetric DEC-POMDP,
    the local observation h u ( t ~ ) is a sufficient statistic for determining the
    optimal policy π ∗ . Proof:Assume that using a mechanism, the agents peruse the
    same policy π u ( t ~ ) , while they are learning the optimal policy π ∗ . Then,
    the multi-agent belief state b u, t ~ (s, π −u ) would be, b u, t ~ (s, π −u )=
    = = b u, t ~ ⎛ ⎝ s, ∏ u ´ ≠u π u ⎞ ⎠ P(s( t ~ )=s| h u ( t ~ ), b u (0), π u )
    b π u u (s, t ~ ).∀u∈U (34) View Source So, for each agent u , the local observation
    h u ( t ~ ) and knowing its local policy π u is enough for determining the belief-state
    b π u u (s, t ~ ) . In a DEC-POMDP, the set { b π u u (s, t ~ ) } U−1 u=0 is sufficient
    statistic for the joint history H , and the proof is complete. Authors Figures
    References Keywords Metrics Footnotes More Like This Artificial Intelligence and
    Internet of Things for Sustainable Farming and Smart Agriculture IEEE Access Published:
    2023 Multiagent Deep-Reinforcement-Learning-Based Virtual Resource Allocation
    Through Network Function Virtualization in Internet of Things IEEE Internet of
    Things Journal Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Open Journal of the Communications Society
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: AoI-Aware Energy-Efficient SFC in UAV-Aided Smart Agriculture Using Asynchronous
    Federated Learning
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Rathore N.
  - Rajavat A.
  citation_count: '0'
  description: In today’s digital age, the Internet of Things (IoT) is gaining popularity.
    IoT has made everything smart, for example, smart cities (smart buildings and
    smart homes), smart healthcare (personal monitoring, smart wearables), industrial
    automation (especially manufacturing), commercial (shopping systems, retail),
    and even that agriculture too. IoT is becoming increasingly important in today’s
    digital age, resulting in a rapid rise in the number of devices connected to it.
    Massive amounts of data will be produced by such widely distributed IoT devices
    at the network’s edge. Processing these massive amounts of data in the centralized
    cloud is expected to result in increased 400bandwidth utilization, latency, and
    network congestion. Edge computing has become a popular paradigm in recent years
    for reducing network congestion and serving real-time IoT applications by providing
    services close to enduser devices. Agriculture is the foundation of the economy
    of any nation in the world. By 2050, the world population will need a 70% increase
    in food production to feed an estimated global population of more than 9 billion
    people. Potatoes are consumed all over the world and its production plays an important
    role in agriculture. The two primary diseases that adversely affect the yield
    of potato crop production are early blight and late blight. Therefore, in this
    work, we used containerized microservices to deploy machine learning models to
    resource restricted edge nodes on agricultural land for real-time disease and
    irrigation water requirement prediction in potato crops. Containers are lightweight
    and easy to deploy, making them the ideal choice for running machine learning
    models on resource-constrained edge nodes. We examined AlexNet, MobileNet, and
    VGG16, three deep convolutional neural networks (CNN), to detect these diseases
    automatically. A dataset of 7128 images containing healthy and diseased leaves
    of potato plants was used to train all three CNN models on the cloud. Even if
    training is outsourced, trained models need a lot of RAM; hence, the first aim
    of this study is to find a lightweight CNN model that can easily fit into resource-constrained
    devices. To improve potato crop yield and reduce economic losses, we found and
    deployed lightweight CNN model at the edge node to identify diseases in real time
    using leaf pictures recorded by in-place camera devices. The advantage of the
    developed technique is that by classifying potato leaf pictures in real time on-premises,
    there is no need to transfer images to the cloud for probable disease identification,
    which increases network congestion. The lightweight CNN model achieved 99.87%
    accuracy for both train and test images, according to the results. Precision (P),
    Recall (R), and F1 score (F1) are also displayed, to visualize the model’s efficiency.
    Similarly for real-time prediction of irrigation water requirement in potato crop,
    we trained two machine learning models, Support Vector Machine (SVM) and Logistic
    Regression (LR) on 100,000 values of records. Each record has four input parameters
    (soil moisture, temperature, humidity, and how many days the crop was planted
    before). With four input parameters in each record (soil moisture, temperature,
    humidity, and how many days before the crop was planted), the model decides whether
    the water pump should be turned on or off. The SVM model and the LR model attained
    92 and 73% accuracy, respectively, in determining whether the water pump should
    be turned ON or OFF.
  doi: 10.1201/9781003435228-24
  full_citation: '>'
  full_text: '>

    "Access Provided By:University of Nebraska-Lincoln T&F eBooks ‍ Advanced Search
    Login About Us Subjects Browse Products Request a trial Librarian Resources What''s
    New!! HomeEnvironment & AgricultureAgriculture & Environmental SciencesAgriculturePrecision
    Agriculture for SustainabilitySmart Farming Based on IOT-Edge Computing: Applying
    Machine Learning Models For Disease And Irrigation Water Requirement Prediction
    In Potato Crop Using Containerized Microservices Chapter Smart Farming Based on
    IOT-Edge Computing: Applying Machine Learning Models For Disease And Irrigation
    Water Requirement Prediction In Potato Crop Using Containerized Microservices
    ByNitin Rathore, Anand Rajavat Book Precision Agriculture for Sustainability Edition
    1st Edition First Published 2024 Imprint Apple Academic Press Pages 26 eBook ISBN
    9781003435228 Share ABSTRACT In today’s digital age, the Internet of Things (IoT)
    is gaining popularity. IoT has made everything smart, for example, smart cities
    (smart buildings and smart homes), smart healthcare (personal monitoring, smart
    wearables), industrial automation (especially manufacturing), commercial (shopping
    systems, retail), and even that agriculture too. IoT is becoming increasingly
    important in today’s digital age, resulting in a rapid rise in the number of devices
    connected to it. Massive amounts of data will be produced by such widely distributed
    IoT devices at the network’s edge. Processing these massive amounts of data in
    the centralized cloud is expected to result in increased 400bandwidth utilization,
    latency, and network congestion. Edge computing has become a popular paradigm
    in recent years for reducing network congestion and serving real-time IoT applications
    by providing services close to enduser devices. Agriculture is the foundation
    of the economy of any nation in the world. By 2050, the world population will
    need a 70% increase in food production to feed an estimated global population
    of more than 9 billion people. Potatoes are consumed all over the world and its
    production plays an important role in agriculture. The two primary diseases that
    adversely affect the yield of potato crop production are early blight and late
    blight. Therefore, in this work, we used containerized microservices to deploy
    machine learning models to resource restricted edge nodes on agricultural land
    for real-time disease and irrigation water requirement prediction in potato crops.
    Containers are lightweight and easy to deploy, making them the ideal choice for
    running machine learning models on resource-constrained edge nodes. We examined
    AlexNet, MobileNet, and VGG16, three deep convolutional neural networks (CNN),
    to detect these diseases automatically. A dataset of 7128 images containing healthy
    and diseased leaves of potato plants was used to train all three CNN models on
    the cloud. Even if training is outsourced, trained models need a lot of RAM; hence,
    the first aim of this study is to find a lightweight CNN model that can easily
    fit into resource-constrained devices. To improve potato crop yield and reduce
    economic losses, we found and deployed lightweight CNN model at the edge node
    to identify diseases in real time using leaf pictures recorded by in-place camera
    devices. The advantage of the developed technique is that by classifying potato
    leaf pictures in real time on-premises, there is no need to transfer images to
    the cloud for probable disease identification, which increases network congestion.
    The lightweight CNN model achieved 99.87% accuracy for both train and test images,
    according to the results. Precision (P), Recall (R), and F1 score (F1) are also
    displayed, to visualize the model’s efficiency. Similarly for real-time prediction
    of irrigation water requirement in potato crop, we trained two machine learning
    models, Support Vector Machine (SVM) and Logistic Regression (LR) on 100,000 values
    of records. Each record has four input parameters (soil moisture, temperature,
    humidity, and how many days the crop was planted before). With four input parameters
    in each record (soil moisture, temperature, humidity, and how many days before
    the crop was planted), the model decides whether the water pump should be turned
    on or off. The SVM model and the LR model attained 92 and 73% accuracy, respectively,
    in determining whether the water pump should be turned ON or OFF. Previous Chapter
    Next Chapter Your institution has not purchased this content. Please get in touch
    with your librarian to recommend this.  To purchase a print version of this book
    for personal use or request an inspection copy  GO TO ROUTLEDGE.COM  Policies
    Privacy Policy Terms & Conditions Cookie Policy Journals Taylor & Francis Online
    Corporate Taylor & Francis Group Help & Contact Students/Researchers Librarians/Institutions
    Connect with us Registered in England & Wales No. 3099067 5 Howick Place | London
    | SW1P 1WG © 2024 Informa UK Limited"'
  inline_citation: '>'
  journal: 'Precision Agriculture for Sustainability: Use of Smart Sensors, Actuators,
    and Decision Support Systems'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'SMART FARMING BASED ON IOT-EDGE COMPUTING: APPLYING MACHINE LEARNING MODELS
    FOR DISEASE AND IRRIGATION WATER REQUIREMENT PREDICTION IN POTATO CROP USING CONTAINERIZED
    MICROSERVICES'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Raja Gopal S.
  - Prabhakar V.S.V.
  citation_count: '3'
  description: 'Internet of Things (IoT) acts as an important role in the area of
    farming to enhance quality and productivity. In this paper, an intelligent edge
    based module with LoRa and IoT is proposed for smart farming. Smart farming consists
    of five layered architecture including edge computing to improve quality of data
    (QoD) and latency performance. For QoD, a Double selecting algorithm is used,
    and performance is measured using the following parameters: communications latency,
    data collecting time, energy consumption, and data quality. Quality of data is
    100% for the implemented double selection approach and energy consumption, communication
    latency, data collection time parameters are also minimum compared to other approaches.
    A test-bed for smart farming and auto-irrigation is implemented using LoRa and
    cloud. The proposed test-bed is evaluated in real-time, with temperature, humidity,
    and soil moisture being relayed to the cloud on a regular basis using LoRa, and
    the results assessed. With improved QoD and latency performance, the suggested
    intelligent edge based smart farming test-bed with LoRa and IoT delivers good
    acceptable results for smart farming and auto-irrigation.'
  doi: 10.1007/s13198-021-01576-z
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home International Journal of System Assurance
    Engineering and Management Article Intelligent edge based smart farming with LoRa
    and IoT Original article Published: 31 January 2022 Volume 15, pages 21–27, (2024)
    Cite this article Download PDF Access provided by University of Nebraska-Lincoln
    International Journal of System Assurance Engineering and Management Aims and
    scope Submit manuscript S. Raja Gopal & V. S. V. Prabhakar  531 Accesses 4 Citations
    Explore all metrics Abstract Internet of Things (IoT) acts as an important role
    in the area of farming to enhance quality and productivity. In this paper, an
    intelligent edge based module with LoRa and IoT is proposed for smart farming.
    Smart farming consists of five layered architecture including edge computing to
    improve quality of data (QoD) and latency performance. For QoD, a Double selecting
    algorithm is used, and performance is measured using the following parameters:
    communications latency, data collecting time, energy consumption, and data quality.
    Quality of data is 100% for the implemented double selection approach and energy
    consumption, communication latency, data collection time parameters are also minimum
    compared to other approaches. A test-bed for smart farming and auto-irrigation
    is implemented using LoRa and cloud. The proposed test-bed is evaluated in real-time,
    with temperature, humidity, and soil moisture being relayed to the cloud on a
    regular basis using LoRa, and the results assessed. With improved QoD and latency
    performance, the suggested intelligent edge based smart farming test-bed with
    LoRa and IoT delivers good acceptable results for smart farming and auto-irrigation.
    Similar content being viewed by others Agriculture Management Based on LoRa Edge
    Computing System Chapter © 2020 Smart Farming System Based on Fog Computing and
    LoRa Technology Chapter © 2020 IoT-Based Agricultural Automation Using LoRaWAN
    Chapter © 2022 1 Introduction Human resources required for farming may increase
    operational costs and the impact on productivity and quality may not improve.
    Integration of IoT with farming deploys remote management and monitoring systems
    and leads to the concept of smart farming. IoT for smart farming relies on wireless-sensor-networks
    (WSN). Further, the inclusion of intelligence and cloud computing along with IoT
    offer online analytics, real time monitoring and remote management. To support
    long distance communication with low power, LoRa technology can also be used in
    smart farming. Due to limitations and local regulations, LoRa does not support
    high data rates. In addition, the integration of Edge and Fog computing with LoRa
    into IoT systems can help to achieve a high level of energy efficiency for sensor
    nodes. When some abnormalities occur, Fog-assisted IoT systems can provide support
    for latency-critical applications. Lot of research is being done for smart farming
    to improve productivity and efficiency. Many researchers have proposed various
    algorithms and approaches to collect data from sensor nodes in wireless sensor
    networks meeting the current requirements (Xiong 2011; Pilloni 2013; Gao 2013;
    Rodríguez 2015; Tomovic 2016; Hassani 2017). Significance of internet of things,
    big data, cloud computing and fog computing, their opportunities and challenges
    are well described by various authors in (Wolfert 2017; Morota 2018; Schepers
    2018; Fleming 2018; Weersink 2018; Elijah 2018). Green house, smart farming effects
    are presented in (Trinh, 2018; Pathak, 2019; Dalezios 2019; Li 2019). In (Gia
    2019), author demonstrated edge AI based smart farming with IoT. The author, Xiaomin
    Li et. al. illustrated edge-computing enabled smart agriculture where double selection
    algorithm is used for multiple task data collection from sensor nodes in wireless
    sensor networks.This paper implements five layered architecture for smart farming
    using edge layer, LoRa and IoT. Double selection algorithm (Li, 2020) is used
    for the improvement of quality of data (QoD) and latency performance in wireless
    sensor networks. Because of its potential uses in a variety of fields, the Internet
    of Things has gained a great deal of interest. Some deployment environments, on
    the other hand, may be hostile, affecting the quality of data (QoD) and its accuracy.
    An IoT system should be able to clean its own sensed data by eliminating instances
    that are erroneous or incoherent in order to achieve a high level of reliability.
    Managing a vast volume of data produced by sensors is one of the most important
    difficulties for IoT. Latency, security, privacy, and excessive bandwidth use
    will all be issues if this large volume of data is sent directly to the cloud.
    Edge computing solves this problem (EC). In EC, data is processed at the network''s
    edge, close to the embedded devices. (Muthukumaran et al. 2021) discussed a thorough
    examination of smart systems based on IoT and EC. The study highlights the evolution
    of emerging technologies, the framework for EC-IoT-based smart farming, and the
    prerequisites for implementing the EC-IoT-based system. The framework for an EC-IoT-based
    smart agricultural system is investigated, and key prerequisites for implementing
    the system are specified. Further, test-bed is developed and smart farming parameters
    and auto-irrigation application are investigated and analyzed. The paper is organized
    as: Sect. 2 describes the five stage architecture for smart farming. Section 3
    illustrates the implementation of double selection algorithm in WSN for data collection
    and simulation results in comparison with traditional approaches are presented
    in Sect. 4. Section 5 presents test-bed model for smart farming and the results
    in cloud environment. Section 6 gives the conclusion of paper. 2 Edge based smart
    farming architecture For effective implementation of farming with improved productivity
    and quality, five layered smart farming architecture is proposed using edge layer,
    IoT and LoRa as represented in Fig. 1. Layer-1 is sensor layer that consists of
    several sensor node and actuator node clusters. This layer is connected with edge
    computing layer to send sensed data or to receive control commands from LoRa gateway.
    Fig. 1 Edge based smart farming architecture with IoT and LoRa Full size image
    Layer-2 is edge computing layer, an intermediate layer that reduces data transmitted
    over LoRa links. Egde gateways in edge computing layer receive and transmit data.
    Better security can be provided by including encryption algorithms like AES-128,
    256 or cryptography algorithms like ECDSA. Edge gateway can also use lossless
    or lossy data compression techniques to reduce traffic over LoRa gateway. Layer-3
    is a group of repeaters for the purpose of receiving data from edge layer and
    forwarding the data to next layer i.e. cloud layer. This layer consists of LoRa
    gateways. Layer-4 is cloud layer that offers big data analysis, data storage and
    complex algorithms based data processing. Application specific cloud services
    can be integrated in this layer. Layer-5 is end user layer which usually consists
    of web browser and mobile applications to have access to real time data and based
    on data to monitor or control the farm remotely. 3 Double selecting algorithm
    In this section, a suitable data collection technique is used in edge computing
    layer. This approach depends on data-type, nodes-position and other parameters.
    It also ensures high quality of data (QoD) and real time execution. This data
    acquisition method: Edge-Computing-Driven-for-Sensing-Control (ECDSC) using double
    selecting for QoD algorithm is implemented in simulation environment and the results:
    QoD, communication latency and energy consumption are investigated and compared
    with traditional approaches Periodically-Sensing-with-All-Nodes (PSAN) and Effective-Node-Sensing
    (ENS). Three performance parameters are used to investigate the performance of
    proposed architecture. (1) Quality of data (QoD): the ratio of suitable (valid)
    data to total sum of collected data. (2) Communication latency and data-collection-time
    (DCT): It is the time point where multi-sensor node sensed the data to the time
    when data server received all the data. (3) Energy-consumption (EC): It is the
    energy consumed for sensing, valid data transmission, and waiting. Quality of
    data (QoD): QoD index can be calculated mathematically as given in Eq. (1). $$
    \\theta_{j} = \\frac{{D_{v} \\left( {ta_{j} } \\right)}}{{D_{g} \\left( {ta_{j}
    } \\right)}} $$ (1) where, \\(\\theta_{j}\\) is QoD index for the task \\(ta_{j}\\).
    \\(D_{v} \\left( {ta_{j} } \\right)\\) = valid data of task \\(ta_{j}\\). \\(D_{g}
    \\left( {ta_{j} } \\right)\\) = sum of collected data of task \\(ta_{j}\\). The
    total QoD index for multi-task WSN with “m” number of tasks is presented as Eq.
    (2) $$ QoD\\left( {TA} \\right) = \\mathop \\sum \\limits_{j = 1}^{m} \\theta_{j}
    $$ (2) Maximum QoD can be calculated using Eq. (3) $$ \\begin{gathered} \\max
    QoD\\left( {TA} \\right) \\hfill \\\\ T_{g} \\left( {ta_{j} } \\right) \\le T_{{limit}}
    \\left( {ta_{j} } \\right) \\hfill \\\\ S_{i} \\cap S_{j} = \\phi \\left( {1 \\le
    i \\ne j \\le m} \\right)\\sum\\limits_{{i \\in m}} {S_{i} } \\le \\Delta \\hfill
    \\\\ \\end{gathered} $$ (3) Data communication time is the summation of node sensing
    time, queue waiting time and data transmission time. DCT of multiple tasks tg
    is presented in Eq. (4). $$ t_{g} = t_{s} + t_{c} + t_{w} $$ (4) where, ts is
    node sensing time, tc is data transmission time, and. tw is queue waiting time.
    For any sensor node vl, DCT can be calculated as formulated in Eq. (5) $$ T_{g}
    \\left( {ta_{j} ,v_{l} } \\right) \\leftarrow \\sum h_{i\\eta } t_{s} (v_{l} ,s_{\\eta
    } ,ta_{j} ) + k\\left( {v_{l} } \\right)\\left( {\\frac{{D\\left( {ta_{j} ,v_{l}
    } \\right)}}{{V_{c} }}} \\right) + t_{w} \\left( {ta_{j} ,v_{l} } \\right) $$
    (5) where, Vc is WSN communication speed, \\(k\\left({v}_{l}\\right)\\) is network
    route hop number. Energy consumption can be calculated by using Eq. (6) $$ E_{c}
    = \\sigma t_{s} + \\zeta t_{c} + \\tau t_{w} $$ (6) where, Ec is energy consumption,
    σ is power consumption of sensing time, ζ is power consumption of communication
    time, τ is power consumption of waiting time. Algorithm-1 gives double selecting
    algorithm implemented for enhancement of QoD and latency parameters. Algorithm-1.
    Double selecting for QoD algorithm. Flowchart implemented [18] in simulation environment
    is illustrated in Fig. 2. Simulation runs until the number of simulation count
    is reached and collects data. Once count is reached, results are obtained. Table
    1 tabulates the simulation parameters used to set-up simulation environment and
    to obtain results. Fig. 2 Flow chart implemented in simulation environment Full
    size image Table 1 Parameters in simulation environment Full size table 4 Results
    and discussions QoD with respect to various valid sensor numbers and included
    node numbers is illustrated in FigS. 3 and 4 respectively. These results show
    the comparative results of ECDSC (double selection algorithm) with traditional
    techniques PSAN and ESN. It can be observed from Fig. 3 that ECDSC achieved 100%
    QoD for different sensor numbers where as ESN obtained 20, 40, 60, 80 and 100%
    QoD. However, ESN performs better than PSAN approach. As observed from Fig. 4,
    with increase in included node number, QoD of PSAN approach increases while QoD
    of ESN and ECDSC is at stable value of 40 and 100% respectively. Therefore, ECDSC
    collects more valid data compared to other approaches. Fig. 3 Quality of data
    for different sensor numbers Full size image Fig. 4 Quality of data for different
    cover node numbers Full size image To evaluate the latency of double selection
    algorithm, communication latency and data collection time (DCT) are used. Figure
    5 illustrates communication latency results at various data rates. It is observed
    that communication latency decreases with increase in data rate as higher data
    rates support less transmission time. Out of the three approaches ECDSC, ESN and
    PSAN, ECDSC outperforms and ESN performs better than PSAN. At low data rates,
    communication latency is very high in PSAN approach. Figure 6 shows the outcomes
    of three approaches in terms of data collecting time for different numbers of
    covering nodes. When compared to ESN and PSAN, ECDSC has a much lower DCT. Communication
    latency and DCT are expected to be as low as feasible to improve performance.
    As data is acquired from all, the PSAN approach depicts the highest DCT and communication
    latency. In ESN technique, data is collected only from selected sensor nodes and
    hence it exhibits better performance than PSAN in DCT and communication latency.
    ECDSC achieved minimum DCT and communication latency. Fig. 5 Communication latency
    at various data rates Full size image Fig. 6 DCT for different covering node numbers
    Full size image Figure 7 shows the energy consumption data for three techniques
    for varying valid sensor counts. The ECDSC approach uses a little amount of energy,
    which increases as the number of good sensors grows. The adopted double selection
    strategy produces the best results of the three possibilities. As PSAN and ESN
    do not consider suitable sensors in their respective techniques, ECDSC outperforms
    PSAN and ESN approaches in terms of energy consumption. The results (rounded values)
    obtained for three approaches: ECDSC, ESN and PSAN for the parameters QoD, communication
    latency, DCT and energy consumption are tabulated in Tables 2, 3, 4, 5 and 6 respectively.
    Fig. 7 Energy consumption for different sensor numbers Full size image Table 2
    QoD different sensor numbers Full size table Table 3 QoD different cover node
    numbers Full size table Table 4 Communication latency (sec) at various data rates
    (Mbps) Full size table Table 5 DCT (sec) for various cover node numbers Full size
    table Table 6 For various valid sensor numbers, Energy consumption (J) Full size
    table 5 Smart farming test-bed The DHT11 sensor, soil moisture sensor, controller
    unit, and LoRa gateway are used to create a prototype test-bed for smart farming
    applications. It is used in a small test farm to get the parameters temperature,
    humidity, and soil moisture by connecting the test-bed to a cloud platform. Figure
    8a and b present soil moisture before and after watering respectively. Temperature
    and humidity results obtained through DHT11 sensor are demonstrated in Figs. 9
    and 10 respectively. When soil moisture decreases below 50%, automatic watering
    starts and when moisture level is 80%, watering stops. Figure 11 illustrates soil
    moisture results for automatic watering. Fig. 8 a Before watering, checking the
    soil using a soil moisture sensor. b After watering, soil with soil moisture sensor
    Full size image Fig. 9 Cloud results of farm temperature Full size image Fig.
    10 Cloud results of farm Humidity Full size image Fig. 11 Cloud results of farm
    Soil moisture Full size image 6 Conclusion In this paper, edge based IoT test-bed
    is implemented for smart farming application with five layered architecture. To
    enhance the parameters: quality of data, communication latency, energy consumption
    and data collection time double selecting algorithm is implemented. Quality of
    data is 100% for the implemented double selection approach and energy consumption,
    communication latency, data collection time parameters are also minimum compared
    to ESN and PSAN approaches. The LoRa gateway and cloud platform are used to create
    a test-bed for smart farming and auto-irrigation. In a cloud environment, farm
    characteristics like as temperature, humidity, and soil moisture are measured
    and results are obtained. The proposed test-bed with five layered architecture
    shows good results in agreement for smart farming applications. Edge computing
    layer reduces latency and energy consumption and achieved 100% QoD. References
    Dalezios NR, Dercas N, Spyropoulos NV, Psomiadis E (2019) Remotely sensed methodologies
    for crop water availability and requirements in precision farming of vulnerable
    agriculture. Water Resour Manage 33(4):1499–1519 Article   Google Scholar   Elijah
    O, Rahman TA, Orikumhi I, Leow CY, Hindia MN (2018) An overview of Internet of
    Things (IoT) and data analytics in agriculture: Benefits and challenges. IEEE
    Internet Things J 5(5):3758–3773 Article   Google Scholar   Fleming A, Jakku E,
    Lim-Camacho L, Taylor B, Thorburn P (2018) Is big data for big farming or for
    everyone? Perceptions in the Australian grains industry. Agron Sustain Dev 38(3):1–10
    Article   Google Scholar   Gao H, Fang X, Li J, Li Y (2013) Data collection in
    multi-application sharing wireless sensor networks. IEEE Trans Parallel Distrib
    Syst 26(2):403–412 Article   Google Scholar   Gia TN, Qingqing L, Queralta JP,
    Zou Z, Tenhunen H, Westerlund T (2019) Edge AI in smart farming IoT: CNNs at the
    edge and fog computing with LoRa. In 2019 IEEE AFRICON (pp. 1–6). IEEE Hassani
    A, Plata-Chaves J, Bahari MH, Moonen M, Bertrand A (2017) Multi-task wireless
    sensor network for joint distributed node-specific signal enhancement, LCMV beamforming
    and DOA estimation. IEEE J Sel Topics Signal Process 11(3):518–533 Article   Google
    Scholar   Li X, Ma Z, Chu X, Liu Y (2019) A cloud-assisted region monitoring strategy
    of mobile robot in smart greenhouse. Mob Inf Syst 2019:1–10 Google Scholar   Li
    X, Zhu L, Chu X, Fu H (2020) Edge computing-enabled wireless sensor networks for
    multiple data collection tasks in smart agriculture. J Sens 2020:1–9 Google Scholar   Morota
    G, Ventura RV, Silva FF, Koyama M, Fernando SC (2018) Big data analytics and precision
    animal agriculture symposium: Machine learning and data mining advance predictive
    big data analysis in precision animal agriculture. J Anim Sci 96(4):1540–1550
    Article   Google Scholar   Muthukumaran V, Kumar VV, Joseph RB, Munirathanam M,
    Jeyakumar B (2021) Improving network security based on trust-aware routing protocols
    using long short-term memory-queuing segment-routing algorithms. Int J Inf Technol
    Project Manag 12(4):47–60. https://doi.org/10.4018/ijitpm.2021100105 Article   Google
    Scholar   Pathak HS, Brown P, Best T (2019) A systematic literature review of
    the factors affecting the precision agriculture adoption process. Precision Agric
    20(6):1292–1316 Article   Google Scholar   Pilloni V, Navaratnam P, Vural S, Atzori
    L, Tafazolli R (2013) TAN: a distributed algorithm for dynamic task assignment
    in WSNs. IEEE Sens J 14(4):1266–1279 Article   Google Scholar   Rodríguez S, De
    Paz JF, Villarrubia G, Zato C, Bajo J, Corchado JM (2015) Multi-agent information
    fusion system to manage data from a WSN in a residential home. Inf Fusion 23:43–57
    Article   Google Scholar   Schepers J (2018) Precision agriculture for sustainability.
    Precision Agric 20(1):1–3 Article   Google Scholar   Tomovic S, Radusinovic I
    (2016) Allocation algorithm for handling multiple applications in software-defined
    WSN. In 2016 24th Telecommunications Forum (TELFOR) (pp. 1–4). IEEE Trinh DC,
    Truvant TC, Bui TD (2018) Design of automatic irrigation system for greenhouse
    based on LoRa technology. In 2018 International conference on advanced technologies
    for communications (ATC) (pp. 72–77). IEEE Weersink A, Fraser E, Pannell D, Duncan
    E, Rotz S (2018) Opportunities and challenges for big data in agricultural and
    environmental analysis. Annu Rev Res Econ 10:19–37 Google Scholar   Wolfert S,
    Ge L, Verdouw C, Bogaardt MJ (2017) Big data in smart farming–a review. Agric
    Syst 153:69–80 Article   Google Scholar   Xiong S, Li J, Li M, Wang J, Liu Y (2011)
    Multiple task scheduling for low-duty-cycled wireless sensor networks. In: 2011
    Proceedings IEEE INFOCOM (pp. 1323–1331). IEEE Download references Funding No
    funding. Author information Authors and Affiliations Department of ECE, Koneru
    Lakshmaiah Education Foundation, Guntur, India S. Raja Gopal & V. S. V. Prabhakar
    Corresponding author Correspondence to S. Raja Gopal. Ethics declarations Conflicts
    of interest The writers claim that they have no conflicts of interest. Human participants
    and/or animals No animals or humans were harmed, according to the authors. Additional
    information Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Reprints and permissions About this article Cite this article Raja Gopal, S.,
    Prabhakar, V.S.V. Intelligent edge based smart farming with LoRa and IoT. Int
    J Syst Assur Eng Manag 15, 21–27 (2024). https://doi.org/10.1007/s13198-021-01576-z
    Download citation Received 01 September 2021 Revised 21 October 2021 Accepted
    30 November 2021 Published 31 January 2022 Issue Date January 2024 DOI https://doi.org/10.1007/s13198-021-01576-z
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Data-collection-time Edge computing Internet of Things Latency
    Quality of data Smart farming Use our pre-submission checklist Avoid common mistakes
    on your manuscript. Sections Figures References Abstract Introduction Edge based
    smart farming architecture Double selecting algorithm Results and discussions
    Smart farming test-bed Conclusion References Funding Author information Ethics
    declarations Additional information Rights and permissions About this article
    Advertisement Discover content Journals A-Z Books A-Z Publish with us Publish
    your research Open access publishing Products and services Our products Librarians
    Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC
    Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy
    rights Accessibility statement Terms and conditions Privacy policy Help and support
    129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: International Journal of System Assurance Engineering and Management
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Intelligent edge based smart farming with LoRa and IoT
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ooi M.P.L.
  - Sohail S.
  - Huang V.G.
  - Hudson N.
  - Baughman M.
  - Rana O.
  - Hinze A.
  - Chard K.
  - Chard R.
  - Foster I.
  - Spyridopoulos T.
  - Nagra H.
  citation_count: '0'
  description: Sensor applications have become ubiquitous in modern society as the
    digital age continues to advance. AI-based techniques (e.g., machine learning)
    are effective at extracting actionable information from large amounts of data.
    An example would be an automated water irrigation system that uses AI-based techniques
    on soil quality data to decide how to best distribute water. However, these AI-based
    techniques are costly in terms of hardware resources, and Internet-of-Things (IoT)
    sensors are resource-constrained with respect to processing power, energy, and
    storage capacity. These limitations can compromise the security, performance,
    and reliability of sensor-driven applications. To address these concerns, cloud
    computing services can be used by sensor applications for data storage and processing.
    Unfortunately, cloud-based sensor applications that require real-time processing,
    such as medical applications (e.g., fall detection and stroke prediction), are
    vulnerable to issues such as network latency due to the sparse and unreliable
    networks between the sensor nodes and the cloud server [1]. As users approach
    the edge of the communications network, latency issues become more severe and
    frequent. A promising alternative is edge computing, which provides cloud-like
    capabilities at the edge of the network by pushing storage and processing capabilities
    from centralized nodes to edge devices that are closer to where the data are gathered,
    resulting in reduced network delays [2], [3].
  doi: 10.1109/MIM.2023.10328671
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Instrumentation & Measur...
    >Volume: 26 Issue: 9 Measurement and Applications: Exploring the Challenges and
    Opportunities of Hierarchical Federated Learning in Sensor Applications Publisher:
    IEEE Cite This PDF Melanie Po-Leen Ooi; Shaleeza Sohail; Victoria Guiying Huang;
    Nathaniel Hudson; Matt Baughman; Omer Rana; Annika Hinze; Kyle Chard; Ryan Chard
    All Authors 203 Full Text Views Abstract Document Sections Federated Learning
    for Precision Spraying A Hierarchical Federated Learning Architecture for Smart
    Farrning Application Requirements for Hierarchical Federated Learning Opportunities
    and Open Problems Conclusion Authors Figures References Keywords Metrics Abstract:
    Sensor applications have become ubiquitous in modern society as the digital age
    continues to advance. AI-based techniques (e.g., machine learning) are effective
    at extracting actionable information from large amounts of data. An example would
    be an automated water irrigation system that uses AI-based techniques on soil
    quality data to decide how to best distribute water. However, these AI-based techniques
    are costly in terms of hardware resources, and Internet-of-Things (IoT) sensors
    are resource-constrained with respect to processing power, energy, and storage
    capacity. These limitations can compromise the security, performance, and reliability
    of sensor-driven applications. To address these concerns, cloud computing services
    can be used by sensor applications for data storage and processing. Unfortunately,
    cloud-based sensor applications that require real-time processing, such as medical
    applications (e.g., fall detection and stroke prediction), are vulnerable to issues
    such as network latency due to the sparse and unreliable networks between the
    sensor nodes and the cloud server [1]. As users approach the edge of the communications
    network, latency issues become more severe and frequent. A promising alternative
    is edge computing, which provides cloud-like capabilities at the edge of the network
    by pushing storage and processing capabilities from centralized nodes to edge
    devices that are closer to where the data are gathered, resulting in reduced network
    delays [2], [3]. Published in: IEEE Instrumentation & Measurement Magazine ( Volume:
    26, Issue: 9, December 2023) Page(s): 21 - 31 Date of Publication: 24 November
    2023 ISSN Information: DOI: 10.1109/MIM.2023.10328671 Publisher: IEEE Funding
    Agency: Sensor applications have become ubiquitous in modern society as the digital
    age continues to advance. AI-based techniques (e.g., machine learning) are effective
    at extracting actionable information from large amounts of data. An example would
    be an automated water irrigation system that uses AI-based techniques on soil
    quality data to decide how to best distribute water. However, these AI-based techniques
    are costly in terms of hardware resources, and Internet-of-Things (IoT) sensors
    are resource-constrained with respect to processing power, energy, and storage
    capacity. These limitations can compromise the security, performance, and reliability
    of sensor-driven applications. To address these concerns, cloud computing services
    can be used by sensor applications for data storage and processing. Unfortunately,
    cloud-based sensor applications that require real-time processing, such as medical
    applications (e.g., fall detection and stroke prediction), are vulnerable to issues
    such as network latency due to the sparse and unreliable networks between the
    sensor nodes and the cloud server [1]. As users approach the edge of the communications
    network, latency issues become more severe and frequent. A promising alternative
    is edge computing, which provides cloud-like capabilities at the edge of the network
    by pushing storage and processing capabilities from centralized nodes to edge
    devices that are closer to where the data are gathered, resulting in reduced network
    delays [2], [3]. The most common machine learning approach used in cloud-based
    applications is Centralized Learning (Fig. 1a) where datasets from different clients
    are sent to a central cloud for storage and to train a machine learning model.
    A model trained in this centralized manner is potentially the most accurate model
    as it has been trained on all of the datasets. However, centralized training introduces
    challenges associated with transferring data to the cloud, such as data privacy
    and communication overheads. Conversely, Local Learning is an alternative where
    we train the machine learning models directly on the devices where the data are
    hosted using their own local computing resources (Fig. 1b), Since data are not
    shared among clients or with the server, local learning solves the privacy and
    communication overhead issues of centralized learning. However, local learning
    alone can struggle with machine learning bias. This is an emergent problem since
    data at these devices are often non-independent and identically distributed (iid).
    For instance, many data patterns sensors collect are geographically-related. Thus,
    sensors from different locations will likely collect different types of data.
    Learning independently can result in models that do not generalize well which
    can afflict the knowledge extraction across the entire system. A third alternative
    is to apply the recent Federated Learning (FL) paradigm for distributed learning
    (Fig. 1c). FL is a distributed machine learning technique that enables multiple
    clients (e.g., mobile devices, IoT devices) to collaboratively train a shared
    global model without needing their raw data transmitted to the cloud. Instead,
    local models are trained on each client using their own data, similar to local
    learning. Where FL diverges from local learning is that the server will periodically
    collect model updates from the client devices and “average” them to update the
    global model, which is then redistributed to the client devices for further training.
    FL has shown to work well in the face of non-iid data distributions which are
    common in sensor applications. Therefore, FL is a promising solution for several
    challenges associated with decentralized machine learning, such as data privacy,
    communication efficiency, scalability, data unavailability or heterogeneity, system
    heterogeneity in terms of computation power, storage, and energy availability,
    computation efficiency, and better model performance [4], [5]. Standard FL may
    incur high communication costs as the model updates need to be shared with the
    central server, creating an interesting trade-off when considering that centralized
    training requires that all data be shared with the central server (Fig. 2a). In
    cases where the communication between the sensors and the central server is very
    poor (i.e., low data transfer rate, unreliable connection), this can be a significant
    challenge. Such overhead can affect individual sensor life and the overall performance
    of the application, especially if the sensor application has power constraints
    and limited connectivity [6]. One possible solution is to expand the infrastructure
    and use hierarchical FL. Under hierarchical FL, there are additional aggregation
    nodes that may have stronger connections to the nearby sensors. These aggregation
    nodes also participate in additional levels of aggregation to make sure knowledge
    is learned throughout the entire system. Hierarchical FL overcomes some of these
    issues by allowing data to remain on the edge devices, such as sensors and smart
    devices. It enables optimization of computational and communication overheads
    that can be customized to suit the needs of specific applications and networks.
    Fig. 1. Comparison of (a) Centralized, (b) Local, and (c) Federated learning architectures.
    Federated learning enables collaborative learning among multiple edge devices
    without compromising data privacy. Centralized learning relies on a central server
    to train a global model on data from all devices, while local learning trains
    multiple local models on disjoint subsets of data. Show All Fig. 2. Illustration
    of (a) Standard federated learning (FL) and (b) Hierarchical federated learning
    and their interaction between lot devices, edge and cloud servers. The aggregation
    nodes are where the local model updates from the participating devices or intermediary
    nodes are combined to form a global model. Show All Different approaches of hierarchical
    FL can be employed by making use of available networking hubs and structures,
    such as a cloud server that is accessed over the internet and an edge server,
    which is a computer server that is located closer to the devices that it serves
    at the network edge (Fig. 2b). One option is to aggregate models within a cloud
    server, while other options can involve hierarchical aggregation at the edge server
    which sends the model updates to the cloud for further aggregation or storage.
    This allows local processing power and storage capacity to perform distributed
    learning without relying solely on a central server, resulting in improved scalability,
    reduced latency and privacy preservation of sensitive data. While hierarchical
    FL has shown potential in various domains, including precision agriculture and
    environmental monitoring, [4] points out that very few production FL applications
    have been reported, with most work being proof-of-concept prototypes. The paradigm
    itself is relatively new and its implementation requires careful consideration
    of various issues such as data inequality [7], [8] and malicious attacks [9]–[11].
    Another important challenge to overcome with FL is the cost of adoption and the
    incentives to incorporate FL into existing systems. In FL, devices must contribute
    their computational resources and data to train a model. However, some organizations
    may be reluctant to participate in a large FL endeavor due to the computational
    resources needed to participate and data transfer and communication costs. Furthermore,
    there may not be the right incentives to join if a benefit from the global model''s
    performance is not properly recognized. For example, an industry leader may be
    less incentivized to adopt multi-organizational FL if they are already the primary
    source of data as their marginal benefit would be significantly lower. To address
    these challenges, various methods have been proposed to incentivize participation
    in FL. These methods include providing monetary or non-monetary rewards for contributing
    data, ensuring that the global model''s performance benefits all participants,
    and providing greater control over the use of data by participants. For example,
    [12] proposed a reward-based mechanism that provides tokens to devices that contribute
    data to the FL model, which can then be used to purchase services or products.
    Authors in [13] propose a privacy-preserving FL model that allows participants
    to retain control over their data and provides incentives for contributing high-quality
    data. In this article, we present a case study of the feasibility and benefits
    of FL for precision agricultural spraying and extend it to a larger conceptual
    hierarchical FL architecture for smart farming. We also discuss ongoing efforts
    to improve hierarchical FL systems using standardized quality frameworks to systematically
    identify and prioritize the efforts. Finally, we cover open problems associated
    with this technology and highlight its potential to transform numerous domains
    such as precision agriculture, environmental monitoring, healthcare, and smart
    infrastructure. Our goal is to provide a roadmap for further development of hierarchical
    FL in instrumentation and measurement. Federated Learning for Precision Spraying
    In the previous section, we discussed the different types of learning architectures
    that can be applied to edge devices. In this section, we present a case study
    involving precision spraying in agriculture (Fig. 3) to highlight the benefits
    of FL. Traditional spraying methods often apply pesticides uniformly across an
    entire field, leading to waste and potential harm to crops. In contrast, precision
    spraying uses cameras, optical sensors, and GPS receivers to provide accurate
    location data, enabling robots to apply spray only where necessary. However, the
    advanced data processing and machine learning required for precision spraying
    can be resource-intensive, making it challenging to perform all operations on
    the sensor or robot alone. Data collected from sensors can be processed using
    cloud computing relying on connectivity, but this can be a challenge in remote
    environments. By relying on computational resources at the edge server, data can
    be processed in real-time or limited-time to accelerate the decision-making process.
    FL can further improve spray precision by enabling learning from different data
    sources (e.g., across different locations with different distributions of plant/weed
    species) while preserving data privacy and security. This is particularly important
    for farmers who are concerned about data privacy and potential cyberattacks. Furthermore,
    FL can be flexibly performed on a network of edge devices potentially of different
    types, which can scale up or down to meet the needs of different agricultural
    operations, making it a valuable tool for precision spraying. Fig. 3. Precision
    spraying prototype using edge federated learning. Show All In this feasibility
    study, we limit the discussion to a single source of information, which is a near-infrared
    hyperspectral imaging system that is used to guide the operations of a mobile
    precision pesticide spraying robot at each of the three pasture sites (Site A,
    B and C). Each robot processes the input information using a local machine learning
    model (e.g., an image classifier implemented by a Convolutional Neural Network).
    The intent is to have the robot apply spray to a plant only if the plant is classified
    as a weed, ensuring minimal impact on crops. Storing a machine learning model
    locally ensures that spray operations can continue in areas without network coverage.
    Although the local model is trained using local data (∼71 Megabytes), it periodically
    receives updates (∼0.04 Megabytes) from the server via FL to incorporate knowledge
    learned from other pasture sites. With FL, communication is significantly reduced
    from 71 Megabytes to 0.04 Megabytes. Different forms of computation resources
    reside in each pasture site, with the model potentially being trained on the robot
    using single-board computational devices such as Raspberry Pi or Jetson Nano.
    The locally-trained models from each pasture site are then aggregated using Federated
    Averaging [14], a popular aggregation algorithm in FL. The pasture sites are interconnected
    using communication infrastructure for sharing information and enabling FL. The
    dataset used during our evaluation consisted of four labelled classes: three species
    of pastoral weed and a background class of grass (Table 1). The evaluation results
    for our case study with different machine learning methods are shown in Fig. 4,
    whereby FL achieves 96% accuracy. This result is comparable to centralized learning
    where all the data are present, and a marked improvement compared to local learning
    where only local data are present. Our result confirms that FL is capable of addressing
    the dilemma between network latency, bandwidth limitations, data privacy and data
    sharing while providing comparable model performance. Table 1 Pasture Image dataset
    with imbalanced class distributions and disparate volumes of data across sites
    A Hierarchical Federated Learning Architecture for Smart Farrning We now consider
    broadening the precision spraying use case to a larger conceptual hierarchical
    FL architecture for smart farming. Precision agriculture often involves gathering
    heterogeneous data from various sensors within a farm. By leveraging FL, farmers
    can benefit from insights gained from other farms without compromising the privacy
    of their own raw data. This will enable them to enhance crop yields and minimize
    wastage. Fig. 5 illustrates the physical, cyber and networked (interconnected)
    view of a precision agriculture robot at work. Fig. 5a shows the “physical world”
    where the robot has sensors on board and navigates to perform tasks such as harvesting,
    weeding, and spraying. Fig. 5b represents the “cyber world” where the robot processes
    input information from its sensors using a local machine learning model to perform
    high priority tasks that must continue even when the communication fails (i.e.,
    navigation). The robot also monitors the quality of service for communication
    and decides whether to pass on further information or receive information from
    the cloud. Fig. 5c is the “interconnected world” where a group of robots is connected
    via a communication infrastructure for FL to share knowledge and improve their
    respective local machine learning models based on collective learned experiences.
    The types of sensor systems used for smart farming are heterogeneous. For example,
    a smart farm may rely heavily on IoT sensors and cameras to collect and process
    data related to soil quality and plant visual information. Additionally, smart
    farms may use multiple data sources to optimize farming operations. These data
    sources may include historical data, real-time sensor data, and publicly available
    data to predict soil water levels and future weather patterns with machine learning
    models. Fig. 6 illustrates an example of a hierarchical FL architecture for smart
    farming to train lightweight machine learning models on edge devices. Fig. 4.
    Classification accuracy comparison between centralized, local, and federated machine
    learning approaches trained on dataset described in table 1. Show All Fig. 5.
    Illustration of hierarchical federated learning in precision agriculture. (a)
    Physical world; (b) Cyber world; (c) Interconnected world. Show All Fig. 6. Illustration
    of a hierarchical federated learning architecture for smart farming. Show All
    In this example, the architecture uses Apache Kafka, a popular distributed event
    streaming platform. Kafka is used to collect data from IoT devices and sensors
    located at the edge of the network, enabling real-time processing and response
    to changing conditions. Instead of waiting for large amounts of data to be collected
    and sent to a remote, central server, data streaming enables the sensor devices
    to transmit the local models to the edge servers in real-time—thus reducing latency
    and facilitating more efficient use of available network bandwidth. Hierarchical
    FL allows for adaptive clustering of the edge devices involved in the FL process,
    whereby groups of devices can be divided into smaller clusters for the training
    depending on device availability, scalability and power requirements. By making
    use of Kafka clusters to facilitate communication between the edge devices and
    the FL framework, fault tolerance can be incorporated with multiple brokers running
    on different machines to ensure high availability and data replication. FuncX
    [15] is a federated function-as-a-service platform that enables computation, represented
    as programming functions, to be dispatched for execution on edge resources. FuncX
    is used here to manage the deployment of the machine learning models to the edge
    devices and to invoke the models for inference and training. FuncX uses the Parsl
    [16] parallel programming library to manage the parallel execution of the FL tasks
    on edge devices. It is worth noting that this simple architecture can be easily
    extended to include heterogeneous resources such as Raspberry Pis and Nvidia Jetsons
    with GPUs, which can be deployed near the sensors for more local data processing.
    This introduces interesting research questions on the implicit trade-offs related
    to such system heterogeneity. Overall, using a hierarchical FL architecture for
    edge devices has the potential to revolutionize smart farming by enabling more
    efficient and effective data sharing, processing and decision-making, resulting
    in improved crop yields and reduced water waste. It is also resilient against
    issues such as unreliable network connectivity, which is an important consideration
    as limited network coverage is commonly encountered in agricultural land. Similar
    architectures can be developed for other applications such as: Environmental monitoring:
    Hierarchical FL could enable better analysis of data collected from remote sensors
    and devices, leading to better understanding and management of natural resources.
    Healthcare: Medical sites can collaborate and share machine learning models to
    improve the accuracy of diagnosis and treatment without having to share sensitive
    patient information. Wearable monitoring devices: IoT devices are integrated into
    devices to monitor human biometric data such as heart rate, temperature and movement
    patterns aiming to identify potential safety hazards and improve worker safety
    in the hazardous work environment. Application Requirements for Hierarchical Federated
    Learning Hierarchical FL systems have great potential to realize new sensor-driven
    applications, as discussed in the previous section. However, the technology faces
    numerous challenges due to the diverse nature of these applications and the equally
    diverse performance requirements. Some of these requirements can conflict with
    one another. To address the needs of these systems systematically, we recommend
    using two widely recognized standards for software quality and data quality, which
    are the ISO/IEC 25012 [17] and ISO/IEC 25010 [18] frameworks, respectively. By
    applying these frameworks, we can identify and prioritize the requirements, design
    appropriate performance metrics, and develop techniques and algorithms that optimize
    the trade-offs between conflicting requirements. This will help ensure that hierarchical
    FL systems are reliable, efficient, and effective and can be deployed in a wide
    range of real-world applications. Functionality is a crucial metric that measures
    the system''s ability to perform consistently and accurately over time. This metric
    is closely related to data quality since poor-quality data can result in unreliable
    and inaccurate machine learning models. Optimizing hierarchical FL parameters,
    applying model personalization and transfer learning techniques, and adapting
    the models to the specific characteristics of each device can help improve functionality.
    Reliability is important for edge devices, which often operate under intermittent
    connectivity, mobility, and resource-constrained conditions [19]. These challenges
    can make it difficult to develop efficient and reliable FL systems. To overcome
    these challenges, researchers are exploring techniques such as task offloading
    [20], adaptive sampling [21], and reinforcement learning to optimize the system
    performance and adapt to changing edge computing environments [22]. Redundancy
    can be introduced by configuring the edge devices into different clusters, which
    may improve reliability in hierarchical FL. Performance efficiency can be evaluated
    by quantifying the computation and communication overheads. In hierarchical FL
    systems, the edge server acts as a coordinator, responsible for aggregating and
    processing the data from multiple edge devices [23]. This can create a huge computationaland
    communication burden on the edge server, which can result in high latency, reduced
    system performance, and increased communication costs. To mitigate these challenges,
    researchers are exploring techniques such as partitioning and scheduling to distribute
    the computation and communication load across multiple edge servers and among
    cloud and edge servers [6]. The use of data streaming techniques helps to further
    reduce communication overheads while also increasing the reliability of the edge
    systems. Furthermore, due to resource constraints, mobility, and varying edge
    computing environments, engineers should consider metrics like system scalability,
    cost/benefit balance, and application size on the edge device to evaluate resource
    utilization. Techniques like task offloading, adaptive sampling, and reinforcement
    learning can further optimize system performance and adapt to changing edge computing
    environments. The convergence rate of the learning process is also a critical
    consideration. Compatibility is essential in terms of device heterogeneity, where
    edge devices may not have the same type of sensors and may run on different operating
    systems and software. Edge devices used in FL systems may differ in terms of their
    hardware capabilities, such as CPU processing power, memory, and battery life,
    as well as their software configurations, such as operating systems and libraries.
    This heterogeneity can lead to statistical heterogeneity in the data collected
    from the devices, making it challenging to develop models that generalize well
    across all devices [24]. To overcome this challenge, researchers are exploring
    methods such as transfer learning [25] and model personalization [26] that can
    adapt the models to the specific characteristics of each device. Security is a
    significant concern for hierarchical FL systems. FL provides some level of privacy,
    but to protect data and models from malicious actors, techniques like secure aggregation,
    differential privacy, blockchain, and homomorphic encryption can be applied. Hierarchical
    FL systems may have edge servers from different sources, which makes the systems
    more vulnerable to security threats such as data leakage, model poisoning, and
    inference attacks [23]. To address these challenges, researchers are exploring
    techniques such as secure aggregation [27], differential privacy [28], and homomorphic
    encryption [29] to ensure that the data and models are protected from malicious
    actors. Metrics like confidentiality, currentness, and reliability can be used
    to evaluate the severity of security challenges, as defined by the ISO/IEC 25010
    standard for data security and accessibility. Dynamic infrastructure is a common
    problem in hierarchical FL systems. In these settings, the aggregation nodes are
    not necessarily static or fixed. It may be necessary for the aggregation node
    to change over time if a node is rendered offline due to low battery or a poor
    communication channel. This makes ensuring stable hierarchical FL difficult. Strategies
    to prevent this can be resource-aware real-time decision making where edge devices
    coordinate among themselves to decide how communication should be done among them.
    Software support: Currently, common FL frameworks (e.g., Flower, PySyft) do not
    natively support hierarchical FL, especially for highly dynamic systems where
    infrastructure may change over time. Opportunities and Open Problems The opportunities
    and future research directions for using FL for sensing and measurement can be
    organized into three key axes: resource management and coordination of devices
    that make up the FL system; data management and access; and application-specific
    considerations, such as the use of UAVs [30] and Internet of Medical Things [23].
    In this section, we elaborate on the first two axes, which have general applicability
    across different domains. The third is highly domain-specific and thus not included
    in this general roadmap. Resource Management and Coordination FL opens up new
    methods for supporting fault tolerance of IoT devices. The use of multiple IoT
    devices increases the completeness of data and facilitates the detection and correction
    of erroneous readings and faulty operations. An FL system capable of supporting
    multiple heterogeneous devices and able to recover from faults is reported in
    [31]. A hierarchical FLsystem able to account for the hierarchy of edge servers
    may result in multiple memberships for IoT devices requiring recovery and adaptation
    at several levels. Another exciting direction is the integration of self-adaptivity
    into IoT devices using hierarchical FL. IoT devices become self-adaptive by learning
    from their past behaviors and performance data, can detect changes in environmental
    conditions and predict equipment failure, and automatically adjust device parameters
    [32]. As IoT devices collect knowledge about their environment, they must share
    knowledge to better understand their environment and its dynamics. However, a
    collective system of self-aware devices does not have a centralized knowledge
    base. FL could facilitate sharing of knowledge between devices as a collective.
    Unlike context-aware systems, which typically assume a ground-truth-based environmental
    context that is true for all IoT devices, it is explicitly acknowledged that self-aware
    devices in the collective systems will have different experiences of a shared
    environment [33]. A federated system can be expanded to incorporate information
    for the edge servers at the membership level to provide self-adaptiveness for
    different branches of the edge computing infrastructure and provide context on
    how the information was gathered. Hierarchical FL architectures are inherently
    resilient against network latency and bandwidth limitations. They therefore open
    up new opportunities for network optimization due to the heterogeneity of edge
    environments. For example, network routing needs to be dynamically adapted and
    optimized to the traffic patterns and topologies to improve network throughput
    and latency. Meanwhile, new network designs and paradigms can be introduced, such
    as software-defined networking and blockchain. New algorithms and techniques that
    are specifically designed to optimize resource allocation in edge computing environments
    can dynamically allocate computational and communication resources to different
    tasks based on their priority and application-specific requirements. This allows
    for real-time balancing of multiple objectives. For example, a healthcare application
    that uses a large number of medical sensors to collect, adapt, and react to medical
    information in real time requires security robustness and resource optimization
    for computational and communication tasks [34]. The energy consumption of IoT
    devices and edge computing infrastructure can be optimized by dynamically adapting
    the computational workload and communication overhead to the available energy
    and power constraints. Exploring multi-objective optimization techniques such
    as evolutionary algorithms and Pareto optimization is another direction of research
    that is crucial due to the complexity of hierarchical FL systems. There is a need
    to balance multiple objectives and constraints, such as communication overhead,
    energy consumption, privacy preservation, and security, while creating a global
    machine learning model with limited and heterogeneous resources. This requires
    the coordination of multiple clients and servers at different layers of the system,
    creating a complex interaction network. Additionally, the underlying technologies
    used, such as wireless communication, data storage and processing, and machine
    learning algorithms, introduce their sets of constraints and trade-offs that need
    to be considered in the optimization process, where not only performance but scalability
    needs careful consideration when optimizing these conflicting objectives. Fig.
    7. Future directions for hierarchical federated learning in sensor applications.
    Show All Data Management and Access While FL adds a layer of privacy around user
    data by eliminating the need to share data with others, sharing model updates
    do not offer privacy guarantees as individual data points can be reconstructed
    [35]. To address this issue, privacy-preserving FL can be expanded using techniques
    such as differential privacy, homomorphic encryption, digital signature, and hash
    functions [23], [36]. These techniques enable FL in edge computing environments
    while preserving the privacy of data and participants. For instance, differential
    privacy provides privacy guarantees for medical image analysis. In unstable edge
    computing environments, such as smart healthcare, a privacy protection scheme
    is proposed that provides gradient privacy and resistance to collusion and replay
    attacks for the Internet of Medical Things (IoMT) [23]. A privacy protection technique
    for a hierarchical FL system needs to be computationally efficient and adaptable
    to the underlying learning algorithms, with an ability to effectively scale to
    a large number of clients and servers. Fig. 7 summarizes some of the opportunities
    presented by hierarchical FL that make it an exciting area of research for engineers
    and academicians in the field of instrumentation and measurement. Conclusion Electrical
    and Electronics Engineers have a critical role to play in driving technological
    advancements to address global challenges and advance the Sustainable Development
    Goals (SDGs) established by the United Nations in 2015. Hierarchical federated
    learning is an emerging technology that enhances the intelligence of sensor systems
    in many applications such as environmental quality management, personalized health-care
    devices, and precision agriculture. Secure, resilient, and robust sensor systems
    that support real-time, data-driven decision-making are valuable infrastructure
    for helping us reduce carbon emissions (SDG 13–Climate Action), promote sustainable
    urbanization (SDG 11-Sustainable Cities and Communities), and improve healthcare
    outcomes (SDG 3–Health and Well-being). We urge researchers and practitioners
    to collaborate on the opportunities and open problems presented in this article
    to realize the full potential of this technology. ACKNOWLEDGMENT This research
    was supported in part by the US Department of Energy (DOE) under Contract DE-AC02-06CHI1357,
    as well as the New Zealand Royal Society under the Rutherford Discovery Fellowship
    programme. Authors Figures References Keywords Metrics More Like This Integration
    of IoT, Edge Computing and Cloud Computing for Monitoring and Controlling Automated
    External Defibrillator Cabinets in Emergency Medical Service 2019 5th International
    Conference on Information Management (ICIM) Published: 2019 Cloud computing driven
    efficient mapping on soil moisture under sensor web environment 2016 Fifth International
    Conference on Agro-Geoinformatics (Agro-Geoinformatics) Published: 2016 Show More
    IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Instrumentation and Measurement Magazine
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Measurement and Applications: Exploring the Challenges and Opportunities
    of Hierarchical Federated Learning in Sensor Applications'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Chamara N.
  - Bai G.
  - Ge Y.
  citation_count: '1'
  description: 'Precision Agriculture (PA) promises to meet the future demands for
    food, feed, fiber, and fuel while keeping their production sustainable and environmentally
    friendly. PA relies heavily on sensing technologies to inform site-specific decision
    supports for planting, irrigation, fertilization, spraying, and harvesting. Traditional
    point-based sensors enjoy small data sizes but are limited in their capacity to
    measure plant and canopy parameters. On the other hand, imaging sensors can be
    powerful in measuring a wide range of these parameters, especially when coupled
    with Artificial Intelligence. The challenge, however, is the lack of computing,
    electric power, and connectivity infrastructure in agricultural fields, preventing
    the full utilization of imaging sensors. This paper reported AICropCAM, a field-deployable
    imaging framework that integrated edge image processing, Internet of Things (IoT),
    and LoRaWAN for low-power, long-range communication. The core component of AICropCAM
    is a stack of four Deep Convolutional Neural Networks (DCNN) models running sequentially:
    CropClassiNet for crop type classification, CanopySegNet for canopy cover quantification,
    PlantCountNet for plant and weed counting, and InsectNet for insect identification.
    These DCNN models were trained and tested with >43,000 field crop images collected
    offline. AICropCAM was embodied on a distributed wireless sensor network with
    its sensor node consisting of an RGB camera for image acquisition, a Raspberry
    Pi 4B single-board computer for edge image processing, and an Arduino MKR1310
    for LoRa communication and power management. Our testing showed that the time
    to run the DCNN models ranged from 0.20 s for InsectNet to 20.20 s for CanopySegNet,
    and power consumption ranged from 3.68 W for InsectNet to 5.83 W for CanopySegNet.
    The classification model CropClassiNet reported 94.5 % accuracy, and the segmentation
    model CanopySegNet reported 92.83 % accuracy. The two object detection models
    PlantCountNet and InsectNet reported mean average precision of 0.69 and 0.02 for
    the test images. Predictions from the DCNN models were transmitted to the ThingSpeak
    IoT platform for visualization and analytics. We concluded that AICropCAM successfully
    implemented image processing on the edge, drastically reduced the amount of data
    being transmitted, and could satisfy the real-time need for decision-making in
    PA. AICropCAM can be deployed on moving platforms such as center pivots or drones
    to increase its spatial coverage and resolution to support crop monitoring and
    field operations.'
  doi: 10.1016/j.compag.2023.108420
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical abstract Keywords 1. Introduction 2. Materials
    and methods 3. Results and discussion 4. Conclusion and future perspectives Funding
    CRediT authorship contribution statement Declaration of Competing Interest Acknowledgements
    Data availability References Show full outline Cited by (1) Figures (12) Show
    6 more figures Tables (7) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show
    all tables Computers and Electronics in Agriculture Volume 215, December 2023,
    108420 AICropCAM: Deploying classification, segmentation, detection, and counting
    deep-learning models for crop monitoring on the edge Author links open overlay
    panel Nipuna Chamara a, Geng Bai a, Yufeng Ge a b Show more Add to Mendeley Share
    Cite https://doi.org/10.1016/j.compag.2023.108420 Get rights and content Under
    a Creative Commons license open access Highlights • We developed AICropCAM, an
    edge-computing enabled camera system for crop monitoring. • It integrated Raspberry
    Pi and Arduino for image processing and LoRa communication. • It ran a stack of
    four deep neural networks to characterize multiple plant/canopy parameters. •
    We quantified the power consumption and speed of the system for edge image-processing.
    • AICropCAM is a next-generation enabling technology for real-time, low-latency
    Ag applications. Abstract Precision Agriculture (PA) promises to meet the future
    demands for food, feed, fiber, and fuel while keeping their production sustainable
    and environmentally friendly. PA relies heavily on sensing technologies to inform
    site-specific decision supports for planting, irrigation, fertilization, spraying,
    and harvesting. Traditional point-based sensors enjoy small data sizes but are
    limited in their capacity to measure plant and canopy parameters. On the other
    hand, imaging sensors can be powerful in measuring a wide range of these parameters,
    especially when coupled with Artificial Intelligence. The challenge, however,
    is the lack of computing, electric power, and connectivity infrastructure in agricultural
    fields, preventing the full utilization of imaging sensors. This paper reported
    AICropCAM, a field-deployable imaging framework that integrated edge image processing,
    Internet of Things (IoT), and LoRaWAN for low-power, long-range communication.
    The core component of AICropCAM is a stack of four Deep Convolutional Neural Networks
    (DCNN) models running sequentially: CropClassiNet for crop type classification,
    CanopySegNet for canopy cover quantification, PlantCountNet for plant and weed
    counting, and InsectNet for insect identification. These DCNN models were trained
    and tested with >43,000 field crop images collected offline. AICropCAM was embodied
    on a distributed wireless sensor network with its sensor node consisting of an
    RGB camera for image acquisition, a Raspberry Pi 4B single-board computer for
    edge image processing, and an Arduino MKR1310 for LoRa communication and power
    management. Our testing showed that the time to run the DCNN models ranged from
    0.20 s for InsectNet to 20.20 s for CanopySegNet, and power consumption ranged
    from 3.68 W for InsectNet to 5.83 W for CanopySegNet. The classification model
    CropClassiNet reported 94.5 % accuracy, and the segmentation model CanopySegNet
    reported 92.83 % accuracy. The two object detection models PlantCountNet and InsectNet
    reported mean average precision of 0.69 and 0.02 for the test images. Predictions
    from the DCNN models were transmitted to the ThingSpeak IoT platform for visualization
    and analytics. We concluded that AICropCAM successfully implemented image processing
    on the edge, drastically reduced the amount of data being transmitted, and could
    satisfy the real-time need for decision-making in PA. AICropCAM can be deployed
    on moving platforms such as center pivots or drones to increase its spatial coverage
    and resolution to support crop monitoring and field operations. Graphical abstract
    Download : Download high-res image (227KB) Download : Download full-size image
    Previous article in issue Next article in issue Keywords Artificial intelligenceComputer
    visionEdge computingInternet of thingsLoRaWANPrecision agriculture 1. Introduction
    The demands for food, feed, fiber, and fuel increase rapidly due to the fast expansion
    of the global population, income growth, technological advancement, and transport
    and logistics improvements (van Dijk et al., 2021). Precision agriculture (PA),
    which seeks to apply the right amount of inputs (fertilizers, irrigation water,
    pesticides, and other chemicals) in the right location at the right time, is essential
    to meet the requirements of future global food production, as well as environmental
    sustainability and climate resilience. PA is predicated on accurate sensor measurements,
    timely and sound decision-making, and automated actuators. The backbone of PA
    is the Internet of Things (IoT) technology that automates data collection, data
    analytics, data presentation, control, and efficient data communication (Chamara
    et al., 2022). Imaging sensors or digital cameras are essential for PA as they
    can capture more information than traditional scalar or vector sensors. Images
    can capture crop phenology for precise decision-making (Taylor and Browning, 2022,
    Tian et al., 2020). Cyclic events such as vegetative growth, flowering, leaf count
    and color change, maturation, and senescence are studied in crop phenology, which
    is essential to PA as it determines the management inputs required by crops. Moreover,
    images have rich information on the scene that allows for pest pressure evaluation.
    At present, a limited number of sensors are available for pest identification
    and pest pressure estimation. Among them, imaging sensors provide the most promising
    solution. Conventional (handcrafted feature extraction) and Artificial Intelligence
    (AI)-based image processing are the two branches of image processing. Traditional
    approaches extract image features defined by shape, texture, and color (Anubha
    et al., 2019, Yuan et al., 2019). The AI-based methods use Convolutional Neural
    Networks (CNN) to extract features from images (Luis et al., 2020). CNN models
    with multiple hidden layers for feature extraction and learning are considered
    Deep Convolutional Neural Networks (DCNN) (LeCun et al., 1998). Conventional imaging
    platforms in PA store images locally using onboard storage memories. Post processing
    refers to the processing of images stored at the central data storage in batches
    at a later time to extract useful information (Aasen et al., 2020). Imaging platforms
    that can access the internet through a stable connection with high bandwidth can
    automatically upload images to Cloud data storage. The vast majority of farmlands
    worldwide are in rural and remote areas with poor access to electric power and
    internet connectivity. This represents a big challenge for camera systems deployed
    in rural farmlands for high-speed image processing, data transmission, and low-latency
    decision-making (Richardson, 2019). Post-processing of crop images has been used
    for the estimation of leaf area index (Aasen et al., 2020), growth rate (Sakamoto
    et al., 2012), leaf chlorophyll and nitrogen content (Wang et al., 2014), fruit
    counts (Wang et al., 2014), and plant height (Sritarapipat et al., 2014). Further
    post-image processing allows for the assessment of biotic stress, such as pest
    density (Barbedo, 2014; Park et al., 2007) and weed pressure (Wang et al., 2019),
    as well as abiotic stress, such as nutrient deficiency (Ghorai et al., 2021).
    Richardson (2019) suggested that deep learning-based methods have the potential
    to facilitate the extraction of more sophisticated phenological data from both
    new and previously archived camera imagery compared to conventional image processing.
    Semantic segmentation-based canopy coverage (CC) estimation (Chamara et al., 2021;
    Liang et al., 2023), image classification-based crop identification (Anubha et
    al., 2019), disease identification (Sharma et al., 2020), growth stage prediction
    (Yasrab et al., 2021) and object detection-based plant feature identification
    (A. Wang et al., 2019) are examples of DCNN applications in agriculture. Conventional
    image processing requires less computational power and less energy, but they are
    limited in adaption to new scenarios, while deep learning requires high computational
    power and consumes more energy. DCNN models require large memory due to the large
    number of parameters these models hold. Therefore, it is not easy to implement
    these models practically in embedded systems that have less memory and computation
    power. These models also require a large amount of data to train to predict with
    high accuracy. Therefore, it is resource intensive. Edge image processing is the
    image processing done on image-capturing devices. The main advantage of edge image
    computing is that it lowers the high throughput data transmission requirement
    over a wireless IoT-enabled imaging network (Cao et al., 2020). Wang et al. (2022a)
    demonstrated the capability of identifying potted flowers with precision above
    89 % in real-time in a Jetson TX 2 computing module based on a DCNN algorithm.
    These authors suggested that a cloud-edge collaborative framework could achieve
    real-time and automatic learning for the DCNN model they have developed. Wang
    et al. (2022b) proposed a real-time weed detection model run on Jetson AGX Xavier
    for field robots. The authors proved it was possible to do real-time weed detection
    with a precision above 90 % yet required expensive hardware. Wang et al. (2022a)
    reviewed Raspberry Pi single-board computer-based real-time image processing applications.
    They concluded that Raspberry Pi (Datasheet Raspberry Pi Model B, 2019) is a cost-effective
    edge computing unit that could potentially be used as an edge image processing
    unit, and the capability of integrating it with IoT was also discussed. Zualkernan
    et al. (2022) demonstrated an edge image processing platform for the classification
    of animals and transmitting the identified animal and time of identification via
    LoRa for a camera trap. Past literature on IoT and image processing applications
    in agriculture has highlighted a research gap in edge image processing with IoT-enabled
    crop monitoring cameras. In-field crop cameras are expected to make real-time
    crop management decisions based on real-time image processing; however, poor internet
    connectivity in agricultural fields severely limits their capability. To address
    this gap, we have developed a novel imaging platform named AICropCAM that extracts
    plant and crop canopy level parameters through DCNN and uploads them to the Cloud
    via low-power, low-throughput communication protocols. We also demonstrated AICropCAM
    on an IoT-enable wireless sensor network in corn and soybean fields. A technology
    that addresses image processing at the lowest level (edge) and transmits only
    useful information can revolutionize real-time decision-making in PA. Therefore,
    the main objective of this paper is to demonstrate AICropCAM to perform edge image
    processing and low-throughput, low-power, and long-range data transmission through
    IoT technology. In this novel AICropCAM platform, multiple DCNN image processing
    algorithms run in series to extract plant-level and canopy-level features in an
    embedded system. Image classification, object detection with classification, and
    image segmentation are the three major applications of DCNN image processing,
    and all three are included in AICropCAM to demonstrate the capabilities of DCNN
    for image processing in PA. AICropCAM has trained models for canopy segmentation,
    crop classification, plant growth stage identification, plant counting, weed counting,
    and plant type identification. All the protocols that transmit data from AICropCAM
    to the Cloud were custom designed. AICropCAM sends the generated data to a cloud
    platform for logging, visualization, and analysis. Furthermore, this paper explains
    the DCNN model training process, model performance, and test results. We reported
    the model training comprehensively because it was essential for AICropCAM development.
    2. Materials and methods Essential activities in this research were data/image
    collection and preprocessing, hardware design for AICropCAM, software design for
    data transmission between the edge and the Cloud, deep learning model design,
    and model training and optimization (Fig. 1). AICropCAM was implemented in a corn
    and soybean field at the field phenotyping facility in Mead, Nebraska, USA (Bai
    et al., 2019). We demonstrated the training of the following DCNNs: CropClassiNet
    for classifying images based on image quality and crop type, CanopySegNet for
    segmenting crop canopy from the background, PlantCountNet for classifying and
    counting soybean and weed plants, and InsectNet for identifying insects and counting
    them. Download : Download high-res image (412KB) Download : Download full-size
    image Fig. 1. Steps of edge image processing program deployment on the embedded
    system (edge devices). 2.1. Image collection, annotation, preprocessing, and augmentation
    Image collection for DCNN model training occurred in four growing seasons using
    three different types of cameras: (i) commercially available Meidas SL122 trail
    cameras in 2019 (Meidas Trail Cameras, 2022), (ii) OV5642 imaging sensors with
    ArduCAM camera shields in 2020, and (iii) Raspberry Pi Camera Module V2 with Raspberry
    Pi Zero in 2021 and 2022 (Chamara, 2021). All the cameras were mounted on the
    bars horizontally extended and fixed on stationary poles erected vertically in
    the fields, as shown in Fig. 2A. The distance between the crop canopy and the
    cameras was maintained between 0.5 and 1.5 m throughout the growing seasons. Images
    used for training the InsectNet were also captured with smartphones as we could
    not collect enough images with insects from the three types of cameras mentioned
    above. Download : Download high-res image (338KB) Download : Download full-size
    image Fig. 2. Left: An Illustration of how AICropCAM was set up in the field for
    image collection. In addition to the camera, other components such as the solar
    panel and data logger were also shown. Right: A close-up view of AICropCAM and
    its hardware components. All three standard image annotation techniques in deep
    learning model training were utilized: (1) folder labeling for the image classification
    models, (2) pixel-level annotation for the semantic segmentation model, and (3)
    bounding boxes for object detection models. Images belonging to the same class
    were grouped into a single folder, and five distinct classes (or folders) were
    created: rejected, corn, soybean, grass, and night. Separating the crop canopy
    from the soil was done with pixel-level annotation and semantic segmentation.
    Bounding boxes, the smallest rectangle around an object, were drawn for corn plants,
    soybean plants, weed plants, and insects. Table 1 explains each type of annotation
    used in the model training. Table 1. Annotation criteria used to generate labels
    from the images to train and test the four deep convolutional neural network models
    in AICropCAM. Labeling Type Class Description Image classification (CropClassiNet)
    Rejected Images were labeled as rejected due to multiple reasons: blurred images
    caused by water droplets on the lens; the cameras turned away from the targeted
    crop; crops growing up to the camera blocking the view or capturing only a few
    leaves; people present in the images; lens covered with different stuff; and the
    camera was not installed in the field. Corn Images entirely covered by corn plants
    at different growth stages. Soybean Images entirely covered by soybean plants
    at different growth stages. Grass/Weed Images only comprise grass/weed plants
    at different growth stages. Night Images captured under low lighting conditions.
    Most of the cameras were not programmed to stop collecting images under low light.
    Crop canopy and background (CanopySegNet) Canopy Pixel labeling was done on the
    crop canopy. We used assisted freehand tool and the superpixel option in the MATLAB
    image labeler. Background Pixel labeling was done on the crop canopy. We used
    assisted freehand tool and the superpixel option in the MATLAB image labeler.
    Plant-type (PlantCountNet) Weed Weed present in the image was labeled using bounding
    boxes. It was challenging to locate the weed after the corn or soybean canopy
    was closed. Soybean Soybean plants present in the image were labeled using bounding
    boxes. Insects (InsectNet) Insects During the labeling process, without distinguishing
    insects based on their type, all the insects present in the images were labeled
    using bounding boxes. Image preprocessing is necessary for DCNN model training
    and real-time edge image processing. Differences in the input layer size in different
    DCNN models demand that images be resized before passing through the model for
    training or prediction purposes. High-resolution images improve accuracy but require
    more computational power. For specific applications, labeled datasets were only
    limitedly available. Therefore, image augmentation techniques were used to increase
    the number of image data sets, including scaling, flipping, cropping, rotation,
    color transformation, PCA color augmentation, and noise rejection (Paymode and
    Malode, 2022). Multiple augmentation techniques were used for each model, as detailed
    in Table 2. Additionally, Table 2 provides the numbers of images in training,
    validation, and testing for the four DCNN models. Table 2. DCNN model image allocation
    and image augmentation. Model Number of images Data Augmentation Techniques Total
    Training Validation Test CropClassiNet 43,611 30,528 9,810 3,273 Random rotation,
    random X  and Y reflection CanopySegNet 51 31 10 10 Transformation (random left/right
    reflection and random X/Y translation of ±10 pixels) PlantCountNet 110 88 11 11
    Transformation (same as CanopySegNet) InsectNet 542 326 108 108 Transformation
    (same as CanopySegNet) Our main objective was not to make the most accurate prediction
    for the DCNN models but to demonstrate the concept of implementing edge image
    processing and transmitting the results to the Cloud for decision-making. Therefore,
    we selected a limited number of images for CanopySegNet, PlantCountNet, and InsectNet,
    which were sufficient to train models with a reasonable degree of accuracy. 2.2.
    DCNN model architecture selection, training, evaluation, and deployment on the
    edge device The steps to select model architecture/model backbone weights and
    image input sizes to train the best model for CropClassiNet, CanopySegNet, PlantCountNet,
    and InsectNet are summarized in Fig. 3. Unlike many DCNN applications that prioritize
    higher accuracy, our application focused on finding the balance between accuracy
    and model deployability on the edge device. Download : Download high-res image
    (771KB) Download : Download full-size image Fig. 3. DCNN model selection process
    during the training and testing by attempting different model architectures, model
    backdone weights, and input image sizes. For example, in the development of CropSegNet
    (Segmentation), we selected DeepLabv3+ (Firdaus-Nawi et al., 2018) with weights
    initialized from pre-trained networks of ResNet18 (He et al., 2016), ResNet50,
    Xception, InceptionresnetV2, and MobileNetV2. The input image sizes tested were
    512 × 512 × 3 and 256 × 256 × 3, and training options were kept constant to find
    the best-performing networks, which should also be deployable to Raspberry Pi
    4B. This process identified DeepLabv3 + with ResNet50 as the most suitable model
    for CropSegNet, with an input image size of 512 × 512 × 3. Table 3 summarizes
    the hyperparameter values and training options for the final DCNN models deployed
    to the edge device. (1) (2) (3) (4) (5) (6) (7) Table 3. Hyperparameter values
    and training options for the best models (SGDM - stochastic gradient descent with
    momentum, RMSProp - Root mean square propagation). Training option and the function/Hyperparameters
    Values for CropClassiNet Values for CanopySegNet Values for InsectNet (320 × 320
    × 3) Values for PlantCountNet (320 × 320 × 3) Optimizer SGDM SGDM SGDM RMSProp
    Momentum 0.9 0.9 0.99 NA Initial learning rate 0.001 0.001 0.001 0.001 Learn rate
    schedule Piecewise Piecewise Piecewise Piecewise Learn rate drop period 10 10
    10 10 Learn rate drop factor 0.3 0.3 0.1 0.3 Minibatch size 16 4 16 32 L2Regularization
    NA 0.005 0.005 0.005 Validation frequency 3 3 3 10 Shuffle Every epoch Every epoch
    Every epoch Every epoch Validation patience 4 10 10 10 Max epochs 100 300 1000
    100 Execution environment Multi GPU Multi GPU GPU GPU The performance of the four
    DCNN models was evaluated using the indices calculated from Eq. (1), (2), (3),
    (4), (5), (6), (7). Accuracy, Precision, Recall, F1 score, and Jaccard index were
    used for the classification models CropClassiNet and CropSegNet, whereas IoU and
    mAP (Mean Average Precision) were used for PlantCountNet and InsectNet. Jaccard
    index gives the proportion of correctly predicted labels to the total number of
    labels. Model training was performed on an NVIDIA GeForce GTX 1650 Ti Mobile processor,
    a dedicated mid-range graphics card with 4 GB GDDR6 memory on a Dell XPS 15 9500
    Laptop. The laptop had an Intel Core i7-10750H 10th Gen processor,16 GB DDR4 RAM,
    and 1 TB SSD hard disk. 2.3. Hardware and software of AICropCAM The IoT data transmission
    and edge image processing hardware comprised the following major components: a
    Raspberry Pi 4B single-board computer, an Arduino MKR1310 development board, an
    Arduino MKR Relay Proto Shield, and a Dragino OLG02 outdoor dual channels LoRa
    Gateway (Fig. 4). The 12 V 8Ah battery powered the Raspberry Pi 4B, controlled
    through the relay shield managed by the Arduino MKR1310. A 3.7 V lithium polymer
    battery powered the Arduino MKR1310 board. There are two advantages of having
    a separate Arduino board. First, the Arduino board consumes less power than the
    Raspberry Pi 4B module. It can be switched on and off according to user requirements.
    Second, it allows uninterrupted communication between the edge node and the Cloud
    with low power. Download : Download high-res image (303KB) Download : Download
    full-size image Fig. 4. Hardware overview of AICropCAM and data flow. AICropCAM
    required programming on two hardware platforms. Arduino was programmed using C++
    in Arduino’s Integrated Development Environment. Raspberry Pi imaging and image
    processing program was developed in MATLAB and deployed onto the Raspberry Pi
    4B using the MATLAB Coder and MATLAB Compiler. A python program was designed to
    read the saved data in the Raspberry Pi 4B and serially communicate to the Arduino
    MKR1310. The primary functions of the MRK1310 program were to (1) turn on the
    Raspberry Pi 4B module based on the user-defined time intervals, (2) get the processed
    data, including the results of DCNN model predictions, through serial communication
    from the Raspberry Pi 4B, and (3) transmit the data to the ThingSpeak Cloud channel
    through the LoRa gateway. All the DCNN models were trained using the MATLAB deep
    learning toolbox. In the edge deployment, a MATLAB program runs multiple models
    logically depending on the prediction result of the previous model estimation,
    as shown in Fig. 5. MATLAB coder generated the C and C++ code derived from the
    program we developed to run on the Raspberry Pi. MATLAB Compiler generated the
    standalone application on the Raspberry Pi (The MathWorks, 2022). Download : Download
    high-res image (477KB) Download : Download full-size image Fig. 5. Overall sequential
    image processing and data generation flow chart. Table 4 lists the parameters
    generated by the models in AICropCAM. The abbreviations in Table 4 are fields
    holding data in the program to reduce the complexity of system development and
    maintain a common standard among different platforms. Fig. 6 shows the data generation
    from images. According to Fig. 6, the size of the images were around 2 MB before
    being fed into the image processing pipeline. The output message contains the
    crop type (CT), plant count (PC), weed count (WC), canopy coverage (CC), and pest
    count (PstC). The resulting message is typically less than 100 bytes. This represents
    a substantial reduction of memory size with the output being 0.00005 times the
    size of the original image. Consequently, this message can be transmitted in a
    single message via LoRa as the maximum LoRa packet size is around 256 bytes. Table
    4. List of parameters used to represent information in the images. Parameter Abbreviation
    Represent information Image location LOC Node ID manually entered/Global positioning
    system location coordinates Image orientation IO Accelerometer/Manually feed/Gravity
    switch Image quality/Crop type CT Image classification based on image quality
    and the crop type Plant count/Weed count PC/WC Multiclass object detection/classification
    Crop canopy coverage CC Semantic segmentation Pest count PstC Multiclass object
    detection/classification Download : Download high-res image (2MB) Download : Download
    full-size image Fig. 6. Examples of message generation and data size reduction
    for LoRa transmission. 2.4. Data transmission, visualization, and storage The
    data generated after image processing were saved on the Raspberry Pi 4B SD card,
    allowing access to the data remotely or through manual retrieval during field
    visits. Two options for transmitting the collected data to the ThingSpeak IoT
    platform are available. Firstly, the data can be uploaded directly from the Raspberry
    Pi 4B if internet connectivity is available for growers with Wi-Fi access. Secondly,
    the Raspberry Pi 4B transmits the recently acquired data to the Arduino MKR1310.
    The Arduino MKR1310 decodes the data received from the Raspberry Pi 4B and forwards
    it to the ThingSpeak. The second method is for low-rate, long-range communication
    beyond the limit of Wi-Fi. A single message receivable to the ThingSpeak server
    includes data for eight fields. In our demonstration, a single message was enough
    to transmit the data generated. Fields 1 and 2 are reserved for geographic coordinates
    (namely, latitude and longitude) to represent the device''s location. The third
    field was for camera orientation. Image quality/crop type, plant count, weed count,
    insect count, and crop canopy coverage were allocated from fields four to eight.
    ThingSpeak supports eight channels per gateway. If additional data is generated
    in the future, we have to create new channels to accommodate them. However, only
    data in a single channel can be passed through a single message. The Arduino-LoRa
    library was used to prepare the LoRa messages forwarded to the gateway (Mistry,
    2016). The message generated from the Arduino MKR1310 includes the device identification
    number and the data with the field number. Once the gateway receives this message,
    it adds the target client ID (generated by ThingSpeak when defining a device),
    host address (mqtt://mqtt3.thingspeak.com), server port number, username and password,
    channel ID, and the data in each field according to the Message Queuing Telemetry
    Transport (MQTT) protocol. Username and password ensure that only authorized devices
    can transmit data to the ThingSpeak platform. ThingSpeak provides two ways to
    interact with its platform, REST (Representative State Transfer) and MQTT protocols.
    The advantages of using MQTT over REST protocol are that it supports ThingSpeak
    data publishing, including immediate and minimum power consumption and data transmission
    over limited bandwidth, which encouraged us to select the MQTT protocol in our
    demonstration. 3. Results and discussion 3.1. DCNN model performance CropClassiNet
    had a test accuracy of 91.26 %, a Jaccard Index of 0.77, and an F1-score of 0.91;
    the confusion matrix is given in Fig. 7. The highest precision is for the “grass”
    class (100 %), and the lowest is for “soybean” (92.0 %). The highest recall is
    for the “corn” class (99.9 %), and the lowest is for “grass” (67.1 %). The primary
    goal of CropClassiNet is to determine the quality of new images and direct them
    for subsequent processing (Fig. 5). This step has never been executed in an image-based
    crop monitoring platform before. Further, CropClassiNet can eliminate erroneous
    images when humans are present in the camera’s field of view or when the camera
    is misaligned due to external factors. AICropCAM can send maintenance requests
    through IoT analytics if rejected images are continuously generated. Download
    : Download high-res image (275KB) Download : Download full-size image Fig. 7.
    Confusion matrix for test images by CropClassiNet. CanopySegNet on the test images
    achieved a global accuracy of 0.93, a weighted IoU of 0.87, and a mean BF score
    of 0.73. Fig. 8 shows an example of an original soybean image and the corresponding
    segmentation result by CanopySegNet, which estimated CC to be 18.72 %. Season-long,
    time-series images can be fed into CanopySegNet to generate diurnal and seasonal
    curves of crop CC, as shown in Fig. 9. Download : Download high-res image (621KB)
    Download : Download full-size image Fig. 8. An image of soybean crop and the segmentation
    result by CropSegNet to calculate canopy coverage. Download : Download high-res
    image (367KB) Download : Download full-size image Fig. 9. Examples of diurnal
    and seasonal variations of canopy coverage as computed by CropSegNet. According
    to Fig. 9, canopy coverage percentage variation is low during the daytime and
    reaches zero at night. This verifies the need to eliminate low-light images before
    segmenting. As shown in Fig. 5, it is possible to eliminate the generation of
    false values when the camera captures images under low light conditions by halting
    the process of running CanopySegNet. There are three diurnal variation series
    on 6/8/2021, 6/26/2021, and 7/12/2021 in Fig. 9. The CC increased from 8 % to
    95 % between 6/8/2021 to 7/12/2021. The seasonal trend showed that the CC reached
    a maximum around 7/8/2021. These results suggest that the proposed stacked models
    can track the daily and seasonal CC variation and eliminate the effect of lighting
    conditions on false value generation. Table 5. Performance of PlantCountNet and
    InsectNet on the test image set (Root mean square error (RMSE)/Final validation
    loss (FVL)). Model Name Architecture Input size Validation RMSE/FVL Mean average
    precision Object class PlantCountNet YOLOv2 320 × 320 × 3 0.888 (RMSE) 0.66 Soybean
    0.86 Weed InsectNet YOLOv4 320 × 320 × 3 26.2 (FVL) 0.02 Insect The overall performance
    of the PlantCountNet and InsectNet is given in Table 5. Fig. 10(A) and 10(B) show
    the result obtained by PlantCountNet for a soybean image at an early vegetative
    stage (V3). Meanwhile Fig. 10(C) and 10(D) shows the result at a reproductive
    stage (R1). It can be seen that, at V3 stage, the model outputs matched the labels
    of soybean and weed plants well, indicating a level of high accuracy. Download
    : Download high-res image (1MB) Download : Download full-size image Fig. 10. The
    result of PlantCountNet for soybean and weed counting: Manually annotated vs.
    model-predicted bounding boxes at V3 growth stage (A and B); manually annotated
    vs. model-predicted bounding boxes at R1 growth stage (C and D). The size of insects
    is very small compared to the size of images (Fig. 11), which is the main reason
    for the low mAP for InsectNet (Table 5). Increasing input image resolution beyond
    480 × 480 × 3 is impractical as it exceeds the memory limitation to load models
    into Raspberry Pi 4B. A potential solution could be to increase the resolution
    of the region of interest by splitting the original image while keeping the resolution
    the same. Also, we suggest using the approach recommended by Tetila et al., 2020a,
    Tetila et al., 2020b in the future on Raspberry Pi model 4B. As technology advances,
    we expect the memory capacities will increase for edge computing units. At the
    same time, the state-of-the-art object detection algorithms will improve the accuracy
    for small object detection. Download : Download high-res image (1MB) Download
    : Download full-size image Fig. 11. The result of InsectNet for insect counting
    in soybean. The top row shows a situation of high false positives and low false
    negatives: (A) and (B) are manually annotated and model-predicted insect labels,
    respectively. The bottom row shows a situation of low false positive and high
    false negative: (C) and (D) are manually annotated and model-predicted insect
    labels. 3.2. Power consumption for Raspberry Pi 4B Since edge cameras in farmlands
    have limited access to electric power, information on their power consumption
    is essential for designing IoT devices and systems. AICropCAM is designed to be
    energized by solar power. It runs on a rechargeable battery when there is no solar
    power. We monitored the maximum energy consumption of each task performed by AICropCAM,
    and the result is presented in Table 6. Four main strategies are available for
    the power management of IoT edge devices: Selecting power-efficient hardware,
    maintaining low power modes, dynamic power management, and cloud-based management.
    Raspberry Pi 4B is an affordable power-efficient single-board computer suitable
    for our application, but it does not naturally support low-power modes. Therefore,
    we introduced the Arduino MKR1310 LoRa module for the Raspberry Pi 4B dynamic
    power management. Furthermore, this Arduino module allows us to perform cloud-based
    central management independently. Table 6. Electrical power consumption of the
    Raspberry Pi 4B and the Arduino MKR1310 during edge image processing. Device Activity
    The maximum current range and the voltage recorded Raspberry Pi 4B Idle run 5.25
    V × (0.45 – 0.53) A Image classification 5.25 V × (0.97 – 1.04) A Image segmentation
    5.25 V × (0.98 – 1.11) A Weed and plant detection 5.25 V × (0.62 – 0.70) A Insect
    detection 5.25 V × (0.62 – 0.70) A Arduino MKR1310 Sleep mode <0.01A Serial communication
    <0.01A LoRa transmission <0.01A For our measurements, we used a Raspberry Pi 4B
    with 8 GB of RAM, connected to an HDMI monitor, a USB keyboard, and a USB mouse,
    and ran a MathWorks® Raspbian image (file used to boot the Raspberry Pi 4B). The
    Raspberry Pi 4B was operated at room temperature and connected to a wireless LAN
    access point and a laptop via an Ethernet cable. The electric current consumption
    for running each DCNN model was recorded during the test. CropClassiNet had the
    highest current consumption, while the PlantCountNet and InsectNet models had
    the lowest. As for LoRa transmission, we could not measure its current consumption
    because the lowest value our instrument could measure was 0.01A. Based on the
    manufacturer''s specifications, the Arduino MKR1310 consumes 104 uA at 5 V. The
    average time to run the DCNN models is essential to estimate the energy consumed
    for each prediction. These parameters listed in Table 7 provide essential guidelines
    for designing IoT sensor nodes with suitable batteries and power sources. We also
    noticed that typically the first prediction of a model took the longest time,
    but the rest take a considerably shorter time to predict. Table 7. Time duration
    needed for the selected DCNN models deployed in the Raspberry Pi 4B. Model/Task
    Input image size Time for predicting results (s) The maximum power demand for
    the activity (W) CropClassiNet/Image quality evaluation and crop classification
    224 × 224 × 3 6.44 5.46 CanopySegNet/Semantic segmentation to separate canopy
    from background 512 × 512 × 3 20.20 5.83 PlantCountNet/Weed and plant detection,
    classification, and counting 320 × 320 × 3 14.38 3.68 InsectNet/Insect detection
    320 × 320 × 3 0.20 3.68 Semantic segmentation was the most power-demanding activity,
    while insect detection was the least. Changing the order of the image processing
    models and adding new models or dropping existing models is possible during regular
    operation. It enables dynamic power management within the Raspberry Pi module.
    The main advantage of AICropCAM is that it implements a stack of four DCNN-based
    image processing models with multiple objectives. To the best of our knowledge,
    this is the first time such a system has been developed for a field crop monitoring
    camera. AICropCAM has applications such as setting up smart in-field or greenhouse
    IoT camera networks with edge computing capability, monitoring crops by attaching
    them to sprinkler irrigation systems (pivots and linear moves), or collecting
    crop information through ground or aerial mobile robots. The relatively short
    time to run each DCNN model makes the system suitable for real-time applications,
    including variable rate irrigation, fertilization, and spraying. For example,
    a pivot irrigated multi-cropping system with AICropCAM can automate irrigation
    or fertigation transition between different crops or crops at different growth
    stages by automatically providing the crop type or growth stage information to
    the irrigation controller. Additionally, existing herbicide or pesticide sprayers
    can get the feedback of the PlantCountNet and InsectNet in the AICropCAM for precision
    spraying. 4. Conclusion and future perspectives This paper outlines the essential
    components of constructing a functional edge image processing framework for real-time
    crop monitoring. From a software standpoint, CropClassiNet can categorize captured
    images according to image quality and detect the presence of specific crop types
    for further processing. CanopySegNet can further quantify the degree of canopy
    coverage; PlantCountNet can count the number of plants and weeds in the image;
    and finally, InsectNet can count the number of insects in the image. These four
    DCNN models, when implemented on edge devices, can extract an array of important
    crop and canopy parameters from field images and enable real-time, low-latency
    decision making and applications. Deep learning-based image processing on the
    edge has excellent potential in PA. Applications of AICropCAM are not limited
    to image classification, segmentation, plant counting, or weed counting. Potential
    future applications include insect classification and crop damage estimation,
    weed classification and pressure estimation, fruit identification and yield estimation,
    decision on replanting (Whigham et al., 2000), and disease identification and
    disease damage estimation in real time using actual field images collected by
    AICropCAM. AICropCAM shows excellent potential in enhancing crop management through
    crop monitoring. However, the current demonstration requires significant improvements
    on both hardware and software fronts. Customized circuitry and modular design
    are required to put AICropCAM in commercial farm applications. The full potential
    of the AICropCAM can be achieved by putting this camera on a moving platform like
    a center pivot with a GPS receiver to generate spatiotemporal data. Crop classification
    must include more crop types, and segmentation models need training data from
    other crop types. The DCNN models for weed and insect identification require the
    capability to identify different weed types, their growth stage, different insect
    types, and their growth stages to generate effective pest control decisions. Additionally,
    improving the models’ accuracy in image classification, segmentation, and object
    detection is crucial. It can be achieved by increasing the number of training
    image data sets. We also planned to expand the research for multiple edge architecture
    evaluation. Architectures such as a high-performance edge computer that accepts
    images from multiple edge devices through short-range, high-speed communication
    (e.g., Wi-Fi) and can run more accurate deep learning models with higher numbers
    of parameters, might be a better solution for the primary objectives addressed
    in this paper. We aim to expand the AICropCAM applications to other crops beyond
    corn and soybean. By making these improvements, AICropCAM will become a more effective
    tool for crop management, potentially revolutionizing how we grow and manage crops.
    Funding This work was supported by the United States Department of Agriculture
    – National Institute of Food and Agriculture grants [Award 2020-68013-32371 to
    YG and GB, Award 2021-67021-34417 to YG]. CRediT authorship contribution statement
    Nipuna Chamara: Methodology, Software, Visualization. Geng Bai: Conceptualization,
    Methodology, Resources. Yufeng Ge: Conceptualization, Resources, Supervision,
    Project administration, Funding acquisition. Declaration of Competing Interest
    The authors declare the following financial interests/personal relationships which
    may be considered as potential competing interests: Nipuna Chamara, Yufeng Ge,
    Geng Bai has patent pending to University of Nebraska-Lincoln. Acknowledgements
    Jianxin Sun assisted in developing the imaging device with Raspberry Pi Zero used
    for image acquisition. David Scoby helped the field management and AICropCAM installation.
    Junxiao Zhang supported the field installation of AICropCAM and smart-phone based
    acquisition of crop images with insects. Data availability Data will be made available
    on request. References Aasen et al., 2020 H. Aasen, N. Kirchgessner, A. Walter,
    F. Liebisch PhenoCams for field phenotyping: using very high temporal resolution
    digital repeated photography to investigate interactions of growth, phenology,
    and harvest traits Front. Plant Sci., 11 (June) (2020), pp. 1-16, 10.3389/fpls.2020.00593
    Google Scholar Anubha et al., 2019 P.S. Anubha, V. Sathiesh Kumar, S. Harini A
    study on plant recognition using conventional image processing and deep learning
    approaches J. Intell. Fuzzy Syst., 36 (3) (2019), pp. 1997-2004, 10.3233/JIFS-169911
    Google Scholar ArduCAM, 2016 ArduCAM ESP8266 UNO board User Guide (pp. 0–9). (2016).
    www.ArduCAM.com. Google Scholar Bai et al., 2019 G. Bai, Y. Ge, D. Scoby, B. Leavitt,
    V. Stoerger, N. Kirchgessner, S. Irmak, G. Graef, J. Schnable, T. Awada NU-Spidercam:
    A large-scale, cable-driven, integrated sensing and robotic system for advanced
    phenotyping, remote sensing, and agronomic research Comput. Electron. Agric.,
    160 (March) (2019), pp. 71-81, 10.1016/j.compag.2019.03.009 View PDFView articleView
    in ScopusGoogle Scholar Barbedo, 2014 J.G.A. Barbedo Using digital image processing
    for counting whiteflies on soybean leaves J. Asia Pac. Entomol., 17 (4) (2014),
    pp. 685-694, 10.1016/j.aspen.2014.06.014 View PDFView articleView in ScopusGoogle
    Scholar Cao et al., 2020 K. Cao, Y. Liu, G. Meng, Q. Sun An Overview on Edge Computing
    Research IEEE Access, 8 (2020), pp. 85714-85728, 10.1109/ACCESS.2020.2991734 View
    in ScopusGoogle Scholar Chamara et al., 2021 N. Chamara, K. Alkhadi, H. Jin, F.
    Bai, A. Samal, Y. Ge A deep convolutional neural network based image processing
    framework for monitoring the growth of soybean crops. 2021 ASABE Annual International
    Meeting, 2100259 (2021), 10.13031/aim.202100259 Google Scholar Chamara et al.,
    2022 N. Chamara, M.D. Islam, G.F. Bai, Y. Shi, Y. Ge Ag-IoT for crop and environment
    monitoring: Past, present, and future Agr. Syst., 203, 103497 (2022), 10.1016/j.agsy.2022.103497
    Google Scholar Chamara, 2021 N. Chamara Development of an Internet of Things (IoT)
    Enabled Novel Wireless Multi-Sensor Network for Infield Crop Monitoring. Master’s
    Thesis, Department of Biological Systems Engineering, University of Nebraska-Lincoln
    (2021) Google Scholar Datasheet Raspberry Pi Model, 2019 Datasheet Raspberry Pi
    Model B, 2019. https://datasheets.raspberrypi.org. Accessed 11 November 2023.
    Google Scholar Firdaus-Nawi et al., 2018 Firdaus-Nawi, M., Noraini, O., Sabri,
    M.Y., Siti-Zahrah, A., Zamri-Saad, M., Latifah, H., 2018. DeepLabv3+_Encoder-Decoder
    with Atrous Separable Convolution for Semantic Image Segmentation. In: Proceedings
    of the European Conference on Computer Vision (ECCV), pp. 801–818. Google Scholar
    Ghorai et al., 2021 A.K. Ghorai, A.R. Barman, B. Chandra, K. Viswavidyalaya, S.
    Jash, B. Chandra, K. Viswavidyalaya, B. Chandra, K. Viswavidyalaya Image processing
    based detection of diseases and nutrient deficiencies in plants SATSA Mukhapatra,
    25 (1) (2021), pp. 1-24 Google Scholar He et al., 2016 He, K., Zhang, X., Ren,
    S., Sun, J., 2016. Deep residual learning for image recognition kaiming. In: Proceedings
    of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 770–778.
    doi: 10.1002/chin.200650130. Google Scholar LeCun et al., 1998 LeCun, Y., Bottou,
    L., Bengio, Y., Haffner, P., 1998. Gradient-based learning applied to document
    recognition. Proc. IEEE 86(11), 2278–2323. doi: 10.1109/5.726791. Google Scholar
    Liang et al., 2023 Liang, W. Z., Oboamah, J., Qiao, X., Ge, Y., Harveson, B.,
    Rudnick, D. R., Wang, J., Yang, H., Gradiz, A., 2023. CanopyCAM – an edge-computing
    sensing unit for continuous measurement of canopy cover percentage of dry edible
    beans. Comput. Electron. Agric. 204 (January), 107498. https://doi.org/10.1016/j.compag.2022.107498.
    Google Scholar Luis et al., 2020 Luis, S., Filipe, N.S., Paulo, M.O., Pranjali,
    S., 2020. Deep Learning applications in agriculture: a short review. Deep Learning
    Applications in Agriculture: A Short Review, 1092 AISC(January), C1. doi: 10.1007/978-3-030-35990-4.
    Google Scholar Meidas Trail Cameras, 2022 Meidas Trail Cameras, 2022. https://www.meidase.com/product-category/trail-cameras/.
    Accessed 11 November 2023. Google Scholar Mistry, 2016 Mistry, S., 2016. Arduino
    LoRa. MIT License. https://github.com/sandeepmistry/arduino-LoRa. Accessed 11
    November 2023. Google Scholar Park et al., 2007 Y. Park, R.K. Krell, M. Carroll
    Theory, technology, and practice of site-specific insect pest management J. Asia
    Pac. Entomol., 10 (2) (2007), pp. 89-101 View PDFView articleView in ScopusGoogle
    Scholar Paymode and Malode, 2022 A.S. Paymode, V.B. Malode Transfer learning for
    multi-crop leaf disease image classification using convolutional neural network
    VGG Artif. Intell. Agric., 6 (2022), pp. 23-33, 10.1016/j.aiia.2021.12.002 View
    PDFView articleView in ScopusGoogle Scholar Richardson, 2019 A.D. Richardson Tracking
    seasonal rhythms of plants in diverse ecosystems with digital camera imagery New
    Phytol., 222 (4) (2019), pp. 1742-1750, 10.1111/nph.15591 View in ScopusGoogle
    Scholar Sakamoto et al., 2012 T. Sakamoto, A.A. Gitelson, A.L. Nguy-Robertson,
    T.J. Arkebauer, B.D. Wardlow, A.E. Suyker, S.B. Verma, M. Shibayama An alternative
    method using digital cameras for continuous monitoring of crop status Agric. For.
    Meteorol., 154–155 (2012), p. 113, 10.1016/j.agrformet.2011.10.014 View PDFView
    articleView in ScopusGoogle Scholar Sharma et al., 2020 P. Sharma, Y.P.S. Berwal,
    W. Ghai Performance analysis of deep learning CNN models for disease detection
    in plants using image segmentation Inf. Process. Agric., 7 (4) (2020), pp. 566-574,
    10.1016/j.inpa.2019.11.001 View PDFView articleView in ScopusGoogle Scholar Sritarapipat
    et al., 2014 T. Sritarapipat, P. Rakwatin, T. Kasetkasem Automatic rice crop height
    measurement using a field server and digital image processing Sensors (Switzerland),
    14 (1) (2014), pp. 900-926, 10.3390/s140100900 View in ScopusGoogle Scholar Taylor
    and Browning, 2022 S.D. Taylor, D.M. Browning Classification of daily crop phenology
    in phenocams using deep learning and hidden markov models Remote Sens. (Basel),
    14 (2) (2022), pp. 1-22, 10.3390/rs14020286 Google Scholar Tetila et al., 2020a
    Tetila, E.C., Machado, B.B., Astolfi, G., Belete, N.A.S., Amorim, W.P., Roel,
    A.R., Pistori, H., 2020. Detection and classification of soybean pests using deep
    learning with UAV images. Computers and Electronics in Agriculture, 179(May).
    doi: 10.1016/j.compag.2020.105836. Google Scholar Tetila et al., 2020b E.C. Tetila,
    B.B. MacHado, G.V. Menezes, N.A. De Souza Belete, G. Astolfi, H. Pistori A deep-learning
    approach for automatic counting of soybean insect pests IEEE Geosci. Remote Sens.
    Lett., 17 (10) (2020), pp. 1837-1841, 10.1109/LGRS.2019.2954735 View in ScopusGoogle
    Scholar The MathWorks, 2022 The MathWorks, I., 2022. MATLAB Coder - MATLAB. MathWorks.
    https://www.mathworks.com/products/matlab-coder.html. Google Scholar Tian et al.,
    2020 H. Tian, T. Wang, Y. Liu, X. Qiao, Y. Li Computer vision technology in agricultural
    automation—a review Inf. Process. Agric., 7 (1) (2020), pp. 1-19, 10.1016/j.inpa.2019.09.006
    View PDFView articleView in ScopusGoogle Scholar van Dijk et al., 2021 M. van
    Dijk, T. Morley, M.L. Rau, Y. Saghai A meta-analysis of projected global food
    demand and population at risk of hunger for the period 2010–2050 Nat. Food, 2
    (7) (2021), pp. 494-501, 10.1038/s43016-021-00322-9 View in ScopusGoogle Scholar
    Wang et al., 2022b Q. Wang, M. Cheng, S. Huang, Z. Cai, J. Zhang, H. Yuan A deep
    learning approach incorporating YOLO v5 and attention mechanisms for field real-time
    detection of the invasive weed Solanum rostratum Dunal seedlings Comput. Electron.
    Agric., 199 (July) (2022), Article 107194, 10.1016/j.compag.2022.107194 View PDFView
    articleView in ScopusGoogle Scholar Wang et al., 2022a J. Wang, Z. Gao, Y. Zhang,
    J. Zhou, J. Wu, P. Li Real-time detection and location of potted flowers based
    on a ZED camera and a YOLO V4-tiny deep learning algorithm Horticulturae, 8 (1)
    (2022), 10.3390/horticulturae8010021 Google Scholar Wang et al., 2014 Y. Wang,
    D. Wang, P. Shi, K. Omasa Estimating rice chlorophyll content and leaf nitrogen
    concentration with a digital still color camera under natural light Plant Methods,
    10 (3) (2014), pp. 273-286, 10.1016/S0378-4290(99)00063-5 View in ScopusGoogle
    Scholar Wang et al., 2019 A. Wang, W. Zhang, X. Wei A review on weed detection
    using ground-based machine vision and image processing techniques Comput. Electron.
    Agric., 158 (January) (2019), pp. 226-240, 10.1016/j.compag.2019.02.005 View PDFView
    articleView in ScopusGoogle Scholar Whigham et al., 2000 K. Whigham, D. Farnham,
    J. Lundvall, D. Tranel Soybean replant decision, Department of Agronomy, Iowa
    State University (2000) Google Scholar Yasrab et al., 2021 R. Yasrab, J. Zhang,
    P. Smyth, M.P. Pound Predicting plant growth from time-series data using deep
    learning Remote Sens. (Basel), 13 (3) (2021), pp. 1-17, 10.3390/rs13030331 View
    in ScopusGoogle Scholar Yuan et al., 2019 W. Yuan, N.K. Wijewardane, S. Jenkins,
    G. Bai, Y. Ge, G.L. Graef Early prediction of soybean traits through color and
    texture features of canopy RGB imagery Sci. Rep., 9 (2019), p. 14089, 10.1038/s41598-019-50480-x
    View in ScopusGoogle Scholar Zualkernan et al., 2022 I. Zualkernan, S. Dhou, J.
    Judas, A.R. Sajun, B.R. Gomez, L.A. Hussain An IoT system using deep learning
    to classify camera trap images on the edge Computers, 11 (1) (2022), pp. 1-24,
    10.3390/computers11010013 Google Scholar Cited by (1) YOLO performance analysis
    for real-time detection of soybean pests 2024, Smart Agricultural Technology Show
    abstract © 2023 The Authors. Published by Elsevier B.V. Part of special issue
    Agricultural Cybernetics: A New Methodology of Analysis and Development for Modern
    Agricultural Production Systems Edited by Yanbo Huang, Manoj Karkee, Lie Tang,
    Dong Chen View special issue Recommended articles Joint control method based on
    speed and slip rate switching in plowing operation of wheeled electric tractor
    equipped with sliding battery pack Computers and Electronics in Agriculture, Volume
    215, 2023, Article 108426 Qi Wang, …, Yongjie Cui View PDF LSCA-net: A lightweight
    spectral convolution attention network for hyperspectral image processing Computers
    and Electronics in Agriculture, Volume 215, 2023, Article 108382 Ziru Yu, Wei
    Cui View PDF Automatic detection of crop lodging from multitemporal satellite
    data based on the isolation forest algorithm Computers and Electronics in Agriculture,
    Volume 215, 2023, Article 108415 Rui Guo, …, Tingting Liu View PDF Show 3 more
    articles Article Metrics Citations Citation Indexes: 1 Captures Readers: 19 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'AICropCAM: Deploying classification, segmentation, detection, and counting
    deep-learning models for crop monitoring on the edge'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - King B.A.
  - Shellie K.C.
  citation_count: '1'
  description: 'The goal of irrigation for wine grape grown in arid or semiarid regions
    is to sustain vine survival and to optimize berry attributes for quality wine
    production. Precision irrigation of wine grape is impeded by the lack of a smart,
    decision support system (DSS) to remotely monitor vine water status. The objectives
    of this study were to: develop and field test an Internet of Things (IoT) DSS
    system for precision irrigation of wine grape. The IoT system was comprised of
    a suite of in situ sensors used to monitor real-time weather conditions, grapevine
    canopy temperature, soil moisture, and irrigation amount. Sensor data were collected
    and stored on a field deployed data logger that calculated a daily thermal Crop
    Water Stress Index (CWSI) for grapevine using a neural network model with real-time
    sensor data model inputs. The data logger also hosted, via a cellular modem, webpages
    showing a running, 12-day history of daily CWSI, fraction of available soil moisture
    (fASW), irrigation amount, and other sensor data. The webpages were accessible
    to vineyard managers via cell phone or computer. The CWSI based IoT DDS system
    was installed at two small acreage, commercial estate vineyards in southwestern
    Idaho USA over four growing seasons. At each vineyard site, the DSS was used daily
    by the vineyard irrigation manager to schedule irrigation events. Neither vineyard
    manager used any other quantitative vine water status monitoring tool for irrigation
    management decisions. The midday leaf water potential (LWP) of grapevines was
    routinely measured by research project personnel. Data collected over the study
    period at each vineyard showed a significant (p < 0.001) correlation with LWP
    and fASW, providing evidence that, under the conditions of this study, the daily
    CWSI based IoT provided automated, remote monitoring of vine water status. Both
    vineyard managers reported daily use of the DSS for irrigation scheduling decisions.
    Over the four-year study, each vineyard manager was able to maintain consistent
    seasonal average CWSI daily values and irrigation application amounts, despite
    yearly differences in climatic conditions. The results of this study demonstrate
    that a CWSI based IoT DSS can be used for precision irrigation of wine grape in
    a commercial vineyard under semiarid growing conditions. The CWSI based IoT DSS
    used a unique combination of neural network modeling, edge computing, and IoT
    for real-time vine water stress monitoring for precision irrigation.'
  doi: 10.1016/j.atech.2023.100202
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    View Open Manuscript Outline Highlights Abstract Keywords 1. Introduction 2. Methods
    and materials 3. Results 4. Discussion 5. Conclusions Funding Declaration of Competing
    Interest Acknowledgment Data availability References Show full outline Cited by
    (3) Figures (8) Show 2 more figures Tables (2) Table 1 Table 2 Smart Agricultural
    Technology Volume 4, August 2023, 100202 A crop water stress index based internet
    of things decision support system for precision irrigation of wine grape☆ Author
    links open overlay panel Bradley A. King a, Krista C. Shellie b Show more Share
    Cite https://doi.org/10.1016/j.atech.2023.100202 Get rights and content Under
    a Creative Commons license open access Highlights • A suite of field sensors was
    used to remotely monitor vineyard environmental conditions, grapevine canopy temperature,
    soil moisture, and irrigation amount. • An Artificial intelligence (AI), neural
    network model was used to calculate a daily thermal Crop Water Stress Index (CWSI)
    for grapevine using real-time sensor data inputs. • Edge computing on a field
    data logger was used to host, via a cellular modem, an irrigation decision support
    system (DSS) as webpages showing a running 12-day history of daily CWSI, fraction
    of available soil water (fASW), irrigation-related information and sensor data.
    • Over a four-year period, vineyard managers maintained consistent seasonal irrigation
    amounts and CWSI levels. • The daily CWSI was correlated with fASW and midday
    leaf water potential. Abstract The goal of irrigation for wine grape grown in
    arid or semiarid regions is to sustain vine survival and to optimize berry attributes
    for quality wine production. Precision irrigation of wine grape is impeded by
    the lack of a smart, decision support system (DSS) to remotely monitor vine water
    status. The objectives of this study were to: develop and field test an Internet
    of Things (IoT) DSS system for precision irrigation of wine grape. The IoT system
    was comprised of a suite of in situ sensors used to monitor real-time weather
    conditions, grapevine canopy temperature, soil moisture, and irrigation amount.
    Sensor data were collected and stored on a field deployed data logger that calculated
    a daily thermal Crop Water Stress Index (CWSI) for grapevine using a neural network
    model with real-time sensor data model inputs. The data logger also hosted, via
    a cellular modem, webpages showing a running, 12-day history of daily CWSI, fraction
    of available soil moisture (fASW), irrigation amount, and other sensor data. The
    webpages were accessible to vineyard managers via cell phone or computer. The
    CWSI based IoT DDS system was installed at two small acreage, commercial estate
    vineyards in southwestern Idaho USA over four growing seasons. At each vineyard
    site, the DSS was used daily by the vineyard irrigation manager to schedule irrigation
    events. Neither vineyard manager used any other quantitative vine water status
    monitoring tool for irrigation management decisions. The midday leaf water potential
    (LWP) of grapevines was routinely measured by research project personnel. Data
    collected over the study period at each vineyard showed a significant (p < 0.001)
    correlation with LWP and fASW, providing evidence that, under the conditions of
    this study, the daily CWSI based IoT provided automated, remote monitoring of
    vine water status. Both vineyard managers reported daily use of the DSS for irrigation
    scheduling decisions. Over the four-year study, each vineyard manager was able
    to maintain consistent seasonal average CWSI daily values and irrigation application
    amounts, despite yearly differences in climatic conditions. The results of this
    study demonstrate that a CWSI based IoT DSS can be used for precision irrigation
    of wine grape in a commercial vineyard under semiarid growing conditions. The
    CWSI based IoT DSS used a unique combination of neural network modeling, edge
    computing, and IoT for real-time vine water stress monitoring for precision irrigation.
    Previous article in issue Next article in issue Keywords IrrigationWine grapeCrop
    water stress indexEdge computingDecision support systemInternet of Things 1. Introduction
    Irrigation management of most field crops aims to avoid plant water stress and
    maximize yield by supplying water to fully meet crop evapotranspiration (ETc).
    However, in wine grape (Vitis vinifera L.), fruit quality attributes are prioritized
    over yield as a production goal, and development of the berry and vine canopy
    are related to vine water status throughout the growing season [1,2]. For example,
    mild vine water stress between veraison (berry softening) and harvest is desirable
    to prevent berry splitting or dilution of flavors or sugars and to slow canopy
    growth in preparation for winter dormancy. Inducing vine water stress through
    deficit irrigation has also been shown to increase vine water use efficiency [3],
    [4], [5]. Water resources in the western U.S. are experiencing unprecedented competitive
    demand from irrigated agriculture, growing urban populations, and environmental
    and ecosystem restoration. Groundwater levels in many areas have steadily decreased
    from historic levels and ground water use is approaching an unsustainable level.
    In addition, the western US is experiencing the worst megadrought since 800 CE
    [6] leading to historically low water levels in many of the regions water reservoirs.
    Warmer winter temperatures due to climate change are predicted to reduce future
    mountain snowpack, which is the source of early irrigation developments in much
    of the western U.S. The growing demand on surface and groundwater resources combined
    with climate change necessitates increased water resource stewardship and crop
    water productivity to meet food and fiber needs of a growing population. Wine
    grape production in semiarid regions of the pacific northwestern U.S. is well
    established but relies on irrigation during the growing season for vine growth,
    survival, and economically viable yield. Optimum management of irrigation requires
    routine direct or indirect monitoring of vine water status [7]. Indirect methods
    for accessing plant water status include soil water content or soil water potential
    measurement and atmospheric-based methods [7,8]. Soil water monitoring is a widely
    accepted tool for estimating crop water needs for field crops but in the case
    of vineyards there are several disadvantages. These include spatial variability
    in soil characteristics and 3-dimensional soil wetting patterns from drip irrigation
    leading to the need to install several sensors, which complicates information
    management and increases cost. Additionally, there is a lack of established thresholds
    for determining vine water status and severity [7]. Atmospheric based methods
    include Bowen ratio energy balance and eddy covariance to determine ETc and infer
    plant water status by comparing measured ETc to estimated non-water stressed ETc.
    These techniques require expensive sensors, skilled technical knowledge, and large
    uniform upwind fetch, especially for eddy covariance, which make them unsuited
    for small commercial vineyard water management purposes [7]. A more detailed discussion
    of indirect methods is provided by Rienth and Scholasch [8]. Direct (plant-based)
    methods for determining plant water status rely on measurements of physical plant
    variables. Unlike indirect methods, plant-based methods use the plant as a biosensor
    in a soil-plant-atmosphere continuum. Conventional direct methods include leaf
    or stem water potential, visual observation, stomatal conductance or photosynthesis,
    sap flow, trunk diameter and leaf turgor pressure [7,9]. Midday stem or leaf water
    potential (LWP) is the most commonly accepted direct measurement of vine water
    status [10] and critical upper and lower water stress thresholds have been established
    [7], making it an effective tool for deficit irrigation management. The primary
    disadvantages of LWP are the limited time of day for measurement, the need for
    repeated measurements due to plant variability, and a need for several equipped
    and trained personnel to cover a vineyard. Visual observation is based on the
    visual growth characteristics of the apical meristem or apex of vines, tendrils,
    and leaf orientation of numerous vines [1,8]. The drawbacks of this method include
    low sensitivity to moderate water stress, time lag between water stress and visual
    observation, and the cost of trained personnel to cover a vineyard. Stomatal conductance
    measures the ease of passage of CO2 or water vapor through the stomata and is
    a good indicator of plant response to water stress because it changes with atmospheric
    demand and soil water status. It has been shown to indicate the degree of vine
    water stress but varies with timing of measurement and leaf canopy location [7].
    The primary disadvantages are the cost of the equipment, constant need for calibration,
    technical skill to operate. Sap flow, trunk diameter and leaf turgor are direct
    measures that have been shown to be indictors of plant water stress. However,
    they have not been widely adopted in regional commercial vineyards but have the
    advantage of being automated, which facilitates integration into a deficit irrigation
    management program. Detailed descriptions of other direct methods and their respective
    advantages and disadvantages are provided by [7], [8], [9]. Plant canopy temperature
    increases when solar radiation is absorbed and cools when water is evaporated
    (transpiration) within the leaf structure. A water-stressed plant canopy will
    reduce transpiration and have a higher temperature than a non-stressed canopy
    [11,12]. This physical plant response to water stress makes canopy temperature
    measurement a viable direct method for assessing plant water status. Infrared
    radiometers have been used to measure plant canopy temperature under research
    field conditions to estimate evapotranspiration and drought stress in many crops
    [13], [14], [15], including grape [16], [17], [18], [19], [20], [21]. Infrared
    thermometry is nondestructive, can be measured continuously, can be stationary
    or mounted on mobile platforms for spatial and temporal monitoring [9,[20], [21],
    [22]], and can be less expensive [23] than soil water sensing. Canopy temperature
    is related to plant water status, but it also depends upon solar radiation (Rs),
    air temperature (Ta), humidity (RH), and wind speed (WS) among other things. A
    method of using canopy temperature to calculate a CWSI for irrigation scheduling
    was proposed over 40 years ago by Idso et al. [15] and Jackson et al. [14]. The
    CWSI normalizes measured canopy temperature relative to reference threshold canopy
    temperatures for a well-watered vine (TLL) and a water stressed, non-transpiring
    vine (TUL) under identical weather conditions, resulting in an empirical CWSI
    value between, 0 (no water stress) and 1 (maximum water stress). Unfortunately,
    the need for TLL and TUL reference temperatures under identical weather conditions
    has limited the use of a CWSI to research scale studies and precluded its adoption
    on a commercial scale [9]. Alternatives to actual measurement of crop reference
    temperatures have been investigated, such as artificial wet and dry surfaces [16,[24],
    [25], [26], [27], [28], [29]] and physical and empirical models [14,26,[30], [31],
    [32], [33]] to predict reference temperatures. The required maintenance of an
    artificial surface has limited use on a commercial scale, leaving physical or
    empirical models as the most logical choice. King et al. [33] used measured temperatures
    of non-water stressed wine grape canopies to develop data driven models (neural
    network, regression) to estimate TLL. The models were used to calculate CWSI values
    for research plots of Malbec grapes vines that were differentially irrigated to
    induce differing severities of vine water stress [19] and validated by comparing,
    over a 5-year period, CWSI values with LWP and fASW. The CWSI calculated using
    model predicted reference temperatures was well correlated with LWP (R2 = 0.54)
    and fASW (R2 = 0.71). When CWSI values were used to trigger 28 mm irrigation events,
    CWSI values increased, LWP became more negative, seasonal water application decreased,
    and grape cluster weight decreased. These results demonstrated that a CWSI could
    be used as an effective irrigation scheduling tool for wine grape. Irrigation
    scheduling based on canopy temperature has not been adopted on a commercial scale
    by vineyard irrigation mangers in semiarid regions of northwestern U.S. as evident
    by the lack of commercial systems supporting the application. The objectives of
    this study were to: develop a CWSI based IoT DSS for precision irrigation of wine
    grape under semiarid conditions; field test the CWSI based IoT DSS in two, small
    acreage commercial estate vineyards over four growing seasons; validate the IoT
    derived CWSI values by statistical correlation with LWP and fASW at each vineyard
    site; and evaluate vineyard manager annual consistency in irrigation scheduling.
    Vineyard irrigation managers were allowed to freely decide if they wanted to use
    the CWSI based IoS DSS for irrigation scheduling. Consistency of plant water stress
    and irrigation application across multiple years was used to gage success of the
    CWSI based IoT DDS system for irrigation scheduling as implemented by the vineyard
    manager. 2. Methods and materials 2.1. Field study site characteristics This study
    was conducted on two small (< 7 ha) family owned and operated commercial vineyards
    in southwestern Idaho USA over a four-year period (2017–2020). Both operations
    were estate vineyards in that they have associated wineries that produce branded
    commercial wines. The vineyard sites were located within 30 km of each other but
    differed in their soil characteristics and soil water holding capacities. The
    soil at vineyard-A (V-A) was a Greenleaf-Owyhee silt loam (fine-silty, mixed,
    superactive, mesic Xeric Calciargids) characterized as very deep well drained
    with moderately slow permeability and an available water capacity of 0.2 cm−1
    (USDA Web Soil Survey). Vineyard-B (V-B) was located adjacent to an ancient volcanic
    vent that had been subjected to limited volcanic rock mining. The vineyard site
    was reclaimed using surrounding soil and original overburden to cover exposed
    rock resulting in a highly disturbed soil profile. The natural soils at the site
    were Turbyfill fine sandy loam (coarse-loamy, mixed, superactive, calcareous,
    mesic Xeric Torriorthents) and Jacquith loamy fine sand (Sandy, mixed, mesic Xereptic
    Haplodurids), both of which are moderately deep and well drained in their natural
    state with moderately rapid permeability. Available water capacity of the Turbyfill
    fine sandy loam and Jacquith loamy fine sand were 0.12 and 0.07 cm−1, respectively
    (USDA Web Soil Survey). Vines in both vineyards were grown with double trunks
    on a vertically shoot positioned, two-wire trellis system with moveable catch
    wires. The vines were trained to bilateral cordons and spur-pruned annually to
    approximately 16 buds m−1 of cordon. Row by vine spacing was 2.7 m x 1.8 m at
    V-A and 2.7 m x 1.5 m at V-B. Irrigation at both sites was applied using drip
    irrigation tubing suspended about 30 cm above ground in the vine row. Drip emitter
    spacing was 76 cm with a flow rate of 3.8 L hr−1 at V-A and 61 cm with a flow
    rate of 1.9 L hr−1 at V-B. The wine grape cultivar evaluated at V-A was Chardonnay
    (2017–2020) and the cultivars at V-B were Malbec (2017–2019) and Cabernet Sauvignon
    (2020). 2.2. Field measurements and instrumentation hardware and software Canopy
    temperature was measured using wired infrared radiometers (SI-121, Apogee Instruments,
    Logan, Utah) with a 36° field of view. The radiometers were placed along a single
    vine row to prevent potential damage to sensor cables from vineyard equipment.
    In each vineyard, two (2017, 2018, 2019) or four (2020) radiometers were installed
    per cultivar. Radiometer cable lengths were 30 m allowing a maximum distance of
    60 m between radiometers within a vine row. The radiometers were installed on
    vines with representative canopy size and positioned approximately 15 to 30 cm
    above fully expanded leaves located at the top of the vine canopy. Radiometers
    were pointed northeasterly at approximately 45° from nadir, with the sensor view
    aimed at the center of solar noon sunlit leaves. The temperature sensing area
    of vine canopy was approximately 10 to 20 cm in diameter and received full sunlight
    exposure during midday. The possibility of background bare soil visibility was
    limited by multiple leaf layers within the canopy below the measured canopy location.
    The infrared radiometer sensor view was periodically adjusted as necessary to
    ensure that the field of view concentrated on sunlit leaves near the top of the
    canopy. The infrared radiometers were installed after fruit set, usually mid to
    late June. Solar radiation (Rs) (SP-110 pyranometer, Apogee Instruments, Logan,
    UT), air temperature (Ta), relative humidity (RH) (HMP50 temperature and humidity
    probe, Campbell Scientific, Logan, UT), and wind speed (WS) (034B, Met One Instruments,
    Grants Pass, Ore.) were measured in each vineyard at a height of 2.5 m. Canopy
    temperature and weather parameters were measured every minute and recorded as
    15 min averages on a datalogger (CR6, Campbell Scientific, Logan, UT). The weather
    sensors and data logger were installed in the same vine row and located midway
    between the infrared temperature sensors. The equipment was removed at harvest,
    usually mid to late September. A 1.2 m soil moisture sensor (Drill and Drop, SenTek
    Sensor Technologies, Stepney, SA) was installed in the vine row within 3 m of
    the data logger and within 20 cm of an irrigation drip line emitter. Soil moisture
    was recorded every 30 min measured at 10 cm depth increments to a depth of 1.2
    m. In 2017 and 2018, a tipping bucket rain gage (RainWise, Boothwyn, PA) was placed
    under an drip line irrigation emitter to record cumulative irrigation application
    amount. The rain gage was connected to the data logger and total emitter water
    application was recorded in 15 min and 24 hr increments. In 2019 and 2020 a flow
    meter (36MP.75RG.1, Netafim Irrigation, Inc., Fresno, CA) was installed in the
    irrigation drip line and connected to the data logger. Flow rate was recorded
    in 15 min increments. The field data logger was equipped with a machine-to-machine
    cellular modem (RavenXTA CDMA or RV50 Sierra wireless AirLink, Campbell Scientific
    Inc., Logan, UT) to provide real-time access to the sensor data using commercial
    software. Study personnel accessed sensor data using datalogger management software
    (LoggerNet 4.5, Campbell Scientific Inc., Logan, UT). Vineyard managers were provided
    real-time sensor data access through a website. The website was hosted on the
    field data logger. Data logger webpage publishing software (RTCM Pro Development
    4.3.3.6, Campbell Scientific Inc., Logan, UT) was used to design and publish the
    webpage on the data logger. The website was accessible using either a personal
    computer or a smart phone. The website provided graphical pages with running 12-day
    histories of daily CWSI, soil water content at each depth increment, fASW, daily
    irrigation depth, and latest 15-min averaged weather data, each on a separate
    webpage. The website was available between the hours of 6:00 to 22:00 MDT. The
    cell phone modem was powered down overnight to conserve battery power and to reset
    the modem in case of intruder hacking and malware. The data logger battery was
    charged using a 20 W solar panel. Midday LWP was measured at 7-to-10-day intervals
    in both vineyards in each year of the study to verify vine water status and to
    investigate its correlation with daily CWSI. LWP was measured between 13:00 and
    15:00 MDT on two fully expanded, sunlit leaves from vines adjacent to each installed
    infrared radiometer using a pressure chamber (model 610, PMS Instrument Co., Albany,
    OR) as described by Levin et al. [10,34]. 2.3. Calculated webpage values Information
    shown on webpages hosted by the field data logger was based on several calculations
    performed by datalogger software using measured sensor values. The calculated
    values included daily CWSI, fASW, and daily irrigation depth. Daily CWSI was calculated
    as the average 15-min CWSI between 13:00 and 15:00 MST, which corresponded to
    −1 to +1.5 hr of solar noon. The 15-min CWSI was calculated using the empirical
    equation developed by Idso et al. [15] as: (1) where Tc is measured canopy temperature
    of fully sunlit leaves ( °C). The TLL reference temperature ( °C) was estimated
    using cultivar specific neural network models [32]. Inputs to the neural network
    models were 15-minute averaged values of measured Rs, Ta, RH and WS. The TUL reference
    temperature ( °C) was estimated using the energy balance-based equation of [14]
    as: (2) where ra is aerodynamic resistance (s m−1), Rn is net radiation (W m−2),
    cp is heat capacity of air (J kg-1 °C-1), and ρ is density of air (kg m−3). Aerodynamic
    resistance was estimated using the approach of [30] as described by [33] using
    the same cultivar specific data sets for well-watered wine grapes in southwestern
    Idaho. Values used for ra were 16.8 s m−1 for Malbec and 21 s m−1 for Chardonnay
    and Cabernet Sauvignon. Net radiation was estimated as Rn = 0.9Rs – 60 [33]. The
    fASW for a given soil profile depth was calculated as: (3) where θi is measured
    volumetric soil water content for depth i, θpwpi is estimated volumetric soil
    water content at permanent wilting point for depth i, θfci is estimated volumetric
    soil water content at field capacity at depth i, and n is the number of 10 cm
    soil water content measurement depths considered. Field capacity for each soil
    depth was estimated as the maximum soil water content measured 24 h after an irrigation
    event or soil water content at the beginning of the season for depths below the
    irrigation wetting front. Permanent wilting point (PWP) for each soil depth was
    estimated as 50% of field capacity (FC) or minimum soil water content measured.
    Values for θfci and θpwpi were continually adjusted during the beginning of the
    season as soil water content measurements were collected. Three values of fASW
    were presented in the webpage: 0 to 60 cm, 0 to 90 cm, and 0 to 120 cm. Values
    shown in the webpages were expressed in English units as they were designed for
    use by vineyard managers located in the U.S. Daily irrigation depth was calculated
    as the volume of water applied between 0:00 and 24:00 MDT divided by the drip
    irrigation lateral length represented and vine row spacing. In the case of rain
    gauges, the volume of water measured by the rain gage was divided by the emitter
    spacing and vine row spacing. In the case of flow meters, the daily volume of
    water applied was calculated by summing the flow rate in each 15 min interval
    multiplied by the time interval. The volume of water was divided by lateral length
    downstream of the flow meter and vine row spacing. The calculated irrigation depth
    was presented in the English unit of inches. 2.4. Irrigation DSS vineyard manager
    accessible webpages The irrigation DSS was comprised of six separate webpages
    that displayed daily CWSI values (Fig. 1), soil moisture at depth of 0 to 60 cm
    (0 - 24 in) (Fig. 2), soil moisture at a depth of 70 to 120 cm (28 - 48 in) (Fig.
    3), fASW at three soil depths (Fig. 4), irrigation amount (Fig. 5), and weather
    (Fig. 6). The webpages showing CWSI, soil water content (%) and fASW displayed
    data as a running 12-day history. Each webpage had a top menu showing all available
    webpages. CWSI values were graphed independently for each infrared radiometer
    and as the average value of all radiometers. An example of the main webpage at
    site V-B for 13 August through 25 August 2020 is shown in Fig. 1. Soil volumetric
    water content (%) was graphed independently at depth increments of 10 cm (4 inches)
    (Figs. 2,3). fASW (Fig. 4) was graphed independently for soil depths 0 to 60 cm
    (0 - 24 in), 0 to 90 cm (1 – 36 in), and 0 - 120 cm (0 – 48 in). Daily irrigation
    amounts (Fig. 5) represent water applied between 0:00 and 24:00 MDT. Fig. 1, Fig.
    2, Fig. 3, Fig. 4, Fig. 5 show data for V-B from 13 August through 23 August 2020.
    Weather conditions in each vineyard (Fig. 6) were displayed as the most current
    15-min average value for Ta, RH, WS, and wind direction. For ease of use, the
    values for Ta and RH were displayed graphically as well as numerically. Download
    : Download high-res image (291KB) Download : Download full-size image Fig. 1.
    Example main webpage showing daily crop water stress index (CWSI) for a 12-day
    period during 2020 at V-B. Download : Download high-res image (321KB) Download
    : Download full-size image Fig. 2. Example webpage showing volumetric soil water
    content for 10 to 60 cm (4 to 24 inch) depths for a 12-day period during 2020
    at V-B. Download : Download high-res image (284KB) Download : Download full-size
    image Fig. 3. Example webpage showing volumetric soil water content for 70 to
    120 cm (28 to 48 inch) depths for a 12-day period during 2020 at V-B. Download
    : Download high-res image (261KB) Download : Download full-size image Fig. 4.
    Example webpage showing estimated fraction of available soil water for three soil
    profile depths for a 12-day period during 2020 at V-B; 0 to 60 cm (0 to 14 inch),
    0 to 90 cm (0 to 36 inch), and 0 to 120 cm (0 to 48 inch). Download : Download
    high-res image (206KB) Download : Download full-size image Fig. 5. Example webpage
    showing daily irrigation applied over a 12-day period during 2020 at V-B. Download
    : Download high-res image (185KB) Download : Download full-size image Fig. 6.
    Example of webpage displaying the latest 15-minute average measured values of
    air temperature, relative humidity, and windspeed and direction. 2.5. Data analysis
    Linear and multiple regression were conducted using Microsoft Excel data analysis
    tools. Graphical, linear, and multiple linear regression and variance analysis
    were used to quantify and evaluate relationships between variables. Regression
    line significance was evaluated using ANOVA (p < 0.05). Neural network model development
    was performed using the MATLAB Neural Network Toolbox (MathWorks, Natick, Mass.)
    [33]. Graphs were generated using Sigmaplot 14 (Systat Software, San Jose, CA).
    3. Results 3.1. Climatic conditions Climatic conditions during the four-year study
    relative to 20-yr (1996–2016) averages are summarized in Table 1. The climatic
    conditions during the four study years were generally within one standard deviation
    of the 20-yr mean with a few exceptions. Alfalfa-based reference evapotranspiration
    was greatest in 2018 and exceeded the 20-yr mean by more than one standard deviation.
    The combination of high mean air temperature and daily solar radiation, and low
    mean relative humidity and April through September precipitation resulted in the
    high reference evapotranspiration in 2018. October through March precipitation
    was greatest in 2017 and exceeded one standard deviation of the 20-yr mean. April
    through September precipitation in 2019 and 2020 exceeded one standard deviation
    of the 20-yr mean. Growing-degree days was greatest in 2018, coinciding with highest
    mean daily air temperature and high reference evapotranspiration. Table 1. Climatic
    conditions at weather station (PMAI, www.usbr.gov/pn/agrimet/) nearest (within
    30 km) to study sites. Mean daily air temperature, relative humidity, and solar
    radiation, cumulative precipitation, alfalfa-based reference evapotranspiration,
    days air temperature > 35 °C, and growing degree days between 1 April through
    30 September, and cumulative precipitation between 1 October and 31 March and
    1 April to 30 September in each study year. The 20-yr averages (1996–2016) and
    standard deviations are also shown. Parameters 2017 2018 2019 2020 1996–2016 Mean
    ± Std Dev Mean air temperature ( °C) 18.9 19.0 18.3 18.1 18.4 ± 0.8 Days air temperature
    > 35 °C 39 33 27 23 29 ± 11 Mean relative humidity (%) 52.1 47.8 55.3 52.5 50.5
    ± 3.3 Mean daily solar radiation (MJ m−2 d−1) 23.2 24.3 23.5 23.7 23.9 ± 0.8 Alfalfa-based
    reference evapotranspiration (mm) 1192 1264 1164 1172 1158 ± 67 Precipitation
    Oct – Mar (mm) 239 102 168 121 128 ± 40 Precipitation Apr – Sept (mm) 77 50 142
    201 80 ± 30 Growing-degree days ( °C)a 1639 1683 1584 1601 1595 ± 99 aGrowing-degree
    days were calculated from daily maximum and minimum temperature with no upper
    limit and a base temperature of 10 °C. 3.2. Relationship between measures of vine
    water stress Linear relationships between plant water stress measures fASW, LWP,
    and CWSI at each vineyard for the four study years combined are summarized in
    Fig. 7. All the linear relationships between the water stress measures were statistically
    significant (p < 0.001). The linear relationships between fASW versus LWP and
    daily CWSI versus LWP had similar R2 values for both vineyards. The linear relationship
    between fASW and CWSI at V-B had a much greater R2 than for V-A (0.58vs 0.32).
    Variability in the fASW vs CWSI data was similar between the vineyards, but daily
    CWSI spanned a greater range at V-B resulting in a greater R2. The greatest data
    variability occurred between daily CWSI and LWP for both vineyards. The greater
    variability is likely due to CWSI and LWP responding differently to Ta, RS, RH
    and WS. Download : Download high-res image (968KB) Download : Download full-size
    image Fig. 7. Relationships between average daily CWSI, fraction of available
    soil water (fASW) in 0 to 120 cm soil profile, and midday leaf water potential
    (LWP) for the four study years at V-A (left graphs) and V-B (right graphs). 3.3.
    Relationship between seasonal CWSI and seasonal irrigation amounts The seasonal
    average values for daily CWSI and the cumulative amount of irrigation applied
    between 1 July and 15 September in each study year at each vineyard are shown
    in Table 2. The seasonal average daily CWSI values for each vineyard were largely
    consistent over the four-year study. Seasonal daily CWSI values were higher for
    V-B as the vineyard manager preferred higher plant water stress than the manager
    of V-A. The higher daily CWSI value at V-B was also higher because it would rapidly
    increase a couple days after an irrigation event due to the low water holding
    capacity of the sandy soil. Table 2. Average daily crop water stress index (CWSI)
    and cumulative irrigation application between 1 July and 15 September at each
    study site and study year. Study Site Parameter Year 2017 2018 2019 2020 Vineyard-A
    Daily CWSI 0.25 0.23 0.31 0.28 Irrigation (mm) 66 130 117 122 Vineyard-B Daily
    CWSI 0.38 0.44 0.41 0.36 Irrigation (mm) 143 115 134 128 4. Discussion 4.1. Irrigation
    DSS vineyard manager accessible webpages An example of the irrigation DSS running
    12-day history and weather webpage is presented for V-B for 13 to 23 August 2020
    (Fig. 1, Fig. 2, Fig. 3, Fig. 4, Fig. 5, Fig. 6). An irrigation event, starting
    the evening of 18 August 2020, increased soil water content to a depth of 60 cm
    (24 inches) (Fig. 2) and decreased the daily CWSI to near zero (Fig. 1). An irrigation
    event starting on the evening of 23 August increased soil water content to a depth
    70 cm (28 inches) (Fig. 3) and decreased the daily CWSI to near zero (Fig. 1).
    The estimated fASW increased on 18 August and 23 August (Fig. 4) as soil water
    contents increased (Fig 2) due to irrigation events. Prior to irrigation on 18
    Aug, daily CWSI was greater than 0.6 (Fig. 1), while fASW for the 0 to 120 cm
    soil profile was about 0.3 and increased to greater than 0.8 following irrigation
    on 23 Aug. Midday on 25 August daily CWSI was near zero while fASW was about 0.78.
    An overnight irrigation event started on 18 August is depicted as two irrigations
    since it spanned two days (Fig. 5). The first irrigation event applied about 10
    mm (0.4 inch) and the second irrigation event applied about 21 mm (0.8 inch),
    which collectively decreased daily CWSI from 0.6 to near zero (Fig. 1) and increased
    fASW from 0.3 to 0.8 (Fig. 4). The observed variability among radiometers on the
    irrigation DSS webpage for daily CWSI values (Fig. 1), was likely attributed to
    high spatial variability in soil profile characteristics. Limiting historical
    data on the irrigation DSS webpage to a running 12-day period was to optimize
    time efficiency of the user web browsing experience. The infield data logger that
    hosted the irrigation DSS webpages had limited computing capacity, so limiting
    the historical data time frame to a running 12-days offered a reasonable compromise
    between data viewability on a cell phone and time to transfer the data to the
    user webpage interface device. A running 12-day historical record was sufficient
    to establish trends in CWSI or soil water availability useful in making irrigation
    management decisions. The vineyard managers in this study only wanted to know
    if they need to irrigation today and were largely uninterested in historical CWSI
    values. The 12-day historical length can be increased if deemed necessary by uploading
    the data to the cloud and using cloud based graphical software to display the
    same information for the full growing season. 4.2. Relationship between measures
    of vine water status and irrigation A seasonal graph of the irrigation DSS data
    for V-B in 2020 shows an interconnected response among the measured and estimated
    DSS parameters (Fig. 8). Values for daily CWSI and midday leaf water potential
    shown in Fig. 8 are averages of the measured values and fASW is for the 0 to 120
    soil profile. Prior to initiation of measurements on 13 June, there was above
    average precipitation in 2020 (Table 1). The prior precipitation is evident by
    the status of well-watered vines on 13 June (Fig. 8). Daily CWSI was low, fASW
    was > 0.55 and LWP was less negative. A rainfall event on 29 June was associated
    with a decrease in the daily CWSI, an increase in fASW and a less negative LWP.
    Prior to the irrigation event on 20 July, the daily CWSI steadily increased coincident
    with a more negative LWP. The small irrigation event on 8 July had minimal influence
    on daily CWSI or LWP potential as fASW remained below 0.55. Irrigation events
    prior to 17 August reduced CWSI and made LWP less negative for only a few days
    and fASW remained 〈 0.55 for most of the duration. The seasonally highest CWSI
    values and most negative LWP values occurred between 28 July and 24 August. The
    irrigation event on 23 August and precipitation events on 17 and 24 August decreased
    CWSI to near zero, increased fASW to 〉 0.55 and LWP became less negative, all
    of which indicated a short period of increase in vine water status. Between 24
    August and the next irrigation event on 1 September, the CWSI increased, fASW
    decreased, and LWP became more negative. The relatively large (> 25 mm) irrigation
    event on 3 September decreased daily CWSI to 〈 0.2, increased fASW to 〉 0.8, and
    LWP became less negative. The last irrigation on 11 September reduced daily CWSI
    to near zero, increased fASW to nearly 0.9 and increased LWP to > −0.9 MPa. Download
    : Download high-res image (396KB) Download : Download full-size image Fig. 8.
    Average daily CWSI, fraction of available soil water (fASW) in 0 to 120 cm soil
    profile, midday leaf water potential (LWP), precipitation, and irrigation during
    the 2020 growing season at V-B. The fASW is a common method used to express crop
    water stress for field crops. Wine grape is well-watered when fASW is greater
    than 0.55 [35]. The corresponding seasonal responses of fASW, midday LWP, and
    the daily CWSI to irrigation and precipitation events (Fig. 8) supports the usefulness
    and accuracy of daily CWSI for real-time irrigation management of wine grape irrespective
    of soil characteristics that may influence these values. 4.3. Comparison of vine
    water stress measures between vineyards The slopes of linear relationships between
    the fASW versus LWP or daily CWSI differed between vineyards (Fig. 7). This may
    be partially due to differences in soil textures and permeability between the
    vineyards. V-A had a silt loam soil with low to moderate permeability while V-B
    had a sandy soil with high permeability. Water applied by the drip irrigation
    emitter likely resulted in different wetting patterns between vineyards with a
    deeper wetting pattern and less lateral spreading at V-B. There was likely limited
    soil water availability outside the immediate area of the emitter wetting pattern
    at V-B due to the low water holding capacity of the sandy soil. The soil water
    sensor was installed within 20 cm of an emitter and may have provided a better
    measurement of total soil water at V-B than V-A. The greater water holding capacity
    of the silt loam soil at V-A likely resulted in much more stored soil water from
    non-growing season precipitation, limiting the range in fASW over the growing
    season. However, the range in LWP were similar between vineyards. The low permeability
    of the soil at V-A may have restricted movement of soil water to the roots. Lastly
    the soil at V-A exhibited silica cementation ranging from 45 to 60 cm deep during
    soil sensor installation that may have restricted root growth. Ample soil water
    was measured below 60 cm in the root zone (data not shown) but very little extraction
    occurred during the growing season supporting the suspicion of limited root presence
    below 60 cm. The presence of ample soil water below 60 cm limited the range in
    fASW over the growing season and if it was largely unavailable to the vines would
    result in high daily CWSI and low LWP values despite fASW > 0.55. Despite a significant
    linear relationship between daily CWSI and midday LWP for both vineyards (Fig.
    7), there is considerable variability in the relationships, which precludes use
    of CWSI as a direct surrogate for LWP. A quadratic relationship between CWSI and
    LWP averaged over four wine grape cultivars was reported by [21], which depicted
    a similar degree of variability. [36] reported LWP ranging from −0.51 to −1.15
    MPa for well-watered grapevines in California with LWP linearly related to vapor
    pressure deficit (VPD) and Ta. They also reported a linear relationship between
    LWP and VPD for water stressed vines, but with reduced dependence on VPD compared
    to well-watered vines. The results of this study are consistent with the findings
    of [36] as the relationship between CWSI and LWP (Fig. 7) could be represented
    by a piece-wise linear relationship with CWSI ≈ 0 for LWP > −1.15 MPa. Solar radiation
    also influences LWP and LWP measurements should be collected on cloudless days
    [36]. The LWP values reported in this study were made over a wide range of VPD
    and on days with variable clouds. Additionally, some LWP values reported in this
    study were not collected on the same vine used for canopy temperature measurement,
    another source of variability in the relationship between CWSI and LWP. Overall,
    the presence of water stress detected by LWP measurement was also indicted by
    daily CWSI as calculated in this study, demonstrating that CWSI can be effectively
    used as an irrigation management tool for wine grape. The vineyard managers in
    this study were successful in using daily CWSI to achieve similar levels of plant
    water stress over multiple years, despite yearly differences in evaporative demand
    and growing season precipitation. The primary advantage of using CWSI as an irrigation
    management tool is the ability to automate data collection for daily monitoring
    of water stress with minimal labor. The linear relationship between fASW and daily
    CWSI exhibited less variability than the linear relationship between fASW and
    midday LWP (Fig. 7), especially for V-B. Thus, CWSI was a more direct indicator
    of available soil water than LWP. For V-B, when fASW was > 0.55, indicating well-watered
    vines, CWSI was 〈 0.1 supporting the rational than CWSI should approach zero for
    well-watered vines and approach one for severely watered stressed vines as the
    linear relationship depicts. However, for V-A a fASW value of 0.55 corresponds
    to a CWSI value 〉 0.5, which clearly does not follow the rational of CWSI, indicating
    an error in estimating fASW. As forementioned, this discrepancy is likely due
    to the effective root zone of the vines less than the 120 cm depth used to compute
    fASW. The estimates of FC and PWP of the soil at V-A could also be in error, which
    could lead to overestimation of fASW. If estimates of the fASW at V-A were reduced
    by 25%, a fASW value of 0.55 would correspond to a CWSI value < 0.1, like V-B
    and a CWSI value of 0.6 would correspond to a fASW of 0.37. The unrealistic over
    estimation of fAWC at V-A based on measured midday LWP and calculated daily CWSI
    highlights the difficulty in accurately quantifying the fASW using a single soil
    moisture profile measurement with drip irrigated crops. Drip irrigation results
    in a 3-dimensional wetting pattern that makes reliable estimation of root zone
    available soil water difficult at best. As an example, [37] reported that nine
    neutron probe measurements in one quadrant of a vine root zone, to a depth of
    3 m, was necessary to quantify soil water content of drip-irrigated grape vines.
    The difficulty in quantifying fASW in drip irrigated vineyards highlights the
    advantage of using plant-based methods for assessing vine water status such as
    CWSI provided the reference temperatures TLL and TUL can be reliably estimated.
    4.4. Seasonal CWSI and seasonal irrigation amounts between vineyard managers Neither
    vineyard manager in this study used any type of quantitative plant or soil water
    monitoring techniques to aid in irrigation management decisions prior to the installation
    of the CWSI based IoT irrigation DSS. Prior to this study, the irrigation managers
    at both vineyards made irrigation decisions based upon intuition, previous experience,
    and crop appearance [1]; so, there was a reasonable expectation that the vineyard
    managers would actively use the CWSI based IoT irrigation DSS. At the beginning
    of the first study year, the vineyard managers were briefed on the concept of
    CWSI for monitoring plant water status and were given the guideline that a daily
    CWSI value of 0.3 corresponded to approximately a 70% ET rate relative to a well-watered,
    100% ET. Beyond that initial guidance on how to interpret the daily CWSI value,
    the vineyard managers independently accessed the irrigation DSS webpages and made
    irrigation management decisions without input from research project personnel.
    At the end of the first study year both vineyard managers reported that they routinely
    accessed the irrigation DSS webpages for daily CWSI and fASW and used the information
    to support irrigation management decisions. In each of the remaining three years
    of the study, both vineyard managers, at their discretion, continued to access
    the irrigation DSS webpages and use the daily CWSI to facilitate irrigation management
    decisions. Seasonal average daily CWSI values (Table 2) were higher for V-B as
    the vineyard manager preferred higher plant water stress than the manager of V-A.
    The higher daily CWSI value at V-B was also higher because it would rapidly increase
    a couple days after an irrigation event due to the low water holding capacity
    of the sandy soil. Cumulative irrigation water application was surprisingly similar
    across vineyards, particularly for years 2018 through 2020, despite differences
    in soil water holding capacity and vineyard managers. Cumulative irrigation was
    low in the first year of the study at V-A due to above average non-growing season
    precipitation and higher water holding capacity of the silt loam soil. The narrow
    range in seasonal average daily CWSI (0.23 to 0.31 for V-A, and 0.36 to 0.44 for
    V-B) and cumulative irrigation (1.14 to 134 mm) in 2018 through 2020 suggests
    that vineyard managers effectively used the CWSI based IoT irrigation DSS to develop
    and maintain a consistent deficit irrigation management program. 4.5. Irrigation
    decision support system limitations The data-driven models used in this study
    provided reliable estimates of TLL and TUL in real-time for the semiarid climatic
    conditions of the study site, which was representative of the irrigated wine producing
    locations in the pacific northwestern U.S. The climatic conditions under which
    these data-driven models were developed were representative of the conditions
    in this study. However, the models may not perform as well in other regions with
    weather conditions outside the database range for model development. For example,
    in areas where daily windspeeds exceed 5 m sec−1. Wind speeds higher than 5 m
    sec−1 were not included in the database used for model development and grapevines
    are known to reduce stomatal conductance under high winds [38,39]. A wind induced
    reduction in stomatal conductance would result in an increase in canopy temperature
    independent of plant water stress and, since the data-driven model estimate of
    TLL would be too low, the calculated CWSI value would be elevated. Canopy temperature
    data for well-watered vines under high wind conditions would need to be included
    in the data set used to calibrate the neural network model for estimating TLL
    in windy semiarid regions. There are climatic conditions that can result in a
    calculated CWSI value of less than zero or greater than one. Wet canopy conditions
    typically result in measured canopy temperature that is less than the TLL predicted
    by the data driven model. This results in a negative CWSI value regardless of
    soil water availability. The original development of the CWSI concept by [15]
    was limited to clear sunny conditions. However, the data driven model for predicting
    TLL that was used in this study uses a database of well-watered vine canopy temperatures
    that were measured under variable cloudy conditions. The data driven model can
    therefore predict TLL for variably cloudy conditions. While the data-driven model
    used for predicting TLL is valid for solar radiation < 100 W m−2, TUL predicted
    using Eq. (2) for low levels of solar radiation can be approximately equal to
    TLL resulting in CWSI values less than zero or greater than 1. In this study,
    solar radiation less than 200 W m−2 often resulted in CWSI values less than zero.
    [40] also found solar radiation greater than 200 W m−2 was necessary to reliably
    use canopy temperature measurement for irrigation scheduling. In this study, daily
    CWSI was limited to a maximum of one and a minimum of zero in software to avert
    illogical values. The effect of wet canopy and low solar radiation on calculation
    of daily CWSI is evident in Fig. 8 on 18 and 24 August when a value of zero was
    assigned to daily CWSI during rainfall events. Limiting daily CWSI value to zero
    due to low solar radiation or wet canopy has little practical impact on use of
    CWSI for irrigation management as vine water stress is low under these circumstances
    due to low evaporative demand. When calculated CWSI is greater than one due to
    low solar radiation, limiting the value of one is more problematic as this results
    in a very erroneous representation of vine water stress that could lead to an
    unnecessary irrigation event. The climatic conditions leading to errors in calculating
    CWSI (rainfall, low solar radiation) are limited to 1-to-3-days in duration in
    the semiarid regions of the pacific northwestern U.S. and do not prevent application
    of the CWSI based IoT irrigation DSS system in the region. Software used to compute
    CWSI can be modified to detect these events and indicate to the user that the
    daily CWSI is unavailable. The daily CWSI value for the day preceding the rainfall
    or low solar radiation event can be used to guide irrigation decisions as plant
    water stress will decrease with rainfall or increase minimally as ET will be small
    under low solar radiation conditions. The CWSI based IoT irrigation DSS system
    developed and implemented in this study focused on two small acreage, commercial
    estate vineyards in semiarid southwestern Idaho USA. The climatic conditions at
    the study sites were representative of vineyards in the semiarid irrigated regions
    of the Pacific Northwest U.S. Small acreage vineyards can be found throughout
    the region and most do not have staff with irrigation science training, nor can
    they afford to hire trained vineyard irrigation management professionals or services.
    They need affordable irrigation scheduling tools that are easy to maintain and
    indicate when to irrigate to maintain a desired level of vine water stress. The
    vineyard managers at the study sites were pleased the system reliably and timely
    indication of vine water stress without having to spend time collecting soil water
    content measurements needed to estimate fASW or measure leaf water potential.
    While this study focused on small commercial estate vineyards, the IoT irrigation
    DSS concept is applicable to larger commercial vineyards where it could be used
    to provide plant water stress information needed to ground truth remote sensing
    based estimates of the ratio of actual-to-reference ET such as those provided
    by GRAPEX [41] or OPENET (https://openetdata.org). These remote sensing-based
    estimates have a minimum spatial resolution of 30 m, which is larger than the
    minimum dimension of irrigation management blocks in many commercial estate vineyards,
    hence they are not necessarily applicable to small commercial estate vineyards
    in the region. The CWSI based IoT irrigation DSS system implemented in this study
    used expensive scientific grade equipment, which proved invaluable to investigate
    the validity and adoptability of the system for irrigation management in wine
    grapes. The infrared temperature sensors cost $700 each, the multifunctional precision
    data logger was $2000, and the cellular modem with accessories was $700 totaling
    over $6100 excluding web page publishing software and climatic sensors. The soil
    moisture sensor cost is not included as it is unnecessary for calculation of the
    CWSI. The cost of the equipment used in this study is prohibitive for small vineyards
    to monitor just a single location. Vineyard manager acceptance and adoption of
    the CWSI based IoT irrigation DSS system implemented in this study justifies continued
    development and enhancement of the system. Future work will focus on incorporating
    less expensive infrared temperature sensors coupled with low-power, low-cost radio
    communications to allow wireless transfer of data to a base station. The base
    station will be connected to the internet using a cell phone modem and used to
    upload canopy temperature measurements across a vineyard to a cloud computing
    platform. The cloud computing platform software will be used to host webpages
    like those used in this project to allow real-time monitoring of canopy temperature
    at sensor locations across a vineyard and display daily CWSI for each canopy temperature
    monitoring location. These system enhancements would increase size of the vineyard
    area represented by daily CWSI measurements, encompassing multiple cultivars and
    irrigation blocks or irrigation management zones in larger vineyards. 5. Conclusions
    A CWSI based IoT irrigation DSS was developed, and field tested at two small acreage
    commercial wine grape estate vineyards in southwestern Idaho. Irrigation DSS webpages,
    accessible to vineyard managers via cell phone or computer, provided a running
    12-day history of CWSI daily values, soil moisture and current weather conditions.
    Data-driven models were used to estimate reference temperatures needed to calculate
    the CWSI using real-time environmental inputs for Rs, Ta, RH, and WS. Edge computing
    on a solar powered, field-deployed data logger was used to calculate the CWSI
    and fASW, and the data logger was used to host webpages of the irrigation DSS.
    The data logger was connected to a cellular modem located in the vineyard. The
    vineyard managers routinely used the irrigation DSS webpage for the CWSI and soil
    moisture to make irrigation management decisions. The average daily CWSI and irrigation
    amounts between 1 July and 15 September were similar between years over the four-year
    study for each study vineyard suggesting that the CWSI based IoT irrigation DSS
    was effective in assisting irrigation management decisions. Linear relationships
    between daily CWSI, midday LWP, and fraction of available soil water were significant
    (p < 0.001) at both study sites. The coefficient of determination (R2 = 0.58)
    for the linear relationship between daily CWSI and fraction of available soil
    water for V-B was better than that for midday LWP (R2 = 0.38) indicating daily
    CWSI was the most reliable indicator (less variable) of vine water status. The
    data-driven models used to estimate TLL and TUL can result in CWSI values outside
    the theoretical range of 0 to 1 when the canopy is wet from precipitation or solar
    radiation is <200 W m−2. These climatic conditions are limited to 1-to-3-days
    in duration in the semiarid regions of the pacific northwestern U.S. and do not
    prevent application of the CWSI based IoT irrigation DSS system in the region.
    These climatic instances can be detected by IoT irrigation DSS system software
    and indicate to the user that the daily CWSI is unavailable. The daily CWSI value
    for the day preceding the rainfall or low solar radiation event can be used to
    indicate plant water stress since it will decrease with rainfall or increase minimally
    as ET will be small under low solar radiation conditions. The hardware and software
    used to implement the CWSI based IoT irrigation DSS in this study was very reliable
    but too expensive for practical commercial application. Future work will focus
    on incorporating less expensive infrared temperature sensors coupled with low-power,
    low-cost radio communications to allow wireless transfer of data to a base station.
    The base station will be connected to the internet using a cell phone modem and
    upload canopy temperature measurements across a vineyard to a cloud computing
    platform. The cloud computing platform software will be used to host webpages
    like those used in this project to allow real-time monitoring of canopy temperature
    at sensor locations across a vineyard and display daily CWSI for each canopy temperature
    monitoring location. Funding The work reported in this paper was partially funded
    by the Idaho Department of Agriculture 2014 Idaho Specialty Crop Block Grant #2014-14-SCBG-ID-0016
    and the Idaho Department of Agriculture 2016 Idaho Specialty Crop Block Grant
    #2016-16SCBGPID0034. Declaration of Competing Interest The authors declare that
    they have no known competing financial interests or personal relationships that
    could have appeared to influence the work reported in this manuscript. Acknowledgment
    The authors thank Alan Muir, USDA-ARS Horticultural Crops Research Unit, for providing
    technical support for field management, sensor installation, sample collection
    and analysis. The authors also thank the cooperating vineyard owners for their
    active participation in the reported research. Data availability Data will be
    made available on request. References [1] M. Moyer, R.T. Peters, R. Hamman Irrigation
    Basics for Eastern Washington vineyards Washington State University Extension,
    Pullman, WA (2013), p. 12 CrossRefGoogle Scholar [2] M.M. Chaves, et al. Grapevine
    under deficit irrigation: hints from physiological and molecular data Ann. Bot.,
    105 (2010), pp. 661-676, 10.1093/aob/mcq030 View in ScopusGoogle Scholar [3] M.M.
    Chaves, et al. Deficit irrigation in grapevine improves water-use efficiency while
    controlling vigour and production quality Ann. Appl. Biol., 150 (2007), pp. 237-252,
    10.1111/j.1744-7348.2006.00123.x View in ScopusGoogle Scholar [4] E. Fereres,
    M.A. Soriano Deficit irrigation for reducing agricultural water use J. Exp. Bot.,
    58 (2006), pp. 147-159, 10.1093/jxb/erl165 Google Scholar [5] K.C. Shellie Water
    productivity, yield, and berry composition in sustained versus regulated deficit
    irrigation of Merlot grapevines Am. J. Enol. Vitic., 65 (2014), pp. 197-205, 10.5344/ajev.2014.13112
    View in ScopusGoogle Scholar [6] A.P. Williams, B.I. Cook, J.E. Smerdon Rapid
    intensification of the emerging southwestern North American megadrought in 2020–2021
    Nat. Clim. Chang. (2022), 10.1038/s41558-022-01290-z Google Scholar [7] J.M. Mirás-Avalos,
    E.S. Araujo Optimization of vineyard water management: challenges, strategies,
    and perspectives Water, 13 (2021), p. 746, 10.3390/w13060746 View in ScopusGoogle
    Scholar [8] M. Rienth, T. Scholasch State-of-the-art of tools and methods to assess
    vine water status OENO One, 53 (2019), 10.20870/oeno-one.2019.53.4.2403 Google
    Scholar [9] J.E. Fernández Plant-based methods for irrigation scheduling of woody
    crops Horticulturae, 3 (2017), p. 35, 10.3390/horticulturae3020035 View in ScopusGoogle
    Scholar [10] A.D. Levin Re-evaluating pressure chamber methods of water status
    determination in field-grown grapevine (Vitis spp.) Agric. Water Manag., 221 (2019),
    pp. 422-429, 10.1016/j.agwat.2019.03.026 View PDFView articleView in ScopusGoogle
    Scholar [11] K. Raschke Heat transfer between the plant and the environment Annu.
    Rev. Plant Physiol., 11 (1960), pp. 111-126, 10.1146/annurev.pp.11.060160.000551
    Google Scholar [12] C.B. Tanner Plant temperatures Agron. J., 55 (1963), pp. 210-211,
    10.2134/agronj1963.00021962005500020043x Google Scholar [13] J.L. Hatfield The
    utilization of thermal infrared radiation measurements from grain sorghum crops
    as a method of assessing their irrigation requirements Irrig. Sci., 3 (1983),
    pp. 259-268, 10.1007/BF00272841 View in ScopusGoogle Scholar [14] R.D. Jackson,
    et al. Canopy temperature as a crop water stress indicator Water Resour. Res.,
    17 (1981), pp. 1133-1138, 10.1029/WR017i004p01133 View in ScopusGoogle Scholar
    [15] S.B. Idso, et al. Normalizing the stress-degree-day parameter for environmental
    variability Agric. Meteorol., 24 (1981), pp. 45-55, 10.1016/0002-1571(81)90032-7
    View PDFView articleView in ScopusGoogle Scholar [16] Y. Cohen, et al. Estimation
    of leaf water potential by thermal imagery and spatial analysis J. Exp. Bot.,
    56 (2005), pp. 1843-1852, 10.1093/jxb/eri174 View in ScopusGoogle Scholar [17]
    D.M. Glenn, et al. Impact of kaolin particle film and water deficit on wine grape
    water use efficiency and plant water relations HortScience, 45 (2010), pp. 1178-1187,
    10.21273/hortsci.45.8.1178 Google Scholar [18] K.C. Shellie, B.A. King Kaolin
    particle film and water deficit influence malbec Leaf and berry temperature, pigments,
    and photosynthesis Am. J. Enol. Vitic., 64 (2013), pp. 223-230, 10.5344/ajev.2012.12115
    View in ScopusGoogle Scholar [19] K.C. Shellie, B.A. King Application of a daily
    crop water stress index to deficit irrigate malbec grapevine under semi-arid conditions
    Agriculture, 10 (2020), p. 492, 10.3390/agriculture10110492 Google Scholar [20]
    J. Bellvert, et al. Mapping crop water stress index in a ‘Pinot-noir’ vineyard:
    comparing ground measurements with thermal remote sensing imagery from an unmanned
    aerial vehicle Precis. Agric., 15 (2014), pp. 361-376, 10.1007/s11119-013-9334-5
    View in ScopusGoogle Scholar [21] J. Bellvert, et al. Seasonal evolution of crop
    water stress index in grapevine varieties determined with high-resolution remote
    sensing thermal imagery Irrig. Sci., 33 (2015), pp. 81-93, 10.1007/s00271-014-0456-y
    View in ScopusGoogle Scholar [22] E.J. Sadler, et al. Corn canopy temperatures
    measured with a moving infrared thermometer array Trans. ASAE, 45 (2002), p. 581,
    10.13031/2013.8855 View in ScopusGoogle Scholar [23] J.R. Mahan, K.M. Yeater Agricultural
    applications of a low-cost infrared thermometer Comput. Electron. Agric., 64 (2008),
    pp. 262-267, 10.1016/j.compag.2008.05.017 View PDFView articleView in ScopusGoogle
    Scholar [24] V. Alchanatis, et al. Evaluation of different approaches for estimating
    and mapping crop water status in cotton with thermal imaging Precis. Agric., 11
    (2010), pp. 27-41, 10.1007/s11119-009-9111-7 View in ScopusGoogle Scholar [25]
    H.G. Jones Use of infrared thermometry for estimation of stomatal conductance
    as a possible aid to irrigation scheduling Agric. For. Meteorol., 95 (1999), pp.
    139-149, 10.1016/S0168-1923(99)00030-1 View PDFView articleView in ScopusGoogle
    Scholar [26] H.G. Jones Plants and Microclimate: a Quantitative Approach to Environmental
    Plant Physiology Cambridge University Press, Cambridge (2013) 3 ed. Google Scholar
    [27] I. Leinonen, H.G. Jones Combining thermal and visible imagery for estimating
    canopy temperature and identifying plant stress J. Exp. Bot., 55 (2004), pp. 1423-1431,
    10.1093/jxb/erh146 View in ScopusGoogle Scholar [28] S.A. O''Shaughnessy, et al.
    Using radiation thermography and thermometry to evaluate crop water stress in
    soybean and cotton Agric. Water Manag., 98 (2011), pp. 1523-1535, 10.1016/j.agwat.2011.05.005
    View PDFView articleView in ScopusGoogle Scholar [29] A. Pou, et al. Validation
    of thermal indices for water status identification in grapevine Agric. Water Manag.,
    134 (2014), pp. 60-72, 10.1016/j.agwat.2013.11.010 View PDFView articleView in
    ScopusGoogle Scholar [30] J.C. O''Toole, J.G. Real Estimation of aerodynamic and
    crop resistances from canopy temperature Agron. J., 78 (1986), pp. 305-310, 10.2134/agronj1986.00021962007800020019x
    Google Scholar [31] J.O. Payero, S. Irmak Variable upper and lower crop water
    stress index baselines for corn and soybean Irrig. Sci., 25 (2006), pp. 21-32,
    10.1007/s00271-006-0031-2 View in ScopusGoogle Scholar [32] B.A. King, K.C. Shellie
    Evaluation of neural network modeling to predict non-water-stressed leaf temperature
    in wine grape for calculation of crop water stress index Agric. Water Manag.,
    167 (2016), pp. 38-52, 10.1016/j.agwat.2015.12.009 View PDFView articleView in
    ScopusGoogle Scholar [33] B.A. King, et al. Data-driven models for canopy temperature-based
    irrigation scheduling Trans. ASABE, 63 (2020), pp. 1579-1592, 10.13031/trans.13901
    View in ScopusGoogle Scholar [34] K.C. Shellie Vine and berry response of Merlot
    (Vitis vinifera L.) to differential water stress Am. J. Enol. Vitic., 57 (2006),
    pp. 514-518 CrossRefView in ScopusGoogle Scholar [35] Allen, R.G., et al., Crop
    evapotranspiration: guidelines for computing crop water requirements. FAO Irrigation
    and Drainage Paper #56. 1998, Rome, Italy: FAO. Google Scholar [36] L.E. Williams,
    P. Baeza Relationships among ambient temperature and vapor pressure deficit and
    leaf and stem water potentials of fully irrigated, field-grown grapevines Am.
    J. Enol. Vitic., 58 (2007), pp. 173-181 CrossRefView in ScopusGoogle Scholar [37]
    L.E. Williams, T.J. Trout Relationships among vine- and soil-based measures of
    water status in a thompson seedless vineyard in response to high-frequency drip
    irrigation Am. J. Enol. Vitic., 56 (2005), pp. 357-366 CrossRefView in ScopusGoogle
    Scholar [38] J.M. Kobriger, W.M. Kliewer, S.T. Lagier Effects of wind on water
    relations of several grapevine cultivars Am. J. Enol. Vitic., 35 (1984), pp. 164-169
    CrossRefGoogle Scholar [39] J.M. Campbell-Clause Stomatal response of grapevines
    to wind Aust. J. Exp. Agric., 38 (1998), pp. 77-82, 10.1071/EA91220 View in ScopusGoogle
    Scholar [40] D.L. Bockhold, et al. Irrigation scheduling based on crop canopy
    temperature for humid environments Trans. ASABE, 54 (2011), pp. 2021-2028, 10.13031/2013.40654
    View in ScopusGoogle Scholar [41] K.R. Knipper, et al. Evapotranspiration estimates
    derived using thermal-based satellite remote sensing and data fusion for irrigation
    management in California vineyards Irrig. Sci., 37 (2019), pp. 431-449, 10.1007/s00271-018-0591-y
    View in ScopusGoogle Scholar Cited by (3) A data-driven bibliometric review on
    precision irrigation 2023, Smart Agricultural Technology Show abstract Latest
    Trends and Challenges in Digital Agriculture for Crop Production 2023, SSRN Evaluation
    of Thermal-Based Physiological Indicators for Determining Water Stress Thresholds
    in Drip- Irrigated ''Regina'' Cherry Trees 2023, Research Square ☆ Mention of
    company or trade names is for description only and does not imply endorsement
    by the USDA. The USDA is an equal opportunity provider and employer. Published
    by Elsevier B.V. Part of special issue Smart Irrigation Techniques Edited by Dr.
    Vasileios Liakos vliakos@uth.gr View special issue Recommended articles A correlated-variables
    model for monitoring individual growing-finishing pig''s behavior by RFID registrations
    Smart Agricultural Technology, Volume 4, 2023, Article 100189 B.G.C. de Bruijn,
    …, J.B. van der Fels View PDF Evaluation of particle models of corn kernels for
    discrete element method simulation of shelled corn mass flow Smart Agricultural
    Technology, Volume 4, 2023, Article 100197 J.M. Boac, …, J.P. Harner III View
    PDF Design and development of smart cover system for vineyards Smart Agricultural
    Technology, Volume 3, 2023, Article 100064 Bilal Karaman, …, Aykut Kurtoglu View
    PDF Show 3 more articles Article Metrics Citations Citation Indexes: 1 Captures
    Readers: 33 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Smart Agricultural Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A crop water stress index based internet of things decision support system
    for precision irrigation of wine grape
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Feng A.
  - Vong C.N.
  - Zhou J.
  - Conway L.S.
  - Zhou J.
  - Vories E.D.
  - Sudduth K.A.
  - Kitchen N.R.
  citation_count: '1'
  description: Unmanned aerial vehicle (UAV) based remote sensing has been extensively
    used in precision agriculture applications, such as vegetation growth and health
    monitoring, yield estimation, and irrigation management. Conventional procedures
    for UAV data collection and processing require collecting highly overlapped images,
    stitching images to generate an orthomosaic, and using ground control points (GCPs)
    in the field or UAV onboard real-time-kinematic (RTK) global navigation satellite
    system (GNSS) data to improve position accuracy. For improving efficiency, a previous
    study developed a framework to process individual UAV images for mapping cotton
    emergence. The current study aimed to build a near-real time image processing
    pipeline to further improve the positioning accuracy of single UAV images. The
    improved image processing pipeline comprised feature detection and matching, false
    matches removal, geometric transformation matrix calculation, crop row alignment,
    image position assignment, and mapping. The developed pipeline was tested for
    mapping in both cotton and corn fields. Results showed that the position accuracies
    for measuring the distance between GCPs were 0.32 ± 0.21 m and 0.57 ± 0.28 m in
    a cotton and a corn field, respectively, when compared to ground truth data collected
    with an RTK-GNSS. The developed pipeline did not require GCPs in the field or
    image post-processing steps, such as image mosaicking and feature extraction,
    which allowed processing in near-real time and may possibly be implemented in
    real-time using an onboard edge computing system. The pipeline was used to map
    emergence parameters for cotton and corn fields, including stand count, canopy
    area, mean days to imaging after emergence, and plant spacing standard deviation.
    These maps demonstrated the success of the developed methods in providing a low-cost
    near real-time tool (8.6 and 3.6 s/image for the cotton and corn fields, respectively)
    for mapping emergence parameters at field-scale for use in both research and agricultural
    production.
  doi: 10.1016/j.compag.2023.107650
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    View Open Manuscript Outline Highlight Abstract Keywords 1. Introduction 2. Materials
    and methods 3. Results 4. Discussion 5. Conclusion CRediT authorship contribution
    statement Declaration of Competing Interest Acknowledgements Code availability
    Data availability References Show full outline Cited by (1) Figures (13) Show
    7 more figures Tables (3) Table 1 Table 2 Table 3 Computers and Electronics in
    Agriculture Volume 206, March 2023, 107650 Developing an image processing pipeline
    to improve the position accuracy of single UAV images Author links open overlay
    panel Aijing Feng a b 1, Chin Nee Vong a 1, Jing Zhou c, Lance S. Conway d, Jianfeng
    Zhou a, Earl D. Vories d, Kenneth A. Sudduth d, Newell R. Kitchen d Show more
    Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2023.107650 Get rights
    and content Highlight • An image processing workflow to geo-reference single UAV
    images. • Field mapping of crop early emergence using individual UAV images. •
    Improved position accuracy of 0.17 and 0.57 m for cotton and corn UAV images.
    • Potential real-time processing UAV images for on-site decision making. Abstract
    Unmanned aerial vehicle (UAV) based remote sensing has been extensively used in
    precision agriculture applications, such as vegetation growth and health monitoring,
    yield estimation, and irrigation management. Conventional procedures for UAV data
    collection and processing require collecting highly overlapped images, stitching
    images to generate an orthomosaic, and using ground control points (GCPs) in the
    field or UAV onboard real-time-kinematic (RTK) global navigation satellite system
    (GNSS) data to improve position accuracy. For improving efficiency, a previous
    study developed a framework to process individual UAV images for mapping cotton
    emergence. The current study aimed to build a near-real time image processing
    pipeline to further improve the positioning accuracy of single UAV images. The
    improved image processing pipeline comprised feature detection and matching, false
    matches removal, geometric transformation matrix calculation, crop row alignment,
    image position assignment, and mapping. The developed pipeline was tested for
    mapping in both cotton and corn fields. Results showed that the position accuracies
    for measuring the distance between GCPs were 0.32 ± 0.21 m and 0.57 ± 0.28 m in
    a cotton and a corn field, respectively, when compared to ground truth data collected
    with an RTK-GNSS. The developed pipeline did not require GCPs in the field or
    image post-processing steps, such as image mosaicking and feature extraction,
    which allowed processing in near-real time and may possibly be implemented in
    real-time using an onboard edge computing system. The pipeline was used to map
    emergence parameters for cotton and corn fields, including stand count, canopy
    area, mean days to imaging after emergence, and plant spacing standard deviation.
    These maps demonstrated the success of the developed methods in providing a low-cost
    near real-time tool (8.6 and 3.6 s/image for the cotton and corn fields, respectively)
    for mapping emergence parameters at field-scale for use in both research and agricultural
    production. Previous article in issue Next article in issue Keywords Crop emergenceImage
    processingMappingReal-time processingUAV imagery 1. Introduction Remote sensing
    (RS) based on unmanned aerial vehicle (UAV) platforms has become a regular tool
    in precision agriculture (PA) for efficient data collection from large areas of
    farm fields. Widely used UAV-based sensing systems for agricultural applications
    include cameras with different spectral bands, such as RGB (red, green, and blue),
    multispectral, hyperspectral, and thermal cameras, as well as light detection
    and ranging (LiDAR) sensors. The UAV-based sensing systems have been used in different
    PA applications, such as weed and disease detection, vegetation growth and health
    monitoring, yield estimation, and irrigation management (Tsouros et al., 2019).
    When compared to other RS platforms such as satellites and manned aircrafts, UAV-based
    sensing systems are lower in cost, more friendly in operation, and flexible in
    data acquisition time and altitude. Furthermore, UAV-based sensing systems can
    collect data at high spatial and temporal resolution, have high image quality,
    and provide immediate access (Vega et al., 2015, Xie and Yang, 2020, Yang et al.,
    2017). Meanwhile, as compared to ground-based sensing platforms, UAV-based sensing
    systems are less time-consuming for fine-scale use and do not cause crop damage
    or soil compaction (Xie and Yang, 2020). The key factors for the successful implementation
    of PA technology include accurate site-specific information collection and timely
    decision making (Delavarpour et al., 2021). Site-specific information from UAV-based
    sensing systems usually relies on geo-referencing of UAV images by one of two
    methods: 1) aerial triangulation (AT) using ground control points (GCPs) or 2)
    direct geo-referencing (DG) based on the position and orientation measurements
    of the capturing camera (Rabah et al., 2018). Nowadays, the DG method based on
    the UAV onboard global navigation satellite system (GNSS) receiver is widely used,
    and location accuracy can be improved by using real-time kinematic (RTK) technology.
    For instance, a previous study showed root mean square error (RMSE) for total
    horizontal errors (easting and northing) of 0.843, 0.034 m, and 0.032 m for non-RTK
    UAV data processed via DG, non-RTK UAV data processed with GCPs, and RTK UAV data
    (Hugenholtz et al., 2016). However, RTK-GNSS is usually expensive (Obanawa et
    al., 2019) and installing sufficient GCPs in fields is a time-consuming, non-real
    time operation. Further, the exercise is sometimes difficult or impossible in
    certain field conditions (Štroner et al., 2021). This could occur, for example,
    when crops are very tall or the canopy has completely closed, when soil is very
    wet, or under narrow-row cropping systems. Moreover, the position accuracy when
    using GCPs depends on the configuration and number of GCPs used throughout the
    field (Sanz-Ablanedo et al., 2018). The conventional method of processing UAV
    images usually requires a substantial image overlap (about 75%) to construct orthomosaic
    images of study fields (Tsouros et al., 2019), which results in low efficiency
    in data collection (more flight passes and slower speed). This is especially noticeable
    for UAV data collected with low altitude (≤20 m) to provide sufficient resolution
    for small crop plants at early stages (Feng et al., 2020a, Vong et al., 2021).
    The collected images are then processed using commercial UAV image processing
    software such as Agisoft Metashape (Agisoft LLC, St. Petersburg, Russia) or Pix4D
    mapper (Pix4D S.A., Lausanne, Switzerland), a process that may require from hours
    to days depending on the size of field, number of images, and image resolution
    (Feng et al., 2020a). In addition, the process of image stitching may require
    extensive computational resources and may cause a substantial delay for field
    decision making (Feng et al., 2020a, Xiang and Tian, 2011). Furthermore, orthomosaic
    images may contain image artifacts and distortions caused by image scenes, lighting
    conditions, camera parameters, flight plans (height, speed, and overlaps), and
    processing parameters (Gross and Heumann, 2016, Iglhaut et al., 2019). These issues
    can degrade the image quality and result in inaccurate results from image post-processing,
    such as for vegetation indices (VI) and canopy cover calculations. Post-image
    processing uses additional software such as Matlab, ArcGIS, and QGIS (Tsouros
    et al., 2019, Yang et al., 2017), which further increases complexity and time
    for data processing (Tsouros et al., 2019). Since consumer-grade UAV imaging systems
    are widely used in research and for these, RTK GNSS is generally not available.
    Therefore, a more cost-effective solution for timely image processing and real-time
    decision making is greatly needed. A previous study by Feng at al. (2020a) developed
    an efficient imagery data processing and analysis framework for timely evaluation
    of cotton emergence using a UAV-based imaging system and deep learning (DL) technology.
    The study introduced an approach of directly processing individual image frames
    rather than generating orthomosaic images, which can reduce the processing time
    and prevent image quality degradation. This framework was successfully tested
    for estimating and mapping cotton emergence (stand count and canopy size) with
    a position accuracy of 1.72 m ± 1.37 m (mean ± standard deviation). However, the
    position accuracy was not satisfactory to acquire site-specific information for
    research in PA. Since conventional plant row spacing of row crops such as cotton,
    corn, and soybean ranges from 0.76 to 1.02 m (Clawson et al., 2006, Elmore and
    Abendroth, 2007, Robinson and Conley, 2007), position accuracy should be improved
    to better than 0.38 – 0.51 m (half of the common row spacings) to generate a more
    accurate and reliable field mapping. This study aimed to develop a real-time image
    processing pipeline to process individual UAV images for improved position accuracy.
    The developed pipeline was then used to create emergence maps for cotton and corn
    at field scale to demonstrate its application. Moreover, the position accuracy
    was compared with the method from previous study to evaluate the performance of
    the developed method. 2. Materials and methods 2.1. UAV imaging system A UAV imaging
    system (Phantom 4 Advanced, DJI, Shenzhen, Guangdong, China) was used to collect
    high resolution RGB images in cotton and corn fields. The resolution of the onboard
    RGB camera was set to 4864 × 3648 pixels, resulting in the calculated spatial
    resolution of 3.0 mm pixel−1 at 10 m above ground level (AGL). Images were taken
    sequentially for both fields at 0.5 frames per second (fps) at a flight height
    of 10 m and flight speeds of 7.5 and 7.2 km h−1 for the cotton and corn field,
    respectively. The UAV flight trajectory and flight parameters were set using the
    control apps Autopilot (Hangar Technology, Austin, TX, USA) or Litchi (VC Technology
    ltd, London, U.K.). The image overlaps in both the sideward and forward directions
    were about 60 – 75 %. During aerial image data collection, the onboard GNSS system
    on the UAV continuously recorded the coordinates and altitude of the imaging system
    and provided geo-referencing for each image as part of the image metadata. Geo-referenced
    images were downloaded after the flight for further processing. 2.2. Experimental
    fields and configurations 2.2.1. Cotton field The cotton field was a research
    field located at the Fisher Delta Research, Extension and Education Center of
    the University of Missouri in the upper portion of the Mississippi River Delta
    region near Portageville, MO, USA (36.411° N, 89.696° W). The field has dimensions
    of 315 m (north–south, NS) × 150 m (east–west, E-W). The cotton cultivar PHY 320
    WRF (Dow Agrosciences, Indianapolis, IN) was planted on bedded soil using a John
    Deere 1700 (Deere & Co., Moline, IL, USA) planter on May 15, 2019. The field was
    seeded in a NS direction at a target seeding rate of 136,000 seeds ha−1 with a
    row spacing of 0.97 m. This resulted in a total of 152 crop rows. Most of the
    cotton emerged by May 22, 2019 and the UAV images were collected on May 31, 2019
    [16 days after planting (DAP)]. Ground truth and reference data including GCPs,
    stand count and seedling size, were collected on the day of the UAV flight. In
    this study, 28 GCPs (Fig. 1) were set in the field, including 16 fence posts (∼1.1
    m in height) each with a white-black polytechnic board (30 × 30 cm) on the top
    and 12 quadrats (53 × 53 cm) made with half-inch polyvinyl chloride (PVC) pipes.
    Two different types of GCP were used to mark different sampling methods for assessment
    of cotton stand count. A ground stake that could be recognized during the growing
    season (Fig. 1c) was placed at each GCP to mark its position so that the GCP could
    be placed at the same locations for each data collection. A RTK survey kit (REACH
    RS+, Emlid ltd., Saint Petersburg, Russia) with a ReachView app (Emlid ltd.) was
    used to obtain the coordinates of the 28 GCPs. At each GCP, six flags were used
    to mark six 1-m intervals of crop seedlings in two cotton rows as shown in Fig.
    1a and Fig. 1b. The number of seedlings in each 1-m interval was counted manually
    to serve as ground truth data for the stand count estimation. Meanwhile, a tape
    measure with a precision scale of 1 mm was placed along the cotton rows. A digital
    camera on a cell phone (iPhone 6 s, Apple Inc., Cupertino, CA, USA) was used to
    take videos of the crop rows while being held manually at a height of about 0.5
    m AGL with the camera facing down. Cotton stands were counted by playing back
    the videos and canopy size (top view) was calculated by comparing the scales of
    the tape measure and number of image pixels. Download : Download high-res image
    (133KB) Download : Download full-size image Fig. 1. Illustration of the cotton
    field setup with a and b showing one of the 28 ground control points (GCPs) that
    include two 6-m crop rows, a fence post (GCP), and red flags marking each 1-m
    interval. The ground videos were taken using a cell phone camera. c) UAV image
    showing a PVC pipe quadrat with one ground stake inside. (For interpretation of
    the references to color in this figure legend, the reader is referred to the web
    version of this article.) 2.2.2. Corn field The corn field was located near Columbia,
    MO, USA (38.946° N 92.133° W) with dimensions of 160 m (NS) by 49 m (E-W). The
    field was planted with corn hybrid Pioneer 0589 (Corteva Agriscience, Wilmington,
    DE, USA) on April 20, 2020 using a custom-built four-row planter equipped with
    MaxEmerge XP row units (Deere & Co., Moline, IL, USA) at a 0.76-m row spacing.
    Four planting depth treatments (3.8, 5,1, 6.4, and 7.6 cm) with two replications
    were implemented to create different emergence dates. Each replication of each
    planting depth had eight rows (6.1 m) of corn along the NS direction of the field
    resulting in a total of 64 corn rows. Seeds were planted at the four defined depths
    at a seeding rate of 81,500 seeds ha−1, which was equivalent to an average plant
    intra-row seed spacing of 16 cm. Five monitoring sites were marked with flags
    for ground data collection with each site consisting of two adjacent corn rows
    6.0 m long (Fig. 2). Corn emergence was checked daily, and colored stakes were
    used to mark the newly emerged plants for each day. The first and last emergence
    checks in the monitoring sites were 2 and 12 May of 2020 (12 and 22 DAP). The
    same RTK survey kit with the ReachView app was used to obtain the GPS coordinates
    of the monitoring sites (a flag at one side of the monitoring site was used as
    the GCP). There was a total of five GCPs. The UAV aerial image data was collected
    on 22 May 2020, which was 32 DAP or 20 days after first emergence. This resulted
    in most plants at the site between vegetative growth stage V2 to V4. Then, plant
    spacing (PS) was measured using a tape measure on 15 June 2020 (56 DAP). Download
    : Download high-res image (298KB) Download : Download full-size image Fig. 2.
    Example image of monitoring site with color stakes marking different emergence
    dates at the corn field and one of the flags used as ground control point (GCP).
    The area in the red box in the upper image is enlarged in the lower image. (For
    interpretation of the references to color in this figure legend, the reader is
    referred to the web version of this article.) 2.3. Single image processing pipeline
    development Fig. 3 illustrates the summary workflow of the image pre-processing
    and image processing pipeline to establish location information for single images.
    The collected images were pre-processed using decorrelation stretch to enhance
    the images and standard Hough transform (SHT) to rotate the images for crop row
    detection and ground sample distance (GSD) determination of each image with the
    detailed procedures described in Feng et al. (2020a, Fig. 3 dashed box). Inside
    the dotted box of Fig. 3 are the procedures of the image processing pipelines
    developed in the present study that improved position accuracy of single image
    frames compared to the methods of Feng et al (2020a). The first three procedures
    (symbols highlighted in blue) were modified based on previous customized image
    alignment and stitching algorithms described in Feng, et al. (2020b), focusing
    on image feature identification and matching followed by removal of false matches.
    The remaining three procedures (symbols highlighted in yellow) were added in this
    study to assign position information of each single image based on E-W (crop rows)
    and NS (position in each crop row) translations. The position information of images
    was then used to develop site-specific maps for parameters of interest (e.g.,
    stand count, canopy size, emergence date). Feng et al. (2020b) generated an orthomosaic
    image based on the matched features of the images for the whole field using post-processing
    method after data collection, which was time consuming. On the other hand, the
    image processing pipeline in this study aligned crop rows using single image frames
    (without image mosaicking) for the whole field, which improved the efficiency
    and made near real-time processing possible. The details of the image processing
    pipeline for single image frames (Fig. 3 dotted box) are described in the following
    sections. Download : Download high-res image (463KB) Download : Download full-size
    image Fig. 3. Workflow of image pre-processing (dashed line box) and image processing
    pipeline (dotted line box) in this study. 2.3.1. Feature detection and matching
    Image features were detected using the method of Speeded-Up Robust Features (SURF),
    a 128-dimension (8 orientation bins for each of the 4 × 4 location bins) local
    feature detector, and a descriptor (Bay et al., 2008). As a scale-invariant feature,
    SURF used image pyramids and different sized box filters to find points of interest
    at different scale spaces (Lowe, 2004). The scale space of SURF was divided into
    octaves and each octave was subdivided into a constant number of scale levels.
    The number of pyramid octaves and octave layers were both set to three in this
    study as suggested by Lowe (2004). After feature detection, the k-nearest neighbors
    (KNN) algorithm was used to match the most similar feature pairs in two successive
    images. The KNN calculated all the Euclidean distances of features to find the
    closest K matches. In this study, K was set to 2 (K = 2) so that the algorithm
    would return the two closest key points for each key point to be matched. 2.3.2.
    Removal of false matches False matches, i.e., the pixels that had the shortest
    Euclidean distance but were different objects in the successive images, would
    occur and needed to be removed. Two methods were used sequentially to remove these
    false matches: 1) distance ratio test; 2) matching line slope and length ratio
    test. The distance ratio test was performed using Eq. (1): (1) where, D1 and D2
    are the Euclidean distance of the closest key point and second-closest key point
    identified by KNN; R is the ratio selected by a trial-and-error approach. It was
    assumed that D1 came from the same object as the key point to be matched, while
    D2 came from another object, which could be noise. The distance ratio test then
    tested whether D1 was sufficiently different from D2 to decide it was a false
    match. If the difference was small, D1 could also represent noise. As suggested
    by Lowe (2004), R > 0.80 was initially used to remove all the false matches and
    less correct matches. However, this ratio still kept some false matches in this
    study, and the ratio was adjusted to R > 0.65 to remove all the false matches.
    The images were collected on a relatively calm day (wind speed ≤ 4 m s−1) and
    the UAV was flown parallel to the ground with minimum variations in roll and pitch.
    In our experiments, variations in UAV yaw angle were noticed and therefore the
    images were pre-processed (as described in Feng et al, 2020a) to align the crop
    rows. However, there was no substantial variation in angles to crop rows between
    two successive images since the heading variation was small during the acquisition
    of two images (2 s). Therefore, the correct matches were expected to have similar
    slopes and length. Hence, by calculating the slopes and lengths of matching lines
    using Eq. (2), (3), the ratio of the slope and the length of one matching line
    to the mean value of all matching lines in two successive images would be close
    to 1. (2) (3) where, (x1, y1) and (x2, y2) are the coordinates of a key point
    and its matching point in two successive images. Those matches with a large ratio
    difference from other matches were false matches and were removed by using the
    thresholds of < 0.9 and > 1.1 (determined by trial-and-error methods). Fig. 4
    shows an example of correct matches remaining (yellow lines) after removing false
    matches using the two methods. Before removing false matches, there were 10,978
    matches and after removing false matches using Method 1 (three example lines shown
    in red), there were 113 matches remaining, including false and correct matches.
    Finally, after removing false matches (three example lines shown in blue) using
    Method 2, the remaining 34 matches were all correct matches. The remaining matches
    were distributed on the bottom of left image and top of the right image as these
    are the areas overlapping between them. Fewer matched lines were found at the
    left corner of the two images (bottom left corner of left image and top left corner
    of the right image) as compared to their right corners, where there were fewer
    notable image features being filtered during the SURF feature detection process
    (Bay et al., 2008, Feng et al., 2019). In addition, it can be seen from Fig. 4
    that less matching features were detected from the left portion of images than
    those from the right portion. The possible reason might be that left portion of
    images was brighter or slightly saturated with less distinction between crops
    and soil background than the right portion, where more distinguished features
    were observed (darker soil background and crop row accompanied by shadow). Download
    : Download high-res image (220KB) Download : Download full-size image Fig. 4.
    Feature detection and matching in two successive images (right image is the next
    successive image after the left image flying in the north to south direction)
    of the cotton field. Yellow lines and blue ID number represent valid matches.
    Red lines and red ID number indicate example matches removed after Method 1 while
    blue lines and red ID number indicate example matches removed after Method 2.
    (For interpretation of the references to color in this figure legend, the reader
    is referred to the web version of this article.) 2.3.3. Calculation of the geometric
    transformation matrix Once the correct matches were identified, transformation
    matrices of each matching pair within the two successive images were calculated.
    In this study, a generic transformation matrix M was used as shown in Eq. (4)
    (Szeliski, 2007): (4) where, tx and ty are the distance in pixels of translation
    in the E-W and NS directions; sx and sy are the scale factors in E-W and NS directions,
    respectively; and θ is the rotation angle. Assuming a pixel value of an image
    coordinate I(x, y) was to be transformed into its previous image coordinate I’(x'',y''),
    Eq. (5) shows the transformation of these two images based on the transformation
    matrix M: (5) where, (x, y) and (x’, y’) are image coordinates of image I(x, y)
    and I’(x'',y''). The images had been rotated to obtain crop rows aligned with
    the vertical axis of the images as stated earlier. Therefore, no rotation was
    needed in the image transformation (i.e., θ = 0). In addition, the GSD of each
    image frame was calculated using row spacing (detailed in Section 2.3.5) and the
    UAV did not have much variation between two images (within 2 s). Therefore, the
    scale factor between two successive images was relatively small in this study.
    This study aimed to develop a near real-time pipeline to process individual UAV
    images for improved position accuracy, which required timely data processing (minimize
    processing time). To reduce the computation time of matching two images, only
    translation was considered in the transformation matrix, i.e., without including
    scale factor and rotation (sx and sy = 1; θ = 0). 2.3.4. Crop row alignment based
    on the geometric transformation matrix After applying the SHT to the original
    images, the images were rotated and each crop row position in the rotated images
    was obtained. Then, crop row alignment was conducted, with Fig. 5 showing this
    process for the first two images of the cotton field. Firstly, the crop row numbers
    of the first image were identified manually. The tx in the geometric transformation
    matrix M controlled the distance in pixels of translation in the E-W direction.
    When each crop row in the second image was translated by tx pixels, they would
    match with the positions of each crop row in the first image and would be assigned
    to the row numbers corresponding with the row numbers in the first image. New
    crop rows that appeared on the right side of the second image would be assigned
    a successively higher number from the last crop row in the first image. This process
    would continue in every-two consecutive images until crop row numbers were assigned
    to all images. Download : Download high-res image (331KB) Download : Download
    full-size image Fig. 5. Crop row alignment. There were 10 cotton rows identified
    manually in the first image from the cotton field. The numbers of 9 cotton rows
    identified by the SHT in the second image frame were aligned with the first image
    frame based on the distance in pixels in the E-W direction (tx) from the geometric
    transformation matrix M. The distance in pixels in the NS direction (ty) determined
    the image position within the entire crop row. 2.3.5. Image positions within each
    entire crop row The ty in the geometric transformation matrix M determined the
    distance in pixels of translation in the NS direction as demonstrated in Fig.
    5 and Eq. (4). When the UAV flew in the north to south direction, the images at
    the north and the images at the south were at the beginning and the end of the
    crop rows, respectively as shown in Fig. 6. The ty value was positive when the
    image sequence was from the beginning to the end (north to south). Similarly,
    when the UAV flew from south to north, the image sequence was from the end to
    the beginning of the crop rows and the ty value was negative. Due to the forward
    image overlaps when taking successive images in the fields, each image would move
    ty pixels from its previous image in the NS direction. Since actual UAV flight
    height was inconsistent due to some uncontrolled factors, resulting in different
    GSD for each image, the translation pixels in the NS directions would misrepresent
    the true translation based on the ground distance (translation in meters) for
    the entire crop rows. Hence, to resolve this problem, translation in meters was
    calculated using the GSD of each image as determined based on the fixed row spacing
    (Eq. (6)): (6) Download : Download high-res image (474KB) Download : Download
    full-size image Fig. 6. Illustration of determining image positions within each
    entire crop row. Black cross in each combined image represents the center position
    for each image in their combined image. where ty_meter is the translation in meters
    in the NS direction, ty is the pixels of translation in the NS directions and
    GSD is the ground sampling distance. The GSD was determined automatically by dividing
    the number of pixels for plant rows (obtained after row detections by Hough transformation)
    by actual row spacing (determined by the planter) as described in Feng et al.,
    2020a. The first image of the data collection (the beginning of the first crop
    rows) was given a value of zero and used as the reference for all other images
    collected in each field (Fig. 6). Then, the position in the NS direction of all
    other images was determined by accumulating the ty_meter from each subsequent
    image as illustrated in Fig. 6. 2.3.6. Emergence mapping based on the image alignment
    Crop emergence is an important agronomic factor for plant development assessment
    and field management at early growth stages, and can be evaluated using plant
    population, stand count, uniformity, and seedling size (Sansone et al., 2002,
    Supak, 1990). Crop emergence mapping of these parameters is important for making
    early field management decisions, assessing yield spatial variability, and studying
    effects of soil and environment on crop emergence (Feng et al., 2020a, Vong et
    al., 2022). In this study, emergence maps of a few parameters including stand
    count and canopy area for the cotton field, and stand count, mean days to imaging
    after emergence (DAEmean), and standard deviation of plant spacing (PSstd) for
    the corn field were created. The created maps were based on a local coordinate
    system consisting of a two-dimensional X-Y plane oriented in the NS (Y axis) and
    E-W directions (X axis) with the center position of the first image in the first
    flight path as the origin point (refer to section 2.3.5). Multiple 1-m seedling
    segment images were cropped from each raw image using the method described by
    Feng et al. (2020a) (Fig. 3 dashed line box) and illustrated in Fig. 7. The previously
    stated emergence parameters were estimated using a Resnet18 model described in
    previous studies (Feng et al., 2020a, Vong et al., 2022). Then, the maps were
    created based on the location of each segmented image as determined by the row
    numbers in E-W direction and ty_meter in NS direction. The row numbers were recognized
    based on the crop row assignment steps delineated above. Since the ty_meter described
    the translation in meters in the NS direction for the geometric center of each
    image frame, the translation in meters of each segmented image could be computed
    by adding (segment images below the geometric center) to or subtracting (segment
    images above the geometric center) from the distance in meters of the ty_meter
    (Fig. 7). If some segmented images from different images were geometrically close
    (<1 m), the average of their estimated emergence parameters was used when generating
    the emergence maps. To further demonstrate the usage of the emergence maps created
    from the developed pipeline, the cotton canopy area and stand count maps were
    compared with a yield map generated from an Ag Leader Insight yield monitor installed
    on a cotton harvester (1996 Case IH 2155, Racine, WI). The details of the harvest
    and yield map generation were described in Feng et al. (2019). Then, a Pearson
    correlation was performed to correlate canopy area and stand count with yield.
    Download : Download high-res image (268KB) Download : Download full-size image
    Fig. 7. Illustration of multiple cropped 1-m segment images and computation of
    their position based on the geometric center of an image, ty_meter. 2.4. Position
    accuracy evaluation using GCPs To evaluate the performance of the developed pipeline
    in improving position accuracy, an RTK GNSS system was used to measure the coordinates
    of GCPs in both fields, as shown in Fig. 8 and denoted as ground measurement.
    Furthermore, coordinates of GCPs were also determined from the GNSS of the UAV,
    DJI Phantom 4 Advanced using the method described by Feng et al. (2020a) and denoted
    as Phantom measurement. Then, the distance between GCPs was calculated using the
    coordinates from the ground and Phantom measurement using the haversine formula
    (Feng et al., 2020a, Naik and Nair, 2019). For the pipeline measurement, the distance
    between GCPs was calculated based on ty_meter for the NS direction and the difference
    in crop rows for the E-W direction (Fig. 8c). Then, the position accuracy was
    computed as the difference in their distances for all the GCPs (Ground vs Pipeline
    and Ground vs Phantom) and represented in a boxplot. Download : Download high-res
    image (688KB) Download : Download full-size image Fig. 8. Location of ground control
    points (GCPs) in a) corn field and b) cotton field as well as demonstration of
    distance comparison between two different kinds of systems for the position accuracy
    evaluation: b) ground RTK measurement and c) pipeline measurement. An analysis
    of variance (ANOVA) test followed by Tukey’s Honest Significant Difference (HSD)
    test was conducted to compare position accuracy means at a 0.05 significance level
    (α = 0.05) for the two sets (Ground vs Pipeline and Ground vs Phantom). The cotton
    field had 28 GCPs as shown in Fig. 8b, with all the GCPs south of p1, p2, p3,
    and p4 in the same row. The comparison of coordinates (latitude and longitude)
    was between every-two GCPs in the same row (e.g., p1 and p5, p1 and p9, p1 and
    p13, p1 and p17, p1 and p21, p1 and p25, p5 and p9, etc.). One of the GCPs (p26)
    was not visible in the UAV image and was excluded from the position accuracy comparison.
    Hence, the total pairs for position accuracy comparison in the cotton field was
    78. On the other hand, the locations of GCPs in the corn field (Fig. 8a) were
    more random (at different rows) compared to those of the cotton field. The position
    accuracy comparison was between every-two GCPs (e.g., p1 and p2, p1 and p3, p1
    and p4, etc.), resulting in ten pairs. 2.5. Processing time comparison The processing
    time needed for the entire workflow in Fig. 3 for both fields was recorded and
    compared with the image stitching time needed from two commercial software packages,
    Agisoft Metashape (ver. 1.8.0) and Pix4D Mapper. A desktop configured as an Intel
    Core i9-9900 K 3.60 GHz, an NVIDIA GeForce RTX 2060 GPU with 6 GB memory, an NVIDIA
    GeForce RTX 2060 Super GPU with 8 GB memory, 32 GB RAM and 3 TB solid-state drive
    (SSD) was used to process the images using the new pipeline in this study and
    for image stitching by the two commercial software packages to make a comparison
    of their processing time. The commercial software packages used GPU resources
    of the desktop during processing while the pipelines did not use the desktop’s
    GPU resources. 3. Results 3.1. Position accuracy evaluation Fig. 9 shows the position
    errors of GCPs in both fields measured by the developed pipeline using single
    images, calculated as the distance difference between the ground RTK GPS coordinates
    and coordinates calculated by the pipeline (Ground vs Pipeline). For comparison,
    Fig. 9 (box plots in red color) also shows distance difference for the raw UAV
    images (Feng et al., 2020a, Ground vs Phantom). It can be seen that the distance
    differences (errors) of the developed pipeline were 0.32 ± 0.21 m and 0.57 ± 0.28
    m (mean ± standard deviation) for cotton and corn fields, which were significantly
    lower than those between ground RTK and the Phantom measurement system (1.98 ±
    1.53 m and 2.13 ± 1.89 m respectively). The position error of the previous study
    (Feng et al., 2020a) was 1.72 ± 1.53 m as they only involved 24 pairs of GCPs,
    i.e., every-two successive GCPs in the same row (e.g., p1 and p5, p5 and p9, p9
    and p13, etc.), compared to 78 pairs of every-two GCPs in this study. Download
    : Download high-res image (93KB) Download : Download full-size image Fig. 9. Position
    error (distance difference) between ground RTK (ground), pipeline measurement
    (pipeline), and DJI Phantom 4 system (Phantom) for both cotton and corn fields.
    Different letters in each boxplot of the two fields show significant differences
    in the means at p < 0.05 for the Tukey HSD test. 3.2. Single image processing
    pipeline assessment (problems and solutions) A total of 2,200 and 517 images were
    collected for the cotton and corn fields, respectively. Some of the images were
    not assigned to the correct crop row numbers due to a low degree of overlap between
    two successive images. This was usually caused by an inconsistent actual AGL flight
    height of the UAV, which may have been due to errors in the UAV elevation sensor,
    field slope, signal noise, or low battery level. Moreover, when flying a UAV over
    a relatively larger field such as the cotton field in our study (5.1 ha) with
    a low flight height (10 m), multiple batteries were needed. When the battery level
    was low, we observed that the pre-set flight height changed (lower flight height),
    which resulted in a larger scale factor for the two successive images (between
    the last image before changing the battery and first image after changing the
    battery). Hence, two approaches were considered to solve these problems: 1) using
    side instead of forward overlapping images. The side overlapping images could
    be found based on the nearest position coordinates of images in the UAV flight
    path next to the target path; 2) manually identifying and assigning the crop row
    numbers of the image by referring to the surrounding images (the previous and
    side overlapping images). Fig. 11 illustrates some example situations encountered
    in the cotton field where one of the two solutions was used to solve the problem.
    For example, the successive images in Fig. 10a had<5 % overlap and crop row numbers
    were only able to be manually identified and assigned. Fig. 10b shows a successful
    example of aligning rows by matching features from side overlapping images. On
    the other hand, Fig. 10c illustrates images before and after changing the UAV
    battery, resulting in large scale factor differences and requiring manual row
    number assignment. In our study, < 0.4 % of images taken needed manual assignment
    of row numbers (7/2,200 for cotton and 2/517 for corn fields). This problem can
    be reduced in future studies by using a higher resolution camera, thus enabling
    a higher and more stable flight height for sufficient image overlaps. Download
    : Download high-res image (478KB) Download : Download full-size image Fig. 10.
    Example illustrations of different problems faced in the cotton field requiring
    additional solutions to align the row numbers. a) successive images with < 5 %
    overlap, where row numbers were assigned manually; b) row number successfully
    assigned using side images; c) images before and after changing battery, where
    row numbers were assigned manually. Download : Download high-res image (571KB)
    Download : Download full-size image Fig. 11. Cotton field emergence maps of a)
    stand count and b) canopy size with full dimension of 152 crop rows × 315 m length
    for each crop row and their down-sampled maps with dimension of 38 × 63 in c and
    d, respectively, where each data point equates to a 4 m × 5 m area. A crop yield
    map with the same 4 m × 5 m cell size is shown in e. 3.3. Crop emergence maps
    To demonstrate the usage of the developed pipeline in creating emergence maps,
    a stand count map (seedlings m−1) and a canopy size map (cm2 seedling−1) were
    generated for the cotton field by calculating the number of plants and their average
    canopy size within each meter of each row (Fig. 12a and b). These maps had a resolution
    of 152 × 315 grids (i.e., 152 crop rows by 315 m in NS direction) and were down-sampled
    to a 38 × 63 grid (Fig. 12c and d) by averaging the stand count and canopy size
    of every 5 m in each four adjacent rows (equal to a 4 m × 5 m area) for matching
    with the four-row harvested yield data (Fig. 11e). The figures confirmed the positive
    correlation between yield and stand count/ canopy size (r = 0.3 for stand count
    and r = 0.35 for the canopy size, both with p-value < 0.001) by displaying the
    similar patterns of field variations in the figures. Higher stand count and canopy
    size corresponded to higher yield. For instance, the northeast portion (red circle
    in Fig. 11) of the field had lower stand counts, canopy sizes, and yield while
    the opposite was shown in the southwest part (black circle in Fig. 11) of the
    field. Download : Download high-res image (673KB) Download : Download full-size
    image Fig. 12. Schematic diagram showing the treatment and non-treatment crop
    rows (a) and their emergence maps of stand count (plant m−1, b), mean days to
    imaging after emergence (DAEmean, days, c), and standard deviation of plant spacing
    (PSstd, cm m−1, d) in corn field. For the corn field, emergence maps of three
    parameters: stand count, DAEmean, and PSstd were generated using the developed
    pipeline as shown in Fig. 12b to 12d. These maps had a resolution of 72 × 160
    grids (i.e., 72 crop rows by 160 m in NS direction). Fig. 12a shows the schematic
    diagram of the crop rows, where there were 64 rows with planting depth treatments
    and the remaining eight rows without planting depth treatments. There was no obvious
    pattern in the stand count and PSstd maps related to planting depth, but DAEmean
    showed trends of higher DAEmean with decreasing depths. Collectively, these results
    suggest that the developed pipeline was able to provide position information for
    each single UAV image and further process those images to obtain the emergence
    maps, which would be beneficial in PA applications, especially in understanding
    the effect of spatial variability of the field on crop emergence and production.
    Furthermore, this method could reduce the time needed for putting GCP in the field
    and for image post-processing (image stitching and feature extraction). 3.4. Processing
    time comparison The workflow and parameters set in Agisoft Metashape and Pix4D
    Mapper to stitch the UAV images collected on both fields are detailed in Table
    1, Table 2. The settings for these parameters were to ensure the software used
    the full-size images (not down-sampled images) since the developed pipeline in
    this study used the original full-size images during processing. The common workflow
    to stitch the image to obtain the orthomosaic in Agisoft Metashape includes ‘align
    photos’, ‘build dense point cloud’, ‘build mesh’, and ‘build orthomosaic’. However,
    with the large number of images collected in the cotton field (2,200 images),
    an error occurred during the ‘build mesh’ step stating, ‘Not enough memory’. Therefore,
    another step, ‘build DEM’ was performed to act as the surface for the ‘build orthomosaic’
    step. For Pix4D Mapper, the stitching process failed and did not produce the final
    orthomosaic for either the cotton or corn field, which might be due to the low
    image overlaps. Image overlap for this software is recommended at least 75 % and
    60 % for forward and side overlaps, respectively (https://pix4d.com). Although
    the UAV flights (height, speed, and flight paths) were set to have 60–70 % image
    overlaps for both fields, the actual overlap changed due to inconsistent AGL flight
    height caused by several factors mentioned previously in section 3.2. Other studies
    also indicated that the image reconstruction process using stitching software
    was not fully completed when a side overlap was smaller than 55 % (Seifer et al.,
    2019). Even with the successful process, the resulting orthomosaic would have
    artifacts such as holes, dislocation, and distortion (Cui et al., 2021). Table
    1. Stitching workflow and parameter set in Agisoft Metashape Professional to stitch
    the UAV images collected on cotton and corn fields. Stitching Workflow Parameter
    Cotton Field Corn Field Align Photos Accuracy: Highest; Generic preselection:
    Yes; Reference preselection: Source Build Dense Point Cloud Quality: Ultra high;
    Depth filtering: mild Build Mesh – Source data: Dense cloud; Surface type: Height
    field; Depth maps quality: Ultra high Build DEM Source data: Dense cloud; Quality:
    Ultra high; Depth filtering: mild – Build Orthomosaic Surface: DEM; Blending mode:
    Mosaic Surface: Mesh; Blending mode: Mosaic Table 2. Stitching workflow and parameter
    set in Pix4D Mapper to stitch the UAV images collected on cotton and corn fields.
    Stitching Workflow Parameter (for both cotton and corn) Initial Processing Keypoints
    Image Scale: Full; Matching Image Pairs: Aerial Grid or Corridor Point Cloud and
    Mesh Point Cloud Densification: Image Scale = 1/1, Point Density = High, Minimum
    Number of Matches = 3; DSM, Orthomosaic and Index Resolution: Automatic The total
    image processing time using the algorithms developed in this study was 10.4 and
    5.7 s/image for the cotton and corn fields (as shown in Table 3). The difference
    in the image processing time between the two fields was mostly due to the time
    used in detecting and matching the image features, which were different in the
    images with different crops, soil conditions, residue backgrounds, and lighting
    conditions. These processing times corresponded to 6.4 h for the 5.1 ha cotton
    field and 0.82 h for the 0.8 ha corn field. Meanwhile, the processing times of
    the pipeline were lower than the image stitching time needed by the commercial
    software, which were 88.7 and 97.4 s/image for cotton and corn fields, respectively.
    Table 3. Processing time comparison between the new method of this study and commercial
    software in stitching the UAV images. Field Processing Time (s/image) Pipeline:
    Fig. 3 dashed line Pipeline: Fig. 3 dotted line Pipeline: Total Time Agisoft Metashape
    Cotton 1.8 s 8.6 s 10.4 s 88.7 s Corn 2.1 s 3.6 s 5.7 s 97.4 s 4. Discussion 4.1.
    Pipeline performance The study developed a near real-time UAV image processing
    pipeline that had higher performance than the method used in the previous study
    and achieved a better position accuracy. Without the need for an RTK unit on the
    UAV, the pipeline was able to produce more accurate field maps with an average
    position accuracy of 0.32 and 0.57 m for the cotton and corn fields, respectively.
    The position accuracy of the cotton field is well within half of the common crop
    row spacing, which is 0.38 to 0.51 m (Clawson et al., 2006). The position accuracy
    of the corn field was not within half of the common row spacing (0.19 to 0.49
    m; Elmore and Abendroth. 2007), and lower than that of the cotton field (higher
    distance difference), which might be caused by human errors. As illustrated in
    Fig. 13, a yellow ground stake, which could be clearly seen from the image (Fig.
    13a) was used to mark the GCPs in the cotton field. However, in the corn field,
    two flags were used to mark each monitoring site, with one of the flags used as
    the GCP. However, the point where the flag was inserted into the ground surface
    could not be seen clearly in the image (Fig. 13b). The location for the insertion
    point of the flag was estimated based on the location of the first color stake
    in each plant row (Fig. 13b). Download : Download high-res image (227KB) Download
    : Download full-size image Fig. 13. Images showing a) ground stake used to mark
    the ground control point (GCP) for cotton field and b) flag used to mark the monitoring
    site and used as the GCP for corn field. The developed pipeline was expected to
    be a low-cost near real-time tool for row crop emergence estimation as it reduced
    the time needed for image stitching compared to the commercial software. Image
    stitching comprises several steps: 1) feature detection and matching between images;
    2) non-linear geometric transformation matrix estimation including translation,
    rotation, and scale; 3) warping transformation for mosaic processing (Brown and
    Lowe, 2007). When data are collected for row crops with fixed row spacing and
    under steady UAV flight conditions, the developed method of only calculating translations
    in the geometric transformation matrices required less processing time than the
    stitching process. The dynamic calibration of GSD for individual images using
    row spacing would make it possible for field mapping without the image mosaic
    process. 4.2. Cotton field emergence mapping The mapping of the cotton field in
    this study showed a low correlation value between emergence and yield, which was
    likely caused by environmental factors, irrigation, and other in-season management
    (Feng et al., 2022). Nonetheless, the finding of positive correlation was still
    consistent with previous studies indicating that higher plant density would have
    higher yields as there were more bolls per unit area (Yang et al., 2014, Zhi et
    al., 2016). Meanwhile, canopy size is one of the critical components of canopy
    structure relating to plant photosynthesis, fruiting, and biomass accumulation
    (Jiang et al., 2018, Jung et al., 2018), and is commonly used as a feature in
    cotton yield estimation (Feng et al., 2020c; Jung et al., 2018). More investigations
    are needed to study the effects of environments and crop development on the final
    yield. 4.3. Pipeline limitations Our pipeline has a few limitations. Firstly,
    the method was developed to be used for row crops with fixed row spacing (such
    as cotton and corn shown in this study) as it highly depends on the crop row detection
    for image rotation and GSD calculation for each image. Therefore, there would
    be large errors if crop rows were not detected. Secondly, the method is limited
    to row crops at early emergence, or the crop growth stages before the crop leaves
    of neighboring rows start to overlap and close the canopy. Once leaf overlaps
    occur, crop rows are hardly detected and the initial steps of rotating images
    and calculating GSD are not feasible. In addition, to ensure the best performance
    of the pipeline (without needing manual identification and assignment of crop
    row numbers as detailed in section 3.2), a stable flight height on a flat field
    is desired. Inconsistent flight heights (especially in the situation of UAVs flown
    at low altitude in fields with substantial slopes) and height differences of two
    different flight missions will cause large scale factor differences in images,
    which is not included in our transform matrix calculation. For studies conducted
    on a windy day with limited processing performance using the methods developed
    in this study, automatic detection and correction of scale differences (row spacing
    could still be used as a clue) will be one of the solutions for this issue, which
    we would include in our future studies. 4.4. Potential application and future
    study The pipeline can be applied in a UAV data processing framework with a graphical
    user interface similar to the framework in Feng et al. (2020a) to process the
    data after a UAV flight, which allows a more user-friendly data processing platform
    for different users such as agronomists, breeders, and farmers to obtain crop
    emergence or early growth maps. Furthermore, the pipeline can also be used as
    a processing unit integrated with the onboard UAV sensor to deliver real-time
    data processing and thus reduce the time data transmission and pre-processing,
    before obtaining the final crop emergence maps. Future studies should include
    modification of the pipeline to other row crops such as soybean and vegetable
    for different emergence parameters estimations on the field scale. These estimations
    can be used by researchers to explore the relationships between crop emergence
    and environmental factors such as soil and weather conditions as well as different
    planting treatments. Meanwhile, this can act as a low-cost near real-time tool
    for small-scale farmers to estimate the early emergence in their fields. For large-scale
    farmers, the method can be used to scout areas within fields with emergence issues
    or biotic stresses impacting stand for further management decisions, or field
    areas that cannot be accessed easily by ground vehicles. 5. Conclusion This paper
    reports the development of a near real-time image processing pipeline to process
    single UAV images with an improved position accuracy algorithm to generate emergence
    maps of row crops including cotton and corn. The emergence parameters included
    stand count and canopy size for cotton as well as stand count, mean days to imaging
    after emergence, and plant spacing standard deviation for corn. The developed
    pipeline procedures included feature detection and matching, false matches removal,
    geometric transformation matrix calculation, crop row alignment, assigning position
    of each single image, and mapping. The results showed that the position accuracies
    for the developed pipeline compared to RTK-GNSS ground-truth measurements were
    0.32 ± 0.21 m and 0.57 ± 0.28 m for the cotton and corn fields, respectively.
    Emergence maps of cotton and corn fields were generated to demonstrate the application
    of this new method. The processing time needed to run the algorithm was 8.6 and
    3.6 s/image for cotton and corn fields, respectively. After adding the time needed
    for image pre-processing, the time needed would be 10.4 and 5.7 s image-1, corresponding
    to 1.3 and 1.0 hr ha−1 for the cotton and corn field, respectively. The developed
    pipeline introduced a new approach in using UAV images to quantify crop early
    emergence in a shorter time and lower cost. The current study demonstrated the
    usage of the pipeline for cotton and corn. CRediT authorship contribution statement
    Aijing Feng: Methodology, Data curation, Formal analysis, Writing – original draft.
    Chin Nee Vong: Methodology, Data curation, Formal analysis, Writing – original
    draft. Jing Zhou: Data curation, Formal analysis, Writing – original draft. Lance
    S. Conway: Investigation, Data curation. Jianfeng Zhou: Supervision, Conceptualization,
    Data curation, Writing – review & editing. Earl D. Vories: Resources, Data curation,
    Writing – review & editing. Kenneth A. Sudduth: Conceptualization, Resources,
    Writing – review & editing. Newell R. Kitchen: Conceptualization, Investigation,
    Data curation, Resources, Writing – review & editing. Declaration of Competing
    Interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Acknowledgements The authors would like to give thanks to colleagues
    Huawei Mou and Shengwei Wang from the Precision and Automated Agriculture Lab
    at the University of Missouri for their help in UAV data collection. We also want
    to thank the staff from the USDA-ARS Cropping Systems & Water Quality Research
    Unit for helping to manage the fields. Code availability The code related to this
    study are available at: https://github.com/AJFeng/Emergence_row_alignment. Data
    availability Data will be made available on request. References Bay et al., 2008
    H. Bay, A. Ess, T. Tuytelaars, L. Van Gool Speeded-up robust features (SURF) Computer
    Vision and Image Understanding, 110 (3) (2008), pp. 346-359, 10.1016/j.cviu.2007.09.014
    View PDFView articleView in ScopusGoogle Scholar Brown and Lowe, 2007 M. Brown,
    D.G. Lowe Automatic panoramic image stitching using invariant features International
    Journal of Computer Vision, 74 (1) (2007), pp. 59-73, 10.1007/s11263-006-0002-3
    View in ScopusGoogle Scholar Clawson et al., 2006 E.L. Clawson, J.T. Cothren,
    D.C. Blouin Nitrogen fertilization and yield of cotton in ultra-narrow and conventional
    row spacings Agronomy Journal, 98 (1) (2006), pp. 72-79, 10.2134/agronj2005.0033
    View in ScopusGoogle Scholar Cui et al., 2020 J. Cui, M. Liu, Z. Zhang, S. Yang,
    J. Ning Robust UAV thermal infrared remote sensing images stitching via overlap-prior-based
    global similarity prior model IEEE Journal of Selected Topics in Applied Earth
    Observations and Remote Sensing, 14 (2020), pp. 270-282, 10.1109/JSTARS.2020.3032011
    Google Scholar Delavarpour et al., 2021 N. Delavarpour, C. Koparan, J. Nowatzki,
    S. Bajwa, X. Sun A technical study on UAV characteristics for precision agriculture
    applications and associated practical challenges Remote Sensing, 13 (6) (2021),
    p. 1204, 10.3390/rs13061204 View in ScopusGoogle Scholar Elmore and Abendroth,
    2007 R.W. Elmore, L.J. Abendroth Row spacing alternatives in corn Paper Presented
    at the Proceedings of the Indiana CCA Conference (2007) Google Scholar Feng et
    al., 2019 Feng, A., Sudduth, K. A., Vories, E. D., & Zhou, J. (2019). Evaluation
    of cotton stand count using UAV-based hyperspectral imagery. Paper presented at
    the 2019 ASABE Annual International Meeting, Boston, MA. Google Scholar Feng et
    al., 2020a A. Feng, J. Zhou, E. Vories, K.A. Sudduth Evaluation of cotton emergence
    using UAV-based imagery and deep learning Computers and Electronics in Agriculture,
    177 (2020), Article 105711, 10.1016/j.compag.2020.105711 View PDFView articleView
    in ScopusGoogle Scholar Feng et al., 2020b A. Feng, J. Zhou, E. Vories, K.A. Sudduth
    Evaluation of cotton emergence using UAV-based narrow-band spectral imagery with
    customized image alignment and stitching algorithms Remote Sensing, 12 (11) (2020),
    p. 1764, 10.3390/rs12111764 View in ScopusGoogle Scholar Feng et al., 2020c A.
    Feng, J. Zhou, E.D. Vories, K.A. Sudduth, M. Zhang Yield estimation in cotton
    using UAV-based multi-sensor imagery Biosystems Engineering, 193 (2020), pp. 101-114,
    10.1016/j.biosystemseng.2020.02.014 View PDFView articleView in ScopusGoogle Scholar
    Feng et al., 2022 A. Feng, J. Zhou, E.D. Vories, et al. Quantifying the effects
    of soil texture and weather on cotton development and yield using UAV imagery
    Precision Agric (2022), 10.1007/s11119-022-09883-6 Google Scholar Gross and Heumann,
    2016 J.W. Gross, B.W. Heumann A statistical examination of image stitching software
    packages for use with unmanned aerial systems Photogrammetric Engineering & Remote
    Sensing, 82 (6) (2016), pp. 419-425, 10.1016/S0099-1112(16)82035-2 View PDFView
    articleView in ScopusGoogle Scholar Hugenholtz et al., 2016 C. Hugenholtz, O.
    Brown, J. Walker, T. Barchyn, P. Nesbit, M. Kucharczyk, S. Myshak Spatial accuracy
    of UAV-derived orthoimagery and topography: Comparing photogrammetric models processed
    with direct geo-referencing and ground control points Geomatica, 70 (1) (2016),
    pp. 21-30, 10.5623/CIG2016-102 View in ScopusGoogle Scholar Iglhaut et al., 2019
    J. Iglhaut, C. Cabo, S. Puliti, L. Piermattei, J. O’Connor, J. Rosette Structure
    from motion photogrammetry in forestry: A review Current Forestry Reports, 5 (3)
    (2019), pp. 155-168, 10.1007/s40725-019-00094-3 View in ScopusGoogle Scholar Jiang
    et al., 2018 Y. Jiang, C. Li, A.H. Paterson, S. Sun, R. Xu, J. Robertson Quantitative
    analysis of cotton canopy size in field conditions using a consumer-grade RGB-D
    camera Frontiers in Plant Science, 8 (2018), p. 2233, 10.3389/fpls.2017.02233
    View in ScopusGoogle Scholar Jung et al., 2018 J. Jung, M. Maeda, A. Chang, J.
    Landivar, J. Yeom, J. McGinty Unmanned aerial system assisted framework for the
    selection of high yielding cotton genotypes Computers and Electronics in Agriculture,
    152 (2018), pp. 74-81, 10.1016/j.compag.2018.06.051 View PDFView articleView in
    ScopusGoogle Scholar Lowe, 2004 D.G. Lowe Distinctive image features from scale-invariant
    keypoints International Journal of Computer Vision, 60 (2) (2004), pp. 91-110,
    10.1023/B:VISI.0000029664.99615.94 View in ScopusGoogle Scholar Naik and Nair,
    2019 R.K. Naik, B.B. Nair Improving GPS based distance measurement accuracy using
    machine learning: an empirical study Paper Presented at the 2019 International
    Conference on Communication and Electronics Systems (ICCES) (2019), 10.1109/ICCES45898.2019.9002218
    Google Scholar Obanawa et al., 2019 H. Obanawa, S. Sakanoue, T. Yagi Evaluating
    the applicability of RTK-UAV for field management Paper Presented at the IGARSS
    2019–2019 IEEE International Geoscience and Remote Sensing Symposium (2019), 10.1109/IGARSS.2019.8897895
    Google Scholar Rabah et al., 2018 M. Rabah, M. Basiouny, E. Ghanem, A. Elhadary
    Using RTK and VRS in direct geo-referencing of the UAV imagery NRIAG Journal of
    Astronomy and Geophysics, 7 (2) (2018), pp. 220-226, 10.1016/j.nrjag.2018.05.003
    View PDFView articleGoogle Scholar Robinson and Conley, 2007 A.P. Robinson, S.P.
    Conley Soybean production systems: plant population and seeding rates for soybean
    Purdue Extension, Purdue University, Indiana, USA (2007) Google Scholar Sansone
    et al., 2002 C. Sansone, T. Isakeit, R. Lemon, B. Warrick Texas cotton production:
    Emphasizing integrated pest management Texas Cooperative Extension Service, Texas
    A & M University System, Texas, USA (2002) Google Scholar Sanz-Ablanedo et al.,
    2018 E. Sanz-Ablanedo, J.H. Chandler, J.R. Rodríguez-Pérez, C. Ordóñez Accuracy
    of unmanned aerial vehicle (UAV) and SfM photogrammetry survey as a function of
    the number and location of ground control points used Remote Sensing, 10 (10)
    (2018), p. 1606, 10.3390/rs10101606 View in ScopusGoogle Scholar Štroner et al.,
    2021 M. Štroner, R. Urban, J. Seidl, T. Reindl, J. Brouček Photogrammetry using
    UAV-mounted GNSS RTK: georeferencing strategies without GCPs Remote Sensing, 13
    (7) (2021), p. 1336, 10.3390/rs13071336 View in ScopusGoogle Scholar Supak, 1990
    Supak, J. (1990). Making replant decisions. Paper presented at the 1990 Beltwide
    cotton production conference. Google Scholar Szeliski, 2007 R. Szeliski Image
    alignment and stitching: A tutorial Foundations and Trends® in Computer Graphics
    and Vision, 2 (1) (2007), pp. 1-104, 10.1561/0600000009 Google Scholar Tsouros
    et al., 2019 D.C. Tsouros, S. Bibi, P.G. Sarigiannidis A review on UAV-based applications
    for precision agriculture Information, 10 (11) (2019), p. 349, 10.3390/info10110349
    View in ScopusGoogle Scholar Vega et al., 2015 F.A. Vega, F.C. Ramirez, M.P. Saiz,
    F.O. Rosua Multi-temporal imaging using an unmanned aerial vehicle for monitoring
    a sunflower crop Biosystems Engineering, 132 (2015), pp. 19-27, 10.1016/j.biosystemseng.2015.01.008
    View PDFView articleView in ScopusGoogle Scholar Vong et al., 2021 C.N. Vong,
    L.S. Conway, J. Zhou, N.R. Kitchen, K.A. Sudduth Early corn stand count of different
    cropping systems using UAV-imagery and deep learning Computers and Electronics
    in Agriculture, 186 (2021), Article 106214, 10.1016/j.compag.2021.106214 View
    PDFView articleView in ScopusGoogle Scholar Vong et al., 2022 C.N. Vong, L.S.
    Conway, J. Zhou, N.R. Kitchen, K.A. Sudduth Corn emergence uniformity estimation
    and mapping using UAV imagery and deep learning Computers and Electronics in Agriculture,
    198 (2022), Article 107008, 10.1016/j.compag.2022.107008 View PDFView articleView
    in ScopusGoogle Scholar Xiang and Tian, 2011 H. Xiang, L. Tian Method for automatic
    georeferencing aerial remote sensing (RS) images from an unmanned aerial vehicle
    (UAV) platform Biosystems Engineering, 108 (2) (2011), pp. 104-113, 10.1016/j.biosystemseng.2010.11.003
    View PDFView articleView in ScopusGoogle Scholar Xie and Yang, 2020 C. Xie, C.
    Yang A review on plant high-throughput phenotyping traits using UAV-based sensors
    Computers and Electronics in Agriculture, 178 (2020), Article 105731, 10.1016/j.compag.2020.105731
    View PDFView articleView in ScopusGoogle Scholar Yang et al., 2014 G. Yang, X.
    Luo, Y. Nie, X. Zhang Effects of plant density on yield and canopy micro environment
    in hybrid cotton Journal of Integrative Agriculture, 13 (10) (2014), pp. 2154-2163,
    10.1016/S2095-3119(13)60727-3 View PDFView articleView in ScopusGoogle Scholar
    Yang et al., 2017 G. Yang, J. Liu, C. Zhao, Z. Li, Y. Huang, H. Yu, X. Zhang Unmanned
    aerial vehicle remote sensing for field-based crop phenotyping: current status
    and perspectives Frontiers in Plant Science, 8 (2017), p. 1111, 10.3389/fpls.2017.01111
    View in ScopusGoogle Scholar Zhi et al., 2016 X.-Y. Zhi, Y.-C. Han, Y.-B. Li,
    G.-P. Wang, W.-L. Du, X.-X. Li, F. Lu Effects of plant density on cotton yield
    components and quality Journal of Integrative Agriculture, 15 (7) (2016), pp.
    1469-1479, 10.1016/S2095-3119(15)61174-1 View PDFView articleView in ScopusGoogle
    Scholar Cited by (1) Optimization Methods for UAVs to Search Light Source in VLC
    2023, Faguang Xuebao/Chinese Journal of Luminescence 1 Aijing Feng and Chin Nee
    Vong are joint first authors. View Abstract © 2023 Elsevier B.V. All rights reserved.
    Recommended articles Aerial multispectral imaging for crop hail damage assessment
    in potato Computers and Electronics in Agriculture, Volume 127, 2016, pp. 406-412
    Jianfeng Zhou, …, Sindhuja Sankaran View PDF Calculation method of wilting index
    based on fractal dimension of multispectral images for the soybean canopy Computers
    and Electronics in Agriculture, Volume 206, 2023, Article 107656 Panpan Shen,
    …, Tao Zhang View PDF Estimating characteristic coefficient of vertical leaf nitrogen
    profile within wheat canopy from spectral reflectance Computers and Electronics
    in Agriculture, Volume 206, 2023, Article 107652 Heli Li, …, Chunjiang Zhao View
    PDF Show 3 more articles Article Metrics Citations Citation Indexes: 1 Captures
    Readers: 13 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Developing an image processing pipeline to improve the position accuracy
    of single UAV images
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Prajapati J.B.
  - Kumar A.
  - Pramanik J.
  - Prajapati B.G.
  - Saini K.
  citation_count: '1'
  description: Advancements of the last decade in edge computing, edge IoT, and edge
    artificial intelligence now allow for autonomous, efficient, and intelligent systems
    to be proposed for various industrial applications. Intelligence agricultural
    solutions allow farmers to achieve more with less while improving quality and
    providing a rapid go-to-market approachfor produce. Using AI is an effective technique
    to detect any crop health concerns or nutrient inadequacies in the field. Plant
    diseases affect the food system, economy, and environment. This chapter covers
    intelligent agriculture & challenges in front of technology. It focuses AI application
    using machine learning, artificial neural network (ANN), and deep learning. The
    various AI applications in agriculture for land monitoring, crop and varietal
    selection, smart irrigation or automation of irrigation, monitoring of crop health,
    crop disease detection, predictive analytics, weed control, precision agriculture,
    harvesting, yield estimation and phenotyping, supply chain management, and food
    quality.
  doi: 10.4018/978-1-6684-6413-7.ch014
  full_citation: '>'
  full_text: '>

    "Login Register Language: English Welcome to the InfoSci Platform University of
    Nebraska - Lincoln Database Search Research Tools User Resources Reference Hub2
    Edge AI for Real-Time and Intelligent Agriculture Jigna Bhupendra Prajapati, Akash
    Kumar, Jhilam Pramanik, Bhupendra G. Prajapati, Kavita Saini Source Title: Applying
    Drone Technologies and Robotics for Agricultural Sustainability Copyright: © 2023
    |Pages: 30 ISBN13: 9781668464137|ISBN10: 1668464136|EISBN13: 9781668464151 DOI:
    10.4018/978-1-6684-6413-7.ch014 Cite Chapter Favorite View Full Text HTML View
    Full Text PDF Abstract Advancements of the last decade in edge computing, edge
    IoT, and edge artificial intelligence now allow for autonomous, efficient, and
    intelligent systems to be proposed for various industrial applications. Intelligence
    agricultural solutions allow farmers to achieve more with less while improving
    quality and providing a rapid go-to-market approach for produce. Using AI is an
    effective technique to detect any crop health concerns or nutrient inadequacies
    in the field. Plant diseases affect the food system, economy, and environment.
    This chapter covers intelligent agriculture & challenges in front of technology.
    It focuses AI application using machine learning, artificial neural network (ANN),
    and deep learning. The various AI applications in agriculture for land monitoring,
    crop and varietal selection, smart irrigation or automation of irrigation, monitoring
    of crop health, crop disease detection, predictive analytics, weed control, precision
    agriculture, harvesting, yield estimation and phenotyping, supply chain management,
    and food quality. Request access from your librarian to read this chapter''s full
    text. Full Text Preview Introduction Agriculture Agriculture is one of the oldest
    economic sectors for thousands of years ago (Mazoyer & Roudart, 2006). The farming
    began manually with the help of a few animals & with a few manual devices. Agriculture
    is an important sector, of the overall economy anywhere (Alston & Pardey, 2014).
    The various factor dependable on each other for overall growth. Agriculture has
    a wide range of subsections such as farming, food industries, animal centers,
    food trails & errors, services sector, agricultural research, and many more. Agriculture
    can cover different types of farming as Subsistence, Intensive Subsistence, Mediterranean,
    Arable, Shifting Cultivation, etc (Komarek, De Pinto, & Smith, 2020). Today, there
    is an increment in the human population that needs more agricultural production
    with concern to a varied range of food products. There is a large volume of farmers
    associated with middle or low income of agriculture which is accounting for national
    income. To maintain the routine of the Environment cycle agriculture is helpful
    in many nodes as reduces erosion & soil moisture, Soil carbon sequestration (Palm
    et al., 2014). Another side some pesticides used in farming create environmental
    pollution to a certain extent (Tudi et al., 2021). There can be various impacts
    on CO2 by renewable energy consumption (Waheed et al., 2018). Agriculture affects
    directly and indirectly many other industries for prospects. Agriculture methods
    have been changing dynamically. The conventional way of agriculture production
    involved the preparation of soil, sowing of seeds, Adding Fertilizers, Irrigation,
    weed protection, Harvesting, Storage, and distribution as described in Figure
    1. Each phase is modernized as time passes. The new technology assists profoundly
    in enhancing the performance of Agribusiness. Figure 1. Elementary Agriculture
    Intelligent Agriculture Agriculture with AI-aided machinery is becoming popular
    as intelligent Agriculture using IOT support. Intelligent agriculture utilizes
    various types of robots as intelligent machines for different task execution.
    Automation surely benefited in almost all fields but in agriculture, it is a big
    revolution as it is the prime source of income for a large volume of people. The
    smart devices enabled AI support pushes agriculture towards intelligent agriculture
    with human intervention. The traditional agricultural tasks such as harvesting,
    weed identification, and pest examination are also done with autonomous robots
    which are AI aided. The usage of intelligent machines in agriculture will enhance
    the speed of work compared to human laborers (Ahmad & Nabi, 2021). There is a
    higher number of technical integrations with agriculture by various smart devices
    & mechanisms for sensing, identification, transmission, monitoring, analysis,
    and prediction. Such IoT devices will save time & cost & improves crop yields
    (Chen & Yang, 2019). The remote sensors, GIS, GPS, drones, and many others are
    actively playing an important role in Intelligent Agriculture. Agriculture Challenges
    In Front Of Technology Many factors affect traditional farming as rainfall, temperature,
    and humidity. An imbalance in climatic changes may cause deforestation and pollution
    which create a hurdle for farmers to take decisions to prepare the soil, sow seeds,
    and harvest (Harris et al., 2001). The nutrient deficit can result in poor crop
    quality as every crop requires a certain type of soil nourishment (Nair, 2019).
    Weed protection is also crucial to increasing the production of nutrients (Ibáñez
    & Blázquez, 2019). Agriculture is not an isolated sector; it is an integral part
    of a sound ecosystem. There are many challenges in agriculture as horticulture,
    animal centers, dairy, and other allied sectors (McCalla & Economics, 2001). Technology
    is widely integrated into multiple stages of the agriculture process. The internal
    & external resources can be utilized with a better prospect using current trends
    of technologies. The broadly technological challenges can be classified as Continue
    Reading References Follow Reference Abawi G. S. Widmer T. L. (2000). Impact of
    soil health management practices on soilborne pathogens, nematodes and root diseases
    of vegetable crops.Applied Soil Ecology, 15(1), 37–47. 10.1016/S0929-1393(00)00070-6
    Follow Reference Accorsi R. Cholette S. Manzini R. Tufano A. (2018). A hierarchical
    data architecture for sustainable food supply chain management and planning.Journal
    of Cleaner Production, 203, 1039–1054. doi:10.1016/j.jclepro.2018.08.275 Follow
    Reference Agatonovic-Kustrin S. Beresford R. (2000). Basic concepts of artificial
    neural network (ANN) modeling and its application in pharmaceutical research.Journal
    of Pharmaceutical and Biomedical Analysis, 22(5), 717–727. 10.1016/S0731-7085(99)00272-110815714
    Agriinfo. (2018). Soil –Plant – Water – Relationships. Agriinfo.https://agriinfo.in/soil-plant-water-relationships-2206/
    Follow Reference Ahmad I. Shahabuddin S. Sauter T. Harjula E. Kumar T. Meisel
    M. Juntti M. Ylianttila M. (2021). The Challenges of Artificial Intelligence in
    Wireless Networks for the Internet of Things: Exploring Opportunities for Growth.IEEE
    Industrial Electronics Magazine, 15(1), 16–29. 10.1109/MIE.2020.2979272 Follow
    Reference Ahmad L. Nabi F. (2021). Agriculture 5.0: Artificial Intelligence, IoT
    and Machine Learning. CRC Press. Ahn, H.S., Dayoub, F., Popovic, M., MacDonald,
    B.A., Siegwart, R.Y., & Sa, I. (2018). An Overview of Perception Methods for Horticultural
    Robots: From Pollination to Harvest. ArXiv, abs/1807.03124. Follow Reference Aiello
    G. Catania P. Vallone M. Venticinque M. (2022). Worker safety in agriculture 4.0:
    A new approach for mapping operator’s vibration risk through Machine Learning
    activity recognition.Computers and Electronics in Agriculture, 193, 106637. 10.1016/j.compag.2021.106637
    Follow Reference Aitkenhead, M. J., Mcdonald, A. J. S., Dawson, J. J., Couper,
    G., Smart, R. P., Billett, M., Hope, D., & Palmer, S. (2003). A novel method for
    training neural networks for time-series prediction in environmental systems.
    Elsevier, 162, 87–95. 10.1016/S0304-3800(02)00401-5 Follow Reference Alston J.
    M. Pardey P. G. (2014). Agriculture in the Global Economy %J. The Journal of Economic
    Perspectives, 28(1), 121–146. 10.1257/jep.28.1.121 Follow Reference Amatya S.
    Karkee M. Gongal A. Zhang Q. Whiting M. D. (2016). Detection of cherry tree branches
    with full foliage in planar architecture for automated sweet-cherry harvesting.Biosystems
    Engineering, 146, 3–15. 10.1016/j.biosystemseng.2015.10.003 Follow Reference Arif
    C. Indra Setiawan B. Mizoguchi M. Doi R. (2012a). Estimation of soil moisture
    in paddy field using Artificial Neural Networks.International Journal of Advanced
    Research in Artificial Intelligence, 1(1). 10.14569/IJARAI.2012.010104 Follow
    Reference Arif C. Mizoguchi M. Mizoguchi M. Doi R. (2012b). Estimation of soil
    moisture in paddy field using Artificial Neural Networks.International Journal
    of Advanced Research in Artificial Intelligence, 1(1). 10.14569/IJARAI.2012.010104
    Follow Reference Åstrand B. Baerveldt A. J. (2002). An agricultural mobile robot
    with vision-based perception for mechanical weed control.Autonomous Robots, 13(1),
    21–35. 10.1023/A:1015674004201 Follow Reference Babu, S. (2013). A software model
    for precision agriculture for small and marginal farmers. Global Humanitarian
    Technology Conference: South Asia Satellite, 352–355. IEEE. 10.1109/GHTC-SAS.2013.6629944
    Follow Reference Bacco M. Barsocchi P. Ferro E. Gotta A. Ruggeri M. (2019). The
    Digitisation of Agriculture: A Survey of Research Activities on Smart Farming.Array,
    3–4, 100009. 10.1016/j.array.2019.100009 Follow Reference Bak T. Jakobsen H. (2004).
    Agricultural robotic platform with four wheel steering for weed detection.Biosystems
    Engineering, 87(2), 125–136. 10.1016/j.biosystemseng.2003.10.009 Follow Reference
    Bakker T. van Asselt K. Bontsema J. Müller J. van Straten G. (2006). An autonomous
    weeding robot for organic farming.Springer Tracts in Advanced Robotics, 25, 579–590.
    10.1007/978-3-540-33453-8_48 Follow Reference Barlow H. B. (1989). Unsupervised
    Learning.Neural Computation, 1(3), 295–311. 10.1162/neco.1989.1.3.295 Beaman,
    J. A., & Johnson, A. J. (2006). Food distribution channel overview: a guide for
    new manufacturers. OSU. https://ir.library.oregonstate.edu/concern/open_educational_resources/8623hz116
    Follow Reference Bhattacharyya S. S. Maitra D. Deb S. (2021). Study of adoption
    and absorption of emerging technologies for smart supply chain management: A dynamic
    capabilities perspective.[IJAL]. International Journal of Applied Logistics, 11(2),
    14–54. Bhbosale, S., Pujari, V., & Multani, Z. J. A. I. I. R. J. (2020). Advantages
    And Disadvantages Of Artificial Intellegence. 227-230. Follow Reference Bilgili
    M. (2011). The use of artificial neural networks for forecasting the monthly mean
    soil temperatures in Adana, Turkey.Turkish Journal of Agriculture and Forestry,
    35(1), 83–93. https://dergipark.org.tr/en/pub/tbtkagriculture/issue/11593/138197
    Follow Reference Bioucas-Dias, J. M., Plaza, A., Camps-Valls, G., Scheunders,
    P., Nasrabadi, N. M., & Chanussot, J. (2013). Hyperspectral remote sensing data
    analysis and future challenges. Geoscience and Remote Sensing Magazine, 1(2),
    6–36. IEEE . 10.1109/MGRS.2013.2244672 Follow Reference Blasco J. Aleixos N. Roger
    J. M. Rabatel G. Moltó E. (2002). AE—Automation and emerging technologies: Robotic
    weed control using machine vision.Biosystems Engineering, 83(2), 149–157. Follow
    Reference Bonaccorso G. (2017). Machine learning algorithms. Packt Publishing
    Ltd. Follow Reference Bralts V. F. Driscoll M. A. Shayya W. H. Cao L. (1993).
    An expert system for the hydraulic analysis of microirrigation systems.Computers
    and Electronics in Agriculture, 9(4), 275–287. Follow Reference Bu F. Wang X.
    (2019). A smart agriculture IoT system based on deep reinforcement learning.[doi:https://doi.org/10.1016/j.future.2019.04.041].
    Future Generation Computer Systems, 99, 500–507. Follow Reference Bünger L. (2021).
    Robotic waste sorting. Worcester Polytechnic Institute. Follow Reference Busch,
    G. (2012). GIS-based Tools for Regional Assessments and Planning Processes Regarding
    Potential Environmental Effects of Poplar SRC. BioEnergy Research 5(3), 584–605.
    10.1007/S12155-012-9224-0 Follow Reference Cakir, Y., Kirci, M., & Gunes, E. O.
    (2014). Yield prediction of wheat in south-east region of Turkey by using artificial
    neural networks. The 3rd International Conference on Agro-Geoinformatics. Agro-Geoinformatics
    . 10.1109/AGRO-GEOINFORMATICS.2014.6910609 Follow Reference Carbonell J. G. Michalski
    R. S. Mitchell T. M. (1983). 1 - AN OVERVIEW OF MACHINE LEARNING. In MichalskiR.
    S.CarbonellJ. G.MitchellT. M. (Eds.), Machine Learning (pp. 3–23). Morgan Kaufmann.
    Follow Reference Chang D. H. Islam S. (2000). Estimation of soil physical properties
    using remote sensing and artificial neural network.Remote Sensing of Environment,
    74(3), 534–544. Follow Reference Chang, C. & Robotics, K. L. (2018). Smart agricultural
    machine with a computer vision-based weeding and variable-rate irrigation scheme.
    Mdpi.Com.10.3390/robotics7030038 Follow Reference Charoen-Ung, P., & Mittrapiyanuruk,
    P. (2019). Sugarcane Yield Grade Prediction Using Random Forest with Forward Feature
    Selection and Hyper-parameter Tuning. Advances in Intelligent Systems and Computing,
    769, 33–42. 10.1007/978-3-319-93692-5_4 Follow Reference Chattopadhyay P. B. Rangarajan
    R. (2014). Application of ANN in sketching spatial nonlinearity of unconfined
    aquifer in agricultural basin.[doi:https://doi.org/10.1016/j.agwat.2013.11.007].
    Agricultural Water Management, 133, 81–91. Follow Reference Chen J. Chen J. Zhang
    D. Sun Y. Nanehkaran Y. A. (2020). Using deep transfer learning for image-based
    plant disease identification.Computers and Electronics in Agriculture, 173, 105393.
    https://doi.org/10.1016/J.COMPAG.2020.105393 Follow Reference Chen J. Yang A.
    (2019). Intelligent Agriculture and Its Key Technologies Based on Internet of
    Things Architecture.IEEE Access: Practical Innovations, Open Solutions, 7, 77134–77141.
    doi:10.1109/ACCESS.2019.2921391 Follow Reference Cheng X. Zhang Y. Chen Y. Wu
    Y. Yue Y. (2017). Pest identification via deep residual learning in complex background.[doi:https://doi.org/10.1016/j.compag.2017.08.005].
    Computers and Electronics in Agriculture, 141, 351–356. Follow Reference Cui,
    S., Ling, P., Zhu, H., & Keener, H. M. (2018). Plant Pest Detection Using an Artificial
    Nose System: A Review. Sensors 18(2), 378. 10.3390/S18020378 Daheim, C., Poppe,
    K., & Schrijver, R. (2019). Precision agriculture and the future of farming in
    Europe: scientific foresight study. European Parliament. https://data.europa.eu/doi/10.2861/175493
    Follow Reference Daugherty P. R. Wilson H. J. (2018). Human+ machine: Reimagining
    work in the age of AI. Harvard Business Press. Follow Reference Devapriya P. Ferrell
    W. Geismar N. (2017). Integrated production and distribution scheduling with a
    perishable product.European Journal of Operational Research, 259(3), 906–916.
    https://doi.org/10.1016/J.EJOR.2016.09.019 Follow Reference Devaraj, A., Rathan,
    K., Jaahnavi, S., & Indira, K. (2019). Identification of plant disease using image
    processing technique. Proceedings of the 2019 International Conference on Communication
    and Signal Processing, 749–753. IEEE. 10.1109/ICCSP.2019.8698056 Follow Reference
    Dewi T. Risma P. Oktarina Y. (2020). Fruit sorting robot based on color and size
    for an agricultural product packaging system.Bulletin of Electrical Engineering
    and Informatics, 9(4), 1438–1445. Follow Reference dos Santos Ferreira A. Freitas
    D. M. da Silva G. G. Pistori H. Folhes M. T. (2019). Unsupervised deep learning
    and semi-automatic data labeling in weed discrimination.[doi:https://doi.org/10.1016/j.compag.2019.104963].
    Computers and Electronics in Agriculture, 165, 104963. Follow Reference Elshorbagy
    A. Parasuraman K. (2008). On the relevance of using artificial neural networks
    for estimating soil moisture content.Journal of Hydrology (Amsterdam), 362(1-2),
    1–18. Follow Reference Fedorova E. Darbasov V. Okhlopkov M. (2020). The role of
    agricultural economists in study on problems related to regional food safety.
    In E3S Web of Conferences (Vol. 176, p. 05011). EDP Sciences. Follow Reference
    Fennimore, S. A., Slaughter, D. C., Siemens, M. C., Leon, R. G., & Saber, M. N.
    (2016). Technology for automation of weed control in specialty crops. Cambridge.Org,
    30, 823–837. 10.1614/WT-D-16-00070.1 Follow Reference Ferentinos K. P. (2018).
    Deep learning models for plant disease detection and diagnosis.Computers and Electronics
    in Agriculture, 145, 311–318. https://doi.org/10.1016/J.COMPAG.2018.01.009 Follow
    Reference Filimonau V. Todorova E. Mzembe A. Sauer L. Yankholmes A. (2020). A
    comparative study of food waste management in full service restaurants of the
    United Kingdom and the Netherlands.Journal of Cleaner Production, 258, 120775.
    Follow Reference Fuentes, A., Yoon, S., Kim, S. C., & Park, D. S. (2017). A Robust
    Deep-Learning-Based Detector for Real-Time Tomato Plant Diseases and Pests Recognition.
    Sensors, 17(9), 2022. 10.3390/S17092022 Follow Reference Goap A. Sharma D. Shukla
    A. K. Rama Krishna C. (2018). An IoT based smart irrigation management system
    using Machine learning and open source technologies.Computers and Electronics
    in Agriculture, 155, 41–49. https://doi.org/10.1016/J.COMPAG.2018.09.040 Follow
    Reference Gu Z. Qi Z. Ma L. Gui D. Xu J. Fang Q. Yuan S. Feng G. (2017). Development
    of an irrigation scheduling software based on model predicted crop water stress.Computers
    and Electronics in Agriculture, 143, 208–221. https://doi.org/10.1016/J.COMPAG.2017.10.023
    Follow Reference Hady M. F. A. Schwenker F. (2013). Semi-supervised Learning.
    In BianchiniM.MagginiM.JainL. C. (Eds.), Handbook on Neural Information Processing
    (pp. 215–239). Springer Berlin Heidelberg. Follow Reference Haghverdi, A., & Washington-Allen,
    R. (2018). Prediction of cotton lint yield from phenology of crop indices using
    artificial neural networks. Elsevier. 10.1016/j.compag.2018.07.021 Harishankar,
    S., Kumar, R. S., Sudharsan, K. P., Vignesh, U., & Viveknath, T. (2014). Solar
    powered smart irrigation system. Advance in electronic and electric engineering,
    4(4), 341-346. Follow Reference Harris D. Pathan A. K. Gothkar P. Joshi A. Chivasa
    W. Nyamudeza P. (2001). On-farm seed priming: Using participatory methods to revive
    and refine a key technology.[doi:https://doi.org/10.1016/S0308-521X(01)00023-3].
    Agricultural Systems, 69(1), 151–164. Follow Reference Heisel T. Schou J. Christensen
    S. Andreasen C. (2001). Cutting weeds with a CO 2 laser.Weed Research, 41(1),
    19–29. https://doi.org/10.1046/J.1365-3180.2001.00212.X Follow Reference Hinnell,
    A., Lazarovitch, N., & Furman, A. (2010). Neuro-Drip: estimation of subsurface
    wetting patterns for drip irrigation using neural networks. Springer, 28(6), 535–544.
    10.1007/s00271-010-0214-8 Follow Reference Hui, Y. Y., Choy, K. L., Ho, G. T.
    S., Leung, K. H., & Lam, H. Y. (2016). A cloud-based location assignment system
    for packaged food allocation in e-fulfillment warehouse. Sage Journals, 8, 1–15.
    10.1177/1847979016684832 Follow Reference Ibáñez M. D. Blázquez M. A. (2019).
    Ginger and Turmeric Essential Oils for Weed Control and Food Crop Protection.Plants,
    8(3). Advance online publication. 10.3390/plants8030059 Follow Reference Iqbal,
    M. A., & Talukder, K. H. (2020). Detection of Potato Disease Using Image Segmentation
    and Machine Learning. International Conference on Wireless Communications, Signal
    Processing and Networking, 43–47. 10.1109/WISPNET48689.2020.9198563 Follow Reference
    Jagtap, S. T., Phasinam, K., Kassanuk, T., Jha, S. S., Ghosh, T., & Thakar, C.
    M. (2022). Towards application of various machine learning techniques in agriculture.
    Materials Today: Proceedings, 51, 793-797. doi:10.1016/j.matpr.2021.06.236 Follow
    Reference Jha K. Doshi A. Patel P. Shah M. (2019). A comprehensive review on automation
    in agriculture using artificial intelligence.Artificial Intelligence in Agriculture,
    2, 1–12. Follow Reference Kakani V. Nguyen V. H. Kumar B. P. Kim H. Pasupuleti
    V. R. (2020). A critical review on computer vision and artificial intelligence
    in food industry.Journal of Agriculture and Food Research, 2, 100033. https://doi.org/10.1016/J.JAFR.2020.100033
    Follow Reference Kamilaris A. Prenafeta-Boldú F. X. (2018). Deep learning in agriculture:
    A survey.Computers and Electronics in Agriculture, 147, 70–90. https://doi.org/10.1016/J.COMPAG.2018.02.016
    Follow Reference Karar, M. E., Alsunaydi, F., Albusaymi, S., & Alotaibi, S. (2021).
    A new mobile application of agricultural pests recognition using deep learning
    in cloud computing system. Alexandria Engineering Journal, 60(5), 4423-4432. doi:10.1016/j.aej.2021.03.009
    Follow Reference Kasinathan T. Singaraju D. Uyyala S. R. (2021). Insect classification
    and detection in field crops using modern machine learning techniques.[doi:https://doi.org/10.1016/j.inpa.2020.09.006].
    Information Processing in Agriculture, 8(3), 446–457. Follow Reference Kehui X.
    Deqin X. Xiwen L. (2010). Smart water-saving irrigation system in precision agriculture
    based on wireless sensor network.Nongye Gongcheng Xuebao (Beijing), 26(11), 170–175.
    https://doi.org/10.3969/j.issn.1002-6819.2010.11.030 Follow Reference Khedr A.
    E. Kadry M. Walid G. (2015). Proposed Framework for Implementing Data Mining Techniques
    to Enhance Decisions in Agriculture Sector Applied Case on Food Security Information
    Center Ministry of Agriculture, Egypt.Procedia Computer Science, 65, 633–642.
    https://doi.org/10.1016/J.PROCS.2015.09.007 Follow Reference Kim, M. agriculture,
    J. G.-C. and electronics in, & 2008, undefined. (2008). Artificial Neural Network
    estimation of soil erosion and nutrient concentrations in runoff from land application
    areas. Elsevier. 10.1016/j.compag.2008.05.021 Komarek, A. M., De Pinto, A., &
    Smith, V. H. J. A. S. (2020). A review of types of risks in agriculture: What
    we know and what we need to know. Agricultural Systems, 178, 102738. Follow Reference
    Kouadio L. Deo R. C. Byrareddy V. Adamowski J. F. Mushtaq S. (2018). Artificial
    intelligence approach for the prediction of Robusta coffee yield using soil fertility
    properties.Computers and Electronics in Agriculture, 155, 324–338. Follow Reference
    Krisztin T. (2018). Semi-parametric spatial autoregressive models in freight generation
    modeling.Transportation Research Part E, Logistics and Transportation Review,
    114, 121–143. https://doi.org/10.1016/J.TRE.2018.03.003 Kukreja, H., Bharath,
    N., Siddesh, C., & Kuldeep, S. J. I. J. A. R. I. I. E. (2016). An introduction
    to artificial neural network. 1, 27-30. Follow Reference Kumar, I., Rawat, J.,
    Mohd, N., & Husain, S. (2021). Opportunities of Artificial Intelligence and Machine
    Learning in the Food Industry. Journal of Food Quality. 10.1155/2021/4535567 Follow
    Reference Kumar, R., Singh, M. P., Kumar, P., & Singh, J. P. (2015). Crop Selection
    Method to maximize crop yield rate using machine learning technique. International
    Conference on Smart Technologies and Management for Computing, Communication,
    Controls, Energy and Materials, 138–145. 10.1109/ICSTM.2015.7225403 Follow Reference
    Lamm R. D. Slaughter D. C. Giles D. K. (2002). Precision weed control system for
    cotton.Transactions of the ASAE. American Society of Agricultural Engineers, 45(1),
    231. Follow Reference Larsen, R. A., Schaalje, G. B., & Lawson, J. S. (2009).
    Food shelf life: estimation and optimal design. Journal of Statistical Computation
    and Simulation, 80(2), 143–157. 10.1080/00949650802549135 Lauzon, F. Q. (2012,
    2-5 July 2012). An introduction to deep learning. Paper presented at the International
    Conference on Information Science, Signal Processing and their Applications (ISSPA).
    Follow Reference LeCun Y. Bengio Y. Hinton G. (2015). Deep learning.Nature, 521(7553),
    436–444. 10.1038/nature14539 Follow Reference Lezoche M. Hernandez J. E. Díaz
    M. D. M. E. A. Panetto H. Kacprzyk J. (2020). Agri-food 4.0: A survey of the supply
    chains and technologies for the future agriculture.Computers in Industry, 117,
    103187. Follow Reference Li M. Yost R. S. (2000). Management-oriented modeling:
    Optimizing nitrogen management with artificial intelligence.Agricultural Systems,
    65(1), 1–27. Follow Reference Li N. Shepperd M. Guo Y. (2020). A systematic review
    of unsupervised learning techniques for software defect prediction.[doi:https://doi.org/10.1016/j.infsof.2020.106287].
    Information and Software Technology, 122, 106287. Follow Reference Li T. Johansen
    K. McCabe M. F. (2022). A machine learning approach for identifying and delineating
    agricultural fields and their multi-temporal dynamics using three decades of Landsat
    data.[doi:https://doi.org/10.1016/j.isprsjprs.2022.02.002]. ISPRS Journal of Photogrammetry
    and Remote Sensing, 186, 83–101. Follow Reference Li Y. Chao X. (2020). ANN-Based
    Continual Classification in Agriculture.Agriculture, 10(5). doi:10.3390/agriculture10050178
    Follow Reference Liakos K. G. Busato P. Moshou D. Pearson S. Bochtis D. (2018).
    Machine Learning in Agriculture: A Review.Sensors (Basel), 18(8), 2674. https://doi.org/10.3390/s18082674
    Follow Reference Livingstone D. J. (Ed.). (2008). Artificial neural networks:
    methods and applications (pp. 185–202). Humana Press. Follow Reference López E.
    M. García M. Schuhmacher M. Domingo J. L. (2008). A fuzzy expert system for soil
    characterization.Environment International, 34(7), 950–958. Follow Reference Luangkesorn
    K. L. Klein G. Bidanda B. (2016). Analysis of production systems with potential
    for severe disruptions.International Journal of Production Economics, 171, 478–486.
    https://doi.org/10.1016/J.IJPE.2015.09.014 Follow Reference Ma J. Du K. Zheng
    F. Zhang L. Gong Z. Sun Z. (2018). A recognition method for cucumber diseases
    using leaf symptom images based on deep convolutional neural network.Computers
    and Electronics in Agriculture, 154, 18–24. https://doi.org/10.1016/J.COMPAG.2018.08.048
    Follow Reference Mananze, S., Pôças, I., & Cunha, M. (2018). Retrieval of Maize
    Leaf Area Index Using Hyperspectral and Multispectral Data. Remote Sensing, 10(12),
    1942. 10.3390/RS10121942 Follow Reference Mazoyer M. Roudart L. (2006). A history
    of world agriculture: from the neolithic age to the current crisis. NYU Press.
    McCalla, A. F. J. U. A., & Economics, R. (2001). Challenges to world agriculture
    in the 21st century. Agricultural and Resource Economics, 4(3), 1-2. Follow Reference
    Mehra M. Saxena S. Sankaranarayanan S. Tom R. J. Veeramanikandan M. (2018). IoT
    based hydroponics system using Deep Neural Networks.Computers and Electronics
    in Agriculture, 155, 473–486. Mishra, M., & Srivastava, M. (2014). A view of artificial
    neural network. Paper presented at the International Conference on Advances in
    Engineering & Technology Research (ICAETR). Follow Reference Misra N. N. Dixit
    Y. Al-Mallahi A. Bhullar M. S. Upadhyay R. Martynenko A. (2020). IoT, big data
    and artificial intelligence in agriculture and food industry. IEEE Internet of
    Things Journal. Follow Reference Mohanty S. P. Hughes D. P. Salathé M. (2016).
    Using deep learning for image-based plant disease detection.Frontiers in Plant
    Science, 7(September), 1419. https://doi.org/10.3389/FPLS.2016.01419/BIBTEX Moisture,
    S. (2017). Importance of Soil Water. Agriinfo.https://agriinfo.in/soil-moisture-importance-of-soil-water-263/
    Follow Reference Mojjada, R. K., Kiran Kumar, K., Yadav, A., & Satya Vara Prasad,
    B. V. V. (2020). Detection of plant leaf disease using digital image processing.
    Materials Today: Proceedings.10.1016/J.MATPR.2020.11.115 Follow Reference Monga,
    T. (2018). Estimating Vineyard Grape Yield from Images. Lecture Notes in Computer
    Science (Including Subseries Lecture Notes in Artificial Intelligence and Lecture
    Notes in Bioinformatics). LNAI, 339–343. 10.1007/978-3-319-89656-4_37 Follow Reference
    Montas H. Madramootoo C. A. (1992). A decision support system for soil conservation
    planning.Computers and Electronics in Agriculture, 7(3), 187–202. Follow Reference
    Monteiro A. L. Freitas Souza M. d. Lins H. A. Teófilo T. M. S. Barros Júnior A.
    P. Silva D. V. Mendonça V. (2021). A new alternative to determine weed control
    in agricultural systems based on artificial neural networks (ANNs).[doi:https://doi.org/10.1016/j.fcr.2021.108075].
    Field Crops Research, 263, 108075. Follow Reference Mucherino, A., & Papajorgji,
    P. Research, P. P.-O., & 2009, undefined. (2009). A survey of data mining techniques
    applied to agriculture. Springer, 9(2), 121–140. 10.1007/s12351-009-0054-6 Follow
    Reference Munz J. M. Gindele N. Doluschitz R. (2020). Exploring the characteristics
    and utilisation of Farm Management Information Systems (FMIS) in Germany.Computers
    and Electronics in Agriculture, 170, 105246. Follow Reference Nair K. P. (2019).
    Soil Fertility and Nutrient Management. In K. P. Nair (Ed.), Intelligent Soil
    Management for Sustainable Agriculture: The Nutrient Buffer Power Concept (pp.
    165–189). Springer International Publishing. Follow Reference Nakai S. Yamada
    Y. (2014). Development of a weed suppression robot for rice cultivation: Weed
    suppression and posture control.Int J Electr Comput Electron Commun Eng, 8, 1736–1740.
    Follow Reference Nasiakou A. Vavalis M. Zimeris D. (2016). Smart energy for smart
    irrigation.Computers and Electronics in Agriculture, 129, 74–83. https://doi.org/10.1016/J.COMPAG.2016.09.008
    Follow Reference Navarro-Hellín H. Martínez-del-Rincon J. Domingo-Miguel R. Soto-Valles
    F. Torres-Sánchez R. (2016). A decision support system for managing irrigation
    in agriculture.Computers and Electronics in Agriculture, 124, 121–131. https://doi.org/10.1016/J.COMPAG.2016.04.003
    Follow Reference Nawandar N. K. Satpute V. R. (2019). IoT based low cost and intelligent
    module for smart irrigation system.Computers and Electronics in Agriculture, 162,
    979–990. https://doi.org/10.1016/J.COMPAG.2019.05.027 Follow Reference Nevavuori
    P. Narra N. Lipping T. (2019). Crop yield prediction with deep convolutional neural
    networks.Computers and Electronics in Agriculture, 163, 104859. https://doi.org/10.1016/J.COMPAG.2019.104859
    Follow Reference Ngo H. C. Hashim U. R. Sek Y. W. Kumar Y. J. Ke W. S. (2019).
    Weeds detection in agricultural fields using convolutional neural network.International
    Journal of Innovative Technology and Exploring Engineering, 8(11), 292–296. https://doi.org/10.35940/IJITEE.K1327.0981119
    Nikolenko, S., Kadurin, A., & Arkhangelskaya, E. J. S. P. (2018). Deep learning.
    Journal of the American Heart Association. Follow Reference Noon S. K. Amjad M.
    Qureshi M. A. Mannan A. (2020). Use of deep learning techniques for identification
    of plant leaf stresses: A review.Sustain. Comput. Informatics Syst., 28, 100443.
    Nørremark, M., & Griepentrog, H. (2004). Analysis and definition of the close-to-crop
    area in relation to robotic weeding. Orgprints.https://orgprints.org/4834/ Follow
    Reference O’Sullivan C. A. Bonnett G. D. McIntyre C. L. Hochman Z. Wasson A. P.
    (2019). Strategies to improve the productivity, product diversity and profitability
    of urban agriculture.[doi:https://doi.org/10.1016/j.agsy.2019.05.007]. Agricultural
    Systems, 174, 133–144. Onishchuk, M. O. (2020). Opto-mechanical sorting of municipal
    solid waste [Doctoral dissertation, BHTY, USA]. Follow Reference Osman, T., Psyche,
    S. S., Kamal, M. R., Tamanna, F., Haque, F., & Rahman, R. M. (2017). Predicting
    Early Crop Production by Analysing Prior Environment Factors. Advances in Intelligent
    Systems and Computing, 470–479. 10.1007/978-3-319-49073-1_51 Follow Reference
    Pallathadka, H., Mustafa, M., Sanchez, D. T., Sekhar Sajja, G., Gour, S., & Naved,
    M. (2021). IMPACT OF MACHINE learning ON Management, healthcare AND AGRICULTURE.
    Materials Today: Proceedings. doi:10.1016/j.matpr.2021.07.042 Follow Reference
    Palm C. Blanco-Canqui H. DeClerck F. Gatere L. Grace P. (2014). Conservation agriculture
    and ecosystem services: An overview.[doi:https://doi.org/10.1016/j.agee.2013.10.010].
    Agriculture, Ecosystems & Environment, 187, 87–105. Follow Reference Pant, J.,
    Pant, R. P., Kumar Singh, M., Pratap Singh, D., & Pant, H. (2021). Analysis of
    agricultural crop yield prediction using statistical techniques of machine learning.
    Materials Today: Proceedings, 46, 10922-10926. doi:10.1016/j.matpr.2021.01.948
    Follow Reference Pantazi X. E. Moshou D. Alexandridis T. Whetton R. L. Mouazen
    A. M. (2016). Wheat yield prediction using machine learning and advanced sensing
    techniques.Computers and Electronics in Agriculture, 121, 57–65. https://doi.org/10.1016/J.COMPAG.2015.11.018
    Follow Reference Partel V. Kakarla S. C. Ampatzidis Y. (2019). Development and
    evaluation of a low-cost and smart technology for precision weed management utilizing
    artificial intelligence.Computers and Electronics in Agriculture, 157, 339–350.
    Follow Reference Qiang L. Jiuping X. (2008). A Study on Vehicle Routing Problem
    in the Delivery of Fresh Agricultural Products under Random Fuzzy Environment.International
    Journal of Information and Management Sciences, 19(4), 673–690. Follow Reference
    Ramcharan A. Baranowski K. McCloskey P. Ahmed B. Legg J. Hughes D. P. (2017).
    Deep learning for image-based cassava disease detection.Frontiers in Plant Science,
    8, 1852. https://doi.org/10.3389/FPLS.2017.01852/BIBTEX Follow Reference Ramos
    P. J. Prieto F. A. Montoya E. C. Oliveros C. E. (2017). Automatic fruit count
    on coffee branches using computer vision.Computers and Electronics in Agriculture,
    137, 9–22. https://doi.org/10.1016/J.COMPAG.2017.03.010 Follow Reference Research,
    R. Z.-P. J. of W. S., & 2010, undefined. (2014). Ethics for weed science. Researchgate.Net.
    10.1017/S0043174500089633 Follow Reference Rico-Fernández M. P. Rios-Cabrera R.
    Castelán M. Guerrero-Reyes H. I. Juarez-Maldonado A. (2019). A contextualized
    approach for segmentation of foliage in different crop species.Computers and Electronics
    in Agriculture, 156, 378–386. Follow Reference Roshanianfard A. Noguchi N. Okamoto
    H. Ishii K. (2020). A review of autonomous agricultural vehicles (The experience
    of Hokkaido University).Journal of Terramechanics, 91, 155–183. Follow Reference
    Rumpf T. Mahlein A. K. Steiner U. Oerke E. C. Dehne H. W. Plümer L. (2010). Early
    detection and classification of plant diseases with Support Vector Machines based
    on hyperspectral reflectance.Computers and Electronics in Agriculture, 74(1),
    91–99. https://doi.org/10.1016/J.COMPAG.2010.06.009 Follow Reference Sadgrove
    E. J. Falzon G. Miron D. Lamb D. W. (2018). Real-time object detection in agricultural/remote
    environments using the multiple-expert colour feature extreme learning machine
    (MEC-ELM).Computers in Industry, 98, 183–191. Follow Reference Saldaña-Robles
    A. L. Bustos-Gaytán A. Diosdado-De la Peña J. A. Saldaña-Robles A. Alcántar-Camarena
    V. Balvantín-García A. Saldaña-Robles N. (2020). Structural design of an agricultural
    backhoe using TA, FEA, RSM and ANN.Computers and Electronics in Agriculture, 172,
    105278. Follow Reference Sawant S. S. Prabukumar M. (2020). A review on graph-based
    semi-supervised learning methods for hyperspectral image classification.[doi:https://doi.org/10.1016/j.ejrs.2018.11.001].
    The Egyptian Journal of Remote Sensing and Space Sciences, 23(2), 243–248. Follow
    Reference Schwenker F. Trentin E. (2014). Pattern classification and clustering:
    A review of partially supervised learning approaches.[doi:https://doi.org/10.1016/j.patrec.2013.10.017].
    Pattern Recognition Letters, 37, 4–14. Follow Reference Sengupta S. Lee W. S.
    (2014). Identification and determination of the number of immature green citrus
    fruit in a canopy under different ambient light conditions.Biosystems Engineering,
    117(C), 51–61. https://doi.org/10.1016/J.BIOSYSTEMSENG.2013.07.007 Shinde, P.
    P., & Shah, S. (2018, 16-18 Aug. 2018). A Review of Machine Learning and Deep
    Learning Applications. Paper presented at the Fourth International Conference
    on Computing Communication Control and Automation (ICCUBEA). Follow Reference
    Shukla M. Jharkharia S. (2014). An inventory model for continuously deteriorating
    agri-fresh produce: An artificial immune system-based solution approach.International
    Journal of Integrated Supply Management, 9(1–2), 110–135. https://doi.org/10.1504/IJISM.2014.064362
    Follow Reference Sicat R. S. Carranza E. J. Nidumolu U. B. (2005). Fuzzy modeling
    of farmers’ knowledge for land suitability classification.Agricultural Systems,
    83, 49–75. Follow Reference Sinwar, D., Dhaka, V. S., Sharma, M. K., & Rani, G.
    (2020). AI-Based Yield Prediction and Smart Irrigation, 155–180. 10.1007/978-981-15-0663-5_8
    Follow Reference Srivastava, A. R., & Venkatesan, M. (2020). Tea leaf disease
    prediction using texture-based image processing. Advances in Intelligent Systems
    and Computing, 1054, 17–25. 10.1007/978-981-15-0135-7_3 Follow Reference Syers
    J. K. (1997). Managing soils for long-term productivity.Philosophical Transactions
    of the Royal Society of London. Series B, Biological Sciences, 352(1356), 1011–1021.
    https://doi.org/10.1098/RSTB.1997.0079 Follow Reference Tajik S. Ayoubi S. Nourbakhsh
    F. (2012). Prediction of soil enzymes activity by digital terrain analysis: Comparing
    artificial neural network and multiple linear regression models.Environmental
    Engineering Science, 29(8), 798–806. https://doi.org/10.1089/EES.2011.0313 Follow
    Reference Tanha Talaviya, Dhara Shah, D. Shah, Nivedita Patel, N. Patel, Hiteshri
    Yagnik, H. Yagnik, & Manan Shah, M. Shah. (2020). Implementation of artificial
    intelligence in agriculture for optimisation of irrigation and application of
    pesticides and herbicides. Artificial intelligence in agriculture, 4, 58-73. doi:
    10.1016/j.aiia.2020.04.002 Tang, L., & Tian, L. ASAE, B. S.-T. of the, & 2000,
    undefined. (2000). Color image segmentation with genetic algorithm for in-field
    weed sensing. Elibrary.Asabe.Org.https://elibrary.asabe.org/abstract.asp?aid=2970
    Follow Reference Tian Y. Yang G. Wang Z. Wang H. Li E. Liang Z. (2019). Apple
    detection during different growth stages in orchards using the improved YOLO-V3
    model.Computers and Electronics in Agriculture, 157, 417–426. https://doi.org/10.1016/J.COMPAG.2019.01.012
    Follow Reference Too E. C. Yujian L. Njuki S. Yingchun L. (2019). A comparative
    study of fine-tuning deep learning models for plant disease identification.Computers
    and Electronics in Agriculture, 161, 272–279. https://doi.org/10.1016/J.COMPAG.2018.03.032
    Follow Reference Tripathi, S., Shukla, S., Attrey, S., Agrawal, A., & Bhadoria,
    V. S. (2020). Smart Industrial Packaging and Sorting System. 245–254. 10.1007/978-981-15-3647-2_18
    Follow Reference Tudi M. Daniel Ruan H. Wang L. Lyu J. Sadler R. Connell D. Phung
    D. T. (2021). Agriculture Development, Pesticide Application and Its Impact on
    the Environment.International Journal of Environmental Research and Public Health,
    18(3). doi:10.3390/ijerph18031112 Follow Reference Valdés-Vela M. Abrisqueta I.
    Conejero W. Vera J. Ruiz-Sánchez M. C. (2015). Soft computing applied to stem
    water potential estimation: A fuzzy rule based approach.Computers and Electronics
    in Agriculture, 115, 150–160. https://doi.org/10.1016/J.COMPAG.2015.05.019 Follow
    Reference van Engelen J. E. Hoos H. H. (2020). A survey on semi-supervised learning.Machine
    Learning, 109(2), 373–440. doi:10.1007/s10994-019-05855-6 Follow Reference van
    Klompenburg T. Kassahun A. Catal C. (2020). Crop yield prediction using machine
    learning: A systematic literature review.Computers and Electronics in Agriculture,
    177, 105709. https://doi.org/10.1016/J.COMPAG.2020.105709 Follow Reference Vellidis
    G. Tucker M. Perry C. Kvien C. Bednarz C. (2008). A real-time wireless smart sensor
    array for scheduling irrigation.Computers and Electronics in Agriculture, 61(1),
    44–50. https://doi.org/10.1016/J.COMPAG.2007.05.009 Follow Reference Waheed R.
    Chang D. Sarwar S. Chen W. (2018). Forest, agriculture, renewable energy, and
    CO2 emission.[doi:https://doi.org/10.1016/j.jclepro.2017.10.287]. Journal of Cleaner
    Production, 172, 4231–4238. Follow Reference Wang, A. X., Tran, C., Desai, N.,
    Lobell, D., & Ermon, S. (2018). Deep transfer learning for crop yield prediction
    with remote sensing data. Proceedings of the 1st ACM SIGCAS Conference on Computing
    and Sustainable Societies, COMPASS. 10.1145/3209811.3212707 Follow Reference Wang,
    Q., Nuske, S., Bergerman, M., & Singh, S. (2013). Automated Crop Yield Estimation
    for Apple Orchards. 745–758. 10.1007/978-3-319-00065-7_50 Follow Reference Wang
    X. P. Wang M. Ruan J. H. Li Y. (2018). Multi-objective optimization for delivering
    perishable products with mixed time windows.Advances in Production Engineering
    & Management, 13(3), 321–332. https://doi.org/10.14743/APEM2018.3.293 Follow Reference
    Whitmire, C. D., Vance, J. M., Rasheed, H. K., Missaoui, A., Rasheed, K. M., &
    Maier, F. W. (2021). Using Machine Learning and Feature Selection for Alfalfa
    Yield Prediction. AI, 2(1), 71–88. 10.3390/AI2010006 Follow Reference Yadav S.
    Sengar N. Singh A. Singh A. Dutta M. K. (2021). Identification of disease using
    deep learning and evaluation of bacteriosis in peach leaf.[doi:https://doi.org/10.1016/j.ecoinf.2021.101247].
    Ecological Informatics, 61, 101247. Follow Reference Yeasin M. Dhandapani A. Ravichandran
    S. (2021). Artificial Intelligence in Agriculture. In SrinivasaraoCh. (Ed.), Agricultural
    Research, Technology and Policy: Innovations and Advances, ICAR-National Academy
    of Agricultural Research Management (NAARM), Hyderabad (pp. 291–306). Follow Reference
    Yost, M. A., Kitchen, N. R., Sudduth, K. A., Sadler, E. J., Drummond, S. T., Volkmann,
    M. R., & Yost MattYost, M. A. (2017). Long-term impact of a precision agriculture
    system on grain crop production. Springer, 18(5), 823–842. 10.1007/s11119-016-9490-5
    Follow Reference You J. Li X. Low M. Lobell D. Ermon S. (2017). Deep Gaussian
    Process for Crop Yield Prediction Based on Remote Sensing Data.Proceedings of
    the AAAI Conference on Artificial Intelligence, 31(1). https://ojs.aaai.org/index.php/AAAI/article/view/11172
    Follow Reference Zhang B. Xie Y. Zhou J. Wang K. Zhang Z. (2020). State-of-the-art
    robotic grippers, grasping and control strategies, as well as their applications
    in agricultural robots: A review.Computers and Electronics in Agriculture, 177,
    105694. https://doi.org/10.1016/J.COMPAG.2020.105694 Follow Reference Zhao Z.
    Chow T. L. Rees H. W. Yang Q. Xing Z. Meng F. R. (2009). Predict soil texture
    distributions using an artificial neural network model.Computers and Electronics
    in Agriculture, 65(1), 36–48. Follow Reference Zhu, H., Chu, B., Zhang, C., Liu,
    F., Jiang, L., & He, Y. (2017). Hyperspectral Imaging for Presymptomatic Detection
    of Tobacco Disease with Successive Projections Algorithm and Machine-learning
    Classifiers. Scientific Reports, 7(1), 1–12. 10.1038/s41598-017-04501-2 Zou, J.,
    Han, Y., & So, S. S. (2008). Overview of artificial neural networks. Artificial
    Neural Networks, 14-22. Request Access You do not own this content. Please login
    to recommend this title to your institution''s librarian or purchase it from the
    IGI Global bookstore. Username or email:   Password:   Log In   Forgot individual
    login password? Create individual account Research Tools Database Search | Help
    | User Guide | Advisory Board User Resources Librarians | Researchers | Authors
    Librarian Tools COUNTER Reports | Persistent URLs | MARC Records | Institution
    Holdings | Institution Settings Librarian Resources Training | Title Lists | Licensing
    and Consortium Information | Promotions Policies Terms and Conditions     Copyright
    © 1988-2024, IGI Global - All Rights Reserved"'
  inline_citation: '>'
  journal: Applying Drone Technologies and Robotics for Agricultural Sustainability
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Edge AI for real-time and intelligent agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ayoade I.A.
  - Nwakanma C.I.
  - Alimi S.
  - Akinde O.K.
  - Adebisi O.
  - Oladeji D.M.
  - Ajayi D.B.
  - Kayode M.I.
  citation_count: '0'
  description: Farmers in developing nations are faced with limited technology for
    smart and economical ways of irrigation. This is worsened by the high cost of
    imports since most of these nations are import-dependent. Increasing agricultural
    yield to meet the growing population in most of these nations has led their governments
    to pursue cost-effective ways of managing water and other resources required for
    optimum agricultural yield. In this study, the Internet of Things (IoT) and edge
    computing are proposed to provide an intelligent irrigation system to bridge the
    irrigation gap. This research was carried out using a greenhouse with a controlled
    environment i.e., the ambient temperature, air humidity, ultraviolet radiations
    (UV), soil temperature, and soil moisture content were all monitored and measured
    in real-Time within the controlled environment. These data were collected using
    field sensors processed using IoT-enabled microcontrollers (Arduino kits). The
    data were processed via Amazon Web Services (A WS) for ontological capabilities
    of the system consisting of computational capabilities of IoT server and Edge
    Server. Internet-enabled mobile devices were used to monitor and adopt preferential
    yield rates for cultivation. Also, an irrigation sequencing algorithm was developed,
    which uses predictive machine learning K-Mean Clustering Algorithm to predict
    a more accurate soil moisture content with minimum standard error and a lower
    mean square error of 0.11 to the predicted soil content compared to when only
    SVR with mean square error of 0.12.
  doi: 10.1109/ICMEAS58693.2023.10429854
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 2nd International Confer... IoT-Aided
    Intelligent Irrigation System Using Edge Computing Publisher: IEEE Cite This PDF
    Idowu Adetona Ayoade; Cosmas Ifeanyi Nwakanma; Sheriff Alimi; Olusola Kunle Akinde;
    Oluwadare Adebisi; Dolapo Michael Oladeji; Dolapo Boluwatife Ajayi All Authors
    Abstract Document Sections Introduction II. Literature Review III. Methodology
    IV. Results and Discussions V. Conclusion Authors Figures References Keywords
    Abstract: Farmers in developing nations are faced with limited technology for
    smart and economical ways of irrigation. This is worsened by the high cost of
    imports since most of these nations are import-dependent. Increasing agricultural
    yield to meet the growing population in most of these nations has led their governments
    to pursue cost-effective ways of managing water and other resources required for
    optimum agricultural yield. In this study, the Internet of Things (IoT) and edge
    computing are proposed to provide an intelligent irrigation system to bridge the
    irrigation gap. This research was carried out using a greenhouse with a controlled
    environment i.e., the ambient temperature, air humidity, ultraviolet radiations
    (UV), soil temperature, and soil moisture content were all monitored and measured
    in real-time within the controlled environment. These data were collected using
    field sensors processed using IoT -enabled microcontrollers (Arduino kits). The
    data were processed via Amazon Web Services (A WS) for ontological capabilities
    of the system consisting of computational capabilities of IoT server and Edge
    Server. Internet-enabled mobile devices were used to monitor and adopt preferential
    yield rates for cultivation. Also, an irrigation sequencing algorithm was developed,
    which uses predictive machine learning K-Mean Clustering Algorithm to predict
    a more accurate soil moisture content with minimum standard error and a lower
    mean square error of 0.11 to the predicted soil content compared to when only
    SVR with mean square error of 0.12. Published in: 2023 2nd International Conference
    on Multidisciplinary Engineering and Applied Science (ICMEAS) Date of Conference:
    01-03 November 2023 Date Added to IEEE Xplore: 29 February 2024 ISBN Information:
    DOI: 10.1109/ICMEAS58693.2023.10429854 Publisher: IEEE Conference Location: Abuja,
    Nigeria Introduction According to the National Agricultural Agency of Nigeria,
    about 80% of the nation''s population is dependent on agriculture or agricultural-related
    product(s) as primary or secondary means of living income [1]. Water shortage
    is one of the world''s most pressing issues today [2], and crop cultivation, being
    a labor-intensive activity, is dependent on the supply of water for its growth
    and productivity [3]. As a result, an intelligent system that utilizes an efficient
    automated water supply is required for the optimization of crop water supply.
    Smart irrigation systems evaluate and measure the depletion of crop growth moisture
    to optimize the irrigation process [4]. Consequently, there''s a need for fully
    autonomous, intuitive, and smart agricultural watering systems is becoming extremely
    unavoidable with the rapid exponential population growth, in Nigeria [5], [6].
    For this purpose, an Internet of Things (IoT) IoT based smart water management
    system has been developed to address the challenge with systematic irrigation
    of cultivated crops. The research underscores a critical issue highlighted by
    the United Nations Food and Agricultural Organization (FAO): currently, 60% of
    water diverted or pumped for irrigation is lost through runoff or evapotranspiration
    [7]. Addressing this challenge necessitates the development of intelligent irrigation
    systems, demanding a level of efficiency achievable only through robust data analysis
    and effective implementation strategies. This article advocates for the adoption
    of an IoT based irrigation systems, emphasizing their reliance on data-driven
    automated signals [8], [9]. A. Problem Statement Addressing the imperative of
    meeting and potentially enhancing agricultural output demands, a reliable and
    timely provision of irrigation/fertigation is essential [4], [5]. However, the
    existing technologies of cloud computing prove theoretically insufficient for
    the extensive application of IoT in large-scale scenarios [9]. The proliferation
    of reports obtained by IoT sensing devices poses a significant challenge, surpassing
    the current capacity of data centers in terms of processing and storage capabilities
    [2]. Efficient water consumption, timely irrigation, and conservation of limited
    water reservoirs represent the primary objectives of a rapid and intelligent irrigation
    system for cultivating fields. Despite numerous sensor-based smart irrigation
    systems developed over time, concerns persist regarding their reliability, particularly
    as data volume grows and the latency rate of IoT devices becomes a pertinent issue
    [10], [11]. This research aims to delve into these challenges, offering insights
    for the advancement of dependable and high-performance smart irrigation solutions.
    With the emergence of intelligent irrigation distribution network, there is the
    potential to reform agricultural practices by utilizing advanced methods to optimize
    crop yields as well as water use [4]. However, there are still significant challenges
    that need to be addressed to fully realize the benefits of smart irrigation systems
    [12], [13]. One of the key issues is the lack of standardization in the technologies
    used, leading to inconsistencies in performance across different systems [12].
    Additionally, there is a need for more accurate and reliable methods for measuring
    soil moisture levels, which is critical for determining the appropriate amount
    of water to be applied. Furthermore, the integration of weather forecasting data
    and other environmental factors is essential for ensuring efficient water usage
    and minimizing waste [14]. Therefore, the research problem that needs to be addressed
    is how to develop a standardized and reliable smart irrigation system that can
    accurately measure soil moisture levels, integrate weather forecasting data, and
    optimize water usage for different types of crops in different environments [13],
    [15], [16]. Within this study, an intelligent IoT-based irrigation mechanism was
    developed using an Edge computing architecture, the output thus is a predictive
    machine learning (K - Mean Clustering) algorithm intended for accurate soil moisture
    prediction for smart/intelligent agriculture. SECTION II. Literature Review Within
    the field of IoT architecture, [9] introduced a comprehensive framework encompassing
    cloud-based storage, data processing, and analysis derived from ubiquitous sensors.
    Additionally, it incorporates a decision support interface for enhanced functionality.
    Building upon this foundation, [17] proposed an IoT middleware platform reference
    model, specifically designed to bolster intelligent IoT applications. The manifold
    benefits of IoT -based solutions in various agricultural domains have been extensively
    validated [18]. This study posits that the integration of intelligent solutions
    within the context of smart irrigation holds promising potential, particularly
    in optimizing water usage for enhanced agricultural efficiency. The basic criteria
    for developing a smart irrigation system are soil moisture, precipitation, as
    well as evaporation [19], [20]. Soil moisture is influenced by two primary factors
    which are precipitation and evaporation [21]. In geography and climatology, the
    proportion of annual (or monthly) precipitation to evaporation which is employed
    to determine quantity of moisture available to the crop in the soil [22], [23].
    [24], [25] states that the ratio of daily precipitation to daily evaporation may
    also be used to assess daily/average soil moisture. [26], [27] proposes that weather
    station reports should be based on direct access to precipitation measurements,
    but evaporation may be determined using different methods [28], [29]. E T ∝( E
    p + E m ) (1) View Source Where; E T = Evapotranspiration E m = Soil moisture
    E p = = Precipitation Studies were carried out in Florida by [30], which concluded
    that Evapotranspiration (ET) based watering schedule controllers are more cost-effective
    in terms of irrigation costs, size, and personnel requirements. ET -based irrigation
    systems utilize a lot less water than planned procedures. A fuzzy logic-based
    decision support system was proposed by [31] based on farmers'' understanding
    of crop status and their experience as farmers. In contrast to single-threshold
    and multi-threshold dependent irrigation scheduling methods, the findings of [32]
    affirm that the proposed system achieves superior water conservation. Addressing
    the imperative of water conservation in irrigation practices, [33] presented an
    automated system that used a General Packet Radio Services (GPRS) module and a
    wireless sensor network. The system incorporates real-time monitoring facilitated
    by a network of soil moisture sensors and controllers strategically deployed across
    the crop field. This research contributes valuable insights into efficient water
    management in agriculture, advocating for the adoption of advanced irrigation
    systems for sustainable resource utilization. In 2021, [32] developed an irrigation
    sensor with user accessibility to the sensors via a smartphone application APP.
    The digital camera on a smartphone is used to convert Red Green Blue (RGB) to
    gray to calculate the proportion of moist to dry soil in order to quantify soil
    moisture. Through a gateway, the wetness-to-dryness ratio is sent to the water
    motor controller. To hibernate and calibrate the sensor, a mobile application
    (APP) was built for this research. Using a machine learning system and extensive
    knowledge of agronomists, [34] presented irrigation solutions such as Gradient
    Boosted Regression Trees (GBRT), that predicted irrigation plans and recommendations
    with an accuracy of 93%, and were deemed the most superior regression model. The
    created model aids in the irrigation management of the agronomist. The research
    presented by [35] introduces an advanced intelligent irrigation monitoring system
    that utilizes thermal imaging technology. This innovative methodology involves
    deploying a drone equipped with a thermal imaging camera. Through the application
    of sophisticated image processing techniques, the study formulates an algorithm
    capable of discerning crucial parameters such as water requirements, leaf water
    potential, and identifying instances of nonuniform irrigation. This cutting-edge
    approach holds significant promise for precise and effective irrigation monitoring,
    contributing to the evolution of intelligent agricultural practices. SECTION III.
    Methodology A. Theoretical Framework As shown in Figure 1, data was gathered via
    the sensors. Using the same medium, data on temperature, humidity, and soil moisture
    were gathered during this stage. A microprocessor, actuators, and all sensors
    are present in the perception layer. One of the final three layers is the rest.
    A schedule for watering crops, instructions on how to manage them, and other details
    are provided by the transport and processing layers. The next element after acquiring
    the data is to store it in data centers for analysis. Figure 1 depicts the theoretical
    framework of the proposed architecture below. Figure 1: Framework for IoT -Aided
    Intelligent Irrigation System Using Edge Computing Show All B. Research Methodology
    The developed IoT architecture features four layers instead of the standard IoT
    design''s three layers, including an application layer, a processing layer, a
    transport layer, and a perception layer (application layer, network layer, and
    perception layer). Since sensors are present in the perception layer, which is
    also referred to as the physical layer, data collection is possible. From the
    air, it detects humidity, temperature, and soil moisture. Through networks like
    Wi-Fi, 2G, 3G, and LAN, the transport layer serves as the conduit for transporting
    sensed data that was previously gathered to the processing layer. Massive volumes
    of data from the transport layer are stored, examined, and processed in the processing
    layer. To develop an intelligent irrigation system for efficient water management,
    it is essential to rapidly predict soil moisture content. Evapotranspiration is
    an essential element in soil moisture content prediction [19]. In 1985, Hargreaves
    and Samani devised a method grounded in temperature and extraterrestrial radiation
    to ascertain E T 0 . Figure 2: Schematic diagram of irrigation sequencing algorithm
    Show All It is expressed as T max = T min τ max + T min 2 E T 0 =0.0023 R a [
    T max + T min 2 +17.8] T max − T min − − − − − − − − − − √ (1) (2) View Source
    Where; E T 0 = reference evapotranspiration (mm/day); Γem p max and Temp min =
    highest & lowest temperature,°C R a =extra terrestrial radiation (MJ m −2 da y
    −1 ) . Another predictive model was developed by [20] to estimate ETo 5< T max
    ≤ 35 ∘ C T max > 35 ∘ C T max < 5 ∘ C α 1 =1.1 α 1 =1.1+0.05( T max −35) α 1 =0.01exp[0.18(
    T max −20)] (3) View Source Where; E T 0 = reference evapotranspiration (mm/day)
    T max and T min = maximum & minimum temperature °C) R s = Solar Radiation (MJ
    m −2 da y −1 ). α 1 A proposed IoT -based architecture (refer to Fig. 1) serves
    to systematically gather and proficiently manage the physical attributes of agricultural
    land for the enhanced operation of an irrigation system. These attributes, encompassing
    soil moisture, soil temperature, radiation, air temperature, and air relative
    humidity are transmitted and subj ected to a comprehensive processing methodology.
    This approach integrates both supervised and unsupervised machine learning techniques,
    as depicted in the block diagram (Fig. 2), employing K-means clustering and Support
    Vector Regression (SVR) to discern variations in soil moisture attributed to weather
    conditions. The predictive accuracy of soil moisture levels is gauged by a lower
    Mean Squared Error (MSE), affirming the reliability of the methodology. C. System
    Framework Figure 1 illustrates architectural framework of the proposed IoT-based
    intelligent irrigation system. Among its seven fundamental components is a field
    data gathering apparatus featuring a relay switch in both Distinct and Wireless
    Sensor Network (WSN) scenarios. The system incorporates web services for tasks
    such as capturing field sensor data, accessing online weather forecasts, managing
    water motors, predicting soil moisture levels, implementing versatile web-based
    interfaces for monitoring in real time, and integrating IoT-enabled motor pumps.
    These components are systematically organized into three tiers, contributing to
    the system''s comprehensive functionality and efficiency. D. Field Data Collection
    Device In accordance with field requirements, an autonomous sensor node or a wireless
    sensor network composed of such nodes was strategically deployed. The data collection
    device utilized several sensors, comprising the VH -400 soil moisture sensor,
    the DHT22 temperature and humidity sensor, the soil temperature sensor, and the
    UV light radiation sensor based on the GUVA-S12SD and SGM8521 Op-Amp. The integration
    of a Raspberry Pi with an Arduino-Uno facilitated the retrieval of data from these
    sensors. A Python software application on the Raspberry Pi systematically collects
    sensor data at hourly intervals, storing it in an SQLite database. This database
    is seamlessly synchronized with the server database through a well-established
    web service protocol, ensuring efficient and consistent data management. The program
    code was written in Python language to design a web service that retrieves hourly
    sensor data stored on the Amazon Web Services (AWS) Aurora database synced with
    the EC2 container. E. Online Assistance for Collecting Data from Field Sensors
    The implemented online assistance, developed in Hypertext Preprocessor (PHP),
    employs a streamlined REST API to facilitate smooth data transmission between
    the server and the field device. Hosted on Apache, the web service operates on
    the server machine. The Raspberry Pi leverages this web service to effectively
    transmit field data to the server. Significantly, the web service incorporates
    indicator settings at the database level, ensuring resilience to network fluctuations
    or outages during the synchronization process of data sent to the server from
    the field device. This strategic design enhances the robustness and reliability
    of the data transfer mechanism. F. Online Weather Data Collection Web Service
    For the acquisition of weather forecasting data, a sophisticated Python web service
    has been developed. This web service not only collates a comprehensive set of
    various meteorological characteristics, such as humidity and temperature, cloudiness,
    UV Index, and precipitation but also extracts this information from various web
    forecasting portals such as Open Weather and AccuWeather via their respective
    APIs (API Reference, 2017; Weather API, 2012). The predicted data, which is usually
    offered in HTML, XML, or JSON formats, is then processed and stored in the server''s
    MySQL database using the web service''s API. This meticulously crafted infrastructure
    ensures the availability of accurate and timely projected data, which forms a
    crucial input for the prediction algorithm. Additionally, a REST API is employed
    for seamless data communication between the server and the field device, enhancing
    the overall efficiency of the system. G. Algorithm for Predicting Soil Moisture
    Employing a support vector regression model in conjunction with the k-means clustering
    technique, the study devised a sophisticated algorithm (refer to Fig. 2) to predict
    soil moisture levels, utilizing data from field sensors and weather forecasts.
    The algorithm not only presents real-time details on the moisture content of the
    soil for the days ahead ebut also provides intelligent recommendations for irrigation
    practices, optimizing water and energy usage based on predefined soil moisture
    thresholds and anticipated precipitation. The substantive findings of this algorithm,
    along with the corresponding device-generated data, are systematically stored
    in the MySQL Database on the server. A comprehensive discussion of the algorithm
    is presented in detail, elucidated in Fig. 1 for enhanced clarity. H. Real-Time
    Monitoring via a Responsive Web Interface To facilitate real-time monitoring and
    optimize irrigation scheduling, a dynamic web-based user interface has been meticulously
    crafted using PHP, MySQL, and the Bootstrap API. This interface seamlessly presents
    real-time sensor data, forecasts of soil moisture for the upcoming days, and precipitation
    data Notably, it incorporates an intelligent irrigation scheduling feature, grounded
    in a predefined threshold value of soil moisture. In response to the anticipated
    soil moisture pattern and precipitation data, the system dynamically regulates
    the irrigation schedule to maintain the specified threshold. The automation feature
    ensures that the irrigation system commences automatically and halts when the
    soil moisture attains the predetermined threshold value, enhancing the efficiency
    and precision of irrigation practices. Figure 3: Soil Moisture Comparison Chart
    Show All I. Web Service for Controlling Irrigation To start and stop the water
    motor, a web service built on top of the HTTP protocol has been designed. The
    water motor is started and stopped using R-Pi Python code that accesses this web
    service. When the R - Pi is running Python code, it sends a signal to the Arduino-Uno,
    which manages the relay switch to turn on and off the water motor. J. Water Distribution
    With the Internet of Things Capabilities Incorporating a water pump within this
    module, a relay switch interfaces with a Wi-Fi-enabled node for seamless control.
    The web service orchestrates the node''s actions triggered by the adaptable web-based
    interface, which makes real-time observation possible. The web-based interface,
    in turn, empowers remote management of the water pump, offering both manual and
    automatic control modes for enhanced operational flexibility and efficiency real-time
    monitoring. SECTION IV. Results and Discussions The developed intelligent irrigation
    prediction system for the greenhouse was deployed using a genuine capacity for
    making decisions with machine learning capabilities. The methodology of this documentation
    describes the system''s conception and execution. To evaluate the performance
    of the developed system, the sensors were placed in a greenhouse, including light,
    soil moisture, and temperature and humidity sensors. The prediction accuracy of
    the soil moisture content determines how intelligent the developed solution can
    project futuristic irrigational requirements of the soil. The developed system
    predicted against actual soil moisture content data is represented in Table II.
    To evaluate the accuracy of the soil moisture prediction system, hourly field
    data on air temperature, air humidity, soil moisture, soil temperature, and UV
    are collected for three weeks. The hourly data from the three weeks have been
    averaged out each day, and the data from the 21 days were divided into two sets:
    a training set including 70% of the data and a testing set comprising 30% of the
    data, in order to test the proposed approach Using the suggested approach, an
    estimated Soil moisture Deficit (SMD) for the next days (Fig. 3), and the expected
    values of SMD were utilized to forecast soil moisture for the following days.
    The outcomes are listed in Table 1. The effectiveness of the proposed methodology
    hinges on the precision of the forecasted soil moisture values, as illustrated
    in Tables 4 and 5. A rigorous assessment for collecting hourly field data covering
    air temperature, air humidity, soil moisture, oil temperature, and UV over a three-week
    period is done to determine the accuracy of the soil moisture prediction system.
    This dataset is subsequently averaged on a daily basis, and the 21 days'' data
    is partitioned into a training set (70% of the data) and a testing set (30% of
    the data) for algorithm application. Employing the proposed algorithm, Soil Moisture
    Deficit (SMD) for the upcoming days is initially predicted (refer to Fig. 3).
    Subsequently, these predicted SMD values are utilized in forecasting soil moisture
    levels for the same timeframe. A comprehensive summary of the outcomes is presented
    in Table 1, providing insights into the algorithm''s performance and its reliability
    in predicting soil moisture dynamics. Table I. Correlation between the proposed
    algorithm and soil moisture values based on sensor data in terms of correlation,
    r-squared, and mse Table II. Sensor data and the results of the developed algorithm-based
    for soil moisture Table II, as depicted in Fig. 3, serves as a visual representation
    underscoring the significance of the two developed algorithmic predictions - namely,
    the forecasted soil moisture using the Soil Moisture Deficit (SMD) by Support
    Vector Regression (SVR) and the predicted soil moisture employing the SMD algorithm,
    i.e., (SVR + k-means). In the computation of SMD, the (SVR + k-means) methodology
    demonstrates superior accuracy and a reduced mean squared error compared to the
    SVR approach alone. Employing the recommended algorithm (SVR + k-means), the projected
    SMD yields results in closer alignment with the actual SMD, surpassing the accuracy
    achieved by SVR in isolation. Furthermore, in the estimation of soil moisture,
    the (SVR + k-means) strategy attains comparable accuracy and a diminished mean
    squared error relative to the SVR approach. The synergistic interplay between
    actual soil moisture content and predicted values is comprehensively presented
    in Table II and visually depicted in Fig. 3, offering a nuanced understanding
    of the algorithmic performance. SECTION V. Conclusion Soil moisture is an important
    factor to take into account when designing a smart irrigation system. Soil moisture
    is influenced by a number of meteorological variables, including air temperature,
    air humidity, UV radiation, soil temperature, etc. Technology breakthroughs have
    resulted in significantly more precise weather forecasts and the ability to forecast
    changes in soil moisture using the expected data. Thanks to technological developments,
    weather forecasts are now considerably more precise, and variations in soil moisture
    may now be predicted using the expected data. The system uses an IoT -based smart
    irrigation architecture implementing a predictive and smart irrigation system
    for a greenhouse. The system based on historical data predicts the required soil
    moisture for an adequate crop growth rate. In terms of accuracy and error rate,
    the predicted value for soil moisture is better. ACKNOWLEDGMENT The authors state
    that no funding was obtained for this study., but acknowledge Hagz Farm whose
    facility the research was carried out. Authors Figures References Keywords More
    Like This Arduino-based smart irrigation using water flow sensor, soil moisture
    sensor, temperature sensor and ESP8266 WiFi module 2016 IEEE Region 10 Humanitarian
    Technology Conference (R10-HTC) Published: 2016 Automatic irrigation system using
    soil moisture sensor and temperature sensor with microcontroller AT89S52 2017
    International Conference on Signal Processing and Communication (ICSPC) Published:
    2017 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2023 2nd International Conference on Multidisciplinary Engineering and
    Applied Science, ICMEAS 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT-Aided Intelligent Irrigation System Using Edge Computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Laha S.R.
  - Pattanayak B.K.
  - Pattnaik S.
  - Mishra D.
  - Kumar Nayak D.S.
  - Dash B.B.
  citation_count: '0'
  description: Managing soil moisture is crucial for optimizing crop growth and yield
    in agriculture. With the advancements in Internet of Things (IoT) technology,
    innovative soil moisture monitoring and control solutions have emerged. This paper
    presents a pioneering IoT -based soil moisture management system tailored for
    precision agriculture within Siksha 'O' Anusandhan (SOA) University. The system
    utilizes sensor nodes, wireless communication, and cloud computing to enable real-time
    monitoring and automated irrigation control, addressing the limitations of conventional
    manual approaches. Providing continuous, remote, and precise measurements of soil
    moisture levels revolutionizes how soil moisture is managed within the university's
    agricultural practices. Low-cost sensor nodes are strategically placed throughout
    the fields to collect data, which is wirelessly transmitted to a central hub for
    analysis and decision-making. A cloud-based platform processes the data, generating
    actionable insights and triggering automated irrigation when necessary. Extensive
    testing and validation demonstrate the system's reliability and ability to improve
    water use efficiency, surpassing traditional methods. Furthermore, the IoT architecture
    of the system offers scalability and flexibility, making it adaptable to different
    crop types and field conditions present within SOA University. This innovative
    research contributes to the field of precision agriculture by providing an efficient
    and tailored solution for soil moisture management within the university's agricultural
    practices. This IoT -based system enhances crop productivity by enabling real-time
    monitoring and automated irrigation control, promoting sustainable water resource
    utilization. Its implementation within SOA University fosters the integration
    of cutting-edge technology into agricultural practices, facilitating optimized
    crop growth and contributing to the university's commitment to environmental sustainability
    and resource management.
  doi: 10.1109/ICOSEC58147.2023.10276266
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 4th International Confer... An IOT-Based
    Soil Moisture Management System for Precision Agriculture: Real-Time Monitoring
    and Automated Irrigation Control Publisher: IEEE Cite This PDF Suprava Ranjan
    Laha; Binod Kumar Pattanayak; Saumendra Pattnaik; Debashree Mishra; Debasish Swapnesh
    Kumar Nayak; Bibhuti Bhusan Dash All Authors 113 Full Text Views Abstract Document
    Sections I. Introduction II. Proposed Work III. Methedologies Used IV. Experimentation
    & Model Evaluation V. Result Analysis & Validation Show Full Outline Authors Figures
    References Keywords Metrics Abstract: Managing soil moisture is crucial for optimizing
    crop growth and yield in agriculture. With the advancements in Internet of Things
    (IoT) technology, innovative soil moisture monitoring and control solutions have
    emerged. This paper presents a pioneering IoT -based soil moisture management
    system tailored for precision agriculture within Siksha ‘O’ Anusandhan (SOA) University.
    The system utilizes sensor nodes, wireless communication, and cloud computing
    to enable real-time monitoring and automated irrigation control, addressing the
    limitations of conventional manual approaches. Providing continuous, remote, and
    precise measurements of soil moisture levels revolutionizes how soil moisture
    is managed within the university''s agricultural practices. Low-cost sensor nodes
    are strategically placed throughout the fields to collect data, which is wirelessly
    transmitted to a central hub for analysis and decision-making. A cloud-based platform
    processes the data, generating actionable insights and triggering automated irrigation
    when necessary. Extensive testing and validation demonstrate the system''s reliability
    and ability to improve water use efficiency, surpassing traditional methods. Furthermore,
    the IoT architecture of the system offers scalability and flexibility, making
    it adaptable to different crop types and field conditions present within SOA University.
    This innovative research contributes to the field of precision agriculture by
    providing an efficient and tailored solution for soil moisture management within
    the university''s agricultural practices. This IoT -based system enhances crop
    productivity by enabling real-time monitoring and automated irrigation control,
    promoting sustainable water resource utilization. Its implementation within SOA
    University fosters the integration of cutting-edge technology into agricultural
    practices, facilitating optimized crop growth and contributing to the university''s
    commitment to environmental sustainability and resource managem... (Show More)
    Published in: 2023 4th International Conference on Smart Electronics and Communication
    (ICOSEC) Date of Conference: 20-22 September 2023 Date Added to IEEE Xplore: 16
    October 2023 ISBN Information: DOI: 10.1109/ICOSEC58147.2023.10276266 Publisher:
    IEEE Conference Location: Trichy, India SECTION I. Introduction Water is a basic
    necessity for all the life forms on Earth [1], [2]. It is well known that water
    is the main reason behind Earth being the only living planet. It is impossible
    for any living being to live without water [3], [4]. Without water, a plant cannot
    perform its essential photosynthesis. It is understandable that if the problem
    of water scarcity continues to increase, it will remove the greenery in the future.
    As a result of which, there will be less rainfall. Water is also essential for
    agricultural production and food security [5]–[7]. Technology has always served
    to overcome such problems and to make lives easy with its innovations. Here through
    this study one such solution is introduced, named ‘lOT based Soil Management System,’
    a model for controlling irrigation that uses IoTto sense soil moisture with temperature
    and humidity of the surroundings with a microcontroller to make an intelligent
    irrigation system to help millions of farmers and University gardeners [8], [9].
    Soil moisture is critical to plant growth, and maintaining the right amount of
    moisture can help plants grow faster and produce better yields. An efficient soil
    moisture management system can help conserve water by reducing the water needed
    for irrigation [10], [11]. A soil moisture management system can help reduce water
    usage and lead to cost savings of water bills and other expenses. By managing
    soil moisture levels, it helps to maintain soil health and reduce erosion, which
    is essential for sustainable agriculture [12]–[14]. Farmers and growers can proactively
    avoid drought conditions and other weather-related risks that can harm crops by
    monitoring soil moisture levels [15]–[17]. To evaluate the link between soil moisture
    readings acquired from soil moisture sensors and the gravimetric approach, a study
    was conducted at the Water Technology Centre farm (WTC) at Hyderabad based college
    [18]. In 2021, Fengfei et al.''s Portable PHS Method for Moisture in the Soil
    Monitoring Based on Thermal Effect is implemented. The results were compared to
    those obtained using the drying procedure, confirming the practicality of the
    suggested method [19]. In 2019, G. S. Swileam et al. assessed soil heterogeneity
    utilising electrical resistance for typical alluvial soils in Egypt [20]. In 2018
    smith et aI., proposed a system for efficiently maintaining optimal soil moisture
    levels for crops using various traditional soil management systems [21]. Gupta
    et al. (2020) analyze whether rooftop harvesting of rainwater and outline bunding
    enhances the moisture in the soil. Their effects on yields of crops, availability
    of water, and soil moisture management are examined [22]. Contour plowing, terracing,
    and checking dams in arid environments are the main focus of this study by Patel
    et al. It assesses their ability to reduce soil moisture evaporation and increase
    water retention [23]. To measure the soil moisture content, humidity, and temperature
    using Raspberry Pi Pico and other sensors to minimize the over-watering and under-watering
    of plants. This paper deals with multiple sensors/modules and Raspberry Pi Pico
    to measure the current readings of the soil & surrounding of the University plants,
    analyze them, display the measurements on the webpage, and automatically water
    the plants when required by connecting them to a water pump. IoT-based soil management
    systems can collect real-time data on soil moisture levels, weather conditions,
    and other relevant factors. This enables farmers and growers of the university
    to make data-driven decisions and respond quickly to changes in soil moisture
    levels. Farmers and growers can remotely monitor soil moisture levels and other
    factors with this system. This can save time and reduce the need for manual labor
    in the field. The curated system can automate the irrigation process based on
    soil moisture levels and other data. Intelligent systems can help reduce water
    waste and improve crop yields. IoT -based soil management systems can be easily
    scaled to accommodate more significant areas of farmland or garden spaces in universities.
    These innovative systems are also suitable for large-scale agricultural operations
    and smaller-scale applications. SECTION II. Proposed Work This IoT -based system
    deals with multiple sensors/modules and Raspberry Pi Pico to measure the current
    readings of the soil & surroundings, analyze them, display the measurements on
    the website, and automatically water the plants when required by connecting to
    a water pump. The system uses micro python to interface the sensors and modules
    with the microcontroller Raspberry Pi Pico. This project deals with the automatic
    watering of plants whenever the moisture, humidity, and temperature level decreases
    to a specific standard limit. The working of proposed model consists of a soil
    moisture sensor and a temperature humidity sensor, which tracks the soil moisture
    along with the humidity and temperature of the surroundings. When the measurements
    exceed the required standard readings, the relay directs the motor to pump water
    to plants. This model will benefit people with large patches of gardens, Universities,
    or those farther from their places. The proposed system has advantages in reducing
    costs, restricting water waste, and minimizing physical interference. It also
    promotes irrigation that requires little maintenance and is environmentally friendly.
    In order to regulate the water flow, a relay module has been installed. The model
    shows expected impacts at various levels of humidity and temperature. Figure 1
    shows the proposed model of our IoT -based system. Fig. 1: Proposed IoT-based
    system for Soil Moisture management system Show All SECTION III. Methedologies
    Used The Soil Moisture Sensor yields real-time data in the form of an analog.
    Analog to Digital (A/D) and data conditions are converted using Raspberry Pi Pico
    Microcontroller. The Microcontroller is used to acquire real-time soil moisture
    using a soil moisture sensor. The Thonny Integrated Development Environment (IDE)
    is a cross-platform application that supports high-level programming languages
    like Python. The IDE makes writing code and uploading the source program to the
    board easy. It contains libraries and cores. The samples are measured from low
    to High moisture contents of the soil. The gardener can get the processed data
    through the webpage with the help of Wireless Fidelity (Wi-Fi) Technology. This
    system can give real-time data on soil moisture. The Soil moisture system is connected
    to the web page. We have interfaced the soil moisture sensor, DHTII Module, and
    relay with a Raspberry Pi Pico to measure the volumetric concentration of water
    inside the soil and the humidity and temperature of the surroundings. This system
    uses Raspberry Pi Pico as a microcontroller, which is then connected to the Moisture
    Sensor, which measures the soil''s moisture content. Raspberry Pi Pico acts as
    the central brain of the IoT-based soil moisture management system, responsible
    for data collection, processing, analysis, communication, and automated control.
    It is also linked to DHT -11, the Temperature and Humidity sensor, which measures
    the ambient temperature and humidity. The Pico is also connected to the Wi-Fi
    module ESP-Ol, bridging the divide between the hardware and software components
    of the system shown in fig. 2. The measurements of the above sensors and modules
    and the standard measurements will subsequently be displayed for users on our
    self-designed website using the ESP-Ol. Fig. 2. Schematic Layout of our Proposed
    System Show All SECTION IV. Experimentation & Model Evaluation The proposed intelligent
    system captures data in real-time using a range of sensors and modules shown in
    fig. 5. University gardeners use these sensors to assess soil and environmental
    conditions. The soil management system we built is responsible for several duties.
    It begins by measuring the soil moisture content using a capacitive soil moisture
    sensor and then monitors the humidity and temperature of the surrounding environment
    with a DHTII Module. All plants have a threshold value set to standard soil moisture
    content for home/university gardeners. When the moisture level falls below the
    set standard/threshold level, the relay module turns the Motor On and begins pumping
    water to the plants from the tank until the moisture level returns to the desired
    level. The measurements mentioned above’ readings will be shown on a website built
    with the ESP-OI, which we designed with HTML and CSS and coded in Python. Fig.
    3 shows the hardware connection of sensors/modules to Raspberry Pico and figure
    4 depicts the Circuit diagram of the connection of all the sensors, modules, and
    motors. Fig. 3. Hardware connection of sensors/modules to Pico Show All Fig. 4.
    Circuit diagram of our proposed System Show All Fig. 5. Experimental model of
    our proposed System Show All SECTION V. Result Analysis & Validation The analysis
    of the results demonstrates the efficacy of IoT-based watering systems in sustaining
    optimal soil moisture levels for plant growth in the university. These systems
    provide optimal irrigation, water conservation, improved plant health and growth,
    resource efficiency, data-driven insights, remote monitoring and control, and
    flexibility. Using IoT technology, plant owners, farmers, and gardeners can achieve
    precise and effective watering techniques, resulting in healthier and more robust
    plants. The moisture reading experiments conducted at our University on different
    plants and shrubs can provide valuable insights into plant water requirements
    and watering patterns shown in fig. 6. Fig. 6. Soil moisture reading experimentation
    done at our University''s Plants & Shrubs Show All The collected data on moisture
    readings from the different plants and shrubs helps in understanding their specific
    water requirements and watering patterns. This IoT-based system enables informed
    decision-making regarding irrigation scheduling, optimization of water management
    practices, and adjustment of watering parameters based on the specific needs of
    each plant species. The model then starts measuring and taking the readings displayed
    on the Thonny Shell shown in fig. 7. Table I shows the soil moisture readings
    from the capacitive soil moisture sensor & level of accuracy of the sensor when
    compared to the recommended moisture level. Fig. 8 depicts the soil moisture level
    and the recommended moisture needed for the plants. The relationship between soil
    moisture levels and the recommended moisture level for plants is graphically represented
    in Figure 8. Individuals can make informed decisions to promote healthy plant
    growth, conserve water, and preserve natural and agricultural ecosystems by comprehending
    this relationship. Gardeners can decide when and how much to water their plants
    by monitoring soil moisture and using the specified range. Avoiding under watering
    and overwatering optimizes plant growth and conserves water. Water management
    influences the ecological balance and is essential for plant and animal survival.
    Fig. 9, the online snapshot showing the moisture reading, promotes transparency,
    engagement, and accessibility, enhancing your research''s effect. It supports
    the study''s findings and contributes to broader educational and practical applications,
    promoting sustainable water management and nurturing collaboration within the
    scientific community. Fig. 7:. Thonny Shell displaying sensors readings Show All
    Fig. 8. Levels of soil moisture of different Plants Show All Fig. 9. Self-designed
    Web showing sensor and module readings Show All Table I. Readings from the capacitive
    soil moisture sensor along with the accuracy of the sensor SECTION VI. Conclusion
    & Futurescope In this study, we an intelligent soil moisture management system
    at Siksha ‘O’ Anusandhan (S ‘O’A) University using IoT technology is developed
    and implemented. The system utilizes sensor nodes, wireless communication, and
    cloud computing to enable real-time monitoring and automated irrigation control.
    Through extensive testing and validation, the study demonstrates the system''s
    reliability and ability to improve water use efficiency compared to traditional
    methods. The IoT -based architecture of the system offers scalability and flexibility,
    making it adaptable to different crop types and field conditions within the university.
    The system revolutionizes soil moisture management practices by providing continuous,
    remote, and precise measurements of soil moisture levels. This contributes to
    the field of precision agriculture by offering an efficient and tailored solution
    for optimizing crop growth and yield. The implementation of this IoT -based system
    within SOA University promotes the integration of cutting-edge technology into
    agricultural practices. It enhances crop productivity by enabling real-time monitoring
    and automated irrigation control, leading to sustainable water resource utilization.
    Moreover, it aligns with the university''s environmental sustainability and resource
    management commitment. The smart soil moisture management system developed in
    this research has the potential to significantly benefit gardeners and farmers
    of the university by reducing labor, saving time, and increasing crop yields while
    minimizing damage. Furthermore, the system''s capability to conserve water and
    resources contributes to a more sustainable and environmentally friendly approach
    to agriculture. However, this research highlights the importance and effectiveness
    of IoT -based soil moisture management systems in precision agriculture. It showcases
    the potential for using advanced technologies to optimize crop growth, improve
    water management practices, and create a more sustainable future. Authors Figures
    References Keywords Metrics More Like This Greenhouse smart irrigation based on
    soil moisture and vegetation index measurements 2023 IEEE Conference on Technologies
    for Sustainability (SusTech) Published: 2023 Irrigation pivot-center connected
    at low cost for the reduction of crop water requirements 2018 International Conference
    on Advanced Communication Technologies and Networking (CommNet) Published: 2018
    Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT
    OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings of the 4th International Conference on Smart Electronics and
    Communication, ICOSEC 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'An IOT-Based Soil Moisture Management System for Precision Agriculture:
    Real-Time Monitoring and Automated Irrigation Control'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Rani T.O.G.
  - Goudar S.S.
  - Chethan M.
  - Harshitha M.
  - Shashank Raju K.
  - Sinchana K.R.
  citation_count: '0'
  description: This paper aims to implement a wireless sensor network to automate
    greenhouse operations, with the primary objective of achieving optimal plant growth
    conditions. To effectively monitor crucial micro-climatic parameters such as temperature,
    soil moisture, light, pH, and salinity, the system employs slave unit sensor nodes
    equipped with a diverse array of sensors. Additionally, a mobile application is
    utilized to enable farmers to set customized threshold values for each parameter,
    granting them complete control over the greenhouse environment via their mobile
    devices. These threshold values serve as benchmarks to ensure that the growing
    conditions remain within desired ranges. Multiple slave units have been strategically
    deployed throughout the greenhouse to ensure comprehensive and accurate data collection.
    Each slave unit actively collects sensor data and efficiently transmits it wirelessly
    to the central master unit. The master unit plays a vital role in the automation
    process by receiving the data set by the mobile application and meticulously comparing
    it with the real-time data received from the slave units. This meticulous comparison
    allows the system to precisely assess the current conditions against the desired
    threshold values. Based on this comparison, the system takes prompt actions to
    regulate and maintain the most favorable growing conditions for the plants, optimizing
    their growth potential. An essential aspect of this system's design is the integration
    of edge computing, enabling localized processing and decision-making. This approach
    significantly reduces latency and dependence on constant cloud connectivity, ensuring
    that the system remains responsive and reliable, even in areas with limited network
    coverage. The implementation of this automated greenhouse system brings numerous
    benefits to agriculturists, as it alleviates the burden of manual monitoring and
    control. Instead, farmers can concentrate on strategic planning and overall agricultural
    management, optimizing their efforts for improved productivity. Moreover, the
    system's ability to maintain optimal growing conditions results in maximized crop
    yield while promoting resource-efficient and environmentally sustainable farming
    practices.
  doi: 10.1109/NMITCON58196.2023.10276317
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 International Conference... Monitoring
    and Control System for Green House Using Edge Computing Publisher: IEEE Cite This
    PDF T O Geetha Rani; Shobha S Goudar; Chethan M; Harshitha M; Shashank Raju K;
    Sinchana K R All Authors 27 Full Text Views Abstract Document Sections I. Introduction
    II. Related Work III. The System Overview IV. Implementation V. Results Show Full
    Outline Authors Figures References Keywords Metrics Abstract: This paper aims
    to implement a wireless sensor network to automate greenhouse operations, with
    the primary objective of achieving optimal plant growth conditions. To effectively
    monitor crucial micro-climatic parameters such as temperature, soil moisture,
    light, pH, and salinity, the system employs slave unit sensor nodes equipped with
    a diverse array of sensors. Additionally, a mobile application is utilized to
    enable farmers to set customized threshold values for each parameter, granting
    them complete control over the greenhouse environment via their mobile devices.
    These threshold values serve as benchmarks to ensure that the growing conditions
    remain within desired ranges. Multiple slave units have been strategically deployed
    throughout the greenhouse to ensure comprehensive and accurate data collection.
    Each slave unit actively collects sensor data and efficiently transmits it wirelessly
    to the central master unit. The master unit plays a vital role in the automation
    process by receiving the data set by the mobile application and meticulously comparing
    it with the real-time data received from the slave units. This meticulous comparison
    allows the system to precisely assess the current conditions against the desired
    threshold values. Based on this comparison, the system takes prompt actions to
    regulate and maintain the most favorable growing conditions for the plants, optimizing
    their growth potential. An essential aspect of this system''s design is the integration
    of edge computing, enabling localized processing and decision-making. This approach
    significantly reduces latency and dependence on constant cloud connectivity, ensuring
    that the system remains responsive and reliable, even in areas with limited network
    coverage. The implementation of this automated greenhouse system brings numerous
    benefits to agriculturists, as it alleviates the burden of manual monitoring and
    control. Instead, farmers can concentrate on strategic planning and overall agricultural
    ma... (Show More) Published in: 2023 International Conference on Network, Multimedia
    and Information Technology (NMITCON) Date of Conference: 01-02 September 2023
    Date Added to IEEE Xplore: 17 October 2023 ISBN Information: DOI: 10.1109/NMITCON58196.2023.10276317
    Publisher: IEEE Conference Location: Bengaluru, India SECTION I. Introduction
    Climate change introduces us to many problems and the challenge is intensified
    by agriculture''s extreme vulnerability to climate change. Climate change is already
    having a negative impact, with rising temperatures, increased weather variability,
    shifting ecosystem boundaries, invasive crops and pests, and more frequent extreme
    weather events. The solution for such a problem is a controlled environment such
    as a greenhouse, also called a glasshouse, which is a building designed for the
    protection of tender or out-of-season plants against excessive cold or heat. Maintenance
    and working in the greenhouse are tough as the knowledge of multiple parameters
    such as Electric Conductivity (EC), pH, light intensity, humidity, moisture, and
    temperature is required. This procedure simplified the problem of obtaining the
    reading and the steps required to preserve the plants in a controlled environment.
    Here, drip irrigation is automated to water the plants in a regulated manner on
    a regular basis. Also, it aims to maintain pH and EC using water, by adding fertilizer
    and salt to control pH and EC [1]. Install automated light bulbs and curtains
    to control the light received by the plants in a regulated manner based on the
    plant''s requirements. For example, Gerbera is commercially propagated through
    the division of clumps (suckers). Tissue-cultured plants, on the other hand, can
    be used for commercial flower production. Day temperature of 22- 300C and night
    temperature of 120C to 160C is ideal for growth and flower production. An adequate
    amount of shade net (50%) must be provided to regulate excess light and temperature.
    Humidity should be maintained at 60% Farmers need frequent visits to their farms
    for tasks like watering and fertilizing, which can be costly and time-consuming.
    As agricultural lands grow, remote monitoring and management systems are becoming
    more prevalent. However, weak or inadequate internet connectivity can hinder remote
    farm monitoring and control. The Internet of Things is typically used in agriculture
    through a monitoring network with numerous sensor nodes. Using edge computing,
    which distributes the cloud server burden and reduces wait times, could help address
    this issue. Edge computing applications include pest identification, product safety
    tracking, autonomous equipmentuse, promoting agricultural technology, and intelligent
    management [2]. The paper is divided into 6 sections. Section 1, consists of an
    introduction and motivation. In section 2, a detailed literature review is presented.
    Section 3 consists of the system overview which includes information about the
    slave unit, master unit, methodology, and block diagrams. Section 4 is all about
    hardware and software implementation with all flowcharts. Section 5 explains about
    Results. In Section 6, the conclusion is mentioned. SECTION II. Related Work Greenhouses
    are structures, either with frames or inflated, that are covered with transparent
    materials. They are designed to provide a suitable environment for plant growth,
    allowing for optimal growth and productivity by controlling environmental-mental
    conditions to a partial or full extent. This section includes research done in
    Smart Greenhouse monitoring Systems and EDGE Computing. An automatic irrigation
    system using edge nodes has beenproposed that is unaffected by communication delay
    and disconnection [3]. The Jetson Nano and Raspberry Pi 3 Model B were evaluated
    as edge node candidates andthe Jetson Nano was found to perform better at hightemperatures.
    The system can be used to evaluate AImodels and determine water stress for crop
    cultivation. It is currently used for high sugar tomato cultivation in Japan with
    manual parameter management. An Intelligent IoT-based Automated Irrigation system
    has been developed that captures sensor data on soil moisture and temperature.
    The data is communicated to a Raspberry Pi3 control unit where a KNN machine learning
    algorithmis used for analysis and irrigation prediction. The system is developed
    using cheap embedded systems such as Raspberry Pi 3 and Arduino Uno [4]. A wireless
    sensor network is used to gather data for the prediction of energy and water requirements
    for maintaining a greenhouse''s climate [5]. The input data from sensors is processed
    using fuzzy logic methods to produce output data. The greenhouse is managed and
    monitored through an Android-based user interface. The paper [6] presents a system
    architecture that integrates artificial intelligence at the local network layer
    for smart agriculture and farming applications. Edge and Fog computing, as well
    as LPWAN technology, are used to extend functionality and solve the low-bandwidth
    transmission challenge of LPWAN technologies. The system includes a sensor node,
    an Edge gateway, LoRa repeaters, a Fog gateway, cloud servers, and an end-user
    terminal application. The article in [7], discusses the potential of wireless
    sensors and IoT in agriculture and the challenges of integrating this technology
    with traditional farming practices. It lists the available sensors for soil preparation,
    crop status, irrigation, and insect/pest detection, and how this technology helps
    the growers throughout the crop stages. Applying the fuzzy logic method to the
    input data from sensors (temperature and humidity sensors, such as the DHT11)
    has produced the output data. Through an Android-based user interface, the writers
    manage andkeep an eye on the greenhouse [8]. A greenhouse smartphone monitoring
    system has been suggested that combines Eclipse''s Android programming tools and
    Visual Studio''s C++/MFC. The system offers strong cross-platform and secondary
    development portability, enabling real-time data interchange between client software
    and the core module [9]. The article [10] provides a comprehensive overview of
    important technologies like blockchain and artificial intelligence used in agriculture
    to inform consumers about the products they consume. The research also sheds light
    on difficulties encountered with tasks like task assignment, data analysis, service
    stability, and privacy protection. Edge AI, also known as local network layer
    artificial intelligence, enables smart farming and agricultural applications using
    edge and fog computing as well as LPWANtechnology for extensive coverage. Moving
    data analyticsand compression close to end devices solves the low-bandwidth transmission
    issue of LPWAN technologies. The system [11], [12] includes a sensor node, an
    Edgegateway, LoRa repeaters, a Fog gateway, cloud servers, and an end-user terminal
    application. The article discusses the impact of IoT-based technologies on smart
    agriculture and the potential of wireless sensors. It lists sensors for various
    agricultural applications and explains how they aid farmers throughout the production
    process. The article also highlights modern IoT-based agricultural systems and
    platforms. The article [13] highlights the state-of-the-art IoT-based architectures
    and platforms used in agriculture. The system that forecasts how much water and
    energy willbe needed to keep greenhouse climate factors like soil moisture, relative
    humidity, and temperature stable. Using a wireless sensor network, node packs
    arranged in a star topology are used to gather the data needed for predictions.
    The papers [14], [15] discusses the advantages of advanced wireless sensor networks
    for soil sampling processes, the challenge of maintaining power supply, and the
    potential of ambient energy harvesting as a solution, while also noting the current
    limitations of battery less sensor nodes for extensive environmental monitoring.
    The paper presents a Wireless SensorNetwork prototype with MicaZ nodes for monitoring
    temperature, light, pressure, and humidity in greenhouses, sharing measurement
    data through the Internet of Things for remote control by farmers via mobile phones
    or computers. The paper explores the automation of greenhouse monitoring systems
    using edge nodes, automated plant watering, and sensors to track temperature,
    light, humidity, and soil moisture. It highlights the significance of also monitoring
    soil pH and EC, which can be challenging when dealing with multiple plantation
    areas. To address this, a mobile application and a master-slave unit are proposed,
    enabling the owner to manage all parameters remotely and efficiently across different
    greenhouse sections. SECTION III. The System Overview The system consists of both
    hardware and software technologies. The following sections describe the methodology
    and the block diagram of the system. The goal of this Paper is to fully automate
    a greenhouse shown in Fig. 1. There are three parts in the system, 1. Mobile Application.
    2. Slave unit. and 3. Master Unit. The Mobile application is used to set the parameters
    with respect to the plantation area. The Slave units are implemented in the plantation
    area of the greenhouse and used to sense the temperature, light, moisture, pH,
    and salinity using multiple sensors. The sensed data are sent to the master unit
    wirelessly. The data received from the Slave unit is to the master unit. The master
    unit will take appropriate action to control parameters in the greenhouse with
    respect to the data set by the owner through the mobile application. To regulate
    the pH, EC, temperature, and moisture, a separate solution is prepared and kept
    in a tank. The app helps the user (Farmer)to view the greenhouse condition and
    change, control, and setparameters for the plants as required remotely. The app
    also contains default parameters to set for specific plants. Fig. 1. Block Diagram
    of Greenhouse. Show All A. Mobile Application The owner-specified plant''s threshold
    values for temperature, moisture, light, and soil pH are set using a mobileapplication.
    Users must first sign up and log in using the same email. Users can set data in
    2 modes in the application. The first one is done manually using a slider as shown
    in Fig. 2(a), and if the plant owner is unaware of its specifications, they can
    simply choose the plant type as shown in Fig. 2(b). In accordance with the owner''s
    threshold valve, the master unit will take the appropriate action. Fig. 2. (a)
    Login page of app. (b) Manual setting using slider and Plant type selection. Show
    All B. Slave Unit The Slave unit consists of temperature, luminosity, pH, and
    soil EC sensors along with a microcontroller i.e., ESP32 as shown in Fig. 3. The
    sensor node senses the environmental parameters such as temperature, luminosity,
    soil pH, EC, and Moisture inside the greenhouse with the help of DHT11, light,
    pH, and EC (JXBS-3001-EC-RS-I) sensors respectively. The sensed data is sent to
    the Master unit wirelessly. Multiple slave units are deployed at strategic points
    of the greenhouse. The control signals from these different nodes communicate
    with the master unit. Fig. 3. Slave Unit Show All C. Master Unit As shown in Fig.
    4, the proposed system''s master unit consists of a microcontroller (ESP32), solenoid
    valves, and a diaphragm motor. The control signals from the sensor nodes are received
    by the Master unit from the slave unit. The received data from the slave unit
    is stored locally and also transferred to the cloud using ESP32 module and analyzed
    as an edge node. The control signals indicate the conditions prevalent in the
    greenhouse. The control signals are relayed to the microcontroller which processes
    the data and necessary actions such as bringing the temperature down using the
    humidifiers, improving the lighting conditions maintaining using artificial lighting.
    Soil with a pH level below 6.5 is considered acidic and requires the amendment
    of lime, while soil with a pH level above 8.5 is categorized as acidic soil and
    requires the amendment of gypsum which is added to the soil by mixing it with
    water controlled by the solenoid valves. If the EC level of the soil exceeds the
    established threshold, which indicates the presence of saline soil, and the recommended
    solution is leaching to flush out the excess salts. Fig. 4. Master Unit Show All
    SECTION IV. Implementation A. Hardware The system hardware in the slave unit consists
    of Soil EC sensor, pH sensor, Light sensor, DHT11, Moisture sensor and ESP32 module.
    The primary responsibility of the slave unit is to gather and transmit data to
    the master unit about all sensed data. Fig. 5 explains the complete system design
    of slave circuit. The complete design of the master unit circuit is provided in
    Fig. 6. The primary role of the master unit is to regulate the soil''s acidic
    pH, base pH, temperature, moisture, and electrical conductivity (EC) using solenoid
    valves. These valves are controlled by the ESP32 microcontroller integrated into
    the master unit. The working of solenoid valves depends on the data sent by slave
    unit to master unit. Master unit controls solenoid valves so that the environment
    is suitable for greenhouse plants. Pumping solution out of tanks for drip irrigation
    is done with a diaphragm motor. Fig. 5. Circuit of Slave Unit Show All Fig. 6.
    Circuit of Master Unit. Show All B. Flowchart This Paper employs software technologies
    to build user-facing applications, and it stores all of the data it has gathered
    on the cloud. A mobile application was created to update the preloaded data and
    configure the threshold parameters for the particular plantation. The user (owner)
    must first register and log in for the same account in order to manually set the
    parameters using the slider and establish a set of settings, particularly for
    the plantation area. The mobile application''s flowchart, as shown in Fig. 7.
    Fig. 8 explains how the slave unit operates. Fig. 7. Mobile Application flow graph
    Show All Fig. 8. Slave unit flow graph Show All The slave unit collects data from
    all sensors and transmits it to the master unit as soon as it receives power.
    Themaster unit flow will be managed in accordance with the data sent, as shown
    in Fig. 9. The water solution value will open and the motors will pump to maintain
    the soil''s moisture levelif the moisture value falls below the threshold value.
    Then, if the temperature data exceeds the threshold, sprinklers are utilized to
    maintain the temperature. Fig. 9. Master unit flow graph Show All Acid solution
    is used when the pH value exceeds the threshold. Base solution is used when the
    pH value is below the threshold. A motor will pump solutions to keep the pH of
    the soil stable. Then, with the aid of lights, intensity is adjusted by comparing
    light intensity with the threshold value. SECTION V. Results As a case study,
    the Gerbera plants are chosen for implementing and testing the proposed work in
    real-time. Table I represents the ideal environmental conditions for the growth
    of the Gerbera plant. The outcomes of the work are presented in the subsequent
    sections. Table II shows the greenhouse monitoring system can deviate from ideal
    values for optimal plant growth conditions. However, after deployment and operation,
    these parameters are effectively controlled and regulated, resulting in improved
    plant cultivation conditions. The mobile application login success depicted in
    Fig. 2 signifies thatusers have gained access to the system. The cloud-based infrastructure
    empowers real-time monitoring of greenhouse conditions while offering manual parameter
    customization and plant type selection, enhancing usability and adaptability.
    Table I. Ideal Values of the Parameters for Gerbera Plant Table II. Comparison
    of Parameters Inside Greenhouse Before and After Controlling to That of Ideal
    Values The model implementation displayed in Fig. 12 showcases the master unit
    and slave units, forming an efficient architecture for data processing and control.
    Fig. 10 and Fig. 11 provide avisual representation of all parameters before and
    after monitoring and control, taking into account the user mobile application''s
    threshold value. These figures illustrate the changes in various measured quantities
    and how they compare to the set threshold. The visual representation presents
    a clear overview of the parameter values, allowing users to assess the effectiveness
    of the monitoring process and identify any deviations from the desired threshold.
    The successful uploading of all slave unit data shown in Fig. 13 through the app
    enables real-time monitoring. Finally, Fig. 14 demonstrates the successful testing
    conducted in the greenhouse, validating the system''s effectiveness in maintaining
    optimal growing conditions. From survey, so far pH and EC in real time is not
    implemented but in this paper both pH and EC are controlled. Fig. 10. (a), (b),
    (c) and (d) are Light Intensity before, after monitoring and Temperature of the
    greenhouse before and after monitoring respectively Show All Fig. 11. (a), (b),
    (c) and (d) are pH before, after monitoring and Soil moisture of soil before and
    after monitoring respectively Show All Fig. 12. Greenhouse implementation Show
    All Fig. 13. Control Page with various parameters. Show All Fig. 14. Real-time
    implementation of the system. Show All SECTION V. Conlusion The proposed system''s
    primary contribution is focused on maintaining the soil pH within the desired
    range. Users have the ability to set all relevant parameters using a mobile application.
    Additionally, all processing tasks carried out by the master unit are efficiently
    performed through edge computing. This ensures effective soil pH regulation and
    simplifies the greenhouse management process for users. Smart greenhouse monitoring
    using edge computing was tested in real time at Akshaya nursery near Gulur. As
    part of the proposed work, the master unit and slave unit both underwent successful
    design and testing. The master unit has the ability to control all greenhouse
    parameters, enabling thorough management. The data from the slave unit can be
    successfully updated to the cloud system, guaranteeing precise and real-time monitoring
    of the greenhouse environment. Two slave units are used to get the soil and environment
    conditions such as Soil pH, temperature, moisture, and light intensity. A master
    unit is used to control the different solenoid valves to let the different solutions
    flow into the plantation area to maintain the soil pH, moisture and control the
    artificial lighting according to requirements based on edge computing. A mobile
    application that allows users to manually change parameters based on plant type
    has also been developed. For quick and personalized control of greenhouse conditions,
    this app offers a user-friendly interface, with these developments able to automate
    the greenhouse, which improved plant growth and reduced manual labor. Edge computing
    eliminates processing delays in greenhouse automation systems by completing processes
    faster, typically within 3–4 minutes. This local data processing and decision-making
    reduces latency, enhancing efficiency andresponsiveness, allowing timely actions,
    and minimizing delaysin critical processes. Authors Figures References Keywords
    Metrics More Like This IoT enabled plant soil moisture monitoring using wireless
    sensor networks 2017 Third International Conference on Sensing, Signal Processing
    and Security (ICSSS) Published: 2017 A 1.2-V 1.35-μW all MOS temperature sensor
    for wireless sensor networks 2015 IEEE International Symposium on Circuits and
    Systems (ISCAS) Published: 2015 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2023 International Conference on Network, Multimedia and Information Technology,
    NMITCON 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Monitoring and Control System for Green House Using Edge Computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Raikar M.M.
  - S M M.
  citation_count: '0'
  description: Internet of Things (IoT) has evolved and penetrated in different sectors
    such as healthcare, agriculture, manufacturing, transportation, and logistics.
    The IoT services are deployed in the cloud for accessing it virtually independent
    of location. The data-intensive IoT applications when deployed in the cloud have
    high response time. To overcome this challenge, the fog computing techniques is
    proposed to access the data from the sensors in real time. In this paper, the
    Fog-enabled IoT architecture for precision agriculture is presented. Precision
    agriculture is the usage of information technology to increase yield of crops
    and improve health of plants by ensuring accurate and controlled supply of nutrients.
    The sensors are deployed in the fields, and data is sent to the edge devices used
    for improving the produce. The different services available are automated irrigation
    and fertigation, recommendation by experts, decision support system, and protection
    from rodents. The farmers can subscribe to the service and make the best use.
    The advantage of Fog-enabled IoT is the reduction in round-trip time (RTT) compared
    to Cloud IoT architecture. The result demonstrates 40% reduction in RTT when Fog-enabled
    IoT architecture is used for different services.
  doi: 10.1007/978-3-031-15175-0_27
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Conference on Machine
    Learning and Big Data Analytics ICMLBDA 2022: Machine Learning and Big Data Analytics
    pp 329–339Cite as Home Machine Learning and Big Data Analytics Conference paper
    Fog Computing-Enabled Internet of Things for Resource Optimization Meenaxi M.
    Raikar & Meena S M   Conference paper First Online: 07 June 2023 390 Accesses
    Part of the book series: Springer Proceedings in Mathematics & Statistics ((PROMS,volume
    401)) Abstract Internet of Things (IoT) has evolved and penetrated in different
    sectors such as healthcare, agriculture, manufacturing, transportation, and logistics.
    The IoT services are deployed in the cloud for accessing it virtually independent
    of location. The data-intensive IoT applications when deployed in the cloud have
    high response time. To overcome this challenge, the fog computing techniques is
    proposed to access the data from the sensors in real time. In this paper, the
    Fog-enabled IoT architecture for precision agriculture is presented. Precision
    agriculture is the usage of information technology to increase yield of crops
    and improve health of plants by ensuring accurate and controlled supply of nutrients.
    The sensors are deployed in the fields, and data is sent to the edge devices used
    for improving the produce. The different services available are automated irrigation
    and fertigation, recommendation by experts, decision support system, and protection
    from rodents. The farmers can subscribe to the service and make the best use.
    The advantage of Fog-enabled IoT is the reduction in round-trip time (RTT) compared
    to Cloud IoT architecture. The result demonstrates 40% reduction in RTT when Fog-enabled
    IoT architecture is used for different services. Keywords MQTT Raspberry Pi Publish
    Subscribe Edge device Access provided by University of Nebraska-Lincoln. Download
    conference paper PDF 1 Introduction The Fog-enabled Internet of Things (IoT) architecture
    is used for resource optimization. The agriculture sector use case is considered
    for providing service to the farmers. The farmer can enable the services using
    the mobile application. The lightweight protocol is chosen for communication between
    the devices for energy-efficient transmission of the data. The network topology
    consists of heterogeneous nodes such as things and edge devices. The nodes in
    the network are power constraint devices; hence, the lightweight protocol is opted
    for the communication. The Message Queue Telemetry Transport (MQTT) is the lightweight
    protocol that is used for communication between the edge devices such as Raspberry
    Pi. The MQTT protocol uses publish-subscribe communication model. It is assumed
    that the service provider will have the infrastructure for facilitating the different
    services mentioned. The recommendation by experts regarding which crop to be grown
    in the field based on region, season, and climate conditions is available to the
    farmers. Advice related to the appropriate time for sowing the seed to get better
    yield is facilitated on request through mobile. This paper outlines the use of
    IoT devices such as rain sensor, soil moisture sensor, and temperature sensor
    to sense the agricultural data and store into edge device database. The stored
    data is monitored through big data analytics, and prediction is performed using
    data mining techniques. The energy efficiency is computed in terms of the packet
    size and the round trip time for the transmission of the data between the devices.
    The organization of the paper: In Sect. 2, related work on Fog IoT services is
    presented. In Sect. 3, the architecture for Fog IoT taking precision agriculture
    as a use case is described. The energy model for the Fog IoT devices is discussed
    in Sect. 4. The distance between the Fog IoT nodes, a factor to reduce latency,
    is presented in Sect. 5. The result analysis and conclusion is presented in Sects.
    6, and 7, respectively. 2 State of the Art in Fog-Enabled IoT Services In [1],
    the system that collects soil properties and stores it in cloud for further analysis
    is mentioned. It also speaks about building a scalable sensor data analysis for
    smart farming with commercially available IoT devices which reduces maintenance
    cost and provides data analytics resulting in increased crop yield. In [2], cloud-based
    IoT application for precision agriculture with three-layer architecture is described.
    The top layer deals with collecting information and applying necessary agricultural
    actions. The next layer connects the top layer to IoT. The last layer deals with
    data storage and processing. AgroTick, a novel hybrid system for smart agriculture,
    is discussed in [3]. AgroTick is an Internet of Things (IoT) system with a mobile
    interface that was created using technological modules such as cloud computing,
    embedded firmware, hardware, and big data analytics. AgroTick is built to increase
    agricultural efficiency, develop a well-connected farming network, and provide
    a knowledge-sharing platform for farmers. In [4,5,6,7], the lightweight protocol,
    Message Queue Telemetry Transport (MQTT), is the communication model used. It
    has opened its way in many sectors since its invention in 1999. The different
    cloud deployments and services available for the Internet users are presented
    in [8]. The various applications of IoT such as smart parking, waste management,
    and home automation are described in [9]. The power efficiency for IoT devices
    is enhanced using the software-defined networks (SDN) architecture [10]. The energy
    efficiency of the IoT devices is improved using load balancing and fault tolerance
    techniques [11]. The IoT services of the smart city are described in [12]. The
    6LoWPAN and CoAP protocol in development of the applications are presented in
    [13]. The security issues are concerns in the IoT network presented in [14, 15].
    3 Fog Computing-Enabled IoT Architecture The Fog computing-enabled IoT architecture
    for precision agriculture using lightweight protocol is shown in Fig. 1. The objective
    is to provide different service for farmers that aid in precision agriculture
    such as: 1. Irrigation and fertigation as a service 2. Crop-related decision support
    system as a service 3. Recommendation as a service 4. Pest control as a service
    The farmers have to subscribe for the services by registration process. The metering
    and billing module at the service provider (SP) side keeps track of the unit amount
    of resource utilized by the farmers. Irrigation and Fertigation As a Service:
    This service is used by farmers to irrigate and fertigate the land. The controlled
    amount of water and fertilizers are supplied to the plants based on the different
    parameters such as soil moisture content, temperature, and rainfall in the region.
    Crop-Related Decision Support System As a Service This service aids the farmer
    in making decisions related to the type of crop to be sowed or the suitable time
    for sowing in the region. To facilitate this service at the SP side, big data
    analytics technique are applied as shown in Fig. 1. Recommendation As a Service
    The farmers who have subscribed to this service get recommendation related to
    the crop. The data related to each farmers land is collected using sensors and
    stored at the data center for analysis. The data mining techniques are applied
    for recommendation to the farmers. Pest Control As a Service This service enables
    the farmers to combat the loss in yield due to pests and rodents. The automated
    fertigation unit is installed at the service provider location. The metering unit
    aids in determining the amount of unit consumed by the farmers for accounting
    and billing. The virtualization technique is applied for efficient utilization
    of resources at the data centers. The virtual private network (VPN) component
    enables the user to have private network for security reasons. These services
    are deployed at the edge device closer to the sensors to minimize the latency.
    In the Fig. 1, end devices could be the mobile, laptop, or the tablet. The services
    could be accessed using a browser or an application. The service response time
    could be greatly enhanced by deploying these on the edge devices closer to the
    sensors. In the next section, the energy efficiency model for fog IoT architecture
    is presented. Fig. 1 Fog-enabled IoT architecture using lightweight protocol Full
    size image 4 Energy Model for the Fog IoT Devices The evolution of Fog computing-enabled
    Internet of Things is at its peak as represented in Gartner’s predictions in the
    recent days. Here, the things connect to the Internet anytime, anywhere providing
    the ubiquity to the users. These things are fueled by energy sources. Hence, energy
    efficient utilization of the IoT resources is an important research domain. With
    the invention of Industrial IoT, the need for low power technology is increasing
    tremendously. Thus, the power consumption model for IoT applications plays an
    important role in network resource optimization. A trade-off is to be achieved
    between cost incurred, network lifetime, and the power consumption of the devices.
    The power efficiency model for IoT devices is presented in [16]. The effect of
    power consumption based on the traffic pattern in IoT devices of smart city applications
    is described in [17]. In an IoT application, energy is consumed during data acquisition,
    processing, and communication. The alternate to save energy is to use energy harvesting
    technologies, which is out of the scope of this paper. The analysis of energy
    in the life cycle of an IoT application is presented here. The objective is to
    minimize the power consumption of the IoT applications. In the literature, system
    level conservation of energy is described vastly. The focus of this paper is mainly
    from the perspective of energy consumption during communication between the devices.
    In an IoT application, the pattern observed is data acquisition by the sensors/things,
    processing performed by the controller, and the transmission of the data. Based
    on this pattern, the power consumption of the IoT application is broken into four
    different blocks. The first block being the power consumed at the system/device
    level (PSYS) to perform the operations at the operating system level. The second
    block being the power consumption during the data acquisition by the sensors/things
    (PDACQ). The third block is power consumed for processing (PPROC) and finally
    the power utilized for communicating between the networking devices (PCOMMN).
    The mathematical representation of the observed pattern in IoT application is
    given in Eq. (1). $$ {P}_{NDEV}={P}_{SYS}+{P}_{DACQ}+{P}_{PROC}+{P}_{COMMN} $$
    (1) With the main objective being the power conservation during communication,
    the lightweight protocol is used in the development of the IoT applications. The
    payload in case of lightweight protocol such as MQTT for IoT applications is 2
    bytes. Since the IoT devices are battery powered, the objective is to minimize
    the power consumed during transmission for increasing the network lifetime. 4.1
    Power Consumption Model for Data Communication The average power consumed during
    communication is represented as energy required to send a message (EM) and the
    time interval between consecutive messages (TM) as given in Eq. (2). $$ {P}_{COMMN}=\\sum
    \\limits_{k=1}^n\\frac{E_M^{(k)}}{T_M^{(k)}} $$ (2) where n is the number of messages
    sent during the experimental period and k varies from 1 to n. The factors that
    influence EM are based on whether it is a wired medium or wireless medium for
    transmission, embedded chip type on the sensor/thing and the period for every
    transmission. The IoT applications can be categorized into two types such as periodic
    and event trigger-based reporting. In case of periodic reporting such as temperature
    monitoring, the value for \\( {T}_{\\textrm{M}}^{(k)} \\) is constant. Therefore,
    Eq. (2) is rewritten as: $$ {P}_{COMMN}=\\frac{1}{T_M^0}\\sum \\limits_{k=1}^n{E}_M^{(k)}
    $$ (3) Here, \\( {T}_M^0 \\) is constant time interval between consecutive reporting
    instances. 4.2 Power Consumption Model for Data Acquisition The IoT applications
    are classified into two types such as periodic reporting and nonperiodic or event
    trigger-based reporting. The power consumption for the data acquisition is given
    by Eq. (4): $$ {P}_{DACQ}=\\left\\{\\begin{array}{c}{P}_{DACQ-1- SAMPLE}\\cdot
    {SN}_1.\\dots (periodic)\\\\ {}{P}_{DACQ-1- SAMPLE}\\cdot {SN}_2\\cdot \\Pr ob(E)\\end{array}\\right.
    $$ (4) where SN1 and SN2 are the number of samples for periodic and event trigger-based
    reporting, respectively. In case of the event trigger-based reporting, the probability
    of occurrence of an event (E) is taken into consideration. 4.3 Power Consumption
    Model of a System/Device The different states of a networking device are active,
    idle/sleep, transmit, and receive. The power consumption of a networking device
    (PSYS) is given as: $$ {P}_{SYS}={P}_{active}+{P}_{sleep/ idle}+{P}_{transmit}+{P}_{receive}
    $$ (5) The power consumption during each of these states is presented in this
    section. Data Transmission The power consumption for transmission of data in an
    IoT environment, considering periodic transmission, is represented as: $$ {E}_{DataTx}={P}_{DataTx}(mW)\\times
    {T}_M^0(ms)\\vspace*{-1.5pc} $$ (6) Data Reception Similarly, the power consumed
    to receive the data is given as: $$ {E}_{DataRx}={P}_{DataRx}(mW)\\times {T}_{Rx}(ms)
    $$ (7) where TRx(ms) is the duration for data reception. Active/Sleep Modes Based
    on the active and sleep modes of the networking device, power consumption is modelled
    as: $$ {P}_{active+ sleep}={P}_s\\times {T}_s+\\left({T}_{total}-{T}_s\\right)\\ast
    {P}_{active} $$ (8) where Ttotal and Ts are the total time spent and time spent
    in sleep mode, respectively. The power consumption of an IoT device can be reduced
    by increasing the sleep modes. Based on the deviation of the sensed data, the
    sleep modes can be increased for prolonged network lifetime. The deviation of
    the sensed data is computed as: $$ Deviation\\mbox{\\_ }of\\mbox{\\_ }sensed\\mbox{\\_}data=\\frac{\\sqrt{\\sum
    \\left({y}_i-\\mu \\right)}}{\\mu } $$ (9) where yi is the sensed data and μ is
    the mean computed for “n” sensed data values. μ is computed as \\( \\sum \\limits_{i=1}^n{y}_i/n
    \\). The data reduction is performed by monitoring the deviation in the data sensed.
    The voluminous data, variety of sensors, and velocity of data generated are the
    aspects to be considered in Fog computing. 4.4 Power Consumption Model for Data
    Processing The power consumed for data processing depends on the number of operations
    performed such as arithmetic operations. It depends on the hardware architecture
    chosen for the deployment of the IoT applications. In this section, the different
    units of power consumption in the IoT applications are outlined. With the proposed
    architecture, the latency for the services is reduced which aids in decreasing
    the power consumed. 5 Distance Between Nodes in Fog IoT Assuming there exists
    “M” routers between the source and destination, the end-to-end delay (dE-to-E)
    is given by Eq. (10), when the queuing delay is negligible: $$ {d}_{E- to-E}=M\\ast
    \\left({d}_{proc}+{d}_{trans}+{d}_{prop}\\ \\right) $$ (10) where dproc is the
    processing delay, dtrans is the transmission delay, and dprop is the propagation
    delay [18]. If the link length is doubled from d to 2d, the propagation delay
    is dprop = 2 * dprop. The propagation delay is proportional to the distance between
    the nodes. Hence, the Fog computing reduces the end-to-end delay when the distance
    between the data gathering nodes and edge devices is reduced. 6 Result Analysis
    The Raspberry Pi 3 is used as the end node at the fog computing layer for aggregation,
    computation, and processing. The lightweight protocol is used for data transmission
    between the nodes. MQTT protocol is chosen as the lightweight protocol for transmission
    of the sensor-captured data. The “publish-subscribe” communication model is applied
    in MQTT. The mosquito broker is utilized to send the sensor-captured data between
    the subscriber (farmers) and publisher (SP). The mosquito broker is configured
    to function as a broker on Raspberry Pi system. An instance is created on broker
    with the port number. The topic with name as “IrrigationFertigation” is created.
    The subscribers connect to the broker using this topic. The message to “ON” the
    irrigation/fertigation unit is sent using this topic. The Wireshark tool is used
    to capture the packet information. The filter is applied to compare the packet
    length during transmission using “http” and “mqtt” protocol. The area covered
    with blue represents the packet length for HTTP, and the red color presents the
    packet length for MQTT as shown in Fig. 2. The other lightweight protocol is CoAP
    (Constrained Application Protocol) used for power-constrained devices. In Fig.
    3, the average, minimum, and maximum packet length of non-lightweight protocol
    – Hyper Text Transfer Protocol (HTTP) – and lightweight protocol (MQTT) is represented.
    In Fig. 4, the round-trip time comparison for Cloud IoT and Fog IoT architecture
    is presented. Fig. 2 Comparison of packet length for HTTP and MQTT protocol Full
    size image Fig. 3 Packet length for lightweight protocol and non-lightweight protocol
    Full size image Fig. 4 RTT comparison of Fog IoT and Cloud IoT architecture Full
    size image 7 Conclusion The Fog-enabled IoT architecture proposed reduces the
    round-trip time as the edge devices are closer to the sensor devices. The case
    study presented benefits the farmer to deploy precision agriculture techniques
    in the farm for increasing the crop yield. This model could be scaled to the entire
    rural area. The lightweight protocol is selected for service providing, because
    it aids in lowering the latency and achieving higher throughput. References S.
    Rajeswari and et al., “A smart agricultural model by integrating IoT, mobile and
    cloud-based big data analytics”, 2017 International Conference on Intelligent
    Computing and Control (I2C2), Coimbatore, 2017, pp. 1–5. Google Scholar   A. Khattab
    and et al., “Design and implementation of a cloud-based IoT scheme for precision
    agriculture,” 2016 28th International Conference on Microelectronics (ICM), Giza,
    2016, pp. 201–204. Google Scholar   S. Roy et al., “IoT, big data science & analytics,
    cloud computing and mobile app based hybrid system for smart agriculture,” 2017
    8th Annual Industrial Automation and Electromechanical Engineering Conference
    (IEMECON), 2017, pp. 303–304, https://doi.org/10.1109/IEMECON.2017.8079610. W.
    R. Heinzelman and et al., “Energy-efficient communication protocol for wireless
    microsensor networks,” Proceedings of the 33rd Annual Hawaii International Conference
    on System Sciences, Maui, HI, USA, 2000, pp. 10 pp. vol.2. Google Scholar   P.
    R. Deshmukh and D. Bhalerao, “An implementation of MQTT through the application
    of warehouse management system for climacteric fruits and vegetables”, 2nd International
    Conference on Communication and Electronics Systems (ICCES), Coimbatore, 2017,
    pp. 844–849. Google Scholar   J. Velez and et al., “IEEE 1451-1-6: Providing common
    network services over MQTT,” 2018 IEEE Sensors Applications Symposium (SAS), Seoul,
    2018, pp. 1–6. Google Scholar   M. M. Raikar and et al., “Blend of Cloud and Internet
    of Things (IoT) in agriculture sector using light weight protocol”, 2018 IEEE
    ICACCI, Bangalore. Google Scholar   M. M. Raikar, P. Desai, M. Vijayalakshmi and
    P. Narayankar, “Augmenting Cloud concepts learning with Open source software environment,”
    2018 International Conference on Advances in Computing, Communications and Informatics
    (ICACCI), Bangalore, 2018, pp. 1405–1411. https://doi.org/10.1109/ICACCI.2018.8554826
    M. M. Raikar, P. Desai, V. M and P. Narayankar, “Upsurge of IoT (Internet of Things)
    in engineering education: A case study,” 2018 International Conference on Advances
    in Computing, Communications and Informatics (ICACCI), Bangalore, 2018, pp. 191–197.
    https://doi.org/10.1109/ICACCI.2018.8554546 N. Kaur and S. K. Sood, “An Energy-Efficient
    Architecture for the Internet of Things (IoT),” in IEEE Systems Journal, vol.
    11, no. 2, pp. 796–805, June 2017. https://doi.org/10.1109/JSYST.2015.2469676.
    Farzad Kiani, “A Survey on Management Frameworks and Open Challenges in IoT,”
    Wireless Communications and Mobile Computing, vol. 2018, Article ID 9857026, 33
    pages, 2018. https://doi.org/10.1155/2018/9857026. A. Zanella, N. Bui, A. Castellani,
    L. Vangelista and M. Zorzi, “Internet of Things for Smart Cities,” in IEEE Internet
    of Things Journal, vol. 1, no. 1, pp. 22–32, Feb. 2014. https://doi.org/10.1109/JIOT.2014.2306328
    Izal, Mikel et al. “Computation of Traffic Time Series for Large Populations of
    IoT Devices” Sensors (Basel, Switzerland) vol. 19, 1 78. 26 Dec. 2018, https://doi.org/10.3390/s19010078.
    M. M. Raikar and S. M. Meena, “SSH brute force attack mitigation in Internet of
    Things (IoT) network: An edge device security measure,” 2021 2nd International
    Conference on Secure Cyber Computing and Communications (ICSCCC), 2021, pp. 72–77,
    https://doi.org/10.1109/ICSCCC51823.2021.9478131. M. M. Raikar and M. S M, “Vulnerability
    assessment of MQTT protocol in Internet of Things (IoT),” 2021 2nd International
    Conference on Secure Cyber Computing and Communications (ICSCCC), 2021, pp. 535–540,
    https://doi.org/10.1109/ICSCCC51823.2021.9478156. B. Martinez, M. Montón, I. Vilajosana
    and J. D. Prades, “The Power of Models: Modeling Power Consumption for IoT Devices,”
    in IEEE Sensors Journal, vol. 15, no. 10, pp. 57775789, Oct. 2015. https://doi.org/10.1109/JSEN.2015.2445094.
    A. Ikpehai, B. Adebisi and K. Anoh, “Effects of Traffic Characteristics on Energy
    Consumption of IoT End Devices in Smart City,” 2018 Global Information Infrastructure
    and Networking Symposium (GIIS), Thessaloniki, Greece, 2018, pp. 1–6. https://doi.org/10.1109/GIIS.2018.8635744.
    Kurose, J. F., & Ross, K. W. (2001). Computer networking: A top-down approach
    featuring the Internet. Boston: Addison-Wesley. Google Scholar   Download references
    Author information Authors and Affiliations K. L. E. Technological University,
    Hubballi, India Meenaxi M. Raikar & Meena S M Corresponding author Correspondence
    to Meenaxi M. Raikar . Editor information Editors and Affiliations Dept. of Computer
    Science & Engineering, Indian Institute of Technology Patna, Patna, Bihar, India
    Rajiv Misra Cardiff University, Cardiff, UK Rana Omer Dept. of EE Engineering,
    University of London, London, UK Muttukrishnan Rajarajan Dept. of ECE, National
    University of Singapore, Singapore, Singapore Bharadwaj Veeravalli Dept. of Computer
    Science, Central University of Rajasthan, Tehsil Kishangarh, Rajasthan, India
    Nishtha Kesswani Dept. of CSE, Indian Institute of Information Technology, Kota,
    Jawahar Lal Nehru Marg, Rajasthan, India Priyanka Mishra Rights and permissions
    Reprints and permissions Copyright information © 2023 The Author(s), under exclusive
    license to Springer Nature Switzerland AG About this paper Cite this paper Raikar,
    M.M., S M, M. (2023). Fog Computing-Enabled Internet of Things for Resource Optimization.
    In: Misra, R., Omer, R., Rajarajan, M., Veeravalli, B., Kesswani, N., Mishra,
    P. (eds) Machine Learning and Big Data Analytics. ICMLBDA 2022. Springer Proceedings
    in Mathematics & Statistics, vol 401. Springer, Cham. https://doi.org/10.1007/978-3-031-15175-0_27
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-15175-0_27
    Published 07 June 2023 Publisher Name Springer, Cham Print ISBN 978-3-031-15174-3
    Online ISBN 978-3-031-15175-0 eBook Packages Mathematics and Statistics Mathematics
    and Statistics (R0) Share this paper Anyone you share the following link with
    will be able to read this content: Get shareable link Provided by the Springer
    Nature SharedIt content-sharing initiative Publish with us Policies and ethics
    Download book PDF Download book EPUB Sections Figures References Abstract Introduction
    State of the Art in Fog-Enabled IoT Services Fog Computing-Enabled IoT Architecture
    Energy Model for the Fog IoT Devices Distance Between Nodes in Fog IoT Result
    Analysis Conclusion References Author information Editor information Rights and
    permissions Copyright information About this paper Publish with us Discover content
    Journals A-Z Books A-Z Publish with us Publish your research Open access publishing
    Products and services Our products Librarians Societies Partners and advertisers
    Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy
    choices/Manage cookies Your US state privacy rights Accessibility statement Terms
    and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic
    Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024
    Springer Nature"'
  inline_citation: '>'
  journal: Springer Proceedings in Mathematics and Statistics
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Fog Computing-Enabled Internet of Things for Resource Optimization
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 43 papers. The special focus in this conference
    is on ASOCA, AI-PA, FMCIoT, WESOACS. The topics include: SASH: Safe Autonomous
    Self-Healing; trusted Smart Irrigation System Based on Fuzzy IoT and Blockchain;
    smart Edge Service Update Scheduler: An Industrial Use Case; Energy-Aware Placement
    of Network Functions in Edge-Based Infrastructures with Open Source MANO and Kubernetes;
    people Counting in the Times of Covid-19; a Service-Oriented Middleware Enabling
    Decentralised Deployment in Mobile Multihop Networks; Towards Engineering AI Planning
    Functionalities as Services; data Product Metadata Management: An Industrial Perspective;
    image Data Augmentation and Convolutional Feature Map Visualizations in Computer
    Vision Applications; FUSPAQ: A Function Selection Platform to Adjust QoS in a
    FaaS Application; Specification-Driven Code Generation for Inter-parameter Dependencies
    in Web APIs; bizDevOps Support for Business Process Microservices-Based Applications;
    towards Real-Time Monitoring of Blockchain Networks Through a Low-Code Tool; data-Aware
    Application Placement and Management in the Cloud-IoT Continuum; towards a Context-Aware
    Framework for Internet of Things and Smart Everything; simulating IoT Systems
    from High-Level Abstraction Models for Quality of Service Assessment; internet
    of Things Semantic-Based Monitoring of Infrastructures Using a Microservices Architecture;
    on Balancing Flexibility and Compliance of Business Processes: Functional Constraints
    Modeling and Verification; change Recommendation in Business Processes; object-Centric
    Predictive Process Monitoring; board Miner: A Tool to Analyze the Use of Board-Based
    Collaborative Work Management Tools; a Tool for Business Processes Diagnostics;
    Node4Chain: Extending Node-RED Low-Code Tool for Monitoring Blockchain Networks;
    service-Oriented Integration of SuperTuxKart; Using Open API for the Development
    of Hybrid Classical-Quantum Services; quokka: A Service Ecosystem for Workflow-Based
    Execution of Variational Quantum Algorithms; SENSEI: Scraper for ENhanced AnalySis
    to Evaluate Illicit Trends; PRES3 : Private Record Linkage Using Services, Spark
    and Soundex; towards Peer-to-Peer Sharing of Wireless Energy Services; IoT System
    for Occupational Risks Prevention at a WWTP; Testing of RESTful Web APIs; preface.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Lecture Notes in Computer Science (including subseries Lecture Notes in
    Artificial Intelligence and Lecture Notes in Bioinformatics)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Workshops on ASOCA, AI-PA, FMCIoT, WESOACS 2022, held in Conjunction with
    the 20th International Conference on Service-Oriented Computing, ICSOC 2022
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Liang W.z.
  - Oboamah J.
  - Qiao X.
  - Ge Y.
  - Harveson B.
  - Rudnick D.R.
  - Wang J.
  - Yang H.
  - Gradiz A.
  citation_count: '4'
  description: Canopy cover (CC) is an important indicator for crop development. Currently,
    CC can be estimated indirectly by measuring leaf area index (LAI) using commercially
    available hand-held meters. However, it does not capture the dynamics of CC. Continuous
    CC monitoring is essential for dry edible beans production since it can affect
    crop water use, weed, and disease control. It also helps growers to closely monitor
    “yellowness”, or senescence of dry beans to decide proper irrigation cutoff timing
    to allow the crop to dry down for harvest. Therefore, the goal of this study was
    to develop a device – CanopyCAM, containing software and hardware that can monitor
    dry bean CC continuously. CanopyCAM utilized an in-house developed image-based
    algorithm, edge-computing, and Internet of Things (IoT) telemetry to process and
    transmit CC in real-time. In the 2021 growing season, six CanopyCAMs were developed
    with three installed in fully irrigated dry edible beans research plots and three
    installed at commercial farm fields, respectively. CC measurements were recorded
    at 15 min interval from 7:00 am to 7:00 pm in each day. Initially, the overall
    trend of CC development increased over time but fluctuations in daily readings
    were noticed due to changing lighting conditions which caused some overexposed
    images. A simple filtering algorithm was developed to remove the “noisy images”.
    CanopyCAM measured CC (CCCanopyCAM) were compared with CC obtained from a LI-COR
    Plant Canopy Analyzer (CCLAI). The average error between CCCanopyCAM and CCLAI
    was 2.3 %, and RMSE and R2 were 2.95 % and 0.99, respectively. In addition, maximum
    CC (CCmax) and duration of the maximum CC (tmax_canopy) were identified at each
    installation location using the generalized reduced gradient (CRG) algorithm with
    nonlinear optimization. An improvement of correlation was found between dry bean
    yield and combination of CCmax and tmax_canopy (R2 = 0.77, Adjusted R2 = 0.62)
    as compared to yield versus CCmax (R2 = 0.58) or yield versus tmax_canopy (R2
    = 0.45) only. This edge-computing, IoT enabled CanopyCAM, provided accurate and
    continuous CC readings for dry edible beans which could be used by growers and
    researchers for different purposes.
  doi: 10.1016/j.compag.2022.107498
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    View Open Manuscript Outline Highlights Abstract Keywords 1. Introduction 2. Materials
    and methods 3. Results and discussion 4. Conclusions 5. Authorship statements
    Declaration of Competing Interest Acknowledgements Data availability References
    Show full outline Cited by (4) Figures (12) Show 6 more figures Tables (3) Table
    1 Table 2 Table 3 Computers and Electronics in Agriculture Volume 204, January
    2023, 107498 CanopyCAM – an edge-computing sensing unit for continuous measurement
    of canopy cover percentage of dry edible beans Author links open overlay panel
    Wei-zhen Liang a b, Joseph Oboamah b c, Xin Qiao a b, Yufeng Ge a, Bob Harveson
    b d, Daran R. Rudnick a f, Jun Wang e, Haishun Yang g, Angie Gradiz a b Show more
    Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2022.107498 Get rights
    and content Under a Creative Commons license open access Highlights • An image-based
    edge-computing device – CanopyCAM was developed to be able to monitor canopy cover
    of dry edible beans in real-time and continuously with high accuracy. • Important
    canopy cover features of dry edible beans such as maximum canopy cover (CC) and
    duration of maximum CC can be extracted based on continuous measurement of CC.
    Abstract Canopy cover (CC) is an important indicator for crop development. Currently,
    CC can be estimated indirectly by measuring leaf area index (LAI) using commercially
    available hand-held meters. However, it does not capture the dynamics of CC. Continuous
    CC monitoring is essential for dry edible beans production since it can affect
    crop water use, weed, and disease control. It also helps growers to closely monitor
    “yellowness”, or senescence of dry beans to decide proper irrigation cutoff timing
    to allow the crop to dry down for harvest. Therefore, the goal of this study was
    to develop a device – CanopyCAM, containing software and hardware that can monitor
    dry bean CC continuously. CanopyCAM utilized an in-house developed image-based
    algorithm, edge-computing, and Internet of Things (IoT) telemetry to process and
    transmit CC in real-time. In the 2021 growing season, six CanopyCAMs were developed
    with three installed in fully irrigated dry edible beans research plots and three
    installed at commercial farm fields, respectively. CC measurements were recorded
    at 15 min interval from 7:00 am to 7:00 pm in each day. Initially, the overall
    trend of CC development increased over time but fluctuations in daily readings
    were noticed due to changing lighting conditions which caused some overexposed
    images. A simple filtering algorithm was developed to remove the “noisy images”.
    CanopyCAM measured CC (CCCanopyCAM) were compared with CC obtained from a LI-COR
    Plant Canopy Analyzer (CCLAI). The average error between CCCanopyCAM and CCLAI
    was 2.3 %, and RMSE and R2 were 2.95 % and 0.99, respectively. In addition, maximum
    CC (CCmax) and duration of the maximum CC (tmax_canopy) were identified at each
    installation location using the generalized reduced gradient (CRG) algorithm with
    nonlinear optimization. An improvement of correlation was found between dry bean
    yield and combination of CCmax and tmax_canopy (R2 = 0.77, Adjusted R2 = 0.62)
    as compared to yield versus CCmax (R2 = 0.58) or yield versus tmax_canopy (R2
    = 0.45) only. This edge-computing, IoT enabled CanopyCAM, provided accurate and
    continuous CC readings for dry edible beans which could be used by growers and
    researchers for different purposes. Previous article in issue Next article in
    issue Keywords Canopy Cover (CC)Leaf area index (LAI)Image processingEdge computingInternet
    of Things (IoT) 1. Introduction Dry edible beans (DEBs) are important food crops
    in the United States (U.S.) which provide excellent sources of protein. Total
    U.S. DEBs production area is approximately 809,000 ha, and the leading production
    states are North Dakota, Nebraska, Colorado, California, and Idaho. Nebraska DEBs
    production averages from 57,000 to 81,000 ha annually, producing approximately
    1 billion servings (NDSU, 2020). The production is concentrated in western Nebraska,
    where the climate is semi-arid and the warm days and cool nights provide excellent
    growing conditions (NDBC, 2019). Dry edible beans require 85 to 110 days to reach
    maturity and the maximum production potential is reached when dry bean pods are
    mature, filled with seed, and 80 % of foliage yellowing (NDBC, 2019). Canopy cover
    (CC) is the layer formed by the branches and crowns of plants. During the vegetative
    and reproductive stages, CC is an important parameter for measuring the development
    and health of DEBs, and it directly relates to crop growth stage, crop height,
    architecture of the leaves and density of the plants (Dai et al., 2009). Canopy
    cover is also important for the interception and use of solar energy and for increasing
    canopy photosynthetic productivity (Ma et al., 2001). It also affects crop water
    use, yield, disease (Westgate et al., 1997) and weed development (Ma et al., 2001).
    The advantages of rapid canopy development in crops include greater biomass accumulation,
    greater yield potential, and early season weed suppression (Westgate et al., 1997)
    and reduction of evaporative water loss from soil. Canopy cover is also considered
    a core parameter for crop models (Qiao et al., 2016). Various crop models use
    CC to calculate ‘light use efficiency’ of the crop and simulate the energy balance
    equations, and to enable understanding of the physical processes that occur between
    plants and the environment (Norman et al., 1995, Drewry et al., 2010, Colaizzi
    et al., 2012, Liang et al., 2021). Therefore, continuous monitoring of CC is necessary
    for not only providing observation of crop development but also for irrigation
    management, weed control, fungicide application, and crop modeling, etc. Many
    prior and current studies have used commercial plant canopy analyzers such as
    the LAI-2000 (LI-COR Biosciences, Lincoln, NE, U.S.) to obtain leaf area index
    (LAI) (Norman et al., 1995, O’Neal et al., 2002, Malone et al., 2002; Colaizzi
    et al. 2010, 2012; Hoffman et al., 2016, Yang et al., 2018). CC can be calculated
    with LAI and zenith angle (Eqn. (1)). (1) where CCLAI is the fraction (dimensionless,
    between 0 and 1) of CC appearing in the field of view, θ is the zenith angle of
    LAI meter, and LAI is leaf area index. To obtain CC, many studies (Colaizzi et
    al. 2010; Yang et al., 2018, Liang et al., 2021) have conducted manual LAI measurement
    once every other week or even once a month. Despite infrequent measurements by
    LAI, moreover, it is difficult to obtain LAI at early crop development stages
    since canopy can be too small for the proper use of LAI meter. In addition, such
    manual measurement of LAI is technically complex and labor intensive, and it is
    impossible to continuously measure CC in the field to account for the variations
    and dynamics of CC along the crop growth cycle. Image processing has been used
    as an effective tool for analyses in various crops and applications. In recent
    years, several studies have used image processing to assess features of crop canopies
    for different purposes, such as determining fertility requirements, disease detection,
    smart spraying, and yield estimation (Diago et al., 2012, Hitimana and Gwun, 2014,
    Masood et al., 2016). Canopeo, an image processing tool, was developed using Matlab
    (The MathWorks Inc., Massachusetts, U.S.) and is based on color ratios of red
    to green (R/G), and blue to green (B/G), and an excess green index (2G-R-B) to
    determine CC (Patrignani and Ochsner, 2015). This online tool uses color classification
    techniques in the RGB color spectrum to distinguish canopy from background (e.g.
    soil) in images. However, image overexposure and soil under shadow were not considered
    in Canopeo, resulting in overestimation of CC when crops reach full CC (Buchi
    et al., 2018). To estimate the CC more accurately from images, supervised classification
    has been used in research studies (Chena et al., 2010, Diago et al., 2012, Liang
    et al., 2018, Liang et al., 2021). Several statistical measurements of similarity
    between groups, in terms of multiple characteristics, have been proposed, such
    as Kolmogorov’s variation distance, Bhattacharyya distance, and Mahalanobis distance
    (Devroye et al., 1996). Mahalanobis distance (Md) classification is widely used
    for pattern recognition and data analyses when groups have different means but
    similar standard deviations (Devroye et al., 1996) and is most suitable in image
    processing for precision agriculture (Chena et al., 2010, Diago et al., 2012,
    Liang et al., 2018, Liang et al., 2021). Chena et al. (2010) extracted 28 color
    features from corn imagery using Md for identifying five Chinese corn varieties
    at a success rate of 90 %. Diago et al. (2012) extracted 40 color features in
    7 color groups and used Md to determine each pixel from image belongs to which
    color group to characterize grapevines, leaves, and background. The results showed
    a performance of 92 % effectiveness for leaves and 98 % effectiveness for grapes.
    Liang et al. (2018) extracted 180 colors in 8 groups and showed a performance
    of 96 % for detection of soybean leaves using Md classification. The Md supervised
    classification was able to separate soybean leaf color from background and determine
    the soybean leaf pixel numbers to determine soybean defoliation caused by insect
    damages. Current image processing techniques require images to be transmitted
    or downloaded for either server- or local processing. However, CC images can range
    ∼ 1–4 Mb in size and it can be infeasible to transmit such images frequently due
    to high bandwidth requirement and costly telemetry fees. An alternative solution
    is to leverage edge-computing to reduce data package size and utilize low-cost
    Internet of Things (IoT) telemetry for low-cost and near real-time data transmission.
    Due to data transferring with limited network performance, the centralized cloud-computing
    structure becomes inefficient for processing and analyzing huge amounts of data
    and images collected from IoT devices. Edge computing can reduce the loads of
    computing tasks of the centralized cloud by conducting computation at edge IoT
    devices. At each edge-computing IoT device, images can be processed and only edge-processed
    data are transmitted to cloud server, and therefore greatly reduces data package
    size (Chen et al., 2018). Long range wide area network, or LoRaWAN, is one of
    the data transmission protocols that has been rapidly developing for many IoT
    applications. With one LoRaWAN gateway, it has the capability of connecting to
    a large number of battery-powered sensors at low energy consumption with transmission
    range up to 15 km in suburban areas (LoRa Alliance, 2015; Adelantado et al. 2017).
    The limitation of LoRaWAN is that its data transmission rate is much lower than
    traditional telemetry, at a maximum speed of 27 kb/s (Adelantado et al. 2017)
    and therefore not suitable for directly transmitting high-volume data such as
    CC images. However, if images are pre-processed and stored onsite, and only processed
    results are transmitted, the size of data package would reduce from ∼ 4 Mb to
    2–3 kb which will be suitable for LoRaWAN. Hence, the objective of this paper
    was to develop an edge-computing camera device, named CanopyCAM that can continuously
    monitor CC for DEBs. Detailed objectives included: 1) develop an algorithm to
    estimate CC from Red-Green-Blue (RGB) imagery; 2) develop a ground-based edge-computing
    node that can take CC images, store and process images onsite, send processed
    CC value through LoRaWAN network, and display at an in-house programmed website
    (http://phrec-irrigation.com/); 3) evaluate performance of the software on determination
    of CC versus LAI meter derived CC; 4) refine the CC algorithm to filter out abnormal
    images; and 5) identify key CC information such as max canopy cover (CCmax) and
    duration of CCmax (tmax_canopy) and evaluate its relationship with yield of DEBs.
    2. Materials and methods The sections discussed below included hardware and software
    of CanopyCAM, followed by description of field sites, data collection procedures,
    and finally data evaluation procedures. 2.1. CanopyCAM – Hardware development
    and processing framework The processing framework was shown in Fig. 1, where it
    started from CanopyCAM designed to acquire, store, and process images at 15 min
    sampling intervals from 7:00 am to 7:00 pm on a daily basis. Then the device sent
    processed CC percentage by CanopyCAM (CCCanopyCAM) through nearby gateways to
    a cloud server and then displayed the results at a customized visualization platform
    (https://phrec-irrigation.com). Download : Download high-res image (247KB) Download
    : Download full-size image Fig. 1. Proposed processing framework to acquire and
    process Canopy Cover (CC) images, transmit the CC percentages through LoRaWAN
    gateways to a cloud server, and report the results via a cutomized website in
    this study. As shown in Fig. 2c, CanopyCAM consisted of a Raspberry Pi 4 computer
    (Raspberry Pi foundation, U.K.), a battery, a PiJuice HAT power management board
    (Pi Supply, U.K.) that manages sleep and wake schedules, a solar panel, a Raspberry
    Pi camera module V2-8 megapixel RGB camera (2592 × 1944 pixels), Raspberry Pi
    LoRa node pHAT (Pi Supply, U.K.), and an external 915 MHz LoRa antenna (Laird
    Connectivity, Akron, OH, U.S.). It also had a DC to DC voltage regulator to convert
    the voltage coming in from the solar panel to 9 V (+/- 0.9 V) to the power management
    board. The mounting height of CanopyCAM for dry beans was determined to be 1.4
    m aboveground facing north, 45 degrees off nadir-view for best image qualities
    (Fig. 2a, 2b). Algorithm was programmed on Raspberry Pi and images were processed
    onsite to calculate CCCanopyCAM. The CCCanopyCAM values and other variables such
    as the battery status were then converted to encoded HEX value which were then
    transmitted to nearby LoRaWAN gateways. Download : Download high-res image (296KB)
    Download : Download full-size image Fig. 2. a. CanopyCAM 3d illustration. b. CanopyCAM
    installed in field in 3d-printed casing. c. processing hub for CanopyCAM that
    includes raspberry pi 4 board, battery, pijuice power management board, dc to
    dc voltage regulator, transmissing module raspberry Pi LoRa pHAT. 2.2. Experiment
    site and data collection In this study, six CanopyCAMs were deployed at three
    DEBs research plots at the University of Nebraska-Lincoln, Panhandle Research
    and Extension Center (PHREC) in Scottsbluff, NE (41°53′34.93″N, 103°41′2.04″W,
    elevation 1189 m), and three commercial dry bean fields in Henry and Mitchell,
    NE, in 2021 (Table 1). Each field or plot had one CanopyCAM installed at a representative
    location. The three CanopyCAMs at PHREC were installed in fully irrigated dry
    bean research plots. The fully irrigated plots were meant to fully satisfy crop
    water needs by carefully scheduling irrigation events to make sure crops were
    not water stressed. The commercial fields were assumed to be fully irrigated according
    to on-site soil water sensor data (data not shown), but they were subjected to
    different field conditions and management practices. The climate at both research
    and commercial farms is semi-arid with average annual rainfall of 398 mm. Great
    Northern Beans were planted at 56 cm row spacing on June 1, May 27, and May 20
    of 2021 at PHREC, Henry, and Mitchell, respectively. The seeding rates were 210,035
    seeds ha−1, 217,836 seeds ha−1, and 217,448 seeds ha−1 at PHREC, Henry, and Mitchell,
    respectively. The nitrogen application rates were 85.1 kg ha−1, 89.6 kg ha−1,
    and 89.7 kg ha−1 at PHREC, Henry, and Mitchell, respectively. The soil textures
    were sandy loam, sandy loam, and sandy clay loam at PHREC, Henry, Mitchell, respectively.
    Beans were harvested with a commercial combine (John Deere 9500, John Deere, Moline,
    Illinois, U.S.) equipped with Global Positioning System (GPS) enabled yield monitor
    (Ag Leader Insight yield monitor, Ag Leader Technology, Inc., Ames, Iowa, U.S.)
    at research plots. Yield at commercial farms were obtained from weigh scale at
    grain elevators. Dry edible beans were harvested on 9/27/2021 at three research
    plots (R-1, R-2, and R-3), 9/10/2021 at commercial field 1 (C-1), 9/16/2021 at
    commercial field 3 (C-3), and 9/21/2021 at commercial field 2 (C-2) (Table 1).
    In addition to CC images, leaf area index (LAI) was manually taken twice a week
    at the same location of the three CanopyCAM installed at research plots (R-1,
    R-2, and R-3) using LAI-2000 (LI-COR Inc., Lincoln, U.S.). LAI values were converted
    to CC, termed as CCLAI using Eqn. (1), and were used as reference CC. Simultaneously,
    a commercial RGB camera (Sony Cyber-shot DSC-RX100, Sony Corporation, Tokyo, Japan)
    was used to take images at the same height as CanopyCAM with the same shooting
    angle. Manual images and LAI were collected at the same time at each plot around
    solar noon (11:00 AM – 2:00 PM) to guarantee data and image quality. Each image
    taken by the handheld camera was compared with nearest timestamp image taken by
    CanopyCAM. The manual images also served as reference images which can be quality
    controlled. Table 1. Study sites and CanopyCAM node information. Site information
    ID Loc. Elev., m Planting Date Harvest Date Start Date1 End Date2 R-1 PHREC 1189
    6/1/2021 9/27/2021 6/28/2021 8/30/2021 R-2 PHREC 1189 6/1/2021 9/27/2021 7/1/2021
    8/24/2021 R-3 PHREC 1189 6/1/2021 9/27/2021 7/1/2021 8/30/2021 C-1 Mitchell 1200
    5/20/2021 9/10/2021 7/15/2021 8/24/2021 C-2 Henry 1231 5/27/2021 9/21/2021 7/16/2021
    8/9/2021 C-3 Henry 1231 5/28/2021 9/16/2021 7/16/2021 8/25/2021 1 Images acquisition
    starting date. 2 Images acquisition end date. 2.3. CanopyCAM – Software development
    2.3.1. Determination of canopy cover percentage – Crop canopy image analyzer (CCIA)
    As mentioned earlier, CanopyCAM took images at every 15 min from 7:00 am to 7:00
    pm on a daily basis during July and August in 2021 growing season. Thirty representative
    canopy images from research plots (R-1, R-2, and R-3) during different growth
    stages were randomly selected to classify color groups and train an in-house designed
    software crop canopy image analyzer (CCIA) for estimating CCCanopy_CAM. CCIA utilized
    a supervised classifier based on Mahalanobis distance (Md) method to estimate
    CC, which was used to determine soybean leaf area (Liang et al. 2018) and DEBs
    leaf area (Liang et al. 2021). The Md (Eqn. (2)) measured the similarity between
    an unknown sample group and a known sample group. (2) where X is a three-dimensional
    vector (R, G, B), which represented pixels from the image to be processed. Y is
    a three-dimensional vector ( , , ), which represented the average of reference
    pixels (reference group) for each class to be identified. The Mahalanobis color
    distance standardizes the influence of the distribution of each feature considering
    the correlation between each pair of terms. In the case of RGB color images, S
    is computed as (Eqn. (3)): (3) and as an example, the elements of S are calculated
    as: (4) where σ is covariance of R, G, B reference group colors, Ri, Gi, Bi are
    the values of the ith match (i = 1, 2, 3, ….n), and , , are the mean color values
    for R, G, B in the given image, respectively. In this study, eight reference groups
    of pixels were selected to generate the classification, in which every group represented
    relevant characteristics of dry bean leaves and background classes, as well as
    installation environment of CanopyCAM. The eight groups were identified as: light
    green leaves, light yellow leaves, dark green leaves, greyish green leaves, shadow,
    light-colored soil, deep-colored soil, and silver-colored metal post on which
    CanopyCAM were attached. If any of these classes were not present, or a new class
    appeared on the image, the number and/or the group labels would be modified. Each
    reference group was manually selected from a set of 30 canopy images and a set
    of 20–30 color pixels with R, G, B, values in each reference group was chosen.
    The 30 canopy images were used to train CCIA so pixels could be classified into
    the right color group. After training CCIA, Md was computed over a set of 11,206
    images from the six CanopyCAM devices installed during the 2021 growing season.
    CCIA was written in C++ programming language (Stroustrup, 1995) and was programed
    on CanopyCAM since Raspberry Pi lacks GPU and has limited computation power. After
    images were processed in CanopyCAM, the outputs of canopy pixels, background pixels,
    battery power, and CCCanopyCAM were transmitted to the IoT gateways and back to
    the cloud server. Identified CC were shown as pink color and the background was
    shown as original color in the output images. The CCCanopyCAM percentage was calculated
    using green area pixel number (NG) and background pixel number (NB) (Eqn.5). (5)
    2.3.2. Post-processing: Image filtering algorithm After evaluating the images
    from the six CanopyCAM units, it was noticed that the overall trend of CC development
    increased over time but there were large variations in daily readings. Upon inspection
    of the large daily variations of CCCanopyCAM, some were caused by images that
    were taken in poor lighting conditions (e.g. overexposure) that interfered with
    the camera. Overexposure was caused when too much light hits camera’s sensor and
    resulted extremely bright images. An example of overexposed raw and processed
    images from CanopyCAM were shown in Fig. 6. When images were overexposed, CCcanopyCAM
    were underestimated. Therefore, a 2-step filtering processes was created to filter
    out the overexposed images. First, images prior to 10:00 am and after 4:00 pm
    were filtered out because the sunlight could enter the camera lens at more parallel
    angles. Subsequently, the color intensity of each pixel of the images (Y) was
    calculated (Eqn. (6)), and when Y was greater than 224, the pixel was determined
    to be an overexposed pixel. If the percentage of overexposed pixels was greater
    than 50 %, or if the CCCanopyCAM percentage was increased or reduced by more than
    10% compared to the previous image (indicating too much variation), the CC image
    was removed. (6) where Y is color intensity of the pixel, R is red color value,
    G is green color value, B is blue color value, and the values are between 0 and
    255. 2.4. Evaluation of CCCanopyCAM, CCLAI, and CCHandheld_Camera To determine
    the accuracy of CCCanopyCAM, root mean square error (RMSE) values for pairs of
    CCCanopyCAM versus CCLAI, and CCHandheld_Camera versus CCLAI, daily averaged canopy
    cover from CanopyCAM after post processing (CCave_CanopyCAM) images versus CCLAI
    were calculated using: (7) where n is number of measurements; and E and M are
    estimated values (from CanopyCAM/handheld camera/average daily CanopyCAM) and
    measured values (from LAI), respectively. Average error for pairs of CCCanopyCAM
    versus CCLAI, and CCHandheld_Camera versus CCLAI, daily averaged canopy cover
    from CanopyCAM after post processing (CCave_CanopyCAM) images versus CCLAI were
    calculated using: (8) where n is number of measurements; and E and M are estimated
    values (from CanopyCAM/handheld camera/average daily CanopyCAM) and measured values
    (from LAI), respectively. 2.5. Determination of maximum canopy cover (CCmax) and
    its duration (tmax_canopy) In this study, we categorized the development of CC
    for DEBs into three stages. The first stage is mostly vegetative development when
    CC gradually increase to a maximum (CCmax). The second stage is mostly reproductive
    stage when CC remains nearly constant and dry beans are flowering and developing
    pods. The third stage is senescence when leaf starts to turn yellow, and CC starts
    to decrease as dry beans approach maturity. It should be noted that this categorization
    follows numerical value of CC rather than agronomically determined growth stage,
    as DEBs could be developing its canopy size while entering reproductive stage.
    The number of days that DEBs take to reach from planting to beginning of second
    stage is termed as t1 and is normally less or equal to 56 days after planting
    (NDSU, 2019). The duration of CCmax during the second stage, termed as tmax_canopy
    would continue for 15–40 days, depending on the beans variety, field environment,
    and management. The end time of CCmax is defined as t2, and the tmax_canopy is
    defined as t2-t1. It was hypothesized that the combination of CCmax and tmax_canopy
    would closely relate to yield of DEBs. The daily CCave_CanopyCAM was used for
    estimating t1 and t2. The generalized reduced gradient (CRG) algorithm and constraints
    (Eqns. (9), (10)) in Microsoft Excel Solver (Microsoft Excel, Microsoft Corporation,
    2018.) were used with nonlinear optimization to obtain the t1 and t2 at each CanopyCAM
    location. (9) The CCmax is decreased after reproductive stage R8 (82 days after
    planting) (NDSU, 2019). The estimated CCmax was averaged during t2-t1 interval.
    (10) 2.6. Statistical regression of dry edible beans yield Empirical model for
    yield of DEBs from research plots and commercial fields were developed to evaluate
    statistical trends in the data. A simplified multiple variable regression analysis
    (using SAS procedure PROC REG) (SAS, 2014, Institute SAS Inc., Cary, NC) was used
    to generate linear regression for dry bean yield with CCmax and tmax_canopy. 3.
    Results and discussion 3.1. Performance of software Using current configuration
    of CanopyCAM, it took 2–3 seconds to process one image (resolution 2592 × 1944).
    Processed data were sent through nearby LoRaWAN gateways and saved on server’s
    database and shown at a customized reporting website. An example of CanopyCAM
    reported original CCCanopyCAM at R-1 on the website is shown in Fig. 3. Download
    : Download high-res image (314KB) Download : Download full-size image Fig. 3.
    Continuous canopy cover percentage of original images captured using CanopyCAM
    at a fully-irrigated dry edible research plot at R-1, Panhandle Research and Extension
    Center, University of Nebraska-Lincoln. At the three research sites: R-1, R-2,
    and R-3, CanopyCAM collected a total of 2422, 2238, and 2394 images, respectively
    (Table 2). At commercial farms: C-1, C-2, and C-3, CanopyCAM collected a total
    of 1483, 1041, and 1628 images, respectively (Table 2). CanopyCAM collected fewer
    images at commercial farm fields than research plots since they were deployed
    later and retrieved earlier to avoid interference with growers’ planting/spraying/harvesting
    operations. Table 2 also listed standard deviation of daily CCCanopyCAM readings.
    It was assumed that CC should remain constant during the day and standard deviation
    (SD) was computed for daily CCCanopyCAM readings (Table 2). Original CCCanopyCAM
    showed large variation during the day with SD as much as 22.1 % (Table 2, R-1
    plot). An example of dry bean canopy (raw and processed images, taken on 7/7/2021
    at R-1) during vegetative stage taken by CanopyCAM was shown in Fig. 4. While
    Fig. 5 showed an example of dry bean canopy (raw and processed images, taken on
    8/27/2021 at R-1) during senescence stage when dry beans were ready to be harvested.
    It was observed that dark-colored soil pixels, crop residual pixels, and shadows
    pixels were properly classified and filtered (Fig. 5). The classifiers for eight
    reference groups performed well without any adjustments of contrast, brightness,
    or color. However, as mentioned in the material and methods section, overexposed
    images were also noticed (Fig. 6). Overexposure resulted underestimation of CCCanopyCAM.
    For example, at R-1, CanopyCAM reported CC of 26 % on 7/22/2021 (Fig. 6), a decrease
    from 37 % reported on 7/7/2021 (Fig. 4). Since it was still during vegetative
    stage, CCCanopyCAM on 7/22/2021 should be larger than CCCanopyCAM on 7/7/2021.
    Post-processing algorithm (described in 2.3.2) was applied to all CanopyCAM images
    downloaded from the six CanopyCAMs. Post processing has effectively reduced SD
    of daily CCCanopyCAM readings to 2.2–7.5 % (Table 2). Table 2. Number of original
    and post-processed images, as well as standard deviations (SD) of daily canopy
    cover (CC) readings at each site. Site Image Empty Cell Empty Cell Empty Cell
    Empty Cell Empty Cell Empty Cell #1 SD4 #2 SD5 #3 SD6 R-1 2422 6.8–22.1 % 1509
    5.2–14.2 % 1325 2.4–6.8 % R-2 2238 6.2–19.8 % 802 5.8–13.1 % 688 2.3–5.9 % R-3
    2394 7.1–20.3 % 956 6.7–13.8 % 852 2.2–5.8 % C-1 1483 5.9–18.7 % 702 4.3–12.8
    % 649 2.7–5.3 % C-2 1041 6.4–19.2 % 530 5.2–13.7 % 512 2.5–4.6 % C-3 1628 4.7–15.3
    % 469 4.2–11.5 % 463 2.8–7.5 % 1 Number of images downloaded from CanopyCAM at
    each site. 2 Number of images applied 1st step filter process which is time-based
    filtering. Images collected prior to 10:00 am and after 4:00 pm were filtered.
    3 Number of images applied 2nd step filer process which is lightness-based filtering.
    4 Standard deviation of daily original CCCanopyCAM readings. 5 Standard deviation
    of daily CCCanopyCAM after 1st step filter process was applied. 6 Standard deviation
    of daily CCCanopyCAM after 2nd step filter process was applied. Download : Download
    high-res image (607KB) Download : Download full-size image Fig. 4. An example
    of original and processed canopy cover (CC) image collected by CanopyCAM at R-1
    on July 7, 2021. Download : Download high-res image (825KB) Download : Download
    full-size image Fig. 5. An example of original and processed canopy cover (CC)
    image collected by CanopyCAM at R-1 on August 28, 2021. Download : Download high-res
    image (681KB) Download : Download full-size image Fig. 6. An example of original
    and processed overexposed canopy cover (CC) image collected by CanopyCAM at R-1
    on July 22, 2021. As shown in Fig. 7a-c and Fig. 8a-c, it further demonstrated
    large daily variations of original CCCanopyCAM (black hollow circles) due to overexposure
    and other possible abnormal lighting conditions. The CC images were not available
    for C-2 after August 10th due to battery power and LoRa signal issues (Fig. 8b).
    The post-processing process removed most of the daily variations and provided
    more reasonable CC curves for CC development (Fig. 7a-c and Fig. 8a-c, red solid
    dots). The commercial farms also exhibited different CC trends as C-1 (Fig. 8a)
    appeared to have larger CC than C-2 (Fig. 8b) and C-3 (Fig. 8c). This was possible
    due to soil texture at C-1 was sandy clay loam, which had better water holding
    capacity compared to C-2 and C-3 with sandy loam soil. Also, C-1, C-2, and C-3
    belong to different growers and could subject to different management practices
    and therefore exhibited different CC patterns. Lastly, white mold disease was
    found at C-3 and caused lower CC at C-3 compared to C-1 and C-2. Download : Download
    high-res image (779KB) Download : Download full-size image Fig. 7. From top to
    bottom, original and post-processed canopy cover by CanopyCAM at research plots:
    R-1 (a), R-2 (b), and R-3 (c). Download : Download high-res image (523KB) Download
    : Download full-size image Fig. 8. Original and post-processed canopy cover by
    CanopyCAM at commercial farms: C-1 (a), C-2 (b), and C-3 (c). Before evaluating
    performance of CanopyCAM, CC recognized from images taken using handheld camera
    (CCHandheld_camera) were evaluated against CC from LAI (CCLAI). Images from handheld
    camera were considered to have the best image quality and were processed using
    the same software (CCIA) that was programmed on CanopyCAM. Good agreement between
    CCHandheld_camera with CCLAI would indicate good performance of CCIA and confirm
    confidence with the algorithm. A total of 41 pairs of CCHandheld_camera with CCLAI
    collected from 7/2/2021 to 8/24/2021 at R-1, R-2, and R-3 research plots were
    compared (n = 41). The average error between CCHandheld_camera and CCLAI was 2.0
    %, and RMSE and R2 were 2.64 % and 0.99, respectively (Fig. 9a). This indicated
    good performance of CCIA when image quality was satisfactory. To evaluate performance
    of canopy cover from CanopyCAM (CCCanopyCAM) versus CCLAI, CCCanopyCAM that was
    collected at the same time as LAI measurements were used. As shown in Fig. 9b,
    the average error between CCCanopyCAM and CCLAI was 2.3 %, and RMSE and R2 were
    2.95 % and 0.99, respectively. This confirmed satisfactory performance of CanopyCAM.
    Furthermore, daily CCCanopyCAM after the two filtering processes were averaged
    at each CanopyCAM location (CCave_CanopyCAM) and were compared with CCLAI. As
    a result, error and RMSE of CCave_CanopyCAM with CCLAI slightly increased to 5.7
    % and 4.05 %, respectively; R2 also slightly dropped to 0.98 (Fig. 9c). It was
    noticed that at lower CC, CCave_CanopyCAM was lower than CCLAI. This was possibly
    due to variations occurred during the senescence stage as leaves were yellowing
    before harvest. The color of deep yellow group could be added to CCIA and could
    potentially solve this issue. However, the underestimation was marginal and was
    not addressed in this study. Overall, CCCanopyCAM, CCHandheld_camera, and CCave_CanopyCAM
    all provided satisfactory estimation of CC compared to CCLAI. Download : Download
    high-res image (157KB) Download : Download full-size image Fig. 9. A. comparison
    between canopy cover percentage (CC) estimated from LI-COR LAI2000 (ccLAI) and
    estimated CC with handheld camera using Crop Canopy Image Analyzer (CCHandheld_camera).
    RMSE = 2.64 %, p < 0.01, n = 41; b. comparison between CCLAI and estimated CC
    using CanopyCAM (CCCanopyCAM). RMSE = 2.95 %, p < 0.01, n = 41; c. Comparison
    between CCLAI and estimated daily averaged CCCanopy_CAM (CCave_CanopyCAM). RMSE
    = 4.05 %, p < 0.01, n = 41. Dotted line is 1:1 line. 3.2. Evaluation of CCmax
    and tmax_canopy After satisfactory performance of CanopyCAM was obtained, maximum
    CC (CCmax) and duration of maximum CC (tmax_canopy) were estimated using CRG algorithm
    and constraints (Eqns. (9), (10)). Daily CCave_CanopyCAM were used to estimate
    t1, t2, averaged CCmax, and tmax_canopy. Fig. 10 provided an example of estimating
    t1 using CRG algorithm and constraints (Eqn. (9)) at R-1 field. The t1, t2, average
    CCmax, tmax_canopy, and yield of the six fields were listed in Table 3. The CCmax
    and tmax_canopy were not available at C-2 due to the limited number of images
    and CRG algorithm could not be applied. The average CCmax of R-1, R-2, R-3, C-1,
    and C-3 were 77 %, 71 %, 79 %, 82 %, and 53 %, respectively (Table 3). Fig. 11
    showed the pictures of CCmax at six fields on 8/9/2021. As C-2 lost power on 8/10/2021,
    CC image taken on 8/9/2021 was extracted for visual comparison, but it was not
    used in the subsequent analysis. The tmax_canopy at R-1, R-2, R-3, C-1 and C-3
    were 33, 28, 15, 19, and 15 days, respectively (Table 3). During 2021 growing
    season, the dry edible beans yield of R-1, R-2, R-3, C-1, C-2, and C-3 were 436,
    315, 329, 403, 322, and 248 kg ha−1, respectively. Many literature have supported
    that CC is closely related to yield of crops such as corn (García-Martínez et
    al., 2020) and soybean (Schmitz et al., 2021). In this study, visual inspection
    has shown that when CCmax of dry edible beans was larger, yield was higher (Fig.
    11 and Table 3). Interestingly, although CCmax at R-1 and R-3 were similar, tmax_canopy
    at R-1 (33 d) were much longer than R-3 (15 d). As a result, yield at R-3 (329
    kg ha−1) was lower than R-1 (436 kg ha−1). At commercial farms, CC at C-3 was
    the lowest. By examining CanopyCAM images, white mold disease was suspected to
    occur at C-3 after flowering with some dead leaves and bleached white tissues
    (Fig. 11 C-3). White mold, caused by the pathogen Sclerotina sclerotiorum, is
    one of the most important diseases affecting dry edible beans in western Nebraska
    (Harveson et al., 2013). The incidence and severity of white mold can be sporadic
    year to year with possible yield losses reaching 20 % on average (Harveson et
    al., 2013). Infected stems and branches affected plant parts to wilt and die,
    resulting in a dried bleached appearance (Fig. 11, C-3). Later, personal communication
    with the grower confirmed the occurence of white mold at the C-3 field. Download
    : Download high-res image (165KB) Download : Download full-size image Fig. 10.
    An example of estimating t1 using CRG algorithm and constraints at R-1 field.
    Orange line represented increasing CC of the 1st stage, and red line represented
    CC of the 2nd stage. (For interpretation of the references to color in this figure
    legend, the reader is referred to the web version of this article.) Table 3. Estimated
    average CCmax and tmax_canopy of six fields. Loc. t1 t2 Average CCmax, % tmax_canopy,
    d Yield, kg ha−1 R-1 48 (7/18) 80 (8/19) 76.6 33 436 R-2 53 (7/23) 80 (8/19) 70.7
    28 315 R-3 61 (7/31) 75 (8/14) 78.5 15 329 C-1 63 (7/28) 84 (8/18) 82.2 22 403
    C-2 N/A N/A N/A N/A 322 C-3 79 (8/6) 93 (8/20) 53.0 15 268 t1: days after planting
    to beginning of maximum canopy cover, and the date shown in parentheses. t2: days
    after planting to end of maximum canopy cover, and the date shown in parentheses.
    tmax_canopy: duration between t1 and t2. Average CCmax: Average maximum canopy
    cover during tmax_canopy. Download : Download high-res image (949KB) Download
    : Download full-size image Fig. 11. Maximum canopy cover (CCmax) obtained from
    CanopyCAMs and yield of the six fields. As previously mentioned, tmax_canopy could
    be another parameter related to yield of dry edible beans. To our best knowledge,
    tmax_canopy for DEBs is not available in the literature, possibly due to the inability
    to monitor CC frequently or continuously either using LAI meter, drone, or satellite
    images. Yet, many studies have used drone or satellite images to estimate CC using
    normalized difference vegetation index (NDVI) and fractional green canopy cover
    (FGCC) to correlate CC and yield potential at certain times of crop growing stages
    (Garcia-Martinez et al., 2020; Reed et al., 2021, Tenreiro et al., 2021). Discrete
    monitoring (bi-weekly or monthly) of CC using drone or satellite images has been
    a popular method to determine the relationship between CC and yield, but it does
    not account for the duration of maximum CC. Fig. 12a and Fig. 12b showed correlation
    of CCmax with yield (R2 = 0.58) and tmax_canopy with yield (R2 = 0.45) when they
    were individually considered. After conducting a multiple variable regression
    analysis, by considering CCmax and tmax_canopy together, the correlation with
    yield was improved (R2 = 0.77, Adjusted R2 = 0.62). It should be noted that the
    multiple linear regression of yield among CCmax and tmax_canopy was not significant
    (p-value greater than 0.05) due to the small sample size (n = 5). It should also
    be noted that the improved R2 doesn’t mean CCmax and tmax_canopy were correlated
    with dry bean yield, at least based on this study’s results. Rather, the results
    here are used to show CCmax and tmax_canopy can be extracted based on CanopyCAM
    and demonstrate its potential applications. Download : Download high-res image
    (460KB) Download : Download full-size image Fig. 12. A. correlation of average
    ccmax with yield (R2 = 0.58, p-value = 0.23); b. Correlation of tmax_canopy with
    yield (R2 = 0.45, p-value = 0.21); c. Correlation of CCmax and tmax_canopy with
    yield (R2 = 0.77, Adjusted-R2 = 0.62, p-value = 0.13), x represented Average CCmax,
    y represented tmax_canopy, and z represented yield. 3.3. Comparison of different
    canopy sensing design with CanopyCAM In recent years, several studies have used
    image processing and edge-computing concept to determine NDVI, canopy cover, and
    crop condition (Kim et al., 2019, Chamara et al., 2021, Taylor and Browning, 2022).
    Kim et al. (2019) developed a Smart Surface Sensing system (4S) that monitor canopy
    color, vegetation index, leaf area index, and fraction of absorbed photosynthetically
    active radiation (fPAR) at rice paddy site using Raspberry Pi with a camera, multi-spectral
    spectrometer, and Wi-Fi for processed data transmission. Compared to Kim et al.
    (2019), CanopyCAM used LoRaWAN rather than Wi-Fi. The processed results were displayed
    near real-time at our in-housed website. In addition, CC from CanopyCAM achieved
    higher performance (RMSE and R2 were 2.95 % and 0.99 compared to CC derived from
    LI-COR LAI; R2 was 0.76 in Kim et al. (2019) compared to Li-COR LAI derived CC).
    Chamara et al. (2021) developed a soybean leaf detection algorithm using Deep
    Convolutional Neural Network (DCNN) and RGB images collected in 30 days using
    Rapsberry Pi based camera devices. The image taken from the field was reduced
    from 1920 × 1080 resolution to 512 × 512 resolution to reduce image processing
    time. They also used LoRaWAN to transmit processed results. The accuracy of green
    pixel segmentation using DCNN in Chamara et al. (2021) was 94 %. It was not clear
    how this accuracy value was obtained. While in this study, readings from CanopyCAM
    were evaluated against a widely used LI-COR plant canopy analyzer with good performance.
    Compared to Chamara et al. (2021), using our algorithm and configuration of CanopyCAM,
    the image didn’t need to be compressed (image resolution is 2592 × 1944 and can
    be higher if needed, current processing time 2 ∼ 3 seconds). The higher resolution
    will also imply other uses in the future, such as disease detection, which would
    require more details from leaves. Furthermore, compared to Chamara et al. (2021),
    our algorithm was fully developed in house based on different classes of color
    groups using Mahalanobis distance equation and can be easily customized for different
    situations. In addition, LoRaWAN-based data transmission in our study was tested
    in commercial farm settings, where Chamara et al. (2021) tested it in a research
    farm setting. Lastly, our results can be readily displayed at an in-house developed
    website and that be viewed by growers and researchers. Taylor and Browning (2022)
    developed a PhenoCAM that automatically classify crop phenology, flooded condition
    and snow-covered fields. Our study focused on continuous monitoring of crop CC
    rather than crop phenology or field conditions, and thus is different than Taylor
    and Browning (2022). Also, it is not clear how hardware was set up in Taylor and
    Browning (2022), or how data was transmitted and displayed. In summary, compared
    to previous studies, this research is unique in several aspects: 1) CanopyCAM
    is a complete solution with hardware and software that can determine crop CC continuously
    with high accuracy and has been tested at both research and commercial dry bean
    fields; 2) The algorithm of CanopyCAM was fully developed in house based on different
    classes of color groups using Mahalanobis distance equation and can be easily
    adjusted to accommodate different situations; 3) Canopy cover from CanopyCAM has
    been compared against commercial device (LI-COR plant canopy analyzer) and achieved
    good performance, and 4) The results can be displayed near real-time at our in-housed
    programmed website for visualization. 4. Conclusions This study described the
    development of software, hardware, and visualization for a IoT edge-computing
    device – CanopyCAM, that could monitor dry edible beans CC continuously throughout
    the growing season. The device provided accurate CC readings which could be used
    by growers and researchers for different purposes. The edge-computing, IoT enabled
    capability of CanopyCAM, also provided simple, low-cost method to report readings
    at different user-end interfaces. Key findings were: 1. CanopyCAM was able to
    provide automatic, real-time, continuous, and accurate CC readings. Among the
    six deployed CanopyCAM devices during the 2021 growing season, the RMSE of post-processed
    CCCanopyCAM for each day was 2.2–7.5 % as compared to CCLAI with R2 of 0.99. 2.
    Based on the continuous monitoring of CC, parameters such as CCmax and tmax_canopy
    can be extracted and can be potentially used for different purposes. Although
    good performance of CanopyCAM was achieved, there are few limitations. CanopyCAM
    is still a ground-based, point-sourced measurement device. For large-scale commercial
    fields, CanopyCAM faces the same challenges as other commercially available ground-based,
    point-sourced devices such as soil moisture sensors in terms of field heterogeneities
    from soil types, management, and other environmental variables. Several future
    work are proposed: 1) redesign the camera casing and add lens hood using 3D printed
    materials to physically reduce overexposure of images and increase number of usable
    images; 2) adjust camera settings of CanopyCAM to allow more usable images; 3)
    broaden the use of CanopyCAM to include disease recognition, weed detection, and
    crop water use calculation; 4) test CanopyCAM for other crops such as corn and
    sugar beets; 5) improve spatial resolution of CanopyCAM by mounting CanopyCAM
    on irrigation system and integrate with GPS. 5. Authorship statements The authors
    confirm contribution to the paper as follows: Xin Qiao was responsible for conception
    and design of the study. Wei-zhen Liang analyzed and interpreted results and drafted
    the manuscript. Wei-zhen Liang also developed the software and algorithm. Joseph
    Oboamah designed the hardware. Xin Qiao, Yufeng Ge, Bob Harveson, Daran Rudnick,
    Jun Wang, and Haishun Yang revised the manuscript critically and contributed intellectual
    contents. Angie Gradiz was responsible for acquisition of some of data used in
    this study. All authors reviewed the results and approved the final version of
    the manuscript. Declaration of Competing Interest The authors declare that they
    have no known competing financial interests or personal relationships that could
    have appeared to influence the work reported in this paper. Acknowledgements We
    greatly appreciate the financial support from Nebraska Dry Bean Commission on
    this project. We also would like to acknowledge the funding support from USDA
    with Award No. 2019-67021-29227. This research project is also supported by the
    USDA National Institue of Food and Agriculture (Hatch project NEB-21-177, accession
    number 1015698). We also want to thank the editor and reviewers’ constructive
    comments and suggestions that have significantly improved this manuscript. Data
    availability Data will be made available on request. References Adelantado et
    al., 2017 F. Adelantado, X. Vilajosana, P. Tuset-Peiro, B. Martinez, J. Melia-Segui,
    T. Watteyne Understanding the Limits of LoRaWAN IEEE Communications Magazine,
    55 (9) (2017), pp. 34-40 View in ScopusGoogle Scholar Buchi et al., 2018 L. Buchi,
    M. Wendling, P. Mouly, R. Charles Comparison of visual assessment and digitao
    image analysis for canopy cover estimation Agronomy, 110 (2018), pp. 1289-1295
    CrossRefView in ScopusGoogle Scholar Chamara et al., 2021 Chamara, A.H.M.N., K.
    Alkady, H. Jin, F. Bai, A.K. Smal, and Y. Ge. 2021. Deep convolutional neural
    network based image processing framework for monitoring the growth of soybean
    crops. ASABE paper #2100259. Annual Meeting, Virtual Meeting. July 12th -16th.
    Google Scholar Chen et al., 2018 B. Chen, J. Wan, A. Celesti, D. Li, H. Abbas,
    Q. Zhang Edge computing in IoT-based manufacturing IEEE Communications Magazine,
    56 (9) (2018), pp. 103-109 CrossRefView in ScopusGoogle Scholar Chena et al.,
    2010 X. Chena, Y. Xunb, W. Li, J. Zhang Combining discriminant analysis and neural
    networks for corn variety identification Computers and Electronics in Agriculture,
    71 (2010), pp. 48-53 Google Scholar Colaizzi et al., 2012 P.D. Colaizzi, W.P.
    Kustas, M.C. Anderson, N. Agam, J.A. Tolk, S.R. Evett, T.A. Howell, P.H. Gowda,
    S.A. O’Shaughnessy Two-source energy balance model estimates of evapotranspiration
    using component and composite surface temperatures Advances Water Resources, 50
    (2012), pp. 134-151 View PDFView articleView in ScopusGoogle Scholar Dai et al.,
    2009 X. Dai, X. Jia, W. Zhang, Y. Bai, J. Zhang, Y. Wang, G. Wang Plant height-crown
    radius and canopy coverage-density relationships determine above-ground biomass-density
    relationship in stressful environments Biology letters, 5 (4) (2009), pp. 571-573
    CrossRefView in ScopusGoogle Scholar Devroye et al., 1996 L. Devroye, L. Gyorfi,
    G. Lugosi A probabilistic theory of pattern recognition (1st Edition), Springer,
    New York (1996) Google Scholar Diago et al., 2012 M. Diago, C. Correa, N. Millan,
    P. Barreiro, C. Valero, J. Tardaguila Grapevine yield and leaf area estimation
    using supervised classification methodology on RGB images taken under field conditions
    Sensors, 12 (2012), pp. 16988-17006 CrossRefView in ScopusGoogle Scholar Drewry
    et al., 2010 D.T. Drewry, P. Kumar, S. Long, C. Bernacchi, X.-Z. Liang, M. Sivapalan
    Ecohydrological responses of dense canopies to environmental variability: 1. Interplay
    between vertical structure and photosynthetic pathway Geophysics Research: Biogeoscience,
    115 (G4) (2010) Google Scholar García-Martínez et al., 2020 H. García-Martínez,
    H. Flores-Magdaleno, R. Ascencio-Hernández, A. Khalil-Gardezi, L. Tijerina-Chávez,
    O.R. Mancilla-Villa, M.A. Vázquez-Peña Corn Grain Yield Estimation from Vegetation
    Indices, Canopy Cover, Plant Density, and a Neural Network Using Multispectral
    and RGB Images Acquired with Unmanned Aerial Vehicles Agriculture, 20 (7) (2020),
    p. 277 CrossRefGoogle Scholar Harveson et al., 2013 Harveson, R.M., Steadman,
    J.R., and Schwarz, H.F. 2013. White mold of dry beans. Nebguide G1786. University
    of Nebraska-Lincoln. Google Scholar Hitimana and Gwun, 2014 E. Hitimana, O. Gwun
    Automatic estimation of live coffee leaf infection based on image processing techniques
    Second International Conference on Signal, Image, Processing and Pattern Recognition
    (2014), pp. 255-266 CrossRefGoogle Scholar Hoffman et al., 2016 H. Hoffman, H.
    Nieto, R. Jensen, R. Guzinski, P. Zarco-Tejada, T. Friborg Estimating evaporation
    with thermal UAV data and two-source energy balance models Hydrology Earth System
    Science, 20 (2016), pp. 697-713 Google Scholar Kim et al., 2019 J.Y. Kim, C.J.
    Ryu, Y. Hwang Continuous observation of vegetation canopy dynamics using an integrated
    low-cost, near-surface remote sensing system Agricultural and Forest Meteorology,
    264 (2019), pp. 164-177 View PDFView articleCrossRefView in ScopusGoogle Scholar
    Liang et al., 2018 W.-Z. Liang, K.R. Kirk, J.K. Greene Estimation of soybean leaf
    area, edge, and defoliation using image analysis Computers and Electronics in
    Agriculture, 150 (2018), pp. 41-51 View PDFView articleView in ScopusGoogle Scholar
    Liang et al., 2021 W.-Z. Liang, I. Possignolo, X. Qiao, K. DeJonge, S. Irmak,
    D. Heeren, D. Rudnick Utilizing digital image processing and two-source energy
    balance model for the estimation of evapotranspiration of dry edible beans in
    western Nebraska Irrigation Science, 39 (5) (2021), pp. 617-631 CrossRefView in
    ScopusGoogle Scholar Ma et al., 2001 B.L. Ma, L.M. Dwyer, C. Costa, E.R. Cober,
    M.J. Morrison Early prediction of soybean yield from canopy reflectance measurements
    Agronomy, 93 (6) (2001), pp. 1227-1234 CrossRefView in ScopusGoogle Scholar Malone
    et al., 2002 S. Malone, D.M. Herbert, D.L. Holshouser Evaluation of the LAI-2000
    plant canopy analyzer to estimate leaf area in manually defoliated soybean Journal
    of Agronomy, 94 (2002), pp. 1012-1019 CrossRefView in ScopusGoogle Scholar Masood
    et al., 2016 R. Masood, S.A. Khan, M.N.A. Khan Plants disease segmentation using
    image processing. I.J Modern Education and Computer Science, 1 (2016), pp. 24-32
    CrossRefGoogle Scholar NDBC, 2019 NDBC. Nebraska Dry Bean Commission. 2019. http://nebraskadrybean.nebraska.gov.
    Google Scholar Norman et al., 1995 J.M. Norman, W.P. Kustas, K.S. Humes A two-source
    approach for estimating soil and vegetation energy fluxes from observations of
    directional radiometric surface temperature Agriculture Forestry Meteorology,
    77 (1995), pp. 263-293 View PDFView articleView in ScopusGoogle Scholar North,
    2019 NDSU. North Dakota State University dry bean production guide. 2019. https://www.ag.ndsu.edu/publications/crops/dry-bean-production-guide.
    Google Scholar O’Neal et al., 2002 M.E. O’Neal, D.A. Landis, R. Issacs An inexpensive,
    accurate method for measuring leaf area and defoliation through digital image
    analysis Journal of Economic Entomology, 95 (6) (2002), pp. 1190-1194 CrossRefView
    in ScopusGoogle Scholar Patrignani and Ochsner, 2015 A. Patrignani, T.E. Ochsner
    Canopeo: a powerful new tool for measuring fractional green canopy cover Agronomy,
    107 (2015), pp. 2312-2320 CrossRefView in ScopusGoogle Scholar Qiao et al., 2016
    X. Qiao, H.J. Farahani, A. Khalilian, E.M. Barnes Cotton water productivity and
    growth parameters in the humid southeast: experimentation and modeling Transactions
    of the ASABE, 59 (3) (2016), pp. 949-962 View in ScopusGoogle Scholar Reed et
    al., 2021 V. Reed, D.B. Arnall, B. Finch, J.L.B. Souza Predicting winter wheat
    grain yield using fractional green canopy cover (FGCC) International Journal of
    Agronomy, 2021 (2021), p. 1443191 View in ScopusGoogle Scholar Schmitz and Kandel,
    2021 P.K. Schmitz, H.J. Kandel Using Canopy Measurements to Predict Soybean Seed
    Yield Remote Sensing, 13 (16) (2021), p. 3260 CrossRefView in ScopusGoogle Scholar
    Taylor and Browning, 2022 S.D. Taylor, D.M. Browning Classification of daily crop
    phenology in PhenoCams using deep learning and hidden Markov models Remote Sensing,
    14 (2022), p. 286 CrossRefView in ScopusGoogle Scholar Tenreiro et al., 2021 T.R.
    Tenreiro, M. García-Vila, J.A. Gómez, J.A. Jiménez-Berni, E. Fereres Using NDVI
    for the assessment of canopy cover in agricultural crops within modelling research
    Computers and Electronics in Agriculture, 182 (2021), Article 106038 View PDFView
    articleView in ScopusGoogle Scholar Westgate et al., 1997 M.E. Westgate, F. Forcella,
    D.C. Reicosky, J. Somesen Rapid canopy closure for maize production in the northern
    US corn belt: Radiation-use efficiency and grain yield Field Crops Research, 49
    (2) (1997), pp. 249-258 View PDFView articleView in ScopusGoogle Scholar Yang
    et al., 2018 Y. Yang, J. Qiu, R. Zhang, S. Huang, S. Chen, H. Wang, J. Luo, Y.
    Fan Intercomparison of three two-source energy balance models for partitioning
    evaporation and transpiration in semiarid climates Remote Sensing, 10 (2018),
    p. 1149 CrossRefView in ScopusGoogle Scholar Cited by (4) AICropCAM: Deploying
    classification, segmentation, detection, and counting deep-learning models for
    crop monitoring on the edge 2023, Computers and Electronics in Agriculture Show
    abstract An Edge-computing flow meter reading recognition algorithm optimized
    for agricultural IoT network 2023, Smart Agricultural Technology Show abstract
    Developing Education, Research, and Extension Training on Precision Agriculture
    Phenotyping Tools at HBCU Communities 2023, 2023 ASABE Annual International Meeting
    Intelligent IoT-based Combined Crop-type and Disease Prediction System with Different
    Machine Learning &amp; Deep Learning Techniques 2023, International Conference
    on Electrical Engineering, Computer Science and Informatics (EECSI) © 2022 The
    Author(s). Published by Elsevier B.V. Recommended articles Parameter optimization
    and simulation analysis of floating root cutting mechanism for garlic harvester
    Computers and Electronics in Agriculture, Volume 204, 2023, Article 107521 Zhaoyang
    Yu, …, Mingjin Yang View PDF Discrete element modeling and shear properties of
    the maize stubble-soil complex Computers and Electronics in Agriculture, Volume
    204, 2023, Article 107519 Shilin Zhang, …, Yuxiang Huang View PDF A defencing
    algorithm based on deep learning improves the detection accuracy of caged chickens
    Computers and Electronics in Agriculture, Volume 204, 2023, Article 107501 Jikang
    Yang, …, Haikun Zheng View PDF Show 3 more articles Article Metrics Citations
    Citation Indexes: 4 Captures Readers: 9 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: CanopyCAM – an edge-computing sensing unit for continuous measurement of
    canopy cover percentage of dry edible beans
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh R.
  - Singh R.
  - Gehlot A.
  - Akram S.V.
  - Priyadarshi N.
  - Twala B.
  citation_count: '16'
  description: The United Nations emphasized a significant agenda on reducing hunger
    and protein malnutrition as well as micronutrient (vitamins and minerals) malnutrition,
    which is estimated to affect the health of up to two billion people. The UN also
    recognized this need through Sustainable Development Goals (SDG 2 and SDG 12)
    to end hunger and foster sustainable agriculture by enhancing the production and
    consumption of fruits and vegetables. Previous studies only stressed the various
    issues in horticulture with regard to industries, but they did not emphasize the
    centrality of Industry 4.0 technologies for confronting the diverse issues in
    horticulture, from production to marketing in the context of sustainability. The
    current study addresses the significance and application of Industry 4.0 technologies
    such as the Internet of Things, cloud computing, artificial intelligence, blockchain,
    and big data for horticulture in enhancing traditional practices for disease detection,
    irrigation management, fertilizer management, maturity identification, marketing,
    and supply chain, soil fertility, and weather patterns at pre-harvest, harvest,
    and post-harvest. On the basis of analysis, the article identifies challenges
    and suggests a few vital recommendations for future work. In horticulture settings,
    robotics, drones with vision technology and AI for the detection of pests, weeds,
    plant diseases, and malnutrition, and edge-computing portable devices that can
    be developed with IoT and AI for predicting and estimating crop diseases are vital
    recommendations suggested in the study.
  doi: 10.3390/app122412557
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Applied Sciences All Article Types
    Advanced   Journals Applied Sciences Volume 12 Issue 24 10.3390/app122412557 Submit
    to this Journal Review for this Journal Propose a Special Issue Article Menu Academic
    Editors José Miguel Molina Martínez Ginés García-Mateos Dolores Parras-Burgos
    Show more... Subscribe SciFeed Recommended Articles Related Info Link More by
    Authors Links Article Views 5226 Citations 16 Table of Contents Abstract Introduction
    Overview of Horticulture and Industry 4.0 Intervention of Industry 4.0 in Horticulture
    Results Discussion and Recommendation Conclusions Author Contributions Funding
    Institutional Review Board Statement Informed Consent Statement Data Availability
    Statement Conflicts of Interest References share Share announcement Help format_quote
    Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessReview Horticulture 4.0: Adoption of
    Industry 4.0 Technologies in Horticulture for Meeting Sustainable Farming by Rajat
    Singh 1, Rajesh Singh 2,3, Anita Gehlot 2,3, Shaik Vaseem Akram 2,4, Neeraj Priyadarshi
    5,* and Bhekisipho Twala 6,* 1 School of Agriculture, Uttaranchal University,
    Dehradun 248007, Uttarakhand, India 2 Uttaranchal Institute of Technology, Uttaranchal
    University, Dehradun 248007, Uttarakhand, India 3 Department of Project Management,
    Universidad Internacional Iberoamericana, Campeche 24560, CP, Mexico 4 Law College
    Dehradun, Uttaranchal University, Dehradun 248007, Uttarakhand, India 5 Department
    of Electrical Engineering, JIS College of Engineering, Kolkata 741235, West Bengal,
    India 6 Digital Transformation Portfolio, Tshwane University of Technology, Staatsartillerie
    Rd, Pretoria West, Pretoria 0183, South Africa * Authors to whom correspondence
    should be addressed. Appl. Sci. 2022, 12(24), 12557; https://doi.org/10.3390/app122412557
    Submission received: 14 September 2022 / Revised: 26 October 2022 / Accepted:
    9 November 2022 / Published: 8 December 2022 (This article belongs to the Special
    Issue Agriculture 4.0 – the Future of Farming Technology) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract The United Nations emphasized a significant agenda
    on reducing hunger and protein malnutrition as well as micronutrient (vitamins
    and minerals) malnutrition, which is estimated to affect the health of up to two
    billion people. The UN also recognized this need through Sustainable Development
    Goals (SDG 2 and SDG 12) to end hunger and foster sustainable agriculture by enhancing
    the production and consumption of fruits and vegetables. Previous studies only
    stressed the various issues in horticulture with regard to industries, but they
    did not emphasize the centrality of Industry 4.0 technologies for confronting
    the diverse issues in horticulture, from production to marketing in the context
    of sustainability. The current study addresses the significance and application
    of Industry 4.0 technologies such as the Internet of Things, cloud computing,
    artificial intelligence, blockchain, and big data for horticulture in enhancing
    traditional practices for disease detection, irrigation management, fertilizer
    management, maturity identification, marketing, and supply chain, soil fertility,
    and weather patterns at pre-harvest, harvest, and post-harvest. On the basis of
    analysis, the article identifies challenges and suggests a few vital recommendations
    for future work. In horticulture settings, robotics, drones with vision technology
    and AI for the detection of pests, weeds, plant diseases, and malnutrition, and
    edge-computing portable devices that can be developed with IoT and AI for predicting
    and estimating crop diseases are vital recommendations suggested in the study.
    Keywords: horticulture; micronutrient; Industry 4.0; SDGs; IoT; blockchain; real-time
    prediction; AR; bigdata 1. Introduction According to the Food and Agriculture
    Organization and World Health Organization State of Food Security and Nutrition
    in the World (SOFI) report,45 million children die from the deadliest form of
    malnutrition under the age of five [1]. A chronic deficiency of essential nutrients
    in their nutrition has also resulted in delayed development and growth in two
    billion children under the age of five. This indicates that there is a need to
    have more emphasis on overcoming food insecurity and malnutrition due to climate
    extremes and economic disruption. Even the SDGs (SDG 2 and SDG 12) of the UN emphasize
    eradicating hunger and enhancing food security with responsible consumption and
    production toward sustainability [2,3]. Healthy micronutrients for overcoming
    malnutrition can be achieved with sustainable farming of fruits and vegetables,
    i.e., horticulture [4]. India is currently the world’s second-largest producer
    of fruits and vegetables, trailing only China. Horticulture comprises fruits,
    root and tuber crops, mushrooms, vegetables, spices, aromatic plants, flowers,
    bamboo, coconut, cashew, and cocoa. Different strategies such as technology promotion,
    research, post-harvest management, and marketing are key for the growth of horticulture.
    Improving horticulture production, increasing farmer income, improving nutritional
    security, and improving productivity by using quality germplasm, planting material,
    and micro irrigation to save water are the key vision of India for the promotion
    of holistic horticulture growth. Horticulture crops significantly contribute to
    the Indian economy by enhancing farm output, generating employment, and providing
    raw materials to various food-processing businesses [5]. The amount of land allotted
    for horticulture is minimal, but the demand for the production of horticulture
    is high. Therefore, meeting the demand with minimum resources is a bit challenging,
    as sustainable practices need to be adopted to meet a sustainable environment
    [6]. It has also been observed that the export rate of Asian countries such as
    India has increased in the past few years; however, there are a few challenges
    such as meeting quality standards set by international countries and payment for
    exports. The main challenge in fruits and vegetables is the short lifetime after
    plucking. Additionally, given that the majority of horticulture cultivation is
    processed in rural areas, it has been determined that horticulture has to be promoted
    in urban areas. 1.1. Problem Statement Ref. [7] discussed the main problems that
    are present in horticulture, including the decline of fertile soil, global warming,
    rising land prices, shortage of water, and lost opportunity of low-cost labor,
    all of which portray serious threats to growth of horticulture. For horticultural
    crops, abiotic stresses like an inundation, temperature extremes, salinity, pH,
    and drought are major obstacles. As an outcome of global warming, there will be
    less precipitation all in all, and the snow cover will melt faster, resulting
    in extreme drought. These circumstances lead to several stress-related problems,
    including the deficit of fertile soil, flooding, increased evapotranspiration,
    low soil-oxygen levels, decreased production, leachate of nutrients, and slow
    planting. Alongside increasing temperatures, global warming had also contributed
    to record-breaking cold weather. Land salinity and irrigation-water salinity are
    also significant concerns for horticultural production. Along with these problems,
    previous studies also discussed that sustainable pest-management methods need
    to be adopted to protect against pathogens and pest resistance. The absence of
    markets to accumulate production, the substantial percentage of middlemen, the
    absence of marketing institutions safeguarding farmers’ interests, the imperfect
    pricing system, and the absence of transparency in market-information systems,
    especially in the export market, is the main marketing problems for horticultural
    produce. 1.2. Motivation, Novelty, and Contribution of the Study As discussed
    above, the traditional approaches lack appropriate monitoring of pest control,
    water management, soil management, light control, and temperature control, as
    these parameters are crucial for the effective production of horticulture with
    a sustainability aspect. The previous study found that the different issues in
    this group highlight the necessity for more environmentally sound processes, in
    addition to a rise in the utilization of automated systems and accurate processes.
    Industry 4.0 technology has proven its capability in various applications through
    the fusion of advanced technologies such as the Internet of Things, artificial
    intelligence, blockchain, robotics, digital twins, and big data. The amalgamation
    of Industry 4.0 and horticulture provides the opportunity to transform industrial
    agriculture into the next generation, namely Horticulture 4.0. Moreover, Industry
    4.0 is capable of achieving sustainable and intelligent ecosystem with real-time
    management of farming, automation, intelligent decisions, real-time processing,
    and analysis [8]. It has proved that Industry 4.0 technologies have already delivered
    exceptional results in greenhouse farming for a sustainable food supply chain
    with the integration of hardware and software algorithms and giving rise to higher
    yields using fewer resources and less water. Although many studies have addressed
    Industry 4.0 technologies individually for fruits and vegetables, they are limited
    studies that merely address multiple Industry 4.0 digital technologies as single
    concepts for discussing their significance in horticulture. Based on the aforementioned
    information, this study analyzed the value and applications of Industry 4.0 technologies
    in horticulture for real-time monitoring of fruit-and-vegetable conditions in
    various environmental settings, intelligent and predictive analytics for fruit-and-vegetable
    growth and disease estimation, and virtual horticulture plants. The contribution
    of the study is as follows: The significance of using Industry 4.0 technologies
    for horticulture is discussed in the study for sustainability. We also discuss
    the significance and applications of the Internet of Things, cloud computing,
    artificial intelligence, blockchain, and big data for horticulture for enhancing
    traditional practices for disease detection, irrigation management, fertilizer
    management, maturity identification, marketing, and the supply chain, soil fertility,
    and weather patterns at pre-harvest, harvest, and post-harvest Finally, the article
    discusses the challenges and suggests recommendations for the wide adoption of
    any future enhancement in the vicinity of horticulture. In horticulture settings,
    robotics, drones with vision technology and AI for the detection of pests, weeds,
    plant diseases, and malnutrition, and edge-computing portable devices that can
    be developed with IoT and AI for predicting and estimating the disease of crops
    are vital recommendations suggested in the study. 1.3. Methodology of the Study
    In this section, the methodology of the study is presented. Based on the limitations
    identified in previous studies, this study framed a research question that was
    employed to carry out the review. The research question was, “What is the progress
    and significance of Industry 4.0 technology integration in horticulture?” This
    research question constructed various keywords with Boolean function operators
    in the Scopus and Web of Science databases. The following strings were considered
    for obtaining publications: “horticulture AND Industry 4.0”, “horticulture AND
    sustainability”, “Industry 4.0 for fruits and vegetables”, “Industry 4.0 AND digitalization”,
    “horticulture AND digitalization”, “horticulture AND IoT”, “IoT AND fruits and
    vegetables”, “disease detection AND horticulture crop”, “blockchain AND horticulture”,
    “artificial intelligence AND horticulture”, “quality assessment AND artificial
    intelligence”, “big data AND horticulture”, “blockchain AND marketing of fruits
    and vegetables”, “blockchain AND energy”, “crop monitoring AND horticulture”,
    and “soil fertility AND horticulture.” During the search for articles, there was
    al ack of articles that merely emphasized the integration of Industry 4.0 for
    horticulture. Therefore, we considered a few conference articles and other supportive
    articles in this study. Based on the obtained articles, the study categorized
    four different sub-sections in which the progress and significance of the previous
    studies that implemented Industry 4.0 for enhancing horticulture from production
    to marketing are assessed. After analyzing the studies, few limitations were identified
    and vital recommendations for future work were suggested. 1.4. Comparative Analysis
    Table 1 provides a comparative analysis of the different studies that focused
    on horticulture that are analyzed within the proposed study. In most previous
    studies, it was identified that the study only focused on some key areas in horticulture,
    like yield monitoring, pesticide monitoring, and quality assessment. A recent
    study emphasized the different issues in horticulture from the perspective of
    industries. Along with this, [9] reviewed the different critical parameters that
    are required for automation with IoT for vertical gardens. Ref. [10] carried out
    a review on the significance of deep-learning models in horticulture for various
    applications. Ref. [11] discussed the implementation of digital twins in horticulture.
    However, there is a possibility of emphasizing the importance of multiple Industry
    4.0 technologies for addressing the different issues of horticulture from production
    to marketing. The current study focused on discussing the different Industry 4.0
    technologies for overcoming the different issues of horticulture within the context
    of sustainability. This study highlights the significance and application of Industry
    4.0 for horticulture. Based on the limitations identified, this study also discusses
    vital recommendations for future work. Table 1. Comparative analysis of the previous
    studies with the current study. The following describes how the study is structured:
    Section 2 discusses an overview of Horticulture 4.0 and Industry 4.0 technologies,
    Section 3 addresses the intervention of Industry 4.0 technologies in horticulture,
    and Section 4 covers the discussion and recommendations. 2. Overview of Horticulture
    and Industry 4.0 High temperatures have two main effects on crop production: they
    inhibit vegetative growth and have a detrimental effect on fruit production. Prolonged
    transpiration along with subjection to extreme temperatures limits vegetable crops
    that are susceptible to considerable transpiration deficits [16,17]. Another problem
    is that the maximum time for the fruit set is proportional to humidity levels.
    Extremely high temperatures can occur. The obvious limitation encountered by cold
    temperatures is the freezing of plant tissues. Rapidly pushing freezing temperatures
    at a phase of rapid growth might cause damage to a variety of plant tissues [18,19].
    Some plants can adapt to cold temperatures provided there is sufficient time and
    the appropriate circumstances, whereas others cannot. Changes in regional precipitation
    patterns may cause an increase in drought conditions in many different parts of
    the world as atmospheric CO2 levels to rise [20]. Although the current belief
    is that leaf photosynthetic responds to high CO2 as well as soil-water deficiency,
    the connections between CO2 enrichment and drought stress remain unexplored [21].
    These are the few problems that have been addressed by previous studies in the
    area of horticulture. Below, we discuss the significance of Industry 4.0 technologies
    and their importance in enhancing practices in horticulture. Industry 4.0, often
    known as the Fourth Industrial Revolution, is the phenomenon that results from
    the impact of the IoT on information and communication technology. With the help
    of technologies like the integration of cyber-physical systems (CPS), IoT, and
    the real-time interaction between machinery, software, and people, it aims to
    revolutionize the industry through smart factories that will enable greater flexibility
    in production needs, efficient resource allocation, and process integration from
    device monitoring to final delivery [22]. Figure 1 depicts the technologies that
    can be intervened in horticulture, such as artificial intelligence (AI), blockchain,
    big data, the Internet of things (IoT), and cloud computing, in industry 4.0.
    Figure 1 illustrates the implementation and application area in which Industry
    4.0 can be adopted for horticulture. In horticulture, there are different stages,
    including pre-harvesting, harvest, and post-harvest. Industry 4.0 technologies
    cover the following parameters for horticulture: automation of actuators, disease
    detection, irrigation management, fertilizer management, maturity identification,
    marketing and supply chain, soil fertility, and weather patterns. Along with these
    applications, Industry 4.0 integration in horticulture enables quality assessment
    and grading of horticulture products. The quality assessment of horticulture products
    is different in the three stages. The following are aspects through which the
    quality and grading of a horticulture product are decided, and they are typical
    cultivar ripeness, absence of defects and blemishes, a non-harmful number of pesticide
    residues, freshness, and other chemicals. Therefore, the quality assessment and
    grading of horticulture products mainly rely on the parameters discussed above.
    The monitoring of each parameter and utilizing the data generated from different
    wireless sources with Industry 4.0 technologies boost the performance of the horticulture
    industry for the future. Figure 1. Horticulture 4.0. Overview of Technologies
    and TheirFunctions IoT is the primary technology that enables the provision of
    real-time information that is required for other technologies to implement their
    functions. IoT is an open network of intelligent devices that may self-organize;
    exchange information, data, and resources; and respond and act according to circumstances
    and environmental changes [22]. Fundamentally, IoT comprises the following layers
    in its architecture: perception layer, access layer, network layer, middleware
    layer, and application layer [23]. The perception layer is a key layer in which
    sensors, actuators, and identification technologies empower the transmission of
    real-time information and also enable control of things from remote locations
    through internet connectivity. The network layer empowers the transmission of
    packets of data with the assistance of communication protocols that are embedded
    in the architecture. Wireless fidelity (Wi-Fi), Bluetooth, and Zigbee are widely
    used communication protocols to establish a wireless sensor network and connect
    it with the internet to form the IoT [24]. The limitations of these communication
    protocols are the short transmission range and high-power consumption. In view
    of the IoT, most IoT devices are resource-constrained (work on battery power),
    so it demands communication protocols that consume less energy and transmit to
    a long range. A low-power–wide-area network (LPWAN) enables these challenges to
    be overcome, as it meets the requirements of the IoT [25]. Long-range (LoRa),
    Sigfox, and narrowband (NB-IoT) are LPWAN communication technologies. As part
    of the application layer, a cloud server is suitable for visualization, real-time
    monitoring, and applying further analytics on the data available in it.AI is the
    science of enabling computers to accomplish intelligent tasks that could only
    be completed by humans. AI is a multidisciplinary technology capable of combining
    machine learning, cognition, human-computer interaction, emotion recognition,
    data storage, and decision-making [26]. The bottleneck of AI was overcome with
    the advancement of processing power, and the development of deep learning and
    enhanced learning based on huge data progressed. With the constant advancement
    of GPUs has come the successful development of customized processors and increased
    computer capacity; this has established the groundwork for AI’s rapid progress.
    Artificial neural networks (ANNs), decision-support systems (DSSs), genetic algorithms
    (Gas), support-vector machines, and computer vision are some of the AI techniques
    that are widely applied in the field of agriculture for the management of soil,
    crops, disease, and weeds [27]. Big data is defined as data sets that are too
    massive or complicated to be acquired, maintained, and processed in a low-latency
    manner by conventional database systems [28]. Big data has characteristics such
    as high volume, high velocity, and high variety. Big-data analytics can ultimately
    enable better and faster decision-making, model, and forecast future outcomes,
    and improve business intelligence [29]. A distributed, unchangeable database called
    blockchain makes it simpler to track assets and record transactions in a corporate
    network [30]. Distributed ledger technology, immutable records, and smart contracts
    are the key elements of blockchain. Each transaction is logged as a “block” of
    data as it occurs. Each block is linked to the ones that come before and after
    it. Transactions are linked in an irreversible chain Horticulture is utilizing
    the IoT to collect data from field planting and horticultural facilities for production,
    management, and service. Robots, drones, remote sensors, and computer imagery
    are used in horticulture as part of the IoT to monitor crops, survey, and map
    fields, as well as to provide data to farmers for logical farm-management strategies
    that will reduce both time and cost [31]. AI is facilitating various sectors in
    agriculture to enhance productiveness and performance and to overcome traditionally
    demanding situations in each field. The intervention of AI in horticulture is
    helping farmers to improve their farming efficiency and reduce hostile environmental
    impacts [32]. Blockchain horticulture empowers information to be traced throughout
    the food supply chain to improve food safety. The ability of blockchain to store
    and manage data creates traceability, which is utilized to enhance the creation
    and deployment of innovations for intelligent farming and index-based horticultural
    insurance. Improved quality control and food safety are advantages of applying
    blockchain to gardening. Increased supply-chain traceability of farmers’ productivity
    will lead to more equitable payments for farmers [33]. Farmers can learn in-depth
    information about topics like rainfall patterns, water cycles, fertilizer requirements,
    and more thanks to large datasets. Companies can utilize this information to choose
    which crops to produce and when to harvest them in order to maximize their profits
    [34]. Data on horticulture are gathered, examined, and stored using cloud computing.
    Farmers can better understand crop conditions by using cloud-connected wireless
    sensors to collect data from the field and machine-learning algorithms to analyze
    that real-time information [35]. Precision horticultural farming heavily relies
    on augmented reality. Farmers can use augmented reality in horticulture to boost
    production, reduce crop waste, and teach other farmers [36]. 3. Intervention of
    Industry 4.0 in Horticulture In this section, we discuss the various Industry
    4.0 technologies in horticulture intending to transform into Horticulture 4.0.
    3.1. IoT Intervention in Horticulture The potential of pests and plant diseases
    is inseparably associated in particular withspecific weather characteristics.
    Previous research concluded that humidity and rainfall have a significant impact
    on pathogen spread and propagation [37]. Pests and diseases are more inclined
    to spread as a result of the wind. According to the information presented above,
    pests and diseases are prevalent in crops, and monitoring of the related parameters
    can be achieved with the IoT. An intelligent monitoring system was proposed on
    the basis of the IoT with a global packet for radio service (GPRS) and Zigbee
    communication protocol for pest warning, planting works, and production-quality
    checks of apples with the assistance of soil sensors, meteorological sensors,
    and cameras [38]. The feasibility, yield, and irrigation water-use efficiency
    of an IoT-based precision-irrigation system with LoRaWAN technology on fresh-market
    tomato production was analyzed [39]. ET, Watermark 200SS-5 soil-metric potential
    sensors, MP40, and a decision-support system were used to design and test four
    irrigation-scheduling treatments. A study was conducted with the integration of
    a camera module, and the images collected were used to analyze the water-management
    system as well as detect plant disease within a green environment [40]. Researchers
    established a technology platform using the IoT for environmental data acquisition,
    disaster warning, transmission, remote control, and an information push in vegetable
    greenhouses in real-time and lessen the influence of climate catastrophes on vegetable
    development [41]. The data collected by an IoT board are expected to be utilized
    to train machine-learning models for the development of intelligent automated
    indoor microclimate horticulture crops [42]. A database contains the results of
    the sensor analysis and it is also linked with data from the Indonesian Weather
    Agency, which contains daily meteorological data from the cultivation location
    [43]. To ensure the proper operation of the greenhouse automation system, multiple
    measuring stations are needed in a modern greenhouse to identify the local climate
    parameters in various areas of a large-scale greenhouse [44]. The IoT paradigm
    is allowing the scientific community to establish integrated settings where data
    could be automatically transferred among many distinctive networks to provide
    consumers with specific relevant information [45]. The security of the foods supplied
    can be ensured by utilizing the provenance data that are kept throughout the supply
    chain of vegetables, including during planting, harvesting, government oversight,
    testing, transportation, customs clearance, warehousing, repackaging, and internal
    testing [46,47]. Every kind of pest and disease is believed to be harmful to plants
    and to have a serious unfavorable effect on horticulture. To decrease the frequent
    use of pesticides and fungicides and to anticipate when pests will arise, the
    IoT system was created [48]. Soft-computing technologies are used to identify
    fruits by combining the three essential characteristics of an object—color, shape,
    and texture. This method reduces the dimensions of the feature vector. As a result,
    the combined and normalized image features produce better classification accuracy
    with fewer training data [49]. Real-time supply-chain monitoring can give stakeholders
    insight into perishable food to better manage to price and take appropriate action
    to uphold quality requirements [50]. Farmers confront a variety of challenges
    when growing vegetables, including issues with seeds, managing pests and diseases,
    commodity costs, and product marketing. Farmers can use the internet and the concept
    of mobile cloud computing to access information and engage in an interactive dialogue
    about vegetable production through mobile learning [51]. A framework for papaya
    grading based on the Artificial Bee Colony algorithm was proposed to classify
    papaya fruits from digital photographs [52,53]. Figure 2 illustrates an architecture
    that was implemented by previous studies for monitoring different parameters in
    horticulture. As discussed in Section 2, one of the key components of the IoT
    is sensors. Sensors such as temperature, soil moisture, humidity, light intensity,
    pH, NPK, and water level are crucial for obtaining important information about
    the soil and environment. Along with these sensors, the camera module is used
    to obtain data from the horticulture field. The sensors remain the same for the
    indoor and outdoor environments of horticulture cultivation. Data on the soil
    and environment are mapped to obtain better productivity by smart controlling
    of irrigation and fertilizer. Based on the soil data, the crop-yield analysis
    is analyzed, and fertilizers can be used as needed. All of these sensors send
    the soil and environment data to the computing unit, at which point the data-sensor
    processor communicates with the cloud server through a wireless-communication
    protocol and gateway. In the cloud server, the data are visualized on the graphical
    user interface. Figure 2. IoT for horticulture. 3.2. AI in Horticulture Fresh
    and wholesome food is essential for feeding the expanding world population, and
    greenhouses and indoor agricultural techniques play a crucial role in this. In
    the past two decades, hyperspectral imaging research has developed, and in the
    decades to come, its use in horticulture is expected to grow. There are still
    challenges to the applicability. The automated detection of pests and diseases
    in plants empowers the effective monitoring of scalable fruit-and-vegetable crops.
    The detection of pests and diseases at the right time enhances pest- and disease-management
    systems [54]. The previous study concluded that AI algorithms can be implemented
    in horticulture for distinct applications, including fruit detection, pest, disease
    detection, weed detection, plant-stress detection, and yield prediction through
    the spectroscopy-and-camera system [55]. A study was implemented to identify common
    pests and diseases in apple fruit using sparse coding. Computer-vision techniques
    can identify pest- and disease-damaged fruits and provide data to assist in the
    detection and treatment of diseases and pests in the early stages [56]. Soil-organic-carbon
    (SOC) monitoring is a crucial characteristic of soil quality because it directly
    determines soil fertility and enables sustainable soil-nutrient management [57].
    To improve SOC prediction, artificial neural networks (ANN), cubist regression,
    support-vector machines (SVM), multiple linear regression (MLR), and random forests
    (RF) were applied to the data of soil-nutrient indicators, total catchment area,
    and the topographic-wetness index. Automatic detection of plant pests and diseases
    can aid in the monitoring of large farms and gardens. The application of AI in
    the drying process of fruits and vegetables has received a lot of attention because
    it can generate better-dried fruit-and-vegetable products when combined with an
    efficient physical field [58,59].An IoT-based tool can determine whether a climacteric
    fruit has been artificially ripened or not. To determine whether the fruit is
    ripened artificially or naturally, machine-learning algorithms are applied [60].
    We discuss these techniques and discuss the significance of combining computer-vision
    techniques with an autonomous robotic system that uses the deep-learning concept
    of artificial intelligence [61]. In order to reduce food waste, one study used
    sensors and analyzed gases produced by certain food products to detect rotten
    food at an early stage and boost accuracy. To forecast how frequently food will
    degrade, the researchers used machine learning, the IoT, and sensors. To assess
    the freshness of food, this study used ML and IoT. The implementation of vision-based
    hardware in robots enables the realization of intelligent spraying, crop-yield
    prediction and price forecasting, predictive insights, and disease diagnosis (Figure
    3). In addition, during the supply chain, the AI-based IoT system enables the
    indoor environment conditions to be adjusted on the basis of external climatic
    conditions and travel time to avoid the spoilage of fruit and vegetables. Figure
    3. AI in horticulture and farming. Table 2 illustrates the different studies that
    implement AI for horticulture crops for disease detection, quality assessment,
    and grading. The table provides the different algorithms that have been implemented
    for feature selection, feature extraction, classification, and regression for
    identifying defects, bruising quality assessment, and grading of the fruit. Different
    studies have used different feature-selection and feature-extraction techniques
    such as random frog, random forest, linear discriminant analysis-based fully convolutional
    networks, competitive adaptive reweighted sampling–successive projection algorithms,
    uninformative variable elimination, successive projection algorithm, gray histograms,
    and gray-level co-occurrence matrices. Classification and regression techniques
    include least-squares support-vector machines, support vector machines, convolutional
    neural networks, logistic regression, random forest, multilayer perceptron, linear
    discriminant analysis, k-nearest neighbors, and backpropagation in the neural
    network. Table 2. AI for horticulture crops. Table 3 illustrates AI implementation
    in horticulture with accuracy and data-acquisition parameters. The previous studies
    illustrate that AI has been implemented for multiple applications such as quality
    assessment of fruit by evaluating moisture levels in the fruits. Following these
    studies, AI was used to forecast the yield of fruits such as bananas and blueberries.
    A few studies implemented AI for the detection and segmentation of apple fruits
    and branches in orchards through fused convolutional features, ResNet-101, clustering-RCNN,
    and CNN. The accuracy of different classifiers is illustrated in the table, and
    SVM, KNN, and DT achieved 100%. During the classification of tomato diseases,
    CNN achieved 99.18% accuracy on the dataset formed from 14,828 images. In the
    detection of citrus fruits, the CNN applied to the UAV images achieved 96.24%
    accuracy. Table 3. AI implementation for horticulture with accuracy and data-acquisition
    sources. 3.3. Blockchain Blockchain is a distributed-ledger technology with the
    advantage of being tamper-resistant to information. It is anticipated to be able
    to address the issue of resource allocation for transactions among numerous unreliable
    parties in the supply chain for fresh fruit [76]. One potential method for supply-chain
    traceability in the pineapple industry is blockchain technology. The fruit-chain
    protocol that was introduced has identical consistency and liveliness qualities
    as assuming an honest majority of computer power [77] and is roughly fair with
    an overwhelming probability. Although blockchain might be viewed as a viable option
    for food-chain traceability, it was determined that [78] the goal of the investigation
    was to learn more about blockchain technology and its potential applications in
    the retail industry. Additionally, potential blockchain uses that might help the
    retail sector and the wider industry are foreseen. The study also underlined the
    crucial role that blockchain technology plays in the retail sector for fruit as
    well as the connections between these aspects [79]. Figure 4 shows blockchain
    technology in horticulture. The blockchain enables a distributed network to be
    established among the different entities in the supply chain for real-time monitoring
    and tracking of the activities from any location that is immutable and transparent.
    Blockchain empowers digital and secure trading to be created by incorporating
    smart contracts between entities. In addition, blockchain enables the realization
    of secured transactions of the export of fruits and vegetables in the international
    market. The quality and standards of the fruits and vegetables that are set by
    international bodies can be protected with secured hash cryptography. Figure 4.
    Blockchain technology in horticulture. Consumers are driving an entirely different
    transformation in food procurement as a consequence of the growth in global food
    catastrophes that are triggering health insecurity. Consumers have called for
    transparency, traceability, and attentiveness along the entire fruit supply chain.
    The importance of the supply chain in this industry is increased by the fact that
    the products are perishable and have a limited shelf life. Yields are impacted
    by inconsistent delivery and a lack of fertilizers and insecticides as a result
    of dependence on middlemen, market instability, and other factors. Increased costs
    for input and transportation, post-harvest losses, and problems with safety and
    quality dominating supply-chain losses are key challenges involved in the fruit
    supply chain. Blockchain integration in the fruit supply chain (Figure 5) allows
    for post-harvest and inventory management streamlining, increasing operational
    effectiveness and lowering losses. End-to-end traceability with QR codes on the
    fruits presents the final customer with an honest and reliable narrative. A fair
    price for the producers is ensured by the grouping and collaboration of all stakeholders
    on a single platform, which fosters confidence and transparency. Real-time data
    collection allows for simple tracking and tracing, which helps with recall management.
    In addition to this, blockchain is used for monitoring the pre-harvest process
    for yield and quality. Post-harvest management for monitoring the crucial phases
    to prevent losses and boost output, monitoring a set of procedures for confirming
    sustainable practices, and digital records that cannot be altered and display
    accurate information are necessary to meet legal requirements. Figure 5. Applications
    of blockchain for Horticulture 4.0. 3.4. Big Data in Horticulture A multi-sensor
    network system was established to accumulate smaller ecological statistical data
    on vegetable-growing regions. Researchers were able to identify the critical components
    pushing pest spread using multidimensional information such as environment, soil,
    meteorology of vegetable fields, and ultimately the vegetable-pest warning system
    premised on multidimensional big data [80]. The distinctive nutrition-based vegetable-production
    and -distribution system utilizes the inventive big-data framework and its multiple
    benefits to provide a healthful food recommendation to the end customer as well
    as various predictive analyses to boost system efficacy [45]. The new ICT horticulture
    project will heavily rely on big-data methodologies; therefore, it is important
    to understand how to manage them and how they could affect everyday business [81]
    Big-data intervention in horticulture is presented in Figure 6. Because fruits
    and vegetables are produced in such large quantities, the sensor data that are
    available and can be used in horticulture are now considered big data. The big
    data can be transmitted to the cloud server and made available in a distribution
    box and control box through wireless-communication protocols. Figure 6. Big-data
    overview in horticulture. 4. Results In this section, the results identified from
    the analysis of previous studies based on Industry 4.0 integration for horticulture
    monitoring are discussed. The IoT is predominantly used in horticulture to monitor
    various pests and diseases that are harmful to plants and have a serious negative
    impact on horticulture. The Internet of Things system was configured to minimize
    the frequency with which pesticides and fungicides are used and to predict when
    pests will appear. Along with this, IoT and cloud computing are employed to identify
    fruits by combining an object’s three essential characteristics—color, shape,
    and texture. Farmers face a variety of challenges when growing vegetables, including
    seed issues, pest-and-disease management, commodity costs, and product marketing.
    Farmers can access information and engage in an interactive process about vegetable
    production through the internet and the concept of the mobile cloud. AI in horticulture
    enables the detection of diseases, quality assessment, and grading of horticulture
    crops. Linear discriminant analysis-based fully convolutional networks, random
    forest, competitive adaptive reweighted sampling–successive projection algorithm,
    uninformative variable elimination, successive projection algorithm, and gray-level
    co-occurrence matrix have been used for feature extraction and selection. Least-squares
    support-vector machine, support-vector machine, convolutional neural networks,
    logistic regression, random forest, multilayer perceptron, and k-nearest neighbors
    are the key techniques used for classification and regression. Yields are impacted
    by inconsistent delivery and a lack of fertilizers and insecticides as a result
    of dependence on middlemen, market instability, and other factors. Increased input
    and transportation costs, post-harvest losses, and safety and quality issues dominate
    supply-chain losses. However, the incorporation of blockchain improves pre-harvest
    and post-harvest management through real-time tracing and secure transactions
    in the distributed network. 5. Discussion and Recommendation In this section,
    based on the discussion of the analysis above, we discuss the recommendations
    for applications in horticulture as part of future work. A few vital recommendations
    are as follows: When considering long-term benefits like improved production and
    automation, the use of the IoT in horticulture is strongly advised and very successful.
    The Internet of Drones enables horticulture operations to be improved. The Internet
    of Drones is an architecture intended to focus on providing UAVs, also commonly
    known as drones, with coordinated connectivity to controlled airspace. Drones
    for horticulture are used to monitor fields, plant crops, irrigate fields, spray
    pesticides, and also to assess the health of plants [82,83]. Moreover, drones
    with vision-based technology and AI empower the detection of weeds and identify
    the stages of the growth of plants in pre-harvest, harvest, and post-harvest.
    Drones can be used to monitor the quality assessment and grading of horticulture
    crops to minimize the damage and loss of the product during transportation and
    storage. Robotics leverage AI technology to improve harvest quality and precision.
    In horticulture settings, robotics with vision technology and AI for the detection
    of pests, plant diseases, and malnutrition. Before choosing which herbicide to
    apply in a region, AI can detect and target weeds through the visuals obtained
    from the camera module inserted into robots. A wide range of issues in the farming
    sector can be resolved by using an amalgamation of robots and AI approaches [84].
    In addition to this, currently, different robots with AI technology are used for
    weed removal and plucking, sorting, and packaging of fruits [85]. Globally, horticulture
    supply chains have an exciting opportunity to improve transactional efficiency,
    reduce resistance, and promote traceability thanks to blockchain technology [80].
    Blockchain technology can help the horticulture and food industry deal with and
    control known risks while maintaining affordability across the ecosystem. Blockchain
    in horticulture enables the linking of various horticultural entities for the
    visualization of data from production to supply on distributed-ledger networks.
    Granular information on rainfall patterns, water cycles, fertilizer requirements,
    and more are made available to farmers through big data. This enables them to
    make wise decisions, such as which plants to sow for greater profitability and
    when to harvest. Making the proper choices ultimately increase crop output. The
    fundamental goal of precision horticulture is to guarantee profitability, efficacy,
    and sustainability [86]. In horticulture, edge computing is employed for different
    activities. Edge computing can be utilized to analyze the data at the edge of
    a network for better monitoring and productivity. Mobile edge computing (MEC)
    is an architecture that provides cloud-computing services at the edge of networks
    leveraging mobile base stations [87,88]. Currently, different study areas have
    implemented edge-computing-based portable devices in order to predict what is
    useful for the user in enhancing their practices [89,90]. In the scenario of horticulture,
    an edge-computing-based portable device can be developed with IoT and AI for predicting
    and estimating disease in a crop. Based on the analysis and prediction, it can
    also communicate to the user on the cloud server and the respective horticulture
    authorities to suggest a solution in real-time. Figure 7 illustrates a hybrid
    architecture that is implemented in horticulture with the amalgamation of the
    IoT, cloud computing, AI/ML, blockchain, and big data. This architecture enables
    a smart and intelligent ecosystem to be achieved in horticulture with multiple
    features such as blockchain-assisted marketing, prediction of international markets,
    and the quality of fruits and vegetables based on real-time environmental data.
    The generated output and sensor data can then be distributed in the peer-to-peer
    network of any location. Figure 7. Hybrid architecture for Horticulture 4.0. 6.
    Conclusions Horticulture is the field of cultivation of fruits and vegetables.
    It ensures production and consumption by minimizing malnutrition in the current
    scenario addressed by United Nations. Recently, Industry 4.0 technologies have
    delivered the ability of digitalization and realize the SDGs set by the United
    Nations. The previous studies did not highlight the significance and application
    of Industry 4.0 for distinct issues of horticulture. Based on this limitation,
    the current study addressed the significance and application of Industry 4.0 technologies
    such as the Internet of Things, cloud computing, artificial intelligence, blockchain,
    and big data for horticulture to enhance traditional practices of disease detection,
    irrigation management, fertilizer management, maturity identification, marketing,
    and supply chain, soil fertility, and weather patterns at pre-harvest, harvest,
    and post-harvest. The findings of the study are as follows: in horticulture, the
    IoT is primarily used to monitor various pests and diseases that are harmful to
    plants and have a serious negative impact on horticulture. In addition, IoT and
    cloud computing is used to identify fruits by combining three essential characteristics
    of an object: color, shape, and texture.AI in horticulture has enabled the detection
    of diseases, quality assessment, and crop grading. For feature extraction and
    selection, we used fully convolutional networks, a random forest, and a competitive
    adaptive reweighted sampling–successive projection algorithm based on linear discriminant
    analysis. The key techniques used for classification and regression are the least-squares
    support-vector machine, support-vector machine, convolutional neural networks,
    logistic regression, multilayer perceptron, and k-nearest neighbors. Inconsistent
    delivery and a lack of fertilizers and insecticides as an outcome of dependence
    on middlemen, market instability, and other factors have a negative impact on
    yields. Increased input and transportation costs, post-harvest losses, and safety
    and quality issues that dominate supply-chain losses can be overcome with blockchain
    during-harvest and post-harvest management. Finally, the study suggested vital
    recommendations for future works, such as robotics; drones with vision technology
    and AI for the detection of pests, weeds, plant diseases, and malnutrition; and
    edge computing portable devices developed with the IoT and AI for predicting and
    estimating disease in crops. Author Contributions Conceptualization, R.S. (Rajesh
    Singh) and R.S. (Rajat Singh); methodology, A.G.; formal analysis, S.V.A.; data
    curation, S.V.A.; writing—original draft preparation, R.S. (Rajat Singh); writing—review
    and editing, N.P. and B.T.; visualization, R.S. (Rajesh Singh) and A.G.; funding
    acquisition, N.P. and B.T. All authors have read and agreed to the published version
    of the manuscript. Funding The APC was funded by Tshwane University of Technology,
    South Africa. Institutional Review Board Statement Not applicable. Informed Consent
    Statement Not applicable. Data Availability Statement Data sharing not applicable.
    Conflicts of Interest The authors declare no conflict of interest. References
    UN Report: Global Hunger Numbers Rose to as Many as 828 Million in 2021. Available
    online: https://www.fao.org/newsroom/detail/un-report-global-hunger-SOFI-2022-FAO/en
    (accessed on 6 September 2022). Goal 2: Zero Hunger-United Nations Sustainable
    Development. Available online: https://www.un.org/sustainabledevelopment/hunger/
    (accessed on 6 September 2022). Goal 12. Department of Economic and Social Affairs.
    Available online: https://sdgs.un.org/goals/goal12 (accessed on 6 September 2022).
    Keatinge, J.D.H.; Virchow, D.; Schreinemachers, P. Horticulture for sustainable
    development: Evidence for impact of international vegetable research and development.
    In Proceedings of the International Symposia on Tropical and Temperate Horticulture-ISTTH2016
    1205, Cairns, Australia, 20 November 2016; pp. 179–190. [Google Scholar] Qingxue,
    L.; Wu, H. Research on vegetable growth monitoring platform based on facility
    agricultural IoT. In International Conference on Geo-Informatics in Resource Management
    and Sustainable Ecosystem; Springer: Singapore, 2016. [Google Scholar] Cappelli,
    I.; Fort, A.; Pozzebon, A.; Tani, M.; Trivellin, N.; Vignoli, V.; Bruzzi, M. Autonomous
    IoT Monitoring Matching Spectral Artificial Light Manipulation for Horticulture.
    Sensors 2022, 22, 4046. [Google Scholar] [CrossRef] Lamm, K.; Powell, A.; Lombardini,
    L. Identifying Critical Issues in the Horticulture Industry: A Delphi Analysis
    during the COVID-19 Pandemic. Horticulturae 2021, 7, 416. [Google Scholar] [CrossRef]
    Bhavana, H.; Bhagwan, A. Review on: Role of robotics in horticulture. J. Pharm.
    Phytochem. 2021, 10, 306–309. [Google Scholar] Yang, B.; Xu, Y. Applications of
    deep-learning approaches in horticultural research: A review. Hortic. Res. 2021,
    8, 123. [Google Scholar] [CrossRef] Ariesen-Verschuur, N.; Verdouw, C.; Tekinerdogan,
    B. Digital Twins in greenhouse horticulture: A review. Comput. Electron. Agric.
    2022, 199, 107183. [Google Scholar] [CrossRef] Halgamuge, M.N.; Bojovschi, A.;
    Fisher, P.M.; Le, T.C.; Adeloju, S.; Murphy, S. Internet of Things and autonomous
    control for vertical cultivation walls towards smart food growing: A review. Urban
    For. Urban Green 2021, 61, 127094. [Google Scholar] [CrossRef] Longchamps, L.;
    Tisseyre, B.; Taylor, J.; Sagoo, L.; Momin, A.; Fountas, S.; Manfrini, L.; Ampatzidis,
    Y.; Schueller, J.K.; Khosla, R. Yield sensing technologies for perennial and annual
    horticultural crops: A review. Precis. Agric. 2022, 1–42. [Google Scholar] [CrossRef]
    Jallow, M.F.A.; Awadh, D.G.; Albaho, M.S.; Devi, V.Y.; Ahmad, N. Monitoring of
    Pesticide Residues in Commonly Used Fruits and Vegetables in Kuwait. Int. J. Environ.
    Res. Public Health 2017, 14, 833. [Google Scholar] [CrossRef] [Green Version]
    Bulgari, R.; Petrini, A.; Cocetta, G.; Nicoletto, C.; Ertani, A.; Sambo, P.; Ferrante,
    A.; Nicola, S. The Impact of COVID-19 on Horticulture: Critical Issues and Opportunities
    Derived from an Unexpected Occurrence. Horticulturae 2021, 7, 124. [Google Scholar]
    [CrossRef] Rehman, M.U.; Rather, G.H.; Gull, Y.; Mir, M.R.; Mir, M.M.; Waida,
    U.I.; Hakeem, K.R. Effect of climate change on horticultural crops. In Crop Production
    and Global Environmental Issues; Springer: Cham, Switzerland; pp. 211–239. Eftekhari,
    M.S. Impacts of Climate Change on Agriculture and Horticulture. In Climate Change;
    Bandh, S.A., Ed.; Springer: Cham, Switzerland, 2022. [Google Scholar] [CrossRef]
    Saran, P.L.; Singh, S.; Solanki, V.; Choudhary, R.; Manivel, P. Evaluation of
    Asparagus adscendens accessions for root yield and shatavarin IV content in India.
    Turk. J. Agric. For. 2021, 45, 8. [Google Scholar] [CrossRef] Zulfiqar, F. Effect
    of seed priming on horticultural crops. Sci. Hortic. 2021, 286, 110197. [Google
    Scholar] [CrossRef] Grygorieva, O.; Klymenko, S.; Kuklina, A.; Vinogradova, Y.;
    Vergun, O.; Sedlackova, V.H.; Brindza, J. Evaluation of Lonicera caerulea L. genotypes
    based on morphological characteristics offruits germplasm collection. Turk. J.
    Agric. For. 2021, 45, 14. [Google Scholar] [CrossRef] Mall, M.; Kumar, R.; Akhtar,
    M.Q. Horticultural crops and abiotic stress challenges. In Stress Tolerance in
    Horticultural Crops; Woodhead Publishing: Sawston, UK, 2021; pp. 1–19. [Google
    Scholar] Alireza, A.; Dennis, R.; Ludena, A. Big data application to the vegetable
    production and distribution system. In Proceedings of the 2014 IEEE 10th International
    Colloquium on Signal Processing and Its Applications, Kuala Lumpur, Malaysia,
    7–9 March 2014. [Google Scholar] Kaburuan, E.R.; Jayadi, R. A design of IoT-based
    monitoring system for intelligence indoor micro-climate horticulture farming in
    Indonesia. Procedia Comput. Sci. 2019, 157, 459–464. [Google Scholar] [CrossRef]
    Alem, Č.; Hadžialić, M. Internet of Things (IoT): A review of enabling technologies,
    challenges, and open research issues. Comput. Netw. 2018, 144, 17–39. [Google
    Scholar] Mohammad Nuruzzaman, B.; Rahman, M.; Billah, M.; Saha, D. Internet of
    things (IoT): A review of its enabling technologies in healthcare applications,
    standards protocols, security, and market opportunities. IEEE Internet Things
    J. 2021, 8, 10474–10498. [Google Scholar] Kais, M.; Bajic, E.; Chaxel, F.; Meyer,
    F. A comparative study of LPWAN technologies for large-scale IoT deployment. ICT
    Express 2019, 5, 1–7. [Google Scholar] Arya, P.S.; Gangwar, M. A Proposed Architecture:
    Detecting Freshness of Vegetables using Internet of Things (IoT) & Deep Learning
    Prediction Algorithm. In Proceedings of the 2021 3rd International Conference
    on Advances in Computing, Communication Control and Networking (ICAC3N), Greater
    Noida, India, 17–18 December 2021; pp. 718–723. [Google Scholar] [CrossRef] Caiming,
    Z.; Lu, Y. Study on artificial intelligence: The state of the art and future prospects.
    J. Ind. Inf. Integr. 2021, 23, 100224. [Google Scholar] Sagiroglu, S.; Sinanc,
    D. Big data: A review. In Proceedings of the 2013 International Conference on
    Collaboration Technologies and Systems (CTS), San Diego, CA, USA, 20–24 May 2013;
    pp. 42–47. [Google Scholar] [CrossRef] Yosra, H.; Boulila, W.; Farah, I.R.; Romdhani,
    I.; Hussain, A. Big data and IoT-based applications in smart environments: A systematic
    review. Comput. Sci. Rev. 2021, 39, 100318. [Google Scholar] Mohd, J.; Haleem,
    A.; Singh, R.P.; Khan, S.; Suman, R. Blockchain technology applications for Industry
    4.0: A literature-based review. Blockchain Res. Appl. 2021, 2, 100027. [Google
    Scholar] Alireza, A.; Ludena, R.D.A. Big Data approach to a novel nutrition-based
    vegetable production and distribution system. In Proceedings of the 2013 IEEE
    International Conference on Computational Intelligence and Cybernetics (CYBERNETICSCOM),
    Yogyakarta, Indonesia, 3–4 December 2013. [Google Scholar] Kumar, P.C.; Bhatnagar,
    R. Social internet of things in agriculture: An overview and future scope. In
    Toward Social Internet of Things (SIoT): Enabling Technologies, Architectures
    and Applications; Springer: Berlin/Heidelberg, Germany, 2020; pp. 317–334. [Google
    Scholar] Sun, Z.; Hui, X.; Wensheng, W. An architecture for the agricultural machinery
    intelligent scheduling in cross-regional work based on cloud computing and internet
    of things. In International Conference on Computer and Computing Technologies
    in Agriculture; Springer: Berlin/Heidelberg, Germany, 2010. [Google Scholar] Coble,
    K.H.; Mishra, A.K.; Ferrell, S.; Griffin, T. Big data in agriculture: A challenge
    for the future. Appl. Econ. Perspect. Policy 2018, 40, 79–96. [Google Scholar]
    [CrossRef] [Green Version] Ruthie, M. Big data in agriculture and nutrition. Agric.
    Improv. Nutr. Seizing Momentum 2019, 142, 1–15. [Google Scholar] Kamilaris, A.;
    Fonts, A.; Prenafeta-Boldύ, F.X. The rise of blockchain technology in agriculture
    and food supply chains. Trends Food Sci. Technol. 2019, 91, 640–652. [Google Scholar]
    [CrossRef] [Green Version] Codeluppi, G.; Cilfone, A.; Davoli, L.; Ferrari, G.
    VegIoT garden: A modular IoT management platform for urban vegetable gardens.
    In Proceedings of the 2019 IEEE International Workshop on Metrology for Agriculture
    and Forestry (MetroAgriFor), Portici, Italy, 24–26 October 2019; IEEE: Piscataway,
    NJ, USA, 2019; pp. 121–126. [Google Scholar] Salgado-Salazar, C.; Shiskoff, N.;
    Daughtrey, M.; Palmer, C.L.; Crouch, J.A. Downy mildew: A serious disease threat
    to rose health worldwide. Plant Dis. 2018, 102, 1873–1882. [Google Scholar] [CrossRef]
    [PubMed] [Green Version] Feng, C.; Wu, H.R.; Zhu, H.J.; Sun, X. The design and
    realization of apple orchard intelligent monitoring system based on internet of
    things technology. In Advanced Materials Research; Trans Tech Publications Ltd.:
    Bäch, Switzerland, 2012; Volume 546, pp. 898–902. [Google Scholar] Zhang, H.;
    He, L.; Di Gioia, F.; Choi, D.D.; Heinemann, P. Internet of things (IoT)-based
    precision irrigation with LoRaWAN technology applied to vegetable production.
    In 2021 ASABE Annual International Virtual Meeting; American Society of Agricultural
    and Biological Engineers: St. Joseph, MI, USA, 2021; p. 1. [Google Scholar] Khan,
    F.A.; Ibrahim, A.A.; Zeki, A.M. Environmental monitoring and disease detection
    of plants in smart greenhouse using internet of things. J. Phys. Commun. 2020,
    4, 055008. [Google Scholar] [CrossRef] Bhujel, A.; Basak, J.K.; Khan, F.; Arulmozhi,
    E.; Jaihuni, M.; Sihalath, T.; Lee, D.; Park, J.; Kim, H.T. Sensor Systems for
    Greenhouse Microclimate Monitoring and Control: A Review. J. Biosyst. Eng. 2020,
    45, 341–361. [Google Scholar] [CrossRef] Wayangkau, I.H.; Mekiuw, Y.; Rachmat,
    R.; Suwarjono, S.; Hariyanto, H. Utilization of IoT for soil moisture and temperature
    monitoring system for onion growth. Emerg. Sci. J. 2020, 4, 102–115. [Google Scholar]
    [CrossRef] Alper, M.A.; Sokullu, R. An IoT-based greenhouse monitoring system
    with Micaz motes. Procedia Comput. Sci. 2017, 113, 603–608. [Google Scholar] Dennis,
    A.L.R.; Ahrary, A.; Horibe, N.; Yang, W.S. IoT-security approach analysis for
    the novel nutrition-based vegetable production and distribution system. In Proceedings
    of the 3rd IIAI International Conference on Advanced Applied Informatics, IIAI-AAI
    2014, Kokura Kita-ku, Japan, 31 August–4 September 2014. [Google Scholar] Jie,
    Y.; Zhang, X.; Lu, Q.; Xin, C.; Liu, C.; Chen, Z. IOT based provenance platform
    for vegetables supplied to Hong Kong. In Recent Advances in Computer Science and
    Information Engineering; Springer: Berlin/Heidelberg, Germany, 2012; pp. 591–596.
    [Google Scholar] Harish, M.P.C.S.P.; Sanghavi, K.B.P.A. Smart refrigerator and
    vegetable identification system using image processing and IOT. Open Access Int.
    J. Sci. Eng. 2021, 7, 4. [Google Scholar] Kumar, M.; Pal, Y.; Gangadharan, S.M.P.;
    Chakraborty, K.; Yadav, C.S.; Kumar, H.; Tiwari, B. Apple Sweetness Measurement
    and Fruit Disease Prediction Using Image Processing Techniques Based on Human-Computer
    Interaction for Industry 4.0. Wirel. Commun. Mob. Comput. 2022, 2022, 1–12. [Google
    Scholar] Rajasekar, L.; Sharmila, D. Performance analysis of soft computing techniques
    for the automatic classification of fruits dataset. Soft Comput. 2019, 23, 2773–2788.
    [Google Scholar] [CrossRef] John, K.; Haw, S.; Su, N.; Mulaafer, S. Kiwi Fruit
    IoT Shelf Life Estimation During Transportation with Cloud Computing. In Proceedings
    of the 2021 IEEE International Conference on Artificial Intelligence in Engineering
    and Technology (IICAIET), Kota Kinabalu, Malaysia, 13–15 September 2021. [Google
    Scholar] Shwetapadma, P.; Sethy, P.K. Post-Harvest Grading Of Carica Papaya Fruit
    Using Image Segmentation And Soft Computing. Int. J. Adv. Res. Comput. Sci. 2017,
    8, 7. [Google Scholar] Yaya, W.; Nugraha, E. Development Mobile Learning For Vegetable
    Farming In Indonesia Based On Mobile Cloud Computing. In Proceedings of the 2020
    6th International Conference on Science in Information Technology (ICSITech),
    Palu, Indonesia, 21–22 October 2020. [Google Scholar] Narendra, V.G.; Ancilla,
    J.P. Defects Detection in Fruits and Vegetables Using Image Processing and Soft
    Computing Techniques. In International Conference on Harmony Search Algorithm;
    Springer: Singapore, 2020. [Google Scholar] Silke, H.; de Zwart, F.; Elings, A.;
    Petropoulou, A.; Righini, I. Cherry Tomato Production in Intelligent Greenhouses—Sensors
    and AI for Control of Climate, Irrigation, Crop Yield, and Quality. Sensors 2020,
    20, 6430. [Google Scholar] [CrossRef] Kingsley, J.; Isong, I.A.; Kebonye, N.M.;
    Ayito, E.O.; Agyeman, P.C.; Afu, S.M. Using Machine Learning Algorithms to Estimate
    Soil Organic Carbon Variability with Environmental Variables and Soil Nutrient
    Indicators in an Alluvial Soil. Land 2020, 9, 487. [Google Scholar] [CrossRef]
    Yousef, A.-G.; Aghabara, A.; Davari, M.; Maja, J.M. Feasibility of Using Computer
    Vision and Artificial Intelligence Techniques in Detection of Some Apple Pests
    and Diseases. Appl. Sci. 2022, 12, 906. [Google Scholar] [CrossRef] Diaz-Gonzalez,
    F.A.; Vuelvas, J.; Correa, C.A.; Vallejo, V.E.; Patino, D. Machine learning and
    remote sensing techniques applied to estimate soil indicators–Review. Ecol. Indicators
    2022, 135, 108517. [Google Scholar] [CrossRef] Maione, C.; Araujo, E.M.; Santos-Araujo,
    S.N.D.; Boim, A.G.F.; Barbosa, R.M.; Alleoni, L.R.F. Determining the geographical
    origin of lettuce with data mining applied to micronutrients and soil properties.
    Sci. Agric. 2021, 79, e20200011. [Google Scholar] [CrossRef] Chen, J.; Zhang,
    M.; Xu, B.; Sun, J.; Mujumdar, A.S. Artificial intelligence assisted technologies
    for controlling the drying of fruits and vegetables using physical fields: A review.
    Trends Food Sci. Technol. 2020, 105, 251–260. [Google Scholar] [CrossRef] Sreeraj,
    M.; Joy, J.; Kuriakose, A.; Sujith, M.R.; Unni, H. CLadron*: AI assisted device
    for identifying artificially ripened climacteric fruits. Procedia Comput. Sci.
    2020, 171, 635–643. [Google Scholar] [CrossRef] Bittu, S.; Aziz, N.A.; Siddiqi,
    M.A.M. AI Based Robotic Systems for the quality control of Date Palm Fruits-A
    Review. In Proceedings of the 2019 International Conference on Digitization (ICD),
    Sharjah, United Arab Emirates, 18–19 November 2019. [Google Scholar] Hu, M.H.;
    Zhai, G.T.; Zhao, Y.; Wang, Z.D. Uses of selection strategies in both spectral
    and sample spaces for classifying hard and soft blueberry using near infrared
    data. Sci. Rep. 2018, 8, 6671. [Google Scholar] [CrossRef] Zhang, M.; Jiang, Y.;
    Li, C.; Yang, F. Fully convolutional networks for blueberry bruising and calyx
    segmentation using hyperspectral transmittance imaging. Biosyst. Eng. 2020, 192,
    159–175. [Google Scholar] [CrossRef] Wang, Z.; Hu, M.; Zhai, G. Application of
    Deep Learning Architectures for Accurate and Rapid Detection of Internal Mechanical
    Damage of Blueberry Using Hyperspectral Transmittance Data. Sensors 2018, 18,
    1126. [Google Scholar] [CrossRef] [Green Version] Kuzy, J.; Jiang, Y.; Li, C.Y.
    Blueberry bruise detection by pulsed thermographic imaging. Postharvest. Biol.
    Technol. 2018, 136, 166–177. [Google Scholar] [CrossRef] Shao, Y.Y.; Wang, Y.X.;
    Xuan, G.T.; Gao, Z.M.; Hu, Z.C.; Gao, C.; Wang, K.L. Assessment of strawberry
    ripeness using hyperspectral imaging. Anal. Lett. 2020, 54, 1547–1560. [Google
    Scholar] [CrossRef] Qiao, S.C.; Tian, Y.W.; Song, P.; He, K.; Song, S.Y. Analysis
    and detection of decayed blueberry by low field nuclear magnetic resonance and
    imaging. Postharvest. Biol. Technol. 2019, 156, 110951. [Google Scholar] [CrossRef]
    Ren, A.; Zahid, A.; Zoha, A.; Shah, S.A.; Imran, M.A.; Alomainy, A.; Abbasi, Q.H.
    Machine Learning Driven Approach Towards the Quality Assessment of Fresh Fruits
    Using Non-Invasive Sensing. IEEE Sens. J. 2020, 20, 2075–2083. [Google Scholar]
    [CrossRef] [Green Version] Rebortera, M.A.; Fajardo, A.C. An enhanced deep learning
    approach in forecasting banana harvest yields. Int. J. Adv. Comput. Sci. Appl.
    2019, 10, 275–280. [Google Scholar] [CrossRef] [Green Version] Ni, X.; Li, C.;
    Jiang, H.; Takeda, F. Deep learning image segmentation and extraction of blueberry
    fruit traits associated with harvestability and yield. Hortic. Res. 2020, 7, 110.
    [Google Scholar] [CrossRef] [PubMed] Brahimi, M.; Boukhalfa, K.; Moussaoui, A.
    Deep learning for tomato diseases: Classification and symptoms visualization.
    Appl. Artif. Intell. 2017, 31, 299–315. [Google Scholar] [CrossRef] Wang, D.;
    Li, C.; Song, H.; Xiong, H.; Liu, C.; He, D. Deep Learning Approach for Apple
    Edge Detection to Remotely Monitor Apple Growth in Orchards. IEEE Access 2020,
    8, 26911–26925. [Google Scholar] [CrossRef] Kang, H.; Chen, C. Fruit detection
    and segmentation for apple harvesting using visual sensor in orchards. Sensors
    2019, 19, 4599. [Google Scholar] [CrossRef] [Green Version] Kang, H.; Chen, C.
    Fast implementation of real-time fruit detection in apple orchards using deep
    learning. Comput. Electron. Agric. 2020, 168, 105108. [Google Scholar] [CrossRef]
    Csillik, O.; Cherbini, J.; Johnson, R.; Lyons, A.; Kelly, M. Identification of
    citrus trees from unmanned aerial vehicle imagery using convolutional neural networks.
    Drones 2018, 2, 39. [Google Scholar] [CrossRef] [Green Version] Rafael, P.; Shi,
    E. Fruitchains: A fair blockchain. In Proceedings of the ACM Symposium on Principles
    of Distributed Computing, Washington, DC, USA, 25–27 July 2017. [Google Scholar]
    Zhang, Y.; Chen, L.; Battino, M.; Farag, M.A.; Xiao, J.; Simal-Gandara, J.; Jiang,
    W. Blockchain: An emerging novel technology to upgrade the current fresh fruit
    supply chain. Trends Food Sci. Technol. 2022, 124, 1–22. [Google Scholar] [CrossRef]
    Arsenii, S. Traceability technology: Fruits and vegetables trader case study.
    In Proceedings of the International Conference on Digital Technologies in Logistics
    and Infrastructure (ICDTLI 2019), St. Petersburg, Russia, 4–5 April 2019; Atlantis
    Press: Hong Kong, China, 2019. [Google Scholar] Sharif, K.I.M.; Hassan, M.G.;
    Miraz, M.H.; Zulkifly, E.; Udin, Z.M.; Omar, M. Factors Affecting Blockchain in
    Fruit Retail Market: An Unveiling Myth of Blockchain. In Intelligent Manufacturing
    and Mechatronics; Springer: Singapore, 2021; pp. 1095–1106. [Google Scholar] Zhang,
    C.; Cai, J.; Xiao, D.; Ye, Y.; Chehelamirani, M. Research on vegetable pest warning
    system based on multidimensional big data. Insects 2018, 9, 66. [Google Scholar]
    [CrossRef] [PubMed] [Green Version] Puri, V.; Nayyar, A.; Raja, L. Agriculture
    drones: A modern breakthrough in precision agriculture. J. Stat. Manag. Syst.
    2017, 20, 507–518. [Google Scholar] [CrossRef] Tripicchio, P.; Satler, M.; Dabisias,
    G.; Ruffaldi, E.; Avizzano, C.A. Towards smart farming and sustainable agriculture
    with drones. In Proceedings of the 2015 International Conference on Intelligent
    Environments, Prague, Czech Republic, 15–17 July 2015; pp. 140–143. [Google Scholar]
    Gharibi, M.; Boutaba, R.; Waslander, S.L. Internet of Drones. IEEE Access 2016,
    4, 1148–1162. [Google Scholar] [CrossRef] Rajan, K.; Saffiotti, A. Towards a science
    of integrated AI and Robotics. Artif. Intell. 2017, 247, 1–9. [Google Scholar]
    [CrossRef] [Green Version] Vivekanand, P.; Pant, M.; Snasel, V. Blockchain technology
    in food supply chains: Review and bibliometric analysis. Technol. Soc. 2022, 69,
    101954. [Google Scholar] Abbas, N.; Zhang, Y.; Taherkordi, A.; Skeie, T. Mobile
    Edge Computing: A Survey. IEEE Internet Things J. 2018, 5, 450–465. [Google Scholar]
    [CrossRef] [Green Version] Shi, W.; Cao, J.; Zhang, Q.; Li, Y.; Xu, L. Edge computing:
    Vision and challenges. IEEE Internet Things J. 2016, 3, 637–646. [Google Scholar]
    [CrossRef] Satyanarayanan, M. The Emergence of Edge Computing. Computer 2017,
    50, 30–39. [Google Scholar] [CrossRef] Chang, Z.; Liu, S.; Xiong, X.; Cai, Z.;
    Tu, G. A Survey of Recent Advances in Edge-Computing-Powered Artificial Intelligence
    of Things. IEEE Internet Things J. 2021, 8, 13849–13875. [Google Scholar] [CrossRef]
    Guillén, M.A.; Llanes, A.; Imbernón, B.; Martínez-España, R.; Bueno-Crespo, A.;
    Cano, J.-C.; Cecilia, J.M. Performance evaluation of edge-computing platforms
    for the prediction of low temperatures in agriculture using deep learning. J.
    Supercomput. 2021, 77, 818–840. [Google Scholar] [CrossRef]    Publisher’s Note:
    MDPI stays neutral with regard to jurisdictional claims in published maps and
    institutional affiliations.  © 2022 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Singh, R.; Singh, R.; Gehlot, A.; Akram, S.V.;
    Priyadarshi, N.; Twala, B. Horticulture 4.0: Adoption of Industry 4.0 Technologies
    in Horticulture for Meeting Sustainable Farming. Appl. Sci. 2022, 12, 12557. https://doi.org/10.3390/app122412557
    AMA Style Singh R, Singh R, Gehlot A, Akram SV, Priyadarshi N, Twala B. Horticulture
    4.0: Adoption of Industry 4.0 Technologies in Horticulture for Meeting Sustainable
    Farming. Applied Sciences. 2022; 12(24):12557. https://doi.org/10.3390/app122412557
    Chicago/Turabian Style Singh, Rajat, Rajesh Singh, Anita Gehlot, Shaik Vaseem
    Akram, Neeraj Priyadarshi, and Bhekisipho Twala. 2022. \"Horticulture 4.0: Adoption
    of Industry 4.0 Technologies in Horticulture for Meeting Sustainable Farming\"
    Applied Sciences 12, no. 24: 12557. https://doi.org/10.3390/app122412557 Note
    that from the first issue of 2016, this journal uses article numbers instead of
    page numbers. See further details here. Article Metrics Citations Crossref   13
    Scopus   16 Web of Science   8 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 28. Dec 7. Jan 17. Jan 27.
    Jan 6. Feb 16. Feb 26. Feb 7. Mar 17. Mar 0k 2k 4k 6k For more information on
    the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Appl. Sci., EISSN 2076-3417, Published by MDPI RSS
    Content Alert Further Information Article Processing Charges Pay an Invoice Open
    Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For
    Editors For Librarians For Publishers For Societies For Conference Organizers
    MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia
    JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive
    issue release notifications and newsletters from MDPI journals Select options
    Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated Disclaimer
    Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Applied Sciences (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Horticulture 4.0: Adoption of Industry 4.0 Technologies in Horticulture
    for Meeting Sustainable Farming'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Chamara N.
  - Islam M.D.
  - Bai G.(.
  - Shi Y.
  - Ge Y.
  citation_count: '52'
  description: 'CONTEXT: Automated monitoring of the soil-plant-atmospheric continuum
    at a high spatiotemporal resolution is a key to transform the labor-intensive,
    experience-based decision making to an automatic, data-driven approach in agricultural
    production. Growers could make better management decisions by leveraging the real-time
    field data while researchers could utilize these data to answer key scientific
    questions. Traditionally, data collection in agricultural fields, which largely
    relies on human labor, can only generate limited numbers of data points with low
    resolution and accuracy. During the last two decades, crop monitoring has drastically
    evolved with the advancement of modern sensing technologies. Most importantly,
    the introduction of IoT (Internet of Things) into crop, soil, and microclimate
    sensing has transformed crop monitoring into a quantitative and data-driven work
    from a qualitative and experience-based task. OBJECTIVE: Ag-IoT systems enable
    a data pipeline for modern agriculture that includes data collection, transmission,
    storage, visualization, analysis, and decision-making. This review serves as a
    technical guide for Ag-IoT system design and development for crop, soil, and microclimate
    monitoring. METHODS: It highlighted Ag-IoT platforms presented in 115 academic
    publications between 2011 and 2021 worldwide. These publications were analyzed
    based on the types of sensors and actuators used, main control boards, types of
    farming, crops observed, communication technologies and protocols, power supplies,
    and energy storage used in Ag-IoT platforms. RESULTS AND CONCLUSION: The result
    showed that 33 variables measured by various sensors were demonstrated in these
    studies while 10 actuations were successfully integrated with Ag-IoT platforms.
    Perennial crops, which introduced less disturbance to Ag-IoT platforms than annual
    crops, were selected by 64% of researchers. Furthermore, studies in Ag-IoT system
    development were more focused on outdoor than indoor environments. Ag-IoT systems
    based on Arduino were most common among the studies while commercial platforms
    were least adopted, likely due to their inflexibility in customized developments.
    More researchers focused on agricultural applications than the IoT technology
    itself. Soil water content-based irrigation scheduling and controlled environment
    monitoring and controlling were the main applications. Other application areas
    included soil nutrient estimation, crop monitoring based on multiple vegetation
    indices, pest identification, and chemigation. SIGNIFICANCE: Several potential
    future research directions were identified at the end of the review, including
    integration of satellite-based internet connectivity to improve the IoT networks
    in non-connected farms, development of mobile IoT platforms (drones and autonomous
    ground vehicles) with continuous connectivity, and the use of edge-computing and
    machine-learning/deep-learning to enhance the capability of the Ag-IoT systems.'
  doi: 10.1016/j.agsy.2022.103497
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    View Open Manuscript Outline Highlights Abstract Graphical abstract Keywords 1.
    Introduction 2. Review methodology 3. Technical review of the state-of-the-art
    in Ag-IoT 4. Challenges of Ag-IoT systems and potential solutions 5. Supporting
    technologies 6. Ag-IoT for farming systems analyses and management 7. Conclusions
    and future directions Declaration of Competing Interest Acknowledgements Appendix
    A Data availability References Show full outline Cited by (55) Figures (12) Show
    6 more figures Tables (5) Table 1 Table 2 Table 3 Table 4 Table Agricultural Systems
    Volume 203, December 2022, 103497 Review Ag-IoT for crop and environment monitoring:
    Past, present, and future Author links open overlay panel Nipuna Chamara a, Md
    Didarul Islam a, Geng (Frank) Bai a, Yeyin Shi a, Yufeng Ge a b Show more Add
    to Mendeley Share Cite https://doi.org/10.1016/j.agsy.2022.103497 Get rights and
    content Under a Creative Commons license open access Highlights • We searched
    and reviewed the most relevant 115 papers on Ag-IoT published between 2011 and
    2021. • The papers were analyzed focusing on sensors, actuators, main boards,
    crops, communication protocols, and power supplies. • Ag-IoT components, challenges,
    potential solutions, and supporting technologies were presented and discussed.
    • The benefits of Ag-IoT for farming systems analyses and management were discussed.
    • We concluded with the future direction of designing an Ag-IoT system with completeness,
    robustness, and compatibility. Abstract CONTEXT Automated monitoring of the soil-plant-atmospheric
    continuum at a high spatiotemporal resolution is a key to transform the labor-intensive,
    experience-based decision making to an automatic, data-driven approach in agricultural
    production. Growers could make better management decisions by leveraging the real-time
    field data while researchers could utilize these data to answer key scientific
    questions. Traditionally, data collection in agricultural fields, which largely
    relies on human labor, can only generate limited numbers of data points with low
    resolution and accuracy. During the last two decades, crop monitoring has drastically
    evolved with the advancement of modern sensing technologies. Most importantly,
    the introduction of IoT (Internet of Things) into crop, soil, and microclimate
    sensing has transformed crop monitoring into a quantitative and data-driven work
    from a qualitative and experience-based task. OBJECTIVE Ag-IoT systems enable
    a data pipeline for modern agriculture that includes data collection, transmission,
    storage, visualization, analysis, and decision-making. This review serves as a
    technical guide for Ag-IoT system design and development for crop, soil, and microclimate
    monitoring. METHODS It highlighted Ag-IoT platforms presented in 115 academic
    publications between 2011 and 2021 worldwide. These publications were analyzed
    based on the types of sensors and actuators used, main control boards, types of
    farming, crops observed, communication technologies and protocols, power supplies,
    and energy storage used in Ag-IoT platforms. RESULTS AND CONCLUSION The result
    showed that 33 variables measured by various sensors were demonstrated in these
    studies while 10 actuations were successfully integrated with Ag-IoT platforms.
    Perennial crops, which introduced less disturbance to Ag-IoT platforms than annual
    crops, were selected by 64% of researchers. Furthermore, studies in Ag-IoT system
    development were more focused on outdoor than indoor environments. Ag-IoT systems
    based on Arduino were most common among the studies while commercial platforms
    were least adopted, likely due to their inflexibility in customized developments.
    More researchers focused on agricultural applications than the IoT technology
    itself. Soil water content-based irrigation scheduling and controlled environment
    monitoring and controlling were the main applications. Other application areas
    included soil nutrient estimation, crop monitoring based on multiple vegetation
    indices, pest identification, and chemigation. SIGNIFICANCE Several potential
    future research directions were identified at the end of the review, including
    integration of satellite-based internet connectivity to improve the IoT networks
    in non-connected farms, development of mobile IoT platforms (drones and autonomous
    ground vehicles) with continuous connectivity, and the use of edge-computing and
    machine-learning/deep-learning to enhance the capability of the Ag-IoT systems.
    Graphical abstract Download : Download high-res image (157KB) Download : Download
    full-size image Previous article in issue Next article in issue Keywords Internet
    of thingsSensor networkArtificial intelligenceMachine learningPrecision agricultureWireless
    communication 1. Introduction Crops are essential for human life because they
    provide food, animal feed, fuel, and raw materials for clothing and shelter. Crop
    yield has to be doubled in 2050 compared to 2009 in order to meet the demand of
    a growing population while increasing the food quality and reducing production
    inputs (Fukase and Martin, 2020). Potential solutions to enhance global food security
    include closing crop yield gaps, reducing food waste, changing dietary habits,
    and reducing inefficiencies in resource use (Foley et al., 2011). Reducing inefficiencies
    in input resources (such as water and nitrogen) can be achieved by continuously
    monitoring crops, soil, and microclimate, and then properly controlling inputs
    without sacrificing the yield and quality of the crop. Internet of Things (IoT)
    becomes a key technology that enables continuous monitoring and control in this
    scenario. The ability to generate (near) real-time quantitative data with high
    spatiotemporal resolution is a major advantage of IoT systems (Liao et al., 2017).
    IoTs are considered big data systems due to volumes, velocities, and varieties
    of data they generate. These data are mined and modeled to elucidate the relationships
    between inputs and outputs (Tsai et al., 2014). Correlation, trend analysis, classification,
    and numerical prediction are implemented on the data to reach meaningful control
    decisions. Compared with the conventional wireless sensor networks, the holistic
    approach of IoT technology allows users to incorporate data analytics on the big
    data collected by IoT sensor devices. Generally, connected actuators are enabled
    to control the inputs to achieve desired application rates. For example, an internet-connected
    soil water content (SWC) sensor network measures the plant water deficit and uploads
    data to a cloud-based data analysis platform. The analysis will find the trend
    of soil water deficit to determine the best time and quantity to apply irrigation
    water. There has been a boom in IoT application development in agriculture (Ag-IoT)
    in the last two decades, particularly around crop, soil, and microclimate monitoring.
    However, the application of Ag-IoT at the commercial scale is still at its early
    stages. A deeper and more holistic understanding of the existing IoT system development
    is important for various stakeholders to sketch the future landscape of Ag-IoT.
    Therefore, the main objective of this paper is to review the key components of
    Ag-IoT including sensors, actuators, data processing, and data transmission, summarize
    its usage in crop, soil, and microclimate monitoring, and identify the research
    needs for successful IoT implementation in the future. Though Ag-IoT is proliferating
    in both crop and animal monitoring and management, Ag-IoT for crop production
    is the focus of this paper. IoT platforms for livestock production, as well as
    other sectors of agriculture (such as postharvest) are not included. IoT can be
    found in the manufacturing industry, consumers products, retail, finance and marketing,
    healthcare, transportation and logistics, smart city, military applications and
    supply chains (Islam et al., 2022). Fig. 1 shows the three main layers of a generic
    IoT architecture: the perception layer, network layer, and application layer (Jabraeil
    Jamali et al., 2020). The perception layer consists of gateways, mobile devices,
    sensors, actuators, power, and energy storage components. Activities in the perception
    layer include sensing, controlling, actuation, energy harvesting, energy storage,
    data transmission, and power management. The perception layer of the Ag-IoT faces
    challenges including harsh environmental conditions, heterogeneity of the applications,
    nonavailability of communication infrastructure, and lack of continuous power
    supplies, to just mention a few. This review therefore emphasizes the perception
    layer of Ag-IoT. The network layer consists of network devices and data transmission
    and processing functions. The application layer is responsible for user-specific
    applications such as data visualization, actuator control dashboards, as well
    as data storage, analysis, and decision making. This three-layer architecture
    of IoT can be expanded to five layers by including transport layer after network
    layer and adding business layer after the application layer (Banu, 2018). The
    transport layer is responsible for data transmission while the business layer
    manages the whole IoT system according to the user''s business model. Download
    : Download high-res image (117KB) Download : Download full-size image Fig. 1.
    Three- and five-layer architectures of generic IoT systems. The rest of the paper
    is organized as follows. The method of the literature review is presented in Section
    two. Section three details the major elements of Ag-IoT technology. Section four
    describes the challenges that Ag-IoT systems face with emerging solutions. In
    Section five, supporting technologies for Ag-IoT are discussed. How the information
    from Ag-IoT can benefit farm systems analysis and management is discussed in Section
    six. The final section concludes the review article with future research directions.
    2. Review methodology We have come up with a list of eleven research questions
    to guide the literature review and analysis in Ag-IoT. These questions, along
    with the motivation to ask these questions and our initial hypotheses, are listed
    in Table 1. Table 1. Research questions, motivations, and hypotheses to guide
    the literature review and the analysis of Ag-IoT. Empty Cell Research Question
    Motivation Hypothesis 1 Has the Ag-IoT technology been receiving global attention?
    To understand the global presence/importance of IoT in the crop, soil, and microclimate
    monitoring >20 countries actively engaged in Ag-IoT application development 2
    What types of IoT sensors have been used in agriculture? To find the role of IoT
    sensors on the crop, soil, and microclimate monitoring All types of sensors receive
    similar attention 3 What are the most popular IoT platforms in crop, soil, and
    microclimate monitoring research? To identify the best platforms suitable for
    Ag-IoT system development DIY IoT platforms are used by researchers more frequently
    than commercial IoT platforms 4 What IoT connectivity technologies are used in
    Ag-IoT? To understand how to select a connectivity technology for Ag-IoT Long-range
    low throughput wireless connectivity technology are common with Ag-IoT 5 Which
    IoT network/communication protocols are used in agriculture? To understand how
    to select a communication technology in Ag-IoT IoT protocol does not affect significantly
    on Ag-IoT system development 6 What cloud platform have been used widely in Ag-IoT
    systems? To identify the most widely used cloud service for IoT Commercial platforms
    have been widely used compared to custom built platforms 7 What are the main power
    sources used by Ag-IoT systems? To understand the power and energy management
    in Ag-IoT platforms Solar power is prevalent with Ag-IoT systems 8 What types
    of IoT actuators have been used in agriculture? To find the role of IoT actuators
    on crop input control Irrigation controlling IoT actuators are most popular 9
    What are the most feasible energy storage methods suitable for Ag-IoT systems?
    To identify the best energy storage units for Ag-IoT devices Lithium polymer battery
    is the dominant battery used with IoT system 10 Are Ag-IoT platforms more popular
    for indoor or outdoor farming? To find the dominant market share of IoT for indoor
    and outdoor crop production Ag-IoT systems are more popular for indoor agriculture
    11 Do Ag-IoT systems have more focus on a specific type of crop? To understand
    the crop type preference of Ag-IoT researchers when it comes to practical implementation
    Ag-IoT systems are more popular with perennial crops To find the answers to questions
    in Table 1, a thorough literature review was conducted. The main approach was
    to find the answers based on the recent research carried out in the field of Ag-IoT.
    We have searched for the recent Ag-IoT research published in scientific journals
    and conference proceedings between 2011 and 2021, using keywords through Google
    Scholar and Scopus web search. Keywords used in the search were Internet of Things,
    IoT, Crop Monitoring, Wireless Sensor Network, Smart Agriculture, and Crop Sensing.
    This search resulted in 200 peer-reviewed journal articles and conference proceedings
    papers. After reading the abstracts, 115 papers were determined to be relevant
    to the topic of Ag-IoT. The selected articles are listed in the Appendix, and
    they were used for in-depth analysis. Research papers selected covered countries
    in all six continents (except for Antarctica, Fig. 2a). Asia presented the largest
    number of papers (Scotford and Miller, 2004), whereas Australia had the smallest
    number of papers. In terms of countries, India (Coleman et al., 2022) and China
    (Chen et al., 2014) had the highest numbers of research outcomes. Fig. 2b presented
    the yearly distribution of the research papers. The number of research papers
    published related to the topic increased over time, with the highest in 2019.
    Demographics of the collected data set provided the answer to question 1 in Table
    1, that Ag-IoT has received global attention. More Ag-IoT research has been completed
    in countries with smallholder farmers such as India and China. The selected papers
    were read carefully and analyzed for the technical specification of the IoT systems,
    including the sensors and actuators in each study, communication technologies
    used, environment the system implemented, and the IoT service provider used. Download
    : Download high-res image (173KB) Download : Download full-size image Fig. 2.
    (a) The heat map of Ag-IoT research around the world; (b) Distribution of the
    selected papers by year. 3. Technical review of the state-of-the-art in Ag-IoT
    In Section 3, we have thoroughly reviewed the major components of Ag-IoT. To conduct
    this review systematically, we have divided this section into multiple subsections.
    These subsections are sensors, IoT platforms/main control board, wireless communication
    technology, IoT protocols, cloud platforms, power and energy management, and actuators.
    3.1. Sensors Sensors play a major role in Ag-IoT systems because they serve as
    the converter between real-world signals and their digital representations. This
    section begins with an introduction and categorization of sensors used to measure
    crop, soil, and microclimate parameters. General purpose sensors such as temperature
    sensor, light intensity sensor, accelerometers, soil moisture sensor, etc., can
    be integrated into Ag-IoT systems (White, 1987). Table 2 gives sensor categories
    along with sensor measurands and provides some examples found in the literature.
    Table 2. The classification of sensors, measurands, and examples of each sensor
    class used in Ag-IoT. Physical Parameter Category Sensor Measurand Sensors used
    to measure the measurand Crop, soil, and microclimatic monitoring applications
    found in the literature Acoustic Wave amplitude, phase, polarization, spectrum,
    wave velocity Microphone, ultrasound distance sensor Hardwood borer identification
    (Potamitis et al., 2019), crop canopy height estimation (Yuan et al., 2018) (Elci
    et al., 2018), wind speed (Kameoka et al., 2017) Biological Biomass, species type,
    count, density, chlorophyll concentration Multispectral sensors, RGB camera, Load
    cell Plant wet weight, estimate above-ground biomass (Chamara, 2021), Continuous
    plant weight measurement (Chen et al., 2016) Chemical pH, electrical conductivity,
    gas type, air quality Volatile organic compounds (VOC) Indoor air quality (Bagley
    et al., 2020), soil pH (Chen et al., 2019), irrigation water pH, soil conductivity,
    irrigation water conductivity, soil gas flux, plant house CO2, O2 concentration
    (Chen et al., 2019) Electric Charge, current, potential difference, electric field,
    resistance, (amplitude, phase, polarization, spectrum), conductivity, permittivity
    Soil moisture sensor, (capacitive, or resistive type) humidity sensor Soil water
    content (Chamara et al., 2021), air humidity (Bagley et al., 2020), soil nutrient
    estimation, stomata conductance, sap flow estimation, evapotranspiration estimation
    (ET), soil electrical conductivity (EC) (Chen et al., 2019) Magnetic Magnetic
    field (amplitude, phase, polarization, spectrum), magnetic flux, permeability
    Anemometer Wind speed and direction measurement (indirect) (Chen et al., 2019)
    Mechanical Position, velocity, acceleration, force, stress, pressure, strain,
    mass, density, momentum, torque, speed of flow, rate of mass transport, shape,
    roughness, orientation, stiffness, compliance, viscosity, crystallinity, structural
    integrity Pressure sensor, strain gauge load cell sensors Air pressure measurement
    (Bagley et al., 2020), stem growth measurement, wind speed measurement, fruit
    growth measurement, Continuous plant weight measurement (Chen et al., 2016) Optical
    Wave amplitude, phase, polarization, spectrum, wave velocity, intensity, energy
    Illuminance sensor, imaging sensors, thermal imaging camera Light intensity variation
    over the crop canopy (Yoshino et al., 2021), object detection (ex: leaves, fruit,
    flowers) (Chamara et al., 2021), plant dimension extraction, chlorophyll type,
    concentration estimation, plant water stress estimation, leaf disease detection
    (Thorat et al., 2017), Canopy temperature (Bagley et al., 2020), Radiation Type,
    intensity, energy Neutron probe soil water content estimation (Barker et al.,
    2017) Thermal Temperature, flux, specific heat, thermal conductivity Temperature
    sensor evapotranspiration, irrigation, variety breeding and yield forecasting
    based on leaf temperature (Yu et al., 2016), sap flow rate estimation (Villalba
    et al., 2017) Proper selection of sensors to an application is essential for IoT
    systems developers as well as for users to best use the sensors. The advancement
    of sensor technologies has a major impact on the popularity of IoT. Low energy
    consumption, compatibility in data transmission between the microcontroller and
    the sensor, accuracy, repeatability, sensitivity, and robustness are major considerations
    to select a sensor for IoT system development. To address research question 2
    in Table 1, we marked and counted the sensors in the 115 research papers reviewed,
    with the total count of each sensor given in Fig. 3. Soil moisture sensors were
    used for the largest number of applications (Ivanova et al., 2016) followed by
    humidity sensors (Hurst et al., 2021) and then air temperature sensors (Haque
    et al., 2021). The reason these sensors were integrated most in Ag-IoT so far
    is likely because of the need for continuous in-situ soil moisture monitoring
    for decision making in irrigated agricultural production. Water scarcity is a
    global issue, and the amount of arable land can be expanded significantly if growers
    can apply water efficiently (Aroca et al., 2018). On the contrary, soil water
    tension measured via soil water potential sensors only appeared in three papers.
    This lower interest in soil water potential sensors is likely due to (1) less
    understanding of the relationship between soil water tension and crop growth,
    (2) less availability of low-cost soil water potential sensors, and (3) the difficulty
    in interfacing the available soil water potential sensors to the IoT platforms.
    Next, we will discuss the Ag-IoT sensors found in the literature according to
    the measurand category it belongs to. Download : Download high-res image (192KB)
    Download : Download full-size image Fig. 3. Various sensors found in reviewed
    research papers and their frequency. 3.1.1. Acoustic sensors Ultrasound distance
    measurement sensors and microphones are the most common acoustic property measuring
    sensors. Direct use of acoustic measurements is limited in Ag-IoT. Hardwood borer
    identification IoT sensor network is a direct application of microphone used in
    pest detection in forestry (Potamitis et al., 2019). Ultrasonic wind speed and
    direction sensor is an important meteorological sensor used in agriculture to
    estimate evapotranspiration (Kameoka et al., 2017). Compared with the mechanical
    anemometer, an ultrasonic anemometer requires less maintenance due to fewer mechanical
    parts involved. Furthermore, an ultrasonic anemometer can capture sudden changes
    in wind speed and direction very accurately. Acoustic sensors were used indirectly
    to measure biological measurands. Crop canopy height estimation by ultrasound
    sensor is an indirect approach to measure biological parameters (Yuan et al.,
    2018; Elci et al., 2018). IoT-enabled ultrasound distance sensors are widely used
    in irrigation systems to estimate the water volume in tanks, wells and reservoirs,
    and it is an essential sensor for irrigation scheduling in automated irrigation
    systems. Recently ultrasound flow meters replaced the mechanical flow meters due
    to their high accuracy in flow rate measurement with less maintenance. Underwater
    ultrasound scanning is possible for aquatic plant growth monitoring purposes such
    as lotas and seaweed and has a huge potential to determine the harvest stage and
    growth rate monitoring (Kool and Bernard, 2019). Fruit ripeness estimation is
    an interesting example of the indirect use of acoustics in agriculture. Daosawang
    et al. (2020) demonstrated that watermelon ripeness could be estimated by a sound
    generator and receiver. In summary, acoustic sensors advanced in recent years
    while replacing some traditional mechanical Ag-sensors and introducing new applications
    in agriculture. 3.1.2. Biological sensors Above-ground biomass of plant, plant
    height, plant density, leaf angle, leaf area index (LAI), count of plant organs
    (leaf, fruit, flower), chlorophyll concentration, sap flow, and stomata conductance
    are useful biological parameters in crop monitoring. Crop yield and the growth
    stage can be estimated from the plant''s mass (biomass). Loadcells are used in
    indoor farming pots to measure the plant weight directly (Long and McCallum, 2015).
    Almost all the field crop biomass estimations have been measured by indirect sensing
    techniques such as biomass-sensitive vegetation indices (VI) or by image processing-based
    techniques. However, both techniques require time-consuming ground truth data
    collection for model calibration. The accuracy of these techniques is subject
    to lighting conditions, sensor type, crop type, model parameters, and training
    data set. Just like crop biomass, many other biological measurands are also estimated
    indirectly. For example, stomata conductance can be quantified through optical
    measurands, and plant height through acoustic sensors. Therefore, most of the
    biological measurands will be discussed as indirect applications under other measurands.
    3.1.3. Chemical sensors Chemical sensors can be categorized into two main types:
    photochemical and electrochemical. Photochemical sensors measure chemical reactions
    or chemicals by their spectral signature, and electrochemical sensors measure
    the electrical properties due to chemical reactions or the presence of chemicals
    (Angkawinitwong and Williams, 2021). Soil pH, soil salinity, soil nutrients, oxygen
    (O2), carbon dioxide (CO2), methane (CH4), pH and conductivity of irrigation water,
    and photosynthesis are the parameters that often measured by chemical sensors.
    Knowing the pH of water and soil is important because pH affects the solubility
    of nutrients and therefore plant nutrient uptake and growth. Soil and irrigation
    water pH measurements with IoT-enabled sensors were demonstrated in the literature
    in nine studies. Spatial variability and the dependency of sensor accuracy on
    soil condition are the issues to address to promote them in agriculture (Chen
    et al., 2019; Li et al., 2020). The soil salinity sensor and custom-made nitrate
    sensor were counted only once, which highlighted the difficulty of measuring soil
    chemical properties continuously and in a non-destructive manner. The measurement
    of the real-time nutrient content in the soil, especially nitrogen (N), phosphorus
    (P), and potassium (K) are essential for fertigation. These sensors are still
    at the rudimentary stage (Burton et al., 2018) of development. Real-time soil
    nutrient sensing has a huge potential in future agriculture as nutrient leaching
    and groundwater pollution are serious issues people are facing now. Nitrate sensors
    can be fixed to groundwater pumps to monitor the nitrate status of groundwater,
    or installed in leaching water collectors in fields to get reasonable estimation
    about nitrate leaching (Hooper et al., 2019). Soil salinity can be derived from
    the soil''s electrical conductivity (EC), and it was demonstrated three times
    in the literature. This is a very important parameter to measure as soil salinity
    is one of the main soil degrading factors in irrigated agriculture. None of the
    research in the literature highlighted the importance of using EC sensors in soil
    or irrigation systems to ameliorate the soil salinity build-up due to irrigation.
    CO2 and CH4 are greenhouse gases attributed to climate change and agriculture
    is considered a major source of their emission. Accounting for the sourcing and
    sinking of CO2 and CH4 from soil and crops is important to understand the budget
    of greenhouse gases in agriculture. Research suggested that elevation of CO2 can
    increase crop yield as well as improve water use efficiency (Hatfield et al.,
    2011). Therefore, it is essential to measure CO2 and CH4. There are two types
    of gas sensors available. Metal oxide gas sensors increase the electric resistance
    of the sensor when it contacts certain gas. Optical gas sensors measure the absorption
    spectra to detect spectral signatures unique to the gas. O2 sensors can be used
    to monitor the crop respiration rate. Electrochemical sensors can be used to estimate
    dissolved oxygen as the increased dissolved oxygen in water can improve the quality
    and the yield of the aquatic plants (Shi et al., 2018; Ouyang et al., 2020). Another
    interesting parameter to measure is stomatal conductance. Plant stomatal openings
    regulate the exchange of water vapor and CO2 between a leaf and the surrounding
    atmosphere. So far, no IoT-enabled sensor has been developed to measure this parameter
    even though handheld sensors are available (Lamour et al., 2022). Chemical sensors
    can be used to monitor the quality of fruits during harvesting. As an example,
    IoT-enabled Ethelene gas sensors have a huge potential to use in fruit production
    to identify the best time to initiate harvesting (Esser et al., 2012). Although
    chemical sensors improved rapidly in the past decade, applications developed based
    on them in agriculture are still at an early stage. More research is needed to
    incorporate these sensors with Ag-IoT. 3.1.4. Electric sensors Electric sensors
    play a key role in Ag-IoT as they have been used in many industries for a long
    period. The main principle is to measure the change of electrical properties due
    to physical or chemical changes in plants, soil, and the environment. Some electrical
    parameters are charge, current, potential difference, electric field, resistance
    (or conductance), capacitance, and inductance. Soil moisture sensors via IoT systems
    were the most tested sensor in the literature. As most of the agricultural lands
    face water shortages and climate change has heavily affected the water availability,
    most of the studies attempted to address this requirement. We found that electrical
    resistance, capacitance, and permittivity of bulk soils were used to estimate
    soil volumetric water content (VWC). Furthermore, soil water tension was measured
    by the electrical resistance of gypsum blocks. For better irrigation scheduling,
    both VWC and soil water tension are important: VWC quantifies the amount of water
    in the soil whereas soil water tension is a better indicator of how difficult
    plant roots can extract water from the soil matrix. Air temperature and humidity
    sensors are the other two dominant sensors researchers have tested. There are
    three types of humidity sensors: capacitive, resistive, and thermal. Crop ET and
    pest or disease forecasting are the potential applications of the air temperature
    and humidity sensing requirements. But 90% of the research just demonstrated the
    capability of plug play these sensors; only 10% of IoT researchers demonstrate
    the capability of using those sensors for a meaningful task like disease forecasting.
    Humidity is an important environmental parameter directly related to ET calculation,
    crop quality, and pest growth forecasting. Sensors can be deployed to measure
    absolute, relative, and specific humidity. For example, the best time to start
    grain harvesting is highly dependent on grain moisture content and if harvested
    without considering the optimal moisture level it may cause extensive post-harvesting
    damage and economic loss (Zoerb et al., 1993). IoT-based ET modeling and irrigation
    scheduling enable low water usage and low irrigation energy consumption. IoT also
    opened the path for non-conventional VWC measurement. Aroca et al. (2018) presented
    the use of RFID to estimate VWC with a received signal strength of the tag with
    R2 > 0.9. A rain sensor based on the electrical conductivity principle was demonstrated
    as an IoT sensor that could detect the start and end of the rain (Andrey Rivas-Sánchez
    et al., 2019). Based on these literature outcomes it can be concluded that electric
    sensors are mature compared to acoustic and chemical sensors and have been used
    in the industry for a long time and have a wide range of applications in Ag-IoT.
    3.1.5. Mechanical sensors Mechanical sensors convert a physical parameter of interest
    through a mechanical system to an electrical signal. Parameters such as flow rate,
    acceleration, velocity, direction, orientation, and pressure can be measured by
    mechanical sensors. Examples of IoT-enabled mechanical sensors found in the literature
    include rain gauges, mechanical flow meters, air and liquid pressure meters, and
    anemometers. Rain gauge is important to capture the precipitation accurately to
    determine the timing and quantity of irrigation when combined with soil water
    content sensors and evapotranspiration modeling (Kameoka et al., 2017). Tipping
    bucket rain sensor converts water volume it captures to an electrical signal through
    a simple mechanism. Measuring pressure is important for air, liquid, and soil
    pressure calculation. Air pressure is relevant to measure crop transpiration as
    the opening and closing of plant stomata are partially regulated by vapor pressure
    deficit. Soil compaction can be measured by the pressure sensors inserted into
    the soil, which are useful for measuring the impact of heavy agricultural machinery.
    Irrigation line pressure sensors are critical to monitor the irrigation process
    as the wetting pattern of irrigation systems highly depends on the irrigation
    line pressure. High pressure causes loss of irrigation energy while low pressure
    does not allow maximum irrigation area through sprinklers. Anemometers can be
    used to measure the wind speed which is required for calculating ET and detecting
    high-speed wind that could be hazardous to plants. Gas and liquid flow rate are
    significant parameters for crop, soil, and environmental monitoring. Conventionally
    crop and soil inputs in the liquid or gaseous form, such as water input (including
    rain), leaching water, liquid fertilizer, liquid or gaseous insecticides, are
    measured using flow sensors. Some cash crops or niche crops such as wasabi (Sultana
    and Savage, 1970) and lettuce (Sultana and Savage, 1970) need highly precise environmental
    conditions and flow monitoring sensors are important for meeting those conditions
    in the future if climate change imposes challenges to grow them. Overall mechanical
    sensors play a key role in Ag-IoT systems, but most of the mechanical sensors
    are replaced by non-mechanical sensors due to the fact mechanical sensors need
    frequent maintenance and have long response time. 3.1.6. Optical sensors Optical
    measurands play a key role in modern agriculture. There should be a light source
    and an optical sensor to take the measurements. Ultraviolet (UV), visible, and
    near infrared (NIR) are the main wavelength regions where optical sensors are
    operated. It is important to note that optical sensors appear to have the least
    applications as IoT sensors according to the literature. Typical RGB images were
    used to derive RGB image-based vegetation indexes while multispectral sensors
    were used to derive vegetation indexes such as NDVI and NDRE (red-edge NDVI).
    Most of the optical sensors that generate spectral signatures or images of the
    target produce larger volumes of data and consume a higher amount of power compared
    to other sensors in Fig. 3. This appears to be a significant discouraging factor
    to incorporate these sensors into IoT. Naturally, signals in the visible region
    were used as indicators for many crops and environmental parameters such as maturation
    time, crop quality (Long and McCallum, 2015), crop nutrient requirement, pest
    pressure, as well as water and nutrient level in the soil. Historically people
    used their eyes (only responsive to the visible lights) to evaluate the color
    intensities somewhat qualitatively (e.g., comparing those to standard color cards).
    The introduction of these sensors has significantly improved optical measurements
    of crop and environmental parameters by (Akyildiz et al., 2009) enabling quantitative
    assessments and (Alderfasi and Nielsen, 2001) extending the spectral regions from
    visible only to UV and NIR. Fruit spectral signature was used to identify defects
    in the fruit that could not be revealed via visible light. NDVI and NDRE were
    used to quantitatively determine crop density as well as the nitrogen and water
    requirements (Scotford and Miller, 2004). We would like to highlight that more
    research is needed to demonstrate the optical measurand use in Ag-IoT as they
    can be used in a wide range of applications in agriculture. 3.1.7. Thermal sensors
    Thermal measurands have a wide range of applications in Ag-IoT, and most of them
    are measured indirectly with optical and electrical means; for instance, measuring
    crop canopy temperature with infrared radiometers. In the literature, the frequent
    use of air and soil temperature sensors highlighted their importance in crop ET
    modeling and disease forecasting (Symeonaki et al., 2020). These sensors are cheap
    and readily available as off-the-shelf items and support a wide variety of IoT
    platforms (Mohanraj et al., 2016). Thermal parameters have the potential to indirectly
    measure biological measurands. One such example is the sap flow sensor, which
    was described in one study as a transpiration measuring sensor compatible with
    the IoT system (Villalba et al., 2017). The sensor consisted of a flexible tree
    stem heater and a temperature sensor while the IoT platform calculated sap flow
    based on the applied heat and temperature. This sap flow measurement is proportional
    to transpiration (sap movement in the xylem) and therefore useful in crop ET modeling
    (Villalba et al., 2017). Sap flow monitoring is essential in some crops to understand
    the physiological behavior of plants. Rubber, maple, coconut, and palmyra palm
    sap are the output of the harvest, and in these cases, sap flow monitoring is
    useful to estimate yield, optimize production, and develop high-yielding crop
    varieties. Indirectly measured canopy temperature through infrared radiometers
    estimates the transpiration rate and crop water stress index, which is important
    for water stress detection and irrigation scheduling (Alderfasi and Nielsen, 2001).
    Identification of pests such as wild boar through thermal measurement is an interesting
    application in agriculture. Furthermore, the temperature is found to affect the
    quality of grapefruits (sugar content) and flowering time of several crops (Pérez-Expósito
    et al., 2017). Temperature sensors can also record the temperature variation in
    plant leaves and flowering buds and give a warning about frosting time (Barker
    et al., 2017). This listing of thermal measurand applications concluded that thermal
    sensors are very important in Ag-IoT and have been demonstrated in the past literature.
    3.2. Sensing platforms and main control board Section 3.2 summarizes the statistics
    of the Ag-IoT sensing platforms and control boards in the literature. The answer
    for Question 3 in Table 1 was derived from Fig. 4. Download : Download high-res
    image (196KB) Download : Download full-size image Fig. 4. Main control boards
    of the Ag-IoT systems present in the reviewed papers. 3.2.1. Sensing platforms
    Sensing platforms consist of sensor node including sensors, power supply, energy
    storage, actuators, main control board or the data processing unit, and structural
    components. Structural components determine the sensor node establishment in the
    field. There are two main types of IoT platforms available for crop monitoring.
    Stationery IoT platforms can collect continuous crop data or telemetry data targeting
    a single plant or a group (plot) of plants. The main advantage of stationery IoT
    is the high temporal resolution of the data. Mobile IoT platforms can collect
    data over some areal coverage and with high spatial resolution, but with limited
    temporal resolution. Kumar et al. (2016) presented the development and testing
    of a crop monitoring mobile robot. It is capable of automatically planning the
    path to find crops, recognizing plants using neural networks, applying fertilizer
    timely, and applying water based on the feedback from soil moisture sensors, temperature
    sensors, and humidity sensors. 3.2.2. Main control boards The communication and
    data processing hardware for IoT systems reported in the reviewed papers could
    be broadly categorized into three kinds: commercial platforms, custom build, and
    DIY (do-it-yourself) development boards. The commercial platforms are reliable
    but have limited support for integrating different or additional sensors. IPex12
    (Odin Solutions SL, Peru), Particle Electron (Particle Industries, Inc., USA),
    MICAZ (MICAS AG, Germany), IRIS (IRIS IoT Solutions, UK), and Telosb (Advantic
    Sistemas y Servicios S.L., Spain) are commercial IoT systems. In the last decade,
    commercial IoT platforms were still at their development stage, explaining their
    lower use in the reviewed papers. Custom build hardware is designed by researchers
    based on their own requirements. Researchers have the flexibility to decide on
    the number and types of sensors, interfacing connections, microprocessor clock
    speed, IoT node memory capacity, input voltage, and the communication technology
    used in the node. Furthermore, the technical complexities present in developing
    customized sensor interfacing may also discourage researchers from using commercial
    systems. The custom build hardware platforms have high levels of customization
    but require extensive knowledge of embedded system development to design them.
    DIY platforms are IoT nodes designed based on commercially available development
    platforms, including Arduino, EasyPIC v7, ESP32, Raspberry Pi, and Wapmote. DIY
    development board based IoT systems are popular among researchers because of their
    low cost, high availability, compatibility, and easy programmability. The percentage
    of different hardware platforms used in the reviewed articles is given in Fig.
    4. There were 52 identifiable hardware designs in the list of 115 research. Out
    of them, 29% of the platforms had Arduino only, 8% had Arduino and Raspberry Pi
    hardware jointly, and 2% used Arduino and Arducam hardware together. Ag-IoT research
    was dominated by Arduino-based development systems. Availability, reliability,
    easy programmability, and the option of supporting multiple communication protocols
    made Arduino-based systems popular among Ag-IoT researchers. Raspberry Pi systems
    were demonstrated in 12% of the IoT systems, likely due to their capability of
    capturing images and high computing power compared to Arduino. Selection of the
    IoT platform and the main control board is an important activity in IoT system
    design. The mainboard must support the communication protocols and the power requirement
    (e.g., voltage) of the sensors and actuators. Often voltage and communications
    protocol converters are needed to interface sensors with the main control board.
    Mainboards support three types of digital memories. Volatile memory holds the
    instructions and data of the currently running program until the power is on.
    Volatile memory influences the system''s performance. A larger volatile memory
    is needed for IoT nodes with a large amount of data generated via sensors like
    RGB cameras or spectral sensors. Nonvolatile memory stores data and the program
    when the IoT node power is turned off. The operating system, device identification
    data, and system settings are common data types stored in the nonvolatile memory.
    External nonvolatile memory (e.g., SD cards) can be used to store data or system
    settings, greatly expanding the data storage capability of the Ag-IoT system.
    3.3. Communication technologies and IoT protocols Section 3.3 produces the answers
    to research questions 4 and 5 in Table 1 while discussing findings on the literature
    related to wireless communication technology and IoT protocols. 3.3.1. Wireless
    communication technology Wireless data transmission is a key function of an IoT
    system. To design a successful Ag-IoT system, it is essential to understand the
    radio frequency (RF) contributing factors that impact signal strength, interference,
    system model, bandwidth, and transmission range. Also, understanding of pros and
    cons of wireless communication technologies is essential for a better Ag-IoT device
    selection. Received power (Pr) of wireless data transmission in an unobstructed
    line of sight in a radio signal-free area depends on the transmitter power (Pt),
    transmitter and receiver antenna gains (GTX, GRX), the distance between the transmitter
    and the receiver (R), and the wavelength (λ) of the radio. This relationship is
    expressed in Eq. 1. Therefore, long wavelength radio signals such as LoRa in 900
    MHz are suitable for long-distance data transmission compared to short wavelength
    signals such as Wi-Fi operated in 2.4–3.2 GHz without changing other variables.
    For long-distance communication, the plane earth loss formula is used to account
    for the curvature of Earth for signal strength (Nadir et al., 2008). Equation
    1 Friis transmission equation (Shaw, 2013). Furthermore, radio signals are subject
    to reflection, diffraction, and scattering. These phenomena are illustrated in
    Fig. 5. In open flat agricultural fields, reflection, scattering, and diffraction
    may not occur unless there are large agricultural structures. In hilly areas and
    forests, the effects of wireless signal propagation properties may need special
    attention when placing IoT devices. The Fresnel Zone is the area around the visual
    line-of-sight that radio waves propagate out once they leave the antenna. Blockage
    of Fresnel Zone >40% causes severe signal losses (Tate et al., 2008). Therefore,
    factors such as the height and density of the crop canopies nearby, the presence
    of agricultural structures (e.g., irrigation pivots and storage silos), the locations
    to place IoT nodes, and the antenna height and position are important to account
    for in ensuring the signal transmission quality. In fact, the research on wireless
    communications in rural and agricultural landscapes has raised a lot of interest
    recently (Vuran et al., 2022). The signal quality is also affected by channel
    noise, interference, multipath fading, and attenuation. The success of data transmission
    is measured by a parameter called bit rate error (BRE). Based on the above discussion
    we would like to suggest that it is important to use wireless signal strength
    mapping tools during IoT system installations. Such tools will help to select
    the optimum IoT communication technology (for example, Wi-Fi, LoRa, Mobile Communication)
    suitable for each case, accounting for data transmission rates and signal losses.
    This practice would help farmers to reduce the capital and operational costs involved
    with IoT systems. Download : Download high-res image (63KB) Download : Download
    full-size image Fig. 5. Wireless signal behavior when it meets with an obstacle.
    In the literature, we found that a wide variety of wireless communication technologies
    were used by the researchers. Out of the 35 studies where communication technology
    was clearly mentioned, 34% used Wi-Fi, 17% were conducted using LoRa, and 14%
    used Zigbee. Also 11% of the studies used ethernet or the wired internet connection.
    Less attention was received for mobile communication technologies such as 4G (3%),
    NB-IoT (3%), and GSM (3%). In some cases, researchers used two or more technologies
    to connect different areas in the fields such as LoRa / Wi-Fi, LoRa / TV white
    space (TVWS), and GSM / Zigbee. According to the findings, Wi-Fi and ethernet
    were common in greenhouses while others were favored in outdoor farming practices.
    Fig. 6 summarized the statistics of communication technology used in the literature.
    Download : Download high-res image (170KB) Download : Download full-size image
    Fig. 6. Communication technologies in Ag-IoT applications. 3.3.2. IoT protocols
    IoT protocols are data transmission standards that allow communication between
    the endpoint and services with the internet being the common network. IoT protocols
    are broadly classified into two major groups: IoT data protocols and IoT network
    protocols. The data protocols correspond to the application layer whereas network
    protocols correspond to the perception and network layer in the standard IoT architecture
    (Fig. 1). IoT network protocols create networks of device connections. Wi-Fi,
    LoRaWAN, Zigbee, and Bluetooth are such network protocols, and the same term is
    used to represent wireless communication technology. Some common IoT protocols
    are listed in Table 3 with specifications such as frequency, data rate, and range
    (Triantafyllou et al., 2018; Farooq et al., 2019). Table 3. Common IoT Network
    Protocols/wireless communication technologies and their advantages. Empty Cell
    Frequency Bandwidth Range Advantages Bluetooth 2.4 GHz Bluetooth 4.0+ (25 Mbps)
    Bluetooth 5 (50 Mbps) Bluetooth Low Energy (BLE) (10 kbps) Bluetooth 4.0+ (50
    m) Bluetooth 5 (250 m) Bluetooth Low Energy (BLE) (50 m) Low latency, better responsiveness,
    scalability, reliability, and robustness ZigBee Global 2.4GHz US 915 MHz EU 868
    MHz 2.4 GHz (250 kbps) 915 MHz (40 kbps) 868 MHz (20 kbps) 10-100 m Better scalability,
    randomization, long battery life LoRa 150 MHz-1GHz Depending on the country 0.3–50
    kbps urban area (2-5 km) suburban area (15 km) Long-range, bi-directional communication
    with high security, seamless go-to-market Cellular 900 MHz 1800 MHz 1900 MHz 2100
    MHz GPRS (35-170 kps) EDGE (120-384 kbps) UMTS (384 kbps-2 Mbps) HSPA (600 kbps-10
    Mbps) LTE (3-10 Mbps) GSM (35 km) HSPA (200 km) Best-in-class battery life, wider
    deployment, reliability Wi-Fi 2.4 GHz or 5 GHz 1 Mbps-2.4 Gbps 100 m Data security
    and privacy protection, easy to install and connect, faster data transfers Each
    IoT network protocol/wireless communication technology has its advantages (Table
    3). Bluetooth is a popular short-range wireless communication technology standard
    convenient to create personal area networks. It is possible to use Bluetooth in
    indoor applications such as mobile phone-connected soil water sensors and sensor
    networking in small greenhouses. ZigBee is useful in large indoor growing spaces
    and LoRa is suitable for field crop monitoring senor networks. Cellular technology
    is useful for indoor or outdoor spaces where the network coverage is available.
    Wi-Fi is suitable for both small or large indoor spaces as well as outdoor applications
    where there is infrastructure support available to setup Wi-Fi gateways. Cellular
    and Wi-Fi allow transmitting images, videos, and other larger data files such
    as 3D point cloud data. Bluetooth shares the same advantage but is limited to
    a short distance. Compared to LoRa, Zigbee, and cellular technology, Wi-Fi has
    high reliability in data transmission, but power consumption is high too. All
    these protocols were tested in real crop growing environments (Ferrández-Pastor
    et al., 2016; Codeluppi et al., 2020). 3.4. Cloud platforms and service models
    3.4.1. Cloud platforms Cloud is an essential part of any IoT system. IoT devices
    are not useful without cloud connectivity. Data gathered via individual IoT sensors
    become useful when connected with other relevant sensors. According to the National
    Institute of Standards and Technology, “Cloud computing is a model for enabling
    ubiquitous, convenient, on-demand network access to a shared pool of configurable
    computing resources (e.g., networks, servers, storage, applications, and services)
    that can be rapidly provisioned and released with minimal management effort or
    service provider interaction” (Mell and Grance, 2011). Essential expected characteristics
    of a cloud system are on-demand self-service, broad network access, resource pooling,
    rapid elasticity, and measured service. Out of the 115 papers we reviewed, only
    25 papers discussed cloud platforms in detail. Among them, 28% of the researchers
    used the ThingSpeak cloud platform developed by MATLAB as the service provider,
    12% used Microsoft Azure, and 12% used Ubidots platform. Furthermore, 12% of the
    researchers built themselves a local data server with the required functionality.
    Google-based Firebase had 8% usage. Other cloud platform service providers including
    Amazon Web Services, cloud sense, generic cloud, sensorDB, SEnviro, and Huawei
    Cloud had 4% use each. The percentage distribution of these cloud platforms is
    given in Fig. 7. Download : Download high-res image (185KB) Download : Download
    full-size image Fig. 7. Statistics of cloud service provider selection. 3.4.2.
    Public, private, and hybrid cloud In terms of privacy policies, cloud platforms
    can be divided into three major models: 3.4.2.1. Public cloud Services are offered
    over the public internet and available to anyone who needs to purchase them. Third-party
    cloud service providers own and operate the cloud resources such as servers and
    storage in the public cloud model. Users do not need to spend any capital expenditures
    to scale up; applications can be quickly provisioned and terminated; and users
    pay only for what they use. These are the advantages of the public cloud. Amazon
    Web Services and Microsoft Azure are examples of public cloud services. 3.4.2.2.
    Private cloud A private cloud comprises computing resources used exclusively by
    users from one business or organization therefore hardware must be purchased for
    start-up and maintenance is required. In the private cloud model, infrastructure
    is not shared with users outside the organization. A private cloud can be physically
    placed at a data center owned by the user organization, or it can be hosted by
    a third-party service provider. But the organization has complete control over
    resources and security. 3.4.2.3. Hybrid cloud A hybrid cloud is a computing environment
    that combines a public and a private cloud by allowing data and applications to
    be shared between them. The organizations determine where to run their applications
    while they control security, compliance, or legal requirements. Some organizations
    use a hybrid cloud model to keep sensitive data in the private cloud whereas frontal
    services and web portals are serviced in the public cloud for scalability. Furthermore,
    the public cloud can act as a supporting system if the data and usage exceeds
    the capacity of the private cloud. 3.4.3. Cloud service model Cloud-based services
    provided to the users can be categorized into three major classes based on the
    hierarchy of the service offered. Typical cloud architecture has nine layers.
    They are from bottom to top in order: network, storage, server, virtualization,
    operating system, middleware, runtime, data, and applications. The next section
    will explain cloud service models in detail with hardware and software layers
    they belong. 3.4.3.1. Infrastructure-as-a-Service (IaaS) IaaS was the original
    cloud services model. For IaaS, the cloud service provider will provide the hardware
    and keep it up to date, but operating system maintenance and network configuration
    are up to the client. For example, Azure virtual machines are fully operational
    in Microsoft datacenters. The main advantage of the IaaS model is the rapid deployment
    of new computing devices. DigitalOcean, Linode, Rackspace, Amazon Web Services
    (AWS), Cisco Metapod, Google Compute Engine (GCE), and Microsoft Azure are some
    examples of IaaS. 3.4.3.2. Platform-as-a-Service (PaaS) In this cloud service
    model, the cloud provider manages the virtual machines and networking resources,
    and the cloud tenant deploys their applications into the managed hosting environment.
    For example, Azure App Services provides a managed hosting environment where developers
    can upload their web applications, without having to worry about the physical
    hardware and software requirements. 3.4.3.3. Software-as-a-Service (SaaS) In the
    case of SaaS, the cloud provider manages all aspects of the application environment,
    such as virtual machines, networking resources, data storage, and applications.
    The cloud tenant only needs to provide their data to the application managed by
    the cloud provider. For example, Microsoft Office 365 provides a fully working
    version of Microsoft Office that runs in the cloud. 3.4.3.4. Network-as-a-Service
    (NaaS) Software-defined networking and software-defined perimeters are services
    that belonged to NaaS. NaaS is a cloud model that enables organizations to easily
    operate the network and achieve the outcomes they expect without owning, building,
    or maintaining their infrastructure through the cloud. NaaS can replace hardware-centric
    VPNs, load balancers, firewall appliances, and Multiprotocol Label Switching (MPLS)
    connections. Users can scale up and scale down as demand changes, rapidly deploy
    services, and eliminate hardware costs. 3.4.4. Fog and edge computing Edge computing
    is the moving of data processing close to where the data is generated. Wireless
    communication-enabled sensors with microcontrollers can be considered edge computing
    devices. The introduction of the edge computing paradigm was due to issues related
    to centralized cloud computing architecture. Data and control signal transmission
    latency and delays in centralized system data analytics are some disadvantages
    of cloud computing. Therefore, network designers proposed architectures where
    the computing power is distributed more evenly around the network. Fog and edge
    computing push the processing capability out to the edge of the network, closer
    to the source of the data. Such techniques are called fog computing and edge computing.
    Fog computing is a computing layer between the cloud and the edge where edge devices
    send large amounts of data to the cloud. The fog computing layer can get the data
    from the edge layer before it reaches the cloud and filter what is relevant and
    what is not. The filtered data gets stored in the cloud, while the unrelated data
    can be deleted, or analyzed at the fog layer for remote access or to use in localized
    learning models. Precision herbicide applications become popular with field crops.
    There, a moving platform that has a camera, carries and applies the herbicide
    at the exact location of the emerging weed. The image processing hardware and
    software in the moving platform do the image processing instantaneously to reduce
    the delay of cloud-based image processing in larger fields (Coleman et al., 2022).
    The centralized cloud-only needs the weed density from the moving IoT platform
    to forecast the future herbicide need to maintain the required quantity in the
    stocks. Therefore, edge computing is all about placing computing power on the
    very edge of the network, on the actual sensors of the device. Low power consumption
    and low processing power microchips or micro-controllers embedded in the devices
    provide the power for edge computing. For that reason, their processing capacity
    is much more limited but sometimes can be adequate to process images (Chamara
    et al., 2021). 3.4.5. Data analytics in IoT Data analytics is one of the most
    important activities in any IoT system, as the decision-making of an IoT system
    depends on hundreds of sensors and events, which is difficult to analyze manually.
    Data generated by IoT devices fall under three categories. They are structured
    data (such as SQL storage), unstructured data (e.g., images and videos), and semi-structured
    data (like social media feeds). Ag-IoT systems can generate both structured and
    unstructured data (Lea, 2020). Stream processing and batch processing are the
    two main types of data processing techniques. Stream processing is useful for
    mobile Ag-IoT platforms since it allows real-time data processing. Batch processing
    can be applied in irrigation, chemigation, and fertigation applications as data
    are processed as a batch to make the decision. Common data analytics activities
    for IoT platforms are listed in Table 4. Below are some examples how they are
    used in Ag-IoT for crop, soil, and microclimate monitoring. Alerting allows growers
    to receive an alert message when soil water use exceeds the maximum allowable
    depletion (Gamon et al., 2015). Sensors in the field environment are susceptible
    to problems like physical damage, pest attack, misalignment, and breakdown, which
    cause errors in data streams. These problems can be effectively alleviated by
    error finding. Using time-series Normalized Differential Vegetation Index (NDVI)
    or Crop Water Stress Index (CWSI) to determine the next irrigation or fertigation
    time belongs to trend analysis. Triggering sprinklers in a field based on SWC
    sensor values is an example of signaling. More complex decisions can be formed
    by combining several analytical activities. For example, in automated crop disease
    detection, an average daily temperature above 20 to 25 °C followed by 1–2 in.
    of rain, together with sugar beet leaf color change indicated a sugar beet pathogen
    outbreak (Wolf and Verreet, 2002). This analysis was enabled by data joining,
    tracking, and trend analysis. Table 4. Data analysis activities commonly found
    in Ag-IoT applications. Data analysis activity Function Preprocessing Filter out
    data with little interest to reduce data complexity and duplication Alerting Raise
    an alert if data exceed certain boundary condition Windowing Apply rules on data
    in a predefined time window Joining Combine multiple data streams into a new single
    data stream Error finding Find missing values and anomalies in data streams Tracking
    Identify when or where an event has occurred Trend analysis Quantify change or
    trend of data as a function of time Signaling Send control signal when a decision
    is made 3.5. Power and energy management Power and energy storage are the two
    major driving forces for IoT systems, especially for Ag-IoT located in remote
    fields. In the literature, we found 3 main categories of power management systems.
    Direct main power connected nodes is the first type and most common with indoor
    applications. A rechargeable battery with a recharging option such as solar, hydro,
    or wind is the second option. The third one has a rechargeable battery or a non-rechargeable
    battery but is designed to consume very low power by sending a very low amount
    of data intermittently. Among the 115 pieces of research we have reviewed, only
    27 of them discussed the IoT system power and energy storage features. Out of
    these 27, 11 platforms used solar power as the main power supply while Lithium
    Polymer (LiPo) rechargeable batteries were used as the energy storage solution.
    Out of 11 indoor farming applications which explained the power management options,
    9 used the main grid power supply. Research that focused on IoT system setup under
    high dense canopies used high power density and high-capacity battery-only solutions
    such as 12 V lead-acid batteries. Two studies mentioned they used battery with
    solar but did not disclose details about the specifications. It revealed that
    there are very limited power supplies available for in-field IoT implementation
    and the findings are highlighted in Fig. 8. Download : Download high-res image
    (158KB) Download : Download full-size image Fig. 8. Power supply and energy storage
    selection of the Ag-IoT systems in the reviewed studies. Unlike edge-computing
    devices, typical IoT end nodes are designed to be less power-hungry. This power
    consumption goes high due to certain reasons such as connected high throughput
    sensors, significant data processing, and massive data transmission. However,
    these power consumptions can be minimized by exploiting different techniques such
    as the semi-active phase and sleep phase (Zhang and Li, 2019). The edge computing-enabled
    devices need more power. It is essential to standardize the IoT power management
    based on the crop and geographical location of the devices. For example, solar
    power is not a very promising solution for locations with large trees such as
    rubber, pepper, and spices that have a dense crop canopy 5–10 m above the ground
    (Villalba et al., 2017). 3.6. Actuators Monitoring and controlling are two agricultural
    operations closely related to each other. Monitoring by itself is an open-loop
    operation; whereas monitoring, controlling, and again monitoring the effects of
    controlling make a system closed loop and can improve the efficiency of the system.
    Efficient controlling of the actuators based on the monitoring is a key feature
    in the agricultural domain for optimizing inputs, maximizing crop yield and quality,
    and reducing the negative environmental impacts. Fig. 9 depicts the number of
    actuators controlled via IoT systems that were reported in our reviewed papers.
    Out of the 115 studies, 54 mentioned IoT-enabled actuation. Some studies used
    more than one actuator, whereas most of the in-field IoT sensor monitoring systems
    did not mention the use of actuators. Download : Download high-res image (130KB)
    Download : Download full-size image Fig. 9. Count of actuators controlled via
    IoT systems found in the reviewed papers. Since water is the largest input by
    volume applied to farms, actuators related to water have been mostly discussed
    in the research work. Such controllers are pumps and solenoid valves. Controlling
    these two actuators were demonstrated in 22 and 8 instances, respectively. After
    irrigation, controlling lighting was the most occurred application in indoor farming
    followed by ventilation, fertigation, alert, and air conditioning. Ventilation
    allows outdoor air to come inside the greenhouse while air conditioning includes
    heating or cooling of the air. Alert meant the system sent an email or message
    to the farmer or the operator of the farm when a parameter exceeded a threshold
    value. An IoT-controlled insect repellent actuator was demonstrated twice among
    the 115 case studies evaluated. Automation of soil bed preparation was achieved
    by utilizing stepper motors in one instance of IoT-based indoor farming. According
    to Figure 9, water pumps and valves were the most frequently used actuators, and
    all these systems were closed loop control systems with soil moisture sensors
    and ET modeling. From the study of the above actuator-related research, it can
    be said that there is enormous potential to automate the controlling of the indoor
    crop''s required environment and soil preparation. (See Fig. 9.) 3.7. Ag-IoT for
    crop monitoring Out of the 115 publications reviewed, 71 systems were demonstrated
    in a real environment. Among them, 65% were implemented in the fields, 24% were
    demonstrated in indoor environments, and 11% were simulations. This is an interesting
    finding that reveals the huge potential of implementing outdoor or in-field IoT
    applications. Typically, it is easy to set up indoor IoT sensor networks due to
    fewer technological barriers, such as extreme environmental conditions and sensor
    connectivity issues. Since real applications were available only in 65% (71 out
    of 115) instances, further real implementations can be done to demonstrate the
    capability of Ag-IoT applications. Considering the 71 systems that demonstrated
    the real applications, 49 were practically demonstrated with certain types of
    crops and 22 did not mention the specific crop they used. 15% of these systems
    were demonstrated with grapes while cereal crops accounted for 26%. One research
    was based on both grapes and oranges. In total 50% of the IoT studies focused
    on perennial specialty crops of higher value including grape, moringa, orange,
    citrus, sugarcane, silver maple, apricot, cashew, and olive (Fig. 10). This result
    indicates that IoT can be implemented with diverse crop types to achieve various
    purposes. Ag-IoT systems are easy to set up on perennial croplands as there is
    less soil preparation for the IoT system installation. It is important to develop
    techniques that allow easy IoT implementation to the annual crops as they contribute
    more to global food security. It is also worth to note only one research demonstrated
    the economic viability of IoT implementation (Chen et al., 2019). Therefore, future
    research to assess and understand the economic viability of IoT applications in
    various situations is needed. Download : Download high-res image (167KB) Download
    : Download full-size image Fig. 10. Ag-IoT system implementation with different
    crop types. 4. Challenges of Ag-IoT systems and potential solutions Ag-IoT faces
    challenges that are unique compared with IoT applications in other industries.
    In this section, we briefly discuss those challenges that are of utmost importance
    for Ag-IoT system researchers and developers. Ag-IoT challenges can be mainly
    classified into three sections: technical challenges, sectoral challenges, and
    business challenges (Elijah et al., 2018). 4.1. Technical challenges Limitations
    of the advancement of technology are the reasons for technical challenges. They
    would likely be effectively addressed as tools and technologies advance with time.
    The Ag-IoT technical challenges are discussed under the three layers of the IoT
    architecture (Fig. 1), namely, perception layer issues, network layer issues,
    and application layer issues. 4.1.1. Perception layer issues Ag-IoT systems''
    perception layer faces unique challenges, because of the requirements it needs
    to meet during crop and environmental monitoring in harsh environments (Villa-Henriksen
    et al., 2020). Agricultural lands have limited electricity and communication infrastructure.
    It is not practical or cost-effective to use wired power and communication media
    to connect IoT nodes in the field. Therefore, power management, device longevity,
    and ergonomic design are major challenges related to the Ag-IoT perception layer.
    Power management includes Ag-IoT node-level power generation, strategies to reduce
    power consumption, and energy storage. Section 3.5 Power and Energy Management
    revealed that most of the researchers were interested in solar with rechargeable
    batteries as the power source in agriculture. However, there is a challenge to
    introduce suitable power sources for the Ag-IoT systems under the tall and dense
    crop canopy. Micro wind turbines have the potential as an Ag-IoT power source
    but receive less attention in the literature (Jawad et al., 2017). Continuous
    improvements have been made to rechargeable batteries due to the demand for high
    energy to weight ratio batteries. There are several approaches available to reduce
    power consumption. One approach is to select sensors, actuators, and wireless
    protocols with low energy consumption. Selection of a node duty cycle that turns
    the sensor or actuator on when it reads, sends, or receives signals is another
    viable approach (Estrada-Lopez et al., 2018). Harsh environmental conditions such
    as wind and rainfall, continuous high solar radiation, sub-zero temperatures in
    winter, chemicals commonly used in agriculture, and animal attacks make it difficult
    to keep Ag-IoT nodes in the field in operable conditions for a long time (Villa-Henriksen
    et al., 2020). Sensors, cables, and enclosures should be designed to withstand
    such conditions. Standards are available to follow in most cases, but the cost
    becomes high when required standards need to be escalated. Analog signals (Analogue
    voltage or current), Inter-Integrated Circuits (I2C), Serial Data Interface at
    1200 baud rate (SDI-12), and Universal Asynchronous Receiver/Transmitter (UART)
    are the common sensor to microcontroller data transmission techniques. The microcontroller
    development boards and commercial IoT platforms are designed to work with different
    voltage levels, such as 3.3 V, 5 V, 7 V, and 12 V. These different communication
    protocols and operation voltages have created barriers to the interoperability
    of the devices in Ag-IoT implementation. Research and development to standardize
    data communication and power supply in Ag-IoT systems would substantially increase
    the scalability, upgradability, and interoperability in the perception layer.
    Improving ergonomic design and reducing the labor intensiveness for deploying
    Ag-IoT systems in the field are urgently needed. IoT-based soil water content
    monitoring is a good example to show this issue. Often soil sensors are buried
    underground for continuous measurements during a season. These sensor nodes also
    have an aboveground section to allow wireless communication, which could interfere
    with farm operations such as tillage, fertilizer application, and chemical spraying,
    and should be closely monitored. For annual crops, the need to remove the sensors
    when crops are harvested and reinstall them in the next season represents a significant
    logistic issue for using them effectively. Research on underground wireless communication
    technology (Akyildiz et al., 2009) and Internet of Underground Things (Vuran et
    al., 2018) is ongoing, bearing the promise to alleviate this challenge associated
    with Ag-IoT node installation and maintenance. No standards are currently available
    on Ag-IoT installation as agricultural fields and practices are highly heterogeneous.
    Novel solutions are necessary to encourage Ag-IoT users. 4.1.2. Network layer
    issues The most common Ag-IoT network layer issues are internet coverage, standard
    interception, interference, propagation losses, communication range, wireless
    link quality, network expansion, network management, communication protocols,
    latency, and throughput. As most farms are in rural areas, remote locations, or
    mountain regions, it is a huge challenge to get internet connectivity to them
    since these underpopulated areas have limited internet infrastructure. One solution
    could be creating a local network, a concept similar to a hybrid cloud. This type
    of system does not connect to the internet but still allows local servers to perform
    the basic IoT functionality (Akyildiz et al., 2009). Due to the recent advancement
    in low earth orbit (LEO) satellites, it would soon be possible to have internet
    connectivity via satellite as illustrated in Fig. 11 on a commercial scale (Ivanova
    et al., 2016). Therefore, we anticipate that, in the future, many agricultural
    fields will rely on satellite-based connectivity to connect their gateways to
    the internet. This system consists of a very small aperture terminal (VSAT) type
    ground antenna which is connected to the nodes through multiple gateways. Gateways
    can follow different communication protocols such as Wi-Fi, LoRa, NB-IoT, or Zigbee.
    One disadvantage of satellite-based internet connectivity is that it needs a clear
    sky to make a successful connection. Therefore, it is logical to have a local
    server for data storage and decision-making when the connection is interrupted.
    Download : Download high-res image (101KB) Download : Download full-size image
    Fig. 11. Future Ag-IoT system with satellite connected internet. Standard interception
    refers to difficulties in using the full potential of a communication technology
    due to standards imposed by regulatory authorities to limit the use. Recent advancements
    on long-range low throughput communication technologies such as LoRa become widely
    known communication protocols in Ag-IoT. To promote fair use of LoRa bandwidth,
    governments can regulate the use of wireless frequencies. For example, in Europe,
    the duty cycle or the transmitter uptime of the LoRa node is between 0.1% to 10%.
    This is a challenge in most Ag-IoT applications as there are higher volumes of
    data to transmit and many sensors and actuators to connect. When many IoT nodes
    are deployed, the interference may occur because the data transmission could use
    the same frequency, especially in unlicensed spectrums, such as ZigBee, Sigfox,
    LoRa, and Wi-Fi. Signal interference causes data loss and reduces the reliability
    of the systems (Elijah et al., 2018). Wireless signal propagation strength, communication
    range, and wireless link quality depend on the humidity, temperature, crop growth
    status, and crop morphological characteristics in agriculture fields (Tzounis
    et al., 2017; Cama-Pinto et al., 2019; Vuran et al., 2022). Thus, wireless signal
    propagation strength simulation and visualization software are essential in the
    future for the mass installation of Ag-IoT sensor nodes. Such software will reduce
    the complexity of node placement issues. 4.1.3. Application layer issues Data
    security, data privacy, and data analysis are application layer issues. Ag-IoT
    data is important for a country''s food security as well as for the Ag business
    model security. In the modern competitive world, data breaching could lead to
    a competitive disadvantage on Ag-business model over a competitor as well as risk
    the food security of a country. Therefore, more focus should be put into improving
    the security and privacy of data generated via Ag-IoT systems. 4.2. Sectoral challenges
    4.2.1. Regulatory issues Data ownership creates another business challenge. Companies
    that provide Ag-IoT services can use the data for improvements in their systems,
    but farmers do not receive compensation for that. There is a challenge to implement
    such a system to prevent data monopoly (Misra et al., 2020). Therefore, regulation
    and legal frameworks about the control and rights of data between farmers and
    IoT companies need to be established (Elijah et al., 2018). 4.2.2. Interoperability
    issue According to Elijah et al. (2018), interoperability involves the ability
    to have technical, synthetic, semantic, and organization interoperability. Technical
    interoperability involves the effortless communication among IoT devices using
    protocols. Data interchanging between systems is semantic interoperability. Synthetic
    interoperability deals with IoT system-generated digital data exchange with humans,
    while organization interoperability involves information sharing among different
    regions, infrastructures, and cultures (Elijah et al., 2018). Here we would like
    to introduce a challenge associated with Ag-IoT system interoperability. As most
    of the farmers have crop rotations and multi-cropping systems, it is essential
    to have Ag-IoT systems with context awareness that allows them to work with different
    cropping systems. The heterogeneity of agricultural systems imposes the system
    interoperability challenge. 4.2.3. Business issues The cost and non-availability
    of skilled personnel in Ag-IoT is a business issue. Cost is a challenge for Ag-IoT
    implementation. There are three types of costs involved with Ag-IoT systems: the
    setup cost or the capital expenditure, running cost or operational cost, and upgrading
    cost. Due to the nature of IoT business models and being a relatively new technology,
    analysis on return on investment of Ag-IoT systems is not yet discussed considerably
    in the literature. Chen et al. (2019) highlighted that application of IoT systems
    on irrigation controlling in turmeric turned out to be profitable. Several factors
    increase capital expenditure. Remote and harsh environmental conditions that Ag-IoT
    systems must bear increase the production cost of Ag-IoT systems. Ag-IoT end nodes
    require materials that do not wear and tear due to sun, rain, and chemicals applied
    during crop cultivation. Communication cost is usually a standard rate, but the
    initial investment is required to set up the internet connection, and this cost
    depends on the infrastructure availability where the farms are located. Theoretical
    knowledge and practical experience about the sensing/actuating system and parameters
    of interest are essential to set up a successful Ag-IoT system. Sensor data interpreters
    need an overall understanding of the agroecological principles to reach a decision
    (Duff et al., 2022). Reluctance to use new technology and unskilled manpower are
    apparent obstacles to implementing Ag-IoT in commercial production crop monitoring
    systems. More extension programs are needed to solve this issue while standards
    are necessary for Ag-IoT system development to improve the common Ag-IoT platforms
    that have interoperable qualities. 5. Supporting technologies 5.1. Augmented reality
    and IoT applications Data visualization and real-time decision-making are important
    to IoT. Based on past literature this sector is the least explored area. Wearable
    augmentation devices improve crop monitoring and control. Smart glasses have the
    real-time data visualization capability to indicate the status of crops, soil,
    or environment (Hurst et al., 2021). An irrigation activity can be controlled
    manually by a farmer if he can visualize the real-time soil water content change
    in the field. The conditions within a greenhouse can be controlled in real-time
    and actuators can be controlled via voice command through a smart glass. Harvesting
    can be more enjoyable and more efficient (lower loss) based on image processing
    capable smart glasses. Vegetable or fruit pickers can be assisted through a smart
    glass by viewing what it detects in the fruit to decide whether to pick it or
    not. Untrained labor usage-related losses can be reduced by augmented reality
    related training. 5.2. Big data Big data generated by Ag-IoT are mostly of heterogeneous
    types. The most common IoT agricultural big data are machine-generated data (Wolfert
    et al., 2017). These data are generated from a massive number of sensors and smart
    machines used to measure and record farming processes; which are in turn boosted
    by the IoT. Machine-generated data range from simple sensor records to complex
    computer logs. Big data in agriculture are generated mostly when we introduce
    smart sensing and monitoring with the help of IoT. The main sources of big data
    in Ag-IoT are: sensors, robotics, open data, data captured by airborne sensors
    (Faulkner and Cebul, 2014; Cole et al., 2012), weather/climate data, yield data,
    soil types, agricultural census data (Chen et al., 2014) and so on. Typically,
    telemetry data is generated by sensors such as temperature, rotary, or linear
    encoder. These data are well-structured in contrast to imagery data which need
    post-processing. Such unstructured data have issues in terms of availability,
    quality, and formats (Liu et al., 2015) and can be a concern. As the number of
    sensors is increasing and data volumes are growing rapidly, it is becoming a matter
    of utmost importance to store and process big data. Some approaches to handle
    big data are data shrinking, scale up, scale out, and high-performance computing.
    Data shrinking is the process of throwing away some less important data and still
    being able to reconstruct the original data. Scale-up (vertical scalability) is
    adding additional storage and RAM to store and process the big data in the processing
    node. But this technique has its capacity limit. Scale out (horizontal scalability)
    is the concept of using parallel computers to store and process that big data.
    High-Performance Computing is one of the state-of-the-art techniques to handle
    big data, where computers with multiple cores are grouped to create an efficient
    network to deal with the big data. These techniques are essential for successful
    data handling in Ag-IoT. 5.3. Artificial intelligence in Ag-IoT Techniques that
    enable machines to mimic human behavior are artificial intelligence (AI), while
    a subset of AI that gives machines the ability of learning without being explicitly
    programmed is machine learning. Deep learning techniques are a subset of machine
    learning techniques with multilayer neural network feasibility. The data generated
    from the Ag-IoTs are often used to train machine learning models for specific
    agricultural use cases such as yield forecast, crop stress detection, and pest
    spreading prediction. To be more specific, for the agricultural IoT applications,
    raw sensing information such as field and weather conditions and crop status can
    be collected and used for model training locally or in the remote end that has
    more computational resources. These trained models can later be used to control
    actuators for variable rate irrigation and site-specific pesticide/ herbicide
    applications. Deep learning techniques are heavily used with image processing
    applications in agriculture. Trained deep learning models are available for crop
    type detection (de Filho et al., 2020), plant phenotyping (Pound et al., 2017),
    fruit (Patel et al., 2011), flower (Dias et al., 2018), and leaf detection (Chamara
    et al., 2021), and weed detection for herbicide applications (Coleman et al.,
    2022). AI becomes an integral part of IoT due to its capability of using it as
    a data analytics tool. 6. Ag-IoT for farming systems analyses and management In
    this section, we briefly discuss and envision how Ag-IoT would benefit and potentially
    transform farming systems analyses and management, enabled by its unprecedented
    data, analytics, and connected sensors and actuators. Perhaps the most obvious
    advantages of Ag-IoT come from the high spatiotemporal resolution of farm-level
    data it generates concerning crops, soil, and microclimate (Kagan et al., 2022).
    The high spatial resolution data would quantify the the spatial variability of
    crop parameters (such as yield and leaf area index) and soil parameters (such
    as pH, organic matter, and water holding capacility), and elucidate the relationships
    between them to identify yield-limiting factors at different parts of the field
    (Alfred et al., 2021). This is the underlying principle of site-specific crop
    management, which will be greatly enhanced through Ag-IoT. Modern Ag-IoTs take
    measurements at hourly and sub-hourly intervals. This high temporal resolution
    data allow us to observe the crop responses to environmental cues at finer time
    steps, and enhance our understanding on how basic plant physiological processes
    such as transpiration and photosynthesis vary due to short-term environmental
    fluctuations. Process-based crop and soil models, which are widely used to evaluate
    the economic and environmental consequences of farming practices, usually suffer
    from the lack of site-specific data to parameterize and calibrate them, especially
    the in-season crop data and soil data. These data are exactly what Ag-IoT sensors
    are good at generating, and therefore would improve the accuracy of these models
    for farm-level management assessment. Networked sensors and actuators of Ag-IoT,
    along with the real-time data processing, transmission, and modeling, would greatly
    improve the decision-making cycle of farm-level management practices (Chaterji
    et al., 2021). The traditional crop management decision-making has several limitations.
    First, the decision is usually based on a single set of data, because other datasets
    are unavailable or expensive to obtain. Second, there is usually long latency
    between data generation and decision-making (e.g., several days or weeks). This
    long latency is in contrast to the fact that many stresses in the field (such
    as pest outbreak) occur and develop quickly and need real-time intervention to
    prevent substantial loss. Thirdly, the present management practice only addresses
    one factor at a time whereas in reality crops can undergo multiple stresses simultaneously.
    Altogether, these limitations reflect our inability to capture the complexity
    of the farming system. Ag-IoT has the potential to transform farm-level decision-making
    by enabling multi-inputs, multi-outputs decision strategies, powered by real-time
    data processing and relevant models run in the cloud to shorten the latency. For
    example, crop, soil, and microclimate sensors can simultaneously measure the crop
    water and nitrogen status, soil moisture content and nitrate content, and weather
    variables. These multi-source inputs can be fed into the models to output two
    variables: a nitrogen sufficiency index and a water sufficiency index. These two
    variables can further be converted to a nitrogen and water application rate for
    site-specific fertigation. This paradigm has several advantages. First, it is
    a multi-inputs, multi-outputs decision strategy that accounts for the interaction
    between the water and nitrogen stresses. Second, it reduces the cost of implementation
    and shortens the management cycle because two actions are combined into one (one
    pass of field equipment instead of two). In a similar fashion, decisions such
    as pesticide applications and other chemicals (fungicides, growth regulators)
    could potentially be further stacked to make crop production more efficient. Traditionally,
    farm system analyses and management happen at the individual farm level (Köksal
    and Tekinerdogan, 2019). In other words, data are usually not shared or co-analyzed
    across the farm boundary. In the era of Ag-IoT where farm data are shared and
    stored in the cloud, there represents an opportunity where the analysis and modeling
    of Ag-IoT data can cover a group of farms or at a regional scale. These regional
    analyses would answer other important questions such as regional yield forecasting,
    pest tracking, or agricultural resource prioritization. These questions are not
    necessarily important for individual growers, but are at the heart of other stakeholders
    such as policy makers and input suppliers. Data ownership and privacy, covered
    in Section 4, are two big issues that should be resolved before this type of analysis
    may occur. 7. Conclusions and future directions 7.1. Conclusions Ag-IoT is a promising
    technology that would increase resource use efficiency in agricultural systems,
    and is an essential tool for digital agriculture transformation. In this paper,
    we have overviewed impactful research related to Ag-IoT in the past decade. The
    data collected from these papers were categorized and analyzed under six main
    Ag-IoT system design parameters namely sensors, sensing platforms and main control
    board, communication technology and IoT protocols, cloud platforms, power and
    energy management, and actuators. According to the analyzed data, it is revealed
    that there is an increased global attention towards the Ag-IoT system-related
    research in the recent years. However, there are certain research gaps found in
    the literature. One of them is that the implementations of the sensors and the
    actuators seem to be limited to soil and environmental parameter monitoring and
    irrigation controlling. Furthermore, crop macro and micronutrient demand analyses
    are still at the infant stage due to the non-availability of sensors that can
    measure nutrients in real-time. Therefore, it is essential to improve the sensor
    and actuator applications in crop monitoring and controlling. In addition, heterogeneity
    of the system parameters (such as data, platforms, required power) is a major
    challenge to the Ag-IoT systems implementation, to which the improvement of the
    context-awareness could be a solution. Power harness options for Ag-IoT nodes
    need more exploration as there are limited options available and it would be a
    big advantage for the perennial crop monitoring. The perception and the network
    layers of Ag-IoT systems require more improvements to meet the sensor implementation
    ergonomics and long-range high-throughput data transmission, respectively. Edge
    computing can be a replacement of the high throughput long-range communication,
    but to the best of our knowledge, only a limited number of practical applications
    have been developed based on edge computing to date. Mobile Ag-IoT platforms such
    as unmanned aerial and ground vehicles have a huge potential to increase the spatiotemporal
    resolution in Ag-IoT-based monitoring and controlling. 7.2. Future directions
    From the finding of this review, authors would like to highlight some important
    future requirements for Ag-IoT. The entire Ag-IoT research community needs to
    propose a complete system design for Ag-IoT that will be viable, open, and interpretable.
    The objective is to enable the interconnectivity of heterogeneous systems and
    sharing resources to obtain more detailed and specific agricultural data. Furthermore,
    in the future research work, there is a need to develop complete information perception
    standards and design multi-protocol compatible gateways. With some significant
    efforts in the above-mentioned future research directions, the entire research
    community will be able to solve the problems of inconsistent device interfaces
    and protocols, making the system faster, robust, and more convenient. Making full
    use of long-range low throughput communication technology, virtual reality/augmented
    reality, and big data/AI for Ag-IoT is yet to be thoroughly explored. Declaration
    of Competing Interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Acknowledgements Funding for this work was provided
    by USDA-NIFA grants titled \"High Intensity Phenotyping Sites: Transitioning to
    a nationwide plant phenotyping network\" (Award# 2020-68013-32371) and \"CPS Medium:
    CPS-enabled variable rate technology\" (Award# 2021-67021-34417). Appendix A Number
    Year Country Type Title 1 2020 Greece original A Context-Aware Middleware Cloud
    Approach for Integrating Precision Farming Facilities into the IoT toward Agriculture
    4.0 2 2020 China/USA original A Framework for Agricultural Pest and Disease Monitoring
    Based on Internet-of-Things and Unmanned Aerial Vehicles 3 2021 India/Saudi Arabia
    original Security Enhancement for IoT Enabled Agriculture 4 2020 Pakistan/Korea
    Review Role of IoT Technology in Agriculture: A Systematic Literature Review 5
    2021 Japan original iPOTs: Internet of Things-based pot system controlling optional
    treatment of soil water condition for plant phenotyping under drought stress 6
    2012 Sri Lanka original Development of a Sensor Based Self Powered Smart Control
    System for Agricultural Irrigation Systems 7 2020 United Kingdom original Low-Cost
    Automated Vectors and Modular Environmental Sensors for Plant Phenotyping 8 2019
    India original An IoT-Based Smart Plant Monitoring System 9 2020 India original
    An Effective Approach for Plant Monitoring, Classification and Prediction Using
    IoT and Machine Learning 10 2021 USA original Development of an Internet of Things
    (IoT) Enabled Novel Wireless Multi Sensor Network for Infield Crop Monitoring
    11 2020 UAE original IOT Based Growth Monitoring on Moringa Oleifera through Capacitive
    Soil Moisture Sensor 12 2021 China original Plant Growth Monitoring Cloud Platform
    Based on Internet of Things 13 2021 Sri Lanka original Implementation IoT (Internet
    of Things) Based Smart Agriculture Fertilizer System 14 2020 Canada/Morocco original
    A Framework of Optimizing the Deployment of IoT for Precision Agriculture Industry
    15 2021 Canada/Morocco original IoT in Smart Farming Analytics, Big Data Based
    Architecture 16 2017 China original Monitoring Citrus Soil Moisture and Nutrients
    Using an IoT Based System 17 2017 Netherlands/Greece original IoT in Agriculture:
    Designing a Europe-Wide Large-Scale Pilot 18 2019 Taiwan original AgriTalk: IoT
    for Precision Soil Farming of Turmeric Cultivation 19 2016 Sweden/UAE original
    From the Internet of Things to the web of things — enabling by sensing as-a service
    20 2018 United Kingdom original Rentable Internet of Things Infrastructure for
    Sensing as a Service (S2aaS) 21 2020 Portugal review A Systematic Review of IoT
    Solutions for Smart Farming 22 2019 Denmark/Finland review Internet of Things
    in arable farming: Implementation, applications, challenges and potential 23 2019
    Germany/Netherlands/Italy original Architecture framework of IoT-based food and
    farm systems: A multiple case study 24 2018 France/Saudi Arabia original UAV-Assisted
    Dynamic Clustering of Wireless Sensor Networks for Crop Health Monitoring 25 2016
    China original Node Deployment with k-Connectivity in Sensor Networks for Crop
    Information Full Coverage Monitoring 26 2017 India original An IoT based smart
    solution for leaf disease detection 27 2019 Spain original Environment Control
    with Low-Cost Microcontrollers and Microprocessors: Application for Green Walls
    28 2017 Tunisia original Monitoring system using web of things in precision agriculture
    29 2016 Australia original Internet of Things Platform for Smart Farming: Experiences
    and Lessons Learnt 30 2019 Spain original Thinger.io: An Open Source Platform
    for Deploying Data Fusion Applications in IoT Environments 31 2019 Spain original
    Proposal for the Design of Monitoring and Operating Irrigation Networks Based
    on IoT, Cloud Computing and Free Hardware Technologies 32 2019 France review A
    comparative study of LPWAN technologies for large-scale IoT deployment 33 2016
    Spain review State of the Art in LP-WAN Solutions for Industrial IoT Services
    34 2018 Spain original A Comprehensive IoT Node Proposal Using Open Hardware.
    A Smart Farming Use Case to Monitor Vineyards 35 2018 India review A survey on
    Internet of Things architectures 36 2019 China review State-of-the-Art Internet
    of Things in Protected Agriculture 37 2019 Nigeria/Turkey/Lithuania original Smart
    irrigation system for environmental sustainability in Africa: An Internet of Everything
    (IoE) approach 38 2017 China original Monitoring Citrus Soil Moisture and Nutrients
    Using an IoT Based System 39 2018 USA original Open-Source Wireless Cloud-Connected
    Agricultural Sensor Network 40 2019 Uzbekistan original Wireless sensor network-based
    monitoring system for precision agriculture in Uzbekistan 41 2019 Spain original
    Remote Image Capture System to Improve Aerial Supervision for Precision Irrigation
    in Agriculture 42 2018 India original A prototype model for continuous agriculture
    field monitoring and assessment 43 2020 Pakistan/Saudi Arabia original An Energy
    Efficient and Secure IoT-Based WSN Framework: An Application to Smart Agriculture
    44 2020 India original Smart Irrigation and Intrusions Detection in Agricultural
    Fields Using I.o.T. 45 2020 Italy original AgriLogger: A New Wireless Sensor for
    Monitoring Agrometeorological Data in Areas Lacking Communication Networks 46
    2020 Turkey original A Long-range Context-aware Platform Design For Rural Monitoring
    With IoT In Precision Agriculture 47 2011 China original A Crop Monitoring System
    Based on Wireless Sensor Network 48 2011 China original Research on WSN Channel
    Fading Model and Experimental Analysis in Orchard Environment 49 2015 France original
    A Scalable Context-Aware Objective Function (SCAOF) of Routing Protocol for Agricultural
    Low-Power and Lossy Networks (RPAL) 50 2019 China/Pakistan original Multi-Task
    Cascaded Convolutional Networks Based Intelligent Fruit Detection for Designing
    Automated Robot 51 2012 China original Design of Wireless Sensor Network Middleware
    for Agricultural Applications 52 2020 China original Design of smart agriculture
    based on big data and Internet of things 53 2013 China original Power Balance
    AODV Algorithm of WSN in Agriculture Monitoring 54 2019 USA original Energy Consumption
    Analysis of a Duty Cycle Wireless Sensor Network Model 55 2018 United Kingdom
    book Long-Range Communication Systems and Protocols (WAN). In Internet of Things
    for Architects: Learn to Design, Implement and secure your IoT infrastructure
    56 2018 Indonesia original The Precision Agriculture Based on Wireless Sensor
    Network with MQTT Protocol 57 2018 India original Web Architecture for Monitoring
    Field Using Representational State Transfer Methods 58 2016 India original Smart
    Autonomous Gardening Rover with Plant Recognition Using Neural Networks 59 2019
    Spain/Colombia original Path Loss Determination Using Linear and Cubic Regression
    Inside a Classic Tomato Greenhouse 60 2020 China/USA original An Effective Edge-Assisted
    Data Collection Approach for Critical Events in the SDWSN-Based Agricultural Internet
    of Things 61 2020 Italy original LoRaFarM: A LoRaWAN-Based Smart Farming Modular
    IoT Architecture 62 2020 China/India/USA original A Smart, Sensible Agriculture
    System Using the Exponential Moving Average Model 63 2016 India original Effective
    Architecture for Greenhouse Controlling and Monitoring using Wi-Fi Peer to Peer
    Direct Protocol 64 2016 Spain original Developing Ubiquitous Sensor Network Platform
    Using Internet of Things: Application in Precision Agriculture 65 2017 Portugal/Ecuador
    original A System for the Monitoring and Predicting of Data in Precision Agriculture
    in a Rose Greenhouse Based on Wireless Sensor Networks 66 2017 Thailand original
    Optimal Plant Growth in Smart Farm Hydroponics System using the Integration of
    Wireless Sensor Networks into Internet of Things 67 2017 Colombia original Low-Cost
    Fuzzy Logic Control for Greenhouse Environments with Web Monitoring 68 2018 Chins/Bulgaria/Greece
    original Sustainable energy management of solar greenhouses using open weather
    data on MACQU platform 69 2019 Ukraine original Improved Computer-oriented Method
    for Processing of Measurement Information on Greenhouse Microclimate 70 2017 USA
    original A Networked Sensor System for the Analysis of Plot-Scale Hydrology 71
    2017 Japan original A Wireless Sensor Network for Growth Environment Measurement
    and Multi-Band Optical Sensing to Diagnose Tree Vigor 72 2018 China original Hyperspectral
    Identification and Classification of Oilseed Rape Waterlogging Stress Levels Using
    Parallel Computing 73 2019 China/Australia original Assessment of canopy vigor
    information from kiwifruit plants based on a digital surface model from unmanned
    aerial vehicle imagery 74 2015 China/USA original The Construction of a Precise
    Agricultural Information System Based on Internet of Things 75 2019 India original
    Sustainable and Portable Low Cost IOT Based Terrace Model to Grow True Organic
    Greens 76 2017 India original Precision Sugarcane Monitoring Using SVM Classifier
    77 2017 Spain original VineSens: An Eco-Smart Decision-Support Viticulture System
    78 2018 Tunisia original Using Cloud IOT for disease prevention in precision agriculture
    79 2019 India original Web enabled paddy disease detection using Compressed Sensing
    80 2018 Greece original DIRT: The Dacus Image Recognition Toolkit 81 2019 Australia
    original Low-Power and High-Speed Deep FPGA Inference Engines for Weed Classification
    at the Edge 82 2019 Greece original In-Vivo Vibroacoustic Surveillance of Trees
    in the Context of the IoT 83 2018 Korea original IoT-Based Strawberry Disease
    Prediction System for Smart Farming 84 2017 Greece original Automated Remote Insect
    Surveillance at a Global Scale and the Internet of Things 85 2016 India original
    Field Monitoring and Automation Using IOT in Agriculture Domain 86 2018 Spain/Portugal/Japan/Malaysia
    original A Framework for Knowledge Discovery from Wireless Sensor Networks in
    Rural Environments: A Crop Irrigation Systems Case Study 87 2019 Brazil/Spain/Italy/Finland
    original Smart Water Management Platform: IoT-Based Precision Irrigation for Agriculture
    88 2019 India original Real-Time Irrigation Scheduling Through IoT in Paddy Fields
    89 2020 Spain original Digital Transformation of Agriculture through the Use of
    an Interoperable Platform 90 2020 Brazil original Smart & Green: An Internet-of-Things
    Framework for Smart Irrigation 91 2018 Greece original Composting as a Service:
    A Real-World IoT Implementation 92 2018 Indonesia original Implementation of Automation
    System for Humidity Monitoring and Irrigation System 93 2018 Indonesia original
    Enhanced Fertigation Control System towards Higher Water Saving Irrigation 94
    2020 Greece original An IoT Architecture for Water Resource Management in Agroindustrial
    Environments: A Case Study in Almería (Spain) 95 2019 Malaysia original An Urban
    Based Smart IOT Farming System 96 2019 Saudi Arabia/ India/China original Sensors
    Driven AI-Based Agriculture Recommendation Model for Assessing Land Suitability
    97 2018 Brazil original Calibration of Passive UHF RFID Tags Using Neural Networks
    to Measure Soil Moisture 98 2018 USA original Smart Gardening IoT Soil Sheets
    for Real-Time Nutrient Analysis 99 2018 Philippines original Wireless soil moisture
    detection with time drift compensation 100 2017 Chile original Root System Water
    Consumption Pattern Identification on Time Series Data 101 2020 Greece original
    Wireless Sensor Network Synchronization for Precision Agriculture Applications
    102 2016 India original Measurement and Monitoring of Soil Moisture Using Cloud
    IoT and Android System 103 2018 India original An Improved Energy Efficient Duty
    Cycling Algorithm for IoT based Precision Agriculture 104 2018 Malaysia/Iraq original
    Power Reduction with Sleep/Wake on Redundant Data (SWORD) in a Wireless Sensor
    Network for Energy-Efficient Precision Agriculture 105 2018 Malaysia/ Iraq original
    Investigation of Empirical Wave Propagation Models in Precision Agriculture 106
    2020 Spain original CitrusYield: A Dashboard for Mapping Yield and Fruit Quality
    of Citrus in Precision Agriculture 107 2018 Spain original An Agent-Based Simulator
    of Smart Communication Protocols in Wireless Sensor Networks for Debugging in
    Precision Agriculture 108 2020 Colombia/Belgium original System Assessment of
    WUSN Using NB-IoT UAV-Aided Networks in Potato Crops 109 2019 Iraq/Belgium original
    A smart monitoring and controlling for agricultural pumps using LoRa IOT technology
    110 2019 USA original Energy Consumption Analysis of a Duty Cycle Wireless Sensor
    Network Model 111 2016 Germany original On the potential of Wireless Sensor Networks
    for the in-situ assessment of crop leaf area index 112 2021 India/Ethiopia/Afghanistan
    original Iot-Enabled Water Management for Improving the Crop Health in Smart Agriculture
    Farming 113 2017 United Kingdom/Australia original A practical method using a
    network of fixed infrared sensors for estimating crop canopy conductance and evaporation
    rate 114 2011 USA original Evaluation of a wireless infrared thermometer with
    a narrow field of view 115 2018 India/France original Design and Development of
    an IoT Based Smart Irrigation and Fertilization System for Chilli Farming Data
    availability Data will be made available on request. References Akyildiz et al.,
    2009 I.F. Akyildiz, Z. Sun, M.C. Vuran Signal propagation techniques for wireless
    underground communication networks Phys. Commun., 2 (3) (2009), pp. 167-183, 10.1016/j.phycom.2009.03.004
    View PDFView articleView in ScopusGoogle Scholar Alderfasi and Nielsen, 2001 A.A.
    Alderfasi, D.C. Nielsen Use of crop water stress index for monitoring water status
    and scheduling irrigation in wheat Agric. Water Manag., 47 (1) (2001), pp. 69-75,
    10.1016/S0378-3774(00)00096-2 View PDFView articleView in ScopusGoogle Scholar
    Alfred et al., 2021 R. Alfred, J.H. Obit, C.P.Y. Chin, H. Haviluddin, Y. Lim Towards
    paddy rice smart farming: a review on big data, machine learning, and rice production
    tasks IEEE Access, 9 (2021), pp. 50358-50380, 10.1109/ACCESS.2021.3069449 View
    in ScopusGoogle Scholar Andrey Rivas-Sánchez et al., 2019 Y. Andrey Rivas-Sánchez,
    M. Fátima Moreno-Pérez, J. Roldán-Cañas Environment Control With Low-Cost Microcontrollers
    and Microprocessors: Application for Green Walls (2019), 10.3390/su11030782 Google
    Scholar Angkawinitwong and Williams, 2021 U. Angkawinitwong, G.R. Williams Electrospun
    materials for wearable sensor applications in healthcare Electrospun Polymers
    and Composites, Elsevier Ltd. (2021), 10.1016/b978-0-12-819611-3.00013-3 Google
    Scholar Aroca et al., 2018 R.V. Aroca, A.C. Hernandes, D.V. Magalhães, M. Becker,
    C.M.P. Vaz, A.G. Calbo Calibration of passive UHF RFID tags using neural networks
    to measure soil moisture J. Sensors, 2018 (2018), 10.1155/2018/3436503 Google
    Scholar Bagley et al., 2020 S.A. Bagley, J.A. Atkinson, H. Hunt, M.H. Wilson,
    T.P. Pridmore, D.M. Wells Low-cost automated vectors and modular environmental
    sensors for plant phenotyping Sensors, 20 (11) (2020), pp. 1-15, 10.3390/s20113319
    View in ScopusGoogle Scholar Banu, 2018 N.M.M. Banu IoT architecture a comparative
    study Int. J. Pure Appl. Math., 117 (March) (2018), pp. 45-49, 10.12732/ijpam.v117i8.10
    Google Scholar Barker et al., 2017 Burdette Barker, Trenton Franz, Derek Heeren,
    J.L. Christopher Neale Irrigation systems management Agric. Water Manag., 188
    (2017), pp. 36-49, 10.1016/j.agwat.2017.03.024 View in ScopusGoogle Scholar Burton
    et al., 2018 L. Burton, N. Dave, R.E. Fernandez, K. Jayachandran, S. Bhansali
    Smart gardening IoT soil sheets for real-time nutrient analysis J. Electrochem.
    Soc., 165 (8) (2018), pp. B3157-B3162, 10.1149/2.0201808jes View in ScopusGoogle
    Scholar Cama-Pinto et al., 2019 D. Cama-Pinto, M. Damas, J.A. Holgado-Terriza,
    F. Gómez-Mula, A. Cama-Pinto Path loss determination using linear and cubic regression
    inside a classic tomato greenhouse Int. J. Environ. Res. Public Health, 16 (10)
    (2019), 10.3390/ijerph16101744 Google Scholar Chamara, 2021 Nipuna Chamara Development
    of an Internet of Things (IoT) Enabled Novel Wireless Multi Sensor Network for
    Infield Crop Monitoring MS Thesis., University of Nebraska-Lincoln. (2021) Google
    Scholar Chamara et al., 2021 N. Chamara, K. Alkhadi, H. Jin, F. Bai, A. Samal,
    Y. Ge A Deep Convolutional Neural Network Based Image Processing Framework for
    Monitoring the Growth of Soybean Crops Written for Presentation at the 2021 Annual
    International Meeting ASABE Virtual and On Demand (2021), pp. 3-19 https://elibrary.asabe.org/abstract.asp?aid=52346
    Google Scholar Chaterji et al., 2021 S. Chaterji, N. DeLay, J. Evans, N. Mosier,
    B. Engel, D. Buckmaster, M.R. Ladisch, R. Chandra Lattice: A vision for machine
    learning, data engineering, and policy considerations for digital agriculture
    at scale IEEE Open J. Comput. Soc., 2 (June) (2021), pp. 227-240, 10.1109/ojcs.2021.3085846
    View in ScopusGoogle Scholar Chen et al., 2014 M. Chen, S. Mao, Y. Liu Big data:
    a survey Mob. Netw. Appl., 19 (2) (2014), pp. 171-209, 10.1007/s11036-013-0489-0
    View in ScopusGoogle Scholar Chen et al., 2016 W.T. Chen, Y.H.F. Yeh, T.Y. Liu,
    T.Te. Lin An automated and continuous plant weight measurement system for plant
    factory Front. Plant Sci., 7 (MAR2016) (2016), pp. 1-9, 10.3389/fpls.2016.00392
    View PDFView articleGoogle Scholar Chen et al., 2019 W. Chen, Y. Lin, Y. Lin,
    R. Chen, J. Liao, Y. Chan, Y. Liu, C. Wang, C. Chiu, T. Yen AgriTalk: IoT for
    precision soil farming of turmeric cultivation IEEE Internet Things J., 6 (3)
    (2019), pp. 5209-5223, 10.1109/JIOT.2019.2899128 View in ScopusGoogle Scholar
    Codeluppi et al., 2020 G. Codeluppi, A. Cilfone, L. Davoli, G. Ferrari LoraFarM:
    a LoRaWAN-based smart farming modular IoT architecture Sensors, 20 (7) (2020),
    Article 2028, 10.3390/s20072028 View in ScopusGoogle Scholar Cole et al., 2012
    J.B. Cole, S. Newman, F. Foertter, I. Aguilar, M. Coffey BREEDING AND GENETICS
    SYMPOSIUM: really big data: processing and analysis of very large data sets 1
    J. Anim. Sci., 90 (2012), pp. 723-733, 10.2527/jas.2011-4584 View in ScopusGoogle
    Scholar Coleman et al., 2022 G. Coleman, W. Salter, M. Walsh OpenWeedLocator (OWL):
    an open-source, low-cost device for fallow weed detection Sci. Rep., 12 (2022),
    p. 170, 10.1038/s41598-021-03858-9 View in ScopusGoogle Scholar Daosawang et al.,
    2020 W. Daosawang, K. Wongkalasin, N. Katewongsa A study sound absorption for
    ripeness and unripe classification of watermelon 2020 8th International Electrical
    Engineering Congress, 2020, IEECON (2020), pp. 2020-2023, 10.1109/iEECON48109.2020.229521
    Google Scholar de Filho et al., 2020 H.C.C. de Filho, O.A.C. de Júnior, O.L.F.
    de Carvalho, P.P. de Bem, R.S. de dos Moura, A.O. de Albuquerque, C.R. Silva,
    P.H.G. Ferreira, R.F. Guimarães, R.A.T. Gomes Rice crop detection using LSTM,
    Bi-LSTM, and machine learning models from Sentinel-1 time series Remote Sens.,
    12 (16) (2020), pp. 1-25, 10.3390/RS12162655 Google Scholar Dias et al., 2018
    P.A. Dias, A. Tabb, H. Medeiros Apple flower detection using deep convolutional
    networks Comput. Ind., 99 (2018), pp. 17-28, 10.1016/j.compind.2018.03.010 View
    PDFView articleView in ScopusGoogle Scholar Duff et al., 2022 H. Duff, P.B. Hegedus,
    S. Loewen, T. Bass, B.D. Maxwell Precision agroecology Sustainability, 14 (1)
    (2022), Article 106, 10.3390/su14010106 View in ScopusGoogle Scholar Elci et al.,
    2018 A. Elci, P.K. Sa, C.N. Modi, G. Olague, M. Sahoo, S. Bakshi Smart Computing
    Paradigms: New Progresses and Challenges. Proceedings of ICACNI 2018, Vol. 2,
    Springer (2018) Google Scholar Elijah et al., 2018 O. Elijah, T.A. Rahman, I.
    Orikumhi, C.Y. Leow, M.N. Hindia An overview of internet of things (IoT) and data
    analytics in agriculture: benefits and challenges IEEE Internet Things J., 5 (5)
    (2018), pp. 3758-3773, 10.1109/JIOT.2018.2844296 View in ScopusGoogle Scholar
    Esser et al., 2012 B. Esser, J.M. Schnorr, T.M. Swager Selective detection of
    ethylene gas using carbon nanotube-based devices: utility in determination of
    fruit ripeness Angew. Chem. Int. Ed., 51 (23) (2012), pp. 5752-5756, 10.1002/anie.201201042
    View in ScopusGoogle Scholar Estrada-Lopez et al., 2018 J.J. Estrada-Lopez, A.A.
    Castillo-Atoche, J. Vazquez-Castillo, E. Sanchez-Sinencio Smart soil parameters
    estimation system using an autonomous wireless sensor network with dynamic power
    management strategy IEEE Sensors J., 18 (21) (2018), pp. 8913-8923, 10.1109/JSEN.2018.2867432
    View in ScopusGoogle Scholar Farooq et al., 2019 M.S. Farooq, S. Riaz, A. Abid,
    K. Abid, M.A. Naeem A survey on the role of IoT in agriculture for the implementation
    of smart farming IEEE Access, 7 (2019), pp. 156237-156271, 10.1109/ACCESS.2019.2949703
    View in ScopusGoogle Scholar Faulkner and Cebul, 2014 A. Faulkner, K. Cebul Agriculture
    Gets Smart: The Rise of Data and Robotics Cleantech Group, April (2014), pp. 1-6
    View in ScopusGoogle Scholar Ferrández-Pastor et al., 2016 F.J. Ferrández-Pastor,
    J.M. García-Chamizo, M. Nieto-Hidalgo, J. Mora-Pascual, J. Mora-Martínez Developing
    ubiquitous sensor network platform using internet of things: application in precision
    agriculture Sensors, 16 (7) (2016), Article 1141, 10.3390/s16071141 View in ScopusGoogle
    Scholar Foley et al., 2011 J.A. Foley, N. Ramankutty, K.A. Brauman, E.S. Cassidy,
    J.S. Gerber, M. Johnston, N.D. Mueller, C. O’Connell, D.K. Ray, P.C. West, C.
    Balzer, E.M. Bennett, S.R. Carpenter, J. Hill, C. Monfreda, S. Polasky, J. Rockström,
    J. Sheehan, S. Siebert, …, D.P.M. Zaks Solutions for a cultivated planet Nature,
    478 (7369) (2011), pp. 337-342, 10.1038/nature10452 View in ScopusGoogle Scholar
    Fukase and Martin, 2020 E. Fukase, W. Martin Economic growth, convergence, and
    world food demand and supply World Dev., 132 (2020), Article 104954, 10.1016/j.worlddev.2020.104954
    View PDFView articleView in ScopusGoogle Scholar Gamon et al., 2015 J.A. Gamon,
    O. Kovalchuck, C.Y.S. Wong, A. Harris, S.R. Garrity Monitoring seasonal and diurnal
    changes in photosynthetic pigments with automated PRI and NDVI sensors Biogeosciences,
    12 (13) (2015), pp. 4149-4159, 10.5194/bg-12-4149-2015 View in ScopusGoogle Scholar
    Haque et al., 2021 M.A. Haque, S. Haque, D. Sonal, K. Kumar, E. Shakeb Security
    Enhancement for IoT Enabled Agriculture Mater. Today (2021), 10.1016/j.matpr.2020.12.452
    Google Scholar Hatfield et al., 2011 J.L. Hatfield, K.J. Boote, B.A. Kimball,
    L.H. Ziska, R.C. Izaurralde, D. Ort, A.M. Thomson, D. Wolfe Climate impacts on
    agriculture: implications for crop production Agron. J., 103 (2) (2011), pp. 351-370,
    10.2134/agronj2010.0303 View in ScopusGoogle Scholar Hooper et al., 2019 D.U.
    Hooper, N. Embertson, R.W. Sheibley, C. Senter, J. Compton, J. Lin, P. Homann,
    S.B. S. Promise and problems of real-time nitrate monitoring for watershed N budgets
    - NASA/ADS American Geophysical Union, Fall Meeting 2019 (2019) https://ui.adsabs.harvard.edu/abs/2019AGUFMGC51N1163H/abstract
    Google Scholar Hurst et al., 2021 W. Hurst, F.R. Mendoza, B. Tekinerdogan Augmented
    reality in precision farming: concepts and applications Smart Cities, 4 (4) (2021),
    pp. 1454-1468, 10.3390/smartcities4040077 View in ScopusGoogle Scholar Islam et
    al., 2022 M.D. Islam, H. Shen, S. Badsha Integrating blockchain into supply chain
    safeguarded by PUF-enabled RFID Internet Things, 18 (June 2021) (2022), p. 100505,
    10.1016/j.iot.2022.100505 View PDFView articleView in ScopusGoogle Scholar Ivanova
    et al., 2016 N. Ivanova, V. Gugleva, M. Dobreva, I. Pehlivanov, S. Stefanov, V.
    Andonova The Internet of Things Space Infrastructure. Current State and Development
    Prospects Intech, i(tourism) (2016), p. 13 https://www.intechopen.com/chapters/75850
    View in ScopusGoogle Scholar Jabraeil Jamali et al., 2020 M.A. Jabraeil Jamali,
    B. Bahrami, A. Heidari, P. Allahverdizadeh, F. Norouzi IoT architecture BT - towards
    the internet of things: architectures Secur. Appl. (2020), 10.1007/978-3-030-18468-1_2
    Google Scholar Jawad et al., 2017 H.M. Jawad, R. Nordin, S. Kamel Gharghan, A.M.
    Jawad, M. Ismail Energy-efficient wireless sensor networks for precision agriculture:
    a review Sensors (2017), 10.3390/s17081781 Google Scholar Kagan et al., 2022 C.R.
    Kagan, D.P. Arnold, D.J. Cappelleri, C.M. Keske, K.T. Turner Special report: the
    internet of things for precision agriculture (IoT4Ag) Comput. Electron. Agric.,
    196 (May) (2022), Article 106742, 10.1016/j.compag.2022.106742 View PDFView articleView
    in ScopusGoogle Scholar Kameoka et al., 2017 S. Kameoka, S. Isoda, A. Hashimoto,
    R. Ito, S. Miyamoto, G. Wada, N. Watanabe, T. Yamakami, K. Suzuki, T. Kameoka
    A wireless sensor network for growth environment measurement and multi-band optical
    sensing to diagnose tree vigor Sensors, 17 (5) (2017), Article 966, 10.3390/s17050966
    View in ScopusGoogle Scholar Köksal and Tekinerdogan, 2019 Ö. Köksal, B. Tekinerdogan
    Architecture design approach for IoT-based farm management information systems
    Precis. Agric., 20 (5) (2019), pp. 926-958, 10.1007/s11119-018-09624-8 View in
    ScopusGoogle Scholar Kool and Bernard, 2019 J. Kool, M. Bernard Remote Monitoring
    in Marine Production Systems https://Edepot.Wur.Nl/551596 (2019), pp. 1-19 View
    in ScopusGoogle Scholar Kumar et al., 2016 V.S. Kumar, I. Gogul, M.D. Raj, S.K.
    Pragadesh, J.S. Sebastin Smart autonomous gardening rover with plant recognition
    using neural networks Proc. Comput. Sci., 93 (2016), pp. 975-981, 10.1016/j.procs.2016.07.289
    View PDFView articleView in ScopusGoogle Scholar Lamour et al., 2022 J. Lamour,
    K.J. Davidson, K.S. Ely, G. Le Moguédec, A.D.B. Leakey, Q. Li, S.P. Serbin, A.
    Rogers An improved representation of the relationship between photosynthesis and
    stomatal conductance leads to more stable estimation of conductance parameters
    and improves the goodness-of-fit across diverse datasets Glob. Chang. Biol., 28
    (2022), pp. 3537-3556, 10.1111/gcb.16103 View in ScopusGoogle Scholar Lea, 2020
    P. Lea Internet of things for architects Encyclopedia of Wireless Networks (2020),
    10.1007/978-3-319-78262-1_300300 Google Scholar Li et al., 2020 X. Li, Z. Ma,
    J. Zheng, Y. Liu, L. Zhu, N. Zhou An effective edge-assisted data collection approach
    for critical events in the SDWSN-based agricultural internet of things Electronics,
    9 (6) (2020), Article 907, 10.3390/electronics9060907 Google Scholar Liao et al.,
    2017 M.S. Liao, S.F. Chen, C.Y. Chou, H.Y. Chen, S.H. Yeh, Y.C. Chang, J.A. Jiang
    On precisely relating the growth of Phalaenopsis leaves to greenhouse environmental
    factors by using an IoT-based monitoring system Computers and Electronics in Agriculture,
    136 (2017), pp. 125-139, 10.1016/j.compag.2017.03.003 View PDFView articleView
    in ScopusGoogle Scholar Liu et al., 2015 T. Liu, H. Tan, J. Zhang Research on
    the big data-based government decision and public information service model of
    food safety and nutrition industry J. Food Saf. Qual., 6 (1) (2015), pp. 361-371
    https://www.semanticscholar.org/paper/Research-on-the-big-data-based-government-decision-Tong-Hong/ab4da84d017ab4cb41188550844f04a5af4c26fb#related-papers
    CrossRefView in ScopusGoogle Scholar Long and McCallum, 2015 D.S. Long, J.D. McCallum
    On-combine, multi-sensor data collection for post-harvest assessment of environmental
    stress in wheat Precis. Agric., 16 (5) (2015), pp. 492-504, 10.1007/s11119-015-9391-z
    View in ScopusGoogle Scholar Mell and Grance, 2011 P. Mell, T. Grance The NIST
    Definition of Cloud Computing Recommendations of the National Institute of Standards
    and Technology (2011), 10.6028/NIST.SP.800-145 Google Scholar Misra et al., 2020
    N.N. Misra, Y. Dixit, A. Al-Mallahi, M.S. Bhullar, R. Upadhyay, A. Martynenko
    IoT, big data and artificial intelligence in agriculture and food industry IEEE
    Internet Things J., 9 (9) (2020), pp. 6305-6324, 10.1109/jiot.2020.2998584 Google
    Scholar Mohanraj et al., 2016 I. Mohanraj, K. Ashokumar, J. Naren Field monitoring
    and automation using IOT in agriculture domain Proc. Comput. Sci., 93 (September)
    (2016), pp. 931-939, 10.1016/j.procs.2016.07.275 View PDFView articleView in ScopusGoogle
    Scholar Nadir et al., 2008 Z. Nadir, N. Elfadhil, F. Touati Pathloss determination
    using Okumura-Hata model and spline interpolation for missing data for Oman Lecture
    Not. Eng. Comput. Sci., 2170 (1) (2008), pp. 422-425 Google Scholar Ouyang et
    al., 2020 Z. Ouyang, J. Tian, X. Yan, H. Shen Effects of different concentrations
    of dissolved oxygen or temperatures on the growth, photosynthesis, yield and quality
    of lettuce Agric. Water Manag., 228 (2020), Article 105896, 10.1016/j.agwat.2019.105896
    View PDFView articleView in ScopusGoogle Scholar Patel et al., 2011 Hetal N. Patel,
    R.K. Jain, M.V. Joshi Fruit detection using improved multiple features based algorithm
    Int. J. Comput. Appl., 13 (2) (2011), pp. 1-5, 10.5120/1756-2395 Google Scholar
    Pérez-Expósito et al., 2017 J.P. Pérez-Expósito, T.M. Fernández-Caramés, P. Fraga-Lamas,
    L. Castedo VineSens: an eco-smart decision-support viticulture system Sensors,
    17 (3) (2017), Article 465, 10.3390/s17030465 View in ScopusGoogle Scholar Potamitis
    et al., 2019 I. Potamitis, I. Rigakis, N.A. Tatlas, S. Potirakis In-vivo vibroacoustic
    surveillance of trees in the context of the IoT Sensors, 19 (6) (2019), Article
    1366, 10.3390/s19061366 View in ScopusGoogle Scholar Pound et al., 2017 M.P. Pound,
    J.A. Atkinson, A.J. Townsend, M.H. Wilson, M. Griffiths, A.S. Jackson, A. Bulat,
    G. Tzimiropoulos, D.M. Wells, E.H. Murchie, T.P. Pridmore, A.P. French Deep machine
    learning provides state-of-the-art performance in image-based plant phenotyping
    GigaScience, 6 (10) (2017), pp. 1-10, 10.1093/gigascience/gix083 Google Scholar
    Scotford and Miller, 2004 I.M. Scotford, P.C.H. Miller Estimating tiller density
    and leaf area index of winter wheat using spectral reflectance and ultrasonic
    sensing techniques Biosyst. Eng., 89 (4) (2004), pp. 395-408, 10.1016/j.biosystemseng.2004.08.019
    View PDFView articleView in ScopusGoogle Scholar Shaw, 2013 J.A. Shaw Radiometry
    and the Friis transmission equation Am. J. Phys., 81 (1) (2013), pp. 33-37, 10.1119/1.4755780
    Google Scholar Shi et al., 2018 B. Shi, V. Sreeram, D. Zhao, S. Duan, J. Jiang
    A wireless sensor network-based monitoring system for freshwater fishpond aquaculture
    Biosyst. Eng., 172 (2018), pp. 57-66, 10.1016/j.biosystemseng.2018.05.016 View
    PDFView articleView in ScopusGoogle Scholar Sultana and Savage, 1970 T. Sultana,
    G.P. Savage Wasabi - Japanese horseradish Bangladesh J. Sci. Industr. Res., 43
    (4) (1970), pp. 433-448, 10.3329/bjsir.v43i4.2234 Google Scholar Symeonaki et
    al., 2020 E. Symeonaki, K. Arvanitis, D. Piromalis A context-aware middleware
    cloud approach for integrating precision farming facilities into the IoT toward
    agriculture 4.0 Appl. Sci., 10 (3) (2020), Article 813, 10.3390/app10030813 View
    in ScopusGoogle Scholar Tate et al., 2008 R.F. Tate, M.A. Hebel, D.G. Watson WSN
    link budget analysis for precision agriculture American Society of Agricultural
    and Biological Engineers Annual International Meeting 2008, ASABE 2008, 11(08)
    (2008), pp. 6786-6795, 10.13031/2013.24935 View in ScopusGoogle Scholar Thorat
    et al., 2017 A. Thorat, S. Kumari, N. Valakunde An IoT based smart solution for
    leaf disease detection 2017 International Conference on Big Data, IoT and Data
    Science (BID), IEEE (2017) Google Scholar Triantafyllou et al., 2018 A. Triantafyllou,
    P. Sarigiannidis, T.D. Lagkas Network protocols, schemes, and mechanisms for internet
    of things (IoT): features, open challenges, and trends Wirel. Commun. Mob. Comput.,
    2018 (2018), Article 5349894, 10.1155/2018/5349894 View in ScopusGoogle Scholar
    Tsai et al., 2014 C.W. Tsai, C.F. Lai, M.C. Chiang, L.T. Yang Data mining for
    internet of things: a survey IEEE Commun. Surv. Tutorials, 16 (1) (2014), pp.
    77-97, 10.1109/SURV.2013.103013.00206 View in ScopusGoogle Scholar Tzounis et
    al., 2017 A. Tzounis, N. Katsoulas, T. Bartzanas, C. Kittas Internet of things
    in agriculture, recent advances and future challenges Biosyst. Eng., 164 (2017),
    pp. 31-48, 10.1016/j.biosystemseng.2017.09.007 View PDFView articleView in ScopusGoogle
    Scholar Villa-Henriksen et al., 2020 A. Villa-Henriksen, G.T.C. Edwards, L.A.
    Pesonen, O. Green, C.A.G. Sørensen Internet of things in arable farming: implementation,
    applications, challenges and potential Biosyst. Eng., 191 (2020), pp. 60-84, 10.1016/j.biosystemseng.2019.12.013
    View PDFView articleView in ScopusGoogle Scholar Villalba et al., 2017 G. Villalba,
    F. Plaza, X. Zhong, T.W. Davis, M. Navarro, Y. Li, T.A. Slater, Y. Liang, X. Liang
    A networked sensor system for the analysis of plot-scale hydrology Sensors, 17
    (3) (2017), Article 636, 10.3390/s17030636 View in ScopusGoogle Scholar Vuran
    et al., 2018 M.C. Vuran, A. Salam, R. Wong, S. Irmak Internet of underground things
    in precision agriculture: architecture and technology aspects Ad Hoc Netw., 81
    (2018), pp. 160-173 View PDFView articleView in ScopusGoogle Scholar Vuran et
    al., 2022 M.C. Vuran, M.M.R. Lunar, K.C. Emre, S. Nie, Y. Ge, S. Pitla, G. Bai
    mmWave on a farm: Channel modeling for wireless agricultural networks at broadband
    millimeter-wave frequency 19th IEEE International Conference on Sensing, Communication,
    and Networking (SECON) (2022) Google Scholar White, 1987 R.M. White A sensor classification
    scheme IEEE Trans. Ultrason. Ferroelectr. Freq. Control, UFFC-34 (2) (1987), pp.
    124-126 View in ScopusGoogle Scholar Wolf and Verreet, 2002 P.F.J. Wolf, J.A.
    Verreet An integrated pest management system in Germany for the control of fungal
    leaf diseases in sugar beet Plant Dis., 86 (4) (2002), pp. 336-344, 10.1094/PDIS.2002.86.4.336
    View in ScopusGoogle Scholar Wolfert et al., 2017 S. Wolfert, L. Ge, C. Verdouw,
    M.J. Bogaardt Big data in smart farming – A review Agric. Syst., 153 (2017), pp.
    69-80, 10.1016/j.agsy.2017.01.023 View PDFView articleView in ScopusGoogle Scholar
    Yoshino et al., 2021 K. Yoshino, S. Teramoto, A. Hayashi, R. Nishijima, T. Tanaka
    iPOTs: Internet of Things-based Pot System controlling optional treatment of soil
    water condition for plant phenotyping under drought stress Plant J., 107 (5) (2021),
    pp. 1569-1580, 10.1111/tpj.15400 Google Scholar Yu et al., 2016 L. Yu, W. Wang,
    X. Zhang, W. Zheng Review on leaf temperature sensor: measurement methods and
    application IFIP Advances in Information and Communication Technology, 478 (2016),
    pp. 216-230, 10.1007/978-3-319-48357-3_21 View in ScopusGoogle Scholar Yuan et
    al., 2018 W. Yuan, J. Li, M. Bhatta, Y. Shi, P.S. Baenziger, Y. Ge Wheat height
    estimation using LiDAR in comparison to ultrasonic sensor and UAS Sensors, 18
    (11) (2018), Article 3731, 10.3390/s18113731 View in ScopusGoogle Scholar Zhang
    and Li, 2019 Y. Zhang, W.W. Li Energy consumption analysis of a duty cycle wireless
    sensor network model IEEE Access, 7 (2019), pp. 33405-33413, 10.1109/ACCESS.2019.2903303
    View in ScopusGoogle Scholar Zoerb et al., 1993 G.C. Zoerb, G.A. Moore, R.P. Burrow
    Continuous measurement of grain moisture content during harvest Transact. ASABE,
    36 (1) (1993), pp. 5-9, 10.13031/2013.28306 Google Scholar Cited by (55) IoT smart
    farming adoption intention under climate change: The gain and loss perspective
    2024, Technological Forecasting and Social Change Show abstract Applications of
    internet of things (IoT) and sensors technology to increase food security and
    agricultural Sustainability: Benefits and challenges 2024, Ain Shams Engineering
    Journal Show abstract A comprehensive survey on IoT and AI based applications
    in different pre-harvest, during-harvest and post-harvest activities of smart
    agriculture 2024, Computers and Electronics in Agriculture Show abstract AICropCAM:
    Deploying classification, segmentation, detection, and counting deep-learning
    models for crop monitoring on the edge 2023, Computers and Electronics in Agriculture
    Show abstract Microcontrollers programming for control and automation in undergraduate
    biotechnology engineering education 2023, Digital Chemical Engineering Show abstract
    Precision farming technologies for crop protection: A meta-analysis 2023, Smart
    Agricultural Technology Show abstract View all citing articles on Scopus © 2022
    The Authors. Published by Elsevier Ltd. Recommended articles Media independent
    solution for mobility management in heterogeneous LPWAN technologies Computer
    Networks, Volume 182, 2020, Article 107423 Wael Ayoub, …, Jean-Christophe Prévotet
    View PDF Projected climate effects on soil workability and trafficability determine
    the feasibility of converting permanent grassland to arable land Agricultural
    Systems, Volume 203, 2022, Article 103500 Lianhai Wu, …, Thomas H. Misselbrook
    View PDF Temporal dynamics of maize plant growth, water use, and leaf water content
    using automated high throughput RGB and hyperspectral imaging Computers and Electronics
    in Agriculture, Volume 127, 2016, pp. 625-632 Yufeng Ge, …, James C. Schnable
    View PDF Show 3 more articles Article Metrics Citations Citation Indexes: 46 Captures
    Readers: 233 Social Media Shares, Likes & Comments: 243 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Agricultural Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Ag-IoT for crop and environment monitoring: Past, present, and future'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Majumdar P.
  - Mitra S.
  - Bhattacharya D.
  citation_count: '1'
  description: Massive technological advancements in the IoT is contributing a lot
    to make our day-to-day life smarter but this also leads to e-waste production,
    energy use, and toxic emissions. The Green IoT (GIoT) is gradually reducing the
    detrimental effects of IoT. The significance for IoT-based smart and efficient
    agricultural methods is increasing very rapidly for getting a maximum good quality
    harvest by controlling irrigation based on automated environment parameter prediction
    and the enhancement of IoT to GIoT aims at reducing carbon footprints and promotes
    usage of energy-efficient methods. The edge-cloud platform and machine learning
    (ML) algorithms in a smart irrigation and monitoring system provide real-time
    insights into the crops of the farmers. Edge computing process data at the edge
    of network to conserve bandwidth and also helps to reduce the processing load
    over the cloud. A ML process makes an intelligent prediction by correlating the
    sensor originated raw data with weather predictions which enables a farmer to
    make an informed decision for the actuation of irrigation pumps. This study aims
    to describe the recent advancements in energy-saving practice and strategy for
    achieving a strong vision of GIoT-enabled smart farming coupled with ML provided
    prediction intelligence. A GIoT prototype is formulated using ML to determine
    the outline of irrigation conditional to non-linear weather changes. The core
    aspect of this review article consists of surveys and discussions of the vital
    topics in GIoT-based smart farming and their enabler technologies. .
  doi: 10.1002/9781119792642.ch29
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register Handbook of Intelligent Computing and Optimization for Sustainable
    Development Chapter 29 Full Access Green IoT for Smart Agricultural Monitoring:
    Prediction Intelligence With Machine Learning Algorithms, Analysis of Prototype,
    and Review of Emerging Technologies Parijata Majumdar,  Sanjoy Mitra,  Diptendu
    Bhattacharya Book Editor(s):Mukhdeep Singh Manshahia,  Valeriy Kharchenko,  Elias
    Munapo,  J. Joshua Thomas,  Pandian Vasant First published: 11 February 2022 https://doi.org/10.1002/9781119792642.ch29Citations:
    1 PDF TOOLS SHARE Summary Massive technological advancements in the IoT is contributing
    a lot to make our day-to-day life smarter but this also leads to e-waste production,
    energy use, and toxic emissions. The Green IoT (GIoT) is gradually reducing the
    detrimental effects of IoT. The significance for IoT-based smart and efficient
    agricultural methods is increasing very rapidly for getting a maximum good quality
    harvest by controlling irrigation based on automated environment parameter prediction
    and the enhancement of IoT to GIoT aims at reducing carbon footprints and promotes
    usage of energyefficient methods. The edge-cloud platform and machine learning
    (ML) algorithms in a smart irrigation and monitoring system provide real-time
    insights into the crops of the farmers. Edge computing process data at the edge
    of network to conserve bandwidth and also helps to reduce the processing load
    over the cloud. A ML process makes an intelligent prediction by correlating the
    sensor originated raw data with weather predictions which enables a farmer to
    make an informed decision for the actuation of irrigation pumps. This study aims
    to describe the recent advancements in energy-saving practice and strategy for
    achieving a strong vision of GIoT–enabled smart farming coupled with ML provided
    prediction intelligence. A GIoT prototype is formulated using ML to determine
    the outline of irrigation conditional to non-linear weather changes. The core
    aspect of this review article consists of surveys and discussions of the vital
    topics in GIoT–based smart farming and their enabler technologies. References
    Citing Literature Handbook of Intelligent Computing and Optimization for Sustainable
    Development References Related Information Recommended IoT/cloud‐enabled smart
    services: A review on QoS requirements in fog environment and a proposed approach
    based on priority classification technique Amel Ksentini,  Maha Jebalia,  Sami
    Tabbane International Journal of Communication Systems Cloud IoT Ruchi Bhatnagar,  Rawat
    Prof (Dr.) Paramjeet,  Garg Dr. Amit Emerging Computing Paradigms: Principles,
    Advances and Applications, [1] Metropolitan intelligent surveillance systems for
    urban areas by harnessing IoT and edge computing paradigms Rustem Dautov,  Salvatore
    Distefano,  Dario Bruneo,  Francesco Longo,  Giovanni Merlino,  Antonio Puliafito,  Rajkumar
    Buyya Software: Practice and Experience LoRa based intelligent soil and weather
    condition monitoring with internet of things for precision agriculture in smart
    cities Dushyant Kumar Singh,  Rajeev Sobti,  Anuj Jain,  Praveen Kumar Malik,  Dac-Nhuong
    Le IET Communications Green IoT and Machine Learning for Agricultural Applications
    Keshavi Nalla,  Seshu Vardhan Pothabathula Green Internet of Things and Machine
    Learning: Towards a Smart Sustainable World, [1] Additional links ABOUT WILEY
    ONLINE LIBRARY Privacy Policy Terms of Use About Cookies Manage Cookies Accessibility
    Wiley Research DE&I Statement and Publishing Policies Developing World Access
    HELP & SUPPORT Contact Us Training and Support DMCA & Reporting Piracy OPPORTUNITIES
    Subscription Agents Advertisers & Corporate Partners CONNECT WITH WILEY The Wiley
    Network Wiley Press Room Copyright © 1999-2024 John Wiley & Sons, Inc or related
    companies. All rights reserved, including rights for text and data mining and
    training of artificial technologies or similar technologies."'
  inline_citation: '>'
  journal: Handbook of Intelligent Computing and Optimization for Sustainable Development
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Green IoT for smart agricultural monitoring: Prediction intelligence with
    machine learning algorithms, analysis of prototype, and review of emerging technologies'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 23 papers. The topics discussed include: designing
    neuromorphic architectures: towards an ultra-low power AI; creating an edge-to-cloud
    computing continuum: status and perspective; observability of software computing
    systems: challenges and opportunities; challenges in real-time scheduling for
    energy harvesting embedded systems; optimizing deep learning application for edge
    computing; toward memory-centric scheduling for prem task on multicore platforms,
    when processor assignments are specified; embedded Raspberry Pi vehicle detection
    and classification using single shot detector and dilated multi-column convolutional
    neural network; a combination of multi and univariate anomaly detection in urban
    irrigation systems; an innovative smart and sustainable low-cost irrigation system
    for smallholder farmers'' communities; and Bayesian convolutional neural networks
    for image classification with uncertainty estimation.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: 2022 3rd International Conference on Embedded and Distributed Systems,
    EDiS 2022
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 2022 3rd International Conference on Embedded and Distributed Systems, EDiS
    2022
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Liang W.Z.
  - Oboamah J.
  - Qiao X.
  - Ge Y.
  - Harveson B.
  - Rudnick D.R.
  - Wang J.
  - Yang H.
  - Gradiz A.
  citation_count: '0'
  description: Canopy cover (CC) is an important indicator for crop development. Currently,
    CC can be estimated indirectly by measuring leaf area index (LAI), using commercially
    available hand-held meters. However, it does not capture the dynamics of CC. Continuous
    CC monitoring is essential for dry edible beans production since it can affect
    crop water use, weed, and disease control. It also helps growers to closely monitor
    "yellowness", or senescence of dry beans to decide proper irrigation cutoff to
    allow the crop to dry down for harvest. The goal of this study was to develop
    a device - CanopyCAM, containing software and hardware that can monitor dry bean
    CC continuously. CanopyCAM utilized an in-house developed image-based algorithm,
    edge-computing, and Internet of Things (IoT) telemetry to transmit and report
    CC in real-time. In the 2021 growing season, six CanopyCAMs were developed with
    three installed in fully irrigated dry edible beans research plots and three installed
    at commercial farms. CC measurements were recorded at 15 min interval from 7:00
    am to 7:00 pm each day. Initially, the overall trend of CC development increased
    over time but there were many fluctuations in daily readings due to lighting conditions
    which caused some overexposed images. A simple filtering algorithm was developed
    to remove the "noisy images". CanopyCAM measured CC (CCCanopyCAM) were compared
    with CC obtained from a Li-COR Plant Canopy Analyzer (CCLAI). The average error
    between CCCanopyCAM and CCLAI was 2.3%, and RMSE and R2 were 2.95% and 0.99, respectively.
    In addition, maximum CC (CCmax) and duration of the maximum CC (tmax_canopy) were
    identified at each installation location using the generalized reduced gradient
    (CRG) algorithm with nonlinear optimization. An improvement of correlation was
    found between dry bean yield and combination of CCmax and tmax_canopy (R2 = 0.77,
    Adjusted R2 = 0.62) as compared to yield vs. CCmax (R2 = 0.58) or yield vs. tmax_canopy
    (R2 = 0.45). This edge-computing, IoT enabled capability of CanopyCAM, provided
    accurate CC readings which could be used by growers and researchers for different
    purpose.
  doi: 10.13031/aim.202201238
  full_citation: '>'
  full_text: '>

    "Publications Included Search Help About Contact Us Join   If you are not an ASABE
    member or if your employer has not arranged for access to the full-text, Click
    here for options. Development an edge-computing sensing unit for continuous measurement
    of canopy cover percentage of dry edible beans Published by the American Society
    of Agricultural and Biological Engineers, St. Joseph, Michigan www.asabe.org Citation:  2022
    ASABE Annual International Meeting  2201238.(doi:10.13031/aim.202201238) Authors:   Wei-zhen
    Liang, Joseph Oboamah, Xin Qiao, Yufeng Ge, Bob Harveson, Daran R Rudnick, Jun
    Wang, Haishun Yang, Angie Gradiz Keywords:   Leaf area index (LAI), image processing,
    edge computing, Internet of Things (IoT) Abstract. Canopy cover (CC) is an important
    indicator for crop development. Currently, CC can be estimated indirectly by measuring
    leaf area index (LAI), using commercially available hand-held meters. However,
    it does not capture the dynamics of CC. Continuous CC monitoring is essential
    for dry edible beans production since it can affect crop water use, weed, and
    disease control. It also helps growers to closely monitor “yellowness”, or senescence
    of dry beans to decide proper irrigation cutoff to allow the crop to dry down
    for harvest. The goal of this study was to develop a device – CanopyCAM, containing
    software and hardware that can monitor dry bean CC continuously. CanopyCAM utilized
    an in-house developed image-based algorithm, edge-computing, and Internet of Things
    (IoT) telemetry to transmit and report CC in real-time. In the 2021 growing season,
    six CanopyCAMs were developed with three installed in fully irrigated dry edible
    beans research plots and three installed at commercial farms. CC measurements
    were recorded at 15 min interval from 7:00 am to 7:00 pm each day. Initially,
    the overall trend of CC development increased over time but there were many fluctuations
    in daily readings due to lighting conditions which caused some overexposed images.
    A simple filtering algorithm was developed to remove the “noisy images”. CanopyCAM
    measured CC (CCCanopyCAM) were compared with CC obtained from a Li-COR Plant Canopy
    Analyzer (CCLAI). The average error between CCCanopyCAM and CCLAI was 2.3%, and
    RMSE and R2 were 2.95% and 0.99, respectively. In addition, maximum CC (CCmax)
    and duration of the maximum CC (tmax_canopy) were identified at each installation
    location using the generalized reduced gradient (CRG) algorithm with nonlinear
    optimization. An improvement of correlation was found between dry bean yield and
    combination of CCmax and tmax_canopy (R2 = 0.77, Adjusted R2 = 0.62) as compared
    to yield vs. CCmax (R2 = 0.58) or yield vs. tmax_canopy (R2 = 0.45). This edge-computing,
    IoT enabled capability of CanopyCAM, provided accurate CC readings which could
    be used by growers and researchers for different purpose. (Download PDF)    (Export
    to EndNotes) Share Facebook X Email LinkedIn WeChat     Library Home Search Obtaining
    Full-Text E-mail Alert ASABE Home Authors, please use the Guide for Authors when
    creating your articles.  Public Access Information   = Public Access (PA)   =
    PA Limited Time   = Open Access   = Contact Us For Purchase  American Society
    of Agricultural and Biological Engineers 2950 Niles Road, St. Joseph, MI 49085
    Phone: +12694290300 Fax: +12694293852 Copyright © 2024 American Society of Agricultural
    and Biological Engineers"'
  inline_citation: '>'
  journal: 2022 ASABE Annual International Meeting
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Development an edge-computing sensing unit for continuous measurement of
    canopy cover percentage of dry edible beans
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Premkumar S.
  - Sigappi A.N.
  citation_count: '9'
  description: Precision agriculture is a breakthrough in digital farming technology,
    which facilitates the application of precise and exact amount of input level of
    water and fertilizer to the crop at the required time for increasing the yield.
    Since agriculture relies on direct rainfall than irrigation and the prediction
    of rainfall date is easily available from web source, the integration of rainfall
    prediction with precision agriculture helps to regulate the water consumption
    in farms. In this work, an edge computing model is developed for predicting soil
    moisture in real time and managing the water usage in accordance with rain prediction.
    A soil moisture prediction hybrid algorithm (SMPHA) has been developed that revolves
    around the decision-making techniques with live environmental parameters including
    weather parameters for the prediction of soil moisture through the impact of precipitation.
    Numerous algorithms with the combination of regression + clustering are estimated,
    and it is inferred that XGBoost + k-means outperforms other algorithmic combinations
    that is deployed in edge model. This model is used as an intermediary between
    the end IoT devices and cloud that results in the saving of computationally intensive
    processing performed on cloud servers. The servers located on a local edge network
    perform the developed algorithmic computations. Avoiding transmission over the
    cloud results in significant latency, response time, and computation power savings
    and therefore increases the efficiency of data transfer. The proposed edge computing
    model is implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes
    as the combination of Pi with actuators and sensors. The monitored data from Pi
    are stored in MongoDB webserver that is controlled by Web dashboard. Finally,
    the developed model is implemented in cloud and edge where the edge server implementation
    performs better in terms of latency, bandwidth, throughput, response time, and
    CPU memory usage.
  doi: 10.1515/jisys-2022-0046
  full_citation: '>'
  full_text: '>

    "Skip to content Authenticated with University of Nebraska - Lincoln What does
    this mean? $ USD € EUR - Euro £ GBP - Pound $ USD - Dollar EN 0 University of
    Nebras... SUBJECTS FOR AUTHORS SERVICES PUBLICATIONS ABOUT Open Access Published
    by De Gruyter May 27, 2022 IoT-enabled edge computing model for smart irrigation
    system S. Premkumar and AN. Sigappi From the journal Journal of Intelligent Systems
    https://doi.org/10.1515/jisys-2022-0046 Cite this Share this 10 Abstract Precision
    agriculture is a breakthrough in digital farming technology, which facilitates
    the application of precise and exact amount of input level of water and fertilizer
    to the crop at the required time for increasing the yield. Since agriculture relies
    on direct rainfall than irrigation and the prediction of rainfall date is easily
    available from web source, the integration of rainfall prediction with precision
    agriculture helps to regulate the water consumption in farms. In this work, an
    edge computing model is developed for predicting soil moisture in real time and
    managing the water usage in accordance with rain prediction. A soil moisture prediction
    hybrid algorithm (SMPHA) has been developed that revolves around the decision-making
    techniques with live environmental parameters including weather parameters for
    the prediction of soil moisture through the impact of precipitation. Numerous
    algorithms with the combination of regression + clustering are estimated, and
    it is inferred that XGBoost + k-means outperforms other algorithmic combinations
    that is deployed in edge model. This model is used as an intermediary between
    the end IoT devices and cloud that results in the saving of computationally intensive
    processing performed on cloud servers. The servers located on a local edge network
    perform the developed algorithmic computations. Avoiding transmission over the
    cloud results in significant latency, response time, and computation power savings
    and therefore increases the efficiency of data transfer. The proposed edge computing
    model is implemented in Raspberry Pi as an edge, Heroku as cloud, and edge nodes
    as the combination of Pi with actuators and sensors. The monitored data from Pi
    are stored in MongoDB webserver that is controlled by Web dashboard. Finally,
    the developed model is implemented in cloud and edge where the edge server implementation
    performs better in terms of latency, bandwidth, throughput, response time, and
    CPU memory usage. Keywords: smart irrigation; edge-based irrigation; edge computing;
    precision agriculture; soil moisture prediction; irrigation management system;
    IoT; offloading mechanism 1 Introduction It is evident that agriculture always
    has a specialized role in the anthrophonic evolution and has been serving as an
    important economic factor for the growth of a country [1]. Around 58% of the population
    depend on agriculture as the chief source of livelihood in India. The quality
    and productivity of agricultural products have declined over these years as several
    factors have influenced the crop productivity both directly and indirectly. Some
    major factors that affect the crop production are climatic changes, global warming,
    and water scarcity [2]. The agricultural land’s productivity is affected by the
    direct and indirect changes in climate [3,4]. The crop growth has been already
    affected by the changes in climate incurred by global warming. The nutrition quality
    of soil, ground water level, sea, and ocean are affected by the modifications
    in average temperature, rainfall, and extreme weather conditions such as hail
    storms, dust storms, heatwaves, etc. due to global warming [5,6]. Degradation
    of soil is primarily created by various methods including 93.7% by water erosion,
    9.5% by wind erosion, 5.9% by salinity and alkalinity, etc. Further changes in
    climate would influence adversely the crop production [7]. Since water is an indispensable
    requirement for plants and cultivation, the high level of soil is eroded and thereby
    the fertility is also declined. Due to the ever-changing climate, water scarcity
    has become a huge problem. Drought-like conditions is already formed in several
    areas and thereby the present and conventional farming practices are not suitable.
    New and unique environment preserving techniques are the need of the hour [8].
    The conventional approaches in agriculture are enhanced by the advent of several
    advancements in technology [9]. These new improved methodologies ensure optimized
    utilization of resources, accurate forecast of water needs and environmental parameters,
    reduction of human intervention, etc. [10]. Consequently, the outcomes of crops
    in terms of yield and quality are higher with cost-effective methods. One such
    booming technology is the Internet of things (IoT) [11]. IoT is the collection
    of components embedded in the sensor for measuring and transferring data via network
    devices as sensed from pumps and tractors to weather stations. Primarily, IoT
    deals with the transmission and reception of data related to farms through devices
    using the Internet for prediction and providing decisions to the farmers. IoT-based
    methodologies has brought a changeover in agricultural patterns and farming approaches
    [12]. IoT devices can gather information about soil moisture, chemical properties,
    dam levels, livestock health, and weather details in real time. The information
    acquired from IoT devices facilitates the farmers in tracking farms periodically.
    Farmers can save time and money by responding faster to farm conditions. Cloud
    computing models integrated with on-field agricultural sensors need to be incorporated
    for tackling the issue of processing huge voluminous data. One of the major challenges
    of IoT is the processing of huge datasets in a sequential way. Some of the key
    factors that need to be focused on this process are as follows: information about
    the type and nature of data, the way of acquiring the data, etc. The preliminary
    stage comprises acquiring the data and ingesting the data to the system. Substantial
    cognizance of data are achieved as the data pass through all the gateways where
    it is cleansed and transformed before entering into the system. In the near future,
    dynamic prediction of soil moisture and precipitation techniques are to be developed
    for smart irrigation systems. Therefore, a system is developed for efficient and
    optimal utilization of fresh water in irrigation along with drip irrigation system.
    It aids in finding which one of the plants fails to get sufficient water. When
    the water supply is provided the next day, this delay should not disturb the system.
    It becomes important for the farmers to understand the optimal usage of water
    and fertilizers to bring out sustenance in the agricultural industry. Therefore,
    processing must be done for analyzing the data, so that patterns can be analyzed
    and planning can be done for the long term, accordingly. Hence, it gives a broad
    vision in deciding where the processing is to be done exactly. Therefore, it is
    obvious that not all data are crucial, and it provides a clear view of which data
    need to be stored, discarded, and retained for both long-term and short-term purposes.
    Thus, all these challenging issues require to be addressed and that is where storage
    technologies are actually highlighted. The poor quality of Internet access in
    developing nations makes the implementation quite challenging. An applicable solution
    to solve this problem is through edge computing where the essential data could
    be offloaded from the cloud over the edge of the cloud, and this is the exact
    point where the approach of smart sensing with edge computing gets in. With the
    purpose of broadening the potential of edge computing and using it in the agriculture
    domain, a novel approach using machine learning (ML) methods is proposed for analyzing
    the data acquired by the IoT devices deployed at the farm. Here, the data acquired
    from IoT components undergo preprocessing and ML models on the edge nodes to analyze
    and assess the appropriate results for providing the best instructions for controlling
    the actuators (e.g., light, pumps at different locations) in the farms. This article
    presents an automated system, as shown in Figure 1, to predict the soil moisture
    using the field information acquired from the self-designed sensor node deployed
    at the field and the forecast information of weather via Internet. A unique algorithm
    has been developed that revolves around the machine learning techniques for the
    prediction of soil moisture. Here, many algorithms with the combination of regression
    + clustering was estimated, and it is inferred that XGBoost + k-means outperforms
    other algorithmic combinations, and therefore, it is deployed for the prediction
    of soil moisture in the proposed work. The proposed algorithm makes effective
    irrigation decisions with optimized usage of water in a more accurate and reliable
    manner. The effective decision-making refers to the process of predicting the
    rainfall, thereby reducing the water usage in advance by the proposed algorithm
    in accordance with the predicted rainy days. Through this automatic decision-making,
    over watering is avoided by saving the soil. The server-side software is developed
    with node-side connectivity using the information for visualization and decision
    support features. This proposed algorithm is implemented in edge to prove the
    efficiency of the edge server handling the automated system better than the cloud
    control. The performance of the decentralized edge-based architecture has been
    evaluated for downloading the hybrid algorithm from cloud in real time execution.
    The performance can be enhanced by adopting edge computing architecture and measured
    with the help of network parameters like latency, bandwidth, and response time.
    Edge computing capacity is also estimated using the CPU processor and memory consumption
    while executing the proposed algorithm with irrigation scheduling. Figure 1 Architecture
    of the proposed system. 2 Related work In ref. [13], a smart irrigation system
    not affected by communication disconnection and delay is developed using edge
    nodes deployed at the farms. Environmental parameters have an intricate impact
    on the plant growth. It becomes necessary for evaluating multiple AI models simultaneously
    in an actual cultivation environment for comparing AI models under the same conditions.
    Due to the working of existing irrigation systems on the cloud, communication
    is instable in the concurrent evaluation of AI models. However, the instability
    does not induce an edge node in its performance. The factors such as type of plant,
    soil, climate, humidity, temperature, and soil moisture need to be considered
    for the irrigation system packed with potential smart decisions. The nature and
    type of plant, soil, and climate are queried by ontology (branch of metaphysics
    dealing with the nature of being), whereas other factors such as temperature,
    humidity, and soil moisture are sensed by the sensor network. The trained ML model
    predicts the watering decisions based on ontology and other factors as mentioned
    earlier. Smart irrigation has three modules: (i) sensor network modules that sense
    the parameters impacting the water requirement by using sensors DHT22, light sensor
    BH1750, and HL-69 hygrometer for sensing the temperature, soil moisture, light,
    and humidity in air. (ii) Edge and IoT server’s module to send and receive data
    through HTTP requests. (iii) Training module in which KNN is applied on the sample
    dataset for training and decision-making regarding the water needs. Based on the
    input values, the trained model categorizes the input into five possible classes:
    highly not needed, not needed, average, needed, and highly needed [14]. A decentralized
    smart irrigation approach is proposed for strawberry greenhouses in contrast to
    conventional cloud-based solutions for keeping the agricultural data at the edge
    of the network. A full-scale smart irrigation system in an actual strawberry greenhouse
    environment is developed after a small-scale smart irrigation networking prototype
    system and a reference architecture targeting edge data distribution for strawberry
    greenhouse applications are framed. A three-step industrial approach is formed
    for designing, implementing, and validating a solution for smart strawberry irrigation
    in greenhouses and keeping the corresponding data at the edge of the network at
    the same time: (i) A small-scale smart irrigation prototype solution with off-the-shelf
    hardware and software equipment is tested and evaluated on various types of plants
    for gaining useful insights for deployments on a large scale. (ii) A reference
    network architecture is designed for targeting smart irrigation and edge data
    distribution specifically for strawberry greenhouses. (iii) A large-scale system
    in an actual strawberry greenhouse environment is developed in Greece, incorporating
    the proposed reference architecture [15]. Edge computing is proposed for addressing
    the issues by taking advantage of computing resources in the edge of the network.
    The issues such as an edge mobile device make it easier to achieve low end-to-end
    latency, high bandwidth, and low jitter to services located on the edge network.
    An edge can enforce the privacy policies of its owner prior to the release of
    the data to the cloud through edge analytics. If a cloud service becomes unavailable
    due to network failure, cloud failure, or a denial-of-service attack, a fallback
    service on a nearby edge can temporarily mask the failure. Cloud services, partial
    analysis, and control functions are extended to the edge nodes from the cloud
    data center. Edge nodes facilitate the timely monitoring of sensors in smart farming
    by the reduced latency and enhanced data transmission. Due to these factors, edge
    computing is applied through farming [16,17]. A three-tier open-source software
    platform we proposed by authors, and the platform enhanced the precision agriculture
    by introducing edge computing and fog computing. An network functions virtualization
    (NFV)-based approach is deployed for performing the local operational decisions
    at the edge level for mitigating the influence of network failures while using
    cloud data centers [18]. For control processing in smart farming, a platform enabling
    cost-effective sensor/actuator network based on IoT, utilizes edge computing [19,20].
    The authors in ref. [21] predicted the soil moisture using a mathematical model
    that measures the values given by a sensor matrix on the ground. Due to the huge
    interval in measurements (10 minutes), the model presented estimated error by
    more than 10%. This methodology has incorporated the online approach by making
    the sensors to send data every minute to edge devices without time-based interruption.
    The authors of ref. [22] applied a combinative approach of using field sensor
    network’s data along with weather forecast station’s data for the management of
    optimality in water conditions for the enhanced growth of grapes. The generated
    data are forwarded to a web server, which displays graphics without statistical
    analysis of such data. The analysis must be performed a posteriori by the user.
    The watering mechanism for a plant via IoT methodology is devised by the proposed
    smart irrigation model without acquiring any pre-processed data. A prototype application
    is developed, which gets adapted to the parameters needed in irrigation after
    a couple of human-made irrigations. With the usage of various ML algorithms, several
    tests are devised for manual and automated irrigations for the performance evaluation.
    After the evaluation using four different ML algorithms such as logistic regression
    (LR), K-nearest neighbors (KNN), Gaussian naive Bayes (GNB), and gradient boosting
    regression trees (GBRT), it is found that GBRT outperforms other algorithms. To
    analyze the overall performance, a test bed for the sensor edge, mobile client,
    and the decision service on the cloud is established. Two different indoor species
    are selected as test items for the prototype, namely, Peace lily and Sardinia.
    The outcomes were quite good, and it is inferred that the prototype has learned
    the patterns of irrigation and making decisions automatically with a high rate
    of accuracy [23]. The authors from ref. [24] adopted the deep learning methodology
    for detecting the type and the category of the plant using an automated plant
    irrigation system. The water necessity of the plant is determined using the recognition
    of predefined set of plant images and data set acquired from farm. It utilizes
    the database for fetching the irrigation information after the recognition process
    is completed. Modeling the training processes are time consuming as voluminous
    set of images needs to be stored. The authors in refs [25,26] incorporated ML
    methods in the irrigation decision support model using a pre-processed irrigation
    data set. A model is developed for learning the irrigation needs of any plants
    progressively rather than using a readily available dataset. Several ML algorithms
    are evaluated with their precision for concluding the irrigation decisions. Manual
    irrigations are performed two times before making precise decisions. Due to the
    dynamicity in model, data processing is done progressively, and it can be applied
    to several plants having varying irrigation conditions. There is a need for the
    learning model that can be trained by itself using a comparatively lighter learning
    process using environmental parameters that do not need larger storage in the
    system but need higher computation. From the aforementioned survey for making
    a precise decision with instant computation locally, edge computing needs to be
    integrated into the irrigation system. This article is directed towards presenting
    a platform that implies IoTs and edge computing in monitoring soil moisture via
    sensors, data communication between sensors and edge devices, and an Analytics-as-a-Service
    cloud. It analyzes the collected data in the form of a density map of soil moisture
    for denoting the areas in need of greater or lesser frequency of irrigation. Here,
    density map does not refer to the geographical point data by satellite mapping,
    and it actually denotes the point of dry area and watery area through soil moisture
    detection point. This point is averaged among areas of irrigation to be done and
    the irrigation process is controlled with prediction of rainfall using the proposed
    system. 3 The proposed system The proposed learning model for irrigation is implemented
    in a prototype IoT system that has four components: (i) Edge node layer – This
    layer consists of sensors, actuator, and two microcontrollers. In this layer,
    edge node acquires the sensor data from the surroundings and controls the actuator
    for actuating water pumps to start irrigation. (ii) Edge server layer – This layer
    consists of Raspberry Pi that act as edge server and capable of multitask processing.
    Here, edge server controls the edge nodes for sending signal and receiving data
    at regular interval of time. It is also connected to the cloud server for receiving
    developed and trained machine learning model to be deployed and make irrigation
    decision for controlling edge nodes. (iii) Edge service layer – This layer is
    deployed in the edge server and it is responsible for controlling the whole system
    through a developed web dashboard. The dashboard has live feed data, control of
    edge nodes, and cloud services access. This service layer also has the control
    access of the proposed machine learning model. (iv) Cloud server layer – This
    layer composed of cloud services and cloud storage where its role is to train
    the machine learning model and store the data in database. It sends the trained
    proposed model to the edge server for decision-making regarding irrigation scheduling.
    The comprehensive interconnections in the system are shown in Figure 2. The proposed
    IoT-based smart irrigation system includes five major components: field deployed
    module, Web-based interface, Web API weather input, soil moisture prediction mechanism,
    and edge communication model. Figure 2 Components of the proposed system. 3.1
    Field deployed module In the field requirements, a wireless sensor network of
    the sensor nodes needs to be deployed as shown in Figure 3. Here, field data collection
    device accommodates four different sensors: Capacitive Soil Moisture Sensor V2.0,
    DS18B20 Water Proof Temperature Sensor Probe for soil temperature, ultraviolet
    (UV) Light Radiation, DHT11 – Temperature and Humidity Sensor Module, and GYML8511
    Analog Output Ultra-Violet Light Sensor Module. An Arduino Mega connected to Raspberry
    Pi 4 Model-B read, the output of these sensors where the program is developed
    in Python for the Pi model to fetch the hourly data from sensors and store the
    data in MongoDB [27] database. It is then synchronized with the server database
    using the developed web service. A Wi-Fi-enabled Arduino controls the water pump
    connected to a relay switch. Figure 3 Real-time prototype of the proposed edge
    model. For the real time monitoring, a trigger is made for controlling the web
    service from the responsive web-based interface. The irrigation decisions are
    checked periodically by the proposed model performed in the server. The water
    pump is actuated, and irrigation process is started only if the server makes any
    irrigation decision. A wireless sensor network (WSN) [28] scenario with ZigBee
    [29] technology can be implemented for a large farming area in which several sensor
    nodes can be affixed in the specified area and every sensor node possesses sensors
    similar to a standalone device. Then, the Arduino Mega reads the sensor output
    connected to ZigBee for transferring data to Gateway Node for aggregating the
    received data and storing it in MongoDB locally and also for transferring the
    data via web service to the edge server. 3.2 Web-based interface The proposed
    framework consists of a web-based application to allow farmers visualize the growing
    data and interacting with the garden in real time. In addition, users can also
    be able to examine and analyze the historical growing data, if needed, through
    functionalities such as irrigation control, motor control prediction model deployment,
    and manual data entry implemented in this web application. Here, Node.js was chosen
    for developing the web application [30,31], while MongoDB [27] was utilized as
    the database system. Data stored in the database, which is deployed in the cloud,
    will be used for further data analysis in the future. The web application’s functions
    are designed following a software design pattern called model-view-controller
    (MVC) as shown in Figure 4. In the frontend, ChartJS is used to represent data
    through dynamic charts. The web application is also used as an interface to manage
    all the physical devices/actuators in the garden. To deploy the web-server to
    the cloud, a cloud platform as a service (PaaS), namely, Heroku, had been utilized.
    Heroku is a cloud platform that provides platform as a service (PaaS), facilitates
    the creation of applications and deploying these online rapidly [32,33]. It also
    enhances scalability and functionality by integrating several add-on services.
    The field data are sent to the server by Raspberry Pi using this web service.
    This web service manages the network outage/fluctuation during data synchronization
    from the field device to the server by taking the help of flag settings at the
    database level. The interface facilitates the scheduling of irrigation along with
    visualizing real time sensors and predicted soil moisture for upcoming days and
    precipitation information. By using the denoted threshold value of soil moisture
    suggested by agronomists, the irrigation can be scheduled by the user. The system
    maintains the threshold value depending on the predicted pattern of soil moisture
    and precipitation information. The process of irrigation is initiated automatically
    and stopped after the specified threshold value generated from the proposed algorithm
    of soil moisture when it is reached. Figure 4 Web interface for the irrigation
    system. 3.3 Web API weather input The weather prediction data are collected by
    a web service developed in Python. The forecast data such as humidity, temperature,
    ultra violet index, precipitation, and cloudiness of web forecasting portals like
    Open Weather API are aggregated by the developed web service [34]. These portals
    provide the forecasted information in HTML, XML, or JSON format. The predicted
    data with JSON format are read by the developed web and stored in database at
    the edge server, which is concerned in the prediction algorithm. Also, these data
    are utilized as testing dataset in the ML model for predicting the soil moisture.
    3.4 Soil moisture prediction mechanism An algorithm for predicting the soil moisture
    based on data derived from field sensors and weather forecasting using the combination
    of supervised and unsupervised machine learning techniques has been developed
    underpinned by regression algorithms and k-means clustering for estimating the
    difference/change in soil moisture owing to weather conditions. Many regression
    algorithms are compared against each other and infusing each of them with k-means
    to check the preciseness in mean square error (MSE), R2, accuracy and mean absolute
    percentage error (MAPE) for prediction of soil moisture of upcoming days with
    the help of sensor data and weather forecasting days. The information about soil
    moisture for the upcoming days and suggestions for irrigation in accordance with
    the prescribed levels of soil moisture and predicted precipitation values, thereby
    saving energy and water, is presented by the algorithm. The information generated
    from the device and the predicted values from the algorithm soil moisture prediction
    hybrid algorithm (SMPHA) are stored in the server. 3.5 Edge communication model
    The communication protocols in the proposed framework are flexible and transparent
    in nature for accepting both wired and wireless methodologies. For the maximum
    utilization of potentiality in edge computing components, the communication among
    various components in the edge-IoT system requires intense probing by using the
    versatility among the devices in network edges. For transferring the data gathered
    from pivot sensors, a communication technology such as Zigbee [35] is needed for
    the irrigation systems. Therefore, the communication component in the proposed
    work is classified into three main areas as shown in Figure 5. The Message Query
    Telemetry Transport (MQTT) protocol is used for the communication in the proposed
    system. The analysis in ref. [36] presented seven IoT messaging protocols (MQTT,
    CoAP, XMPP, AMQP, DDS, REST-HTTP, and WebSocket) as communication protocols that
    play a major role in smart farming. The authors have concluded that MQTT proved
    to be the most secure protocol after probing all the protocols with respect to
    latency, energy and bandwidth requirements, throughput, reliability, and security.
    Moreover, MQTT is secure in both end-to-end architecture and gateway server architecture.
    In an MQTT setup, a MQTT server termed as MQTT broker executes on the IoT solution
    [37]. Under a common identifier, a “publisher” and a “subscriber” link among themselves
    to this broker. In the IoT solution, publishers and subscribers are the IoT devices
    and IoT hubs or control devices, respectively. When the publishers have new data
    for recording, the data are published to the broker. The broker then flags that
    it has new publisher data, and the corresponding data are read by the subscriber.
    Then, the subscriber analyzes the data and reacts accordingly. Figure 5 Proposed
    edge communication model. The first level accomplishes with connecting the end
    users to system with the help of mobile or web-based applications through the
    Internet. The next level (cloud computing server) deals with the connection of
    web server and MQTT broker for directing the user requests and other components
    at the edge landscape or from the farms to the right cloud-based services like
    displaying the real time status of the farm for the users, triggering a new deployment
    of the updated ML model to the corresponding edge node. The third level (farming
    area) is directed toward the deployment of sensors and IoT devices (actuators)
    for communicating with other components in the entire system. 4 Deployment of
    soil moisture prediction hybrid algorithm The watering mechanism of the plant
    has different approaches in the proposed model. Primarily, the system is trained
    with manual irrigations datasets during the process of learning with respect to
    suggestions defined by agronomists. The model is trained to learn the needs of
    irrigation in the first level of deployment in cloud without the inclusion of
    pre-processed data. After acquiring the required data and training, the proposed
    system is initiated to grasp the plant’s watering needs by undergoing plenty of
    manual irrigations. Thereafter, manual irrigation is not required and the system
    makes automated decisions in watering using the gathered data and the application
    of ML methods. The proposed model then decides the irrigation strategies automatically
    using ML methods without the need including collected datasets in the automatic
    irrigation process. The proposed model can be improved through the learning process
    when the number of precise irrigation inputs is provided to the model at each
    stage of training. The decision-making procedure is developed with two modules
    for irrigation strategies according to the soil moisture prediction for upcoming
    days. The first module deals with training the model in cloud with manual irrigation
    datasets through steps such as data collection, data preprocessing, training,
    and model development. The system acquires values of air temperature (TH), soil
    temperature (SMT), soil moisture (SM), humidity (HU), and ultraviolet rays (UV)
    periodically from the physical environment in the data collection stage, which
    is essentially required for arriving at the watering decisions. Also, the time
    of performing the manual irrigation is recorded in the database. These data are
    timestamped and stored in as datasets to aid in making decisions for knowing the
    time of irrigation. In the next step of pre-processing, inconsistencies are eliminated
    and outliers caused by sensor errors are detected from the irrigation dataset,
    thereby helping in the removal of broken data. The training stage involves the
    application of supervised machine learning (ML) algorithms. Here the regression
    algorithms such as support vector regression (SVR), multiple linear regression
    (MLR), lasso regression (LR), decision tree regressor (DTR), random forest regressor
    (RF), and XG-boost regressor (XB) techniques are used for the deployment. The
    regression algorithms are trained using the collected datasets. Finally, through
    training, regression models are created, namely, SVR model, MLR model, LR model,
    DTR model, RF model, and XB model that are been combined with the second module
    for decision-making. The second module caters to the prediction of irrigation
    for upcoming days by infusing the weather data as an input to the regression trained
    models. The live datasets from the weather API for future prediction of soil moisture
    variable are used. The dependent variables from weather forecast data like temperature
    (TH), humidity (HU), ultraviolet (UV), and precipitation (PC) are tested in the
    aforementioned model for soil moisture prediction. Then, the regression trained
    model is evaluated and deployed using the weather testing data for the prediction
    of soil moisture in accordance with the precipitation. After the prediction of
    data for the upcoming days, these developed regression models are combined with
    unsupervised ML algorithm named k-means clustering for estimating the changes
    incurred in soil moisture prediction due to the impact of weather conditions.
    Further, each regression models with k-means algorithm are evaluated for performances
    in terms of irrigation decision-making process as shown in Table 1. The combined
    algorithms are estimated through MAPE, MSE, R2, execution speed, power consumption,
    and accuracy. The estimation and computation of these parameters are detailed
    by the authors in ref. [38]. Table 1 Comparison of performance metrices obtained
    from various ML algorithms Algorithms used Accuracy R 2 MSE MAPE (%) Execution
    time Power (J) SVR + k-means 0.96 0.96 0.25 1.98 0.06078 1164.85 MLR + k-means
    0.94 0.88 0.31 2.15 0.02075 429.30 LR + k-means 0.95 0.94 0.32 2.23 0.02482 351.35
    DTR + k-means 0.93 0.95 0.29 1.62 0.15687 914.70 RF + k-means 0.95 0.91 0.27 1.57
    0.16745 1475.13 XB + k-means 0.97 0.98 0.20 1.08 0.03547 537.87 XGBoost + k-means
    (XB+k-means) approach provides more accuracy with less MSE comparatively and also
    the R2 with 98% in soil moisture prediction using combined approach is given in
    Table 1. It is evident that the proposed combination performs better when compared
    to other regression + k-means-based approaches. XB + k-means-based hybrid machine
    learning algorithm is applied in irrigation planning module on account of aforementioned
    performance metrices of ML. Although it performs moderately in terms of execution
    time and power usage, it is selected for the deployment in edge computing as it
    has better performed in terms of accuracy, R2, MSE, and MAPE metrices. It is observed
    that the prediction of soil moisture for the upcoming days from the proposed algorithm
    (XB+k-means) is nearer to the actual value as shown in Table 2, and hence, XB+k-means
    is selected for the implementation of SMPHA in edge-based irrigation scheduling.
    Table 2 Comparison of predicted SM value with actual SM value Date Average SM
    value from sensor Average predicted SM value (XB+k-means) 28-09-2021 35.23 34.04
    29-09-2021 36.41 37.20 30-09-2021 31.57 30.46 01-10-2021 34.66 33.15 02-10-2021
    36.73 37.12 03-10-2021 32.88 33.01 4.1 Hardware setup IoT system is crucial to
    handle, collect, and transfer the data to the computing nodes at the edge or in
    the cloud. These devices are connected to the edge nodes through wireless communication
    protocols like ZigBee. It is used in reducing the latency and loss of data. An
    Arduino micro-control unit controls the combined IoT sensors and actuators at
    the same part of a field into a cluster, each connected to a Raspberry Pi that
    acts as an edge node in processing the gathered data and controlling the actuators.
    For example, Figure 2 shows an edge architecture with a Raspberry Pi connected
    to two components: Arduino Uno and Arduino Mega units via ZigBee connection. The
    first Arduino Mega node is responsible for collecting data from sensors and the
    second one is for controlling the actuators in the field. Depending on the sensor
    type with collecting Arduino unit, the sensors are connected via analog or digital
    PWM pins while controlling Arduino uno joins with actuators in the field and controls
    (turn on/off) them in accordance with upper layers (from the edge web server).
    The trained (cloud) and deployed ML model in edge nodes provides the necessary
    instructions to the edge nodes. 4.2 Web layer setup The deployment of web server
    assists the user in planning and managing the irrigation system. It visualizes
    the crucial information of factors like temperature of air and soil, UV, humidity,
    and soil moisture in live irrigation with real time updates in the form of various
    charts. In accordance with the selected field, the web application redirects the
    user to the field’s dashboard as shown in Figure 4. The dashboard consists of
    field parameters as well as control signals for activating all the physical devices/actuators
    at the garden layer. These signals are denoted as switch buttons, and each switch
    controls (turn on/off) a particular kind of actuator (for instance, water pump
    to start and stop the irrigation). The user interface facilitates remote controlling
    of the field by just clicking on the buttons as shown in Figure 4. 4.3 Edge layer
    setup The edge node acts as a computing center where incoming data are analyzed
    and fed as the input vector to the ML model for processing and to return the control
    signals for activating or deactivating the actuators placed at the farm. Edge
    node processes the physical data (real time) at every end device such as the collected
    and processed data via the Raspberry Pi nodes presented in the proposed scheme.
    The prediction model is designed using TensorFlow API and trained, tested on Google
    Colab in this work. Amazon Web Service (AWS) offers a library named Boto3 having
    many APIs to upload and download objects. After the development of model, it is
    transferred to Amazon S3, a service provided by AWS. The edge node utilizes the
    trained model from S3 for analyzing the sensed data acquired from garden’s sensors.
    The decision is delivered based on real time data analysis at the edge node and
    transmitted to Arduino nodes in the fields landscape immediately for controlling
    the actuators. In another flow, the data collected from sensors are filtered so
    as to keep only the modified data at the edge node before being sent back for
    mitigating the communication cost to the database in the cloud. These data are
    used in the updation of the ML model to enhance its efficiency. 4.4 Analytics
    setup The main goal of this experiment lies in gathering the various physical
    parameters of a farming land via sensors and utilizing the fetched data along
    with weather forecast information for developing an algorithm using hybrid machine
    learning approach to infuse higher accuracy in predicting the soil moisture for
    the upcoming days. As discussed in Section 4, for the proper planning and provisioning
    of optimal irrigation, the algorithm provides a predictable estimate of soil moisture
    with the assistance of various statistical measures as shown in Table 1. The measures
    are adopted for estimating the appropriateness and error rate of the proposed
    algorithm. It is inferred from the experiment that, optimal irrigation is feasible
    using a good estimation (close to the actual value) of the soil moisture (Table
    2), with the support of field data and forecast information, thereby utilizing
    the natural rain efficiently. The SMPHA ML model is interdependent on dynamic
    changes in weather environment where the models deployed on edge nodes need to
    change the controls accordingly after model gets trained continuously. For the
    process of retraining, the trained model needs to be updated. The parameters such
    as TM, HU, ST, UV, SM about grown plants are logged for the training purpose,
    and these generated datasets are recorded from the already developed manual mode
    system [39]. The growth of the Indian Mundu Chilli [40] is taken for the observation
    from the first stage to the last grown stage for 95 days. While retraining the
    model, the training is carried in cloud without causing effect to the functionalities
    at edge nodes. A signal is transferred to the corresponding edge server for triggering
    the task of updating the SMPHA model from the web server. At that time, the newly
    trained model is downloaded to replace the existing one at the considering edge
    server. From then, the ML model at the edge server is called to be updated with
    the real-world knowledge and is ready for its garden controlling tasks (to apply
    in the next farming season). 4.5 Work flow The flowchart in Figure 6 depicts the
    working of the proposed system based on the decision support system that is beneficial
    for irrigation needed for the growth of vegetables. The chilli plant is grown
    in a growbag attached with sensors and Pi as shown in Figure 3 and monitored for
    95 days of data collection. To bring out optimality in the irrigation system,
    features relating to climate, soil, crop, and field infrastructure are to be considered.
    To provide several recommendations in the production of vegetables, decision support
    systems (DSSs) are designed, which process voluminous information [39]. This proposed
    work is the extension of soil moisture differences (SMD) model [41] developed
    for soil moisture prediction. The threshold values of soil moisture are used in
    the SMD model where the system schedules the irrigation date based on the predicted
    soil moisture and weather forecast (precipitation) information automatically using
    SVR+ k-means modeling. Therefore, in the extension of the aforementioned work,
    further more number of sensors are used to log soil moisture value, which is averaged
    in the proposed model. This model is developed in two divisions of flowchart as
    shown in Figure 7, where both are interconnected. It is observed that the prediction
    of XB + k-mean approach provides better results as presented in Table 2. Figure
    6 Flow chart of the proposed edge model. Figure 7 Average response time with 10
    test scenarios. The first phase of the flowchart describes the hybrid algorithm
    for the soil moisture prediction (SMPHA) using the combination of XB + k-means
    algorithm. During the data collection step, the sensor data for the parameters,
    namely, TM, HU, ST, UV, and SM, are collected. During preprocessing, null values
    and outliers are removed and the preprocessed data are used to train the XG-Boost
    model. The developed model is then trained with variables of live weather features
    (TM, HU, UV, PC) obtained from Weather API for the prediction of SM data. These
    data are given as input to k-means clustering algorithm to predict the soil moisture,
    which is defined as SMPHA value to be infused in the next phase of the flowchart.
    The second phase of the flowchart defines the automatic irrigation planning setup.
    The setup starts obtaining the soil moisture maximum (SMMax) and soil moisture
    minimum (SMMin) values in the dashboard for setting the maximum and minimum level
    of soil moisture. Then, the current soil moisture (CuSM) is sensed and compared
    against the threshold SMMin. If the resulting value is less than SMMin, the process
    proceeds with SMPHA. On the contrary, it stops the irrigation process by sending
    0 to the relay. In SMPHA, the nearest precipitation date is selected and it is
    assigned to the predicted soil moisture (PSM). The SMMax is decided by finding
    the minimum of (PSM + SMMin, SMMax), and the predicted SMMax is further checked
    against CuSM with a condition if SMMax is greater the CuSM then it sends 1 to
    the relay as a signal to start irrigation. If the condition fails, then it sends
    0 to stop irrigation. The process of automatic irrigation ends by forecasting
    the irrigation schedule in accordance with the live weather parameters. 5 Experimental
    setup and evaluation The test bed is developed and deployed, and the data are
    collected for the analysis in irrigation management. Here, Heroku cloud platform
    is used to deploy the cloud web server. The same cloud is also installed at a
    local edge that is at two Raspberry Pi units equipped with Wi-Fi 802.11n connections
    to denote the edge nodes. JMeter application is used to get sequential accesses
    to the web page from various users for evaluating the network parameters. The
    specification of these servers is given in Tables 3 and 4. Table 3 Configuration
    of raspberry Pi CPU Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC
    @ 1.5 GHz RAM 8 GB LPDDR4-3200 SDRAM Network 2.4 GHz and 5.0 GHz IEEE 802.11ac
    wireless, Bluetooth 5.0, BLE, Gigabit Ethernet Pinboard 8 GB LPDDR4-3200 SDRAM
    Operating system, language Raspbian , Python 3 Table 4 Configuration of Heroku
    cloud Country United states Service Amazon web service S3 Processor 2.4 GHz Intel
    Xeon E5-2676 v3 Processor CPU Power 8 GB Virtual CPUs 3–5 We evaluated the performance
    of the proposed IoT-based smart farm on two different platforms, namely, in the
    cloud and on the local computer to show the feasibility and the benefit of the
    edge computing scheme. Further many parameters are considered for evaluation and
    discussed in the next section to show that edge deployment is better than cloud.
    5.1 Evaluation A hybrid machine learning methodology is used in evaluating the
    first stage of the proposed model. The predicted value of the soil moisture is
    better in terms of their accuracy and error rate. From the comparison of the other
    ML algorithms as shown in Table 2, XB + k-means performs better and taken further
    to be deployed in edge and cloud to check its efficiency with each other. Therefore,
    for analyzing the efficiency of the edge server in accordance with the proposed
    hybrid algorithm SMPHA is evaluated in terms of the time taken to train the ML
    model in edge and cloud. In this experiment Raspberry Pi is used to train the
    SMPHA model with 196,400 rows, that is, input data sample size and takes around
    1,710,000 ms (approximately 28.5 min). The same model when it is trained in Google
    Colab cloud environment, it takes 204,000 ms (approximately 3.4 min) as depicted
    in Table 5. The main purpose is to run the trained model on edge not to train
    the model at edge. So due to the lack of computing capability at the edge, it
    takes more time to train the model, but it can be ignored as it does not affect
    the purpose of the proposed model. Here, edge is introduced to obtain the task
    of computing from the cloud (i.e., offloading the task) by making the system more
    edge-oriented deployment. It can be accomplished rapidly as it requires only 14
    s to download a trained SMPHA model from the cloud to the edge node with a size
    of 3,101 kb as given in Table 5. The time to download varies according to the
    size of the trained model. So, from this process it can be inferred that downloading
    the trained model saves time when compared to training the model at the edge.
    Through this in real time, deployment of the trained SMPHA model in edge is better
    compared to deployment in cloud services. Furthermore, network parameters like
    latency, throughput, bandwidth, and response time are adopted to measure the performance
    improvements in edge computing. Table 5 Comparison of model training time Edge
    Cloud Model training time 28.4 min 3.4 min Downloading time Not applicable 14
    s The performance metrices taken into account are latency, bandwidth, and response
    time [42]. The latency of an application is the product of two factors: computing
    latency and transmission latency. The time spent on data processing and transmission
    between end devices to cloud servers is termed as computing latency and transmission
    latency, respectively. The computational capacity of the system decides the computing
    latency as the network servers possess a considerable amount of capacity to make
    the data processing faster, whereas the sensors come with limited computing capacity.
    The latency in transmission is increased by the end devices and cloud servers.
    Bandwidth: As large number of sensors are deployed in IoT, data generated would
    be huge that consumes an intense range of bandwidth and leads to several problems
    such as delay in transmission and loss of packets. It becomes unacceptable for
    the data to be transferred directly to cloud servers without applying compression.
    Therefore, data preprocessing and aggregation are needed for IoT gateways before
    redirecting them to remote cloud servers. Then, the issue to be confronted is
    to control the traffic flow by migrating data processing and aggregation tasks
    optimally to decrease the bandwidth needs of the end users while maintaining the
    data quality. Response time: The total response time is calculated by adding up
    transmission and processing time. The local deployment of the proposed model for
    controlling IoT-based irrigation are deployed on two modes: (i) Cloud mode: The
    developed SMPHA model is implemented in the cloud communicating with IoT sensors
    nodes directly to manage the irrigation process. The data are stored and processed
    at the cloud server itself where it uses Heroku platform. (ii) Edge mode – Raspberry
    Pi is deployed as an edge server that involves in processing of the SMPHA model
    controlling the IoT sensor nodes. Here, the data are stored and processed locally
    within the edge servers. This SMPHA model from both the edge and cloud does the
    job of controlling the actuators to initiate and quit the working of water flow
    motors. Through this deployment in both the environments, performance of edge
    server and cloud server can be checked in terms of latency, throughput, bandwidth,
    and response time is shown in aforementioned graphs in Figures 6, 8, and 9. This
    performance metrices is not feasible to calculate while deploying in real time,
    so the aforementioned scenarios of two modes are virtually created by generating
    many request and response threads between the servers. This sampling, load test,
    and distributed testing are conducted through JMeter application [43] and also
    verified with Wireshark [44] in cloud servers. The test scenario is created here
    by data of sending and receiving sampling data between cloud to IoT sensors and
    between Edge to IoT sensors. The sampling data considered in this work refer to
    the approximate number of requests generated by Arduino to cloud and Arduino to
    Raspberry Pi that are calculated in real time. The test scenario is divided into
    10 days of sampling data collected for each day. The evaluation results are depicted
    for latency and response times in 10 days perspective. In latency parameter, edge
    service has decreased by an average of 77.85% time compared to the with cloud.
    In the same manner, the response time of edge service is also decreased by 74.09%
    time compared to cloud service. In throughput calculation, sampling data are calculated
    for an hourly basis for the 10 hours data in a day. From the hourly comparisons
    of throughput value, edge outperforms with 67.17% high Mbps usage. Through this
    analysis as shown in Table 6, it is evident that the proposed edge computing methodology
    deployed in Raspberry Pi or in local computers outperforms the cloud-oriented
    approach. Figure 8 Average latency with 10 test scenarios. Figure 9 Average throughput
    value with 10 h test scenarios. Table 6 Performance metrices for cloud and edge
    services Performance metrices Cloud service Edge service Throughput (Mbps) 0.04944
    0.08265 Latency (ms) 1415.8 313.6 Response time (ms) 1519.6 393.8 Bandwidth (bps)
    86 1,365 Finally, to illustrate the efficiency of resource management in edge
    computing, CPU and memory utilization are considered for the analysis as both
    factors rely on the service execution model and the computational needs of the
    services being fired from off-loaders. Figure 10 depicts the utilization of CPU
    and RAM on the Raspberry Pi acting as an edge node in two cases: with and without
    the deployment of SMPHA model on it. As shown in Figure 10, the SMPHA model affects
    the CPU of the Raspberry Pi node significantly as it consumed around 41.2% of
    the CPU compared to only 3.5% when it does not host the SMPHA model. However,
    the memory (RAM) utilization in both the cases (with and without deployment of
    an SMPHA model) is nearly the same which is around 31%. Comparatively RAM utilization
    does not have much difference in with and without SMPHA. It is worthwhile to note
    that, the CPU utilization is still much lower than the 50% of total CPU capacity
    in Raspberry Pi. Therefore, it becomes feasible for adopting edge server implementation
    in the proposed irrigation system. Figure 10 CPU and memory utilization with and
    without SMPHA. 6 Conclusion This article proposed a novel approach to edge-based
    irrigation system to facilitate decision-making on watering the plants on scheduled
    time. The proposed approach applying IoT with an edge computing framework enables
    the farming system to adapt to the changes in environmental conditions automatically
    and efficiently. The process of automatic irrigation regulates irrigation according
    to the live weather parameters for forecasting the irrigation process. Soil moisture
    prediction was performed using major regression algorithms that are again combined
    with k-means clustering for estimating the changes incurred in soil moisture prediction.
    These techniques were compared through metrics such as MAPE, MSE, speed, and power
    consumption from which XB + k-means was found to perform better. The XB + k-means
    algorithm was further used for the implementation of decision mechanism on the
    developed edge computing model. The proposed edge model saves the data communication
    cost and reduces the response time of IoT services. It can be deployed on existing
    devices on the network edges serving as edge nodes, thereby reducing the overall
    implementation cost of a large-scale IoT system. The edge-based approach was found
    to perform better than the cloud-based approach in terms of response time, latency,
    throughput, and bandwidth usage. Finally, the edge model was analyzed through
    CPU and memory usage while running with and without the algorithm. In both cases,
    the memory utilization is almost lower to total available resource of the edge
    device. From this, edge device can allocate its remaining resource for other computing
    services, which increases the efficiency of edge computing device. The number
    of end edge nodes can be increased according to the field area and then to check
    the potency of the system. Conflict of interest: The authors declare no conflict
    of interest. Data availability statement: All data that support the findings of
    this study are included within the article. References [1] India: Issues and Priorities
    for Agriculture, The World Bank, May 17, 2012. https://www.worldbank.org/en/news/feature/2012/05/17/india-agriculture-issues-priorities.Search
    in Google Scholar [2] India at a glance in Agriculture, FAO in India. https://www.fao.org/india/fao-in-india/india-at-a-glance/en/.Search
    in Google Scholar [3] Cavicchioli R, Ripple WJ, Timmis KN, Azam F, Bakken LR,
    Baylis M, et al. Scientists’ warning to humanity: Microorganisms and climate change.
    Nature Rev Microbiol. 2019;17(9):569–86. 10.1038/s41579-019-0222-5. Search in
    Google Scholar PubMed PubMed Central [4] Huong NTL, Bo YS, Fahad S. Economic impact
    of climate change on agriculture using Ricardian approach: A case of Northwest
    Vietnam. J Saudi Society Agricult Sci. 2019;18(4):449–457. 10.1016/j.jssas.2018.02.006.
    Search in Google Scholar [5] Fagodiya RK, Pathak H, Bhatia A, Jain N, Kumar A,
    Malyan SK. Global warming impacts of nitrogen use in agriculture: An assessment
    for India since 1960. Carbon Management. 2020;11(3):291–301. 10.1080/17583004.2020.1752061.
    Search in Google Scholar [6] Sarkar S, Chatterjee S, Misra S. Assessment of the
    suitability of fog computing in the context of internet of things. IEEE Trans
    Cloud Comput. 2018;6(1):46–59. 10.1109/TCC.2015.2485206. Search in Google Scholar
    [7] Porter JR, Xie L, Challinor AJ, Cochrane K, Howden SM, Iqbal MM, et al. Food
    security and food production systems. In: Field CB, Barros VR, Dokken DJ, Mach
    KJ, Mastrandrea MD, Bilir TE, et al., editors. Climate Change 2014: Impacts, Adaptation,
    and Vulnerability. Part A: Global and Sectoral Aspects. Contribution of Working
    Group II to the Fifth Assessment Report of the Intergovernmental Panel on Climate
    Change Cambridge, United Kingdom: Cambridge University Press and New York, NY,
    USA; 2014. p. 485–533.Search in Google Scholar [8] Lal R. Adaptation and mitigation
    of climate change by improving agriculture in India. In: S. SherazMahdi (Ed.),
    Climate Change and Agriculture in India: Impact and Adaptation. Cham: Springer
    International Publishing; 2019. p. 217–27. 10.1007/978-3-319-90086-5_17Search
    in Google Scholar [9] Saravanan K, Julie G, Robinson H. (Eds.), Handbook of research
    on implementation and deployment of IoT projects in smart cities. Hershey: IGI
    global, 2019. 10.4018/978-1-5225-9199-3Search in Google Scholar [10] Baylis A.
    Advances in precision farming technologies for crop protection. Outlooks Pest
    Manag. 2017;28(4):158–61. 10.1564/v28_aug_04Search in Google Scholar [11] Mulla
    D, Khosla R. Historical evolution and recent advances in precision farming. Soil-Specific
    Farming Precision Agriculture. Boca Raton: CRC Press; 2015. 10.1201/b18759-2Search
    in Google Scholar [12] Dutta L, and Basu TK. Extraction and optimization of leaves
    images of mango tree and classification using ANN. IJRAET 2013;1(3):46–51. Search
    in Google Scholar [13] Kawai T, Mineno H. Evaluation environment using edge computing
    for artificial intelligence-based irrigation system. 2020 16th International Conference
    on Mobility, Sensing and Networking (MSN). Tokyo, Japan: IEEE; 2020. p. 214–9.
    10.1109/MSN50589.2020.00046Search in Google Scholar [14] Munir MS, Bajwa IS, Ashraf
    A, Anwar W, Rashid R. Intelligent and smart irrigation system using edge computing
    and IoT. Complexity. 2021;2021:1–16. 10.1155/2021/6691571Search in Google Scholar
    [15] Angelopoulos CM, Filios G, Nikoletseas S, Raptis TP. Keeping data at the
    edge of smart irrigation networks: A case study in strawberry greenhouses. Comput
    Netw. 2020;167:107039. 10.1016/j.comnet.2019.107039Search in Google Scholar [16]
    Satyanarayanan M. The emergence of edge computing. Computer. 2017;50(1):30–9.
    10.1109/MC.2017.9Search in Google Scholar [17] Shi W, Dustdar S. The promise of
    edge computing. Computer. 2016;49(5):78–81. 10.1109/MC.2016.145Search in Google
    Scholar [18] Ramirez Izolan PL, Diniz Rossi F, Hohemberger R, Konzen MP, da Cunha
    Rodrigues G, Saquette LR, et al. Low-cost fog computing platform for soil moisture
    management. In: 2020 International Conference on Information Networking (ICOIN).
    Barcelona, Spain: IEEE; 2020. p. 499–504. 10.1109/ICOIN48656.2020.9016572Search
    in Google Scholar [19] Ferrandez-Pastor F, Garcia-Chamizo, J, Nieto-Hidalgo, M,
    Mora-Pascual, J, Mora-Martínez, J. Developing ubiquitous sensor network platform
    using internet of things: application in precision agriculture. Sensors. 2016;16(7):1141.
    10.3390/s16071141Search in Google Scholar PubMed PubMed Central [20] Xu X, Liu
    X, Xu Z, Dai F, Zhang X, Qi L. Trust-oriented IoT service placement for smart
    cities in edge computing. IEEE Internet Things J. 2020;7(5):4084–91. 10.1109/JIOT.2019.2959124Search
    in Google Scholar [21] Wu X, Liu M. In-situ soil moisture sensing: Measurement
    scheduling and estimation using compressive sensing. In: 2012 ACM/IEEE 11th International
    Conference on Information Processing in Sensor Networks (IPSN). Beijing, China:
    IEEE; 2012. p. 1–11. 10.1145/2185677.2185679Search in Google Scholar [22] Kameoka
    T, Nishioka K, Motonaga Y, Kimura Y, Hashimoto A, Watanabe N. Smart sensing in
    a Vineyard for advanced viticultural management. In: Proceedings of the 2014 International
    Workshop on Web Intelligence and Smart Sensing. Saint Etienne France; 2014. p.
    1–4. 10.1145/2637064.2637091Search in Google Scholar [23] Cagri Serdaroglu K,
    Onel C, Baydere S. IoT-based smart plant irrigation system with enhanced learning.
    In: 2020 IEEE Computing, Communications and IoT Applications (ComComAp.) Beijing,
    China: IEEE; 2020. p. 1–6. 10.1109/ComComAp51192.2020.9398892Search in Google
    Scholar [24] Kwok J, Sun Y. A smart IoT-based irrigation system with automated
    plant recognition using deep learning. In: Proceedings of the 10th International
    Conference on Computer Modeling and Simulation - ICCMS2018. Sydney, Australia:
    ACM Press; 2018. p. 87–91. 10.1145/3177457.3177506Search in Google Scholar [25]
    Goldstein A, Fink L, Meitin A, Bohadana S, Lutenberg O, Ravid G. Applying machine
    learning on sensor data for irrigation recommendations: Revealing the agronomist’s
    tacit knowledge. Precision Agricult. 2018;19(3):421–44. 10.1007/s11119-017-9527-4Search
    in Google Scholar [26] Vij A, Vijendra S, Jain A, Bajaj S, Bassi A, Sharma A.
    IoT and machine learning approaches for automation of farm irrigation system.
    Proc Comput Sci. 2020;167:1250–7. 10.1016/j.procs.2020.03.440Search in Google
    Scholar [27] Krishnan H, Scholar R. MongoDB – a comparison with NoSQL databases.
    Int J Scientific Eng Res. 2016;7(5):1035–7. Search in Google Scholar [28] Ojha
    T, Misra S, Raghuwanshi NS. Wireless sensor networks for agriculture: The state-of-the-art
    in practice and future challenges. Comput Electr Agricult. 2015;118:66–84. 10.1016/j.compag.2015.08.011Search
    in Google Scholar [29] Gutierrez J, Villa-Medina JF, Nieto-Garibay A, Porta-Gandara
    MA. Automated irrigation system using a wireless sensor network and GPRS module.
    IEEE Trans Instrument Measurement. 2014;63(1):166–76. 10.1109/TIM.2013.2276487Search
    in Google Scholar [30] Chanthakit S, Keeratiwintakorn P, Rattanapoka C. An IoT
    system design with real time stream processing and data flow integration. In:
    2019 Research, Invention, and Innovation Congress (RI2C.) Bangkok, Thailand: IEEE;
    2019. p. 1–5. 10.1109/RI2C48728.2019.8999968Search in Google Scholar [31] Lv H,
    Wang S. Design and application of IoT microservices based on Seneca. USA: DEStech
    Transactions on Computer Science and Engineering, (icte.). 2016. 10.12783/dtcse/icte2016/4814Search
    in Google Scholar [32] Lee B-H, Dewi EK, Wajdi MF. Data security in cloud computing
    using AES under HEROKU cloud. In: 2018 27th Wireless and Optical Communication
    Conference (WOCC). Hualien: IEEE; 2018. p. 1–5. 10.1109/WOCC.2018.8372705Search
    in Google Scholar [33] Lopez Pena MA, Munoz Fernandez I. SAT-IoT: An architectural
    model for a high-performance fog/edge/cloud IoT platform. In: 2019 IEEE 5th world
    forum on internet of things (WF-IoT.) Limerick, Ireland: IEEE; 2019. p. 633–8.
    10.1109/WF-IoT.2019.8767282Search in Google Scholar [34] Weather API. Retrieved
    from https://openweathermap.org/api.Search in Google Scholar [35] Drew Gislason.
    Zigbee wireless networking, 1st ed. Newnes, London: Elsevier Publisher; 2008.
    Search in Google Scholar [36] Tanabe K, Tanabe Y, Hagiya M. Model-based testing
    for MQTT applications. In: Virvou M, Nakagawa H, Jain LC. (Eds.), Knowledge-Based
    Software Engineering: 2020. Cham: Springer International Publishing; 2020. p.
    47–59. 10.1007/978-3-030-53949-8_5Search in Google Scholar [37] Babun L, Denney
    K, Celik ZB, McDaniel P, Uluagac AS. A survey on IoT platforms: Communication,
    security, and privacy perspectives. Comput Netw. 2021;192:108040. 10.1016/j.comnet.2021.108040Search
    in Google Scholar [38] Rastogi K, Lohani D. Edge computing-based internet of things
    framework for indoor occupancy estimation. Int J Ambient Comput Intell. 2020;11(4):16–37.
    10.4018/978-1-6684-5700-9.ch031Search in Google Scholar [39] Premkumar S, Sigappi
    AN. Functional framework for edge-based agricultural system. In: AI, Edge and
    IoT-based Smart Agriculture, 1st ed. USA: Academic Press, Elsevier; 2021. p. 71–100.
    10.1016/B978-0-12-823694-9.00029-3Search in Google Scholar [40] Phani Kumar J,
    Paramaguru P, Arumugam T, Manikanda Boopathi N, Venkatesan K. Genetic divergence
    among Ramnad mundu chilli (Capsicum annuum L.) genotypes for yield and quality.
    Electr J Plant Breeding. 2021;12(1):228–34. Search in Google Scholar [41] Goap
    A, Sharma D, Shukla AK, Rama Krishna C. An IoT-based smart irrigation management
    system using Machine learning and open source technologies. Comput Electronic
    Agricult. 2018;155:41–9. 10.1016/j.compag.2018.09.040Search in Google Scholar
    [42] Aslanpour MS, Gill SS, Toosi AN. Performance evaluation metrics for cloud,
    fog and edge computing: A review, taxonomy, benchmarks and standards for future
    research. Internet Things. 2020;12:100273. 10.1016/j.iot.2020.100273Search in
    Google Scholar [43] Sunardi A, Suharjito MVC architecture: a comparative study
    between Laravel framework and slim framework in freelancer project monitoring
    system web based. Proc Comput Sci. 2019;157:134–41. 10.1016/j.procs.2019.08.150Search
    in Google Scholar [44] Robert Shimonski. The wireshark field guide, 1st ed. New
    York: Syngress Press, Elsevier; 2013. 10.1016/B978-0-12-410413-6.00001-2Search
    in Google Scholar Received: 2022-01-10 Revised: 2022-02-28 Accepted: 2022-03-16
    Published Online: 2022-05-27 © 2022 S. Premkumar and AN. Sigappi, published by
    De Gruyter This work is licensed under the Creative Commons Attribution 4.0 International
    License. Download article (PDF) From the journal Journal of Intelligent Systems
    Volume 31 Issue 1 Submit manuscript Journal and Issue This issue All issues Articles
    in the same Issue Research Articles Construction of 3D model of knee joint motion
    based on MRI image registration Evaluation of several initialization methods on
    arithmetic optimization algorithm performance Application of visual elements in
    product paper packaging design: An example of the “squirrel” pattern Deep learning
    approach to text analysis for human emotion detection from big data Cognitive
    prediction of obstacle''s movement for reinforcement learning pedestrian interacting
    model The application of neural network algorithm and embedded system in computer
    distance teach system Machine translation of English speech: Comparison of multiple
    algorithms Automatic control of computer application data processing system based
    on artificial intelligence A secure framework for IoT-based smart climate agriculture
    system: Toward blockchain and edge computing Application of mining algorithm in
    personalized Internet marketing strategy in massive data environment On the correction
    of errors in English grammar by deep learning Research on intelligent interactive
    music information based on visualization technology Extractive summarization of
    Malayalam documents using latent Dirichlet allocation: An experience Conception
    and realization of an IoT-enabled deep CNN decision support system for automated
    arrhythmia classification Masking and noise reduction processing of music signals
    in reverberant music Cat swarm optimization algorithm based on the information
    interaction of subgroup and the top-N learning strategy State feedback based on
    grey wolf optimizer controller for two-wheeled self-balancing robot Research on
    an English translation method based on an improved transformer model Short-term
    prediction of parking availability in an open parking lot PUC: parallel mining
    of high-utility itemsets with load balancing on spark Image retrieval based on
    weighted nearest neighbor tag prediction A comparative study of different neural
    networks in predicting gross domestic product A study of an intelligent algorithm
    combining semantic environments for the translation of complex English sentences
    A study on automatic correction of English grammar errors based on deep learning
    A novel fingerprint recognition method based on a Siamese neural network A hidden
    Markov optimization model for processing and recognition of English speech feature
    signals Crime reporting and police controlling: Mobile and web-based approach
    for information-sharing in Iraq CRNet: Context feature and refined network for
    multi-person pose estimation Improving the efficiency of intrusion detection in
    information systems Research on reform and breakthrough of news, film, and television
    media based on artificial intelligence An optimized solution to the course scheduling
    problem in universities under an improved genetic algorithm An adaptive RNN algorithm
    to detect shilling attacks for online products in hybrid recommender system Computing
    the inverse of cardinal direction relations between regions An improved Jaya optimization
    algorithm with ring topology and population size reduction Review Articles A review
    on voice pathology: Taxonomy, diagnosis, medical procedures and detection techniques,
    open challenges, limitations, and recommendations for future directions An extensive
    review of state-of-the-art transfer learning techniques used in medical imaging:
    Open issues and challenges Special Issue: Explainable Artificial Intelligence
    and Intelligent Systems in Analysis For Complex Problems and Systems Tree-based
    machine learning algorithms in the Internet of Things environment for multivariate
    flood status prediction Evaluating OADM network simulation and an overview based
    metropolitan application Radiography image analysis using cat swarm optimized
    deep belief networks Comparative analysis of blockchain technology to support
    digital transformation in ports and shipping IoT network security using autoencoder
    deep neural network and channel access algorithm Large-scale timetabling problems
    with adaptive tabu search Eurasian oystercatcher optimiser: New meta-heuristic
    algorithm Trip generation modeling for a selected sector in Baghdad city using
    the artificial neural network Trainable watershed-based model for cornea endothelial
    cell segmentation Hessenberg factorization and firework algorithms for optimized
    data hiding in digital images The application of an artificial neural network
    for 2D coordinate transformation A novel method to find the best path in SDN using
    firefly algorithm Systematic review for lung cancer detection and lung nodule
    classification: Taxonomy, challenges, and recommendation future works Special
    Issue on International Conference on Computing Communication & Informatics Edge
    detail enhancement algorithm for high-dynamic range images Suitability evaluation
    method of urban and rural spatial planning based on artificial intelligence Writing
    assistant scoring system for English second language learners based on machine
    learning Dynamic evaluation of college English writing ability based on AI technology
    Image denoising algorithm of social network based on multifeature fusion Automatic
    recognition method of installation errors of metallurgical machinery parts based
    on neural network An FCM clustering algorithm based on the identification of accounting
    statement whitewashing behavior in universities Emotional information transmission
    of color in image oil painting College music teaching and ideological and political
    education integration mode based on deep learning Behavior feature extraction
    method of college students’ social network in sports field based on clustering
    algorithm Evaluation model of multimedia-aided teaching effect of physical education
    course based on random forest algorithm Venture financing risk assessment and
    risk control algorithm for small and medium-sized enterprises in the era of big
    data Interactive 3D reconstruction method of fuzzy static images in social media
    The impact of public health emergency governance based on artificial intelligence
    Optimal loading method of multi type railway flatcars based on improved genetic
    algorithm Special Issue: Evolution of Smart Cities and Societies using Emerging
    Technologies Data mining applications in university information management system
    development Implementation of network information security monitoring system based
    on adaptive deep detection Face recognition algorithm based on stack denoising
    and self-encoding LBP Research on data mining method of network security situation
    awareness based on cloud computing Topology optimization of computer communication
    network based on improved genetic algorithm Implementation of the Spark technique
    in a matrix distributed computing algorithm Construction of a financial default
    risk prediction model based on the LightGBM algorithm Application of embedded
    Linux in the design of Internet of Things gateway Research on computer static
    software defect detection system based on big data technology Study on data mining
    method of network security situation perception based on cloud computing Modeling
    and PID control of quadrotor UAV based on machine learning Simulation design of
    automobile automatic clutch based on mechatronics Research on the application
    of search algorithm in computer communication network Special Issue: Artificial
    Intelligence based Techniques and Applications for Intelligent IoT Systems Personalized
    recommendation system based on social tags in the era of Internet of Things Supervision
    method of indoor construction engineering quality acceptance based on cloud computing
    Intelligent terminal security technology of power grid sensing layer based upon
    information entropy data mining Deep learning technology of Internet of Things
    Blockchain in distribution network faults Optimization of shared bike paths considering
    faulty vehicle recovery during dispatch The application of graphic language in
    animation visual guidance system under intelligent environment Iot-based power
    detection equipment management and control system Estimation and application of
    matrix eigenvalues based on deep neural network Brand image innovation design
    based on the era of 5G internet of things Special Issue: Hybrid Fuzzy Systems
    for Mobile Robots and Their Applications IoT-enabled edge computing model for
    smart irrigation system Convex optimization for additive noise reduction in quantitative
    complex object wave retrieval using compressive off-axis digital holographic imaging
    Special Issue: Cognitive Cyber-Physical System with Artificial Intelligence for
    Healthcare 4.0. Auxiliary diagnosis study of integrated electronic medical record
    text and CT images A hybrid particle swarm optimization with multi-objective clustering
    for dermatologic diseases diagnosis An efficient recurrent neural network with
    ensemble classifier-based weighted model for disease prediction Design of metaheuristic
    rough set-based feature selection and rule-based medical data classification model
    on MapReduce framework Special Issue: Human-Centred Artificial Intelligence for
    Web 4.0 Construction of an IoT customer operation analysis system based on big
    data analysis and human-centered artificial intelligence for web 4.0 Human-centered
    artificial intelligence-based ice hockey sports classification system with web
    4.0 Subjects Architecture and Design Arts Asian and Pacific Studies Business and
    Economics Chemistry Classical and Ancient Near Eastern Studies Computer Sciences
    Cultural Studies Engineering General Interest Geosciences History Industrial Chemistry
    Islamic and Middle Eastern Studies Jewish Studies Law Library and Information
    Science, Book Studies Life Sciences Linguistics and Semiotics Literary Studies
    Materials Sciences Mathematics Medicine Music Pharmacy Philosophy Physics Social
    Sciences Sports and Recreation Theology and Religion Services For Journal Authors
    For Book Authors For Librarians Rights & Permissions Publications Publication
    types Open Access About Contact Career About De Gruyter Partnerships Press FAQs
    Social Facebook Instagram LinkedIn Twitter YouTube Winner of the OpenAthens Best
    Publisher UX Award 2022  Help/FAQ Privacy policy Cookie Policy Accessibility Terms
    & Conditions Legal Notice © Walter de Gruyter GmbH 2024 Cookie information We
    only use necessary cookies to be able to offer you our web services to the full
    extent. In our Cookie Policy you can find more details about all cookies we use
    and for what purposes. Close"'
  inline_citation: '>'
  journal: Journal of Intelligent Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT-enabled edge computing model for smart irrigation system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 74 papers. The special focus in this conference
    is on Innovations in Computer Science and Engineering. The topics include: A Taxonomy
    of Approaches and Methods for Software Effort Estimation; a Study on the Performance
    of the Faculty Members and Its Impact on Their Academic Rating during the Pandemic
    Wave One Period; a Review of Network Optimization on the Internet of Things; identification
    of the Ideal Team Capabilities and Predictive Success Measure for Software Projects
    Using Machine Learning; a Survey on Various Techniques and Proposals for Improving
    the Cryptocurrency Protocol; finding All Edges on any Smallest Route Connecting
    Two Nodes of a Directed Acyclic Graph Using Parallel Computing; detection and
    Monitoring of Objects: Producing Range Information; regression Analysis of Car
    Selection Model: An Appropriate or Non-appropriate Method; evaluating the Impact
    of Features for Twitter Spammers Detection; green Technology and Sustainable Renewable
    Energy Analysis; Image Forgery Detection Using Metadata Analysis and ELA Processor;
    Implementation of Real-time Face Mask Detection with Convolutional Neural Network
    (CNN) and OpenCV; implementing Solar Power Smart Irrigation System; improvement
    of Precision in Agriculture Using IoT-Based Machine Learning Techniques; Intelligent
    Computing Method for Detecting Diabetic Retinopathy (DBRP); malaria Disease Prediction
    with Ensemble Learning Technique; neural Network-Based Activity Recognition System;
    optimized Linguistic Feature Selection Through Deep Learning Approach for Forensic
    Applications; Performance of Non-orthogonal Multiple Access with MIMO System;
    physical Movement Acknowledgment Utilizing Mobile Sensor; A Novel Approach for
    a Vision-Based Physical Distancing Monitoring System for COVID-19 Using Deep Learning
    Techniques; Sentiment Analysis of COVID-19 Tweets Using Classification Algorithms.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 9th International Conference on Innovations in Computer Science and Engineering,
    ICICSE 2021
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Premkumar S.
  - Sigappi A.N.
  citation_count: '2'
  description: 'Internet of Things (IoT) provide a promising Smart irrigation facilitator
    for continual monitoring and control of environmental parameters, thereby leading
    to a huge volume of data to be efficiently collected, transferred, processed and
    stored. The deployment of cloud-based infrastructure with on-field connectedness,
    allowing information exchange among IoT nodes, and the usage of energy scavenging
    (e.g., solar power) in feeding them, become necessary, since agricultural fields
    are in lack of wired energy supply and, often, a reliable (Internet) network coverage.
    Therefore, these issues can be addressed through the integration of Edge computing
    in IoT scenarios. An efficient strategy is required to select the best communication
    technology with a motive of increasing the network performance between the IoT
    devices, Edge device and cloud. Application Specific Infrastructure Selection
    (ASIS) is an edge computing model developed to select the appropriate communication
    protocols according to the infrastructure requirements of three different real
    time scenarios namely: Assembly line automation, Smart parking system and Automatic
    irrigation system are deployed to get the most suitable application specific protocol
    from ZigBee, LoRa (Long Range) and LoWPAN (Low-Power Wireless Personal Area Network)
    to implement in real-time basis. ASIS model is proposed as a network resource
    manager that is capable of sensing, acting, signal processing, and/or communication
    abilities to perform a protocol selection according to their physical and technological
    limitations. Further Edge based ASIS model is developed to enhance the network
    performance even better when compared with cloud-based model. Automatic irrigation
    system is extended in the Edge based ASIS model. The overall ASIS system is evaluated
    by means of network parameters such as network usage, network delay and power
    consumption. The ASIS model and Edge based ASIS model is deployed in iFogSim simulator
    that compares each protocol used in the above IoT scenarios. Finally, the scenario
    of Automatic irrigation system is modeled using Edge based ASIS model where ZigBee
    with edge performs better compared with cloud-based model. Experimental results
    show that ASIS based Edge implementation lessen the overall network parameters
    in contrast to non-edge deployment in automatic irrigation scenario.'
  doi: 10.13052/jmm1550-4646.18321
  full_citation: '>'
  full_text: '>

    "Journal of Mobile Multimedia Submit Article River Publishers Journals View All
    Issues Editorial Team Author Guidelines About Submissions Contact Search Journal
    HOME Register Login Home / Archives / 2022: Vol 18 Iss 3 / Computer Vision and
    its Application in Agriculture ASIS Edge Computing Model to Determine the Communication
    Protocols for IoT Based Irrigation S. Premkumar Department of Computer Science
    & Engineering, Faculty of Engineering & Technology, Annamalai University, Tamilnadu,
    India .st0{fill:#A6CE39;} .st1{fill:#FFFFFF;} https://orcid.org/0000-0001-9350-3819
    AN. Sigappi Department of Computer Science & Engineering, Faculty of Engineering
    & Technology, Annamalai University, Tamilnadu, India .st0{fill:#A6CE39;} .st1{fill:#FFFFFF;}
    https://orcid.org/0000-0002-2166-8312 DOI: https://doi.org/10.13052/jmm1550-4646.18321
    Keywords: Internet of things, Edge computing, Irrigation system, Smart farming,
    Networkprotocol, cloud infrastructure, Zigbee, LoRa, LoWPAN, iFOGSIM Abstract
    Internet of Things (IoT) provide a promising Smart irrigation facilitator for
    continual monitoring and control of environmental parameters, thereby leading
    to a huge volume of data to be efficiently collected, transferred, processed and
    stored. The deployment of cloud-based infrastructure with on-field connectedness,
    allowing information exchange among IoT nodes, and the usage of energy scavenging
    (e.g., solar power) in feeding them, become necessary, since agricultural fields
    are in lack of wired energy supply and, often, a reliable (Internet) network coverage.
    Therefore, these issues can be addressed through the integration of Edge computing
    in IoT scenarios. An efficient strategy is required to select the best communication
    technology with a motive of increasing the network performance between the IoT
    devices, Edge device and cloud. Application Specific Infrastructure Selection
    (ASIS) is an edge computing model developed to select the appropriate communication
    protocols according to the infrastructure requirements of three different real
    time scenarios namely: Assembly line automation, Smart parking system and Automatic
    irrigation system are deployed to get the most suitable application specific protocol
    from ZigBee, LoRa (Long Range) and LoWPAN (Low-Power Wireless Personal Area Network)
    to implement in real-time basis. ASIS model is proposed as a network resource
    manager that is capable of sensing, acting, signal processing, and/or communication
    abilities to perform a protocol selection according to their physical and technological
    limitations. Further Edge based ASIS model is developed to enhance the network
    performance even better when compared with cloud-based model. Automatic irrigation
    system is extended in the Edge based ASIS model. The overall ASIS system is evaluated
    by means of network parameters such as network usage, network delay and power
    consumption. The ASIS model and Edge based ASIS model is deployed in iFogSim simulator
    that compares each protocol used in the above IoT scenarios. Finally, the scenario
    of Automatic irrigation system is modeled using Edge based ASIS model where ZigBee
    with edge performs better compared with cloud-based model. Experimental results
    show that ASIS based Edge implementation lessen the overall network parameters
    in contrast to non-edge deployment in automatic irrigation scenario. Downloads
    Author Biographies S. Premkumar, Department of Computer Science & Engineering,
    Faculty of Engineering & Technology, Annamalai University, Tamilnadu, India S.
    Premkumar Research Scholar, Computer Science and Engineering, Annamalai University,
    India. He has finished Master of Engineering (CSE) in Annamalai University. Currently
    he is also serving as a Project fellow (CSE) under UGC India granted DST-PURSE
    scheme at Annamalai University. His interested areas are Artificial Intelligence,
    Internet of Things, Edge computing and Cloud computing. AN. Sigappi, Department
    of Computer Science & Engineering, Faculty of Engineering & Technology, Annamalai
    University, Tamilnadu, India AN. Sigappi, Received her Ph.D in Computer Science
    and Engineering from Annamalai University in 2013. She did her Master Degree in
    Computer science and engineering from Anna University. Currently she is serving
    as a Professor in the Department of Computer Science and Engineering, Annamalai
    University, India. Her areas of interest include Image Processing, Machine Learning,
    Data Analytics and Internet of things. She has published more than 25 research
    articles in international journals and conferences. References J. Lin, W. Yu,
    N. Zhang, X. Yang, H. Zhang, and W. Zhao, “A Survey on Internet of Things: Architecture,
    Enabling Technologies, Security and Privacy, and Applications,” IEEE Internet
    Things J., vol. 4, no. 5, pp. 1125–1142, Oct. 2017, doi: 10.1109/JIOT.2017.2683200.
    L. Bajer and O. Krejcar, “Design and Realization of Low Cost Control for Greenhouse
    Environment with Remote Control,” IFAC-PapersOnLine, vol. 48, no. 4, pp. 368–373,
    2015, doi: 10.1016/j.ifacol.2015.07.062. J. A. Stankovic, “Research Directions
    for the Internet of Things,” IEEE Internet Things J., vol. 1, no. 1, pp. 3–9,
    Feb. 2014, doi: 10.1109/JIOT.2014.2312291. L. Lou, Q. Li, Z. Zhang, R. Yang, and
    W. He, “An IoT-Driven Vehicle Detection Method Based on Multisource Data Fusion
    Technology for Smart Parking Management System,” IEEE Internet Things J., vol.
    7, no. 11, pp. 11020–11029, Nov. 2020, doi: 10.1109/JIOT.2020.2992431. V. Chauhan,
    M. Patel, S. Tanwar, S. Tyagi, and N. Kumar, “IoT Enabled Real-Time urban transport
    management system,” Computers & Electrical Engineering, vol. 86, p. 106746, Sep.
    2020, doi: 10.1016/j.compeleceng.2020.106746. H. M. Khan, A. Khan, F. Jabeen,
    and A. U. Rahman, “Privacy preserving data aggregation with fault tolerance in
    fog-enabled smart grids,” Sustainable Cities and Society, vol. 64, p. 102522,
    Jan. 2021, doi: 10.1016/j.scs.2020.102522. W. Yang et al., “EdgeKeeper: a trusted
    edge computing framework for ubiquitous power Internet of Things,” Front Inform
    Technol Electron Eng, Jan. 2021, doi: 10.1631/FITEE.1900636. E. Saavedra, G. del
    Campo, and A. Santamaria, “Smart Metering for Challenging Scenarios: A Low-Cost,
    Self-Powered and Non-Intrusive IoT Device,” Sensors, vol. 20, no. 24, p. 7133,
    Dec. 2020, doi: 10.3390/s20247133. M. Kumar, K. S. Raju, D. Kumar, N. Goyal, S.
    Verma, and A. Singh, “An efficient framework using visual recognition for IoT
    based smart city surveillance,” Multimed Tools Appl, Jan. 2021, doi: 10.1007/s11042-020-10471-x.
    F. B. Poyen, A. Ghosh, P. Kundu, S. Hazra, and N. Sengupta, “Prototype Model Design
    of Automatic Irrigation Controller,” IEEE Trans. Instrum. Meas., vol. 70, pp.
    1–17, 2021, doi: 10.1109/TIM.2020.3031760. N. Abdullah et al., “Towards Smart
    Agriculture Monitoring Using Fuzzy Systems,” IEEE Access, vol. 9, pp. 4097–4111,
    2021, doi: 10.1109/ACCESS.2020.3041597. W. Yu et al., “A Survey on the Edge Computing
    for the Internet of Things,” IEEE Access, vol. 6, pp. 6900–6919, 2018, doi: 10.1109/ACCESS.2017.2778504.
    M. Capra, R. Peloso, G. Masera, M. R. Roch, and M. Martina, “Edge Computing: A
    Survey On the Hardware Requirements in the Internet of Things World,” Future Internet,
    vol. 11, no. 4, p. 100, Apr. 2019, doi: 10.3390/fi11040100. H. Bangui, S. Rakrak,
    S. Raghay, and B. Buhnova, “Moving to the Edge-Cloud-of-Things: Recent Advances
    and Future Research Directions,” Electronics, vol. 7, no. 11, p. 309, Nov. 2018,
    doi: 10.3390/electronics7110309. J. Kang and D.-S. Eom, “Offloading and Transmission
    Strategies for IoT Edge Devices and Networks,” Sensors, vol. 19, no. 4, p. 835,
    Feb. 2019, doi: 10.3390/s19040835. M. Syafrudin, N. Fitriyani, G. Alfian, and
    J. Rhee, “An Affordable Fast Early Warning System for Edge Computing in Assembly
    Line,” Applied Sciences, vol. 9, no. 1, p. 84, Dec. 2018, doi: 10.3390/app9010084.
    K. S. Awaisi et al., “Towards a Fog Enabled Efficient Car Parking Architecture,”
    IEEE Access, vol. 7, pp. 159100–159111, 2019, doi: 10.1109/ACCESS.2019.2950950.
    A. Goap, D. Sharma, A. K. Shukla, and C. Rama Krishna, “An IoT based smart irrigation
    management system using Machine learning and open source technologies,” Computers
    and Electronics in Agriculture, vol. 155, pp. 41–49, Dec. 2018, doi: 10.1016/j.compag.2018.09.040.
    M. Chernyshev, Z. Baig, O. Bello, and S. Zeadally, “Internet of Things (IoT):
    Research, Simulators, and Testbeds,” IEEE Internet Things J., vol. 5, no. 3, pp.
    1637–1647, Jun. 2018, doi: 10.1109/JIOT.2017.2786639. E. Sisinni, A. Saifullah,
    S. Han, U. Jennehag, and M. Gidlund, “Industrial Internet of Things: Challenges,
    Opportunities, and Directions,” IEEE Trans. Ind. Inf., vol. 14, no. 11, pp. 4724–4734,
    Nov. 2018, doi: 10.1109/TII.2018.2852491. C. Del-Valle-Soto, L. J. Valdivia, R.
    Velázquez, L. Rizo-Dominguez, and J.-C. López-Pimentel, “Smart Campus: An Experimental
    Performance Comparison of Collaborative and Cooperative Schemes for Wireless Sensor
    Network,” Energies, vol. 12, no. 16, p. 3135, Aug. 2019, doi: 10.3390/en12163135.
    A. H. Alavi and W. G. Buttlar, “An overview of smartphone technology for citizen-centered,
    real-time and scalable civil infrastructure monitoring,” Future Generation Computer
    Systems, vol. 93, pp. 651–672, Apr. 2019, doi: 10.1016/j.future.2018.10.059. A.
    de M. Del Esposte et al., “Design and evaluation of a scalable smart city software
    platform with large-scale simulations,” Future Generation Computer Systems, vol.
    93, pp. 427–441, Apr. 2019, doi: 10.1016/j.future.2018.10.026. A. Medela, B. Cendón,
    L. González, and R. Crespo, “IoT Multiplatform Networking to Monitor and Control
    Wineries and Vineyards,” p. 10, 2013. Y. Song, J. Ma, X. Zhang, and Y. Feng, “Design
    of Wireless Sensor Network-Based Greenhouse Environment Monitoring and Automatic
    Control System,” JNW, vol. 7, no. 5, pp. 838–844, May 2012, doi: 10.4304/jnw.7.5.838-844.
    G. V. Satyanarayana and S. Mazaruddin, “Wireless Sensor Based Remote Monitoring
    System for Agriculture Using ZigBee and GPS,” p. 5. N. Sakthipriya, “An Effective
    Method for Crop Monitoring Using Wireless Sensor Network,” p. 6, 2014. D. Rajesh,
    “Application of Spatial Data mining for Agriculture,” IJCA, vol. 15, no. 2, pp.
    7–9, Feb. 2011, doi: 10.5120/1922-2566. Yue Shaobo et al., “The appliacation of
    bluetooth module on the agriculture expert system,” in 2010 2nd International
    Conference on Industrial and Information Systems, Dalian, China, Jul. 2010, pp.
    109–112. doi: 10.1109/INDUSIS.2010.5565902. M. Haefke, S. C. Mukhopadhyay, and
    H. Ewald, “A Zigbee based smart sensing platform for monitoring environmental
    parameters,” in 2011 IEEE International Instrumentation and Measurement Technology
    Conference, Hangzhou, China, May 2011, pp. 1–8. doi: 10.1109/IMTC.2011.5944154.
    PG Student, Department of ME, MCE, Hassan, India., P. D. S, and M. S. Srinath,
    “GSM based Automatic Irrigation Control System for Efficient Use of Resources
    and Crop Planning by Using an Android Mobile,” IOSRJMCE, vol. 11, no. 4, pp. 49–55,
    2014, doi: 10.9790/1684-11414955. P. Sarwade, N. Shinde, and S. Tingre, “FPGA
    Based Real Time Monitoring System for Agricultural Field,” vol. 3, no. 3, p. 9,
    2017. R. Castañeda-Miranda, E. Ventura-Ramos, R. del Rocío Peniche-Vera, and G.
    Herrera-Ruiz, “Fuzzy Greenhouse Climate Control System based on a Field Programmable
    Gate Array,” Biosystems Engineering, vol. 94, no. 2, pp. 165–177, Jun. 2006, doi:
    10.1016/j.biosystemseng.2006.02.012. K. P. Ferentinos, N. Katsoulas, A. Tzounis,
    C. Kittas, and T. Bartzanas, “A climate control methodology based on wireless
    sensor networks in greenhouses,” Acta Hortic., no. 1107, pp. 75–82, Dec. 2015,
    doi: 10.17660/ActaHortic.2015.1107.9. J.-S. Lee, Y.-W. Su, and C.-C. Shen, “A
    Comparative Study of Wireless Protocols: Bluetooth, UWB, ZigBee, and Wi-Fi,” in
    IECON 2007 – 33rd Annual Conference of the IEEE Industrial Electronics Society,
    Taipei, Taiwan, 2007, pp. 46–51. doi: 10.1109/IECON.2007.4460126. C. Saad, B.
    Mostafa, E. Ahmadi, and H. Abderrahmane, “Comparative Performance Analysis of
    Wireless Communication Protocols for Intelligent Sensors and Their Applications,”
    IJACSA, vol. 5, no. 4, 2014, doi: 10.14569/IJACSA.2014.050413. A. Paventhan, S.
    K. Allu, S. Barve, V. Gayathri, and N. M. Ram, “Soil Property Monitoring Using
    6LoWPAN-enabled Wireless Sensor Networks,” p. 7, 2012. Z. Suryady, M. H. M. Shaharil,
    K. A. Bakar, R. Khoshdelniat, G. R. Sinniah, and U. Sarwar, “Performance evaluation
    of 6LoWPAN-based precision agriculture,” in The International Conference on Information
    Networking 2011 (ICOIN2011), Kuala Lumpur, Malaysia, Jan. 2011, pp. 171–176. doi:
    10.1109/ICOIN.2011.5723173. A. Augustin, J. Yi, T. Clausen, and W. Townsley, “A
    Study of LoRa: Long Range & Low Power Networks for the Internet of Things,” Sensors,
    vol. 16, no. 9, p. 1466, Sep. 2016, doi: 10.3390/s16091466. M. A. Ertürk, M. A.
    Aydın, M. T. Büyükakkaşlar, and H. Evirgen, “A Survey on LoRaWAN Architecture,
    Protocol and Technologies,” Future Internet, vol. 11, no. 10, p. 216, Oct. 2019,
    doi: 10.3390/fi11100216. F. Adelantado, X. Vilajosana, P. Tuset-Peiro, B. Martinez,
    J. Melia-Segui, and T. Watteyne, “Understanding the Limits of LoRaWAN,” IEEE Commun.
    Mag., vol. 55, no. 9, pp. 34–40, 2017, doi: 10.1109/MCOM.2017.1600613. S.-C. Hung,
    H. Hsu, S.-Y. Lien, and K.-C. Chen, “Architecture Harmonization Between Cloud
    Radio Access Networks and Fog Networks,” IEEE Access, vol. 3, pp. 3019–3034, 2015,
    doi: 10.1109/ACCESS.2015.2509638. S. Kitanov, E. Monteiro, and T. Janevski, “5G
    and the Fog—Survey of related technologies and research directions,” in 2016 18th
    Mediterranean Electrotechnical Conference (MELECON), Lemesos, Apr. 2016, pp. 1–6.
    doi: 10.1109/MELCON.2016.7495388. T. X. Tran, A. Hajisami, P. Pandey, and D. Pompili,
    “Collaborative Mobile Edge Computing in 5G Networks: New Paradigms, Scenarios,
    and Challenges,” IEEE Commun. Mag., vol. 55, no. 4, pp. 54–61, Apr. 2017, doi:
    10.1109/MCOM.2017.1600863. A. Greasley and C. Owen, “Modelling people’s behaviour
    using discrete-event simulation: a review,” IJOPM, vol. 38, no. 5, pp. 1228–1244,
    May 2018, doi: 10.1108/IJOPM-10-2016-0604. S. Svorobej et al., “Towards Automated
    Data-Driven Model Creation for Cloud Computing Simulation,” presented at the Eighth
    EAI International Conference on Simulation Tools and Techniques, Athens, Greece,
    2015. doi: 10.4108/eai.24-8-2015.2261129. T. Ojha, S. Misra, and N. S. Raghuwanshi,
    “Wireless sensor networks for agriculture: The state-of-the-art in practice and
    future challenges,” Computers and Electronics in Agriculture, vol. 118, pp. 66–84,
    Oct. 2015, doi: 10.1016/j.compag.2015.08.011. K. L. Krishna, J. Madhuri, and K.
    Anuradha, “A ZigBee based energy efficient environmental monitoring alerting and
    controlling system,” in 2016 International Conference on Information Communication
    and Embedded Systems (ICICES), Chenai, Tamilnadu, India, Feb. 2016, pp. 1–7. doi:
    10.1109/ICICES.2016.7518849. J. Gutierrez, J. F. Villa-Medina, A. Nieto-Garibay,
    and M. A. Porta-Gandara, “Automated Irrigation System Using a Wireless Sensor
    Network and GPRS Module,” IEEE Trans. Instrum. Meas., vol. 63, no. 1, pp. 166–176,
    Jan. 2014, doi: 10.1109/TIM.2013.2276487. S. Premkumar and A. Sigappi, “A Survey
    of Architecture, Framework and Algorithms for Resource Management in Edge Computing,”
    EAI Endorsed Transactions on Energy Web, p. 167788, Jul. 2018, doi: 10.4108/eai.23-12-2020.167788.
    Y. Mao, J. Zhang, and K. B. Letaief, “Joint Task Offloading Scheduling and Transmit
    Power Allocation for Mobile-Edge Computing Systems,” in 2017 IEEE Wireless Communications
    and Networking Conference (WCNC), San Francisco, CA, USA, Mar. 2017, pp. 1–6.
    doi: 10.1109/WCNC.2017.7925615. H. Gupta, A. Vahid Dastjerdi, S. K. Ghosh, and
    R. Buyya, “iFogSim: A toolkit for modeling and simulation of resource management
    techniques in the Internet of Things, Edge and Fog computing environments: iFogSim:
    A toolkit for modeling and simulation of internet of things,” Softw. Pract. Exper.,
    vol. 47, no. 9, pp. 1275–1296, Sep. 2017, doi: 10.1002/spe.2509. PDF HTML Published
    2022-02-04 How to Cite Premkumar, S. ., & Sigappi, A. . (2022). ASIS Edge Computing
    Model to Determine the Communication Protocols for IoT Based Irrigation. Journal
    of Mobile Multimedia, 18(03), 885–916. https://doi.org/10.13052/jmm1550-4646.18321
    More Citation Formats Issue 2022: Vol 18 Iss 3 Section Computer Vision and its
    Application in Agriculture Pavlos Lazaridis and Philippa Jefferies discuss his
    work in beyond 5G research, what we can expect from future 6G technologies, and
    the issues we face with security and privacy 2020 Best Paper Award SNR-Based Early
    Warning Message Scheme for VANETs - MuathObaidat, IhsasnShahwan, Ahmed Hassebo,
    SuhaibObeidat, Mohamed Ali and MatlubaKhodjaeva User-Friendly Privacy-Preserving
    Photo Sharing on Online Social Networks - Khalid Alemerien ISSN: 1550-4646 (Print
    Version) ISSN: 1550-4654 (Online Version) Hybrid Journal Make a Submission Subscription
    Indexed in: BFI Google Scholar CrossREF DBLP SCOPUS EI Compendex SCMAGO  "'
  inline_citation: '>'
  journal: Journal of Mobile Multimedia
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: ASIS Edge Computing Model to Determine the Communication Protocols for IoT
    Based Irrigation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ting L.
  - Khan M.
  - Sharma A.
  - Ansari M.D.
  citation_count: '48'
  description: An intelligent climate and watering agriculture system is presented
    that is controlled with Android application for smart water consumption considering
    small and medium ruler agricultural fields. Data privacy and security as a big
    challenge in current Internet of Things (IoT) applications, as with the increase
    in number of connecting devices, these devices are now more vulnerable to security
    threats. An intelligent fuzzy logic and blockchain technology is implemented for
    timely analysis and securing the network. The proposed design consists of various
    sensors that collect real-time data from environment and field such as temperature,
    soil moisture, light intensity, and humidity. The sensed field information is
    stored in IoT cloud platform, and after the analysis of entries, watering is scheduled
    by implementing the intelligent fuzzy logic and blockchain. The intelligent fuzzy
    logic based on different set of rules for making smart decisions to meet the watering
    requirements of plant and blockchain technology provides necessary security to
    the IoT-enabled system. The implementation of blockchain technology allows access
    only to the trusted devices and manages the network. From the experimentation,
    it is observed that the proposed system is highly scalable and secure. Multiple
    users at the same time can monitor and interact with the system remotely by using
    the proposed intelligent agricultural system. The decisions are taken by applying
    intelligent fuzzy logic based on input variables, and an alert is transmitted
    about watering requirements of a field to the user. The proposed system is capable
    of notifying users for turning water motor on and off. The experimental outcomes
    of the proposed system also reveal that it is an efficient and highly secure application,
    which is capable of handling the process of watering the plants.
  doi: 10.1515/jisys-2022-0012
  full_citation: '>'
  full_text: '>

    "Skip to content Authenticated with University of Nebraska - Lincoln What does
    this mean? $ USD € EUR - Euro £ GBP - Pound $ USD - Dollar EN 0 University of
    Nebras... SUBJECTS FOR AUTHORS SERVICES PUBLICATIONS ABOUT Open Access Published
    by De Gruyter February 2, 2022 A secure framework for IoT-based smart climate
    agriculture system: Toward blockchain and edge computing Li Ting , Mudassir Khan
    , Ashutosh Sharma and Mohd Dilshad Ansari From the journal Journal of Intelligent
    Systems https://doi.org/10.1515/jisys-2022-0012 Cite this Share this 45 Abstract
    An intelligent climate and watering agriculture system is presented that is controlled
    with Android application for smart water consumption considering small and medium
    ruler agricultural fields. Data privacy and security as a big challenge in current
    Internet of Things (IoT) applications, as with the increase in number of connecting
    devices, these devices are now more vulnerable to security threats. An intelligent
    fuzzy logic and blockchain technology is implemented for timely analysis and securing
    the network. The proposed design consists of various sensors that collect real-time
    data from environment and field such as temperature, soil moisture, light intensity,
    and humidity. The sensed field information is stored in IoT cloud platform, and
    after the analysis of entries, watering is scheduled by implementing the intelligent
    fuzzy logic and blockchain. The intelligent fuzzy logic based on different set
    of rules for making smart decisions to meet the watering requirements of plant
    and blockchain technology provides necessary security to the IoT-enabled system.
    The implementation of blockchain technology allows access only to the trusted
    devices and manages the network. From the experimentation, it is observed that
    the proposed system is highly scalable and secure. Multiple users at the same
    time can monitor and interact with the system remotely by using the proposed intelligent
    agricultural system. The decisions are taken by applying intelligent fuzzy logic
    based on input variables, and an alert is transmitted about watering requirements
    of a field to the user. The proposed system is capable of notifying users for
    turning water motor on and off. The experimental outcomes of the proposed system
    also reveal that it is an efficient and highly secure application, which is capable
    of handling the process of watering the plants. Keywords: Internet of Things;
    sensors; data privacy and security; fuzzy logic; decision support 1 Introduction
    Due to the modernization of farming, the climate monitoring in agriculture is
    essential for the growth of agricultural yields. With the monitoring of climate,
    efficient watering process is also very important because of shortage of sweet
    water resources across major parts of the world [1]. Therefore, there is a requirement
    for an automatic and intelligent agricultural system that can be adopted for providing
    essential amount of water to the plants and climate monitoring during the maximum
    farming time. The automatic process of climate monitoring and watering is essential
    in Asian region due to the limited resources of water and regularly changing environments.
    The major parts of Asian countries are under severe conditions of hot weather
    and drip system of irrigation, which is utilized for supporting small-scale farming.
    However, the system of drip irrigation is not efficient because of least control
    in the amount of walking during day and night times, various seasons of summer
    and winter [2]. For the efficient utilization of limited water resources, intelligent
    agricultural solution is required to be adopted for obtaining better farming yields
    considering severe conditions of weather. Moreover, many of common people do not
    have the idea and key knowledge for growing plants in an efficient manner. The
    irrigation of plants needs proper control on soil moisture level and monitoring
    of weather and watering quantity for its growth. Many such technologies have been
    designed for providing better water utility during irrigation [3,4,5,6]. However,
    each of these technologies has some limitations, and they are not efficient in
    providing better utilization of water resources and continuous monitoring of climate.
    The prime focus of the proposed design is to present an automatic intelligent
    agricultural system that is capable of monitoring climate and providing an efficient
    utilization of water resources to feed plants during the maximum farming time
    [7]. Moreover, this study also contributes for providing a regular support through
    mobile application for regularly monitoring climate and watering process. The
    blockchain technology is adopted for securing the privacy of the proposed intelligent
    agriculture system [8]. The fuzzy rule is implemented for intelligent decision
    making along with the set of rules, which are applied on the collected data through
    deployed sensors along the field, and providing controls of watering amount in
    accordance with the plant’s watering requirement [9]. The adopted blockchain technology
    provides secure information access among connected Internet of Things (IoT) devices
    [10]. The adopted blockchain technology enables the design by providing access
    only to the trusted devices and thereby controlling and managing the proposed
    intelligent climate and watering agriculture system (ICWAS). Multiple users at
    the same time are capable of monitoring and interacting remotely by using the
    proposed prototype of ICWAS. The prototype application is designed using an Android,
    and the fuzzy logic method is implemented for deciding the action depending upon
    the input values. The proposed ICWAS based on input values of climate and soil
    parameters further activates the actuator for making watering decisions such as
    turning on and off the water tunnels periodically. The humidity, temperature,
    and soil moisture level varies across various parts throughout 24 h of the day.
    This is the reason behind the changes in requirements of watering across various
    parts in a day. The proposed ICWAS monitors climate, light intensity, temperature,
    humidity, and water content in soil through deployed sensors. The sensed information
    is then transferred on the server through Wi-Fi for providing the customized guidance
    of watering and continuously monitoring the plant’s health on smart devices using
    a designed application [11]. Moreover, the varying species of plants requires
    different levels of water irrigation, and therefore, it is essential for effectively
    utilizing the water reservoirs for better plant growth [12]. The intelligent climate
    and pottering agriculture system requires quantifying the input variables collected
    from deployed sensors [13]. In this experimentation, limited amount of plants
    are considered for the modeling of the proposed system. The respective data set
    is collected at local field for accurately monitoring the health of plants and
    recommending the requirements such that the system can guide the farmer in an
    efficient way. The included set of plants in this study is mint, onion, cucumber,
    radish, chili, carrot, tomato, and garlic. The Android application of ICWAS is
    also designed for an intelligent monitoring and smart management of water quantity
    through smart devices. The proposed prototype is tested for its effectiveness
    in laboratory and in field as well. The farmer can easily access the application
    for efficiently monitoring the climate and the level of soil moisture and compare
    the present moisture level with the required soil moisture for a specific plant
    [14]. The design also provides the remote interaction with plants, thereby a farmer
    can adjust the watering amount as per the requirement of specific plant. The proposed
    design provides a real-time monitoring of field from a distant place by simply
    accessing the smart devices across any part of the world with the support of IoT
    and blockchain techniques. The blockchain approach is implemented to secure the
    connection between the server and the IoT devices [15]. Because the proposed design
    of an ICWAS incorporates simple and reasonable mechanisms, the implementation
    of the proposed ICWAS at profitable level profile is a cost-effective result with
    a better efficiency, throughput, and accuracy. The proposed system is not only
    cost effective, but at the same time, it efficiently utilizes the sweet water
    resources and regularly tracks the health of plant by monitoring the climate in
    real time. The rest of the article is arranged as the most recent study in the
    implementation of blockchain and edge computing is discussed in Section 2. Section
    3 represents the proposed architecture of the intelligent agriculture system.
    The results and analysis of the proposed architecture is discussed in Section
    4. The concluding remarks and future direction are presented in Section 5. 2 Related
    studies During the exhaustive study of literature review, very few relevant research
    were identified, which intends to enhance the performance of agriculture in relation
    with various aspects such as soil power enhancement [16]. The suitable quantity
    of soil water includes certain obligatory conditions for the efficient growth
    of plant. Water is the most critical ingredient for the nourishment of life to
    efficiently use water resources. It is studied from one study that Indian farmers
    are facing issues such as electricity of low voltage and power cuts for the irrigation
    of agricultural land [17]. If the farmer does not irrigate agricultural land during
    the power cut time, then the probability of electricity and water wastage is very
    high during those hours, whereas the excessive watering also cause serious damages
    to the crops. Considering these issues, an integrated design was proposed of IoT
    and mobile application [18]. The design uses various sensors for measuring the
    temperature and soil moisture and the integration of Raspberry-Pi for automatically
    turning on and off water pumps. The authors have designed and automatic system
    for observing and irrigating the garden [19]. The design consists of watering
    the garden considering weather forecast and timer settings. The forecast API is
    used to access the forecast and integration of Raspberry-Pi for meeting the watering
    requirements. As per their study advanced sensors, user interface, time lapse
    and the form factor will be considered for the future directions. The authors
    proposed a design that considers recent and previous weather forecast for scheduling
    the watering of plants [20]. System also provides an application for their users
    where the weather conditions are forecasted for making plant watering schedule
    as per the weather conditions. The system also provides a facility for its users
    to select various services of weather forecasting such as underground weather,
    accessing private weather stations and dry sky conditions for the collection of
    different weather data. To access the private weather station, the proposed design
    is connected with Netatmo and Davis tools for accurate and highly localized weather
    information [21]. Depending on the outdoor weather conditions, the watering schedule
    is optimized. The design algorithm compensates inaccurate forecast of weather
    and utilizes water resource efficiently by managing the irrigation process considering
    parameters such as soil humidity, temperature, solar radiation, and speed of wind
    [22]. One study presents system for smart irrigation monitoring and controlling
    that uses wireless sensor networks and cloud computing technology [23]. The integration
    of wireless sensor networks and cloud computing helps monitoring and controlling
    the process of plant irrigation. The authors have utilized a set of census along
    with the actuators for measuring and evaluating water requirements of plants [24].
    The design also consists of an Android application for remotely accessing the
    drips. The communication among sensor nodes and base station is carried out through
    ZigBee module. A web-based graphical user interface is utilized for handling the
    collected information on real-time basis. Another design based on an Android application
    is proposed, to facilitates farmers with full access for the ornamental treatment
    of plants remotely [25]. There is a requirement for optimizing and controlling
    the irrigation requirements. The meadowlands would never be overwatered and underwatered.
    The computer-based designs are adopted as these technologies provide efficient
    collection of data such as plant information and environmental factors with high
    accuracy and in fewer efforts. Recently, with the evolution of technology, smartphones
    and web applications play a critical role in creating highly advanced and fully
    automated systems [26]. Such devices provide simple computing supply for all the
    people globally because of mobility factor. In daily life due to the intense incursion
    of smart devices, the development of secure Android applications is gaining more
    attention. A similar system was designed with the integration of IoT devices and
    Android application, where the design can be scaled up and rebuild [27]. Their
    system contains Arduino and a series of different sensing devices, which are connected
    in planter. The collected data from a real-time environment are deposited in cloud
    database, but this data can only be retrieved through the web application. Their
    scheme is capable of providing the learning of water conservation to the users
    through computerization and building a bridge between the computer system and
    the proposed centric system based on soil moisture sensor measurement. The senses
    become operational when the impedance factor changes among the electrodes, which
    are implanted in soil. The Arduino technology was implemented to design a system
    for controlling the irrigation and roofing procedure in greenhouse [28]. The input
    for the system is environmental data, such as humidity, temperature, soil moisture,
    and light intensity, through deployed sensors. The collected information is then
    compared with the weather forecast information for making the optimal decision.
    The Kalman filter was introduced to remove noise from the sensors [29]. In one
    more study, the authors propose the system based on census that measure the water
    level and water flow, which are connected with water pumps and irrigation canals,
    respectively [30]. They proposed a design, which utilizes wireless sensor networks
    for transmitting the sensed information to the server through gateway node periodically.
    In web server, the collected information are analyzed and kept in database for
    making comparison among recent and predefined values [31]. In their system, an
    alert is generated and transmitted to the farmers when the water requirement is
    needed. In one study, authors proposed an IoT design-based digital approach for
    handling the irrigation process [32]. The sensors are deployed in agricultural
    land for measuring the level of moisture and to check the water level in storage
    through smartphone network. To access the sensor information, an intelligent software
    is installed on the server for making effective decisions about irrigation. A
    design is proposed to improve the water management by using a global system for
    mobile communication module [33]. The design provides regular monitoring of water
    level in storage and capable of providing suggestions about the exact level of
    water, which is required for the plants’ growth. This is also capable of measuring
    the humidity and temperature values to sustain the nutrients present in soil,
    which are essential for the plants’ growth. Recently, the introduction of blockchain
    technology became very popular for securing the transmission in IoT-enabled smart
    systems [34]. The traceability of agricultural goods is becoming a critical challenge.
    To overcome this issue, a study was proposed that implemented blockchain technology
    for securing the tracing of agriculture products [35]. This study also incorporates
    various managerial operations such as irrigation and fertilization of plants.
    The blockchain technology is implemented for recording the information of dispersed
    farmers, sellers, growers, and users for providing the security to many such operational
    information through decentralized manner. In smart agriculture, a design was proposed
    by implementing the infrastructure of blockchain technology [36]. There proposed
    design provides the necessary safety for maintaining the data integrity in agricultural
    domain. The blockchain technology in smart agriculture facilitates users and various
    farmers, which ensures the immutability of high quality and worthy information
    [37]. The blockchain technology enhances the traceability along with the accessibility
    of watering control information spatially. In one study, a farmland irrigation
    system is developed, which contributes for the enhancement of agricultural products
    and livelihood of rural people by adopting modern agricultural process [38]. In
    their proposed system, the authors have implemented the blockchain technology
    for securing the information from compiling histories in irrigation canals, where
    the irrigation information is accessed through various farmland associations of
    irrigation. The role of artificial intelligence and IoT based for the application
    of health-care applications [39,40,41]. Furthermore, ant colony optimization is
    discussed for task offloading in fog computing in agriculture [42]. The sensed
    information can be utilized for making a maintenance process of irrigation resources.
    The blockchain technology serves as an integrated bridge between irrigation association
    and farmers for supporting plant irrigation and efficiently using water resources.
    The comparison of various designed approaches that can be used for smart agriculture
    is tabulated in Table 1. The earlier designed system in agricultural domain is
    focused on efficient utilization of water irrigation by measuring the soil moisture
    [43]. However, essential parameters for controlling the water consumption and
    improved growth of plants are soil type, light intensity, humidity, and temperature.
    Because different plants need different watering requirements, and accordingly
    similar plants can have various irrigation needs consisting of suitable environment
    and soil type [44]. The comparison tabulated in Table 1 clearly highlights that
    there is a strong requirement for designing an intelligent system that can accurately
    measure the climate and irrigation needs on a real-time basis, considering all
    of the possible parameters. The ICWAS is an effort for providing a key that considers
    various constraints instead of only measuring soil moisture. The proposed design
    and its working along with the experimental analysis are discussed in the third
    section. Table 1 Parameters comparison of proposed model with existing technologies
    Previous technologies Parameters Precision soil irrigation Decision support watering
    Optimized consumption of energy Decentralized network Secure data communication
    [8] Yes No No No No [13] No No No No Semi implementation [18] Yes No Yes No No
    [22] Yes Yes (not implemented fuzzy logic) No Yes No [27] No No Yes No No [32]
    Yes No No No No Proposed model Yes Yes Yes Yes Yes 3 Architecture design of intelligent
    agriculture system The proposed ICWAS is designed considering security and integrity
    of data implementing the blockchain technology. The blockchain is applied for
    tracking and tracing the transactions through device, which are performed during
    the operation of the proposed ICWAS. The blockchain technology does not only secure
    the transaction but also enables seamless availability and connectivity of various
    features provided by the proposed system. The proposed architecture of integrated
    IoT and blockchain-based ICWAS is depicted in Figure 1. Figure 1 Proposed model
    for IoT-based ICWAS. The central storage concept may be vulnerable from various
    security threats but to tackle these threats we have implemented a decentralized
    storage approach. In decentralized approach, the climate, watering, and plants
    database are stored using the blockchain technology. The communication channels
    among sensors, actuators, smart devices, and IoT cloud platform of the proposed
    system is depicted in Figure 1. Smart devices are represented as nodes where each
    node contains blockchain copy, and their copies are transmitted to each node for
    their further use. At every 15 minutes, each family in block is updated, and this
    is the reason why the proposed system presents a secure communication procedure,
    and it is nearly impossible to track or trace the security of system. Therefore,
    by implementing the blockchain technology, a secure transmission in terms of receiving
    data from devices, delivering data to users and its storage is achieved. In the
    proposed system, the blockchain module is designed using Java, and the blocks
    contents is defined as hash, which acts as a unique identifier. Each of the block
    is capable for computing block hash, and then secure hash algorithm hash is evaluated
    based on it. A block is designed when threshold level meets the requirement, and
    the connectivity is, therefore, achieved by managing the blockchain. The blockchains
    are then looped over to verify the validation of entire blockchain system that
    whether the blocks hash is matching with previous block hash or not. Figure 2
    depicts the four-layer operation of the proposed ICWAS. These four layers are
    perception layer, network layer, transport and management layer, and application
    layer. In perception layer where the sensors, actuators, and other hardwares are
    deployed. The second layer is the network layer, which is responsible for the
    connection establishment by using Bluetooth and Internet technology. The third
    layer is the transport and management layer, which is responsible for processing
    the sensed information, its security, management, and storage. The fourth layer
    is the application layer; the stored data and regular entries are analyzed using
    smart devices and transferred to the user through Android application. All of
    these four layers continuously interact among each other for providing secure
    transmission in smart devices and sensors for their efficient working of the proposed
    ICWAS. By simply logging-in into the application, a farmer can monitor climate
    and control the process of watering and can schedule actuators for specific plants.
    Figure 2 Architecture of ICWAS. Figure 3 depicts the architectural design of the
    proposed ICWAS, which represents the physical components of the design. It consists
    of the architecture of all the hardware utilized in the intelligent agriculture
    system, which is deployed in a real-time environment. As depicted in Figure 3,
    different sensor nodes such as temperature, soil moisture, humidity, light intensity,
    and camera sensors are deployed in the area of interest, which are connected with
    the microcontroller through analog inputs. The actuators, which consist of water
    pumps and lights, are connected with microcontroller in the serial output port.
    The microcontroller acts as a centralized system, which gathers data from deployed
    sensors and transmits sensed information toward the server through access points.
    The server is responsible for transmitting the sensed information such as light
    intensity, temperature, soil moisture, and humidity to the proposed module of
    fuzzy logic. This module analyses the entries and provides the decision whether
    there is a requirement of watering to the plant considering different plant types
    through the database of plants. Once the watering decision is taken to fulfill
    requirements of plant irrigation then alert is transferred to the user via SMS
    for taking necessary action. The user is capable of changing the operation of
    the system and can set the operation automatically and manually for handling the
    actuators of the system. Figure 3 Hardware implementation of proposed system (ICWAS).
    4 Intelligent watering decision support system Intelligent decision support scheme
    based on fuzzy rule is a major constituent of the proposed ICWAS. The proposed
    decision support system helps in making decisions based on the analysis of collected
    data from sensors. The fuzzy logic is implemented in this study because of its
    high two implications. The first significance is that the fuzzy logic provides
    highly accurate decision-making. The other significance of implementing fuzzy
    rule is its simple and easy implementation for IoT applications. The fuzzy logic
    analyzes the climate and makes decisions about watering requirements of plants.
    The decision is transferred to the mobile application, which is developed in Android.
    Figure 4, depicts the major components of the proposed intelligent decision support
    system such as fuzzy inference procedure, fuzzification, and defuzzification module,
    set of fuzzy rules, database, and sensor data. Typically, in any fuzzy logic design,
    the universal discourse D is inferred in any fuzzy set F in pair as ( D , m )
    . The fuzzy set consists of an ordered pair of i variables along with the membership
    function m f ( i ) . The comparison of fuzzy set F is shown in equation (1). (1)
    F = {  i ,  m f ( i ) ,  i ∈ D } Equation (1) is used for computing fuzzy sets
    and below are the steps, which are followed for the implementation of fuzzy logic.
    Figure 4 Proposed fuzzy logic controller for ICWAS. Step (i): Equations (1) and
    (2) are used for defining initial set of variables Step (ii): In second stage,
    the membership function are declared Step (iii): Rules are formulated for each
    defined variable Step (iv): Input a 1 , a 2 , a 3 ,…, a n are given in the fourth
    step Step (v): In fifth step, the membership functions are declared and utilized
    for each of the input value for their mapping with fuzzy value Step (vi): In sixth
    step, the fuzzy rules are achieved for inferencing each rule Step (vii): In this
    step, the aggregation is achieved for inferencing each rule Step (viii): In the
    last step, the final inference value is further converted to output value Y As
    shown in step (i), the designed fuzzy logic-based intelligent decision support
    system is used for handling five different variables such as temperature, humidity,
    light intensity, soil moisture, and plant type. These five different variables
    are declared as the subset of set F ( P , Q , R , S and T ) . As described in
    equations (1) and (2), the temperature change is represented with variable P ,
    humidity change is represented with variable Q , intensity of light is represented
    with variable R , soil moisture is represented with variable S , and variable
    T represents time. In step (ii), membership function set is computed for each
    input value of variables, such as m P ( a ) , m Q ( a ) , m R ( a ) , m S ( a
    ) , m T ( a ) , which represent the membership function of different input variables
    P , Q , R , S and T . These computed membership functions represent the membership
    degree of variable a for set of variables P , Q , R , S and T as represented in
    equations (2) and (3). (2) P ∪ Q ∪ R ∪ S ∪ T = { a , max ( m P ( a ) , m Q ( a
    ) , m R ( a ) , m S ( a ) , m T ( a ) ) } where a is an element of F . (3) P ∪
    Q ∪ R ∪ S ∪ T = { a , min ( m P ( a ) , m Q ( a ) , m R ( a ) , m S ( a ) , m
    T ( a ) ) } Step (ii) is followed by step (iii) where if then rules are applied
    for the implementation of fuzzy set rules. Every component of the proposed fuzzy
    logic-based intelligent decision support system as mentioned in algorithm above
    are implemented for each module where the working of modules are described in
    section 5. In step (iv), the membership functions are defined for each variable
    P , Q , R and S as temperature change, humidity change, moisture change, and light
    intensity as “lower,” “medium,” and “high.” However, the membership function for
    input variable T is computed as time such as “day” and “night.” Equation (4) represents
    the fuzzy set F ( a i ) , which is fuzzification kernel and further implemented
    utilizing mapping of μ i and a i for a fuzzy set F ( a i ) . (4) ∼ P = μ 1 F (
    a 1 ) + μ 2 F ( a 2 ) + μ 3 F ( a 3 ) + … + μ n F ( a n ) As mentioned in step
    (v), the fuzzification process is computed using equation (4). Equation (5) represents
    the triangular membership function of the proposed implementation. (5) μ P ( a
    ) = ⎧ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎨ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎩ 0 ,  a ≤ X   a − X Z − X X < a ≤ Z Y
    − a Y − Z Z < a < Y   0 ,  a ≥ Y The operations of minimum and maximum are utilized
    for evaluating the fuzzy values through crisp input values as represented in equation
    (6). (6) Δ ( a ; X , Y , Z ) = max ( min ( a − X Y − Z , Z − a Z − Y ) ) As represented
    in equation (6), the three corner coordinates of a for the considered triangular
    membership function, which are declared as X , Y , Z where X < Y < Z . As represented
    in equations (5) and (6), the membership functions are declared for each of five
    variables of the utilized fuzzy logic design. The MATLAB toolbox of fuzzy logic
    is utilized for defining these membership functions. As represented in step (vi),
    the main component of the proposed ICWAS is fuzzy inference procedure, which is
    responsible for effective decision making based on set of if-then rules, membership
    function set and “or,” “and” operators of fuzzy logic. In our proposed scheme,
    the fuzzy inference procedure is mapped with input to the respective output by
    utilizing fuzzy logic. The implemented fuzzy inference procedure consist of following
    steps, which are mentioned below. The fuzzification of input variable through
    membership function. In the next step, fuzzified inputs are combined as per fuzzy
    theory. Making of fuzzy rules. Rules outcome evaluation with the combination of
    output membership function and rule strength. The outcomes are combined for obtaining
    the output distribution. In last step, defuzzification of observed membership
    function is followed. The detailed procedure of fuzzy inference through four inputs
    along with two rules is represented in equations (7) and (8) where W 1 , Y 1 ,
    and Z 1 represent fuzzy and not a crisp value. (7) If  ( U 1 = E 1 1 ,  V 1 =
    E 1 2 ,  W 1 = E 1 3 ,  Y 1 = E 1 4 ,  Z 1 = E 1 5 ) Then  ( w = D 1 ) (8) If  (
    U 2 = E 2 1 ,  V 2 = E 2 2 ,  W 2 = E 2 3 ,  Y 2 = E 2 4 ,  Z 2 = E 2 5 )  Then  (
    w = D 2 ) Thereafter, the intersection over crisp input value with the membership
    function of input is applied for the occasion of three input values. The “and”
    operator is used for merging three fuzzified inputs to obtain the rule strength.
    The implementation of fuzzy inference procedure utilizes a membership function
    for every rule and then depending upon the complaint of each rule a conclusion
    is drawn. In the last step of the proposed implementation, the output is evaluated
    through fuzzy set of rules, which is written using if then statements, and then
    stored in knowledge database. In this step the scalar value is fuzzified, then
    rules are applied where is rule provides fuzzy output and then its conversion
    to a scalar measure. In the proposed scheme, defuzzification approach is utilized
    as it provides accurate outcomes as express in equation (9). (9) a ⁎ = ∫ μ i (
    W ) ⋅ x d x ∫ μ i ( W ) ⋅ d x where a ⁎ represents the defuzzified outcome, μ
    i ( W ) represents the membership function aggregation, and x represents the output
    variable. In equation (9), the output variable x is represented by x-axis, the
    aggregated membership function μ i ( W ) is represented by y-axis and defuzzified
    outcome is expressed as a ⁎ . At last the output shape is observed by the implementation
    of fuzzy “and” operator with clipping of observed membership function as per the
    rule strength. 5 Implementation of intelligent agriculture system The hardware
    devices used for implementing the proposed ICWAS are mentioned below. Arduino-Uno
    Wi-Fi module ESP8266 Water motor – 15 V Soil moisture sensor node – EC1258 Temperature
    and humidity sensor – DHT 11 Light intensity sensor – BH1750 Relay node – 6 V
    5.1 Process of intelligent agriculture system at server end The application is
    designed at server end for handling ICWAS. A web-based interface is introduced
    for handling the system. The management interface provides various options for
    controlling the proposed intelligent agriculture system. The web application requires
    an administrator level login for the secure access and also provides the working
    description of system. A dashboard is provided by the system through application
    for the management of plants data at the administrator level. The administrator
    after logging into the application may add new information about plant such as
    planting period details, fertilizers, watering, and other required details of
    the specific plant. This provided information is visible to the farmers and users
    as per the preference. At the same time, the administrator can also delete the
    details from its repository, which are irrelevant and not necessary. The administrator
    can control or manage users for allowing them to access the functionalities of
    the system by creating accounts. 5.2 Analysis of intelligent agriculture system
    through mobile application An Android-based application for intelligent agriculture
    system is also designed. This application allows user for farmers to control the
    system remotely. The basic control of the system are provided to the user, which
    are available in the menu. This application provides the necessary access to farmers
    such that they can access main features of the proposed system. The user can monitor
    the field, control actuators, and access the necessary alerts. In the user application,
    the information is available about each plant, which represents the suitable time
    and season for its planting and watering. At the backend, the fuzzy logic base
    intelligent system makes decisions by matching the previous and current state
    of the plant. This process provides the guidance to farmer about planting such
    as where and when to plant a seed, details about suitable fertilizers, estimated
    harvesting time, and environmental conditions. The user can their self-schedule
    watering process through their mobile application, are synchronized with a system
    calendar. The sensed information are processed in server on a real-time basis,
    and plant list along with their feasibility rating is transmitted to the farmers’
    mobile. An alert is transmitted to the user mobile whenever the watering schedule
    meet specific date and time or the water level of field decreases. As per the
    regular schedule of watering or with the decrease in level of water, farmer can
    control the state of water motor to on and off by just accessing the application
    from anywhere across the world. When the water level of the field increases or
    meets the level of plant water requirement, again alert is transmitted to the
    user mobile to change the state of water motor to turn it off. 6 Experimental
    analysis and discussion The sensed information from the field received to sink
    node on a real-time basis and installed in IoT cloud platform for its analysis
    and decision-making. The web-server is introduced for monitoring and storing the
    real-time sensor information from sink node. A proposed system consists of knowledge
    base at server and along with predefined rules as tabulated in Tables 2–4. This
    database is obtained by the regular training of sensor nodes for or observing
    their threshold values. To match the observed values with knowledgebase data,
    rule base inference procedure is followed. The collected real-time information
    of temperature, humidity, soil moisture, and light is evaluated to give recommendations
    about the health of plants, and to convey which plant can be planted in particular
    season. Table 5 represents the sensed information about temperature, soil moisture,
    intensity of light, and humidity change. This sensed information from the field
    is further transmitted using microcontroller and received by the server. Table
    2 Training of moisture values Moisture level Training 0–500 Higher/dry condition
    501–700 Average 701 and above Lower/wet condition Table 3 Training of humidity
    values Percentage humidity Classification 70% or above Higher 50–69% Average Less
    than 50% Lower Table 4 Soil moisture classification Light intensity Classification
    Higher Dry condition Lower Wet condition Table 5 Collected entries of sensed data
    Time created at (Instances) Entry Hum (%) Moisture (g/m3) Temp (°C) Light (lux)
    2021-02-12 14:25:23 + 0530 211 23.35 18 15.36 143 2021-02-12 14:28:00 + 0530 212
    20.12 19 16.32 165 2021-02-12 14:34:41 + 0530 213 21.33 22 15.36 183.3 2021-02-12
    14:38:10 + 0530 214 27.35 125 19.22 184 2021-02-12 14:45:30 + 0530 215 27.22 628
    18.17 146.3 2021-02-12 14:52:20 + 0530 216 22.45 13 18.35 145.2 2021-02-12 14:58:03
    + 0530 217 21.37 19 12.35 122 2021-02-12 15:05:28 + 0530 219 19.13 389 13.22 132.6
    The statistics presented in Tables 2–4 auditors hold points, which are observed
    through the training of sensors. Table 5 represents the sensor outcomes, which
    are used in this experiment. The fuzzy rule inference procedure compare the sensor
    values from plants, which are stored in IoT, cloud database with the threshold
    values stored in knowledgebase. The fuzzy logic computes percentage of set of
    rules, which matches with input variable as a score of particular plant. This
    observed score value is then transmitted to the Android application and highlighted
    in the menu bar. This information helps farmer to know the suitability of particular
    plant for its growth and health in different environmental conditions. For controlling
    the watering process of a field, sensed information is transmitted toward server
    five to six times in a day. These transmitted values are compared with the computed
    thresholds of temperature, humidity, soil moisture, and light intensity for checking
    whether to schedule watering process or not. The user is regularly notified with
    the current condition of water level in soil. During watering process, when the
    moisture of soil all the content of water is maintained above the threshold value,
    the water motor is turned off. The collected entries of the field data in stored
    in IoT cloud for analysis and decision making where few sample entries are depicted
    in Figure 5. Table 6 represents the experimental outcomes of the proposed system.
    From the experimentation of 5–10, there are few chances where the value is high,
    and for some cases, the valley is observed medium. Accuracy of the proposed ICWAS
    for most of the experiments is above 98%. The accuracy of the proposed system
    signifies that the system accurately working as per defined fuzzy rules for ICWAS.
    The overall accuracy of the proposed ICWAS is calculated using equation (10).
    (10) ICWAS accuracy = ∑ μ ( A j ) N Figure 5 Collected sensor information in IoT
    cloud during experimentation. Table 6 ICWAS outcomes for ten experiments Experiments
    Humidity (%) Temperature (°C) Time (min) Moisture (voltage) Test result Real result
    Accuracy (%) S1 9 2.68 2.9 High Lower Lower 99 S2 11.2 6.3 4.3 High Medium Medium
    98 S3 9.4 4.58 2.8 High Medium Medium 99 S4 13.6 8.6 2.1 High Higher Higher 99
    S5 15.9 2.34 2.6 High Medium Lower 55 S6 17.6 7.5 2.7 High Higher Higher 98 S7
    16.2 6.3 1.9 High Higher Higher 99 S8 15.3 6.9 4.4 High Higher Higher 100 S9 4.2
    10.5 7.6 High Higher Higher 100 S10 6.9 8.9 1.9 High Lower Lower 100 By implementing
    equation (10), we have calculated the overall accuracy of ICWAS where the percentage
    accuracy for each experiment is represented as μ ( A j ) , and total number of
    experiments is represented as N . The overall accuracy of the proposed system
    through the experimentation is observed as 96.7%. Different sensor information
    and actuators effect after the decision is taken using intelligent fuzzy logic
    is tabulated in Table 7. The actuator response for five experiments of the proposed
    system is depicted in Figure 6. Table 7 Controlling actuator response through
    sensed data Entry Soil moisture Temperature Intensity of light Humidity Status
    of water motor E1 387 26.5 38 79.3 On E2 1,028 26.3 45 77.8 Off E3 1,041 23.2
    54 68.7 Off E4 341 19.3 53 67.5 On E5 283 16.7 16 26 On Figure 6 Actuator response
    for different experimentation. Table 7 represents the observed statistics of sensor
    information, which instigates the decision taken by intelligent fuzzy logic module
    for changing the state of motor by turning on and off with respect to temperature,
    humidity, and soil moisture values. The proposed intelligent agricultural system
    is designed for monitoring climate and early detection of soil dryness. From the
    experimentation, it is analyzed that the proposed system is an effective solution
    for detecting the dryness in soil at early stage. The proposed system offers a
    secure transmission of information from field to the server through decentralized
    network. The proposed integrated IoT and blockchain-based intelligent agricultural
    system has the flexibility of future directions as well. The current system is
    only considered for eight type of plants, whereas the proposed study can be extended
    by implementing genetic algorithm for neural networks for obtaining more precise
    recommendations and accurate predictions at its initial stage. 7 Conclusion In
    the modern era, technology is playing a critical role for the growth of a nation
    and an individual. With the modernization in various sectors, the agricultural
    sector also requires huge advancement especially in a country such as India. The
    modern technologies should be utilized for increasing the efficiency and productivity
    of the agricultural products. This project is aimed to design an intelligent agricultural
    system, which is capable for monitoring the climate and other important parameters
    such as temperature, humidity, soil moisture, and light intensity for enhancing
    the health of plant and increasing the productivity. The proposed intelligent
    agricultural system is an integration of IoT and blockchain technology for providing
    efficient and secure decision system. The system collects the field data in real
    time through deployed sensors and recommends usage with necessary precautions
    and decisions. The decisions are taken by applying intelligent fuzzy logic based
    on input variables, and an alert is transmitted about watering requirements of
    a field to the user. The proposed system is capable of notifying users for turning
    water motor on and off. The current system is only considered for eight type of
    plants, whereas the proposed study can be extended considering future directions
    by implementing the genetic algorithm for neural networks for obtaining recommendations
    that are more precise and accurate predictions at its initial stage. Acknowledgments
    1. Fujian Education Department Science and Technology project (JA15603) application
    of cognitive radio in mobile communication based on GNU radio. 2. Research on
    predictive coding algorithm for millimeter wave large scale MIMO system (FTKY005)
    of Fuzhou Institute of Technology. Funding information: 1. Fujian Education Department
    Science and Technology project (JA15603) application of cognitive radio in mobile
    communication based on GNU radio. 2. Research on predictive coding algorithm for
    millimeter wave large scale MIMO system (FTKY005) of Fuzhou Institute of Technology.
    Conflict of interest: The authors have no conflict of interest. Research involving
    human participants and/or animals: This research has not involved any human participants
    and/or animals. Informed consent: Not applicable as all the material is publically
    available. References [1] Prathibha SR, Hongal A, Jyothi MP. IoT based monitoring
    system in smart agriculture. 2017 International Conference on Recent Advances
    in Electronics and Communication Technology (ICRAECT), IEEE; 2017. p. 81–4.10.1109/ICRAECT.2017.52Search
    in Google Scholar [2] Mekala MS, Viswanathan P. A survey: smart agriculture IoT
    with cloud computing. 2017 International Conference on Microelectronic Devices,
    Circuits and Systems (ICMDCS), IEEE; 2017. p. 1–7.10.1109/ICMDCS.2017.8211551Search
    in Google Scholar [3] Yang J, Sharma A, Kumar R. IoT-based framework for smart
    agriculture. Int J Agric Environ Inf Syst (IJAEIS). 2021;12(2):1–14.10.4018/IJAEIS.20210401.oa1Search
    in Google Scholar [4] Ray PP. Internet of things for smart agriculture: technologies,
    practices and future direction. J Ambient Intell Smart Environ. 2017;9(4):395–420.10.3233/AIS-170440Search
    in Google Scholar [5] Yu K, Liu Y, Sharma A. Analyze the effectiveness of the
    algorithm for agricultural product delivery vehicle routing problem based on mathematical
    model. Int J Agric Environ Inf Syst (IJAEIS). 2021;12(3):26–38.10.4018/IJAEIS.2021070103Search
    in Google Scholar [6] Bu F, Wang X. A smart agriculture IoT system based on deep
    reinforcement learning. Future Gener Comput Syst. 2019;99:500–7.10.1016/j.future.2019.04.041Search
    in Google Scholar [7] Mekala MS, Viswanathan P. A novel technology for smart agriculture
    based on IoT with cloud computing. 2017 International Conference on I-SMAC (IoT
    in Social, Mobile, Analytics and Cloud)(I-SMAC), IEEE; 2017. p. 75–82.10.1109/I-SMAC.2017.8058280Search
    in Google Scholar [8] Sharma A. Recent trends in information and communication
    technologies (ICT) using emerging technologies. Recent Adv Electr ElectrEng (Former
    Recent Pat Electr ElectrEng). 2021;14(1):4–5.10.2174/235209651401201209102007Search
    in Google Scholar [9] Ferrag MA, Shu L, Yang X, Derhab A, Maglaras L. Security
    and privacy for green IoT-based agriculture: Review, blockchain solutions, and
    challenges. IEEE Access. 2020;8:32031–53.10.1109/ACCESS.2020.2973178Search in
    Google Scholar [10] Xiong H, Dalhaus T, Wang P, Huang J. Blockchain technology
    for agriculture: applications and rationale. Front Blockchain. 2020;3:7.10.3389/fbloc.2020.00007Search
    in Google Scholar [11] Vangala A, Das AK, Kumar N, Alazab M. Smart secure sensing
    for IoT-based agriculture: Blockchain perspective. IEEE Sens J. 2020.10.1109/JSEN.2020.3012294Search
    in Google Scholar [12] Verma M. Smart contract model for trust based agriculture
    using blockchain technology. Int J Res Anal Rev. 2021;8(2):354–5.Search in Google
    Scholar [13] Mistry I, Tanwar S, Tyagi S, Kumar N. Blockchain for 5G-enabled IoT
    for industrial automation: a systematic review, solutions, and challenges. Mech
    Syst Signal Process. 2020;135:106382.10.1016/j.ymssp.2019.106382Search in Google
    Scholar [14] Tripoli M, Schmidhuber J. Emerging opportunities for the application
    of blockchain in the agri-food industry. FAO and ICTSD: rome and geneva. Licence:
    CC BY-NC-SA; 2018. p. 3.Search in Google Scholar [15] Singh P, Singh N. Blockchain
    with IoT and AI: a review of agriculture and healthcare. Int J Appl Evolut Computation
    (IJAEC). 2020;11(4):13–27.10.4018/978-1-6684-7132-6.ch070Search in Google Scholar
    [16] Davcev D, Kocarev L, Carbone A, Stankovski V, Mitresk K. Blockchain-based
    distributed cloud/fog platform for IoT supply chain management. Eighth international
    conference on advances in computing, electronics and electrical technology (CEET);
    2018. p. 51–8.Search in Google Scholar [17] Leduc G, Kubler S, Georges JP. Innovative
    blockchain-based farming marketplace and smart contract performance evaluation.
    J Clean Prod. 2021;306:127055.10.1016/j.jclepro.2021.127055Search in Google Scholar
    [18] Kale S, Apte A, Raut S, Dorage S, Bhadkumbhe SM. Blockchain based smart agri-food
    supply chain management. Int J Res Engineering, Sci Manag. 2019;2(6):266–9.Search
    in Google Scholar [19] Liu Y, Sun Q, Sharma A, Sharma A, Dhiman G. Line monitoring
    and identification based on roadmap towards edge computing. Wirel personal Commun.
    2021;1–24.10.1007/s11277-021-08272-ySearch in Google Scholar [20] Sharma A, Singh
    PK, Kumar Y. An integrated fire detection system using IoT and image processing
    technique for smart cities. Sustain Cities Soc. 2020;61:102332.10.1016/j.scs.2020.102332Search
    in Google Scholar [21] Khoa TA, Man MM, Nguyen TY, Nguyen V, Nam NH. Smart agriculture
    using IoT multi-sensors: a novel watering management system. J Sens Actuator Netw.
    2019;8(3):45.10.3390/jsan8030045Search in Google Scholar [22] Sharma A, Kumar
    R. Computation of the reliable and quickest data path for healthcare services
    by using service-level agreements and energy constraints. Arabian J Sci Eng. 2019;44(11):9087–104.10.1007/s13369-019-03836-4Search
    in Google Scholar [23] Naresh M, Munaswamy P. Smart agriculture system using IOT
    technology. Int J Recent Technol Eng. 2019;7(5):98–102.Search in Google Scholar
    [24] Akram SV, Malik PK, Singh R, Anita G, Tanwar S. Adoption of blockchain technology
    in various realms: Opportunities and challenges. Security Priv. 2020;3(5):e109.10.1002/spy2.109Search
    in Google Scholar [25] Abdo JB, Zeadally S. Multi-utility framework: blockchain
    exchange platform for sustainable development. Int J Pervasive Comput Commun.
    2020.Search in Google Scholar [26] Oprunenco A, Akmeemana C. Using blockchain
    to make land registry more reliable in India. LSE Bus Rev. 2018.Search in Google
    Scholar [27] Ronaghi MH. A blockchain maturity model in agricultural supply chain.
    Inf Process Agriculture. 2021;8(3)398–408.10.1016/j.inpa.2020.10.004Search in
    Google Scholar [28] Lavanya G, Rani C, GaneshKumar P. An automated low cost IoT
    based fertilizer intimation system for smart agriculture. Sustain Comput: Inform
    Syst. 2020;28:100300.Search in Google Scholar [29] Elijah O, Orikumhi I, Rahman
    TA, Babale SA, Orakwue SI. Enabling smart agriculture in Nigeria: application
    of IoT and data analytics. 2017 IEEE 3rd Int Conf Electro-Technology Natl Dev
    (NIGERCON) IEEE. 2017;762–6.10.1109/NIGERCON.2017.8281944Search in Google Scholar
    [30] Mehta A, Patel S. IoT based smart agriculture research opportunities and
    challenges. Int J Technol Res Eng. 2016;4:541–3.Search in Google Scholar [31]
    Gill SS, Tuli S, Xu M, Singh I, Singh KV, Lindsay D, et al. Transformative effects
    of IoT, Blockchain and artificial intelligence on cloud computing: evolution,
    vision, trends and open challenges. Internet Things. 2019;8:100118.10.1016/j.iot.2019.100118Search
    in Google Scholar [32] Li X, Huang D. Research on value integration mode of agricultural
    e-commerce industry chain based on internet of things and blockchain technology.
    Wirel Commun Mob Comput. 2020;2020:2020.10.1155/2020/8889148Search in Google Scholar
    [33] García L, Parra L, Jimenez JM, Lloret J, Lorenz P. IoT-based smart irrigation
    systems: an overview on the recent trends on sensors and IoT systems for irrigation
    in precision agriculture. Sensors. 2020;20(4):1042.10.3390/s20041042Search in
    Google Scholar PubMed PubMed Central [34] Van Wassenaer L, van Hilten M, van Ingen
    E, van Asseldonk M. Applying blockchain for climate action in agriculture: state
    of play and outlook. Food & Agriculture Org; 2021.10.18174/532926Search in Google
    Scholar [35] Rahman MU, Baiardi F, Ricci L. Blockchain smart contract for scalable
    data sharing in IoT: a case study of smart agriculture. 2020 IEEE Global Conference
    on Artificial Intelligence and Internet of Things (GCAIoT), IEEE; 2020. p. 1–7.10.1109/GCAIoT51063.2020.9345874Search
    in Google Scholar [36] Shakhbulatov D, Arora A, Dong Z, Rojas-Cessa R. Blockchain
    implementation for analysis of carbon footprint across food supply chain. 2019
    IEEE International Conference on Blockchain (Blockchain), IEEE; 2019. p. 546–51.10.1109/Blockchain.2019.00079Search
    in Google Scholar [37] Anand SJ. Iot-based secure and energy efficient scheme
    for precision agriculture using blockchain and improved leach algorithm. Turkish
    J Computer Math Educ (TURCOMAT). 2021;12(10):2466–75.Search in Google Scholar
    [38] Fan M, Sharma A. Design and implementation of construction cost prediction
    model based on SVM and LSSVM in industries 4.0. Int J Intell Comput Cybern. 2021;14:145–57.10.1108/IJICC-10-2020-0142Search
    in Google Scholar [39] Kishor A, Chakraborty C. Artificial intelligence and internet
    of things based healthcare 4.0 monitoring system. Wirel Personal Commun. 2021;1–17.10.1007/s11277-021-08708-5Search
    in Google Scholar [40] Kishor A, Chakraborty C. Early and accurate prediction
    of diabetics based on FCBF feature selection and SMOTE. Int J Syst Assur Eng Manag.
    2021;1–9.10.1007/s13198-021-01174-zSearch in Google Scholar [41] Kishor A, Jeberson
    W. Diagnosis of heart disease using internet of things and machine learning algorithms.
    Proceedings of Second International Conference on Computing, Communications, and
    Cyber-Security. Singapore: Springer; 2021. p. 691–702.10.1007/978-981-16-0733-2_49Search
    in Google Scholar [42] Kishor A, Chakarbarty C. Task offloading in fog computing
    for using smart ant colony optimization. Wirel Personal Commun. 2021;1–22.10.1007/s11277-021-08714-7Search
    in Google Scholar [43] Dwivedi SK, Amin R, Vollala S. Blockchain based secured
    information sharing protocol in supply chain management system with key distribution
    mechanism. J Inf Security Appl. 2020;54:102554.10.1016/j.jisa.2020.102554Search
    in Google Scholar [44] Mukherjee AA, Singh RK, Mishra R, Bag S. Application of
    blockchain technology for sustainability development in agricultural supply chain:
    justification framework. Oper Manag Res. 2021;1–16.10.1007/s12063-021-00180-5Search
    in Google Scholar Received: 2021-11-03 Accepted: 2021-12-15 Published Online:
    2022-02-02 © 2022 Li Ting et al., published by De Gruyter This work is licensed
    under the Creative Commons Attribution 4.0 International License. Download article
    (PDF) From the journal Journal of Intelligent Systems Volume 31 Issue 1 Submit
    manuscript Journal and Issue This issue All issues Articles in the same Issue
    Research Articles Construction of 3D model of knee joint motion based on MRI image
    registration Evaluation of several initialization methods on arithmetic optimization
    algorithm performance Application of visual elements in product paper packaging
    design: An example of the “squirrel” pattern Deep learning approach to text analysis
    for human emotion detection from big data Cognitive prediction of obstacle''s
    movement for reinforcement learning pedestrian interacting model The application
    of neural network algorithm and embedded system in computer distance teach system
    Machine translation of English speech: Comparison of multiple algorithms Automatic
    control of computer application data processing system based on artificial intelligence
    A secure framework for IoT-based smart climate agriculture system: Toward blockchain
    and edge computing Application of mining algorithm in personalized Internet marketing
    strategy in massive data environment On the correction of errors in English grammar
    by deep learning Research on intelligent interactive music information based on
    visualization technology Extractive summarization of Malayalam documents using
    latent Dirichlet allocation: An experience Conception and realization of an IoT-enabled
    deep CNN decision support system for automated arrhythmia classification Masking
    and noise reduction processing of music signals in reverberant music Cat swarm
    optimization algorithm based on the information interaction of subgroup and the
    top-N learning strategy State feedback based on grey wolf optimizer controller
    for two-wheeled self-balancing robot Research on an English translation method
    based on an improved transformer model Short-term prediction of parking availability
    in an open parking lot PUC: parallel mining of high-utility itemsets with load
    balancing on spark Image retrieval based on weighted nearest neighbor tag prediction
    A comparative study of different neural networks in predicting gross domestic
    product A study of an intelligent algorithm combining semantic environments for
    the translation of complex English sentences A study on automatic correction of
    English grammar errors based on deep learning A novel fingerprint recognition
    method based on a Siamese neural network A hidden Markov optimization model for
    processing and recognition of English speech feature signals Crime reporting and
    police controlling: Mobile and web-based approach for information-sharing in Iraq
    CRNet: Context feature and refined network for multi-person pose estimation Improving
    the efficiency of intrusion detection in information systems Research on reform
    and breakthrough of news, film, and television media based on artificial intelligence
    An optimized solution to the course scheduling problem in universities under an
    improved genetic algorithm An adaptive RNN algorithm to detect shilling attacks
    for online products in hybrid recommender system Computing the inverse of cardinal
    direction relations between regions An improved Jaya optimization algorithm with
    ring topology and population size reduction Review Articles A review on voice
    pathology: Taxonomy, diagnosis, medical procedures and detection techniques, open
    challenges, limitations, and recommendations for future directions An extensive
    review of state-of-the-art transfer learning techniques used in medical imaging:
    Open issues and challenges Special Issue: Explainable Artificial Intelligence
    and Intelligent Systems in Analysis For Complex Problems and Systems Tree-based
    machine learning algorithms in the Internet of Things environment for multivariate
    flood status prediction Evaluating OADM network simulation and an overview based
    metropolitan application Radiography image analysis using cat swarm optimized
    deep belief networks Comparative analysis of blockchain technology to support
    digital transformation in ports and shipping IoT network security using autoencoder
    deep neural network and channel access algorithm Large-scale timetabling problems
    with adaptive tabu search Eurasian oystercatcher optimiser: New meta-heuristic
    algorithm Trip generation modeling for a selected sector in Baghdad city using
    the artificial neural network Trainable watershed-based model for cornea endothelial
    cell segmentation Hessenberg factorization and firework algorithms for optimized
    data hiding in digital images The application of an artificial neural network
    for 2D coordinate transformation A novel method to find the best path in SDN using
    firefly algorithm Systematic review for lung cancer detection and lung nodule
    classification: Taxonomy, challenges, and recommendation future works Special
    Issue on International Conference on Computing Communication & Informatics Edge
    detail enhancement algorithm for high-dynamic range images Suitability evaluation
    method of urban and rural spatial planning based on artificial intelligence Writing
    assistant scoring system for English second language learners based on machine
    learning Dynamic evaluation of college English writing ability based on AI technology
    Image denoising algorithm of social network based on multifeature fusion Automatic
    recognition method of installation errors of metallurgical machinery parts based
    on neural network An FCM clustering algorithm based on the identification of accounting
    statement whitewashing behavior in universities Emotional information transmission
    of color in image oil painting College music teaching and ideological and political
    education integration mode based on deep learning Behavior feature extraction
    method of college students’ social network in sports field based on clustering
    algorithm Evaluation model of multimedia-aided teaching effect of physical education
    course based on random forest algorithm Venture financing risk assessment and
    risk control algorithm for small and medium-sized enterprises in the era of big
    data Interactive 3D reconstruction method of fuzzy static images in social media
    The impact of public health emergency governance based on artificial intelligence
    Optimal loading method of multi type railway flatcars based on improved genetic
    algorithm Special Issue: Evolution of Smart Cities and Societies using Emerging
    Technologies Data mining applications in university information management system
    development Implementation of network information security monitoring system based
    on adaptive deep detection Face recognition algorithm based on stack denoising
    and self-encoding LBP Research on data mining method of network security situation
    awareness based on cloud computing Topology optimization of computer communication
    network based on improved genetic algorithm Implementation of the Spark technique
    in a matrix distributed computing algorithm Construction of a financial default
    risk prediction model based on the LightGBM algorithm Application of embedded
    Linux in the design of Internet of Things gateway Research on computer static
    software defect detection system based on big data technology Study on data mining
    method of network security situation perception based on cloud computing Modeling
    and PID control of quadrotor UAV based on machine learning Simulation design of
    automobile automatic clutch based on mechatronics Research on the application
    of search algorithm in computer communication network Special Issue: Artificial
    Intelligence based Techniques and Applications for Intelligent IoT Systems Personalized
    recommendation system based on social tags in the era of Internet of Things Supervision
    method of indoor construction engineering quality acceptance based on cloud computing
    Intelligent terminal security technology of power grid sensing layer based upon
    information entropy data mining Deep learning technology of Internet of Things
    Blockchain in distribution network faults Optimization of shared bike paths considering
    faulty vehicle recovery during dispatch The application of graphic language in
    animation visual guidance system under intelligent environment Iot-based power
    detection equipment management and control system Estimation and application of
    matrix eigenvalues based on deep neural network Brand image innovation design
    based on the era of 5G internet of things Special Issue: Hybrid Fuzzy Systems
    for Mobile Robots and Their Applications IoT-enabled edge computing model for
    smart irrigation system Convex optimization for additive noise reduction in quantitative
    complex object wave retrieval using compressive off-axis digital holographic imaging
    Special Issue: Cognitive Cyber-Physical System with Artificial Intelligence for
    Healthcare 4.0. Auxiliary diagnosis study of integrated electronic medical record
    text and CT images A hybrid particle swarm optimization with multi-objective clustering
    for dermatologic diseases diagnosis An efficient recurrent neural network with
    ensemble classifier-based weighted model for disease prediction Design of metaheuristic
    rough set-based feature selection and rule-based medical data classification model
    on MapReduce framework Special Issue: Human-Centred Artificial Intelligence for
    Web 4.0 Construction of an IoT customer operation analysis system based on big
    data analysis and human-centered artificial intelligence for web 4.0 Human-centered
    artificial intelligence-based ice hockey sports classification system with web
    4.0 Subjects Architecture and Design Arts Asian and Pacific Studies Business and
    Economics Chemistry Classical and Ancient Near Eastern Studies Computer Sciences
    Cultural Studies Engineering General Interest Geosciences History Industrial Chemistry
    Islamic and Middle Eastern Studies Jewish Studies Law Library and Information
    Science, Book Studies Life Sciences Linguistics and Semiotics Literary Studies
    Materials Sciences Mathematics Medicine Music Pharmacy Philosophy Physics Social
    Sciences Sports and Recreation Theology and Religion Services For Journal Authors
    For Book Authors For Librarians Rights & Permissions Publications Publication
    types Open Access About Contact Career About De Gruyter Partnerships Press FAQs
    Social Facebook Instagram LinkedIn Twitter YouTube Winner of the OpenAthens Best
    Publisher UX Award 2022  Help/FAQ Privacy policy Cookie Policy Accessibility Terms
    & Conditions Legal Notice © Walter de Gruyter GmbH 2024 Cookie information We
    only use necessary cookies to be able to offer you our web services to the full
    extent. In our Cookie Policy you can find more details about all cookies we use
    and for what purposes. Close"'
  inline_citation: '>'
  journal: Journal of Intelligent Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A secure framework for IoT-based smart climate agriculture system: Toward
    blockchain and edge computing'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
