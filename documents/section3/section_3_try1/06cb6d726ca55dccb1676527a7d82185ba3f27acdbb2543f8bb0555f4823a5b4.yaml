- analysis: '>'
  authors:
  - Anand G.
  - Vyas M.
  - Yadav R.N.
  - Nayak S.K.
  citation_count: '1'
  description: 'Real data plays a fundamental role in determining various features
    related to the collection site, such as monitoring, controlling, predictions,
    etc. Several systems in the Internet of Things (IoT) environment produce millions
    of data from the sensing node, and transmitting each of the data is costly in
    terms of bandwidth requirements, energy consumption, and protecting data from
    being corrupt or from potential threats such as man-in-the-middle attacks. In
    many environmental applications such as agriculture, the absolute change in the
    consecutive data points is usually very small (we call it slow changing environment).
    So, there is a need for a system that can predict the next data point within a
    predefined tolerable limit, then transmitting each data point can be avoided.
    To address this issue, we proposed an analytical prediction algorithm using estimations
    (APAEs). The algorithm is deployed and runs simultaneously in the three layers
    of architecture: sensing, fog, and cloud layers. The algorithm predicts the next
    data sensed by the sensor. If the difference between the actual sensed data point
    and the predicted data point is beyond the predefined tolerance, then the sensed
    value is sent to the fog node and further to the cloud; otherwise, the estimated
    value is accepted. We have implemented the proposed algorithm on a real testbed
    and also tested it on two data sets. We compare the amount of data points transmitted
    with the state of the state-of-the-art scheme. We also highlighted the reduction
    in energy consumption and high accuracy of our algorithm on the two data sets
    and a real testbed.'
  doi: 10.1109/JIOT.2023.3321466
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 11 Issue: 5 On Reducing Data Transmissions in Fog-Enabled LoRa-Based
    Smart Agriculture Publisher: IEEE Cite This PDF Garv Anand; Mayank Vyas; Ram Narayan
    Yadav; Sanjeet Kumar Nayak All Authors 1 Cites in Paper 115 Full Text Views Abstract
    Document Sections I. Introduction II. Literature Review III. Architecture IV.
    Analytical Prediction Algorithm Using Estimations V. Results and Evaluation Show
    Full Outline Authors Figures References Citations Keywords Metrics Footnotes Abstract:
    Real data plays a fundamental role in determining various features related to
    the collection site, such as monitoring, controlling, predictions, etc. Several
    systems in the Internet of Things (IoT) environment produce millions of data from
    the sensing node, and transmitting each of the data is costly in terms of bandwidth
    requirements, energy consumption, and protecting data from being corrupt or from
    potential threats such as man-in-the-middle attacks. In many environmental applications
    such as agriculture, the absolute change in the consecutive data points is usually
    very small (we call it slow changing environment). So, there is a need for a system
    that can predict the next data point within a predefined tolerable limit, then
    transmitting each data point can be avoided. To address this issue, we proposed
    an analytical prediction algorithm using estimations (APAEs). The algorithm is
    deployed and runs simultaneously in the three layers of architecture: sensing,
    fog, and cloud layers. The algorithm predicts the next data sensed by the sensor.
    If the difference between the actual sensed data point and the predicted data
    point is beyond the predefined tolerance, then the sensed value is sent to the
    fog node and further to the cloud; otherwise, the estimated value is accepted.
    We have implemented the proposed algorithm on a real testbed and also tested it
    on two data sets. We compare the amount of data points transmitted with the state
    of the state-of-the-art scheme. We also highlighted the reduction in energy consumption
    and high accuracy of our algorithm on the two data sets and a real testbed. Published
    in: IEEE Internet of Things Journal ( Volume: 11, Issue: 5, 01 March 2024) Page(s):
    8894 - 8905 Date of Publication: 11 October 2023 ISSN Information: DOI: 10.1109/JIOT.2023.3321466
    Publisher: IEEE Funding Agency: SECTION I. Introduction With the growing interest
    and demand for intelligent agriculture, there is a need to convert traditional
    agricultural land to smart one [1]. Since most of the agricultural land is located
    in remote places, there is a need for new technologies to make them smart. For
    smart farming, low-cost, and resource-constraint sensors are placed across the
    agricultural field. To provide continuous connectivity for data communication,
    there must be a suitable and reliable technology for data communication over long
    distances and, at the same time, consume less energy. There are many protocols
    ranging from covering the personal area network (PAN) to wide-area network (WAN).
    The PAN wireless protocols include Bluetooth, wireless fidelity (WiFi), Zig-Bee,
    etc. WAN wireless protocols include Sigfox, long range (LoRa), long-term evolution
    (LTE), Narrowband-Internet of Things (NB-IoT), etc. In particular, LoRa, a relatively
    new communication technology, uses long waves to work over long distances [2],
    [3]. With the advent of various Internet of Things (IoT) and communication technologies,
    traditional agriculture fields can be converted to smart agricultural land [4].
    Presently, cloud-based infrastructures are being utilized to support various smart
    agriculture applications and data processing, wherein the data from smart sensors
    in the agricultural field is transmitted to the cloud over the Internet and is
    stored and processed in the cloud for decision making [1], [5], [6]. Though cloud-based
    infrastructures certainly offer enormous processing power and storage capacity,
    there are two key limitations that need to be addressed when used in the context
    of smart agriculture: 1) sensor data transmitted over the Internet requires continuous
    Internet connectivity, consumes high bandwidth, and incurs delays. In many developing
    countries there are huge agricultural lands that are cut off from Internet connectivity
    and 2) since IoT devices must transmit data continuously to the cloud for storage,
    processing, and decision making, the energy of battery-powered IoT devices is
    quickly drained. These limitations of cloud-based infrastructure for smart agriculture
    can be overcome with the help of fog computing [7]. However, building a cloud-assisted
    smart agriculture system presents several challenges, including high latency and
    bandwidth consumption and its difficult in rural areas where frequent Internet
    disconnections usually occur. Various shortcomings of IoT devices and infrastructure
    in the present-day literature are as follows. The power required in transmitting
    data is comparatively larger than the power required in sensing data by the sensor
    [8]. Many a time, a nearly static system or system with nearly constant dynamics
    (the difference between two consecutive data values is very small) like the temperature
    or humidity or soil moisture that changes very slightly generates a large amount
    of data and when transmitted by sensors to cloud over a large area consumes a
    large amount of power. Agricultural-related data tends to be homogeneous and change
    slowly over time [9]. Fig. 1 shows the data collected over a 2.5-h time frame
    from our real testbed (details about the real testbed are mentioned in Section
    V-C). It distinctly illustrates the gradual fluctuations in both temperature (in
    °C) and humidity (in %). These data patterns align with the hallmark of slow-moving
    dynamics commonly observed in agricultural environments. The sensing node has
    computation limitations due to the less processing power and energy restriction.
    LoRa technology facilitates long-range data communication. However, during airborne
    message transmission, data susceptibility to corruption or loss can occur due
    to channel characteristics, environmental factors, or collisions. To enhance resistance
    against noise, LoRa technology provides various spreading factors. While SF12
    represents a potent spreading factor, it necessitates extended airtime. Moreover,
    even in dense environments, these signals can be subject to corruption [10], [11].
    Fig. 1. Temperature (in °C) and humidity (in %) variation with iterations. Show
    All LPWAN stands for low-power WAN, which is a type of wireless communication
    technology designed for the IoT. LPWANs provide long-range, low-power connectivity
    for IoT devices, the LPWAN protocol includes Sigfox, NB-IoT, random phase multiple
    access (RPMA), and long-range WAN (LoRaWAN). The LPWAN is able to achieve large
    distances and it operates within the sub-GHz range through CSS modulation. LoRa
    technology is resistance to interference, owing to the linear variation of its
    chirp signal’s frequency over time. These chirp signals promptly utilize the accessible
    bandwidth, leading to a lower power consumption compared to alternative LPWAN
    technologies [12]. To address the issue of high power consumption, we use a LoRa-enabled,
    fog-based smart agriculture infrastructure and deploy an estimation algorithm
    that will reduce the quantity of data transferred from sensors to fog and further
    from fog to cloud. The architecture consists of three layers: 1) sensing layer;
    2) fog layer1; and 3) cloud layer [13]. Our aim is to reduce the number of data
    transmissions from the sensing layer to the fog layer within an accuracy threshold
    called tolerance denoted by ϵ . This will help in increasing the lifetime of deployed
    sensors in the field. To achieve the objective, we deploy a prediction algorithm
    [analytical prediction algorithm using estimation (APAE)] at all three layers.
    A sensor node transmits the sensed data to the fog node only if the error (difference
    between predicted and actual value) is beyond the predefined threshold or tolerance.
    Different events (such as water run-offs) in a large field cause each ED at different
    locations of the field to report different values at different times [14]. APAE
    is of a decentralized nature which can accommodate the natural heterogeneity of
    a large agricultural field. By allowing each end node (ED) to process data independently,
    the algorithm can capture the spatial variations and time-varying dynamics across
    the field. This capability is crucial for the accurate prediction of various environmental
    parameters. The contributions of this article are as follows. This article proposes
    an algorithm that predicts agricultural and IoT data without extensive computing
    power or lengthy historical data. This is particularly advantageous in energy-constrained
    IoT settings, enabling real-time predictions with minimal computational demands.
    Holistic Integration: Deploying APAE across all three layers of the IoT architecture—end
    device, fog layer, and cloud—streamlines data transmission. This integration reduces
    the number of transmitted data points, optimizing resource utilization, ensuring
    data consistency, and enhancing responsiveness. Empirical Validation: Our empirical
    validation, conducted through real-world testbeds and comparative analyses, demonstrates
    APAE’s superiority over existing methods. These concrete results substantiate
    APAE’s real-world applicability and efficiency. This article has been organized
    as follows. The literature review has been discussed in Section II. In Section
    III, the architecture for our work is described. The proposed APAE algorithm is
    described in detail in Section IV. Results, evaluation, and comparative study
    about APAE on open-source data sets and real testbeds are described in Section
    V. Finally, this article is concluded in Section VI. SECTION II. Literature Review
    As per the literature, data reduction techniques fall into three categories, data
    compression, data forecasting, and in-network processing [5], [20], [21]. The
    data compression techniques encode the data, thus reducing the size of the data
    [15]. In the forecasting technique, the data is predicted in the sensing node,
    the fog server, and at times in the cloud layer too. The predicted data is compared
    with the actual measured data and if found to have deviated from the predetermined
    range then, the data is sent; otherwise, the predicted value is used [9]. In case
    of in-network processing, the data is processed in the intermediate layer and
    the processed data is sent instead of the raw data [22]. Many state-of-the-art
    methods have been employed to reduce the data before transmitting it to the cloud.
    Koteich et al. have exploited the spatiotemporal correlation between neighboring
    nodes to reduce the number of captured frames in [22]. Ismael et al. [23] addressed
    the issues of network bandwidth, network energy consumption, and cloud storage
    in their study. They proposed an approach that operates within the network and
    consists of two layers. The initial layer, known as the data filtering layer,
    focuses on filtering data using two techniques: 1) data change detection and 2)
    identifying deviations between actual observations and their estimated values.
    Additionally, this layer identifies erroneous sensor readings by calculating the
    correlation among sensor readings. The second layer, the data fusion layer, employs
    the minimum-mean-square error technique to enhance data reliability following
    the filtering process. Yu et al. [24] employed a method that leverages fog computing
    to reduce data volume. The method is divided into two parts. The first part involves
    modeling the data based on a multivariate normal distribution, while the second
    part incorporates the utilization of the Kalman filter. This filter with identical
    parameters is implemented in both the fog and cloud platforms. If the projected
    value surpasses the specified range, the observations are then transmitted to
    the cloud. On the contrary, Fathy et al. [25] proposed an adaptive approach for
    data reduction that is based on the least-mean square (LMS). Their approach is
    based on a dual LMS filter, one deployed at the source and the other at the fog
    server. Both [24] and [25] rely on caching the data. However, the proposed algorithm
    does not cache data from the source. Salim and Mitton proposed a data reduction
    technique based on a data correlation technique by applying the Pearson correlation
    coefficient functions and equations in WSN implemented for agriculture to detect
    any abnormal situation in the meteorological data in [16]. They showed a reduction
    of more than 88% of the overall transmitted data considering the temperature and
    the humidity of two sensor nodes. Taneja et al. [18] introduced an approach centered
    around fog requirements for the examination of distributed IoT data. The proposed
    solution is formulated through mathematical modeling. The method they suggest
    employs a dissection strategy to disseminate the analysis task. This dissection
    technique is rooted in a query template, within which a learning approach is employed
    to accumulate instances in a summation form. The programming model based on map-reduce
    can be employed for any summation-form algorithm, enabling the distribution of
    computational tasks and analysis. The study employed the Linear Regression algorithm
    as a summation form to partition the analytical workload across multiple nodes.
    By utilizing this scheme, each fog node executes summation-based operations on
    the received IoT data, after which the aggregated results are conveyed to either
    the cloud platform or another fog node. The literature has presented various machine-learning
    approaches aimed at data reduction through data prediction. Many of these methods
    focus on capturing data correlation, primarily utilizing techniques, such as Pearson
    correlation and its variations, auto regression model, long short-term memory
    (LSTM) networks, and convolutional network techniques [26], [27], [28]. In order
    to predict and train the model, a big amount of data is needed, which makes it
    difficult to be done at the energy-limited sensor nodes. Among the aforementioned
    techniques, different authors have suggested diverse strategies. Some proposed
    conducting the processing at the sink, while others presented complex solutions
    that may pose challenges for low-power sensor nodes. Certain approaches focused
    primarily on prediction techniques without emphasizing methods to simultaneously
    enhance data reduction while maintaining accuracy. On the other hand, alternative
    methods explored the correlation between multiple parameters to achieve increased
    data reduction, often employing intricate systems and equations. In Table I, we
    presented a comparative study of different related works based on various aspects
    like 1) reduction approach; 2) novel concept; 3) domain; 4) advantages; and 5)
    disadvantages. In this article, we are interested in data processing starting
    at the end node and extending it to the cloud with fog in the intermediate. We
    consider different possible error factors, such as environmental factors, measurement
    errors, etc., in the algorithms and integrated trend variations in prediction.
    TABLE I Comparisons of Various Related Works SECTION III. Architecture We used
    a three-tier architecture, which includes the sensing layer, the fog layer, and
    the cloud layer as shown in Fig. 2. The developed algorithm is executed on all
    the layers. Sensing Layer: In IoT, the data about the parameters are collected
    from the sensors that are placed remotely. These groups of sensors are responsible
    for periodically sensing the data and transmitting it to the fog computing layer.
    This layer includes sensors, microcontrollers, actuating devices, etc. Fog Layer:
    The fog layer is an extended architecture of the cloud layer by using edge devices
    to compute, store, analyze, and communicate locally between the smart end devices
    and the data centers of cloud computing. It brings processing and intelligence
    close to the source of data. It is a bridge between the edge sensing layer and
    the cloud layer. In the present architecture, the fog layer also includes a network
    server and an application server. Cloud Layer: The cloud is a centralized system
    that is accessible from anywhere. All the complex computations are usually done
    at this layer. The fog layer connects with the cloud through the Internet. Fig.
    2. Three-layered adopted architecture. Show All SECTION IV. Analytical Prediction
    Algorithm Using Estimations This section discusses a novel algorithm that estimates
    and predicts a sensor’s data point based on the current state of the system. Table
    II shows the symbols used subsequently. TABLE II Symbol Table The state of the
    system is captured using various errors, gain, and process noise. To predict the
    next value accurately, it is important to feed in input to the algorithm. But
    the major problem in the three-layer architecture lies in the fact that the data
    measured in the sensing layer is not available to the model running synchronously
    in the fog layer, and cloud. So to cater to this need, we derive a parameter that
    is computed based on the uncertainties in the system and process. This uncertainty
    will help us compute the input parameter which will be fed to our algorithm to
    estimate the current state and extrapolate it to predict the next state.2 The
    high-level idea of the algorithm is that it does the following tasks broadly at
    time n : 1) estimates the data points for the n th iteration at time n using the
    predicted value for the n th iteration at time n−1 and 2) and it also predicts
    the data points for the (n+1) th iteration at time n . The proposed algorithm
    executes in iterations and each iteration consists of the following three steps.
    Process of Determining Errors in the System: Determining the various errors in
    the system, that is, (the errors in the environment, our model, and the sensors)
    known as the process error, the estimation error, and the measurement error, respectively,
    are determined. The Process of Deriving Input Value for the Algorithm: Determining
    the input given to the model to estimate the current data point and predict the
    next data point. As per the above discussion, the major challenge of the current
    IoT architecture is the unavailability of the actual measured value from the sensor
    to predict the next value. So to address this challenge, the input to the algorithm
    is determined using the process error using this input the algorithm will predict
    and estimate the data points. The Process of Estimating the Current Data Point
    and Predicting the Next Data Point: This involves the steps of estimation of the
    current data point using the input values and the prediction of the previous iteration.
    In this, the algorithm also predicts the data points for the next iteration. Now,
    we discuss each component in detail. A. Process of Determining Errors in the System
    We have considered the following possible errors in the sensing environment (which
    include errors in sensing devices, errors in algorithm estimation, and errors
    in the environment). Process (Environment) Error: The uncertainty in the dynamics
    of the sensing environment is termed as process error. In the literature, it is
    also called plant noise, driving noise, dynamics noise, and system noise. We denote
    process noise by p . The process noise produces estimation errors. In a system
    with almost constant dynamics [9] (the difference between any two consecutive
    data points is very small), the uncertainty or deviation is usually the difference
    between the next measured value and the present value. We define (1) to compute
    the process error for a system. It is determined by finding the weighted mean
    of the top frequently occurring uncertainty.3 For instance, if d 1 , d 2 , d 3
    ,…, d N denote the top N occurred uncertainties with frequency of f 1 , f 2 ,…,
    f N , respectively, then the process error is given by p= ∑ i=1 N f i ⋅ d i f
    i . (1) View Source The process error will be used to determine the input to the
    system. Measurement Error: It is defined as the difference between true and measured
    values (the accuracy with which a device can measure correctly). In the proposed
    algorithm, we assume that the measured value is the true value and we assume that
    the measured error is a very small value (we believe that our sensors work correctly).
    We denote measurement error using r . Estimation Error: The estimation error depends
    on how close our estimation is to the correct measured value. In our case, we
    assume that the initial estimation error is close to zero (we have considered
    the initial estimation error 0.0001 in our experiment), the reason being that
    the measured value by the sensor is taken as an estimated value so the error is
    almost zero (we assume that our sensor is working accurately). The estimated error
    is then updated at each iteration by the algorithm itself (so only the initial
    value needs to be provided). The process noise produces estimation errors, which
    need to be catered to with utmost priority. We denote estimation error by e. At
    time n , the estimated error is first updated for the current iteration (called
    n th iteration) using (2), where e ^ n,n is called the measured measurement error
    for iteration n at time n , G n is APAE gain for iteration n at time n , and e
    n,n−1 is the predicted measurement error for iteration n at time (n−1) e ^ n,n
    =(1− G n )× e n,n−1 . (2) View Source After updating the current state estimate,
    we extrapolate to predict the estimation error for the next iteration using e
    n+1,n = e ^ n,n +p (3) View Source where e ^ n,n is the estimated value of the
    current estimation error at the n th iteration at time n . e n+1,n is the predicted
    value for the n+1 th iteration at time n , and p is the process error which will
    be calculated at the start of the algorithm. B. Determining the Input Value for
    the Algorithm In the IoT architecture, the proposed algorithm is running in the
    sensing and the fog layers, but the proposed algorithm requires input or the measured
    value (by sensors) to estimate and update the current state and predict the next
    state based on the sensors’ measured data points. Here is the main challenge in
    producing the measured value since the actual measured data point is not available
    to the algorithm running at the fog level. So we address this issue by introducing
    the concept of a process error as discussed above. The input value for the n th
    iteration at time n is derived as follows using either (4) or (5): inp_va l n,n
    = x n,n−1 ±p (4) View Source OR inp_va l n,n = m s n,n (5) View Source where x
    n,n−1 is the predicted data point by the algorithm for the n th iteration at time
    (n−1) , and m s (n,n) is the n th measured data point by the sensor s for at time
    n . The prediction value produced by the proposed algorithm depends upon the input
    value. The input to the algorithm can either be the current measured value of
    the sensor or the input value generated by the algorithm as per (4). The initial
    input to the algorithm is the measured value by the sensor, thereafter the input
    is decided by the algorithm. The input value to the algorithm must therefore be
    decided very precisely, in order to ensure that the predicted output data points
    by the algorithm are very close to the actual measured data points, we define
    an accuracy threshold, i.e., tolerance (denoted by ϵ ). Tolerance, in the context
    of the proposed APAEs, is a user-defined parameter [29] that defines the acceptable
    range within which predicted values are considered accurate. This parameter is
    vital for optimizing data transmission in IoT environments. When a predicted value
    falls within the predefined tolerance, data transmission is avoided, conserving
    bandwidth and energy. Conversely, when a predicted value exceeds this tolerance
    range, it triggers data transmission to ensure data integrity. This dynamic approach
    allows users to tailor the algorithm’s performance to their specific application
    needs, balancing data accuracy with resource efficiency. For instance, when the
    user sets a tolerance value, such as ±0.25, the algorithm’s decision-making process
    ensures that predicted values within this tolerance range are accepted, and no
    data transmission occurs. However, when the predicted value falls outside this
    predefined tolerance, the end node initiates data transmission to the fog node
    and the same to the cloud layer. We now discuss how the algorithm determines the
    input value at time n . For that, we need to discuss the criteria for when a sensor
    node needs to transmit the actual measured data points to the fog node. It depends
    on two criteria: 1) increasing or 2) decreasing pattern of measured data points.
    We use two markers + and −. For any two consecutive data points ( m s (n−1,n−1)
    , m s (n,n) ) ,where ( m s (n−1,n−1) denotes the measured value by the sensor
    at time (n−1) , and m s (n,n) ) represents the measured data points by the sensor
    at time n , respectively. We assign marker + if ( m s (n,n) )≥( m s (n−1,n−1)
    ) , else we assign − marker for consecutive data points. A sensor node will transmit
    the measured data points in the following two cases. If the marker is changed.
    If the predicted output data point ( x n,n−1 ) at time n−1 for the n th iteration
    by the algorithm is beyond ( m s n,n ±ϵ) then the sensor node needs to transmit
    the actual measured data to the fog layer, where m s (n,n) is the actual measured
    value by the sensor at the sensing layer at time n and ϵ is accuracy threshold.
    Now, the input value is determined using the following steps. It depends on whether
    the measured value is following the increasing trend or decreasing trend, and
    to get that we need to compare the previously measured value with the present
    measured value. Since our system is of constant dynamics, this trend plays a very
    important role in determining whether the present process error p needs to be
    added or subtracted from the previously estimated value. If the marker is + then
    the next input will be inp_va l n,n = x ^ n,n−1 +p . If the marker is − then the
    next input will be inp_va l n,n = x ^ n,n−1 −p . In the case of predicted data
    point x n,n−1 =( x ^ n−1,n−1 ) is beyond ( m s n,n ±ϵ) , the next input is inp_va
    l n,n = m s n,n . C. Process of Updating the Current State and Predicting the
    Output for the Next Iteration After determining the input to the system, the next
    task is to update the current state and predict the data point for the next iteration
    (the next data points). The process is divided into two steps as follows: 1) updating
    the current state and 2) predicting the next state. State Update Equation: To
    estimate the current state of the system, we combine two variables. The prior
    state estimate or the current state predicted at the previous state ( x n,n−1
    = x ^ n−1,n−1 ). The Input Value (inp_val_n,n) : The input value to the algorithm
    at the n th iteration is determined as mentioned in Section IV-B. Then, we update
    the estimation error value as follows: e ^ n,n =(1− G n )× e n,n−1 . (6) View
    Source Next, we update the APAE Gain for the n th iteration at time n as follows:
    APAE Gain: G n = e n,n−1 e n,n−1 + r n . (7) View Source The algorithm will estimate
    the current data point (i.e., n th data point) using predicted data points at
    time n−1 for the n th iteration. It will be updated as follows: x ^ n,n = x n,n−1
    + G n ×(inp_va l n,n − x n,n−1 ). (8) View Source G n is a weight equation. It
    is the ratio of the estimation uncertainty to the sum of estimation and measurement
    uncertainty. If measurement uncertainty is high, the APAE gain is low. So due
    to this APAE gain in (8), it is clear that if the APAE gain is high then x n,n
    depends more on the input value (inp_va l n,n ) and if the value of G n is low
    then it depends more on the prior state. So G n puts a weight on the two-parameter,
    i.e., the inp_va l n,n or x n,n . Since we are solely relying upon the measurement
    for estimating the input value, so we must choose values such that the value of
    APAE gain is high. So that the next value of estimation is more toward the input
    value, which is close to the measured value from the sensor. State Predict Equation:
    State Extrapolation Equation: The state extrapolation determines the relation
    of the input parameter with the output parameter, since in the proposed algorithm,
    we assume that the system is of very slow dynamic, we predict that the (n+1) th
    estimate at the n th time is same as the n th estimated value computed at time
    n x n+1,n = x ^ n,n . (9) View Source Prediction of Estimation Error: In the proposed
    algorithm the succeeding estimation variance parameter is found by adding the
    process noise because, for a system with constant dynamic, the error in estimation
    is due to the process error e n+1,n = e ^ n,n +p. (10) View Source The aim of
    the proposed algorithm is to reduce the amount of data being sent from the sensing
    layer to the fog layer, which in turn reduces the energy consumed by sensor nodes.
    A pseudocode of the proposed algorithm is shown in Algorithm 1. Algorithm 1 Steps
    Involved for the n th Iteration Show All An example of the first two iterations
    is described in Sections IV-D and IV-E. D. Iteration 0 or Initial State Initializing
    the accuracy threshold ϵ value by the user. In our case, we assume ϵ=0.5 . Determining
    the process error for the system as per (1). It is denoted as p . Suppose that
    p=0.1 . Assigning the measurement error for the system r=0.001 . It is denoted
    by r and it remains constant throughout the process. Estimating the current state
    of the system, i.e., x ^ 0,0 (at time 0, we estimate the 0th iteration data points).
    At iteration 0, we set it equal to the sensor’s measured value m s , i.e., x ^
    0,0 =50.2 , (we assume that m s 0,0 =50.2 ). Initialize the estimation error at
    time 0 and for the 0th iteration e ^ 0,0 =0.0001 (initially, this value is close
    to zero because we assign the estimated data point the same as the measured data
    point). Predicting the next data point x 1,0 , i.e., the data point of the 1st
    iteration at time 0. Since the system is of slow-moving dynamics so set x 1,0
    = x ^ 0,0 =50.2 . Predicting the next estimation error e 1,0 using (10), i.e.,
    estimation error for the 1st iteration at time 0, e 1,0 = e ^ 0,0 +p=0.0001+0.1=0.1001
    . E. Iteration 1 Determining the input value to the system inp_valu e 1,1 . Suppose
    that the measured data point from the sensor is 50.45 in iteration 1. Now, we
    will compute the input value as per the discussion in Section IV-B, so inp_va
    l 1,1 =50.2+p=50.3 . This |50.45−50.3|<ϵ , so the input value will be 50.3 instead
    of 50.45. So, inp_valu e 1,1 =50.3 . Measurement error r constant throughout 0.001.
    Determining the APAE Gain G 1 =[ e 1,0 /( e 1,0 +0.001)]=[0.1001/(0.1001+0.001)]=0.99010
    . Now, the algorithm computes the current estimated state of the system at the
    1st iteration, i.e., x ^ 1,1 =50.2+0.99010×(50.3−50.2)=50.299 . Updating the estimation
    error e ^ 1,1 =(1−0.99010)×0.1001=0.000990 . Prediction of the next data point
    x 2,1 = x ^ 1,1 =50.299 . Prediction of the estimation error e 2,1 =0.000990+0.1=0.10099
    . Algorithm 2 presents the steps involved in the APAE algorithms. Algorithm 2:
    Steps Involved for the nth Iteration Determining the input for the n th iteration
    as per the discussion in above section denoted by inp_va l n Assigning the value
    to the measurement error ‘r’. The measurement error is constant throughout the
    whole process. Determining the APAE Gain G n for the n th  iteration. Estimating
    x ^ n,n for the n th  iteration. Estimating the estimation error for the system
    e ^ n,n . Predicting the next state based on the estimation. Since the system
    is of constant dynamics x n+1,n , i.e., predicting the next data point based on
    the present estimated value. *** Note that there is a difference between the estimated
    and predicted value. Estimated value refers to the computation of the sensor’s
    measured value whereas predicted value is guessing the next sensor value. Predicting
    the estimation error for the next state e n+1,n = e ^ n,n +p In order to understand
    the impact of other factors, it is necessary to provide testimony for the real-world
    evaluation of the algorithm. In this next section, the performance of the proposed
    algorithm is evaluated using data sets and a real-world testbed. SECTION V. Results
    and Evaluation In this section, we present a comprehensive analysis of the results
    obtained from the evaluation of our proposed APAE. We begin with describing the
    evaluation parameter, and then discuss about the data sets and the comparisons
    done and finally, we present the results associated with our real testbed. A.
    Performance Metrics This section highlights some important metrics that were used
    to evaluate the performance of the proposed APAE. Data Reduction: It is defined
    as the ratio of the data not sent to total data. The equation is provided as follows:  Data
    Reduction ( in %)=(1−  Data transmitted   Total data  )×100. (11) View Source
    Power Measuring: Power conservation is an important parameter in the context of
    IoT for increasing device lifespan, enhancing scalability, cost savings, etc.
    So, power consumption analysis is also done for the proposed algorithm APAE. The
    power is measured using the power current voltage formula as shown in Power(P)=Voltage(V)×Current(I).
    (12) View Source Here, power is measured in Watts, voltage is measured in Volts,
    and current is measured in Ampere. Since the sensor node is working at a fixed
    voltage of 5 V, using (12), we can determine the amount of power consumed. If
    one data sample requires a 1 Watts of power then N data samples will require (
    a 1 ×N) Watts of power. In the following discussion, we consider only the transmission
    power, i.e., the power required to transfer the packets from sensing to fog node,
    as the power consumption for transmitting is much greater than that for sensing
    [8]. Fig. 3(a) shows the schematic for the power measurement. The Keysight E3631A
    is used to measure the current drawn by the transmitting module. Arduino, sensors,
    and the LoRa that constitute the end node. Accuracy: To determine the accuracy
    of APAE, the mean absolute error (MAE) metric was chosen which is given by MAE=
    ∑ n=N n=1 (|PredictedValue -ActualValue|) N . (13) View Source Here, N denotes
    the total number of data points. MAE is well suited for accuracy assessment because
    it captures the magnitude of errors in predictions. This is particularly relevant
    for APAE, as it allows us to quantify how closely the algorithm’s predictions
    align with the actual sensor measurements. Higher MAE values indicate larger prediction
    errors, while lower value indicates less prediction error. Fig. 3. Performance
    study of the Soria data set and Cartagena data set and schematic for power measurement
    and experimental testbed. (a) Schematic for power measurement. (b) Data reduction
    comparison for the Soria data set using (RLE encoding). (c) Data reduction comparison
    for the Soria data set using (Huffman coding). (d) Different comparison techniques
    for the Cartagena data set using (RLE). (e) Different comparison techniques for
    the Cartagena data set (using Huffman). (f) Schematic of the experimental testbed.
    Show All B. Simulation Results on Different Data Sets We have used two data sets
    to compare APAE with the state-of-the-art data reduction schemes present in the
    literature. We establish a baseline assumption that the reference research paper
    [9] transfers all data from the sensing layer to the fog layer, i.e., 100% data
    transfer from sensing to fog layer, and thereafter fog layer applies various machine
    learning algorithms in combination with data compression schemes like run length
    encoding (RLE) or Huffman coding for reducing the data from fog to cloud layer.
    The machine learning algorithms that were used are as follows: 1) K -nearest neighbor
    (KNN) algorithm; 2) Gaussian mixture model (GMM); 3) hierarchical clustering (Hierarchical);
    4) spectral clustering (Spectral); and 5) decision trees (Tree). By adopting this
    standardized benchmark, we align the comparison on equitable grounds, allowing
    us to elucidate the fundamental distinctions in data reduction strategies across
    diverse IoT architecture layers. Notably, the APAE-based architecture encompasses
    a twofold data reduction process: first, from the sensing layer to the fog layer,
    and second, from the fog layer to the cloud. This reduction approach is accentuated
    by our algorithm’s ability to exclusively transmit data that falls within the
    predefined tolerance (ϵ) thresholds. The two data sets based on the agriculture
    domain are discussed as follows. Soria Data Set [30]: The first data set originates
    from Cuerda del Pozo in Soria, Spain, during the Summer of 2013. It contains readings
    of humidity and temperature, collected every minute, resulting in 1440 data points
    per day. These measurements were captured using a Vaisala weather transmitter
    model WXT-520, as documented by Aguilar in 2014 and 2017. This data set provides
    us with a detailed and high-frequency view of the conditions. Cartagena Data Set
    [31]: Our second data set comes from Cartagena, Spain, during the Spring of 2020.
    It focuses on soil conditions. A total of 1561 samples, each taken every 5 min.
    Each sample includes measurements of soil temperature and moisture at different
    depths. This data set helps us understand how the soil behaves over time and depth.
    Its recent time frame and comprehensive nature make it an important asset for
    our study. These two data sets offer us different insights into the environment.
    The Soria data set’s frequent measurements of air humidity and temperature give
    us a closer look at rapid changes, while the Cartagena data set’s soil measurements
    over time and depth provide a more detailed understanding of soil characteristics.
    By combining these data sets, we gain a well-rounded view that is crucial for
    the agriculture domain. Data Reduction: Based on (11) and the above claim of standardizing
    the benchmark, a comparative study on various state-of-the-art data reduction
    schemes versus APAE has been presented. Fig. 3(b) demonstrates a comparison of
    various data reduction schemes, i.e., Machine Learning in addition to RLE compression
    techniques versus APAE at different tolerances on the Soria data set. Fig. 3(c)
    demonstrates a comparison of various data reduction schemes, i.e., Machine Learning
    in addition to Huffman Coding compression techniques versus APAE at different
    tolerances on the Soria data set. Fig. 3(d) demonstrates a comparison of various
    data reduction schemes, i.e., Machine Learning in addition to RLE compression
    techniques versus APAE at different tolerances on the Cartagena data set. Fig.
    3(e) demonstrates comparisons of various data reduction schemes, i.e., Machine
    Learning in addition to Huffman Coding compression techniques versus APAE at different
    tolerances on the Cartagena data set. Power Reduction: We conducted a thorough
    power consumption analysis within the Soria and Cartagena data sets, considering
    various tolerance (ϵ) levels (0.25,0.5,0.75, and 1.0). This assessment allowed
    us to gain valuable insights into the impact of APAE on power utilization in real-world
    IoT scenarios. By comparing power consumption with and without the application
    of APAE across diverse tolerance levels, we acquired a detailed understanding
    of the algorithm’s significance. From Table III it is clearly visible that the
    power reduction on applying APAE in the Soria’s data set at tolerance (ϵ=0.25)
    is 90.18% and at tolerance (ϵ=1.0) power reduction is 99.98%. This analysis served
    as a compelling demonstration of the importance of APAE in enhancing energy efficiency
    within deployments. Table III shows the detailed analysis, with each row denoting
    the data set’s name along with the parameter (temperature, soil moisture, humidity,
    and soil temperature) associated, and each column represents the different tolerance
    level (0.25,0.5,0.75, and 1.0). Accuracy: The accuracy metric of the APAE for
    the mentioned data set at different tolerance is given in Table IV. Each row of
    the table presents the data set’s name along with the parameter associated (temperature,
    humidity, soil moisture, and soil temperature) and each column represents different
    tolerance value associated. The mean absolute relative error was chosen as a metric.
    It is clearly visible from Table IV that as the value of tolerance increases the
    MAE also increases. TABLE III Power Consumption in Watt for Soria and Cartagena
    Data Sets At Different Tolerance (ϵ) TABLE IV MAE for the Soria and Cartagena
    Data Sets at Different Tolerance C. Experimental Testbed To comprehensively assess
    the performance of APAE within a real-world context, we established an experimental
    testbed. Our setup featured two distinct end nodes, with each node equipped with
    three essential sensors: 1) humidity; 2) temperature; and 3) soil moisture. For
    temperature and humidity measurements, DHT11 sensor was deployed. Additionally,
    to gauge soil moisture levels effectively, a capacitive soil moisture sensor was
    utilized. The frequency of sensing was at an interval of 5 min for a period of
    14 days. Approximately, 4030 data points each for temperature, humidity, and soil
    moisture were measured for each end node. So a total of 12 090 data points from
    each end node was sensed. The end node consists of first the microcontroller,
    second the sensor (that is attached to the microcontroller), and third, the transmitting
    module that is attached to the microcontroller. The microcontroller used is an
    Arduino Mega 2560 board based on the ATmega2560. The transmitting module is a
    Dragino Arduino LoRa shield based on Semtech SX1276/SX1278 chip. Fig. 4 shows
    the sensor node that is deployed in the field. Fig. 4. Sensor node deployed in
    the field. Show All The fog server constitutes the Gateway, Gateway bridge, and
    network server. The Gateway consists of the Dragino PG-1302 (10-channel LoRa Integrated
    Circuit) along with the Raspberry Pi 4 (Model B, 8-GB RAM). Gateway Bridge is
    a service that converts LoRa packet forwarder protocols into a ChirpStack common
    data format. The network server used was the “Chirpstack Opensource LoRaWAN server.”
    The cloud service used was Microsoft Azure Cloud. The schematic for the field
    is shown in Fig. 3(f). Here, Device1 and Device2 represent the end nodes, placed
    diagonally. The length of the field is 20 feet and the width is 10 feet. The crop
    grown in the field is Lady Finger. The evaluation of APAE’s performance in the
    real testbeds was guided by considering the parameters as described in the above
    section, i.e., data reduction, power measurement, and accuracy of the data predicted.
    The results related to the real testbed are elaborated as follows. Data Reduction:
    The reduction in data was quantified in terms of percentage reduction, providing
    a clear measure of the algorithm’s efficiency in optimizing data transmission.
    Table V represents the data reduction (in percentage) for each end node at different
    tolerance values. In the present research work, we have taken standard values
    of tolerance as 0.25,0.5,0.75, and 1.0. Each row in the table shows the end node
    and the columns in the table presents the data reduction of each parameter (temperature,
    humidity, and soil moisture) at different tolerance levels. It is clearly visible
    from Table V that as the value of tolerance increases the percentage of data reduction
    also increases, for instance, for end node 1, the data reduction in temperature
    at ϵ=0.25 is 75.0% and that for ϵ=1 is 92.62%. Power Consumption: We conducted
    a comprehensive analysis of power consumption for our real testbed. This exploration
    aimed to validate the practical feasibility of the proposed APAE in minimizing
    energy utilization within IoT deployments in smart agriculture. Table VI shows
    the comparison of power consumed while APAE is deployed and without APAE. Table
    VI highlights on how the application of APAE in real testbeds with different tolerance
    levels has helped achieve power reduction, for instance, at tolerance ϵ=0.25 ,
    End Node 1 achieves the power reduction of 59.95% while the same node for ϵ=1
    achieves the power reduction of 82.89%. Accuracy: This metric provides a quantitative
    measure of the algorithm’s performance by assessing the disparity between the
    predicted values generated by APAE and the actual sensor readings. Table VII presents
    the MAE for each sensor reading at the tolerance 0.25,0.5,0.75, and 1.0, respectively,
    where the two rows represent the sensor nodes, and the columns represent the different
    parameters (temperature, humidity, and soil moisture) at different tolerance (ϵ)
    . It is clearly visible that for the lower value of tolerance (ϵ) the MAE is low
    and for the high value of tolerance, MAE has a higher value. TABLE V Data Reduction
    Using APAE in Real Test Bed for End Node 1 and End Node 2 for Different Parameters
    and Different Tolerance Expressed in Percentage TABLE VI Power Consumption In
    Real Testbed TABLE VII Accuracy in Terms of Mean Relative Error at Different Tolerance
    in the Real Testbed SECTION VI. Conclusion In this work, we proposed an algorithm
    that achieves significant improvements toward addressing major crucial challenges
    in the field of smart agriculture. First, our algorithm focuses on reducing the
    number of data points transmitted from the sensing layer to the fog and further
    to the cloud layers. APAEs have helped in gaining a significant reduction in the
    data transmission, as it has helped attain a data reduction of 93.69% in Soria’s
    data set for ϵ=1.0 and a data reduction of 93.425% for the real testbed. Second,
    it aims to minimize the energy consumption of sensor nodes. Through the proposed
    APAE, we have successfully demonstrated the effectiveness of optimizing data transmission
    and energy management in IoT systems. Through comprehensive analysis, we have
    showcased that APAE in Soria’s data set has effectively reduced the power consumption
    to 45.7085 W compared to 2486 W at ϵ=1.0 when the whole of the data was sent.
    Similarly, in the real testbed, the power was reduced to 113.34 W compared to
    677.55 W when the entire data was being sent. APAE consistently exhibited promising
    results in providing accurate results, as it can be noticed that for Soria’s data
    set, the MAE was as low as 0.097 for ϵ=0.25 and similarly MAE for the real testbed
    was as low as 0.088 for ϵ=0.25 . Thus, the detailed performance evaluation and
    results obtained have proven APAE to be of significant use case in the field of
    smart agriculture. Authors Figures References Citations Keywords Metrics Footnotes
    More Like This Internet of Things and Wireless Sensor Networks for Smart Agriculture
    Applications: A Survey IEEE Access Published: 2023 Improving Health Care by Help
    of Internet of Things and Bigdata Analytics and Cloud Computing 2020 International
    Conference on Advances in Computing and Communication Engineering (ICACCE) Published:
    2020 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: On Reducing Data Transmissions in Fog-Enabled LoRa-Based Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dhifaoui S.
  - Houaidia C.
  - Saidane L.A.
  citation_count: '0'
  description: In the current era of agricultural robotization, it is necessary to
    use a suitable automated data collection system for constant plant, animal, and
    machine monitoring. In this context, cloud computing (CC) is a well-established
    paradigm for building service-centric farming applications. However, the huge
    amount of data has put an important burden on data centers and network bandwidth
    and pointed out issues that cloud-based applications face such as large latency,
    bottlenecks because of central processing, compromised security, and lack of offline
    processing. Fog computing (FC), edge computing (EC), and mobile edge computing
    (MEC) (or flying edge computing FEC) are gaining exponential attention and becoming
    attractive solutions to bring CC processes within reach of users and address computation-intensive
    offloading and latency issues. These paradigms from cloud to mobile edge computing
    are already forming a unique ecosystem with different architectures, storage,
    and processing capabilities. The heterogeneity of this ecosystem comes with certain
    limitations and challenges. This paper carries out a systematic review of the
    latest high-quality literature and aims to identify similarities, differences,
    and the main use cases in the mentioned computing paradigms, particularly when
    using drones. Our expectation from this work is to become a good reference for
    researchers and help them address hot topics and challenging issues related to
    this scope.
  doi: 10.1007/s12243-023-00997-0
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Annals of Telecommunications Article
    Computing paradigms for smart farming in the era of drones: a systematic review
    Published: 18 November 2023 Volume 79, pages 35–59, (2024) Cite this article Download
    PDF Access provided by University of Nebraska-Lincoln Annals of Telecommunications
    Aims and scope Submit manuscript Sourour Dhifaoui, Chiraz Houaidia & Leila Azouz
    Saidane  268 Accesses Explore all metrics Abstract In the current era of agricultural
    robotization, it is necessary to use a suitable automated data collection system
    for constant plant, animal, and machine monitoring. In this context, cloud computing
    (CC) is a well-established paradigm for building service-centric farming applications.
    However, the huge amount of data has put an important burden on data centers and
    network bandwidth and pointed out issues that cloud-based applications face such
    as large latency, bottlenecks because of central processing, compromised security,
    and lack of offline processing. Fog computing (FC), edge computing (EC), and mobile
    edge computing (MEC) (or flying edge computing FEC) are gaining exponential attention
    and becoming attractive solutions to bring CC processes within reach of users
    and address computation-intensive offloading and latency issues. These paradigms
    from cloud to mobile edge computing are already forming a unique ecosystem with
    different architectures, storage, and processing capabilities. The heterogeneity
    of this ecosystem comes with certain limitations and challenges. This paper carries
    out a systematic review of the latest high-quality literature and aims to identify
    similarities, differences, and the main use cases in the mentioned computing paradigms,
    particularly when using drones. Our expectation from this work is to become a
    good reference for researchers and help them address hot topics and challenging
    issues related to this scope. Similar content being viewed by others Mobile Edge
    Computing Based Internet of Agricultural Things: A Systematic Review and Future
    Directions Chapter © 2021 Towards a New Architecture: Multi-agent Based Cloud-Fog-Edge
    Computing and Digital Twin for Smart Agriculture Chapter © 2023 Fog computing
    and Internet of Things in one building block: a survey and an overview of interacting
    technologies Article 07 May 2021 1 Introduction Today, we are witnessing climate
    change, a health pandemic, and a political conflict which have a major impact
    on food security. According to FAO (Food and Agriculture Organization), the world
    needs to increase food production by almost 50% by 2050 [4]. To meet this demand,
    farmers, scientists, and agricultural industries are exploring new modern technologies
    such as the Internet of Things (IoT), artificial intelligence (AI), cloud computing
    (CC), edge computing (EC), flying edge computing (FEC), big data, and unmanned
    aerial vehicles (UAVs). The ecosystem that emerged from this combination is now
    called smart farming, smart agriculture, or also precision agriculture, which
    is all about collecting the right data at the right time so that the use of resources
    can be optimized by considering the requirements of every inch of farmland [16]
    Today’s trends and statistics point out a considerable evolution towards the robotization
    of the agricultural sector. According to CISCO [1], more than 70 billion devices
    will be connected by the end of 2025. According to Polaris Market Research Analysis
    [2], the global agriculture drones market was valued at USD 1.26 billion in 2021
    and is expected to grow at a CAGR (compound annual growth rate) of 29.1% during
    2018–2030. The adoption of these technologies has made agriculture more industrialized
    and technological, bringing multiple benefits such as increased quantity and quality
    products, reduced labor costs, and reduced resource consumption. However, the
    massive use of connected objects and digital services induces a huge amount of
    data from farms. Ensuring the best processing, protection, and traceability of
    this data has become an issue for both farmers and companies in the agricultural
    sector. For that purpose, prominent metaverse (Facebook, Microsoft, Google, Apple,
    and Amazon) are using massive Cloud Datacenters (CDCs) to provide effective user
    services to process this data in a proficient and trustworthy manner. In the majority
    of cases, data from farms is analyzed, processed, and stored in secure clouds.
    The main advantage of this is to make them accessible from any part of the globe.
    But, processing and memorizing this massive volume of data at local nodes have
    been deemed critical challenges, especially when using artificial intelligence
    (AI) based systems to extract and exploit valuable information. In fact, the centralized
    processing mode of cloud computing has limited bandwidth, high latency, and high
    power consumption. Eventually, the goal of having massive storage capacity with
    efficient scalability has recently been the driving force behind new emerging
    research efforts dealing with edge, fog, and flying edge computing paradigms.
    Fog nodes, in an effort to alleviate processing at the data center level, perform
    light user requests without having to send them to the cloud while edge nodes
    provide an innovative service to completely execute user requests at the nearest
    level to the user. As the research in fog, edge, and flying edge computing is
    purposefully growing, there is a need to assess the existing research related
    to these emerging paradigms to find out the possible future directions and research
    opportunities related to this field. This work presents a fresh manifesto on modern
    computing paradigms to identify further opportunities and future directions for
    emerging paradigms compared with the cloud computing paradigm. It expands our
    previous work [3] by discussing recent valuable works based on flying edge computing
    as well as the resulting challenges. Our contribution further includes, through
    a systematic review methodology, a synthetic taxonomy on the advantages and limits
    of each architecture. The remainder of this paper is organized as follows: The
    background on computing concepts is presented in Section 2 including smart farming,
    Internet of Drones concepts, and a detailed comparison between the discussed computing
    paradigms. Section 3 draws the review methodology conducted in this survey. Section
    4 describes a systematic literature review of novel research works related to
    the mentioned architectures to sum up, in Section 5, with a synthetic overview
    of related open issues. Finally, Section 6, concludes the ongoing work. 2 Background
    on computing paradigms Before delving into the main parts of this paper, a general
    overview that summarizes the different paradigms mentioned will be given. Each
    paradigm will be carefully discussed concisely for clarity and consistency. The
    reason for discussing these paradigms is to provide an overview that will guide
    the understanding of the research objectives of this paper, mainly the information
    life cycle and each paradigm architecture. The computing technologies in an IoT
    environment may offer services for end-users, which can improve the system’s overall
    performance with higher throughput in real time. The developing rate of IoT-based
    smart devices or sensors requires mobility with extensive geographical distribution,
    which is only possible nowadays through computing technologies [5]. 2.1 Smart
    agriculture Smart agriculture is an emerging concept that emphasizes the use of
    advanced technologies such as IoT and AI to improve productivity. It is based
    on digital tools to collect and analyze various real-time information in order
    to better understand and analyze the physiological crops needs and to develop
    decision support tools for the user. The whole picture is as follows: sensors
    and/or drones with sensing capacities are deployed over the field to monitor specific
    parameters such as soil moisture, soil fertility, air temperature, smoke, crop
    growth factors, movement of livestock, and presence of pests. All these collected
    data are valuable resources for use in data-driven services and decision support
    systems (DSS) in agricultural platforms and will be then processed in powerful
    servers to extract and analyze valuable information for a better use of resources
    and an increasing production [6]. Precision farming can be viewed as comprising
    four stages: data acquisition, interpretation, analysis, and control. To successfully
    deploy and run a smart agriculture system, the farmer needs to implement various
    cutting-edge technologies across these stages to experience perceived benefits.
    To achieve these goals, we may face several challenges. For example, we should
    consider setting up a communication network that can integrate a limited number
    of sensing nodes across a large area of farmland. This will require third-party
    network provisioning or setting up a private network consisting of access points
    and uplinks to a private backhaul network, which channels all the data traffic
    to centralized monitoring software or an analytics head-end system. While data
    plays a central role in smart agriculture, data management is an ongoing challenge
    for many farmers and agribusinesses alike. Even a small farm gathers and stores
    tons of data to inform related operations and marketing decisions. To overcome
    this challenge, a smart approach to data processing, management, and storage must
    be deployed. That is why the agriculture industry is rapidly adopting the big
    data concept as a key solution for a successful precision agriculture system.
    2.2 Internet of Drones (IoD)/UAVs overview We strongly believe that IoT is a key
    technology in smart farming, through the use of multi-functional devices such
    as ground robots and drones. The Internet of Drones (IoD) has recently gained
    momentum due to its high flexibility in various complex scenarios. In fact, thanks
    to technical and practical advantages such as high maneuverability and wireless
    expansion capabilities, UAVs are successfully used in various application areas
    such as agriculture, search and rescue missions, surveillance systems, and many
    other civil utilization. These flying robots, in a wide range of applications,
    are used as first responder because of their fast, cost-effective, and safe deployment
    capabilities [7]. Further, with improved technology and installations like three-dimensional
    projects, UAVs are playing the pivotal part of airborne base stations in almost
    all emerging networks. Thus, the use of drones is expected to improve the performance
    parameters of various network architectures, such as reliability, connectivity,
    throughput, and latency. Because of their involvement in a wide range of daily
    operations, UAVs have become the best candidates to achieve meaningful results
    in precision farming [9]. Due to these capabilities, UAVs can be used throughout
    the life cycle of crops in similar functions as soil health examinations [30],
    colony [10], factory counting [11], crop health monitoring [13], irrigation [39],
    spraying fertilizers and pesticides [14], and estimating crop yield. With precise
    and accurate sensors, drones can determine water stress, low crop nutrients, and
    poor soil health. By implementing a drone program, farming can become more economically
    and environmentally efficient by targeting the areas that need the most care.
    This drone-based technology has become a point of interest for all concerned agriculture
    professionals, including farmers, agronomists, crop insurance companies, and researchers.
    Nevertheless, the adoption of drone networks brings also several issues related
    to the inherent unreliability of the wireless medium, battery life, and high mobility,
    which can lead to frequent topology changes. This explains the really large amount
    of workshops generated in the recent literature on correlated topics. Here, we
    briefly cite some challenges of remote farming using UAVs in the literature: Deployment
    and path planning: Initially, drones should be deployed in such a manner to best
    cover the farming field. Then, once deployed, these drones should carry out their
    functions in a cooperative manner and delegate surveillance and data collection
    tasks to each other to optimize the number of drones used for a given application.
    Communication: Drones are generally used to monitor farming areas, to connect
    sensors, and to collect valuable data. This task requires the establishment of
    air-air and air-ground exchanges which are carried over wireless links that are
    most often fluctuating, unstable, and subject to ambient interference. Real-time
    requirement: Depending on the targeted farming application, drones can be called
    upon to provide instantaneous and real-time response times. This aspect represents
    a challenge in the sense that it requires advanced processing and transmission
    capabilities. 2.3 Cloud computing overview The US National Institute of Standards
    and Technology (NIST) defines “Cloud Computing” as a model for enabling convenient,
    on-demand network access to a shared pool of configurable computing resources
    (e.g. networks, servers, applications, and services) that can be rapidly provisioned
    and released with minimal management effort or service provider interaction. On
    another hand, a successful IoT system requires high performance, reliability,
    efficiency, and scalability. Here, we came up with the idea of merging cloud computing
    and the Internet of Things, and this allows systems to be automated in a cost-effective
    way that supports real-time control and data monitoring. These two technologies
    are considered the real motivators that are driving the agricultural industry
    to transition to smart agriculture to improve operational efficiency and productivity.
    As the cloud is mainly formed by centralized servers also called data centers,
    it is, generally, quick to deploy, inexpensive to maintain, and practical when
    data need to be centrally controlled. The main advantage of the cloud is that
    the stored data can be accessed from anywhere in the world. The cloud can also
    handle a very large number of analyses at the same time and can manage very complex
    neural networks thanks to very high computing power. However, when dealing with
    a massive amount of data, these cloud nodes are mostly constrained by their high
    failure rate, security risks, and access delay. Data processing at the central
    level causes considerable time delays that affect the overall system quality of
    service (QoS), especially regarding the response time requirement for latency-sensitive
    applications and intermittent Internet connectivity [18]. On the same perspective,
    according to IDC forecasts [64], 50% of the Internet of Things with more than
    50 billion terminals will face network bandwidth limitations, and 40% of data
    will need to be analyzed, processed, and cached at the edge of the network. The
    size of the edge computing market will exceed trillions, and it will become an
    emerging market that is evenly matched with cloud computing. 2.4 Fog computing
    overview The fog computing architecture comprises various components, including
    gateways, routers, and cloud services used to distribute computing resources between
    data devices and the cloud or any other data center in a distributed computing
    process. This computing approach was first introduced by Flavio Bonomi at CISCO
    in 2012. According to [23], fog computing is a highly virtualized platform that
    provides computing, storage, and networking services between end nodes and traditional
    cloud computing data centers, typically located at the backhaul network, but not
    exclusively. The basic idea behind fog is to bring the cloud down to the scale
    of the farm so that the user’s computation demand is served at their proximity
    rather than performed in the distant cloud. Moreover, fog computing is primarily
    introduced for applications that need real-time processing with low latency since
    the data generated by the terminals is pre-processed in decentralized mini-computing
    centers beforehand, rather than being directly uploaded to the cloud. The fog
    nodes are context-aware and support common data management and communication services.
    The heterogeneity of fog servers comprises shared locations with hierarchically
    structured blocks. They can be organized in clusters, either vertically to support
    isolation or horizontally to support federation or relative to fog nodes’ latency
    distance to the smart end devices. Fog computing can also be used to develop low
    latency networks between analytic endpoints and devices, which can lead to reduced
    bandwidth requirements compared to cloud computing. However, fog computing is
    dependent on multiple links for transferring data from the physical asset chain
    to the digital layer, which can be potential points of network failure. Moreover,
    this type of infrastructure is still rare and especially reserved for large industrialized
    farms because it requires greater investment in network and IT architecture. Fog
    also requires graphic computers to be installed on the farm. The maintenance of
    an infrastructure like fog is more restrictive because not all interventions can
    be managed remotely. 2.5 Edge computing overview The emerging paradigm of edge
    computing (EC) employs novel techniques to address the challenges of ultra-low
    latency, high data rates, broad bandwidth, and optimal user experience. The EC
    architecture processes data closer to the source, often on the same device that
    collects and analyzes the data, enabling fast and seamless results. The proximity
    to the data source offers significant business advantages, with the biggest benefit
    being the ability to control critical processes in real time. EC also supports
    decentralized data storage and processing, eliminating bandwidth limitations and
    network outages that could adversely affect important business decisions. Similar
    to fog computing, edge computing does not require huge bandwidth. Only the analysis
    results are sent to a cloud-hosted on the Internet. This approach is interesting
    because it addresses Internet connection problems in certain rural areas (persistence
    of white areas). However, unlike fog computing, edge computing does not require
    the installation of a graphic computer on the farm since the edge nodes already
    have computational capacities. Moreover, devices that use edge computing can provide
    near real-time analytics that can help optimize performance and increase uptime.
    These technologies are experiencing strong growth, particularly for facial recognition
    applications associated with mask-wearing detection or temperature measurement.
    However, the deployment cost of EC is higher than that of conventional sensors/cameras
    since the edge nodes are already equipped with computers and use more advanced
    technology. Additionally, edge nodes equipped with edge computing technology cannot
    process the same data stream as a computer (fog) or supercomputers (cloud) due
    to their limited capabilities. EC is also less scalable compared to fog computing
    and supports little interoperability. This could make IoT devices incompatible
    with certain cloud services and operating systems. In addition to these disadvantages,
    edge computing does not support resource pooling, and maintenance is more cumbersome
    than in conventional computing as certain problems may require physical maintenance
    on the farm. 2.6 Flying edge computing overview Flying edge computing (FEC) has
    emerged as a promising solution for meeting the quality of service (QoS) requirements
    of the Internet of Things (IoT) and mobile devices, which often have limited resources
    in terms of processing cycles and power. In fact, with the advent of drones, these
    flying robots are used to form flying edge platforms, also called mobile edge
    computing (MEC) solutions. Such platforms have been employed, on the one hand,
    to improve the intensive computation and offloading bottlenecks between end nodes
    and centralized data servers and, on the other hand, to offload processing restrictions
    of simple fixed sensors [22]. This FEC paradigm can be presented as a server-edge
    network supported by a cloud computing backend layer close to IoT and mobile device
    networks. Flying edge computing aims to extend flying cloud computing for real-time
    IoT applications. The edge layer distributes the computational load by processing
    data locally to the edge device level without cloud intervention. Therefore, switching
    data processing and storage to the edge layer can significantly reduce latency.
    Hybrid solutions can be modeled hierarchically, where more computationally intensive
    tasks are executed in the gateway (the fog) and less computationally intensive
    tasks are executed in the end devices (fog/edge/flying edge). The collected and
    processed data is still delivered to the cloud, where it is made available to
    the user. As illustrated in Fig. 1, hybrid solutions are conceptually modeled
    with regard to a hierarchical view. Fig. 1 Hierarchical view of computing Full
    size image 2.7 Differences and similarities of computing paradigms Unlike the
    cloud, FC, EC, and FEC share common features relative to the way they bring the
    intelligence services closer to the users and how they offer customers with lower
    latency services while making sure, on the one hand, that highly delay-tolerant
    applications would achieve the required QoS and, on the other hand, lowering the
    overall network load [48]. That is why it is not trivial to assess the main differences.
    This subsection attempts to look into similar common features and differences
    between the above paradigms, which can be summarized in Table 1. Table 1 Main
    differences between cloud, fog, edge and flying edge computing Full size table   First,
    we are trying to synthesize information to provide a general comparison between
    edge computing and flying edge computing, since they are very close: Edge computing
    involves processing and analysis of data on fixed devices located at the edge
    of the network, while mobile edge computing involves processing and analysis of
    data on mobile devices (UAVs, tractors, robots, mobile actuators,...) that can
    move to different locations. Flying edge computing is a specific type of MEC using
    UAVs. Edge computing is suitable for applications that require low latency, real-time
    processing, and reduced network bandwidth, while flying edge computing is more
    useful for applications that require real-time data processing and analytics in
    remote or hard-to-reach locations such as forest fire detection and wildlife monitoring.
    Edge computing typically involves deploying computing resources on fixed and powerful
    devices such as gateways or edge servers, while flying edge computing implements
    computing programs on drones with regard to their hardware capabilities. Compared
    to fixed edge servers, the performance of flying edge nodes is strongly constrained
    by their available energy which requires continuous monitoring of the available
    resources before tackling a given task and even seeing the implementation of energy-saving
    solutions to extend their lifetime. To cover large geographical areas, flying
    edge nodes is practically better and cheaper than deploying the high number of
    fixed edge servers, as connecting these edge servers is challenging because of
    unreliable and fluctuating communications. When using UAVs, the network is much
    more fault-tolerant, since the tasks initially allocated to the failed drone can
    be easily redistributed to the other available drones. This fault tolerance is
    more difficult to manage with fixed nodes because it requires human intervention
    to repair or change the faulty node. A focus on the flying edge concept compared
    with traditional edge and cloud computing is represented in Fig. 2. Overall, the
    different computing techniques exhibit the same view of providing QoS to customers,
    but each one has a separate set of features that makes it original. Notably, the
    fog paradigm is designated the most effective and reliable system to better handle
    the security and privacy challenges encountered. However, some features of the
    variants of the edge paradigm, such as decentralization, mobility, fast data processing
    and analysis, and bandwidth-free constraints, have made it a promising solution
    to real-time IoT applications. Particularly, for farming applications requiring
    UAV remote sensing, the FEC offers several features facilitating the deployment
    and efficient functioning of such applications. Along with high mobility and scalability,
    UAVs can offer many potential opportunities in terms of enabling services such
    as pervasive connectivity, aerial intelligence, self-maintenance capabilities
    for communications, and sensor deployment. Therefore, UAVs are, generally, used
    for several roles such as airborne base station subsystem (BSS), data collectors,
    relay nodes, edge and cloud computing servers, and power suppliers to support
    IoT applications. These features are likely to extend network coverage and provide
    diversified and flexible intelligence facilities for new potentialities in modern
    IoT applications. Among the most relevant benefits of FEC are as follows: Scalability:
    The system can be rapidly expanded in terms of coverage area, number of sensor
    devices, number of drones in operation, and services provided. Flexibility: The
    system is flexible enough to adapt to changes, required services, or monitored
    areas. Fast deployment: The mobile and autonomous aspect of UAVs makes the flying
    edge easily deployed in remote areas to facilitate IoT services. It is a turnkey
    system that can be used where there is no communication infrastructure. Power
    effectiveness: As hosted computing services are provided by flying robots (UAVs)
    which are easily recharged, this scheme is considered to have extremely high-performance
    efficiency for IoT nodes. Communication possibilities: UAVs can potentially adopt
    many recent cellular and non-cellular wireless communication networks to control
    the UAV and to enhance the coverage and latency services. The most prominent communication
    protocols that can be used with UAVs are IEEE 802.11 (Wi-Fi), IEEE 802.16 (WiMax),
    IEEE 802.15.4 (LRWPAN), cellular networks (3G/4G), IEEE 802.15.1 (Bluetooth),
    LoRaWAN (LoRa), SigFox, and narrowband IoT (NB-IoT). Typically, the choice of
    communication protocol depends on the desired achievable throughput, power consumption,
    range, implementation cost, reliability, delay, and security. Like edge computing,
    MEC shortens the distance between where data is produced, collected, and analyzed
    in the cloud. Processing that is typically offloaded to the data center is now
    done virtually by mobile edge clouds, which collect, store, and process information
    from nearby wireless devices within the cloud network. Being close to the device
    and bypassing the user enables significant performance improvements, including
    higher bandwidth, lower latency, and faster response times and decision-making.
    Cloud, fog, and edge have limitations regarding computing capacity, coverage range,
    storage resources, and latency. Using a single computing paradigm is not enough
    to fulfill the diverse requirements of a huge number of traditional and heterogeneous
    IoT devices. It depends on the use case, but a user might be faced with computation-sensitive
    and latency-sensitive applications at the same time. In this case, the user would
    require the services provided by both cloud and edge or fog [17]. This is where
    a federation between computing paradigms can play a key role in resolving such
    issues. Fig. 2 Similarities and differences between computing techniques Full
    size image Each of these paradigms has its unique features and applications. For
    instance, cloud computing is widely used in the deployment of web applications
    and data storage. Edge computing is employed in real-time applications such as
    autonomous vehicles, industrial automation, and smart homes. Fog computing is
    used in applications that require decentralized computing, such as precision agriculture.
    Flying edge computing, on the other hand, is a relatively new concept that combines
    edge computing with UAVs. It is mainly used for real-time data processing and
    analytics in remote or hard-to-reach locations, such as environmental monitoring,
    wildlife conservation, and disaster management. A comparative overview of these
    computing techniques with details about the pros and cons of each one is given
    in Table 2. Table 2 The comparison of cloud computing and other computing paradigms
    Full size table 3 Review methodology Over the past few years, several works have
    been proposed in the field of smart farming. The academic community has extensively
    analyzed this rich literature from multiple perspectives and with specific objectives
    in mind. In this review, our primary goal is to identify specific smart agriculture
    use cases that rely on a combination of cloud, fog, edge, and flying edge architectures.
    Our contributions in this work include (i) presenting a representative list of
    application domains based on the required computing architecture, (ii) investigating
    relevant works based on a multi-layered architecture with a focus on main contributions/achieved
    objectives and components of the proposed solutions, and (iii) providing a comparative
    summary of the pros and cons of each computing architecture based on the latest
    results listed in this review. Finally, we also discuss the impending challenges
    and open issues in computing paradigms-based smart agricultural applications.
    To create a review that meets publication requirements and specific considerations
    associated with each step, we followed various standards and guidelines suggested
    for literature reviews, such as those in [15, 19, 54], and we adopted the Preferred
    Reporting Items for Systematic Reviews and Meta-Analyses (PRISMA) methodology
    to systematically review the existing literature on smart farming with IoT in
    the era of drones. Figure 3 shows the workflow and the basic steps of our review
    process which include (1) designing the review, (2) conducting the review, (3)
    analyzing, and (4) writing up the review. Fig. 3 The review process of our work
    Full size image Hereafter, we explain one by one the key steps followed to carry
    out this survey with relative details concerning the number, the quality, and
    the filtering of the references used. 3.1 Designing the review Faced with a plethora
    of literature on digital precision agriculture, it was necessary to restrict our
    field of study to a specific and targeted topic. The development of wireless technologies
    and the drone market motivated us to address the prospects for the advent of these
    key components in modern agricultural applications. Through the keywords used
    in our research, we found well-ranked surveys that we decided to include in this
    paper. For example, in the review [19], the authors identify the main devices,
    platforms, network protocols, and data processing technologies for IoT-based smart
    farming applications. This work reports an increasing trend towards the integration
    of complementary technologies that rely on cloud and big data computing for processing
    large amounts of data, with a particular use of artificial intelligence and image
    processing techniques. As this study was focused on the sensing and the data collection
    layer without a specific concern on multi-layered computing solutions, our work
    may extend this review by including the analysis of computing paradigms’ usage
    in smart agriculture as a way to deal with challenges associated with traditional
    centralized cloud solutions such as high communication latency, lack of support
    for real-time reaction to detected events, and large bandwidths. The paper [64]
    presents a review of the application of EC in the Agricultural Internet of Things
    and investigates the combination of EC with AI, blockchain, and virtual/augmented
    reality technologies. The challenges of edge computing task allocation, data processing,
    privacy protection, and service stability in agriculture are reviewed, but their
    study was limited to edge computing, and no comparison was made between edge and
    other computing paradigms. The authors in the survey [20] provide an extensive
    review of the use of smart technologies in agriculture based on relevant research
    works. They elaborate an extensive state-of-the-art of new technologies for smart
    agriculture including, the Internet of Things, cloud computing, machine learning,
    and artificial intelligence. Moreover, this survey discusses the components used
    in different architecture models and briefly explores the communication protocols
    used to interact from one layer to another. Finally, the challenges of smart agriculture
    and future research directions are briefly pointed out in this article, with a
    particular concern on climate impact. However, the paper does not provide any
    comparative analysis of the architectural design of the reviewed solutions and
    does not include fog-based solutions. This survey [18] is a systematic review
    of cloud, fog, and edge computing applications and architecture components from
    research articles published between 2015 and 2021. The study carried out reports
    a high focus on applying the cloud-fog-edge combinations in order to get the benefits
    of a truly connected and smart farming concept. We intend to augment such a study
    with more fresh papers and introduce the flying edge paradigm as a trendy advanced
    solution capable of solving many of the challenges raised. In the paper [21],
    the authors review the latest research on IoT and UAV technology applied in precision
    agriculture. Besides an overview of the main principles of the “intelligent” perspective
    in the process of cultivation so-called “Agri-Food 4.0,” the authors present the
    role of UAV technology in smart agriculture by analyzing the applications of UAVs
    in various scenarios and their utility in complex agricultural environments. Moreover,
    a brief description of their AREThOU5A project is outlined where emerging developments
    in the field of Internet of Things (IoT), low-power wide-access radio technologies,
    energy harvesting, and machine learning are exploited to promote rational use
    of water resources in agriculture. This review, however, does not address either
    the architectural design or the data computing concern of the reviewed solutions.
    Also, an in-depth comparative analysis is also still required. Fig. 4 Stepwise
    process to select the articles reviewed in this survey Full size image This review
    [8] presents a thorough examination and bibliometric analysis of the use of drones
    in the agricultural domain. The main objective of the paper is to provide a comprehensive
    overview of the existing literature on drone applications in agriculture and to
    identify significant patterns, research areas, and influential contributors in
    this field. For that purpose, the authors conducted a systematic review of research
    articles obtained from various databases. They categorized the studies based on
    their primary focus, such as crop monitoring, pest detection, irrigation management,
    and yield estimation. The paper highlights the potential advantages of employing
    drones in agriculture, including enhanced operational efficiency, cost-effectiveness,
    and environmental sustainability. In addition to the literature review, the authors
    employed bibliometric techniques to analyze the collected and reviewed articles.
    They examined citation networks, co-authorship patterns, and keyword co-occurrence
    to gain insights into the research landscape and identify emerging trends. The
    findings of this bibliometric analysis showcased the remarkable growth of research
    in this area, with a substantial increase in the number of publications over time.
    The analysis also revealed key research topics such as remote sensing, image analysis,
    and precision agriculture, which have received significant attention within the
    field. Moreover, the analysis identified influential authors and institutions
    that have made noteworthy contributions to the advancement of drones in agriculture.
    Being aware that integrating UAVs in smart farming faces obstacles related to
    technology selection and deployment, particularly in data acquisition and image
    processing and the lack of standardized workflows, the authors of the paper [92]
    address these challenges by conducting a comprehensive review of recent UAV applications
    in precision agriculture. They explore common applications, UAV types, data acquisition
    techniques, and image processing methods to provide a clear understanding of each
    technology’s advantages and limitations. They aim to delve into the theoretical
    background and related work of UAV, cloud, IoT, big data, and AI approaches in
    smart farming and precision agriculture. They identified numerous research queries
    (RQ) for which they gave findings from the latest state of the art with a detailed
    classification. This paper [19] presents a comprehensive survey on mobile edge
    computing nodes (ECNs) and identifies some open research questions related to
    their intrinsic characteristics. In particular, mobile ECNs are classified into
    four categories, namely aerial, ground vehicular, spatial, and maritime nodes.
    For each specific group, any mutual basic terms used in the state-of-the-art are
    described, different types of nodes employed in the group are reviewed, the general
    network architecture is introduced, the existing methods and algorithms are studied,
    and the challenges that the group is scrimmaging against are explored. Moreover,
    the authors provide a deep study of the integrated architectures according to
    each use case. Finally, the research gaps, that are yet to be filled in the area
    of mobile ECNs, are discussed along with directions for future research and investigation
    in this promising area. Therefore, after a first scan of existing literature reviews
    and to clearly assess the scope addressed in our contribution, we limited our
    research question to the role of cloud, fog, edge, and flying edge computing combinations
    in smart farming, with a particular focus on the latest existing works dating
    from 2020 to 2023. Thus, after identifying the research question and considering
    general review methods, we designed a research strategy for tracking relevant
    proposals. This included the selection of search terms and suitable databases,
    as well as the decision on inclusion and exclusion criteria. Figure 4 shows the
    designed search strategy from different e-resources. In our study, we used the
    most popular scientific digital resources to obtain research papers. The articles
    were fetched from various digital libraries such as Elsevier, IEEE Xplore, Springer,
    Mdpi, and Google Scholar. The “Search string creation” and “Search keywords selection”
    have played an essential role in finding useful research papers from the literature.
    3.2 Conducting the review To conduct this review, we added the Zotero plugin to
    our browser to create a pool of selected articles. Zotero: is a free, easy-to-use
    tool to help us collect, organize, annotate, cite, and share research. It works
    as a personal research assistant in the browser, offering many interesting features
    such as automatically collecting citation information from websites, storage of
    portable document format (PDF), files, images, links, and entire pages, including
    saved searches and labeling them for better understanding and identification.
    After collecting an initial set of articles, we screened the texts to ensure that
    they met the inclusion criteria. We also performed an analysis of the references
    in the selected articles to identify other potentially significant articles. 3.3
    Analyzing the review At this stage, it is important to consider how the selected
    articles will be used for proper analysis. After selecting the final sample, standardized
    methods should be used to obtain relevant information from each item. This can
    include descriptive information such as author, year of publication, subject,
    or type of study, as well as effects and findings. It can also include a conceptualization
    of a particular idea or theoretical perspective. Importantly, this should be done
    according to the purpose and research question of the specific review. In this
    research, we aim to investigate and provide a review of existing research on cloud,
    fog, edge, and flying edge computing applications in the agricultural field. To
    achieve our goal, we adopted an analytical method to determine the type of information
    that needs to be abstracted to fulfill the purpose of the specific review and
    analysis. Once this is determined, we can decide on how to document and report
    this process. This step allows us to check the eligibility of articles after reading
    the full text and extracting relevant information. We will assess the quality
    of each article based on their relevance to the research question, the clarity
    of the research objectives, the soundness of the methodology, and the validity
    and reliability of the results. The information extracted from each article will
    be synthesized and analyzed to draw meaningful conclusions about the current state
    of research on cloud, fog, edge, and flying edge computing applications in agriculture.
    To begin writing, we prioritized clearly describing the process of designing and
    conducting the literature review, including how we collected, analyzed, synthesized,
    and reported the literature. We started by exploring and explaining key concepts
    and paradigms related to smart agriculture, followed by identifying commonalities
    and differences between computing paradigms. We then reviewed relevant surveys
    and articles, examining their main contributions and limitations, and identified
    potential future research directions and areas for contribution. Finally, we discussed
    notable challenges and potential solutions. This subsection focuses on trends
    in computational paradigms in the agricultural context, analyzing the yearly distribution
    of publications in selected journals and conferences that report on precision
    agriculture. In order to classify the existing proposals according to our original
    objective, we analyzed the selected articles and identified an omnipresent use
    of cloud computing, even in hybrid solutions involving fog and/or edge computing.
    There is also a notable trend towards the integration of an edge layer, specifically
    the flying edge, which aligns with economic trends in this direction. From a scientific
    contribution perspective, most of the reviewed papers focused on crop monitoring
    and resource management applications, with little attention paid to aqua farming.
    The main issues addressed in the selected articles were task offloading, energy
    consumption, and path planning. However, there were few works that addressed security
    issues and interference mitigation problems. Figures 5, 6, 7, 8 and 9 give a detailed
    overview of the reviewed papers by publishers, by rank, by computing paradigm,
    by application domain, and by addressed challenges respectively. Fig. 5 Distribution
    of research papers by publishers Full size image 4 Literature review The exploitation
    of UAVs in the field of precision agriculture, although beneficial and advantageous,
    brings new challenges and raises numerous issues according to the role of such
    UAVs (user, MEC server, or relay). Based on recent literature which is full of
    new contributions, we classify the works identified into eight categories according
    to the scientific problem targeted by the use of these drones, namely (1) latency
    and time optimization, (2) path planning, (3) task offloading and scheduling,
    (4) resource management, (5) networking and wireless communication, (6) security,
    (7) data processing, and (8) precision and optimized prediction. Fig. 6 Distribution
    of research papers by rank Full size image Fig. 7 Distribution of research papers
    by computing paradigms Full size image 4.1 Latency and time optimization The authors
    in [40] aim to develop a system that can collect, process, and analyze environmental
    data in real time, enabling timely decision-making and interventions in olive
    grove management. They specifically focus on latency-sensitive applications, where
    quick response times are crucial for effective monitoring and control. The proposed
    architecture leverages both cloud and fog computing paradigms to provide a scalable
    and flexible solution. Cloud computing offers the necessary computational power
    and storage capabilities, while fog computing brings computing resources closer
    to the data sources in the olive groves, reducing latency and enabling real-time
    data processing. By adjusting the latency dynamically, the architecture ensures
    that time-sensitive tasks related to environmental monitoring, such as irrigation
    control, disease detection, or pest management, can be performed efficiently.
    The system integrates various components, including sensors, data collection devices,
    fog nodes, cloud resources, and decision support systems, to create an end-to-end
    solution for time-sensitive environmental monitoring in olive groves. Fig. 8 Distribution
    of research papers by application domain Full size image Fig. 9 Distribution of
    research papers by challenges Full size image The experimental results captured
    the expected behavior and validated the effectiveness of the prototype in dealing
    with time-sensitive agricultural applications, procuring high throughput (around
    95% on average). The fog network effectively handles incoming traffic, and varying
    time intervals between sensor readings did not significantly impact the mean round-trip
    time (RTT). The fog devices, also, accurately estimate their traffic load and
    make targeted adjustments, resulting in successful load balancing within defined
    bounds. These findings support the claims made in the paper and demonstrate the
    potential of the system for practical field deployments in agricultural monitoring,
    but the biggest barrier and main takeaways of such works are the lack of a large-scale
    olive grove deployment. Limitations related to optimized energy consumption, challenges
    with nodes’ clock synchronization, and constraints regarding overall automation
    were also reported. These limitations provide insights into areas that could be
    further explored or improved upon in future research and development efforts.
    The paper [50] discusses the design and implementation of a system for sheep monitoring
    and tracking based on image processing techniques. The system involves equipping
    drones with various sensors and cameras to capture data related to the health,
    behavior, and location of sheep. The collected data is then processed and analyzed
    to provide valuable real-time insights for farmers. The novelty of this contribution
    lies in the ability to monitor large cattle over wide areas when ensuring real-time
    response time and very high precision. The authors of the paper present the hardware
    and software configuration for developing a drone, and the measurement results
    showed that the system can reliably (with an accuracy of 89–97%) detect sheep
    on a farm. One of the drawbacks raised by the proposed system was the high power
    consumption of the onboard companion computer used to run the image processing
    algorithms. Similarly, a UAV-based convolutional neural network (CNN) for recognizing
    and counting calves is proposed in [51]. The paper [36] proposes a monitoring
    system for aquaponics that incorporates IoT technology and edge computing. The
    main goal of the system, designed with miniaturization, modularization, and low-cost
    features, is to provide real-time monitoring and control for cultivation-breeding
    ratio research. The system can realize remote monitoring and intelligent control
    of parameters needed to keep fish and plants under optimal conditions. The system
    is modularized, which means it is composed of different components that work together
    to achieve overall functionality. It utilizes various IoT devices such as sensors
    and actuators to collect data from the aquaponics system, including parameters
    like temperature, pH level, water level, and nutrient concentration. These devices
    are connected to a central hub or gateway, which acts as an interface between
    the IoT devices and the edge computing system. The edge computing component plays
    a crucial role in the system by processing and analyzing the collected data locally,
    near the source of data generation. This enables real-time monitoring and control
    without relying solely on cloud-based processing, which can introduce latency
    and dependency on internet connectivity. By performing computations at the edge,
    the system can respond quickly to changes in the aquaponics environment and trigger
    appropriate actions or adjustments. The paper highlights the advantages of using
    edge computing in the context of aquaponics monitoring, including reduced latency,
    improved reliability, and enhanced scalability. It also discusses the modular
    nature of the system, which allows for flexible configuration and customization
    to meet specific requirements and scale the system as needed. The authors in [16]
    propose a system that combines cloud computing, flying edge computing, and UAV
    technology to enable smart agriculture. The goal of such work is to enhance the
    efficiency of agricultural operations through real-time data collection, analysis,
    and decision-making. The proposed platform is highly dynamic and flexible, so
    it can be deployed and can collect data quickly depending on the latency requirement
    for each use case. Most importantly, it can be used in tough terrains like the
    desert and hilly areas. A simulation was made to evaluate the performance of this
    cloud-connected flying edge computing system where multiple configurations, including
    local and remote IoT service calls, are involved. The response times of the service
    calls were recorded, and it was found that the flying edge machine exhibited the
    best response time, benefiting from the energy efficiency of end nodes. Furthermore,
    the average service lookup times were compared, and it was observed that services
    provided by the flying machine (UAV) to end nodes had significantly lower lookup
    times compared to services provided by the cloud through flying machines. This
    indicates that flying computing machines (UAVs) can offer faster service provision
    to IoT devices. 4.2 Path planning The paper [26] illustrates a case study for
    collaborative UAV-WSN operation in large-scale monitoring for precision agriculture.
    Key contributions are mainly in the design of optimized trajectories for UAV-enabled
    field data collection and for in-network data processing that allows efficient
    use of limited ground sensor network resources. Particularly, the authors propose
    combined segment and loiter tracking modes, which balance between path length
    and time spent in the neighborhood of a cluster head. Through multiple hierarchical
    data processing steps, the authors demonstrate the increasing quality of the extracted
    information, its timeliness, and lower network-wide latency for decision-making.
    The authors also mention the use of edge computing, which involves performing
    some of the processing tasks on the UAVs and WSNs themselves, to reduce the latency
    and improve the real-time responsiveness of the system. The potential drawbacks
    of the proposed system are related to the increased complexity of multi-level
    data processing, communication, and interoperability constraints between the aerial
    platform and the ground sensors. The paper does not address potential challenges
    associated with the use of UAVs and WSNs in precision agriculture, such as privacy
    concerns, regulatory issues, and the potential for system failure due to adverse
    weather conditions or other factors. A more thorough discussion of these challenges
    could help to ensure that the proposed system is practical and feasible in real-world
    scenarios. In this paper [27], Qayyum et al. developed a clustering-based trajectory
    design algorithm that aims to optimize the flight path of a UAV that flies across
    the fields to collect data, which are further transmitted to fog nodes for processing.
    The proposed model is based on two phases: the data collection phase where IoT
    sensors are deployed randomly to form a cluster based on their RSSI and the UAV
    calculates an optimum trajectory in order to gather data from all clusters and
    to offload this data to the nearest base station and data scheduling phase where
    the BS finds the optimally available fog node based on efficiency, response rate,
    and availability to send workload for processing. The authors also propose the
    use of machine learning algorithms, such as k-means clustering, to group farm
    areas with similar characteristics and optimize the UAV’s flight path for data
    collection. One potential limitation of this research is that the proposed trajectory
    design may be sensitive to changes in environmental conditions, such as weather
    patterns or seasonal variations. Additionally, they do not provide a detailed
    evaluation of their algorithm’s performance in real-world scenarios, which may
    limit the practical applicability of their approach. 4.3 Task offloading and scheduling
    The authors of the paper [95] propose a multi-UAV-assisted mobile edge computing
    (MEC) system targeting areas with a lack of base stations. In the considered system,
    multiple UAVs cooperate to provide a service to IoT devices. They formulate a
    non-linear optimization objective to minimize the energy consumption of a such
    system featuring a joint UAV deployment and task scheduling optimization algorithm.
    The UAV numbers, the hovering position of each UAV, and the best strategy for
    offloading and resource allocation were the principal optimization concerns of
    their solution. The optimization problem was simplified into two sub-problems
    based on the idea of a block coordinate descent algorithm and solved using the
    improved PADE and greedy algorithms. Experimental results demonstrate that the
    algorithm has positive convergence performance and can accomplish more tasks under
    the constraint of delay compared to two benchmark state-of-the-art algorithms.
    This study, however, is limited to the fixed flight height of the UAV and does
    not include scenarios, such as forests and city centers, with different heights
    of occlusion and where fixed UAV heights may collide. The work in [97] introduces
    a two-stage end-to-end deep reinforcement learning (DRL)-based smart agricultural
    system. In stage one, the authors propose ant colony optimization (ACO)-based
    deep Q-learning network (A-DQN) model for efficiently analyzing tasks such as
    irrigation scheduling, pest detection, soil monitoring, fire detection, field
    and soil monitoring, and crop growth monitoring. This ACO-DQN model offloads the
    task to either edge, fog, or cloud networking devices based on latency, energy
    consumption, and computing power. With the need for ultra-low latency, the authors
    create a mathematical model for smart agriculture task scheduling which balances
    both low latency and low energy consumption for time-critical tasks. They convert
    this model into a multi-objective optimization problem considering time delay
    and energy consumption. Then, once the task is offloaded to computing devices,
    the task of predicting and monitoring various agriculture activities is performed
    based on DRL models at a second stage. The proposed method is evaluated and compared
    to traditional deep Q-networks, and the experimental findings demonstrate a marked
    enhancement in terms of convergence speed, planning success rate, and path accuracy.
    The authors in [98] present a novel offloading model based on dynamic programming
    explicitly tailored for flying fog-based IoT networks based on 5G/6G technologies.
    The proposed algorithm aims to intelligently determine the optimal task assignment
    strategy by considering the mobility patterns of drones, the computational capacity
    of fog nodes, the communication constraints of the IoT devices, and the latency
    requirements. Extensive simulations and experiments were conducted to test the
    proposed approach compared to static edge-cloud architecture. The obtained results
    revealed significant improvements in latency, availability, and the cost of resources.
    4.4 Resource management The authors in [25] developed a novel optimization algorithm
    that aims to achieve a balance between energy consumption and quality of service
    (QoS) in a hierarchical fog-cloud computing network. The proposed algorithm minimizes
    the energy level among all nodes in the network while ensuring that the QoS requirements
    of all users are met. The proposed solution involves the use of fog nodes (small-scale
    computing devices located close to end-users) and cloud computing resources to
    support applications that require low latency and high bandwidth. The authors
    aim to provide a generic energy-efficient communication framework for hierarchical
    fog-cloud computing networks that can support a wide range of applications, such
    as Internet of Things (IoT) applications and smart city services. As a novelty,
    the authors also propose the use of the wireless power transfer concept (WPT)
    to provide energy to the fog nodes and reduce the need for battery replacement
    or recharging. Obtained results showed that the computing mode selection is the
    dominant factor affecting the system performance where local computing is considered
    a better choice for users with relatively poor channel gains while fog/cloud computing
    is considered a better choice for users with relatively good channel gains. One
    potential drawback of this research work is that the proposed algorithm may be
    computationally expensive and require a significant amount of processing power,
    which could limit its practical applicability in resource-constrained fog nodes.
    Additionally, the proposed framework may require significant changes to the existing
    communication infrastructure, which could be challenging to implement and may
    require significant investment. An edge-conscious autonomous swarm deployment
    architecture was adopted by [47] where the authors present an empirically based
    model for efficient autonomous swarm deployment. They built and deployed a real
    autonomous UAV swarm to map leaf defoliation in soybeans. Using this deployment,
    they determined environmental conditions that led to malfunctions, inefficient
    edge energy usage, and predictions. Based on these findings, they developed a
    deployment model for UAV swarms that decreases malfunctions and data irregularities
    by 4.9× and decreases edge energy consumption by 45%, while increasing deployment
    times by only 4%. In particular, simulations demonstrated that the decentralized
    decision-making approach enabled UAVs to adapt their deployment based on environmental
    conditions and obstacles in the field, which resulted in better data collection
    efficiency compared to a centralized deployment approach. Swarm stability also
    was proved even in the presence of UAV failures or malfunctions. This deployment
    model can hold for low-flying UAVs in common agricultural settings, but UAVs that
    fly at higher altitudes, for instance, may experience different levels of effect
    from temperature, lighting, and wind. The paper [99] addresses the energy efficiency
    and spectral efficiency trade-off problem of UAV-based irrigation systems. The
    authors propose to adopt massive multiple input, multiple output (M-MIMO) technology
    as a promising way to ensure wireless communication in future 6G-based networks.
    They design a network model with a three-layered architecture (cloud-fog-flying
    edge) and analytically compute the achievable spectral efficiency and the energy
    efficiency of the studied system. Then, they numerically determine the optimal
    number of ground base station antennas as well as the optimal number of IoT devices
    that should be used to ensure the maximum energy efficiency while guaranteeing
    a high spectral efficiency. The novelty of this proposal stands for the consideration
    of circuit power (CP) along with the transmit power and throughput to model the
    UAV-based irrigation system. This feature proved that the maximum ratio (MR) combiner
    scheme does not require matrix inversions, whereas the multicell minimum mean
    squared error (M-MMSE) combiner scheme requires the inversion of an MxM-dimensional
    matrix. The numerical results prove also that the proposed UAV-based irrigation
    system outperforms conventional systems and demonstrate that the best spectral
    and energy efficiency trade-off is obtained by using the M-MMSE combiner. However,
    this research still has some limitations, mainly regarding the high computational
    complexity of computing the inverse MxM matrix, especially when M is large. This
    complexity is also affected by the need to estimate the channels and acquire the
    channel statistics of all IoT devices, which is not trivial when dealing with
    large-scale fields. Additionally, regarding the massive amount of collected data
    from such networks, it is essential to deploy real-time control and to develop
    security methods to protect data from unauthorized access or interception. 4.5
    Networking and wireless communication The authors in [94] present a novel environmentally-aware
    and energy-efficient multi-drone coordination and networking scheme that features
    a reinforcement learning (RL)-based location prediction algorithm coupled with
    a packet forwarding algorithm for drone-to-ground network establishment. They,
    specifically, address application requirements of connectivity and energy efficiency
    when considering environmental and energy constraints. The novelty is in the approach
    of using reinforcement learning (RL) to estimate future drones’ trajectories based
    on their coordination status and their onboard sensor information. Specifically,
    once the intermediate drone accurately predicts the position of the destination
    drone, a list of preliminary decisions on where to forward packets are made. The
    authors consider various drone mobility models such as the Gaussian-Markov model
    (GMM), mission-based plan model (MBPM), and random way point model (RWPM) within
    their prediction technique. The proposed packet forwarding algorithm features
    two drone location-based solutions, i.e., heuristic greedy and learning-based,
    that can support heterogeneous drone operation requirements under disaster response
    management scenarios. The proposed scheme is evaluated in a simulation test bed
    featuring rural and metropolitan areas and compared with numerous state-of-the-art
    networking algorithms. Results show that the developed solution overcomes obstacles
    and can achieve 81–90% of network connectivity performance observed under no obstacle
    conditions. In the presence of obstacles, their scheme improves the network connectivity
    performance by 14–38% while also providing 23–54% of energy savings in rural areas;
    the same in metropolitan areas, an average of 25% gain is achieved when compared
    with baseline obstacle awareness approaches and with 15–76% of energy savings.
    The authors of this contribution [49] developed a system using IoT technologies
    to inspect water quality for livestock development. A drone-mounted LoRa gateway
    transmits data from sensors to the cloud, while offline storage is available in
    case of internet access absence. The integration of IoT sensors and the LoRa gateway
    into a vertical take-off and landing (VTOL) drone enabled effective farm monitoring.
    The proposed solution also optimizes the drone’s flight path using advanced algorithms,
    reducing mission time and overcoming battery limitations based on the traveling
    salesman problem (TSP). Overall, this research provides a comprehensive solution
    for water inspection, farm monitoring, and data collection in agriculture using
    drones and IoT technologies. The communication link performance was evaluated
    under various conditions such as spreading factors (SFs), LoRa gateway modes,
    and drone speeds. This evaluation investigates the Doppler effect at higher flight
    speeds and determined that LoRa technology performed well at a maximum drone speed
    of 95 km/h and with a spreading factor of 12 which demonstrated the robustness
    of LoRa technology. The paper [93] proposes a system that can capture and transfer
    thermal data captured by aerial edge intelligence to terrestrial edge intelligence
    for irrigating dry patches. This data is transmitted by an integrated LoRa transceiver
    through peer-to-peer long-range communications, which avoids the usage of secondary
    repeaters and hence helps to create a low latency in long-range edge computing
    systems in places where cellular communication is not available and reduces the
    number of drones used for this task, particularly in large farms. Experimentation
    scenarios are based only on RSSI and spreading factor (SF) results and do not
    include environmental or weather effects. The work in [42] introduces a fog-based
    cooperative framework that leverages the capabilities of neighboring IoT devices
    to optimize the transmission of monitoring data in a farming context. By considering
    the traffic load and connectivity of devices and by using distributed machine
    learning techniques, the framework dynamically predicts the most suitable devices
    to relay data, reducing network congestion and improving overall system performance.
    They also, identify the redundant nodes that are collecting the same data and
    forbid using them in order to efficiently manage network resources and prolong
    the system life cycle. Additionally, the paper emphasizes the importance of data
    security in IoT-based smart monitoring systems by incorporating data encryption
    and authentication techniques in a fog-based chain to protect sensitive agricultural
    data from unauthorized access and tampering. To evaluate the effectiveness of
    the proposed framework, the authors conduct simulations and compare the performance
    with existing approaches. The results were promising and showed the ability of
    the solution to improve energy efficiency, achieving an average increase of 20%
    while varying node number and 22% while varying distances from the sink. This
    work could be extended to maintain cloud integrity from the point of users’ perspective
    in order to deal with a fully secured system. 4.6 Security The study in [101]
    focused on layered architectural design, identified security issues, and presented
    security demands and upcoming prospects. In addition to that, the authors propose
    a security architectural framework for agriculture 4.0 that combines blockchain
    technology, fog computing, and software-defined networking. The suggested framework
    combines Ethereum blockchain and software-defined networking technologies on an
    open-source IoT platform that prevents erroneous control and information delivery  while
    improving network management. It is then tested with three different cases under
    a DDoS attack. In this proposal, a first sensor layer is used to acquire meaningful
    information from the external environment via sensors to take required action
    against it. Then, a fog layer, made up of multiple fog nodes such as a virtualization
    node, agricultural sensor data monitor, block-chain client software, and simulated
    switch, hosts all authentic analysis and latency-sensitive applications. After
    that, an SDN controller is integrated to help with network monitoring by managing
    all transactions among network and application devices, allowing it to manage
    and adjust network flows more efficiently in response to new requirements. It
    maintains a consistent glimpse of the network from afar, delivering data to fog
    nodes via one APIs and application via other APIs (MQTT, CoAP...). In addition,
    the SDN controller employs a blockchain contractor to properly secure flow tables
    of SDN in the blockchain, hence avoiding rule counterfeit. The solution could
    be improved by adding an intrusion detection system featuring various deep learning
    algorithms to prevent the insertion of fake sensor data in the intelligent agricultural
    field. In this work [12], the authors propose a fog computing framework for intrusion
    detection of energy-based attacks on UAV-assisted smart farming. The framework
    aims to enhance the security of smart farming systems, especially those that are
    assisted by unmanned aerial vehicles (UAVs). The proposed framework uses a hierarchical
    architecture that includes three levels: the UAV level, the fog level, and the
    cloud level. At each level, specific techniques are used to detect energy-based
    attacks, including physical intrusion detection sensors, machine learning-based
    anomaly detection algorithms, and statistical anomaly detection methods. A fog
    broker, a key central element that manages interactions between the UAVs and sensors,
    is utilized for deploying an intrusion detection system (IDS). IDS implements
    machine learning classification to detect and flag compromised UAVs based on their
    behaviors as malicious or benign. Flagged UAVs are then penalized through a coin-based
    system, where the greater number of coins collected allows for a greater amount
    of charge. To perform evaluation, various machine learning algorithms, including
    XGBoost random forest (RF), decision tree (DT), extra tree (ET), stacking, and
    k-means, were utilized and compared through several metrics such as accuracy,
    precision, recall, F1 score, root-mean-square error, and R-squared score. Results
    showed that all algorithms performed well due to hyperparameter optimization,
    with XGBoost achieving the best performance with 99.77% accuracy, 0.1055 root-mean-square
    error, and 99.81% R-squared score. The model was configured with realistic values
    based on existing literature and real-world data. Machine vision-based techniques
    and extensive deep learning techniques could improve the effectiveness of such
    systems. This work [44] presents a novel approach to smart agriculture that combines
    intelligent decision-making, IoT technologies, and blockchain for improved water
    consumption and data security. The system utilizes sensors to collect real-time
    data on temperature, soil moisture, light intensity, and humidity from the environment
    and the field. This data is stored in an IoT cloud platform for analysis. The
    system implements intelligent fuzzy logic and blockchain technology to make smart
    decisions for watering plants. The intelligent fuzzy logic component uses a set
    of rules to determine the watering requirements of plants based on input variables.
    Blockchain technology was introduced to ensure data privacy and access control,
    allowing only trusted devices to interact with the system. Multiple users can
    remotely monitor and interact with the system through an Android application.
    The system sends alerts to users regarding watering requirements and can control
    the water motor on/off. The experimental results demonstrate the scalability,
    efficiency, and high security of the proposed system. It effectively handles the
    process of watering plants and provides reliable notifications to users with an
    overall accuracy of 96.7%. 4.7 Data processing The work in [43] studies the application
    of fog-based IoT systems in smart agriculture for processing complex events. The
    authors, first, explore the challenges faced in traditional cloud-centric architectures
    and then propose a multi-tier hierarchical fog-based approach that brings computation
    closer to the data source in agricultural environments. The proposed approach
    is geolocation and context-aware, in which the new sensor nodes in a network connect
    to a fog node based on the data type and the Euclidean distance between them.
    The main objective is to enable real-time decision-making in smart agriculture.
    Simulation results showed promising performance in different scenarios, with accuracy,
    precision, and recall consistently above 99%. This indicates that the proposed
    approach provides reliable and consistent information about the monitored environment.
    The effectiveness of the complex event processing (CEP) engine, which includes
    rules and events, was validated through tests in an irrigation scenario, and the
    tests were successfully completed. The average actuator response time obtained
    was approximately 7.15 ms on a local network, demonstrating that the CEP engine
    also meets the application’s requirements for the timely activation of irrigation.
    The proposed approach, however, could be improved with a self-configuration of
    the nodes regarding the best characteristics to be considered for the choice of
    the fog node, such as the processing power. Moreover, instead of rule-oriented
    modeling, the data stream-oriented CEP mechanism which is similar to SQL worth
    exploring. The authors in [28] propose an edge-assisted data collection approach
    for critical events, such as natural disasters or pest outbreaks, in the context
    of the software-defined wireless sensor network (SDWSN)-based Agricultural Internet
    of Things (IoT). The main contribution is the development of an effective edge-assisted
    data collection approach that addresses the challenges of data transmission and
    storage. The proposed approach involves the use of edge computing and ensures
    a balance between the main information on an event and the corresponding data
    volume, which allows the processing and storage of data at the edge of the network,
    to decrease the data redundancy, reduce the amount of data transmitted to the
    cloud, and improve the efficiency of data collection in the agricultural IoT.
    The authors of this work conduct automatic data type selection using mutual information,
    events categorization, and related data sensing to realize essential event sensing
    and reduce the cost of data collection. An experimental prototype is designed
    in an agricultural greenhouse to verify the proposed strategy and compare it with
    the existing methods. The findings of this work demonstrate that the proposed
    strategy provided a larger margin in balancing between data validity, energy consumption,
    and latency. However, it may increase the deployment cost of edge servers, which
    could be solved by a cooperative strategy between edges and cloud servers to share
    computing resources. MARbLE, a platform for developing and managing swarms, was
    proposed in [46]. It is a multi-agent reinforcement learning (MARL) approach at
    the edge of digital agriculture applications. The main contribution of this work
    is the development of a framework that can enable autonomous and decentralized
    decision-making in edge computing systems, which may reduce the amount of data
    that needs to be transmitted to the cloud and improve the efficiency of the overall
    system. The platform automatically compiles and deploys swarms and continuously
    updates the reinforcement learning models that govern their actions, which helps
    developers experiment their solutions with multiple swarm and edge resource configurations
    both in simulation and with actual in-field runs. The evaluation focused on a
    crop scouting workload, and the performance of MARbLE was compared to autonomous
    and automated approaches in various swarm sizes. The paper presents the results
    for 8 mission configurations, 4 of which prioritize maximum accuracy, while the
    other 4 prioritize maximum profit by minimizing labor costs while providing sufficiently
    accurate maps with shorter missions. The performance of MARbLE was assessed based
    on the time taken by swarms of different autonomy settings to accomplish the same
    task. Shorter times were preferred to reduce labor costs and allow more missions
    to be performed. Although MARbLE simplifies building MARL systems by replacing
    handcrafted reward functions with Map() and Eval() functions that are easier to
    program, it requires, however, available, realistic, and representative traces
    from the target environment which could be challenging and costly in novel and
    dynamic environments. Also, the trade-offs in convergence time and learning efficacy
    could be more explored by implementing learning techniques other than Bayesian
    optimization. The paper [96] presents a novel architecture for implementing a
    digital twin (DT) for a farm that encompasses a variety of fields. The proposed
    approach incorporates the use of multi-agents, microservices, linked data, and
    ontologies for an efficient deployment of the digital twin in a cloud-fog-edge
    infrastructure. The proposed architecture is based on (i) a cloud layer which
    serves as the primary domain for big data and data analytics, providing data storage
    and anonymization services for farm data, and machine learning and data analysis
    support; (ii) fog layer which represents the farm management system providing
    local data storage and computing services for in-situ farm data analysis; and,
    finally, (iii) edge layer which includes any agricultural devices hosting sensors,
    allowing service composition within the smart farming scenario. The use of linked
    data concepts fosters service discovery while allowing data to be available and
    reducing redundancy. One of the main benefits of this approach is the ability
    to adapt and evolve the DT’s decision-making services over time by extending the
    model to new data streams or incorporating new modeling techniques. The Multi-Agent
    Micro Services (MAMS) architectural style has been crucial to the success of this
    approach, as it enables seamless integration of agents and microservices. Unlike
    traditional approaches that rely on proprietary data silos and vertical architectures,
    the proposed architecture is designed to break down these barriers and promote
    better data exchange and collaboration. This work could be improved to enable
    greater interoperability. The authors, also, may explore alternative models than
    Zadok for a better crop growth stage prediction and evaluation. This could improve
    the accuracy and precision of their digital twin and could lead to more informed
    decision-making and better crop management strategies. 4.8 Precision and optimized
    prediction Alonso et al. [45] present an intelligent platform oriented to the
    application of IoT, edge computing, artificial intelligence, and blockchain techniques
    in smart farming environments, by means of the novel Global Edge Computing Architecture.
    They designed this platform to monitor the state of dairy cattle and feed grain
    in real-time, as well as ensure the traceability and sustainability of the different
    processes involved in production. The collected data is then used to generate
    real-time alerts and recommendations for farmers. The proposed platform was deployed
    and evaluated in a real-world dairy farm and reported promising results and important
    improvements in the reliability of communications between the IoT-Edge layers
    and the cloud. As the evaluation of this work was only conducted in one real-world
    dairy farm, this made their contribution somehow specific and may not be generalized
    to other use cases. Additionally, the paper does not provide a detailed analysis
    of the cost-effectiveness of the proposed solution, which could be a concern for
    farmers who are considering adopting the platform. Table 3 Research papers and
    their application domain Full size table The paper [52] proposes an approach for
    detecting Mildew vine diseases based on multispectral images captured by unmanned
    aerial vehicles (UAVs) and using optimized image registration and deep learning
    segmentation. The method is based on the combination of the visible and infrared
    images obtained from two different sensors. A new image registration method was
    developed to align visible and infrared images, enabling fusion of the information
    from the two sensors. A convolutional neural network (CNN) approach is then applied
    to classify each pixel according to different instances, namely, shadow, ground,
    healthy, and symptom. The authors propose using the drone’s onboard computer as
    an edge computing device to perform these tasks in real time and without the need
    for an internet connection. The proposed solution was evaluated on a dataset of
    1004 images of grapevines with and without diseases, achieving an accuracy of
    96.7%. However, one of the limitations of this research is the small size of the
    training sample which reduced the performance of the deep learning segmentation
    and the lack of comparative analysis with other learning techniques. The paper’s
    [33] main contribution is proposing a method for yield estimation in cotton crops
    by combining a cotton “Boll Area Index” with in-season unmanned aerial multispectral
    and thermal imagery. The authors demonstrated that the combination of these techniques
    can provide more accurate yield estimation compared to traditional methods. They
    also showed that the use of unmanned aerial vehicles (UAVs) can provide a cost-effective
    and efficient way to collect the necessary data for yield estimation. Additionally,
    the authors provided recommendations for future research to improve the accuracy
    and practicality of this method, such as exploring the use of machine learning
    algorithms for data analysis. The authors have used mobile edge computing as part
    of their methodology. The proposed method may require specialized equipment and
    expertise, which may not be readily available to all farmers. The study is also
    limited to cotton farming and may not be directly applicable to other crops. In
    conclusion, the use of flying edge computing in precision agriculture has emerged
    as a hot topic in recent years. The reviewed literature shows that this paradigm
    can address many of the challenges faced by traditional cloud-based solutions,
    including high latency, limited bandwidth, and security concerns. The various
    works studied here propose different architectures to improve the performance
    of precision agriculture systems and have demonstrated promising results in terms
    of accuracy, efficiency, and scalability. Table 3 classifies some research works
    based on their application domain. In parallel with this architectural evolution,
    in the last decade, deep learning (DL) methods have gained increasingly more attention
    and become the de facto mainstream of machine learning (ML). In most of the farming
    scenarios, UAV nodes utilize images captured by cameras as their data inputs,
    i.e., they are computer vision-related tasks. In this way, UAV tasks in precision
    agriculture that use DL methods, mainly including crop pest and disease detection,
    crop growth monitoring and yield estimation, and crop type classification, can
    be divided into three typical and principal computer vision tasks: classification,
    detection, and segmentation. Table 4 shows a compilation of typical UAV applications
    in smart farming using ML and DL methods. Table 4 ML and DL-based methods for
    typical UAV applications in smart farming Full size table The reviewed papers
    provide evidence that the adoption of flying edge computing in precision agriculture
    can significantly improve crop yields, reduce operational costs, and increase
    overall profitability. The potential benefits of this technology have encouraged
    many researchers to investigate its applications in various agricultural domains,
    including hydroponics, smart farming, and dairy farming. Table 5 summarizes numerous
    research works based on the hybrid computing paradigm where cloud, fog, edge,
    and or flying edge computing are jointly used. Table 5 Review of research works
    based on hybrid computing paradigm Full size table In summary, the reviewed literature
    underscores the importance of jointly using UAVs and edge computing in precision
    agriculture and its potential to revolutionize the way we grow crops. This is
    a promising topic that has attracted the attention of many researchers, and there
    is still much room for exploration and innovation in this field. 5 Open challenges
    Although cloud-fog-edge-based technologies are being widely used in agriculture
    and offer several advantages, the research and practice of edge intelligence,
    especially in precision agriculture, are still in an early stage. Below, we list
    some notable challenges and specific issues that need to be addressed within the
    scope of this paper. Security: When agricultural applications deal with CC, data
    security and privacy, authorization and trust, authentication, secure communication
    and compliance with regulations are the significant challenges [56]. Smart farms
    accumulate vast amounts of data generated by different types of data sources,
    such as sensors, actuators, and edge equipment. Therefore, data stored in the
    cloud may be leaked, which can lead to serious economic losses to farmers and
    agribusinesses. Moreover, as smart agriculture is still emerging and has a low
    level of security features, recent solutions will demand data availability and
    accuracy as key points to help farmers build robust and efficient systems. Secure
    proposals may require an architecture that can handle compatibility, heterogeneity,
    and interoperability with numerous devices and should allow multiple access, in
    a secure and coordinated way, to avoid data loss and compromise the system efficiency.
    Papers [44, 48, 56, 60, 62, 101] address this challenge and propose security features
    such as IDs, cryptography, firewalls, and blockchain technology that may improve
    smart farm security in different scenarios. In particular, thanks to the peer-to-peer
    (P2P) network, blockchain technology eliminates the need for a central authority
    and avoids the single point of failure problem. It was introduced first for product
    tracking, as transactions are timestamped and the history is preserved. Added
    to that, it is adequate when integrated with data-driven applications thanks to
    its immutability characteristics that provide reliable information. Blockchain
    is also used as a secure infrastructure to manage UAV work, and it performs well
    in many areas, especially when talking about swarm of UAVs [63]. Mobility: This
    challenge arises from the dynamic nature of farming operations, which involve
    mobile assets such as vehicles, machines, robots, and livestock. Ensuring real-time
    monitoring, tracking, and management of these assets poses several challenges,
    such as network latency, unreliable connectivity, bandwidth limitations, centralized
    dependency, and delayed decision-making arise. To overcome these issues, leveraging
    fog and edge computing becomes crucial. By deploying edge devices or fog nodes
    on intermediate layers between mobile assets, data processing and decision-making
    can occur locally, reducing dependence on the cloud, minimizing latency, and enabling
    real-time monitoring and management in agricultural environments. These papers
    [64]–[69] propose fog/edge-based architectures to address the mobility challenge
    by reducing dependence on cloud infrastructure and facilitating seamless monitoring
    and management of mobile assets in agricultural environments. Such architectures
    need, on the other side, an efficient deployment/placement of fog servers and/or
    edge nodes that maximizes coverage and throughput. While UAV deployment in a three-dimensional
    space remains an NP-hard optimization problem [34], different optimization heuristics,
    such as ant colony, particle swarm, and genetic algorithm, are already used to
    solve this problem with low complexity. Task offloading: The task offloading challenge
    in precision agriculture revolves around efficiently distributing computational
    tasks between different computing resources, such as edge devices, fog nodes,
    and cloud infrastructure. In fact, precision agriculture heavily relies on sensor
    data, including information from drones, satellites, and ground-based sensors,
    to make informed decisions about crop management, irrigation, pest control, and
    yield optimization. However, processing and analyzing the huge amount of data
    generated by these sensors can be computationally intensive and time-consuming.
    Task offloading aims to alleviate this burden by intelligently distributing tasks
    from resource-constrained edge devices to more powerful fog nodes or cloud servers,
    where complex computations can be performed. To that end, several factors need
    to be considered such as data volume, latency requirements, network bandwidth,
    energy consumption, and real-time analysis needs. Several recent articles have
    focused on the task offloading problem from diverse perspectives, particularly
    in fog and edge computing-based solutions [55, 77, 80, 83, 84, 87,88,89]. While,
    some works focus on optimizing the delay, energy consumption, or load balance
    through fog/edge server placement for enhancing the performance of the real-time
    control, other efforts are dealing with multi-objective optimization. Path planning:
    Path planning in precision agriculture presents significant challenges that researchers
    need to address [74, 75]. Unlike traditional path-planning scenarios, precision
    agriculture involves dynamic and ever-changing environments. The complexity arises
    from the need to navigate UAVs through vast agricultural fields with various obstacles,
    uneven terrain, and intricate crop patterns. Precision agriculture requires not
    only capturing data, but also ensuring optimal coverage of the entire field. Path
    planning algorithms must consider factors such as field boundaries, crop health
    variations, sensor limitations, and real-time data processing requirements. Additionally,
    UAVs often operate under time constraints, such as limited daylight hours or specific
    stages of crop growth, further complicating path planning. Ensuring the efficient
    allocation of resources, reducing redundant flights, and minimizing energy consumption
    are additional challenges. The path planning problem in precision agriculture
    demands the development of intelligent algorithms and techniques that can adapt
    to the dynamic nature of agricultural environments, optimize data collection efficiency,
    and enable informed decision-making for farmers. Overcoming these challenges will
    unlock the full potential of UAVs in precision agriculture, revolutionizing farming
    practices and enhancing crop yields. Power management: Smart farms require sensors,
    actuators, and mobile devices. All of these devices depend on available power
    resources to collect data, perform processing tasks, communicate, and move. Energy
    efficiency is then considered a key factor in ensuring the successful completion
    of tasks in the shortest possible time. Most of the work proposed so far assumes
    that UAVs are equipped with an unlimited source of energy, based on the assumption
    that it is always possible to recharge. However, from a practical point of view,
    the use of the recharging step is not as simple and generally leads to non-negligible
    delays, to an alternative scenario, and to the development of fault tolerance
    solutions. Existing research [76]–[78]attempts to address energy efficiency by
    addressing all these limitations. All the challenges mentioned above are mainly
    associated with cloud-based applications. However, the combination of different
    computing paradigms, such as cloud-fog-edge computing, has the potential to address
    many of these challenges. In this survey, we have observed that modern hybrid
    computing in agricultural applications can solve general cloud issues like latency,
    bandwidth, and networking traffic problems. Moreover, it has been found that most
    of these applications are low-cost. It is worth mentioning that cloud-fog-edge
    computing can also address larger problems, such as real-time data processing
    with low latency and high bandwidth, unnecessary costs, data security, and data
    protection. Nevertheless, further research is required to understand how to overcome
    these challenges effectively. 6 Conclusion This paper presented a comprehensive
    systematic literature review on the role of modern computing paradigms—namely,
    cloud, fog, edge, and flying edge computing—in smart agriculture domains. Our
    analysis covered various aspects such as application domains, research approaches,
    and architectural modeling. Our findings suggest that these computing techniques,
    when combined in a complementary way, can significantly aid the digital transformation
    of the industry in terms of network, business, application, and intelligence.
    However, data obtained from edge nodes need to be summarized in the cloud for
    deeper analysis as cloud computing has a significant impact on data availability
    by providing scalable, on-demand access to computing and storage resources over
    the internet. Further research is needed to overcome some of the challenges identified
    in this study and to fully realize the potential of these computing paradigms
    in the agriculture industry. References Cisco GCI (2019) Redefine connectivity
    by building a network to support the Internet of Things (white paper) Polaris
    Market Research (2022) Agriculture drones market research report Dhifaoui S, Houaidia
    C, Saïdane LA (2022) Cloud-fog-edge computing in smart agriculture in the era
    of drones: a systematic survey. In: 2022 IEEE 11th IFIP international conference
    on performance evaluation and modeling in wireless and wired networks (PEMWN)
    pp 1–6 Gartner Inc (2017) Gartner says almost 3 million personal and commercial
    drones will be shipped in 2017 Ketu S, Mishra PK (2021) Cloud, fog and mist computing
    in IoT: an indication of emerging opportunities. IETE Technical Review, Opportunities
    Amiri-Zarandi M, Hazrati Fard M, Yousefinaghani S, Kaviani M, Dara R (2022) A
    platform approach to smart farm information processing. Agriculture 12(838):1–18
    Google Scholar   Ammad Uddin M, Ayaz M, Aggoune E-HM, Mansour A, Le Jeune D (2019)
    Affordable broad agile farming system for rural and remote area. IEEE Access 7:127098–127116
    Article   Google Scholar   Rejeb A, Abdollahi A, Rejeb K, Treiblmaier H (2022)
    Drones in agriculture: a review and bibliometric analysis. Comput Electron Agric
    198(C) Maddikunta PKR et al. (2021) Unmanned aerial vehicles in smart agriculture:
    applications, requirements, and challenges. In: IEEE sensors journal, vol 21,
    no 16, pp 17608–17619 Gao Z, Zhu J, Huang H, Yang Y, Tan X (2021) Ant colony optimization
    for UAV-based intelligent pesticide irrigation system. 2021 IEEE 24th international
    conference on computer supported cooperative work in design (CSCWD). Dalian, China,
    pp 720–726 Chapter   Google Scholar   Valente J, Sari B, Kooistra L, Kramer H,
    Mücher S (2020) Automated crop plant counting from very high-resolution aerial
    imagery. Precis Agric 21(6):1366–1384 Article   Google Scholar   Sajid J, Hayawi
    K, Malik AW, Anwar Z, Trabelsi Z (2023) A fog computing framework for intrusion
    detection of energy-based attacks on UAV-assisted smart farming. Appl Sci 13(6):3857
    Article   Google Scholar   Uddin MA, Mansour A, Le Jeune D, Ayaz M, Aggoune EHM
    (2018) UAV-assisted dynamic clustering of wireless sensor networks for crop health
    monitoring. Sensors 18(2):555 Article   Google Scholar   Sakthi U, Rose JD (2020)
    Smart agricultural knowledge discovery system using IoT technology and fog computing.
    In: 2020 third international conference on smart systems and inventive technology
    (ICSSIT), pp 48–53 Snyder H (2019) Literature review as a research methodology:
    an overview and guidelines. J Bus Res 104:333–339 Article   Google Scholar   AmmadUddin
    M, Ayaz M, Mansour A, Aggoune E, Sharif Z (2021) Razzak I () Cloud-connected flying
    edge computing for smart agriculture. Peer-to-Peer Netw Appl 14:3405–3415 Article   Google
    Scholar   Kar B, Yahya W, Lin Y, Ali A (2023) Offloading using traditional optimization
    and machine learning in federated cloud-edge-fog systems: a survey. IEEE Commun
    Surv Tutorials 25:1199–1226 Article   Google Scholar   Kalyani Y, Collier R (2021)
    A systematic survey on the role of cloud, fog, and edge computing combination
    in smart agriculture. Sensors 21(17):5922 Article   Google Scholar   Navarro E,
    Costa N, Pereira A (2020) A systematic review of IoT solutions for smart farming.
    Sensors 20(15):4231 Article   Google Scholar   Idoje G, Dagiuklas T, Iqbal M (2021)
    Survey for smart farming technologies: challenges and issues. Comput Electr Eng
    92:107104 Article   Google Scholar   Boursianis AD, Papadopoulou M, Diamantoulakis
    PD, Liopa-Tsakalidi A, Barouchas P, Salahas G, Karagiannidis G, Wan S, Goudos
    SK (2020) Internet of Things (IoT) and agricultural unmanned aerial vehicles (UAVs)
    in smart farming: a comprehensive review. Internet Things 18 Yazid Y, Ez-Zazi
    I, Guerrero-González A, El Oualkadi A, Arioua M (2021) UAV-enabled mobile edge-computing
    for IoT based on AI: a comprehensive review. Drones 5(4):148 Article   Google
    Scholar   Bonomi F, Milito R, Zhu J, Addepalli S (2021) Fog computing and its
    role in the Internet of Things. In: Proceedings of the first edition of the MCC
    workshop on mobile cloud computing, Helsinki, Finland, August 2012, pp 13–16 Alsamhi
    SH, Shvetsov AV, Kumar S, Shvetsova SV, Alhartomi MM, Hawbani A, Rajput NS, Srivastava
    S, Saif A, Nyangaresi VO (2022) UAV computing-assisted search and rescue mission
    framework for disaster and harsh environment mitigation. Drones 6(7):154 Article   Google
    Scholar   Liu J, Xiong K, Ng DWK, Fan P, Zhong Z, Letaief KB (2020) Max-min energy
    balance in wireless-powered hierarchical fog-cloud computing networks. IEEE Trans
    Wirel Commun 19(11):7064–7080 Article   Google Scholar   Popescu D, Stoican F,
    Stamatescu G, Ichim L, Dragana C (2020) Advanced UAV-WSN system for intelligent
    monitoring in precision agriculture. Sensors 20(3):817 Article   Google Scholar   Qayyum
    T, Trabelsi Z, Malik A, Hayawi K (2022) Trajectory design for UAV-based data collection
    using clustering model in smart farming. Sensors 22(1):37 Article   Google Scholar   Li
    X, Ma Z, Zheng J, Liu Y, Zhu L, Zhou N (2020) An effective edge-assisted data
    collection approach for critical events in the SDWSN-based Agricultural Internet
    of Things. Electronics 9(6):907 Article   Google Scholar   Ratnakumari K, Koteswari
    S (2020) Design and implementation of innovative IoT based smart agriculture management
    system for efficient crop growth. J Eng Sci 11(7):607–616 Google Scholar   Johri
    A, Prakash R, Vidyarthi A, Chamoli V, Bhardwaj S (2021) IoT-based system to measure
    soil moisture using soil moisture sensor, GPS data logging and cloud storage.
    In: International conference on innovative computing and communications, Singapore,
    pp 679–688 Alsamhi SH, Almalki FA, AL-Dois H, Shvetsov AV, Ansari MS, Hawbani
    A, Gupta SK, Lee B (2021) Multi-drone edge intelligence and SAR smart wearable
    devices for emergency communication. Wirel Commun Mob Comput 21:1–12 Schroeder
    NM, Panebianco A, Musso RG, Carmanchahi P (2020) An experimental approach to evaluate
    the potential of drones in terrestrial mammal research: a gregarious ungulate
    as a study model. Roy Soc Open Sci 7(1) Siegfried J, Adams CB, Rajan N, Hague
    S, Schnell R, Hardin R (2023) Combining a cotton ‘Boll Area Index’ with in-season
    unmanned aerial multispectral and thermal imagery for yield estimation. Field
    Crop Res 291 Huang H, Savkin AV, Ding M, Kaafar MA (2019) Optimized deployment
    of drone base station to improve user experience in cellular networks. J Netw
    Comput Appl 144 Debdas S, Mohanty S, Biswas B, Chhangani A, Samanta S, Chakraborty
    S (2021) IoT based fog and cloud analytics in smart dairy farming. In: International
    conference in advances in power, signal, and information technology (APSIT), pp
    1–6 Wan S, Zhao K, Lu Z, Li J, Lu T, Wang H (2022) A modularized IoT monitoring
    system with edge-computing for aquaponics. Sensors 22(23):9260 Article   Google
    Scholar   Alam MN, Shufian A, Masum MAA, Noman AA (2021) Efficient smart water
    management system using IoT technology. In: 2021 international conference on automation,
    control and mechatronics for industry 4.0 (ACMI), pp 1–6 Alanezi MA, Shahriar
    MS, Hasan MB, Ahmed S, Sha’aban YA, Bouchekara HREH (2022) Livestock management
    with unmanned aerial vehicles: a review. IEEE Access 10:45001–45028 Article   Google
    Scholar   Froiz-Míguez I, Lopez-Iturri P, Fraga-Lamas P, Celaya-Echarri M, Blanco-Novoa
    Ó, Azpilicueta L, Falcone F, Fernández-Caramés TM (2020) Design, implementation,
    and empirical validation of an IoT smart irrigation system for fog computing applications
    based on loRa and loRaWAN sensor nodes. Sensors 20 Tsipis A, Papamichail A, Koufoudakis
    G, Tsoumanis G, Polykalas SE, Oikonomou K (2020) Latency-adjustable cloud/fog
    computing architecture for time-sensitive environmental monitoring in olive groves.
    AgriEngineering 20(2):175–205 Article   Google Scholar   Montoya-Munoz AI, Rendon
    OMC (2020) An approach based on fog computing for providing reliability in IoT
    data collection: a case study in a Colombian coffee smart farm. Appl Sci 10(24):8904
    Article   Google Scholar   Abunadi I, Rehman A, Haseeb K, Parra L, Lloret J (2022)
    Traffic-aware secured cooperative framework for IoT-based smart monitoring in
    precision agriculture. Sensors 22:6676 Article   Google Scholar   da Costa Bezerra
    SF, Filho ASM, Delicato FC, da Rocha AR (2021) Processing complex events in fog-based
    Internet of Things systems for smart agriculture. Sensors 21:7226 Article   Google
    Scholar   Ting L, Khan M, Sharma A, Ansari MD (2022) A secure framework for IoT-based
    smart climate agriculture system: toward blockchain and edge computing. J Intell
    Syst 31:221–236 Google Scholar   Alonso RS, Sittón-Candanedo I, García Ó, Prieto
    J, Rodríguez-González S (2020) An intelligent edge-IoT platform for monitoring
    livestock and crops in a dairy farming scenario. Ad Hoc Netw 98(1) Boubin J, Burley
    C, Han P, Li B, Porter B, Stewart C (2022) Marble: multi-agent reinforcement learning
    at the edge for digital agriculture. In: Proceedings of the 7th ACM/IEEE symposium
    on edge computing Boubin J, Zhang Z, Chumley J, Stewart C (2023) Adaptive deployment
    for autonomous agricultural UAV swarms. In: Proceedings of the 20th ACM conference
    on embedded networked sensor systems, association for computing machinery, New
    York, NY, USA, pp 1089–1095 Ometov A, Molua OL, Komarov M, Nurmi J (2022) A survey
    of security in cloud, edge, and fog computing. Sensors (Basel, Switzerland) 22(3):927
    Article   Google Scholar   Behjati M, Mohd Noh AB, Alobaidy HAH, Zulkifley MA,
    Nordin R, Abdullah NF (2021) LoRa communications as an enabler for internet of
    drones towards large-scale livestock monitoring in rural farms. Sensors 21(5044)
    Al-Thani N, Albuainain A, Alnaimi F, Zorba N (2020) Drones for sheep livestock
    monitoring. In: Proceedings of the 2020 IEEE 20th mediterranean electrotechnical
    conference (MELECON), Palermo, Italy, pp 672–676 Barbedo JGA, Koenigkan LV, Santos
    PM, Ribeiro ARB (2020) Counting cattle in UAV images-dealing with clustered animals
    and animal/background contrast changes. Sensors 20(7):2126 Article   Google Scholar   Kerkech
    M, Hafiane A, Canals R (2020) Vine disease detection in UAV multispectral images
    using optimized image registration and deep learning segmentation approach. Comput
    Electron Agric 174(105446) Apolo-Apolo OE, Martínez-Guanter J, Egea G, Raja P,
    Pérez-Ruiz M (2020) Deep learning techniques for estimation of the yield and size
    of citrus fruits using a UAV. Eur J Agron 115(126030) Kalyani Y, Collier R (2021)
    A systematic survey on the role of cloud, fog, and edge computing combination
    in smart agriculture. Sensors 21(17):5922 Article   Google Scholar   Nguyen A,
    Pamuklu T, Syed A, Kennedy W, Erol Kantarci M (2023) To risk or not to risk: learning
    with risk quantification for IoT task offloading in UAVs. arXiv:2302.07399 Gupta
    M, Abdelsalam M, Khorsandroo S, Mittal S (2020) Security and privacy in smart
    farming: challenges and opportunities. IEEE Access 8:34564–34584 Article   Google
    Scholar   Hazra A, Rana P, Adhikari M, Amgoth T (2023) Fog computing for next-generation
    Internet of Things: Fundamental, state-of-the-art and research challenges. Comput
    Sci Rev 48(100549) de Araujo Zanella AR, da Silva E, Albini LCP (2020) Security
    challenges to smart agriculture: current state, key issues, and future directions.
    Array 8(2590):0056 Google Scholar   Rahimi M, Songhorabadi M, Kashani MH (2020)
    Fog-based smart homes: a systematic review. J Netw Comput 153(102531) Ferrag MA,
    Shu L, Yang X, Derhab A, Maglaras L (2020) Security and privacy for green IoT-based
    agriculture: review, blockchain solutions, and challenges. IEEE Access 8:32031–32053
    Article   Google Scholar   Sakthi U, Rose JD (2020) Smart agricultural knowledge
    discovery system using IoT technology and fog computing. In: Proceedings of the
    2020 third international conference on smart systems and inventive technology
    (ICSSIT), Tirunelveli, India, pp 20–22 August 2020 Baghrous M, Ezzouhairi A, Benamar
    N (2020) Smart farming system based on fog computing and LoRa technology. Embedded
    systems and artificial intelligence. Springer, Fez, Morocco, pp 217–225 Chapter   Google
    Scholar   Hwerbi K, Benalaya N, Amdouni I, Laouiti A, Adjih C, Saidane L (2022)
    A survey on the opportunities of blockchain and UAVs in agriculture. 2022 IEEE
    11th IFIP international conference on performance evaluation and modeling in wireless
    and wired networks (PEMWN). Italy, Rome, pp 1–6 Google Scholar   Zhang X, Cao
    Z, Dong W (2020) Overview of edge computing in the Agricultural Internet of Things:
    key technologies, applications, challenges. IEEE Access 8:141748–141761 Article   Google
    Scholar   Wheeb AH, Nordin R, Samah AA, Alsharif MH, Khan MA (2022) Topology-based
    routing protocols and mobility models for flying ad hoc networks: a contemporary
    review and future research directions. Drones 6(9) Liao Z, Ma Y, Huang J, Wang
    J, Wang J (2021) HOTSPOT: a UAV-assisted dynamic mobility-aware offloading for
    mobile-edge computing in 3-D space. In: IEEE internet of things journal, vol 8,
    no 13, pp 10940–10952, 1 July1, 2021 Zhang J, Zhou L, Zhou F, Seet BC, Zhang H,
    Cai Z, Wei J (2020) Computation-efficient offloading and trajectory scheduling
    for multi-UAV assisted mobile edge computing. IEEE Trans Veh Technol 69:2114–2125
    Article   Google Scholar   Na Z, Liu Y, Shi J, Liu C, Gao Z (2021) UAV-supported
    clustered NOMA for 6G-enabled internet of things: trajectory planning and resource
    allocation. In: IEEE internet of things journal, vol 8, no 20, pp 15041–15048,
    15 Oct 15, 2021 Asiful Huda SM, Moh S (2022) Survey on computation offloading
    in UAV-enabled mobile edge computing. J Netw Comput Appl 201(103341) Masroor R,
    Naeem M, Ejaz W (2021) Efficient deployment of UAVs for disaster management: a
    multi-criterion optimization approach. Comput Commun 21(177):185–194 Article   Google
    Scholar   Lee S, Shin JS (2023) A new location verification protocol and blockchain-based
    drone rental mechanism in smart farming. Comput Electron Agric 214(108267) Ning
    Z, et al. (2023) Dynamic computation offloading and server deployment for UAV-enabled
    multi-access edge computing. In: IEEE transactions on mobile computing, vol 22,
    no 5, pp 2628–2644, 1 May 2023 Sun S, Zhang G, Mei H, Wang K (2021) Yang K (2021)
    Optimizing multi-UAV deployment in 3-D space to minimize task completion time
    in UAV-enabled mobile edge computing systems. IEEE Commun. Lett. 25:579–583 Article   Google
    Scholar   Liu Q, Shi L, Sun L, Li J, Ding M, Shu FS (2020) Path planning for UAV-mounted
    mobile edge computing with deep reinforcement learning. IEEE Trans Veh Technol
    69:5723–5728 Article   Google Scholar   Botteghi N, Kamilaris A, Sinai L, Sirmacek
    B (2020) Multi-agent path planning of robotic swarms in agricultural fields. ISPRS
    Ann Photogramm Remote Sens Spat Inf Sci V-1: 1–8 Su C, Ye F, Wang LC, Wang L,
    Tian Y, Han Z (2020) UAV-assisted wireless charging for energy-constrained IoT
    devices using dynamic matching. IEEE Internet Things J 7(6):4789–4800 Wu G, Miao
    Y, Zhang Y, Barnawi A (2020) Energy efficient for UAV-enabled mobile edge computing
    networks: intelligent task prediction and offloading. Comput Commun 150:556–562
    Article   Google Scholar   Ratnaparkhi S, Khan S, Arya C, Khapre S, Singh P, Diwakar
    M, Shankar A (2020) Smart agriculture sensors in IOT: a review. Mater Today Proc
    Bellendorf J, Mann ZÁ (2020) Classification of optimization problems in fog computing.
    Futur Gener Comput Syst 107 Wu G, Miao Y, Zhang Y, Barnawi A (2020) Energy efficient
    for UAV-enabled mobile edge computing networks: intelligent task prediction and
    offloading. Comput Commun 150:556–562 Article   Google Scholar   Gasmi K et al
    (2022) A survey on computation offloading and service placement in fog computing-based
    IoT. J Supercomput 78:1983–2014 Article   Google Scholar   Hamdi AMA et al (2022)
    Task offloading in vehicular fog computing: state-of-the-art and open issues.
    Future Gener Comput Syst 133:201–212 Article   Google Scholar   Tang L, Tang B,
    Zhang L, Guo F, He H (2021) Joint optimization of network selection and task offloading
    for vehicular edge computing. J Cloud Comput 10(1):1–13 Article   Google Scholar   Fu
    Y, Yang X, Yang P, Wong AK, Shi Z, Wang H, Quek TQ (2021) Energy-efficient offloading
    and resource allocation for mobile edge computing enabled mission-critical Internet-of-Things
    systems. Eurasip J Wirel Commun Netw 21(1):1–16 Google Scholar   Nayeri ZM, Ghafarian
    T, Javadi B (2021) Application placement in fog computing with AI approach: taxonomy
    and a state of the art survey. J Netw Comput Appl 185 Yang M-D, Boubin JG, Tsai
    HP, Tseng H-H, Hsu Y-C, Stewart CC (2020) Adaptive autonomous UAV scouting for
    rice lodging assessment using edge computing with deep learning. Comput Electron
    Agric 179(105817) De S, Barbosa A, Rego AL, P, Carneiro T, Rodrigues JDC, Filho
    PPR, De Souza JN, Chamola V, De Albuquerque VHC, Sikdar B (2020) Computation offloading
    for vehicular environments: a survey. IEEE Access 8(1):198214–198243 Wang B, Wang
    C, Huang W, Song Y, Qin X (2020) A survey and taxonomy on task offloading for
    edge cloud computing. IEEE Access 8(1):186080–186101 Article   Google Scholar   Lin
    H, Zeadally S, Chen Z, Labiod H, Wang L (2020) A survey on computation offloading
    modeling for edge computing. J Netw Comput Appl 20(102781) Apolo-Apolo OE, et
    al. (2020) A cloud-based environment for generating yield estimation maps from
    apple orchards using UAV imagery and a deep learning technique. Front Plant Sci
    11(1086) Shirin Abkenar F, et al. (2022) A survey on mobility of edge computing
    networks in IoT: state-of-the-art, architectures, and challenges. In: IEEE Communications
    Surveys & Tutorials, vol 24, no 4, pp 2329–2365, Fourthquarter Raouhi EM, Lachgar
    M, Hrimech H, Kartit A (2023) Unmanned aerial vehicle-based applications in smart
    farming: a systematic review. Int J Adv Comput Sci Appl 14(6):1150–1165 Google
    Scholar   Jalajamony HM, Nair M, Jones-Whitehead M, Abbas MI, Harris N, Fernandez
    RE (2023) Aerial to terrestrial edge communication using LoRa in drone-aided precision
    agriculture. SoutheastCon, (2023) Orlando. FL, USA, pp 722–723 Qu C, Sorbelli
    FB, Singh R, Calyam P, Das SK (2023) Environmentally-aware and energy-efficient
    multi-drone coordination and networking for disaster response. In: IEEE transactions
    on network and service management, vol 20, no 2, pp 1093-1109, June 2023 Li F,
    Luo J, Qiao Y, Li Y (2023) Joint UAV deployment and task offloading scheme for
    multi-UAV-assisted edge computing. Drones 7(5):284 Kalyani Y, Bermeo NV, Collier
    R (2023) Digital twin deployment for smart agriculture in cloud-fog-edge infrastructure.
    Int J Parallel Emergent Distrib Syst 1–16 Devarajan GG, Nagarajan SM, Ramana TV,
    Vignesh T, Ghosh U, Alnumay W (2023) DDNSAS: deep reinforcement learning based
    deep Q-learning network for smart agriculture system. Sustain Comput Inform Syst
    39:2210–5379 Google Scholar   Min W, Khakimov A, Ateya AA, ElAffendi M, Muthanna
    A, Abd El-Latif AA, Muthanna MSA (2023) Dynamic offloading in flying fog computing:
    optimizing IoT network performance with mobile drones. Drones 7(10):622 Article   Google
    Scholar   Massaoudi A, Berguiga A, Harchay A, Ben Ayed M, Belmabrouk H (2023)
    Spectral and energy efficiency trade-off in UAV-based olive irrigation systems.
    Appl Sci 13(19):10739 Article   Google Scholar   Tao X, Silvestri S (2023) Integrating
    UAV and LoRaWAN in WSN for intelligent monitoring in large-scale rural farms.
    2023 IEEE international conference on pervasive computing and communications workshops
    and other affiliated events (PerCom Workshops). Atlanta, GA, USA, pp 166–167 Chapter   Google
    Scholar   Padhy S, Alowaidi M, Dash S, Alshehri M, Malla PP, Routray S, Alhumyani
    H (2023) AgriSecure: a fog computing-based security framework for agriculture
    4.0 via blockchain. Processes 11(3): 757 Download references Funding This research
    was conducted under the project PHC-Utique 21G1116 funded by the partnership Hubert
    Curien “Utique” of the French Ministry of Europe and Foreign Affairs and the Tunisian
    Ministry of Higher Education and Scientific Research. Author information Authors
    and Affiliations ENSI, University of Mannouba Cristal Lab, Manouba, Tunisia Sourour
    Dhifaoui, Chiraz Houaidia & Leila Azouz Saidane Corresponding author Correspondence
    to Chiraz Houaidia. Ethics declarations Conflict of interest The authors declare
    no competing interests. Additional information Publisher''s Note Springer Nature
    remains neutral with regard to jurisdictional claims in published maps and institutional
    affiliations. Rights and permissions Springer Nature or its licensor (e.g. a society
    or other partner) holds exclusive rights to this article under a publishing agreement
    with the author(s) or other rightsholder(s); author self-archiving of the accepted
    manuscript version of this article is solely governed by the terms of such publishing
    agreement and applicable law. Reprints and permissions About this article Cite
    this article Dhifaoui, S., Houaidia, C. & Saidane, L.A. Computing paradigms for
    smart farming in the era of drones: a systematic review. Ann. Telecommun. 79,
    35–59 (2024). https://doi.org/10.1007/s12243-023-00997-0 Download citation Received
    16 June 2023 Accepted 22 October 2023 Published 18 November 2023 Issue Date February
    2024 DOI https://doi.org/10.1007/s12243-023-00997-0 Share this article Anyone
    you share the following link with will be able to read this content: Get shareable
    link Provided by the Springer Nature SharedIt content-sharing initiative Keywords
    Smart agriculture Cloud computing Edge computing Fog computing UAV Flying edge
    computing Use our pre-submission checklist Avoid common mistakes on your manuscript.
    Sections Figures References Abstract Introduction Background on computing paradigms
    Review methodology Literature review Open challenges Conclusion References Funding
    Author information Ethics declarations Additional information Rights and permissions
    About this article Advertisement Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Annales des Telecommunications/Annals of Telecommunications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Computing paradigms for smart farming in the era of drones: a systematic
    review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh M.
  - Sahoo K.S.
  - Gandomi A.H.
  citation_count: '0'
  description: Implementing innovative farming practices becomes imperative for a
    country whose economy relies heavily on agricultural products. Over recent years,
    the swift process of urbanization and the depletion of forests have influenced
    farmers. Due to the lack of rainwater harvesting and changing weather patterns,
    many crop failure cases have been registered in the last few years. To prevent
    loss of annual crop production, many researchers propose the technology-driven
    smart farming method. Smart agriculture involves utilizing technology to create
    a controlled environment for the management of the crops. Smart farming increases
    crop production and provides small farmers with an alternative income source.
    The government initiated many pilot projects to promote smart agriculture in India.
    Yet, the absence of technological assistance and skilled procedures poses a challenge
    for most farmers aiming to thrive in this industry. This paper introduces a smart
    freshwater recirculating aquaculture system based on IoT technology. The proposed
    system has integrated sensors and actuators. The sensor system monitors the water
    parameters, and actuators maintain the aquaculture environment. An intelligent
    data analytics algorithm played a significant role in monitoring and maintaining
    the freshwater aquaculture environment. The analytics derived the relationship
    between the water parameters and identified the relative change. From the experimental
    evaluation, we have identified that the M5 model tree algorithm has the highest
    accuracy for monitoring the relative change in water parameters.
  doi: 10.1109/JIOT.2023.3298844
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things Journal
    >Volume: 11 Issue: 3 An Intelligent-IoT-Based Data Analytics for Freshwater Recirculating
    Aquaculture System Publisher: IEEE Cite This PDF Munesh Singh; Kshira Sagar Sahoo;
    Amir H. Gandomi All Authors 443 Full Text Views Open Access Under a Creative Commons
    License Abstract Document Sections I. Introduction II. Related Work III. Baseline
    Data IV. Component of Proposed IoT System for Aquaculture Management V. Experiments
    and Results Show Full Outline Authors Figures References Keywords Metrics Abstract:
    Implementing innovative farming practices becomes imperative for a country whose
    economy relies heavily on agricultural products. Over recent years, the swift
    process of urbanization and the depletion of forests have influenced farmers.
    Due to the lack of rainwater harvesting and changing weather patterns, many crop
    failure cases have been registered in the last few years. To prevent loss of annual
    crop production, many researchers propose the technology-driven smart farming
    method. Smart agriculture involves utilizing technology to create a controlled
    environment for the management of the crops. Smart farming increases crop production
    and provides small farmers with an alternative income source. The government initiated
    many pilot projects to promote smart agriculture in India. Yet, the absence of
    technological assistance and skilled procedures poses a challenge for most farmers
    aiming to thrive in this industry. This paper introduces a smart freshwater recirculating
    aquaculture system based on IoT technology. The proposed system has integrated
    sensors and actuators. The sensor system monitors the water parameters, and actuators
    maintain the aquaculture environment. An intelligent data analytics algorithm
    played a significant role in monitoring and maintaining the freshwater aquaculture
    environment. The analytics derived the relationship between the water parameters
    and identified the relative change. From the experimental evaluation, we have
    identified that the M5 model tree algorithm has the highest accuracy for monitoring
    the relative change in water parameters. Published in: IEEE Internet of Things
    Journal ( Volume: 11, Issue: 3, 01 February 2024) Page(s): 4206 - 4217 Date of
    Publication: 18 September 2023 ISSN Information: DOI: 10.1109/JIOT.2023.3298844
    Publisher: IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this
    material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction In recent years, we have seen a significant transformation in
    regular farming. Many urban cities are utilizing their building spaces for intelligent
    farming. Smart farming is a technology-driven control for monitoring and maintaining
    the proper growth environment [1], [2]. However, smart farming is still tricky
    for many unskilled farmers [3]. In India, 70% population directly or indirectly
    depends on agriculture. Indian agriculture has a significant contribution to the
    Indian economy [3]. Over the past few years, the changing weather patterns and
    global warming have significantly impacted annual crop production [2]. A substantial
    number of farmers are affected by the loss of annual crop production. To cut short
    their loss and provide an alternative source of income, the Indian government
    initiated many pilot projects to promote integrated aquaculture-based farming.
    India has 2.36 million hectares of ponds and tanks, which offers immense opportunities
    for aquaculture. Aquaculture is the mean of livelihood for 28 million people in
    India. Unlike other aquaculture, freshwater pearl cultivation is the most profitable
    business in current scenarios. In 2020, India imported 1.59 trillion rupees worth
    of pearls, precious and semi-precious stones. To make India self-reliant on pearl
    production, the Indian government supports the farmers through subsidies and free
    training programs. Despite government efforts, the annual pearl production has
    not made significant progress. The lack of technological intervention and skill-oriented
    manual operation is the primary cause of poor production. In India, freshwater
    aquaculture-based farming is still operated manually. Aquaculture farming is very
    new to most farmers in India. This article presents a smart IoT-based freshwater
    recirculating aquaculture system. The proposed system smartly manages the optimal
    requirement for aquaculture. The system has three significant designs: 1) physical;
    2) network; and 3) logical. In physical configuration, we have edge devices integrated
    with sensors and actuators. The sensors monitor the water parameters, and actuators
    control the habitable aquaculture environment. The communication network between
    the physical devices manages data and control flow. The network design has an
    integrated network between the edge, fog, and gateway devices. The gateway operates
    the virtual private network (VPN) servers for secure communication in the public
    network. At the same time, the network between the edge node and fog node communicates
    using a socket. In logical design, we have an abstract representation of entities
    and processes. The logical design included a front-end data visualization and
    interactive control utility provided through the Danjgo Web framework. At the
    back-end, we have a relational database for managing the data. A data analytics
    algorithm utilizes the relational data for forecasting the change in the water
    parameters and control for the actuators. The whole operation for monitoring and
    management is scheduled through a real-time clock (RTC). The model selected for
    data analytics is a nonlinear decision tree-based model random forest (RF), M5
    Model tree, and gradient boosting machine (GBM). The proposed system has the following
    main contribution. An intelligent-IoT-driven monitoring and management of freshwater
    pearl farming. An inexpensive regent replacement-based sensor system designed
    for ammonia testing. A relational data analytics to forecast problem, sensor fault
    detection, and inexpensive monitoring and management. The remainder of this article
    is organized as follows. Section II presents the related work. Section III presents
    the baseline data. Section IV presents the components of the proposed IoT system
    for aquaculture management and presents the aquaculture management using data
    analytics. Section V presents the experiments and results. Finally, Section VI
    presents the conclusion. SECTION II. Related Work The rapid expansion of the IoT
    brought ubiquitous networked devices and sensors integration in a variety of intelligent
    applications [4], [5]. The generated data from these devices requires computational
    intelligence to extract the knowledge from the data [6]. We have identified a
    few research works centered around water quality monitoring in the literature
    review. Most research works focus on water quality monitoring rather than system
    affordability. It is worth noting that the adoption of technology-driven control
    farming remains costly for many farmers. Using relational data analytics techniques,
    researchers forecast the change in water parameters relative to some know parameters.
    This technique keeps the system in a stable state with minimal hardware requirements.
    Gao et al. [7] proposed an intelligent-IoT-based control and traceability system
    to forecast and maintain water quality for freshwater fish farming. The whole
    system is divided into two modules, i.e., an intelligent module and tracking module.
    The intelligent management module includes the integrated sensor assembly [pH,
    water, temperature, dissolved oxygen (DO), and turbidity], data acquisition, data
    analysis, and database management. The tracking module includes the data visualization,
    chart, and data presentations. The intelligent module processes the fish pond
    monitoring data and forecasts the change in the water parameters. The alterations
    in water parameters empower farmers with the ability to oversee and manually regulate
    conditions using actuators. The system suggested by Gao et al. [7] manages water
    quality factors and offers farmers visual depictions to facilitate manual intervention.
    Zhu et al. [8] introduced a wireless network to oversee the water quality in fish
    cultivation. Their proposed method employs ANN to conduct a predictive analysis
    of water quality. The intelligent module of the system employs key variables like
    water temperature, pH, and salinity as benchmarks to predict the forthcoming patterns
    in dissolved oxygen levels. Zhu et al. [8] system tackles the measurement and
    control of water parameters. Simbeye et al. [9] developed a wireless sensor network
    (WSN)-based mechanism for monitoring aquaculture. The collected water quality
    information from the sensors is transmitted to a nearby server through a gateway.
    Afterwards, the data is displayed through a graphical user interface (GUI) via
    a local server. The primary focus of the study was on enhancing aquaculture management,
    optimizing power usage, and improving network efficiency. Simbeye et al. [9] devised
    the approach to oversee aquaculture within the confines of a personal area network.
    Dabrowski et al. [10] proposed a machine-learning approach to predict the DO using
    pH and water temperature. The data collected from the aquaculture prawn ponds
    was used for this study. Dabrowski et al. [10] analyzed the accuracy of DO prediction
    using long short-term memory (LSTM), linear regression (LR), ANN, and LDs. The
    experimental results show that the LSTM algorithm produces the optimum results
    with minimum normalized root mean-squared error (NRMSE). Dabrowski et al. [10]
    research show the accuracy of the machine learning approach for water quality
    forecast. Chen et al. [11] introduced a system equipped with water quality sensors.
    The sensor captures data from a fish pond and forwards it via zigbee to a microcontroller.
    The processed data is sent to a terminal device through a wirless interface. This
    terminal device empowers the user to monitor the agricultural. A graphical user
    interface (GUI) enables the data visualization. Chen et al. [11] provided a comprehensive
    description of a system that functions within a confined network. Mahfuz et al.
    [12] introduced an aquaculture monitoring system driven by a smart microcontroller.
    A user-friendly mobile application is employed to display the sensor-acquired
    data. The system is linked to a solar power setup to ensure continuous power supply.
    Any alteration in water parameters prompts notifications in the form of straightforward
    text messages. The suggested system required a manual intervention to manage the
    aquaculture. Vernandhes et al. [13] presented aquaponics monitoring system that
    utilizes the Internet of Things (IoT) paradigm. The application interface provides
    an end user remote access to individual physical components of the system. The
    proposed system consists of sensors, actuator, relay, Ethernet, and router. The
    aquaphonic system integrated actuators and sensor maintain the control environment
    for better growth of the plant. The proposed system in future plan to extend for
    indoor farming of other crops The work in [14] used the multivariate LR and ANN
    to forecast the DO relative to pH, water temperature, and electrical conductivity
    (EC). Similar work extends in [10] and shows the comparative performance of ANN
    and LR with support vector machine (SVM). All the competing models have shown
    a significant accurate forecast of DO. However, these model accuracy of forecast
    relies on short interval high amount of historical data. Currently, we have identified
    various ANN models, such as LSTM and deep belief networks that are considered
    to be an appropriate to solve the forecast problem [15], [16]. Recently, certain
    studies have explored comprehensive water quality monitoring and management systems
    utilizing cultural knowledge models and forecasting models [17], [18], [19], [20],
    [21], [22], [24], [26]. Nevertheless, these systems did not specifically target
    the current requirement for developing a fully automated aquaculture setup. Moreover,
    their setups failed to attain the intended real-time data exchange and control,
    thereby affecting both water quality and aquaculture production. This paper introduces
    an Internet of Things (IoT) system that effectively manages freshwater aquaculture.
    The system is developed for freshwater pearls aquaculture, which considers the
    distinct water quality and management prerequisites. The proposed system can also
    dynamically accommodate the needs of other freshwater culture breeds. SECTION
    III. Baseline Data We have collected the baseline data from the Central Institute
    of Freshwater Aquaculture Bhubaneswar (CIFA Bhubaneswar) [32]. Table I illustrates
    the Optimal water conditions for pearl farming aquaculture. In an aquaculture,
    the primary focus should be monitoring the alkalinity and hardness of water parameters.
    The regional water bodies in different states have different alkalinity and hardness.
    Alkalinity is the indicator of resistance to acidification. Water bodies that
    have good alkalinity can prevent the sudden change in pH. Alkalinity indicates
    acid resistance, with higher alkalinity in water bodies helping prevent abrupt
    pH fluctuations. The connection between alkalinity and hardness is noteworthy,
    as total hardness is linked to calcium and divalent magnesium ions. The optimal
    water conditions for pearl farming recommends an alkalinity level of 100 PPM and
    a hardness level of 60 PPM. Research has shown that hard water proves more advantageous
    for productivity than soft water, although soft water is more conducive to the
    enhanced production of freshwater mussels. Alkalinity, a variable influenced by
    time, correlates with pH and temperature. Mornings typically see elevated pH levels
    along with moderate to high alkalinity. The intricate interplay between temperature
    and various biological and chemical reactions is evident, as warmer water hampers
    the solubility of atmospheric dissolved oxygen. Mussels inhabiting warmer waters
    necessitate a more excellent supply of dissolved oxygen. Likewise, DO is important
    in assessing water quality. Adequate oxygen levels are imperative for the well-being
    of pearl-farming mussels within the aquatic environment. However, in stagnant
    water, the diffusion of atmospheric oxygen is notably lower. To address this,
    we employ an oxygen pump and agitation to directly infuse atmospheric air into
    the water, augmenting the essential DO levels. photosynthetic activity in aquatic
    plants constitutes another source of dissolved oxygen. In the context of pearl
    farming, mussels feed on plankton. The presence of uneaten plankton further influences
    the habitable under water conditions. During daylight hours, these algae consume
    CO and release Oxygen. Consequently, DO levels experience an increase during the
    day, followed by a decrease at night and on heavily cloudy days. During nighttime
    hours and mainly overcast days, algae consume oxygen for respiration. Consequently,
    an abundance of algae growth leads to an elevation in the biological oxygen demand
    (BOD). The BOD is increased by mixing the ample nutrients in the pond. It also
    has a relation to time and temperature. During the night, the plankton algae consume
    the DO rapidly. The plankton density has a relation with DO and pH. However, the
    pH also has a relation to total alkalinity. The fluctuations in pH are less common
    in higher alkalinity. Similarly, carbon dioxide also has an ill impact on mussels.
    The higher concentration of carbon dioxide fluctuates the pH. However, the rate
    of change in pH is relatively less at higher total alkalinity. Carbon dioxide
    (CO2) concentration increases due to lack of photosynthesis and die-off of phytoplankton.
    There is a significant need to monitor the pond’s DO concentration to minimize
    the impact of carbon dioxide. Similarly, ammonia concentration is highly lethal
    for aquatic animals. Ammonia has a relation with DO, pH, and carbon dioxide. The
    ammonia increases, often decreasing the DO and increasing CO2. Ammonia toxicity
    is more pronounced at elevated pH levels. The primary sources of ammonia are the
    excretions of aquatic animals and the decomposition of organic matter. Maintaining
    control over ammonia levels is of utmost importance for optimal growth. Table
    II summarizes some of the recent available literature on the topic. Although some
    intelligent aquaculture systems have been proposed in the literature, more work
    needs to be done to integrate the factors that accurately determine the water
    quality, fault behavior analysis, optimal schedule for feeding, and fault-tolerant
    monitoring and management. Moreover, the existing systems cannot analyze and interpret
    real-time data rather monitor through some Web application. Still, much work needs
    to address for real-time control of the system parameters and intelligent data
    analytics integration at the edge devices or fog devices. As a result, the gap
    addressed in this article is relevant to the study. TABLE I Ideal Water Parameters
    for Freshwater Pearl Farming [32] TABLE II Existing Aquaculture Monitoring Systems
    SECTION IV. Component of Proposed IoT System for Aquaculture Management This section
    introduces the proposed smart IoT-based system for managing the aquaculture. The
    comprehensive system is organized into four distinct phases of development: physical
    design; network design; logical design; intelligent forecasting models. Fig. 1
    illustrates the conceptual layout of a smart aquaculture system based on IoT.
    Fig. 1. Conceptual design of intelligent-IoT-based aquaculture system. Show All
    A. Physical Design The physical layer is responsible for collecting the data from
    the sensors. System-integrated sensors gather the water quality parameters, and
    actuators manage the water quality parameters. The sensing nodes in the proposed
    system are integrated with analogue base DO, pH, Electric conductivity (EC), RTC
    timer, and temperature sensors, as shown in Fig. 2. These sensor assemblies are
    kept outside the aquaculture tanks, as shown in Fig. 3. To accurately measure
    the change from the sensor data, we have integrated the edge node with ADS1115
    16-bit precision analog-to-digital converter (ADC) [26]. Through the I2C interface,
    ADS1115 ADC communicates the sensor data to the edge node. The 1-wire DS18B20
    temperature sensor directly interfaces with the edge node. For edge computation
    and networking, we have selected the Beagle-bone Black. The Beagle-bone black
    has a variety of general-purpose input–output ports, which allows interaction
    with various communication interface protocols. The onboard 4-GB internal flash
    memory provides sufficient space to organize the data in the relational data model.
    The board has a 1-GHz ARM cortex processor, consuming less power and providing
    adequate processing capability. We have employed actuators such as aerator, submersible
    pumps, bio-filters, heaters, and valves to maintain a habitable aquaculture environment.
    The direct current (DC) operated actuators are connected through the L293 driver.
    The alternate current (AC) ran actuators are connected through relays. The proposed
    system has the following subsystem for aquaculture management: test setup; regent
    replacement-based ammonia sensor system; power management; automated smart feeder;
    RAS. Fig. 2. Edge node integrated sensors and actuators (adapted from [32]). Show
    All Fig. 3. Test equipment setup. Show All 1) Test Setup: In the proposed system
    design, we have an edge node equipped with temperature sensors (DS18B20), pH sensor
    (DFRobot Gravity, model SEN0161), and DO (DFRobot Gravity model no: DFR1628),
    ammonia sensor, and water EC sensor. Similarly, we equipped the edge node with
    actuators like water pumps, aerators, feeders, biofilters, water heaters, and
    solenoid valves. Except for the temperature sensor, all the sensors are kept outside
    the main harvesting tank, as shown in Fig. 3. This arrangement prevents the sensor
    monitoring tip from corrosion and extends their lifetime. The integrated actuator,
    comprising a submersible pump and valve, facilitates water transfer from the main
    tank to the test setup. After the water quality assessment, the valve attached
    to conical funnel releases the water. A non-contact water level sensor is employed
    to regulate the activation and deactivation of the valve and submersible pump
    to manage the water overflow in the conical funnel. After each water quality assessment,
    the distilled water is pumped to clean the sensor probe. The water quality assessment
    is scheduled through a RTC. Our experimental investigation determined that water
    quality within the culture pond does not change abruptly. Numerous factors, such
    as water temperature, weather conditions, feeding, and the discharge of by-products,
    influence water quality parameters. These parameters often exhibit inconsistency
    multiple times throughout the day. After analyzing a month’s recorded data, we
    have established an optimal schedule for managing the freshwater pearl aquaculture
    system. 2) Regent Replacement-Based Ammonia Sensor System: Ammonia is directly
    toxic to culture breeds in the unionized form, which is favored at high temperatures
    and pH. It also reduces the ability of culture breeds to utilize oxygen. Ammonia
    gets introduced into the water through excreted metabolic waste and the decomposition
    of organic matter. We have designed an inexpensive regent replacement-based ammonia
    sensor system to automate ammonia testing. The regent replacement-based ammonia
    sensor system automates manual regent-based ammonia testing. In the regent replacement-based
    ammonia sensor system, we have used the water level sensor, drop counter, and
    color sensor. Similarly, we have used the actuators like water pump, overhead
    steerer, check valve, and solenoid valve, as shown in Fig. 4. The scheduled set
    for water quality monitoring activates the ammonia sensor system. At the scheduled
    time, the edge not integrated DC submersible pump and solenoid valve start their
    operation to carry the water for quality test. The noncontact water level sensor
    immediately closes the solenoid valve and pumps when the required amount of water
    is in the conical funnel. Ammonia testing regent is available in the burette,
    which is controlled through a check valve. The overhead stepper motor pushes the
    check valve to make an air entry, resulting in ammonia regent drop released into
    the conical funnel. To manage the required amount of regent drop, we have a drop
    counter which signals to the stepper motor and closes the check valve. The drop
    counter is designed through an optical QRD 114 proximity sensor, invert Schmitt
    trigger (SN74HC14N), and OR gate (MN4072B IC). The regent in conical funnel mixes
    with overhead stirrer motor. The test result is recorded through an RGB color
    sensor and translated into the corresponding numeric PPM value. The test water
    in the conical funnel is released through the solenoid valve. After the test experiment,
    we pump the distilled water to clean the testing site for the next test. The filtered
    water is adequately mixed with the overhead stirrer motor and released from the
    solenoid valve. Fig. 4. Regent replacement-based ammonia sensor system. Show All
    3) Power System: In the power subsystem design, we have implemented using a 160-W,
    12-V mono-crystalline solar panel, a 24-V 30 Amp solar controller, 12-V lead-acid
    batteries, a 12-V relay, a 200-W AC inverter, and a 12-V DC-DC buck converter
    to ensure an uninterrupted power supply, as depicted in Fig. 5. The proposed strategy
    for overseeing and managing the aquaculture system is synchronized via an RTC
    lock. The absence of a proper schedule could impact the productivity of aquaculture.
    Water parameters exhibit inconsistency and undergo multiple fluctuations throughout
    each day. Consequently, maintaining a consistent and well-monitored schedule for
    the aquaculture system is paramount. Therefore, missing a schedule monitoring
    and management may impact aquaculture productivity. The proposed power subsystem
    operates the DC and AC devices. A DC–DC buck converter supplies the required power
    to the DC-operated overhead stirrer, solenoid valve, and stepper motor. Similarly,
    the AC inverter operates the 20-W submersible pump, 15-W air pump, and 50-W water
    heater. Fig. 5. Power subsystem. Show All 4) Automated Smart Feeder: A crucial
    aspect of the aquaculture system is the necessity for accurate monitoring of mussel
    feeding. Neglecting proper feed management can have multifaceted effects on the
    overall well-being of the mussels. Overfeeding, for instance, results in not only
    the loss of mussel life but also exacerbates the levels of food-based pollutants
    within the water [15] [31]. This overfeeding further amplifies the presence of
    excreted by-products in the water, subsequently elevating the concentrations of
    harmful ammonia and nitrate. Both ammonia and nitrate pose significant threats
    to the mussels’ health. At night, uneaten algae consume dissolved oxygen while
    introducing increased carbon dioxide (CO2) into the aquatic environment. Conversely,
    similar algae release the DO as a by-product of photosynthesis during daylight
    hours. For the equilibrium of the aquaculture ecosystem, it is imperative to uphold
    an appropriate feed. The repercussions of overfeeding and the prolonged presence
    of residual matter in the water can profoundly affect the quality of the water.
    Green algae are water-soluble and readily consumable by mussels and play a vital
    role in their diet. As demonstrated in Fig. 6, the smart feeder system comprises
    a submersible pump and agitator. These agitators effectively blend the solution
    of green algae, which is then transported to the harvesting tank by the submersible
    pump. Fig. 6. Automated smart feeder. Show All The RAS is responsible for purifying
    the cultured water, subsequently re-utilizing it after appropriate treatment.
    This recirculating system effectively channels the water through bio-filters,
    which serve to eliminate by-products from aquatic organisms and decomposing residues
    present within the water. The absence of technological support hampers aquaculture
    farmers in their efforts to oversee and sustain water quality manually. In open
    pond aquaculture, the water is polluted with diverse waste materials. These waste
    components undergo decomposition, thereby exerting an influence on the overall
    quality of the water. This RAS configuration transfers water from the harvesting
    tanks to the bio-filter chamber via pumps, as shown in Fig. 7. Subsequently, the
    purified water is directed back into the main tank. This recirculating procedure
    is initiated after each feeding cycle. The innovative RAS design effectively addresses
    the primary issue of ammonia concentration and regulates pH levels. Fig. 7. RAS
    [32]. Show All B. Network Design The network design incorporates a communication
    framework connecting sensing, fog, and gateway nodes, as illustrated in Fig. 8.
    The socket communication API facilitates sensor data and controls communication
    between the edge and fog nodes. The gateway is the mediator of this communication
    between private and public networks. In the proposed network design, fog node
    placement is essential for data analysis and control. Fog nodes have local databases
    and analytics algorithms to process the data. The time scheduled monitoring and
    management are controlled by the fog node. However, the Amazon Web Services (AWS)
    EC2 infrastructure-as-a-service also runs an identical Web server. Data processing
    near the sensing node offers the benefit of maintaining the system optimally,
    ensuring adherence to scheduled monitoring and management tasks. The existing
    capacity of the public cloud needs to be improved to effectively address challenges
    such as latency and bandwidth constraints [31]. Relying solely on the cloud server
    for comprehensive analysis and control could yield undesirable outcomes. The potential
    for interruptions in connectivity between the sensing node and cloud servers raises
    the risk of timely scheduled operations being compromised at the sensing node.
    To mitigate these concerns, we have strategically positioned cloud analysis closer
    to the sensing node through fog nodes, thus averting disruptions to scheduled
    data analysis and control. However, the fog nodes primarily serve as data processing
    and storage intermediaries. The responsibility of managing scalable storage and
    processing of sensor data remains within the purview of the public cloud. The
    Rest API serves as the web server’s communication channel for data and control.
    Encoding of both data and control information is carried out using the base64
    format. Furthermore, a combination of MQTT and RestAPI protocols is utilized to
    facilitate the communication between the nodes. The local network between the
    nodes communicate to Amazon cloud EC2 instance via gateway router, as depicted
    in Fig. 9. We have employed the TP-link router for this gateway setup. This router
    features dual bands: IEEE 802.11ac/n/a at 5 GHz and IEEE 802.11n/b/g at 2.4 GHz,
    offering bandwidths of 450 Mbps and 1300 Mbps, respectively. We harnessed supplementary
    router capabilities such as the virtual private network (VPN) and Network Address
    Translation (NAT) features to enhance security and functionality. Notably, the
    VPN server integrated within the router furnishes a safe network environment for
    remote access from the public network. The secure tunnel also provides remote
    users to monitor and manage aquaculture operations. Fig. 8. Network configuration
    between the nodes [32]. Show All Fig. 9. Logical representation of the network
    configuration between the nodes. Show All C. Logical Design In a Data Processing
    layer, we have composed distinct functional components, each contributing to functions
    like data visualization, control, command, and processing. We have used the Python
    web framework for the front-end aspect. The graphical user interface (GUI) on
    the front end offers an array of functions, as illustrated in Fig. 10. The graphical
    user interface (GUI) was created using the technology stack of JQuery, Chart.js,
    CSS, and HTML5. The back-end is constructed using the MYSQL database. The web
    server is deployed at Amazon cloud EC2 instance and at fog node within the network.
    To streamline cloud-based data analytic, we have implemented visualization using
    docker containers. This approach simplifies the challenges inherent in application
    development. Container-based visualizations require the application and its associated
    binaries and libraries. The isolation of containers occurs at the kernel level,
    eliminating the need for a separate guest operating system and minimizing resource
    duplication. Each container runs isolated data analytic models, enabling seamless
    scaling or updating of micro-services without disrupting other application functionalities,
    as depicted in Fig. 11. It is a swift, low-cost, and elegant isolation framework.
    The isolated containers forecast the change in water parameters through different
    nonlinear decision tree-based models. The IoT dashboard has additional features
    like recalibration, fault detection, and status monitoring of sensors and actuators.
    The data analytics visualize the forecasted data along with actual data. This
    feature lets us know the difference between real sensor data and analytics-driven
    predicted data. In order to safeguard the identity of each device, a distinct
    and random API key has been employed. This key is specific to each device within
    the network. The API key is unique to every device in a network. The customer
    signs up and changes the API key. The remote login to the edge device is protected
    through a VPN server running the TP-link AC1750 wireless dual-band gigabit gateway
    router. Fig. 10. IoT dashboard [32]. Show All Fig. 11. Container-based visualizations.
    Show All D. Intelligent Forecasting Models We have adopted a data analytic approach
    to manage aquaculture operations. The predictive model analyses the change in
    water parameters and effectively operates the actuators. In this study, we analyze
    the feasibility of the tree-based model to forecast the water parameter in the
    presence of a low amount of data. We focus on two main scenarios: 1) estimating
    water parameters based on the relative change in other parameters and 2) predict
    alterations in water conditions using historical data. Besides, we also compare
    the performance of the tree-based model with existing multivariate LR and ANN.
    The prime focus of this study is to analyze the DO forecast relative to pH, water
    temperature, and TDS. The most common approaches for water quality prediction
    in aquaculture include the following: autoregressive moving average (ARMA); autoregressive
    integrated moving average (ARIMA); Markov model; support vector regression (SVR).
    These models are inappropriate for prediction in aquaculture water quality parameters
    as they only consider the linear relationship. The water quality parameters are
    inconsistent due to various environmental factors; hence linear prediction models
    are inefficient in correlating the relationships between multiple predictors and
    their respective variables. These models also take a long prediction time, making
    them unsuitable for predicting the nonlinear relationship [25], [27]. Deep learning
    models like LSTM may need to be more stable for predicting all real-time dynamics.
    The predictive processes can be linear to a single target quality parameter and
    its dynamics over time between multiple predictors and their respective variables.
    LSTM and gated recurrent unit (GRU) are flexible in capturing the nonlinear relationship
    in water quality parameters [28]. Due to its outstanding results in time-series
    prediction, LSTM is the most popular forecasting DL technique. For time-series
    prediction, LSTM and GRU models could be better at keeping long-term memory, especially
    for extended sequences. In time-series forecasting, historical observations influence
    the prediction value at the present step. In certain circumstances, the observation
    step that had a significant impact may have appeared long before the current step.
    Recent research has shown that the ability of LSTM models to extract information
    about long-term relationships from historical observations remains a crucial performance
    constraint. Theoretically, it has been demonstrated that ordinary LSTM lacks long
    memory from a statistical standpoint [29]. Compared to Naive Bayes, K Nearest
    Neighbors, and SVM, decision tree learning and neural networks result in better
    and more consistent performance. Known as KIG-ELM, the hybrid DO prediction model
    combines K -means, enhanced genetic algorithms (IGAs), and extreme learning machines
    (ELMs) and is based on edge computing architecture. This model distributes data
    acquisition, processing, and DO prediction among sensing nodes, routing nodes,
    and servers. For DO prediction, an ELM is implemented. Because of the unstable
    prediction performance constraint, it takes a lot of time to obtain high precision
    using the multiscale decomposition method. Multiparameter methods, which use several
    related parameters as input and the DO content as an output to forecast future
    DO, still have some significant issues, such as insufficiently processing DO data
    effectively and failing to recognize the characteristics of DO content changing.
    The DO time-series data is volatile. During sunrises and sunsets, forecast accuracy
    typically drops off quickly [30]. In our proposed method, we have compared the
    accuracy of models like ANN, GBM, RF, and M5 model trees. We have chosen the models
    mentioned above due to certain advantages of these models. Table III summarizes
    the befits and limitations of the selected models. TABLE III Comparison of Forecasting
    Models For designing a predictive model, we employ a model tree (M5) and benchmark
    its performance against a GBM, RF, and artificial neural network (ANN). Unlike
    linear models, tree-based models accommodate non-linear relationships, making
    them apt for monitoring real shifts in water parameters [27]. Random forest comprises
    multiple individual random decision trees functioning as an ensemble, with each
    tree acting as an independent predictor. The ensemble predictions, formed from
    low-correlation individual trees, surpass the accuracy of solitary predictions.
    Optimal RF predictions require careful feature vector selection instead of random
    sampling, aiming for low correlation within the distinct decision trees. Similarly,
    gradient boosting progressively enhances the performance of the CART algorithm.
    Initially assigning equal weights during decision tree training, subsequent modifications
    refine prediction quality. Weight adjustments focus on harder-to-classify instances,
    strengthening their influence, while easing-to-classify ones see reduced weight.
    Subsequent trees yield improved forecasts over their predecessors. The ultimate
    prediction rests upon an ensemble’s weighted sum of prior tree predictions. Furthermore,
    model tree-based predictive analysis forms a decision tree hierarchy using elementary
    models like linear regression, logistic regression etc. Initially, the given feature
    vector is fitted with a linear model. Later, the error is estimated between the
    actual target and predicted values. The least error features are chosen as the
    conditional branch of the decision tree. The subsequent split goes until the leaf
    node has an optimized linear model fitted on the partial feature vector. The trained
    model tree effectively forecasts the change in water quality parameters. The recursive
    optimization of the decision tree may lead to an overfitting problem. To deal
    with the overfitting problem, we have used the prepruning method to filter out
    the anomalies in the data set using the local outlier factor (LOF) [32]. Similarly,
    we have applied the post-pruning method to prevent the decision tree growth to
    its full depth. The post-pruning method simplifies the model tree and optimizes
    the prediction accuracy. Similarly, the ANN models are the conventional approach
    for time-series forecasting. However, unlike the tree-based model, ANN-based models
    need a larger data set for training and testing, and it is not easy to interpret
    the information from the trained model. We analyze the performance of the multilayer
    perception ANN model with a ReLu activation function. SECTION V. Experiments and
    Results A. Experimental Setup and Control System We have used the glass aquarium
    for freshwater pearl farming. The Lammelidens marginalis mussel species is used
    for pearl production, as shown in Fig. 12. Each mussel is implanted with two designed,
    crafted mussel shell nuclei. In the implantation process, each mussel passes through
    a surgical procedure. After successful implantation, each mussel is placed within
    tanks dedicated to post-operative care, where antibiotics and an oxygen pump are
    administered. Some mussels might reject the implanted foreign particles and die,
    while others accept them. Those mussels that accept the foreign particles are
    transferred from the post-operative care tanks to the primary harvesting tank.
    Maintaining a controlled environment is imperative to ensure optimal pearl production.
    The proposed system has sensors and actuators that manage the habitable underwater
    environment [31]. Fig. 12. Aquaculture main harvesting tank [32]. Show All In
    the initial stages of data processing, we investigated how temperature influences
    biological and chemical reactions. The fluctuation in temperature notably impacts
    water parameters over an entire day. Hence, we’ve established five distinct time
    intervals for data acquisition. The first acquisition, scheduled at 6:00 AM, coincides
    with the lowest temperature and DO levels, alongside the highest pH and moderate
    alkalinity. The second interval, at 10:00 AM, aligns with the initiation of the
    smart feeder system and aeration. At 3:00 PM, the third acquisition takes place,
    coinciding with peak temperature, pH, and DO levels. The fourth instance, at 10:00
    PM, corresponds to the commencement of the recirculating aquaculture system. This
    system involves water passing through a bio-filter to eliminate residual plankton
    feed, as nocturnal plankton consumption affects dissolved oxygen. Analytical algorithms
    oversee DO changes and aeration operation. The fifth interval, at 1:00 PM, analyzes
    aeration requirements through data analysis. RTC control manages system operations.
    We validate the control system by simulating changes in water parameters to observe
    system behavior [31]. The smart data analytics algorithm schedule the requirement
    for aquaculture management based on the change in the water parameters. The intelligent
    data analytics algorithm schedules the requirement for aquaculture management
    based on the change in the water parameters. B. Data Preprocessing The sensing
    node simplifies raw sensor data for processing. In some initial data, sensor data
    may be missing, potentially leading to erroneous predictive analysis. To address
    this, data imputation is executed at the fog node due to sensing node constraints.
    The sensing node aggregates sensor data using base64 encoding, forwarding it to
    the fog node. Upon receipt, the fog node decodes and validates the data before
    predictive analysis. For missing sensor values, the fog node employs data processing
    to determine correlations between historical and current data. Scheduled RTC data
    acquisition simplifies correlating current and similar-timestamp historical data.
    Utilizing the KD tree, the missing sensor feed is imputed by analyzing non-missing
    neighbouring sensor data. The Kd tree searches the nearest neighbor of similar
    timestamps from the historical n proximity sensors and imputes the missing sensor
    feed by reading the nearest neighbors’ sensor feeds. Subsequently, the sensor
    data undergoes pre-processing to identify anomalies. Anomalies within the dataset
    are eliminated by applying the LOF, made by Singh et al. [32]. This technique
    identifies aberrant data points by assessing their local deviation compared to
    neighbouring points. The resulting LoF score is then utilized to ascertain the
    presence of outliers in the data ⎧ ⎩ ⎨ LOF(k)∼1 data point in a same cluster LOF(k)<1
    data point is Inlier LOF(k)>1 data point is outlinear. View Source In the equation
    above, the variable “k” denotes the locality concerning its k th neighbours. To
    assess the efficiency of LOF, we introduced an additional outlier data point into
    the dataset. The experimental findings indicate that LOF proficiently identifies
    outliers within the dataset, as Figs.13 and 14 illustrate. Fig. 13. Outlier detection
    between DO and pH [32]. Show All Fig. 14. Outlier detection between DO and temperature
    [32]. Show All C. Aquaculture Control System The actuators respond to control
    signals generated by the data analytic algorithm. This algorithm utilizes past
    data to predict shifts in DO levels, taking into account correlated water parameters
    like temperature and pH. Relying solely on sensor data for system operation can
    lead to imprecise monitoring. Prolonged usage of sensors often introduces inaccuracies
    in measurements. Despite any discrepancies in sensor measurements, we counteract
    deviations from the desired state by considering the historical data recorded
    at similar time instances. We have considered the water temperature, EC, and relative
    pH parameters for predicting DO levels. Likewise, we have considered the interdependent
    parameters of DO, electrical conductivity (EC), and water temperature for predicting
    pH values. To evaluate the precision of the DO sensor data, we compare the pH
    and water temperature data with historical records from similar time intervals.
    We have integrated a K-D tree to improve the search procedure, as depicted in
    Fig. 15. Fig. 15. Aquaculture control system. Show All The predicted DO values,
    and those extracted from historical records might display either close resemblances
    or notable disparities. Should the relative variation remain below 0.5 parts per
    million (PPM) between the predicted and retrieved DO values, the system functions
    smoothly without sensor malfunctions, adhering to a schedule derived from the
    analytic process. Conversely, suppose the relative divergence surpasses 0.5 PPM.
    In that case, it triggers a re-calibration of the sensors, resulting in an adjusted
    schedule based on other correlated parameters such as EC and water temperature.
    A combination of multiple temperature probes and EC sensors is employed to ensure
    precise prediction as they are robust and cost-effective relative indicators for
    forecasting DO and pH levels. Likewise, the relationship between pH and DO is
    influenced by various factors. pH fluctuations are attributed to changes in water
    ion composition, which can be readily deduced through the EC sensor. In cases
    where the pH sensor produces inaccurate readings, the EC sensor is employed to
    stabilize both DO and pH variations. An absolute difference exceeding 1 part per
    million (PPM) prompts a system alert, indicating a potential sensor malfunction,
    prompting a transition to alternative parameters (EC and water temperature). Enhanced
    precision in prediction is achieved through the combined utilization of correlated
    relative parameters. Our initial investigation encompasses pH, DO, EC, and water
    temperature as interconnected parameters for comprehensive water quality analysis.
    Integrating multiple relevant sensor inputs contributes to the refined forecast.
    The incorporation of the actuator system is designed in response to variations
    in the target water parameters, as outlined in Table I. The gathered data orchestrate
    diverse actuator actions through the Real-Time Clock (RTC). Overnight accumulation
    of by-products and leftover feed leads to alterations in pH and DO levels within
    the water, which are normalized through the operation of the Recirculating Aquaculture
    System (RAS) and the aerator system, scheduled at 6 A.M. Later at 10 A.M., smart
    feeder system pumps the plankton algae mixture into the harvesting tank and operates
    the aerator to supplement desired to DO requirement. The third sensor measurement
    time was set to 3 P.M. when mussels excreted by-product, and temperature variation
    may fluctuate the DO and pH. To balance the DO and pH, the proposed system, based
    on the requirement, may operate the RAS system and aerator. At 10 P.M., scheduled
    actuator operation, we balance the DO and pH through RAS and aerator. Similarly,
    at the 1 P.M. overnight schedule, the proposed system analyzes the DO requirement
    and accordingly operates the aerator. We adjust the water parameters to validate
    the functionality of the control system. The intelligent data analytics algorithm
    schedules the aquaculture management requirement based on the water parameters.
    D. Performance Evaluation for Predictive Analysis The cleaned data serves as input
    for predictive analysis. Initially, we computed bilateral Pearson correlations
    among the water parameters. Subsequently, we aggregated the highly correlated
    data elements for predictive analysis. The outcomes of the bilateral Pearson correlations
    are presented in Table IV. The examination unveils a significant correlation between
    DO and temperature, demonstrated by correlation coefficients of 0.52. Similarly,
    pH exhibits correlations with DO and temperature, indicated by correlation coefficients
    of 0.73 and 0.82, respectively. Given the pivotal role of DO and pH as aquaculture
    indicators, they have been incorporated into the training dataset. Furthermore,
    water temperature exerts notable influence over chemical and biological reactions.
    The inclusion of water temperature in our feature vector has been undertaken.
    Considering the interrelation between DO, pH, and water temperature, we have designed
    the model training process where pH and temperature serve as independent variables,
    and DO functions as the dependent variable. We contrast tree-based models with
    the ANN model to evaluate performance. We used the multilayer perceptron with
    ReLu as the activation function for the ANN model. Due to limited test measurement
    from the aquaculture site, we have kept 1000 validation runs using a training
    set of 160 samples and a test set of 40 samples to obtain the convergence of mean
    and standard deviation on the performance indicators. In M5 model tree construction,
    we have used the parameters such as linear model, maximum depth of decision tree
    = 4, the minimum number of samples at leaf = 10, and greedy search strategy. The
    model tree training generates the ten rules, as shown in Fig. 16. For DO prediction,
    the M5 model tree shows a strong correlation R=0.877 between the actual and predicted
    data. The model estimated mean absolute error (MAE) was 0.963. Table V shows the
    comparative performance of the M5 model tree for DO prediction with other nonlinear
    decision tree-based predictors. The training process encompasses 80% of the sample
    data (160 instances), while the remaining 20% (40 instances) is designated for
    testing the model’s performance. The non-linear RF, GBM, and M5 model tree are
    assessed with a maximum tree depth set at 4 and a sample size 40. All the nonlinear
    tree-based model RF, GBM, and M5 model trees showed better performance compared
    to ANN. The slightly lower performance of ANN is due to the smaller size of the
    training data set with multiple input parameter. TABLE IV Pearson Correlation
    Analysis Results [32] TABLE V Result of DO Predicted From Nonlinear Forecasting
    Models Fig. 16. Generated model tree with maximum depth = 4. Show All The comparative
    performance analysis obtained the lowest MAE of 0.963 from the M5 model tree.
    The model performance is validated using the new data set from the sensors. Similarly,
    we have evaluated the model performance for pH prediction using a training sample
    containing DO, pH, and temperature water parameters. Table VI shows the comparative
    performance of the model tree for pH prediction with other nonlinear decision
    tree-based predictors. TABLE VI Result of PH Predicted From Nonlinear Forecasting
    Models Figs. 17 and 18 display the correlation outcomes of the M5 model tree for
    pH and DO, comparing actual and predicted values. The correlation between predicted
    and actual DO values stands at 0.8775, accompanied by a satisfactory MAE of 0.963.
    Similarly, the pH prediction yields a high correlation of 0.974, alongside a minimal
    MAE of 0.01239. The experimental evaluation shows that the M5 model tree algorithm
    can predict the changing water parameters better than other RF, ANN, and GBM nonlinear
    predictors. In the comparative study, we found M5 model tree is slightly better
    than other nonlinear RF, GBM, and ANN models. Despite less training data, we obtain
    a better result with the M5 model tree due to its inherent features of grouping
    the high correlations data for constructing the M5-model tree. Fig. 17. Correlation
    between actual versus predicted DO values. Show All Fig. 18. Correlation between
    actual versus predicted pH values. Show All The employed M5 model tree performs
    the group analyses of relative water parameters. We adopt the pruning methods
    for the model to generalize well to unseen data. The pruning method optimizes
    the tree structure without affecting the classification accuracy. The REP algorithm
    pruned the growing tree and used the information gained as the branching criteria.
    Redundant subtrees were pruned to solve the overfitting problem and maximize the
    forecasting accuracy. SECTION VI. Conclusion This article introduces a holistic
    Internet of Things (IoT) system designed to oversee and uphold aquaculture operations.
    The proposed system design has a physical, network, and logical design. The physical
    design provided the hardware configuration details. In contrast, the network design
    shows the communication network between the physical devices. In this design,
    we have addressed the requirement of a fog node for intelligent data analytics
    and control. In the logical design, we have discussed the front-end and back-end
    implementation details. It also highlighted the importance of container-based
    virtualization and the various design features. This article also discusses the
    importance of the core intelligent analytics algorithm for monitoring and managing
    aquaculture. The closed-loop control system ran through intelligent nonlinear
    decision tree-based models. This article shows the comparative performance of
    the M5 model tree, RF, ANN, and GBM. The experimental evaluation found that the
    M5 model tree has the highest prediction accuracy for DO prediction with a correlation
    of 0.877 with an MAE of 0.963. Similarly, the M5 model tree outperforms PH prediction
    with a correlation of 0.975 and an MAE of 0.0123. Future research in this direction
    includes more robust relative water sensors to make the system more affordable
    and accurate. In future research, we also include analyzing and developing a more
    accurate forecasting model. Authors Figures References Keywords Metrics More Like
    This Water quality classification and monitoring using e-nose and e-tongue in
    aquaculture farming 2014 2nd International Conference on Electronic Design (ICED)
    Published: 2014 Internet of Farming Things and RTOS based Robotic System for Water
    Quality Monitoring and Fish Feeding in Freshwater Aquaculture 2023 14th International
    Conference on Computing Communication and Networking Technologies (ICCCNT) Published:
    2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An Intelligent-IoT-Based Data Analytics for Freshwater Recirculating Aquaculture
    System
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bera S.
  - Dey T.
  - Ghosh S.
  - Mukherjee A.
  citation_count: '1'
  description: Internet of Things has revolutionised our daily life by providing varied
    smart applications. Smart healthcare, smart home monitoring, smart city, smart
    retail, etc., are various sectors where Internet of Things serves as the principal
    element. Agriculture is one of the significant sectors of a country that also
    seeks smart solutions. The use of Internet of Things in agriculture has become
    popular in the last few years. In this chapter, we discuss the use of Internet
    of Things in smart agriculture along with the use of dew computing. The dew computing
    paradigm is able to provide access to the data even offline. The architecture
    of dew computing-based smart agriculture has been demonstrated. Various machine
    learning algorithms used for data analysis have been discussed. The advantage
    of using dew computing over the conventional cloud-only system, edge/fog computing-based
    system, are also highlighted in this chapter. From the simulation results, we
    observe that the dew computing-based paradigm has approximately 40% and 55% lower
    latency than the edge-based and cloud-only paradigms, respectively.
  doi: 10.1007/978-981-99-4590-0_14
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Dew Computing pp 289–316Cite as
    Home Dew Computing Chapter Internet of Things and Dew Computing-Based System for
    Smart Agriculture Somnath Bera, Tanushree Dey, Shreya Ghosh & Anwesha Mukherjee  Chapter
    First Online: 03 September 2023 127 Accesses 1 Citations Part of the book series:
    Internet of Things ((ITTCC)) Abstract Internet of Things has revolutionised our
    daily life by providing varied smart applications. Smart healthcare, smart home
    monitoring, smart city, smart retail, etc., are various sectors where Internet
    of Things serves as the principal element. Agriculture is one of the significant
    sectors of a country that also seeks smart solutions. The use of Internet of Things
    in agriculture has become popular in the last few years. In this chapter, we discuss
    the use of Internet of Things in smart agriculture along with the use of dew computing.
    The dew computing paradigm is able to provide access to the data even offline.
    The architecture of dew computing-based smart agriculture has been demonstrated.
    Various machine learning algorithms used for data analysis have been discussed.
    The advantage of using dew computing over the conventional cloud-only system,
    edge/fog computing-based system, are also highlighted in this chapter. From the
    simulation results, we observe that the dew computing-based paradigm has approximately
    40% and 55% lower latency than the edge-based and cloud-only paradigms, respectively.
    Keywords Internet of things Dew computing Machine learning Agriculture Latency
    Access provided by University of Nebraska-Lincoln. Download chapter PDF 1 Introduction
    The “Internet of Things (IoT)” facilitates data collection, processing, and exchange
    by connecting devices and communication paths. The goal of the IoT is to create
    a smart environment by using intelligent things, items, and devices with communication
    and sensing capabilities, which can generate data on their own and communicate
    the data over the Internet [1]. IoT is defined as a network of numerous “things”
    or “objects” around us, such as sensors, mobile phones, and Radio Frequency Identification
    (RFID) tags, which enable them to communicate with one another and successfully
    carry out their responsibilities. These choices are made in order to deal with
    challenges relevant to human living, such as energy conservation, climate change,
    mobility, healthcare, business logistics, building automation, etc. IoT is a technology
    that naturally supports the establishment of autonomous federated services and
    applications. It is distinguished by a high level of autonomy in data collection,
    event transmission, network connectivity, and interoperability. Things concentrate
    on combining generic objects into a framework that is easy to use, whereas the
    Internet works on creating an integrated network. IoT uses the Internet as a communication
    and information-exchange medium with the goal of fusing the real world with the
    virtual one. IoT is described as a network of interconnected computing devices,
    objects, animals, mechanical and digital machines, or people, with unique identifiers
    [1], and can transmit data over a network. The tremendous influence the IoT idea
    will have on a number of facets of daily life and potential consumers’ behaviour
    is without a doubt its greatest strength. IoT is a technological innovation, and
    according to the idea of innovation diffusion, consumer acceptance of new technology
    is highly influenced by how it is introduced and how beneficial the user perceives
    it to be. Users will more readily embrace technologies in their daily lives if
    they believe that they are simple to use and allow them to contribute more. The
    most evident effects of the implementation of IoT will be visible from the perspective
    of individual users in the working place as well as at home. It is also widely
    utilised to access multimedia information and services as well as other diverse
    tasks via social network applications, with statistics showing that about two
    billion people use the Internet daily [2, 3]. In addition to being successfully
    used in various fields, IoT is successfully implemented in the agriculture field
    also. IoT-based solutions are being created to autonomously monitor and maintain
    agricultural crops with the least amount of human participation. IoT has significantly
    changed the environment for agriculture by examining many difficulties the farmers
    face. In the field of agriculture, technological applications are employed to
    lower costs and increase agricultural yields or quality. The use of WSN in satellite
    agriculture provides farmers with statistical support, enabling them to make more
    informed decisions. With the development of technology today, it has been predicted
    that agriculturalists and technologists will use IoT to solve difficulties the
    farmers face, such as water shortages, concerns with cost control, and productivity
    problems. By continuously monitoring the field, IoT-based smart farming enhances
    the overall agricultural system [4]. Modern IoT technologies have identified all
    these problems and fixed them to raise productivity while decreasing costs. The
    IoT in agriculture has reduced the lavish use of resources like water and electricity
    and saved farmers’ time by utilising sensors and connections [1, 5]. The IoT is
    producing an unprecedented volume of data, which in turn strains the Internet’s
    infrastructure severely. Large corporations are therefore trying to figure out
    how to lower that pressure and address the data problem. In particular, by enabling
    all of the connected devices to collaborate, cloud computing will play a significant
    role in that. Aggregating data and gaining insights from it require the use of
    the cloud. Data comparison over larger areas is substantially more challenging
    without the cloud. Additionally, high scalability is another benefit of using
    the cloud [6, 7]. Sharing resources is a major component of cloud computing, which
    is essential for IoT platforms. In addition to sharing resources, cloud computing
    also makes the most of them. Additionally, cloud services are accessed by users
    from any area and on any device with an Internet connection. When discussing the
    IoT platform, it should be accessible 24/7 from any location [8]. The mission
    of passing down human knowledge to future generations can be accomplished very
    effectively with cloud computing. Farmers all over the world use IT tools to manage
    and distribute their crop-related data quickly and easily. The farming sector
    is also deploying additional hardware and software resources for measuring luminance
    as well as temperature, humidity, and soil moisture. Agriculture’s modernisation
    lessens its reliance on the climate, improves the use of already-available resources,
    and quickly disseminates information about new methods and resources. Additionally,
    it offers contemporary agricultural machinery, planting and breeding techniques,
    weather observation and forecasts, and production management and organisation
    techniques [9]. Building a network of interconnected smart devices is made possible
    by cloud computing and IoT. The computing problems cannot yet be solved using
    these two approaches. Inextricably linked to IoT, the new paradigm of fog computing
    expands the cloud by extending some services to the network edge near the end
    users in an effort to lessen the computational load on the network. Additionally,
    fog computing is mainly introduced for applications that require low latency real-time
    processing. Large-scale, geographically dispersed fog nodes placed at the edge
    of networks make up the fog layer [10]. Fog is dependent on the availability of
    computing, storage, and networking resources, just like the cloud. Servers or
    networking hardware with more processing power may be used as fog nodes. Fog computing
    seeks to bring processing power closer to the customers while preventing the overuse
    of cloud resources and further reducing computational burdens. The most crucial
    pieces of information are transmitted while any extraneous data is filtered out
    and deleted according to the fog computing paradigm. Utilising end-device resources
    to give the network a better intelligence distribution and improve performance
    is one of the key objectives of fog computing. Servers or networking hardware
    with additional processing power can act as fog nodes. Even wireless access points
    could include them. The majority of the time, fog nodes will be placed near end
    users at the network’s edge [11]. Additionally, by providing storage, processing,
    networking, and data management on network nodes close to IoT devices, fog computing
    serves as a bridge between the cloud and the edge. For farmers and other agricultural
    stakeholders, agriculture is made simple by these distinctive qualities. For instance,
    it may be necessary to swiftly and locally process sensitive data collected by
    all devices [12]. There is another emerging area called edge computing. Edge computing
    has been proposed to increase efficiency and address cloud-related problems by
    providing local data processing and storage at the end devices. In order to meet
    the high computation and low-latency needs of deep learning on edge devices, edge
    computing is a viable option. It also offers additional advantages in terms of
    privacy, bandwidth efficiency, and scalability. Edge computing allows data to
    be examined near the source, sometimes by a local trustworthy edge server, avoiding
    the public Internet and minimising vulnerability to privacy and security assaults.
    This helps to address privacy challenges [13, 14]. In the agricultural sector,
    edge computing is mainly used for pest identification, product safety tracking,
    autonomous agricultural equipment, agricultural technology promotion, intelligent
    management, etc. Furthermore, by delivering cloud capabilities close to end users,
    edge computing supports the transition to fifth generation (5G). To maximise the
    benefits in agriculture, edge must be combined with other computing technologies
    like cloud and fog [15, 16]. For edge, fog, and cloud computing, Internet connectivity
    is required. However, if the network connectivity is interrupted, then the quality
    of service is reduced. Here, dew computing is one of the feasible options. Dew
    computing enhances the offering of human-aware customised services at the network’s
    edge. Dew computing is an innovative form of computer organisation and architecture
    that builds on the practical cloud and conventional client–server architecture.
    In order to complete a task, cloud computing offers service models, fog computing
    permits “on-the-spot” on-network processing, and edge computing makes use of computation
    of tasks that were started at network edges. All the mentioned generic model is
    expanded upon by dew computing to a sub-platform paradigm [17, 18]. In this chapter,
    we specifically focus on the utility of dew computing in agriculture. In Sects.
    2 and 3, we discuss the use of machine learning and deep learning in agriculture,
    respectively. In Sect. 4, we demonstrate the use of IoT in agriculture. Section
    5 briefly discusses cloud, fog, edge, and dew computing. Section 6 illustrates
    the use of dew computing in agriculture. Finally, Sect. 7 concludes the chapter.
    2 Machine Learning in Agriculture In recent years, machine learning (ML) techniques
    are largely used in the agriculture domain for improving the productivity and
    quality of the crops [19, 20]. ML algorithms are used for a particular crop to
    determine the condition in which the best yield would be produced. ML models have
    the ability of decision-making and can take actions in a real-world framework
    with minimal human interaction. ML, a subset of artificial intelligence (AI) that
    focuses on learning, can estimate yields more accurately utilising a variety of
    features. ML may extract information from datasets by finding patterns and correlations.
    The models must be trained using datasets depicting the outcomes based on prior
    knowledge. Multiple features are used to build the predictive model, and as a
    result, the model parameters are selected using the historical data during the
    training phase. A part of the previous dataset is used in the testing phase for
    evaluating the performance. Depending on the research issue, the ML model can
    be categorised as descriptive or predictive. For gaining and explaining knowledge
    from collected real-time data, we use a descriptive model, whereas for predicting
    the data for the future, we use a predictive model. Hence, there is a challenge
    for ML studies to choose the appropriate algorithm for solving the problem at
    hand. Single sample spaces can be predicted using traditional statistical methods.
    Additionally, using ML techniques, many predictions can be made. Unlike ML approaches,
    where we must take the structure of data models into consideration, traditional
    methods do not require this [19, 20]. In precision agriculture, crop production
    prediction is a challenging issue, and various models have been proposed. Since
    agricultural production varies on a wide range of variables, including soil, weather,
    climate, seed variety, and fertilizer use, this problem makes the use of several
    datasets essential. This shows that predicting agricultural yields involves a
    number of challenging processes and is not a simple operation [21]. The three
    most important parameters to consider when estimating the amount of water needed
    in each agricultural crop are moisture, temperature, and humidity. The sensors
    for measuring temperature, humidity, and moisture are placed in an agricultural
    field, and the collected data is analysed inside the cloud. ML techniques such
    as decision tree are applied to the collected data [22]. Machine learning (ML)
    facilitates extracting useful insights from huge volume of data by analyzing,
    correlating with contexts, and finding interesting but previously unknown patterns.
    According to the learning type (supervised or unsupervised), models are used to
    accomplish the chosen goal. ML tasks are often divided into a variety of broad
    categories discussed as follows: Categorized tasks of ML: ML techniques are usually
    categorised as supervised and unsupervised learning. In supervised learning, the
    software is trained using training examples before being used to draw an accurate
    conclusion from the incoming data. Supervised learning techniques include artificial
    neural networks, decision trees, Bayesian networks, support vector machines, Interactive
    Dichotomizer3 (ID3), and k-nearest neighbour algorithms, among others. Unsupervised
    ML involves feeding software with huge data, and the programmes will uncover patterns
    and connections between them. Therefore, to find hidden patterns in the data,
    unsupervised learning can be used. K-means clustering, self-organising maps, partial-based
    clustering, and k-nearest neighbour are a few examples of unsupervised learning
    algorithms. Supervised learning algorithms employ labelled training data for inference
    (classification, regression). Unsupervised learning algorithms use unlabelled
    data to find hidden patterns in the existing data (clustering) [23]. Interpretation
    of learning: In order to reserve information as much as possible from the original
    data, dimensionality reduction (DR), an approach that is used in both supervised
    and unsupervised learning, aims to provide a more condensed, lower-dimensional
    representation of a dataset. In order to mitigate the effects of dimensionality,
    it is typically carried out before using a classification or regression model.
    Principal component analysis [24] and linear discriminant analysis [25] are the
    popular DR algorithms. ML models: ML techniques can be utilised for agricultural
    purposes to forecast crop production, soil monitoring, crop growth monitoring,
    etc., because the data amount is vast and growing daily. The process of classifying
    is the transformation of an input set of instances into a specific set of attributes,
    also referred to as target attributes or labels. Numerous applications employ
    categorization methods such as bayesian classifiers, decision tree classifiers,
    artificial neural networks, nearest neighbour classifiers, random forests, and
    support vector machines [26]. Various ML models are described as follows: (i)
    Decision Tree: Decision tree is a very popular and simple classifier for handling
    classification issues. Decision tree models incorporate nodes, branches, terminal
    values, strategy, payout distribution, specific equivalents, and the rollback
    procedure. In a decision tree, objects are arranged in a graph according to the
    values of their features in order to be classified. This algorithm is built in
    two steps: first, a massive decision tree grows, then its size is reduced and
    it is pruned in the second phase if it is overfitting the data. The depicted classification
    tree is the trimmed decision tree that is employed for categorization. The prediction
    is influenced by a number of things. To construct the yield mapping and anticipate
    the production, agronomic data, nitrogen treatment, and weed management utilise
    ML algorithms like artificial neural network (ANN) and decision tree [27]. They
    come to the conclusion that ANNs can produce high prediction accuracies. Decision
    tree was used for detailed modelling of soybean productivity [28]. They took into
    account environmental elements like evaporation, the highest possible temperature,
    the highest possible relative humidity, rainfall, and crop yield for soybean.
    They used the ID3 algorithm, an information-based technique that is predicated
    on two presumptions. The soybean crop production is significantly influenced by
    the relative humidity. There are certain criteria developed that aid in the low
    and high soybean production prediction since relative humidity has a significant
    impact on soybean yield. (ii) Bayesian classifier: Sometimes prediction of class
    labels for a given set of input attributes can be challenging. Even when matching
    some of the attributes from the training data set with values from the input attribute
    set, class variables are nondeterministic. This is plausible given the existence
    of certain noisy data and perplexing elements, which are ignored during processing.
    In such applications, it is necessary to describe the probabilistic correlations
    between the attribute set and the class label; the bayesian classifier focuses
    on explaining such tasks. This kind of model falls under the field of supervised
    learning and can be used to address classification or regression issues. Some
    of the most well-known algorithms in the literature are Naive Bayes [29], Gaussian
    Naive Bayes, and a mixture of Gaussians [30]. (iii) ANN: ANN, a supervised learning
    method is based on the biological process of our brain. Once trained, a neural
    network may predict patterns in future data that are comparable, for example,
    producing meaningful solutions to issues even when the input data is inaccurate
    or incomplete. ANN is a connectionist system; given a weight, each connection
    is in charge of sending a signal from one node to another. Before sending a signal
    to another node, a node examines the signal it has just received. In ordinary
    ANN implementations, the signal at each artificial neuron''s connection is essentially
    a real number, and each neuron''s output is obtained by a nonlinear function of
    the sum of all of its inputs. ANNs can absorb complexity without being aware of
    the underlying concepts. Any process can use ANN to determine the relationship
    between input and output [31]. ANN was used to forecast potato production in Iran
    based on input energy and to design output energy and greenhouse gas emissions
    (GHG) [32]. In terms of energy usage, power, chemical fertilizer, and seed were
    the three main factors. To confirm the symptoms of the tomato crop, artificial
    intelligence and ML algorithms (particularly ID3) were used to create a web-based
    expert system with Java at the front end and SQL at the back end [33]. The professional
    arrangement had two key components: a tomato knowledge system and an expert system,
    where the applicant may acquire all the reliable information on various topics
    such as varieties, symptoms of pests and illnesses, cultural practises, and a
    mosaic of tomato fruits and plants via message. ANN was used to present the intelligent
    control system for efficient irrigation scheduling [34]. Models were created using
    input variables including air temperature, soil moisture, radiation levels, and
    humidity. The amount of water required for irrigation was then assessed using
    the proper method, ecological conditions, evapotranspiration, and crop type, after
    which associated effects were simulated. The suggested system was contrasted to
    an ON/OFF controller, and it was demonstrated that due to these constraints, the
    ON/OFF controller-based system failed. However, ANN-based approaches have made
    it possible to adopt stronger and more effective control. Convolutional neural
    networks and generative adversarial networks (GAN) were combined in the suggested
    ANN-based approach [35]. Due to its capacity for knowledge accumulation and forgetting
    reduction, the suggested method was able to recognise all categories from both
    new and old tasks with good performance. In [36], the artificial neural network
    was used to estimate the crop utilising soil characteristics including soil type,
    nitrogen, pH, phosphate, potassium, calcium, organic carbon, magnesium, manganese,
    sulphur, copper, and iron as well as climate parameters like temperature, rainfall,
    and humidity. Crops like sugarcane, cotton, bajara, jawar, soybeans, corn, rice,
    wheat, and groundnut were used in the experiment. (iv) Regression analysis: Regression
    is a type of supervised learning model that seeks to produce an output variable
    based on known input variables. The most popular algorithms are stepwise regression,
    logistic regression, and linear regression. Additionally, more sophisticated regression
    methods have been created, including multiple linear regression and multivariate
    adaptive regression splines. For agriculture-related organisations, consultants,
    producers, etc., crop output is crucial. Crop forecasting can be done using a
    variety of data types, including soil, remote sensing, agro-metrological, and
    agricultural statistics. Marketing, storage, and transportation decisions depend
    on accurate and timely forecasting. The construction of a crop prediction model
    was examined in [37], and it was shown that planting methods, particularly the
    application of the proper quantity of fertilizer, had a significant impact on
    corn production rather than climate-related variables as the key predictors of
    yield. For the purpose of predicting the yield, a model was built by employing
    the fortnightly weather variables, such as average daily maximum and lowest temperatures,
    morning and evening relative humidity, total fortnightly rainfall, and the yield
    data of the sugarcane [38]. Their forecast model was able to account for 87% of
    the fluctuation in the sugarcane output. They also concluded that two months prior
    to harvest, the sugarcane production might be successfully forecasted using the
    regression technique. Although there are several statistical methods for agricultural
    production, regression analysis is one of the mostly used methods [39]. (v) Clustering:
    The practise of finding things that are similar to one another but distinct from
    individuals in other groups is known as cluster analysis or clustering. As the
    similarities between things in one group and the differences between objects in
    various groups increased, the clustering would get better. The fundamental technique
    of data mining is clustering, which has numerous applications in areas including
    agriculture, image analysing, pattern recognition, data compression, machine learning,
    etc. In addition to classification, segmentation, and partitioning, clustering
    can also be used to categorise items. Cluster analysis and classification are
    comparable; thus we can define clustering as unsupervised learning. Classification
    and cluster analysis are distinct from one another since clustering does not preserve
    class information whereas classification does. Additionally, cluster analysis
    suggests categories based on data patterns as opposed to classification, which
    classifies fresh samples into known classifications [40]. There are many clustering
    algorithms, including k-means, the expectation maximisation technique, k-medoid,
    hierarchical clustering, and others, but k-means is the most popular and significant
    one [26]. Numerous factors contribute to the popularity of hierarchical clustering,
    including the following: Unlike k-means clustering, which demands a particular
    value, it does not. The tree that was constructed has useful taxonomy. Only the
    distance matrix is needed to calculate the hierarchical clustering. To evaluate
    the prediction of crop properly, k-means clustering algorithm was demonstrated
    in [41]. The modified k-means clustering technique is given the determined number
    of clusters and starting cluster centres. The same determined value of the number
    of clusters is provided and initial cluster centres are uniformly picked because
    the number of clusters (k value) is required at the beginning for standard k-means
    and k-means++. By contrasting k-means and k-means++ methods, the modified k-means
    clustering algorithm is evaluated and found to produce the greatest number of
    high-quality clusters, accurate crop predictions, and the highest accuracy count.
    (vi) Support Vector Machine (SVM): The general discriminant classifier or SVM
    is frequently employed in the field of pattern recognition. The SVM model uses
    the concept of a surface called a hyperplane to represent a number of classes,
    with the border between the data examples being drawn and shown in multidimensional
    space. By employing the “kernel trick”, it is possible to significantly improve
    the classification skills of conventional SVMs by converting the original feature
    space to a feature space with a larger dimension [42]. Non-separable problems
    are converted into separable problems [43]. SVMs are based on global optimization
    and handle overfitting issues raised in high-dimensional spaces, which makes them
    appealing in a variety of applications [44]. The support vector regression algorithm
    [45], least squares support vector machine [46], and successive projection algorithm
    [47] are three popular SVM algorithms. (vii) k-Nearest Neighbour (k-NN): The k-nearest
    neighbour (k-NN) method is a supervised learning classifier, which applies proximity
    for generating classifications or predictions regarding the grouping of a single
    data point. Though, for classification or regression it can be used, it is generally
    used for classification as it is based on the concept that comparable points close
    to one another are discoverable. It is computed how far away every data point
    in the training collection is from the specified test example. The k points which
    are closest to the data point are known as the k-Nearest Neighbour. The classification
    of the data point then depends on the class labels of its neighbours [48]. If
    a data point has more than one neighbour with a class label, the class label that
    contains the most class labels is applied to the data point. The exact value of
    k''s closest neighbours must be established. The noise that is present in the
    training data may cause misclassification if the value of the k is too low. However,
    if the value of k is too high, there is a risk of misclassification since the
    collection of nearest neighbours can include data points, which were already located
    distant from the area surrounding the test characteristic [49]. In [50], real-time
    environmental measurements were taken in Mangalore, Kodagu, Kasaragod, and other
    districts of the state of Karnataka. These measurements included soil type, rainfall,
    humidity, etc. The values of the closest known neighbours can be used to predict
    the crop yield, which is an unknown value. Calculating the Euclidian distance
    between those places makes this achievable. Thus, for the specified input parameters,
    crop yield may be predicted. Different distance functions, including the most
    often used one, the Euclidean distance function, could be used to calculate the
    distance between points in a feature space. Let''s assume that \\(p\\) and \\(q\\)
    are shown as feature vectors. The Euclidean metric is typically used to calculate
    the distance between \\(p\\) and \\(q\\). If \\(a = ({a}_{1},{a}_{2})\\) and \\(b
    = ({b}_{1},{b}_{2})\\), the distance is given by Eq. (1). $$\\mathrm{d}(\\mathrm{a},\\mathrm{b})
    = \\sqrt{{({b}_{1}-{a}_{1})}^{2}+ {({b}_{2}-{a}_{2})}^{2}}$$ (1) (viii) Random
    Forest: The supervised machine learning technique known as “random forest” consists
    of many decision trees created using random vectors, each of which makes a decision.
    Regression techniques and classification problems can be addressed using this
    strategy. It is based on ensemble learning (EL), a method of integrating various
    classifiers to deal with critical issues. EL models create a linear combination
    of simpler base learners in order to enhance the prediction performance of a specific
    statistical learning or model-fitting method. The probability of receiving a more
    accurate result grows as the number of trees in the forest increases since the
    random forest''s output is inversely proportional to the number of trees it integrates
    into the forest [51]. It is crucial to understand that building a forest differs
    from building decision trees. In case of random forest (RF) classification, the
    process of locating the root node and dividing the feature nodes will be random
    [52]. RF classification is common because of its advantages; enough trees are
    available so that the overfitting issue will be avoided. Again, in this classifier,
    missing values are also handled suitably. RF classifier is used in various sectors
    such as the stock market, banking, e-commerce, medicine, agriculture, etc. [53].
    In banking, it is used to distinguish between legitimate and dishonest consumers.
    In the stock market, an RF classifier is used to watch a stock''s activity and
    then to determine its gain and loss. It can also be applied in e-commerce to predict
    product recommendations [54]. 3 Deep Learning in Agriculture The term “smart agriculture”
    refers to the extensive use of AI in agriculture, which includes big data, IoT,
    deep learning, and many other smart systems. For analysing a huge amount of data,
    deep learning [55,56,57] comes into the picture. It has immense potential, has
    shown promising outcomes, and has been successfully applied in a variety of industries,
    including agriculture [55]. The foundation of deep learning is a set of machine
    learning algorithms, which model high-level abstractions in data through a variety
    of nonlinear transformations. Deep learning (DL) has a number of benefits, including
    feature learning, which refers to the autonomous extraction of features from the
    raw data. There are different common deep learning networks used in agriculture,
    such as recurrent neural networks and convolutional neural networks, briefly described
    as follows: Recurrent Neural Network (RNN): In contrast to standard neural networks,
    RNNs are neural sequence models, which make use of the sequential information
    in the network. RNN is an adaptation of ANN, which indicates that the network''s
    current input and output are connected. The unique expression is that the network
    will remember the previously learned information and utilise it to calculate the
    output of the current network; in other words, RNN may be thought of as a Backpropagation
    (BP) neural network whose output is used as the input to the next network. Even
    though RNN theoretically solves time series problems, it is challenging to do
    so in practise since the amount of information fluctuates, which can lead to gradients
    disappearing or exploding. Input layer X, hidden layer S, and output layer Y of
    an RNN can be thought of as a short-term memory unit [56]. A development of the
    recurrent neural network, the long short-term memory (LSTM) network is primarily
    intended to address time series problems with long intervals and large delays.
    To selectively alter the present state of the RNN, LSTM relies on the structure
    of a few “doors” [58, 59]. Convolutional Neural Network (CNN): A deep learning
    method called CNN, which contains numerous convolutional layers, pooling layers,
    and fully connected layers, has made significant advancements in speech recognition,
    face identification, natural language processing, etc. [60]. As long as there
    are sufficient large data sets available for defining the problem, classifications
    will have a higher possibility of being accurate in CNN. Convolutional layers
    and pooling layers make up the structure for feature extraction, while fully linked
    layers serve as a classifier [61]. While convolutional networks first transform
    signals into features and subsequently map the features to a specified target
    value, Backpropagation neural networks primarily map features via the network
    to specific values [61]. The fully linked layers often take advantage of the high-level
    features learned at the final layer to classify the input images into predetermined
    groups. CNN models perform classification and predictions particularly effectively
    due to their highly hierarchical structure and great learning capacity. They are
    also flexible and adaptive in a broad variety of situations [62, 63]. Fully Convolutional
    Network (FCN): FCN is a CNN-based architecture that generates a semantic mask
    as output by down-sampling (convolution), followed by up-sampling (deconvolution).
    A predicted label for the input image is often produced by downscaling the input
    image and passing it through numerous convolution layers. FCN networks do not
    downscale the image, therefore, the output is not a single label, allowing for
    an upsampling of the output and the prediction of the class''s pixel-by-pixel
    characteristics [64]. CNN indicates that classification accuracy is 1–8% higher
    than SVM [65, 66], 41% advancement compared with ANN [67], and 3–11% higher than
    unsupervised learning [68]. Additionally, CNN performed better than SVM regression
    [69], Large Margin Classifier (LMC), and Naïve Bayes Classifier [70, 71]. In case
    of RNN, LSTM achieved comparatively 1% better performance than SVM and RF [72],
    and 44% advancement than SVM [73]. 4 IoT in Agriculture The traditional approach
    to agriculture is to advance modernised farming while researching relevant IoT
    areas in the agricultural sector. Systematic evaluation provides current and future
    trends in the agriculture sector. IoT has several uses in the field of digital
    agriculture, including crop growth monitoring, fertiliser selection, irrigation
    decision support systems, etc. With a wide variety of sensors being utilised for
    diverse smart agricultural goals, the IoT has also recently made a major influence
    on the agriculture sector. Utilising the Internet to connect numerous networked
    devices, such as numerous sensors, drivers, and smart objects, to mobile devices,
    provided efficient production to the smart agriculture industry. The IoT sensors
    interact with actuators and need wireless connectivity. Microprocessor, memory,
    input/output interfaces, and communication components make up the embedded system.
    There are various types of sensors including airflow sensors, mechanical sensors,
    optical sensors, location sensors, and mechanical sensors used to track and measure
    various parameters (for instance, soil nutrients and weather information) and
    temperatures of the atmosphere, different depths of the soil, precipitation, relative
    humidity, atmospheric pressure that affect production [74]. The development of
    mobile technology, wireless communication networks, and the ubiquity of services
    has made it possible for a vast amount of people to be connected to the Internet.
    The core network layer, or Internet, provides pathways for the transmission and
    exchange of data and network information between various subnetworks. Data is
    accessible anywhere and at any time due to IoT devices’ connection to the network.
    Therefore, adequate security, real-time data support, and accessibility are required
    for data transfer over the Internet [75]. Managing user interfaces, services,
    network node organisation and coordination, computing, and data processing are
    all part of cloud computing, which collects massive amounts of data for archival
    and analysis. IoT middleware and networking protocols are being created to enable
    the Internet-based connectivity of heterogeneous systems and devices. IoT middleware,
    like actor-based and cloud-based, is basically used for supporting the IoT [76].
    A crucial component of the effective implementation of IoT systems is communication
    technology. Standards, spectrum, and application scenarios can be used to categorise
    the current communication technology. Standard: Long-range and short-range communication
    standards are two categories of the communication standard. Short-range standards
    like Bluetooth, ZigBee, and Z-Wave can span a range of 100 m or less, whereas
    long-range communication protocols like LoRa, and NB-IoT can transmit data over
    a distance of up to 10 km. Long-range communication standards are within the low
    power wide area category (LPWA) that takes low power but gives a large area coverage
    [77]. Spectrum: One can divide the communication spectrum into licenced and unlicensed
    spectrum. The industrial, scientific, and medical (ISM) band, a radio frequency
    spectrum, is used in the unlicensed spectrum. On the other side, the licenced
    spectrum that has been assigned to the cellular network provides consumers with
    improved traffic management, less interference, higher reliability, increased
    quality of service (QoS), a high level of security, more coverage, and lower infrastructure
    costs. The cost of membership for data transmission as well as the transmit power
    consumption on IoT devices are disadvantages of using licenced spectrum. On the
    other side, the downsides of using unlicensed spectrum include interference, infrastructure
    costs, and security concerns. Application Scenario: Application requirements for
    the IoT device influence the choice of communication technology. A backhaul network
    or an IoT device that serves as a node can employ communication technology. Low-data-transmission
    nodes use less power and travel a very little distance. The backhaul network can
    be used over very long distances and supports high data speeds. Additionally,
    the kind of topology that will be deployed will also influence the communication
    technology that is selected for the IoT device. An IoT device performs various
    roles and tasks in each of these topologies. The function ((full function device
    (FFD) or a reduced function device (RFD)) can either be an end device or a personal
    area coordinator (PAN). Every aspect of conventional farming processes can be
    drastically altered by integrating the most recent IoT technologies. The IoT may
    now be seamlessly integrated into smart agriculture. IoT can help to deal with
    many traditional farming problems, such as drought response, yield optimization,
    land appropriateness, irrigation, pest management, etc. 4.1 Soil Sampling and
    Mapping The major goal of soil analysis is to ascertain a field''s nutritional
    status so that appropriate action can be taken when nutrient deficits are discovered.
    The cropping history, soil type, application of fertilisers, irrigation level,
    topography, etc., are important variables to consider when analysing the levels
    of soil nutrients. These variables provide information on the soil''s chemical,
    physical, and biological conditions, allowing for the identification of the constraints
    on the crops and the subsequent management of those constraints. In order to better
    match soil qualities, such as seed compatibility, sowing time, and even planting
    depth, as certain crop types are deep-rooted while others are not, soil mapping
    makes it possible to sow various crop kinds in a given area. Manufacturers are
    offering a variety of sensors and toolkits to help farmers to monitor the quality
    of the soil. These devices make it possible to keep track of soil characteristics
    including texture and water-holding capacity. Moderate resolution imaging spectroradiometer
    (MODIS) sensor was used in [78] for mapping different soil characteristics, and
    calculating the probability of land degradation in sub-Saharan Africa. Technology
    based on sensors and vision is useful in determining the distance and depth for
    effective seeding. In [79], the authors described the development of the autonomous
    Agribot seeding robot, which is sensor and vision-based. 4.2 Irrigation Since,
    fresh water must be retained in lakes, rivers, and similar reservoirs to sustain
    it, humanity depends on 0.5% water to meet all of its needs and to maintain the
    ecosystem [80, 81]. It is important to note that the agricultural sector alone
    uses over 70% of the available freshwater [82]. Due to the shortage of water worldwide
    and the rising demand for water in various sectors of the economy, water should
    be delivered only when required and in the required amount. To address the water
    wastage issues, several controlled irrigation techniques, such as drip irrigation
    and spray irrigation, are being encouraged. When there is a water deficit, both
    the quality and quantity of the crops suffer because irregular irrigation, even
    excessive irrigation, reduces the nutrients in the soil. Building a precise soil
    and air moisture control system by employing wireless sensors not only makes the
    best use of water, but also improves crop health because it is not always simple
    to take crop yield metrics into account. By using developing IoT technologies,
    it is anticipated that the current state of irrigation methods would change [83].
    With the adoption of IoT-based solutions, such as irrigation management based
    on the crop water stress index (CWSI), a sharp rise in agricultural efficiency
    is anticipated. A wireless sensor network is utilised to collect the aforementioned
    measures, followed by transmission to a processing hub, in which the related intelligent
    programmes are used to analyse the farm data. Water consumption efficiency is
    finally increased through CropMetrics’ Variable Rate Irrigation (VRI) optimization,
    which takes topography or soil variations into account [84]. 4.3 Fertiliser In
    order to reduce the adverse effects of nutrients on the environment, fertilisation
    is a key component of intelligent agriculture. Based on a variety of variables,
    including soil type, crop type, soil absorption capacity, fertility type and utilisation
    rate, product yield, meteorological condition, etc., fertilisation requires site-specific
    measurements of soil nutrient levels. The issue is that measuring soil nutrients
    is time- and money-consuming because it normally necessitates the analysis of
    soil samples from each location. With greater accuracy and with less labour input,
    new IoT-based fertilization techniques enable the assessment of spatial patterns
    of nutrient requirements [85]. The NDVI is a tool for estimating crop health,
    vegetation vigour, and density, and it also helps to determine the level of soil
    nutrients. The IoT-based smart fertilisation is being greatly aided by a number
    of current enabling technologies, including Global Positioning System (GPS) accuracy
    [86], Variable Rate Technology (VRT) [87], and autonomous robots [88]. 4.4 Crop
    Disease and Pest Management By precisely identifying agricultural pests, modern
    IoT-based intelligent equipment like wireless sensors and drones are enabling
    growers to significantly reduce pesticide usage. Pest management based on IoT
    is more successful since it offers real-time monitoring, modelling, and disease
    predictions. Modern IoT-based pest management is more successful since it offers
    real-time monitoring, modelling, and disease predictions [89]. Sensing, evaluating,
    and treating are often the three factors to determine how effectively crop diseases
    and pests are managed. Advanced disease and pest recognition methods are built
    on image processing, whereby field sensors, unmanned aerial vehicles, or satellites
    are used to collect raw images from all over the crop area. Remote sensing imagery
    typically covers broad areas and provides better efficiency at a reduced cost.
    On the other side, field sensors have a greater capacity to support data collection
    tasks including environmental sampling, plant health, and pest situations across
    the entire crop cycle. Automated traps powered by the IoT can collect, count,
    and even classify different insect species; they can then upload data to the cloud
    for in-depth research [90]. The same methods which are frequently employed for
    smart fertilisation, such as vehicle precision spray and automatic VRT chemigation,
    can also be applied for the treatment of diseases and other pesticide applications
    [91]. The IoT-based pest control technology offers various benefits, including
    the ability to lower total costs while also assisting in the climate''s restoration.
    4.5 Yield Supervision, Crop Forecasting, and Harvest The technique known as “yield
    supervising” is used to examine several factors related to agricultural production,
    such as moisture content, grain mass flow, and harvested grain quantity. When
    it comes to precision farming, yield monitoring is regarded as being significant,
    not just during harvest, but also before that because yield quality monitoring
    is important. Crop forecasting is the technique of foreseeing the yield and production
    prior to the harvest. The farmer can plan and make decisions based on this prediction
    for the near future. For this monitoring, which spans many stages of development
    fruit characteristics such as colour, size, etc., are used. Predicting the ideal
    harvesting window not only maximises the crop quality and output, but also gives
    managers the chance to modify their management approach. Different mobile applications
    are developed for displaying harvest data that will be uploaded to the web platform
    of the manufacturer. In this context, many researches have been carried out over
    the years, with sensors and IoT-based technologies assisting in the improvement
    of traditional agricultural processes to increase the crop output without or with
    minimal impact on its originality. To address the aforementioned problems, new
    advanced settings, which are more tightly controlled, are anticipated. With the
    help of IoT, the advance level of agricultural aspects like vertical farming,
    greenhouse farming, phenotyping, etc., are used to build the super smart agricultural
    system. 5 Cloud-Fog-Edge-Dew Computing in Agriculture Along with IoT, cloud computing
    is utilised in the agricultural industry. Cloud storage is required because IoT
    devices produce more data than the classic database paradigm can store. Nowadays,
    along with cloud computing for better service provisioning fog, edge, and dew
    computing also become popular. 5.1 Cloud Computing Cloud computing combines significant
    IT resources using the Internet on the backend and makes them accessible to the
    user community through clearly defined interfaces. Processors, storage, networks,
    specialised hardware resources, and other services are examples of cloud resources.
    These resources are made available to users in the cloud on a pay-per-use basis
    as needed. Today, cloud computing has applications in practically every field,
    including science, engineering, business, and social sectors. The IoT and cloud-based
    big data analytics play a significant role in the feasibility study of smart agriculture.
    Smart farming maximises resource efficiency while minimising environmental effects.
    At the moment, sensors can provide incredibly precise measures of crop status.
    Actuators can control agricultural activities involving livestock, crops, greenhouses,
    irrigation, soil, and weather based on those values. This can lead to advancements
    in harvest forecasting, weather prediction, increase in productivity, water conservation,
    real-time data collecting, and production, as well as decreased operating costs,
    precise farm and field evaluation, equipment monitoring, and remote monitoring
    [92]. The area of agriculture is being benefited significantly from cloud computing
    over the past few decades. The major characteristics of cloud computing in agriculture
    include data collection and remote storage, low-cost access to information and
    communication technology (ICT) resources, online access to agricultural experts,
    automation of land records, and weather forecasting. Similar issues apply to the
    usage of cloud computing in the agriculture sector, including constant and fast
    network access, security, and privacy. There are some major applications of cloud
    computing in the agriculture field: Enormous amounts of information: Individual
    farmers can easily store and access information from the cloud, including information
    about crops, weather, markets, farmers’ experiences with agricultural procedures,
    and information about pesticides. Inexpensive use of IT resources: It is the more
    affordable and dependable way to get access to resources. The use of cloud computing
    allows farmers to access resources and services as needed. Simple answer to farming
    problems: Cloud computing has made it possible for farmers to easily solve issues,
    which may arise at many phases of their agricultural activities, from tilling
    to marketing and selling of their crops. Tools for gathering data: There are numerous
    efficient and trustworthy data collection methods available today. These methods
    are simple to combine with cloud computing applications. Applications for sensors
    include monitoring soil and water quality, forestry, and forecasting changing
    environmental conditions. The sensors may detect water in the soil, or they can
    measure humidity, liquid pH, or pressure. Predicting the weather: Farmers can
    choose their crops based on weather forecasting for a specified period of time.
    When the climate is unsuitable for a seasonal crop, a farmer can choose a different
    seasonal crop. 5.2 Fog Computing Fog computing is a growing computing technique
    to enhance and support cloud computing. Fog computing platforms include a number
    of features to deliver services to users more quickly and improve the QoS. As
    a result, it is becoming a crucial strategy for IoT-based applications focusing
    on users and entails real-time operations [93, 94]. High processing power and
    extensive data storage are features of cloud and fog computing. The core concept
    of fog computing is a geographically dispersed architecture that connects several
    smart devices in an IoT environment similar to the cloud, but it is situated close
    to the end users. Hence, it may support latency-sensitive applications and services
    [3, 92]. The use of intermediate devices, between the end node and cloud, serves
    as fog devices. Precision agriculture, which is a developing field, is applied
    to the suggested fog computing approach. Additionally, using this framework, they
    were able to replicate and demonstrate how the two-tier fog computing technique
    may considerably minimise the quantity of data that is sent to the cloud [95].
    Its purpose is to facilitate communication, computation, and storage between the
    user and the cloud. Instead of using cloud servers, computations, and data processing
    can be partially done by the intermediate nodes, which will lighten the overhead
    of the cloud servers. The services and applications of fog computing are dispersed,
    which has several benefits including speed, fault tolerance, and security. Fog
    is excellent for real-time processing since it is close to the edge, enabling
    real-time interactions between IoT devices [92, 95]. The development of creative
    farming methods is gradually increasing crop yield, increasing profitability,
    and lowering irrigation waste. 5.3 Edge Computing Edge computing and related paradigms
    are at an early stage of developmental. Despite its advantages (cost savings,
    efficiency, scalability, and reliability), cloud computing faces significant difficulties
    when dealing with large amount of data. The challenges of cloud computing, such
    as low latency, real-time analytics, high network bandwidth, data management,
    energy usage, security, load balancing, and privacy, can be resolved using edge
    computing [96]. Edge computing is suggested as a way to enhance speed and solve
    cloud-related issues by enabling local data processing and storage at endpoints.
    Hence, edge computing is a computational approach that locates computing power
    and storage closer to the end user, at the edge of the network. It offers intelligent
    services with cloud computing [97,98,99]. Edge computing offers various advantages
    such as: Data streams from various sources are processed by the nodes before being
    sent to the cloud to conserve bandwidth and storage space and to filter out noise.
    Processing data close to its source of origin results in proximity and reduced
    latency. Decentralised processing and storage allow greater scalability. Each
    node of the network has privacy. Edge computing is a strong component for enabling
    global smart environments in agriculture [100]. Edge-enabled services can be categorised
    as node-centric services and cloud-centric services. The node-centric services
    operate independently of the cloud. The cloud-centric services rely on at least
    one cloud service to function. The majority of the systems analysed in the preceding
    section might be categorised as cloud-centric. Reduced latency, better bandwidth
    usage, and work offloading are the three key advantages of edge computing [101,102,103,104,105],
    which were used to varied degrees. Local edge devices were employed for initial
    data processing, and core cloud services were used for second-level offloading,
    storage, and alert generating. Rural broadband connection is still a major issue
    everywhere in the world. The consequences of intermittent Internet access can
    be partially mitigated by edge computing, but comprehensive analytics-driven service
    provision needs access to the cloud. A third model based on delay tolerance should
    be taken into consideration for the agricultural domain, according to the intractability
    of this problem. Delay-tolerant edge services may be used as a design template
    for services, which need a connection to the cloud, but only in circumstances
    where sporadic network access is the norm. The idea of delay/disruption tolerance
    is well-established in the networking field, where it is regarded as a workable
    solution to problems like excessive latency and uncertain network availability.
    However, from the standpoint of service, delay tolerance must be taken into account
    from the very beginning of the service''s design. When accustomed to immediate
    Internet access, services that do not respond in near real-time may initially
    appear out of the ordinary. However, many agricultural services can wait; the
    IoT’s requirement for constant Internet access is frequently superfluous because
    many environmental parameters change rather slowly. Other wireless technologies
    may be used to cover the farm and link to the edge node there in situations where
    an urgent alert needs to be brought to the farmer''s notice. In this scenario,
    the service''s underlying logic must reside on the node. Global food security,
    the present state of smart agriculture, and the prevalent problem of internet
    connectivity are considered in [106]. In [106], the use of the edge computing
    model in agriculture has been illustrated. The use of cloud, fog, and edge computing
    in the existing literature on agriculture are summarised in Table 1. Table 1 Existing
    literature on the use of cloud, fog, and edge computing in agriculture Full size
    table 5.4 Dew Computing The “micro-service(s)” concept is anticipated to be used
    by dew computing in a very diverse, extremely vertical, and highly distributed
    hierarchy. Data dispersal into low-end devices like smartphones, tablets, laptops,
    e-book readers, etc. becomes viable in this new area of centralised-virtualisation-free
    computing paradigm. As a result, it opens up a brand-new possibility for data
    accessibility without constant Internet access. As a result, dew computing encompasses
    all current network technologies as well as a wide range of essential traits like
    independent, mobile data aggregation, cooperative applications, and hybrid network
    behaviour [113]. Dew computing has the following advantages: It is lightweight.
    It maintains the information that is used frequently in its databases. The cloud
    server allows the regeneration of this data. All tasks, such as DBMS control,
    identity mapping, raw data synchronisation, rule-based data collecting, dew script
    analysis, etc., will fall under its purview. It will eventually become apparent
    to the user as a Personal Information Centre. The user will always have access
    to its services, whether or not they have an Internet connection. Independence
    and collaboration are two pillars of dew computing architecture [114]. Independence
    refers to a computer''s ability to function without cloud services or a network
    connection. In other words, it indicates that this application is not a cloud
    service or an entirely online application. Collaboration requires that, while
    in use, the dew computing automatically communicates data with cloud services.
    Synchronisation, correlation, or other forms of interoperation are examples of
    this collaboration [17]. In order to continue storing data when a connection is
    sporadic, dew computing seeks to replicate data close to sensors or users. In
    case of connection failure, it enables access to a local copy of the data. It
    enhances false tolerance and reliability [115]. The use of dew computing in agriculture
    will be demonstrated in Sect. 6. 6 Dew Computing in Agriculture In the dew computing-based
    model, the sensor data is accumulated at the dew layer. When internet connectivity
    is available the data is transmitted to the cloud through the edge/fog nodes.
    Figure 1 presents the dew computing-based architecture for smart agriculture.
    The proposed paradigm contains: Fig. 1 Dew computing-based architecture for smart
    agriculture Full size image Sensors Microcontrollers Edge/fog nodes Cloud servers.
    The four-layer architecture is described as follows: Layer 1: Layer 1 contains
    the sensor nodes. A sensor node (\\(S\\)) is mathematically defined as $$S\\;
    = \\;\\left\\langle {{\\text{ID}}_{s} ,O_{s} } \\right\\rangle$$ where \\({\\mathrm{ID}}_{s}\\)
    denotes the ID of the sensor node, and \\({O}_{s}\\) denotes the type of the object.
    The sensors are used to collect the object data such as soil temperature, soil
    moisture, nitrogen, phosphorous, potassium level, pH level, environmental temperature,
    humidity, etc. The sensors are connected to the microcontroller present at layer
    2. Relay nodes can be used in layer 1 if required. The sensors at layer 1 transmit
    the collected data to the microcontroller at layer 2. Layer 2: Layer 2 contains
    microcontrollers. A microcontroller (\\(M\\)) is mathematically defined as $$M
    = {\\text{ }}\\left\\langle {{\\text{ID}}_{m} ,C_{m} } \\right\\rangle$$ where
    \\({\\mathrm{ID}}_{m}\\) denotes the ID of the microcontroller, and \\({C}_{m}\\)
    denotes the configuration of the microcontroller. The microcontroller receives
    the data from the sensor and stores the data. The microcontroller can pre-process
    the data. The microcontroller here serves the purpose of a dew layer. If Internet
    connectivity is not available, it holds and pre-processes the data. The microcontroller
    sends the data to the edge/fog node at layer 3 when Internet connectivity is available.
    Layer 3: Layer 3 contains the edge/fog nodes. An edge/fog node (\\(N\\)) is mathematically
    defined as $$N = \\left\\langle {{\\text{ID}}_{n} ,C_{n} } \\right\\rangle$$ where
    \\({ID}_{n}\\) denotes the ID of the edge/fog node, and \\({C}_{n}\\) denotes
    the configuration of the edge/fog node. The edge/fog node performs further processing
    on the data and forwards it to the cloud at layer 4. Layer 4: Layer 4 contains
    the cloud servers. A cloud computing instance (\\(I\\)) is mathematically defined
    as $$I\\,=\\,\\left\\langle{\\mathrm{ID}}_{i},{C}_{i}\\right\\rangle$$ where \\({\\mathrm{ID}}_{i}\\)
    denotes the ID of the cloud component and \\({P}_{i}\\) denotes the set containing
    the processing unit IDs. The cloud servers after receiving the data store it if
    required for further analysis. The total latency of the dew computing-based paradigm
    is computed as the sum of the data collection latency (\\({L}_{1}\\)), data processing
    latency (\\({L}_{2}\\)), and data transmission latency (\\({L}_{3}\\)), given
    as $$L = {L}_{1}+{L}_{2}+{L}_{3}$$ (2) Using MATLAB 2021, we have simulated the
    dew computing-based, edge computing-based, and only cloud computing-based architecture.
    Figure 2 presents the latency using the proposed dew computing-based paradigm,
    existing edge-based paradigm, and cloud-only paradigm. We observe that the use
    of dew computing reduces the latency by approximately 40 and 55% than the edge-based
    and cloud-only paradigms respectively. Fig. 2 Comparison of latency between dew
    computing-based, edge computing-based, and cloud-only paradigms Full size image
    As the dew layer holds the collected data and pre-processes the data before forwarding
    it to the next layer, the data transmission latency is reduced. Consequently,
    the overheads on the next layer as well as on the cloud are reduced. The use of
    dew computing moreover provides the advantage of accessing the data even when
    not connected to the Internet. 7 Conclusions The use of the Internet of Things
    in smart agriculture has gained significant research interest in the last few
    years. The sensors are used to collect soil-related data, crop-related data, and
    the analysis of the collected data takes place inside the cloud. Based on the
    data analysis, the farmers can be guided for better crop production. However,
    the use of cloud-only paradigm has several shortcomings such as increase in latency,
    network bandwidth, network connectivity, huge overheads on the cloud, etc. To
    deal with these problems, fog and edge computing have come. The use of intermediate
    devices in data processing and brining the resources to the network edge solves
    various issues related to latency, bandwidth, etc. Nevertheless, the edge and
    fog computing scenarios require good Internet connectivity. But in the remote
    location, the Internet connectivity may not be always good. To resolve this issue,
    dew computing has come. The use of dew computing provides the facility of accessing
    the data even when Internet connectivity is unavailable. When the network connectivity
    resumes, the data transmission to the upper layer takes place, and finally the
    data is sent to the cloud if further analysis is required. In this chapter, we
    have discussed the architecture of dew computing-based smart agriculture, along
    with a brief discussion on the use of cloud, fog, and edge computing in smart
    agriculture. Various machine learning algorithms used for data analysis are also
    discussed. The simulation results present that the use of dew computing reduces
    the latency by approximately 40% and 55% than the edge-based and cloud-only paradigms,
    respectively. There are varied future research avenues. With the advancement of
    deep learning-based models, an efficient quality monitoring framework of agricultural
    products, greenhouse automation, and crop management system can be developed.
    Leveraging the dew-edge-cloud paradigm, we can develop a latency-aware smart farm
    management system to enhance the overall quality of life. References Elijah, O.,
    Rahman, T.A., Orikumhi, I., Leow, C.Y., Hindia, M.N.: An overview of internet
    of things (IoT) and data analytics in agriculture: benefits and challenges. IEEE
    Internet Things J. 5(5), 3758–3773 (2018) Article   Google Scholar   Marjumin,
    N.H., Sidek, S., Hassan, M.A., Rajikon, M., Kamalrudin, M.: The challenges and
    contribution of internet of things (Iot) for smart living. Int. J. Recent Technol.
    Eng. 8, 162–166 (2019) Google Scholar   Atzori, L., Iera, A., Morabito, G.: The
    internet of things: a survey. Comput. Netw. 54(15), 2787–2805 (2010) Article   MATH   Google
    Scholar   Fang, S., Da Xu, L., Zhu, Y., Ahati, J., Pei, H., Yan, J., Liu, Z.:
    An integrated system for regional environmental monitoring and management based
    on internet of things. IEEE Trans. Ind. Inf. 10(2), 1596–1605 (2014) Article   Google
    Scholar   Ray, P.P.: Internet of things for smart agriculture: technologies, practices
    and future direction. J. Ambient Intell. Smart Environ. 9(4), 395–420 (2017) Article   Google
    Scholar   Sadeeq, M.M., Abdulkareem, N.M., Zeebaree, S.R., Ahmed, D.M., Sami,
    A.S., Zebari, R.R.: IoT and Cloud computing issues, challenges and opportunities:
    a review. Qubahan Acad. J. 1(2), 1–7 (2021) Article   Google Scholar   Kaur, C.:
    The cloud computing and internet of things (IoT). Int. J. Sci. Res. Sci. Eng.
    Technol. 7(1), 19–22 (2020) Google Scholar   Biswas, A.R., Giaffreda, R.: IoT
    and cloud convergence: opportunities and challenges. In: 2014 IEEE World Forum
    on Internet of Things (WF-IoT), pp. 375–376. IEEE (2014) Google Scholar   Goraya,
    M.S., Kaur, H.: Cloud computing in agriculture. HCTL Open Int. J. Technol. Innov.
    Res. (IJTIR) 16, 2321–1814 (2015) Google Scholar   Deng, R., Lu, R., Lai, C.,
    Luan, T.H., Liang, H.: Optimal workload allocation in fog-cloud computing toward
    balanced delay and power consumption. IEEE Internet Things J. 3(6), 1171–1181
    (2016) Google Scholar   Guardo, E., Di Stefano, A., La Corte, A., Sapienza, M.,
    Scatà, M.: A fog computing-based iot framework for precision agriculture. J. Internet
    Technol. 19(5), 1401–1411 (2018) Google Scholar   Yousefpour, A., Fung, C., Nguyen,
    T., Kadiyala, K., Jalali, F., Niakanlahiji, A., et al.: All one needs to know
    about fog computing and related edge computing paradigms. J. Syst. Archit. (2019)
    Google Scholar   Chen, J., Ran, X.: Deep learning with edge computing: a review.
    Proc. IEEE 107(8), 1655–1674 (2019) Article   Google Scholar   Sittón-Candanedo,
    I., Alonso, R.S., Corchado, J.M., Rodríguez-González, S., Casado-Vara, R.: A review
    of edge computing reference architectures and a new global edge proposal. Fut.
    Gener. Comput. Syst. 99, 278–294 (2019) Article   Google Scholar   Zhang, X.,
    Cao, Z., Dong, W.: Overview of edge computing in the agricultural internet of
    things: key technologies, applications, challenges. IEEE Access 8, 141748–141761
    (2020) Article   Google Scholar   Xu, L., Collier, R., O’Hare, G.M.: A survey
    of clustering techniques in WSNs and consideration of the challenges of applying
    such to 5G IoT scenarios. IEEE Internet Things J. 4(5), 1229–1249 (2017) Article   Google
    Scholar   Rindos, A., Wang, Y.: Dew computing: the complementary piece of cloud
    computing. In: 2016 IEEE International Conferences on Big Data and Cloud Computing
    (BDCloud), Social Computing and Networking (SocialCom), Sustainable Computing
    and Communications (SustainCom) (BDCloud-SocialCom-SustainCom), pp. 15–20. IEEE
    Google Scholar   Wang, Y.: Definition and categorization of dew computing. Open
    J. Cloud Comput. (OJCC) 3(1), 1–7 (2016) Google Scholar   Van Klompenburg, T.,
    Kassahun, A., Catal, C.: Crop yield prediction using machine learning: a systematic
    literature review. Comput. Electron. Agric. 177, 105709 (2020) Article   Google
    Scholar   Chlingaryan, A., Sukkarieh, S., Whelan, B.: Machine learning approaches
    for crop yield prediction and nitrogen status estimation in precision agriculture:
    a review. Comput. Electron. Agric. 151, 61–69 (2018) Article   Google Scholar   Xu,
    X., Gao, P., Zhu, X., Guo, W., Ding, J., Li, C., et al.: Design of an integrated
    climatic assessment indicator (ICAI) for wheat production: a case study in Jiangsu
    Province, China. Ecol. Indicat. 101, 943–953 (2019) Google Scholar   Reddy, K.S.P.,
    Roopa, Y.M., LN, K.R., Nandan, N.S.: IoT based smart agriculture using machine
    learning. In: 2020 Second International Conference on Inventive Research in Computing
    Applications (ICIRCA), pp. 130–134. IEEE (2020) Google Scholar   Jagtap, S.T.,
    Phasinam, K., Kassanuk, T., Jha, S.S., Ghosh, T., Thakar, C.M.: Towards application
    of various machine learning techniques in agriculture. Mater. Today: Proc. 51,
    793–797 (2022) Article   Google Scholar   Pearson, K.: LIII. On lines and planes
    of closest fit to systems of points in space. London Edinburgh Dublin Philos.
    Mag. J. Sci. 2(11), 559–572 Google Scholar   Fisher, R.A.: The use of multiple
    measurements in taxonomic problems. Ann. Eugen. 7(2), 179–188 (1936) Article   Google
    Scholar   Mishra, S., Mishra, D., Santra, G.H.: Applications of machine learning
    techniques in agricultural crop production: a review paper. Indian J. Sci. Technol.
    9(38), 1–14 (2016) Article   Google Scholar   Uno, Y., Prasher, S.O., Lacroix,
    R., Goel, P.K., Karimi, Y., Viau, A., Patel, R.M.: Artificial neural networks
    to predict corn yield from compact airborne spectrographic imager data. Comput.
    Electron. Agric. 47(2), 149–161 (2005) Article   Google Scholar   Veenadhari,
    S., Mishra, B., Singh, C.D.: Soybean productivity modelling using decision tree
    algorithms. Int. J. Comput. Appl. 27(7), 11–15 (2011) Google Scholar   Bhargavi,
    P., Jyothi, S.: Applying Naive Bayes data mining technique for classification
    of agricultural land soils. Int. J. Comput. Sci. Netw. Secur. 9(8), 117–122 (2009)
    Google Scholar   Rainville, D., Durand, A., Fortin, F.A., Tanguy, K., Maldague,
    X., Panneton, B., Simard, M.J.: Bayesian classification and unsupervised learning
    for isolating weeds in row crops. Pattern Anal. Appl. 17(2), 401–414 (2014) Article   MathSciNet   Google
    Scholar   Sharma, B., Yadav, J.K.P.S., Yadav, S.: Predict crop production in India
    using machine learning technique: a survey. In: 2020 8th International Conference
    on Reliability, Infocom Technologies and Optimization (Trends and Future Directions)
    (ICRITO), pp. 993–997. IEEE (2020) Google Scholar   Khoshnevisan, B., Rafiee,
    S., Omid, M., Mousazadeh, H., Rajaeifar, M.A.: Application of artificial neural
    networks for prediction of output energy and GHG emissions in potato production
    in Iran. Agric. Syst. 123, 120–127 (2014) Article   Google Scholar   Babu, M.P.:
    A web based tomato crop expert information system based on artificial intelligence
    and machine learning algorithms (2010) Google Scholar   Umair, S.M., Usman, R.:
    Automation of irrigation system using ANN based controller. Int. J. Electr. Comput.
    Sci. IJECS-IJENS 10(02), 41–47 (2010) Google Scholar   Li, Y., Chao, X.: ANN-based
    continual classification in agriculture. Agriculture 10(5), 178 (2020) Article   Google
    Scholar   Dahikar, S.S., Rode, S.V.: Agricultural crop yield prediction using
    artificial neural network approach. Int. J. Innov. Res. Electr. Electron. Instrum.
    Control Eng. 2(1), 683–686 (2014) Google Scholar   Kantanantha, N.: Crop decision
    planning under yield and price uncertainties. Georgia Institute of Technology
    (2007) Google Scholar   Suresh, K.K., Krishna Priya, S.R.: A study on pre-harvest
    forecast of sugarcane yield using climatic variables. Stat. Appl. 7&8(1&2), 1–8
    (New Series) (2009) Google Scholar   Horie, T., Yajima, M., Nakagawa, H.: Yield
    forecasting. Agric. Syst. 40(1–3), 211–236 (1992) Article   Google Scholar   Liakos,
    K.G., Busato, P., Moshou, D., Pearson, S., Bochtis, D.: Machine learning in agriculture:
    a review. Sensors 18(8), 2674 (2018) Article   Google Scholar   Narkhede, U.P.,
    Adhiya, K.P.: Evaluation of modified K-means clustering algorithm in crop prediction.
    Int. J. Adv. Comput. Res. 4(3), 799 (2014) Google Scholar   Mahesh, B.: Machine
    learning algorithms-a review. Int. J. Sci. Res. (IJSR) 9, 381–386 (2020); Noble,
    W.S.: What is a support vector machine?. Nat. Biotechnol. 24(12), 1565–1567 (2006)
    Google Scholar   Pradhan, A.: Support vector machine-a survey. Int. J. Emerg.
    Technol. Adv. Eng. 2(8), 82–85 (2012) Google Scholar   Chandra, M.A., Bedi, S.S.:
    Survey on SVM and their application in image classification. Int. J. Inf. Technol.
    13(5), 1–11 (2021) Google Scholar   Mierswa, I.: Controlling overfitting with
    multi-objective support vector machines. In: Proceedings of the 9th Annual Conference
    on Genetic and Evolutionary Computation, pp. 1830–1837 (2007) Google Scholar   Mohamed,
    A.E.: Comparative study of four supervised machine learning techniques for classification.
    Int. J. Appl. 7(2), 1–15 (2017) Google Scholar   Gupta, A., Katarya, R.: Social
    media based surveillance systems for healthcare using machine learning: a systematic
    review. J. Biomed. Inform. 108, 103500 (2020) Article   Google Scholar   Shakoor,
    M.T., Rahman, K., Rayta, S.N., Chakrabarty, A.: Agricultural production output
    prediction using supervised machine learning techniques. In: 2017 1st International
    Conference on Next Generation Computing Applications (NextComp), pp. 182–187.
    IEEE (2006) Google Scholar   Kataria, A., Singh, M.D.: A review of data classification
    using k-nearest neighbour algorithm. Int. J. Emerg. Technol. Adv. Eng. 3(6), 354–360
    (2013) Google Scholar   Karthikeya, H.K., Sudarshan, K., Shetty, D.S.: Prediction
    of agricultural crops using KNN algorithm. Int. J. Innov. Sci. Res. Technol 5,
    1422–1424 (2020) Google Scholar   Cutler, A., Cutler, D.R., Stevens, J.R.: Random
    forests. In: Ensemble Machine Learning, pp. 157–175. Springer, Boston, MA (2012)
    Google Scholar   Ali, J., Khan, R., Ahmad, N., Maqsood, I.: Random forests and
    decision trees. Int. J. Comput. Sci. Issues (IJCSI) 9(5), 272 (2012) Google Scholar   Tan,
    K., Ma, W., Wu, F., Du, Q.: Random forest–based estimation of heavy metal concentration
    in agricultural soils with hyperspectral sensor data. Environ. Monit. Assess.
    191(7), 1–14 (2019) Article   Google Scholar   Sharma, N., Juneja, A.: Combining
    of random forest estimates using LSboost for stock market index prediction. In:
    2017 2nd International Conference for Convergence in Technology (I2CT), pp. 1199–1202.
    IEEE (2017) Google Scholar   Dargan, S., Kumar, M., Ayyagari, M.R., Kumar, G.:
    A survey of deep learning and its applications: a new paradigm to machine learning.
    Arch. Comput. Methods Eng. 27, 1071–1092 (2020) Article   MathSciNet   Google
    Scholar   LeCun, Y., Bengio, Y., Hinton, G.: Deep learning. Nature 521(7553),
    436–444 (2015) Google Scholar   Bengio, Y., Lecun, Y., Hinton, G.: Deep learning
    for AI. Commun. ACM 64(7), 58–65 (2021) Article   Google Scholar   Sak, H., Senior,
    A.W., Beaufays, F.: Long short-term memory recurrent neural network architectures
    for large scale acoustic modeling. Interspeech (2014) Google Scholar   Zhu, N.,
    Liu, X., Liu, Z., Hu, K., Wang, Y., Tan, J., et al.: Deep learning for smart agriculture:
    Concepts, tools, applications, and opportunities. Int. J. Agric. Biol. Eng. 11(4),
    32–44 (2018) Google Scholar   Gu, J., Wang, Z., Kuen, J., Ma, L., Shahroudy, A.,
    Shuai, B., et al.: Recent advances in convolutional neural networks. Pattern Recogn.
    77, 354–377 (2018) Google Scholar   Kamilaris, A., Prenafeta-Boldú, F.X.: A review
    of the use of convolutional neural networks in agriculture. J. Agric. Sci. 156(3),
    312–322 (2018) Article   Google Scholar   Schmidhuber, J.: Deep learning in neural
    networks: an overview. Neural Netw. 61, 85–117 (2015) Article   Google Scholar   Oquab,
    M., Bottou, L., Laptev, I., Sivic, J.: Learning and transferring mid-level image
    representations using convolutional neural networks. In: Proceedings of the IEEE
    Conference on Computer Vision and Pattern Recognition, pp. 1717–1724 (2014) Google
    Scholar   Long, J., Shelhamer, E., Darrell, T.: Fully convolutional networks for
    semantic segmentation. In: Proceedings of the IEEE Conference on Computer Vision
    and Pattern Recognition, pp. 3431–3440 (2015) Google Scholar   Chen, Y., Lin,
    Z., Zhao, X., Wang, G., Gu, Y.: Deep learning-based classification of hyperspectral
    data. IEEE J. Sel. Top. Appl. Earth Observ. Remote Sens. 7(6), 2094–2107 (2014)
    Article   Google Scholar   Grinblat, G.L., Uzal, L.C., Larese, M.G., Granitto,
    P.M.: Deep learning for plant identification using vein morphological patterns.
    Comput. Electron. Agric. 127, 418–424 (2016) Article   Google Scholar   Lee, S.H.,
    Chan, C.S., Wilkin, P., Remagnino, P.: Deep-plant: plant identification with convolutional
    neural networks. In 2015 IEEE International Conference on Image Processing (ICIP),
    pp. 452–456. IEEE (2015) Google Scholar   Luus, F.P., Salmon, B.P., Bergh, F.V.,
    Maharaj, B.T.: Multiview deep learning for land-use classification. IEEE Geosci.
    Remote Sens. Lett. 12, 2448–2452 (2015) Article   Google Scholar   Kuwata, K.,
    Shibasaki, R.: Estimating crop yields with deep learning and remotely sensed data.
    In: 2015 IEEE International Geoscience and Remote Sensing Symposium (IGARSS),
    pp. 858–861. IEEE (2015) Google Scholar   Xinshao, W., Cheng, C.: Weed seeds classification
    based on PCANet deep learning baseline. In: 2015 Asia-Pacific Signal and Information
    Processing Association Annual Summit and Conference (APSIPA), pp. 408–415. IEEE
    (2015) Google Scholar   Yalcin, H.: Plant phenology recognition using deep learning:
    deep-pheno. In: 2017 6th International Conference on Agro-Geoinformatics, pp.
    1–5. IEEE (2017) Google Scholar   Ienco, D., Gaetano, R., Dupaquier, C., Maurel,
    P.: Land cover classification via multitemporal spatial data by deep recurrent
    neural networks. IEEE Geosci. Remote Sens. Lett. 14(10), 1685–1689 (2017) Article   Google
    Scholar   Rußwurm, M., Körner, M.: Multi-temporal land cover classification with
    long short-term memory neural networks. Int. Arch. Photogramm. Remote Sens. Spatial
    Inf. Sci. 42 (2017) Google Scholar   Abbasi, A.Z., Islam, N., Shaikh, Z.A.: A
    review of wireless sensors and networks’ applications in agriculture. Comput.
    Stand. Interfaces 36(2), 263–270 (2014) Article   Google Scholar   TongKe, F.:
    Smart agriculture based on cloud computing and IOT. J. Converg. Inf. Technol.
    8(2), 210–216 (2013) Google Scholar   Ngu, A.H., Gutierrez, M., Metsis, V., Nepal,
    S., Sheng, Q.Z.: IoT middleware: a survey on issues and enabling technologies.
    IEEE Internet Things J. 4(1), 1–20 (2016) Article   Google Scholar   Raza, U.,
    Kulkarni, P., Sooriyabandara, M.: Low power wide area networks: an overview. IEEE
    Commun. Surv. Tutor. 19(2), 855–873 (2017) Google Scholar   Vågen, T.G., Winowiecki,
    L.A., Tondoh, J.E., Desta, L.T., Gumbricht, T.: Mapping of soil properties and
    land degradation risk in Africa using MODIS reflectance. Geoderma 263, 216–225
    (2016) Article   Google Scholar   Santhi, P.V., Kapileswar, N., Chenchela, V.K.,
    Prasad, C.V.S.: Sensor and vision based autonomous AGRIBOT for sowing seeds. In:
    2017 International Conference on Energy, Communication, Data Analytics and Soft
    Computing (ICECDS), pp. 242–245. IEEE (2017) Google Scholar   Williams, M.: What
    Percent of Earth is water. Universe Today 2016 (2014) Google Scholar   Water Facts_Worldwide
    Water Supply.: https://www.usbr.gov/mp/arwec/water-facts-ww-water-sup.html. Accessed
    15 Apr. 2019 Water for Sustainable Food and Agriculture by FAO.: https://www.fao.org/3/a-i7959e.pdf.
    Accessed 15 Apr. 2019 Hassan, Q.F.: (Ed.). (2018). Internet of things A to Z:
    technologies and applications. John Wiley & Sons. Google Scholar   LaRue, J.,
    Fredrick, C.: Decision process for the application of variable rate irrigation.
    Am. Soc. Agric. Biol. Eng. (Dallas, TX, USA, Tech. Rep.) (2012) Google Scholar   Lavanya,
    G., Rani, C., GaneshKumar, P.: An automated low cost IoT based fertilizer intimation
    system for smart agriculture. Sustain. Comput.: Inform. Syst. 28, 100300 (2020)
    Google Scholar   Shi, J., Yuan, X., Cai, Y., Wang, G.: GPS real-time precise point
    positioning for aerial triangulation. GPS Solut. 21(2), 405–414 (2017) Article   Google
    Scholar   Colaço, A.F., Molin, J.P.: Variable rate fertilization in citrus: a
    long term study. Precision Agric. 18(2), 169–191 (2017) Article   Google Scholar   Khan,
    N., Medlock, G., Graves, S., Anwar, S.: GPS guided autonomous navigation of a
    small agricultural robot with automated fertilizing system (No. 2018-01-0031).
    SAE Technical Paper (2018) Google Scholar   Venkatesan, R., Kathrine, G.J.W.,
    Ramalakshmi, K.: Internet of things based pest management using natural pesticides
    for small scale organic gardens. J. Comput. Theor. Nanosci. 15(9–10), 2742–2747
    (2018) Article   Google Scholar   Suma, V.: Internet-of-things (IoT) based smart
    agriculture in India-an overview. J. ISMAC 3(01), 1–15 (2021) Article   Google
    Scholar   Oberti, R., Marchi, M., Tirelli, P., Calcante, A., Iriti, M., Tona,
    E., et al.: Selective spraying of grapevines for disease control using a modular
    agricultural robot. Biosyst. Eng. 146, 203–215 (2016) Google Scholar   Kalyani,
    Y., Collier, R.: A systematic survey on the role of cloud, fog, and edge computing
    combination in smart agriculture. Sensors 21(17), 5922 (2021) Article   Google
    Scholar   Abbas, N., Zhang, Y., Taherkordi, A., Skeie, T.: Mobile edge computing:
    a survey. IEEE Internet Things J. 5(1), 450–465 (2018). https://doi.org/10.1109/JIOT.2017.2750180
    Article   Google Scholar   Shi, W., Cao, J., Zhang, Q., Li, Y., Xu, L.: Edge computing:
    vision and challenges. IEEE Internet Things J. 3(5), 637–646 (2016) Article   Google
    Scholar   Sarhan, A.: Fog computing as solution for IoT-based agricultural applications.
    In: Smart Agricultural Services Using Deep Learning, Big Data, and IoT, pp. 46–68.
    IGI Global (2021) Google Scholar   Mukherjee, A., De, D., Ghosh, S.K., Buyya,
    R.: Introduction to mobile edge computing. In: Mobile Edge Computing, pp. 3–19.
    Springer, Cham (2021) Google Scholar   Zhang, J., Chen, B., Zhao, Y., Cheng, X.,
    Hu, F.: Data security and privacy-preserving in edge computing paradigm: survey
    and open issues. IEEE Access 6, 18209–18237 (2018) Article   Google Scholar   Satyanarayanan,
    M.: The emergence of edge computing. Computer 50(1), 30–39 (2017) Article   Google
    Scholar   Zamora-Izquierdo, M.A., Santa, J., Martínez, J.A., Martínez, V., Skarmeta,
    A.F.: Smart farming IoT platform based on edge and cloud computing. Biosyst. Eng.
    177, 4–17 (2019) Article   Google Scholar   Sengupta, A., Gill, S.S., Das, A.,
    De, D.: Mobile edge computing based internet of agricultural things: a systematic
    review and future directions. Mob. Edge Comput. 415–441 (2021) Google Scholar   Ghosh,
    S., Mukherjee, A., Ghosh, S.K., Buyya, R.: Mobi-iost: mobility-aware cloud-fog-edge-IoT
    collaborative framework for time-critical applications. IEEE Trans. Netw. Sci.
    Eng. 7(4), 2271–2285 (2019) Article   Google Scholar   Mukherjee, A., Ghosh, S.,
    De, D., Ghosh, S.K.:. MCG: mobility-aware computation offloading in edge using
    weighted majority game. IEEE Trans. Netw. Sci. Eng. (2022) Google Scholar   Ghosh,
    S., Mukherjee, A.: STROVE: spatial data infrastructure enabled cloud–fog–edge
    computing framework for combating COVID-19 pandemic. Innov. Syst. Softw. Eng.
    1–17 (2022) Google Scholar   Das, J., Ghosh, S., Mukherjee, A., Ghosh, S.K., Buyya,
    R.: Rescue: enabling green healthcare services using integrated IoT‐edge‐fog‐cloud
    computing environments. Softw.: Pract. Exp. (2022) Google Scholar   Ghosh, S.,
    Ghosh, S.K.: Mobility driven cloud-fog-edge framework for location-aware services:
    a comprehensive review. Mob. Edge Comput. 229–249 (2021) Google Scholar   O’Grady,
    M.J., Langton, D., O’Hare, G.M.P.: Edge computing: a tractable model for smart
    agriculture? Artif. Intell. Agric. 3, 42–51 (2019) Google Scholar   Kakamoukas,
    G., Sarigiannidis, P., Maropoulos, A., Lagkas, T., Zaralis, K., Karaiskou, C.:
    Towards climate smart farming—A reference architecture for integrated farming
    systems. In: Telecom, vol. 2, no. 1, pp. 52–74. MDPI Google Scholar   Almalki,
    F.A., Soufiene, B.O., Alsamhi, S.H., Sakli, H.: A low-cost platform for environmental
    smart farming monitoring system based on IoT and UAVs. Sustainability 13(11),
    5908 (2021) Article   Google Scholar   Chew, K.T., Jo, R.S., Lu, M., Raman, V.,
    Then, P.H.H.: Organic black soldier flies (BSF) farming in rural area using Libelium
    Waspmote smart agriculture and internet-of-things technologies. In: 2021 IEEE
    11th IEEE Symposium on Computer Applications & Industrial Electronics (ISCAIE),
    pp. 228–232. IEEE (2021) Google Scholar   Li, X., Ma, Z., Zheng, J., Liu, Y.,
    Zhu, L., Zhou, N.: An effective edge-assisted data collection approach for critical
    events in the SDWSN-based agricultural internet of things. Electronics 9(6), 907
    (2020) Article   Google Scholar   Roopaei, M., Rad, P., Choo, K.-K.R.: Cloud of
    things in smart agriculture: intelligent irrigation monitoring by thermal imaging.
    IEEE Cloud Comput. 4(1), 10–15 (2017). https://doi.org/10.1109/MCC.2017.5 Puri,
    B.: IoT and AI-based Plant Monitoring System. International J. Mach. Learn. Netw.
    Collab. Eng. 4(3), 135–142 (2021) Google Scholar   Ray, P.P.: An introduction
    to dew computing: definition, concept and implications. IEEE Access 6, 723–737
    (2017) Article   Google Scholar   Roy, S., Sarkar, D., De, D.: DewMusic: crowdsourcing-based
    internet of music things in dew computing paradigm. J. Ambient. Intell. Humaniz.
    Comput. 12(2), 2103–2119 (2021) Article   Google Scholar   Skala, K., Davidovic,
    D., Afgan, E., Sovic, I., Sojat, Z.: Scalable distributed computing hierarchy:
    cloud, fog and dew computing. Open J. Cloud Comput. (OJCC) 2(1), 16–24 (2015)
    Google Scholar   Download references Author information Authors and Affiliations
    Department of Computer Science, Mahishadal Raj College, Mahishadal, West Bengal,
    India Somnath Bera, Tanushree Dey & Anwesha Mukherjee College of Information Sciences
    and Technology, The Pennsylvania State University, University Park, USA Shreya
    Ghosh Corresponding author Correspondence to Anwesha Mukherjee . Editor information
    Editors and Affiliations Department of Computer Science and Engineering, Maulana
    Abul Kalam Azad University of Technology, West Bengal, Kolkata, India Debashis
    De Department of Computer Science and Engineering, D Y Patil International University,
    Pune, India Samarjit Roy Rights and permissions Reprints and permissions Copyright
    information © 2024 The Author(s), under exclusive license to Springer Nature Singapore
    Pte Ltd. About this chapter Cite this chapter Bera, S., Dey, T., Ghosh, S., Mukherjee,
    A. (2024). Internet of Things and Dew Computing-Based System for Smart Agriculture.
    In: De, D., Roy, S. (eds) Dew Computing. Internet of Things. Springer, Singapore.
    https://doi.org/10.1007/978-981-99-4590-0_14 Download citation .RIS.ENW.BIB DOI
    https://doi.org/10.1007/978-981-99-4590-0_14 Published 03 September 2023 Publisher
    Name Springer, Singapore Print ISBN 978-981-99-4589-4 Online ISBN 978-981-99-4590-0
    eBook Packages Engineering Engineering (R0) Share this chapter Anyone you share
    the following link with will be able to read this content: Get shareable link
    Provided by the Springer Nature SharedIt content-sharing initiative Publish with
    us Policies and ethics Download book PDF Download book EPUB Sections Figures References
    Abstract Introduction Machine Learning in Agriculture Deep Learning in Agriculture
    IoT in Agriculture Cloud-Fog-Edge-Dew Computing in Agriculture Dew Computing in
    Agriculture Conclusions References Author information Editor information Rights
    and permissions Copyright information About this chapter Publish with us Discover
    content Journals A-Z Books A-Z Publish with us Publish your research Open access
    publishing Products and services Our products Librarians Societies Partners and
    advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress
    Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Internet of Things
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Internet of Things and Dew Computing-Based System for Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh P.
  - Singh K.D.
  - Kaur R.
  - Singh D.
  - Tripathi V.
  citation_count: '0'
  description: To ensure that the world is fed healthily, agriculture plays an important
    role. The increased need for both quantity and quality of food necessitates agricultural
    intensification and industrialization. Internet of things (IoT) is a potential
    family of technologies that may help farmers modernize their practices. Research
    institutions and scientific organizations are rushing to provide even more IoT
    solutions for agricultural stakeholders, as well as to lay the framework for a
    clear role when IoT is widely adopted as a standard technology. At the same time,
    Cloud and Fog computing, two technologies that have been more popular in recent
    years are capable of handling the huge amounts of data generated by IoT devices.
    Various real-time tasks may be improved and automated with the help of IoT data
    management and analysis. 454Interoperability across heterogeneous devices has
    also driven the creation of appropriate tools that can be used to build new applications
    and services that add value to data flows created at the network’s edge. An excellent
    solution for smart agriculture is proposed by the use of IoT which proves its
    worthiness to farmers by boosting overall productivity.
  doi: 10.1201/9781003435228-27
  full_citation: '>'
  full_text: '>

    "Access Provided By:University of Nebraska-Lincoln T&F eBooks ‍ Advanced Search
    Login About Us Subjects Browse Products Request a trial Librarian Resources What''s
    New!! HomeEnvironment & AgricultureAgriculture & Environmental SciencesAgriculturePrecision
    Agriculture for SustainabilityFateh: A Novel Framework for Internet-of-Things-Based
    Smart Agriculture Monitoring System Chapter Fateh: A Novel Framework for Internet-of-Things-Based
    Smart Agriculture Monitoring System ByPrabhdeep Singh, Kiran Deep Singh, Rajbir
    Kaur, Diljot Singh, Vikas Tripathi Book Precision Agriculture for Sustainability
    Edition 1st Edition First Published 2024 Imprint Apple Academic Press Pages 10
    eBook ISBN 9781003435228 Share ABSTRACT To ensure that the world is fed healthily,
    agriculture plays an important role. The increased need for both quantity and
    quality of food necessitates agricultural intensification and industrialization.
    Internet of things (IoT) is a potential family of technologies that may help farmers
    modernize their practices. Research institutions and scientific organizations
    are rushing to provide even more IoT solutions for agricultural stakeholders,
    as well as to lay the framework for a clear role when IoT is widely adopted as
    a standard technology. At the same time, Cloud and Fog computing, two technologies
    that have been more popular in recent years are capable of handling the huge amounts
    of data generated by IoT devices. Various real-time tasks may be improved and
    automated with the help of IoT data management and analysis. 454Interoperability
    across heterogeneous devices has also driven the creation of appropriate tools
    that can be used to build new applications and services that add value to data
    flows created at the network’s edge. An excellent solution for smart agriculture
    is proposed by the use of IoT which proves its worthiness to farmers by boosting
    overall productivity. Previous Chapter Your institution has not purchased this
    content. Please get in touch with your librarian to recommend this.  To purchase
    a print version of this book for personal use or request an inspection copy  GO
    TO ROUTLEDGE.COM  Policies Privacy Policy Terms & Conditions Cookie Policy Journals
    Taylor & Francis Online Corporate Taylor & Francis Group Help & Contact Students/Researchers
    Librarians/Institutions Connect with us Registered in England & Wales No. 3099067
    5 Howick Place | London | SW1P 1WG © 2024 Informa UK Limited"'
  inline_citation: '>'
  journal: 'Precision Agriculture for Sustainability: Use of Smart Sensors, Actuators,
    and Decision Support Systems'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'FATEH: A NOVEL FRAMEWORK FOR INTERNET-OF-THINGS-BASED SMART AGRICULTURE
    MONITORING SYSTEM'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mishra R.
  - Ramesh D.
  - Bellavista P.
  - Edla D.R.
  citation_count: '1'
  description: Internet-of-Farming Things (IoFT)-enabled smart agriculture can collect
    data more reliably and frequently to track the crop's status and other significant
    information. Considering that smart agriculture requires working with substantial
    amounts of sensitive data. In light of this, frequent data processing may threaten
    the confidentiality and integrity of data and IoFT device privacy. Although numerous
    privacy-preserving data aggregation methods have been implemented to address these
    issues, they also have certain security vulnerabilities, such as inadequate data
    confidentiality, collusion attacks, and malicious data mining attacks. Therefore,
    we introduce a three-tier architecture-assisted redactable blockchain-based secure
    data aggregation method with source authentication for the fog-enabled IoFT. This
    work provides an efficient and secure two-level data aggregation model. The proposed
    model supports resistance to collusion and malicious data mining threats launched
    by internal or external attackers. It can also achieve perfect data confidentiality
    and integrity against a malicious aggregator and an inquisitive control center
    for an authorized IoFT device. Specifically, the detailed performance analysis
    and theoretical concrete security proofs demonstrate the practicability and efficiency
    of the proposed model.
  doi: 10.1109/TNSM.2023.3322442
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Transactions on Network ...
    >Volume: 20 Issue: 4 Redactable Blockchain-Assisted Secure Data Aggregation Scheme
    for Fog-Enabled Internet-of-Farming-Things Publisher: IEEE Cite This PDF Rahul
    Mishra; Dharavath Ramesh; Paolo Bellavista; Damodar Reddy Edla All Authors 1 Cites
    in Paper 218 Full Text Views Abstract Document Sections I. Introduction II. Literature
    Review III. System Model, Adversary Model, and Design Goals IV. Preliminaries
    V. Redactable Blockchain Assisted Data Aggregation Scheme for IoFT Show Full Outline
    Authors Figures References Citations Keywords Metrics Abstract: Internet-of-Farming
    Things (IoFT)-enabled smart agriculture can collect data more reliably and frequently
    to track the crop’s status and other significant information. Considering that
    smart agriculture requires working with substantial amounts of sensitive data.
    In light of this, frequent data processing may threaten the confidentiality and
    integrity of data and IoFT device privacy. Although numerous privacy-preserving
    data aggregation methods have been implemented to address these issues, they also
    have certain security vulnerabilities, such as inadequate data confidentiality,
    collusion attacks, and malicious data mining attacks. Therefore, we introduce
    a three-tier architecture-assisted redactable blockchain-based secure data aggregation
    method with source authentication for the fog-enabled IoFT. This work provides
    an efficient and secure two-level data aggregation model. The proposed model supports
    resistance to collusion and malicious data mining threats launched by internal
    or external attackers. It can also achieve perfect data confidentiality and integrity
    against a malicious aggregator and an inquisitive control center for an authorized
    IoFT device. Specifically, the detailed performance analysis and theoretical concrete
    security proofs demonstrate the practicability and efficiency of the proposed
    model. Published in: IEEE Transactions on Network and Service Management ( Volume:
    20, Issue: 4, December 2023) Page(s): 4652 - 4667 Date of Publication: 06 October
    2023 ISSN Information: DOI: 10.1109/TNSM.2023.3322442 Publisher: IEEE SECTION
    I. Introduction Agriculture is the global primary sector of the economy, which
    contributes significantly to economic growth and sustainability [1]. Presently,
    due to the expanding global population, people want sustainably grown grains.
    Smart agriculture can meet the requirements, which can also assist the farmers
    in taking advantage of potential opportunities. It brings a new way of agriculture
    production. It enhances agriculture information perception, intelligent control,
    quantitative decision-making, and quality service by integrating fog-computing
    and Internet-of-Farming-Things (IoFT) [2], [3]. IoFT is introduced to automate
    the farming process, such as collecting crop-related information like humidity
    level, soil’s - value, soil’s water level, nutrient level of soil, etc. IoFT sends
    all the collected crop-status data to the cloud-assisted Agriculture Control Center
    (ACC). At ACC, this real-time data is used to take action for irrigation, fertilizer
    spreading, pest management, and any other related activities for the significant
    growth of crops. However, this cloud-assisted framework has its own data confidentiality
    and integrity issues, high latency, etc. [4], [5]. Fog computing has recently
    gained popularity as an efficient solution that can efficiently manage data aggregation
    tasks while transferring data to remote cloud servers. Taking Fog-computing assisted
    smart agriculture as an example, a fog server can aggregate the crop-status data
    collected by IoFT devices and then transfer it to ACC. Through its control method,
    ACC can successfully analyze the collected data to take suitable action for the
    proper growth of crops. However, due to the limited resources of fog servers,
    the existing data-security mitigation is not fully applicable to Fog-computing
    architecture. Some groups of researchers [6], [7] have highlighted that it is
    an essential research topic to realize security threats, i.e., data integrity
    and confidentiality, false data-injection attacks, privacy-preserving, and high-performance
    interactions. Also, secure data aggregation in a fog-enabled IoFT framework is
    still considered a work-in-progress scenario. In short, secure data aggregation
    has a significant role in balancing IoFT devices’ privacy-preserving and data
    integrity and confidentiality; also one of the essential aspects of the development
    of smart agriculture. Fortunately, the advent of blockchain has made it possible
    to address the security issues of the data aggregation models [8], [9]. Blockchain
    technology integrates the distributed ledger, smart contract, and consensus algorithm
    to ensure immutable data storage. Nevertheless, several security issues with blockchain
    are starting to surface due to the exponential expansion of IoFT and fog-device
    performance. Generally, a group of malicious fog servers can launch a powerful
    51% attack to record the incorrect data on the blockchain, which will cause disastrous
    effects [10]. In this situation, Ateniese et al. [11] introduced redactable blockchain
    architecture, which allows for editing in any previously created block over the
    blockchain network. A redactable blockchain architecture can easily edit the incorrect
    data, also ensuring the security of the data. Specifically, in the IoFT paradigm,
    for some instances, any IoFT device becomes unstable and may upload inaccurate
    aggregate data to ACC via Fog-layer and blockchain. Then, ACC will also take the
    wrong analysis for crop status, which may result in catastrophic consequences.
    So, in such a scenario, the redactability of the recorded block can provide an
    efficient way to edit or delete the respective block over the blockchain at Fog
    layer. Therefore, in our preliminary conference version of this paper [12], we
    address that the key challenges in the data aggregation model have privacy-preserving,
    data integrity, and confidentiality brought on by malicious activities of cloud
    servers and fog servers. However, as we will go into considerable detail in this
    paper, dealing with various significant security threats, i.e., fake data injection
    attacks and tempering attacks in fog-enabled data aggregation models is vital.
    Accordingly, we also considered the redactable blockchain-enabled secure data
    aggregation model in the Fog paradigm to provide required editing against any
    wrong data collection over the blockchain. In this article, we extend our work
    [12] for a secure layered data aggregation model to a Fog-enabled smart agriculture
    paradigm with IoFT devices to provide more efficient and computationally infeasible
    data aggregation. This extended work considers the computational infeasible efficient
    paillier cryptosystem [13] and aggregate certificateless signature scheme to support
    security against malicious data mining attacks by internal and external attackers
    and false data injection attacks. Moreover, we also consider the instantly redactable
    blockchain framework for extended work to provide efficient editing operations
    over the blockchain network [14], where a random committee with a significant
    honest fraction is selected first, and then committee members would initiate the
    redaction. In the proposed model, IoFT devices collect the crop-status data and
    send the encrypted data to the local fog server at the fog layer, which performs
    local aggregation. Afterward, the defined leader of the fog server creates the
    global aggregation and uploads it to the blockchain. Then, by accessing the data
    from the blockchain, ACC can analyze this data in real-time for better growth
    of crops. In such conditions, we assure the proper privacy for IoFT devices and
    that only ACC can obtain the aggregated data with adequate data integrity. A.
    Our Contributions The main contributions of the proposed model are summarized
    as follows; We present a three-tier architecture-based data aggregation model,
    which provides a secure infrastructure that efficiently uses local resources -
    IoFT devices; significantly contributes to achieving secure data aggregation in
    fog-enabled smart agriculture paradigm. We provide a computationally intractable
    data aggregation model with efficient IND-CCA2 secure paillier cryptosystem and
    aggregate certificateless signature scheme. It can simultaneously provide proper
    computational infeasibility against data mining attacks with proper source authentication
    and data integrity without using any extra cryptographic primitives. We also consider
    efficient instantly redactable blockchain framework into fog-layer to enhance
    redactability with security and flexibility of fog-layer against collusion attack.
    Moreover, the detailed theoretical security analysis illustrates that the proposed
    data aggregation model can meet all the standard security properties; while keeping
    high efficiency. Finally, the detailed performance analysis with significant experiments
    shows the practicability and feasibility of the proposed model in terms of computational
    and communication overheads. B. Organization The rest of the paper is organized
    as follows; Section II introduces some previously designed data aggregation models.
    In Section III, we describe the system model, the adversary model, and some other
    related definitions with design objectives. Section IV includes the basic preliminaries
    for the proposed model. In Section V, we discuss the complete demonstration of
    the proposed model. Detailed security analysis of the proposed model is described
    in Section VI. In Section VII, we analyze the performance of the proposed model
    in terms of communication and computation overheads. Section VIII provides a further
    discussion of the proposed data aggregation model. Finally, Section IX concludes
    this proposed model. SECTION II. Literature Review This section briefly overviews
    the existing models to design secure data aggregation schemes. This section is
    classified as traditional fog-enabled data aggregation models and blockchain-assisted
    fog-enabled data aggregation models. A. Traditional Fog-Enabled Data Aggregation
    Models Bonomi et al. [15] were the first to introduce the concept of Fog computing.
    They presented an overview of fog and introduced some significant Fog computing-based
    applications. Roman et al. [16] introduced the data aggregation issue in Fog computing
    regarding privacy and security. In 2017, Lu et al. [17] introduced a lightweight
    data aggregation model for a fog-enabled paradigm with paillier homomorphic encryption
    and Chinese Remainder Theorem (CRT) to support secure aggregation and overlay
    fake data at the initial stage on fog-layer. Further, they established a method
    to sensor low-pass external data injection attacks. One year later, Wang et al.
    [18] proposed a Castagnos-Laguillaumine cryptosystem and short signature-based
    secure data aggregation model in Fog computing. In this model, edge devices aggregate
    the collected data and send it to cloud storage with high communication overhead.
    Simultaneously, Lyu et al. [19] proposed a fault-tolerant differential private
    aggregate model with additive homomorphic encryption. The Gaussian distribution
    is used to ensure the privacy of data. This model is vulnerable to false data
    injection attacks, due to an additional round of communication during the failure
    of any IoT devices. This model also suffered from extra communication overhead.
    In 2020, Saleem et al. [20] introduced a paillier homomorphic encryption-based
    privacy-preserving data aggregation model, ensuring security against false data
    injection and reply attacks. Nevertheless, if any IoT device breakdown and aggregation
    is delayed, this model incurs high communication overheads. In 2021, Mohammadali
    and Haghighi [21] compiled an efficient data aggregation model, which provides
    a multidimensional data aggregation model with a signature-based authentication
    model. It supports row and column-level data aggregation to provide more precise
    analysis at Cloud Service Provider (CSP). Moreover, it also supports a batch verification
    model with a high computational overhead. Liu et al. [22] introduced a certificateless
    data aggregation model for IoT-enabled smart grids. This model ensures resistance
    against reply, impersonation, and false data injection attacks. However, this
    model fails to facilitate fault tolerance and has a high computational overhead.
    In 2021, Wang et al. [23] also proposed a secure privacy-preserving aggregation
    model for IoT-assisted smart grid. However, this model also ignored the identity
    of users at the smart meter level. Simultaneously, Khan et al. [24] proposed a
    secure data aggregation model for a smart grid with Boneh-Gon-Nisson (BGN) cryptosystem
    and Elliptic curve digital signature scheme (ECDSA) based authentication to resist
    reply and false data injection attacks. Moreover, Song et al. [25] proposed a
    new flexible privacy-preserving data aggregation model for smart agriculture.
    This model is designed to collect crop-status data with flexible security properties
    of Elgamal-cryptosystem with detailed security proofs. This model also offers
    optional data aggregation in the virtual aggregation area. However, this model
    fails to support resistance against false data injection attacks and malicious
    data mining attacks. Recently, Wang et al. [26] introduced a lightweight non-interactive
    privacy-preserving data aggregation method for constrained devices. This model
    employs a trusted execution paradigm to avoid the necessity for trusted entities
    and reduce overheads. B. Blockchain-Assisted Fog-Enabled Data Aggregation Models
    The emergence of blockchain technology introduces creative solutions for resolving
    trust issues in data aggregation; the blockchain is tamper-proof and decentralized
    [27], [28]. Guan et al. [29] introduced a blockchain-based model for secure data
    aggregation model of smart grid. In 2021, Liu et al. [30] designed a blockchain-based
    privacy-preserving aggregation scheme for smart healthcare. This methodology allows
    data contributors to selectively share dimensions while maintaining the confidentiality
    of their decisions and data. This system utilizes a selection vector to record
    user decisions and count participants dimensionally. A work compiled by Chen et
    al. [31] introduced anonymous data aggregation and a double blockchain-assisted
    secure model for a fog-enabled smart grid. This research introduced a three-tier
    architecture-based data aggregation framework using blockchain and Fog computing.
    This model enables robust support for secure and efficient data aggregation in
    the smart grid paradigm. In 2021, Niu et al. [32] introduced a methodology for
    operating aggregate statistics over private correlated data based on relying on
    differential privacy. This model also enhances the utility of aggregated data
    and ensures arbitrage free-ness. Simultaneously, Yan et al. [33] compiled a blockchain-assisted
    provable, reliable, and privacy-preserving data aggregation model with paillier
    cryptosystem. However, this model suffers from collusion attacks and false data
    injection attacks. Simultaneously, Lu et al. [34] compiled a lightweight edge
    blockchain-assisted data aggregation model for smart grid data security and privacy-preserving.
    This model efficiently attains resistivity against false data injection attacks
    and enhances the systems’ robustness. However, this model did not consider the
    malicious data mining attacks from internal and external adversaries and collusion
    attacks. Recently, Verma et al. [35] proposed a computationally secure data aggregation
    model in pairing-free certificate-based signature architecture. This model introduces
    an efficient data aggregation model. However, it does not consider collusion attacks.
    Moreover, a systematic survey for secure data aggregation models in a fog environment
    can be found in [36], [37]. SECTION III. System Model, Adversary Model, and Design
    Goals In this section, we illustrate the system and adversary models with the
    proposed model’s design objectives. A. System Model The system model of the proposed
    data aggregation model consists of three layers: IoFT layer, Fog layer, and Cloud
    layer. Fig. 1 illustrates all the entities involved in the system model. Fig.
    1. System model of proposed data aggregation model. Show All 1) IoFT Layer: This
    layer includes the number of IoFT devices with further division of [Math Processing
    Error] - regions of ACC. Afterward, we assume that there are [Math Processing
    Error] agriculture fields in region - [Math Processing Error] , and each agriculture
    field deploys IoFT devices to monitor the crop status and important information.
    We represent [Math Processing Error] as fog server in [Math Processing Error]
    - region and [Math Processing Error] - [Math Processing Error] IoFT device in
    region [Math Processing Error] , i.e., [Math Processing Error] . [Math Processing
    Error] will collect the crop-status data and send it to ACC via fog servers [Math
    Processing Error] . 2) Fog Layer: The fog layer divides the ACC area into [Math
    Processing Error] - regions and the data for each region is locally aggregated
    by the corresponding fog servers. To attain proper data security in the fog layer,
    we employ the efficient paillier cryptosystem and certificateless signature scheme.
    Moreover, we select a group of fog servers as authorized nodes for fog layer blockchain
    architecture to complete the block generation procedure over the blockchain. We
    employ a committee-endorsing mechanism with a verifiable random function (VRF)
    to select authorized nodes among all fog servers [Math Processing Error] [38].
    The VRF is utilized to ensure the random solution of authorized nodes among all
    the fog servers. Moreover, we also consider a leader node with block right-ownership.
    Note that the leader node is randomly selected among all the authorized nodes.
    Initially, the leader node collects the transactions from all fog servers, packs
    them into a block, and finally broadcasts the block to other authorized nodes.
    Then, these authorized nodes validate it and upload it to the blockchain. Also,
    the authorized nodes and leader nodes perform the redactability procedure over
    the fog layer blockchain. 3) Cloud Server: This layer consists of ACC and Trusted
    Key-Authority (TKA). ACC can collect all the aggregated data from fog servers
    [Math Processing Error] and perform real-time analysis. Note that ACC reads the
    data every [Math Processing Error] minute to make it easier to monitor crop status
    at a certain time. Moreover, TKA is a trusted authority that sets up the complete
    system parameter and distributes it to other involved entities. TKA will be offline
    after completing the required tasks. B. Adversary Model In the adversary model,
    initially, we consider TKA as a fully trustworthy entity that any adversaries
    or other entities cannot compromise through a secure channel. However, IoFT devices,
    fog servers, and ACC are honest but curious, which will honestly follow the defined
    procedure of the proposed model but may launch severe attacks, i.e., collusion,
    modification, data mining attacks, etc. So, to demonstrate the potential security
    threats in the proposed model, we consider probabilistic polynomial time (PPT)
    adversaries as follows; A PPT adversary [Math Processing Error] may launch an
    attack to break the confidentiality and privacy-preserving of the proposed model
    with malicious fog servers. An another PPT adversary [Math Processing Error] may
    intercept the communication channel between IoFT layer-to-Fog layer and Fog layer-to-ACC
    to perform malicious data mining attack to temper the aggregated data, where [Math
    Processing Error] can block the communication between layers and compromise the
    ACC to obtain useful information from decrypted data. Moreover, [Math Processing
    Error] may also launch a false data injection attack to fog servers to pass the
    authentication and try to access the globally aggregated data at fog layer. Moreover,
    malicious ACC may collude with malicious fog servers and incentivize some authorized
    nodes to launch collusion and modification attacks on IoFT’s aggregated data.
    C. Design Goals Based on the system model and adversary model with possible attacks,
    the proposed model should achieve the following objectives; Confidentiality and
    Privacy-preserving - Data aggregation should adhere to proper confidentiality
    such that even if an adversary launches eavesdropping on the communication channel,
    such adversary cannot have access to confidential aggregated data. Moreover, the
    proposed model also guarantees privacy-preserving; even if a false data injection
    attack is successful, none of the adversaries can access information about IoFT
    devices. Integrity and Authentication - The proposed model should ensure the proper
    integrity of the aggregated data against any modification attack. Also, the proposed
    model provides the authenticity of all IoFT devices, and fog servers during data
    aggregation and transmission. Efficiency and accuracy - Taking into account the
    system participants’ capacities and the frequency of data processing, the proposed
    data aggregation model should be efficient with computational and communication
    overheads in terms of off-chain and on-chain operations. Moreover, ACC should
    be able to ensure the accuracy of the final aggregated results it recovers; otherwise,
    ACC might take the incorrect action for the crop’s status. SECTION IV. Preliminaries
    This section describes some preliminaries to support the proposed scheme. We also
    give a brief explanation of useful computational assumptions. A. Efficient Paillier
    Cryptosystem Specifically, the efficient paillier cryptosystem [13] consists of
    three algorithms such as Key-Gen(), Encryption(), and Decryption(). These are
    described in the following manner. Key-Gen () - given security parameter [Math
    Processing Error] 1, randomly select two large prime [Math Processing Error] ,
    [Math Processing Error] of same length, i.e., [Math Processing Error] = pq relative
    to which the Decisional Composite Residuosity Assumption (DCPR) is hard in [Math
    Processing Error] and [Math Processing Error] , where [Math Processing Error]
    and also select [Math Processing Error] , [Math Processing Error] . Finally, set
    [Math Processing Error] as private-key and ([Math Processing Error] , [Math Processing
    Error] , [Math Processing Error] ) as public-key. Encryption () - choose random
    number [Math Processing Error] and set [Math Processing Error] , and [Math Processing
    Error] for given message [Math Processing Error] , generate ciphertext as [Math
    Processing Error] Decryption () - given ciphertext [Math Processing Error] and
    private key [Math Processing Error] , compute [Math Processing Error] , and parse
    [Math Processing Error] , then compute [Math Processing Error] . If [Math Processing
    Error] , return decrypted actual message [Math Processing Error] otherwise return
    invalid. B. Computational Assumptions Consider a multiplicative cyclic group [Math
    Processing Error] of prime order [Math Processing Error] with generator [Math
    Processing Error] , where [Math Processing Error] is a large prime number, i.e.,
    [Math Processing Error] +1, [Math Processing Error] is also a large prime number.
    1) Discrete-Logarithm Problem (DL-Problem) [39]: for given [Math Processing Error]
    , calculate [Math Processing Error] as [Math Processing Error] . 2) Computational
    Diffie-Hellman Problem (CDH-Problem) [39]: for randomly selected [Math Processing
    Error] , given tuple [Math Processing Error] , compute the value of [Math Processing
    Error] . Moreover, the notations used in this work are summarized in Table I.
    TABLE I Symbols Table SECTION V. Redactable Blockchain Assisted Data Aggregation
    Scheme for IoFT This section describes the detailed construction of the proposed
    secure blockchain-based data aggregation scheme for IoFT-enabled smart agriculture.
    Specifically, this section is divided into five subsections - System-initialization
    phase, Registration phase for all involved entities (IoFT devices, fog-servers,
    ACC), IoFT-layer data generation phase, Fog-layer data aggregation phase, and
    Data Analysis at ACC phase. In the first phase, system initialization is mainly
    responsible for generating the required system parameters for all involved entities.
    In the registration phase, all the IoFT devices and fog servers registered themselves
    over the network. Also, the three-layer architecture of the proposed data aggregation
    model follows the data generation phase, data aggregation phase, and data analysis
    phase. Initially, IoFT devices collect the crop-status data and send the encrypted
    version to fog servers; then, fog servers aggregate it and send the aggregated
    version to the blockchain. Afterward, ACC accesses the blockchain to get the aggregated
    crop-status data and analyzes it by decrypting it with corresponding keys. Fig.
    2 illustrates the detailed workflow of the proposed model. Fig. 2. Illustration
    of complete data aggregation model. Show All A. System Initialization In the proposed
    model, TKA performs the system initialization phase in a secure operational environment
    to generate the required system parameters for all the involved entities. Initially,
    with the given security parameter [Math Processing Error] 1, TKA randomly selects
    two large prime number [Math Processing Error] , [Math Processing Error] such
    that [Math Processing Error] = ([Math Processing Error] )([Math Processing Error]
    ) relative to which the DCPR is hard in [Math Processing Error] and also selects
    another random number [Math Processing Error] , where [Math Processing Error]
    . TKA also selects two cryptographic hash functions [Math Processing Error] and
    randomly selects [Math Processing Error] , where the order of [Math Processing
    Error] in [Math Processing Error] is a multiple of [Math Processing Error] . Afterward,
    TKA sets [Math Processing Error] as public-key and [Math Processing Error] as
    private-key of efficient paillier cryptosystem for IoFT layer and ACC. Let [Math
    Processing Error] and define the function [Math Processing Error] . Further, TKA
    considers a multiplicative cyclic group [Math Processing Error] of prime order
    [Math Processing Error] with generator [Math Processing Error] . TKA randomly
    selects [Math Processing Error] and compute [Math Processing Error] , [Math Processing
    Error] as master-signing key-pairs such that [Math Processing Error] and [Math
    Processing Error] for IoFT devices and fog servers respectively. Finally, TKA
    publishes the system parameter [Math Processing Error] and paillier cryptosystem’s
    public parameter [Math Processing Error] , where [Math Processing Error] to ACC.
    Moreover, for the sake of simplicity, the length of collected crop-status data
    by each [Math Processing Error] will not be greater than a defined parameter value
    [Math Processing Error] bit. Then, TKA selects a super linear-sequence [Math Processing
    Error] , where [Math Processing Error] and [Math Processing Error] . So, TKA selects
    a set of sequences [Math Processing Error] where [Math Processing Error] and shares
    it as public parameter with all fog servers [Math Processing Error] . B. Registration
    Phase This phase consists of the registration of all IoFT devices and fog servers.
    Initially, we assume that there are [Math Processing Error] - numbers of fog servers
    at Fog layer, which cover a defined area, and [Math Processing Error] is the number
    of total IoFT devices at IoFT layer. Further, as described earlier, each [Math
    Processing Error] - fog server covers a group of IoFT devices in a defined area,
    i.e., [Math Processing Error] represents as [Math Processing Error] - IoFT device
    in a region of [Math Processing Error] - fog server, where [Math Processing Error]
    , [Math Processing Error] , where [Math Processing Error] is the total IoFT devices
    in region of a fog server [Math Processing Error] . To initiate the registration
    procedure, all IoFT devices [Math Processing Error] and fog servers [Math Processing
    Error] share their identities such as [Math Processing Error] , respectively,
    with TKA. Then, TKA generates the required key-pair for [Math Processing Error]
    and [Math Processing Error] as follows; Firstly, TKA randomly selects [Math Processing
    Error] and compute [Math Processing Error] , [Math Processing Error] . TKA sets
    partial-private-key for [Math Processing Error] and [Math Processing Error] as
    [Math Processing Error] and [Math Processing Error] , respectively. Then, TKA
    sends these corresponding partial-private-key to [Math Processing Error] and [Math
    Processing Error] over a secure network channel. Then, [Math Processing Error]
    and [Math Processing Error] verifies these shared partial-private-key with the
    following validation condition - [Math Processing Error] View Source If these
    condition holds, all IoFT devices [Math Processing Error] accept it; randomly
    selects [Math Processing Error] and set key-pair as signing-private-key [Math
    Processing Error] and signing-public-key [Math Processing Error] , where [Math
    Processing Error] for respective tag-value [Math Processing Error] generation.
    Similarly, all fog servers [Math Processing Error] accept the partial-private-key
    and generate key-pair as signing-private-key [Math Processing Error] and signing-public-key
    [Math Processing Error] , where [Math Processing Error] by randomly selected [Math
    Processing Error] for respective tag-value [Math Processing Error] generation.
    Further, to initiate the transaction generation and block generation over blockchain
    at the Fog layer, [Math Processing Error] - number of fog servers are randomly
    selected as authenticated nodes by employing a committee-endorsing mechanism with
    VRF [38]. Afterward, according to the status of their respective resources, these
    authorized nodes initiate the order of block right-ownership at various time-slots
    and broadcast the order to the Fog layer. C. IoFT Layer Data Generation Phase
    This phase is executed by all IoFT devices [Math Processing Error] to collect
    the crop-status data and send it to ACC via Fog layer. Initially, at each time-slot
    [Math Processing Error] , (where [Math Processing Error] is total time-slot in
    which all the IoFT devices of any [Math Processing Error] - region collects crop-status
    data) each [Math Processing Error] follows the defined procedure to collect the
    crop-status data [Math Processing Error] in the following manner; [Math Processing
    Error] collects the crop-status data of their corresponding agriculture area and
    generates the encrypted value of collected data (ciphertext) by randomly selecting
    [Math Processing Error] , and set [Math Processing Error] , [Math Processing Error]
    , then compute the ciphertext as [Math Processing Error] View Source Then, to
    generate the respective tag-value, [Math Processing Error] calculates [Math Processing
    Error] , [Math Processing Error] , and [Math Processing Error] , where [Math Processing
    Error] , [Math Processing Error] and [Math Processing Error] . Finally, calculate
    the tag-value [Math Processing Error] for each collected crop-status data [Math
    Processing Error] is [Math Processing Error] . Afterward, all the IoFT devices
    [Math Processing Error] sends the collected crop-status data and tag-value as
    [Math Processing Error] . D. Fog Layer Data Aggregation Phase The fog servers
    of the Fog layer generally perform the data aggregation through the following
    sub-phases; 1) Validation of IoFT Devices and Data: On receiving [Math Processing
    Error] from IoFT layer in time-slot [Math Processing Error] , [Math Processing
    Error] verifies the authenticity of IoFT devices and validity of tag-value by
    verifying the validation condition; [Math Processing Error] View Source 2) Fog
    Layer Data Aggregation Phase: Once this validation condition holds, each [Math
    Processing Error] aggregates their local data aggregation for each time-slot [Math
    Processing Error] with new tag-values for all locally aggregated data as follows;
    [Math Processing Error] View Source Also, [Math Processing Error] computes the
    new tag-values by randomly selecting [Math Processing Error] and calculates [Math
    Processing Error] , [Math Processing Error] . Then, sets [Math Processing Error]
    , [Math Processing Error] , and [Math Processing Error] . So, the corresponding
    new tag-values for all locally aggregated data [Math Processing Error] is [Math
    Processing Error] . Afterward, every [Math Processing Error] pack these results
    into as validation-value [Math Processing Error] and sends it to authorized nodes
    [Math Processing Error] , where [Math Processing Error] . Note that, in our proposed
    model [Math Processing Error] - represents the number of fog servers, which are
    randomly selected by employing a committee-endorsing mechanism with VRF as authenticated
    nodes. Also, one of the authorized nodes was randomly selected as a leader node
    with block generation right over blockchain for time-slot [Math Processing Error]
    . Before initiating the block generation on the Fog layer blockchain network,
    the leader node is required to verify the authenticity of fog servers and the
    validity of corresponding new tag-value [Math Processing Error] by verifying the
    validation condition; [Math Processing Error] View Source If this condition holds,
    the leader-node executes the global data aggregation operation to generate aggregate
    encrypted-data [Math Processing Error] and aggregated tag-value [Math Processing
    Error] as follows; [Math Processing Error] View Source Since, [Math Processing
    Error] satisfies the defined condition [Math Processing Error] , the above derived
    condition can be formulated as; [Math Processing Error] View Source Afterward,
    the leader node sends the aggregated encrypted-data data [Math Processing Error]
    with [Math Processing Error] to ACC. 3) Block Generation [Math Processing Error]
    : After successfully generating the aggregate encrypted-data [Math Processing
    Error] , leader-node generates the respective transaction [Math Processing Error]
    and block [Math Processing Error] for [Math Processing Error] with validation-value
    [Math Processing Error] . Initially, the transaction generation procedure follows
    basic protocol with time-slot [Math Processing Error] and leader-node generate
    the hash-tuple [Math Processing Error] , where [Math Processing Error] and [Math
    Processing Error] represent the Block-data, [Math Processing Error] represents
    [Math Processing Error] different time-slots, [Math Processing Error] represents
    Previous-Block’s Hash [Math Processing Error] , iB is the initial state of the
    Block-data, and [Math Processing Error] represents Nonce-value for consensus algorithm
    (PoW). Moreover, the tuple [Math Processing Error] , represent that [Math Processing
    Error] is a leader-node at time-slot [Math Processing Error] to validate the generated
    block [Math Processing Error] . So, initially, leader-node [Math Processing Error]
    generates the respective block [Math Processing Error] with transaction [Math
    Processing Error] , where ts is timestamp value of transaction [Math Processing
    Error] . Then, the leader-node [Math Processing Error] broadcasts the block [Math
    Processing Error] to all authorized nodes [Math Processing Error] over the Fog
    layer for the proper validation. After this, the ValidateBlock algorithm (Algorithm
    1) verifies the validity of Block-data [Math Processing Error] according to defined
    rules. Then, it verifies the leader’s validity and finally verifies the Nonce_value
    [Math Processing Error] for the defined Difficulty [Math Processing Error] to
    complete PoW consensus. Now, if [Math Processing Error] algorithm returns 1; update
    the chain with new block [Math Processing Error] according to specified blockchain
    protocol [14]. Algorithm 1 Block-Validation Algorithm; [Math Processing Error]
    1 Parse [Math Processing Error] , where[Math Processing Error] ; 2 Validate [Math
    Processing Error] , if invalid return 0; 3 Validate [Math Processing Error] ,
    if invalid return 0, where [Math Processing Error] is leader for current [Math
    Processing Error] ; 4 Validate [Math Processing Error] , if invalid return 0;
    5 else, return 1. 4) Redactability of Collected Data: In some cases, IoFT devices
    become unstable. They may collect and send erroneous data to corresponding fog
    servers, and the Fog layer sends it to ACC with an immutable transaction of a
    block over the blockchain network. Further, in blockchain-assisted models, after
    a severe 51% attack, malicious fog servers could lead to modification attacks
    and collusion attacks with possibly fatal results regarding crop-status data at
    ACC. So, in the above-mentioned cases, ACC will not be able to take the correct
    required action against any issues with crops. Thus, we employ redactable blockchain
    architecture which enables the authorized nodes [Math Processing Error] and leader-node
    [Math Processing Error] to redact the corresponding block having aggregated encrypted-data
    [Math Processing Error] as follows. Firstly, we define two application specific
    functions, [Math Processing Error] and [Math Processing Error] . First function
    [Math Processing Error] to verify the validity of newly selected leader-nodes
    in voting-period of time-slot [Math Processing Error] and produce output [Math
    Processing Error] , where Prf is proof of [Math Processing Error] for [Math Processing
    Error] and [Math Processing Error] is voting-weight of leader-node [Math Processing
    Error] in [Math Processing Error] . Second function is [Math Processing Error]
    to verify the [Math Processing Error] . Initialize redaction-[Math Processing
    Error] initializes redaction to a block [Math Processing Error] in blockchain.
    Then, [Math Processing Error] parses [Math Processing Error] and replace [Math
    Processing Error] with [Math Processing Error] , where [Math Processing Error]
    is Block-data, [Math Processing Error] with [Math Processing Error] such as [Math
    Processing Error] to create new block [Math Processing Error] and broadcast to
    blockchain. Afterward, elects a leader [Math Processing Error] by the leader-selection
    algorithm to validate [Math Processing Error] whether it is a valid candidate
    redacting block or not and stores it in their pool in the following manner. (i)
    [Math Processing Error] verifies the expiration-time [Math Processing Error] since
    every candidate redacting block [Math Processing Error] has a defined [Math Processing
    Error] , (ii) if [Math Processing Error] is valid, [Math Processing Error] verifies
    [Math Processing Error] and remove [Math Processing Error] from pool, where [Math
    Processing Error] represents the redaction-policy to verify the Nonce-value [Math
    Processing Error] for the defined Difficulty [Math Processing Error] . Initially,
    ValidateCedt() checks the validity of [Math Processing Error] , then, verifies
    the link between [Math Processing Error] and [Math Processing Error] . Finally,
    [Math Processing Error] is a valid candidate editing block if ValidateCedt = 1.
    Algorithm 2 illustrates the validation of candidate editing block [Math Processing
    Error] . Validation procedure of [Math Processing Error] - For candidate block
    [Math Processing Error] , [Math Processing Error] submits solution of Difficulty
    [Math Processing Error] and [Math Processing Error] verifies their validity in
    [Math Processing Error] with [Math Processing Error] according to defined PoW,
    where [Math Processing Error] represents the current time-slot. [Math Processing
    Error] outputs [Math Processing Error] and broadcast [Math Processing Error] with
    Nonce-value on [Math Processing Error] as their respective solutions. Afterward,
    [Math Processing Error] verifies through Algorithm 1, initially, verifies the
    number of votes on [Math Processing Error] by [Math Processing Error] is enough
    or not. Particularly, firstly, it verifies the Nonce-value [Math Processing Error]
    , confirms the voting-right, and voting-number [Math Processing Error] of the
    voters defined by [Math Processing Error] . Finally, if [Math Processing Error]
    , [Math Processing Error] updates the blockchain Chain with [Math Processing Error]
    . Algorithm 3 illustrates the validation procedure of [Math Processing Error]
    . Algorithm 2 Candidate Block-Validation Algorithm; [Math Processing Error] 1
    Parse [Math Processing Error] , where [Math Processing Error] ; 2 if [Math Processing
    Error] 0, then return 0; 3 Parse [Math Processing Error] , where [Math Processing
    Error] 4 Parse [Math Processing Error] , where [Math Processing Error] 5 if [Math
    Processing Error] and [Math Processing Error] , then return 1; 6 else, return
    0. Algorithm 3 Validation - Procedure of [Math Processing Error] 1 Set [Math Processing
    Error] , Prf = 0, Time-slot [Math Processing Error] ; 2 while Time-slot [Math
    Processing Error] , where [Math Processing Error] is required slots for votes
    distribution for candidate block; 3 Parse [Math Processing Error] , assume [Math
    Processing Error] be the latest confirm height on blockchain; 4 Parse [Math Processing
    Error] ; 5 if [Math Processing Error] find correct Nonce-value [Math Processing
    Error] , [Math Processing Error] ; 6 then set [Math Processing Error] ; 7 end,
    while; 8 return [Math Processing Error] . E. Data Analysis at ACC ACC reads the
    blockchain records every [Math Processing Error] minutes, where [Math Processing
    Error] . Then, ACC decrypts the globally aggregated data [Math Processing Error]
    through the defined decryption method of an efficient paillier cryptosystem. Meanwhile,
    we describe symbols [Math Processing Error] and [Math Processing Error] to facilitate
    the decryption of aggregated ciphertext; [Math Processing Error] View Source The
    aggregated ciphertext [Math Processing Error] can be converted into the form of
    [Math Processing Error] . However, the converted aggregated ciphertext still adheres
    to the paillier encryption format. So, ACC uses the paillier decryption key and
    [Math Processing Error] to perform the decryption to get the aggregated data [Math
    Processing Error] View Source and parses the [Math Processing Error] as [Math
    Processing Error] . Then, ACC computes [Math Processing Error] and verify if [Math
    Processing Error] , return [Math Processing Error] , else return invalid. Finally,
    Horner’s rule [40] is used to complete the analysis of aggregated collected data
    and get fine-grained aggregation results in Algorithm 4. The algorithm generates
    the coefficient [Math Processing Error] , which describes the crop-status data
    of one IoFT device; [Math Processing Error] View Source Algorithm 4 Aggregated
    Area-Report Extraction Input: [Math Processing Error] and [Math Processing Error]
    2 Output: crop-status [Math Processing Error] of each IoFT device 1 Begin 2 [Math
    Processing Error] , [Math Processing Error] , [Math Processing Error] ; 3 for
    [Math Processing Error] to [Math Processing Error] do; 4 [Math Processing Error]
    ; 5 [Math Processing Error] ; 6 End for 7 Obtain [Math Processing Error] 8 End
    Once ACC obtains the crop-status data of each IoFT device of the defined region
    of corresponding fog servers. Afterward, these fine-grained data can be explored
    to analyze the real-time status of crops and also take suitable action whenever
    required. SECTION VI. Security Analysis In this section, a detailed explanation
    of the security analysis of the proposed data aggregation model is demonstrated
    with concrete proofs in terms of various security theorems. Theorem 1 (Confidentiality
    and Privacy-Preserving):The proposed model guarantees complete confidentiality
    and privacy-preserving against malicious Fog servers [Math Processing Error] and
    ACC. Proof:The proposed model ensures computationally intractability for confidentiality
    against any malicious fog servers [Math Processing Error] at the Fog layer and
    ACC with proper privacy-preserving as follows; Case 1 - Confidentiality against
    [Math Processing Error] :-We employ the efficient IND-CCA2 secure paillier cryptosystem
    to encrypt the crop-status data [Math Processing Error] in order to ensure security
    against data confidentiality during the data aggregation phase. Since, after passing
    the validation condition (Eq. (2)), the encrypted data [Math Processing Error]
    can be considered valid. Moreover, the computational intractability of DCPR in
    a random oracle against IND-CCA2 also proves the complete security of an efficient
    paillier cryptosystem [13]. So, it is computationally hard for malicious fog server
    [Math Processing Error] to decrypt the shared encrypted data [Math Processing
    Error] and obtain the real data [Math Processing Error] . Simultaneously, due
    to the computationally intractability of the encryption method, any authorized
    nodes [Math Processing Error] are unable to decrypt the aggregated ciphertext
    [Math Processing Error] . Thus, the proposed model ensures the data confidentiality
    of crop-status data against malicious [Math Processing Error] . Case 2 - Confidentiality
    against ACC:-To show the computational infeasibility of data confidentiality at
    ACC, assume a PPT adversary [Math Processing Error] colludes with ACC and obtains
    the required decryption key [Math Processing Error] . However, if [Math Processing
    Error] tries to decrypt [Math Processing Error] , there is only option to obtain
    the randomly selected value ([Math Processing Error] ) directly, since, the collected
    crop-status data [Math Processing Error] is blinded by [Math Processing Error]
    , i.e., [Math Processing Error] . So, [Math Processing Error] cannot be able to
    obtain the value of [Math Processing Error] with the given tuple [Math Processing
    Error] , until the CDH-problem is computationally hard in [Math Processing Error]
    [39]. On the other hand, it is obviously computationally hard to break the security
    of the Hash-function in [Math Processing Error] to form real value of [Math Processing
    Error] [41]. Moreover, although [Math Processing Error] can be able to get the
    aggregated crop-status data [Math Processing Error] through successful intruding
    the ACC, still [Math Processing Error] can not be able to obtain the every IoFT
    devices’ collected data and link to its respective region of [Math Processing
    Error] , due to solving an NPC-problem [42]. Moreover, even if [Math Processing
    Error] manages to gain access to the fog server, [Math Processing Error] will
    be unable to access any private information. So, none of the PPT adversary [Math
    Processing Error] can collude with ACC to attack the confidentiality of aggregated
    data and also the privacy of IoFT devices. Therefore, the proposed data aggregation
    model guarantees the proper data confidentiality and privacy-preserving of IoFT
    devices. Theorem 2 (Authentication and Integrity):The proposed model guarantees
    the proper authentication for transfer between IoFT layer, Fog layer, and data
    integrity for collected data. Proof: Source authentication: To show the proper
    authentication of the model, we consider the communication between the IoFT layer-to-Fog
    layer and the Fog layer-to-ACC. Initially, we consider the communication between
    the IoFT layer-to-Fog layer. Upon receiving [Math Processing Error] from IoFT
    devices in time-slot [Math Processing Error] , [Math Processing Error] verifies
    the authenticity of IoFT devices with verification condition - [Math Processing
    Error] ; and then check the validity of tag-value [Math Processing Error] with
    corresponding public-key as follows - [Math Processing Error] . However, a PPT
    adversary [Math Processing Error] can attack as Type-I adversary, i.e., any Type-I
    adversary can replace the defined public-key, i.e., IoFT devices’ public-key [Math
    Processing Error] , but does not have any information about signing-private-key
    [Math Processing Error] . Then, [Math Processing Error] tries to pass the validation
    procedure (Eq. (1)) with the replaced public key by checking the validity of tag-value
    [Math Processing Error] . Now, we need to provide the proof for which only the
    real key pair is required to pass the validation condition (Eq. (1)). To prove
    the security of the authentication procedure and tag value, we design an algorithm
    [Math Processing Error] , i.e., [Math Processing Error] uses [Math Processing
    Error] as a black box to find the solution of DL problem in polynomial time with
    limited power. Initially, [Math Processing Error] is given the prime number [Math
    Processing Error] and a DL-problem instance [Math Processing Error] . The aim
    of algorithm [Math Processing Error] is to find [Math Processing Error] , i.e.,
    [Math Processing Error] . [Math Processing Error] also initialize [Math Processing
    Error] with the signing-key-pairs and given system parameter [Math Processing
    Error] to [Math Processing Error] . So, [Math Processing Error] resets [Math Processing
    Error] to such an orcale-query [Math Processing Error] on the tag-string [Math
    Processing Error] , [Math Processing Error] for getting [Math Processing Error]
    , according to the tag-generation [Math Processing Error] procedure. Then, [Math
    Processing Error] rearrange the random-oracle for getting [Math Processing Error]
    , i.e., [Math Processing Error] and proceeds to simulate [Math Processing Error]
    . Suppose, if [Math Processing Error] is an efficient forger in the aforementioned
    interactions, [Math Processing Error] can get two valid tag-values such as [Math
    Processing Error] and [Math Processing Error] with the defined condition that
    [Math Processing Error] which satisfies;[Math Processing Error] View Source Afterward,
    [Math Processing Error] can compute;[Math Processing Error] View Source where,
    [Math Processing Error] is a public prime integer, i.e., [Math Processing Error]
    and [Math Processing Error] is also prime to [Math Processing Error] . So, [Math
    Processing Error] can find the solution of the DL problem to the get-value of
    [Math Processing Error] . However, clearly, it contradicts the intractability
    of solving the hard DL problem in polynomial time. So, the proposed model guarantees
    the proper authenticity with security against false data injection attacks by
    [Math Processing Error] between communication IoFT layer-to-Fog layer. Integrity:
    As defined earlier, on receiving [Math Processing Error] from IoFT devices in
    time-slot [Math Processing Error] , [Math Processing Error] verifies the validation
    of tag-value [Math Processing Error] along with authenticity of IoFT devices.
    Also, it is discussed above only the registered IoFT devices have knowledge of
    real signing-public-key [Math Processing Error] linked to respective signing-private-key
    [Math Processing Error] , it can generate a valid tag-value which passes the validation
    condition (Eq. (2)). As [Math Processing Error] can not solve the hard DL-problem
    corresponding to pass the validation condition with modified tag-value [Math Processing
    Error] in polynomial time with limited power, so, [Math Processing Error] can
    not pass the verification condition with modified encrypted crop-status data [Math
    Processing Error] . Furthermore, each of the collected crop-status data is marked
    with time-stamp [Math Processing Error] value, which is also included in [Math
    Processing Error] . So, the current time-stamp value guarantees that [Math Processing
    Error] can not perform any reply attack on the proposed model. Afterward, a similar
    verification procedure is also performed by leader-node to check the authenticity
    and validity of aggregated data [Math Processing Error] and new tag-value [Math
    Processing Error] with time-stamp [Math Processing Error] . Therefore, the proposed
    model also ensures the proper integrity of the collected crop-status data. Theorem
    3 (Data Mining Attack):The proposed model guarantees security against malicious
    data mining attacks. Proof:In the proposed model, we assure that a PPT adversary
    [Math Processing Error] tries to launch a data mining attack against a target
    IoFT device at the IoFT layer. Here, under the following conditions, we will show
    the resistance of the proposed data aggregation model against malicious data mining
    attacks; Case 1:We consider the initial condition, where [Math Processing Error]
    blocks the communication from one target IoFT device, i.e., [Math Processing Error]
    to respective fog server [Math Processing Error] . For such condition, [Math Processing
    Error] cannot share the respective tuple, i.e., [Math Processing Error] and [Math
    Processing Error] to [Math Processing Error] . So, IoFt layer sends the collected
    crop-status data of [Math Processing Error] IoFT device as [Math Processing Error]
    . Then, [Math Processing Error] can only able to aggregate [Math Processing Error]
    IoFT device’s data at Fog layer as; [Math Processing Error] View Source after
    holding the validation condition (Eq. (2)) with tuple [Math Processing Error]
    such as; [Math Processing Error] View Source However, [Math Processing Error]
    cannot be able to pass the validation condition (Eq. (2)) with [Math Processing
    Error] and [Math Processing Error] . Since it is not possible to hold validation
    condition (Eq. (2)), [Math Processing Error] , where [Math Processing Error] .
    So, [Math Processing Error] cannot attempt any malicious data mining attack to
    block communication between the IoFT layer-to-Fog layer by targeting any IoFT
    device. Case 2:Now, we consider an internal attack from [Math Processing Error]
    , then any of the IoFT devices collude with [Math Processing Error] and block
    the communication between the IoFT layer and to Fog layer. For such condition,
    [Math Processing Error] interrupt the previously collected data by one IoFT device
    [Math Processing Error] , parse the value of [Math Processing Error] with [Math
    Processing Error] , and modifies the ciphertext of their collected data [Math
    Processing Error] and [Math Processing Error] . On receiving the encrypted crop-status
    data of [Math Processing Error] from the IoFT layer, respective fog server [Math
    Processing Error] checks the validity through Eq (4). However, due to the computational
    intractability of DL problem in [Math Processing Error] , it is not possible to
    pass the validation condition with modified values of [Math Processing Error]
    . So, in such a condition, [Math Processing Error] cannot launch any malicious
    data mining attack as an internal attack. Theorem 4 (Collusion and Modification
    Attack):The proposed model also guarantees the security of collected and transferred
    crop-status data on blockchain against any modification and collusion attack.
    Proof:As described earlier, collected data of each IoFT device’ is integrated
    into a block over blockchain at the Fog layer. So, whenever any malicious ACC
    wants to modify existing collected data with modified values for some personal
    benefit, then, the only option is to break the security of redactable blockchain
    architecture. Specifically, the malicious ACC incentivized the group of authorized
    nodes [Math Processing Error] to modify any block [Math Processing Error] with
    malicious block [Math Processing Error] . To perform such an attack, we assume
    that the leader-node can find a solution of the defined Difficulty [Math Processing
    Error] to complete the PoW consensus for validation of malicious block [Math Processing
    Error] in at most [Math Processing Error] time-slots earlier than honest fog servers.
    Initially, another assumption that, [Math Processing Error] fraction of fog servers
    [Math Processing Error] are honest, where [Math Processing Error] . Let [Math
    Processing Error] and [Math Processing Error] represent the expected solutions
    of the defined Difficulty [Math Processing Error] found by the honest fog servers
    and incentivized malicious fog servers [Math Processing Error] in every time-slot
    respectively, where [Math Processing Error] is the length of Hash-function [Math
    Processing Error] . We also represent the maximum number of solutions for the
    defined Difficulty [Math Processing Error] found by incentivized malicious fog
    servers [Math Processing Error] in time-slot [Math Processing Error] as [Math
    Processing Error] and minimum number of solutions for the defined Difficulty [Math
    Processing Error] found by incentivized malicious fog servers [Math Processing
    Error] in time-slot [Math Processing Error] by [Math Processing Error] , respectively.
    Also, according to chernoff bound [43], it holds the conditions such as [Math
    Processing Error] , except with negligible probability as; [Math Processing Error]
    View Source and [Math Processing Error] , except with negligible probability [Math
    Processing Error] . Then, initially, if we set the leader node [Math Processing
    Error] to be honest in [Math Processing Error] - time-slot to break the security
    of blockchain, the malicious ACC assures the condition [Math Processing Error]
    . Also, the malicious ACC should hold the condition [Math Processing Error] and
    obtain the condition; [Math Processing Error] View Source Moreover, according
    to Proof-of-consistency property [14], none of the adversaries can ‘withhold’
    a block for “too long” and make it to the chain. The malicious ACC should set
    [Math Processing Error] to be the longest number of time-slots that are incentivized
    [Math Processing Error] to withhold the target candidate editing block [Math Processing
    Error] . Then, malicious ACC considers the case whenever [Math Processing Error]
    withholds some blocks, [Math Processing Error] new blocks are mined in the longest
    chain with [Math Processing Error] where [Math Processing Error] represent common
    prefix parameter [14]. According to common prefix property, these withholding
    blocks can never be present in the longest chain of honest fog servers. So, [Math
    Processing Error] should be less than the defined minimum time, [Math Processing
    Error] takes for the longest valid chain to grow by at least [Math Processing
    Error] blocks. Also, according to the chain-growth property [14], malicious ACC
    and [Math Processing Error] should hold the condition [Math Processing Error]
    , where [Math Processing Error] , and [Math Processing Error] is the Difficulty
    for the defined PoW consensus that at least one incentivized user can find the
    solution for [Math Processing Error] at every time-slot, i.e., [Math Processing
    Error] . However, the above-mentioned conditions are contradictory to common prefix
    property and chain-growth property with limited power of a group of incentivized
    fog servers which is less than 51% of the overall blockchain network. So, malicious
    ACC with incentivized fog servers cannot perform any modification and collusion
    attack on collected data to gain any advantages. SECTION VII. Performance Analysis
    In this section, we demonstrate the proposed model’s performance analysis regarding
    - security functionalities, and theoretical, and experimental analysis. Moreover,
    to provide a detailed analysis in terms of efficiency, we also provide a significant
    comparison of the proposed model with existing models [25], [31], [34], [35].
    A. Functional Comparison Table II demonstrates the functionality comparison of
    the proposed model with existing models [25], [31], [34], [35] in terms of functionalities
    and features. All the compared existing data aggregation models [25], [31], [34],
    [35] are computationally intractable in terms of data integrity and privacy-preserving.
    So, the proposed data aggregation model and other compared existing data aggregation
    models can guarantee the proper correctness for all collected crop-status data
    and privacy-preserving for all IoFT devices. To attain high-level immutability
    for all collected crop-status data, the existing models [31], [34], and the proposed
    data aggregation model utilize the security of blockchain technology. However,
    in considering the redaction or editing of a block’s data over blockchain, only
    the proposed model employs the redactable blockchain framework to provide flexibility
    against any erroneous data collection by IoFT devices. Further, while transferring
    the collected data, the proper source authentication shows the computational infeasibility
    of communication links and all involved entities against - false data injection
    attacks in the proposed model and existing model [34]. TABLE II Comparative Analysis
    in the Functionalities of Different Schemes and Proposed Model Considering data
    confidentiality, most of the existing data aggregation models provide security
    against it. However, only the work introduced by [34], and the proposed model
    considers IND-CCA2 security against chosen ciphertext attacks and also infeasibility
    against malicious data mining attacks by internal or external adversaries. Also,
    the proposed model considers the collusion attack to follow the standard security
    model. Thus, none of the malicious entities can collude to perform a collusion
    attack to break the security of the model. Moreover, only the proposed model and
    the work compiled by [34] provide the fault-tolerant to support the robust nature
    of the data aggregation models. So, as observed from Table II, the proposed data
    aggregation model can strongly support the standard functionalities with the proper
    security standard. B. Theoretical Analysis Primarily, we consider the cryptographic
    operations involved in the registration, data aggregation, and data analysis phases
    to analyze the proposed model’s efficiency. So, we summarize the theoretical analysis
    in terms of computational and communication overhead, which is demonstrated in
    the following manner. 1) Communication Overhead: Mainly, in the proposed model,
    we consider the communication overhead between the IoFT layer-to-Fog layer and
    the Fog layer-to-ACC. For the sake of simplicity, we take into account that the
    only region to analyze the communication overhead of the whole data aggregation
    procedure. Initially, the IoFT devices of respective agriculture region generate
    the crop-status data [Math Processing Error] and send it to corresponding fog
    server [Math Processing Error] . The size of the collected data is - [Math Processing
    Error] , where [Math Processing Error] is the number of aggregated encrypted-data
    ciphertext at one instance of time-slot. So, the overall communication overhead
    between IoFT layer-to-Fog layer is [Math Processing Error] . Afterward, we analyze
    the communication overhead between Fog servers and leader-node at Fog layer, [Math
    Processing Error] performs the local data aggregation to aggregate all the ciphertext
    of collected data, generates the corresponding transaction [Math Processing Error]
    with validation-value [Math Processing Error] and broadcast it to authorized nodes
    [Math Processing Error] to validate it. Then, the Fog layer will generate overhead
    approximately [Math Processing Error] . Similarly, for the works [34], the IoT
    devices require extra overhead - [Math Processing Error] to send collected encrypted
    data to Fog layer, due to hash-chain based authentication method. Also, the communication
    overhead between Fog layer-to-cloud center is also high [Math Processing Error]
    . Similarly, the works [31], communication overhead from IoT layer-to-Fog layer
    and Fog layer-to-Cloud center is [Math Processing Error] and [Math Processing
    Error] , respectively. Further, the works introduced by [25], [35] also require
    some high communication overhead to send collected data from IoT device - to -
    fog devices is [Math Processing Error] and [Math Processing Error] , respectively.
    Similarly, from Fog layer - to- Cloud center is [Math Processing Error] and [Math
    Processing Error] , respectively. So, the efficient communication overhead of
    the proposed model over other existing models provides more feasibility. 2) Computational
    Overhead: The computational overhead of the proposed data aggregation model is
    mainly expressed in terms of cryptographic operations, i.e., exponential operation
    in [Math Processing Error] - [Math Processing Error] , pairing operation - ([Math
    Processing Error] ), hash-function - [Math Processing Error] , modular multiplication
    in [Math Processing Error] - [Math Processing Error] , and exponential operation
    in [Math Processing Error] - [Math Processing Error] . Also, to calculate the
    computational overhead of the proposed model and other existing models [25], [31],
    [34], [35], under the defined standard security level of 80-bit, we select a Type-III
    pairing, i.e., [Math Processing Error] on a super-singular Elliptic curve [Math
    Processing Error] on field [Math Processing Error] , where [Math Processing Error]
    and [Math Processing Error] both are random prime number on field [Math Processing
    Error] . Moreover, we employ the PBC - (0.5.14) library to implement all the above-mentioned
    cryptographic operations. It is important to note that the modular exponential
    over [Math Processing Error] and [Math Processing Error] is set to 160 bits. In
    the proposed model, the generation of ciphertext of encrypted value of collected
    crop-status data [Math Processing Error] needs only one exponential operation
    in [Math Processing Error] - [Math Processing Error] and one modular multiplication
    [Math Processing Error] ; also one hash-operation [Math Processing Error] and
    2 modular multiplication [Math Processing Error] requires to generate the respective
    tag-value. Then, for local data aggregation at Fog layer, [Math Processing Error]
    requires to execute one exponential operation in [Math Processing Error] - [Math
    Processing Error] and one hash-operation [Math Processing Error] with 2 modular
    multiplication [Math Processing Error] ; also one modular multiplication [Math
    Processing Error] with one exponential operation [Math Processing Error] requires
    to verify the validity of collected data as well as authenticity of IoFT devices.
    Afterward, the leader node also verifies the validity of aggregated ciphertext
    with one modular multiplication [Math Processing Error] and one exponential operation
    [Math Processing Error] . Then, the leader node generates the transaction [Math
    Processing Error] with a defined transaction generation cost on the blockchain.
    Finally, to analyze the aggregated data, ACC decrypts the data by parsing the
    blockchain and decrypting key, which requires only one modular multiplication
    [Math Processing Error] and exponential operation [Math Processing Error] . So,
    the total computational overhead is - [Math Processing Error] . However, in the
    work proposed by [34], the leader-node requires ([Math Processing Error] ) pairing
    operation ([Math Processing Error] ) to validate the received transactions, during
    the global data aggregation. So, due to high computational cost pairing operations,
    this work requires high computational overhead - [Math Processing Error] . Moreover,
    in the other existing model [31], the local data collection requires 6 exponential
    operation [Math Processing Error] due to providing anonymity to the identity of
    all IoT devices and one hash-operation [Math Processing Error] , 3 modular multiplication
    [Math Processing Error] . Also, at Fog layer requires [Math Processing Error]
    operations to verify the authenticity of IoT devices and the validity of tag-value.
    However, due to the double layer of blockchain, it requires a double number of
    transactions [Math Processing Error] generation overhead. However, the decryption
    overhead at ACC requires a similar computational overhead as the proposed model.
    So, the total computational overhead of this model is - [Math Processing Error]
    . Furthermore, the compared models [25], [35] requires [Math Processing Error]
    and [Math Processing Error] operations for local data aggregation at Fog layer
    respectively; also requires extra [Math Processing Error] and [Math Processing
    Error] operations for global aggregation at Fog layer to verify the authenticity
    of IoT devices and validity of tag-values. Thus, the final computational overhead
    of these models is - [Math Processing Error] and [Math Processing Error] respectively.
    Finally, Table III illustrates the detailed comparison of the computational overhead
    of the proposed model and other existing models [25], [31], [34], [35]. From Table
    III, we can observe that the proposed model has lower computational overhead than
    these compared models [25], [31], [34], [35], due to less number of cryptographic
    operations. So, the low computational overhead of the proposed model strengthens
    its practicability. TABLE III Comparison of Computational Overheads C. Experimental
    Analysis For the detailed experimental analysis of the proposed data aggregation
    model, we performed a set of simulations on the set-up for the designed model.
    However, in the real-world scenario, some cloud-fog simulators, i.e., iFogSim
    and YAFS, have been used in research to analyze the network congestion, latency,
    and cost of cloud-fog environments. Although, these simulators cannot support
    the implementation of cryptographic operations. Due to this, we have custom-implemented
    the proposed model. In this set-up, ACC and fog severs are employed on a system
    with OS Windows 10, Intel Xeon E-2124G CPU@ 3.40GHz [Math Processing Error] -
    based 64-bit processor, 8GB DDR3 RAM, 1TB SATA memory with 64MB buffer. Also,
    the IoFT devices are simulated with sensor devices. For the sake of simplicity,
    we simulate an arrangement of 50 fog servers, and each fog server is responsible
    for collecting crop-status data from 20 IoFT devices of corresponding agricultural
    land. Afterward, fog servers perform the data aggregation and send the aggregated
    data to ACC for further analysis. For a detailed on-chain analysis, we employ
    the local version of Ethereum’s latest client Geth 1.9.0 (such as redactability
    enabled consortium Ethereum blockchain architecture) to set up the blockchain
    framework at the Fog layer. Every function of the fog servers and ACC communicates
    with the blockchain via Web3.js API. Web3.js is a lightweight Java library to
    interacts with blockchain through an HTTP connection. To analyze the on-chain
    computational and communication overhead, we estimate Gas consumption (in Eth)
    during each interaction of fog servers and ACC with blockchain. Without the loss
    of generality, we assume that the number of fog servers changes from 5 to 50 with
    continuously increasing from 100 IoFT devices, i.e., 5 fog servers in each test.
    Fig. 3 illustrates the computational overhead to locally aggregate the collected
    crop-status data by IoFT devices at the fog layer for all compared models and
    the proposed model. Fig. 3 also includes computational overhead to global aggregation
    of all collected data with respective transaction [Math Processing Error] generation
    over the blockchain. From significant observation of Fig. 3, we can see that the
    proposed model is more efficient in terms of computational overhead at the IoFT
    layer, Fog layer, and ACC than any other existing models [25], [31], [34], [35].
    Fig. 3. Comparison of computational overhead. Show All For detailed experimental
    analysis for communication overhead between various layers of the proposed data
    aggregation model and other existing models, initially, we set the length of IoFT
    devices - identities [Math Processing Error] , fog server - identities [Math Processing
    Error] , and time-stamp [Math Processing Error] be 32 - bits. Then, we analyzed
    communication overhead, during data transfer from one layer to other layers, i.e.,
    IoFT layer-to-Fog layer and Fog layer-to-ACC by changing the number of IoFT devices
    from 5 to 50 in one region. Fig. 4 illustrates the communication overhead of each
    compared model [25], [31], [34], [35] with the proposed model. As seen in Fig.
    4, the proposed model has lower communication overhead than other existing models
    to provide more efficient utilization of communication resources. Fig. 4. Comparison
    of communication cost. Show All Furthermore, for concrete experimental analysis,
    we also illustrate the system performance in terms of latency and throughput of
    transactions over the blockchain as follows; 1) Transaction Throughput: refers
    to the number of successful transactions completed on the blockchain during a
    specified time slot.[Math Processing Error] View Source It should be noted that
    to obtain the successful transactions [Math Processing Error] , the invalid transactions
    should be removed from the set of total transactions. Fig. 5 illustrates that
    the average transaction throughput continuously rises as the transaction send-rate
    rises until it reaches the threshold value of transaction send-rate (tps) 700
    transaction-per-second (tsp). Further, in the optimal case, the average transaction
    throughput is considered to be 700 tsp; after that, the throughput decreases as
    the throughput decreases as the transaction-send rate is increased. Fig. 5. Transaction
    throughput of the proposed model. Show All 2) Transaction Latency: considers the
    total execution time of a transaction [Math Processing Error] throughout the blockchain,
    including the transaction broadcasting time and execution time of the defined
    consensus algorithm to validate the respective transaction. Transaction latency
    = (Transaction confirmation time [Math Processing Error] Network threshold) −
    Transaction submission time. For the sake of simplicity, the system performance
    for blockchain-assisted proposed data aggregation is obtained by continuously
    changing the transaction-send-rate (tsp) from 100 to 1000. Fig. 6 shows that the
    average transaction latency of the proposed model increases considerably until
    the transaction-send-rate (tps) reaches up to 690 tps. So, the transaction latency
    increases linearly as more requests for transaction generation occur; after the
    transaction-send-rate of 690 tps. So, the average transaction-send-rate of the
    proposed model is 690 tps. Fig. 6. Average transaction latency of the proposed
    model. Show All Therefore, the detailed experimental analysis shows that the proposed
    data aggregation model is efficient and can be easily implemented in practice.
    SECTION VIII. Discussion The presented model demonstrates the integration of blockchain
    technology with IoFT and Fog architecture to develop an efficient and secure two-level
    data aggregation model. This model incorporates computationally intractable privacy-preserving
    and confidentiality measures. The proposed approach incorporates the convergence
    of fog computing and Internet-of-Farming-Things (IoFT) to streamline agricultural
    operations, such as real-time data collection of crop-related data. However, the
    issue of maintaining security and privacy in the data aggregation process of the
    Internet of Things (IoT) is complex and challenging. Fortunately, the utilization
    of blockchain technology has the potential to offer a decentralized framework
    that can effectively address the issue of trust. Moreover, we employed instant
    redactability to blockchain architecture to address the unstable behavior of IoFT
    devices, affecting the ACC to make correct decision-making regarding crop status.
    Furthermore, we have implemented instant redactability into the blockchain architecture
    to mitigate the unpredictable behavior of Internet of Farming Things (IoFT) devices.
    This is crucial for ensuring accurate decision-making by the Agricultural Control
    Centre (ACC) concerning the status of crops. We also employed the IND-CC2 secure
    efficient paillier encryption scheme to ensure the data aggregation procedure’s
    computationally intractable confidentiality and privacy preservation. As delineated
    in Section VI (Security Analysis), the suggested model demonstrates superior performance
    compared to existing models in effectively ensuring against false data injection,
    collusion, and modification attacks within the constraints of the standard security
    framework. This security study is based on the computational intractability of
    hard Computational Diffie-Hellman (CDH) and Discrete Logarithm (DL) assumptions
    [39]. In addition, the performance analysis in Section VII demonstrates that the
    proposed approach has a low computational and communication cost while incorporating
    various standard security measures, which is another important goal. The proposed
    model can be further deployed to other applications - industrial, smart city,
    and healthcare systems. In the aforementioned applications, various sensors and
    Internet of Things (IoT) devices are interconnected inside the network to aggregate
    data from the designated monitoring area and transmit it to the central server
    for significant decision-making. In Industry 5.0, many Industrial IoT devices
    monitor manufacturing processes and improve productivity with real-time secure
    data aggregation. On the other hand, in the Healthcare industry, IoT-enabled data
    aggregation can be deployed for real-time monitoring of patients and sharing the
    collected data with the hospital for the right decision-making in any emergency
    condition. IoT systems incorporate digital technology and network connection protocols
    in a smart city environment to provide automated building control and security
    mechanisms. A. Economical Implications The proposed model’s economic implications
    are discussed concerning the cost analysis of implementing redactability on the
    blockchain. This solution aims to resolve the problem of malicious behavior in
    the Internet of Fog Things (IoFT). Specifically, it focuses on the scenario where
    an unstable IoFT device may gather and transmit erroneous data to the respective
    fog servers. Subsequently, the fog layer forwards this data to the ACC system
    through an unalterable transaction recorded on the blockchain network. Therefore,
    we show the cost analysis of implementing redactability to make changes to recorded
    transactions on the blockchain to offer protection against the above-discussed
    scenario as follows; [Math Processing Error] View Source where [Math Processing
    Error] is the cost to generate the candidate block [Math Processing Error] of
    the corresponding block of transaction with erroneous data with defined [Math
    Processing Error] to satisfy chain growth [14]. In [Math Processing Error] , [Math
    Processing Error] is cost to check the validity of [Math Processing Error] , verifies
    the redactability policy [Math Processing Error] and [Math Processing Error] is
    cost to check the link between [Math Processing Error] and [Math Processing Error]
    to verify the chain-quality property [14]. Analysis of redactable blockchains
    shows that the cost to create a candidate block containing new data is negligible
    [44]. However, the verification process of a candidate block [Math Processing
    Error] adheres to the cost analysis for executing Proof of Work (PoW) in Ethereum.
    This analysis encompasses the transaction cost in Gas required to discover a solution
    for a given difficulty level [Math Processing Error] . Transaction costs (Gas)
    are paid in Ethereum’s native currency, ether (Eth). However, the number of ethers
    a user is willing to pay for a transaction may vary depending on market conditions.
    Therefore, it’s vital to remember that the cost of transaction Gas remains constant
    for each operation. The Gas price is specified in Gwei per Gas when a leader conducts
    a transaction to redact candidate block [Math Processing Error] of recorded transactions
    over the blockchain. To redact the candidate block [Math Processing Error] of
    the recorded transactions,[Math Processing Error] (the leader user) pays a fee
    equal to the Gas price multiplied by the amount of Gas utilized [44]. B. Limitations
    Certain limitations are inherent in the data aggregation model provided within
    this work. Incorporating an incentive system is an essential component in the
    design and execution of any model based on blockchain technology. One of the primary
    factors for successfully implementing the blockchain-based model is the ability
    to effectively incentivize all the involved entities to adopt the system with
    complete soundness. Moreover, the above-mentioned issue poses a significant challenge
    regarding transaction processing and block validation methods in practical implementation,
    primarily due to the consensus mechanism. The challenges related to designing
    an appropriate incentive mechanism for ensuring the efficient instant redactability
    of previously created blocks on the blockchain are outside the scope of this study.
    Hence, these issues are regarded as constraints that necessitate substantial additional
    research. SECTION IX. Conclusion and Future Work In this paper, to address the
    security issues of the Fog-enabled smart agriculture paradigm, we introduce an
    efficient redactable blockchain-based data aggregation model with a secure efficient
    paillier cryptosystem. The proposed model not only incorporates fog-computing
    with smart agriculture but also integrates redactable blockchain to provide reasonable
    editing to recorded blocks and infeasibility against collusion attacks. The fog
    layer significantly enhances the model’s potential to mitigate the modification
    attack on aggregated data by integrating the tamper-proof characteristics of blockchain
    architecture. Further, the detailed concrete security proofs show the computational
    infeasibility against malicious data mining attacks with proper source authentication,
    data confidentiality, and integrity under malicious fog servers and external adversaries.
    Finally, the performance analysis demonstrates the significant advantages, making
    it a better fit for Fog-enabled smart agriculture’s real-time data aggregation
    model. However, the proposed model provides a secure and efficient data aggregation
    model for the IoFT-enabled Fog-paradigm; it still requires a smart consensus algorithm
    for selecting a leader fog node in a secure decentralized aggregation method.
    So, in the future, machine learning technology could be integrated to increase
    the practicability of the proposed model in the real world. Authors Figures References
    Citations Keywords Metrics More Like This Blockchain Security Encryption to Preserve
    Data Privacy and Integrity in Cloud Environment 2023 10th International Conference
    on Future Internet of Things and Cloud (FiCloud) Published: 2023 Balanced computing
    server data security storage system based on blockchain 2022 4th International
    Academic Exchange Conference on Science and Technology Innovation (IAECST) Published:
    2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Transactions on Network and Service Management
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Redactable Blockchain-Assisted Secure Data Aggregation Scheme for Fog-Enabled
    Internet-of-Farming-Things
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Lin Y.B.
  - Chen W.E.
  - Chang T.C.Y.
  citation_count: '2'
  description: Integrating cloud with fog/edge is a main trend in networking. Many
    cloud computing applications have been shifted to the edge/fog domain. Such paradigm
    shift offers new opportunities for pervasive computing. An example is AgriTalk,
    an Internet of Things (IoT) application development platform for smart agriculture.
    By integrating cloud with edge/fog, this article describes how AgriTalk addresses
    six issues for developing edge/fog agriculture applications. These issues include
    device domain development, application generation and bug detection, sensor failure
    detection and calibration, big data management, Artificial Intelligence (AI) provisioning,
    and data privacy. We show how AgriTalk integrates fog/edge applications and use
    rice blast detection and piglet crushing mitigation as two examples to demonstrate
    that fog/edge computing is a better solution than cloud computing. Compared with
    cloud computing, fog/edge computing reduces the delays by 50 percent in AgriTalk.
    Through the low-code no-code approach, AgriTalk allows the farmers to create and
    maintain fog/edge agriculture applications by themselves.
  doi: 10.1109/MCOM.001.2200633
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Journals & Magazines >IEEE Communications Magazine >Volume:
    61 Issue: 12 Moving from Cloud to Fog/Edge: The Smart Agriculture Experience Publisher:
    IEEE Cite This PDF Yi-Bing Lin; Whai-En Chen; Ted C.-Y. Chang All Authors 3 Cites
    in Papers 218 Full Text Views Abstract Document Sections Introduction AgriTalk-FE:
    the AgriTalk Architecture for IoT-FE Special FE-Talks AgriTalk-C: Integration
    of Cloud and Fog/Edge Domains Integrated Operations Center (IOC): MapTalk Show
    Full Outline Authors Figures References Citations Keywords Metrics Abstract: Integrating
    cloud with fog/edge is a main trend in networking. Many cloud computing applications
    have been shifted to the edge/fog domain. Such paradigm shift offers new opportunities
    for pervasive computing. An example is AgriTalk, an Internet of Things (IoT) application
    development platform for smart agriculture. By integrating cloud with edge/fog,
    this article describes how AgriTalk addresses six issues for developing edge/fog
    agriculture applications. These issues include device domain development, application
    generation and bug detection, sensor failure detection and calibration, big data
    management, Artificial Intelligence (AI) provisioning, and data privacy. We show
    how AgriTalk integrates fog/edge applications and use rice blast detection and
    piglet crushing mitigation as two examples to demonstrate that fog/edge computing
    is a better solution than cloud computing. Compared with cloud computing, fog/edge
    computing reduces the delays by 50 percent in AgriTalk. Through the low-code no-code
    approach, AgriTalk allows the farmers to create and maintain fog/edge agriculture
    applications by themselves. Published in: IEEE Communications Magazine ( Volume:
    61, Issue: 12, December 2023) Page(s): 86 - 92 Date of Publication: 08 May 2023
    ISSN Information: DOI: 10.1109/MCOM.001.2200633 Publisher: IEEE Funding Agency:
    Introduction In the advancement of the Internet of Things (IoT) technologies,
    one of the main trends in networking is the paradigm shift from cloud based IoT
    (IoT-C; that is, connecting the IoT device directly to a cloud server in Fig.
    1(1)) to fog/edge based IoT (IoT-FE; that is, connecting the IoT devices to the
    fog/edge nodes in Fig. 1 (2). We define three types of IoT-FE: monitoring-IoT,
    controlling-IoT, and automating-IoT. Monitoring-IoT allows the users to remotely
    read the sensor data ((3) → (2) in Fig. 1). Controlling-IoT allows the users to
    remotely control actuators ((2) → (4) in Fig. 1). Automating-IoT controls the
    actuators according to the sensor data without manual operation ((3) → (2) → (4)
    in Fig. 1). To deploy IoT-FE applications rapidly and reliably, an IoT development
    platform should provide functions to speed up application creation and management.
    Based on our experience with smart agriculture deployment in the past 8 years,
    this article describes the IoT-FE application development focusing on six issues.
    Issue 1–Device Domain Development Most commercial IoT applications use off-the-shelf
    sensors/actuators. To accommodate these devices in fog/edge computing, we need
    to integrate them with the microcontroller units (MCUs) with significant effort
    [1]. An MCU is an integrated circuit that consists of a processor unit, memory
    modules, communication interfaces (to connect the IoT servers) and peripheral
    pins (to connect sensors and actuators). To speed up the accommodation of an IoT
    device in fog/ edge computing, it is essential to provide a development environment
    in the IoT device domain. Examples of the MCU solutions include Ardublock, S4A,
    Webduino and ArduTalk [1]. Issue 2–Application Generation and Bug Detection IoT-FE
    application development consists of two phases [2]. In Phase 1, a proof-of-concept
    is built through simulation. In Phase 2, the real IoT application is implemented
    and experimented on a testbed. However, the code developed in Phase 2 may not
    be consistent with the code developed in Phase 1. In fog/edge computing, it is
    essential to automatically or semi-automatically generate the application codes
    and conduct automatic bug detection to speed up the development process [3]. Issue
    3–Sensor Failure Detection and Calibration Many IoT-FE applications fail due to
    inaccurate data produced by the sensors. Traditionally, sensor failure detection
    and calibration are conducted manually in an offline process. In fog/edge computing,
    there are many agricultural sensors spread across different locations. It is important
    to detect sensor failures and conduct calibration automatically to guarantee normal
    operations of the sensors [4], [5]. Issue 4–Big Data Management The data produced
    by the agricultural sensors from a large number of fog/edge nodes are typically
    handled by big data tools in an offline process. It is more beneficial to integrate
    the database system (Fig. 1 (5)) with the IoT-FEs and the IoT-C to support automatic
    real-time data analysis in fog/edge computing [6], [7]. Issue 5–Artificial Intelligence
    (AI) Provisioning Some data from the IoT-FE applications are manipulated by AI
    tools through an offline process [8]. Significant programming effort is required
    to integrate AI modeling into existing IoT-FE applications. Therefore, it is critical
    to provide transparent AI inferencing at IoT-FE (Fig. 1 (6)) and online AI training
    at IoT-C (Fig. 1 (7)) [6]. Issue 6–Data Privacy Since IoT-FE applications may
    support video monitoring, access rights must be enforced for data privacy [9].
    Also, the controlling-IoT and automating-IoT applications will trigger the actuators,
    and data security is required to protect these IoT-FE applications from illegal
    access. This article uses AgriTalk [10] as an example to address the above 6 issues
    for IoT-FE application development. A fog/edge node of AgriTalk is called an AgirTalk-FE.
    AgriTalk is an IoT-based smart agriculture platform for developing various AgriTalk-FEs,
    and the applications developed in an AgriTalk-FE are called FE-Talks. Examples
    are MapTalk for integrated operations center (IOC) and HouseTalk for greenhouse
    [10]. This article shows that fog/edge computing can be effectively achieved in
    these sustainable FE-Talk examples. We first describe how to organize the agriculture
    applications as FE-Talks hosted in the AgriTalk platform through a modular approach.
    Then we integrate every FE-Talk Graphical User Interface (GUI) with the MapTalk
    GUI to enhance the user experience. AgriTalk is an interesting fog/edge computing
    example, which conducts non-toxic organic farming at more than twenty soil farms
    and 4 greenhouses located in Taiwan, Japan, Philippe, Thailand and Armenia. AgriTalk
    eliminates the requirement of physical presence for some critical farming tasks
    through fog/edge computing to achieve distributed farm management. The article
    is organized as follows: The next section proposes the AgriTalk IoT-FE approach.
    Following that, we show several special FE-Talks, and then describe the AgriTalk
    mechanism on the cloud domain. We then elaborate on MapTalk, the IOC for AgriTalk,
    and illustrate PigTalk, a fog/ edge intelligent system for piglet crushing mitigation.
    The final section gives conclusions. AgriTalk-FE: the AgriTalk Architecture for
    IoT-FE Figure 2 illustrates the fog/edge AgriTalk architecture based on Fig. 1.
    The original AgriTalk was designed with a cloud-based server called AgriTalk-C
    in the network domain (Fig. 2 (3)), which directly connects the agricultural sensors/actuators
    in the device domain (Fig. 2 (1)) [10]. Figure 1. Fog/edge computing for IoT.
    Show All To offer fog/edge computing, the network domain is further partitioned
    into the fog/edge domain and the cloud domain, where the AgriTalk-FEs (individual
    farms) are deployed in the fog/edge domain (Fig. 2 (2)), and AgriTalk-C is located
    in the cloud domain. In this architecture, the low-layer communications among
    the three domains ((1) <-> (8), (1) <-> (5), (5) <-> (8) and (6) <-> (22)) can
    be Ethernet, Bluetooth, WiFi, 4G, and 5G. The high-layer APIs for these domains
    can be Restful or Message Queuing Telemetry Transport (MQTT), except that connections
    (5) <-> (8) and (6) <-> (22) use Restful API. The AgriTalk Database (DB) System
    (Fig. 2 (4)) is accessed through Object Relational Mapping (ORM). The AgriTalk-FEs
    interact with each other in two ways. They can exchange their data through the
    AgriTalk DB System or through AgriTalk-C. AgriTalk-C resides in the cloud as a
    docker container image. As an edge node in the current implementation, an AgriTalk-FE
    is installed in an industry version of Raspberry Pi 4. This section elaborates
    on AgriTalk-FE architecture for a fog/edge node. Multiple FE-Talks ((9), (10),
    (11), (13), (15), and (17) in Fig. 2) can be developed through the AgriTalk-FE
    GUI (Fig. 2 (6)), and be manipulated (e.g., parameter setups) through the FE-Talk
    GUIs (Fig. 2 (7)). Through connecting icons in the AgriTalk-FE GUI window, the
    program for an FE-Talk application is automatically created without any programming
    effort. This no-code approach allows the farmers to quickly deploy their farming
    applications. In Fig. 2, the system FE-Talks are marked green ((10), (11), (13),
    (15), and (17)) and the application FE-Talks are marked blue ((9)). Both the AgriTalk-FE
    and the FE-Talk GUIs are web based, which can be remotely accessed through any
    computing device with a browser (Fig. 3 (1)). In this GUI, a project window (Fig.
    3 (2)) allows the farmer to develop an FE-Talk. We use Figs. 2 and 3 to describe
    this development procedure. The IoT-FE device software binds an IoT device (Fig.
    2 (1)) to the AgriTalk-FE engine (Fig. 2 (8)) through several simple operations
    in the AgriTalk-FE GUI (Fig. 2 (6)), and an example of its layout is the “Project”
    window illustrated in Fig. 3 (2). AgriTalk defines a device model for real IoT
    devices with the same properties. For example, a smartphone model is mapped to
    real phones such as Apple iPhones, Samsung smart phones and so on. In the project
    window, an IoT device model is graphically represented by an icon, for example,
    “Sensors” (Fig. 3 (6)). This icon includes one or more smaller icons representing
    the “features” (individual sensors) of the device. For example, the features of
    a micro weather station (Fig. 3 (3)) include the sensors for temperature, humidity,
    electrical conductivity (EC), CO2 and so on. When we click the gear icon in the
    upper-left corner of a device icon, the physical device is bound to AgriTalk-FE
    (e.g., the (3) → (6) connection in Fig. 3). The binding mechanism is similar to
    the one for Bluetooth. We enable a sensor device to control an actuator device
    by dragging a “Join” link between them (see Joins 1–5 in Fig. 3). There is a circle
    in the middle of the link. When the circle is clicked, a function management window
    pops up (Fig. 3 (22)). We write functions in this window to manipulate the data
    passing through the link. For example, the soil EC values are collected in real
    time, and are used to train a fertilizer regulatory model for the farm. The model
    provides appropriate fertilizer solution, for example, the Nitrogen (N) to optimize
    the yield of the plant cultivation. The relationship between EC ( χ E ) and N
    ( f N ( χ E )) for a specific farm in the Bao Mountain is derived as [10] f N
    ( χ E )=63.2526 χ 2 E +14.2131 χ E +0.1797 (1) View Source Figure 2. The AgriTalk
    architecture for edge/fog computing. Show All Through this function, the values
    measured from the EC sensor are transformed into the amount of Nitrogen to drive
    the pump of the fertilizer solution through the path (3) → (6) → (8) → (7) in
    Fig. 3. This function is implemented as a Python program in the function management
    window; see Lines 3 and 4 in Fig. 3 (22). Note that AgriTalk-FE automatically
    integrates the Join functions to constitute the network program of the IoT-FE
    application, and this “Join” mechanism partially addresses Issue 2 in the fog/edge
    domain. FE-Talk is defined by the device models that can be accessed from the
    model pull-down list (Fig. 3 (5)). For example, the items in the AgriTalk model
    list include the micro weather station with the soil sensors (Fig. 3 (3)), the
    fertilizer and irrigation drippers (Fig. 3 (7)), the biopesticide sprayers and
    so on [10]. Besides the AgriTalk-FE GUI, we can design a specific GUI for FE-Talk,
    which is typically a browser that can be shown in a mobile device (Fig. 3 (4)).
    Based on the setups in this GUI, the AgriTalk-FE engine (Fig. 2 (8)) executes
    the FE-talk code (Fig. 2 (9)) to interact with the IoT devices (Fig. 2 (1)). The
    FE-Talk code is automatically created when the device connection configuration
    is complete in the Project window (Fig. 3 (2)), which addresses the automatic
    application generation part of Issue 2. Figure 3. AgriTalk-FE GUI. Show All In
    the device domain, many IoT devices are connected to the MCUs. Programming an
    MCU is a tedious task. The AgriTalk-FE engine automatically generates software
    module codes for the MCU boards including Arduino, Raspberry pi, MediaTek LinkIt,
    ROHM IoT kit and ESP8266 ESP-12F [1]. After we have deployed the standard IoT
    device software into an MCU board, a developer can easily create new applications
    with the AgriTalk-FE GUI (see the Project 1 window in Fig. 4) without the need
    of re-programming the MCU. Specifically, an MCU board (Fig. 4 (1)) can be represented
    by a device icon (Fig. 4 (3)), and its pins can be represented by the feature
    icons within the device icon (e.g., A0 in Fig. 4 (3)). If a device has both inputs
    (to send the data to the AgriTalk-FE engine; see Fig. 4 (6) in Arduino1) and outputs
    (to receive the data from the AgriTalk-FE engine; see Fig. 4 (7) and (8) in Arduino1),
    then the inputs are represented as the feature icons within an “input” device
    icon (Fig. 4 (3)), and the outputs are represented as the feature icons with-in
    an “output” device icon (Fig. 4 (4)). The input device icons are placed on the
    left side of the window, and the output device icons are placed on the right side
    of the window. In Project 1, we also use a second MCU board (Arduion2; see Fig.
    4 (2) and (5)). We build the Arduino network programs for the greenhouse fan control
    (Fig. 4 (7) → (11)) and the energy screen control (Fig. 4 (8) → (12)) as follows:
    We use drag-and-drop operations to draw lines between analog and digital pin icons
    in the AgriTalk-FE GUI, which allows quick agriculture application deployment.
    Furthermore, we can easily re-link sensors to actuators to modify Arduino applications
    without re-burning the MCU. Therefore, our solution has nicely addressed Issue
    1 in the device domain and the application generation part of Issue 2. In Project
    1, both the fan and the energy screen are automatically controlled by the heat
    sensor (Fig. 4 (6)). They are also manually controlled by the switches (Fig. 4
    (9) and (10)). With the pre-built agriculture functions, the low-code no-code
    approach of AgriTalk allows the farmers to create and maintain the fog/edge agriculture
    applications by themselves. Special FE-Talks We have developed several special
    FE-Talks to resolve Issues 2–6 for agriculture fog/edge computing. To address
    the bug detection part of Issue 2, we proposed BigraphTalk to detect any forbidden
    Join connections by using Bigraph, a universal mathematical model for representing
    the spatial configuration of physical or virtual entities and their interactions
    [11]. Our operation experience in commercial farms indicated that the farmers
    at a fog/edge site may inappropriately connect the IoT devices in the GUI. For
    example, the farmer may connect a motor to a temperature and a humidity sensors.
    The temperature and the humidity conditions may conflict with each other, which
    causes the motor to oscillate between “on” and “off” states, and eventually burn
    out. No existing solutions solved this problem automatically until we developed
    BigraphTalk. To check correctness of connections, we use bigraph to specify what
    an invalid configuration of entities looks like and check these against a given
    input model. Bigraph-Talk automates this verification process without requiring
    the developer to specify any bigraph. After static Join connection is proved correct,
    we may verify if the execution of the developed FE-Talk is correct by SimTalk
    [3] through the path (11)-(8)-(9) in Fig. 2. Specifically, after an FE-Talk is
    created, we click the “simulation” toggle button (Fig. 3 (11)). Then the SimTalk
    GUI (Fig. 2 (12)) pops up for specifying the traffic characteristics. Before physical
    sensors/controls are actually connected to the FE-Talk, SimTalk binds the feature
    icons to the simulated software modules corresponding to the real sensors/actuators,
    and set up specific traffic patterns to simulate or emulate the application. The
    simulated software modules are automatically created by SimTalk. The reader is
    referred to Fig. 5 in [3] for more details. We proposed SensorTalk (Fig. 2 (10))
    to address Issue 3 [4], [12]. The farmers often need to replace or calibrate failed/aged
    sensors. Such maintenance is labor-intensive, and the user experience is poor
    in the fog/edge environments. To address this issue, SensorTalk developed a Dash-Board
    output device model (Display-O; Fig. 3 (9)) that shows the real-time sensor values
    in a display (Fig. 3 (10)). DashBoard has a built-in calibration table to correct
    aging sensors [4]. Traditionally, aged sensors were calibrated in the laboratories
    manually or semi-automatically. Conversely, SensorTalk automatically calibrates
    the sensors under test by the standard sensors in fog/edge farming nodes directly.
    The reader is referred to Fig. 2 in [4] for more details. To address Issue 4,
    we developed DataTalk (Fig. 2 (13)) by creating the DataBank device model (with
    the features Data-O in (12) and Data-1 in (13) in Fig. 3). In this way, all AgriTalk-FEs
    can access the AgriTalk DB System (Fig. 2 (4)) and manage the database as an IoT
    device. Data-O of DataBank receives data from the sensors through (6) → (12) in
    Fig. 3. DataBank also receives data from open datasets stored in the AgriTalk
    DB system through (4) → (20) in Fig. 2. The received data may be pre-processed
    and then stored in a DataBank device for future usage. We use the rice blast detection
    [13] as an example to show how DataTalk works. The commercial farm operation indicated
    that image detection of rice blast is not practical (it is too late when you detect
    rice blast in an image). Therefore, we utilized non-image IoT devices to detect
    conditions leading to rice blast. The non-image data are the weather data (including
    the barometric pressure, the temperature and the relative humidity) obtained from
    the database of Central Weather Bureau in Taiwan and the real-time data of the
    AgriTalk sensors from the micro weather stations we established at 4 farm locations.
    We found that high spore germination rate for various fungi may cause rice blast
    disease. Therefore, it is also important to obtain information of spore germination
    rate that is affected by the temperature χ T and the relative humidity χ H . We
    designed a specific spore germination rate function for every farm field computed
    locally at its fog/edge node (an AgriTalk-FE). For example, in a Bao Mountain
    farm, the function is f T ( χ T , χ H )=0.1143×(0.27−0.0078 χ 3 T +0.28 χ 2 T
    + 1.67 χ T ) e 6.6 χ H (2) View Source Figure 4. Arduino MCU mapping for a greenhouse.
    Show All This function is derived from a bio regression model [13] and was implemented
    in a DataBank device through the DataTalk GUI (Fig. 2 (14)). In the rice blast
    AI model, three features – χ T ,  χ H , and f T ( χ T ,  χ H ) - are sent from
    DataBank (Fig. 3 (13)) to Almodule (Fig. 3 (15)). The subtle way we manipulate
    χ T , χ H and f T ( χ T ,  χ H ) significantly improves the accuracy of the rice
    blast prediction, which is 89.4 percent, the world record for non-image sensing
    [13]. Thanks to the “plug-in” module approach of AgriTalk-FE, any FE-Talk can
    be independently developed without any data preprocessing capability, and can
    easily connect to DataTalk for online database access and operation later. The
    rice blast detection was conducted at fourteen counties in Taiwan through fog/edge
    computing, where rice blast detection of a county is conducted by an AgriTalk-FE.
    To address Issue 5, we develop Altalk [6] (Fig. 2 (15)) by creating the Almodule
    device model (with the features Label-O in (14), Feature-O in (15) and Prediction-1
    in (16) in Fig. 3). Like the DataTalk approach, Almodule is manipulated as an
    IoT device. Therefore Altalk can rapidly extend existing IoT applications into
    AI-based smart applications [10]. Upon receiving the data from DataBank, Almodule
    performs feature extraction. The extraction method is selected through the Altalk
    GUI (Fig. 2 (16)), which extracts the data characteristics to form a feature vector.
    The feature vectors as well as the labels obtained from, for example, the remote
    control (Fig. 3 (17)) are used for training. We have ported scikit-learn, Tensor
    Flow, Flux, and other AI tools to Altalk, and the developer can select an appropriate
    tool for AI modeling. Through an appropriate ensemble method, the best prediction
    result is used to activate the actuators. The results are also used to improve
    the accuracy of prediction by conducting validation that provides better hyper-parameter
    setups for Almodule. Through the path (16) → (9) → (10) in Fig. 3, useful statistics
    are displayed for the developer to adjust the machine learning model. Like DataTalk,
    every FE-Talk can be independently developed without AI, and can easily connect
    to Altalk for online AI training and inference later. Figure 5. Maptalk and the
    fog/edge applications. Show All AgriTalk-C: Integration of Cloud and Fog/Edge
    Domains If fog/edge computing involves multiple countries, then Issue 6 (data
    privacy) is a major concern. For example, the current AgriTalk operation includes
    the sites (AgriTalk-FEs) in several countries. These AgriTalk-FEs are managed
    under AgriTalk-C in Chunghwa Telecom''s cloud in Taiwan. Our operation faces the
    problem that the General Data Protection Regulations (GDPRs) are not the same
    for every country. To fit an IoT-FE application to different GDPRs, existing approaches
    require significant efforts to modify the IoT-FE application. To address Issue
    6, the data privacy requirement of an FE-Talk in AgriTalk-FE is set in the Authentication,
    Authorization and Accounting (AAA) subsystem (Fig. 2 (17)) without changing the
    code of the FE-Talk application. Specifically, every IoT message delivered in
    a Join link has a privacy tag to indicate the privacy level of the delivered data.
    A smart application may need to set different privacy levels according to different
    users'' authorization for hiding information in IoT messages. In smart farming,
    a control message sent from a smartphone with a low privacy level cannot trigger
    the irrigation pump. According to the GDPRs of different countries, Personally
    Identifiable Information (PII) and user behavior history should be protected,
    which can be achieved by the AAA subsystem. The details of the tag mechanism are
    out of the scope of this article and the details can be found in [10]. The AgriTalk-C
    server has the same structure as an AgriTalk-FE. All farmer accounts can be managed
    in the AgriTalk-C AAA (Fig. 2 (18)) with single sign-on, where the farmer''s access
    right to a specific AgriTalk-FE is granted through the path (18) → (5) → (8) →
    (17) in Fig. 2. Therefore, the farms in different countries are supported by their
    AgriTalk-FEs with different GDPRs, and these AgriTalk-FEs are monitored by AgriTalk-C
    at the same time. The AgriTalk-C engine controls an AgriTalk-FE through the path
    (5) → (8) in real-time following the same protocol as that for the control path
    to an IoT device ((5) → (1) in Fig. 2). Before an edge/fog node (a new AgriTalk-FE)
    is allowed to join AgriTalk, SimTalk of AgriTalk-C conducts validation and performance
    tests on the AgriTalk-FE through the path (19) → (5) → (8) → (9) in Fig. 2. The
    DataTalk subsystems of individual AgriTalk-FEs (Fig. 2 (13)) and AgriTalk-C (Fig.
    2 (20)) interact with each other indirectly through the database operations on
    the AgriTalk DB System (Fig. 2 (4)). If an AI model is used in an FE-Talk, the
    AI model can be trained in the cloud (AgriTalk-C) and AI inference is performed
    in the edge/fog node (AgriTalk-FE). AgriTalk-C sends model parameters to an AI
    execution engine already installed on the AgriTalk-FEs. The training datasets
    may be generated by the FE-Talk and saved in the AgriTalk DB System. The data
    path for AI training is (4) → (20) → (5) → (21) in Fig. 2. The trained model is
    sent to the AgriTalk-FE through the path (21) → (5) → (8) → (15). Then AI inference
    is performed at the edge/fog node through the path (9) → (8) → (13) → (8) → (15)
    → (8) → (9). Integrated Operations Center (IOC): MapTalk The fog/edge nodes in
    a distributed farming system should be managed in an organized way so that the
    farm owners can conveniently access the applications. In AgriTalk-C, we have developed
    an IOC called MapTalk (Fig. 2 (22) and (23)) based on Google Maps. MapTalk is
    an application FE-Talk. Compared with a traditional IOC [14], the MapTalk user
    can transparently add the IoT devices to the IOC without any programming effort
    while a traditional IOC requires a professional system integrator to modify the
    IOC software. MapTalk shows the location and the status of every farming device
    and allows a farmer to interact with these devices through their cyber representations
    on the map. MapTalk can be displayed in a big screen like traditional IOCs. Furthermore,
    one can also access MapTalk from everywhere through any computing device with
    a browser. The GUIs of all AgriTalk-FEs are managed by MapTalk and can be accessed
    through the “App” pull-down list in the MapTalk GUI, where the layout is illustrated
    in Fig. 5 (1). When the user selects an application item, for example, “CO2” of
    the farms managed as fog/edge nodes (Fig. 5 (2)), the status of every CO2 sensor
    is shown on the map. The IoT devices in MapTalk can be stationary or movable.
    The icon of a stationary IoT device is placed at the map according to its GPS
    coordinates. The stationary examples are “PM2.5” (Fig. 5 (4)), “Germany Power
    Plants” (Fig. 5 (5)) and “Taiwan Farms” (Fig. 5 (6)). The icon of a movable IoT
    device is dynamically placed at its current position of the map. An example is
    the “Bus” application (Fig. 5 (7)) that shows the status of an individual bus
    or all buses. Fig. 5 (8) is “Bus 2” with a pink tail representing its one-hour
    trajectory. The “Bus” application can be transparently reused by AgriTalk to manage
    the cultivators and the tractors in the farms. There are two types of stationary
    applications: map-type and hybrid-type. “PM2.5” and “Germany Power Plants” are
    map-type applications. When we select “Germany Power Plants” from the App list,
    a map for this application pops up with a dedicated function bar to select various
    sensors, such as generated power, wind speed, temperature, and humidity of a power
    plant (Fig. 5 (5)). We are reusing “Germany Power Plants” to implement AgriTalk-FEs
    for agro-photovoltaics applications. “Taiwan Farms” is a hybrid-type application.
    When this application is selected from the App list, all farm icons are shown
    on the map. When we click a farm icon (Fig. 5 (9)), a dialog box (Fig. 5 (10))
    pops up. From this dialog box, we may select specific hyperlinks to see the sensor
    dashboard and the farm control board (including video; see Fig. 5 (11)). Examples
    of dashboard/control board are given in Fig. 3 (10), (18), (21) and Fig. 6. The
    name of the person who maintains this application is also listed (in Chinese;
    see Fig. 5 (12)). Adding an IoT-FE application to MapTalk is achieved through
    the MapTalk project created from the GUI of AgriTalk-C (Fig. 2 (24)), which shows
    the locations of the IoT devices in the digital map (through Display-O in Fig.
    3 (9)). To add a map-type application, we create a “Sensors” device (for example,
    “Germany power plants”; see Fig. 3 (6)) in the MapTalk project, and connect them
    through the path (23) → (22) → (5) → (8) → (9) in Fig. 2. We use the “Routing-with-obstacles”
    application to illustrate how multiple IoT-FE applications (path routing, PM2.5
    and CO2 applications) can interact with each other to create new functions through
    MapTalk. When we select the “Routing” application, MapTalk suggests a driving
    route from the starting point to the endpoint (Fig. 5 (3)). If we select “PM2.5”
    as obstacle, then MapTalk suggests another route to avoid passing through the
    PM2.5 pollution areas (Fig. 5 (4)). We are reusing this routing application to
    implement an AgriTalk-FE that guides automatic tractor movement in irregular-shaped
    farm fields with obstacles. MapTalk was originally designed for managing general
    smart applications. Some of these applications such as “Bus,” “Germany Power Plants”
    and “Routing-with-obstacles” are being reused in AgriTalk-FE without any code
    modification. MapTalk provides a low-code no-code approach to manage the fog/edge
    nodes in an IOC. Pigtalk as a Fog/Edge Computing Example Through the AgriTalk-FE
    platform, we have built more than 20 FE-Talks applications. As a controlling-IoT
    example of fog/edge computing, this section describes PigTalk, an intelligent
    system for piglet crushing mitigation. Figure 6. Pig talk control board accessed
    through maptalk. Show All Many piglets die on pig farms because they are crushed
    when sows roll sideways or lie down. PigTalk was proposed to resolve the piglet
    mortality issue [15], which uses a DataBank device to transform the voice data
    into audio clips. These audio clips serve as the input of the Convolutional Neural
    Network (CNN) model. Through real-time analysis of the voice data collected in
    a farrowing house from a directional microphone (Fig. 6 (1)), PigTalk detects
    if any piglet screaming occurs, and automatically activates sow-alert actuators
    such as heating light (Fig. 6 (2)) for emergency handling of the crushing event
    (light heating effectively forces the sow to stand up). The whole process is remotely
    monitored by the hog farmer through the camera in the farrowing house (Fig. 6
    (3)). The PigTalk configuration can reuse the “Project” configuration in Fig.
    3 where the micro weather station (Fig. 3 (3)) is replaced by the microphone,
    the irrigation system (Fig. 3 (7)) is replaced by the heating light, and the farm
    camera (Fig. 3 (20)) is replaced by the camera in the farrowing house. The raw
    voice data received from the microphone (Sensor-I in Fig. 3 (6)) are sent to DataBank
    (Fig. 3 (12)) to produce the audio clips. These audio clips are further modified
    by min-max scaling in feature extraction. Then the CNN model is used as the machine
    learning algorithm (Fig. 3 (15)). Finally, the k-fold cross validation is conducted
    to validate the model, and the predicted result is used to determine if the heating
    light (Fig. 3 (8)) should be activated. Through fog/edge computing, PigTalk can
    save piglets from being crushed within 0.05 seconds with a 99.93 percent success
    rate. The PigTalk system consists of several farrowing houses, each of which is
    an AgriTalk-FE (called PigTalk-FE). In a PigTalk-FE, the control path for piglet
    crushing avoidance is (6) → (12) → (13) → (15) → (16) → (8) in Fig. 3, where the
    control message is delivered locally through Asymmetric Digital Subscriber Line
    (ADSL) with the delay tA. A PigTalk-FE communicates with the PigTalk AgriTalk-C
    (called PigTalk-C) through the 4G technology. With the AgriTalk-FE GUIs accessed
    from MapTalk of PigTalk-C, we remotely observe pig activities of all farrowing
    houses within the delay tG. The delay tG in the cloud domain is about twice the
    delay t A in the fog/edge domain for other AgriTalk applications. In cloud computing,
    t A = t G . It is clear that t G is much larger than t A , and piglet crushing
    avoidance should be implemented locally as fog/edge computing instead of cloud
    computing. We enhanced the scream detection accuracy of the existing best solutions
    (up to 92.8 percent). With data pre-processing and subtle parameter setups of
    the CNN model, the piglet scream detection accuracy of PigTalk is up to 99.4 percent.
    Through fog/edge computing, PigTalk can save piglets from being crushed within
    0.05 seconds with a 99.93 percent success rate. Conclusion This article proposed
    the fog/edge approach for AgriTalk, an IoT application development platform for
    smart agriculture. By integrating cloud with edge/fog, we described how AgriTalk
    addresses six issues including device domain development, application generation
    and verification, sensor failure detection and calibration, big data management,
    AI provisioning, and data privacy. We showed how AgriTalk integrates its fog/edge
    applications called FE-Talks, and used rice blast detection and piglet crushing
    avoidance as two examples to indicate that fog/edge computing is a much better
    solution than cloud computing, where the delays can be reduced by 50 percent.
    In our solution, the non-agriculture applications in MapTalk can be transparently
    translated into smart agriculture applications. The examples include the cultivators
    and the tractors management, and agro-photovoltaics applications. Through the
    low-code no-code approach, AgriTalk and MapTalk allow the farmers to create and
    maintain FE-Talks by themselves in the fog/edge computing environment. ACKNOWLEDGMENT
    This work was supported in part by the National Science and Technology Council
    (NSTC) 112-2221-E-033-023, 112-2221-E-468 -005 -MY2, 111-2221-E-468 -012, 110-2622-8-A49-022,
    NSTC112-2221-E-A49-049, NCKU Miin Wu School of Computing, Research Center for
    Information Technology Innovation, Academia Sinica. Authors Figures References
    Citations Keywords Metrics More Like This Artificial Intelligence and Internet
    of Things for Sustainable Farming and Smart Agriculture IEEE Access Published:
    2023 Analysis of Internet of Things based Artificial Intelligence in Agriculture
    Fertilizer Process Management 2023 2nd International Conference on Automation,
    Computing and Renewable Systems (ICACRS) Published: 2023 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Communications Magazine
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Moving from Cloud to Fog/Edge: The Smart Agriculture Experience'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Devarajan G.G.
  - Nagarajan S.M.
  - T.V. R.
  - T. V.
  - Ghosh U.
  - Alnumay W.
  citation_count: '2'
  description: As the global population continues to grow and environmental conditions
    become increasingly unpredictable, meeting the demands for food becomes increasingly
    difficult. To overcome these challenges, smart agriculture has emerged as the
    key technology. Deep Learning model with Internet of Things (IoT), unmanned aerial
    vehicle (UAV), and edge–fog–cloud architecture enabled smart agriculture as a
    key component for next agriculture revolution. In this work, we present two stage
    end-to-end DRL based smart agricultural system. In stage one, we proposed ACO
    enabled DQN (MACO-DQN) model to offload task including fire detection, pest detection,
    crop growth monitoring, irrigation scheduling, soil monitoring, climate monitoring,
    field monitoring etc. MACO-DQN model offload the task to either edge, fog or cloud
    networking devices based on latency, energy consumption and computing power. Once
    the task offloaded to computing devices (edge, fog or cloud), task of prediction
    and monitoring various agriculture activities is performed at stage two. In stage
    two, we proposed DRL based DQN (RL-DQN) model for prediction and monitoring agricultural
    task activities. Finally, we demonstrate experimental findings of our proposed
    model that represent a marked enhancement in terms of convergence speed, planning
    success rate, and path accuracy. To evaluate its performance, the method presented
    in this paper was compared to traditional deep Q-networks-based intensive learning
    method under consistent experimental conditions. Overall, 98.5% precision, 99.1%
    recall, 98.1% F-measure, and 98.5% accuracy is obtained when using our proposed
    methodology and based on the performance results the model outperforms other existing
    methodologies.
  doi: 10.1016/j.suscom.2023.100890
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Related works 3. Methodology
    4. Modified ACO enabled DQN (MACO-DQN) task scheduling model 5. Results and discussion
    6. Conclusion CRediT authorship contribution statement Declaration of competing
    interest Acknowledgment Data availability References Show full outline Cited by
    (2) Figures (10) Show 4 more figures Tables (2) Table 1 Table 2 Sustainable Computing:
    Informatics and Systems Volume 39, September 2023, 100890 DDNSAS: Deep reinforcement
    learning based deep Q-learning network for smart agriculture system Author links
    open overlay panel Ganesh Gopal Devarajan a, Senthil Murugan Nagarajan b, Ramana
    T.V. c, Vignesh T. d, Uttam Ghosh e, Waleed Alnumay f Show more Share Cite https://doi.org/10.1016/j.suscom.2023.100890
    Get rights and content Highlights • Proposed MACO-DQN model to offload task prediction.
    • Proposed DRL based DQN (RL-DQN) model for prediction and monitoring. • IoT and
    UAV devices are used for collecting agricultural related data. • Proposed model
    is analyzed based on various performance metrics. Abstract As the global population
    continues to grow and environmental conditions become increasingly unpredictable,
    meeting the demands for food becomes increasingly difficult. To overcome these
    challenges, smart agriculture has emerged as the key technology. Deep Learning
    model with Internet of Things (IoT), unmanned aerial vehicle (UAV), and edge–fog–cloud
    architecture enabled smart agriculture as a key component for next agriculture
    revolution. In this work, we present two stage end-to-end DRL based smart agricultural
    system. In stage one, we proposed ACO enabled DQN (MACO-DQN) model to offload
    task including fire detection, pest detection, crop growth monitoring, irrigation
    scheduling, soil monitoring, climate monitoring, field monitoring etc. MACO-DQN
    model offload the task to either edge, fog or cloud networking devices based on
    latency, energy consumption and computing power. Once the task offloaded to computing
    devices (edge, fog or cloud), task of prediction and monitoring various agriculture
    activities is performed at stage two. In stage two, we proposed DRL based DQN
    (RL-DQN) model for prediction and monitoring agricultural task activities. Finally,
    we demonstrate experimental findings of our proposed model that represent a marked
    enhancement in terms of convergence speed, planning success rate, and path accuracy.
    To evaluate its performance, the method presented in this paper was compared to
    traditional deep Q-networks-based intensive learning method under consistent experimental
    conditions. Overall, 98.5% precision, 99.1% recall, 98.1% F-measure, and 98.5%
    accuracy is obtained when using our proposed methodology and based on the performance
    results the model outperforms other existing methodologies. Previous article in
    issue Next article in issue Keywords Smart agricultureDeep reinforcement learningAnt
    colony optimizationConvergence speedUnmanned ariel vehicle 1. Introduction The
    most important factor to be considered by all the countries is agriculture which
    holds a predominant aspects of mankind. It is not only providing food source but
    also contributes towards the growth of GDP for a country. From the data provided
    by the world bank is that the total employment which is about one-fourth in the
    global sector is mostly rely on agriculture [1], [2]. This becomes more responsible
    in the creation of employment more than 50% either indirectly or directly. As
    per the United States Food and Agricultural (FAO) analysis, the worlds population
    is going to reach more than 8 billion during the end of 2025 and it can increase
    up to 9.6 billion until 2050. As per this study, food production should be increased
    at global level within 2050. This makes industries to develop an advance technology
    into agricultural sector and prepare modernized process [3], [4]. Recent advancements
    have emerged in the field of smart agriculture for managing and controlling large
    farmlands. As a result, Internet of Things (IoT) based sensor devices were collected
    to use as land monitoring purpose, analyzing changes in environmental factors,
    precise decision making by using artificial intelligence (AI). Across the farm,
    sensors are deployed in different locations for collecting the information about
    surroundings and this data is transferred to the cloud servers [5], [6]. Afterwards,
    informed decisions is made using the AI agent with the help of data from the server
    to consider prior actions for the protection or efficiency improvements on farm
    development. As an example, numerical weather forecasts and public weather prediction
    is applied for determining the evapotranspiration ( ) so that irrigation schedules
    can be improved on timely basis [7]. Different communication and information technologies
    such as cloud computing, wireless sensor networks, and industrial internet of
    things were developed that promotes upgrading and transforming manufacturing technology
    that leads to change from traditional to intelligent technology. In the act of
    modern production lines, various devices such as sensors, transmission device,
    production equipment, and other terminal devices were connected using heterogeneous
    communication networks which made traditional information exchange to interconnection
    model. In recent years, several researchers proposed smart agriculture to promote
    modernization technique to increase the production of food in deliberate manner.
    IoT based communication technology mainly used for collecting data about the agriculture
    and apply various artificial neural network and clustering techniques to analyze
    and make smart decisions [8], [9]. Deep neural network is required for running
    the accurate image classification problems as it is more complicated task. The
    computing capacity is limited for IoT devices even if they regularly update the
    situations of farming land [10]. As a result, these devices will not perform quick
    analysis or image classification tasks within the time limit and it requires nearby
    devices to complete the given task. Detrimental damages can be caused due to failure
    of prediction towards changes in environment within the time frame which leads
    to critical for these devices to rely completely [11]. Furthermore, wide range
    of services is provided by UAV’s which has 3-D range of motion. The line of sight-connectivity
    is provided by these UAV’s with the IoT devices, MEC or other UAV devices. It
    has the capability of high computing power. However, the main drawback of these
    UAV’s is that it is limited by battery capacities. The hover time of UAV’s will
    be reduce when they performing too many classification tasks. MEC devices can
    improve task latency and also alleviate workload of UAV’s [12], [13]. In this
    work, we proposed Ant Colony Optimization (ACO) based Deep Q-Learning Network
    (A-DQN) model for efficiently analyzing the tasks such as irrigation scheduling,
    pest detection, soil monitoring, fire detection, field and soil monitoring, crop
    growth monitoring, and much more. In second stage, we proposed Deep Reinforcement
    Learning based Deep Q-Network (D-DQN) model for monitoring and predicting tasks
    based on agricultural activities. The main contributions of this research finding
    are as follows: 1. At first stage, we proposed A-DQN model for various detection
    by offloading the task to cloud networking devices. 2. In stage two, we developed
    D-DQN model for monitoring and prediction of various agricultural activities.
    3. Performance of the model is evaluated based on various metrics and compared
    the results with existing models. The rest of section in this paper is as follows.
    Section 2 detailed about the existing literature works on various methods applied
    to agricultural sector. Section 3 presents the proposed framework for monitoring
    and prediction of agricultural tasks. Section 4 elaborates the performance of
    proposed model with comparison results. Conclusion of overall work and future
    possibilities were discussed in Section 5. 2. Related works In recent years, technology
    and machine learning models have emerged in the field of agriculture where several
    researchers proposed different real-time prediction methods. The detailed review
    of various techniques and advancements in the agricultural sector is discussed
    below. Real-time monitoring and analysis of conditions on agricultural field and
    crop quality using energy efficient and fault tolerant WSN architecture is proposed
    by Mare et al. [14]. Automated irrigation system is proposed by Haule et al. [15].
    Authors main goal is to find apt frequency and watering time for the fields based
    on the conditions of soil moisture. The efficiency of high quality crops is ensured
    based on the use of water and authors also discussed about the issue of energy
    consumption for the deployed model by implementing low-power ZigBee protocol for
    the communication purposes. Authors in [16] used cloud-based infrastructure to
    analyze the collected data in a fast, efficient, and reliable manner. At local
    level, the storage cost is reduced when using the cloud-based technology. Authors
    in [17] highlighted the significant of accurate decisions in farming. Authors
    also attempted to analyze the adoption aspects for decision making based on farmers
    demographics and different factors. Authors in [18] discussed about a machine
    learning model known as Reinforcement Learning (RL) which uses the rewards gathered
    from interaction process during the environment behavior and improves the learning
    strategy constantly. This model is used mainly for decision makings. Authors in
    [19] analyzed the new solutions for cognitive decision making by combining the
    perception ability of deep learning with deep q-learning model. Authors in [20]
    used deep reinforcement learning based on Internet of Things (IoT) to develop
    smart agricultural system. Authors used real-time data collected from simulator
    or farmland and studied about the water resources in which heuristic optimization
    method is applied. Authors in [21] used Multi-Access Edge Computing (MEC) device
    and mounted base stations with the help of UAV’s for farm monitoring. This is
    mainly used for image classification in which the proposed model combined the
    MEC and UAV’s together in the processing unit. Here, the tasks are sent to MEC
    or UAV device. Authors main objective is to analyze the delay optimization for
    the data transmission and processing by allocating UAV trajectory and optimal
    resource. Authors in [22] proposed model that possess 5G or beyond network where
    the UAV’s workload will be alleviated by MEC devices and improve latency for the
    given tasks. Authors in [23] discussed various challenges and opportunities of
    5G and 6G network based on artificial intelligence (AI). Various applications
    such as radio resource allocation and energy management were introduced for RL
    in wireless networks. Authors determined that energy efficiency can improved in
    6G networks when using AI technology. Deep Rl approach is proposed by authors
    in [24] for solving joint optimization problem which consists of energy consumption
    minimization and computation maximization through offloading for 5G and beyond
    network. Authors in [25] minimized end-to-end cost and delay by introducing deep
    RL technique in IoT industrial environment. Authors aimed to find scheduling policy
    and optimal placement for virtual network functions. Authors in [26] discussed
    about the detailed use of UAV devices and how it is applicable in collecting aerial
    images and its classification based on weeds and crops in the field. Authors in
    [27] reduced power consumption by optimizing different parameters such as power
    control, location planning, user association, and computation capacity allocation.
    Authors in [28] solved multi-objective problem by introducing Deep Q-learning
    approach. Authors compared three heuristics baselines and Q-learning for comparison
    with the proposed model. Authors also discussed and shown the possible ways of
    implementing UAV devices and how the algorithm used for decision making purposes.
    Authors in [29] proposed Dee Convolution Neural Network (DCNN) model for predicting
    the irrigation planning and soil moisture in the field of agriculture where farmers
    can reduce the consumption of water for the cultivation process and productions
    can be increased. Authors used parameter modeling methodologies and different
    sensors for the system based on irrigation needs which can used irrigation plan
    prediction. Authors in [30] used novel deep learning based hybrid technique for
    estimating the apple fruit production. Authors used convolutional neural network
    (CNN) for classification and implemented machine learning algorithms based on
    boosting and bagging methods. Authors done performance analysis of their study
    based on four different datasets and applied different metrics such precision,
    recall, f-measure, and accuracy for the results. Authors in [31] used Unmanned
    Ariel Vehicle (UAV) for acquiring images on commercial crop of Chinese cabbage
    and detection is performed using Convolutional Neural Network (CNN). Images were
    pre-processed and segmented subsequently which is used for constructing classifier
    based on CNN. Authors in [32] discussed the study based on multi-sensor data fusion
    for prediction of crop yields. Authors used different ML techniques such as SVM,
    DNN, and Cubist were observed its coefficient of determination ( ) from 0.527
    to 0.670. 3. Methodology In this paper, we proposed two stage end-to-end DRL based
    smart agricultural system as shown in Fig. 1. Unlike traditional agricultural
    system, smart agricultural system is equipped with wireless IoT sensor including
    moisture sensors, NPK sensor, temperature and humidity sensors, fir sensors, HD
    camera, UAV devices etc. Sensor devices senses the information like soil moisture
    content, nutrients in the soil, high quality images for pest detection and crop
    growth monitoring etc. The proposed smart agricultural system is a two-stage system
    in which task execution is accomplished in two stages. In first stage, we proposed
    ant colony optimization (ACO) enabled Deep Q-learning (MACO-DQN) task scheduling
    model that perform task scheduling process to offload the task at edge, fog or
    cloud. At second stage, reinforcement learning enabled Deep-Q-Learning (RL-DQN)
    for task execution that perform prediction and monitoring agricultural task activities.
    Download : Download high-res image (920KB) Download : Download full-size image
    Fig. 1. Two stage end-to-end drl based smart agricultural system. 4. Modified
    ACO enabled DQN (MACO-DQN) task scheduling model Q-learning is traditional approach
    in which Q-value is predicted and stored in look-up table. Based on Q-value next
    state and reward is computed. For various real-world problems, it is infeasible
    to stored large number of Q-values in look -up table. Deep-Q-learning address
    this issue, by representing Q-value function with neural network. The neural network
    is trained to predict the expected future reward for each state–action pair, based
    on the current state and the actions taken so far. Fig. 2 represent proposed modified
    ACO enabled DQN (MACO-DQN) task scheduling model in which task based on sensor
    data is sent to smart gateways. Smart gateway is divided processing module into
    two modules: Task scheduling module and task execution module. MACO-DQN model
    is deployed into task scheduling module that perform task scheduling on the basis
    of priority, latency and power consumption. Task is scheduled to either of three
    devices, edge devices (smart gateways), FoG devices (base stations) and cloud
    devices based the task priority, latency and power consumption requirement. Let,
    there are m task based on n sensor data . There k number of processing devices
    including edge device, fog devices and cloud. All the fog devices are heterogeneous
    in nature therefore their processing capacity and memory storage are different.
    Each task is represented in three tuple formats: where represent sensor-based
    input data of respective task, represent task load, and represent task output.
    Task input and output is represented in kbits while load is represented in MIPS.
    To formulate task scheduling and processing, we define processing node as which
    indicate that processing node can handle the task request and mathematically it
    is expressed as follows: (1) As each processing device handle more than one task,
    so to ensure that each task is handled at least by one device we define following
    condition: (2) Download : Download high-res image (672KB) Download : Download
    full-size image Fig. 2. Modified ACO enabled DQN (MACO-DQN) task scheduling model.
    4.1. Latency time evaluation model Usually in smart agricultural system, sensor
    devices collects all the information related to weather, crop growth, moisture
    in soil, climate changes, and much more where these data were sent to terminal
    devices like Raspberry pie for further process. The collected data from the terminal
    device is then sent to smart gateway known as edge node for further analysis.
    So, based on transmission rate, speed, and data from terminal device to node is
    defined as follows: (3) Where, B represent access network bandwidth, represent
    power transmission of node, represent Gaussian power, represent channel gain power.
    Transmission time of Sending and receiving of task at node is expressed as follows:
    (4) Task execution time is the time node process the task and is computed using
    following equation: (5) Where, represent load of task , represent computing capacity
    of processing unit. Since every task in processing devices is executed according
    to assigned order so succeeding task need to be wait in the queue until the execution
    of proceeding task is completed. So, waiting time of task at the processing node
    in the queue is computed using following equation: (6) Total time each processing
    node needed to complete any task is computed using following equation: (7) Where,
    represent scheduling time edge node required to executed MACO-DQN task scheduling
    algorithm. Since each task has different execution time, therefore, task deadline
    time tDeadT is executed using following equation: (8) 4.2. Energy consumption
    model is execution power consumption of each processing device node for processing
    the task . Energy consumed by each processing device node while executing task
    is expressed as follows: (9) Since, energy consumption while waiting in the queue
    is very negligible, so energy consumption of task while waiting in the queue is
    not considered. (10) Where, represent energy consumption for data transmission.
    Total consumption of energy during entire cycle of task scheduling can be expressed
    as follows: (11) 4.3. Priority evaluation In the context of smart agriculture,
    tasks are often assigned different levels of priority based on their urgency.
    For tasks with tight deadlines, there is often a limited window of time in which
    they must be completed. To ensure that high-priority tasks are addressed promptly,
    we employ a system of task classification based on their time tolerance. Specifically,
    tasks with strict time constraints are considered high-priority, while those with
    more lenient time-frames are classified as low-priority. Task priority is assigned
    as follows: (12) 4.4. Hybrid latency-energy-priority based model evaluation The
    performance of processing devices including edge device, fog devices and cloud,
    may vary when executing the same task. To optimize the search for potential solutions,
    the direction of the search should be adjusted based on the task’s priority. For
    tasks with high priority, the primary focus should be on reducing service latency,
    whereas for tasks with lower priority and less stringent latency requirements,
    the primary focus should be on reducing power consumption. As a result, we have
    developed a model for evaluating the trade-off between latency and power consumption
    and task priority using characteristics of exponential function. Hybrid evaluation
    model is defined as follows: (13) Where and represent latency and energy consumption
    coefficient. For this work, our objective is to complete the task within deadline
    with minimum energy consumption is defined as: (14) Subject to: Con1: Con2: Con3:
    Con4: Con5: In order to guarantee the successful execution of each task and the
    provision of services by each node, we incorporate constraints (Con 1) and (Con
    2) into our scheduling algorithm. To ensure that each task is assigned to only
    one node, we utilize constraint (Con 3) which defines the connection between node
    and task after scheduling, through the variable . Additionally, we include constraints
    (Con 4) and (Con 5) which limit the maximum latency and energy consumption for
    each task, respectively. 4.5. Modified ant colony optimization (MACO) In Edge–Fog–cloud
    computing environment task scheduling problem has difficulty obtaining the optimal
    solution in polynomial time due to the many variables and constraints in the objective
    function. To minimize the delay of all tasks and reduce the energy consumption
    of nodes, we use the advantages ACO to design a heuristic algorithm to obtain
    Q value. It solves the optimal task scheduling problem in the cloud–fog computing
    environment. In DQN model, based on Q-value, task offloading to processing device
    including edge device, fog devices and cloud is performed. In traditional DQN
    model Q value is predicted using greedy epsilon action selection algorithm, but
    in this work, we employ ACO heuristic approach for Q-value prediction. The probability
    update rule in ACO is used for Q-value based action prediction to select device
    at which task is offloaded and is defined as follows: (15) Where, represent probability
    for selecting device to which the task is offloaded, represent pheromone intensity
    from processing device node to at particular time , represent detectability from
    processing device node to at particular time , represent set of processing device
    node that are not visited. and represent constant weighted value for pheromone
    intensity and detectability. is defined using following equation: (16) Where,
    represent maximum time expend from processing device node to at particular time
    is computed using Eq. (8) and represent total energy consumed by processing device
    node at particular time is computed using Eq. (11) while represent task priority.
    Local Pheromone Update Rule: In this rule, the pheromone trail is updated only
    on the path traversed by the ant. The mathematical equation for the local pheromone
    update rule is: (17) Where, represent rate of evaporation of pheromone which set
    in advance, represent initial concentration of pheromone. Global Pheromone Update
    Rule: In this rule, the pheromone trail is updated on all paths in the solution
    space. The mathematical equation for the global pheromone update rule is: (18)
    Where, represent new generated path from processing device node to and is computed
    using following equation: (19) Where, LoP represent path length. The pseudocode
    for modified ACO is defined in Algorithm 1. Download : Download high-res image
    (539KB) Download : Download full-size image 4.6. Modified ACO based DQN (MACO-DQN)
    model Deep Q-learning is a type of reinforcement learning algorithm that utilizes
    a neural network to approximate the Q-function, which is used to determine the
    optimal action to take in a given state. It is an extension of the Q-learning
    algorithm, which is a model-free, online, and off-policy reinforcement learning
    method. Q-learning is used to learn the optimal action-value function, which is
    used to determine the best action to take in a given state. However, Q-learning
    can struggle when the state space is too large or complex. The deep Q-learning
    algorithm addresses this problem by using a neural network to approximate the
    Q-function, allowing it to handle large and complex state spaces. The mathematical
    equation for the Q-function, which is used in the deep Q-learning algorithm, is
    the following: (20) Where, represent Q-value function for current state and current
    action ; represent learning rate, represent Q-value function for next state and
    next action ; represent awarded reward to the agent for selecting optimal action
    based on state, represent discount factor. Weight update for Q-value function
    after DNN is defined using following equation: (21) Where, represent weight of
    main network, represent weight of target network, represents target iteration;
    represent loss function. weight of target network is updated with weight of main
    network. The DQN network is trained using stochastic gradient descent. State:
    The state composed of type of task m to be offloaded to processing devices including
    edge device, fog devices and cloud, the energy consumption of every processing
    device is and the transmission latency between every terminal device and processing
    device is . The state of DQN model is defined as, (22) Action: Here, action is
    referred to as selecting processing devices for task offloading and is defined
    as: (23) Where, represent probability for selecting device to which the task is
    offloaded and is computed by modified ACO algorithm which is explained in following
    section. Reward: In this work, reward is computed based on the sum of energy (battery)
    consumption level and deadline breach and is expressed as: (24) (25) (26) Policy:
    We use modified ACO based action selection algorithm to balance utilization and
    exploration model and is expressed as follows:Where, represent reward point to
    the edge node for selecting processing node that does not lead to substantial
    rise in energy consumption, represent threshold value for energy consumption,
    represent penalty to edge node for selecting processing node breaching deadline
    time. (27) The pseudo-code for modified ACO based DQN is defined in Algorithm
    2. Download : Download high-res image (678KB) Download : Download full-size image
    4.7. Reinforcement learning (RL) enabled DQN (RL-DQN) model for prediction and
    monitoring of agricultural tasks In this work, we performed RL enabled DQN (RL-DQN)
    for prediction and monitoring of agricultural task. Fig. 3 represent architecture
    of Reinforcement learning (RL) enabled DQN (RL-DQN) model for prediction and monitoring
    of agricultural task. Data Pre-processing: Data pre-processing is a critical step
    in the analysis of IoT sensor data. It involves cleaning, transforming, and organizing
    the data to ensure that it is accurate and usable for further analysis. The goal
    of pre-processing is to make the data more suitable for modeling and to reduce
    the amount of noise in the data. Download : Download high-res image (533KB) Download
    : Download full-size image Fig. 3. RL-DQN architecture for prediction and monitoring
    of agricultural tasks. Agricultural Task Activities: Four tasks are considered
    including water irrigation system, fire detection and crop growth monitoring.
    Interarrivals time of tasks are modeled as exponential function. Interarrivals
    time and processing load of each task is different. Reinforcement Learning based
    DQN: The description of DQN is explained in section 3.1.2 and performed the agricultural
    task accordingly. 5. Results and discussion In this section, we present performance
    assessment for the proposed MACO-DQN task scheduling algorithm and RL-DQN based
    prediction, classification and task monitoring algorithm in edge–Fog–cloud environment.
    To evaluate the performance, we develop simulated environment and results are
    compared with conventional benchmark approach. 5.1. Simulation testbed To develop
    simulation network for proposed smart agriculture network, we utilized a 5G network
    based Simu5G simulator, built on Omnet++. Network configuration and simulation
    parameter for algorithm 1 and 2 is represent in Table 1. The processing device
    node has computer with 4.5 GHz, Intel Core 2 QUAD Q6600 CPU and 16 GB RAM as memory
    storage. We utilized python libraries and tools to implement proposed MACO-DQN
    and RL-DQN model for cloud–fog–edge computing architecture. Table 1. Network configuration
    and simulation Parameter of MACO-DQN and RL-DQN Algorithm. Parameter Symbol Range
    /value of edge-nodes [2–4] of FoG-nodes [3, 10, 22] of Cloud-nodes 1 of Terminal
    Device 12 Computation capacity of Edge-Node [700–13000] MIPS Computation capacity
    of FoG-Node [900–16000] MIPS Computation capacity of Cloud- Node [10–20] MIPS
    Transmission rate between terminal device to Edge-node 1 M/s Transmission rate
    between Edge-node to FoG Node 3 M/s Transmission rate between Edge to Cloud-node
    10 M/s Energy consumption at Edge-Node [30–60] W Energy consumption at FoG-Node
    [40–80] W Energy consumption at Cloud-Node 800 W Energy consumption of node for
    transmission [4–6] W Distance between Terminal device to Edge Node [10–100] m
    Distance between Edge to FoG Node [20–200] m Distance between Edge to FoG Node
    4000 m of task M [10–100] Maximum acceptable time for task with high priority
    3 s Maximum acceptable time for task with low priority 6 s Sensor data input amount
    [1–1024] Kb Task load [1–15] MIPS Task data output amount [1–50] Kb Weight coefficient
    of Latency 4.0 Weight Coefficient of Energy Consumption 1.0 Initial size of Population
    A 30 Initial concentration of Pheromone 1.0 Rate of evaporation of pheromone 0.5
    Learning rate 0.05 Discount factor 0.85 5.2. Performance evaluation The performance
    of our proposed MACO-DQN task scheduling algorithm is compared with existing algorithms
    including benchmark Q-learning, first-come first-served (FCFS), conventional ACO,
    and Improved particle swarm optimization (IPSO). Each algorithm is executed for
    30 times and result is averaged to get minimum error reduction. Convergence: The
    line graph in Figs. 4(a) and (b) depict the cumulative reward for a single episode
    of both Q-Learning and DQL respectively. The solid lines indicate the mean summative
    reward for either 150 or 600 episodes, with the shaded area displaying the deviation
    of the average rewards. Fig. 4(a) represent that over the course of 50k episodes,
    the rewards for Q-Learning gradually approached an average of 110 per episode
    after 60k trials while in comparison, Fig. 4(b) presents the summative reward
    for proposed MACO-DQN model over 5k episodes, reaching an average of 90 per episode
    after 4500 trials. The findings indicate that the MACO-DQN algorithm achieves
    convergence much faster, requiring only a fraction of the episodes compared to
    Q-Learning. The faster convergence rate is due to the continuous improvement of
    the DNN’s ability to predict the Q-values in proposed MACO-DQN model, while the
    variance can be attributed to the varying number of tasks in each episode and
    the random seed used to initiate task offloading for each IoT sensor device. Network
    Energy Consumption: Energy efficiency is a crucial aspect of the IoT devices,
    with the longevity of an WSN device heavily influenced by its energy consumption
    pattern. Fig. 5 illustrates the energy consumption for various task sizes, and
    it is clear that proposed MACO-DQN algorithm surpasses existing algorithms, such
    as Q-Learning, First-Come First-Served (FCFS), and particle swarm optimization
    (PSO). The optimal selection of tasks for offloading by proposed MACO-DQN leads
    to the saving of energy for all nodes. The figures indicate that the larger the
    task size, the higher the energy consumption, both for local and offloaded computation.
    Additionally, an increase in the number of tasks also results in an increase in
    energy consumption, putting more strain on the IoT device or edge server. When
    computation is performed locally, the energy consumption comes from the CPU cycle
    utilization, whereas an offloaded task incurs energy consumption from the transmission
    and reception of data to and from the edge server. Download : Download high-res
    image (338KB) Download : Download full-size image Fig. 4. Convergence analysis
    for summative reward distribution. Latency: Latency, also known as delay, is the
    amount of time it takes for a IoT device to transmit data to processing device
    node, process input at processing device node and produce output. It can be calculated
    using Eq. (7). The shorter the delay, the higher the user satisfaction. Real-time
    applications, such as face recognition systems, require minimal delay. With the
    growing trend of emerging technologies in the IoT field, the need for low delay
    solutions is becoming increasingly important. Experiments were conducted on six
    algorithms to determine the optimal decision with the goal of achieving the lowest
    delay. The comparison of the delay of the proposed MACO-DQN task scheduling algorithm
    to existing algorithms including benchmark Q-learning, First-Come First-Served
    (FCFS), and Particle Swarm Optimization (PSO) is depicted in Fig. 6 for small
    agricultural task, medium agricultural task, and large agricultural tasks. As
    with energy consumption, computation latency increases with the increase in task
    size and quantity. This highlights that MACO-DQN outperforms other algorithms
    in all these instances. Download : Download high-res image (571KB) Download :
    Download full-size image Fig. 5. Energy consumption based comparative analysis.
    Deadline Breaching: A deadline breaching occurs when the processing unit has not
    completed the task within the specified time frame. Eq. (13)’s constraint can
    be used to determine if a deadline has been missed. Fig. 7 presents the percentage
    of deadline breaching at each node, calculated out of the total number of tasks
    assigned. In terms of meeting deadlines, the proposed MACO-DQN algorithm outperforms
    the others, with the lowest total percentage of deadline breaching. This is because
    MACO-DQN takes into account all transmission delays between the edge-node, FoG
    devices, and the cloud device in its decision-making process. Although Q-Learning
    performs comparably, it has a slightly higher rate of missed deadlines, at 0.91%
    more than proposed MACO-DQN. The First-Come First-Served (FCFS) algorithm has
    the worst performance, as it does not consider deadlines or delays in its decision-making.
    The PSO method also shown poor performance, as they offloaded task to the FoG
    device or cloud device, leading to increased queue times of FoG device or cloud
    device. Download : Download high-res image (571KB) Download : Download full-size
    image Fig. 6. Latency based comparative analysis. Task offloading Time: Fig. 8
    displays the task offloading execution time of various algorithms, including Q-learning,
    First-Come First-Served (FCFS), conventional ACO, and Improved Particle Swarm
    Optimization (IPSO), in the context of task offloading for WSN applications in
    the edge–fog–cloud computing environment. The average time taken to offload tasks
    was found to be 125.35 ms for Q-learning, 115.6 ms for PSO, 111.4 ms for FCFS,
    and 101.5 ms for the proposed MACO-DQN algorithm. Upon comparison, it was observed
    that the proposed MACO-DQN resulted in a reduction of 21.85%, 12.38%, 10.91%,
    and 8.9% in execution time when compared to Q-Learning, FCFS, IPSO, and Conventional
    ACO respectively. The computational complexity of the proposed MACO-DQN algorithm
    was determined to be (nlogn), which is more efficient than the other algorithms.
    Download : Download high-res image (260KB) Download : Download full-size image
    Fig. 7. Analysis of deadline breaching at each node. Based on the results of the
    experiments, it was determined that the proposed MACO-DQN algorithm outperforms
    Q-Learning, FCFS, and PSO in terms of latency time, energy consumption, deadline
    breaching, and task offloading time, all of which contribute to improved Quality
    of Service (QoS). The reduction in task offloading execution time compared to
    other algorithms leads to improved QoS in the edge–fog–cloud environment. The
    MACO-DQN algorithm takes into consideration computation and communication latency
    to minimize task offloading time in the edge–fog–cloud environment, ultimately
    improving the overall QoS. Download : Download high-res image (207KB) Download
    : Download full-size image Fig. 8. Analysis of task offloading execution time.
    5.3. RL-DQN performance analysis In this section, we present performance analysis
    of proposed RL-DQN model for prediction and monitoring agricultural task and compare
    the performance of proposed RL-DQN model with traditional SVM machine learning
    (SVM-ML) model, benchmark CNN model, and AlexNet. Here, four evaluation metrics
    are considered for performance assessment and these are accuracy, precision, recall
    and F-Score. Table 2 shows result analysis based on accuracy, precision, recall
    and F-Score for proposed RL-DQN, SVM-ML, benchmark CNN, and AlexNet model. Based
    on the comparison of the four-evaluation metrics, the proposed RL-DQN method outperforms
    the other three methods in terms of accuracy, precision, recall and f-score. The
    values for accuracy, precision, recall and f-score for RL-DQN were higher than
    those for SVM-ML, AlexNet, and CNN. The proposed RL-DQN method achieved an accuracy
    of 99.29%, precision of 98.56%, recall of 98.96%, and an f-score of 99.8%, while
    the other methods had lower results. This demonstrates that the proposed RL-DQN
    method is the best option for prediction and classification in smart agriculture.
    Table 2. RL-DQN performance analysis and comparative results. Algorithms Precision
    Recall F-Measure Accuracy Proposed RL-DQN 98.5 99.1 98.1 98.5 AlexNet 96.8 97.8
    95.4 94.9 SVM-ML 90.6 90.2 90.6 91.2 Benchmark CNN 93.6 94.2 93.4 92.3 DQN 94.1
    95.3 92.6 93.4 6. Conclusion In this paper, we focus on addressing the task scheduling
    issue in smart agriculture. With the need for ultra-low latency, we create a mathematical
    model for smart agriculture task scheduling those balances both low latency and
    low energy consumption for time-critical tasks. We convert this into a multi-objective
    optimization problem considering time delay and energy consumption. By utilizing
    the benefits of both cloud computing and fog computing, we suggest an edge–fog–cloud
    computing architecture for smart agriculture and develop a task rescheduling strategy
    that prioritizes time-sensitive tasks. In this work, we present a two-stage DRL-based
    smart agricultural system. The first stage involves the use of the Ant Colony
    Optimization-enabled Deep Q-Network (MACO-DQN) model, which is responsible for
    tasks such as fire detection, pest detection, crop growth monitoring, irrigation
    scheduling, soil monitoring, climate monitoring, and field monitoring. The MACO-DQN
    model offloads these tasks to edge, fog, or cloud computing devices based on latency,
    energy consumption, and computing power. In the second stage, we propose a RL-enabled
    DQN (RL-DQN) model for predicting and monitoring agricultural activities. Our
    experimental findings show significant improvements in convergence speed, planning
    success rate, and path accuracy compared to traditional deep Q-network-based intensive
    learning methods. The performance of our method outperforms the conventional method
    by a substantial margin. In future, we are planning to apply MACO-DQN and RL-DQN
    task scheduling model to other real time application like smart healthcare, smart
    transportation etc. CRediT authorship contribution statement Ganesh Gopal Devarajan:
    Conceptualization, Methodology, Supervision, Writing – original draft, Implementation.
    Senthil Murugan Nagarajan: Conceptualization, Methodology, Writing – original
    draft, Coding, Implementing Algorithms and editing, Revising. Ramana T.V.: Supervision,
    Writing – original draft, Implementation. Vignesh T.: Data preprocessing, Data
    analysis. Waleed Alnumay: Visualization, Investigation, Supervision. Declaration
    of competing interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Acknowledgment Waleed Alnumay acknowledges support
    from the Researchers Supporting Project number (RSP2023R250), King Saud University,
    Riyadh, Saudi Arabia . Data availability No data was used for the research described
    in the article References [1] Mann H.H. Social Framework of Agriculture Routledge
    (2021) Google Scholar [2] Su Y., Wang X. Innovation of agricultural economic management
    in the process of constructing smart agriculture by big data Sustain. Comput.
    Inf. Syst., 31 (2021), Article 100579 View PDFView articleView in ScopusGoogle
    Scholar [3] Jones K., Nowak A., Berglund E., Grinnell W., Temu E., Paul B., Renwick
    L.L., Steward P., Rosenstock T.S., Kimaro A.A. Evidence supports the potential
    for climate-smart agriculture in Tanzania Glob. Food Secur., 36 (2023), Article
    100666 View PDFView articleView in ScopusGoogle Scholar [4] Goel R.K., Yadav C.S.,
    Vishnoi S., Rastogi R. Smart agriculture–Urgent need of the day in developing
    countries Sustain. Comput. Inf. Syst., 30 (2021), Article 100512 View PDFView
    articleView in ScopusGoogle Scholar [5] Sinha A., Shrivastava G., Kumar P. Architecting
    user-centric internet of things for smart agriculture Sustain. Comput. Inf. Syst.,
    23 (2019), pp. 88-102 View PDFView articleView in ScopusGoogle Scholar [6] Ray
    P.P. Internet of things for smart agriculture: Technologies, practices and future
    direction J. Amb. Intell. Smart Environ., 9 (4) (2017), pp. 395-420 View in ScopusGoogle
    Scholar [7] Katimbo A., Rudnick D.R., Zhang J., Ge Y., DeJonge K.C., Franz T.E.,
    Shi Y., Liang W.-z., Qiao X., Heeren D.M., et al. Evaluation of artificial intelligence
    algorithms with sensor data assimilation in estimating crop evapotranspiration
    and crop water stress index for irrigation water management Smart Agric. Technol.
    (2023), Article 100176 View PDFView articleView in ScopusGoogle Scholar [8] Lavanya
    G., Rani C., GaneshKumar P. An automated low cost IoT based fertilizer intimation
    system for smart agriculture Sustain. Comput. Inf. Syst., 28 (2020), Article 100300
    Google Scholar [9] Kapoor A., Bhat S.I., Shidnal S., Mehra A. Implementation of
    IoT (internet of things) and image processing in smart agriculture 2016 International
    Conference on Computation System and Information Technology for Sustainable Solutions,
    CSITSS, IEEE (2016), pp. 21-26 CrossRefView in ScopusGoogle Scholar [10] Zhang
    L., Dabipi I.K., Brown Jr. W.L. Internet of things applications for agriculture
    Internet of Things A to Z: Technologies and Applications, Wiley Online Library
    (2018), pp. 507-528 CrossRefGoogle Scholar [11] Tzounis A., Katsoulas N., Bartzanas
    T., Kittas C. Internet of things in agriculture, recent advances and future challenges
    Biosyst. Eng., 164 (2017), pp. 31-48 View PDFView articleView in ScopusGoogle
    Scholar [12] Maddikunta P.K.R., Hakak S., Alazab M., Bhattacharya S., Gadekallu
    T.R., Khan W.Z., Pham Q.-V. Unmanned aerial vehicles in smart agriculture: Applications,
    requirements, and challenges IEEE Sens. J., 21 (16) (2021), pp. 17608-17619 Google
    Scholar [13] Kim J., Kim S., Ju C., Son H.I. Unmanned aerial vehicles in agriculture:
    A review of perspective of platform, control, and applications Ieee Access, 7
    (2019), pp. 105100-105115 CrossRefView in ScopusGoogle Scholar [14] Srbinovska
    M., Gavrovski C., Dimcev V., Krkoleva A., Borozan V. Environmental parameters
    monitoring in precision agriculture using wireless sensor networks J. Clean. Prod.,
    88 (2015), pp. 297-307 View PDFView articleView in ScopusGoogle Scholar [15] Haule
    J., Michael K. Deployment of wireless sensor networks (WSN) in automated irrigation
    management and scheduling systems: a review Proceedings of the 2nd Pan African
    International Conference on Science, Computing and Telecommunications, PACT 2014,
    IEEE (2014), pp. 86-91 CrossRefView in ScopusGoogle Scholar [16] Zamora-Izquierdo
    M.A., Santa J., Martínez J.A., Martínez V., Skarmeta A.F. Smart farming IoT platform
    based on edge and cloud computing Biosyst. Eng., 177 (2019), pp. 4-17 View PDFView
    articleView in ScopusGoogle Scholar [17] Kaloxylos A., Eigenmann R., Teye F.,
    Politopoulou Z., Wolfert S., Shrank C., Dillinger M., Lampropoulou I., Antoniou
    E., Pesonen L., et al. Farm management systems and the Future Internet era Comput.
    Electron. Agric., 89 (2012), pp. 130-144 View PDFView articleView in ScopusGoogle
    Scholar [18] Sutton R.S., Barto A.G. Reinforcement Learning: An Introduction MIT
    Press (2018) Google Scholar [19] Mnih V., Kavukcuoglu K., Silver D., Rusu A.A.,
    Veness J., Bellemare M.G., Graves A., Riedmiller M., Fidjeland A.K., Ostrovski
    G., et al. Human-level control through deep reinforcement learning Nature, 518
    (7540) (2015), pp. 529-533 CrossRefView in ScopusGoogle Scholar [20] Bu F., Wang
    X. A smart agriculture IoT system based on deep reinforcement learning Future
    Gener. Comput. Syst., 99 (2019), pp. 500-507 View PDFView articleView in ScopusGoogle
    Scholar [21] Zhao J., Wang Y., Fei Z., Wang X. Uav deployment design for maximizing
    effective data with delay constraint in a smart farm 2020 IEEE/CIC International
    Conference on Communications in China, ICCC, IEEE (2020), pp. 424-429 CrossRefView
    in ScopusGoogle Scholar [22] Li B., Fei Z., Zhang Y. UAV communications for 5G
    and beyond: Recent advances and future trends IEEE Internet Things J., 6 (2) (2018),
    pp. 2241-2263 View in ScopusGoogle Scholar [23] Elsayed M., Erol-Kantarci M. AI-enabled
    future wireless networks: Challenges, opportunities, and open issues IEEE Veh.
    Technol. Mag., 14 (3) (2019), pp. 70-77 CrossRefView in ScopusGoogle Scholar [24]
    Khoramnejad F., Erol-Kantarci M. On joint offloading and resource allocation:
    A double deep q-network approach IEEE Trans. Cogn. Commun. Netw., 7 (4) (2021),
    pp. 1126-1141 CrossRefView in ScopusGoogle Scholar [25] Akbari M., Abedi M.R.,
    Joda R., Pourghasemian M., Mokari N., Erol-Kantarci M. Age of information aware
    VNF scheduling in industrial IoT using deep reinforcement learning IEEE J. Sel.
    Areas Commun., 39 (8) (2021), pp. 2487-2500 CrossRefView in ScopusGoogle Scholar
    [26] Lottes P., Khanna R., Pfeifer J., Siegwart R., Stachniss C. UAV-based crop
    and weed classification for smart farming 2017 IEEE International Conference on
    Robotics and Automation, ICRA, IEEE (2017), pp. 3024-3031 View in ScopusGoogle
    Scholar [27] Yang Z., Pan C., Wang K., Shikh-Bahaei M. Energy efficient resource
    allocation in UAV-enabled mobile edge computing networks IEEE Trans. Wireless
    Commun., 18 (9) (2019), pp. 4576-4589 CrossRefView in ScopusGoogle Scholar [28]
    Nguyen A.C., Pamuklu T., Syed A., Kennedy W.S., Erol-Kantarci M. Deep reinforcement
    learning for task offloading in UAV-aided smart farm networks (2022) arXiv preprint
    arXiv:2209.07367 Google Scholar [29] Kumar P., Udayakumar A., Anbarasa Kumar A.,
    Senthamarai Kannan K., Krishnan N. Multiparameter optimization system with DCNN
    in precision agriculture for advanced irrigation planning and scheduling based
    on soil moisture estimation Environ. Monit. Assess., 195 (1) (2023), p. 13 Google
    Scholar [30] Bal F., Kayaalp F. A novel deep learning-based hybrid method for
    the determination of productivity of agricultural products: Apple case study IEEE
    Access, 11 (2023), pp. 7808-7821, 10.1109/ACCESS.2023.3238570 View in ScopusGoogle
    Scholar [31] Ong P., Teo K.S., Sia C.K. UAV-based weed detection in Chinese cabbage
    using deep learning Smart Agric. Technol. (2023), Article 100181 View PDFView
    articleView in ScopusGoogle Scholar [32] Fei S., Hassan M.A., Xiao Y., Su X.,
    Chen Z., Cheng Q., Duan F., Chen R., Ma Y. UAV-based multi-sensor data fusion
    and machine learning algorithm for yield prediction in wheat Precis. Agric., 24
    (1) (2023), pp. 187-212 CrossRefView in ScopusGoogle Scholar Cited by (2) Computing
    paradigms for smart farming in the era of drones: a systematic review 2024, Annales
    des Telecommunications/Annals of Telecommunications A Deep Reinforcement Learning
    Approach in IoT-based Smart Plantation Monitoring System 2023, 2023 International
    Automatic Control Conference, CACS 2023 View Abstract © 2023 Elsevier Inc. All
    rights reserved. Part of special issue Sustainable Computing based Smart Agriculture
    Edited by Jiachen Yang, Houbing Song, Qinggang Meng, Muhammad Khurram Khan View
    special issue Recommended articles Bi-objective energy-efficient scheduling in
    a seru production system considering reconfiguration of Sustainable Computing:
    Informatics and Systems, Volume 39, 2023, Article 100900 Jie Lian, …, Pengwei
    Zhang View PDF Evaluation of a novel hybrid lion swarm optimization – AdaBoostRegressor
    model for forecasting monthly precipitation Sustainable Computing: Informatics
    and Systems, Volume 39, 2023, Article 100884 Sumantha Esther Priestly, …, D. Jude
    Hemanth View PDF Sustainable irrigation of pipeline fluid flow rate regulation
    based on traveling wave magnetic field Sustainable Computing: Informatics and
    Systems, Volume 39, 2023, Article 100896 Jing Nie, …, LinZe Lv View PDF Show 3
    more articles Article Metrics Citations Citation Indexes: 2 Captures Readers:
    19 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: 'Sustainable Computing: Informatics and Systems'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'DDNSAS: Deep reinforcement learning based deep Q-learning network for smart
    agriculture system'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sridevi A.
  - Preethi M.
  citation_count: '0'
  description: The technologically adapted agricultural procedures convert conventional
    farming practices and introduce smart farming or smart agriculture. Manual interventions
    in farming are unavoidable, however, it was reduced due to the Internet of Things
    (IoT). Sensors are used to monitor the farms which reduce the manpower requirements
    as well the cost. In this research work, a smart monitoring and prediction system
    was developed using IoT along with Fog computing. The physical data from farms
    are collected through IoT sensors and processed using a novel correlation-based
    ensemble classifier. Fog computing is adopted in the proposed work to reduce the
    data transmission delay and computation complexities. Simulation analysis using
    benchmark datasets demonstrates the proposed model performance in terms of precision,
    recall, F1-score, and accuracy. Comparative analysis with conventional techniques
    like neural networks, extreme learning machine, and hybrid particle swarm optimization
    algorithm, validates the superior performance of the proposed model. With maximum
    accuracy of 96.67% proposed model outperforms conventional approaches.
  doi: 10.3233/JIFS-224225
  full_citation: '>'
  full_text: '>

    "Help About us Contact us Home Journals Cart Log in / Register Search Search Published
    between: Published from year: and Published to year: Search syntax help   Cite
    Monitoring and prediction of smart farming in fog-based IoT environment using
    a correlation based ensemble model Article type: Research Article Authors: Sridevi,
    A.a; * | Preethi, M.b; 1 Affiliations: [a] Department of Electronics and Communication
    Engineering, M. Kumarasamy College of Engineering (Autonomous), Karur, Tamil Nadu,
    India | [b] Department of Electronics and Communication Engineering, Suguna College
    of Engineering, Coimbatore, Tamil Nadu, India Correspondence: [*] Corresponding
    author. A. Sridevi, Department of Electronics and Communication Engineering, M.
    Kumarasamy College of Engineering (Autonomous), Karur, Tamil Nadu-639113, India.
    E-mail: sridevigunasekaranphd@gmail.com; 0000-0001-6077-556X. Note: [1] 0000-0003-4064-1278.
    Abstract: The technologically adapted agricultural procedures convert conventional
    farming practices and introduce smart farming or smart agriculture. Manual interventions
    in farming are unavoidable, however, it was reduced due to the Internet of Things
    (IoT). Sensors are used to monitor the farms which reduce the manpower requirements
    as well the cost. In this research work, a smart monitoring and prediction system
    was developed using IoT along with Fog computing. The physical data from farms
    are collected through IoT sensors and processed using a novel correlation-based
    ensemble classifier. Fog computing is adopted in the proposed work to reduce the
    data transmission delay and computation complexities. Simulation analysis using
    benchmark datasets demonstrates the proposed model performance in terms of precision,
    recall, F1-score, and accuracy. Comparative analysis with conventional techniques
    like neural networks, extreme learning machine, and hybrid particle swarm optimization
    algorithm, validates the superior performance of the proposed model. With maximum
    accuracy of 96.67% proposed model outperforms conventional approaches. Keywords:
    Internet of Things (IoT), fog computing, latency, monitoring, feature extraction,
    prediction, correlation-based approach, ensemble classifier DOI: 10.3233/JIFS-224225
    Journal: Journal of Intelligent & Fuzzy Systems, vol. 44, no. 6, pp. 10733-10746,
    2023 Published: 01 June 2023 Price: EUR 27.50 Add to cart Log in or register to
    view or purchase instant access Share this: Twitter share Facebook share Linked
    in share Volume Pre-press Volume 46 Volume 45 Volume 44 Issue 6 Issue 5 Issue
    4 Issue 3 Issue 2 Issue 1 Volume 43 Show more  We recommend Fog computing enabled
    air quality monitoring and prediction leveraging deep learning in IoT P. Divya
    Bharathi et al., Journal of Intelligent & Fuzzy Systems Smart environments and
    ambient intelligence in agricultural and environmental technology Andrés Muñoz
    et al., Journal of Ambient Intelligence and Smart Environments Frontiers in Telemedicine
    and Internet of Things in Health Monitoring S. Balamurugan et al., Technology
    and Health Care Intelligent and Efficient IoT Through the Cooperation of TinyML
    and Edge Computing Ramon Sanchez-Iborra et al., Informatica, 2022 Distributed
    IoT monitoring model using multi-core sensing function integration Feiyan Lou
    et al., Journal of Intelligent & Fuzzy Systems, 2021 Prediction of landslide displacement
    with dynamic features using intelligent approaches Yonggang Zhang et al., International
    Journal of Mining Science and Technology, 2022 Using machine learning to predict
    the efficiency of biochar in pesticide remediation Amrita Nighojkar et al., npj
    Sustainable Agriculture, 2023 Dynamic model for predicting nitrogen oxide concentrationat
    outlet of selective catalytic reduction denitrificationsystem based on kernel
    extreme learning machine Ma Ning Liu Lei Yang Zhenyong Yan Laiqing Dong Ze et
    al., Journal of Southeast University (English Edition), 2022 Integration of Communication
    and Navigation Technologies toward LEO-Enabled 6G Networks: A Survey Yihai Liao
    et al., Selections from Space: Science & Technology, 2023 A review on neural radiance
    fields based view synthesis CHANG Yuan et al., Journal of Graphics -CN, 2021 Powered
    by Log out of ''University of Nebraska-Lincoln Libraries'' Journals Help About
    us Contact us Terms & conditions Privacy policy Copyright ©2024 IOS Press All
    rights reserved. Join our network: Twitter Facebook LinkedIn North America IOS
    Press, Inc. 6751 Tepper Drive Clifton, VA 20124 USA Tel: +1 703 830 6300 Fax:
    +1 703 830 2300 sales@iospress.com For editorial issues, like the status of your
    submitted paper or proposals, write to editorial@iospress.nl Europe IOS Press
    Nieuwe Hemweg 6B 1013 BG Amsterdam The Netherlands Tel: +31 20 688 3355 Fax: +31
    20 687 0091 info@iospress.nl For editorial issues, permissions, book requests,
    submissions and proceedings, contact the Amsterdam office info@iospress.nl Asia
    Inspirees International (China Office) Ciyunsi Beili 207(CapitaLand), Bld 1, 7-901
    100025, Beijing China  Free service line: 400 661 8717 Fax: +86 10 8446 7947 china@iospress.cn
    For editorial issues, like the status of your submitted paper or proposals, write
    to editorial@iospress.nl 如果您在出版方面需要帮助或有任何建, 件至: editorial@iospress.nl Built on
    the Scolaris platform by:"'
  inline_citation: '>'
  journal: Journal of Intelligent and Fuzzy Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Monitoring and prediction of smart farming in fog-based IoT environment using
    a correlation based ensemble model
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Padhy S.
  - Alowaidi M.
  - Dash S.
  - Alshehri M.
  - Malla P.P.
  - Routray S.
  - Alhumyani H.
  citation_count: '13'
  description: Every aspect of the 21st century has undergone a revolution because
    of the Internet of Things (IoT) and smart computing technologies. These technologies
    are applied in many different ways, from monitoring the state of crops and the
    moisture level of the soil in real-time to using drones to help with chores such
    as spraying pesticides. The extensive integration of both recent IT and conventional
    agriculture has brought in the phase of agriculture 4.0, often known as smart
    agriculture. Agriculture intelligence and automation are addressed by smart agriculture.
    However, with the advancement of agriculture brought about by recent digital technology,
    information security challenges cannot be overlooked. The article begins by providing
    an overview of the development of agriculture 4.0 with pros and cons. This study
    focused on layered architectural design, identified security issues, and presented
    security demands and upcoming prospects. In addition to that, we propose a security
    architectural framework for agriculture 4.0 that combines blockchain technology,
    fog computing, and software-defined networking. The suggested framework combines
    Ethereum blockchain and software-defined networking technologies on an open-source
    IoT platform. It is then tested with three different cases under a DDoS attack.
    The results of the performance analysis show that overall, the proposed security
    framework has performed well.
  doi: 10.3390/pr11030757
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Processes All Article Types Advanced   Journals
    Processes Volume 11 Issue 3 10.3390/pr11030757 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Jie Zhang Subscribe
    SciFeed Recommended Articles Related Info Link More by Authors Links Article Views
    3874 Citations 13 Table of Contents Abstract Introduction Overview of Agriculture
    4.0 Agriculture 4.0 Security Threats in Multi-Layered Paradigm Security Threats
    in Modern Agriculture Existing Research on Security in Agriculture 4.0 Proposed
    Security Framework Case Studies and Experimental Results Smart Agriculture 5.0
    Conclusions Author Contributions Funding Institutional Review Board Statement
    Informed Consent Statement Data Availability Statement Conflicts of Interest References
    share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessArticle AgriSecure: A Fog Computing-Based Security Framework for Agriculture
    4.0 via Blockchain by Sasmita Padhy 1, Majed Alowaidi 2,*, Sachikanta Dash 3,
    Mohamed Alshehri 2, Prince Priya Malla 4, Sidheswar Routray 5,* and Hesham Alhumyani
    6 1 School of Computing Science and Engineering, VIT Bhopal University, Bhopal-Indore
    Highway Kothrikalan, Sehore 466114, Madhya Pradesh, India 2 Department of Information
    Technology, College of Computer and Information Sciences, Majmaah University,
    Majmaah 11952, Saudi Arabia 3 Department of Computer Science and Engineering,
    GIET University, Gunupur 765022, Odisha, India 4 School of Electronics Engineering,
    Kalinga Institute of Industrial Technology, Bhubaneswar 751024, Odisha, India
    5 Department of Computer Science and Engineering, School of Engineering, Indrashil
    University, Rajpur, Mehsana 382740, Gujarat, India 6 Department of Computer Engineering,
    College of Computers and Information Technology, Taif University, Taif 21944,
    Saudi Arabia * Authors to whom correspondence should be addressed. Processes 2023,
    11(3), 757; https://doi.org/10.3390/pr11030757 Submission received: 23 January
    2023 / Revised: 23 February 2023 / Accepted: 24 February 2023 / Published: 3 March
    2023 (This article belongs to the Special Issue Analysis, Design and Industrial
    Application of Intelligent Control Systems) Download keyboard_arrow_down     Browse
    Figures Review Reports Versions Notes Abstract Every aspect of the 21st century
    has undergone a revolution because of the Internet of Things (IoT) and smart computing
    technologies. These technologies are applied in many different ways, from monitoring
    the state of crops and the moisture level of the soil in real-time to using drones
    to help with chores such as spraying pesticides. The extensive integration of
    both recent IT and conventional agriculture has brought in the phase of agriculture
    4.0, often known as smart agriculture. Agriculture intelligence and automation
    are addressed by smart agriculture. However, with the advancement of agriculture
    brought about by recent digital technology, information security challenges cannot
    be overlooked. The article begins by providing an overview of the development
    of agriculture 4.0 with pros and cons. This study focused on layered architectural
    design, identified security issues, and presented security demands and upcoming
    prospects. In addition to that, we propose a security architectural framework
    for agriculture 4.0 that combines blockchain technology, fog computing, and software-defined
    networking. The suggested framework combines Ethereum blockchain and software-defined
    networking technologies on an open-source IoT platform. It is then tested with
    three different cases under a DDoS attack. The results of the performance analysis
    show that overall, the proposed security framework has performed well. Keywords:
    IoT; blockchain; SDN; precision farming; cyber security; fog computing 1. Introduction
    Farming is the main source of food and contributes significantly to the economy.
    According to the FAO (Food and Agriculture Organization of the United Nations),
    by 2050, the demand for producing food must be increased by 70% to satisfy the
    world’s demand. In recent studies, 550 million people of the world’s population
    are in nutrition deficiencies; every day, around 820 million people are still
    not obtaining food. The study says that the world’s population will increase to
    more than two billion, and most of the population will live in cities. It has
    also been observed that the population in India and Nigeria will increase to around
    482 million between 2019 and 2050 [1]. The biggest challenging situation arises
    with this population growth to achieve the Sustainable Development Goals (SDGs)
    of zero hunger [2]. These projections for the near future have an impact on overall
    food demand. Because of the scarcity of water today, it is difficult to meet only
    40% of the water supply by 2030, and the unavailability of farming land will lead
    to a reduction in the food supply. As a result, the agriculture sector needs sufficient
    resources than are presently available, as well as more self-sustaining systems
    to boost cultivation percentages while reducing environmental resource use [3].
    Though it might be appropriate to reach rising demand, it is unclear how to do
    so in an equitable and resilient manner. Again, there is a vital need to accelerate
    and scale up the agricultural production transformation [4]. Agriculture 4.0 can
    provide a way to increase agricultural efficiency with the available crop area.
    It also optimizes irrigation to use limited water and energy and allocate resources
    to protect crops effectively. Those would be possible through the integration
    of environmental monitoring, forecasting, and smart devices [5]. Smart farming’s
    new technologies can enhance agricultural mechanisms, allowing cultivation to
    increase while using natural resources efficiently. Agricultural sector innovations
    are referred to as the ‘‘digital agricultural revolution”, which turns most factors
    of agriculture, ensuing in more effective, efficient, self-sustaining, integrated,
    truthful, and self-reliant agriculture. Cellular devices, sensors, data analysis,
    fog computing, information security, and intelligent systems influence how technologies
    are integrated into the agricultural sector [6]. Nowadays, agriculture is changing
    quickly as it enters a new age known as Agriculture 4.0. Agriculture 4.0 seeks
    to employ new technology and approaches to address the issues facing modern agriculture
    (such as climatic alteration, illnesses, extreme application of resources, etc.)
    and to lower risks while enhancing production efficiency and safety [7]. To do
    this, it makes extensive use of cutting-edge ICTs. In addition to this evolution,
    there is a rising trend in food needs. Given the continual evolution and the rising
    need for food, it is anticipated that the market for agriculture 4.0 will expand
    greatly in the years to come. Wireless Sensor Networks (WSNs) and Internet of
    Things (IoT) technologies are widely utilized in Agriculture 4.0 and provide farmers
    with a number of advantages, including observing numerous environmental factors
    connected to crops, spotting crop illnesses, predicting yield, and lowering labor
    costs [8]. However, the Sensor and network connectivity and communications in
    farming might act as a base factor for many types of attacks since these devices
    frequently have obsolete or unpatched firmware or software [9]. Security is a
    top priority in agriculture, and any interruption or distortion may present difficult
    problems and have disastrous outcomes. Monitoring and categorization of network
    traffic, which have attracted a lot of attention since the earliest beginnings
    of the Internet, can be crucial to preventing network assaults [10]. Scientific
    research on network traffic categorization for IoT system security has been extensive.
    It is an essential part of intrusion detection systems (IDS) and aids in the identification
    and detection of harmful network activity. This revolution in agricultural technology
    is built on having access to all the data produced by every sensor used on a farm,
    centralized via the internet, and analyzed for the best possible decision-making
    [11]. Any sensor employed generates a significant amount of data that can be extensively
    examined and provides useful information to enhance crop quality or lessen environmental
    impact. Cloud computing, physical hardware, and the IoT are the three key components
    that enable the automation and data sharing needed by this new smart agriculture
    [12]. With the help of technical improvements (drones, sensors, software, etc.),
    we can complete agricultural jobs faster and more effectively than humans. Agriculture
    4.0 must make sure that an appropriate security mechanism is implemented to avert
    an attack to build scalable and secure systems. The integrity of data is important
    for the effective functioning of information technological advances such as data
    analysis and intelligent devices [13]. Because agriculture 4.0 incorporates elements
    from conventional Internet, cellular, and wireless technologies, which may include
    all of the security risks that advancements present situation. It also addresses
    current security risks such as data and device integrity, consistency, and accessibility.
    Devices in agriculture 4.0 are implemented in outdoor spaces where they are subjected
    to external factors such as animals, human beings, or farming equipment. Unknowingly,
    these factors remove or damage sensors. Since the 6th century B.C., there has
    been a threat known as Agro terrorism [5]. This type of terrorism could have a
    variety of goals, including causing financial harm, fear, and social unrest [6,7].
    Terrorists could incite community disturbance and lack of credibility in administration
    by exploiting agricultural and food corporate crises, which can lead to undivided
    attention in the world. Cyber-agro-terrorism in agriculture 4.0 is an electronic
    system in agricultural settings to harm crops and animals while causing economic
    loss. Cyber-agro-terrorists can operate attacks on fields and through the internet,
    using cyber resources [8]. 2. Overview of Agriculture 4.0 Agriculture has gone
    through many revolutionary movements, all of which have increased the agriculture
    industry’s performance and effectiveness. Plant cultivation “in 10,000 BC” resulted
    in the birth of the world’s first societies and civilizations. Machines were used
    in the farming sector to execute work, which increased production from 1900 to
    1930. Farmers were able to use newly discovered crops and agrochemicals during
    the Green Revolution (from around the 1960s). Biotechnology facilitated the production
    of plants with previously selected attributes, with increased yield and pest resistance,
    desertification, and herbicide, from 1990 to 2000. Now, in the 21st century, digitalization
    has the potential to help humanity survive and flourish for a long time [4]. The
    world’s largest industry, agriculture, contributes significantly to both social
    stability and economic growth [13]. A growing number of studies on smart agriculture
    are driven by the task of resolving the conflict between the population increase
    and the constrained food output. The advancement of science and technology fuels
    the revolution in agriculture, which is based on both the rise in output and the
    limitations of the time [14]. Figure 1 is used to explain the features of agriculture
    development to readers (from Agriculture 1.0 to Agriculture 4.0). Figure 1. The
    uprising of Agriculture 1.0 to agriculture 4.0. Figure 1 is used to explain the
    features of agriculture development to readers (from Agriculture 1.0 to Agriculture
    4.0). Agriculture 1.0: During the conventional agricultural age (1784–1870), which
    was dominated by animal and human resources, the fundamental problem with agriculture
    was its lack of operational efficiency. Agriculture 2.0: During the automated
    agricultural period of the 20th century, resource waste was the major problem.
    Agriculture 3.0: During the period of rapid advancement of automated agriculture
    (1992–2017), the key problem was the lack of intelligence. Agriculture 4.0: the
    age of smart agriculture (which began in 2017 and is defined by unmanned operations)
    is primarily characterized by the application of contemporary information technology
    to both support and intelligently improve agriculture. The term “smart agriculture”
    [15] refers to a new approach to agriculture that personalized service through
    the integration of contemporary information technologies such as the internet,
    big data, IoT, and many more [16]. In a nutshell, the new mode is an intelligent
    agricultural solution that fuses current information technology with agriculture.
    Although recent information technology opens up new possibilities for the progress
    of agricultural output, it also places heavy demands on security and privacy in
    the context of smart agriculture and poses significant obstacles therein [17].
    More than a movement, agriculture 4.0 represents the next development in the sector’s
    transition to a more intelligent, effective, and environmentally responsible one.
    The supply chain’s daily operations produce a tremendous amount of data [18].
    Most of the time, this information went unused, but thanks to big data and new
    technology, it can now be used to boost any crop’s performance and productivity.
    2.1. Advantages of Agriculture 4.0 The effects of smart agriculture are covered
    in the following sections. Production volume: The use of smart technology in agriculture
    can significantly boost the number of products produced on the farm. This will
    contribute to feeding a growing population. Production quality: The wellness and
    nutrition of people from all socioeconomic strata in the nation can be significantly
    impacted by the quality of food produced. A country’s population will live longer
    and in better health with better food, which will improve its citizens’ economic
    contribution. Effectiveness of farming practices and resource use: The application
    of smart technologies to conventional agricultural operations can increase their
    effectiveness. In turn, this encourages more efficient use of agricultural resources.
    Ideal cost of cultivation: It is achieved when there is a balance between quantity,
    quality, and efficiency in the procedures used. This results in a higher price
    for the agricultural output that is produced. Reducing wastage: The farming industry,
    one of the main economic sectors, is in great part to blame for the massive quantities
    of food and other secondary resources that are wasted. Smart technology could
    be employed to track and cut down on this waste. Ecologically sustainable: The
    reduced agricultural waste and improved agricultural process efficiency directly
    reduce the environmental and ecological footprint. Effective use of Time: Timely
    delivery of the necessary insecticides, fertilizers, and other chemicals can provide
    timely and high-quality agricultural output with fewer losses thanks to smart
    agriculture. The farming industry may be at threat by the following while deploying
    agricultural 4.0 technology: Theft of business and customer data. Taking resources
    under the control of sensors and gadgets. Destroying the objects that devices
    control. Damage to reputation if a data breach is disclosed. Agriculture 4.0 may
    be at risk from infrastructure damage, sensor failures may affect poultry and
    cattle breeding, and control system hacks may affect greenhouse farming. All of
    these could cause problems or malfunction in agricultural operations by harming
    the IoT architecture’s hardware and software. In addition, data-collecting technologies
    face challenges from malicious assaults, unauthorized access, privacy breaches,
    and other issues. The landscape has shifted, with AI and ML research concentrating
    on agro-based contexts, water management, livestock, and farmlands. Monitoring,
    control, and decision-making alternatives in the irrigation field repeatedly tried
    to save water and enhance productivity [8,9,10,11,12,13]. Some research concentrated
    on plant leaf disease [14], horticulture [15], vineyards [16], hydroponic [17],
    alert facilities [18], integration of IoT technological innovations [19], tracking
    resources [20], and cloud control [21]. 2.2. IoT in Agriculture 4.0 Table 1 lists
    several well-known uses of IoT integration and utilization in agriculture. Table
    1. Use of IoT in agriculture and corresponding studies. Intelligent soil cultivation
    system: This system would plow, weed, prepare the seedbed, and sow the field soil
    in order to prepare it for harvest. Efficient irrigation mechanisms: This technology
    would automate the controlled artificial supply of water needed for plant growth.
    Smart fertilizer systems: These automate the application of fertilizer to a field
    while allowing for precise control over the kind, amount, and timing of fertilizer.
    Intelligent pest detection and treatment systems: These systems keep an eye out
    for pest infestations, analyze agricultural damage, and incorporate methods to
    manage the infestation. Intelligent livestock agriculture: This involves employing
    cutting-edge technologies to breed animals and uses precision agriculture to enhance
    the quantity and quality of the produce. Smart harvesting system: This system
    harvests a field effectively by using IoT-based methods. Smart farm management
    system: This kind of technology would aim to offer analytics on data to increase
    field productivity and yield. Intelligent groundwater quality management system:
    The final product is greatly influenced by the quantity and quality of the groundwater.
    As a result, this system uses IoT approaches to maintain appropriate groundwater
    levels. Though there are many smart agriculture alternatives, they are still underdeveloped
    and offer a low degree of intellect. Many initiatives are limited in their automated
    systems, with the internet of things sending data to the base station [53]. There
    is also no implementation with the Internet in several cases, except that in a
    few cases, data is stored in the cloud by the local systems. The multi-layer architecture
    of IoT used in agriculture 4.0 consists of four layers, which are the physical
    layer, network layer, edge layer, and application layer. Table 2 below gives a
    detailed description of Resources used in the multi-layered architecture of IoT
    in Agriculture 4.0 [54]. Table 2. Resources used in the multi-layered architecture
    of IoT in Agriculture 4.0. The RFID, cameras, actuators, GPS, and all these devices
    are all implemented in the physical layer, which collects data from the farming
    field and digitizes them using an Analog to Digital converter (ADC). As the equipment
    at the physical layer does not compute and store the data, this needs to connect
    with the edge layer through the network layer. The edge layer includes various
    resources such as decision-making, gateway, data filters, data security, and interfaces
    [55]. The advancement of devices and technological developments will allow for
    the incorporation of more computer capabilities into systems. This type of integration
    aims to meet the various needs of agricultural mechanization, farming techniques,
    and sustainable agriculture [56,57]. A further issue is data security. This is
    very important to focus on data privacy, the trustworthiness of data, and the
    correctness of data from generation to decision-making. 2.3. Research Motivation
    Three factors serve as inspiration for this article: Smart agriculture is a new
    paradigm that integrates information technology with conventional farming as a
    result of the low productivity of traditional agriculture and the extensive usage
    of information technology. It has the potential to become the next big thing in
    agricultural development. Consequently, it is crucial to outline the current manufacturing
    model and particular studies [58]. Despite substantial research on smart agriculture,
    less has been conducted in comparison to industrial security solutions to analyze
    security problems. It is crucial to examine the features of security concerns
    in relation to situations involving smart agriculture [59]. This article attempts
    to give a review of the security challenges raised by smart agriculture in light
    of the aforementioned variables, which inevitably results in a significant number
    of open research questions. 2.4. Research Contributions The research contributions
    of the paper are as follows: We go over the advantages of using IoT in the farming
    sector and outline some of the potential uses. We provide a layered approach for
    smart agriculture that can be applied to any precision agriculture application.
    We suggest an agricultural sensor data management system that can gather, analyze,
    visualize, and manage sensing data in real-time. We present a blockchain-based
    authenticity monitoring technique to prevent erroneous control and information
    delivery. To improve network management, we proposed a simulated switch that supports
    SDN technologies. We present experimental results with different case studies
    from an open-source IoT platform integrating Ethereum blockchain and SDN technologies,
    demonstrating the efficacy of the suggested security architecture. 2.5. Paper
    Outline In addition to the introduction, this paper mentions the overview of Agriculture
    4.0 in Section 2. Section 3 provides important security risks from a multi-layer
    perspective. Section 4 describes the current state of security research in Agriculture
    4.0. Section 5 presents the current scenario of security challenges in Agriculture
    4.0. Section 6 describes the proposed agricultural security framework. The experimental
    setup configuration and architecture along with the experimental results presented
    in Section 7. The use of 5G technology in the scenario of smart agriculture is
    described in Section 8. Finally, Section 8 concludes with future challenges in
    Agriculture 4.0. 2.6. Analytical Distribution of Referred Articles The referenced
    articles are compared in Figure 2 based on the place of publication. The distribution
    of cited articles by publication type is shown in Figure 2. Out of the total number
    of referred papers, 88 are original research articles from reputable journals,
    while 25 are from conferences. Figure 2. Types of Article distribution. The frequency
    of papers discussing the agriculture 4.0 system is depicted in Figure 3. Due to
    our interest in current technologies, we have assessed 20 papers that were published
    in 2018, out of which five articles are based on agricultural security issues.
    In contrast to the 19 research papers on the agriculture sector and security aspects
    from the year 2020 that we have cited, we have cited 18 publications from the
    year 2019. With the papers becoming publicly available from various reputable
    journals for reference, we studied 46 modern technology-based quality papers in
    smart agriculture along with articles on security challenges in 2021 and 2022.
    In order to be updated regarding the current tools and technologies in this era,
    we also referred few articles to be published in 2023. Figure 3. The total number
    of Related Research articles studied on Agriculture 4.0 and security challenges
    in Agriculture 4.0 from 2018 to 2023. 3. Agriculture 4.0 Security Threats in Multi-Layered
    Paradigm There are several security issues in agriculture 4.0, starting from Storing
    data, processing data, and transmitting it through Internet connectivity. Figure
    4 shows security risks in the intelligent agricultural system in a multi-layered
    paradigm. Security issues can be either unintentional or sometimes known. Animals,
    farm laborers, and machine tools can all easily gain access to agricultural environments
    and cause problems [55]. Most of the security threats are very common, but there
    some are unique to others who function in harsh-field environments, such as Intelligent
    Agriculture. Figure 4. Security Risks at the multi-layered paradigm of IoT in
    agriculture 4.0. 3.1. Security Risks at the Physical Layer This is primarily concerned
    with physical equipment such as sensors and actuators. Physical devices can fail
    due to unintentional or intentional human behavior, viruses, spyware, or cyber-attacks.
    Smart farming applications use a wide range of sensors and technologies, and this
    diversity opens up several security risks, including the following: Random device
    incidents: This is the unintended alteration of physical equipment that causes
    it to deviate from its normal performance. The physical equipment may be damaged
    by farm machinery, causing short- or long-term physical damage, as a result, generates
    false data and affects data accessibility. Mobile node hijacking: It is the theft
    of farm equipment such as tractors, drones, and sowing robots. Drones can indeed
    be pesticides, fertilizers sprinkling could be performed by Drone, and robots
    could do weeding detecting disease. The intruder may access and use the farm equipment
    remotely without having access permission. Fake node: An intruder introduces imitation
    or harmful nodes into the automated agriculture field to disturb the smooth functioning
    of the system [55]. This attack could be triggered by capturing a node and making
    a replica of it. This type of attack typically aims to either alter or modify
    data-shuttered devices and applications. Abnormal Measurement: It senses unusual
    observations due to data falsification, energy exhaustion, radio radiation, detection
    of various connections, extreme storms, malfunctions, or wrong inputs. Incorrect
    data can jeopardize making decisions that result in the analysis of data will
    be inaccurate, which minimizes system correctness. Sleeplessness attack: The sleeplessness
    attack sends a series of seemingly legitimate requests in order to keep the devices
    awake for prolonged life. As a result, the device’s battery runs out, and the
    device stops working [56,57]. When the devices are turned off, the observed information
    is not properly sent, jeopardizing decision-making and system efficiency. 3.2.
    Security Risks at Network Layer The objective of this layer is to send the generated
    data by the sensors from the physical layer to the most trustable computational
    unit, which is the cloud. The most common attacks, which affect the resources
    used in the network layer, are focused on [58,59]. The security risks in network
    layers are: Distributed Denial of Service (DDoS): It attempts to affect access
    to service providers by overburdening the communication link or manipulating protocol
    flaws, which cause resources, such as CPU and memory collapse [60]. Due to resource
    exhaustion brought on by a DDoS attack, the victim server is forced to block connections
    from new reliable clients. The victim server’s buffer capacity or bandwidth may
    have reached its limit of resources. The overall probability of resource scarcity
    at the target end is provided by Equation (1) [15]. 𝑃 𝐴𝑡𝑡𝑎𝑐𝑘 =1−(1− 𝑃 𝐵𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ
    )(1− 𝑃 𝑚𝑒𝑚𝑜𝑟𝑦 ) (1) where, 𝑃 𝐴𝑡𝑡𝑎𝑐𝑘 : Probability of total attack, 𝑃 𝐵𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ
    : Probability of Consumption of bandwidth 𝑃 𝑚𝑒𝑚𝑜𝑟𝑦 : Probability of Consumption
    of memory Attacks on Data Transit: These types of attacks aim to retrieve information
    shared between network devices in order to obtain confidential information [61].
    An adversary could intercept traffic via malicious routers or man-in-the-middle
    attacks [62]. Interception of traffic reveals confidential data such as private
    keys, access credentials, or digital signatures. Attacks on Routers: They plan
    to change network routes in order to gain traffic control. Inimical nodes in IoT
    networks might attempt to reroute communicating paths during the process of transmission.
    As a result of attacks, the receiver might receive information lately, partially,
    or incorrectly, or not at all [63,64]. Malware Injection Attacks: The malware
    injection attack [34], in which malware is injected by an attacker into a connected
    computing device. This is a very common attack on smart farming. Malware is a
    very significant threat in distributed projects because it automatically spreads
    through the system, making it an appealing target for intruders. Malware damage
    comes in multiple varieties of sizes. Malware can steal data about farm material
    usage, buying information for fruits, vegetables, and farm animals, data about
    farm equipment, and so on. It could hire automated devices to form a botnet that
    would be used to commit harmful attacks under the influence of an intruder. Botnet:
    At each architectural layer of the precision farming system, there are numerous
    IoT devices. These machines are vulnerable to attack and could be taken over by
    a centralized malicious system. This results in a ‘Botnet of Things’ (BoT) [35].
    A mutant farm workforce IoT equipment that is already infected [36] is easily
    used to infect other networks via various communication links, and thus automated
    farming could become an internet of destructibility for cyber illegitimates. The
    security features are not added in many of the Precision agriculture devices,
    but still, they are used frequently for establishing adequate data security defensive
    system frameworks. 3.3. Security Risks at Edge Layer The edge contains important
    aspects that monitor, and control modules communicate with all layers and access
    resources. The physical layer’s large volumes of data can be processed locally
    rather than centralized in the cloud. The following are major edge security issues.
    Actuator control Forge: It introduces false measures of data into the system in
    order to manipulate it. Typically, the data is received by the gateway in plain
    text. Corrupted data will lead to poor decision-making. An opponent, for example,
    could inject incorrect soil moisture measurements into a smart irrigation system
    to manipulate it. Booting Attacks: Devices are vulnerable to attacks due to a
    lack of security processes during boot [37]. Memory cards and flash drive sticks,
    for example, may detect dangerous codes which run at startup [38]. Suspicious
    booting practices could launch numerous attacks on the edge with insufficient
    protection. Signature wrapping: The attacker modulates the cipher text by inserting
    a bogus element that allows you to perform a random Web Application requisition
    while identifying as an authenticated user [39]. Measure infusion Forgery: It
    is the injection of wrong specifications into a system in order to modify it.
    An attacker sends known data patterns through actuators to the cloud storage,
    which is then injected into the system through computational units. Corrupted
    data could lead to poor decision-making. Unauthorized access: The process of validating
    is a critical security component. The authentication process is a technology that
    ensures security and privacy, honesty, and accessibility [40]. Several agricultural
    practices, however, use gateways with insufficient or no access controls. Gateway-cloud
    fabrication: The cloud and the gateway are linked by ISPs or wireless connections.
    A network attacker could fabricate cloud requests by interrogating a gateway.
    The attacker could use these requests to change parameters in precision agriculture,
    control queries for sensitive services, or interpret system equipment. The cloud
    can implement security services as it has computational power. In order to ensure
    maximum system reliability, these strategies must be incorporated into the system.
    3.4. Security Risks at Application Layer This layer provides end-user assistance
    and data to process and make system decisions. This layer’s security concerns
    are application-specific, focusing on preventing data theft and ensuring privacy.
    Some of the attacks that might affect cloud services and applications are listed
    below in terms of security. Malicious scripts: Malicious scripts can deceive clients,
    infuse malicious data, access confidential material, and compromise security features.
    This type of attack is frequently carried out by cybercriminals for specific,
    economic, or political reasons. They can damage or destabilize operational processes
    by using malicious scripts, presenting unnecessary ad campaigns, and stealing
    money [41]. Phishing: It is an attack that attempts to obtain highly classified
    personal information, such as an Identity and password, fraudulently. Phishing
    typically targets end-users through fraud and sites [42]. The attacker also affects
    decision-making and internal operations in many cases. The most effective protection
    would be for users to remain vigilant while surfing the web [43]. Denial of Service
    (DoS): This threat disrupts service by overburdening traffic on the network or
    flooding the provider with repeated attempts [44]. Because of flaws in security
    setup, an attacker can launch this attack from the Web or a sub-system. 4. Security
    Threats in Modern Agriculture Farmers typically carry out the developed smart
    system initiatives in physical fields or green fields. In Agriculture 4.0, most
    efforts are focused on water processes, disease monitoring, seed production, and
    record keeping. It can be either automatically controlled or manually controlled.
    In both cases, the system monitors the environment with sensors and changes it
    with actuators. Some initiatives only digitize farms, whereas others incorporate
    industry 4.0 or IoT technologies. As an immature industry, open-field agriculture
    is the focus of this work, with security issues restricted to access control and
    web-encrypted communications. It is too difficult to execute different security
    measures in rural areas since there is a shortage of modern technical infrastructure
    and advanced technology. Many difficulties can arise if security measures are
    attempted in rural agriculture. Table 3 lists a few of the security challenges
    that are prevalent in rural locations. Table 3. Rural-Agriculture Security Issues.
    Recently most of the agriculture 4.0 projects have implemented IoT, but the security
    features in that have become disabled by default. It has been introduced that
    a server controls and manages these devices remotely via a web application. Opportunistic
    opponents did not know details about security resources. They gain unauthorized
    access to the system, insert fabricated measures, fabricate actuator controls,
    or report earlier attacks to divert the system from its normal functioning [45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64].
    The author proposed a smart watering system that remotely controls and observes
    the flow of water in the farm but is not focused on security risks to detect malicious
    attacks and unallowed access that manipulate the monitored data. To monitor the
    growing environment, ref. [65] introduce a Hydroponic Farming Ecosystem (HFE).
    It is automatically controlled, and the client can monitor the farming via a web
    interface. These automated systems require high-security concerns to detect or
    avoid random sensor incidents, weak sensors, wrong data injection, and other attacks,
    which could corrupt data and affect system reliability. Similarly, in [66], the
    author focused on creating a system for monitoring fields based on humidity, soil
    moisture, light levels, and temperature. Irrigation can be controlled manually
    or automatically via web or mobile systems. An intelligent solution for detecting
    diseases in leaves focused in [67]. By using sensor data and camera images, the
    system identifies leaf diseases. A mobile or web application is used by the end-user
    to interact with the system. This paper does not go into detail about the implementation
    of security. Similarly, ref. [68] proposed an intelligent agricultural system
    for information interchange among farm equipment. The article discusses the system’s
    construction but makes no mention of manual intervention or remote control, nor
    does it concern any security challenges. As this is a data exchange system, the
    DoS attack can affect the network layer. Ref. [69] provides NETPIE, a solution
    that gives agricultural product information. The growing environment can be controlled
    and monitored with a set of physical devices. The generated data is analyzed saved
    in a QR code, and which is then available to the customer. NETPIE does not discuss
    security resources. Ref. [51] Introduced monitoring of crop fields and watering
    using IoT, which measures data and controls data to avoid unauthorized access
    to these data but could not protect the other devices, which leads to weak security,
    which might result in a major loss. Ref. [52] Proposed a system known as SEnviro,
    which observes the crop field and detects diseases remotely. This system does
    not focus on the prediction of disease, but unauthorized access is controlled
    here. According to the relevant literature, from a security standpoint, farming
    equipment is used without security features. Furthermore, the gateway contains
    no security information. Transmission privacy or device authentication is not
    presented in any of the above-discussed systems. Access control and management
    and encryption of data need to add security technologies to Information dissemination.
    Smart agriculture is currently a convenient target for cyber criminals’ agents.
    Attacks can be motivated by a variety of factors, including an advertisement,
    intellectual, or even terrorist reasons. Terrorist groups, for example, can cause
    ecological loss to a country, economic chancers may take part in market manipulation,
    and workers can attack a range of factors [53]. 4.1. Data and Device Security
    Issues and Threats in Agriculture 4.0 As was previously mentioned, harsh environmental
    factors that can seriously harm electromechanical equipment, such as extreme heat,
    moisture, moisture, shocks, and other anomalies, have a direct impact on the agricultural
    sector [70]. The majority of these sensors are prone to failure, making it feasible
    for them to produce inaccurate data and instructions that could cause a manufacturing
    disaster [71]. Additionally, sensors and network equipment are predominance reachable.
    This poses a serious risk to farmlands since anybody with bad intentions can access
    them and corrupt or harm them to cause them to malfunction [72]. Another potential
    security concern is the online transfer of the information gathered by IoT sensors
    and other agricultural machines. Major security concern in the agriculture industry
    is security, privacy, and control [73], as farmers may incur a significant financial
    and personal loss in the event of a data breach. Ref. [74] Divides the threats
    to confidentiality into four distinct categories: Intentional data theft through
    smart platforms and applications that do not adhere to security and privacy standards;
    Internal information thefts from a stakeholder in the supply chain intended to
    harm an agri-business or a farmer; Unethical data sales intended to reduce profits
    for farmers or to harm them; and other threats. Unsupervised foreign access to
    private and sensitive information using drones, sensors, and cameras with the
    intention of utilizing them to harm farmers or jeopardize public safety [64,75].
    Every application of modern technology, IoT in agriculture, carries the aforementioned
    dangers, weaknesses, and threats. A more thorough and complex explanation of the
    risks and their sources in aspects of cyberattacks in the agro sector is provided
    in the following paragraph, which is primarily focused on illegal behavior and
    exploited vulnerabilities in ICT systems. 4.2. Cybercrime and Cybersecurity in
    Agriculture A cyber-attack on an agribusiness or food industry is increasingly
    likely today thanks to automation and the widespread use of internet-connected
    equipment, which give potential (cyber) criminals greater chances in fields that
    were previously too remote or difficult to physically access [61]. Consequently,
    a potential cyber-attack or security problem in an agricultural organization could
    have serious human or financial repercussions. This implies that pertinent security
    concerns brought about by the widespread and ongoing usage of IoT, as well as
    the emergence of agro-terrorism, require adequate attention, better equipment,
    and solutions [62]. The bulk of system operations in the agriculture sector are
    network-based, and frequently these systems are not protected from cyber threats,
    which can have substantial financial and security ramifications [76,77,78,79,80,81,82,83,84,85,86].
    Five important elements, as identified in [87], strengthen these risks in the
    agricultural sector: Increasing the farm consolidation highly depends on technology;
    The joint ventures of the food supply chains, allow manufacturers to conduct processes
    and trade products directly; Food-related technologies in intelligent markets
    depend on more components, which increases their vulnerability to errors and malfunctions.
    Effective monitoring of food-related systems, social networks, and industries
    in a safe, dynamic, and almost real-time manner is lacking, making it difficult
    to identify serious digital and security vulnerabilities that could be the root
    of significant data breaches and system defects. Due to the heightened risk of
    cybercrime, the agriculture sector may be impacted by such threats in a number
    of ways. Categorize these methods as in [84]. Threats of tampering include delivery
    disruption, confidential information interception, formula modification, and delivery
    disruption. These risks are undoubtedly closely related to the adoption and application
    of technological advancements in the agriculture and food sectors. Cooper et al.
    and Bogaardt et al. identify the following as the primary technical advancement
    areas that are commonly used in the agri-sector and contain vulnerable places
    for harmful cyber-attacks [86,87,88]: Radio Frequency Identification (RFID); wireless
    communications (such as Wi-Fi); Sensors for the infrastructure, soil, and crops;
    Drones and other unmanned aerial vehicles (UAVs); PA-specific automation solutions
    (such Real Time Kinematic Technology); Portable electronics (such as laptops,
    smartphones, and GPS trackers); Smart agriculture and vertical agriculture; The
    use of AI in conjunction with biotech and nanotech (AI). Table 4 provides a summary
    of the study performed on different attacks in agricultural 4.0 due to cyber security
    concerns. Table 4. Summary of the study performed on attacks in agricultural 4.0.
    4.3. IoT Vulnerabilities, Risks, and Threats in Agriculture IoT is made up of
    four main systems that make it possible to communicate between nodes. Sensing
    technology, IoT gateways, cloud servers, data storage, and mobile applications
    for remote control make up an IoT system. The architectures of IoT systems in
    agriculture come with current and new threats and vulnerabilities. These flaws
    can be linked to IoT device hardware and software problems, communication protocols,
    and also data processing and storage solutions (found, for example, in cloud infrastructures,
    data centers, and smartphones) [2,11]. According to [99,100,101], the following
    is a concise but accurate classification of the primary causes of low security
    in the IoT: Firmware that is not patched and/or default passwords that have been
    used for a long time allow for device compromise in an IoT network. Because of
    the limited computing power of smart devices and vendors’ efforts to keep their
    prices low in a cutthroat market, it is difficult to incorporate complicated cryptographic
    algorithms. Flaws in the routing protocols used by smart devices (such as Bluetooth
    and ZigBee); The Wi-Fi Protected Access (WPA) protocol’s outdated, low-security
    version, which is frequently still in use; Conducting passive vulnerability detection
    using search engines; The risk of assembling millions of smart devices into a
    potent botnet (such as Mirai), given how simple it is to find vulnerabilities
    via internet scanning; A general disregard for the security of smart gadgets Finally,
    a variety of criteria can be used to categorize IoT vulnerabilities, hazards,
    and threats. These risks apply to all IoT applications, including those in the
    agricultural sector. First, internal vs. external risks and passive vs. active
    risks are the two basic classification groups of security concerns in IoT systems
    in the agriculture sector [79]. IoT hazards are categorized in another intriguing
    way using a layer-based system. According to [22], each of the levels below integrates
    many technologies that could lead to a variety of security threats, vulnerabilities,
    and/or breaches. The application layer, middleware layer, internet layer, access
    gateway layer, and edge technology layer are the five main layers that make up
    the IoT architecture. 5. Existing Research on Security in Agriculture 4.0 In [54],
    the author states that The United States Department of Homeland Security issued
    a report emphasizing the significance of agriculture 4.0 and the associated internet
    security threat and possible attacks. The report emphasizes the information security
    model of confidential information, credibility, and accessibility in farming.
    The researchers of [55] suggested a new access control solution that combines
    session keys and public keys to speed up the encrypted communications tasks. It
    yields quick and lightweight appropriate control measures that are ideal for precision
    agriculture communication. Ref. [56] Proposed a framework for understanding vulnerabilities
    in emerging technologies and their application in an intelligent farming environment.
    The goal of the approach is to determine the level to which intelligent farming
    emerging innovations are prone to cyber. It assesses the threat prediction model
    using the common vulnerability scoring system (CVSS). Nowadays, The Blockchain
    is not only used in cryptocurrency but also utilized in other fields and different
    applications such as in the medical sector, agriculture sector, etc. [57,58,59].
    This article concentrated on the application of blockchain technology to food
    safety. For tracking and monitoring the food items and stages of production, such
    as cultivation/breeding, raw resources, processing, transporting, warehousing,
    and selling, the author developed a system [60]. In addition, the system employs
    a variety of sensor-based equipment to adopt sustainable recording and confirmation
    with sensor-based verification. Ref. [61] Proposed a blockchain-based easy and
    simple security framework for smart Greenfield farming. Each IoT node can nominate
    the cluster member’s leader, which helps to avoid a hot spot problem if an intruder
    focuses on the leader node. Furthermore, the authors discussed the security risks
    of their suggested scheme, which adhered to the traditional confidentiality, integrity,
    and availability principles. Ref. [62] proposed a cost-effective IoT-based security
    monitoring system. The physical layer is the primary concern of this system of
    precision agriculture, where data are collected from sensors. These data are sent
    to a controller, which analyses it to take action, such as activating the actuators
    for water sprinklers on farms. Table 5 describes some of the recent research which
    has already been performed on security issues related to smart farming. Gupta,
    M et al. explained [102] the necessity of clouds applied in vehicles in this time-
    and location-sensitive context and present an extended access control oriented
    (E-ACO) architecture that is pertinent to IoV. Here, they describe using scenarios
    to highlight access control needs in our vision of cloud-assisted connected automobiles
    and vehicular IoT, as well as approaches to various access control models that
    may be applied at different tiers of the E-ACO architecture and in the authorization
    framework. Gupta, M et al. [103], in their work, describe an edge infrastructure-based
    solution to V2V and V2I communication that is safe and trustworthy in place of
    direct peer-to-peer connection. To approve, check, and verify the authenticity,
    integrity, and anonymity of communications sent in the system, they add trusted
    cloudlets in this section. Along with a proof of concept implementation of the
    suggested approach on the AWS IoT platform, they also describe a formal attribute-based
    model for V2V and V2I communication, known as AB-ITS. This cloudlet-supported
    architecture supports crucial use cases such as an accident or ice-threat warning
    and other safety applications. It supplements direct V2V or V2I communication.
    Sontowski, S. et al. [104] presented a DoS attack that can impair a smart farm’s
    operation by interfering with the functioning of installed on-field sensors. They
    specifically covered a Wi-Fi de-authentication attack that makes use of flaws
    in IEEE 802.11, where the management packets are not encrypted. A development
    board for the ESP8266 maker focus When a Raspberry Pi is attached, WiFi Deauther
    Monster is used to disconnect it from the network and stop sensor data from being
    transferred to a distant cloud. The notion of Activity-Centric Access Control
    (ACAC) for smart and connected ecosystems was first proposed by Gupta, M. et al.
    in [105] and discussed in this article as a first step. Here, they examined the
    idea of activity with regard to cooperative and dispersed yet interconnected systems,
    identifying the many parties involved as well as the crucial elements to consider
    when making an activity control choice. They provide an initial framework for
    developing activity control expressions that may be used by various smart objects
    in the system. The biggest obstacle to the growth of cloud computing is security
    worries. Information security continues to have an impact on the market even though
    it raises inconveniences related to information security. The threat of security
    breaches in the cloud infrastructure must be understood by clients. Cloud-computing
    capacity, networking, and computing powers are brought to the edge by fog computing.
    One of the most critical challenges with fog computing platforms is safety and
    security. Lightweight devices have benefited greatly from edge computing’s ability
    to complete difficult tasks quickly, but the technology’s hasty development has
    led to a general disregard for safety risks in edge computing stages and the applications
    they allow. In our proposed framework we have focused on the threats in fog computing-based
    IoT environment via blockchain for the application in agriculture 4.0. Table 5.
    Related Research performed on Security issues in Agriculture 4.0.               6.
    Proposed Security Framework The proposed security framework for agriculture 4.0
    is described in this section. The block diagram of the proposed security framework
    is illustrated in Figure 5. Figure 5. Proposed Security Framework. 6.1. Sensor
    Layer in Agriculture 4.0 This layer’s major function is to acquire meaningful
    information from the external environment via sensors to take required action
    against it. This sensor layer has a variety of Sensor nodes of various forms and
    sizes. As a result, they all use the same basic components, such as input and
    output components, information handling units, communication segments, and many
    more units for the management of power sections. To analyze and store all detected
    data, it is sent to the relevant fog nodes. Furthermore, Sensor nodes receive
    instructions to undertake agricultural operations. 6.2. Fog Computing Layer This
    layer is made up of multiple fog nodes, which are insubstantial equipment that
    carry out processing, communication, and storing tools to do operations that an
    end device cannot perform. Not every piece of data that is gathered becomes processed
    on the cloud. Rather, this layer hosts all authentic analysis and latency-sensitive
    applications. Virtualization: Recognizing that configuring several devices, in
    the same manner, might be time-consuming, the nodes can be contained inside a
    Virtualized environment for a more pleasant setup for all subsequent fog nodes.
    Agricultural Sensor data monitoring: This node is going to collect real-time sensing
    data, analyze it, visualize it, manage devices, and store some of it locally.
    The user can obtain information from the fog layer while smoothly synchronizing
    cloud-directed data. Block-chain Client software: This consists of a piece of
    programs that is installed on the fog node. Its primary goal is to sync authentic
    sensitive Sensor data to the Blockchain. It is in charge of producing transactions,
    batching them, and sending them to the validator so that they can be aggregated
    into blocks and recorded to the Blockchain. Simulated Switch: Additionally, this
    node is used as a transmitting device with the support of virtual switch software,
    which provides NFV and SDN technologies to enhance network services by establishing
    the routing features for computational extension and control. Some network virtual
    functions include security, quality of service (QoS), and automated control. The
    main objective is to create switching layers for virtual machine environments
    while continuing to support the OpenFlow protocol [107], which allows this node
    to interact directly with the SDN Controller; an outstanding demonstration of
    such implementation is Open vSwitch, an interactive multilayered software switch.
    6.3. Distributed Network Using SDN This network is made up of numerous geologically
    dispersed and SDN controllers linked to it that operates as a common Networking
    Operating System (NOS), combining nominally autonomous operations with centralized
    control [108]. The main component of an SDN network is the SDN controller. This
    can help with network monitoring by managing all transactions among network and
    application devices, allowing it to manage and adjust network flows more efficiently
    in response to new requirements [109]. It maintains a consistent glimpse of the
    network from afar, delivering data to fog nodes via one APIs and application via
    other APIs (MQTT, CoAP...) [109]. In addition, the SDN controller employs a Block-chain
    contractor to properly secure flow tables of SDN in the Block-chain, hence avoiding
    rule counterfeit. 6.4. Block-Chain Based Network To keep all the nodes up to date,
    all Blockchain modules are interconnected and constantly exchange the most updated
    information in the Blockchain among themselves. Smart contracts will trigger and
    enforce relevant actions based on the data provided, allowing for verifiable transactions
    in the Blockchain when such circumstances are met without the requirement for
    third-party involvement [110,111]. The Ethereum Blockchain platform serves as
    the foundation for the blockchain network architecture because it provides a highly
    flexible and modular design that separates the runtime environment as per the
    application domain, permitting agreements to define the business rules for the
    application that are not necessary for the core system’s fundamental design. The
    Blockchain complete node is made up of the following components: Node for Validation:
    This is a key component that verifies batches of transactions before combining
    them into blocks. It also ensures that candidate blocks are added to the Blockchain
    version for each node. Blockchain Software: it determines which transactions or
    operations are permitted on the block-chain and contains the following: Database
    model: it defines relevant operations and the description of the transaction’s
    payload. Transaction Processor: defines the business logic for different applications,
    validates batches of transactions, and modifies the blockchain system based on
    the application’s rules. Client: it specifies the service client functionality,
    which the client develops and delivers to the validator. The client also shows
    blockchain information. REST API: This protocol is used to communicate within
    the clients and the transactions processing system. Digital Signature: To ensure
    transaction integrity, the data used in the transactions is hashed using SHA-256
    and then encrypted using the sender’s secret key to produce a signature. The processor
    then validates the transaction by verifying this signature. 7. Case Studies and
    Experimental Results To test the security framework, we allowed DDoS attacks against
    the Blockchain Network. A distributed denial-of-service (DDoS) attack targets
    websites and servers by disrupting network services. A DDoS attack attempts to
    exhaust an application’s resources. We provide an experimental setup configuration
    shown in Table 6, as well as the simulation architecture is shown in Figure 6.
    Figure 6. Experimental Setup Architecture. Table 6. Experimental Setup Configuration.
    Host Machine (HM): Here we have installed an open-source based IoT framework called
    ThingsBoard, which make it possible to construct fog layers while seamlessly syncing
    with the cloud, on the host system and constructed a scenario of a smart farm
    with two silos, each with a different number of IoT devices. Every second, each
    gadget reports a pseudo-random value. We utilized a code to simulate a Blockchain
    client, which accepts the provided values and generates transactions. Mininet
    network emulation tool is then used to commit the transaction onto the Blockchain
    via the Open vSwitch module. We also connected the ONOS SDN controller and sFlow4
    collector to the Mininet virtual network. Virtual Machine (VM): We have installed
    the Ethereum Blockchain network and its Supply Chain AssetTrack application in
    the Virtual Machine. To keep records of their updated information, we formed a
    user for the host system (fog node) and various assets. Every reported value will
    be used by the blockchain client to update the specified asset in the Ethereum
    blockchain. To put our framework architecture to the test, we conducted three
    case studies. Case 1: We examined the platform’s usual workflow, which means we
    did not conduct any attacks on the Ethereum blockchain. Case 2: Using the Hping
    programme on the host PC, we launched a DDoS assault on the Blockchain network.
    We implemented a DDoS mitigation programme on the SDN controller. Case 3: We launched
    a DDoS attack against the Blockchain network, by turning off the DDoS mitigation
    programme in the SDN controller. During the simulation, we noticed two crucial
    metrics in each case: The number of network packets received by the Blockchain
    per minute. The number of transactions published in the Blockchain network. The
    results are shown in Figure 7 and Figure 8, respectively. Taking the case 1 findings
    as ideal, with 120 published transactions in 10 min at an average of 100 Kbps;
    the third scenario revealed a really dismal performance with about 45 published
    transactions, representing a loss of more than 60% compared to the 1st case, and
    an unreliable Blockchain network. To understand the outcomes of the second scenario,
    we must first recognize what took place in the network during the test. The Open
    vSwitch sends all network traffic data to the sFlow forecast system, a real-time
    reporting system that gives real-time notice of network assaults, involving attackers
    and target information, to the SDN controller security framework via commands.
    The SDN controller interacts with the switch to discard DDoS traffic while allowing
    valid traffic to continue through. The attack is stopped fast enough to prevent
    it from rapidly growing and resulting in 95 blocks published, which is approximately
    40% more than the 3rd case. Figure 7. Number of packets received by Blockchain
    per minute. Figure 8. Number of transactions published in Blockchain per minute.
    8. Smart Agriculture 5.0 With 100 times faster upload and download speeds than
    “fourth generation of mobile technology (4G)” and “fourth-generation long-term
    evolution (4GLTE)” technologies and latencies as low as 1 ms, the “5th generation
    mobile network (5G)” is a new technology for wireless that can connect a million
    gadgets per square kilometer. In order to exchange data effectively, the millions
    of smart gadgets that make up the precision agricultural networks must be connected
    to one another over a given piece of land. Therefore, the Agriculture 4.0 scenario
    is particularly well adapted to 5G technology [112,113,114]. A framework for the
    digitization of agriculture networks and function modules for an intelligent irrigation
    system was provided by Meng and Cheng [115]. Tao and Donglin [116] also investigated
    how 5G technology may be used for agricultural planting, livestock farming, and
    traditional farming growth [117,118,119,120,121]. 9. Conclusions Modernization
    of agricultural methods is required to increase productivity levels while conserving
    nature. Precision agriculture could improve farming works by controlling actuators
    more efficiently, enhancing the use of resources, increasing revenues, and minimizing
    expenses. In order to accomplish this objective, IoT technologies have to incorporate
    more computing performance, such as edge computing, big data handling, automated
    resources, and safety features. As limited devices sense a huge amount of data
    and forward it to the gateway or the cloud, security requires special attention.
    The data must be secured throughout the agricultural system, from diagnosis to
    risks and inventory. Even though numerous security issues may affect farming production,
    they still include a few security measures. This could be because these technologies
    were in their initial phases of development. For most of the points, only computing
    resources are incorporated, and that has limited computation power. As a result,
    security mechanisms are very rare in the current list of requirement specifications.
    Reaching a higher level of agricultural development, on the other hand, necessitates
    technologies with security features that provide enough quality and validity to
    incorporate these technologies on a high level. As precision agriculture introduces
    new complexities, it also opens up new future directions in security and other
    areas. In this study, we suggested a security framework for the agricultural internet
    of things that integrates blockchain technology, fog computing, and software-defined
    networking. The suggested architecture avoids the requirement for simulation-based
    work with both private and public blockchain for communication between SDN controllers
    and IoT devices. Here, for IoT connectivity, each SDN controller is linked to
    a blockchain. SDN controllers are interconnected by a network’s topology. One
    of the key objectives of the proposed architecture is to enhance communication
    security for IoT devices. For IoT devices with limited resources, distributed
    trust-based verification makes blockchain even more useful. With a focus on fixing
    security and data reliability issues in a distributed controller context. Additionally,
    we want to increase the accuracy of our system using machine learning methods.
    It might be significant to add an intrusion detection system utilizing various
    deep learning algorithms in future work to prevent the insertion of fake Sensor
    data in the intelligent agricultural field. Author Contributions Conceptualization,
    S.P., S.D. and S.R.; methodology, S.P., M.A. (Majed Alowaidi), S.D. and P.P.M.;
    software, S.P., S.R., M.A. (Majed Alowaidi), P.P.M. and H.A.; validation, M.A.
    (Mohamed Alshehri), S.R. and H.A.; formal analysis, S.P., S.D., M.A. (Mohamed
    Alshehri) and P.P.M.; writing—original draft preparation, S.P., S.D. and P.P.M.;
    writing—review and editing, M.A. (Mohamed Alshehri), S.R. and H.A. All authors
    have read and agreed to the published version of the manuscript. Funding The author
    would like to thank Deanship of Scientific Research at Majmaah University for
    supporting this work under Project Number No. R-2023-67. Institutional Review
    Board Statement Not applicable. Informed Consent Statement Not applicable. Data
    Availability Statement Research data are not shared. Conflicts of Interest The
    authors declare that they have no conflict of interest. References Vangala, A.;
    Sutrala, A.K.; Das, A.K.; Jo, M. Smart Contract-Based Blockchain-Envisioned Authentication
    Scheme for Smart Farming. IEEE Internet Things J. 2021, 8, 10792–10806. [Google
    Scholar] [CrossRef] Abbasi, R.; Martinez, P.; Ahmad, R. The digitization of agricultural
    industry–a systematic literature review on agriculture 4.0. Smart Agric. Technol.
    2022, 2, 100042. [Google Scholar] [CrossRef] Akinwumi, S.A.; Ezenwosu, A.C.; Omotosho,
    T.V.; Adewoyin, O.O.; Adagunodo, T.A.; Oyeyemi, K.D. Arduino Based Security System
    using Passive Infrared (PIR) Motion Sensor. In IOP Conference Series: Earth and
    Environmental Science; IOP Publishing: Bristol, UK, 2021; Volume 655, p. 012039.
    [Google Scholar] Albiero, D.; Paulo, R.L.D.; Félix Junior, J.C.; Santos, J.D.S.G.;
    Melo, R.P. Agriculture 4.0: A terminological introduction. Rev. Ciência Agronômica
    2021, 51, e20207737. [Google Scholar] [CrossRef] Altalak, M.; Ammad uddin, M.;
    Alajmi, A.; Rizg, A. Smart Agriculture Applications Using Deep Learning Technologies:
    A Survey. Appl. Sci. 2022, 12, 5919. [Google Scholar] [CrossRef] Andrade, R.;
    Ontaneda, N.; Silva, A.; TelloOquendo, L.; Cadena, S.; Quiroz, D.; Fuertes, W.;
    Nacional, E. Application of Big Data Analytic in Cybersecurity. In Proceedings
    of the 2019 International Conference on Applied Cognitive Computing, Las Vegas,
    NV, USA, 29 July–1 August 2020. [Google Scholar] [CrossRef] Catalano, C.; Paiano,
    L.; Calabrese, F.; Cataldo, M.; Mancarella, L.; Tommasi, F. Anomaly detection
    in smart agriculture systems. Comput. Ind. 2022, 143, 103750. [Google Scholar]
    [CrossRef] Dash, S.; Panda, R.; Padhy, S. Blockchain-based intelligent medical
    IoT healthcare system. SPAST Abstr. 2021, 1, 2190. Available online: https://spast.org/techrep/article/view/2190
    (accessed on 22 April 2022). Ferrag, M.A.; Shu, L.; Djallel, H.; Choo, K.K.R.
    Deep learning-based intrusion detection for distributed denial of service attack
    in Agriculture 4.0. Electronics 2021, 10, 1257. [Google Scholar] [CrossRef] Boghossian,
    A.; Linsky, S.; Brown, A.; Mutschler, P.; Ulicny, B.; Barrett, L. Threats to Precision
    Agriculture; Technical Report; US Department of Homeland Security: Washington,
    DC, USA, 2018; p. 20181003a. [Google Scholar] [CrossRef] Shu, L.; Hancke, G.P.;
    Abu-Mahfouz, A.M. Guest Editorial: Sustainable and Intelligent Precision Agriculture.
    IEEE Trans. Ind. Inform. 2021, 17, 4318–4321. [Google Scholar] [CrossRef] Javaid,
    M.; Haleem, A.; Singh, R.P.; Suman, R. Enhancing smart farming through the applications
    of Agriculture 4.0 technologies. Int. J. Intell. Netw. 2022, 3, 150–164. [Google
    Scholar] [CrossRef] Gzar, D.A.; Mahmood, A.M.; Al-Adilee, M.K.A. Recent trends
    of smart agricultural systems based on Internet of Things technology: A survey.
    Comput. Electr. Eng. 2022, 104, 108453. [Google Scholar] [CrossRef] Charatsari,
    C.; Lioutas, E.D.; Papadaki-Klavdianou, A.; Michailidis, A.; Partalidou, M. Farm
    advisors amid the transition to Agriculture 4.0: Professional identity, conceptions
    of the future and future-specific competencies. Sociol. Rural. 2022, 62, 335–362.
    [Google Scholar] [CrossRef] Singh, K.J.; De, T. Mathematical modelling of DDoS
    attack and detection using correlation. J. Cyber Secur. Technol. 2017, 1, 175–186.
    [Google Scholar] [CrossRef] Raj, M.; Gupta, S.; Chamola, V.; Elhence, A.; Garg,
    T.; Atiquzzaman, M.; Niyato, D. A survey on the role of Internet of Things for
    adopting and promoting Agriculture 4.0. J. Netw. Comput. Appl. 2021, 187, 103107.
    [Google Scholar] [CrossRef] Benavides, E.; Fuertes, W.; Sanchez, S.; Sanchez,
    M. Classification of phishing attack solutions by employing deep learning techniques:
    A systematic literature review. Dev. Adv. Def. Secur. 2020, 152, 51–64. [Google
    Scholar] [CrossRef] Singh, R.K.; Berkvens, R.; Weyn, M. AgriFusion: An Architecture
    for IoT and Emerging Technologies Based on a Precision Agriculture Survey. IEEE
    Access 2021, 9, 136253–136283. [Google Scholar] [CrossRef] Bernhardt, H.; Bozkurt,
    M.; Brunsch, R.; Colangelo, E.; Herrmann, A.; Horstmann, J.; Kraft, M.; Marquering,
    J.; Steckel, T.; Tapken, H.; et al. Challenges for Agriculture through Industry
    4.0. Agronomy 2021, 11, 1935. [Google Scholar] [CrossRef] Bolfe, E.L.; Jorge,
    L.A.C.; Sanches, I.D.; Júnior, A.L.; Costa, C.C.D.; Victoria, D.C.; Inamasu, R.Y.;
    Grego, C.R.; Ferreira, V.R.; Ramirez, A.R. Precision and digital agriculture:
    Adoption of technologies and perception of Brazilian farmers. Agriculture 2021,
    10, 653. [Google Scholar] [CrossRef] Chae, C.-J.; Cho, H.-J. Enhanced secure device
    authentication algorithm in P2P-based smart farm system. Peer-Peer Netw. Appl.
    2018, 11, 1230–1239. [Google Scholar] [CrossRef] Khalid, H.; Ikram, U.D.; Ahmad,
    A.; Naveed, I. An energy efficient and secure IoT-based wsn framework: An application
    to smart agriculture. Sensors 2020, 20, 2081. [Google Scholar] [CrossRef] Hassija,
    V.; Chamola, V.; Saxena, V.; Jain, D.; Goyal, P.; Sikdar, B. A survey on IoT security:
    Application areas, security threats, and solution architectures. IEEE Access 2019,
    7, 82721–82743. [Google Scholar] [CrossRef] Infosys Precision Crop Management
    Testbed. 2021. Available online: https://www.infosys.com/industries/agriculture/industry-offerings/precision-farming.html
    (accessed on 17 May 2022). West, J. A prediction model framework for cyber-attacks
    to precision agriculture technologies. J. Agric. Food Inf. 2018, 19, 307–330.
    [Google Scholar] [CrossRef] Jha, S.; Routray, S.; Ahmad, S. An expert system-based
    IoT system for minimisation of air pollution in developing countries. Int. J.
    Comput. Appl. Technol. 2022, 68, 277–285. [Google Scholar] [CrossRef] Rao, R.N.;
    Sridhar, B. IoT Based Smart Crop-Field Monitoring and Automation Irrigation System.
    In Proceedings of the 2018 2nd International Conference on Inventive Systems and
    Control (ICISC), Coimbatore, India, 19–20 January 2018; IEEE: Toulouse, France,
    2018; pp. 478–483. [Google Scholar] [CrossRef] Li, T.; Li, D. Prospects for the
    application of 5g technology in agriculture and rural areas. In Proceedings of
    the 2020 5th International Conference on Mechanical, Control and Computer Engineering
    (ICMCCE), Harbin, China, 25–27 December 2020; pp. 2176–2179. [Google Scholar]
    [CrossRef] Muragijimana, E.; Shankar, T.N.; Kumar, N.; Sah, B.; Padhy, S. Digital
    Crimes in Cloud Environment and the Analysis via Blockchain. In Proceedings of
    the 2022 IEEE 3rd Global Conference for Advancement in Technology (GCAT), Bangalore,
    India, 7–9 October 2022; pp. 1–6. [Google Scholar] [CrossRef] Lioutas, E.D.; Charatsari,
    C. Innovating digitally: The new texture of practices in agriculture 4.0. Sociol.
    Rural. 2022, 62, 250–278. [Google Scholar] [CrossRef] Lorencowicz, E.; Uziak,
    J. Selected Problems on Data Used in Precision Agriculture. In International Symposium
    on Farm Machinery and Processes Management in Sustainable Agriculture; Springer:
    Cham, Switzerland, 2023; pp. 217–226. [Google Scholar] Ferrag, M.A.; Shu, L.;
    Yang, X.; Derhab, A.; Maglaras, L. Security and privacy for green IoT-based agriculture:
    Review, blockchain solutions, and challenges. IEEE Access 2020, 8, 32031–32053.
    [Google Scholar] [CrossRef] Gupta, M.; Abdelsalam, M.; Khorsandroo, S.; Mittal,
    S. Security and Privacy in Smart Farming: Challenges and Opportunities. IEEE Access
    2020, 8, 34564–34584. [Google Scholar] [CrossRef] Shankar, T.N.; Padhy, S.; Ch,
    S.M.; Ravella, H.; Varun, M.; Kumar, N. Development of 6G web by Multilayer Perceptron
    in C-RAN for VANETs. In Proceedings of the IEEE Global Conference on Computing,
    Power and Communication Technologies, GlobConPT, New Delhi, India, 23–25 September
    2022. [Google Scholar] [CrossRef] Ganeshkumar, C.; David, A. Digital Information
    Management in Agriculture—Empirical Analysis. In Proceedings of the Third International
    Conference on Information Management and Machine Intelligence, Rajasthan, India,
    23–24 December 2021; Springer: Singapore, 2023; pp. 243–249. [Google Scholar]
    García, L.; Parra, L.; Jimenez, J.M.; Lloret, J.; Lorenz, P. IoT-based smart irrigation
    systems: An overview on the recent trends on sensors and IoT systems for irrigation
    in precision agriculture. Sensors 2020, 20, 1042. [Google Scholar] [CrossRef]
    [PubMed] Srivastava, J.; Routray, S.; Ahmad, S.; Waris, M.M. Internet of Medical
    Things (IoMT)-based smart healthcare system: Trends and progress. Comput. Intell.
    Neurosci. 2022. [Google Scholar] [CrossRef] Srivastava, J.; Routray, S. AI Enabled
    Internet of Medical Things Framework for Smart Healthcare. In Proceedings of the
    Innovations in Intelligent Computing and Communication: First International Conference,
    ICIICC 2022, Bhubaneswar, Odisha, India, 16–17 December 2022; Springer International
    Publishing: Cham, Switzerland, 2023; pp. 30–46. [Google Scholar] Rajasoundaran,
    S.; Prabu, A.V.; Routray, S.; Kumar, S.S.; Malla, P.P.; Maloji, S.; Mukherjee,
    A.; Ghosh, U. Machine learning based deep job exploration and secure transactions
    in virtual private cloud systems. Comput. Secur. 2021, 109, 102379. [Google Scholar]
    [CrossRef] Dash, S.; Padhy, S.; Azad, S.M.A.K.; Nayak, M. Intelligent IoT-Based
    Healthcare System Using Blockchain. Ambient Intelligence in Health Care. Smart
    Innovation, Systems and Technologies; Springer: Singapore, 2023; Volume 317. [Google
    Scholar] [CrossRef] Maffezzoli, F.; Ardolino, M.; Bacchetti, A.; Perona, M.; Renga,
    F. Agriculture 4.0: A systematic literature review on the paradigm, technologies
    and benefits. Futures 2022, 142, 102998. [Google Scholar] [CrossRef] Mahadik,
    S.; Pawar, P.M.; Muthalagu, R. Efficient Intelligent Intrusion Detection System
    for Heterogeneous Internet of Things (HetIoT). J. Netw. Syst. Manag. 2022, 31,
    2. [Google Scholar] [CrossRef] Mahalakshmi, M.; Priyanka, S.; Rajaram, S.P.; Rajapriya,
    R. Distant Monitoring and Controlling of Solar Driven Irrigation System through
    IoT. In Proceedings of the 2018 National Power Engineering Conference (NPEC),
    Madurai, India, 9–10 March 2018; IEEE: Toulouse, France, 2018; pp. 1–5. [Google
    Scholar] [CrossRef] Manesh, M.R.; Kenney, J.; Hu, W.C.; Devabhaktuni, V.K.; Kaabouch,
    N. Detection of GPS spoofing attacks on unmanned aerial systems. In Proceedings
    of the 2019 16th IEEE Annual Consumer Communications & Networking Conference (CCNC),
    Las Vegas, NV, USA, 11–14 January 2019; IEEE: Toulouse, France, 2019; pp. 1–6.
    [Google Scholar] [CrossRef] Manjunath, M.; Venkatesha, G.; Dinesh, S. Raspberry
    Pi Based Anti-Theft Security System using Home Automation for Multi-Level Authentication.
    Perspect. Commun. Embed.-Syst. Signal-Process.-PiCES 2021, 4, 249–253. [Google
    Scholar] Routray, S.; Ray, A.K.; Mishra, C.; Palai, G. Efficient hybrid image
    denoising scheme based on SVM classification. Optik 2018, 157, 503–511. [Google
    Scholar] [CrossRef] McCaig, M.; Rezania, D.; Dara, R. Framing the response to
    IoT in agriculture: A discourse analysis. Agric. Syst. 2023, 204, 103557. [Google
    Scholar] [CrossRef] Qureshi, T.; Saeed, M.; Ahsan, K.; Malik, A.A.; Muhammad,
    E.S.; Touheed, N. Smart Agriculture for Sustainable Food Security Using Internet
    of Things (IoT). Wirel. Commun. Mob. Comput. 2022, 2022, 9608394. [Google Scholar]
    [CrossRef] Rajasoundaran, S.; Prabu, A.; Routray, S.; Malla, P.P.; Kumar, G.S.;
    Mukherjee, A.; Qi, Y. Secure routing with multi-watchdog construction using deep
    particle convolutional model for IoT based 5G wireless sensor networks. Comput.
    Commun. 2022, 187, 71–82. [Google Scholar] [CrossRef] Roy, S.K.; De, D. Genetic
    Algorithm based Internet of Precision Agricultural Things (IopaT) for Agriculture
    4.0. Internet Things 2022, 18, 100201. [Google Scholar] [CrossRef] Martinho, V.J.P.D.;
    Cunha, C.A.D.S.; Pato, M.L.; Costa, P.J.L.; Sánchez-Carreira, M.C.; Georgantzís,
    N.; Rodrigues, R.N.; Coronado, F. Machine Learning and Food Security: Insights
    for Agricultural Spatial Planning in the Context of Agriculture 4.0. Appl. Sci.
    2022, 12, 11828. [Google Scholar] [CrossRef] Mourato, J.; Ferreira, L.P.; Sá,
    J.C.; Silva, F.J.; Dieguez, T.; Tjahjono, B. Improving internal logistics of a
    bus manufacturing using the lean techniques. Int. J. Prod. Perform. Manag. 2020,
    70, 1930–1951. [Google Scholar] [CrossRef] Guarda, T.; Augusto, M.F.; Lopes, I.
    The Art of Phishing. In Proceedings of the International Conference on Information
    Technology & Systems, Cairo, Egypt, 24–26 March 2019; Springer: Cham, Switzerland,
    2019; pp. 683–690. [Google Scholar] [CrossRef] Colezea, M.; Musat, G.; Pop, F.;
    Negru, C.; Dumitrascu, A.; Mocanu, M. CLUeFARM: Integrated web-service platform
    for smart farms. Comput. Electron. Agric. 2018, 154, 134–154. [Google Scholar]
    [CrossRef] Sarma, R.; Barbhuiya, F.A. Internet of Things: Attacks and Defences.
    In Proceedings of the 2019 7th International Conference on Smart Computing & Communications
    (ICSCC), Sarawak, Malaysia, 28–30 June 2019; IEEE: Toulouse, France, 2019; pp.
    1–5. [Google Scholar] [CrossRef] De Souza, T.T.A.; de Oliveira, C.C.; Abe, J.M.;
    Aharari, A.; Nakamatsu, K. Paraconsistent Artificial Neural Network Applied to
    Agribusiness. Smart Innov. Syst. Technol. 2021, 183, 19–28. [Google Scholar] [CrossRef]
    Demestichas, K.; Peppes, N.; Alexakis, T. Survey on security threats in agricultural
    IoT and smart farming. Sensors 2020, 20, 6458. [Google Scholar] [CrossRef] [PubMed]
    Kumar, L.S.; Ahmad, S.; Routray, S.; Prabu, A.V.; Alharbi, A.; Alouffi, B.; Rajasoundaran,
    S. Modern Energy Optimization Approach for Efficient Data Communication in IoT-Based
    Wireless Sensor Networks. Wirel. Commun. Mob. Comput. 2022, 2022, 7901587. [Google
    Scholar] [CrossRef] Scuderi, A.; Foti, V.T.; Timpanaro, G. The supply chain value
    of pod and pgi food products through the application of blockchain. Qual. Access
    Success 2019, 20, 580–587. [Google Scholar] Dey, D.; Sizan, N.S.; Mia, M. GreenFarm:
    An IoT-Based Sustainable Agriculture with Automated Lighting System. In Proceedings
    of the International Conference on Innovative Computing and Communications, Delhi,
    India, 17–18 February 2023; Springer: Singapore, 2023; pp. 517–528. [Google Scholar]
    Di Modica, G.; Gulino, S.; Tomarchio, O. IoT fault management in cloud/fog environments.
    In Proceedings of the 9th International Conference on the Internet of Things,
    Bilbao, Spain, 18 September 2019; pp. 1–4. [Google Scholar] [CrossRef] Dibirov,
    A. Approaches to Modeling the Machine and Tractor Fleet of an Agricultural Organization
    in the Conditions of Digitalization. In Agriculture Digitalization and Organic
    Production; Springer: Singapore, 2023; pp. 339–350. [Google Scholar] Food and
    Agriculture Organization of the United Nations—FAO. Strengthened Global Partnerships
    Are Needed to End Hunger and Malnutrition. 2019. Available online: http://www.fao.org/news/story/en/item/1194310/icode/
    (accessed on 20 August 2022). Food and Agriculture Organization. The State of
    Agricultural Commodity Markets 2020. In Agricultural Markets and Sustainable Development:
    Global Value Chains, Smallholder Farmers and Digital Innovations; Food and Agriculture
    Organization: Rome, Italy, 2020. [Google Scholar] Paul, K.; Chatterjee, S.S.;
    Pai, P.; Varshney, A.; Juikar, S.; Prasad, V.; Bhadra, B.; Dasgupta, S. Viable
    smart sensors and their application in data driven agriculture. Comput. Electron.
    Agric. 2022, 198, 107096. [Google Scholar] [CrossRef] Klerkx, L.; Begemann, S.
    Supporting food systems transformation: The what, why, who, where and how of mission-oriented
    agricultural innovation systems. Agric. Syst. 2021, 184, 102901. [Google Scholar]
    [CrossRef] Krishnan, K.S.; Jerusha, K.; Tanwar, P.; Singhal, S. Self-automated
    agriculture system using IoT. Int. J. Recent Technol. Eng. 2020, 8, 758–762. [Google
    Scholar] [CrossRef] Kumar, N.; Sharma, B.; Narang, S. Emerging Communication Technologies
    for Industrial Internet of Things: Industry 5.0 Perspective. In Proceedings of
    the Third International Conference on Computing, Communications, and Cyber-Security,
    Ghaziabad, India, 30–31 October 2023; Springer: Singapore, 2022; pp. 107–122.
    [Google Scholar] Maini, E.; De Rosa, M.; Vecchio, Y. The Role of Education in
    the Transition towards Sustainable Agriculture: A Family Farm Learning Perspective.
    Sustainability 2021, 13, 8099. [Google Scholar] [CrossRef] Majumdar, P.; Mitra,
    S.; Bhattacharya, D. IoT for Promoting Agriculture 4.0: A Review from the Perspective
    of Weather Monitoring, Yield Prediction, Security of WSN Protocols, and Hardware
    Cost Analysis. J. Biosyst. Eng. 2021, 46, 440–461. [Google Scholar] [CrossRef]
    Meng, H.; Cheng, Y. Research on key technologies of intelligent agriculture under
    5G environment. J. Physics Conf. Ser. 2019, 1345, 042057. [Google Scholar] [CrossRef]
    Mentsiev, A.U.; Magomaev, T.R. Security threats of NB-IoT and countermeasures.
    IOP Conf. Ser. Mater. Sci. Eng. 2020, 862, 052033. [Google Scholar] [CrossRef]
    Mahbub, M. A smart farming concept based on smart embedded electronics, internet
    of things and wireless sensor network. Internet Things 2020, 9, 100161. [Google
    Scholar] [CrossRef] Mode, G.R.; Calyam, P.; Hoque, K.A. False data injection attacks
    in internet of things and deep learning enabled predictive analytics. arXiv 2019,
    arXiv:1910.01716. [Google Scholar] Padhy, S.; Dash, S.; Routray, S.; Ahmad, S.;
    Nazeer, J.; Alam, A. IoT-Based Hybrid Ensemble Machine Learning Model for Efficient
    Diabetes Mellitus Prediction. Comput. Intell. Neurosci. 2022, 2022, 2389636. [Google
    Scholar] [CrossRef] [PubMed] Pogorelskaia, I.; Várallyai, L. Agriculture 4.0 and
    the role of education. J. Agric. Inf. 2020, 11, 45–51. [Google Scholar] [CrossRef]
    Anand, S.; Sharma, A. AgroKy: An approach for enhancing security services in precision
    agriculture. Meas. Sens. 2022, 24, 100449. [Google Scholar] [CrossRef] Santos,
    L.; Rabadao, C.; Goncalves, R. Intrusion detection systems in Internet of Things:
    A literature review. In Proceedings of the 13th Iberian Conference on Information
    Systems and Technologies (CISTI), Caceres, Spain, 13–16 June 2018; IEEE: Toulouse,
    France, 2018; pp. 1–7. [Google Scholar] [CrossRef] Shankar, T.N.; Padhy, S.; Dash,
    S.; Teja, M.B.; Yashwant, S. Induction of Secure Data Repository in Blockchain
    over IPFS. In Proceedings of the 2022 6th International Conference on Trends in
    Electronics and Informatics (ICOEI), Tirunelveli, India, 28–30 April 2022; IEEE:
    Toulouse, France, 2022; pp. 738–743. [Google Scholar] [CrossRef] Shurman, M.M.;
    Khrais, R.M.; Yateem, A.A. IoT Denial-of-Service Attack Detection and Prevention
    Using Hybrid IDS. In Proceedings of the 2019 International Arab Conference on
    Information Technology (ACIT), Al Ain, United Arab Emirates, 3–5 December 2019;
    IEEE: Toulouse, France, 2019; pp. 252–254. [Google Scholar] [CrossRef] Tamala,
    J.K.; Maramag, E.I.; Simeon, K.A.; Ignacio, J.J. A bibliometric analysis of sustainable
    oil and gas production research using VOSviewer. Clean. Eng. Technol. 2022, 7,
    100437. [Google Scholar] [CrossRef] Tang, Y.; Dananjayan, S.; Hou, C.; Guo, Q.;
    Luo, S.; He, Y. A survey on the 5G network and its impact on agriculture: Challenges
    and opportunities. Comput. Electron. Agric. 2020, 180, 105895. [Google Scholar]
    [CrossRef] Tanwar, R.; Chhabra, Y.; Rattan, P.; Rani, S. Blockchain in IoT Networks
    for Precision Agriculture. In International Conference on Innovative Computing
    and Communications; Springer: Singapore, 2023; pp. 137–147. [Google Scholar] Mukherjee,
    S.; Baral, M.M.; Chittipaka, V.; Srivastava, S.C.; Pal, S.K. Discussing the impact
    of industry 4.0 in agriculture supply chain. In Recent Advances in Smart Manufacturing
    and Materials; Springer: Singapore, 2021; pp. 301–307. [Google Scholar] O’Grady,
    M.; Langton, D.; Salinari, F.; Daly, P.; O’Hare, G. Service Design for Climate-Smart
    Agriculture. Inf. Process. Agric. 2021, 8, 328–340. [Google Scholar] [CrossRef]
    Oliver, S.T.; González-Pérez, A.; Guijarro, J.H. An IoT proposal for monitoring
    vineyards called SEnviro for agriculture. In Proceedings of the 8th International
    Conference on the Internet of Things, Santa Barbara, CA, USA, 15–18 October 2018;
    pp. 1–4. [Google Scholar] [CrossRef] Padhy, S.; Dash, S.; Malla, P.P.; Routray,
    S.; Qi, Y. An Energy Efficient Node Localization Algorithm for Wireless Sensor
    Network. In Proceedings of the 2021 IEEE 2nd International Conference on Applied
    Electromagnetics, Signal Processing, & Communication (AESPC), Bhubaneswar, India,
    26–28 November 2021; IEEE: Toulouse, France, 2021; pp. 1–5. [Google Scholar] [CrossRef]
    Singh, G.; Yogi, K.K. Internet of Things-Based Devices/Robots in Agriculture 4.0.
    In Sustainable Communication Networks and Application; Springer: Singapore, 2022;
    pp. 87–102. [Google Scholar] Smart Farming with IoT and Cloud in Malaysia. 2021.
    Available online: https://techwireasia.com/2021/08/smart-farming-with-iot-and-cloud-inmalaysia/
    (accessed on 11 July 2022). Sobb, T.; Turnbull, B.; Moustafa, N. Supply Chain
    4.0: A Survey of Cyber Security Challenges, Solutions and Future Directions. Electronics
    2020, 9, 1864. [Google Scholar] [CrossRef] Soukup, V. Industry 4.0: From Smart
    Factories to Artificial Intelligence. In Industry 4.0 Challenges in Smart Cities;
    Springer: Cham, Switzerland, 2023; pp. 95–105. [Google Scholar] Sturiale, L.;
    Scuderi, A.; Timpanaro, G.; Matarazzo, B. Sustainable Use and Conservation of
    the Environmental Resources of the Etna Park (UNESCO Heritage): Evaluation Model
    Supporting Sustainable Local Development Strategies. Sustainability 2020, 12,
    1453. [Google Scholar] [CrossRef] Malche, T.; Maheshwary, P.; Kumar, R. Environmental
    Monitoring System for Smart City Based on Secure Internet of Things (IoT) Architecture.
    Wirel. Pers. Commun. 2019, 107, 2143–2172. [Google Scholar] [CrossRef] Prabu,
    A.V.; Kumar, G.S.; Rajasoundaran, S.; Malla, P.P.; Routray, S.; Mukherjee, A.
    Internet of things-based deeply proficient monitoring and protection system for
    crop field. Expert Syst. 2022, 39, e12876. [Google Scholar] [CrossRef] Pranitha,
    G.; Rukmini, T.; Shankar, T.N.; Sah, B.; Kumar, N.; Padhy, S. Utilization of Blockchain
    in E-Voting System. In Proceedings of the 2022 2nd International Conference on
    Intelligent Technologies (CONIT), Kartakata, India, 24–26 June 2022; IEEE: Toulouse,
    France, 2022; pp. 1–5. [Google Scholar] [CrossRef] Prasad, S.; Samimalai, A.;
    Rani, S.R.; Kumar, B.P.P.; Hegde, N.; Banu, S. Information Security and Privacy
    in Smart Cities, Smart Agriculture, Industry 4.0, Smart Medicine, and Smart Healthcare.
    In IoT Based Control Networks and Intelligent Systems. Lecture Notes in Networks
    and SystemsJoby; Joby, P.P., Balas Valentina, E., Palanisamy, R., Eds.; Springer:
    Singapore, 2022; Volume 528. [Google Scholar] [CrossRef] Pundir, S.; Wazid, M.;
    Singh, D.P.; Das, A.K.; Rodrigues, J.J.P.C.; Park, Y. Designing Efficient Sinkhole
    Attack Detection Mechanism in Edge-Based IoT Deployment. Sensors 2020, 20, 1300.
    [Google Scholar] [CrossRef] [PubMed] Liu, L.; Xu, B.; Zhang, X.; Wu, X. An intrusion
    detection method for internet of things based on suppressed fuzzy clustering.
    EURASIP J. Wirel. Commun. Netw. 2018, 2018, 113. [Google Scholar] [CrossRef] Farooq,
    M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey on the Role of IoT in
    Agriculture for the Implementation of Smart Farming. IEEE Access 2019, 7, 156237–156271.
    [Google Scholar] [CrossRef] Munir, M.S.; Bajwa, I.S.; Cheema, S.M. An intelligent
    and secure smart watering system using fuzzy logic and blockchain. Comput. Electr.
    Eng. 2019, 77, 109–119. [Google Scholar] [CrossRef] Dash, S.; Padhy, S.; Parija,
    B.; Rojashree, T.; Patro, K.A. A Simple and Fast Medical Image Encryption System
    Using Chaos-Based Shifting Techniques. Int. J. Inf. Secur. Priv. (IJISP) 2022,
    16, 1–24. [Google Scholar] [CrossRef] Gupta, M.; Sandhu, R. Authorization framework
    for secure cloud assisted connected cars and vehicular internet of things. In
    Proceedings of the 23rd ACM on Symposium on Access Control Models and Technologies,
    Indianapolis, IN, USA, 13–15 June 2018; pp. 193–204. [Google Scholar] Gupta, M.;
    Benson, J.; Patwa, F.; Sandhu, R. Secure V2V and V2I communication in intelligent
    transportation using cloudlets. IEEE Trans. Serv. Comput. 2020, 15, 1912–1925.
    [Google Scholar] [CrossRef] Sontowski, S.; Gupta, M.; Chukkapalli, S.S.L.; Abdelsalam,
    M.; Mittal, S.; Joshi, A.; Sandhu, R. Cyber attacks on smart farming infrastructure.
    In Proceedings of the 2020 IEEE 6th International Conference on Collaboration
    and Internet Computing (CIC), Atlanta, GA, USA, 1–3 December 2020; pp. 135–143.
    [Google Scholar] Gupta, M.; Sandhu, R. Towards activity-centric access control
    for smart collaborative ecosystems. In Proceedings of the 26th ACM Symposium on
    Access Control Models and Technologies, Virtual, Spain, 16–18 June 2021; pp. 155–164.
    [Google Scholar] Yang, X.; Shu, L.; Chen, J.; Ferrag, M.A.; Wu, J.; Nurellari,
    E.; Huang, K. A Survey on Smart Agriculture: Development Modes, Technologies,
    and Security and Privacy Challenges. IEEE/CAA J. Autom. Sin. 2021, 8, 273–302.
    [Google Scholar] [CrossRef] Kreutz, D.; Ramos, F.; Verissimo, P.; Rothenberg,
    C.; Azodolmolky, S.; Uhlig, S. Software-defined networking: A comprehensive survey.
    Proc. IEEE 2014, 103, 14–76. [Google Scholar] [CrossRef] Nunes, B.A.A.; Mendonca,
    M.; Nguyen, X.-N.; Obraczka, K.; Turletti, T. A survey of software-defined networking:
    Past, present, and future of programmable networks. IEEE Commun. Surv. Tutor.
    2014, 16, 1617–1634. [Google Scholar] [CrossRef] Ferrag, M.A.; Maglaras, L.; Janicke,
    H. Blockchain and its role in the internet of things. In Strategic Innovative
    Marketing and Tourism; Springer: Berlin/Heidelberg, Germany, 2019; pp. 1029–1038.
    [Google Scholar] Vasques, A.T.; Gondim, J.J.C. Amplified reflection ddos attacks
    over iot mirrors: A saturation analysis. In Proceedings of the 2019 Workshop on
    Communication Networks and Power Systems (WCNPS), Brasília, Brazil, 3–4 October
    2019; IEEE: Toulouse, France, 2019; pp. 1–6. [Google Scholar] [CrossRef] McKeown,
    N.; Anderson, T.; Balakrishnan, H.; Parulkar, G.; Peterson, L.; Rexford, J.; Shenker,
    S.; Turner, J. Openflow: Enabling innovation in campus networks. ACM SIGCOMM Comput.
    Commun. Rev. 2008, 38, 69–74. [Google Scholar] [CrossRef] Iqbal, W.; Abbas, H.;
    Daneshmand, M.; Rauf, B.; Bangash, Y.A. An In-Depth Analysis of IoT Security Requirements,
    Challenges, and Their Countermeasures via Software-Defined Security. IEEE Internet
    Things J. 2020, 7, 10250–10276. [Google Scholar] [CrossRef] Wei, Y.; Jones, P.
    Emergent urban agricultural practices and attitudes in the residential area in
    China. Urban For. Urban Green. 2022, 69, 127491. [Google Scholar] [CrossRef] Sakthi,
    U.; DafniRose, J. Blockchain-Enabled Smart Agricultural Knowledge Discovery System
    using Edge Computing. Procedia Comput. Sci. 2022, 202, 73–82. [Google Scholar]
    [CrossRef] Williamson, H.F.; Leonelli, S. Towards Responsible Plant Data Linkage:
    Data Challenges for Agricultural Research and Development; Springer: Berlin/Heidelberg,
    Germany, 2023. [Google Scholar] Ragazou, K.; Garefalakis, A.; Zafeiriou, E.; Passas,
    I. Agriculture 5.0: A New Strategic Management Mode for a Cut Cost and an Energy
    Efficient Agriculture Sector. Energies 2022, 15, 3113. [Google Scholar] [CrossRef]
    Contreras-Medina, D.I.; Medina-Cuéllar, S.E.; Rodríguez-García, J.M. Roadmapping
    5.0 Technologies in Agriculture: A Technological Proposal for Developing the Coffee
    Plant Centered on Indigenous Producers’ Requirements from Mexico, Via Knowledge
    Management. Plants 2022, 11, 1502. [Google Scholar] [CrossRef] Martini, B.; Helfer,
    G.; Barbosa, J.; Modolo, R.E.; da Silva, M.; de Figueiredo, R.; Mendes, A.; Silva,
    L.; Leithardt, V. IndoorPlant: A Model for Intelligent Services in Indoor Agriculture
    Based on Context Histories. Sensors 2021, 21, 1631. [Google Scholar] [CrossRef]
    Martins, J.A.; Ochôa, I.S.; Silva, L.A.; Mendes, A.S.; González, G.V.; De Paz
    Santana, J.; Leithardt, V.R.Q. PRIPRO: A Comparison of Classification Algorithms
    for Managing Receiving Notifications in Smart Environments. Appl. Sci. 2020, 10,
    502. [Google Scholar] [CrossRef] Okolie, C.C.; Danso-Abbeam, G.; Groupson-Paul,
    O.; Ogundeji, A.A. Climate-Smart Agriculture Amidst Climate Change to Enhance
    Agricultural Production: A Bibliometric Analysis. Land 2023, 12, 50. [Google Scholar]
    [CrossRef] Selbonne, S.; Guindé, L.; Causeret, F.; Bajazet, T.; Desfontaines,
    L.; Duval, M.; Sierra, J.; Solvar, F.; Tournebize, R.; Blazy, J.M. Co-Design and
    Experimentation of a Prototype of Agroecological Micro-Farm Meeting the Objectives
    Set by Climate-Smart Agriculture. Agriculture 2023, 13, 159. [Google Scholar]
    [CrossRef]                     Disclaimer/Publisher’s Note: The statements, opinions
    and data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2023 by
    the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Padhy, S.; Alowaidi, M.; Dash, S.; Alshehri, M.; Malla, P.P.;
    Routray, S.; Alhumyani, H. AgriSecure: A Fog Computing-Based Security Framework
    for Agriculture 4.0 via Blockchain. Processes 2023, 11, 757. https://doi.org/10.3390/pr11030757
    AMA Style Padhy S, Alowaidi M, Dash S, Alshehri M, Malla PP, Routray S, Alhumyani
    H. AgriSecure: A Fog Computing-Based Security Framework for Agriculture 4.0 via
    Blockchain. Processes. 2023; 11(3):757. https://doi.org/10.3390/pr11030757 Chicago/Turabian
    Style Padhy, Sasmita, Majed Alowaidi, Sachikanta Dash, Mohamed Alshehri, Prince
    Priya Malla, Sidheswar Routray, and Hesham Alhumyani. 2023. \"AgriSecure: A Fog
    Computing-Based Security Framework for Agriculture 4.0 via Blockchain\" Processes
    11, no. 3: 757. https://doi.org/10.3390/pr11030757 Note that from the first issue
    of 2016, this journal uses article numbers instead of page numbers. See further
    details here. Article Metrics Citations Crossref   7 Scopus   13 Web of Science   7
    Google Scholar   [click to view] Article Access Statistics Article access statistics
    Article Views 28. Dec 7. Jan 17. Jan 27. Jan 6. Feb 16. Feb 26. Feb 7. Mar 17.
    Mar 0k 1k 2k 3k 4k 5k For more information on the journal statistics, click here.
    Multiple requests from the same IP address are counted as one view.   Processes,
    EISSN 2227-9717, Published by MDPI RSS Content Alert Further Information Article
    Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI
    Guidelines For Authors For Reviewers For Editors For Librarians For Publishers
    For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org
    Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Processes
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'AgriSecure: A Fog Computing-Based Security Framework for Agriculture 4.0
    via Blockchain'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 189 papers. The topics discussed include:
    study of an improved rectenna for RF energy harvesting in the ISM band for energy-autonomous
    IoT cardio stimulator applications; mitigating IEC-60870-5-104 vulnerabilities:
    anomaly detection in smart grid based on LSTM autoencoder; customer satisfaction
    toward commercial e-services in Saudi Arabia: a sentiment analysis; small-signal
    modeling of GaN-on-diamond HEMT using ANFIS method; examining generative adversarial
    network for smart home DDoS traffic generation; privacy protection smart agriculture
    based on functional encryption; sentiment analysis with Lipschitz recurrent neural
    networks; LRIMa city: a fog-computing-based smart city with integrated self-driving
    cars; and Arabic sentiment analysis of food delivery services reviews.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: 2023 International Symposium on Networks, Computers and Communications,
    ISNCC 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 2023 International Symposium on Networks, Computers and Communications, ISNCC
    2023
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 31 papers. The special focus in this conference
    is on Sustainable Development through Machine Learning, Artificial Intelligence,
    and IoT. The topics include: Predicting Crop Yield in Smart Agriculture Using
    IoT and Machine Learning for Sustainable Development; effectiveness of Agile Sustainable
    Project Management Approach in Software Industries; enhancing Sustainable Returns:
    Unleashing the Potential of Automated Trading with Advanced Technologies; the
    Contribution of Pilgrimage Tourism to Environmental Sustainability, Particularly
    in the Context of India; Leveraging AI and IoT for Sustainable Waste Management;
    enabling Sustainable Development Through IoT; analyzing Real Time Farming Using
    Internet of Things in Agriculture; Securing the Sustainable 5G Enabled IoMT-Fog
    Computing Environment: A Blockchain-Based Approach; deep Learning-Based Diagnosis
    of Osteoarthritis in Knee X-Ray Images Using Convolutional Neural Networks for
    Sustainable Healthcare; attaining Sustainable Development Goal of Quality Education
    through Data Analytics in Institutional Research: Insights and Applications; contribution
    Improving Dermatoscopy in Low-Level Laser Therapy Using Convolutional Neural Networks
    for Enhanced Diagnosis and Treatment Planning; Empowering the Visually Impaired:
    A Sustainable ML-Based Currency Recognition System; machine Learning Based Early
    Prediction of Parkinson''s Disease for Sustainable Healthcare; integrating Machine
    Learning for Sustainable Development: Advanced Psychometrics Analysis of Learners
    across Multiple Levels and Parameters; enhancing Sustainable Development Through
    Electrooculography Based Computer Control System for Individuals with Mobility
    Limitations; enhancing Global Optimization for Sustainable Development Using Modified
    Differential Evolution; Design and Implementation of a Sustainable FPGA-Based
    UART with HyperTerminal and External Input Device Integration for Enhanced Communication;
    enabling Sustainable Development Through Artificial Intelligence-Based Surveillance
    System on Cloud Platform; preface.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Communications in Computer and Information Science
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 1st International Conference on Sustainable Development through Machine Learning,
    Artificial Intelligence, and IoT, ICSD 2023
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kalyani Y.
  - Bermeo N.V.
  - Collier R.
  citation_count: '1'
  description: The rapid adoption of Cloud, Fog, and Edge computing paradigms, along
    with Digital Twin (DT) technology, is being observed across numerous domains.
    Smart Agriculture is one such domain, where diverse requirements exist for applications
    that range from Augmented Reality, Satellite, and auto harvesters to a multitude
    of agricultural devices and sensors. While the integration of Cloud, Fog, and
    Edge computing can address various challenges, it can also pose some difficulties,
    including resource allocation, resource scheduling, and task scheduling. To address
    these challenges and enhance the productivity and sustainability of Smart Agriculture,
    this paper presents a novel architecture based on Cloud, Fog, Edge computing,
    and Multi-Agent Systems (MAS), incorporating the concept of Digital Twin. This
    proposed architecture is implemented in Smart Agricultural farms and fields, opening
    up new contemporary applications in the Agriculture domain.
  doi: 10.1080/17445760.2023.2235653
  full_citation: '>'
  full_text: '>

    "Access provided by University of Nebraska, Lincoln Log in  |  Register Cart Home
    All Journals International Journal of Parallel, Emergent and Distributed Systems
    List of Issues Volume 38, Issue 6 Digital twin deployment for smart agricu ....
    Search in:                                        This Journal                                                                                Anywhere                                                                  Advanced
    search International Journal of Parallel, Emergent and Distributed Systems Volume
    38, 2023 - Issue 6: Novel Approaches for Distributed Intelligent Systems Submit
    an article Journal homepage Open access 1,105 Views 0 CrossRef citations to date
    1 Altmetric Listen Research Article Digital twin deployment for smart agriculture
    in Cloud-Fog-Edge infrastructure Yogeswaranathan Kalyani , Nestor Velasco Bermeo
    & Rem Collier Pages 461-476 | Received 02 Aug 2017, Accepted 30 Jun 2023, Published
    online: 27 Jul 2023 Cite this article https://doi.org/10.1080/17445760.2023.2235653
    In this article 1. Introduction 2. Related work 3. Proposed architecture 4. Design
    and current implementation 5. Discussion 6. Conclusion and future work Disclosure
    statement Additional information Footnotes References Full Article Figures & data
    References Citations Metrics Licensing Reprints & Permissions View PDF View EPUB
    Formulae display:? Abstract The rapid adoption of Cloud, Fog, and Edge computing
    paradigms, along with Digital Twin (DT) technology, is being observed across numerous
    domains. Smart Agriculture is one such domain, where diverse requirements exist
    for applications that range from Augmented Reality, Satellite, and auto harvesters
    to a multitude of agricultural devices and sensors. While the integration of Cloud,
    Fog, and Edge computing can address various challenges, it can also pose some
    difficulties, including resource allocation, resource scheduling, and task scheduling.
    To address these challenges and enhance the productivity and sustainability of
    Smart Agriculture, this paper presents a novel architecture based on Cloud, Fog,
    Edge computing, and Multi-Agent Systems (MAS), incorporating the concept of Digital
    Twin. This proposed architecture is implemented in Smart Agricultural farms and
    fields, opening up new contemporary applications in the Agriculture domain. KEYWORDS:
    Digital twinCloud-Fog-Edgemulti agent systemssmart agriculture 1. Introduction
    The practice of agriculture is a complex and demanding process that encompasses
    a wide variety of activities, starting from the preparation of the soil through
    tillage, all the way to the final stage of harvesting crops. At each stage of
    the agricultural process, multiple systems interact to support farming activities
    and facilitate communication among stakeholders, including farmers, and agronomists.
    These processes have become increasingly digital. Smart agriculture is linked
    to collecting data from different data sources including autonomous tractors,
    harvesters, robots and drones, sensors, and actuators. For example, in crop farming,
    the agricultural data harvested (such as humidity, temperature, pH and soil conditions)
    is typically analysed to maximise crop yield whilst minimising costs (e.g. nutrients,
    pesticides). Agriculture 4.0 [ 1], also known as Smart Agriculture or Agriculture
    IoT, refers to the use of advanced technologies such as the Internet of Things
    (IoT), artificial intelligence (AI), and robotics to improve the efficiency and
    productivity of agriculture. It involves the integration of these technologies
    into all stages of agricultural production, from planting to harvesting, in order
    to optimise crop yields, reduce waste, and improve sustainability [ 2]. Cloud
    computing, Fog computing, and Edge computing are all computing models that offer
    different levels of decentralisation and proximity to end-users. Cloud computing
    refers to the delivery of computing resources over the internet from a centralised
    location [ 3]. Fog computing extends this model by bringing the cloud closer to
    the edge of the network, typically at the local network level, to provide faster
    response times and better quality of service [ 4]. Fog computing can also help
    reduce the amount of data that needs to be sent to the cloud, by processing and
    analysing data locally before sending it to the cloud. Edge computing takes this
    concept further by bringing the computing resources even closer to the end-users,
    typically at the device or sensor level [ 5]. This enables real-time processing
    and analysis of data, reducing the need for data to be sent to the cloud or fog
    nodes. Edge computing is particularly useful in applications such as autonomous
    vehicles, smart homes, and industrial automation, where low latency and high reliability
    are critical. The combination of Cloud-Fog-Edge computing addresses several issues
    in Cloud-based computing applications by bringing Cloud services and resources
    to Edge devices. Edge computing primarily focuses on the IoT level, while Fog
    computing is more focussed on the infrastructure level. Edge computing does not
    support handling multiple IoT applications, whereas Fog computing supports this
    capability. Data collection, processing, and storage mainly occur at the network
    edge and Edge devices in Edge computing, whereas they occur near the edge and
    core networking in the Fog layer [ 5]. The authors of [ 6] explore how these new
    models address the limitations of the Cloud by providing techniques for moving
    computation, data analysis, and storage closer to the network''s edge. Although
    the integration of Cloud-Fog-Edge computing is attractive, it is not a straightforward
    process, and several challenges arise, such as resource management (including
    sharing and allocation), task management, and scheduling (such as workflow and
    task scheduling). Multi-agent systems are a potential solution to the challenges
    mentioned above in the integration of Cloud, Fog, and Edge computing paradigms.
    Multi-agent systems incorporate social aspects and human reasoning to solve problems
    [ 7]. In recent years, Digital Twin (DT) technology has been a rising part of
    new digital technologies that support digital transformation by enabling new business
    models and decision support systems. Various domains, including Smart Cities [
    8], Manufacturing [ 9], Healthcare [ 10], construction [ 11], and Industry [ 12],
    have already incorporated or are in the process of incorporating data, information,
    and analytics capabilities in their services. A DT is a digital representation
    of a physical model that predicts the future based on real and historical data.
    Four levels of digital representation exist: Pre-Digital Twin, Digital Twin, Adaptive
    Digital Twin, and Intelligent Digital Twin [ 13]. Agriculture has received less
    attention in DT research, but its application has potential benefits such as cost
    reductions, detailed information, catastrophe prevention, positive economic impacts,
    decision-making aid, and more efficient management. 1.1. Main motivation Farming
    is a challenging industry that requires striking a balance between producing high-quality
    crops and achieving a sufficient quantity of them. One of the ways that technology
    has sought to address these challenges is through the creation of digital twins,
    which are virtual models of physical objects or systems. While creating a digital
    twin for plants is difficult due to the unique growth patterns of each plant,
    it is comparatively easy to make a digital twin for a greenhouse or enclosed environment
    due to the controlled environment it provides. To ensure high accuracy, the digital
    twin must monitor and control environmental conditions such as temperature, humidity,
    and CO2 levels. However, creating a model of a real farm can be complex due to
    various factors, including the availability and quality of data, as well as the
    necessity to integrate information from multiple sources. These sources may include
    IoT devices, satellites, drones, weather stations, and observations. The objective
    is to enhance decision-making capabilities while also providing data that can
    be utilised by other systems or stakeholders. Despite the challenges, digital
    twin technology has the potential to revolutionise the farming industry by providing
    valuable insights and allowing farmers to experiment with different scenarios
    to optimise their production. In this paper, we present a novel architecture for
    implementing a digital twin for a farm that encompasses a variety of fields. Our
    approach incorporates the use of multi-agents, microservices, linked-data, and
    ontologies. Additionally, we discuss the deployment of the digital twin in a Cloud-Fog-Edge
    infrastructure. 1.2. Main contribution Our approach aims to be holistic by using
    not only semantically interoperable JSON-LD based data models [ 14] that break
    the traditional approach of restrictive proprietary data silos and vertical architectures
    limiting interoperability [ 15], but also by allowing service composition within
    the Smart Farming scenario [ 16]. We have devised a series of Digital Twins of
    farms, as well as a high-level composite of fields DT. As stated by Falcão et
    al. [ 17], field data is essential for Farm Management Information Systems (FMIS),
    service providers, and stakeholders to reliably plan or conduct an operation.
    By having Field Digital Twins, we can gather essential and critical information
    (agronomic, environmental, geographic) from the fields and incorporate it into
    our system. The use of linked data concepts fosters service discovery while allowing
    data to be available and reducing redundancy [ 18]. Since most FMISs vendors develop
    their data vaults as closed/locked data sources, external services have to rely
    on connectors or pay for specific scenarios. Likewise, the integration of data
    relies on the availability of such elements and hinders the generation of information
    and knowledge that might be critical for stakeholders. By moving past syntactic
    interoperability [ 19] and adopting linked data principles, we ensure that the
    used data models are easily discovered and that their internals are understood
    by any system or stakeholder. We make certain that the reference vocabulary is
    readily available to all those who interact with the Digital Twins. Moreover,
    we ensure that any data exchanges between the Digital Twins and other systems
    adhere to the principles of linked data interoperability. The proposed solution
    presented in this article builds on and extends the high-level architecture proposed
    in [ 20]. Specifically, we extend our work to provide an overview of the Digital
    Twin framework that complements the Cloud-Fog-Edge computing infrastructure. 2.
    Related work Over the last decade, digital twin technology has gained more attention
    from both industry and academia. Numerous domains have started to apply DT in
    real-world applications and have achieved benefits such as improved efficiency,
    increased productivity, cost reduction, and better decision-making. Digital twin
    technology can be used for predictive maintenance, product design and development,
    asset management, supply chain optimisation, and remote operations. Smart agriculture
    is a rapidly growing field that utilises digital technologies to optimise agricultural
    practices and increase efficiency. Digital twin technology is a promising tool
    that can be used in smart agriculture to create a virtual replica of a physical
    farming system, enabling farmers to simulate, monitor, and optimise their operations.
    This technology can be combined with other emerging technologies such as Multi-Agent
    Systems (MAS) and Cloud-Fog-Edge computing to further enhance its capabilities
    and benefits. This section discusses related works in the areas of Cloud-Fog-Edge
    computing, Smart Agriculture, Multi-Agent systems, and Digital Twin technology.
    2.1. Cloud-Fog-Edge and smart agriculture Several studies have introduced the
    concepts of Cloud-Fog-Edge computing in the smart agriculture domain. Some studies
    focus on one of these paradigms, while others apply combinations of them, such
    as Cloud-Fog-Edge, Cloud-Fog, Cloud-Edge, Fog-Edge, or Cloud-sensors. In our recent
    systematic literature review [ 5], we reviewed the role of Cloud, Fog, and Edge
    computing in Smart Agriculture. We identified six agricultural application domains
    where these computing paradigms can be applied, and discussed the benefits and
    objectives of smart agricultural applications such as low latency, low cost, saving
    bandwidth, and reducing data traffic. While most research in smart agriculture
    has focussed on Cloud-based and sensor applications, we suggest that combining
    Cloud, Fog, and Edge computing could bring more advantages and new opportunities
    in the smart agricultural domain. The review also identifies challenges such as
    security and privacy, data processing, and poor internet connectivity that need
    to be addressed. There are few research papers that propose architectures in the
    combination of Cloud-Fog-Edge and Smart Agriculture. An example of this is seen
    in [ 5], where a three-layered architecture for Smart Agriculture utilising Cloud,
    Fog, and Edge is proposed. The Cloud layer is primarily used for storing and analysing
    large-scale data, loading algorithms and data analytical tools to Fog nodes, and
    backing up data for future analysis. The Fog layer is installed in local farms
    and responsible for real-time data analytics such as predicting pests and diseases,
    yield prediction, weather prediction, and agricultural monitoring automation.
    It makes decisions on real-time data and performs reasoning analysis. The Edge
    layer comprises end devices, tractors, sensors, and actuators and collects data
    and transfers it to the Fog layer for analysis. The processed and analysed data
    can be uploaded to the Cloud layer for backup or further analysis. The authors
    of [ 21] proposed an IoT-based Edge-Fog-Cloud architecture for smart agriculture
    system. The aim of this architecture is to solve existing real-time processing
    issues in terms of reducing energy consumption, CO2 emission, and network traffic,
    compared to the traditional cloud-based architecture. Other available architectures
    include the Latency-Adjustable Cloud/Fog Computing Architecture [ 22], as well
    as a conceptual Things-Fog-Cloud based architecture that incorporates mechanisms
    for detecting and treating outliers [ 23]. 2.2. Digital twin with other technologies:
    Cloud-Fog-Edge, multi-agent systems, and semantic web Digital twin technology
    is becoming increasingly popular and has applications in a variety of domains,
    including manufacturing, healthcare, transportation, construction, and energy.
    Additionally, due to the relatively new and emerging nature of digital twin technology,
    there may still be many industries that have not yet fully explored or implemented
    this technology. However, the combination of DT technology with the Cloud-Fog-Edge
    paradigm is a relatively new area of research that has emerged as a result of
    the increasing use of edge computing and the need to process data in real-time
    closer to the source. The use of Cloud-Fog-Edge and DT together has the potential
    to enhance the capabilities of digital twin technology and to provide more efficient
    and effective solutions in various domains. As such, this is an area of active
    research and development, and there is ongoing work to explore the full potential
    of this combination. For example, [ 24] examines how suitable the use of a cloud-fog
    architecture is to handle the real-time requirements of Digital Twins. Few other
    research articles have explored different domains in recent years, such as smart
    manufacturing [ 25], smart agriculture [ 20], and robotics [ 26, 27]. Moreover,
    the use of agents with DT has received considerable attention across various domains.
    Multi-agent systems can optimise the performance of DT by coordinating the actions
    of multiple agents. Agents can work collaboratively to identify the root cause
    of a problem and suggest the best course of action. They can also reconfigure
    the system, change parameters, or switch to a different operating mode. Depending
    on the system''s requirements, agents can be designed to act as AI solutions or
    software paradigms. In 2021, authors of [ 28] presented a generic Digital Twin
    model for use in a manufacturing multi-agent system. In this work, the agents
    are implemented as microservices using the concept of ‘Agents-as-a-Service.’ The
    concept of agent-based digital twins was proposed in [ 29]. This approach integrates
    the digital twin paradigm with agents in a modelling and design framework based
    on mirror worlds, particularly in the healthcare domain. Additionally, the role
    of multi-agent systems in digital twins for Industry 4.0 is described in [ 30],
    and an experimental setup for integrating a simulation model of Hamburg''s traffic
    system with real-time sensor data is presented by Clemen et al. [ 31]. In the
    agriculture domain, authors of [ 32] propose the creation of digital twins using
    knowledge bases, multi-agent technology, and machine learning methods. Finally,
    authors of [ 33] analyse the potential synergies between MAS and digital twins
    to support reasoning at both individual and collective levels. In addition to
    the above, the current trend in Digital Twins is Semantic Digital Twins, which
    is an approach rooted in semantic technologies such as ontologies, constraints,
    and knowledge graphs. This topic is quite popular in the manufacturing domain
    [ 34–36]. In agriculture, the use of semantic technologies such as ontologies
    and knowledge graphs is gaining popularity [ 15, 20], although the adoption is
    still relatively slow compared to other domains. 3. Proposed architecture In this
    section, we introduce an approach to implementing a Digital Twin for Smart Agriculture
    through the use of agents in a Cloud-Fog-Edge infrastructure. First, we introduce
    the Cloud-Fog-Edge architecture, followed by a clear description of the DT architecture.
    3.1. Cloud-Fog-Edge architecture The proposed architecture [ 20], as shown in
    Figure 1, comprises three layers: Cloud, Fog, and Edge. The Cloud layer serves
    as the primary domain for big data and data analytics, providing data storage
    and anonymisation services for farm data, as well as machine learning and data
    analysis support. It hosts various services for yield prediction, disease identification,
    pest identification, and growth stage estimation, along with analytical tools
    to support forecasting outcomes such as expected yield, crop waste, and revenues.
    Figure 1. Proposed high level architecture for MAS-Cloud-Fog-Edge. Display full
    size The second layer of the architecture is the Fog layer, which represents the
    Farm Management System. The layer deploys a Multi-Agent System responsible for
    overseeing various activities specific to the farm. The Fog layer is divided into
    two sub-strata: static Fog nodes hosted within the farm and mobile Fog nodes associated
    with farm equipment, such as tractors, combine harvesters, drones, or agricultural
    robots. The static Fog nodes provide local data storage and computing services
    for in-situ farm data analysis, while the mobile Fog nodes enable the extension
    of the Fog to areas of the farm with sporadic or no Internet connectivity. Finally,
    the Edge layer includes any agricultural devices hosting sensors (such as in-situ
    soil moisture sensors and tractor-mounted Normalised Difference Vegetation Index
    (NDVI) sensors) or actuators deployed on the farm, whether in the fields or as
    part of farm equipment such as tractors or combine harvesters. Edge devices are
    directly connected to static Fog services wherever internet connectivity is available.
    In areas without connectivity, data from these devices is harvested on-demand
    or opportunistically through data collection services hosted on mobile Fog nodes.
    3.2. Digital twin architecture A central component of our approach is the Digital
    Twin of fields. It provides the primary context for activities of the Field agents
    and underpins the recommendations that agents make. For example, determining the
    right time to irrigate, identifying appropriate nutrients to apply, recognising
    any missing nutrients, estimating the possible harvest day, and selecting the
    appropriate time for pesticide application, etc. Raw sensor data is harvested
    from Edge devices deployed across the farm by a specific type of task agent known
    as a Sensor Harvester. Third-party data sources supplement it (e.g. weather, satellite,
    or even financial data) and are used in conjunction with Cloud-based Data Analytics
    services to provide insights that the agents can apply. Some insights help improve
    the accuracy of the Digital Twin; others facilitate decision-making activities,
    helping to identify when a Field Management Plan may need to be altered or how
    it should be altered. These Cloud-based services are also used in the formation
    of these plans. Using the Digital Twin model in this architecture helps farmers
    get information on the fields and overall farm behaviour. It also forecasts yield
    prediction, growth stage, nutrient information, and weather-report. The referenced
    DT architecture [ 37], as illustrated in Figure 2, consists of four layers: an
    external layer, a microservices layer, a knowledge/hypermedia layer, and a decision
    layer. The external layer, which is the lowest layer, provides the resources that
    the DT uses, including data services, advisory services, and prediction services.
    Examples of data services include Farm Management Information Systems (FMIS),
    historical weather services, and cloud-based sensor data repositories for accessing
    deployed IoT sensor data. These services can be hosted either as part of the farm''s
    digital platform or externally by third parties. The microservices layer is responsible
    for abstracting external layer services into a standard format based on the agreed
    set of ontologies and providing additional internal data services that are specific
    to the DT. For instance, the internal data services include a Farm Management
    Plan service that captures critical decision points for the upcoming season and
    services that host real or simulated behaviour of the crop over the growing season.
    Figure 2. Digital Twin architecture. Display full size Knowledge/Hypermedia layer
    encompasses a set of resources created by the microservices available in the previous
    layer. These resources are all linked-data documents whose structure is underpinned
    by a suite of agreed-upon ontologies. The Field agent, located in the upper Decision
    layer, is responsible for deciding which microservices to use to create the resources.
    Linked data is critical to this layer and the Decision agents, as it represents
    data in a form that can be easily transformed into knowledge. As a result, this
    layer functions as a knowledge graph that spans the DT and provides an index to
    all the data contained within it. Decision layer is the final layer and is responsible
    for all decision-making related to the Digital Twin. It includes the initialisation
    of the twin and recommendations. A library of agent designs is provided to support
    various decision-making and monitoring activities of the Digital Twin. A Field
    Agent is created to oversee each Digital Twin. It uses the farm management plan,
    the farmer''s preferences, and the details of the agricultural system being managed
    to monitor and make decisions throughout the season. The Field Agent is responsible
    for engaging other agents specified in this layer to take action as needed. To
    ensure that our architecture is future-proofed, we have designed it to be agnostic
    to implementing the Digital Twin. To cater for this, our architecture is also
    designed to allow the incorporation of new tasks. To achieve this, task descriptions
    are encoded using a flexible format, and new task types can be supported by creating
    new task-specific agents. Our vision aligns with the recently proposed idea of
    the Computing Continuum [ 38] which is concerned with developing digital infrastructure
    that is used by complex workflows typically combining real-time data generation
    and processing and computation [ 39]. Additionally, this architecture can increase
    sensors (soil moisture probes, NDVI sensors, weather stations), and facilitate
    upgrading equipment such as guidance in tractors and variable spray booms/map-based
    variable treatment. The use of Linked Data with Digital Twins has proven to both
    promote Knowledge Sharing and facilitating interoperability across domains as
    previously discussed by Abanda et al. [ 40]. In our approach, we aim at integrating
    heterogeneous data sources (including geospatial data) which often contains decision-making
    information [ 41]. By adopting the Linked Data Paradigm, our Farm Digital Twin
    models form a collection of Linked Data Sets (with their own URIs, JSON-DL data
    structures) that are then published on the Web to be accessed by other DTs and/or
    systems as depicted by Figures 3 and 4. Figure 3. Current implementation diagram.
    Display full size Figure 4. Sample twin model. Display full size 3.3. Opportunistic
    sensing Opportunistic sensing is a data collection technique in which sensors
    and other data-gathering devices take advantage of unplanned or spontaneous opportunities
    to collect data. This approach relies on the fact that sensors can be placed in
    various locations or attached to different objects to capture data in an opportunistic
    manner, without needing to follow a specific pre-defined plan or schedule. This
    technique has become more prevalent with the rise of the Internet of Things (IoT),
    which allows for the deployment of a large number of connected sensors and devices
    that can take advantage of such opportunities to collect data. The data collected
    through opportunistic sensing can be used for various applications such as environmental
    monitoring, traffic analysis, healthcare, and agriculture. In our approach, a
    number of sensors are installed on the farm. When edge devices such as drones,
    robots, tractors, or harvesters interact with these sensors to collect data, they
    must be able to do so even in areas where internet connectivity is unavailable.
    Therefore, they must still collect the data and transfer it to the data collection
    point or devices. Collecting data in areas without internet connectivity is possible
    only through opportunistic sensing. 3.4. Semantic web and linked data Semantic
    Web Technologies have proven useful when integrating data [ 42–44] from heterogeneous
    sources. In our approach, we aim at generating new data as a ‘collection of interrelated
    datasets’ 1 following the Linked data principles [ 45] by using HTTP URIs to identify
    resources combined with a JSON-LD data model to represent the resource descriptions.
    Likewise, Linked Data has given us the opportunity of integrating data from different
    sources (weather stations, humidity sensors, NDVI sensors, Field DTs) while assigning
    each resource a Unique Resource Identifier that provides traceability and the
    possibility of connecting data sets of data that affect the behaviour and performance
    of a field under a specific plan (or with specific crop, soil, characteristics)
    that will, in turn, provide insight on the decisions carried out by the agents
    and the associated available data at the time. 3.5. Cloud or Fog: deciding the
    optimal infrastructure for implementing digital twins This section provides a
    brief discussion of the optimal approach for implementing a digital twin in either
    the Cloud or Fog computing environment. Digital twins can be implemented using
    either Cloud-based or Fog-based computing. Cloud computing provides access to
    remote servers that offer vast amounts of data processing and storage, making
    it a good option for applications that require advanced analytics and simulations.
    It also enables collaboration and shared decision-making among multiple users
    in different locations. However, Cloud-based digital twins may suffer from high
    latency due to the distance between the sensors generating data and the remote
    servers hosting the digital twin. Additionally, continuous connectivity is required
    for Cloud-based digital twins to function properly. Fog computing, on the other
    hand, offers a distributed computing infrastructure that brings computation and
    data storage closer to the devices and sensors generating the data. This reduces
    latency and improves real-time performance, making it an ideal option for applications
    that require real-time processing and decision-making. For digital twins, this
    means that the data generated by sensors and devices can be processed locally,
    and only relevant data is sent to the cloud for further analysis. Fog-based digital
    twins are also a better option in areas with limited connectivity, as they can
    operate in offline mode and synchronise data when connectivity is restored. The
    choice between Cloud-based and Fog-based digital twins depends on the specific
    use case and the required processing capabilities. While Cloud-based digital twins
    provide a wide range of resources and easy access, Fog computing enables faster
    processing and real-time decision-making in a distributed environment. Both computing
    paradigms have advantages and limitations, and the choice of implementation should
    be made based on the needs of the application and the available resources. The
    choice between Cloud-based and Fog-based digital twins is dependent on the specific
    use case and requirements. Cloud-based digital twins are best suited for applications
    that require high computational power and data storage, allowing for advanced
    analytics and simulations. However, in cases where connectivity is limited or
    intermittent, Fog-based digital twins can operate offline and synchronise data
    when connectivity is restored. For example, in the agricultural domain, farms
    with a poor internet connection may benefit from a Fog-based digital twin, where
    data collected from sensors is processed locally and only relevant information
    is sent to the cloud for further analysis. Ultimately, the choice of implementation
    should be based on the unique needs of the application and the available resources.
    It''s important to note that data management is crucial in implementing digital
    twins in either the Cloud or Fog computing environment. Best practices for data
    collection, storage, and analysis should be followed, and data privacy and security
    should be considered. Finally, the role of emerging technologies such as 5G and
    edge computing should be taken into account, as they may influence the implementation
    of digital twins in the future. 4. Design and current implementation The proposed
    architecture is designed to focus on a sub-field level, and 10 m × 10 m grid level,
    unlike existing systems that mainly focus at the whole farm level or for controlled
    environment farming. This level of granularity allows for more accurate issue
    identification and timely decision-making for farmers. Additionally, the system
    employs the Cloud-Fog-Edge architecture style, which enables it to function effectively
    in both connected and disconnected environments due to the nature of Cloud and
    Fog. This section provides a brief overview of the system''s design and implementation.
    In our scenario, we are considering the sample farm as illustrated in Figure 5.
    Typically, farms in countries such as the UK and Ireland resemble the pictures
    shown. A farm is considered to be a collection of fields. Our implementation of
    a Cognitive Digital Twin is primarily focussed on arable farming, with a particular
    emphasis on winter wheat. As shown in Figure 2, our implementation is primarily
    developed as a decentralised linked-data structure consisting of a suite of semantic
    microservices. The output generated by these microservices is then consumed by
    a Hypermedia Multi-Agent System that follows the MAMS [ 46] architectural style.
    This approach allows for a more scalable and modular design that can handle the
    complexity of a digital twin system. Figure 5. Sample farm: collection of fields.
    Display full size The implementation of a digital twin for arable farming involves
    several steps. The first step is to identify historical data sources and their
    associated APIs. These APIs are used to create the first version of the external
    layer of the digital twin. As illustrated in Figure 3, the digital twin for arable
    farming consists of two core services: the digital twin for farms and the digital
    twin for fields. Since a farm can contain multiple fields, these two core services
    are created as linked structures that represent the state of both the farm and
    the fields. We have implemented a set of microservices that extract the required
    data from external APIs. For example, one of such microservices accesses historical
    data for farms and fields. We then transform this data into an internal linked-data
    representation using JSON-LD. The internal microservices are responsible for filtering
    and semantically enriching the raw data. They also manage the links between the
    different resources. For instance, a farm resource includes hyperlinks to the
    associated field resources, and each field resource links back to the farm resource.
    One of the external data sources critical to the DT is the weather service, which
    provides both historical and current weather data for the field being twinned.
    We have implemented this service during the initial development cycle of the DT.
    External APIs AHDB RB209 API: To obtain information on Nutrient Management recommendation.
    RB209 2 is a publicly available guidance document designed to help farmers and
    land managers assess the fertilisers needed for the various crops they plan to
    grow. Weather API: This API provides access to both historical and real-time weather
    data. API for accessing historical farm and field data: This API allows access
    to historical data related to farms and fields. Internal Microservices AHDB Nutrient
    Recommendation Service: This microservice generates nutrient recommendations based
    on a field''s location, crop type, expected annual rainfall, underlying soil type,
    and other factors. Weather Service: This service offers historical as well as
    current weather data for the field that is being twinned. Growth Stage Service:
    The Growth Stage microservice predicts the growth stage for the upcoming season
    by utilising the Zadoks Growth Stage model [ 47]. This model defines a decimal
    scale that maps to the various growth stages of cereal crops. The transitions
    between growth stages are determined based on a series of thresholds for thermal
    time, which is an agro-climatic index. The thermal time is derived from the sum
    of the average daily temperature (within given bounds) from the crop''s drilling
    date in the ground. Field Plan Service: This microservice is responsible for managing
    field plans, and it collaborates with other microservices to create comprehensive
    plans for the fields. Farm Plan Service: This service captures crucial decision
    points for the upcoming season and services hosting real/simulated behaviour of
    the throughout the growing season. As illustrated in Figure 3, the digital twin
    is decomposed into internal and external data sources and a number of microservices.
    As explained in Section 3.2 the overall Digital Twin implemented using a four-layer
    architecture. The implementation of Digital Twin incrementally done with each
    increment involving a number of steps. The first step is to identify the historical
    data sources and their associated APIs, which form the initial version of the
    External layer of the twin. A set of microservices is then implemented to extract
    the required data from these external APIs and transform it into an internal linked-data
    representation. The internal microservices handle tasks such as filtering and
    semantically enriching the raw data. They also manage the links between different
    resources. For instance, a farm resource should contain hyperlinks to the associated
    field resources, and each field resource should have a link to the farm resource.
    Among the crucial external data sources for the Digital Twin is the weather service.
    This service should provide both historical and current weather data for the twinned
    field and needs to be implemented during the initial development cycle of the
    Digital Twin. After integrating the initial set of external data sources, the
    subsequent phase involves generating predictions for the upcoming season. This
    task requires access to a growth stage model, with the most commonly used one
    being the Zadoks Growth Stage model [ 47]. This model utilises a decimal scale
    that corresponds to different growth stages of cereal crops. The transition between
    these growth stages is determined by specific thresholds for thermal time, which
    is an agro-climatic index calculated from the cumulative average daily temperature
    within defined boundaries from the crop''s date of planting (drilling date). For
    a more comprehensive understanding of this model, refer to the RB209 handbook.
    3 Regarding agents, we have developed an initialisation agent responsible for
    navigating the farms and fields recorded in the farm database. This agent generates
    an initial DT for each field using the available yearly data. Currently, the data
    is informally represented in JSON format instead of JSON-LD. We have intentionally
    adopted a ‘schema last’ approach to first explore the structure and content of
    the DT resources before formalising those choices through the adoption of suitable
    ontologies. 5. Discussion In this paper, we introduce a Digital Twin architecture
    for the agriculture domain in a Cloud-Fog-Edge infrastructure. In agriculture,
    there are two main types of growing environments: open and closed. In an open
    environment, crops are grown in a natural environment without any artificial enclosure,
    while in a closed environment, crops are grown inside an enclosed structure, such
    as a greenhouse, polytunnel, or indoor farm. Closed environments offer growers
    greater control over environmental conditions, including temperature, humidity,
    light, and CO2 levels. This allows farmers to create ideal growing conditions,
    regardless of external climate conditions, and results in more predictable and
    consistent crop yields. In contrast, open environments are subject to the natural
    climate, which can be unpredictable and challenging to manage. When designing
    a Digital Twin for agriculture, the environment plays a critical role. Controlled
    environments provide more accurate and consistent data compared to open environments.
    However, applying Digital Twin technology in both open and closed environments
    can provide numerous benefits to farmers, including real-time monitoring, optimisation,
    and remote management. In open environment farms, there can be significant variability
    in the data collected from sensors within the same farm. To address this issue,
    our work aims to create a Digital Twin not only for the farm and field levels
    but also at a more granular level, down to the 10mx10m grid, as depicted in Figure
    6. This approach enables the management zones to adapt to changes over time while
    ensuring the stability of the patches or grid, thereby offering enhanced opportunities
    to monitor, trace, and identify the behaviour of fields and their specific needs.
    Figure 6. Farm-field-zone. Display full size By creating a more granular Digital
    Twin, we can make fine predictions for each zone and optimise outputs accordingly.
    This approach can provide several benefits for open environment agriculture. First,
    it allows for more accurate and precise monitoring of environmental conditions
    within each zone. Second, it enables farmers to optimise crop management strategies
    based on specific conditions in each zone, leading to increased productivity and
    reduced waste. Finally, it can help farmers identify areas where they can make
    improvements in their farming practices, leading to more sustainable and efficient
    agricultural practices overall. Currently, we use Zadok''s model to predict the
    crop growth stage which is depicted in Figure 7. While this model is widely used
    and relatively simple, it may not be the most accurate model for all crops and
    growing environments. Therefore, we plan to explore alternative models that may
    be better suited for our specific use case. By evaluating and optimising different
    models for crop growth stage prediction, we can improve the accuracy and precision
    of our Digital Twin. This, in turn, can lead to more informed decision-making
    and better crop management strategies. Figure 7. Crop growth stage prediction
    using Zadok’s model. Display full size The volumes of data and computation required
    for digital twin applications in agriculture can vary greatly depending on the
    specific use case and the level of granularity of the digital twin. For instance,
    a digital twin created for a large-scale farm with a single crop may require a
    lower volume of data, while a digital twin for a smaller farm with multiple crops
    and granular level monitoring may require a higher volume of data. In addition
    to the size of the farm and the level of granularity, the frequency of data collection
    can also impact the volume of data and computation required. For example, if data
    is collected at a high frequency, such as per hour or per day/week, it can result
    in a higher volume of data that needs to be processed and analysed. Also, the
    types of sensors and data sources used can also affect the volume of data and
    computation required for digital twin applications in agriculture. For instance,
    if satellite imagery is used to monitor crops, it can result in a higher volume
    of data that needs to be processed and analysed compared to using traditional
    sensors. In general, digital twin applications in agriculture require the collection
    and analysis of data from various sources such as sensors, weather stations, satellite
    imagery, and other data streams. This data is then processed and analysed to create
    a virtual representation of the physical environment and enable real-time monitoring,
    prediction, and optimisation of crop growth and yield. To provide some context,
    this particular work utilised data from approximately 17,393 fields, incorporating
    information from 1182 farms. The data sources encompass soil test data, nutrient
    data, and weather data. These datasets are valuable for making informed decisions
    regarding yield prediction, crop growth projection, nutrient recommendations,
    disease and pest outbreaks, and irrigation recommendations. 6. Conclusion and
    future work This paper proposes a novel approach for integrating multi-agent systems
    (MAS) and Cloud-Fog-Edge architecture with Digital Twin technology in the context
    of Smart Agriculture. The paper also discusses the use of agents and semantic
    linked-data concepts. In addition, the paper provides a clear description of the
    implementation of Digital Twins not only for farms but also for individual fields.
    One of the main benefits of our approach is the ability to adapt and evolve the
    DT''s decision-making services over time by extending the model to new data streams
    or incorporating new modelling techniques. The MAMS architectural style has been
    crucial to the success of this approach, as it enables seamless integration of
    agents and microservices. Additionally, this approach takes a comprehensive approach
    by using semantically interoperable JSON-LD based data models that enable better
    interoperability and service composition within the Smart Farming scenario. Unlike
    traditional approaches that rely on proprietary data silos and vertical architectures,
    our approach is designed to break down these barriers and promote better data
    exchange and collaboration. Future research will investigate the use of semantic
    web technologies to enable greater interoperability. A library of internal microservices
    is currently being developed and the most suitable ontologies are being identified.
    The DT will be further developed, and decision agents will be introduced to enhance
    decision-making capabilities. Disclosure statement No potential conflict of interest
    was reported by the author(s). Additional information Funding This research is
    funded under the Science Foundation Ireland (SFI) Strategic Partnership Programme
    (16/SPP/3296) and is co-funded by Origin Enterprises PLC. Notes 1 https://www.w3.org/standards/semanticweb/data.html.
    2 https://rb209-api-v1.ahdb.org.uk/ 3 https://ahdb.org.uk/knowledge-library/the-growth-stages-of-cereals
    References Zhai Z, Martínez JF, Beltran V, et al. Decision support systems for
    agriculture 4.0: survey and challenges. Comput Electron Agric. 2020;170:105256.
    doi: 10.1016/j.compag.2020.105256  Web of Science ®Google Scholar Raj M, Gupta
    S, Chamola V, et al. A survey on the role of internet of things for adopting and
    promoting agriculture 4.0. J Netw Comput Appl. 2021;187:103107. doi: 10.1016/j.jnca.2021.103107  Web
    of Science ®Google Scholar Costa B, Bachiega J Jr., de Carvalho LR, et al. Orchestration
    in fog computing: a comprehensive survey. ACM Comput Surv (CSUR). 2022;55(2):1–34.
    doi: 10.1145/3486221  Web of Science ®Google Scholar Rani A, Prakash V, Darbari
    M. Fog computing paradigm with internet of things to solve challenges of cloud
    with IoT. In: Advancements in Interdisciplinary Research: First International
    Conference, AIR 2022; Prayagraj, India; 2022 May 6–7; Revised Selected Papers;
    2023. p. 72–84.  Google Scholar Kalyani Y, Collier R. A systematic survey on the
    role of Cloud, Fog, and Edge computing combination in smart agriculture. Sensors.
    2021;21(17):5922. doi: 10.3390/s21175922  PubMed Web of Science ®Google Scholar
    Escamilla-Ambrosio P, Rodríguez-Mota A, Aguirre-Anaya E, et al. Distributing computing
    in the internet of things: Cloud, Fog and Edge computing overview. In: NEO 2016.
    Springer; 2018. p. 87–115.  Google Scholar Villarrubia G, De Paz JF, Iglesia DH,
    et al. Combining multi-agent systems and wireless sensor networks for monitoring
    crop irrigation. Sensors. 2017;17(8):1775. doi: 10.3390/s17081775  PubMed Web
    of Science ®Google Scholar Farsi M, Daneshkhah A, Hosseinian-Far A, et al. Digital
    twin technologies and smart cities. Berlin/Heidelberg, Germany: Springer; 2020.  Google
    Scholar Cimino C, Negri E, Fumagalli L. Review of digital twin applications in
    manufacturing. Comput Ind. 2019;113:103130. doi: 10.1016/j.compind.2019.103130  Web
    of Science ®Google Scholar Erol T, Mendi AF, Doğan D. The digital twin revolution
    in healthcare. In: 2020 4th International Symposium on Multidisciplinary Studies
    and Innovative Technologies (ISMSIT), Ankara, Turkey; 2020. p. 1–7.  Google Scholar
    Opoku DJ, Perera S, Osei-Kyei R, et al. Digital twin application in the construction
    industry: a literature review. J Build Eng. 2021;40:102726. doi: 10.1016/j.jobe.2021.102726  Web
    of Science ®Google Scholar Liu M, Fang S, Dong H, et al. Review of digital twin
    about concepts, technologies, and industrial applications. J Manuf Syst. 2021;58:346–361.
    doi: 10.1016/j.jmsy.2020.06.017  Web of Science ®Google Scholar Madni AM, Madni
    CC, Lucero SD. Leveraging digital twin technology in model-based systems engineering.
    Systems. 2019;7(1):7. doi: 10.3390/systems7010007  Web of Science ®Google Scholar
    Svetashova Y, Schmid S, Sure-Vetter Y. New facets of semantic interoperability:
    adding JSON-JSON-LD transformation functionality to the BIG IoT API. In: ISWC
    (Posters, Demos & Industry Tracks), Vienna, Austria; 2017.  Google Scholar Ramanathan
    G, Vachtsevanou D, Garcia K, et al. Semantic knowledge for autonomous smart farming.
    IFAC-PapersOnLine. 2022;55(32):217–222. doi: 10.1016/j.ifacol.2022.11.142  Google
    Scholar Mayer S, Verborgh R, Kovatsch M, et al. Smart configuration of smart environments.
    IEEE Trans Autom Sci Eng. 2016;13(3):1247–1255. doi: 10.1109/TASE.8856  Web of
    Science ®Google Scholar Falcão R, Matar R, Rauch B. Using i4. 0 digital twins
    in agriculture. Preprint; 2023. arXiv:2301.09682.  Google Scholar Lakka E, Petroulakis
    NE, Hatzivasilis G, et al. End-to-end semantic interoperability mechanisms for
    IoT. In: 2019 IEEE 24th International Workshop on Computer Aided Modeling and
    Design of Communication Links and Networks (CAMAD). IEEE; 2019. p. 1–6.  Google
    Scholar Valle PHD, Garcés L, Nakagawa EY. A typology of architectural strategies
    for interoperability. In: Proceedings of the XIII Brazilian Symposium on Software
    Components, Architectures, and Reuse, Salvador, Brazil; 2019. p. 3–12.  Google
    Scholar Kalyani Y, Collier R. Towards a new architecture: multi-agent based Cloud-Fog-Edge
    computing and digital twin for smart agriculture. International Symposium on Intelligent
    and Distributed Computing. Cham: Springer International Publishing; 2022.  Google
    Scholar Alharbi HA, Aldossary M. Energy-efficient Edge-Fog-Cloud architecture
    for IoT-based smart agriculture environment. IEEE Access. 2021;9:110480–110492.
    doi: 10.1109/ACCESS.2021.3101397  Web of Science ®Google Scholar Tsipis A, Papamichail
    A, Koufoudakis G, et al. Latency-adjustable cloud/fog computing architecture for
    time-sensitive environmental monitoring in olive groves. AgriEngineering. 2020;2(1):175–205.
    doi: 10.3390/agriengineering2010011  Google Scholar Montoya-Munoz AI, Rendon OMC.
    An approach based on fog computing for providing reliability in iot data collection:
    a case study in a colombian coffee smart farm. Appl Sci. 2020;10(24):8904. doi:
    10.3390/app10248904  Google Scholar Knebel FP, Wickboldt JA, de Freitas EP. A
    Cloud-Fog computing architecture for real-time digital twins. Preprint; 2020.
    arXiv:2012.06118.  Google Scholar Qi Q, Zhao D, Liao TW, et al. Modeling of cyber-physical
    systems and digital twin based on Edge computing, Fog computing and Cloud computing
    towards smart manufacturing. In: International Manufacturing Science and Engineering
    Conference. vol. 51357. American Society of Mechanical Engineers; 2018. p. V001T05A018.  Google
    Scholar Girletti L, Groshev M, Guimarães C, et al. An intelligent edge-based digital
    twin for robotics. In: 2020 IEEE Globecom Workshops (GC Wkshps). IEEE; 2020. p.
    1–6.  Google Scholar Xu W, Cui J, Li L, et al. Digital twin-based industrial cloud
    robotics: framework, control approach and implementation. J Manuf Syst. 2021;58:196–209.
    doi: 10.1016/j.jmsy.2020.07.013  Web of Science ®Google Scholar Braun S, Mostafa
    Y, Ulmer J, et al. Agents-as-a-service-a novel approach to on-premise digital
    twins. In: 2021 IEEE 17th International Conference on Intelligent Computer Communication
    and Processing (ICCP). IEEE; 2021. p. 125–130.  Google Scholar Croatti A, Gabellini
    M, Montagna S, et al. On the integration of agents and digital twins in healthcare.
    J Med Syst. 2020;44:1–8. doi: 10.1007/s10916-020-01623-5  Web of Science ®Google
    Scholar Gorodetsky V, Kozhevnikov S, Novichkov D, et al. The framework for designing
    autonomous cyber-physical multi-agent systems for adaptive resource management.
    In: International Conference on Industrial Applications of Holonic and Multi-Agent
    Systems. Springer; 2019. p. 52–64.  Google Scholar Clemen T, Ahmady-Moghaddam
    N, Lenfers UA, et al. Multi-agent systems and digital twins for smarter cities.
    In: Proceedings of the 2021 ACM SIGSIM Conference on Principles of Advanced Discrete
    Simulation, Virginia, USA; 2021. p. 45–55.  Google Scholar Laryukhin V, Skobelev
    P, Lakhin O, et al. Towards developing a cyber-physical multi-agent system for
    managing precise farms with digital twins of plants. Cybern Phys. 2019;8(4):257–261.
    doi: 10.35470/2226-4116  Google Scholar Mariani S, Picone M, Ricci A. About digital
    twins, agents, and multiagent systems: a cross-fertilisation journey. Preprint;
    2022. arXiv:2206.03253.  Google Scholar Schraudner D, Harth A. A restful interaction
    model for semantic digital twins. In: SeDiT@ESWC, Hersonissos, Greece; 2022.  Google
    Scholar Eleftheriou OT, imara AD, Kotis KI, et al. Saving energy with comfort:
    a semantic digital twin approach for smart buildings. In: SeDiT@ESWC, Hersonissos,
    Greece; 2022.  Google Scholar Katsigarakis K, Lilis GN, Rovas D, et al. A digital
    twin platform generating knowledge graphs for construction projects. In: SeDiT@ESWC,
    Hersonissos, Greece; 2022.  Google Scholar Kalyani Y, Rahman S, Collier RW. Integration
    of hypermedia-agents, microservices and digital twin for smart agriculture. In:
    Proceedings of the PoEM 2022 Workshops and Models at Work co-located with Practice
    of Enterprise Modelling 2022; London, United Kingdom; 2022 Nov 23–25; volume 3298
    of CEUR Workshop Proceedings. CEUR-WS.org; 2022.  Google Scholar Antoniu G, Valduriez
    P, Hoppe H-C, et al. Towards integrated hardware/software ecosystems for the Edge-Cloud-HPC
    continuum; 2021. doi: 10.5281/zenodo.5534464.hal-03358930  Google Scholar Rosendo
    D, Silva P, Simonin M, et al. E2clab: exploring the computing continuum through
    repeatable, replicable and reproducible edge-to-cloud experiments. In: 2020 IEEE
    International Conference on Cluster Computing (CLUSTER). IEEE; 2020. p. 176–186.  Google
    Scholar Abanda FH, Tah JHM, Keivani R. Trends in built environment semantic web
    applications: where are we today? Expert Syst Appl. 2013;40(14):5563–5577. doi:
    10.1016/j.eswa.2013.04.027  Web of Science ®Google Scholar Prudhomme C, Homburg
    T, Ponciano J-J, et al. Interpretation and automatic integration of geospatial
    data into the semantic web: towards a process of automatic geospatial data interpretation,
    classification and integration using semantic technologies. Computing. 2020;102:365–391.
    doi: 10.1007/s00607-019-00701-y  Web of Science ®Google Scholar Kalaycı EG, González
    IG, Lösch F, et al. Semantic integration of Bosch manufacturing data using virtual
    knowledge graphs. In: The Semantic Web–ISWC 2020: 19th International Semantic
    Web Conference; Athens, Greece; 2020 Nov 2–6; Proceedings, Part II 19. Springer;
    2020. p. 464–481.  Google Scholar Ibáñez L-D, Millard I, Glaser H, et al. An assessment
    of adoption and quality of linked data in European open government data. In: The
    Semantic Web–ISWC 2019: 18th International Semantic Web Conference; Auckland,
    New Zealand; 2019 Oct 26–30, Proceedings, Part II 18. Springer; 2019. p. 436–453.  Google
    Scholar Hitzler P. A review of the semantic web field. Commun ACM. 2021;64(2):76–83.
    doi: 10.1145/3397512  Web of Science ®Google Scholar Bizer C, Heath T, Berners-Lee
    T. Linked data: the story so far. In: Semantic Services, Interoperability and
    Web Applications: Emerging Concepts. IGI Global; 2011. p. 205–227.  Google Scholar
    Collier RW, O''Neill E, Lillis D, et al. Mams: multi-agent microservices. In:
    Companion Proceedings of The 2019 World Wide Web Conference, San Francisco, USA;
    2019. p. 655–662.  Google Scholar Zadoks JC, Chang TT, Konzak CF. A decimal code
    for the growth stages of cereals. Weed Res. 1974;14(6):415–421. doi: 10.1111/wre.1974.14.issue-6  Web
    of Science ®Google Scholar Download PDF X Facebook LinkedIn Email Share   Related
    research  People also read Recommended articles Cited by Flexible simulation of
    traffic with microservices, agents & REST Martynas Jagutis et al. International
    Journal of Parallel, Emergent and Distributed Systems Published online: 31 Jul
    2023 The emergence of cognitive digital twin: vision, challenges and opportunities
    Xiaochen Zheng et al. International Journal of Production Research Published online:
    24 Dec 2021 The unified effect of data encoding, ansatz expressibility and entanglement
    on the trainability of HQNNs Muhammad Kashif et al. International Journal of Parallel,
    Emergent and Distributed Systems Published online: 17 Jul 2023 View more Information
    for Authors R&D professionals Editors Librarians Societies Open access Overview
    Open journals Open Select Dove Medical Press F1000Research Opportunities Reprints
    and e-prints Advertising solutions Accelerated publication Corporate access solutions
    Help and information Help and contact Newsroom All journals Books Keep up to date
    Register to receive personalised research and resources by email Sign me up Copyright
    © 2024 Informa UK Limited Privacy policy Cookies Terms & conditions Accessibility
    Registered in England & Wales No. 3099067 5 Howick Place | London | SW1P 1WG     Cookies
    Button About Cookies On This Site We and our partners use cookies to enhance your
    website experience, learn how our site is used, offer personalised features, measure
    the effectiveness of our services, and tailor content and ads to your interests
    while you navigate on the web or interact with us across devices. By clicking
    \"Continue\" or continuing to browse our site you are agreeing to our and our
    partners use of cookies. For more information seePrivacy Policy CONTINUE"'
  inline_citation: '>'
  journal: International Journal of Parallel, Emergent and Distributed Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Digital twin deployment for smart agriculture in Cloud-Fog-Edge infrastructure
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 47 papers. The special focus in this conference
    is on Advances in Computing and Data Sciences. The topics include: Optimal Perfect
    Phylogeny Using ILP and Continuous Approximations; a Novel Method for Near-Duplicate
    Image Detection Using Global Features; VSMAS2HN: Verifiably Secure Mutual Authentication
    Scheme for Smart Healthcare Network; Optimal KAZE and AKAZE Features for Facial
    Similarity Matching; modified InceptionV3 Using Soft Attention for the Grading
    of Diabetic Retinopathy; Comprehensive Study of Cyber Security in AI Based Smart
    Grid; sentiment Classification of Diabetes-Related Tweets Using Transformer-Based
    Deep Learning Approach; assessment and Prediction of a Cyclonic Event: A Deep
    Learning Model; technology Enabled Self-directed Learning: A Review and Framework;
    Energy Preserving ABE-Based Data Security Scheme for Fog Computing; Detecting
    Toxic Comments Using FastText, CNN, and LSTM Models; UEye: Insights on User Interface
    Design Using Eye Movement Visualizations; code Mixed Information Retrieval for
    Gujarati Script News Articles; Plant Disease Classification Using VGG-19 Based
    Faster-RCNN; classification of Real and Deepfakes Visual Samples with Pre-trained
    Deep Learning Models; deep Learning Based Speech Synthesis with Emotion Overlay;
    An Ensemble Deep Learning Algorithm to Predict PM2.5 Concentration Levels in Bengaluru’s
    Atmosphere; Deep Learning Model Based on a Transformers Network for Sentiment
    Analysis Using NLP in Sports Worldwide; An Effective Framework for Sentiment Analysis
    Using RNN and LSTM-Based Deep Learning Approaches; spatial Domain Method for Image
    Analysis: A Grey-Level Computation Approach; an Approach for Effective Object
    Detection; crop Yield Prediction for Smart Agriculture with Climatic Parameters
    Using Random Forest; Implementation of XGBoost Regression for Calories Burnt Prediction
    Using R; machine Learning-Based Temperature Monitoring and Prediction.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Communications in Computer and Information Science
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Proceedings of the 7th International Conference on Advances in Computing
    and Data Sciences, ICACDS 2023
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Alaty M.M.
  - Younis Y.A.
  citation_count: '0'
  description: Not long ago, there was a move from traditional farming to smart farming,
    which depended on data and communication technologies to boost crop output and
    quality. One of the main technologies that have contributed to the existence of
    smart agriculture is the Internet of Things (IoT). The Internet of Things technology
    faced many challenges, so cloud computing was proposed as a complement, yet there
    were some shortcomings. Fog computing technology was introduced to overcome the
    shortcomings of integrating the Internet of Things and cloud technology. This
    paper defines and studies IoT, cloud and fog technologies. They are utilized to
    implement a smart agricultural system consisting of three layers interacting with
    each other to manage, monitor, and control the agricultural environment. The implemented
    system has been deployed and tested on a small farm, which can be controlled remotely
    to observe the humidity of the soil and notify the user of any hazard, such as
    fire.
  doi: 10.1109/MI-STA57575.2023.10169450
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 IEEE 3rd International M... Integrating
    Cloud and Fog Technologies with IoT to Create Smart Agriculture Publisher: IEEE
    Cite This PDF Mohamed Mahfoud Alaty; Younis A. Younis All Authors 70 Full Text
    Views Abstract Document Sections I. Introduction II. BACKGROUND III. Proposed
    Smart Agriculture System IV. System Design and Implementation V. Evaluation and
    Testing Show Full Outline Authors Figures References Keywords Metrics Abstract:
    Not long ago, there was a move from traditional farming to smart farming, which
    depended on data and communication technologies to boost crop output and quality.
    One of the main technologies that have contributed to the existence of smart agriculture
    is the Internet of Things (IoT). The Internet of Things technology faced many
    challenges, so cloud computing was proposed as a complement, yet there were some
    shortcomings. Fog computing technology was introduced to overcome the shortcomings
    of integrating the Internet of Things and cloud technology. This paper defines
    and studies IoT, cloud and fog technologies. They are utilized to implement a
    smart agricultural system consisting of three layers interacting with each other
    to manage, monitor, and control the agricultural environment. The implemented
    system has been deployed and tested on a small farm, which can be controlled remotely
    to observe the humidity of the soil and notify the user of any hazard, such as
    fire. Published in: 2023 IEEE 3rd International Maghreb Meeting of the Conference
    on Sciences and Techniques of Automatic Control and Computer Engineering (MI-STA)
    Date of Conference: 21-23 May 2023 Date Added to IEEE Xplore: 06 July 2023 ISBN
    Information: DOI: 10.1109/MI-STA57575.2023.10169450 Publisher: IEEE Conference
    Location: Benghazi, Libya SECTION I. Introduction Every nation in the globe relies
    heavily on agriculture to ensure the food security of its citizens, making it
    one of the most essential economic foundations in the world [1]. The stability
    and prosperity of nations are significantly influenced by food security. Agriculture
    must overcome numerous obstacles and hurdles to ensure the quality of the crop
    through careful and suitable irrigation, fertilizer application and pesticide
    application. In other words, the total management of agricultural lands, where
    management can become a significant issue when the agricultural field is in a
    broad region, results in an increase in labor and raises the cost [1]. Thus, agriculture
    was required to incorporate some technologies, such as the Internet of Things
    technology (IoT), to address the issues and challenges that agriculture faces.
    This technology will be effective for gathering data and disseminating it via
    the Internet [2]. The term\" Internet of Things\" technology refers to a network
    that connects items to the internet and one another. This is accomplished by giving
    each IoT object its Internet Protocol (IP) address [3]. However, IoT technology
    has difficulties with network management, standardization, processing, storage,
    and safeguarding significant volumes of data. Hence, depending only on it, IoT
    will not be sufficient to solve the issues in agriculture [2]. To solve these
    issues, IoT has to be combined or utilized with other technologies that overcome
    its limitations. The usage of an architecture that incorporates IoT and cloud
    computing is one of several solutions for these issues that have been put forth.
    [1]. Cloud computing is described as a way to offer ubiquitous on-demand network
    access to a shared pool of resources that may be delivered and released quickly
    with minimal operational involvement from the cloud provider [2]. The challenges
    of latency, local storage, and processing in time-sensitive applications have
    not been sufficiently addressed by the integration of cloud technology with IoT.
    Thus this integration alone cannot be a full and dependable solution for all IoT
    applications. Consequently, it must be used with other technologies, such as fog
    computing [3]. Fog computing is a multi-layered approach providing easy access
    to a common continuum of extended computing resources. Furthermore, it has been
    proposed that fog computing technology be combined with cloud computing technology
    to overcome the challenges and limits of IoT [3]. Thus, we presented a smart agricultural
    system that uses IoT, cloud, and fog computing. The proposed system comprises
    layers, each with its own components and technologies that work together to complete
    the integration of three technologies: the Internet of things, cloud computing,
    and fog computing. Furthermore, the proposed system allows the user (farmer) to
    monitor and regulate the farm in real-time with some automated processes, such
    as the ability to produce and send distress SMS to civic defence. The remainder
    of the paper is organized as follows. Section 2 provides context for the employed
    technology and related work. In Section 3, we illustrated the proposed smart agriculture
    system. Section 4 presents the design and implementation of the proposed system.
    The evaluation and testing of the proposed system are illustrated in section 5.
    Lastly, in Section 6, we provide our conclusions. SECTION II. BACKGROUND A. IoT,
    Cloud Computing and Fog Computing The Internet of Things is a young technology
    that has the potential to revolutionize how people work and live [4]. The phrase
    \"Internet of Things\" describes a system of actual \"things\" connected to the
    Internet and supplied with the computational capacity to exchange data with other
    systems and devices [5]. Moreover, more than 100 billion Internet-connected IoT
    devices are expected to operate, with an estimated economic effect of 11 trillion
    US dollars [6]. IoT has recently been considered an appropriate option for smart
    agriculture because of its scalable and ubiquitous design, adding a new dimension
    to agriculture [7]. Additionally, 12 million IoT points are anticipated to be
    present in smart farms by 2023 [2]. Smart agriculture has begun to integrate IoT
    technology to improve operational efficiency, increase productivity, and reduce
    waste through real-time field data collection, data analysis, and control deployment
    [8]. Furthermore, several IoT-based applications like smart irrigation and precision
    farming are particularly helpful in improving agricultural operations. IoT is
    a viable technique to implement linked farms in order to address agriculture-related
    difficulties and increase the quality and quantity of agricultural output [2].
    IoT solutions are intimately linked with cloud computing in order to evaluate
    the massive volume of heterogeneous data provided or received by farm sensors/actuators
    [9]. Cloud computing enables businesses to connect to storage and computing resources
    outside their physical location using the Internet [10]. Regarding IoT, the cloud
    offers organizations a scalable means to handle all facets of an IoT deployment,
    including device location and administration, pricing and security procedures,
    data analysis, and more. Additionally, cloud services give developers access to
    strong tools that enable them to build IoT apps and services fast [11]. Given
    the lofty vision of the Internet of Things—a society filled with linked sentient
    beings—on-demand scalability is essential. The IoT industry now offers cloud-as-a-service
    options [12] \"thanks to significant IT companies\". Although cloud computing
    can handle smart agricultural applications, some of the apps and services generate
    a large amount of data and must be processed instantaneously, putting a burden
    on the network and resulting in delayed reaction times and poor service quality
    due to bandwidth constraints [12]. Due to the movement of agricultural data to
    and from the cloud, employing only a cloud-based architecture to serve these applications
    may not be effective [12]. To solve the aforementioned problems, a fog computing
    architecture was designed to efficiently handle real-time IoT applications and
    services near data sources. It has various advantages over the design, such as
    reduced power usage, network traffic, and improved quality of service. Fog computing
    is a multi-layered approach to providing easy access to a common continuum of
    extended computing resources [16]. It consists of context-aware physical or virtual
    fog nodes to install delay-aware and distraction-aware applications and services
    where fog computing reduces demand response time by connecting peripheral devices
    to central services and local computer resources [17]. The most modern models,
    such as fog in the agricultural system, are not used in traditional cloud-based
    architecture [13] [14]. Fog computing, however, is not a replacement for cloud
    computing since cloud computing is still preferred and suited for heavy workload
    analysis and processing, as well as long-term data storage. Collaboration between
    fog computing and cloud computing is an excellent strategy for producing smart
    agricultural solutions [15]. B. Related Work The author of this study [18] provides
    an overview of distributed architectures that enable IoT to cloud connectivity.
    This facilitates the usage of IoT analytics in critical application contexts.
    The communication range of a Fog/Edge node is crucial when it joins the distributed
    architecture. The author begins with an overview of FECIoT technology, followed
    by a list of problems, and concludes with architecture as a solution for adopting
    FECIoT for remote/mission-critical applications. Harkiran Kaur et al. developed
    an excellent IoT framework for forest fire prediction using fog and cloud technologies
    [19]. The authors developed a six-capability tiered structure. As a single component,
    data perception, fog computing, and fog gateway are all combined. Fire prediction,
    cloud storage, and administration functions are all combined. At the fog layer,
    the vulnerability index is calculated. At the Fire prediction layer, an Artificial
    Neural Network is employed to assess the vulnerability index. In Cloud-IoT networks,
    Azam et al. [20] devised a method for integrating a smart communication module
    with a preprocessing data module. To decrease compute overhead on the Cloud side,
    the strategy combined a smart gateway with fog computing technology. Gutierrez
    et al. [21] described an IoT-based irrigation system comprised of a WSN connected
    to a distant server through a gateway. This project featured soil moisture and
    temperature sensors in addition to water efficiency. Intelligent sensor Web [22]
    advocated using deployed sensors to assess soil moisture and regulate them via
    a Webbased system. To keep track of pH, temperature, humidity, and so forth. Cambra
    et al. [23] presented a video-sensing-based fertilizer for crop productivity control.
    [24] created a smart security and monitoring system based on IoT. Security equipment,
    such as rainstorms and cold storage, were stored in agricultural fields for remote
    control and monitoring. [25] created a soil moisture monitoring device based on
    an energy-efficient algorithm. SECTION III. Proposed Smart Agriculture System
    The proposed smart agriculture system consists of layers, where each layer has
    its components and technologies. These technologies work with each other to complete
    the integration of three technologies, which are the Internet of things, cloud
    computing, and fog computing. Fig. 1 shows the architecture of the proposed smart
    agriculture system. The following is a full explanation of each layer of the proposed
    smart agriculture system in this section: Fig. 1. Proposed Smart Agricultural
    System. Show All A. Layer 1- Internet of Things network layer: The Internet of
    Things layer is the first layer in the architecture, and it is the layer that
    interacts with the surrounding environment. This layer consists of a group of
    nodes, and each node either contains a sensor or a motor. The components of the
    Internet of Things layer are divided into hardware and software as follows. 1)
    Hardware Hardware is an essential component of any technology, as it is the hardware
    that powers the software component of the technology. The suggested smart farm
    system''s physical components are as follows: NodeMCU (Node Micro Controller)
    is an opensource hardware and software development environment built on a System
    on a Chip (SoC) called ESP8266 from Espressif Systems. Digital Humidity and Temperature
    (DHT11) sensors provide the temperature and humidity of the air at any particular
    position or location. Soil wetness is detected by the soil moisture sensor module.
    It measures the volumetric quantity of water in the soil to calculate the moisture
    level. The flame sensor module is sometimes known as the fire sensor module. It
    is a tiny electrical device that detects the presence of fire or other incandescent
    light sources. This sensor primarily detects the wavelength of IR (infrared) light
    released by a fire flame or light source between 760nm and 1100nm. Jumper wires
    are electrical lines that have connection pins on both ends. They are used to
    join two sites in a circle without the need for welding. 2) Software Software
    components are no less important than hardware and are the second essential component
    of any technology. The software components of this layer are a development environment
    Arduino IDE and the programming language C++. Arduino Integrated Development Environment
    (IDE) is sometimes known as Arduino Software (IDE). It communicates with and uploads
    programs to the Arduino hardware. The Arduino IDE uses C++ language. B. Layer
    2-Fog Layer The fog layer consists of a single node where this node acts as a
    gateway for IoT nodes that connect the IoT network to the cloud over the Internet.
    It is also connected with the API to send and receive readings (data) from the
    IoT network to the cloud. Moreover, it receives instructions from the cloud and
    sends them to the IoT nodes to perform the tasks assigned to them. It also sends
    SMS messages to the civil defense unit when it receives an alarm from the fire-sensing
    node. Fog points are TTGO T-Call ESP32 with SIM800L GPRS module. It is the only
    physical component of the fog layer in the system, and the software component
    of this layer is the same as the software component of the Internet of things
    network layer. The TTGO T-Call ESP32 with SIM800L GPRS Module is a new ESP32 development
    board that comes with a SIM800L GSM/GPRS module. The new board incorporates an
    ESP32 WiFi and Bluetooth WiSoC as well as a SIMCom SIM800L GPRS module. It powers
    and programs through a USBC connector rather than the micro USB port used on other
    comparable devices, and it is programmed using the Arduino IDE. C. Layer 3- Cloud
    layer The cloud layer consists of a website, API, and database, which are all
    hosted on the Python cloud anywhere. The website, API, and database are developed
    using the Django framework, the Django REST framework, and the Python programming
    language. The database was developed by using SQL light type to apply the concepts
    no more. Cloud layer components interact with the fog layer via an API. PythonAnywhere
    cloud is a Python-based online IDE and site hosting service (Platform as a service).
    Django framework in Python enables the rapid creation of archived and secure websites.
    Python is an object-oriented, high-level, dynamic programming language that is
    interpreted. It is especially recommended for rapid application building. Django
    REST framework (DRF) is a toolkit based on the Django web framework that minimizes
    the amount of code required to establish REST interfaces (REST API). SECTION IV.
    System Design and Implementation A. The System Design: As previously stated, the
    suggested system''s design is composed of three levels. In this section, we will
    discuss how the layers are connected from the bottom layer to the middle layer
    and finally to the top layer, as shown in Fig. 2, which depicts the layers'' interconnection.
    Fig. 2. Connect the layers of the Smart Agriculture System. Show All As shown
    in the above figure, the communication between the IoT layer and the fog layer
    is carried out wirelessly using the ESP-NOW protocol, whether it is an Uplink
    or Downlink connection, while the communication between the fog layer and the
    cloud is carried out over the Internet using the HTTP protocol, specifically using
    the PUT method to update the database hosted on the cloud. The GET method function
    is also used to fetch data and commands from the database. B. The System Implementation:
    According to the proposed system design, the proposed system was implemented from
    the lower layer to the upper layer in a series of stages. These stages include
    connecting nodes and sensors and installing nodes in the agricultural field. 1)
    Connecting nodes and sensors A connection between each sensor and the Node-MCU
    ESP32 boards has been established at this stage. Connect Air humidity sensor (DH11).
    Connect soil moisture sensor. Connect RGB LED. Connect the Flame sensor. 2) Installation
    of nodes in the agricultural field In the proposed system, the nodes in the agricultural
    field are installed at the level of the IoT and fog layer. Fig. 3 shows the installation
    of nodes in the agricultural field. Fig. 3. Installation of nodes in the agricultural
    field. Show All A fog node is installed and uses the ESP-NOW protocol. Hence,
    IoT nodes can communicate with it. Fig. 4 shows the installation of a fog node
    in the agricultural field. Fig. 4. Installation of a fog node. Show All SECTION
    V. Evaluation and Testing In this section, the proposed system has been tested
    at each layer of the proposed system. The IoT layer was tested by collecting data
    from the agricultural environment through the IoT layer nodes and then sending
    the data to the Fog node, which, in turn, connects to the API via HTTP PUT to
    transfer the environmental data from the IoT layer to the cloud. Fig. 5 shows
    a Fog node that receives data collected by IoT layer nodes. Fig. 5. Received data.
    Show All As shown in Fig. 5, the red box (A) shows the attempt to connect to the
    Internet, and the actual Wi-Fi connection, the red box (B) presents the soil moisture
    temperature coming from the soil moisture sensor node and also contains the MAC
    address of the board, while the red square (C) illustrates the air temperature,
    air humidity, and MAC address of the board that sent the data. After receiving
    the data from the IoT layer, the Fog node calls the API and uses the PUT method
    of the HTTP protocol, as shown in Fig. 6. Fig. 6. HTTP PUT method. Show All After
    receiving the collected data from the agricultural environment, the data was transferred
    to the cloud for storage in the database by calling the API and using the HTTP
    protocol, where the red box in figure 6 indicates the process of calling the API,
    and the number 200 is a status code indicating that the HTTP request was successful.
    After the collected data were sent to the database located on the cloud via the
    fog node, the website (created and hosted on the cloud) was tested to monitor
    and control the agricultural environment by the user (farmer). Fig. 7 presents
    the farmer’s login process to his account. Fig. 7. User login. Show All Fig. 8
    illustrates the user’s dashboard. The black box shows the domain of the site,
    while the blue box presents the data on the user’s agricultural field. The user
    can control the lighting of the agricultural field through the buttons inside
    the red box. Fig. 8. User dashboard. Show All The agricultural field lights are
    controlled by the user, as the fog node does HTTP GET continuously. When there
    is any new command from the user, the fog node sends the command to the Internet
    of Things nodes to perform the tasks assigned to it. The test was divided into
    two parts: the first was to turn on the field lights, and the second was to turn
    off the agricultural field lights. 3) Turn on the field lights The field lights
    were turned on by the user pressing the \"turn on the lights\" button on the website.
    The fog node captured the change in the value of the light field in the database
    and sent a command to the RGB LED node in the Internet of Things network to turn
    on the agricultural field lights. Fig. 9 shows the work of HTTP GET by the Fog
    node and then sending the command by using ESP-NOW protocol to turn on the lights
    to the Internet of Things. Fig. 9. Turn on the field lights with HTTP GET. Show
    All The Red Box (A) in Fig 9 indicates that the light field value in the database
    is still false, the red box (B) in Fig 9 indicates the HTTP GET request, and the
    red box (C) in Fig 9 indicates that the light field was turned on after changing
    the value of the light field in the database to true. Fig. 10 presents an RGB
    LED node after the light is turned on. Fig. 10. Turn on the RGB LED node. Show
    All 4) Turn off the field lights After the field lights were turned on, the \"Turn
    off field lights\" button was pressed by the user, and then the value of the field
    lights in the database changed from true to false. The fog node picked up the
    change, and the command to turn it off was sent to the Internet of Things. Fig.
    11 shows the process of turning off the light. Fig. 11. Turn off the field lights
    with HTTP GET. Show All The red box (A) in Fig 11 presents the value of the light
    field that has not changed yet in the database, while the red box (B) in Fig 11
    shows the RGB LED node light is turned off after the light field is changed from
    true to false. Fig. 12 illustrates the RGB LED node after the light is turned
    off. Fig. 12. Turn off the RGB LED node. Show All The last test of the system
    was to ignite a flame in the agricultural field, where the presence of a fire
    was detected by the flame sensor node of the IoT, as shown in Fig. 13. There was
    a fire in the agricultural field, and the sensor lamp turned red indicating the
    flame sensor detected the presence of a fire. Fig. 13. Fire in the agricultural
    field. Show All After detecting the presence of fire by the flame sensor, as shown
    in figure 13, a notification of the presence of fire was sent to the fog node,
    which processes and analyzes the data based on the code embedded in it. Fig. 14
    shows the Fog node receiving a fire alarm from the IoT sensor. Fig. 14. Fire alarm.
    Show All After the foggy node received a report of a fire in the agricultural
    field, it processed and analyzed the data directly and sent a distress message
    to the civil defence units containing the address of the farm. As shown in the
    figure above, the red box (A) displays the MAC address of the flame sensor node
    that helps the fog node know the address of the farm, the red box (B) displays
    the alert message with value 1 of the variable (X) indicating there is a fire
    in the field. Box C contains the distress message. Fig. 15 shows that civil defence
    units received a distress message. Fig. 15. Distress Message. Show All SECTION
    VI. Conclusion A smart agriculture system that consists of a set of layers was
    proposed, designed, and implemented by integrating cloud and fog computing with
    IoT technology, where each layer contained a set of components and technologies.
    The IoT layer collects environmental information from the agricultural field and
    then sends it to the fog layer, which in turn plays the role of a gateway for
    the IoT layer to communicate with the cloud layer and send an instant SMS to the
    civil defence units upon receiving an alarm from the flame sensor node in the
    IoT layer. The cloud layer receives data through an API that connects the fog
    layer to the cloud layer to send and receive data as well. The cloud layer consisted
    of a database to store incoming data and a website to display environmental data
    on agricultural fields. Furthermore, we prove that the proposed system can be
    deployed to increase the efficiency of crops and the convenience of users (farmers).
    The system can be expanded with sensor nodes and other actuators to increase monitoring
    and control of agricultural equipment to make the system more suitable and advanced
    for the needs of the present and the future. Authors Figures References Keywords
    Metrics More Like This Humidity Prediction in Crop Monitoring System through Machine
    Learning and web based application in finance and Smart Agriculture 4.0 2022 International
    Conference on Fourth Industrial Revolution Based Technology and Practices (ICFIRTP)
    Published: 2022 An Innovative Approach for Leaf-based Disease Detection in Crops
    and Soil Analyzer using Machine Learning for Smart Agriculture 2022 2nd International
    Conference on Technological Advancements in Computational Sciences (ICTACS) Published:
    2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceeding - 2023 IEEE 3rd International Maghreb Meeting of the Conference
    on Sciences and Techniques of Automatic Control and Computer Engineering, MI-STA
    2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Integrating Cloud and Fog Technologies with IoT to Create Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh G.
  - Singh J.
  citation_count: '0'
  description: Organisations must efficiently handle as well as interpret a massive
    influx of data because of the emergence of technologies like the Internet of Things
    (IoT) including fog computing. A production strategy known as "smart agriculture"uses
    technology-enabled knowledge and interaction to monitor fields. Almost 60% of
    India's companies, to use an analogy, are agriculturally dependent. Improving
    existing agronomic systems and transforming them into smart agriculture represents
    the most efficient approach for dealing with agriculture's difficulties. The smart
    agriculture approach provides useful data collecting, incredibly accurate controls,
    and automated monitoring tech-niques. This study put out a fog-based model with
    IoT additional support which thus is promising to provide a smart agriculture
    infrastructure that is widely available. Fog platform includes proper data processing
    of information produced by IoT gadgets used in connected agriculture by bringing
    computing and data storage close as possible to the network's outermost boundaries.
    The findings suggests the use of the Web of Science database's literature search
    for the advancement of the IoT-Fog training sample in the creation of smart agricultural
    production. When properly implemented and compared to current IoT-based farm systems,
    the suggested method is more efficient. The outcome indicated that the recommended
    system enhances the precision of that same existing systems geometrically while
    reducing system performance, computational efficiency, and statistical significance
    to substantial levels.
  doi: 10.1109/I2CT57861.2023.10126231
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 IEEE 8th International C... A Cost
    Effective IoT-Assisted Framework Coupled with Fog Computing for Smart Agriculture
    Publisher: IEEE Cite This PDF Gurpreet Singh; Jaspreet Singh All Authors 7 Cites
    in Papers 102 Full Text Views Abstract Document Sections I. Introduction II. Related
    Work III. Proposed Fog Based Model For Smart Agriculture IV. Results and Analysis
    V. Conclusion Authors Figures References Citations Keywords Metrics Abstract:
    Organisations must efficiently handle as well as interpret a massive influx of
    data because of the emergence of technologies like the Internet of Things (IoT)
    including fog computing. A production strategy known as \"smart agriculture\"
    uses technology-enabled knowledge and interaction to monitor fields. Almost 60%
    of India’s companies, to use an analogy, are agriculturally dependent. Improving
    existing agronomic systems and transforming them into smart agriculture represents
    the most efficient approach for dealing with agriculture’s difficulties. The smart
    agriculture approach provides useful data collecting, incredibly accurate controls,
    and automated monitoring tech-niques. This study put out a fog-based model with
    IoT additional support which thus is promising to provide a smart agriculture
    infrastructure that is widely available. Fog platform includes proper data processing
    of information produced by IoT gadgets used in connected agriculture by bringing
    computing and data storage close as possible to the network’s outermost boundaries.
    The findings suggests the use of the Web of Science database’s literature search
    for the advancement of the IoT-Fog training sample in the creation of smart agricultural
    production. When properly implemented and compared to current IoT-based farm systems,
    the suggested method is more efficient. The outcome indicated that the recommended
    system enhances the precision of that same existing systems geometrically while
    reducing system performance, computational efficiency, and statistical significance
    to substantial levels. Published in: 2023 IEEE 8th International Conference for
    Convergence in Technology (I2CT) Date of Conference: 07-09 April 2023 Date Added
    to IEEE Xplore: 23 May 2023 ISBN Information: DOI: 10.1109/I2CT57861.2023.10126231
    Publisher: IEEE Conference Location: Lonavla, India SECTION I. Introduction IoT
    platforms enable the ultimate gathering, computation, but instead analysis of
    substantial quantities of sensor data, which enables the creation of sustainable
    solutions for a range of fields such as health care, industrial production, or
    otherwise agricultural production. Real-time data processing enables body that
    is responsible and increased effectivenes [1]. By upgrading conventional farming
    techniques and enhancing the effectiveness of crop cultivation to satisfy the
    rising demand, IoT has always had the potential to change the agricultural production.
    IoT technologies are capable of being utilized to track agricultural yields, climate
    variability, soil type, and other elements that have a significant effect on agriculture.
    Making responsible decisions or otherwise optimising resource utilisation using
    this data will increase efficiency as well as reduce waste. IoT-enabled smart
    crop cultivation is poised to significantly boost the economic growth and accommodate
    the demands of an expanding population [2] [3]. The agriculture industry, which
    is essential to the global financial system, must satisfy the rising need for
    agricultural products. By making use of intelligent gadgets and technologies,
    IoT has the opportunity to modernize established agricultural practises, leading
    to enhanced and fruitful farming techniques. Internet -of - things technologies
    can enhance a number of agricultural processes, including crop cultivation, irrigation,
    or rather live-stock tracking, resulting in higher yields and more efficient use
    of resources. For the future of food production and farming, \"Smart Agriculture,\"
    or the utilization of IoT in agriculture, has enormous potential. By gaining consumer
    happiness and service levels, IoT paradigm has the potential to revolutionise
    a number of sectors, including agriculture. The demonstrated The network visualisation
    of IoT-enabled smart agriculture is shown in Figure 1. The data was gathered as
    from Web of Science Core Collection database. Fig. 1. Network Visualisation of
    IoT-enabled Smart Agriculture Show All IoT modelling entails the fusion of various
    communication methods, including wired and wireless, technologies to create a
    worldwide network of addressable but rather connected objects. The development
    of intelligent items that satisfy the requirements of a customer group that is
    becoming more motivated is made possible by this interconnectivity. The adoption
    of IoT across various sectors can result in increased productivity, better customer
    situations, but rather increased performance [4]. IoT is an essential integrated
    technology that could really support an extensive variety of apps and services,
    which means it’s in addition to a independent system. Extraction of accurate information
    from complex sensing surroundings is now more difficult because of the extensive
    use of intelligent devices in IoT environments. This necessitates the creation
    of sophisticated algorithms, systems for machine learning, or otherwise data processing
    technology that can manage the differences between groups and sophistication of
    the data produced by devices linked to the Internet of Things [5] [6]. A highly
    scalable framework called fog computing had also been created to handle IoT’s
    difficulties. It makes real-time information processing more effective by moving
    the computing power farther from the information source. This is particularly
    helpful in situations like the smart grid but instead smart city, where making
    prompt and precise choices is essential. Fog Computing eliminates the frequency
    and bandwidth needs of transmitted data by moving the network bandwidth towards
    the information source, improving system reliability and enabling quicker evaluation.
    It offers a high performance computing architecture that enhances the model for
    cloud computing and makes it possible to manage IoT information and offerings
    in an efficient way possible [7]. Fog computing helps to prevent adversely effecting
    resources available in the cloud by relocating computing capacity near the information
    source, enhancing system responsiveness and effectiveness. For the proper implementation
    of IoT solutions, the connection between fog as well as cloud computing in information
    management is essential. With the help of fog computing, specific data management
    and computation storage processes can be moved from the virtualization to either
    the network’s edge, resulting in less data being communicated via the network
    whereas less strain on the cloud’s resources.The demonstrated IoT-enabled smart
    agriculture’s citations and publication report are shown in Figure 2; the data
    was derived from the Web of Science Core Collection database. As a result, information
    security and analytics are enhanced, and resources associated with cloud computing
    are used more effectively [8]. Fig. 2. IoT-enabled Smart Agriculture’s Citations
    and Publication Year-wise Report Show All By providing compute, storage, connections,
    prediction, as well as data management local network nodes proximate to that same
    IoT devices, fog computing provides a link between the cloud or otherwise end-devices
    like IoT nodes. This enables computing, storage, communications, and eval-uation
    to take place not only in the server but also while data travels along the IoT-to-cloud
    journey. Fog Computing boosts the general performance of IoT systems by enable
    the processing of information that is closer to the source, which lowers latency
    and bandwidth needs for data trans-mission. Fog computing distributed architecture
    ensures that crucial data management and situation tasks are completed promptly
    and effectively, facilitating the successful imple-mentation of IoT solutions
    [9] [10]. Fog computing bridges the gap among its server as well as smart environments
    by offering technology, information, telecommunications, and interoperability
    on the networked devices close to the Internet of things. Because of this, after
    data is delivered to the cloud, computation, processing, information exchange,
    selection, and process automation take place simultaneously within the cloud and
    along the Internet - of - things journey. By applying these reliable estimates
    to the IoT devices, cloud computing decreased the latency overall bandwidth needs
    of transmission of information, increasing performance of the system and permitting
    quicker selections. Also, it provides a framework for distributed systems that
    improves cloud computing and enables the management but instead preparation of
    enormous amounts of data generated by IoT devices [11]. The production of food
    is being challenged by rising food demand, climate change, as well as water shortage,
    among other issues. With the goal of boosting profitability and productivity throughout
    the agricultural sector, new technologies but instead solutions are being created
    to address these issues, including automation, and situation systems. These developments
    seek to enhance how we cultivate and agricultural crops, utilize things, and make
    wise selection [12]. Smart agriculture is a kind of agri-cultural that combines
    cutting-edge technologies in order to improve agricultural production as well
    as effectiveness. These technologies include information technology, distant sensing,
    and proximate data collection. PA endeavors to eliminate adverse environmental
    effects like the loss of soil and water water contamination while maximizing the
    utilization of inputs like water, fertilizer, and seeds [13]. The farming community
    is increasingly using sensors in gardens to collect real-time data on many variables
    that influence crop development and welfare. By gathering and analyzing information
    from a variety of sources, gardeners or otherwise horticulturists can make better
    informed choices about farming techniques, improving yields and influencing to
    more farming practices. Those other sensors are capable of measuring a variety
    of parameters, including humidity, soil reflectivity, pH levels, nutritional quality,
    as well as water characteristics. Farmers use the data gathered by these instruments
    to support their choices on, among other items, hydration, fertilization, and
    insect control. Although these requirements are now simpler to use, their usefulness
    is still constrained because they are frequently not suited to the particular
    requirements of each farmer. Emerging technologies are already being developed
    to meet this situation and give farmers additional individualized and specialized
    solutions, enabling them to maximize their resources and increase agricultural
    yields [14] [15]. A. Technologies used in Agriculture Agricultural production
    uses a wide range of technology to boost effectiveness, production, and environment.
    The following are some of the most popular technologies.These innovations are
    assisting farmers in lessening their additional impacts while improving productivity,
    cutting waste, and increasing yields. Over moment, agriculture has changed substantially,
    and the use of new technologies is causing the sector to advance even more. Increased
    efficiency and production in agriculture are being brought about by the fourth
    agricultural economy, often known as the \"Digital Agricultural Revolution,\"
    which may have favorable effects on social stabilization and continuing economic
    advancement [16] [17]. The effectiveness of information transfer in agriculture
    is increasing because to the convergence of the Zigbee wireless network again
    with Internet of Things . The demonstrated The overlay visualization of IoT-enabled
    smart agriculture is shown in Figure 3. The data was gathered as from Web of Science
    Core Collection database. Fig. 3. Overlay Visualization of IoT-enabled Smart Agriculture
    Show All The development of micro-controller technologies has enabled it to be
    possible to regulate and monitor numerous aspects of economic productivity in
    significant, especially field development and the usage of fertiliser and water.
    The relevancy of the information becoming generated is further enhanced by the
    use of telescopes for accurate monitoring as well as operation. These developments
    are advancing the sector and propelling the \"technology agriculture transformation\"
    [18]. Monitoring this same working atmosphere in which crops develop is a crucial
    component of contemporary agriculture. Actual data on numerous climatic parameters,
    including as temperatures, dryness, Carbon dioxide concentration, brightness,
    soil moisture content, temperature, and land Soil ph, may be gathered and evaluated
    by employing various multiple connections through the agriculture production IoT.
    This aids in regulating and controlling the environment in which crops develop,
    resulting in increased yields and general agricultural efficiency [19]. Agricultural
    production makes use of a wide variety of available information to assist in decision-making
    and boost productivity in the sector. These data sources, which include autonomous
    farmers, cultivators, robotic systems, helicopters, sensor systems, and transmitters,
    gather a variety of farming data, including details about the surroundings and
    the state of the soil. The information gathered from these sources may be utilized
    to regulate a variety of actuators, including lighting, automatic windows, both
    water and soil nutrition pumping systems, ventilation systems, and water heaters,
    in the hope of enhancing overall agricultural output [20] [21]. In the agricultural
    production, technology is used widely with an emphasis on increasing efficiency
    and profitability while lowering costs, time, and human factors. An important
    part of this is played by IoT, which enables the technology of numerous agricultural
    processes like water distribution, soil observation, fertilizer application, and
    animal monitoring by using sensors. Smart greenhouses use a wide range of technology
    to protect plants from adverse weather, including remote electronic objects, computers
    with internet access, sensors, camera systems, and embedded processors. These
    developments are advancing the sector and fostering a more efficient and environmentally
    sound methodology to agriculture [22]. B. Fog Computing for Smart Agriculture
    Automatic process can be used in many different contexts to increase automation
    and are made up of a wide range of parts. These networks frequently share three
    traits, especially fog computing, which uses modest processing configurations
    adjacent to IoT devices rather than the huge, widely dispersed network infrastructure
    of cloud computing. As a result, geographic IoT applications have a less carbon
    footprint and even more effective, delay-sensitive services. Fog computing has
    applications in a wide range of industries, including multiplayer gaming, medicine,
    and agricultural production [23]. In an effort to restrict the quantity of data
    sent to the cloud and then to enable real difference, the fog computing is a crucial
    element in smart systems as given in Figure 4. It is in charge of performing on-site
    customer information filtering and interpretation. It is an advantageous strategy
    for usage IoT-based applications that need real-time operations, such farmland
    observation and smart grid solutions, because of its proximity to that same edge-users,
    public networks, and compatibility for mobility. These qualities aid in enhancing
    the service they provide for embedded applications and offer farmers as well as
    many other users quick, effective services [24]. Fig. 4. Fog Computing for Smart
    Agriculture Show All SECTION II. Related Work For resolving agricultural concerns
    and advancing a nation’s growth, agricultural production approaches must be transformed
    thru the agricultural technology. The suggested framework supporting sensor networks
    alongside the Internet of Things in agricultural applications offers a useful
    data gathering, accurate control, and models are equipped. By monitoring moisture,
    temperatures, and pressure, this sustainable farming method enables producers
    to make better choices and increase yields. The objective is to improve agriculture
    with advancements in technology to render it more economical, affordable, and
    effective [25]. The authors of [26] paper represent technique offers an affordable
    and adaptable method for deploying soft sensing classifiers remotely utilizing
    IoT technologies. It is a practical and affordable solution for farmers as well
    as agricultural groups since it uses inexpensive hardware and even a fully accessible
    computer language. The solution’s complex nature also permits greater flexibility
    and modification, allowing farmers to modify the structure according to their
    unique demands. With the help of affordable, adaptable, and approachable approaches,
    technology will be made available to people who require it, which will help to
    enhance agricultural production. Agriculture describes how farmers employ human-made
    instruments to generate food while also controlling their surroundings. One possibility
    is that farmers continue to struggle to monitor and care for their crops, making
    the creation of a connected sensor system for crop production based on IoT necessary.
    The intelligent agriculture system aims to evaluate but instead tracks the problems
    faced by farmers in the interest of improving commodity productivity. By placing
    several sensors, it was possible to generate necessary information for agriculture
    activities, which was then shown in the motion sensors for users to utilize in
    making judgements about things like how to undertake agricultural production [27].
    With the use of several sensors, IoT-based Infrastructure has been extensively
    used in agricultural operations to monitor productivity conditions and automate
    appropriate agricultural practises. In the hope of improving quality and yield
    through analytical farming decisions, these sensor nodes are used in the agroecosystem
    to obtain information on crops, houses, remote monitoring, dryness, water management,
    and more. Yet, monitoring technology’s limited sequencing, energy, transmission,
    and memory capacities could have a negative impact on agricultural output. These
    IoT-based sustainable agricultural sensors must be secured from hostile arguments
    in additional to being productive [28]. Agricultural production is one among the
    economic fields that requires urgent attention rather than advancement because
    it has a significant potential and makes optimal use of resources. This study
    outlines a technique for IoT-based agricultural monitoring that is economical.
    The four layers of the prescribed word document for smart agricultural monitoring
    include accelerometers, sensors as well as data level, terms of qualifications,
    edge computing, and finally, the smart data level. The method used here uses an
    Arduino-designed connected device to analyse soil moisture, degrees, humidity,
    and additional important minerals. The sensor node additionally includes a motorised
    and a wi - fi or bluetooth module [29]. The significant number of complex and
    expensive, connectivity Internet of Things monitors that have the capability to
    remotely track and share information about crop, precipitation, and environmental
    conditions has had an implication on this, among other possibilities. This makes
    it feasible to manage available resources, for as a result of sacrificing water
    for agriculture and substances. Alternatively, because of recent developments
    in digital advanced technologies, crops may very well be capable of sharing enhanced
    agricultural equipment and produce better predictions for the future based on
    actual events rather than hypothetical ones. This would enable farm-ers to eradicate
    plant disease infestations together with crop-related respiratory disease [30].
    Improved information and demonstration Individuals, techniques, technology, and
    small details can all be directly supported by the Internet of Everything (IoE).
    It provides a potent instrument for converting information into actionable information.
    Given the growing impact of the digital IoT throughout each sphere of society,
    implementing IoE for an efficient agricultural methodology makes perfect sense.
    A certain study [31] aims to accomplish following. It instead presents a smart
    IoE-based precision agriculture model as a revolutionary AgriTech instrument which
    promotes successful communication with all IoT-based equipment (IoESA). More-over,
    it promotes a practise known as Soil-Smart Agriculture (SSA), which use sensors
    to assess soil nutritional value and offer farmers with the most precise information
    [31]. Agriculture and smart sensors are expected to have a significant positive
    impact on the diversified farming activities. The IoT’s exponential expansion
    in connection has led to the development of better agricultural systems. Agricultural
    production as well as farming practices is expected to have a significant positive
    impact on the various agricultural work. The current solutions, which are informed
    by popular cloud resources, can-not handle the enormous volume and variety of
    data produced by connected IoT devices. In an effort to minimize latency but rather
    support quick selection on newly created data, it is essential to shift systems
    integration towards the point of manufacturing capacity. Several fog-based approaches
    will be introduced, which would also aid with being. An IoT-Fog based agricultural
    information system might be significantly more successful for efficient scalability
    and extremely fast data rates for making informed decisions throughout real time.
    The technology of the suggested technique was recently demonstrated and described.
    An AgriFog implementation has been designed and modelled using iFogSim [32]. The
    principal revenue earner for the people in developing nations may have historically
    been agricultural. According to demands of customers, the IoT-enhanced crop production
    centred around greenhouses may possibly provide greater yields and better quality.
    The deployment of Wireless Sensor Nodes (WSN), automated systems, remote data
    processing data centers computer technology, and network services through user
    apps implemented as part of IoT will enable the effective utilization of the readily
    available finances. This research aims to design an IoT-based system enabling
    agricultural enterprise operation that appears to be extensible but is instead
    cost -effective, particularly order for developing countries and rural areas to
    monitor and handle connectivity, such as the internet or otherwise natural energy.
    The acquired data may afterwards be studied through further climate as well as
    weather conditions, enabling the planning of something like the productive and
    reasonable crop to be maintained over a period of time [33]. Predefined applications
    of wireless network infrastructure like IoT and fog computing (FC) are advancing
    quickly. When compared to some Sensor networks, such as some sensor devices, smart
    houses, and smart online ordering, standardisation, bandwidth utilization, and
    orientation knowledge and understanding appear to be features contemporary IoT
    lacks. The explanation of services include storage, computation, and network adapters
    to the edge of networks is made possible by the combined effects of IoT with FC,
    which provides these activities. This study [34] examines the security threats
    associated with IoT and FC and underlines the benefits of their collaboration
    [34]. SECTION III. Proposed Fog Based Model For Smart Agriculture A. System Architecture
    The solution being proposed makes use of a microcontroller (NodeMCU) with an ESP8266
    Wi-Fi module embedded on top of it. Bluetooth technology is implemented on a smartphones
    as the user interaction. The usage of a DC motor, a sensor for soil moisture,
    a both temperature and humidity sensor (DHT11), and rain sensing sensors. Whenever
    the DC motor is switched ON, a water pumped attached to this DC motor pushes water
    to that same crops. The sensor for soil moisture determines the soil’s relative
    humidity. NodeMCU makes a decision regarding whether one should water this same
    crop based on the amount of moisture. The watering of just the crop is commenced
    by NodeMCU turning the Motors ON when the soil’s relative humidity must be below
    threshold value and has been turned OFF as soon as there is sufficient moisture
    in the soils by utilising the relevant functions and conditionals mostly in code
    generated for the NodeMCU working. The climate’s both temperature and humidity
    values are provided by the humidity as well as temperature sensor, which helps
    assess whether one crop is suited for development. Figure 5 depicts about the
    proposed model for smart agriculture. Fig. 5. Proposed Model for Smart Agriculture
    Show All Fig. 6. Proposed Model for Smart Agriculture: Flow Chart Show All B.
    System Implementation The technique is being implemented by directing sensors
    modules further towards the agriculture. The hardware setup seems to be using
    an Arduino alongside an additional number of sensors to collect data from the
    field. The techniques and applications implemented for the tests are discussed
    in the paragraphs that follow. C. Steps of Implementation Step 1 (Set basic Programmable
    Devices Up): Create a software for each configured device, together with Arduino,
    GSM , ESP-01 Serial into Wi-Fi Configuration, and point - to - multipoint device.
    Everytime write a system that would allow the Arduino to turn on something like
    a relay, communicate by sending and receiving signals over most of the ESP-01
    Wi-Fi control system, and collect audio input information obtained from the sensors.
    To ensuring that each ESP-01 Wi-Fi configuration can be easily identified and
    connected, the ESP-01 Wi-Fi components should be configured with a special ID
    and maybe even a shared password. They must additionally be set up to be capable
    of transferring and receiving information. The ESP-01 should offer the router’s
    login information and password so that they can still quickly access it and share
    information. Step 2 (Implementing the programs in the Arduino platform) The Arduino
    programming can be made to regularly check from starting and to act as a rectifier
    by processing the data in every Arduino’s design and providing it with a special
    network identifier. Step 3 ( Sensor Conditions Integration). Every Arduino is
    continuously connected towards the sensors. A variety of times, one MQ-02 and
    an additional TEMT6000 will be linked to the high temp signal of something like
    the sensors using the Arduino’s A0-A7 pins. The VCC as well as GND pins of each
    sensor are going to have been connected to the 5v and GND Arduino pins, respectively.
    Step 4 (Connecting Relay module): The digital con-nections through and near the
    signal generator will be connected to that same D49 and D35 pins somewhat on Arduino.
    The 3.3v and GND pins of the Arduino will receive data from the VCC and GND pins
    of the analog pin. Step 5 (Setting up the ESP-01 Wi-Fi module): With the ESP-01
    component, the entire first pin should be used mainly for sending signals, while
    the last pin serves as a means of receptions. The equalizer pin must be connected
    to a particular one of the Arduino’s receiver pins, and thus the receiver pin
    itself must be connected to the connected pin via that Arduino configuration.
    Always integrate pins 5 and 6 to the 3.3-volt port on the exact same Arduino,
    and input signal 4 at all times. Step 6 (Powering up all the devices): The major
    parts of it’s proposed framework that would be transformed into energy sources
    directly are the Arduino and communication module. The Arduino should always be
    connected via a 5v 2.5 voltage regulator adaptor. Due to the SIM808’s high electricity
    consumption, a voltage regulator with a voltage range of 7 to 12 volts is necessary
    for it to function. The router’s power source is commonly 12 volts, irrespective
    of its model. SECTION IV. Results and Analysis IoT platforms provide communication
    services, monitoring, and descriptive statistical resources. The data from those
    in the examined field is transferred onto an identical cloud platform via a gateway
    layout, where it is instantaneously exhibited and suggestions are made and provided
    via net-work infrastructure. The MATLAB inquiry runs MATLAB code to transmit data,
    illustrate it, or perform other types of analysis. The proposed method uses a
    measurement device to collect field instantaneous information such as weather,
    humid, wind speed, and soil moisture. These monitor and control instances are
    part of the cloud device ensuring identification and quantification. Figure displays
    the results of plotting the data for moisture content, temperatures, humid, and
    overall quality of air. The central server serves as a representation of the performance
    testing of acquired agricultural experimental data. Figure demonstrates how the
    observations have changed. The uncertainty of the sensor data obtained in various
    circumstances is shown and portrayed on the graph. Figure 7 is used to gauge soil
    moisture, Figure 8 to sensor temperature, Figure 9 to monitor relative humidity,
    and Figure 10 to monitor air quality. To demonstrate the meaningful comparison
    of three days’ worth of temperatures and establish the relationship among both
    relative temperature and atmospheric velocity, a MATLAB procedure similar to the
    MATLAB code is performed. Fig. 7. Reading Sample for Soil Moisture(%) from Agriculture
    Field Show All Fig. 8. Reading Sample for Temperature from Agriculture Field Show
    All TABLE I Reading Sample From Agricultural Field Fig. 9. Reading Sample for
    Humidity(%) from Agriculture Field Show All Fig. 10. Reading Sample for Wind Speed(m/s)
    from Agriculture Field Show All When evaluating the system’s overall effectiveness,
    four performance measurements are taken into account. Given that they’re not aware
    of the relevance of standard deviation in performance analysis, many performance
    analyzers have undesired reactions to it. The standard deviation is a key indicator
    of how consistently the evaluations performed in efficiency test results are examined.
    Equation (1) compares the substantially similar cloud platform with the different
    cloud platforms based on standard deviation besides the total amount of response.
    STDEV( x n )= 1 N−1 ∑ i=1 N ( x i − x ¯ ) 2 − − − − − − − − − − − − − − − − 
    ⎷   (1) View Source For the sake of determining the effectiveness of the entire
    system, the performance and standard deviation for this kind of specific cloud
    platform and these few different pieces of communications infrastructure are also
    being evaluated. Equation (2)’s Error Rate differentiates the incoming data, which
    primarily comes from communication systems. The error rate is calculated as nothing
    more than a performing data collected by calculating the percentage of inconsistent
    pairings containing data items across the specified input set data types received
    through all of that source. The results of error rate predictions have been connected
    to these estimated implications [35]. ErrorRate= x−y x ∗100% (2) View Source The
    investigation of the suggested method for response time but instead standard deviation
    when using different cloud platforms is shown in the Table II. The scheme’s exhibited
    standard deviation and response time, which are implemented in the identical cloud
    platform, are 8.83 milliseconds as well as 7.67 milliseconds, respectively. These
    measurable implications are now connected to findings from a variety of cloud-based
    techniques [25]. Even if the method is effective for evaluating agricultural productivity,
    the efficiency of the proposed model is acknowledged in comparison to earlier
    framework research methods. TABLE II Performance Measurement of the Proposed Smart
    Agricultural System SECTION V. Conclusion To address the demands of an ever-growing
    population, smart agriculture seems to have become increasingly important. IoT
    collects key information from farm fields with the help of sensors and sends it
    through safe environments that include identical cloud storage. Fog computing
    facilitates ac-cess such as data processing, gathering, and security, primarily
    on agricultural producing platform based like alert and intelligent fertilize.
    In this study, a proposed IoT-based platform for monitoring and overseeing agricultural
    water sources is made. The Internet of Things demonstrates useful meaning for
    enabling farmers and proposes an appropriate infrastructure to support smart agriculture
    by bolstering optimized design. Every agricultural technology is able to attain
    its objectives with the assistance of real-time information and recommendations.
    The cloud platform involves collecting, processing, or more appropriately, analysis
    of data while also storing it. Use the detected monitoring system to figure out
    the foretasted weather and, consequently, the degree of soil humidity. The users
    carry out some other irrigation process by making predictions based on the essential
    information currently being gathered. The conclusions of tests and analysis show
    how useful the pro-posed scheme is for real-time monitoring throughout irrigation
    agriculture circumstances. The use of this infrastructure in agricultural fields
    may have an effects on users by increasing crop yields and productivity. Authors
    Figures References Citations Keywords Metrics More Like This Internet of Things
    & Cloud Computing Internet of Things as a Service Approach 2020 11th International
    Conference on Information and Communication Systems (ICICS) Published: 2020 Guest
    Editorial Special Issue on Real-Time Data Processing for Internet of Things IEEE
    Internet of Things Journal Published: 2018 Show More IEEE Personal Account CHANGE
    USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile
    Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS
    Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT
    Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use |
    Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy
    A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2023 IEEE 8th International Conference for Convergence in Technology, I2CT
    2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Cost Effective IoT-Assisted Framework Coupled with Fog Computing for Smart
    Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kethineni K.
  - Pradeepini G.
  citation_count: '5'
  description: Smart agriculture is a popular domain due to its intensified growth
    in recent times. This domain aggregates the advantages of several computing technologies,
    where the IoT is the most popular and beneficial. In this work, a novel and effective
    deep learning-based framework is developed to detect intrusions in smart farming
    systems. The architecture is three-tier, with the first tier being the sensor
    layer, which involves the placement of sensors in agricultural areas. The second
    tier is the Fog Computing Layer (FCL), which consists of Fog nodes, and the proposed
    IDS is implemented in each Fog node. The gathered information is transferred to
    this fog layer for further data analysis. The third tier is the cloud computing
    layer, which provides data storage and end-to-end services. The proposed model
    includes a fused CNN model with the bidirectional gated recurrent unit (Bi-GRU)
    model to detect and classify intruders. An attention mechanism is included within
    the BiGRU model to find the key features responsible for identifying the DDoS
    attack. In addition, the accuracy of the classification model is improved by using
    a nature-inspired meta-heuristic optimization algorithm called the Wild Horse
    Optimization (WHO) algorithm. The last layer is the cloud layer, which collects
    data from fog nodes and offers storage services. The proposed system will be implemented
    in the Python platform, using ToN-IoT and APA-DDoS attack datasets for assessment.
    The proposed system outperforms the existing methods in accuracy (99.35%), detection
    rate (98.99%), precision (99.9%) and F-Score (99.08%) for the APA DDoS attack
    dataset and the achieved accuracy of the ToN-IoT dataset (99.71%), detection rate
    (99.02%), precision (99.89%) and F-score (99.05%).
  doi: 10.1007/s10586-023-04052-4
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Cluster Computing Article Intrusion
    detection in internet of things-based smart farming using hybrid deep learning
    framework Published: 03 June 2023 (2023) Cite this article Download PDF Access
    provided by University of Nebraska-Lincoln Cluster Computing Aims and scope Submit
    manuscript Keerthi Kethineni & G. Pradeepini  309 Accesses 2 Citations Explore
    all metrics Abstract Smart agriculture is a popular domain due to its intensified
    growth in recent times. This domain aggregates the advantages of several computing
    technologies, where the IoT is the most popular and beneficial. In this work,
    a novel and effective deep learning-based framework is developed to detect intrusions
    in smart farming systems. The architecture is three-tier, with the first tier
    being the sensor layer, which involves the placement of sensors in agricultural
    areas. The second tier is the Fog Computing Layer (FCL), which consists of Fog
    nodes, and the proposed IDS is implemented in each Fog node. The gathered information
    is transferred to this fog layer for further data analysis. The third tier is
    the cloud computing layer, which provides data storage and end-to-end services.
    The proposed model includes a fused CNN model with the bidirectional gated recurrent
    unit (Bi-GRU) model to detect and classify intruders. An attention mechanism is
    included within the BiGRU model to find the key features responsible for identifying
    the DDoS attack. In addition, the accuracy of the classification model is improved
    by using a nature-inspired meta-heuristic optimization algorithm called the Wild
    Horse Optimization (WHO) algorithm. The last layer is the cloud layer, which collects
    data from fog nodes and offers storage services. The proposed system will be implemented
    in the Python platform, using ToN-IoT and APA-DDoS attack datasets for assessment.
    The proposed system outperforms the existing methods in accuracy (99.35%), detection
    rate (98.99%), precision (99.9%) and F-Score (99.08%) for the APA DDoS attack
    dataset and the achieved accuracy of the ToN-IoT dataset (99.71%), detection rate
    (99.02%), precision (99.89%) and F-score (99.05%). Similar content being viewed
    by others Malicious detection model with artificial neural network in IoT-based
    smart farming security Article 22 March 2024 Machine Learning Approaches for Agro
    IoT Systems Chapter © 2022 State-of-the-Art Convolutional Neural Networks for
    Smart Farms: A Review Chapter © 2019 1 Introduction The agricultural region plays
    a dynamic role in the country’s financial growth and is one of the most crucial
    food providers. To meet the demands, the Food and Agriculture Organization (FAO)
    of the United Nations states that worldwide food productivity must reach 70% by
    2050 [1]. Even though the current productivity rate is capable of meeting the
    demands, a report claimed that about 500 million people across the globe suffer
    from malnutrition. In comparison, around 821 million people go hungry [2]. It
    is also estimated that the global population has increased to 2 billion. The most
    of the population growth is seen in countries like India, Nigeria, Ethiopia, Pakistan,
    Egypt, the Democratic Republic of Congo, the United States, Indonesia and the
    United Republic of Tanzania [3]. It might also be problematic to meet the water
    demands of 40% by 2030, and arable land destruction impacts the overall food supply.
    Therefore, many sustainable systems and resources must obtain higher productivity
    levels to meet increasing demands worldwide [4, 5]. Increasing productivity requires
    advancements in cultivation practices and the adaptability of several technologies
    to provide crucial knowledge about the farm fields to take appropriate actions.
    Integrating novel and innovative technologies to optimize irrigation is termed
    smart farming or precision farming [6, 7]. The technological integration provides
    more information regarding the fields and plants to enhance the irrigation procedure
    and to obtain optimal outcomes [8]. This information includes the presence of
    pests in the crops, the water requirement for the plants, the area needed to achieve
    higher production, resources required to control pests, the number of fertilizers
    needed, etc. All these can be achieved by adapting prediction technologies, measurements
    of the environment and tools of automation [9, 10]. This combination can escalate
    agricultural production to several extents without requiring huge amounts of natural
    resources. Smart farming integrates several technologies, protocols, computing
    paradigms and devices to empower the farmers to gather and understand most details
    regarding the farm fields [11, 12]. Since integrating technologies in smart farming
    offers undeniable benefits to farmers, this integration comes with many difficulties
    and complexities [13]. Among those challenges, the most terrifying is intrusions
    intentionally introduced into embedded technologies to gain access to the accumulated
    data. Most security challenges are due to the systems’ vulnerability in smart
    farming and their contained power [14, 15]. Technologies like artificial intelligence
    (AI), machine learning (ML), deep learning (DL), etc., were used for the effective
    removal of challenges like resource wastage and shortage of food [16]. Data features
    are very important for the accurate classification of IoT attacks. In existing
    works, different statistical features are extracted for the IoT attack prediction
    using machine learning techniques [17]. Furthermore, an essential features such
    as correlation based feature metrics [18], and wrapper based feature selection
    [19] are selected in the existing works. The main advantages of IoT-based smart
    agriculture are labour cost reduction, water and electricity conservation, and
    the farmers can keep a record of their yield [20]. The devices included in the
    fields collect crucial data regarding the farm fields and transmit them to the
    servers for storage. During data transfer to a destination, there is a higher
    possibility of security attacks requiring quick fixes [21]. The most common attack
    in smart farming is the distributed denial of service (DDoS) attack, which can
    generate fake traffic on the network. This attack intensifies by compromising
    multiple devices in the network to generate fake traffic to overwhelm the network
    [22, 23]. Therefore, this paper focuses on developing an effective intrusion detection
    system (IDS) that can accurately detect and classify the DDoS attack on the network.
    Smart agriculture is a popular domain due to its intensified growth in recent
    times. This domain aggregates the advantages of several computing technologies,
    where the IoT is the most popular and beneficial. The IoT system places sensors
    on agricultural fields to collect important data regarding crops and fields to
    improve the overall productivity rate. While transmitting the sensed data from
    fields to the destination, there is a possibility of occurrence of cyber-attacks
    that intruders design to gain access to the contents being transmitted. If the
    equipment installed in the field increases the production loss, it will be a serious
    issue. The main objectives of the proposal are as follows: Designing a new and
    effective deep hybrid learning-based IDS framework for smart farming applications.
    The work considers a 3-tier architecture, where the sensing layer contributes
    to the agricultural fields on which the sensors are located, the fog computing
    layer (FCL), where the IDS framework is deployed and the cloud computing layer
    for storage. A hybridization of deep learning named Fused and Optimized CNN-BiGRU
    (FOCB) with the metaheuristic optimization algorithm called Wild Horse Optimization
    (WHO) is explored to gain significant improvements in classification accuracy.
    The significance of features representing DDoS attacks is further enhanced by
    adding an attention mechanism at the end of a BiGRU model. The following sections
    are structured as follows: Sect. 2 explains the related works on IDSs. Section
    3 underlines the proposed IDS procedure. Section 4 evaluates the results and discussion.
    The conclusion of the work is explained in Sect. 5. 2 Related work Some of the
    recent and effective IDS frameworks contributing to security in smart farming
    are discussed below: Smart farming embeds advanced computing technologies with
    general farming operations to enhance performance and improve the overall production
    rate. With the convergence of the IoT with the smart farming scenario, farming
    operations have achieved considerable improvement. Since IoT devices are placed
    directly on the fields, many threats are encountered that require prompt solutions
    to be protected from cyber-attacks. One methodology has been declared by Ferrag
    et al. [24] to depend on the integration of IoT with smart farming, where the
    IDS was developed to protect the data from DDoS attacks. The system model included
    a sensing layer, FCL and the cloud layer. The sensors in the sensing layer captured
    the data from fields and forwarded it to fog nodes where the IDS framework detected
    the DDoS attacks. The IDS framework was developed using three DL models: Deep
    Neural Network (DNN), CNN and Recurrent Neural Network (RNN), each trained on
    the data sets for classification. The results proved the performance of the model
    compared to previous work. Another methodology for IDS to secure the data from
    agricultural fields was introduced by Raghuvanshi et al. [25]. The IoT sensors
    were placed on the fields in the methodology to collect agricultural data. The
    NSL-KDD dataset was utilized as the input to the framework, where initially, pre-processing
    was carried out by converting all the symbolic features into numeric features.
    Following this step, feature extraction was performed using the principal component
    analysis (PCA) technique. The classification was performed using machine learning
    methods such as Random Forest (RF), Support Vector Machine (SVM) and Linear Regression
    (LR). The methodology was compared to other ML methods to demonstrate the increased
    performance. The technologies used in smart agriculture are effective instruments
    capable of generating temporal, spatial and time-series data streams collected
    from fields. These generated data must be protected from adversarial attacks to
    enhance agricultural productivity. Moso et al. [26] introduced an ensemble anomaly
    detector called Enhanced Local Selective Combination in Parallel Outlier Ensembles
    (ELSCP) to accomplish the task. A data-driven unsupervised methodology was presented
    and applied to two case studies. One dealt with a global positioning system (GPS)
    traces; the other dealt with crop data. While dealing with the crop data, the
    ELSCP framework predicted the crop’s state and detected anomalies present in the
    data. The experimental outcomes of the model proved that the model was capable
    of accurately identifying the anomalies related to crop damage. Establishing a
    smart farm includes several types of equipment operated to achieve certain functionality.
    Anomalies in such equipment decrease the reliability of smart farms and cause
    various troubles. A method to solve the above issue was introduced by Park et
    al. [27], integrating the deep learning technique. The technique was established
    to secure pig house equipment and enhance livestock management. The data accumulated
    in the equipment, such as the environmental factors, were used for training. The
    RNN model was utilized in the method for training and classification purposes.
    Environmental factors such as temperature, ventilation, CO2, humidity, external
    and radiator temperatures are used for training. The method provided better and
    correct outcomes related to other current mechanisms. The main intention of developing
    the precision farming system is to reduce the burden on farmers and increase the
    overall net productivity. To achieve this, the agricultural sector embeds multiple
    devices labeled with specific objectives. One such piece of equipment only provides
    water to the agricultural field when needed. Thakur et al. [28] introduced a methodology
    for intrusion identification, where several sensors were utilized to obtain the
    data. The method also focused on detecting field intrusions before the captured
    data was forwarded to cloud servers. The methodology utilized and monitored soil
    data, detecting different forms of intrusions in the fields. The effectiveness
    of the approach was proved through experiments. Several IDS methodologies are
    proposed in the literature to accurately detect and classify the attacks to transmit
    the data securely. Deep learning-based techniques flourished among the introduced
    methodologies due to their excellent learning capacity. However, the existing
    techniques suffer from various issues, such as poor data quality, overfitting,
    training data underfitting, non-representative and insufficient training data.
    All these problems must be resolved efficiently to improve the overall growth
    of agriculture. 3 Proposed methodology The proposed smart farming architecture
    is comprised of 3 layers are sensor layer, fog layer and cloud computing layer.
    In agricultural layer, drones and other IoT devices are used to track data about
    the agricultural environment. When the data fulfil certain criteria, actuators
    in the agricultural sensors layer are turned on. In order to provide energy for
    IoT devices, new energy technologies and smart grid design are integrated into
    the layer of agricultural sensors. In fog computing layer, a deep learning-based
    intrusion detection system is installed in each fog node. Agricultural sensors
    feed IoT data straight to the fog computing layer for analysis and ML algorithms,
    while in cloud computing layer, cloud computing nodes handle the storage and end-to-end
    services. The fog nodes are where the calculations for intrusion detection systems
    based on deep learning are done. The efficiency of the agri-food supply chain,
    food safety, and agricultural production may all be impacted by a gang of attackers
    who perform DDoS assaults in an effort to disrupt network operations. The proposed
    model includes label encoding and data normalization for pre-processing and a
    fused model of bidirectional gated recurrent unit (Bi-GRU) with a CNN model to
    detect and classify the intrusions. An attention mechanism is included within
    the BiGRU model to find the key features responsible for identifying the DDoS
    attack. Further, the model classification accuracy is improved using a nature-inspired
    meta-heuristic optimization algorithm called the WHO algorithm. The last layer
    is the cloud layer, which collects data from fog nodes and offers storage services.
    Figure 1 shows the proposed methodology. Fig. 1 Suggested methodology Full size
    image 3.1 The BiGRU-CNN-based IDS The ToN-IoT dataset and the APA-DDoS-Attack
    dataset are used as input data to detect DDoS attacks in the IDS. Several attacks
    are included in the dataset used, and the proposed IDS is used to identify the
    DDoS attack from the dataset. The BiGRU-CNN IDS contains 5 layers: input layer,
    BiGRU layer, attention layer, convolution layer and output layer. 3.1.1 Input
    layer Data from the ToN-IoT dataset and APA-DDoS-Attack dataset are first pre-processed.
    The pre-processing section contains label encoding and data normalization. In
    label encoding, non-numerical data are converted to numerical values. The categorical
    features were converted to numerical values using the label encoder. The label
    encoding technique converted every definite value in the dataset to a number.
    The min–max method is the next data normalization process that allows the values
    to fall within the same range. To normalize data in the range 0 and 1, the expression
    used is, $$\\overline{Z} = \\frac{Z - \\min }{{\\max - \\min }}$$ (1) where \\(Z\\)
    and \\(\\overline{Z}\\) are real and normalized data, respectively, \\(\\min\\)
    is the minimum and \\(\\max\\) is maximum values. 3.1.2 BiGRU layer A sequence-processing
    model called BiGRU consists of two GRUs. One GRU receives input in the forward
    direction, the other in the reverse direction. The GRU is a modified version of
    the RNN. Reduced computational cost, training efficiency and simpler structure
    are the main advantages of GRU. The design of the BiGRU model is depicted in Fig.
    2. Fig. 2 Structure of BiGRU Full size image Equation (2) defines the GRU’s underlying
    computation method, $$\\left\\{ \\begin{gathered} r_{t} = \\sigma \\left( {X_{r}
    y_{t} + V_{r} k_{t - 1} } \\right) \\hfill \\\\ z_{t} = \\sigma \\left( {X_{z}
    y_{t} + V_{z} k_{t - 1} } \\right) \\hfill \\\\ \\overset{\\lower0.5em\\hbox{$\\smash{\\scriptscriptstyle\\smile}$}}{k}_{t}
    = \\tanh (X_{{\\overset{\\lower0.5em\\hbox{$\\smash{\\scriptscriptstyle\\smile}$}}{h}
    }} y_{t} + V_{{\\overset{\\lower0.5em\\hbox{$\\smash{\\scriptscriptstyle\\smile}$}}{h}
    }} (r_{t} \\Theta k_{t - 1} )) \\hfill \\\\ k_{t} = (1 - z_{t} )\\Theta k_{t -
    1} + z_{t} \\Theta k_{t} \\hfill \\\\ \\end{gathered} \\right.$$ (2) The sigmoid
    activation function \\(\\sigma\\) converts intermediate states to the range [0,1],
    \\(k_{t - 1}\\) and \\(k_{t}\\) are the outputs at the time \\(t - 1\\) and \\(t\\),
    respectively. \\(y_{t}\\) is the input arrangement value at the time \\(t\\).
    The output state is \\(\\overset{\\lower0.5em\\hbox{$\\smash{\\scriptscriptstyle\\smile}$}}{k}_{t}\\);
    \\(r_{t}\\) and \\(z_{t}\\) are the reset and update gates; \\(X_{r} ,\\,\\,X_{z}
    ,\\,X_{{\\overset{\\lower0.5em\\hbox{$\\smash{\\scriptscriptstyle\\smile}$}}{h}
    }} ,\\,\\,V_{r} ,\\,V_{Z}\\) and \\(\\,V_{{\\overset{\\lower0.5em\\hbox{$\\smash{\\scriptscriptstyle\\smile}$}}{h}
    }}\\) are the coefficient matrices of the weight in every part; tanh is a hyperbolic
    tangent function and \\(\\Theta\\) is the element-wise multiplication. The output
    \\(k_{t}\\) of each time step \\(t\\) contains two vectors from forward propagation
    \\(\\vec{k}_{t}\\) and backward propagation \\(\\mathop{k}\\limits^{\\leftharpoonup}
    _{t}\\), \\(H_{t} = [\\vec{k}_{t} \\,,\\,\\mathop{k}\\limits^{\\leftarrow} _{t}
    ]\\). 3.1.3 Attention layer To strengthen the performance of the IDS, an attention
    mechanism is added to the output of a BiGRU layer. The most crucial features responsible
    for IDS are selected using the attention mechanism to identify the DDoS attack.
    The attention mechanism introduces a weight coefficient according to the importance
    of identifying the important features for selecting a DDoS attack. The calculation
    process is shown in Eq. (3), $$\\alpha_{1} = soft\\max (w_{3} \\tanh (W_{3} H^{T}
    + b_{3} ))$$ (3) $$f_{t} = \\sum\\limits_{i = 1}^{T} {\\alpha_{1}^{t} .H_{t} }$$
    (4) The output from the BiGRU model after the attention mechanism is given to
    the convolution layer. 3.1.4 Convolution layer Multiple convolution kernels are
    used in the convolution layer to extract deeper features in the intrusion detection
    system. This layer includes convolution and pooling layers different from other
    neural networks. For the BiGRU-CNN-based IDS, 3 different convolution kernels
    are used, using maximum pooling to extract the important features. The convolution
    kernel is related to weight and bias vectors. The nth kernel at position (i,j)
    in the mth layer calculates the feature value \\(x_{i,j,n}^{m}\\). $$x_{i,j,n}^{m}
    = f\\left( {W_{n}^{{m^{T} }} x_{i,j}^{m - 1} + b_{n}^{m} } \\right)$$ (5) where,
    \\(x_{i,j}^{m - 1}\\) is the input patch for the \\((m - 1)^{th}\\) layer, centred
    at the position \\((i,j)\\). The nth kernel filter’s weight (\\(W\\)) and bias
    (\\(b\\)) terms, respectively in \\(m^{th}\\) layer. The pooling layer is used
    to minimize the dimensions and increase robustness. The pooling method that determines
    the maximum value in the pooling windows uses Max Pooling in the pooling layer.
    3.1.5 Output layer The output of the convolution layer is sent to the fully linked
    layer of the output layer. The outcome of the convolution layer is given to the
    softmax classifier, where the softmax function is used for identifying the DDoS
    attack. The mathematical expression for the softmax function is, $$z_{l} = soft\\max
    (vZ + c)$$ (6) where \\(c\\) is the bias, \\(v\\) is the weight coefficient matrix,
    and \\(z_{l}\\) is the attained output that is the DDoS attack. 3.1.6 Parameter
    tuning using wild horse optimization To optimally tune the bias and weight parameter
    and thereby reduce the classification error rate, the WHO algorithm is aimed,
    which improves the accuracy of detecting DDoS attacks. In WHO, the social behaviour
    of wild horses is considered for an optimal selection of parameters, which improves
    detection accuracy. Initially, the population is divided into groups, which \\(H\\)
    symbolizes the number of different attacks and \\(M\\) represents the total number
    of system attacks. The number of stallions equals \\(H\\), since each group has
    a leader, and \\(MH\\) represents the population of foals and mares scattered
    in this group. $$Y_{j,H}^{i} = 2X\\cos (2\\pi SX) \\times (stlan^{i} - Y_{j,H}^{i}
    ) + stlan^{i}$$ (7) \\(Y_{j,H}^{i}\\) denotes the current position of the mare
    or foal group member, \\(stlan\\) gives the location of the stallion, \\(S\\)
    has a stochastic value in the interval -2 to 2 and \\(X\\) denotes the adaptive
    model projected as, $$\\begin{gathered} R = \\vec{T}_{1} \\, < TDR;\\,\\,\\,\\,IDX
    = (p = = 0) \\hfill \\\\ X = T_{2} \\Theta IDX + \\vec{T}_{3} \\Theta ( \\approx
    IDX) \\hfill \\\\ \\end{gathered}$$ (8) where,\\(R,\\vec{T}_{1} \\,,\\vec{T}_{3}
    \\,and\\,T_{2}\\) has an arbitrary value in the range of [0, 1]. The value of
    TDR reduces to 0 at the end of iteration starting from 1 given as, $$TDR = 1 -
    it \\times \\left( {\\frac{1}{\\max it}} \\right)$$ (9) The maximal iteration
    is represented as \\(\\max it\\). The crossover operator is used to simulate horse
    mating behaviour: $$\\begin{gathered} Y_{H,K}^{R} = Crossover\\left( {Y_{{H,j^{\\prime}}}^{q}
    ,\\,Y_{H,i}^{X} } \\right)\\,\\,\\,\\,j \\ne i \\ne k,q = p = end, \\hfill \\\\
    \\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,Crossover = Mean \\hfill \\\\
    \\end{gathered}$$ (10) The group leader struggles a lot for the water hole, and
    the others should wait till the dominant group leaves the water hole: $$\\overline{{Stlan_{{H_{j}
    }} }} = \\,\\,T\\left\\{ \\begin{gathered} 2X\\cos \\left( {2\\pi SX} \\right)
    \\times (WH - Stlan_{{H_{j} }} ) \\hfill \\\\ \\,\\, + WH\\,\\,if\\,\\,T_{3} >
    0.5 \\hfill \\\\ 2X\\cos (2\\pi SX) \\times (WH - stlan_{{H_{j} }} ) \\hfill \\\\
    \\,\\,\\, - WH\\,\\,if\\,\\,T_{3} \\le 0.5 \\hfill \\\\ \\end{gathered} \\right.$$
    (11) \\(WH\\) is the location of water hole, and the leader who finds the location
    is represented as \\(\\overline{{Stlan_{{H_{j} }} }}\\). Based on the fitness
    value, the leader is selected in the next phases, and the leader’s position and
    the selected member are indicated as follows: $$\\overline{{Stlan{}_{{H_{j} }}}}
    = \\left\\{ \\begin{gathered} Y_{H,j} \\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,if\\,\\,\\,\\,\\,\\,\\cos
    \\,\\,t(Y_{H,j} )\\,\\, < \\,\\,\\cos \\,\\,t(Stlan_{{H_{j} }} ) \\hfill \\\\
    Stlan_{{H_{j} }} \\,\\,\\,\\,if\\,\\,\\,\\,\\,\\,\\cos \\,\\,t(Y_{H,j} )\\,\\,
    > \\,\\,\\cos \\,\\,t(Stlan_{{H_{j} }} ) \\hfill \\\\ \\end{gathered} \\right.$$
    (12) The fitness function used in WHO is the classification error rate, and the
    goal of WHO algorithm is to minimize the classification error rate. The flow chart
    of the proposed WHO is shown in Fig. 3, $$\\begin{gathered} fitness(y_{i} ) =
    classificationerrorrate(y{}_{i}) \\hfill \\\\ \\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,
    = \\frac{count\\,\\,of\\,\\,misidentified\\,\\,attacks}{{total\\,\\,number\\,\\,of\\,\\,attacks}}*100
    \\hfill \\\\ \\end{gathered}$$ (13) Fig. 3 Flowchart of WHO Full size image The
    suggested system helps to detect intrusions in smart farming systems with better
    performance. It mainly detects DDoS and DoS attacks. 4 Results and discussion
    This section analyses the effectiveness of suggested IDS using different performance
    metrics. The evaluation metrics used for the analysis are accuracy, precision,
    detection rate, F-measure, ROC and confusion matrix. The experimental analysis
    of the proposed methodology is performed in the working platform of PYTHON, Anaconda,
    spyder (Tensorflow packages), Intel i5 processor, 64-bit operating system (OS)
    and 8 GB RAM CPU. The proposed methodology is analyzed with two datasets: APA-DDoS
    attack and ToN-IoT. The experimental setup of hyperparameters in deep learning
    is given in Table 1. Table 1 Simulation details of hyperparameters Full size table
    4.1 APA-DDoS attack dataset The APA-DDoS Attack dataset comprised three different
    types of data: DDos-PSH-ACK type, Benign type and DDos-ACK type. The total number
    of data samples in the dataset is 151,201 data samples. The total data samples
    are split into 70 and 30% for training and testing, respectively. As the connection
    between devices increased, the major challenge was detecting attacks, for an intrusion
    detection system (IDS) was developed. Machine learning techniques have been developed
    to find the attacks which need access to attack patterns. The APA-DDoS attack
    contains different types of DDoS attacks. The dataset holds mainly ACK and PUSH-ACK
    DDoS attacks [29]. To improve the detection rate, the APA-DDoS attack dataset
    was used. 70% of the dataset is used for training, while 30% is used for testing.
    4.2 ToN-IoT dataset The RoN-IoT dataset consists of six types of data samples
    such as DoS, Normal, DDoS, Injection, Mitm and password types. The total number
    of data samples in the dataset is 140,113 samples. Moreover, the total data is
    categorized into 70% and 30% for training and testing processes. Telemetry datasets
    of Internet of things (IoT) and Industrial IoT (IIoT) sensors are included in
    the ToN-IoT dataset and split into 70% and 30% for training and testing sets.
    The dataset is allocated in the ratio of 70:30 for training and testing. The dataset
    contains 43 features with 9 types of attacks and a normal vector. Attacks in IoT
    environments like Backdoor, MITM, DDoS, DoS, Injection, Password, Scanning, XSS
    and Ransomware are included in the dataset. The ToN-IoT Dataset is the newest
    testbed for an IoT system that comprises 3 categories: operating systems data,
    network data and telemetry data. 4.3 Evaluation metrics In estimating the suggested
    IDS, the chosen performance metrics play a vital role. The evaluation metrics
    selected for the estimation are Accuracy, Precision, Detection rate, F-score,
    and Area under the curve (AUC). 4.3.1 Accuracy It is the ratio of accurately categorized
    instances to the total number of considered instances in the test set. It considers
    both true positive and true negative instances for the calculation. The accuracy
    performance evaluation is performed by the subsequent Eq. (14). $$Accuracy = \\frac{TP
    + TN}{{TN + TP + FP + FN}}$$ (14) where, \\(TP\\) represents the true positive,
    \\(TN\\) represents the true negative, \\(FP\\) represents the false positive,
    and \\(FN\\) represents the false negative. 4.3.2 Detection rate The detection
    rate is the ratio of the number of attacks predicted by the proposed framework
    to the total number of attacks in the testing data. It is calculated by the following
    condition (15). $$Detection\\,\\,Rate/\\,{\\text{Re}} call = \\frac{TP}{{TP +
    FN}}$$ (15) 4.3.3 Precision The precision measure is defined as the ratio of the
    total number of predicted attacks to the total number of instances classified
    as an attack. The precision measure is computed through the subsequent Eq. (16).
    $$\\Pr ecision = \\frac{TP}{{FP + TP}}$$ (16) 4.3.4 F-measure The weighted mean
    of precision and recall calculates the F-measure. The F-measure performance validation
    is more important and computed based on the false positive and false negative.
    It is generally utilized when the class distribution is imbalanced. The F-measure
    computation is expressed in the subsequent Eq. (17). $$F - measure = 2*\\frac{{{\\text{Re}}
    call*\\Pr ecision}}{{\\Pr ecision + {\\text{Re}} call}}$$ (17) 4.3.5 AUC The AUC
    performance metric estimates the probability of selecting positive over negative
    instances. The AUC calculation is expressed in the subsequent Eq. (18). $$auc
    = \\frac{1}{2}\\left( {\\frac{TP}{{TP + FP}} + \\frac{TN}{{TP + FP}}} \\right)$$
    (18) Here, \\(auc\\) represents the AUC measure. 4.4 Performance analysis based
    on APA-DDoS attack This section compares the performance of the proposed IDS to
    other current approaches [30] in terms of recall, accuracy, F-measure and precision.
    For the analysis, the APA-DDoS Attack dataset is utilized. The comparison analysis
    of different performance metrics is given in Table 2. Table 2 Comparison analysis
    of Accuracy, Precision, F-measure and Detection rate for APA-DDoS Attack dataset
    Full size table Table 2 gives a comparative analysis of the proposed system with
    current methods. The proposed system’s detection rate, precision, accuracy, and
    F-measure are compared with the existing methods for the APA-DDoS attack dataset.
    The confusion matrix (CM) of the APA-DDoS attack dataset is shown in Fig. 4. The
    CM compares the values predicted by the suggested system with the original target
    values. Fig. 4 Confusion matrix of APA-DDoS attack dataset Full size image The
    suggested system achieved a good performance in terms of accuracy with 99.35%.
    Figure 5 gives an accurate performance analysis of the suggested and existing
    methods. Fig. 5 Performance Analysis of Accuracy Full size image Figure 6 gives
    the performance evaluation in terms of the detection rate of the suggested system
    with numerous present methods. The suggested system attained a 98.99% detection
    rate, while the existing methods achieved only 77.85% for DT, 63.8% for NB, 94.12%
    for SLSTM and 76.62% for RF. So the suggested system outperformed in terms of
    the detection rate. Fig. 6 Performance Analysis Detection Rate Full size image
    Figure 7 gives the performance evaluation in terms of the F-measure of the suggested
    system with various existing methods. The suggested system attained 99.08% F-measure,
    while the existing methods have achieved only 77.99% for DT, 63.47% for NB, and
    94.14% for SLSTM and RF, with 77.45%. So the suggested system outperformed in
    terms of F-measure. Fig. 7 Performance Analysis of F-measure Full size image Figure
    8 gives the performance evaluation based on the precision of the suggested system
    with numerous existing methods. The suggested system attained 99.90% precision,
    while the existing methods have achieved only 78.4% for RF, 78.31% for DT, 94.11%
    for SLSTM and 69.19% for NB. So the suggested system outperformed in terms of
    precision. Fig. 8 Performance Analysis of Precision Full size image Figure 9 depicts
    the receiver operating characteristic (ROC) curve, which represents the rate of
    true positives vs the rate of false positives. The ROC curve examines the performance
    of the classifier. Then, the analysis of training accuracy is shown in Fig. 10.
    Fig. 9 ROC curve for APA-DDoS-Attack dataset Full size image Fig. 10 Training
    accuracy vs testing accuracy for the suggested system with APA-DDoS Attack dataset
    Full size image Figure 10 shows the training accuracy when tested for the suggested
    APA-DDoS attack dataset system. The suggested system achieved a better accuracy
    with 99.35%. The suggested system got low loss in testing and training. The training
    loss vs a testing loss of the suggested system for the APA-DDoS Attack dataset
    is plotted in Fig. 11. Fig. 11 Training loss vs testing loss for the suggested
    system with the APA-DDoS Attack dataset Full size image 4.5 Performance analysis
    based on ToN-IoT dataset This section compares the suggested IDS’s performance
    to other current approaches regarding a recall, accuracy, F-measure and precision.
    For the analysis, the ToN-IoT dataset is utilized. Table 3 compares the suggested
    system with various existing methods like NB, DT, RF and SLSTM. Table 3 Comparison
    analysis of Accuracy, Precision, F-measure and Detection rate for APA-DDoS Attack
    dataset Full size table The confusion matrix (CM) of the ToN-IoT dataset, which
    indicates the performance of the classification, is shown in Fig. 12. The rows
    in CM symbolize the true label, and the columns symbolize the predicted labels.
    Fig. 12 Confusion matrix of ToN-IoT Dataset Full size image Figure 13 gives a
    performance evaluation in terms of accuracy of the suggested system with numerous
    existing methods. The suggested system attained 99.71% accuracy, while the existing
    methods achieved only 95.34% for DT, 90.62% for NB, 98.64% for SLSTM and RF 97.81%.
    So the suggested system outperformed in terms of accuracy. Fig. 13 Analysis of
    Accuracy Performance Full size image The suggested system achieved good performance
    with a detection rate of 99.02%. Figure 14 gives the detection rate performance
    analysis of the suggested and present methods. Fig. 14 Analysis of Detection rate
    Performance Full size image Figure 15 gives the performance evaluation of an F-measure
    suggested system with numerous present methods. The suggested system attained
    99.85% F-measure, while the existing methods have achieved only 76.33% for DT,
    72.43% for NB, and 98% for SLSTM and RF, with 86.41%. So the proposed system outperformed
    in terms of F-measure. Fig. 15 Analysis of F-measure Performance Full size image
    Figure 16 shows the performance evaluation in terms of precision. The various
    existing methods used are DT, RF, NB and SLSTM, with precisions of 74.42%, 87.5%,
    77.68% and 98.94%, respectively. The proposed system attained 99.89% precision.
    Fig. 16 Analysis of Precision Performance Full size image The classifier outcomes
    were evaluated using the receiver operating characteristic (ROC), which gives
    the performance assessment of multiclass vectors in a dataset. To represent the
    ROC, the TP and the FP rates are considered. The ROC curve of the proposed system
    is shown in Fig. 17. Fig. 17 Graph of ROC curve for ToN-IoT dataset Full size
    image The accuracy of training and testing of the suggested system for the ToN-IoT
    dataset is plotted in Fig. 18. The suggested system with BiGRU-CNN achieved 99.71%
    accuracy. Fig. 18 Accuracy of Training vs testing for the suggested system with
    APA-DDoS Attack dataset Full size image The proposed system got low loss in testing
    and training. The training loss vs a testing loss of the proposed system for the
    ToN-IoT dataset is plotted in Fig. 19. The comparison analysis of the proposed
    methodology with different existing approaches is given in Table 4. Fig. 19 Training
    loss vs testing loss for the proposed system with APA-DDoS Attack dataset Full
    size image Table 4 Comparison analysis on F-measure with ToN-IoT dataset Full
    size table Table 4 compares the proposed methodology with different existing approaches
    such as LSTM, NN, GBM, KNN, TP2SF, CART, RF, CART, and XGBoost approaches [31]
    in terms of F-measure performance. The proposed scheme attains better performance
    than the compared existing schemes. The comparison table on accuracy with different
    datasets is given in Table 5. Table 5 Comparison table on accuracy with various
    datasets Full size table According to Table 5, the proposed model with the TON-IoT
    dataset attains higher accuracy than other models such as VGG16, Xception, Inception
    [32], RNN, stacked LSTM, extreme gradient boosting algorithm, DNN, RF, Generative
    adversarial network [24] with different datasets. The proposed scheme attains
    better performance, and the existing Xception with NSL-KDD dataset attained the
    lowest accuracy. Table 6 compares AUC, training time and predicted time for other
    existing models. Table 6 Comparison of AUC and time Full size table Table 6 compares
    performance metrics such as AUC, training time and predicting time taken by ConvNeXt,
    ConvNeXt-DenseNet, ConvNeXt-Sf [33] and the proposed model. The AUC of the proposed
    model outperforms other existing schemes with a value of 0.99981. ConvNeXt, ConvNeXt-DenseNet,
    ConvNeXt-Sf and the proposed model have taken 148,833.81, 62,879.73, 25,857.367
    and 15,795 s of training time, respectively, on TON-IoT dataset. The ConvNeXt-Sf
    and the suggested model had faster training times than ConvNeXt. The prediction
    times for ConvNeXt, ConvNeXt-DenseNet, ConvNeXt-Sf and the suggested model were
    18.493 s, 18.637 s, 10.671 s, and 7.45 s, respectively. This proved that the proposed
    scheme takes less time than the existing approaches. 5 Conclusion In this research,
    an effective intrusion detection system for DDoS attack detection for smart agriculture
    was developed. The data collected are pre-processed using data normalization and
    label encoding. A fused model of CNN with the bidirectional gated recurrent unit
    (Bi-GRU) is used to detect and classify the intrusions. The BiGRU model includes
    an attention mechanism to find the most crucial features responsible for identifying
    the DDoS attack. Further, the model’s classification accuracy is enhanced using
    a nature-inspired metaheuristic optimization algorithm called the Wild Horse Optimization
    (WHO) algorithm. Standard performance metrics calculate the intrusion detection
    system (IDS) performance. The developed IDS model can detect the DDoS attack in
    smart agriculture and attained an accuracy of 99.35% for APA-DDoS-Attack and ToN-IoT
    datasets with 99.71% accuracy. The attained results proved that the proposed scheme
    outperforms the different existing approaches. In future, more advanced technology
    can be used to improve the performance to detect IoT attacks. Furthermore, more
    performance validations can be performed with different performance metrics. Data
    availability The entire implementation of the work will be carried out in the
    Python platform. The major performance metrics such as accuracy, precision, recall,
    f-measure and ROC will be computed and compared with the recent techniques relevant
    to intrusion detection in IoT-enabled smart farming. The data that support this
    finding of this study are openly available at the following URL/https://www.unb.ca/cic/datasets/ddos-2019.html
    , https://cloudstor.aarnet.edu.au/plus/s/ds5zW91vdgjEj9i. Code availability The
    code that supports this finding of this study is openly available at the following
    URL/https://github.com/keerthikethineni/IDin-IOT-based-Smart-Farming-using-HDLF.git
    References Yang, X., Shu, L., Chen, J., Ferrag, M.A., Wu, J., Nurellari, E., Huang,
    K.: A survey on smart agriculture: development modes, technologies, and security
    and privacy challenges. IEEE/CAA J. Automatica Sinica. 8(2), 273–302 (2021) Article   Google
    Scholar   de Araujo Zanella, A.R., da Silva, E., Albini, L.C.P.: Security challenges
    to smart agriculture: current state, key issues, and future directions. Array
    8, 100048 (2020) Article   Google Scholar   Kumar, P., Gupta, G.P., Tripathi,
    R.: PEFL: deep privacy-encoding-based federated learning framework for smart agriculture.
    IEEE Micro 42(1), 33–40 (2021) Article   Google Scholar   Suhaimi, A.F., Yaakob,
    N., Saad, S.A., Sidek, K.A., Elshaikh, M.E., Dafhalla, A.K., Lynn, O.B., Almashor,
    M.: IoT based smart agriculture monitoring, automation and intrusion detection
    system. J. Phys.: Conf. Series, IOP Publish. 1962(1), 012016 (2021) Google Scholar   Fróna,
    D., Szenderák, J., Harangi-Rákos, M.: The challenge of feeding the world. Sustainability.
    11(20), 5816 (2019) Article   Google Scholar   Alsoufi, M.A., Razak, S., Siraj,
    M.M., Nafea, I., Ghaleb, F.A., Saeed, F., Nasser, M.: Anomaly-based intrusion
    detection systems in iot using deep learning: a systematic literature review.
    Appl. Sci. 11(18), 8383 (2021) Article   Google Scholar   Cicioğlu, M., Çalhan,
    A.: Smart agriculture with Internet of things in cornfields. Comput. Electr. Eng.
    90, 106982 (2021) Article   Google Scholar   Ferrag, M.A., Shu, L., Friha, O.,
    Yang, X.: Cyber security intrusion detection for agriculture 4.0: machine learning-based
    solutions, datasets, and future directions. IEEE/CAA J. Automatica Sinica. 9(3),
    407–436 (2021) Article   Google Scholar   Kumar, R., Mishra, R., Gupta, H.P.,
    Dutta, T.: Smart sensing for agriculture: applications, advancements, and challenges.
    IEEE Consum. Electron. Magazine 10(4), 51–56 (2021) Article   Google Scholar   Kumar,
    M., Vikas Reddy, S.: Intrusion detection and prevention system for Iot. Eur. J.
    Mol. Clin. Med. 7(8), 2983–2991 (2020) Google Scholar   Bhatt, H., Bhushan, B.,
    Kumar, N.: IOT: The current scenario and role of sensors involved in smart agriculture.
    Int. J. Recent Technol. Eng. 8(4), 12011–12023 (2019) Google Scholar   Riaz, A.R.,
    Gilani, S.M.M., Naseer, S., Alshmrany, S., Shafiq, M., Choi, J.G.: Applying adaptive
    security techniques for risk analysis of internet of things (IoT)-based smart
    agriculture. Sustainability 14(17), 10964 (2022) Article   Google Scholar   Bhatnagar,
    V., Singh, G., Kumar, G., Gupta, R.: Internet of thingsin smart agriculture: applications
    and open challenges. Int. J. Stud. Res. Technol. Manage. 8(1), 11–17 (2020) Google
    Scholar   Yadahalli, S., Parmar, A. and Deshpande, A.: Smart intrusion detection
    system for crop protection by using Arduino. In 2020 Second International Conference
    on Inventive Research in Computing Applications (ICIRCA), IEEE. 405–408 (2020).
    Murugesan, M.: Smart agriculture monitoring system. Turkish J. Comput. Math. Educ.
    10(3), 1001–1005 (2019) Google Scholar   Tao, W., Zhao, L., Wang, G., Liang, R.:
    Review of the Internet of things communication technologies in smart agriculture
    and challenges. Comput. Electron. Agric. 189, 106352 (2021) Article   Google Scholar   Shafiq,
    M., Tian, Z., Bashir, A.K., Jolfaei, A., Yu, X.: Data mining and machine learning
    methods for sustainable smart cities traffic classification: a survey. Sustain.
    Cities Soc. 60, 102177 (2020) Article   Google Scholar   Shafiq, M., Tian, Z.,
    Bashir, A.K., Du, X., Guizani, M.: CorrAUC: a malicious bot-IoT traffic detection
    method in IoT network using machine-learning techniques. IEEE Internet Things
    J. 8(5), 3242–3254 (2020) Article   Google Scholar   Shafiq, M., Tian, Z., Bashir,
    A.K., Du, X., Guizani, M.: IoT malicious traffic identification using wrapper-based
    feature selection mechanisms. Comput. Secur. 94, 101863 (2020) Article   Google
    Scholar   Kumar, K.N., Pillai, A.V. and Narayanan, M.B.: Smart agriculture using
    IoT. Materials Today: Proceedings. (2021). Eskandari, M., Janjua, Z.H., Vecchio,
    M., Antonelli, F.: Passban IDS: An intelligent anomaly-based intrusion detection
    system for IoT edge devices. IEEE Int. Things J. 7(8), 6882–6897 (2020) Article   Google
    Scholar   Salim, C. and Mitton, N. 2021 Image similarity based data reduction
    technique in wireless video sensor networks for smart agriculture. In International
    Conference on Advanced Information Networking and Applications, Springer, Cham.
    Abraham, G., Raksha, R. and Nithya, M.: Smart Agriculture Based on IoT and Machine
    Learning. In 2021 5th International Conference on Computing Methodologies and
    Communication (ICCMC), IEEE. 414–419 (2021). Ferrag, M.A., Shu, L., Djallel, H.,
    Choo, K.K.R.: Deep learning-based intrusion detection for distributed denial of
    service attack in agriculture 4.0. Electronics 10(11), 1257 (2021) Article   Google
    Scholar   Raghuvanshi, A., Singh, U.K., Sajja, G.S., Pallathadka, H., Asenso,
    E., Kamal, M., Singh, A., Phasinam, K.: Intrusion detection using machine learning
    for risk mitigation in IoT-enabled smart irrigation in smart farming. J. Food
    Quality. 2022, 1–8 (2022) Article   Google Scholar   Moso, J.C., Cormier, S.,
    de Runz, C., Fouchal, H., Wandeto, J.M.: Anomaly detection on data streams for
    smart agriculture. Agriculture 11(11), 1083 (2021) Article   Google Scholar   Park,
    H., Park, V., Kim, S.: Anomaly detection of operating equipment in livestock farms
    using deep learning techniques. Electronics 10(16), 1958 (2021) Article   Google
    Scholar   Thakur, D., Kumar, Y., Vijendra, S.: Smart irrigation and intrusions
    detection in agricultural fields using IoT. Procedia Computer Science. 167, 154–162
    (2020) Article   Google Scholar   https://www.kaggle.com/datasets/yashwanthkumbam/apaddos-dataset
    Kumar, R., Kumar, P., Tripathi, R., Gupta, G.P., Gadekallu, T.R., Srivastava,
    G.: SP2F: A secured privacy-preserving framework for smart agricultural Unmanned
    Aerial Vehicles. Comput. Netw. 187, 107819 (2021) Article   Google Scholar   Le,
    T.T.H., Oktian, Y.E., Kim, H.: XGBoost for imbalanced multiclass classification-based
    industrial Internet of things intrusion detection systems. Sustainability 14(14),
    8707 (2022) Article   Google Scholar   El-Ghamry, A., Darwish, A., Hassanien,
    A.E.: An optimized CNN-based Intrusion Detection system for reducing risks in
    smart farming. Int Things 22, 100709 (2023) Article   Google Scholar   Zhao, Guosheng,
    Yang Wang, and Jian Wang. 2023 “Lightweight Intrusion Detection Model of the Internet
    of Things with Hybid Cloud-Fog Computing.” Security and Communication Networks
    2023: 1–16. Download references Acknowledgements We declare that this manuscript
    is original, has not been published before and is not currently being considered
    for publication elsewhere. Funding The authors have not disclosed any funding.
    Author information Authors and Affiliations Research Scholar, Koneru Lakshmaiah
    Education Foundation, Guntur, India Keerthi Kethineni Department of Computer Science
    and Engineering, V.R. Siddhartha Engineering College, Vijayawada, India Keerthi
    Kethineni Department of Computer Science and Engineering, Koneru Lakshmaiah Education
    Foundation, Guntur, India G. Pradeepini Contributions K: conceptualization, Data
    Curation, Formal Analysis, Investigation, Resources, Software, Writing an original
    draft. P: Methodology, Project administration, Supervision, Validation, Visualization,
    Writing-Review & editing, Funding acquisition. Corresponding author Correspondence
    to G. Pradeepini. Ethics declarations Conflict of interest There is no conflict
    of interest in the present research work. Informed consent Author and Co-author
    are well aware of the publication. Additional information Publisher''s Note Springer
    Nature remains neutral with regard to jurisdictional claims in published maps
    and institutional affiliations. Rights and permissions Springer Nature or its
    licensor (e.g. a society or other partner) holds exclusive rights to this article
    under a publishing agreement with the author(s) or other rightsholder(s); author
    self-archiving of the accepted manuscript version of this article is solely governed
    by the terms of such publishing agreement and applicable law. Reprints and permissions
    About this article Cite this article Kethineni, K., Pradeepini, G. Intrusion detection
    in internet of things-based smart farming using hybrid deep learning framework.
    Cluster Comput (2023). https://doi.org/10.1007/s10586-023-04052-4 Download citation
    Received 20 January 2023 Revised 07 March 2023 Accepted 22 May 2023 Published
    03 June 2023 DOI https://doi.org/10.1007/s10586-023-04052-4 Share this article
    Anyone you share the following link with will be able to read this content: Get
    shareable link Provided by the Springer Nature SharedIt content-sharing initiative
    Keywords Intrusion detection Label encoding Smart agriculture Detection Attention
    mechanism Normalization Deep learning Weight optimization Use our pre-submission
    checklist Avoid common mistakes on your manuscript. Sections Figures References
    Abstract Introduction Related work Proposed methodology Results and discussion
    Conclusion Data availability Code availability References Acknowledgements Funding
    Author information Ethics declarations Additional information Rights and permissions
    About this article Advertisement Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Cluster Computing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Intrusion detection in internet of things-based smart farming using hybrid
    deep learning framework
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Vyas M.
  - Anand G.
  - Yadav R.N.
  - Nayak S.K.
  citation_count: '1'
  description: In a smart agriculture system many resource-constrained sensors are
    installed near the crops as well as at some strategic locations in an agriculture
    field to collect relevant crop and environment data in real-time. This data is
    then used for both critical latency-sensitive decision making as well as for long-term
    planning. Nowadays, with the help of smart IoT systems, resolving the problems
    like irrigate fields, avoid animal intrusions, notify the farmer about the seasonal
    rainfall etc. becomes easier. The edge of the IoT networks regularly receives
    a huge amount of data generated by sensors that need to be delivered to the server
    present in the remote data centers/cloud for additional real time control or long
    term decision making. However, transmitting huge amount of these IoT data across
    the network toward the cloud imposes a high overhead in terms of bandwidth demand
    and latency on the IoT network. So, the key challenge in building a smart agriculture
    system include high communication latency and bandwidth consumption incurred with
    computing over the data on the cloud. Also, frequent Internet disconnections in
    rural areas may lead to improper latency sensitive decision making at cloud due
    unavailability of data. In this paper to resolve such issues of cloud based smart
    agriculture system, we present a LoRa-based three-tier smart agriculture system
    comprised of (i) Field layer, (ii) Fog computing layer, and (iii) Cloud computing
    layer. In particular, a data aggregation algorithm through a LoRa enabled fog
    computing layer for smart agriculture (DASA) is proposed to compress the total
    amount of IoT data to be uploaded to the cloud. We present the performance of
    our proposed scheme and compare with the existing frameworks for smart agriculture
    system in terms of compression ratio, compression time, compression power, and
    amount of data transmitted to cloud from fog computing layer. Comparison results
    show that the proposed algorithm significantly decreases the volume of data to
    be uploaded to the cloud platform and achieves highest compression ratio among
    other existing schemes. We also tested the performance of the proposed data aggregation
    algorithm on real testbed.
  doi: 10.1007/978-3-031-28451-9_4
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Conference on Advanced
    Information Networking and Applications AINA 2023: Advanced Information Networking
    and Applications pp 40–52Cite as Home Advanced Information Networking and Applications
    Conference paper DASA: An Efficient Data Aggregation Algorithm for LoRa Enabled
    Fog Layer in Smart Agriculture Mayank Vyas, Garv Anand, Ram Narayan Yadav & Sanjeet
    Kumar Nayak  Conference paper First Online: 15 March 2023 439 Accesses 1 Citations
    Part of the book series: Lecture Notes in Networks and Systems ((LNNS,volume 654))
    Abstract In a smart agriculture system many resource-constrained sensors are installed
    near the crops as well as at some strategic locations in an agriculture field
    to collect relevant crop and environment data in real-time. This data is then
    used for both critical latency-sensitive decision making as well as for long-term
    planning. Nowadays, with the help of smart IoT systems, resolving the problems
    like irrigate fields, avoid animal intrusions, notify the farmer about the seasonal
    rainfall etc. becomes easier. The edge of the IoT networks regularly receives
    a huge amount of data generated by sensors that need to be delivered to the server
    present in the remote data centers/cloud for additional real time control or long
    term decision making. However, transmitting huge amount of these IoT data across
    the network toward the cloud imposes a high overhead in terms of bandwidth demand
    and latency on the IoT network. So, the key challenge in building a smart agriculture
    system include high communication latency and bandwidth consumption incurred with
    computing over the data on the cloud. Also, frequent Internet disconnections in
    rural areas may lead to improper latency sensitive decision making at cloud due
    unavailability of data. In this paper to resolve such issues of cloud based smart
    agriculture system, we present a LoRa-based three-tier smart agriculture system
    comprised of (i) Field layer, (ii) Fog computing layer, and (iii) Cloud computing
    layer. In particular, a data aggregation algorithm through a LoRa enabled fog
    computing layer for smart agriculture (DASA) is proposed to compress the total
    amount of IoT data to be uploaded to the cloud. We present the performance of
    our proposed scheme and compare with the existing frameworks for smart agriculture
    system in terms of compression ratio, compression time, compression power, and
    amount of data transmitted to cloud from fog computing layer. Comparison results
    show that the proposed algorithm significantly decreases the volume of data to
    be uploaded to the cloud platform and achieves highest compression ratio among
    other existing schemes. We also tested the performance of the proposed data aggregation
    algorithm on real testbed. Keywords IoT Fog computing Clustering Compression LoRa
    Smart agriculture system M. Vyas and G. Anand have equal contributions. Access
    provided by University of Nebraska-Lincoln. Download conference paper PDF 1 Introduction
    The vast emerging domain of Internet of Things (IoT) has witnessed the ever-growing
    demand for ease in human behavior in various fields like smart homes, smart offices,
    and smart agriculture [6, 18]. The aim of smart agriculture is to improve the
    productivity and reduce farmers efforts by utilizing IoT and advanced communication
    technology [5, 15, 20]. Various applications such as switching ON/OFF water sprinklers,
    detection of animal invasion, fire detection etc. related to smart agriculture
    application require huge amount of data transmission from agriculture fields to
    data centers/clouds for real-time decision making [19, 22]. Because of continuous
    data transmission from sensors deployed in agriculture fields, the edge nodes
    of the IoT networks regularly receives a huge amount of data. However, transmitting
    these huge IoT data across the network toward the data center or the cloud impose
    a high overhead in terms of bandwidth demand and latency on the IoT network. Further,
    as per the available reports most of the farming lands in India are placed in
    remote areas and have very poor Internet connectivity. Hence, it prevents the
    deployment of various short and long range communication techniques such as cellular,
    WiFi, and NB-IoT [4, 9]. To address this issue of communication requirements,
    we utilized the strength of Long Range (LoRa) communication technology [10] for
    smart agriculture which may help farmers in India. It helps in wireless communication
    up to long distances (up to few Kms) without using an Internet connection. So,
    to address the intermittent connectivity issue, in this paper, we present a LoRa-based
    three-tier smart agriculture framework comprised of (i) Field layer, (ii) Fog
    computing layer, and (iii) Cloud computing layer. Fog computing layer brings the
    processing and decision-making power close to the end devices, thus in a way reducing
    the communication time. We can store the data locally and thus, helps in reducing
    the uploading cost to the cloud [11]. Therefore, with the use of fog computing
    layer, rapid response to the end devices can be made and moderate level of computation
    can also be performed at the edge of the network itself (more importantly, even
    in case of Intermittent Internet connection) [7]. When there is a poor Internet
    connection, the fog computing layer need to efficiently utilise the bandwidth.
    So, instead of sending all the data received from the field layer, if we can aggregate
    the data before communicating to the cloud computing layer, then the issue mentioned
    above can be addressed. In this paper, a data aggregation algorithm is developed
    for the LoRa enabled Fog Computing layer that efficiently compresses the data
    before sending it to the cloud. The proposed data aggregation algorithm for Fog
    Layer in Smart Agriculture (DASA) consists of four phases: (i) selecting proper
    attribute of the data for clustering using Euclidean Similarity (ii) determination
    of optimum number of cluster for the received data (iii) clustering on the received
    data, and (iv) compression on each cluster of data. We performed experiments with
    DASA on real dataset [1] and also compared with existing data compression schemes
    like LZW and Huffman. We also conduct experiments and show the performance of
    the proposed algorithm on real testbed. We found DASA provides high compression
    ratio for the data as compared to the existing schemes. The remainder of the paper
    is organized as follows. Section 2 presents the existing related works. The proposed
    communication framework for LoRa enabled data transmission in smart agriculture
    is provided in Sect. 3. Section 4 presents the proposed efficient data aggregation
    framework. Section 5 presents various results in support of performance evaluation
    of DASA. Finally, Sect. 6 concludes the paper and discusses some future works.
    2 Related Work In [21], a decentralized multi competitive clustering protocol
    was proposed which can be used for wireless senor network assisted smart agriculture
    application. Degree of node, residual energy and distance were used for performing
    clustering. In [3], the authors showed that how wireless sensor network can be
    used to build clustering for wireless sensor network. They did the entire experiment
    in Egypt and it results in increased productivity and crop output. Similarly,
    an energy efficient static multi-hop based routing protocol is proposed in [8],
    which helps in finding the static path for data transfer in smart agricultural
    applications. Recently, authors in [13], proposed a novel fuzzy criteria based
    clustering mechanism to find the optimum cluster head in smart agriculture application.
    This approach helps the users of the application by providing the optimum route
    to minimize the usage of energy. In [16], the authors proposed a Gateway clustering
    energy efficient centroid protocol where centroid is used determine the cluster
    head. Also, to reduce the overhead on cluster head, each cluster’s gateway node
    were used to transmitting data to base station. The scheme discussed above does
    not provide considerable amount of data compression and cannot be extended for
    locations having intermittent Internet connection. 3 Proposed Communication Framework
    The communication framework for efficient data collection and processing in smart
    agriculture is shown in Fig. 1. It consists of three layers, namely, field layer,
    fog computing layer, and cloud computing layer. They are linked by cross-layer
    upstream and downstream for data and control information flows. Field Layer: It
    includes the actual sensors deployed in the agriculture field that measure the
    physical parameters of interest such as air temperature, air humidity, solar radiation,
    soil temperature at various depths, wind speed, rainfall, etc. Further, this layer
    can also accommodate intelligent actuators for irrigation, to execute commands
    send from higher layers such as fog or cloud level. Fog Computing Layer: The fog
    nodes collect data from the sensors deployed in the field and execute the data
    processing algorithms for intelligent aggregation that will reduce network traffic
    and bandwidth demand for transmitting data to cloud. Various decision making algorithms
    that exploit the incoming data at this level can be deployed for local decisions,
    thus avoiding completely the increased cost and latency of the upper layer. Cloud
    Computing Layer: Data is transferred towards a cloud platform for long-term storage
    and for performing analytical decisions. To implement this, we aim to use The
    Thing Network [2] platform in conjunction with the data aggregation algorithm
    deployed for the fog computer layer. Various decisions can be made in this layer
    in case of latency and intermittent internet connection issues. Also, the anomalous
    data can be stored in the cloud for future reference. Fig. 1. Proposed communication
    framework using fog computing for smart agriculture Full size image 4 DASA: Proposed
    Data Aggregation Algorithm In this section, the data aggregation algorithm (DASA)
    is discussed in detail for the communication framework provided in Sect. 3. DASA
    consists of four steps: (i) selecting proper attribute of the data for clustering
    using euclidean similarity (ii) determining the optimum number of cluster for
    the received data (iii) clustering on the received data, and (iv) compression
    on each cluster of data. The detailed algorithm is provided in Algorithm 1 and
    discussed below. The idea of applying clustering is to partition the whole data
    received (in various time interval) into groups based on similarity of data values.
    After clustering, each cluster has nearly similar data. So, if we apply compression
    in a cluster, then the compressed data will be smaller in length and finally,
    will results in higher compression ratio. Now, we discuss each steps of DASA in
    detail. We have used a clustering method inspired from agglomerative hierarchical
    clustering, in which the data points are grouped into clusters using euclidean
    distance and later the clusters are merged together using Ward distance [17].
    This clustering uses a bottom-up approach, where each data point starts in its
    own cluster. These clusters are then joined using a greedy approach, by taking
    the two most similar clusters together and merging them. This bottom-up approach
    treat each data point as single cluster and then, successively agglomerates pairs
    of clusters until all the clusters have been merged into a single cluster (which
    contains all the data). We have used two-dimensional clustering, in which the
    algorithm selects two suitable attributes from the received data. We used the
    Euclidean distance method to find the suitable attributes. After the selection
    of attributes, the clustering algorithm gets two attributes to begin clustering
    and it produces the optimal number of clusters based on the value it received
    from the \\(algo\\_to\\_find\\_optcluster()\\) method. This is used to find the
    optimal number of clusters for the received data point in the given time period
    [12, 14]. Below, we provide how to compute the Euclidean distance between the
    data points of two attributes. Euclidean Similarity Let \\(x = \\{x_1,x_2, \\dots
    x_p\\}\\) and \\(y = \\{y_1,y_2, \\dots y_p\\}\\). Then, Euclidean metric is defined
    as Eq. (1). $$\\begin{aligned} d(x,y) = (\\sum _{i=1}^{p} | x_{i}-y_{i}|)^m )^{1/m}
    \\end{aligned}$$ (1) In DASA, we used d(x, y) as Euclidean distance with \\(m
    = 2\\). Ward Linkage: Ward distance is a mathematical norm that is used to merge
    the cluster on the basis of a minimum error scheme. Instead of measuring the distance
    directly, it analyzes the variance of clusters. This method is said to be the
    most suitable method for quantitative variables. Ward’s method says that the distance
    between two clusters, A and B, is the amount of sum of squares increase when we
    merge the clusters. The lesser the value of the function which calculates the
    increase in the error of the sum of squares, more the respective clusters will
    be merged. Mathematically, the Ward linkage is provided as Eq. (2). $$\\begin{aligned}
    \\triangle (A,B)= \\sum _{i \\in A \\cup B} || \\overrightarrow{z_{i}} - \\overrightarrow{m_{A
    \\cup B}}&||^2 - \\sum _{i \\in A} || \\overrightarrow{z_i} - \\overrightarrow{m_{A}}||^2
    - \\nonumber \\\\ {}&\\sum _{i \\in B} || \\overrightarrow{z_{i}} - \\overrightarrow{m_B}||^2
    = \\dfrac{n_{A} n_{B}}{n_{A} + n_{B}} || \\overrightarrow{m_{A}} - \\overrightarrow{m_{B}}||^2
    \\end{aligned}$$ (2) In Eq. (2), \\(\\vec {z_i}\\) and \\(\\vec {m_j}\\) denote
    the center of cluster i and j, and \\(n_j\\) is the number of data points in each
    cluster j. \\(\\triangle \\) is called the merging cost of combining the clusters
    A and B. With clustering, the sum of squares starts out at zero (because every
    point is in its own cluster) and then grows as we merge clusters. Ward’s method
    keeps this growth as small as possible. Fig. 2. Clustering of data Full size image
    The \\(algo\\_to\\_find\\_optcluster()\\) method in Algorithm 1 generates the
    optimal number of clusters based on the numeric values of the attribute given
    to the clustering method. As shown in Fig. 2(a), \\(k=7\\) is the number of required
    clusters, and the 7 clusters are represented in Fig. 2(b). Next, we discuss the
    data compression method i.e., huffman coding, which is used in the third phase
    (see Algorithm 1). In this phase, every data value is used for each cluster to
    construct a heap data structure. Using a while loop a tree is constructed with
    binary value 0 for the left child and binary value 1 for the right child. Subsequently,
    a binary tree is created for each cluster. Finally, the encoded values of each
    cluster are stored and compressed to a binary file, which results as an output
    of DASA. 5 Performance Evaluation The aim of the proposed data aggregation technique
    is to decrease the communication cost by compressing the volume of data that need
    to be transmitted using the Internet to the cloud from the fog layer. After receiving
    the sensors’ data, fog nodes perform preprocessing and remove the redundant data
    and noises from the collected data before applying DASA. After that, fog nodes
    transmit the compressed file to the cloud along with the dictionary required to
    decode the file to get the original data points. In this section, we evaluate
    the proposed data aggregation approach that will be executed at the fog node.
    First, we use the available dataset [1] for preliminary experiments and performance
    evaluation. Then, we also evaluated the performance of the proposed DASA on our
    own testbed (see below). In this section, we compared our proposed DASA Algorithm
    with existing baseline compression algorithms like LZW lossless compression and
    Huffman coding (denoted as Huff). To analyse the performance, We use different
    performance metrics, such as compression ratio (CR), compression and decompression
    time, compression power, and size of transmitted data. Compression Ratio (CR in
    %): Mathematical definition is provided in Eq. (3): $$\\begin{aligned} CR (\\%)
    = (1-\\frac{D_{Compressed}}{D_{Original}}) * 100 \\end{aligned}$$ (3) where \\({D_{Compressed}}\\)
    refers to the data size after compression (Compressed Data) and \\({D_{Original}}\\)
    is the data size before compression (Original Data). Compression Time: It is defined
    as the total time required (measured in seconds) by the scheme to generate the
    compressed file from the original file. Compression Power (CP): It is typically
    defined as the ratio between the uncompressed volume of data to the volume of
    compressed volume of data. Mathematically defined as Eq. (4): $$\\begin{aligned}
    CP = \\frac{D_{Original}}{D_{Compressed}} \\end{aligned}$$ (4) where \\({D_{Compressed}}\\)
    refers to the data size after compression (Compressed Data) and \\({D_{Original}}\\)
    is the data size before compression (Original Data). In the dataset [1], there
    are temperature, humidity, and soil moisture at two different depth as attributes.
    First, we used Euclidean similarity method to select two attributes that will
    be used to cluster the data points. Using Euclidean similarity, we found that
    temperature and humidity are suitable attributes for clustering. Then, we perform
    clustering to group the data points. For that, we use the \\(algo\\_to\\_find\\_optclusters()\\)
    function to find the optimal number of clusters. Figure 2(a) shows the scores
    at the various number of clusters and optimal number of clusters are 7. The final
    clusters are shown in Fig. 2(b). Test Bed Setup: Various sensors connected to
    the Arduino board to monitor the soil moisture, and environmental parameters such
    as temperature, humidity, etc. as shown in Fig. 3. The Arduino board programmed
    to acquire data from the sensors connected to it and send them to the gateway
    (fog node) via LoRa communication, the latest wireless technology that allows
    long distance communication, and low power consumption. It is more suitable for
    smart agriculture applications. We use a star topology to connect sensor nodes
    to the gateway, which is kept at a distance of 1000 mts and at a height of 40
    ft. During the experiments, we found that the latency of the data is around 1.1
    sec. In this way, we can have very few gateways to handle large agricultural lands.
    The characteristics of LoRa communication protocol and sensor’s accuracy used
    in our implementation are presented in Table 1 and Table 2 respectively. Fig.
    3. Test bed setup Full size image Table 1. Preliminary information about LoRa
    communication protocol Full size table Characteristic of Fog Node: At the fog
    layer, we connected Raspberry Pi with 10 channels LoRaWAN GPS concentrator as
    shown in Fig. 3(b). We use the PG1301, a LoRa based multi-channel transmitter/receiver
    designed to simultaneously receive several LoRa packets using random spreading
    factors on random channels. Its goal is to enable robust connection between a
    central wireless data concentrator and a massive amount of wireless end-points
    spread over a very wide range of agriculture field. The PG1301 is based on SX1301
    + 2 \\(\\times \\) 1257 IC. Table 2. Different types of sensors and their accuracy
    Full size table Fig. 4. Comparison of various schemes interms of several performance
    metric Full size image Figure 4(a) shows the compression ratio for various compression
    techniques including DASA using the dataset [1] and Testbed. The compression ratio
    is an important metric that determines the bandwidth demands to transmit the data
    in the network. Figure 4(a) shows that DASA algorithms perform better than the
    original LZW and Huffman compression schemes. The results indicate that DASA generates
    a better compression ratio in comparison with other approaches. DASA compresses
    the data size up to \\(57.39 \\%\\) (for the dataset [1]) and upto \\(38.39\\%\\)
    (for the testbed). Figure 4(b) shows the compression time for various approaches.
    The result shows that our proposed DASA takes higher compression time as compared
    to LZW and Huffman (for the dataset [1] and testbed). Figure 4(c) shows the compression
    power (CP) for various compression techniques including DASA using both the datasets.
    The compression power is an important metric that determines the amount of data
    compressed. Figure 4(c) shows that DASA algorithm perform better than the lossless
    LZW and Huffman. The results indicate that DASA is having a better compression
    power in comparison with other approaches. DASA compresses the data with a CP
    of 2.35 whereas for LZW and Huffman it is 1.18 and 2.09 respectively(for the dataset
    [1]). Similarly, for the testbed dataset DASA achieves a CP of 1.62. Fig. 5. Comparison
    of size of transmitted data (Dataset [1]) Full size image In the next experiment,
    we compare the performance of proposed scheme in terms of volume of transmitted
    data to the cloud. It is the size of the final compressed file that is to be uploaded
    to the cloud, i.e. the file size after applying the DASA/existing compression
    technique. We use The Things Network cloud in our experiment. Figure 5 and Fig.
    6 show the size of transmitted data for the dataset [1] and our won data generated
    from testbed. The result shows that DASA approach can generate a lower size of
    data (to be sent) as compared to the lossless LZW and Huffman (in case of dataset
    [1]). The size of the transmitted file is larger in the case of Huff and LZW as
    compared DASA (see Fig. 5). Fig. 6. Comparison of size of transmitted data (Testbed
    Dataset) Full size image 6 Conclusions and Future Work In this paper, we proposed
    a data aggregation algorithm to reduce bandwidth consumption of LoRa enabled Fog
    layer in smart agriculture (DASA). The entire volume of sensor data is efficiently
    aggregated before uploading to the cloud. Initially, we performed experiments
    on existing data set using python programming language, and then we also conducted
    experiments and show the performance of DASA on real testbed. Comparison results
    show that the proposed algorithm significantly decreases the volume of data to
    be uploaded to the cloud. Thus, can be highly effective for performing data communication
    from fog layer to cloud where Internet is intermittent. In the future, we aim
    to find a representative (a member is called a representative if it is similar
    to most of the members and different from the members in other cluster) of each
    cluster and only the representative will be send to the cloud. We will also analyze
    the trade-off between the cost of information loss vs bandwidth demand and storage
    requirement of the cloud. References Smart Fasal-smart irrigation and fertilization
    system for precision agriculture using internet of things and cloud infrastructure
    (wheat dataset (Feb 2021 to April 2021)). http://smartfasal.in/ftp-dataset-portal/
    The things network. http://swww.thethingsnetwork.org/ Abd El-kader, S.M., El-Basioni,
    B.M.M.: Precision farming solution in Egypt using the wireless sensor network
    technology. Egyptian Inform. J. 14(3), 221–233 (2013) Google Scholar   Ahmed,
    N., De, D., Hussain, I.: Internet of things (IoT) for smart precision agriculture
    and farming in rural areas. IEEE Internet Things J. 5(6), 4890–4899 (2018) Article   Google
    Scholar   Atmaja, A.P., El Hakim, A., Wibowo, A.P.A., Pratama, L.A.: Communication
    systems of smart agriculture based on wireless sensor networks in IoT. J. Robot.
    Control (JRC) 2(4), 297–301 (2021) Google Scholar   Babangida, L., Perumal, T.,
    Mustapha, N., Yaakob, R.: Internet of things (IoT) based activity recognition
    strategies in smart homes: a review. IEEE Sens. J. (2022) Google Scholar   da
    Costa Bezerra, S.F., Filho, A.S., Delicato, F.C., da Rocha, A.R.: Processing complex
    events in fog-based internet of things systems for smart agriculture. Sensors
    21(21), 7226 (2021) Article   Google Scholar   Dubey, A.K., Upadhyay, D., Thilagam,
    P.S.: An energy-efficient static multi-hop (ESM) routing protocol for wireless
    sensor network in agriculture. In: 2018 2nd International Conference on Micro-Electronics
    and Telecommunication Engineering (ICMETE), pp. 277–280. IEEE (2018) Google Scholar   Farooq,
    M.S., Riaz, S., Abid, A., Umer, T., Zikria, Y.B.: Role of IoT technology in agriculture:
    a systematic literature review. Electronics 9(2), 319 (2020) Article   Google
    Scholar   Gkotsiopoulos, P., Zorbas, D., Douligeris, C.: Performance determinants
    in LoRa networks: a literature review. IEEE Commun. Surv. Tutor. (2021) Google
    Scholar   Kalyani, Y., Collier, R.: A systematic survey on the role of cloud,
    fog, and edge computing combination in smart agriculture. Sensors 21(17), 5922
    (2021) Article   Google Scholar   Kumar, U., Legendre, C.P., Lee, J.C., Zhao,
    L., Chao, B.F.: On analyzing GNSS displacement field variability of Taiwan: hierarchical
    agglomerative clustering based on dynamic time warping technique. Comput. Geosci.
    169, 105243 (2022) Article   Google Scholar   Pandiyaraju, V., Logambigai, R.,
    Ganapathy, S., Kannan, A.: An energy efficient routing algorithm for WSNs using
    intelligent fuzzy rules in precision agriculture. Wirel. Pers. Commun. 112(1),
    243–259 (2020) Article   Google Scholar   Patel, P., Sivaiah, B., Patel, R.: Approaches
    for finding optimal number of clusters using k-means and agglomerative hierarchical
    clustering techniques. In: 2022 International Conference on Intelligent Controller
    and Computing for Smart Power (ICICCSP), pp. 1–6. IEEE (2022) Google Scholar   Qazi,
    S., Khawaja, B.A., Farooq, Q.U.: IoT-equipped and AI-enabled next generation smart
    agriculture: a critical review, current challenges and future trends. IEEE Access
    (2022) Google Scholar   Qureshi, K.N., Bashir, M.U., Lloret, J., Leon, A.: Optimized
    cluster-based dynamic energy-aware routing protocol for wireless sensor networks
    in agriculture precision. J. Sens. 2020 (2020) Google Scholar   Roux, M.: A comparative
    study of divisive and agglomerative hierarchical clustering algorithms. J. Classif.
    35(2), 345–366 (2018) Article   MathSciNet   MATH   Google Scholar   Sinha, B.B.,
    Dhanalakshmi, R.: Recent advancements and challenges of internet of things in
    smart agriculture: a survey. Futur. Gener. Comput. Syst. 126, 169–184 (2022) Article   Google
    Scholar   Sungheetha, A., Sharma, R.: Real time monitoring and fire detection
    using internet of things and cloud based drones. J. Soft Comput. Paradigm (JSCP)
    2(03), 168–174 (2020) Article   Google Scholar   Tao, W., Zhao, L., Wang, G.,
    Liang, R.: Review of the internet of things communication technologies in smart
    agriculture and challenges. Comput. Electron. Agric. 189, 106352 (2021) Article   Google
    Scholar   Venkateshwar, A., Patil, V.C.: A decentralized multi competitive clustering
    in wireless sensor networks for the precision agriculture. In: 2017 International
    Conference on Current Trends in Computer, Electrical, Electronics and Communication
    (CTCEEC), pp. 284–288. IEEE (2017) Google Scholar   Zamora-Izquierdo, M.A., Santa,
    J., Martínez, J.A., Martínez, V., Skarmeta, A.F.: Smart farming IoT platform based
    on edge and cloud computing. Biosys. Eng. 177, 4–17 (2019) Article   Google Scholar   Download
    references Acknowledgment We acknowledge TIH-IoT at IIT Bombay for sponsoring
    this work through Technology Development Program via sanctioned letter no. TIH-IoT/21-22/
    TDP/Acad/SL/004. Author information Authors and Affiliations Department of Electrical
    and Computer Science Engineering, Institute of Infrastructure Technology, Research
    and Management (IITRAM), Ahmedabad, India Mayank Vyas, Garv Anand & Ram Narayan
    Yadav Department of Computer Science and Engineering, Indian Institute of Information
    Technology, Design and Manufacturing, Kancheepuram, Chennai, India Sanjeet Kumar
    Nayak Corresponding author Correspondence to Sanjeet Kumar Nayak . Editor information
    Editors and Affiliations Department of Information and Communication Engineering,
    Faculty of Information Engineering, Fukuoka Institute of Technology, Fukuoka,
    Japan Leonard Barolli Rights and permissions Reprints and permissions Copyright
    information © 2023 The Author(s), under exclusive license to Springer Nature Switzerland
    AG About this paper Cite this paper Vyas, M., Anand, G., Yadav, R.N., Nayak, S.K.
    (2023). DASA: An Efficient Data Aggregation Algorithm for LoRa Enabled Fog Layer
    in Smart Agriculture. In: Barolli, L. (eds) Advanced Information Networking and
    Applications. AINA 2023. Lecture Notes in Networks and Systems, vol 654. Springer,
    Cham. https://doi.org/10.1007/978-3-031-28451-9_4 Download citation .RIS.ENW.BIB
    DOI https://doi.org/10.1007/978-3-031-28451-9_4 Published 15 March 2023 Publisher
    Name Springer, Cham Print ISBN 978-3-031-28450-2 Online ISBN 978-3-031-28451-9
    eBook Packages Intelligent Technologies and Robotics Intelligent Technologies
    and Robotics (R0) Share this paper Anyone you share the following link with will
    be able to read this content: Get shareable link Provided by the Springer Nature
    SharedIt content-sharing initiative Publish with us Policies and ethics Download
    book PDF Download book EPUB Sections Figures References Abstract Introduction
    Related Work Proposed Communication Framework DASA: Proposed Data Aggregation
    Algorithm Performance Evaluation Conclusions and Future Work References Acknowledgment
    Author information Editor information Rights and permissions Copyright information
    About this paper Publish with us Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'DASA: An Efficient Data Aggregation Algorithm for LoRa Enabled Fog Layer
    in Smart Agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh G.
  - Singh J.
  citation_count: '11'
  description: The Internet of Things, a new world in computer networks, is growing
    more and more significant due with its vast range of applications in goal-oriented
    initiative advances. People nowadays have access to remotely applications that
    include agriculture, environmental sensing, integrated solutions, as well as smart
    cities due to the Internet of Things. These are the modern, advanced technologies
    that make things simple. The IoT must have effectively improved the number and
    diversity of connected gadgets, resulting in an attractive trend. The fog computing
    paradigm, which is also a relatively recent invention mostly in computer industry,
    can efficiently supplement conventional cloud platform with much more sustainable
    technologies. Despite its low environmental impact, fog computing can potentially
    be extremely important for the development of smart agriculture. In this work,
    introducing a fog-based internet of things architecture that takes advantage of
    the fog as well as its services, lowering the amount of data relayed towards the
    cloud, enhancing computationally resource utilization. The increasing domain of
    smart agriculture, which involves all agriculture management approaches, is subject
    to the suggested fog computing methodology. Additionally, using this platform
    as a foundation, did simulations as well as illustrated how such fog computing
    strategy may signficantly minimise the quantity of data sent to the cloud. It
    also suggest as well as outline a proposed system that can detect the alert conditions
    over heterogeneous sensor data streams yielding effective crop protection.
  doi: 10.1109/ICSSIT55814.2023.10060995
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 5th International Confer... A Fog
    Computing based Agriculture-IoT Framework for Detection of Alert Conditions and
    Effective Crop Protection Publisher: IEEE Cite This PDF Gurpreet Singh; Jaspreet
    Singh All Authors 11 Cites in Papers 179 Full Text Views Abstract Document Sections
    I. Introduction II. IoT Ecosystem Architecture For Smart Agriculture III. Fog
    Computing IV. Proposed Model Conclusion Authors Figures References Citations Keywords
    Metrics Abstract: The Internet of Things, a new world in computer networks, is
    growing more and more significant due with its vast range of applications in goal-oriented
    initiative advances. People nowadays have access to remotely applications that
    include agriculture, environmental sensing, integrated solutions, as well as smart
    cities due to the Internet of Things. These are the modern, advanced technologies
    that make things simple. The IoT must have effectively improved the number and
    diversity of connected gadgets, resulting in an attractive trend. The fog computing
    paradigm, which is also a relatively recent invention mostly in computer industry,
    can efficiently supplement conventional cloud platform with much more sustainable
    technologies. Despite its low environmental impact, fog computing can potentially
    be extremely important for the development of smart agriculture. In this work,
    introducing a fog-based internet of things architecture that takes advantage of
    the fog as well as its services, lowering the amount of data relayed towards the
    cloud, enhancing computationally resource utilization. The increasing domain of
    smart agriculture, which involves all agriculture management approaches, is subject
    to the suggested fog computing methodology. Additionally, using this platform
    as a foundation, did simulations as well as illustrated how such fog computing
    strategy may signficantly minimise the quantity of data sent to the cloud. It
    also suggest as well as outline a proposed system that can detect the alert conditions
    over heterogeneous sensor data streams yielding effective crop protection. Published
    in: 2023 5th International Conference on Smart Systems and Inventive Technology
    (ICSSIT) Date of Conference: 23-25 January 2023 Date Added to IEEE Xplore: 14
    March 2023 ISBN Information: ISSN Information: DOI: 10.1109/ICSSIT55814.2023.10060995
    Publisher: IEEE Conference Location: Tirunelveli, India SECTION I. Introduction
    Innovative approaches and advancements in technology are continually becoming
    put forth and implemented in order to suit the necessities of humanity in general.
    The Internet of Things has been created as a result of this [1]. IoT is considered
    as a networking including all things which are already integrated into gadgets,
    sensors, computers, software, and personnel through the IoT environment to converse,
    share knowledge, and collaborate in order to offer a perfect result between of
    physical and digital worlds [2]. Smart buildings, transport systems, building
    automation, autonomous driving, smart agriculture, institutional management, health
    care, as well as logistic support are just a few of the areas where IoT has been
    implemented frequently [3]. Innovative approaches and technology have been implemented
    in the agricultural industry also with goal of improving agricultural output [4].
    Researchers have conducted studies that have a sizable attention to research,
    operations, and commercialization. By 2030, there will be more than 500 billion
    IoT internet users in the World, predicts Cisco [5]. IoT has been defined in a
    variety of ways by numerous international organizations. IoT is described as ”Global
    infrastructure for Knowledge Society, enabling innovative services by based on
    the information obtained (physical and virtual) small details based on existing
    but instead evolving, highly integrated information and communications technologies”
    by ITU-T (International Telecommunication Union Telecommunication Standardization
    Sector). IoT is a technique that employs the internet and already-existing resources
    to control things [6]. Several IoT communication technologies, including Bluetooth,
    ZigBee, Long-Range (Lora), Professional and technical skills Wave (Z-Wave), SigFox,
    Wi-Fi, GPRS, 4G, and 5G [7] are used to maintain this control. Agricultural production,
    animals, as well as conservatories are the three main IoT applications through
    agricultural, which are separated into various monitoring subdomains. Some IoT-based
    configurations use cloud services to evaluate and examine remote data, which allows
    the researchers and agriculturalists to make better decisions. With the development
    of modern technology, intelligent energy management programs now provide more
    control and decision-making options [8]. 2,947 results from Web of Science Core
    Collection for fog computing (All Fields) and iot (All Fields) given in figure
    1. A fog computing concept is comparable to a localized cloud in which users maintain
    as well as control their own data. Users have complete control over when, when,
    and how they manage and analyze their data. The “smart front-end” technologies,
    which encourage the deployment of networked or specialized devices to provide
    processing, storage, including network telecommunication networks connecting data
    centers as well as terminal devices, are at the heart of fog computing. Consequently,
    data storage and computing are moved very close to the acquiring terminal, which
    lowers network connectivity and storage overhead, allows faster application reaction
    time, and better utilizes network capacity. Over a wide expanse, an IoT management
    system keeps records of the components including wind, soil, temperature, and
    water. The sub-domains towards which they belong were also employed to identify
    IoT-based agriculture monitoring systems. The selected subdomains include monitoring
    of something like the soil, air, water, temperature, water quality, diseases,
    locations, weather factors, pests, fertilisation, and monitoring of the environment.
    The IoT paradigm also enhances human connection in the real world by using inexpensive
    electronic gadgets and communication protocols. IoT also maintains a close eye
    on many atmospheric factors to produce detailed, real-time assessments of weather,
    radiation levels, noise levels, and contamination of water [9]. Additionally,
    information gathered about various environmental characteristics is communicated
    to the user using message warnings or trigger alerts [10]. Publications report
    total 2,947 from 1999 to 2022 citing articles 31,623 analyze total 29,229 analyze
    without self-citations times cited 62,198 times cited total shown in figure 2.
    Fig. 1. Survey for IoT and Fog Smart Agriculture Show All Fig. 2. Publications
    and Citation Year-wise Report IoT for Smart Agriculture Show All Fig. 3. IoT for
    Smart Agriculture: Scopus Database Show All SECTION II. IoT Ecosystem Architecture
    For Smart Agriculture In existing world has undergone a revolution as a result
    of the Internet of Things (IoT) era. With the continued application of IoT technology
    in horticulture, smart farming will eventually become a viable, profitable, as
    well as sustainable method to increase agricultural production and quality [11].
    The current recession of the majority of farmers in India or any other modern
    country is one of the explanations because agriculture is one of the few industries
    whereby technology has not even been widely adopted. Due to two important aspects,
    namely population increase as well as urbanisation, agricultural commodities will
    become increasingly scarce on a global scale. Industrialization has caused a process
    whereby a lot of farm production is being transformed towards Non-Agricultural
    field (NA) for something like the development of infrastructure close to urban
    areas in relation of the overall increase increased agricultural sectors. Basically,
    the rural region is getting smaller and smaller every day, and less farming is
    being done, which could mean less food being produced. The only way for the world
    to get out of this position right now is to boost crop yield by using resources
    very wisely. Precision agriculture is a concept that has emerged in order to reduce
    resource waste [12]. 2,762 document results from scopus database. by using keyword
    IoT and smart agriculture given in figure 3. While temperatures, humid, as well
    as light are necessary for the photosynthetic procedure, soil moisture seems to
    be crucial for the physical stability in plants. Controlling the temperature in
    a hydroponic garden environment is crucial because crops thrive when kept at a
    safe temperature for a set period of time [13], figure 4 depicts the IoT ecosystem
    architecture for smart agriculture. Fig. 4. IoT Ecosystem Architecture for Smart
    Agriculture Show All A. Alert Condition for Smart Agriculture Anonymous Activities
    Detection for Internet of Things: The Internet of Things (IoT) is a new paradigm
    that allows to link all of our objects as well as operate them either from location
    at any time. In order to discover the anonymous activity within a specific area.
    This system uses map reduction to identify several field intrusions. By sending
    alert notifications and through smart phone application, it will notify the user.
    The Internet of things would be a global network that allows us to link through
    all modern devices and operate them using a variety of techniques from any location
    at any given time. The fundamental idea behind this approach is to use mobile
    applications to address the internet’s inherent security concerns and make IoT
    significantly highly safe. When anonymous detection is made, the results inform
    the individual via alert notice [14]. An IoT-Based Smart Agriculture Model: Over
    the previous ten years, rainfall as well as climate change have both been frequent.
    It has inspired many Indian farmers to cultivate climate-aware practises referred
    to as “agriculture. Using the IoT, smart agriculture would be an automated and
    guided information technology (Internet of Things). IoT is expanding quickly and
    being used widely in all wireless settings. Farmers in the village may have grown
    the ”relatively similar” crop for this many years as well as weather patterns
    all changed. Using the suggested method, farmers may adapt to and even gain from
    either of these changes by receiving current information. Due to the very specialized
    nature of agricultural information, in particular, distinct situations, it is
    a particularly difficult task to give such knowledge. It is anticipated that having
    complete real-time as well as historical environmental data will facilitate effective
    commodity management and utilization. Enabled Water Monitoring System: Everyone
    still must have access to water in their living. Water management as well as restoration
    will be essential for human survival because of the present climate disaster.
    There has recently been a great necessity Internet of Things-based consumption
    humanitarian efforts that might be built quickly (IoT). This suggests a meaningful,
    Internet of Things-based system for monitoring water [15]. The prototypes mainly
    derived from the water level, which could be a crucial component when it comes
    to flooding, particularly in disaster zones. Using a soil moisture sensor, a fixed
    parameter is utilised to determine the water level. If the groundwater table exceeds
    the parameter, an alert signal is sent in meaningful to a social platform like
    Twitter. Basis of collected configuration was made on a cloud server. A precise
    water level detector would take the place of the detector. In order for the system
    to operate more effectively and provide water level detection with more accuracy
    [16]. Smart Agriculture using IoT based Modern Technologies: The standout components
    of this fundamental idea include a smart, GPS-based autonomously robot that can
    be employed for both manual and automatic tasks like removing, squirting, moisture
    sensing, going to scare birds and animals, keeping watch, weather monitoring,
    watershed management, and waterway control. Everything about this data is stored
    and displayed in a mobile application. The user has successfully sent an alert
    SMS and notice in accordance with predetermined parameters. Smart supply chain
    management includes monitoring the humidity, temperature, and detecting larceny
    inside the warehouse. All of these tasks can be managed by a web-connected application,
    and they will be carried out by integrating wireless fidelity, sensors, and other
    devices. With the help of an autonomously robot, an automatic watering system,
    and then a smart warehouse management system the sensors and micro controllers
    are successfully interfaced with the device, demonstrating that it is one of the
    solutions to field visits, irrigation concerns, but rather storage problems [17].
    Estimation: Huge amounts of data are produced by the IoT, which can be evaluated
    over real to ascertain the situation of the environment. Data analytics can be
    used to analyse data from many types of network sensors, forecast ambient trends
    using intelligent algorithms, and come up with bandwidth solutions. IoT data can
    be used to identify illness and unfavourable weather conditions, such water in
    addition to being utilised to monitor many aspects of a field, such as irrigation
    systems. For instance, sensors may be employed in forestry to determine the area
    of something like a forest where it is most likely to catch fire as well as detect
    fire outbreaks. Early warning systems regarding natural catastrophes are another
    area of forecasting that improves emergency response. [18]. B. Applications of
    IoT in Smart Agriculture A number of IoT applications towards agriculture have
    really been developed in recent years. According to the research, these technologies
    were grouped into groups performance objectives, including plant production, observation,
    including surveillance and traceability. The following section briefly has a full
    presentation of the findings. Monitoring:In the agriculture, variables impacting
    the farming as well as manufacturing environment, also including soil, relative
    humidity, weather, pH level, etc., can sometimes be tracked and gathered. These
    part of the supply on the agriculture industry under consideration. The following
    supervision strategies are being used by a few other clever farming systems: Crop
    farming. Within the sector, important factors such as air heating rate, precipitation,
    air humidity, relative humidity, ocean currents, solar radiation, pest status,
    soil water flavours, etc. greatly influence the farming process as well as production
    efficiency [19]. It also suggested a weather station, an IoT device that allows
    for intelligent regulation of both humidity and temperature elements. When the
    temperature as well as humidity exceeds a preset level, this gadget will automatically
    activate the warnings mode utilizing the optical signal and transmit information
    to the farmer [20]. Agriculture production conditions can be controlled with the
    aid of monitoring data also including soil moisture, temperature, and condition,
    as well as the forecasting of natural factors like rainfall and weather. This
    support helps farmers plan but rather make irrigation decisions to maximise output
    and lower labour costs. Additionally, the gathered data as well as big data processing
    technology can offer suggestions for putting into practice preventative and corrective
    measures against pests and illnesses in farming. Aquaponics: Aquaponics as well
    as aquaculture are combined in this system. In the farming method known as aquaculture
    systems. Constantly monitoring groundwater resources, soil moisture, temperature,
    salt, pH, sunshine, etc. constitutes one of the most crucial challenges in this
    kind of farms [21]. Tracking and Tracing: Modern farms must show that such items
    they are supplying to the public remain safe and easy to locate and trace in order
    to meet demand and boost profit value. This will increase customer confidence
    in product quality and safety as well as health-related issues. Intelligent agriculture
    systems can identify and trace agricultural commodities, allowing users can know
    the full history of the commodity. By enabling traceability and tracking of some
    of the data gathered across the supply chain, these systems make it possible for
    consumers and many other stakeholders to determine the source, location, as well
    as history of products [22]. Smart Precision Farming: Global positioning system
    (GPS) innovation has led to advances in a wide range of scientific and technical
    fields. The most crucial factors for identifying a device, which including time
    and place, are provided by the GPS. Numerous industries, including automobiles,
    IoT ecological systems, as well as smart phones, had already successfully implemented
    GPS systems. Moreover, GPS is only effective as an assistance for sky and recreational
    systems. In the meantime, there must be an increasing need for locating and having
    to navigate system applications in homes and on the sidewalks of smart cities.
    An enhanced satellite - based positioning system (GNSS) is being set up in an
    effort to address this issue. Drone use in measurement as well as farming operations
    is one of the most significant uses of intelligent precision farming. Spraying
    pesticides, fertilizing, planting the seeds, trying to assess and mapping, as
    well as monitoring agricultural production are some typical farming activities
    designed by UAVs [23]. Fig. 5. Fog computing for Smart Agriculture: Web of Science
    Show All SECTION III. Fog Computing Fog computing is a decentralized technology
    architecture where most of the data, machine, store, as well as applications are
    located anywhere in-between the personal information source and the public cloud.
    Such as cloud applications, fog computing enables the benefits and capabilities
    of the cloud further to the locations in which data is created and used. The terms
    fog computing as well as edge computing are frequently employed similarly since
    both involve bringing intelligence as well as processing near around where the
    knowledge is processed. Among both cloud services as well as terminals computing,
    fog computing can sometimes be thought of as the intermediary layer. 2,947 results
    from Web of Science Core Collection for fog computing (All Fields) and iot (All
    Fields) given in figure 5. It is adjacent to the gateway and situated at the network’s
    periphery. The fog level, the terminal communication protocol, and thus the cloud
    services layer are frequently coupled to form a common networked structure model,
    as demonstrated in Figure 6. Number of meanings terminals have access to the fog
    node within its transmission range, enabling interconnectivity and information
    exchange. The direct computational processing can also be finished by that of
    the fog computing layer, which reduces the network communication delays caused
    by transmitting and receiving data from distant clouds. Fog nodes were formerly
    few and simple to control, but that in recent years, their quantity has dramatically
    expanded [24]. The significant point of fog node energy utilization has been revealed
    by the rise in IoT terminals. As a result, it is necessarily a crucial study field
    for something like the advancement of IoT. A non - linear and non personality
    sensor network made up of several nodes placed throughout an area and larger share
    wirelessly makes up the terminal layer in addition. Collectively perceiving, gathering,
    and processing data about the observed items inside the network coverage region
    with the intention of sending it to the observed is the aim. Numerous nodes are
    distributed in or close to the sensor field either spontaneously or iteratively.
    Fig. 6. IoT- based Fog Computing Framework Show All Fig. 7. A Multi-layer Framework
    for Fog Computing Environments Show All A. An IoT-based Fog Computing Framework
    A multi-layer framework for IoT-based fog computing environments given in figure
    7 that addresses the issues related to (i) the topology of the terminal layer
    network and its impact on the routing of data in that layer (ii) the allocation
    of resources (fog nodes) in the fog layer as well as the allocation of the tasks
    uploaded from the terminal layer. The framework is based on a model that minimizes
    the overall cost (delay, distance, energy) of completing the terminal tasks using
    fog nodes [25]. Fog Computing is mainly used to manage data from sensors and edge
    devices. It centralizes data, processing, and applications in devices at the edge
    of the network rather than all in the cloud data center. A decentralized computing
    method through fog computing technology to distribute computing, communication,
    control, and storage resources and services to users or devices and systems close
    to users. The integration targets the lack of IoT device and cloud computing,
    and the proposed solution can be integrated into the IoT fog computing to integrate
    the three-tier architecture of the Internet of Things and add a layer of services
    to the network connection layer, expanding the traditional master-slave mode.
    The network computing model of the architectural communication model calculation
    is more widely applied to various services [26]. Modern fog computing technology
    develops intelligent networks combining IoT networks and cloud platforms. Fog
    computing is applied at the network edge, and they perform a significant number
    of tasks in terms of processing, storage, and communication. Networking devices
    such as routers, gateways, etc., make up fog computing. Compared to sensor nodes,
    these devices have more processing, transmission, and storage capabilities [27].
    B. Characteristics of Fog Computing Edge location, Response time as well as connectivity.
    Early plans to enable endpoints featuring rich features somewhere at edge of the
    network, such as games, streaming videos, and wearable technology services, are
    where the Fog’s roots may very well be found [28]. Geographical distribution,
    The processes as well as applications supported by the Fog necessitate highly
    scattered installations, in complete contrast compared to the more cloud Architecture.
    For this, The Fog will actively participate throughout providing moving cars with
    high quality streamed via proxies as well as access points placed along highways
    as well as railroad tracks. Applications of significant fog. As a result, services
    should always be distributed throughout domains and Fog components must have been
    capable of interacting with one another. Interoperability and federation, The
    collaboration of the several providers is necessary for the continuous support
    of some services (streaming is an excellent demonstration). The collaboration
    of the several suppliers is necessary for the continuous support of some services
    (streaming is an excellent example). As a result, resources must be distributed
    across regions and Fog components would have to be able to converse with one another.
    Other illustrations of intrinsically interconnected systems requiring distributed
    data processing and storage capabilities include humongous network architecture
    which monitor environmental environment as well as the Smart Grid. Very many nodes,
    as nothing more than a result of the extensive location - based, as demonstrated
    by sensor networks generally and thus the Smart Grid especially. C. Fog Computing
    for Smart Agriculture Fog services for intelligent agriculture. In nations such
    as India, wherever farming is a very common profession. These people support their
    families by working in this field. Fig. 8. Fog Computing for Smart Agriculture
    Show All However, poor management of something like the farming grounds results
    in the destruction of crops. This specific problem has been somewhat addressed
    by the use of a fog cloud infrastructure. Figure 8 shows how the fog architecture
    works. In farming areas, sensors such as soil moisture sensor, video actuators,
    etc., have really been strategically positioned for collect information, store
    it, and transmit it to fog nodes as well as servers. The accessible to authorized
    will be be capable of taking real-time pictures of the farmers and thus the farm,
    and the moisture monitoring will be capable of measuring how much moisture is
    in the crops. The farmer who owns the field in question has access to these details.
    A farmer can access the agricultural data for individual farmland after providing
    the correct login information. The farmer may utilize this information to analyse
    his farmland as well as take the necessary measures. This data has been kept secure
    and secret so that nobody else is able to acquire it [29]. SECTION IV. Proposed
    Model The flowchart of the outcome model is represented in Figure 9. The step
    by step working of flowchart is explained below: Step1: Data has to be gather
    by sensors such as current sensor, LDR sensor, DHT11 sensor, soil sensor. Step2:
    Performing Data analysis and summarizing the data given by fog node. Step3: Prediction
    analysis and evaluating in relay process of the model. Step4: Communication process
    done through gateway such as wifi. A gateway acts as a platform’s entry and exit
    point because all data must travel through or connect with it since being forwarded.
    Step5: Finally, data stored on cloud. Conclusion Smart agriculture aims to provide
    the most recent technology within agriculture activities for enhanced crop yields
    by acquiring the current actual crop information as well as helping farmers recognize
    the advancements in agriculture. IoT involves sensors to collect precious information
    from of the farmland as well as transmit it over a trusted server to the cloud
    platform. Fog computing seems to be a solution for controlling the computational
    complexity in an IoT environment. In the context of smart agriculture, this research
    proposed system to examines a data technique for fog computing, where it improves
    smart agriculture by decreasing the quantity of transmission of data toward the
    cloud environment. The proposed smart agricultural system understanding real time
    information and knowledge, which is used for data processing of alert conditions
    over heterogeneous sensor data streams yielding effective crop protection and
    decrease resource wastage without compromising its quality. Fig. 9. Flow Chart
    for Smart Agriculture Show All Authors Figures References Citations Keywords Metrics
    More Like This Internet of Things and Wireless Sensor Networks for Smart Agriculture
    Applications: A Survey IEEE Access Published: 2023 Advanced sensing and internet
    of things in smart cities 2016 39th International Convention on Information and
    Communication Technology, Electronics and Microelectronics (MIPRO) Published:
    2016 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings - 5th International Conference on Smart Systems and Inventive
    Technology, ICSSIT 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Fog Computing based Agriculture-IoT Framework for Detection of Alert Conditions
    and Effective Crop Protection
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mishra S.
  - Nayak S.
  - Yadav R.
  citation_count: '10'
  description: With the advancement and usage of Internet of Things (IoT), smart agriculture
    is evolving rapidly. Smart solutions based on IoT can not only help the farmers
    in maximizing the profits but also help them in reducing the manual supervision
    of agriculture land. In a smart agriculture system, inexpensive, resource-constrained
    sensors are installed near the crops as well as at some strategic locations in
    an agriculture field to collect relevant crop and environment data in real time.
    This data is then used for both critical, latency-sensitive decision making as
    well as long-term planning. The key challenges in building a smart agriculture
    system include high communication latency and bandwidth consumption incurred with
    computing on the cloud, frequent Internet disconnections in rural areas, and a
    need for keeping the overall cost low for the end users (farmers). In this paper,
    we discuss the design and implementation of our on-going, LoRa-based three-tier
    smart agriculture system comprised of (i) Sensing layer, (ii) Fog layer, and (iii)
    Cloud layer. In particular, we focus on the how the low-power, low-bandwidth and
    long-range features of LoRa are utilized to transform traditional agriculture
    land of rural areas in India into smart agriculture system. We present the performance
    of our current prototype and compare with the existing, state-of-the-arts framework
    for smart agriculture system in terms of cost, latency and distance.
  doi: 10.1109/WiSNeT56959.2023.10046242
  full_citation: '>'
  full_text: '>

    "This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy Manage Preferences IEEE.org
    IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account Personal
    Sign In Browse My Settings Help Access provided by: University of Nebraska - Lincoln
    Sign Out All Books Conferences Courses Journals & Magazines Standards Authors
    Citations ADVANCED SEARCH Conferences >2023 IEEE Topical Conference ... An Energy
    Efficient LoRa-based Multi-Sensor IoT Network for Smart Sensor Agriculture System
    Publisher: IEEE Cite This PDF Shivakant Mishra; Sanjeet Nayak; Ramnarayan Yadav
    All Authors 10 Cites in Papers 655 Full Text Views Abstract Document Sections
    I. Introduction II. System Architecture III. Sensing Layer IV. Fog Layer V. Future
    Work Authors Figures References Citations Keywords Metrics Abstract: With the
    advancement and usage of Internet of Things (IoT), smart agriculture is evolving
    rapidly. Smart solutions based on IoT can not only help the farmers in maximizing
    the profits but also help them in reducing the manual supervision of agriculture
    land. In a smart agriculture system, inexpensive, resource-constrained sensors
    are installed near the crops as well as at some strategic locations in an agriculture
    field to collect relevant crop and environment data in real time. This data is
    then used for both critical, latency-sensitive decision making as well as long-term
    planning. The key challenges in building a smart agriculture system include high
    communication latency and bandwidth consumption incurred with computing on the
    cloud, frequent Internet disconnections in rural areas, and a need for keeping
    the overall cost low for the end users (farmers). In this paper, we discuss the
    design and implementation of our on-going, LoRa-based three-tier smart agriculture
    system comprised of (i) Sensing layer, (ii) Fog layer, and (iii) Cloud layer.
    In particular, we focus on the how the low-power, low-bandwidth and long-range
    features of LoRa are utilized to transform traditional agriculture land of rural
    areas in India into smart agriculture system. We present the performance of our
    current prototype and compare with the existing, state-of-the-arts framework for
    smart agriculture system in terms of cost, latency and distance. Published in:
    2023 IEEE Topical Conference on Wireless Sensors and Sensor Networks Date of Conference:
    22-25 January 2023 Date Added to IEEE Xplore: 22 February 2023 ISBN Information:
    ISSN Information: DOI: 10.1109/WiSNeT56959.2023.10046242 Publisher: IEEE Conference
    Location: Las Vegas, NV, USA Funding Agency: SECTION I. Introduction Smart agriculture
    is one of the most promising areas where IoT-enabled technologies have the potential
    to substantially improve the quality and quantity of the crops and reduce the
    associated operational cost. At present, cloud-based infrastructures are being
    utilized to support various smart agriculture applications and data processing.
    Data from smart sensors in the agricultural field is transmitted to the cloud
    over the Internet, and then stored and processed in the cloud for decision making.
    While cloud-based infrastructures certainly offer enormous processing power and
    storage capacity, there are two key limitations that need to be addressed when
    used in the context of smart agriculture [1]: (i) Sensor data transmitted over
    the Internet requires continuous Internet connectivity, consumes high bandwidth
    and incurs delays. (ii) Since IoT devices must transmit large volumes of data
    to the cloud for storage and processing, the energy of battery-powered IoT devices
    is quickly be drained. These limitations make cloud-based infrastructure ill-suited
    for smart agriculture. To address these limitations, we propose a LoRa-enabled,
    fog-based smart agriculture infrastructure that will reduce the quantity of data
    transferred to the cloud and enable latency-sensitive services delivered just
    in time. This paper provides a high-level overview of our project whose goal is
    to develop an end-to-end, LoRa-enabled, fog-based infrastructure for smart agriculture
    in India and USA. We focus on the how the low-power, low-bandwidth and long-range
    features of LoRa are utilized to transform traditional agriculture lands in rural
    areas into smart agriculture system. We describe the design and a preliminary
    implementation of a microservice-based edge server that allows to provide important,
    latency-sensitive services to the farmers and enable operation in a disconnected
    Internet environment. We present the performance of our current prototype and
    compare with the existing, state-of-the-arts framework for smart agriculture system
    in terms of cost, latency and distance. SECTION II. System Architecture The architecture
    of the proposed microservice-based fog enabled infrastructure for smart agriculture
    is shown in the Figure 1. It consists of the following layers: sensing layer,
    fog computing layer, and cloud computing layer, which are linked by cross-layer
    upstream and downstream communication for data and control information flows.
    The sensing layer is comprised of the sensors and actuators deployed across the
    agricultural field to periodically sense the physical parameters of interest such
    as air temperature, air humidity, solar radiation, soil temperature and moisture
    at various depths, wind speed and rainfall. In a typical scenario, agriculture
    fields tend to be at remote locations with low-bandwidth and poor Internet connectivity.
    Furthermore, farmers need to remotely monitor large agriculture fields spanning
    distances of 5 km to 10 km, or even more. To address these challenges, we have
    adopted a LoRa and LoRaWAn enabled communication system due to their support for
    low power, wide area networking designed to wirelessly connect limited energy
    operated IoT devices to an edge server at a distance of 1–2 km. The fog computing
    layer is comprised of one or more servers, e.g. a Dell PowerEdge or Dell Precision
    server. This layer provides an administrative control of the entire IoT infrastructure
    of the agricultural field. This layer addresses the limitations of intermittent
    Internet connectivity, high latency and high network bandwidth consumption of
    cloud-based infrastructure. The fog nodes collect data from the sensors deployed
    in the field, perform key data cleaning, filtering, aggregation and fusion tasks,
    and execute latency sensitive services, such as fire management and animal intrusion
    detection. To facilitate a flexible architecture that may utilize existing container-based
    support for various ML/AI services, we have structured the fog layer as a microservice
    architecture [2]. In this architecture, an application is composed from a collection
    of loosely-coupled microservices, where each microservice is fine-grained and
    the associated protocols are lightweight. Benefits of this architecture include
    modularity, scalability, software reuse, and integration. In our prototype, we
    are employing some of the latest state-of-the-art methodologies for container
    instantiation and intercontainer communication at the layer for high efficiency
    [3]. Figure 1: End-to-end architecture of a lora-enabled, fog-based infrastructure
    for smart agriculture smart agriculture Show All Finally, the cloud computing
    layer is used for performing complex, computational intensive decision making
    as well as for long-term data storage and visualization. SECTION III. Sensing
    Layer Sensing layer consists of several End nodes whose task is to sense the agriculture
    field parameters and communicate them to Fog layer using LoRa communication protocol.
    The end node is responsible for sending the sensors'' data to fog node or receiving
    the actions/commands for actuation from fog nodes. First, we build an End node
    (shown in Figure 2) which consists of various sensors (required for smart agriculture),
    one microcontroller (e.g., ESP32, Arduino Mega, etc.), LoRa Hat with Antenna.
    LoRa hat is build using LoRa SX1276 IC. Various sensors like PIR, IR, Capacitive
    soil moisture, Humidity and Temperature are connected to Arduino microcontroller
    that monitors motion, moisture content in the soil, humidity and temperature of
    the environment respectively. Table I shows sensor''s accuracy used in our implementation.
    Figure 2: Lora end node Show All Table I: Different types of sensors As a part
    of our first experiment, we demonstrated how a fog node can connect and/or communicate
    multiple end nodes. We used single channel (it can communicate with one end node
    at a time) LoRa antenna at fog node. To experiment the scheduling capability of
    fog node, we connected three end nodes with one LoRa enabled gateway (Raspberry
    Pi with LoRa hat) as shown in Figure 3. The end nodes are scheduled in a round
    robin fashion by fog node to avoid interference of data during simultaneous communication
    by the three end nodes. Figure 3: Lora communication using multiple end nodes
    Show All Table II: Lora experiment result Table II shows the experimental results
    obtained while communicating data from end node to the fog gateway. We varied
    the height of sender and receiver and also the distance between them and checked
    the delay in LoRa communication. We performed these experiments in environment
    where are objects and building were present (these obstacles cause channel attenuation
    thus affect the received signal strength). Data that is communicated between sender
    and receiver is 16 bytes. It can be noticed from the Table II that communication
    latency depends distance and height of communicating nodes. It can be observed
    that as we increase distance between sender and receiver, latency increases. Latency
    can be reduced further by placing receiver (fog node) at proper height for real
    time application such as Fire detected or animal intrusion detection. The LoRa
    communication technology (used in this work) is compared with existing other technologies
    like Zigbee, WiFi, Bluetooth low energy (BLE) is provided in Table III. LoRa communication
    has high range (upto 15 KM in rural areas) and it consumes very less power, which
    makes it suitable for application areas where Internet connection is intermittent.
    Table III: Comparison of different communication technology SECTION IV. Fog Layer
    The goal of fog layer is to provide support for latency-sensitive services as
    well as operation in a disconnected environment. In order to gain a deeper understanding
    and better motivate the design of our proposed smart agriculture application,
    we first need to learn the ground reality of the key challenges faced by farmers
    in agriculture. To this end, we conducted a survey with five farmers in India
    to understand (1) what are the key issues they face that could be addressed by
    smart agriculture? (2) what tasks could be simplified by smart agriculture? and
    (3) what new and useful features could be provided by smart agriculture that are
    infeasible at present? Top three challenges identified by the farmers are (1)
    animal intrusion in the field, particularly in the night; (2) rising manual labor
    cost; and (3) fire hazards and efficient irrigation. Our goal is to address each
    of these challenges. At present, we are addressing the problem of animal intrusion.
    In particular, our goal is to automatically detect animal intrusions, develop
    an actuation method to drive away the animals, and inform the farmer(s) in a timely
    manner about the intrusion. Figure 4 shows an architecture diagram. Since this
    is a latency sensitive service, it is completely implemented in the Fog computing
    layer. We are experimenting with three types of sensors, a PIR motion sensor that
    detects if there is any movement in its field of view, an ultrasonic sensor that
    detects distance of the object, and an infrared camera sensor that creates an
    an image using infrared radiation. Details of what actuation we can provide in
    case an animal intrusion is detected is currently being investigated. The current
    actuation mechanism is switching on an LED light. The Security Module passes the
    sensor data it receives from authenicated sensors to the appropriate Data Collector
    & Filter container (Distance, IR images or Motion). Data Collection & Filter containers
    perform two tasks. First, they drop any spurious data, e.g. a distance value larger
    than 15 meters, or an anomalous IR image. Second, they store copies of the data
    received in the last ten minutes or so (time parameter is configurable). Finally,
    the Animal Detection container detects if there is an animal intrusion, including
    perhaps identifying the type of animal using machine learning models. The Animal
    Detection container is being designed to operate for any or all of the three sensors.
    For example, based on the cost-benefit tradeoff, a farmer may choose a low-cost
    solution and install only PIR motion sensors, in which case the accuracy of animal
    intrusion would be lower, while another farmer may choose to install all three
    types of sensors, in which case the accuracy of animal intrusion would be much
    higher. Figure 4: End-to-end architecture of a lora-enabled, fog-based infrastructure
    for smart agriculture smart agriculture Show All All intercontainer communication
    at this layer, e.g. from security module to Data Collector & Filter containers
    or fromm Data Collector & Filter containers to Animal Detection container is implemented
    using our shared memory based inter-container tool that is compatible with Kubemetes
    [3], [4]. SECTION V. Future Work This project is currently on-going with a goal
    to develop an end-to-end prototype of a smart agriculture system from low-cost
    sensors on one end to the cloud on the other end with edge server in the middle.
    ACKNOWLEDGMENT This research is supported in part by grants from TIH-IoT (TIH-IoT/2022-07/
    IC /NSF/SL/ NIUC-2022-04/005) and NSF (13012641). Authors Figures References Citations
    Keywords Metrics More Like This Towards Integration of Wireless Sensor Networks
    and Cloud Computing 2015 IEEE 7th International Conference on Cloud Computing
    Technology and Science (CloudCom) Published: 2015 Cost optimized distributed source
    coding for data gathering single-hop wireless sensor networks 2010 17th International
    Conference on Telecommunications Published: 2010 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2023 IEEE Topical Conference on Wireless Sensors and Sensor Networks, WiSNeT
    2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An Energy Efficient LoRa-based Multi-Sensor IoT Network for Smart Sensor
    Agriculture System
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bazeer Ahamed B.
  - Krishnamoorthy M.
  citation_count: '0'
  description: A past generation has seen the propagation of the Internet of Things
    (IoT) devices to sense information from environment and is actively being used
    in various sectors like healthcare, smart agriculture, and smart cites. Agriculture
    is the primary occupation and serves as the backbone of many nations. Past few
    decades’ climate, changes and rainfall have been unpredictable, leading to reduced
    productivity in agriculture. Even-though in the changing smart farming using IoT,
    enables the farmers to confront these productivity problems. Therefore, utilizing
    fog computing and the WiFi-based Long Distance (WiLD) network in IoT makes effective
    communication to farming and agricultural bases in rural areas. This achieved
    through IoT sensors, which can inform farmers daily about agricultural land such
    as crop yields, precipitation and soil nutrition. Numerous sensors are available
    today for smart farming. The State disaster or node failure these sensors cannot
    update information about agricultural land. To overcome this problem, we proposed
    Node Recovery (NR) algorithm for Smart farming IoT sensors in fog computing-based
    WiLD network to improve node sustainability and overcomes the node failure by
    replacing the best node in the network. We simulated the proposed NR algorithm,
    and the results indicate that the NR algorithm outshines existing systems.
  doi: 10.1007/978-3-031-19958-5_68
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Conference on Intelligent
    Computing & Optimization ICO 2022: Intelligent Computing & Optimization pp 721–731Cite
    as Home Intelligent Computing & Optimization Conference paper Detection and Recovery
    of Node Failure in Fog-Based WiLD Network for Smart Farming B. Bazeer Ahamed &
    Murugan Krishnamoorthy   Conference paper First Online: 21 October 2022 690 Accesses
    Part of the book series: Lecture Notes in Networks and Systems ((LNNS,volume 569))
    Abstract A past generation has seen the propagation of the Internet of Things
    (IoT) devices to sense information from environment and is actively being used
    in various sectors like healthcare, smart agriculture, and smart cites. Agriculture
    is the primary occupation and serves as the backbone of many nations. Past few
    decades’ climate, changes and rainfall have been unpredictable, leading to reduced
    productivity in agriculture. Even-though in the changing smart farming using IoT,
    enables the farmers to confront these productivity problems. Therefore, utilizing
    fog computing and the WiFi-based Long Distance (WiLD) network in IoT makes effective
    communication to farming and agricultural bases in rural areas. This achieved
    through IoT sensors, which can inform farmers daily about agricultural land such
    as crop yields, precipitation and soil nutrition. Numerous sensors are available
    today for smart farming. The State disaster or node failure these sensors cannot
    update information about agricultural land. To overcome this problem, we proposed
    Node Recovery (NR) algorithm for Smart farming IoT sensors in fog computing-based
    WiLD network to improve node sustainability and overcomes the node failure by
    replacing the best node in the network. We simulated the proposed NR algorithm,
    and the results indicate that the NR algorithm outshines existing systems. Keywords
    Internet of things Node recovery Wireless fidelity Wireless sensor network WiFi-based
    long distance Access provided by University of Nebraska-Lincoln. Download conference
    paper PDF 1 Introduction Agriculture is essential to human life, providing food,
    grain and other raw materials. Technology plays an immense role in increasing
    production and rising human resources. The Food and Agricultural Organization
    (FAO) of United Nations estimates that by 2025, the world’s population will reach
    8 billion in habitants and 9.6 billion by 2050. The WiFi Long Distance network
    (WiLD) has been widely used for connecting low-cost rural areas. Fog computing
    and cloud computing applications can be built into WiFi systems for better and
    more effective IoT in such a sector with the extended range. Nevertheless, IoT
    is connected to the Internet and tracked at any time by mobile application, mailing
    anywhere. The sensor unit captures field raw data and stores them in the cloud.
    The sensor unit gathers raw data from the field and stores it in the cloud. The
    Constrained Application Protocol (CoAP) is a specialized web transfer protocol
    for use with constrained nodes and constrained networks in the Internet of Things.
    The protocol is designed for machine-to-machine (M2M) applications. CoAP enables
    devices to communicate over the Internet. While cloud technology can provide the
    computational processing power required, transferring large amounts of data from/to
    cloud data centers would make the entire process very inefficient. In this paper
    we recover the failure node by replacing the new node, within the range and set
    the new node as the sink node result in better QoS. In the Fig. 1, A mobile device
    that is useful to track field data and to manage field operations that provide
    versatility. The soil conditions and different climatic parameters regulating
    the growth of plants allow information to be gathered at high frequency with less
    labor needs. The information concerning agriculture is transferred to the computer
    via WiFi. So from their present location, the user may learn the updated information
    about agriculture via the internet. Fig. 1. Architecture of Internet of Things
    Full size image In a network environment failure occur anywhere: in order to manage
    them efficiently node failure algorithm is used. A layered architecture is also
    useful in the analysis about faults in an IoT environment In an IoT environment,
    also a layered architecture is useful for fault analysis. In doing so, we have
    been inspired by the work in which an IoT Web application deployed in a field
    area network provides a detailed analysis of potential faults. The benefits of
    IoT applications in agriculture are improvement in the use efficiency of inputs
    (soil, water, fertilizers, etc.), reduced cost of production, increased profitability,
    sustainability, food safety, and protection of the environment. The rest of the
    document is set out as follows. The related work is described in Sect. 2. Section
    3 describes the proposed system and the design of the proposed fault management
    system is laid out and the outcome is clarified in Sect. 4, then finally conclude
    the analysis in Sect. 5. 2 Related Work In this section, we briefly discuss the
    various related works of Node failure detection in IoT network. Ahmed et al. (2018)
    proposed smart farming and agriculture domains grow up stronger in the upcoming
    years. Using a Wi-Fi-based long-distance network to connect IoT devices, it is
    conceivable to build up based Agriculture and Farming in agricultural regions
    effectively. To concentrate on the particular necessities, in this proposal, an
    adaptable system and engineering for observing and controlling farming in rustic
    territories. Contrasted with the current IoT-based agriculture and cultivating
    arrangements, the proposed mechanism diminishes and organize idleness up to a
    limited degree. Estrada-Lopez et al. (2018) proposed the yield of exactness agriculture
    has from the development of remote sensor systems. The WSN shaped by low-control
    self-sufficient sensor hubs and utilizes the Internet of Things and cloud administration
    correspondence conventions to produce spatial circulation maps of soil parameters
    at two different levels subterranean. Hajj et al. (2015) proposed Sand dampness
    assumes a first job in the trades of substance and vitality among vegetation and
    land surface. This paper built up a Modified vegetation backscattering model to
    recover vegetation- secured soil damp-ness dependent on multi-transient RADARSAT-2
    information and yield estimations. It consolidates the upsides of optical and
    radar strategies by considering dissipating commitments of organic exposed soil
    and vegetation overhang. Vegetation inclusion was utilized to isolate the dispersing
    instrument of the vegetation from the void soil part in a pixel. Jayavardhan Gubbi
    et al. (2013) proposed remote sensor networks developments cut across various
    locales of bleeding-edge living, which enables the ability to measure, incite,
    and fathom condition markers from delicate ecologies and regular advantages for
    urban circumstances. Mukhopadhyay et al. (2017) proposed Broad research on the
    structure and improvement of a brilliant nitrate sensor for checking nitrate fixation
    in surface and ground water are accounted for in this paper. The created useful
    detecting framework comprises a planar inter digital sensor, related hardware,
    instrumentation, and Electro chemical Impedance Spectroscopy (EIS) based examination.
    Ahamed and Krishnamurthy (2022) describes the frame to fit for estimating nitrate
    focuses on the scope of 0.01 to 0.5 mg/L in surface water and ground. Wi-Fi-based
    has been incorporated, making it an associated detecting framework. Pandey et
    al. (2018) proposed the Coordination of digital advancements with agriculture
    business gives chances to ac-curacy agriculture. It requires covered underground
    sensors to provide valuable substance data to the end-client to yield the executives.
    Chen et al. (2019) proposed Increase productivity, clustering, and data visualization
    analysis is used to find the critical technology.it is used to identify and monitor
    agriculture. Webb et al. (2019) proposed the improve proficiency and wellbeing
    of creation and the executives of present day agribusiness issues, for example,
    the security and nature of rural items and the contamination of the earth of ranch
    exercises, ought to be unwound. Abouzar et al. (2016) propose a got sign quality
    sign put together dispersed calculation based on the message going to take care
    of the inexact surmising issue. The estimate intended for exactness agriculture
    applications, for example, bug the board and pH detecting in large homesteads,
    where higher power productivity other than correspondence and computational versatility
    are required, yet area precision prerequisites are less requesting. Correspondence
    overhead, which is essential confinement of mainstream non-Bayesian and Bayesian
    disseminated systems, is maintained a strategic distance from by a message-passing
    plan, in which powerful message by every hub does not rely upon the goal hub,
    and in this manner is a fixed size. Figure 2. Proposed Smart Agriculture System
    Architecture Kaiwartya et al. (2016) proposed Efficient sensor organization is
    one of the necessities of exactness farming utilizes an instance of remote sensor
    systems to give subjective and ideal inclusion and network. Harris et al. (2016)
    proposed Soil saltiness is a significant scale in harvest yield. Resultant analyses
    were utilizing this sensor one with a dirt segment, another using a vivarium,
    lastly, on an examination in a nursery. Boushaba et al. (2015) proposed. The observing
    and control of harvests in exactness farming now and then required a high gathering
    recurrence of data e.g. temperature, stickiness, and saltiness because of the
    fluctuation in yields. Sensor hubs have constrained assets. Bertollo et al. (2017)
    proposed decision support and Low-Cost Wireless framework dependent on the mix
    of the remote sensor and in-citation organize innovation, and the fluffy rationale
    hypothesis is proposed to help the water system the executives in agriculture.
    The ranchers’ involvement and the water system best practices had displayed through
    fuzzy guideline sets, and the yields of numerical soil and harvest models are
    utilized to give a setting mindful and streamlined water system plan. Bernoulli
    et al. (2017) proposed the pesticide does decrease tended to use an imaginative
    blend of the remote sensor to organize innovation and the fuzzy rationale hypothesis.
    The proposed arrangement presents the estimate of the spatial circulation of the
    ideal measurements because of the unavoidable component of the remote. Gutierrez
    Jaguey (2015) suggested a mechanized water system sensor to use in yields. The
    sensor utilizes a cell phone to catch and process advanced pictures of the dirt
    close to the root zone of the collection and gauges the water substance optically.
    3 Proposed System 3.1 Smart Agriculture System The network model proposed is the
    realistic and promising approach for linking rural farms using low cost IoT and
    better QoS. All the wireless sensor node which is deployed in the agriculture
    field are connected to the sink node (i.e. clusterhead) and the sink node sends
    the collected data via the IoT gateway. Through gateway node, the data are transfers
    to the database server for storing and client will view the collected data from
    mail or mobile application example motor on/off monitoring via Gmail. Hence each
    and every moment is monitored and sensor will collect data and transfer to the
    system through the gateway node. Finally, the collected data can monitor anywhere
    any time using smart agriculture. Remote user, gateway node and the database are
    connected to each other via internet which is shown in Fig. 2. Every node in the
    IoT network sends their data to the sink node either through the gateway or edge
    node. When the nodes does not receive ACK from the sink node, it denotes the failure
    of sink node or congestion. The sensor nodes are deployed in the given region.
    Fig. 2. Proposed smart agriculture system Full size image Although the query pathway
    is initiated by the sink node, failure information about nodes is disseminated
    to the surrounding nodes. The data sent from one node to another node to reach
    sink node. The diagrammatic representation of node failure in IoT network is given
    in Fig. 3. The Node Recovery (NR) algorithm begins in the proposed machine model
    when node N does not obtain acknowledgment from the sink node and waits up to
    the threshold time. If the node receives ACK within time, it updates the received
    ACK for the last packet. The node N check its neighbor list, and then request
    the coverage area of each of its neighbor. This process proceeds until the neighbor
    list is empty or covered all the nodes in the network. The coverage table is updated
    Fig. 3. Node Failure Representation to the requested node, then it selects the
    node with maximum coverage. Fig. 3. Node failure representation Full size image
    If the requested node has maximum coverage, it declare it as a new sink node,
    otherwise request the node to declare as a sink node. Algorithm 1NR (Node Recovery)
    algorithm Input: No updated ACK for last message Output: Declaring as ‘NewS’ or
    Request to declare other node as ‘NewS’1: if N does not receive ACK from S then
    2: Wait for time period 3: else 4: Update ACK for last message5: end if6: while
    (neighbor list! = 0)do7:iftexceedsTand new Snot declaredthen8:Nsend coverage request
    toN′9:ifN′receives coveragerequestthen10:Send coverage request to its neighborN′′11:end
    if12:end if13:N′update the coverage table forN′′14:Nupdate the coverage table
    forN′′15:end while16:Find max coverage in coverage table (N)17:ifmax coverage
    =Nthen18:Nsend “newS” to all nodes19:else20:the request to max coverage node to
    declare “newS”21:end if Thus, the proposed NR algorithm effectively identifies
    the faulty IoT node in the smart farming framework and simultaneously assigns
    a new node. The assignment new IoT node aids in the seamless transmission of farm-related
    data to the fog node. Table Is Emulation Parameters Specifications Deployment
    area of IoT nodes 50 × 50 m2 Mode of Deployment Random Type of Path-loss Propagation
    Two ray ground Type of Antenna Omni-directional MAC protocol 802.11 Number of
    nodes simulated 1000 Range of Sensation 5 m Range of Communication 10 m IoT Node
    Power in Idle State12 mW Receive power of IoT nodes12 mW. Table 1. Simulation
    parameter Full size table 4 Results and Discussions We simulate the proposed NR
    algorithm in the emulator cum simulator tool named contiki COOJA. COOJA is the
    net-work simulator of the operating system Contiki for simulating the IoT network,
    which is shown in Fig. 4. As shown in figure, the zero node act as collector and
    all 1–6 node act as IoT device. Figure 4. Simulation of IoT network in Contiki
    COOJA Table 1 displays the typical parameters for the simulation used in our experimental
    setup. Around 1000 IoT nodes were distributed randomly. Node locations were distributed
    randomly in the distribution area of 50 about 50 m2. Fig. 4. Simulation of IoT
    network in Contiki COOJ Full size image Nodes were scattered at random on the
    field and remained stationary after deployment. Every size of the Node-ID is eight
    bits, and its contact range is 10 m. 802.11 is used in this MAC-protocol and the
    sensor range is about 5 m. We simulated the 500 secscenario. The average results
    of the 10 runs are shown. We compare the performance of our proposed NR algorithm
    with the existing CLAD algorithm. The simulation results and the performance analysis
    is discussed below. 4.1 Comparison of Latency in Faulty Node Detection with Respect
    to the Available Node In this section, we discuss the latency in detecting the
    faulty node with respect to the node availability. Fig. 5. Comparison of latency
    in faulty node detection with respect to available node Full size image The results
    obtained Fig. 5. Comparison of latency in faulty node detection with respect to
    available node were plotted in Fig. 5. From the figure, we can observe that when
    number of IoT nodes is 50, both the compared algorithm shows similar outcome.
    However, when the number of IoT nodes increases to 500, the proposed NR algorithm
    out performs CLAD algorithm by 43.47%, and when the IoT node increases to 800,
    NR outperforms CLAD by 35.71%.Thus, when the number of nodes increases to a maximum
    peak of 1000, NR exceeds CLAD in terms of latency in detecting faulty nodes by
    53.16%. Fig. 6. Comparison of total no of hops in smart farming with respect to
    probability of faulty node Full size image Thus, in overall the proposed NR algorithm
    performs better than the existing CLAD algorithm in terms of latency by 10.30%.
    Figure 6. Comparison of total no of hops in smart farming with respect to probability
    of faulty node. 4.2 Comparison of Total No of Hops with Respect to Probability
    of Faulty Node In this section, we discuss the comparison in number of hops of
    both NR algorithm and CLAD algorithm in detecting the faulty node with respect
    to the probability of faulty nodes in the smart farm network. The results obtained
    were plotted in Fig. 6. From the figure, we can observe that when number of hops
    is around 20, both the compared algorithm shows similar outcome. However, when
    the number of hops decreases to8, the proposed NR algorithm outperforms CLAD algorithm
    by 36%, and when the number of hops decreases to 7, NR outperforms CLAD by 35%.
    Thus, when the number of nodes decreases to a maximum peak of 1, NR exceeds CLAD
    in terms of probability of faulty nodes by 99%. Thus, in overall the proposed
    NR algorithm performs better than the existing CLAD algorithm in terms of number
    of hops with respect to probability of faulty nodes by 44.07 Fig. 7. Comparison
    of latency in failure node detection with respect to probability of faulty node.
    4.3 Comparison of Latency in Failure Node Detection with Respect to Probability
    of Faulty Node In this section, we discuss the comparison of latency in diagnosing
    the faulty nodes both NR algorithm and CLAD algorithm with respect to the probability
    of faulty nodes in the smart farm network. Fig. 7. Comparison of latency in failure
    node detection with respect to probability of faulty node Full size image The
    results obtained were plotted in Fig. 7. From the figure, we can observe that
    when probability of fault nodes is around 0.02, both the compared algorithm shows
    similar outcome. However, when the probability of fault nodes increases to 0.3,
    the proposed NR algorithm outperforms CLAD algorithm by 8.51%, and when the probability
    of fault nodes increases to 0.66, NR outperforms CLAD by 13.95%.Thus, when the
    probability of fault nodes increases to a maximum peak of 1, NR exceeds CLAD in
    terms of probability of faulty nodes by 5.12%. Thus, in overall the proposed NR
    algorithm performs better than the existing CLAD algorithm in terms of probability
    of fault nodes with respect to diagnosis of faulty nodes by 4%. 5 Conclusion Though,
    there are lots of techniques adopt in vertical farming helps to increase productivity,
    the wireless sensors are deployed in the field to measure the physical condition
    of the environment. There is various sensor available today like moisture, humidity,
    light intensity, motion sensor, obstacle sensor, and temperature sensor to perform
    smart agriculture. However, the sensor node failure plays a vital role in smart
    farming and still remains a challenge. To overcome this issue, we proposed Node
    Recovery (NR) algorithm, which improves node sustainability and overcomes the
    node failure by replacing the best node in the network. The proposed algorithm
    further improves the quality of internet communication network, offering an effective
    principle of decision-making tool for adaptation to multiple agriculture contexts.
    Internet connectivity also enables monitoring by handheld telecommunication devices,
    such as a smartphone. In the future, the work will be expanded to cover more factors
    affecting the crop. According to the article, precision Aggie is based on four
    components the optimal source, the right location, the desired quality, and the
    right time. References Abouzar, P., Michelson, D.G., Hamdi, M.: RSSI-based distributed
    self-localization for wireless sensor networks used in precision agriculture.
    IEEE Trans. Wireless Commun. 15(10), 6638–6650 (2016) Article   Google Scholar   Ahamed,
    B.B., Krishnamoorthy, M.: Invocation of multi-cloud infrastructure services in
    web-based semantic discovery system. In: Nagarajan, R., Raj, P., Thirunavukarasu,
    R. (eds.) Operationalizing Multi-Cloud Environments. EICC, pp. 3–18. Springer,
    Cham (2022). https://doi.org/10.1007/978-3-030-74402-1_1 Chapter   Google Scholar   Ahmed,
    N., De, D., Hussain, I.: Internet of things (IoT) for smart precision agriculture
    and farming in rural areas. IEEE Internet Things J. 5(6), 4890–4899 (2018) Article   Google
    Scholar   Chen, J., Yang, A.: Intelligent agriculture and its key technologies
    based on internet of things architecture. IEEE Access 7, 77134–77141 (2019) Article   Google
    Scholar   Hajj, M., et al.: Soil moisture retrieval over irrigated grasslands
    using X-band SAR data combined with optical data acquired at high resolution.
    In: IEEE International Geoscience and Remote Sensing Symposium (IGARSS), pp. 1328–1331
    (2015) Google Scholar   Estrada-López, J.J.: Smart soil parameters estimation
    system using an autonomous wireless sensor network with dynamic power management
    strategy. IEEE Sens. J. 18(21), 8913–8923 (2018) Article   Google Scholar   Gubbi,
    J., Buyya, R., Marusic, S., Palaniswami, M.: Internet of things (IoT): a vision,
    architectural elements, and future directions. Future Gener. Comput. Syst. 29(7),
    1645–1660 (2013) Article   Google Scholar   Harris, N., Cranny, A., Rivers, M.,
    Smettem, K., Barrett-Lennard, E.G.: Application of distributed wireless chloride
    sensors to environmental monitoring: Initial results. IEEE Trans. Instrum. Meas.
    65(4), 736–743 (2016) Article   Google Scholar   Jagüey, J.G., Villa-Medina, J.F.,
    López-Guzmán, A., Porta-Gándara, M.Á.: Smartphone irrigation sensor. IEEE Sens.
    J. 15(9), 5122–5127 (2015) Google Scholar   Liu, S., Guo, L., Webb, H., Ya, X.,
    Chang, X.: Internet of things monitoring system of modern eco-agriculture based
    on cloud computing. IEEE Access 7, 37050–37058 (2019) Article   Google Scholar   Kaiwartya,
    O., et al.: T-MQM: testbed-based multi-metric quality measurement of sensor deployment
    for precision agriculture—a case study. IEEE Sens. J. 16(23), 8649–8664 (2016)
    Google Scholar   Pandey, G., Weber, R.J., Kumar, R.: Agricultural cyber-physical
    system: in-situ soil moisture and salinity estimation by dielectric mixing. IEEE
    Access 6, 43179–43191 (2018) Article   Google Scholar   Download references Author
    information Authors and Affiliations Department of IT, University of Technology
    and Applied Sciences, Al Musannah, Muladdah, Sultanate of Oman B. Bazeer Ahamed
    School of Computer Science and Engineering, Vellore Institute of Technology, Vellore,
    632014, Tamil Nadu, India Murugan Krishnamoorthy Corresponding author Correspondence
    to B. Bazeer Ahamed . Editor information Editors and Affiliations Modeling Evolutionary
    Algorithms Simulation and Artificial Intelligence, Faculty of Electrical and Electronics
    Engineering, Ton Duc Thang University, Ho Chi Minh City, Vietnam Pandian Vasant
    Faculty of Engineering Management, Poznan University of Technology, Poznań, Wielkopolskie,
    Poland Gerhard-Wilhelm Weber Facultad de Ingeniería, Universidad Panamericana,
    Mexico City, Mexico José Antonio Marmolejo-Saucedo Department of Business Statistics
    and Operations Research, School of Economic Sciences, North West University, Mahikeng,
    South Africa Elias Munapo Department of Computer Science, UOW Malaysia KDU Penang
    University Colle, George Town, Malaysia J. Joshua Thomas Rights and permissions
    Reprints and permissions Copyright information © 2023 The Author(s), under exclusive
    license to Springer Nature Switzerland AG About this paper Cite this paper Bazeer
    Ahamed, B., Krishnamoorthy, M. (2023). Detection and Recovery of Node Failure
    in Fog-Based WiLD Network for Smart Farming. In: Vasant, P., Weber, GW., Marmolejo-Saucedo,
    J.A., Munapo, E., Thomas, J.J. (eds) Intelligent Computing & Optimization. ICO
    2022. Lecture Notes in Networks and Systems, vol 569. Springer, Cham. https://doi.org/10.1007/978-3-031-19958-5_68
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-19958-5_68
    Published 21 October 2022 Publisher Name Springer, Cham Print ISBN 978-3-031-19957-8
    Online ISBN 978-3-031-19958-5 eBook Packages Intelligent Technologies and Robotics
    Intelligent Technologies and Robotics (R0) Share this paper Anyone you share the
    following link with will be able to read this content: Get shareable link Provided
    by the Springer Nature SharedIt content-sharing initiative Publish with us Policies
    and ethics Download book PDF Download book EPUB Sections Figures References Abstract
    Introduction Related Work Proposed System Results and Discussions Conclusion References
    Author information Editor information Rights and permissions Copyright information
    About this paper Publish with us Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Detection and Recovery of Node Failure in Fog-Based WiLD Network for Smart
    Farming
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sakthi U.
  - Thangaraj K.
  - Poongothai T.
  - Kirubakaran M.K.
  citation_count: '1'
  description: With the development of the Internet of Things (IoT) and machine learning
    technology, a smart agriculture environment produces more agricultural land and
    crop-associated data for knowledge discovery systems. Machine learning decision-making
    algorithm is applied to discover hidden knowledge patterns from the agricultural
    data stored in the distributed database. Big data analytics extract useful information
    from the large, distributed, and complex datasets, which helps the farmer to increase
    crop yield and quality of the production. The edge computing node collects crop
    data and land environment data from the agricultural lands using a different kind
    of IoT sensors. The predicted smart agricultural knowledge pattern can provide
    needed information to the farmers and other users like an agent, agriculture officers,
    researchers, and producers to get more profit. Cloud and fog computing provides
    efficient distributed data storage for big data and execute dynamic operations
    to predict business intelligence facts to increase production and minimize natural
    resource utilization. We have compared traditional data mining techniques with
    the business analytical tool hybrid association rule-based decision tree (HDAT)
    MapReduce approach for implementing decision tree algorithm to predict and forecast
    the future needs of the farmer to increase the profit and reduce the resource
    wastage.
  doi: 10.1007/978-981-16-9967-2_63
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Smart Trends in Computing and
    Communications pp 675–682Cite as Home Smart Trends in Computing and Communications
    Conference paper Big Data Analytics and Machine Learning Approach for Smart Agriculture
    System Using Edge Computing U. Sakthi , K. Thangaraj , T. Poongothai & M. K. Kirubakaran   Conference
    paper First Online: 06 July 2022 677 Accesses 1 Citations Part of the book series:
    Lecture Notes in Networks and Systems ((LNNS,volume 396)) Abstract With the development
    of the Internet of Things (IoT) and machine learning technology, a smart agriculture
    environment produces more agricultural land and crop-associated data for knowledge
    discovery systems. Machine learning decision-making algorithm is applied to discover
    hidden knowledge patterns from the agricultural data stored in the distributed
    database. Big data analytics extract useful information from the large, distributed,
    and complex datasets, which helps the farmer to increase crop yield and quality
    of the production. The edge computing node collects crop data and land environment
    data from the agricultural lands using a different kind of IoT sensors. The predicted
    smart agricultural knowledge pattern can provide needed information to the farmers
    and other users like an agent, agriculture officers, researchers, and producers
    to get more profit. Cloud and fog computing provides efficient distributed data
    storage for big data and execute dynamic operations to predict business intelligence
    facts to increase production and minimize natural resource utilization. We have
    compared traditional data mining techniques with the business analytical tool
    hybrid association rule-based decision tree (HDAT) MapReduce approach for implementing
    decision tree algorithm to predict and forecast the future needs of the farmer
    to increase the profit and reduce the resource wastage. Keywords Precision agriculture
    Machine learning Edge computing Access provided by University of Nebraska-Lincoln.
    Download conference paper PDF 1 Introduction A computer-based smart agriculture
    system collects data from the farmer device, IoT sensors, and embedded devices
    and applies pattern prediction algorithm and deliver required information to the
    farmers and users. The size of agriculture data collected by Open Government Data
    (OGD) Platform India, and India Agriculture and Climate Dataset is in the order
    of gigabytes. The datasets are captured and gathered continuously, so the database
    size is increased by approximately 92 KB/min in the OGD data repository. The Global
    Positioning System (GPS) and IoT sensors agriculture dataset consists of crop
    images, weather images, soil and productivity data, which are stored in a cloud
    data repository for data analysis. To perform data analysis on large datasets,
    there is a need for high storage and a powerful computing system to provide efficient
    and effective data patterns to the users [1]. Big data analytics and cloud computing
    have been applied to store huge data and perform data analysis in the smart agricultural
    system [2, 3]. Edge computing is integrated with cloud computing and IoT to provide
    decisions with low latency time and increase the cloud network bandwidth [4].
    Figure 1 shows the smart agricultural model based on IoT and cloud computing technology.
    Smart farming is the integration of IoT and machine learning process to reduce
    excessive use of natural resources and reduce the damage of crops. The proposed
    system provides user-friendly Web-based application to the farmers for acquiring
    knowledge about the farms and the + environment. Big data are applied everywhere
    to increase the profit in the business and to analyze the historical data with
    the following four parameters: volume, velocity, variety, and veracity. Fig. 1
    Smart agricultural decision-making model Full size image The rest of the paper
    is organized as follows. Section 2 presents related work in a smart agricultural
    system using machine learning and edge computing. The architecture and functionalities
    of the different layers are discussed in Sect. 3. In Sect. 3, the workflow of
    the proposed system is summarized. Section 4 presents the machine learning algorithm
    used for data classification. Section 5 describes the experimental setup, execution
    method, and analyzes the performance of the proposed system. Section 6 concludes
    the result of the precision agricultural system and future scope. 2 Related Works
    Big data analytics and machine learning approach play a significant role in large
    dataset analysis and efficient decision-making process, which makes the smart
    agricultural system more profitable, safer, and efficient [5]. Many applications
    use big data analytics for achieving better profit and make better decisions with
    less time and cost [6]. Many research works have focused on the knowledge intelligent
    system for monitoring and controlling the agricultural land using IoT and fog
    computing with the cloud environment. Edge computing performs data analysis locally
    without transforming data to the cloud environment, which makes the precision
    agricultural system provide dynamic knowledge to the farmers and reduce the network
    latency. The computational load and storage process of the cloud environment are
    reduced by introducing the edge node in the IoT environment [7]. For example,
    the farmer can get the knowledge about the humidity of the soil, and he can decide
    the level of water irrigation to the crops so that the natural resource water
    can be utilized properly without wastage [8]. Intelligent services are provided
    to the farmers by applying data classification and prediction algorithms on the
    large datasets stored in the data repository in the edge node and the decentralized
    database server [9]. Precision agriculture system includes big data analytics,
    machine learning classification algorithm, edge computing, and IoT to increase
    the profit and reduce the wastage. The need for an edge computing nodes in cloud-based
    environments is analyzed in many research works [10]. The intelligent system does
    not move all dataset to the cloud server, which transfers partial data to the
    cloud server, which reduces the network latency and increases the network bandwidth
    [11]. An effective and efficient smart system is developed to overcome the challenges
    in the traditional agricultural land management systems. Many researchers and
    business applications use big data analytics to accomplish great success [12].
    A smart agricultural system is a modern application technology to provide, compute,
    and analyze multisource agricultural data for different management as shown in
    Fig. 2. It supports water irrigation management, crop management, soil analysis,
    and fertilizer analysis. The Hadoop distributed file system (HDFS) is used to
    work with a large amount of data in distributed methods in the cloud network [13].
    Google proposed MapReduce programming model for parallel and distributed data
    analysis approach for large datasets in a cloud environment. The important classification
    algorithm called decision tree is implemented using the MapReduce processing model
    to perform data analysis in a distributed manner. Fig. 2 Functionalities of a
    smart agricultural system Full size image 3 Big Data Analytics in Smart Knowledge-Based
    Agricultural System A smart agricultural system includes electronic IoT sensors,
    edge computing transmission technology, big data analytics, and machine learning.
    The purpose of this proposed system is to provide required agricultural land data
    to the farmers and other users without any delay in a precision agricultural environment
    as shown in Fig. 3. A smart agricultural system consists of four layers, which
    are the agricultural environment data collection layer, edge computing layer,
    big data analytics layer, and application layer. All layers are interconnected
    by the information or data flow. The functionalities provided by each layer are
    given below. Fig. 3 Layered architecture of the smart agricultural system using
    big data Full size image 3.1 Agricultural Environment Data Collection Layer This
    layer is responsible for collecting data from sources like the sensors deployed
    in the agricultural land, Global Positioning System (GPS), and Roadside Unit (RSU)
    and transfers those data to the next level edge computing layer and cloud server.
    The data will be in the form of photos, text, images, videos, and pictures. 3.2
    Edge Computing Layer The cloud network connected with the edge computing node
    via edge gateway using the protocols like Zigbee, Bluetooth, Wi-Fi, NFC, and Ethernet
    protocol. The edge computing node performs data analysis on the data collected
    from the data source and sends useful required information to the users. 3.3 Big
    Data Analytics Layer The association rule-based decision tree algorithm is executed
    to generate knowledge patterns for the farmers. The large volume of data is collected
    from the data source and stored in the database server for data analysis. The
    high performance and distributed rule mining algorithm is executed and performs
    data management. 3.4 Application Layer The farmer, agent, researcher, scientist,
    producer, and agent can access the smart agricultural application software using
    mobile devices connected with the Internet. The user can send a query to the knowledge
    base server and can receive information about the crop yield, fertilizer availability,
    pest control, soil details, and water irrigation status. 4 Machine Learning Approach
    for the Precision Agriculture In the big data ecosystem, machine learning technology
    provides powerful agricultural knowledge prediction algorithm to execute on large
    datasets. In Fig. 4, we have explained the steps involved in the big data analysis.
    In this paper, we propose the parallel and distributed association rule mining
    algorithm and tested with large datasets. The hybrid association rule-based decision
    tree algorithm is designed to analyze the distributed datasets available in the
    fog node and cloud computing node. In the supervised machine learning approach,
    decision trees are widely used prediction algorithm for large datasets. The most
    widely used supervised algorithm is tree-based algorithm, which gives greater
    accuracy, easy implementation, and consistency. Fig. 4 System framework for big
    data analytics Full size image 5 Performance Analysis The performance of the proposed
    has been evaluated by recording the farmer query response time for 6 days. The
    query processing time is calculated as the sum of user query request time and
    query response time. Figure 5 shows the various mobile user query response time
    sent on different days to the cloud environment. QID number represents query identification
    number, and it is calculated as the time taken by the cloud application service
    to compute the query and send a response to the farmer user. Fig. 5 User query
    response time Full size image The response can vary based on the type and nature
    of the query sent by the end user. In Fig. 6, the performance of the various approaches
    for generating the knowledge from the large datasets is explained. The proposed
    hybrid association rule-based decision tree-based MapReduce approach gives more
    accuracy and less error than the other data classification approach. The query
    response time can vary based on the user request type and nature of the query.
    Fig. 6 Performance comparisons of various approaches Full size image 6 Conclusion
    and Future Work Integration of cloud computing technologies and machine learning
    approaches swiftly moves traditional agricultural systems to smart agricultural
    systems. Big data analytics system has been applied in a smart agricultural system
    to provide knowledge patterns to the farmers to make real-time decisions about
    farm management. The proposed precision agricultural system is used in the field
    of science, which leads to maximum crop yield by reducing the usage of resources.
    The farm management process is optimized with the use of big data and machine
    learning methods by increasing the crop yield and reducing the resources like
    fertilizer, water, and pesticide. This system provides the required information
    to the farmers at the right time and right place. In future, the system can be
    extended for finding particular crop disease analysis. References S. Wolfert,
    L. Ge, C. Verdouw, Big data in smart farming-a review. Agric. Syst. 153, 69–80
    (2017) Article   Google Scholar   G.B. Kumar, An encyclopedic overview of ‘“big
    data”’ analytics. Int. J. Appl. Eng. Res. 10(3), 5681–5705 (2015) Google Scholar   M.
    Carolan, Publicising food: big data, precision agriculture, and co-experimental
    techniques of addition. Sociol Ruralis 57(2), 135–154 (2017) Article   Google
    Scholar   H.R. Zhang, Z. Li, T. Zou, Overview of agriculture big data research.
    Comput. Sci. 41(S2), 387–392 (2014) Google Scholar   M. Chunqiao, P. Xiaoning,
    M. Yunlong, Research status and development trend of agriculture big data technology.
    J. Anhui Agric. Sci. 44(34), 235–237 (2016) Google Scholar   D. Waga, K. Rabah,
    Environmental conditions’ big data management and cloud computing analytics for
    sustainable agriculture. World J. Comput. Appl. Technol. 2(3), 73–81 (2014) Article   Google
    Scholar   Z.F. Sun, K.M. Du, F.X. Zheng, Perspectives of research and application
    of big data on smart agriculture. J. Agric. Sci. Technol. 15(6), 63–71 (2013)
    Google Scholar   C.S. Nandyala, H.K. Kim, Green IoT agriculture and healthcare
    application (GAHA). Int. J. Smart Home 10(4), 289–300 (2016) Article   Google
    Scholar   A. Kamilaris, A. Kartakoullis, F.X. Prenafeta-Boldu, A review on the
    practice of big data analysis in agriculture. Comput. Electron. Agric. 143, 23–37
    (2017) Article   Google Scholar   A.Z. Abbasi, N. Islam, Z.A. Shaikh, A review
    of wireless sensors and networks’ applications in agriculture. Comput. Stand Interface
    36(2), 263–270 (2014) Article   Google Scholar   J. Lee, S.H. Kim, S.B. Lee, A
    study on the necessity and construction plan of the Internet of things platform
    for smart agriculture. J. Phys. IV 17(11), 1313–1324 (2014) Google Scholar   H.
    Tian, W. Zheng, H. Li, Application status and developing trend of open field water-saving
    internet of things technology. Trans. Chin. Soc. Agric. Eng. 32(21), 1–12 (2016)
    Google Scholar   I. Protopop, A. Shanoyan, Big data and smallholder farmers: big
    data applications in the agri-food supply chain in developing countries. Int.
    Food Agribus. Manage. Rev. 19, 173–190 (2016) Google Scholar   Download references
    Author information Authors and Affiliations Department of Computer Science and
    Engineering, Saveetha School of Engineering, SIMATS, Chennai, Tamil Nadu, 602105,
    India U. Sakthi Department of Information Technology, Sona College of Technology,
    Junction Main Road, Salem, Tamil Nadu, 636005, India K. Thangaraj Department of
    Computer Science and Engineering, St. Martin’s Engineering College, Secunderabad,
    Telangana, 500100, India T. Poongothai Department of Information Technology, St.
    Joseph’s Institute of Technology, Chennai, Tamil Nadu, 600119, India M. K. Kirubakaran
    Corresponding author Correspondence to U. Sakthi . Editor information Editors
    and Affiliations University of Leicester, Leicester, UK Yu-Dong Zhang Faculty
    of Engineering, University of the Ryukyus, Nishihara, Okinawa, Japan Tomonobu
    Senjyu Department of Computer Science, Khon Kaen University, Khon Kaen, Thailand
    Chakchai So-In Global Knowledge Research Foundation, Ahmedabad, Gujarat, India
    Amit Joshi Rights and permissions Reprints and permissions Copyright information
    © 2023 The Author(s), under exclusive license to Springer Nature Singapore Pte
    Ltd. About this paper Cite this paper Sakthi, U., Thangaraj, K., Poongothai, T.,
    Kirubakaran, M.K. (2023). Big Data Analytics and Machine Learning Approach for
    Smart Agriculture System Using Edge Computing. In: Zhang, YD., Senjyu, T., So-In,
    C., Joshi, A. (eds) Smart Trends in Computing and Communications. Lecture Notes
    in Networks and Systems, vol 396. Springer, Singapore. https://doi.org/10.1007/978-981-16-9967-2_63
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-981-16-9967-2_63
    Published 06 July 2022 Publisher Name Springer, Singapore Print ISBN 978-981-16-9966-5
    Online ISBN 978-981-16-9967-2 eBook Packages Engineering Engineering (R0) Share
    this paper Anyone you share the following link with will be able to read this
    content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Publish with us Policies and ethics Download book PDF Download book
    EPUB Sections Figures References Abstract Introduction Related Works Big Data
    Analytics in Smart Knowledge-Based Agricultural System Machine Learning Approach
    for the Precision Agriculture Performance Analysis Conclusion and Future Work
    References Author information Editor information Rights and permissions Copyright
    information About this paper Publish with us Discover content Journals A-Z Books
    A-Z Publish with us Publish your research Open access publishing Products and
    services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Big Data Analytics and Machine Learning Approach for Smart Agriculture System
    Using Edge Computing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh G.
  - Kalra N.
  - Yadav N.
  - Sharma A.
  - Saini M.
  citation_count: '22'
  description: Agriculture is regarded as one of the most crucial sectors in guaranteeing
    food security. However, as the world’s population grows, so do agri-food demands,
    necessitating a shift from traditional agricultural practices to smart agriculture
    practices, often known as agriculture 4.0. It is critical to recognize and handle
    the problems and challenges related with agriculture 4.0 in order to fully profit
    from its promise. As a result, the goal of this research is to contribute to the
    development of agriculture 4.0 by looking into the growing trends of digital technologies
    in the field of agriculture. A literature review is done to examine the scientific
    literature pertaining to crop farming published in the previous decade for this
    goal. This thorough examination yielded significant information on the existing
    state of digital technology in agriculture, as well as potential future opportunities.
  doi: 10.12731/2658-6649-2022-14-6-423-454
  full_citation: '>'
  full_text: '>

    "ГЛАВНАЯ ПОЛИТИКА ЖУРНАЛА РЕДАКЦИЯ ТЕКУЩИЙ ВЫПУСК АРХИВ АВТОРАМ КОНТАКТЫ НАЙТИ
    Регистрация Вход ГЛАВНАЯ / АРХИВЫ / ТОМ 14 № 6 (2022) / Научные обзоры и сообщения
    SMART AGRICULTURE: A REVIEW Gurjeet Singh Lords University Naresh Kalra Lords
    University Neetu Yadav Lords University Ashwani Sharma Lords University Manoj
    Saini Lords University DOI: https://doi.org/10.12731/2658-6649-2022-14-6-423-454
    АННОТАЦИЯ Agriculture is regarded as one of the most crucial sectors in guaranteeing
    food security. However, as the world’s population grows, so do agri-food demands,
    necessitating a shift from traditional agricultural practices to smart agriculture
    practices, often known as agriculture 4.0. It is critical to recognize and handle
    the problems and challenges related with agriculture 4.0 in order to fully profit
    from its promise. As a result, the goal of this research is to contribute to the
    development of agriculture 4.0 by looking into the growing trends of digital technologies
    in the field of agriculture. A literature review is done to examine the scientific
    literature pertaining to crop farming published in the previous decade for this
    goal. This thorough examination yielded significant information on the existing
    state of digital technology in agriculture, as well as potential future opportunities.
    СКАЧИВАНИЯ БИОГРАФИИ АВТОРОВ Gurjeet Singh, Lords University  Associate Professor&
    Dean, Lords School of Computer Applications & IT Naresh Kalra, Lords University
    Deputy Registrar (Research), Faculty of Pharmacy Neetu Yadav, Lords University
    Associate Professor& Dean, Lords School of Social Sciences & Humanities Ashwani
    Sharma, Lords University Assistant Professor, Lords School of Computer Applications
    & IT Manoj Saini, Lords University Assistant Professor, Lords School of Computer
    Applications & IT ЛИТЕРАТУРА References F Schierhorn, M. Elferink, Global Demand
    for Food Is Rising. Can We Meet It? Harv Bus Rev, 2016, 7 (2017). https://hbr.org/2016/04/global-demand-for-food-is-rising-can-we-meet-it
    Singh, G. Machine Learning Models in Stock Market Prediction. International Journal
    of Innovative Technology and Exploring Engineering, 2022, vol. 11, no. 3, pp.
    18-28. https://doi.org/10.35940/ijitee.C9733.0111322 WK Mok, YX Tan, WN. Chen,
    Technology innovations for food security in Singapore: A case study of future
    food systems for an increasingly natural resource-scarce world, Trends Food Sci
    Technol, 2020, vol. 102, pp. 155–168, https://doi.org/10.1016/j.tifs.2020.06.013
    Nagar, P., & Issar, G. S. Detection of outliers in stock market using regression
    analysis. International Journal of Emerging Technologies in Computational and
    Applied Science, 2013. https://doi.org/10.5281/zenodo.6047417 R Abbasi, P Martinez,
    R. Ahmad, An ontology model to represent aquaponics 4.0 system’s knowledge, Inf
    Process Agric, 2021. https://doi.org/10.1016/J.INPA.2021.12.001 R Abbasi, P Martinez,
    R. Ahmad, An ontology model to support the automated design of aquaponic grow
    beds, Procedia CIRP, 2021, vol. 100, pp. 55–60, https://doi.org/10.1016/j.procir.2021.05.009
    G Aceto, V Persico, A. Pescapé, A Survey on Information and Communication Tech-
    nologies for Industry 4.0: State-of-the-Art, Taxonomies, Perspectives, and Challenges,
    IEEE Commun Surv Tutorials, 2019. https://doi.org/10.1109/COMST.2019.2938259 B.
    Ozdogan, A. Gacar, H. Aktas. Digital agriculture practices in the context of agriculture
    4.0. Journal of Economics, Finance and Accounting (JEFA), 2017, vol. 4, iss. 2,
    pp. 184-191. https://doi.org/10.17261/pressacademia.2017.448 Y Liu, X Ma, L Shu,
    GP Hancke, AM. Abu-Mahfouz, From Industry 4.0 to Agriculture 4.0: Current Status,
    Enabling Technologies, and Research Challenges, IEEE Trans Ind Informatics, 2021,
    vol. 17, no. 6, pp. 4322-4334. https://doi.org/10.1109/TII.2020.3003910 F da Silveira,
    FH Lermen, FG. Amaral, An overview of agriculture 4.0 development: Systematic
    review of descriptions, technologies, barriers, advantages, and disadvantages,
    Comput Electron Agric 189 (2021) 106405, https://doi.org/10.1016/J.COMPAG.2021.106405
    G Idoje, T Dagiuklas, M. Iqbal, Survey for smart farming technologies: Challenges
    and issues, Comput Electr Eng, 2021, vol. 92, 107104. https://doi.org/10.1016/J.COMPELECENG.2021.107104
    J Miranda, P Ponce, A Molina, P. Wright, Sensing, smart and sustain- able technologies
    for Agri-Food 4.0, Comput Ind, 2019, vol. 108, pp. 21–36. https://doi.org/10.1016/J.COMPIND.2019.02.002
    M Lezoche, H Panetto, J Kacprzyk, JE Hernandez, Alemany Díaz MME. Agri-food 4.0:
    A survey of the supply chains and technologies for the future agriculture, Comput
    Ind, 2020, vol. 117, 103187. https://doi.org/10.1016/J.COMPIND.2020.103187 Bhakta
    I, Phadikar S, Majumder K. State-of-the-art technologies in precision agriculture:
    a systematic review. Journal of the Science of Food and Agriculture, 2019, vol.
    99, no. 11. pp. 4878-4888. https://doi.org/10.1002/jsfa.9693 SO Araújo, RS Peres,
    J Barata, F Lidon, JC. Ramalho, Characterising the Agriculture 4.0 Landscape —
    Emerging Trends, Challenges and Opportunities, Agron, 2021, vol. 11, no. 4, 667.
    https://doi.org/10.3390/AGRONOMY11040667 M Bacco, P Barsocchi, E Ferro, A Gotta,
    M. Ruggeri, The Digitisation of Agriculture: a Survey of Research Activities on
    Smart Farming, Array, 2019, 3–4, 100009. https://doi.org/10.1016/j.array.2019.100009
    Singh, G., & Nager, P. A case Study on Nutek India Limited Regarding Deep Falling
    in Share Price. Researchers World - Journal of Arts, Science & Commerce, 2012,
    vol. 3(2), 3. Nager, P., & Singh, G. An Analysis of Outliers For Fraud Detection
    in Indian Stock Market. Researchers World - Journal of Arts, Science & Commerce,
    2012, vol. 3(4), 4. MJ Page, JE McKenzie, PM Bossuyt, I Boutron, TC Hoffmann,
    CD Mulrow, et al., The PRISMA 2020 statement: An updated guideline for reporting
    systematic reviews, BMJ, 2021, 372. https://doi.org/10.1136/BMJ.N71 Ahmed MA,
    Ahsan I, Abbas M. Systematic Literature Review: Ingenious Software Project Management
    while narrowing the impact aspect. RACS ‘16: Proceedings of the International
    Conference on Research in Adaptive and Convergent Systems, 2016, pp. 165–168.
    https://doi.org/10.1145/2987386.2987422 C Pylianidis, S Osinga, IN. Athanasiadis,
    Introducing digital twins to agriculture, Comput Electron Agric 184 (2021) 105942,
    https://doi.org/10.1016/J.COMPAG.2020.105942 Shaikh ZA Aqeel-ur-Rehman, NA Shaikh,
    N Islam, An integrated framework to de- velop context aware sensor grid for agriculture,
    Aust J Basic Appl Sci, 2010. W Shi, J Cao, Q Zhang, Y Li, L. Xu, Edge Computing:
    Vision and Challenges, IEEE Internet Things J 3, 2016, 637–646, https://doi.org/10.1109/JIOT.2016.2579198
    A Tzounis, N Katsoulas, T Bartzanas, C. Kittas, Internet of Things in agricul-
    ture, recent advances and future challenges, Biosyst Eng, 164, 2017, 31–48, https://doi.org/10.1016/J.BIOSYSTEMSENG.2017.09.007
    VP Kour, S. Arora, Recent Developments of the Internet of Things in Agri- culture:
    A Survey, IEEE Access 8, 2020, 129924–129957, https://doi.org/10.1109/AC- CESS.2020.3009298
    MU Aftab, O Ashraf, M Irfan, M Majid, A Nisar, MA. Habib, A Review Study of Wireless
    Sensor Networks and Its Security, Commun Netw, 7, 2015, 172–179, https://doi.org/10.4236/cn.2015.74016
    X Yu, P Wu, W Han, Z. Zhang, A survey on wireless sensor network infrastructure
    for agriculture, Comput Stand Interfaces, 1, 2013, 59–64, https://doi.org/10.1016/J.CSI.2012.05.001
    Mell PM, Grance T. The NIST definition of cloud computing, 2011. https://doi.org/10.6028/NIST.SP.800-145
    Alwada’n T. Cloud computing and multi-agent system: monitoring and services. 2018.
    X Shi, X An, Q Zhao, H Liu, L Xia, X Sun, et al., State-of-the-art inter- net
    of things in protected agriculture, Sensors (Switzerland), 19, 2019, 1833, https://doi.org/10.3390/s19081833
    J Wang, H Yue, Z. Zhou, An improved traceability system for food quality assurance
    and evaluation based on fuzzy classification and neural network, Food Control,
    79, 2017, 363–370, https://doi.org/10.1016/J.FOODCONT.2017.04.013 S Fountas, G
    Carli, CG Sørensen, Z Tsiropoulos, C Cavalaris, A Vatsanidou, et al., Farm management
    information systems: Current situation and future perspectives, Comput Electron
    Agric, 115, 2015, 40–50, https://doi.org/10.1016/J.COMPAG.2015.05.011 A Bechar,
    C. Vigneault, Agricultural robots for field operations: Concepts and components,
    Biosyst Eng, 149, 2016, 94–111, https://doi.org/10.1016/J.BIOSYSTEMSENG.2016.06.014
    Gonzalez-De-Santos P, Fernández R, Sepúlveda D, Navas E, Armada M. Un- manned
    Ground Vehicles for Smart Farms. Agron - Clim Chang Food Secur, 2020. https://doi.org/10.5772/INTECHOPEN.90683
    J del Cerro, CC Ulloa, A Barrientos, L. Rivas J de, Unmanned Aerial Vehicles in
    Agri- culture: A Survey, Agron, 11, 2021, 203, https://doi.org/10.3390/AGRONOMY11020203
    Patel PN, Patel M, Faldu RM, Dave YR. Quadcopter for Agricultural Surveillance,
    2013. Sylvester G, Food and Agriculture Organization of the United Nations., International
    Telecommunication Union. E-agriculture in action: drones for agriculture n.d.:112.
    U Sivarajah, MM Kamal, Z Irani, V. Weerakkody, Critical analysis of Big Data challenges
    and analytical methods, J Bus Res, 70, 2017, 263–286, https://doi.org/10.1016/J.JBUSRES.2016.08.001
    M Chi, A Plaza, JA Benediktsson, Z Sun, J Shen, Y. Zhu, Big Data for Re- mote
    Sensing: Challenges and Opportunities, Proc IEEE, 104, 2016, 2207–2219, https://doi.org/10.1109/JPROC.2016.2598228
    K Tesfaye, K Sonder, J Caims, C Magorokosho, A Tarekegn, GT Kassie, et al. Target-
    ing drought-tolerant maize varieties in southern Africa: a geospatial crop modeling
    approach using big data, Int Food Agribus Manag Rev, 19, 2016. R Sharma, SS Kamble,
    A Gunasekaran, V Kumar, A. Kumar, A system- atic literature review on machine
    learning applications for sustainable agri- culture supply chain performance,
    Comput Oper Res, 119, 2020, 104926, https://doi.org/10.1016/J.COR.2020.104926
    T Talaviya, D Shah, N Patel, H Yagnik, M. Shah, Implementation of artificial intelli-
    gence in agriculture for optimisation of irrigation and application of pesticides
    and herbicides, Artif Intell Agric, 4, 2020, 58–73, https://doi.org/10.1016/J.AIIA.2020.04.002
    KG Liakos, P Busato, D Moshou, S Pearson, D. Bochtis, Machine Learn- ing in Agriculture:
    A Review, Sensors, 18, 2018, 2674, https://doi.org/10.3390/S18082674 G Xu, H Li,
    S Liu, K Yang, X. Lin, VerifyNet: Secure and Verifiable Federated Learning, IEEE
    Trans Inf Forensics Secur, 15, 2020, 911–926, https://doi.org/10.1109/TIFS.2019.2929409
    J. Schmidhuber, Deep Learning in Neural Networks: An Overview, Neural Networks,
    61, 2014, 85–117, https://doi.org/10.1016/j.neunet.2014.09.003 Canziani A, Paszke
    A, Culurciello E. An Analysis of Deep Neural Network Models for Practical Applications,
    2016. A Kamilaris, FX. Prenafeta-Boldu, Deep learning in agriculture: A survey,
    Comput Electron Agric, 147, 2018, 70–90, https://doi.org/10.1016/j.compag.2018.02.016
    V Kakani, VH Nguyen, BP Kumar, H Kim, VR. Pasupuleti, A critical review on computer
    vision and artificial intelligence in food industry, J Agric Food Res, 2, 2020,
    https://doi.org/10.1016/J.JAFR.2020.100033 F Terribile, A Agrillo, A Bonfante,
    G Buscemi, M Colandrea, A D’Antonio, et al., A Web-based spatial decision supporting
    system for land management and soil conservation, Solid Earth 6 (2015) 903–928,
    https://doi.org/10.5194/SE-6-903-2015 A Felsberger, B Oberegger, G. Reiner, A
    Review of Decision Support Systems for Manufacturing Systems, Undefined, 2016.
    P Taechatanasat, L. Armstrong, Decision Support System Data for Farmer Decision
    Making, ECU Publ Post (2013) 2014 . L Wang, M Törngren, M. Onori, Current status
    and advancement of cyber- physical systems in manufacturing, J Manuf Syst, 37,
    2015), 517–527, https://doi.org/10.1016/J.JMSY.2015.04.008 DGS Pivoto, LFF de
    Almeida, R da Rosa Righi, JJPC Rodrigues, AB Lugli, AM. Al- berti, Cyber-physical
    systems architectures for industrial internet of things appli- cations in Industry
    4.0: A literature review, J Manuf Syst, 58, 2021, 176–192, https://doi.org/10.1016/J.JMSY.2020.11.017
    AF Jimenez, PF Cardenas, F Jimenez, A Canales, A. López, A cyber-physical intelli-
    gent agent for irrigation scheduling in horticultural crops, Comput Electron Agric,
    178, 2020, 105777, https://doi.org/10.1016/J.COMPAG.2020.105777 A Selmani, H Oubehar,
    M Outanoute, A Ed-Dahhak, M Guerbaoui, A Lach- hab, et al., Agricultural cyber-physical
    system enabled for remote management of solar-powered precision irrigation, Biosyst
    Eng, 177, 2019, 18–30, https://doi.org/10.1016/J.BIOSYSTEMSENG.2018.06.007 A Nayak,
    RR Levalle, S Lee, SY. Nof, Resource sharing in cyber-physical systems: modelling
    framework and case studies, 54, 2016, 6969–6983, https://doi.org/10.1080/00207543.2016.1146419
    C Verdouw, B Tekinerdogan, A Beulens, S. Wolfert, Digital twins in smart farming,
    Agric Syst, 189, 2021, 103046, https://doi.org/10.1016/J.AGSY.2020.103046 D Jones,
    C Snider, A Nassehi, J Yon, B Hicks, Characterising the Digital Twin: A systematic
    literature review, CIRP J Manuf Sci Technol, 29, 2020, 36–52, https://doi.org/10.1016/J.CIRPJ.2020.02.002
    S Aydin, MN. Aydin, Semantic and syntactic interoperability for agricultural open-
    data platforms in the context of IoT using crop-specific trait ontologies, Appl
    Sci, 10, 2020, https://doi.org/10.3390/app10134460 Y He, J Guo, X. Zheng, From
    Surveillance to Digital Twin: Challenges and Recent Advances of Signal Processing
    for Industrial Internet of Things, IEEE Signal Process Mag, 35, 2018, 120–129,
    https://doi.org/10.1109/MSP.2018.2842228 MS Farooq, S Riaz, A Abid, K Abid, MA.
    Naeem, A Survey on the Role of IoT in Agriculture for the Implementation of Smart
    Farming, IEEE Access, 7, 2019, 156237–156271, https://doi.org/10.1109/ACCESS.2019.2949703
    A Villa-Henriksen, GTC Edwards, LA Pesonen, O Green, CAG. Sørensen, Internet of
    Things in arable farming: Implementation, applications, challenges and potential,
    Biosyst Eng, 191, 2020, 60–84, https://doi.org/10.1016/J.BIOSYSTEMSENG.2019.12.013
    HM Jawad, R Nordin, SK Gharghan, AM Jawad, M. Ismail, Energy-efficient wire- less
    sensor networks for precision agriculture: A review, Sensors (Switzerland), 17,
    2017, 1781, https://doi.org/10.3390/s17081781 L Sigrist, N Stricker, D Bernath,
    J Beutel, L. Thiele, Thermoelectric Energy Harvesting from Gradients in the Earth
    Surface, IEEE Trans Ind Electron, 67, 2020, 9460–9470, https://doi.org/10.1109/TIE.2019.2952796
    AR Yanes, P Martinez, R. Ahmad, Towards automated aquaponics: A review on monitoring,
    IoT, and smart systems, J Clean Prod, 2020, https://doi.org/10.1016/j.jclepro.2020.121571
    N Brinis, LA. Saidane, Context Aware Wireless Sensor Network Suitable for Preci-
    sion Agriculture, Wirel Sens Netw, 2016, https://doi.org/10.4236/wsn.2016.81001
    M Zimmerling, L Mottola, S. Santini, Synchronous Transmissions in Low-Power Wireless:
    A Survey of Communication Protocols and Network Services, ACM Comput Surv, 53
    2021, https://doi.org/10.1145/3410159 F Tonolini, F. Adib, Networking across boundaries:
    Enabling wireless communica- tion through the water-air interface, SIGCOMM 2018
    - Proc 2018 Conf ACM Spec Interes Gr Data Commun, 2018, 117–131, https://doi.org/10.1145/3230543.3230580
    L Chen, S Thombre, K Jarvinen, ES Lohan, A Alen-Savikko, H Leppakoski, et al.,
    Ro- bustness, Security and Privacy in Location-Based Services for Future IoT:
    A Survey, IEEE Access, 5, 2017, 8956–8977, https://doi.org/10.1109/ACCESS.2017.2695525
    Y Njah, M. Cheriet, Parallel Route Optimization and Service Assurance in Energy-
    Efficient Software-Defined Industrial IoT Networks, IEEE Access, 9, 2021, 24682–24696,
    https://doi.org/10.1109/ACCESS.2021.3056931 A Rajput, VB. Kumaravelu, Scalable
    and sustainable wireless sensor networks for agricultural application of Internet
    of things using fuzzy c-means algorithm, Sustain Comput Informatics Syst, 22,
    2019, 62–74, https://doi.org/10.1016/J.SUSCOM.2019.02.003 BB Sinha, R. Dhanalakshmi,
    Recent advancements and challenges of Internet of Things in smart agriculture:
    A survey, Futur Gener Comput Syst, 126, 2022, 169–184, https://doi.org/10.1016/J.FUTURE.2021.08.006
    F Caffaro, E. Cavallo, The effects of individual variables, farming system character-
    istics and perceived barriers on actual use of smart farming technologies: Evidence
    from the piedmont region, northwestern Italy, Agric, 9, 2019, https://doi.org/10.3390/AGRI-
    CULTURE9050111 Mohit Jain, Pratyush Kumar, Ishita Bhansali, Q. Vera Liao, Khai
    Truong, Shwetak Patel. FarmChat: A Conversational Agent to Answer Farmer Queries.
    Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies,
    2018, vol. 2, issue 4, article 170, pp 1–22. https://doi.org/10.1145/3287048 Mclaughlan
    B, Brandli J, Smith F. Toward Sustainable High-Yield Agriculture via Intelligent
    Control Systems, 2015. RK Kodali, S Soratkal, L. Boppana, IOT based control of
    appliances, in: Proceeding - IEEE Int Conf Comput Commun Autom ICCCA 2016, 2017,
    pp. 1293–1297, https://doi.org/10.1109/CCAA.2016.7813918 Abbasi R, Reyes A, Martinez
    E, Ahmad R. Real-time implementation of digital twin for robot based production
    line n.d.:4–6. O Bermeo-Almeida, M Cardenas-Rodriguez, T Samaniego-Cobo, E Ferruzola-
    Gómez, R Cabezas-Cabezas, W. Bazán-Vera, Blockchain in Agriculture: A Systematic
    Literature Review, Commun Comput Inf Sci, 883, 2018, 44–56, https://doi.org/10.1007/978-3-030-00940-3_4
    V Saiz-Rubio, F. Rovira-Más, From Smart Farming towards Agriculture 5.0: A Review
    on Crop Data Management, Agron, 10, 2020, 207, https://doi.org/10.3390/AGRONOMY10020207
    X Xu, Y Lu, B Vogel-Heuser, L. Wang, Industry 4.0 and Industry 5.0 – Inception,
    conception and perception, J Manuf Syst, 61, 2021, 530–535, https://doi.org/10.1016/J.JMSY.2021.10.006
    PKR Maddikunta, Q-V Pham, P B, N Deepa, K Dev, TR Gadekallu, et al., Industry
    5.0: A survey on enabling technologies and potential applications, J Ind Inf Integr,
    2021, 100257, https://doi.org/10.1016/J.JII.2021.100257 PDF (ENGLISH)  Просмотров
    аннотации: 898 Загрузок PDF: 501 ОПУБЛИКОВАН 2022-12-25 КАК ЦИТИРОВАТЬ Singh,
    G., Kalra, N., Yadav, N., Sharma, A., & Saini, M. (2022). SMART AGRICULTURE: A
    REVIEW. Siberian Journal of Life Sciences and Agriculture, 14(6), 423-454. https://doi.org/10.12731/2658-6649-2022-14-6-423-454
    Другие форматы библиографических ссылок ВЫПУСК Том 14 № 6 (2022) РАЗДЕЛ Научные
    обзоры и сообщения 21 Copyright (c) 2023 Gurjeet Singh, Naresh Kalra, Neetu Yadav,
    Ashwani Sharma, Manoj Saini Это произведение доступно по лицензии Creative Commons
    «Attribution-NonCommercial-NoDerivatives» («Атрибуция — Некоммерческое использование
    — Без производных произведений») 4.0 Всемирная. tweet поделиться поделиться pin
    it ЯЗЫК English Русский ОТПРАВИТЬ МАТЕРИАЛ Прием статей осуществляется в Том 16,
    № 5, 2024. Категория К1 Перечня ВАК, Scopus (Q3)     КЛЮЧЕВЫЕ СЛОВА урожайность
    подростки обзор живая масса COVID-19 экспорт студенты адаптация депрессия качество
    жизни мониторинг стресс пандемия безопасность дети цитокины тревога интернет-зависимость
    копинг-стратегии семена атмосферный воздух пшеница деменция малый бизнес тревожность
    факторы АПК порода возраст молоко селекция кровь регион гумус Крым селезенка устьица
    шароле генотип   НАИБОЛЕЕ ЧИТАЕМЫЕ МАТЕРИАЛЫ ЗА ПОСЛЕДНЮЮ НЕДЕЛЮ СРАВНИТЕЛЬНЫЙ
    АНАЛИЗ ДОСТУПНЫХ МЕТОДОВ ОЧИСТКИ И ДЕЗИНФЕКЦИИ СЪЕМНЫХ ПЛАСТИНОЧНЫХ ПРОТЕЗОВ ДЛЯ
    ЛИЦ ПОЖИЛОГО И СТАРЧЕСКОГО ВОЗРАСТА 36 SMART AGRICULTURE: A REVIEW 27 ПРЕПАРАТЫ
    ХОЛИНА В ЛЕЧЕНИИ АСТЕНИЧЕСКИХ СОСТОЯНИЙ: СОВРЕМЕННОСТЬ И ПЕРСПЕКТИВЫ (ОБЗОР ЛИТЕРАТУРЫ
    И ПРЕДСТАВЛЕНИЕ КЛИНИЧЕСКОГО СЛУЧАЯ) 13 ВЛИЯНИЕ ЧЕЛОВЕЧЕСКОГО КАПИТАЛА НА УСПЕХ
    ДЕЯТЕЛЬНОСТИ СЕЛЬСКОХОЗЯЙСТВЕННОГО КООПЕРАТИВА (НА ПРИМЕРЕ «ARLA FOODS») 9 МЕДИЦИНСКОЕ
    ОБЕСПЕЧЕНИЕ СУДЕБНОЙ СИСТЕМЫ РОССИЙСКОЙ ФЕДЕРАЦИИ 8 Издательство   Объявления
    >> Контент доступен под лицензией Creative Commons Attribution-NonCommercial-NoDerivatives
    4.0 International. ISSN 2658-6649 (print) ISSN 2658-6657 (online)"'
  inline_citation: '>'
  journal: Siberian Journal of Life Sciences and Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'SMART AGRICULTURE: A REVIEW'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ribeiro Junior F.M.
  - Bianchi R.A.C.
  - Prati R.C.
  - Kolehmainen K.
  - Soininen J.P.
  - Kamienski C.A.
  citation_count: '21'
  description: Smart agriculture applications that analyse and manage agricultural
    yield using IoT systems may suffer from intermittent operation due to cloud disconnections
    commonly occurring in rural areas. A fog computing solution enables the IoT system
    to process data faster and deal with intermittent connectivity. However, the fog
    needs to send a high volume of data to the cloud and this can cause link congestion
    with unusable data traffic. Here we propose an approach to collect and store data
    in a fog-based smart agriculture environment and different data reduction methods.
    Sixteen techniques for data reduction are investigated; eight machine learning
    (ML) methods combined with run-length encoding, and eight combined with Huffman
    encoding. Our experiment uses two real data sets, where the first contains air
    temperature and humidity values, and the second has soil moisture and temperature
    conditions. The fog filters cluster the unlabelled data using unsupervised machine
    learning algorithms that group data into categories according to their value ranges
    in all experiments. Supervised learning classification methods are also used to
    predict the class of data samples from these categories. After that, the fog filter
    compresses the identified categories using two data compression techniques, run-length
    encoding (RLE) and the Huffman encoding, preserving the data time series nature.
    Our results reveal that a k-means combined with RLE method achieved the highest
    reduction, where the fog needed to store and transmit only 3%–6% of the original
    data generated by sensors.
  doi: 10.1016/j.biosystemseng.2021.12.021
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Keywords 1. Introduction 2. Theoretical background 3. Related
    work 4. Fog data filter 5. Materials and methods 6. Results 7. Discussion 8. Conclusion
    Funding Declaration of competing interest References Show full outline Cited by
    (21) Figures (17) Show 11 more figures Tables (7) Table 1 Table 2 Table 3 Table
    4 Table 5 Table 6 Show all tables Biosystems Engineering Volume 223, Part B, November
    2022, Pages 142-158 Special Issue: Biosystems and Metrology Research Paper Data
    reduction based on machine learning algorithms for fog computing in IoT smart
    agriculture Author links open overlay panel Franklin M. Ribeiro Junior a b, Reinaldo
    A.C. Bianchi c, Ronaldo C. Prati a, Kari Kolehmainen d, Juha-Pekka Soininen d,
    Carlos A. Kamienski a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.biosystemseng.2021.12.021
    Get rights and content Highlights • It is a challenge to manage a massive amount
    of data generated by sensors in IoT. • Combining machine learning with data compression
    results in a larger data reduction. • Depending on the context, the fog needs
    to decide which classifier should use. Smart agriculture applications that analyse
    and manage agricultural yield using IoT systems may suffer from intermittent operation
    due to cloud disconnections commonly occurring in rural areas. A fog computing
    solution enables the IoT system to process data faster and deal with intermittent
    connectivity. However, the fog needs to send a high volume of data to the cloud
    and this can cause link congestion with unusable data traffic. Here we propose
    an approach to collect and store data in a fog-based smart agriculture environment
    and different data reduction methods. Sixteen techniques for data reduction are
    investigated; eight machine learning (ML) methods combined with run-length encoding,
    and eight combined with Huffman encoding. Our experiment uses two real data sets,
    where the first contains air temperature and humidity values, and the second has
    soil moisture and temperature conditions. The fog filters cluster the unlabelled
    data using unsupervised machine learning algorithms that group data into categories
    according to their value ranges in all experiments. Supervised learning classification
    methods are also used to predict the class of data samples from these categories.
    After that, the fog filter compresses the identified categories using two data
    compression techniques, run-length encoding (RLE) and the Huffman encoding, preserving
    the data time series nature. Our results reveal that a k-means combined with RLE
    method achieved the highest reduction, where the fog needed to store and transmit
    only 3%–6% of the original data generated by sensors. Previous article in issue
    Next article in issue Keywords Smart agricultureInternet of Things (IoT)Data reductionMachine
    learning (ML) 1. Introduction There is an increasing trend for using technological
    advances in artificial intelligence and the Internet of Things (IoT) in agriculture
    to increase production, reduce wastage and costs, and decrease the environmental
    footprint (Togneri et al., 2019). An IoT smart agriculture application can optimise
    production costs or manage the water supply of a farm. For example, an irrigation
    application can make decisions, perceiving the environment by employing sensors
    to collect weather and field-related data, such as rain, air temperature, solar
    radiation, and soil moisture (García et al., 2020; Kamienski et al., 2019). IoT
    systems comprise a distributed infrastructure and handle enormous quantities of
    data that is captured by physical devices (sensors and actuators) (Atzori et al.,
    2017) and transported to a processing place far from the field, usually at a cloud
    data centre (Zyrianoff et al., 2020). Fog computing allows processing and analysing
    data received from sensors locally at the edge of an IoT network (Mouradian et
    al., 2018), thus having local and real-time decision-making and reducing the volume
    of data sent to a cloud server. However, the cloud still needed to centralise
    and analyse historical data since the fog has constrained resources. Therefore,
    an IoT system can overload the communication channel between fog and the cloud
    with an overbearing amount of irrelevant data. A fog-based IoT system can make
    decisions faster in the edge, decrease the amount of data transferred between
    fog and cloud, and decrease the data volume to be processed by the cloud (Gia
    et al., 2015; Li et al., 2015; Mouradian et al., 2018). Despite these benefits,
    it is still challenging to manage a fog data flow concerning data storage, scalability
    and processing power constraints (Yousefpour et al., 2019). This paper proposes
    a fog data reduction approach based on machine learning clustering algorithms
    to collect, filter, store, and transmit data in an IoT smart farming application.
    Five well-known unsupervised learning algorithms, namely, K-Means, Hierarchical
    Tree, Gaussian Mixture Model (GMM), Spectral Clustering, and DBSCAN, were tested
    and combined with two data compression techniques: run-length encoding (RLE) and
    Huffman. Combinations of these algorithms working were analysed as a fog data
    filter to reduce the amount of data stored and transmitted by the fog to the cloud.
    The reason to use an unsupervised machine learning algorithm before manipulating
    the data is that the compression methods can work more efficiently with the clustered
    data. The root causes of the considerable data savings are twofold. First, by
    clustering the data in groups, instead of manipulating raw data composed of two
    or more floating-point variables, the fog manipulates a data stream composed of
    only one short integer, which is the group identification number. Secondly, as
    agricultural-related data tends to be homogeneous and change slowly over time,
    it is likely that the data remain within the same cluster for some time, making
    algorithms that encode groups of similar data - such as the RLE - more efficient.
    Our results reveal that the fog data filter can achieve at least a tenfold reduction
    in the volume of data sent by the fog to the cloud. The primary contributions
    of this paper are twofold. First, by empirical experiments two relevant theoretical
    advantages that fog computing provides to IoT systems are investigated. Secondly,
    it is demonstrated that unsupervised machine learning methods can facilitate the
    achievement of these benefits. This paper is organised as follows: section 2 describes
    the theoretical foundations of this work, and in section 3 related work. Section
    4 details our fog data filter for smart agriculture, and section 5 describes our
    methodology. Section 6 reports on results and they are discussed in section 7.
    Finally, section 8 presents our conclusions and suggestions for future work. 2.
    Theoretical background This section describes the foundations of this study, presenting
    the concepts of fog computing, unsupervised and supervised learning algorithms,
    and data compression techniques. 2.1. Fog computing Fog computing improves latency-sensitive
    systems (Arivazhagan & Natarajan, 2020) because it responds to the actuators faster
    than the cloud and it analyses IoT data in real-time on the network edge (Verma
    et al., 2017; Yousefpour et al., 2019). A fog-based IoT architecture includes
    at least three stages: thing, fog, and cloud stage (Fig. 1). The thing stage contains
    devices, such as sensors and actuators. The sensors perceive the environment and
    send data to the fog, but the actuators receive data (decisions) from the fog
    stage. The fog stage consists of virtualised machines (fog nodes) that store and
    process decisions locally, without an Internet connection, which means the fog
    keeps the IoT system working even during a cloud network disconnection. The cloud
    stage is connected to the fog stage by a gateway over the Internet. This stage
    contains the cloud server and has no hardware constraints like the fog nodes,
    which means the cloud has more processing power than the fog (Chiang & Zhang,
    2016; Mukherjee et al., 2018). Download : Download high-res image (172KB) Download
    : Download full-size image Fig. 1. IoT stages. 2.2. Unsupervised clustering methods
    The clustering problem can be described as the task of dividing a set of N data
    samples into a number of disjoint clusters, without previous knowledge of the
    group structure, i.e., without knowing to which data cluster each sample belongs.
    Because the data used for training the algorithms have not been labelled, classified,
    or categorised by a human teacher beforehand, they are called unsupervised learning
    methods (Hastie et al., 2009). Clustering algorithms work by identifying similarities
    in the original space by maximising some objective function or minimizing a loss
    function. Several approaches are used to capture the structure of the problem:
    using the distance between samples, defining clusters by merging or splitting
    them successively, density-based clustering, or by aggregating points by some
    measure of affinity between them. This section presents five well-known clustering
    algorithms chosen for this work because of their widespread use in machine learning
    problems and also because each one represents a different approach for the grouping
    problem. As four of the algorithms presented here require the number of clusters
    to be specified; two metrics for evaluating clustering algorithms are also presented.
    2.2.1. K-Means The K-Means algorithm (Jain, 2010; MacQueen, 1967) is a distance-based
    method that clusters data by grouping samples in k groups of equal variances,
    which are then represented by the centroid of the group for the prediction of
    new samples. The k-means algorithm, sometimes referred to as Lloyd''s algorithm,
    performs clustering in three steps: First, randomly choose K points in the data
    space, that will be referred to as centroids; then, for each sample, compute the
    distance to each centroid and assign each sample to the centroid that minimises
    the error criterion. Finally, recompute the centroids using the samples assigned
    to each cluster. Repeat steps 2 and 3 until a minimisation criterion is satisfied.
    The pairwise distance between points can be computed in several ways. The most
    common one is the squared Euclidean distance or the Manhattan city-block distance.
    Others such as the Mahalanobis (1936) distance or the Hamming (1950) distance
    for binary data, can be used. The most common criterion to finish the learning
    cycle of this algorithm is the pairwise distance of data points within the same
    cluster, which should be minimised. This criterion, also known as the within-cluster
    sum-of-squares (WCSS), corresponds to the variance of the clusters. Formally,
    given X samples, K clusters C1, …, Ck whose centroid is μ, and the WCSS refers
    (1). (1) The k-means algorithm has many advantages, including that it is simple
    to implement, can be used in a small or large dataset, can be updated incrementally
    and is fast when making a prediction. The main problems of k-means are its dependency
    on the initial values of the centroid. To overcome this, the algorithms are usually
    run several times with different initial centroids and the clusters should be
    convex. 2.2.2. Hierarchical clustering Hierarchical clustering (Johnson, 1967)
    is a connectivity-based method, in which an algorithm groups samples by building
    a tree that defines a cluster hierarchy. The tree is built by merging (agglomerating)
    or splitting (dividing) groups of samples successively, finding a tree in which
    the leaves represent samples of the same cluster. While k-means minimise the variance
    of the clusters, hierarchical clustering aims at finding the best step at each
    cluster fusion or division. The agglomerative hierarchical clustering technique
    first computes the distance between every pair of samples in the data set, using
    any valid measurement. Then, pairs of most similar samples (samples that have
    the smaller distance between them) are linked, creating binary clusters that will
    continue to merge, creating larger clusters that will form a binary, hierarchical
    cluster tree. The last step of the algorithm is pruning: as the number of classes
    is predefined, the bottom of the tree must be pruned, so data points below a threshold
    are all grouped in a single cluster. The main advantage of this approach is that
    any method to compute the pairwise distance between data points can be used. Its
    main problem is that it should be used when the data has a hierarchical structure,
    and due to its high time complexity, it should not be used with large datasets.
    2.2.3. Spectral clustering Spectral clustering (Ng et al., 2001) is a graph-based
    method that uses the spectrum of the data similarity matrix to construct a graph
    that clusters the data. The data spectrum is usually computed by finding the Laplacian
    matrix of the data and then computing its Eigenvectors. The first k Eigenvectors
    are used to define the features of k graph nodes, splitting the graph in k ways,
    used to cluster the data. The advantages of this method are that it performs dimensionality
    reduction before clustering data, making it more general, being able to cluster
    non-convex data, and fast. The main problem is that the algorithm is not advised
    for many clusters or noisy datasets. Also, it clusters one set of data and cannot
    be used to predict the class of a new sample. 2.2.4. Gaussian Mixture Model The
    Gaussian Mixture Model (Reynolds, 2009) (GMM) method is a distribution-based clustering
    that defines groups as sets of samples that most likely belong to the same Gaussian
    distribution. The GMM algorithm works by repeating two steps until it converges.
    First, it finds the probability of membership in each cluster for each point of
    the dataset. Second, it updates the Gaussian function that models each cluster
    using the probability of membership of all data points. The first step is called
    expectation, and the second is called maximisation, being an expectation-maximisation
    based algorithm. The GMM algorithm can be seen as an improvement of the k-means
    clustering that incorporates the covariance structure of the data, and not only
    uses the position of the centroids of the data. In this way, it allows for elliptic
    clusters and not only circular ones. The GMM method is the fastest algorithm for
    learning mixture models, but its drawback is that it does not work well with a
    small dataset, or when there are insufficient points for each Gaussian mixture.
    2.2.5. DBSCAN The density-based spatial clustering of applications with noise
    (Ester et al., 1996) (DBSCAN) is a density-based clustering method that groups
    data by separating areas of higher density separated low-density areas. DBSCAN
    works by grouping together samples that are closely packed together. Samples in
    sparse areas - required to separate clusters - are usually considered noise and
    border points, respectively. DBSCAN uses two parameters: ɛ, which defines the
    vicinity of a point, and the minimum number of points required to form a dense
    region. The algorithm starts with a sample point that has not been visited, and
    its vicinity is analysed: if this vicinity has more than a predefined number of
    points, it is considered as dense and a cluster with all the points in the vicinity
    is defined; otherwise, this point is classified as noise. This process continues
    until the dense cluster is completely found. Then, a new point (that does not
    belong to any cluster) is retrieved, and the process repeats until no points are
    left without a label. The main advantage of this method is that it does not need
    the number of classes to be defined prior to clustering a new set of data. The
    main problems are that the dependency on the ɛ parameter, on the distance function,
    and that it cannot cluster data sets well with very small or very large differences
    in densities. 2.3. Evaluating clustering Given that the knowledge of the ground
    truth class assignments is unknown, unsupervised clustering algorithms cannot
    be evaluated by traditional classification measures that compute the quantity
    of correct and incorrect classification, such as accuracy, precision or recall.
    Therefore, the evaluation of the clustering quality must be done using the model
    itself, where the model results from a clustering process. The most widely known
    method to define the number of classes to be used is called the elbow method (Thorndike,
    1953). In this method, for each number of classes, the algorithm is used to cluster
    the data. Then, the percentage of variance explained by the clusters is computed.
    By plotting the graph of the number of clusters against the explained variance,
    an elbow can be defined, where adding more classes will result in a marginal gain.
    By finding the elbow, one can define the number of classes needed for the clustering.
    Another widely used metric to evaluate a result is the Calinski-Harabasz (CH)
    index (Calinski & Harabasz, 1974), which is defined as variance ratio, i.e., the
    ratio between the overall between-cluster variance and the inter-cluster variance
    for all clusters. By computing the Calinski-Harabasz index, one can verify the
    quality of a clusterisation, where a higher value indicates that a model has better-defined
    clusters. Other methods for clustering evaluation include plotting the silhouette
    of a model (Rousseeuw, 1987) or computing the Davies-Bouldin index (Davies & Bouldin,
    1979). 2.4. Supervised classification algorithms Due to the nature of some clustering
    algorithms, they can only cluster a group of data, and cannot predict to which
    group a new data sample belongs. Both spectral and hierarchical clustering and
    DBSCAN do not perform prediction by themselves: they are used to cluster one dataset,
    creating a clustered dataset (one with the data and the clusters to which they
    belong). To be able to predict to which cluster a new sample belongs, a second
    algorithm is needed. This is a supervised classification algorithm that is used
    to learn, from the clustered training data, the model that will allow to predict
    the class of a new sample. Any classification algorithm can be used, but two algorithms
    are usually selected to perform the prediction stage: the k-NN and the decision
    tree, presented below. 2.4.1. K-nearest neighbours (k-NN) The k-nearest-neighbours
    (k-NN) (Altman, 1992) algorithm is a machine learning algorithm used to classify
    new data samples into categories. It computes the Euclidean distance between the
    values of a new data sample with other previously classified samples to find the
    k samples closer to the new data sample. Thus, the algorithm classifies the new
    data samples, according to the most often k nearest neighbours. The underlying
    assumption is that objects close to each other have a higher probability of belonging
    to the same category. Therefore, this estimation allows us to identify the category
    to which the new data sample belongs. 2.4.2. Decision trees Decision trees (Murthy,
    1998; Quinlan, 1986) can be used to predict the class to which a data sample belongs
    by following the decisions in the tree from the root node down to a leaf node,
    which contains the response. A binary decision tree is a tree where each decision
    creates 2 sub-nodes. To create a decision tree, the algorithms usually work in
    steps, where at each step they select a variable value that best splits the data.
    Several metrics can be used to define the best splitting variable These metrics
    are usually based on information theory, such as information gain and entropy.
    There are several advantages for using decision trees: they are straightforward
    to build, they are understandable because they are close to the way humans make
    decisions, they require little data preparation, and they perform well in large
    datasets. One drawback is that learning the optimal decision tree is known to
    be an NP-complete problem. 2.5. Data compression techniques As in smart agriculture,
    the values collected by sensors can be redundant. Using a compression algorithm
    will allow the fog to maintain a smaller amount of data in the fog database. 2.5.1.
    Run-length encoding (RLE) Run-length encoding (RLE) (Salomon & Motta, 2009) is
    a data compression technique that preserves the order of data values, which makes
    it possible to recover the data in the original order. In other words, when RLE
    is applied in a data time series, it is possible to recover the order of the events
    that occurred in the time series. RLE is a lossless technique that creates, from
    an original dataset, a new dataset in which a sequence of samples with the same
    value is replaced by the value and the number of times the value appears in the
    sequence. 2.5.2. Huffman encoding The Huffman encoding (Huffman, 1952; Salomon
    & Motta, 2009) is an algorithm that creates a variable-length code table to encode
    the symbols of a data source. It used the probability of occurrence of each symbol
    in the source to define codes with fewer bits for the symbols that happen the
    most in the dataset. In this way, more used symbols will be coded with fewer bits
    than symbols that are used less. As the codes used are uniquely decodable, this
    method can be used to create lossless compression that also enables to recover
    of data in the original order they are generated. This kind of encoding is known
    to be optimal for symbol coding if the probability distribution of the symbols
    in the original dataset is known. 3. Related work The use of machine learning
    (ML) in IoT, fog and edge is a challenging problem. The ML algorithms usually
    focus on IoT security (Ahmad & Alsmadi, 2021; Tahsien et al., 2020) and detection
    of intrusion and attacks (Saravanan et al., 2021) or focus on improving the network
    structure, as surveyed by Cui et al. (2018). Some studies reporting benefits of
    fog computing in IoT: e.g. Li et al. (2015) showed that an IoT system''s time
    to respond drops by 73% when fog analyses data locally against a cloud. The fog
    can also reduce the cloud sending data by 93%, as shown in research by (Gia et
    al., 2015). The TW-IoT Framework provides trustworthiness at the data level for
    mist and fog-based IoT systems, proposing a mechanism to deal with data reduction
    using machine learning (Junior and Kamienski, 2021). Li et al. (2018) introduces
    the use of ML for IoT into the edge computing environment to improve learning
    performance as well as to reduce network traffic. Some studies evaluated lossless
    compression techniques to an edge/fog-based IoT system. Gia et al. (2019) assessed
    four lossless algorithms for different edge devices and perceived the Zstandard
    algorithm has a higher compression rate. Spiegel et al. (2018) propose a variation
    of the RLE algorithm to reduce the data and saves energy for IoT devices. Routray
    et al. (2020) presented a comparison between different compression algorithms
    and mentioned which algorithm meets concerns network constraints in an edge-based
    IoT system. However, these studies do not consider real scenarios and device scalability
    since, in real applications, IoT deals with thousands of data. The use of intelligent
    systems for environmental applications is a growing trend, which is receiving
    attention due to the rise of new artificial intelligence (AI) techniques in recent
    years, being the focus of a special issue of the Biosystems Engineering Journal
    recently (Soriano-Disla & Munoz, 2019), with a number of articles related to this
    work: Reza et al. (2019) used the k-means algorithm to estimate rice crop yields
    from low altitude RGB images collected using a rotary-wing type UAV. The k-means
    clustering was combined with a graph-cut algorithm to segment the rice grain areas
    based on colour information. The results from this method can segment the grain
    areas with a relative error of 6% to −33%, a 30% improvement from the previous
    method. Senent-Aparicio et al. (2019) used machine learning for prediction of
    instantaneous peak flow, combining the soil and water assessment tool (SWAT) simulation
    and four time-series AI techniques: artificial neural network (ANN), adaptive
    neuro-fuzzy inference system (ANFIS), support vector machine (SVM) and extreme
    learning machine (ELM). Results showed that the ELM was the best technique for
    this estimation. González García et al. (2019) also used the ELM approach, to
    predict the absorption of pharmaceuticals in reclaimed water-irrigated lettuces
    by analysing effluent. González Perea et al. (2019) also addressed a water related
    problem, using a combination of ANN, Bayesian reasoning and Genetic algorithms
    to forecast daily irrigation water demand with limited data. Finally, Wang et
    al. (2019) proposed an approach based on multivariate timing-random deep belief
    networks for algal bloom prediction accuracy and Supriyanto et al. (2019) made
    use of a multilayer backpropagation neural network for estimating growth of polyculture
    microalgae using 553 datasets collected from semi-continuous open raceway pond.
    Because of the low computational power available in IoT devices, many studies
    have focussed on the efficiency and energy consumption of these algorithms. For
    example, Azar et al. (2019) proposed an energy-efficient approach for IoT data
    collection that made use of an error-bounded lossy compressor on the collected
    data prior to transmission from the device. Then, the transmitted data is rebuilt
    on an edge node and processed using supervised machine learning techniques. Shafique
    et al. (2018) give an overview of designing efficient, reliable, secure and scalable
    machine learning architectures for IoT devices. The role of IoT in agriculture
    is beyond the scope of this literature review, as it has grown enormously in recent
    years, and several reviews are available (Farooq et al., 2019; Sarkar & Chanagala,
    2016; Zhao et al., 2010). Zamora-Izquierdo et al. (2019) developed a low-cost
    hardware and software platform for soilless culture in full recirculation greenhouses.
    The proposed system consists of a three-tier open-source software platform. At
    the local level, it interacts with IoT devices to gather data and perform real-time
    control actions. At the edge level, it monitors precision agriculture tasks to
    increase reliability against network failures. In the cloud, it collects records
    and performs data analytics. IoT technologies such as FIWARE and MQTT are employed,
    and a prototype was tested, allowing farmers to control a hydroponic system through
    the platform. However, the use of IoT combined with ML techniques for agricultural
    problems is a more recent trend. Shamshiri et al. (2020) present an application
    of IoT for model-based evaluation of microclimate parameters inside greenhouse
    crop production systems. The proposed system uses a custom-built wireless sensor
    for data fusion to evaluate comfort ratio values associated with different growth
    stages that uses raw data, including air temperature, relative humidity, vapor
    pressure deficit, and solar radiation. This work also presents a survey on the
    application of IoT-based greenhouse monitoring. Patil and Thorat (2016) developed
    a monitoring system that identifies grape diseases by using a hidden Markov model,
    with temperature, relative humidity, moisture, leaf wetness IoT sensors. As it
    can be seen, ML is not used on the device to reduce the data transmission, as
    in the case of our approach. Despite fog-based data filters can obtain gains,
    it is still challenging to find a solution that can cover different IoT scenarios,
    such as a farm irrigation scenario. Therefore, dealing with fog data-level communication
    is a research challenge (Atlam et al., 2018). 4. Fog data filter Our approach
    uses fog computing in IoT smart agriculture, where sensors collect data and fog
    nodes store, analyse, filter, and finally transmit it to the cloud, as depicted
    by Fig. 2 (Junior and Kamienski, 2021). Our fog data filter focuses on data filtering
    in the fog, reducing data size and traffic between fog and cloud. Download : Download
    high-res image (287KB) Download : Download full-size image Fig. 2. Conceptual
    fog data flow to smart agriculture. The data flow (Fig. 2) works as follows: the
    sensors collect data from a farm parcel and send it to the fog. The data arrives
    in the fog through a network server, transferring the raw data to the data storage
    module and, in turn, to the data analytics module. Next, the data analytics module
    analyses the raw data to make decisions. Then, it stores the decisions in fog
    memory and sends the decisions to actuators to irrigate a crop. Finally, the data
    storage module keeps data in memory, providing access to past decisions and filtered
    data to the analytics module. Furthermore, the data storage module provides the
    raw data periodically to the fog data filter. After a specific period, the fog
    filters the (old) raw data stored, classifies it, deletes this (old) raw data
    from memory and sends the classified data to the cloud via the Message Queuing
    Telemetry Transport (MQTT protocol). Thus, the cloud may need (in the future)
    to perform an analysis with historical classified data. Therefore, the system
    operates processing the data locally, with no required cloud action. In a real
    farm setting, the sensors send data via LoRa packets to the fog, containing air
    temperature, air humidity, and soil moisture. On the other hand, the fog typically
    hosts different software modules, such as data analytics, data storage, data filtering,
    and the Long-Range Wide Area Network (LoRaWAN) server, such as ChirpStack1 (Fig.
    2). The use of LoRaWAN in smart agriculture has many advantages, such as providing
    security to the data communication channel, extending sensor battery lifetime,
    and providing a long-range distance in the transmission between the sensors and
    the fog (Elijah et al., 2018; Mekala & Viswanathan, 2017). The fog data filter
    uses an unsupervised machine learning data clustering algorithm and a data compression
    technique to compress each classified data register in chronological order to
    preserve the time-series nature of the data categories. The choice between the
    machine learning algorithm and the compression algorithm is the subject of this
    paper. The fog filter runs at time intervals initially defined by the application
    developer. Still, the fog may automatically configure this interval depending
    on the context or abrupt variations in the data patterns. With this approach,
    it could be expected that the amount of raw data transmission required would reduce.
    Our fog-based data filter approach has three advantages: (i) creating a new dataset
    for future decision-making based on the characteristics of the categories; (ii)
    decreasing the data traffic between fog and cloud; and (iii) reducing the data
    storage requirements in fog and cloud. The first advantage means the system can
    use a smaller dataset containing only the classes generated by the clustering
    algorithm to, for example, decide the precise amount of water to be spread in
    a crop, depending on the data classification. 5. Materials and methods This section
    presents the experiments conducted to evaluate clustering algorithms and their
    combination with data compression algorithms in three sections: firstly, the experiments
    with clustering algorithms are described; secondly, the algorithms are evaluated;
    thirdly, the data compression methods used in the previously clustered data are
    presented. The fog experiments were carried out using MATLAB release 2021a, executed
    in a MacBook Pro computer with a 2,8 GHz Intel Core i7 Quad-Core processor and
    16 GB 2133 MHz LPDDR3 RAM memory. 5.1. Datasets Two agricultural datasets collected
    in Spain were used in our experiments. • Soria Dataset: Our first dataset has
    30 days of air humidity and temperature collected in Cuerda del Pozo, Soria, Spain
    (Aguilar, 2014), in the Summer of 2013. Each weather record refers to 1 min of
    collected data, which means 1440 samples every day. These data were collected
    using a Vaisala weather transmitter WXT-520 (Aguilar, 2017). • Cartagena Dataset:
    Our second dataset was acquired by us in Cartagena, Spain (Kamienski et al., 2018),
    and consists of 1561 samples acquired with a 5-min interval in the Spring of 2020.
    Samples consist of three measurements of soil temperature and moisture at three
    different depths. Our choice for the Soria and Cartagena datasets aimed at validating
    that our approach independently of weather, location, farm, and metrics. While
    the Soria dataset has air temperature and air humidity, the Cartagena dataset
    had soil temperature and moisture in three soil depths. Also, both datasets cover
    different periods of the year and based in distinct locations. 5.2. Machine learning
    techniques Using the datasets introduced in previous subsection, we executed different
    machine learning classification methods described in Section 2: k-means, hierarchical
    classification, spectral classification, GMM, DBSCAN. As described in section
    2, since some clustering algorithms can only group existing samples of a dataset
    into a cluster and need a second algorithm to learn the model for predicting the
    group of new data samples. In theory, the prediction algorithm can be any supervised
    learning classification method, trained with the dataset resulting from the unsupervised
    clustering algorithm. Out of our five algorithms, spectral, hierarchical and DBSCAN
    clustering do not perform prediction by themselves. We tested the most used classification
    algorithms, namely the binary decision tree, k-NN, linear discriminant (Fisher,
    1936), quadratic Discriminant (Hastie et al., 2009), Naïve Bayes (Lewis, 1998),
    Linear SVM (Cortes & Vapnik, 1995), ensemble of boosted trees (Hastie et al.,
    2009) and an ANN (Haykin, 2009) with 1 hidden layer, 10 hidden units using Rectified
    Linear Unit (ReLU) activation function. The classification algorithms used data
    generated by the tree clustering algorithms. 5.3. Experiments The Soria dataset
    has a training phase for each algorithm covering 20 days of data (i.e., 28,800
    samples) and a testing phase with 10 days (14,400 samples). Samples are normalised
    before clustering, and relevant parameters include: • Replications: each experiment
    is replicated 50 times to ensure the convergence to the optimal clustering, avoiding
    any influence from the initial parameters. • Iterations: the maximum number of
    iterations for the k-means and GMM algorithms is 1000. • Distance: the Squared
    Euclidean method defines the distance between points. After the experiments with
    the Soria Dataset, we applied our fog-based data filter to the Cartagena Dataset
    for verifying the generality of our results, i.e., if the proposed techniques
    apply to different contexts. The Cartagena dataset differs from the previous one
    in two aspects. First, it has a reduced number of samples, and second, it has
    six dimensions for three measurements of soil moisture and temperature in three
    different depths reached by the soil sensor. In these experiments, we used k-means,
    GMM, Hierarchical and spectral clustering for data compression. For Cartagena,
    we do not present results for DBSCAN because the nature and pattern of the data
    made it classify all samples into only one class, regardless of the parameters
    used. 6. Results In this section, the results of the experiments with the Soria
    and Cartagena datasets are presented. 6.1. Clustering experiments: Soria dataset
    For the DBSCAN algorithm, an empirical evaluation was performed to define the
    vicinity of a point ɛ and the minimum number of the neighbours’ points. To estimate
    the value of these parameters, we plot a graph of distance to the kth nearest
    point versus sorted points against this distance. This chart has an elbow, which
    corresponds to the region where points begin to be classified as outliers, as
    depicted by Fig. 3. We can observe that the elbow corresponds approximately to
    ɛ is between 0.1 and 0.2, and the minimum number of neighbours points as 200.
    After some testing, ɛ = 0.1 produced the best results, while ɛ = 0.2 produced
    only one class. Download : Download high-res image (178KB) Download : Download
    full-size image Fig. 3. Elbow method to decide the DBSCAN ɛ parameter. Table 1
    shows the accuracy of classification algorithms for learning the model for spectral,
    hierarchical and DBSCAN clustering (section 5.2). From this evaluation, it was
    decided to use the k-NN and binary decision tree, with an accuracy higher than
    99% and speedy prediction times. Therefore, three clustering algorithms (spectral,
    hierarchical and DBSCAN) were tested using k-NN with k = 1 and Euclidean distance
    and binary tree, giving very similar results. Table 1. Accuracy of classification
    algorithms for learning the model for Spectral and Hierarchical and DBSCAN clustering.
    Trained on the result of clustering of 20 days of data. Results for 10 classes
    - except for DBSCAN that uses 9 classes. Classification Hierarchical Spectral
    DBSCAN Decision Tree 99.3 99.0 97.1 k-Nearest Neighbour 99.8 99.6 97.1 Linear
    Discriminant 89.4 95.3 96.1 Quadratic Discriminant 92.8 97.3 97.6 Naïve Bayes
    94.7 96.3 96.5 Support Vector Machine 93.7 98.3 99.8 Ensemble 94.4 94.8 94.3 Artificial
    Neural Network 95.5 99.0 99.9 Fig. 4, Fig. 5, Fig. 6, Fig. 7 show the result of
    the classification, i.e., the plot of the test dataset labelled with classes (in
    several colours), for 5, 10 and 15 clusters. Figure 8 shows the classification
    results for the DBSCAN algorithm, which is not dependent on a predefined number
    of classes. Download : Download high-res image (935KB) Download : Download full-size
    image Fig. 4. k-means classification for 5, 10 and 15 classes. Download : Download
    high-res image (734KB) Download : Download full-size image Fig. 5. Hierarchical
    Tree classification for 5, 10 and 15 classes. Download : Download high-res image
    (641KB) Download : Download full-size image Fig. 6. Spectral classification for
    5, 10 and 15 classes. Download : Download high-res image (935KB) Download : Download
    full-size image Fig. 7. Gaussian Mixture Models classification for 5, 10 and 15
    classes. Download : Download high-res image (304KB) Download : Download full-size
    image Fig. 8. The result of DBSCAN classification. As it does not use as input
    parameter the number of classes, but this number is decided by the algorithm,
    there is only one figure, with 9 classes, plus red points that were classified
    as outliers. (For interpretation of the references to colour in this figure legend,
    the reader is referred to the Web version of this article.) From Fig. 4, Fig.
    5, Fig. 6 it is possible to see that k-means, hierarchical, and spectral clustering,
    although using different clustering approaches, produce very similar results.
    The main difference is that for k-means, the boundary of the classes is straight
    lines, forming a Voronoi diagram of the points, calculated using the centroids.
    The boundaries are irregular for the hierarchical and spectral clustering, although
    the borders of the spectral clustering tend to be curved. From Fig. 7, Fig. 8,
    it can be seen that neither the GMM nor DBSCAN creates a uniform clustering. 6.1.1.
    Evaluating clustering solutions The clusters created by the five algorithms were
    further analysed using the Elbow Method and the Calinski-Harabasz Index (section
    2). Figure 9 shows the result of the elbow method, where it can be observed that
    the optimal number of classes is near k = 5. Figure 10 shows the results for the
    Calinski-Harabasz index (CH), revealing that for k-means and hierarchical clustering,
    the optimal number of classes is 4, while for spectral clustering, it is around
    10. The results for the GMM show that it is not an adequate model for our fog
    data filter, as the CH values are lower than the values for the other algorithms,
    and it varies, having several peaks and valleys. Download : Download high-res
    image (201KB) Download : Download full-size image Fig. 9. Elbow method to decide
    the number of clusters. Download : Download high-res image (272KB) Download :
    Download full-size image Fig. 10. CH method to decide the number of clusters.
    Another important measure that must be computed to verify the quality of the clustering
    solution, is the percentage error that using one clustering solution introduces
    in the data, after transmission. This measure reflects the fidelity of the transmitted
    data, and it can be computed measuring the distance between one sample point to
    the centre of the cluster that represents it, divided by the value of the sample
    (2). (2) Figure 11 presents the result of computing this error for the two variables
    of the Soria dataset testing phase within 10 days (14,400 samples dataset), using
    the clusters created by the K-means algorithm. As it can be seen, the larger the
    number of clusters, the smaller the error. But it also can be seen that after
    a certain number, the gain in having more clusters is not relevant, and just like
    in Fig. 10, one can see that 10 clusters are a good choice. This figure was made
    using the K-means algorithm, but one can see that the hierarchical tree and spectral
    analysis algorithms will perform in a similar way. DBSCAN and Gaussian Mixtures
    will perform worst, as clusters are less homogeneous. Download : Download high-res
    image (155KB) Download : Download full-size image Fig. 11. Percentage error for
    the K-means algorithm. 6.1.2. Evaluating compression solutions To evaluate the
    two compression algorithms described in section 2, a file was created with 10
    days of clustered data for each clustering algorithm. These files were then split
    into 10 individual files, each for one day''s worth of data and processed by the
    RLE and the Huffman encoding algorithms, resulting in encoded files with reduced
    size. Results presented in Table 2, Table 3 show the mean and standard deviation
    value of 10 codifications. The values show the generated file size compared to
    the original file size, in percentage: that means, as each original data file
    has 11,520 bytes (1440 samples of two 4-byte floating-point values), if the final
    mean has 1152 bytes, the table presents a value of 10%. It is worth noting that
    while the original files had two floating-point values (four bytes) for each sample,
    the compressed file uses two short integers (two bytes) for storing the resulting
    code. Table 2. Result of the use of classifiers and RLE algorithm. The values
    show the size of the generated file compared to the original file size, in percentage
    (%). Results are the mean and standard deviation values of 10 classifications
    (For the DBSCAN algorithm there is only one result for 9 classes + outliers).
    Classifier k = 5 k = 10 k = 15 k-means (2.4 ± 0.7) (3.9 ± 0.9) (5.3 ± 1.6) GMM
    (4.3 ± 2.6) (7.1 ± 3.3) (7.3 ± 2.7) Hierarchical + k-NN (2.5 ± 1.0) (4.8 ± 1.6)
    (6.1 ± 1.9) Hierarchical + Tree (2.4 ± 1.0) (4.7 ± 1.5) (6.1 ± 1.7) Spectral +
    k-NN (2.2 ± 0.6) (4.7 ± 0.9) (6.1 ± 1.5) Spectral + Tree (2.2 ± 0.5) (4.8 ± 1.0)
    (5.8 ± 1.5) DBSCAN + k-NN (5.1 ± 2.13) DBSCAN + Tree (5.5 ± 2.48) Table 3. Result
    of the use of classifiers and Huffman algorithm. The values show the size of the
    generated file compared to the original file size, in percentage (%). Results
    are the mean and standard deviation value of 10 classifications. For the DBSCAN
    algorithm there is only one result for 9 classes + outliers). Classifier k = 5
    k = 10 k = 15 k-means (3.6 ± 0.2) (5.2 ± 0.2) (6.1 ± 0.2) Gaussian MM (3.3 ± 0.2)
    (4.2 ± 0.4) (5.2 ± 0.3) Hierarchical + k-NN (3.6 ± 0.3) (5.1 ± 0.3) (6.0 ± 0.4)
    Hierarchical + Tree (3.6 ± 0.3) (5.2 ± 0.3) (6.0 ± 0.4) Spectral + k-NN (3.4 ±
    0.2) (5.0 ± 0.3) (6.0 ± 0.4) Spectral + Tree (3.4 ± 0.2) (5.0 ± 0.3) (6.0 ± 0.4)
    DBSCAN + k-NN (3.2 ± 0.61) DBSCAN + Tree (3.3 ± 0.65) From Table 2, Table 3, it
    can be seen that a combination of k-means and RLE renders the higher compression
    rate. For k = 5, it produces results similar to Hierarchical and Spectral clustering,
    both using k-NN or Decision Trees. However, it is better for a larger number of
    classes. An ANOVA (Fisher, 1925; Freedman, 2005) statistical test was performed
    on the results in Table 2, and it showed that there were algorithms that have
    significant differences among them for k = 5 and k = 10. For k = 15, the p-value
    was 0.1515, meaning that there was no statistically significant difference among
    them. To complete the statistical analysis, a pairwise Student t-test was performed
    (Freedman, 2005; Gosset, 1908) between all algorithms in Table 2, which have the
    results for the RLE encoding. (For simplicity, only hierarchical, spectral and
    DBSCAN algorithms + Decision Tree, were chosen as the results using k-NN and decision
    tree were identical). The results of this pairwise comparison is presented in
    Table 4, showing the p-value for all the comparisons. A p-value higher than 0.05
    indicates that there is a statistically significant difference between the two
    algorithms. As it can be observed, for k = 5 and k = 10, k-means performs better
    than GMM and DBSCAN, and have the same performance as hierarchical and spectral
    clustering algorithms. For k = 15 there is no statistically significant difference
    among them. Table 4. Student t test pairwise of the use of classifiers and RLE
    algorithm. Classifier k = 5 k = 10 k = 15 k-means vs GMM 0.1172 0.0096 0.2098
    k-means vs Hierarchical 1.0000 0.9068 0.9071 k-means vs Spectral 0.9990 0.8640
    0.9823 k-means vs DBSCAN 0.0089 0.6907 0.9995 GMM vs Hierarchical 0.1172 0.0862
    0.6914 GMM vs Spectral 0.0660 0.1092 0.4883 GMM vs DBSCAN 0.8365 0.2090 0.1377
    Hierarchical vs Spectral 0.9990 1.0000 0.9975 Hierarchical vs DBSCAN 0.0089 0.9923
    0.8133 Spectral vs DBSCAN 0.0042 0.9975 0.9408 Another conclusion deduced from
    both tables is that the RLE encoding performs better than Huffman encoding for
    all algorithms with uniform data distribution. The Huffman encoding produces a
    better result for the GMM and DBSCAN, mainly because the classes have different
    sizes. The Student T-test performed on the results is presented in both tables,
    and for every comparison between RLE and Huffman, the null hypotheses were rejected,
    meaning that results are statistically different. Table 5 shows the time needed
    to predict the data package in milliseconds (ms). This result is for a data package
    with 2880 bytes in a MacBook Pro computer with a 2,8 GHz Intel Core i7 Quad-Core
    processor and 16 GB 2133 MHz LPDDR3 RAM. Even though these values may be lower
    than those obtained using constrained resource hardware in the field, they are
    still helpful to compare the time spent by each algorithm. As expected, the k-means
    algorithm is the fastest one for all numbers of classes. Results are the mean
    value of 10 classifications. Table 5. Prediction time for each classifier (in
    ms). Results are the mean value of 10 classifications. Classifier k = 5 k = 10
    k = 15 k-means 0.07 0.13 0.16 Gaussian MM 0.27 0.38 0.54 Hierarchical + k-NN 78.6
    70.9 68.5 Hierarchical + Tree 0.38 1.54 0.59 Spectral + k-NN 72.8 74.3 68.7 Spectral
    + Tree 0.54 0.34 0.61 DBSCAN + k-NN k = 9 75.5 DBSCAN + Tree k = 9 0.04 6.1.3.
    Evaluating the scalability of the proposed approach The Soria dataset was augmented
    to evaluate the scalability of the proposed approach. Augmentation (van Dyk &
    Meng, 2001) is a common method in data science, in which new data is synthesised
    based on existing real data. In our problem, a new dataset was created with 1000
    sensors, using the Soria dataset as the baseline, and creating new data for the
    sensors by generating 1000 data points every minute in the Soria dataset, following
    a fitted Gaussian distribution, using a random noise with variance equal to 0.1,
    similar as (Ribeiro Junior & Kamienski, 2021). Figure 12 presents the new dataset,
    with 1000 data records per minute. Download : Download high-res image (164KB)
    Download : Download full-size image Fig. 12. The Augmented Soria Dataset, with
    1000 sensors. Using this dataset, the scalability of the approach was verified,
    by measuring the computational costs of learning the clusters, of predicting to
    which cluster one sample belongs and of encoding the clustered results with the
    RLE algorithm. Figure 13 shows the computational cost, i.e., the time the algorithm
    takes to learn how to cluster one set of data using the K-means algorithm, with
    K = 5. The same data described in section 5.3 was used, that is, the training
    phase covers 20 days of data (i.e., 28,800 samples) and a testing phase with 10
    days (14,400 samples). The number of sensors was varied from 100 to 1000. This
    figure presents two lines, one for the learning cost when we do not allow for
    any parallelisation optimisation, which is how it might operate in a low power
    IoT node, and another one that allows the code to make use of Intel processors
    advanced vector extensions (AVE), which exist on every Intel or AMD CPU since
    2011, which are the computers that are likely collect data prior to sending to
    the cloud. By using this vector optimisation, data from the sensors are treated
    simultaneously, leading to a lower computational cost. It can be seen in these
    figures that the time is linear, and as learning is not done frequently, the times
    presented in the figure allows for the learning of data situations of thousands
    of sensors. Download : Download high-res image (147KB) Download : Download full-size
    image Fig. 13. The learning time for the Augmented Soria Dataset, with 1000 sensors.
    Figure 14 shows the prediction time for the same situation: the K-means algorithm
    with 5 classes. The prediction time is the time needed to decide to which cluster
    one sample belongs. As it can be seen, the prediction can also be done in a sequential
    manner and in parallel, using vector instructions. It is possible to see that
    the time also grows in a linear manner with the number of sensors, and that 1000
    sensors can be easily treated during the 60 s that exists between two samples.
    Download : Download high-res image (158KB) Download : Download full-size image
    Fig. 14. Prediction time for the Augmented Soria Dataset, with 1000 sensors. Figure
    15 shows the encoding time using the run-length encoding (RLE) algorithm. It can
    be seen that the encoding time also raises in a linear manner, and that it is
    very low. The time complexity of the RLE solution is O(n), where n is the length
    of the input string. Download : Download high-res image (124KB) Download : Download
    full-size image Fig. 15. The encoding time for the Augmented Soria Dataset, with
    1000 sensors. The use of memory by the K-means algorithm also grows linearly with
    the number of sensors, as to be able to create the clusters, this algorithm uses
    only the data set and a vector of distances to the cluster centre. It is well
    known in literature that this algorithm depends linearly on the number of samples,
    the number of dimensions of the samples and the number of clusters (Hartigan &
    Wong, 1979). Finally, the running time of the K-means algorithm for different
    values of K was established. These values are shown in Fig. 16. As it can be seen,
    the growing number of clusters does not increase the learning time (as it should
    be, because the learning time does not depend on the number of classes). Download
    : Download high-res image (112KB) Download : Download full-size image Fig. 16.
    The learning time for the Augmented Soria Dataset, with 1000 sensors, for different
    number of classes. Finally, in this section only the results using the K-means
    algorithm are presented, as it has been shown in previous results that it is the
    most promising algorithm to be used in the fog filter. But it must be noted that
    the same procedure was carried out with all other algorithms, with very similar
    results. 6.2. Clustering experiments: Cartagena Dataset Figure 17 shows that the
    clusters created by k-means are similar for the three levels of soil depth, clustering
    data into six dimensions. Results for data compression achieved by the algorithms
    are presented in Table 6, Table 7. Download : Download high-res image (418KB)
    Download : Download full-size image Fig. 17. k-means classification for Higher,
    Middle and Lower sensor in probes of Cartagena Dataset. Table 6. Result of the
    use of classifiers and RLE algorithm for the Cartagena Dataset. The values show
    the size of the generated file compared to the original file size, in percentage.
    Results are the mean and standard deviation values of 10 classifications. Classifier
    k = 5 k = 10 k = 15 k-means (3.1 ± 3.0) (2.6 ± 1.5) (3.3 ± 3.0) Gaussian MM (3.6
    ± 2.2) (3.3 ± 2.5) (6.1 ± 5.3) Hierarchical + k-NN (2.8 ± 2.2) (3.1 ± 2.0) (4.2
    ± 3.3) Hierarchical + Tree (3.1 ± 1.7) (6.1 ± 6.0) (3.6 ± 3.7) Spectral + k-NN
    (1.9 ± 1.7) (2.9 ± 2.1) (4.0 ± 3.0) Spectral + Tree (1.4 ± 0.01) (4.4 ± 4.9) (4.3
    ± 3.4) Table 7. Result of the use of classifiers and Huffman algorithm for the
    Cartagena Dataset. The values show the size of the generated file compared to
    the original file, in percentage. Results are the mean and standard deviation
    values of 10 classifications. Classifier k = 5 k = 10 k = 15 k-means (3.3 ± 0.6)
    (5.1 ± 0.6) (6.0 ± 0.7) Gaussian MM (3.2 ± 0.1) (4.8 ± 0.3) (7.2 ± 0.6) Hierarchical
    + k-NN (3.3 ± 0.4) (5.1 ± 0.12) (6.4 ± 0.3) Hierarchical + Tree (3.4 ± 0.4) (5.1
    ± 0.9) (6.4 ± 0.3) Spectral + k-NN (1.6 ± 0.3) (3.8 ± 0.6) (5.2 ± 0.7) Spectral
    + Tree (1.6 ± 0.01) (4.1 ± 0.7) (5.7 ± 0.8) In Fig. 17, it was observed that the
    Cartagena dataset was not as well-defined as the Soria dataset groups because
    the Cartagena dataset had only 1562 records (against 44 thousand records in the
    Soria dataset). Also, Cartagena created different groups for the higher, middle,
    and lower sensor probes. Cartagena has six data dimensions (three for soil moisture
    and three for soil temperature) so that each soil depth can refer to one category.
    In order to facilitate replication of these results and encourage the development
    of similar approaches, the software and datasets used in this paper are available
    for download at: https://github.com/reinaldobianchi/SWAMP. 7. Discussion In this
    study, evidence is presented that with the dataset of Soria, RLE presented a better
    compression than Huffman in all but one situation. It was perceived that for the
    Soria dataset, the data reduction for Huffman and RLE encoding present a statistical
    tie when k = 15 for all classifiers. It was observed that for the Cartagena dataset,
    RLE and Huffman encoding were statistically tied in most cases. However, this
    may happen because the Cartagena dataset contains fewer data records than the
    Soria dataset for the same period, which means RLE joins less similar data. It
    may be evidence that RLE is most suitable for an IoT smart agriculture scenario
    with thousands of sensors. Based on our results, we perceive the K-means algorithm
    combined with RLE as the best filtering method, where the fog needs to store and
    transfer to the fog between 3% and 6% of the data on average. Also, this combination
    executes faster for all numbers of classes. However, it was observed that k-means,
    Hierarchical + k-NN, Hierarchical + Tree, Spectral + k-NN, and Spectral + Tree
    classifiers presented a statistical tie. Also, the Hierarchical Trees and Spectral
    clustering yielded positive results, but with prediction times at least three
    times higher than k-means. GMM and DBSCAN are not suitable for this application
    because the clusters created do not represent a homogeneous division of the data
    or a grouping representing any characteristic from the real world. DBSCAN has
    a more severe problem, as it classifies as outliers a large portion of the dataset.
    Based on the fact that GMM rely on clusters being described as Gaussians, which
    is not the case of our data, it is not a surprise that it did not provide a reasonable
    classification. An important finding was that DBSCAN also did not result in an
    adequate model: it is believed that this density-based algorithm would detect
    areas with more points and thus separate the results into more real-world, meaningful
    classes. It was noted that despite RLE having better data reduction, the different
    classifiers present statistical ties, indicating that the use of a classifier
    as a fog data filter may depend on input data. Therefore, depending on the context,
    the fog needs to analyse which classifier should combine with RLE autonomously.
    Our work reveals the feasibility of reducing the amount of data in agriculture
    using machine learning in fog computing. However, our approach is a lossy data
    reduction approach and thus cannot recover the original data, if required, in
    some scenarios. The cloud also can execute our data reduction approach because
    fog computing has computational constraints to train data models. However, executing
    it on fog allows decreasing network traffic to the cloud and bandwidth costs.
    In an agriculture scenario, many sensors transmit similar air temperature, soil
    moisture, and humidity values. Our experiments show that our fog data filter reduces
    these redundant values into a category that represents them. Therefore, our fog
    data filter solution for agriculture addresses the challenges of managing a massive
    amount of data generated by sensors in IoT. Finally, our approach should reduce
    data for any agricultural dataset because it converges sensor measurements into
    categories. 8. Conclusion This paper proposes and evaluates a data reduction approach
    for fog computing in a smart agriculture context. A fog data filter solution was
    introduced to reduce the amount of data that the fog stores and transfers to the
    cloud. Our solution was evaluated using eight machine learning methods combined
    with run-length-encoding and Huffman encoding in two datasets. This revealed that
    k-means combined with RLE achieves the highest reduction, where the fog needs
    to store and transmit 3%–6% of the original data generated by sensors. As future
    work, we intend to evaluate these data reduction methods in a mist-fog-based IoT
    system, considering the mist and fog computational resources constraints. It is
    also planned to perform these experiments in a large-scale scenario where the
    fog receives data from thousands of sensors every hour, using a greenhouse context
    and different weather conditions. Funding This work was jointly funded by the
    European Commission in Europe and MCTIC/RNP in Brazil [grant number EUB-02-2017
    IoT Pilots call]; by the São Paulo Research Foundation - FAPESP [grant numbers
    2018/25225-9, 2019/07665-4]; by the Federal Institute of Education, Science and
    Technology of Maranhão (IFMA). Declaration of competing interest The authors declare
    that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. References
    Aguilar, 2014 F. Aguilar Press, temperature and humidity august 2013 Dryad, dataset
    (2014), 10.15146/R3730 Google Scholar Aguilar, 2017 F. Aguilar Data management
    in a cloud Framework: Application to the LifeWatch ESFRI PhD Thesis (2017), pp.
    16-20 available in: https://digital.csic.es/handle/10261/157765 View in ScopusGoogle
    Scholar Ahmad and Alsmadi, 2021 R. Ahmad, I. Alsmadi Machine learning approaches
    to IoT security: A systematic literature review Internet of Things, 14 (2021),
    p. 100365, 10.1016/j.iot.2021.100365 View PDFView articleView in ScopusGoogle
    Scholar Altman, 1992 N.S. Altman An introduction to kernel and nearest-neighbor
    nonparametric regression The American Statistician, 46 (1992), pp. 175-185, 10.1080/00031305.1992.10475879
    View in ScopusGoogle Scholar Arivazhagan and Natarajan, 2020 C. Arivazhagan, V.
    Natarajan A survey on fog computing paradigms, challenges and opportunities in
    iot 2020 international conference on communication and signal processing, ICCSP)
    (2020), pp. 385-389, 10.1109/ICCSP48568.2020.9182229 View in ScopusGoogle Scholar
    Atlam et al., 2018 H.F. Atlam, R.J. Walters, G.B. Wills Fog computing and the
    internet of things: A review Big Data and Cognitive Computing, 2 (2018), 10.3390/bdcc2020010
    Google Scholar Atzori et al., 2017 L. Atzori, A. Iera, G. Morabito Understanding
    the internet of things: Definition, potentials, and societal role of a fast evolving
    paradigm Ad Hoc Networks, 56 (2017), pp. 122-140, 10.1016/j.adhoc.2016.12.004
    View PDFView articleView in ScopusGoogle Scholar Azar et al., 2019 J. Azar, A.
    Makhoul, M. Barhamgi, R. Couturier An energy efficient IoT data compression approach
    for edge machine learning Future Generation Computer Systems, 96 (2019), pp. 168-175,
    10.1016/j.future.2019.02.005 View PDFView articleView in ScopusGoogle Scholar
    Calinski and Harabasz, 1974 T. Calinski, J. Harabasz A dendrite method for cluster
    analysis Communications in Statistics, 3 (1974), pp. 1-27, 10.1080/03610927408827101
    View in ScopusGoogle Scholar Chiang and Zhang, 2016 M. Chiang, T. Zhang Fog and
    iot: An overview of research opportunities IEEE Internet of Things Journal, 3
    (2016), pp. 854-864, 10.1109/JIOT.2016.2584538 View in ScopusGoogle Scholar Cortes
    and Vapnik, 1995 C. Cortes, V. Vapnik Support vector networks Machine Learning,
    20 (1995), pp. 273-297 View in ScopusGoogle Scholar Cui et al., 2018 L. Cui, S.
    Yang, F. Chen, Z. Ming, N. Lu, J. Qin A survey on application of machine learning
    for Internet of Things International Journal Machineries Learning Cybernetics,
    9 (2018), pp. 1399-1417, 10.1007/s13042-018-0834-5 View in ScopusGoogle Scholar
    Davies and Bouldin, 1979 D.L. Davies, D.W. Bouldin A cluster separation measure
    IEEE Transactions on Pattern Analysis and Machine Intelligence PAMI-, 1 (1979),
    pp. 224-227, 10.1109/TPAMI.1979.4766909 View in ScopusGoogle Scholar Elijah et
    al., 2018 O. Elijah, T.A. Rahman, I. Orikumhi, C.Y. Leow, M.N. Hindia An overview
    of internet of things (iot) and data analytics in agriculture: Benefits and challenges
    IEEE Internet of Things Journal, 5 (2018), pp. 3758-3773, 10.1109/JIOT.2018.2844296
    View in ScopusGoogle Scholar Ester et al., 1996 M. Ester, H.P. Kriegel, J. Sander,
    X. Xu A density-based algorithm for discovering clusters in large spatial databases
    with noise Proceedings of the second international conference on knowledge discovery
    and data mining, AAAI Press (1996), pp. 226-231 Google Scholar Farooq et al.,
    2019 M.S. Farooq, S. Riaz, A. Abid, K. Abid, M.A. Naeem A survey on the role of
    iot in agriculture for the implementation of smart farming IEEE Access, 7 (2019),
    pp. 156237-156271, 10.1109/ACCESS.2019.2949703 View in ScopusGoogle Scholar Fisher,
    1925 R. Fisher Statistical methods for research workers Edinburgh Oliver & Boyd
    (1925) Google Scholar Fisher, 1936 R.A. Fisher The use of multiple measurements
    in taxonomic problems Annals of Eugenics, 7 (1936), pp. 179-188, 10.1111/j.1469-1809.1936.tb02137.x
    Google Scholar Freedman, 2005 D. Freedman Statistical models: Theory and practice
    Cambridge University Press (2005) Google Scholar García et al., 2020 L. García,
    L. Parra, J.M. Jimenez, J. Lloret, P. Lorenz Iot-based smart irrigation systems:
    An overview on the recent trends on sensors and IoT systems for irrigation in
    precision agriculture Sensors, 20 (2020), 10.3390/s20041042 Google Scholar Gia
    et al., 2015 T.N. Gia, M. Jiang, A. Rahmani, T. Westerlund, P. Liljeberg, H. Tenhunen
    Fog computing in healthcare internet of things: A case study on ecg feature extraction
    2015 IEEE international conference on computer and information Technology; ubiquitous
    computing and communications; dependable, autonomic and secure computing, Pervasive
    Intelligence and Computing (2015), pp. 356-363, 10.1109/CIT/IUCC/DASC/PICOM.2015.51
    View in ScopusGoogle Scholar Gia et al., 2019 T.N. Gia, L. Qingqing, J.P. Queralta,
    H. Tenhunen, Z. Zou, T. Westerlund Lossless compression techniques in edge computing
    for mission-critical applications in the iot 2019 twelfth international conference
    on mobile computing and ubiquitous network, ICMU (2019), pp. 1-2, 10.23919/ICMU48249.2019.9006647
    Google Scholar González García et al., 2019 M. González García, C. Fernandez-López,
    A. Bueno-Crespo, R. Martínez-España Extreme learning machine-based prediction
    of uptake of pharmaceuticals in reclaimed water-irrigated lettuces in the region
    of murcia, Spain Biosystems Engineering, 177 (2019), pp. 78-89, 10.1016/j.biosystemseng.2018.09.006
    View PDFView articleView in ScopusGoogle Scholar González Perea et al., 2019 R.
    González Perea, E. Camacho Poyato, P. Montesinos, J.A. Rodríguez Díaz Optimisation
    of water demand forecasting by artificial intelligence with short data sets Biosystems
    Engineering, 177 (2019), pp. 59-66, 10.1016/j.biosystemseng.2018.03.011 View PDFView
    articleView in ScopusGoogle Scholar Gosset, 1908 W.S. Gosset The probable error
    of a mean Biometrika, 6 (1908), pp. 1-25, 10.2307/2331554 (originally published
    under the pseudonym “Student”) Google Scholar Hamming, 1950 R.W. Hamming Error
    detecting and error correcting codes The Bell System Technical Journal, 29 (1950),
    pp. 147-160, 10.1002/j.1538-7305.1950.tb00463.x Google Scholar Hartigan and Wong,
    1979 J.A. Hartigan, M.A. Wong Algorithm as 136: A k-means clustering algorithm
    Journal of the Royal Statistical Society: Series A C., 28 (1) (1979), pp. 100-108
    JSTOR 2346830 CrossRefView in ScopusGoogle Scholar Hastie et al., 2009 T. Hastie,
    R. Tibshirani, J. Friedman The elements of statistical learning: Data mining,
    inference, and prediction. Springer series in statistics Springer (2009) Google
    Scholar Haykin, 2009 S.S. Haykin Neural networks and learning machines (3rd ed.),
    Pearson Education, Upper Saddle River, NJ (2009) Google Scholar Huffman, 1952
    D.A. Huffman A method for the construction of minimum-redundancy codes Proceedings
    of the IRE, 40 (1952), pp. 1098-1101, 10.1109/JRPROC.1952.273898 View in ScopusGoogle
    Scholar Jain, 2010 A.K. Jain Data clustering: 50 years beyond k-means Pattern
    Recognition Letters, 31 (2010), pp. 651-666, 10.1016/j.patrec.2009.09.011 View
    PDFView articleView in ScopusGoogle Scholar Johnson, 1967 S.C. Johnson Hierarchical
    clustering schemes Psychometrika, 32 (1967), pp. 241-254 View in ScopusGoogle
    Scholar Junior and Kamienski, 2021 F.M.R. Junior, C.A. Kamienski A survey on trustworthiness
    for the internet of things IEEE Access, 9 (2021), pp. 42493-42514, 10.1109/ACCESS.2021.3066457
    View in ScopusGoogle Scholar Kamienski et al., 2019 C. Kamienski, J.P. Soininen,
    M. Taumberger, R. Dantas, A. Toscano, T. Salmon Cinotti, R. Filev Maia, A. Torre
    Neto Smart water management platform: Iot-based precision irrigation for agriculture
    Sensors, 19 (2019), p. 276 CrossRefView in ScopusGoogle Scholar Kamienski et al.,
    2018 C. Kamienski, J. Soininen, M. Taumberger, S. Fernandes, A. Toscano, T.S.
    Cinotti, R.F. Maia, A.T. Neto Swamp: An iot-based smart water management platform
    for precision irrigation in agriculture 2018 global Internet of things summit,
    GIoTS (2018), pp. 1-6, 10.1109/GIOTS.2018.8534541 View in ScopusGoogle Scholar
    Lewis, 1998 D.D. Lewis Naive bayes at forty: The independence assumption in information
    retrieval European conference on machine learning, Springer (1998), pp. 4-15 View
    in ScopusGoogle Scholar Li et al., 2015 J. Li, J. Jin, D. Yuan, M. Palaniswami,
    K. Moessner Ehopes: Data-centered fog platform for smart living 2015 international
    telecommunication networks and applications conference, ITNAC (2015), pp. 308-313,
    10.1109/ATNAC.2015.7366831 View in ScopusGoogle Scholar Li et al., 2018 H. Li,
    K. Ota, M. Dong Learning IoT in edge: Deep learning for the internet of things
    with edge computing IEEE Network, 32 (2018), pp. 96-101, 10.1109/MNET.2018.1700202
    Google Scholar MacQueen, 1967 J.B. MacQueen Some methods for classification and
    analysis of multi-variate observations L.M.L. Cam, J. Neyman (Eds.), Proc. Of
    the fifth berkeley symposium on mathematical statistics and probability, University
    of California Press (1967), pp. 281-297 Google Scholar Mahalanobis, 1936 P.C.
    Mahalanobis On the generalised distance in statistics Proceedings of the National
    Institute of Sciences of India, 2 (1936), p. 49—55 URL: http://ir.isical.ac.in/dspace/handle/1/1268
    Google Scholar Mekala and Viswanathan, 2017 M.S. Mekala, P. Viswanathan A survey:
    Smart agriculture iot with cloud computing 2017 international conference on microelectronic
    devices, circuits and systems, ICMDCS (2017), pp. 1-7, 10.1109/ICMDCS.2017.821155
    View in ScopusGoogle Scholar Mouradian et al., 2018 C. Mouradian, D. Naboulsi,
    S. Yangui, R.H. Glitho, M.J. Morrow, P.A. Polakos A comprehensive survey on fog
    computing: State-of-the-art and research challenges IEEE Communications Surveys
    Tutorials, 20 (2018), pp. 416-464, 10.1109/COMST.2017.2771153 View in ScopusGoogle
    Scholar Mukherjee et al., 2018 M. Mukherjee, L. Shu, D. Wang Survey of fog computing:
    Fundamental, network applications, and research challenges IEEE Communications
    Surveys Tutorials, 20 (2018), pp. 1826-1857, 10.1109/COMST.2018.2814571 View in
    ScopusGoogle Scholar Murthy, 1998 S.K. Murthy Automatic construction of decision
    trees from data: A multi-disciplinary survey Data Mining and Knowledge Discovery,
    2 (1998), pp. 345-389, 10.1023/A:1009744630224 URL: View in ScopusGoogle Scholar
    Ng et al., 2001 A. Ng, M. Jordan, Y. Weiss On spectral clustering: Analysis and
    an algorithm Advances in Neural Information Processing Systems, 14 (2001), pp.
    849-856 Google Scholar Patil and Thorat, 2016 S.S. Patil, S.A. Thorat Early detection
    of grapes diseases using machine learning and iot 2016 second international conference
    on cognitive computing and information processing, CCIP (2016), pp. 1-5, 10.1109/CCIP.2016.7802887
    Google Scholar Quinlan, 1986 J.R. Quinlan Induction of decision trees Machine
    Learning, 1 (1986), pp. 81-106, 10.1023/A:1022643204877 URL: View in ScopusGoogle
    Scholar Reynolds, 2009 D.A. Reynolds Gaussian mixture models Encyclopedia of Biometrics,
    741 (2009), pp. 659-663 CrossRefGoogle Scholar Reza et al., 2019 M.N. Reza, I.S.
    Na, S.W. Baek, K.H. Lee Rice yield estimation based on k-means clustering with
    graph-cut segmentation using low-altitude uav images Biosystems Engineering, 177
    (2019), pp. 109-121, 10.1016/j.biosystemseng.2018.09.014 View PDFView articleView
    in ScopusGoogle Scholar Ribeiro Junior and Kamienski, 2021 F.M. Ribeiro Junior,
    C.A. Kamienski Data resilience system for fog computing Computer Networks, 195
    (2021), p. 108218, 10.1016/j.comnet.2021.108218 ISSN 1389-1286 View PDFView articleView
    in ScopusGoogle Scholar Rousseeuw, 1987 P. Rousseeuw Silhouettes: A graphical
    aid to the interpretation and validation of cluster analysis Journal of Computational
    and Applied Mathematics, 20 (1987), pp. 53-65 View PDFView articleView in ScopusGoogle
    Scholar Routray et al., 2020 S.K. Routray, A. Javali, A. Sahoo, W. Semunigus,
    M. Pappa Lossless compression techniques for low bandwidth io ts 2020 Fourth international
    conference on I-SMAC (IoT in social, mobile, analytics and cloud) (I-SMAC) (2020),
    pp. 177-181, 10.1109/I-SMAC49090.2020.924345 View in ScopusGoogle Scholar Salomon
    and Motta, 2009 D. Salomon, G. Motta Handbook of data compression (5th ed.), Springer
    Publishing Company, Incorporated (2009) Google Scholar Saravanan et al., 2021
    L. Saravanan, H. Sharma, K. Sreenivasulu, M. Deivakani Detection of software intrusion
    based on machine learning techniques for iot systems Materials Today Proceedings
    (2021), 10.1016/j.matpr.2021.03.138 Google Scholar Sarkar and Chanagala, 2016
    P.J. Sarkar, S. Chanagala A survey on iot based digital agriculture monitoring
    system and their impact on optimal utilization of resources Journal of Electronics
    and Communication Engineering (IOSR-JECE), 11 (2016), pp. 1-4 CrossRefGoogle Scholar
    Senent-Aparicio et al., 2019 J. Senent-Aparicio, P. Jimeno-Sáez, A. Bueno-Crespo,
    J. Pérez-Sánchez, D. Pulido-Velázquez Coupling machine-learning techniques with
    swat model for instantaneous peak flow prediction Biosystems Engineering, 177
    (2019), pp. 67-77, 10.1016/j.biosystemseng.2018.04.022 View PDFView articleView
    in ScopusGoogle Scholar Shafique et al., 2018 M. Shafique, T. Theocharides, C.S.
    Bouganis, M.A. Hanif, F. Khalid, R. Hafız, S. Rehman An overview of next-generation
    architectures for machine learning: Roadmap, opportunities and challenges in the
    iot era 2018 design, automation test in Europe conference exhibition (DATE) (2018),
    pp. 827-832, 10.23919/DATE.2018.8342120 View in ScopusGoogle Scholar Shamshiri
    et al., 2020 R.R. Shamshiri, I. Bojic, E. van Henten, S.K. Balasundram, V. Dworak,
    M. Sultan, C. Weltzien Model-based evaluation of greenhouse microclimate using
    iot-sensor data fusion for energy efficient crop production Journal of Cleaner
    Production, 263 (2020), p. 121303, 10.1016/j.jclepro.2020.121303 View PDFView
    articleView in ScopusGoogle Scholar Soriano-Disla and Munoz, 2019 J.M. Soriano-Disla,
    A. Munoz Special issue: Intelligent systems for environmental applications Biosystems
    Engineering, 177 (2019), pp. 1-3, 10.1016/j.biosystemseng.2018.11.016 View PDFView
    articleView in ScopusGoogle Scholar Spiegel et al., 2018 J. Spiegel, P. Wira,
    G. Hermann A comparative experimental study of lossless compression algorithms
    for enhancing energy efficiency in smart meters 2018 IEEE 16th international conference
    on industrial informatics, INDIN (2018), pp. 447-452, 10.1109/INDIN.2018.8471921
    View in ScopusGoogle Scholar Supriyanto et al., 2019 Supriyanto, R. Noguchi, T.
    Ahamed, D.S. Rani, K. Sakurai, M.A. Nasution, D.S. Wibawa, M. Demura, M.M. Watanabe
    Artificial neural networks model for estimating growth of polyculture microalgae
    in an open raceway pond Biosystems Engineering, 177 (2019), pp. 122-129, 10.1016/j.biosystemseng.2018.10.002
    View PDFView articleView in ScopusGoogle Scholar Tahsien et al., 2020 S.M. Tahsien,
    H. Karimipour, P. Spachos Machine learning based solutions for security of internet
    of things (iot): A survey Journal of Network and Computer Applications, 161 (2020),
    p. 102630, 10.1016/j.jnca.2020.102630 View PDFView articleView in ScopusGoogle
    Scholar Thorndike, 1953 R.L. Thorndike Who belongs in the family Psychometrika
    (1953), pp. 267-276 View in ScopusGoogle Scholar Togneri et al., 2019 R. Togneri,
    C. Kamienski, R. Dantas, R. Prati, A. Toscano, J.P. Soininen, T.S. Conic Advancing
    iot-based smart irrigation IEEE Internet of Things Magazine, 2 (2019), pp. 20-25
    CrossRefGoogle Scholar van Dyk and Meng, 2001 D.A. van Dyk, X.-L. Meng The art
    of data augmentation Journal of Computational & Graphical Statistics, 10 (1) (2001),
    pp. 1-50 Google Scholar Verma et al., 2017 S. Verma, Y. Kawamoto, Z.M. Fadlullah,
    H. Nishiyama, N. Kato A survey on network methodologies for real-time analytics
    of massive iot data and open research issues IEEE Communications Surveys Tutorials,
    19 (2017), pp. 1457-1477, 10.1109/COMST.2017.2694469 View in ScopusGoogle Scholar
    Wang et al., 2019 L. Wang, T. Zhang, X. Wang, X. Jin, J. Xu, J. Yu, H. Zhang,
    Z. Zhao An approach of improved multivariate timing-random deep belief net modelling
    for algal bloom prediction Biosystems Engineering, 177 (2019), pp. 130-138, 10.1016/j.biosystemseng.2018.09.005
    View PDFView articleView in ScopusGoogle Scholar Yousefpour et al., 2019 A. Yousefpour,
    C. Fung, T. Nguyen, K. Kadiyala, F. Jalali, A. Niakanlahiji, J. Kong, J.P. Jue
    All one needs to know about fog computing and related edge computing paradigms:
    A complete survey Journal of Systems Architecture, 98 (2019), pp. 289-330, 10.1016/j.sysarc.2019.02.009
    View PDFView articleView in ScopusGoogle Scholar Zamora-Izquierdo et al., 2019
    M.A. Zamora-Izquierdo, J. Santa, J.A. Martinez, V. Martinez, A.F. Skarmeta Smart
    farming iot platform based on edge and cloud computing Biosystems Engineering,
    177 (2019), pp. 4-17, 10.1016/j.biosystemseng.2018.10.014 View PDFView articleView
    in ScopusGoogle Scholar Zhao et al., 2010 J.C. Zhao, J.F. Zhang, Y. Feng, J.X.
    Guo The study and application of the iot technology in agriculture 2010 3rd international
    conference on computer science and information Technology (2010), pp. 462-465,
    10.1109/ICCSIT.2010.5565120 View in ScopusGoogle Scholar Zyrianoff et al., 2020
    I. Zyrianoff, A. Heideker, D. Silva, J. Kleinschmidt, J.P. Soininen, T. Salmon
    Cinotti, C. Kamienski Architecting and deploying iot smart applications: A performance–oriented
    approach Sensors, 20 (2020), p. 84 View in ScopusGoogle Scholar Cited by (21)
    Federated learning for performance behavior detection in a fog-IoT system 2024,
    Internet of Things (Netherlands) Show abstract Review of technology advances to
    assess rice quality traits and consumer perception 2023, Food Research International
    Show abstract Internet of agriculture: Analyzing and predicting tractor ride comfort
    through supervised machine learning 2023, Engineering Applications of Artificial
    Intelligence Show abstract Data reduction in fog computing and internet of things:
    A systematic literature survey 2022, Internet of Things (Netherlands) Citation
    Excerpt : The Lack of implementation and evaluation details of the proposed idea
    is one of the shortcomings of this research. Junior et al. [30] presented a fog-based
    filtering scheme to reduce IoT data transmission from fog to cloud. In the provided
    model, the authors have combined the machine learning clustering methods with
    compression algorithms to reduce the amount of collected raw data from Smart Agriculture
    IoT sensors. Show abstract Technological revolutions in smart farming: Current
    trends, challenges &amp; future directions 2022, Computers and Electronics in
    Agriculture Show abstract Transient Data Caching Based on Maximum Entropy Actor–Critic
    in Internet-of-Things Networks 2024, International Journal of Computational Intelligence
    Systems View all citing articles on Scopus 1 https://www.chirpstack.io/. View
    Abstract © 2022 IAgrE. Published by Elsevier Ltd. All rights reserved. Part of
    special issue New advances in measurement and data processing techniques for Agriculture,
    Food and Environment. Edited by Annachiara Berardinelli, Davide Brunelli, Chiara
    Cevoli View special issue Recommended articles Article Metrics Citations Citation
    Indexes: 17 Captures Readers: 77 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Biosystems Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Data reduction based on machine learning algorithms for fog computing in
    IoT smart agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Tu J.
  - Aznoli F.
  - Jafari Navimipour N.
  - Yalcin S.
  citation_count: '2'
  description: Regardless of public perceptions of the agricultural techniques, the
    fact is that the current agriculture industry is more data-driven, accurate, and
    intelligent than before. Therefore, novel technologies such as fog computing and
    the Internet of Things (IoT) can provide a flexible and real-time platform to
    meet the data-driven requirements of the current agricultural decision-makers.
    Smart agriculture is a new idea since IoT sensors and fog platforms can provide
    information about agriculture and then operate on them based on user feedback.
    Also, with the rapid growth of IoT, the importance of recommender systems is increased
    in this domain. Therefore, the main goals of this study are to improve the accuracy
    of agricultural service recommendations and decrease the Mean Absolute Error (MAE)
    in the IoT-based fog systems using collaborative filtering and artificial Artificial
    Bee Colony (ABC). However, many of the current methods suffer from low accuracy
    of recommendations of the agricultural services. The present article suggested
    a collaborative filtering-based approach based on the ABC and genetic operators
    to design an effective recommender scheme in fog-based IoT systems. The results
    showed that the accuracy and MAE are optimized compared to some state-of-the-art
    methods. They also revealed that compared to other methods, the proposed method
    improves ranking score by 5.8 %, precision by 5%, recall by 5.7%, intra similarity
    by 13%, and hamming distance by 4.8%.
  doi: 10.1016/j.cie.2022.108605
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract BetaPowered by GenAIQuestions answered in this article
    Keywords 1. Introduction 2. Related work 3. Proposed algorithm 4. Results 5. Conclusion
    and future works CRediT authorship contribution statement Declaration of Competing
    Interest Appendix A. References Show full outline Cited by (2) Figures (13) Show
    7 more figures Tables (3) Table Table 1 Table 2 Computers & Industrial Engineering
    Volume 172, Part A, October 2022, 108605 A new service recommendation method for
    agricultural industries in the fog-based Internet of Things environment using
    a hybrid meta-heuristic algorithm Author links open overlay panel Jiaqing Tu a,
    Fariba Aznoli b, Nima Jafari Navimipour d, Senay Yalcin c Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.cie.2022.108605 Get rights and content Highlights
    • Increasing the accuracy of agricultural service recommendations in the IoT systems
    based on the fog using collaborative filtering and artificial ABC. • Decreasing
    the MAE of agricultural service recommendation in the IoT systems based on the
    fog using collaborative filtering and ABC. • Presenting results from computer
    tests that show the efficacy of the suggested method and the features of the final
    solution. Abstract Regardless of public perceptions of the agricultural techniques,
    the fact is that the current agriculture industry is more data-driven, accurate,
    and intelligent than before. Therefore, novel technologies such as fog computing
    and the Internet of Things (IoT) can provide a flexible and real-time platform
    to meet the data-driven requirements of the current agricultural decision-makers.
    Smart agriculture is a new idea since IoT sensors and fog platforms can provide
    information about agriculture and then operate on them based on user feedback.
    Also, with the rapid growth of IoT, the importance of recommender systems is increased
    in this domain. Therefore, the main goals of this study are to improve the accuracy
    of agricultural service recommendations and decrease the Mean Absolute Error (MAE)
    in the IoT-based fog systems using collaborative filtering and artificial Artificial
    Bee Colony (ABC). However, many of the current methods suffer from low accuracy
    of recommendations of the agricultural services. The present article suggested
    a collaborative filtering-based approach based on the ABC and genetic operators
    to design an effective recommender scheme in fog-based IoT systems. The results
    showed that the accuracy and MAE are optimized compared to some state-of-the-art
    methods. They also revealed that compared to other methods, the proposed method
    improves ranking score by 5.8 %, precision by 5%, recall by 5.7%, intra similarity
    by 13%, and hamming distance by 4.8%. Previous article in issue Next article in
    issue Questions answered in this article BetaPowered by GenAI This is generative
    AI content and the quality may vary. Learn more. What is the main feature module
    of the agricultural marketing recommendation system based on the cloud? How does
    a fog-based recommender system minimize the need for Internet access and cloud
    servers? What are the features of intelligent recommendations for agricultural
    products? What is the role of e-commerce platforms in the sales of farm products?
    What are the primary drivers behind this paper? Keywords Smart farmingAgricultureInternet
    of ThingsFogRecommender systemArtificial bee colonyGenetic algorithm 1. Introduction
    Internet of Things (IoT) offers an opportunity for many technologies in a wide
    range of industries, including the food and agriculture sector (Cao et al., 2021,
    Li et al., 2021, Yu, 2022, Zhao et al., 2021). The integration of the IoT into
    the agricultural system has led to maximizing benefits and improving agricultural
    services in the big data era (Ostad-Ali-Askari and Shayan, 2021, Yang et al.,
    2021). The agriculture domain is experiencing new evolution caused by fog, MapReduce
    IoT, and cloud technology (Eslamian et al., 2018, Ostad-Ali-Askari and Shayannejad,
    2020, Wu et al., 2017). Besides, industries are still looking at improving efficiency
    and decreasing operating expenses. They search for ways to enhance performance,
    such as system stability, fault tolerance, flexibility, and cost-effectiveness,
    leading to more complexity and interactivity (Tariq et al., 2019). To fulfill
    these requirements, fog computing was widely applied as an interconnected extension
    of cloud computing (Zhao et al., 2020). Fog may be a router, server, switch, or
    any other thing or device with processing and storage capabilities. Fog-based
    IoT can address many privacy, security, and performance issues. Fog-based IoT
    is an innovative and remarkable communication technology solution that delivers
    many services with fixed network bandwidth, portability assistance, and low latency
    (Michael, 2021, Singh et al., 2020). The requirement and significance of fog in
    IoT have been illustrated in several surveys (Jalali et al., 2017). A recommender
    system can recommend suitable services that consider users’ interests (Aznoli
    and Navimipour, 2017, Wu et al., 2020, Xu et al., 2021). With emerging novel and
    network-based services and apps on the Internet, end-users'' data flow and the
    utilized services are growing dramatically. It is a helpful trend for selecting
    suitable services, but a high level of complexity may happen at the same time
    (Shrestha et al., 2014). Research on recommendation systems is not new; it has
    been in progress since the ''90 s (Pazzani & Billsus, 2007). In recent years,
    these systems have meaningfully influenced decreasing the negative effect of information
    overload on cloud providers (Jararweh et al., 2014). In fact, they have been generated
    simultaneously with the Web to suggest the most suitable services for users (Foster,
    et al., 2008, Xu et al., 2021). It was hard for consumers to arrive at the most
    appropriate selections from the massive diversity of offered products and services
    (Lei et al., 2021, Ricci et al., 2011). The systems related to the ICT have great
    potential for application in food and agriculture, mainly because of this sector''s
    societal and environmental challenges (Ireri et al., 2021, Thapa et al., 2020).
    The issues of information overload in IoT (Mou et al., 2022), and the difficulty
    of optimizing it, are the primary drivers behind this paper. A fog-based hybrid
    recommender system will solve both problems. A fog-based recommender system will
    prefilter worthless data and process data locally within the limits of its computational
    capability. Thus, the system will significantly minimize the need for Internet
    access and cloud servers. A fog-based system can offer recommendations after learning
    the preference relation connections within different fog nodes, fog servers, and
    IoT (Wang et al., 2019). Because of the significance of system accuracy for users
    and providers, this research focuses on agricultural service recommendations in
    IoT systems based on fog to recommend the most suitable services according to
    customer necessities with high accuracy. This research proposes a collaborative
    filtering approach based on genetic operators and Artificial Bee Colony (ABC)
    to design efficient agricultural service recommendations in fog-based IoT systems.
    To the best of our knowledge, this is the first research where agricultural service
    recommendation is analyzed in the fog-based IoT systems usıng collaborative filtering
    based on the ABC and genetic operators to design an effective recommender scheme.
    The main goals of the present investigation are: • Increasing the accuracy of
    agricultural service recommendations in the IoT systems based on the fog using
    collaborative filtering and artificial ABC; • Decreasing the MAE of agricultural
    service recommendation in the IoT systems based on the fog using collaborative
    filtering and ABC; • Presenting results from computer tests that show the efficacy
    of the suggested method and the features of the final solution. The related literature
    is discussed in Section 2. Section 3 explains the suggested method of recommending
    fog-based IoT systems using collaborative filtering and the ABC algorithm. Section
    4 defines the empirical outcomes. Ultimately, Section 5 provides conclusions and
    suggestions for upcoming investigations. 2. Related work Most researchers employed
    some methods such as collaborative filtering, knowledge-base (Zheng et al., 2021),
    heuristic, and meta-heuristic algorithms to solve this problem. In this section,
    we review some newly proposed recommender systems. Altaleb, Deeken (Altaleb, Deeken,
    & Hertzberg, 2022) proposed a method to extend the CRoss-Industry Standard Process
    for Data Mining (CRISP-DM) to focus on the agricultural domain and give guidelines
    on handling and structuring the agricultural data and processes to reach defined
    data mining goals. In addition, the paper provided a walk-through for a use case
    to build a recommendation system. The results showed that the proposed process
    model helped structure the data-driven model''s development. Xu, Qin (Xu et al.,
    2021) presented an approach (GA-PSO) for resource recommendation in the fog-based
    IoT using a hybrid optimization algorithm. The CloudSim simulation environment
    is used for simulation. The findings demonstrated that the suggested technique
    outperforms existing algorithms in terms of performance and accuracy. Also, Junhui,
    Chushan (Junhui et al., 2021) summarized the features of intelligent recommendations
    for agricultural products. Then, they introduced the research status of intelligent
    recommendation of farm products based on big e-commerce data from 4 features:
    commodity information utilization, user behavior mining, recommendation algorithm
    design, and assessment of agricultural products recommendation. The results showed
    that as the online sales of farm products maintained a high growth rate, the e-commerce
    platform became an essential channel for farming products sales. Hui and Li (Hui,
    Li, & Collaborative Recommendation Model, 2021) proposed a personalized recommendation
    collaborative filtering model for agricultural planting technology integrating
    user features. The user characteristic tags were used from farmers'' attributes
    and calculated user similarity through Jaccard. At the same time, slope one is
    applied to enhance the user-based collaborative filtering recommendation algorithm,
    and the user similarity is calculated via the revised cosine similarity. The results
    showed that the algorithm improves precision, recall rate, and F1 value compared
    to user-based collaborative filtering and user-characteristic-based recommendations.
    Moreover, Jejurkar, Vaibhav (Jejurkar et al., 2021) proposed a model for expecting
    soil plan and giving sensible yield. The results showed that the sacked tree and
    K-Nearest Neighbors (KNN) had incredible accuracy among the classifiers. The sponsorship
    vector machine has given the most raised precision in soil gathering with less
    time. A multi-cell multi-antenna recommendation is a problem that Yang, Fu (Yang
    et al., 2020) studied. They developed a common suggestion, caching, and beamforming
    optimization issues to reduce content transmission latency. Challenging a two-time-scale
    mixed integer nonlinear programming issue is minimization that is difficult to
    tackle. They suggested a substitute optimization algorithm of low complexity by
    dissolving the original issue into three sub-problems based on the structural
    properties of the issue. The results showed that this approach would greatly minimize
    the time for content to be transmitted. Naik (Naik, 2020) proposed a co-scheduling
    system that suggests proper fog-node to implement IoT applications and manage
    load in the cloud-fog environment (CoS_FRLM). The CoS-FRLM determines each application''s
    Pheromone Indicator (PI) value and suggests running the IoT application on a fog
    node with a higher PI value. The outcomes showed that this method outperforms
    the existing load management and scheduling methods by efficient resource usage,
    decreased service costs, and makespan-time. Also, Lin, Zhou (Lin et al., 2019)
    proposed a weighted interest degree recommendation method utilizing association
    rules for intelligence on the Internet of Vehicles (IoV) to attain more precise
    recommending content. Initially, in order to create the association rule mining,
    the user data were inspected. Afterward, the consumer interest score was predicted
    by examining the association among consumer interests to suggest personalized
    service for the consumer. The findings indicated that the suggested algorithm
    would provide more accurate recommendations. Erdeniz, Maglogiannis (Erdeniz et
    al., 2018) suggested a new recommender system for IoT, which help patients find
    new applications, healthcare technologies, and physical exercise schedules. They
    examined the applicability and benefits of recommendation approaches in IoT-based
    m-health applications by demonstrating examples of their project''s (AGILE) pilot
    application (Quantified-Self). They suggested two recommendation usage cases:
    virtual coach and nurse, all of which assist consumers/patients in improving their
    wellbeing. The results showed that the recommendation result is accurate. Furthermore,
    to enhance the scalability and precision of consumer-based collaborative filtering
    methods, Menhaj and Jamalzehi (Menhaj & Jamalzehi, 2016) identified two homophily
    and influence correlation indices derived from common social phenomena used to
    synthesize user interest. So, they offered a proximity-based similarity assessment
    model employing fuzzy logic. Ultimately, the technique''s effectiveness on a MovieLens
    dataset compared to state-of-threat approaches was demonstrated. Furthermore,
    the obtained results showed that it solves cold start and sparsity problems. Also,
    Fang, Liu (Fang et al., 2016) suggested an agility-oriented and fuzziness-embedded
    cloud service ontology model that uses agility-centric design and Web Ontology
    Language (WOL2). The cloud service features that had been captured were held transparently
    and interactively. The model offers a full-service definition by incorporating
    cloud design specifics and their interactions. Also, through the knowledge-based
    nature of the model, a service recommendation system prototype is constructed.
    Case studies illustrated that the method could conduct better than available methods
    by obtaining efficient service search, retrieval, and recommendation results.
    In order to produce reliable recommendations for producers, Haiyan and Tao (Haiyan
    & Tao, 2015) suggested an agricultural marketing recommendation system based on
    the cloud. The main feature modules are the consumer interest module based on
    the obvious and implicit construct, information retrieval and preprocessing, and
    the recommendation algorithm module usıng a mixture of BP and SOM neural networks.
    The findings revealed that the outcome of the recommendation is correct; the system
    is functioning normally; also, it is capable of achieving successful outcomes.
    Finally, Geng, Li (Geng et al., 2015) developed a basic recommender scheme that
    combines mutual filtering with a multi-objective evolutionary algorithm. It aimed
    to increase the recommendation list''s diversity while maintaining the system''s
    consistency. Multi-objective algorithms were utilized to find a collection of
    Pareto solutions in order to allow a trade-off between the competing priorities.
    The lists that the target consumer should have liked were also projected using
    this tool. Each list made a particular trade-off between accuracy and variety
    when it came to matching. If the customer had a problem with one of the lists,
    extra recommendation lists with a diverse focus; the customer could choose from
    the trade-off Pareto options. 3. Proposed algorithm In this section, the cloud
    model of recommender systems is first presented. Afterward, the Genetic Algorithm
    (GA) and ABC algorithm are described in detail for clustering in the recommender
    system. 3.1. IoT in the field of agriculture The structure of fog-based IoT is
    three-layered. The IoT layer consists of physical objects embedded with sensors
    and electronics to capture information and data. The fog layer is the second layer,
    and it is where you can do some preliminary data processing or trust assessment
    before sending the data to the cloud. Eventually, the cloud layer (third layer)
    aids in the storage or processing of any large computation in order to derive
    valuable information (Hussain & Huang, 2018). Many studies recognize the significance
    of using emerging technologies in intelligent agriculture (Danner et al., 2021,
    Torky and Hassanein, 2020). Smart farming adopts advanced technology and the corresponding
    principles to improve production and economic returns and decrease the environmental
    impact (Köksal & Tekinerdogan, 2019). It is the era of digitalization. Therefore,
    digitalization also is required in agriculture. Fog-based IoT services are becoming
    popular. Using IoT in agriculture can boost yield. The use of IoT in farming will
    help increase the yield and is beneficial for the farmers (Aher et al., 2018).
    As seen in Fig. 1, the IoT will bring a variety of innovations to the agricultural
    sector. It has the potential to be very beneficial to the agricultural sector:
    soil control to keep an eye on the humidity and moisture levels in the soil; crop
    inspection to track and manage leaf diseases and insects, all of which are extremely
    damaging to crops; optimizing the use of soil fertilizers to increase crop production
    while reducing the time and expense associated with soil testing; monitoring the
    field''s atmosphere and ambient temperature. Farmers, agriculture experts, and
    the government will use these services to assess the present situation and forecast
    possible harvests (Bansal, Ahirwar, & Shukla, 2019). Download : Download high-res
    image (242KB) Download : Download full-size image Fig. 1. IoT in the field of
    agriculture. 3.2. Mathematical model The services'' location, number (n), and
    the number of users (m) have been determined before. The mathematical model of
    service recommendation to the intended user is zero-and-one nonlinear. This zero-and-one
    variable is defined as (1). (1) (2) Eq. (3) is related to the capacity limit of
    each service, which means that it can support the user. Mk is the maximum number
    of requests of user k. λi is the number of requests or communications that service
    i can have per unit time. (3) Eq. (4) considers the cost of the exchange. When
    two different services are connected to a specific user, yij is one; otherwise,
    it is zero. (4) If yij is one, the exchange cost in the objective function (5)
    is zero, where hij is the exchange cost between service i and service j. (5) The
    connection cost is also calculated using (6), where cik is the connection cost
    between service i and user k for each product, and dik is the distance between
    service i and user k. (6) Ultimately, the objective function of the mathematical
    model of the issue will be minimized as (7). (7) 3.3. Displaying answers The random
    key method is used to display the answers in this algorithm. It means that the
    answers are in the form of a matrix (n × 1), n is the number of services. Each
    entry is a decimal number, the integer part representing the user number to which
    the service is associated. Among the devices with the same integers, the one with
    the smallest decimal number is the user''s location. For example, look at the
    following answer, which is for 7 services (n = 7) and 3 users (m = 3): (3.45,
    3.15, 1.41, 2.12, 2.49, 2.90, 1.23) Services 1 and 2 are recommended to user 3,
    and user 3 is recommended to service 2. Services 3 and 7 are recommended to user
    1, and user 1 is recommended to service 7. Services 4, 5, and 6 are recommended
    to user 2, and user 2 is recommended to service 4. Fig. 2 shows how services are
    recommended to users and where users are located for the above answer, assuming
    the desired coordinates for the services. Download : Download high-res image (101KB)
    Download : Download full-size image Fig. 2. An example of recommending services
    to users. 3.4. Genetic algorithm Holland invented the GA, which is an evolutionary
    algorithm to solve complex optimization problems (Holland, 1992). A random solution
    is optimized over generations in the GA, and each novel population is generated
    by human mutation and crossover (Mirjalili, Mirjalili, & Lewis, 2014). GA has
    fast operating and convergence speed and simultaneously local search and early
    convergence features. Based on its features in optimization problems, it is used
    to increase the accuracy of the results. The algorithm utilizes GA with a heuristic
    approach to achieve its goals. The GA operators are important to converge a population''s
    individuals (Abed et al., 2014). Selection, mutation, and crossover are the three
    primary genetic operations in the simple GA algorithm (Pirnazar et al., 2018,
    Xu et al., 2014). 3.5. ABC algorithm Karaboga (Karaboga, 2005) presented the ABC
    in 2005. It is an effortless, stable, and population-based stochastic algorithm
    inspired by honey bee intelligence. On restricted and unrestrained issues, the
    efficiency of the ABC is compared to many other modern heuristic algorithms such
    as PSO and Differential Evolution (DE) (Basturk and Karaboga, 2006, Karaboga and
    Basturk, 2007). The colony of bees includes three types of them: onlooker bees,
    employed bees, and scouts. A potential solution to the optimization issue can
    be seen in the form of a food supply. The amount of nectar in a food supply is
    proportional to the solution''s consistency. Around the hive, the number of food
    supplies and employed bees is equivalent. The employed bee was converted to a
    scout after abandoning the food supply. The ABC produces a random population of
    N solutions that explains the employed bee . The novel solution is produced based
    on as below (Karaboga & Ozturk, 2011): (8) where is a neighbor employed bee of
    and it is created randomly. The objective functions for and are computed for and
    respectively; then, if , the solution is removed from the memory of the first
    collection and is added. is obtained from employed bees and is moved to the onlooker
    bees. Afterward, the roulette wheel selection strategy is employed to define the
    probability of selecting the bees for the next steps: (9) Each onlooker bee uses
    the same mechanism as the employed bees to upgrade the solution. The onlooker
    bee evaluates both the current and old solutions in order to determine if the
    old one can be erased from memory. For a certain number of repetitions, if there
    is no discrepancy between the solutions, they are discarded; then, the scout bee
    discovers a new solution to update as: (10) where is an optimized parameter for
    the ith employed bee, and are the lower and upper bounds for , and δ is a random
    number. When a new solution, is generated, it becomes an employed bee (Ewees et
    al., 2020). The principal levels of the algorithm are as follows: 1) Create an
    initial population. 2) Repeat. 3) Deploy the Employed Bees (EB) on their food
    sources. 4) Deploy the Onlooker Bees (OB) on food sources according to their nectar
    amount. 5) Send scout bees to the search space to find new food sources. 6) Remember
    the best food source ever found. 7) Continue this function until the stop conditions
    are established. Pseudo-code of the ABC algorithm is shown in Algorithm 1. Algorithm
    1. Pseudo-code of the ABC algorithm 1) Load test samples 2) Create the initial
    answer Xi where i = 1,2,…,SN 3) assess population fitness (fiti) 4) Set the cycle
    to 1 5) Repeat 6) Create a new answer for each employed bee according to (8),
    calculate the value of fiti, and apply the selection process 7) Calculate the
    probability value pi for the answers according to (9) 8) For each onlooker bee,
    select an answer using pi and generate a new answer, calculate its value fiti
    and apply the selection process 9) If there is an abandoned answer for the scout
    bee, replace it with a new answer that is randomly generated according to (10)
    10) Save the best answer 11) Add one to the value of the previous cycle 12) Continue
    this action until the cycle is the Maximum Cycle Number (MCN) 3.6. ABC based on
    genetic operators Since each GA and ABC have advantages and disadvantages, both
    can be used to overcome the disadvantages. GA has great speed and quickly converges,
    but the disadvantages of falling into local optimization and early convergence.
    In addition, the structure of basic ABC has no suitable local search, and it is
    better to be combined with other algorithms. This article uses ABC based on genetic
    operators to design a cloud recommender system introduced in (Ozturk, Hancer,
    & Karaboga, 2015). The algorithm sets the initial population randomly, then classifies
    the services’ features and users according to the collaborative filtering approach.
    Those users, who have used a service, record a comment about it. Users in each
    category are also connected, creating a communication graph (V, G) in which V
    represents the system users, and G represents the relationship between users.
    In the next stage, users are selected based on who is closer to the target user
    and get checked which service they used and liked to find appropriate services.
    The genetic operator puts the selected services next to each other and creates
    a gene that is a solution to the problem. The selected services will be combined
    to generate various solutions. Finally, the solution that is closest to the user''s
    preferences is selected. The ABC-GA algorithm will be iterated until the termination
    situation is met. In each repetition of the algorithm, the approach finds an optimal
    solution that may come in later repetitions or find a better one. If the found
    solution is better than the previous, the algorithm continues. Otherwise, it terminates
    automatically if it cannot find a better solution after 10 rounds. The main steps
    of the proposed method are: 1. Start the algorithm, receive, and check the inputs.
    2. Identify the neighbor users of each user based on the relationship graph. 3.
    Calculate the similarity of neighbor users to each user and gather similar users
    in a group. 4. Define the variables GBest and Zero (with the initial value of
    zero). 5. For each employed bee i, perform the following steps: a) Create two
    new feeding areas randomly (Xj and Xk) in the neighborhood (Xi). b) Consider the
    variables Xi, Xj, Xk, and Zero as the parents. c) Randomly select two parents,
    complete the merging operation and create the child feeding area. d) Perform the
    mutation operation on the child feeding area. e) Repeat steps c and d for the
    number of population times. f) Choose the best feeding area based on the values
    of the fitness function. 6. For each onlooker bee i, perform the following steps:
    a) Select a feed area according to the roulette wheel (Xi). b) Create two new
    feeding areas randomly (Xj and Xk) in the neighborhood (Xi). c) Consider the variables
    Xi, Xj, Xk, GBest, and Zero as the parents. d) Randomly select two parents complete
    the merging operation and create the child feeding area. e) Perform the mutation
    operation on the child feeding area. f) Repeat steps c and d for the number of
    population times. g) Choose the best feeding area based on the values of the fitness
    function. 7. If there is a trapped feeding area, send the explorer bee to check.
    8. Update GBest according to the best possible area discovered in steps 5, 6,
    and 7. The ABC-GA algorithm creates recommendations in two stages: In the first
    stage, it classifies users based on a collaborative filtering method and determines
    their similarities based on Eq. (11) (Navimipour, Keshanchi, & Milani, 2017):
    (11) In the subsequent stage, subscribers who are closer to the target subscriber
    are found. The services used and liked by them get checked, and appropriate services
    to the target user by the ABC algorithm will be found. GA uses a single-point
    approach in the crossover and mutation operations. The crossover operator combines
    the selected parents to create new children. Besides, the mutation operator changes
    the children regarding the specified rules. Then, the best feeding areas based
    on fitness function are selected, shown in Eq. (12). It selects the agricultural
    services that are most similar to user’s interest. Provided single point operator
    generates four children while changing both sides of children. (12) Fig. 3 illustrates
    the example of a single-point crossover operation in the proposed algorithm, and
    Fig. 4 indicates its mutation operator. Download : Download high-res image (233KB)
    Download : Download full-size image Fig. 3. Crossover operation sample. Download
    : Download high-res image (98KB) Download : Download full-size image Fig. 4. Mutation
    operation sample. The proposed method includes the following steps: Step 1: For
    a current food source, Xi = (xi1, xi2, …, xiD), two neighborhood, Xk = (xk1, xk2,
    …, xkD) and Xj = (xj1, xj2, …, xjD), are randomly selected (D is the dimension
    of food source). Step 2: Determine a D dimensional zero food source. Step 3: Define
    Xi, Xk, Xj, Zero, and Xbest as parent food sources. Step 4: Randomly match the
    parent food sources and then apply a crossover on the matched parent sources.
    Step 5: Apply the mutation operator to the children''s food sources. Step 6: Select
    the best food source. Step 7: Vi is determined as the current food source instead
    of Xi if the fitness value of Vi is better than the fitness value of Xi. The provided
    flowchart in Fig. 5 shows the steps of the method. Download : Download high-res
    image (1001KB) Download : Download full-size image Fig. 5. Flowchart of ABC-GA
    hybrid algorithm. 3.7. Complexity The formula can be employed to estimate the
    time complexity of the described algorithm. Let the highest number of iterations
    be t. In each iteration, the fitness value is calculated with O(OF) (Hashemi et
    al., 2021, Wang et al., 2020). If there are P solutions, the total complexity
    will be O(t(P * OF)). 4. Results The method is simulated using Matlab and compared
    to other methods. Matlab is a mathematics software that is the industry leader
    in the numerical calculation (Yu, 2018). The environment is Matlab 2017b on a
    64-bit system with an Intel Core i7-6700 processor and 32 GB DDR3 RAM. The compared
    technique is compared to the CoS_FRLM, Association rule, CRISP-DM, User Characteristics-Collaborative
    Filtering (UCCF), and KNN methods based on recommendation accuracy. Table 1 lists
    the utilized parameters in the studies. Table 1. Used parameters for the experiment.
    Parameters Value Crossover rate 90 % Mutation rate 5 % Number of chromosomes in
    each generation 100 Maximum number of repetitions 1000 Number of bees 40 Number
    of food sources 20 Minimum bee moves 8 Maximum bee moves 20 θ, α, β 0–0.9 Number
    of users 50–500 Before comparing the results, the crossover rate for the proposed
    method was considered to be 55, 60, 65, 70, 75, 80, 85, 90, and 95. The results
    obtained for fitness are 0.42, 0.412, 0.41, 0.405, 0.4, 0.39, 0.387, 0.385, 0.374,
    0.38, respectively (see Fig. 6). According to the numbers obtained, the rate of
    90 % provides the best fitness value that must be considered as a final value
    for the crossover rate. Download : Download high-res image (173KB) Download :
    Download full-size image Fig. 6. The fitness value in the different crossovers
    rate. The outcomes have demonstrated that the proposed method outperforms the
    CoS_FRLM, Association rule, CRISP-DM, UCCF, and KNN methods. To check the convergence
    of the algorithms, we compared them to 190 iterations. Fig. 7 indicates the convergence
    test for 500 requests with 40 various services. Download : Download high-res image
    (232KB) Download : Download full-size image Fig. 7. The convergence chart of 500
    requests with 40 services. 4.1. Comparison parameters Statistical accuracy metrics
    compare the numerical variation of the forecast ratings from the real consumer
    ratings to determine the accuracy of a prediction algorithm. RMSE, MAE, and the
    association between ratings and forecasts are some of the most commonly utilized
    metrics. All of the above parameters were calculated using the same data and yielded
    similar results. MAE is used as a statistical accuracy parameter. Formally, MAE
    is the average absolute difference among the n pairs if n is the actual ratings
    in an item set. Suppose that p1, p2, p3, …,pn predicts subscribers'' ratings,
    and the corresponding data set of users is q1, q2,q3, …, qn. MAE can be calculated
    using (Gong, 2010): (13) The smaller the MAE, the more accurate the forecasts,
    making for more reliable recommendations. MAE has been calculated for various
    prediction algorithms and sparsity levels (Hu et al., 2015). Five parameters (ranking
    score, precision, recall, intra similarity, and hamming distance) can be used
    to show the optimization results. 4.2. Comparison results Fig. 8 shows the comparison
    of the suggested technique with the CoS_FRLM, Association rule, CRISP-DM, UCCF,
    and KNN methods. • MAE Download : Download high-res image (413KB) Download : Download
    full-size image Fig. 8. The comparison of the MAE of the proposed method with
    three parameters (θ, α, β) to the other algorithms; (a) the comparison of the
    MAE with parameter (θ); (b) the comparison of the MAE with the parameter (α);
    (c) the comparison of the MAE with the parameter (β). The results in Fig. 8 indicate
    that MAE decreases with increasing α, β, and θ; therefore, higher values for all
    three parameters positively affect MAE criteria. The proposed method was reviewed
    and compared to other methods in all 5 criteria. The results for 300 users are
    shown in Fig. 9, Fig. 10, Fig. 11, Fig. 12, Fig. 13. • Ranking Source Download
    : Download high-res image (257KB) Download : Download full-size image Fig. 9.
    Comparing the ranking source between the suggested technique and other techniques.
    Download : Download high-res image (252KB) Download : Download full-size image
    Fig. 10. Comparing precision among the methods. Download : Download high-res image
    (234KB) Download : Download full-size image Fig. 11. Comparing the recall among
    suggested technique and other techniques. Download : Download high-res image (233KB)
    Download : Download full-size image Fig. 12. Comparing the intra similarity among
    the proposed method and other methods. Download : Download high-res image (244KB)
    Download : Download full-size image Fig. 13. Comparing the hamming distance among
    the proposed method and other methods. For an arbitrary user ui, rij=Rij/Li if
    the suggested object oj is ranked in Rij position in the ordered recommendation
    list Li. Since users currently obtain the probe entries, a successful algorithm
    can provide them with high-quality recommendations, resulting in a small rij (Pan,
    Deng, & Liu, 2010). As mentioned earlier, the lower the average ranking score,
    the higher the algorithm accuracy, and vice versa. Fig. 9 indicates the results
    of comparing the average ranking score of the suggested technique to other techniques.
    The outcomes show that with increasing the number of users, the average ranking
    score in the proposed algorithm has decreased more than other methods. • Precision
    It is the number of suggested objects to the number of recommended items obtained
    by subscribers in the test collection. This metric is utilized to assess the validity
    of a particular recommendation list. The accuracy may be calculated as a/L, where
    a is the number of recommended products gathered by subscribers in test collection
    and L illustrates the total number of recommended products. Totally, there are
    less than 100 items that are recommended (Ju & Xu, 2013). Fig. 10 indicates the
    results of comparing the accuracy of the suggested technique to other techniques.
    The outcomes illustrate that the accuracy has been increased with an increasing
    number of users. • Recall The ratio of the number of suggested objects gathered
    by subscribers to the total number of objects gathered by these subscribers is
    specified as recall. The higher the recall, the stronger the results. The recall
    can be calculated as a/M, where a is the number of recommended products gathered
    by subscribers emerging in test collection, and M illustrates the whole number
    of actual buying of subscribers (Ju & Xu, 2013). Fig. 11 illustrates the results
    of comparing the recall of the suggested technique to other techniques. The outcomes
    illustrate that with the growth in the number of users, the recall in all algorithms
    has increased, but the amount of the increase is less than other methods except
    the UC-CF method. • Intra Similarity It assesses the similarity among items inside
    recommendation lists of users. Here the widely used cosine similarity to measure
    the similarity of items is adopted. For two items oi and oj, their similarity
    is defined as follows: (14) where L indicated the number of recommendation items
    for an arbitrary user ul. At first, (−1)/2 couple of items'' similarities should
    be computed, and then the average of these values must be calculated to get Il=<Sij>.
    Eventually, the average subscribers'' mean value of I is utilized to assess the
    diversity of recommendation lists. Fig. 12 illustrates the results of comparing
    the intra similarity of the suggested technique to other methods. The outcomes
    illustrate that the intra similarity in all the methods has decreased with increasing
    users, and the proposed method has better performance than other methods (KNN,
    UC-CF, CoS_FRLM, Association rule, and CRISP-DM). • Hamming Distance G It will
    assess the degree to which personalization is effective. If the overlapped number
    of objects in ui and ui’s recommendation lists is Q, their Hamming distance is:
    (15) Generally speaking, a customized recommendation list should have long Hamming
    distances to other lists. Therefore, the mean value of distances S=<Hij> from
    the overall user-user pairs is used to measure the strength of customization.
    Parameter θ is utilized as a predefined threshold for the final similarity weights
    among subscribers in the suggested approach to determine the closest neighbors
    using Eq. (16). Besides, α is employed as a predefined threshold for the reliability
    values to determine unreliable forecast ratings utilizing Eq. (17). Ultimately,
    β is applied as a predefined threshold for the confidence values among subscribers
    to determine the novel neighborhood of subscribers utilizing Eq. (18). (16) where
    U is the collection of the whole subscribers in the system and θ is a predetermined
    threshold for the ultimate similarity weights among subscribers. The suggested
    approach uses a threshold value (α) to determine if forecast ratings are inaccurate;
    ratings with a reliability value below the threshold α are considered unreliable
    and would be recalculated by the suggested process. The unreliable estimated ratings
    are calculated as below: (17) where UR illustrates the unreliable estimated rating
    collection and Ra,i is the subscriber a''s reliability value. The confidence values
    of the subscribers in the neighborhood collection are evaluated using a threshold
    value (β), and those with confidence values less than the threshold β are excluded
    from the target subscriber''s neighborhood collection. Therefore, a novel neighborhood
    is attained to recalculate the prognosticated rating , as below: (18) where is
    the novel neighborhood of subscriber a for target item i, and is the primary neighbor
    collection of the subscriber a, attained utilizing Eq. (16). Fig. 13 illustrates
    the results of comparing the hamming distance of the suggested technique to other
    methods. The outcomes illustrate that the hamming distance has increased with
    an increasing number of users, but based on the results, the way performs better
    provides better hamming distance values than the other algorithms. 5. Conclusion
    and future works Fog computing has lately been hailed as a modern networking and
    computing model for the Internet of Vehicles, sensor networks, smart grids, and
    other applications. So, the combination of fog computing and available networks
    has significant advantages. Meanwhile, establishing social-like associations between
    objects from the IoT to the cloud is a novel trend for these items, with the advantages
    of efficiently adding developed sociality to a complex world. Recommending a suitable
    service is one of the principal issues in fog-based IoT systems. In the present
    investigation, a novel recommendation algorithm based on IoT for farming services
    is suggested using an ABC based on genetic operators to optimize accuracy. ABC
    and GA are among the most efficient biologically inspired population-based algorithms;
    therefore, they were applied to solve the recommendation problem. Matlab is employed
    to evaluate the performance of the proposed recommendation algorithm. The simulation
    outcomes illustrate that the suggested technique outperforms other algorithms,
    and the algorithm''s accuracy is enhanced. The main reason for this improvement
    is that the proposed method uses the ability and the powerful features of two
    optimization algorithms, whereas their main drawbacks are masked. In the future,
    a better approach demanding lower hardware resources might be found using other
    meta-heuristic algorithms as this proposed method needs powerful hardware and
    takes a long time to perform simulation that should be considered. The following
    are the main future research directions: • A new subject is blockchain-enabled
    auto-scaling, which uses blockchain capabilities to resolve security issues in
    the fog and cloud for collaborative computing services such as agricultural services.
    • Extending auto-scaling from IoT devices to the fog for timely processing of
    scaling choices is one of the complex challenges that must be considered. • Also,
    future research may focus on the influence of providing treatment recommendations
    according to the best practices. • Finally, other metrics, such as Minimum Mean-Square
    Error (MMSE) (Sui et al., 2020), can be investigated in the future. Some limitations
    are interesting to consider in future works. The present investigation was limited
    to agricultural service recommendations in fog-based IoT systems. An extension
    of the research to cover the other areas would enhance the results’ generalizability.
    Due to the general nature of the model and its solution guideline, it can be extended
    in various circumstances. This paper does not use real data sets, so examining
    these data can affect the validity of the results. Finally, the analytic and the
    proposed method are general and can be employed for various problems in different
    imprecise environments, inventory control problems, supply chain management, etc.
    CRediT authorship contribution statement Jiaqing Tu: Conceptualization, Methodology,
    Software, Validation, Investigation, Resources, Data curation, Writing – original
    draft, Writing – review & editing, Visualization, Supervision, Project administration.
    Fariba Aznoli: Conceptualization, Methodology, Software, Validation, Investigation,
    Resources, Data curation, Writing – original draft, Writing – review & editing,
    Visualization, Supervision, Project administration. Nima Jafari Navimipour: Conceptualization,
    Methodology, Software, Validation, Investigation, Resources, Data curation, Writing
    – original draft, Writing – review & editing, Visualization, Supervision, Project
    administration. Senay Yalcin: Conceptualization, Methodology, Software, Validation,
    Investigation, Resources, Data curation, Writing – original draft, Writing – review
    & editing, Visualization, Supervision, Project administration. Declaration of
    Competing Interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Appendix A. See Table 2. Table 2. List of notations.
    Artificial Bee Colony ABC CRoss-Industry Standard Process for Data Mining CRISP-DM
    Differential Evolution DE Employed Bees EB Internet of Things IoT Internet of
    Vehicles IoV K-Nearest Neighbors KNN Mean Absolute Error MAE Onlooker Bees OB
    Particle Swarm Optimization PSO Pheromone Indicator PI Root Mean Squared Error
    RMSE User Characteristics-Collaborative Filtering UCCF Web Ontology Language WOL
    References Abed et al., 2014 I. Abed, et al. Optimization of the time of task
    scheduling for dual manipulators using a modified electromagnetism-like algorithm
    and genetic algorithm Arabian Journal for Science & Engineering (Springer Science
    & Business Media BV), 39 (8) (2014) Google Scholar Aher et al., 2018 A. Aher,
    et al. Smart agriculture using clustering and IOT International Research Journal
    of Engineering and Technology (IRJET), 5 (03) (2018), pp. 2395-10056 Google Scholar
    Altaleb et al., 2022 Altaleb, M., Deeken, H., & Hertzberg, J. (2022). A data mining
    process for building recommendation systems for agricultural machines based on
    big data. 42. GIL-Jahrestagung, Künstliche Intelligenz in der Agrar-und Ernährungswirtschaft.
    Google Scholar Aznoli and Navimipour, 2017 F. Aznoli, N.J. Navimipour Cloud services
    recommendation: Reviewing the recent advances and suggesting the future research
    directions Journal of Network and Computer Applications, 77 (2017), pp. 73-86
    View PDFView articleView in ScopusGoogle Scholar Bansal et al., 2019 A. Bansal,
    M.K. Ahirwar, P.K. Shukla Assessment on Different Classification Algorithms Used
    in Internet of Things Applications International Journal of Organizational and
    Collective Intelligence (IJOCI), 9 (1) (2019), pp. 1-11 Google Scholar Basturk
    and Karaboga, 2006 B. Basturk, D. Karaboga An artificial bee colony (ABC) algorithm
    for numeric function optimization In IEEE swarm intelligence symposium (2006)
    Google Scholar Cao et al., 2021 B. Cao, et al. Large-scale many-objective deployment
    optimization of edge servers IEEE Transactions on Intelligent Transportation Systems,
    22 (6) (2021), pp. 3841-3849 CrossRefView in ScopusGoogle Scholar Danner et al.,
    2021 M. Danner, et al. Efficient RTM-based training of machine learning regression
    algorithms to quantify biophysical & biochemical traits of agricultural crops
    ISPRS Journal of Photogrammetry and Remote Sensing, 173 (2021), pp. 278-296 View
    PDFView articleView in ScopusGoogle Scholar Erdeniz et al., 2018 S.P. Erdeniz,
    et al. Recommender systems for IoT enabled m-health applications IFIP International
    conference on artificial intelligence applications and innovations, Springer (2018)
    Google Scholar Eslamian et al., 2018 S. Eslamian, et al. Water P. Bobrowsky, B.
    Marker (Eds.), Encyclopedia of engineering geology, Springer International Publishing,
    Cham (2018), pp. 1-5 Google Scholar Ewees et al., 2020 A.A. Ewees, et al. Improved
    artificial bee colony using sine-cosine algorithm for multi-level thresholding
    image segmentation IEEE Access, 8 (2020), pp. 26304-26315 CrossRefView in ScopusGoogle
    Scholar Fang et al., 2016 D. Fang, et al. An agility-oriented and fuzziness-embedded
    semantic model for collaborative cloud service search, retrieval and recommendation
    Future Generation Computer Systems, 56 (2016), pp. 11-26 View PDFView articleView
    in ScopusGoogle Scholar Foster, et al., 2008 Foster, I., et al. (2008). Cloud
    computing and grid computing 360-degree compared. in Grid Computing Environments
    Workshop, 2008. GCE''08. IEEE. Google Scholar Geng et al., 2015 B. Geng, et al.
    NNIA-RS: A multi-objective optimization based recommender system Physica A: Statistical
    Mechanics and its Applications, 424 (2015), pp. 383-397 View PDFView articleView
    in ScopusGoogle Scholar Gong, 2010 S. Gong A collaborative filtering recommendation
    algorithm based on user clustering and item clustering JSW, 5 (7) (2010), pp.
    745-752 View in ScopusGoogle Scholar Haiyan and Tao, 2015 Haiyan, H., & Tao, C.
    (2015). Design and implementation of agricultural production and market information
    recommendation system based on cloud computing. In 2015 8th international conference
    on intelligent computation technology and automation (ICICTA). IEEE. Google Scholar
    Hashemi et al., 2021 M. Hashemi, et al. A multi-objective method for virtual machines
    allocation in cloud data centres using an improved grey wolf optimization algorithm
    IET COMMUNICATIONS, 15 (18) (2021), pp. 2342-2353 CrossRefView in ScopusGoogle
    Scholar Holland, 1992 Holland, J.H. (1992). Adaptation in natural and artificial
    systems: an introductory analysis with applications to biology, control, and artificial
    intelligence. MIT Press. Google Scholar Hu et al., 2015 L. Hu, et al. CFSF: On
    cloud-based recommendation for large-scale e-commerce Mobile Networks and Applications,
    20 (3) (2015), pp. 380-390 CrossRefView in ScopusGoogle Scholar Hui and Li, 2021
    Hui, Y. & Li, S., (2021). A collaborative recommendation model of agricultural
    planting technology based on user characteristics. In: 2021 3rd international
    conference on advances in computer technology, information science and communication
    (CTISC). IEEE. Google Scholar Hussain and Huang, 2018 Y. Hussain, Z. Huang TRFIoT:
    Trust and reputation model for fog-based IoT International Conference on Cloud
    Computing and Security, Springer (2018) Google Scholar Ireri et al., 2021 D.M.
    Ireri, et al. Role of ICT in the dissemination and access of agricultural information
    by smallholder farmers in South Eastern Kenya Acta Informatica Malaysia, 5 (1)
    (2021), pp. 31-41 CrossRefGoogle Scholar Jalali et al., 2017 Jalali, F., et al.
    (2017). Greening iot with fog: A survey. in 2017 IEEE international conference
    on edge computing (EDGE). IEEE. Google Scholar Jararweh et al., 2014 Y. Jararweh,
    et al. Cloudexp: A comprehensive cloud computing experimental framework Simulation
    Modelling Practice and Theory, 49 (2014), pp. 180-192 View PDFView articleView
    in ScopusGoogle Scholar Jejurkar et al., 2021 S. Jejurkar, et al. An artificial
    intelligence based recommendation system for farmers in agricultural field IoT
    and machine learning International Journal of Progressive Research in Science
    and Engineering, 2 (3) (2021), pp. 1-3 Google Scholar Ju and Xu, 2013 C. Ju, C.
    Xu A new collaborative recommendation approach based on users clustering using
    artificial bee colony algorithm The Scientific World Journal, 2013 (2013) Google
    Scholar Junhui et al., 2021 Junhui, W., et al. (2021). Research on agricultural
    products intelligent recommendation based on e-commerce big data. In 2021 IEEE
    6th International Conference on Big Data Analytics (ICBDA). IEEE. Google Scholar
    Karaboga and Basturk, 2007 D. Karaboga, B. Basturk A powerful and efficient algorithm
    for numerical function optimization: Artificial bee colony (ABC) algorithm Journal
    of Global Optimization, 39 (3) (2007), pp. 459-471 CrossRefView in ScopusGoogle
    Scholar Karaboga and Ozturk, 2011 D. Karaboga, C. Ozturk A novel clustering approach:
    Artificial Bee Colony (ABC) algorithm Applied Soft Computing, 11 (1) (2011), pp.
    652-657 View PDFView articleView in ScopusGoogle Scholar Karaboga, 2005 Karaboga,
    D., An idea based on honey bee swarm for numerical optimization. 2005, Technical
    report-tr06, Erciyes university, engineering faculty, computer engineering department.
    Google Scholar Köksal and Tekinerdogan, 2019 Ö. Köksal, B. Tekinerdogan Architecture
    design approach for IoT-based farm management information systems Precision Agriculture,
    20 (5) (2019), pp. 926-958 CrossRefView in ScopusGoogle Scholar Lei et al., 2021
    W. Lei, et al. Optimal remanufacturing service resource allocation for generalized
    growth of retired mechanical products: Maximizing matching efficiency IEEE Access,
    9 (2021), pp. 89655-89674 CrossRefView in ScopusGoogle Scholar Li et al., 2021
    B. Li, et al. Research on AI security enhanced encryption algorithm of autonomous
    IoT systems Information Sciences, 575 (2021), pp. 379-398 View PDFView articleView
    in ScopusGoogle Scholar Lin et al., 2019 F. Lin, et al. Content recommendation
    algorithm for intelligent navigator in fog computing based IoT environment IEEE
    Access, 7 (2019), pp. 53677-53686 CrossRefView in ScopusGoogle Scholar Menhaj
    and Jamalzehi, 2016 Menhaj, M. B., & Jamalzehi, S. (2016). Scalable user similarity
    estimation based on fuzzy proximity for enhancing accuracy of collaborative filtering
    recommendation. In: 2016 4th international conference on control, instrumentation,
    and automation (ICCIA). IEEE. Google Scholar Michael, 2021 Michael, V. (2021).
    Security and privacy issues of IoT at fog layer architecture. Google Scholar Mirjalili
    et al., 2014 S. Mirjalili, S.M. Mirjalili, A. Lewis Grey wolf optimizer Advances
    in Engineering Software, 69 (2014), pp. 46-61 View PDFView articleGoogle Scholar
    Mou et al., 2022 J. Mou, et al. An effective hybrid collaborative algorithm for
    energy-efficient distributed permutation flow-shop inverse scheduling Future Generation
    Computer Systems, 128 (2022), pp. 521-537 View PDFView articleView in ScopusGoogle
    Scholar Naik, 2020 Naik, K. J. (2020). A co-scheduling system for fog-node recommendation
    and load management in cloud-fog environment (CoS_FRLM). in 2020 International
    Conference on Data Analytics for Business and Industry: Way Towards a Sustainable
    Economy (ICDABI). IEEE. Google Scholar Navimipour et al., 2017 N.J. Navimipour,
    B. Keshanchi, F.S. Milani Resources discovery in the cloud environments using
    collaborative filtering and ontology relations Electronic Commerce Research and
    Applications, 26 (2017), pp. 89-100 View PDFView articleView in ScopusGoogle Scholar
    Ostad-Ali-Askari and Shayan, 2021 K. Ostad-Ali-Askari, M. Shayan Subsurface drain
    spacing in the unsteady conditions by HYDRUS-3D and artificial neural networks
    Arabian Journal of Geosciences, 14 (18) (2021), pp. 1-14 CrossRefGoogle Scholar
    Ostad-Ali-Askari and Shayannejad, 2020 K. Ostad-Ali-Askari, M. Shayannejad Impermanent
    changes investigation of shape factors of the volumetric balance model for water
    development in surface irrigation Modeling Earth Systems and Environment, 6 (3)
    (2020), pp. 1573-1580 CrossRefView in ScopusGoogle Scholar Ozturk et al., 2015
    C. Ozturk, E. Hancer, D. Karaboga A novel binary artificial bee colony algorithm
    based on genetic operators Information Sciences, 297 (2015), pp. 154-170 View
    PDFView articleView in ScopusGoogle Scholar Pan et al., 2010 X. Pan, G. Deng,
    J.-G. Liu Weighted bipartite network and personalized recommendation Physics Procedia,
    3 (5) (2010), pp. 1867-1876 View PDFView articleView in ScopusGoogle Scholar Pazzani
    and Billsus, 2007 M.J. Pazzani, D. Billsus Content-based recommendation systems
    The adaptive web, Springer (2007), pp. 325-341 CrossRefGoogle Scholar Pirnazar
    et al., 2018 M. Pirnazar, et al. The evaluation of the usage of the fuzzy algorithms
    in increasing the accuracy of the extracted land use maps International Journal
    of Global Environmental Issues, 17 (4) (2018), pp. 307-321 CrossRefView in ScopusGoogle
    Scholar Ricci et al., 2011 Ricci, F., Rokach, L., & Shapira, B. (2011). Introduction
    to recommender systems handbook. Springer. Google Scholar Shrestha et al., 2014
    S.K. Shrestha, et al. Recommendation of a cloud service item based on service
    utilization patterns in Jyaguchi Knowledge and systems engineering, Springer (2014),
    pp. 121-133 CrossRefView in ScopusGoogle Scholar Singh et al., 2020 S.P. Singh,
    et al. Leveraging energy-efficient load balancing algorithms in fog computing
    Concurrency and Computation: Practice and Experience, n/a(n/a) (2020), Article
    e5913 Google Scholar Sui et al., 2020 T. Sui, et al. Multi-sensor state estimation
    over lossy channels using coded measurements Automatica, 111 (2020), Article 108561
    View PDFView articleView in ScopusGoogle Scholar Tariq et al., 2019 N. Tariq,
    et al. The security of big data in fog-enabled IoT applications including blockchain:
    A survey Sensors, 19 (8) (2019), p. 1788 CrossRefView in ScopusGoogle Scholar
    Thapa et al., 2020 A. Thapa, et al. Information and communication technology (ICT)
    mediated extension services in agriculture in Nepal-A review Acta Informatica
    Malaysia (AIM), 4 (2) (2020), pp. 33-36 CrossRefGoogle Scholar Torky and Hassanein,
    2020 M. Torky, A.E. Hassanein Integrating blockchain and the internet of things
    in precision agriculture: Analysis, opportunities, and challenges Computers and
    Electronics in Agriculture (2020), Article 105476 View PDFView articleView in
    ScopusGoogle Scholar Wang et al., 2019 X. Wang, et al. A fog-based recommender
    system IEEE Internet of Things Journal, 7 (2) (2019), pp. 1048-1060 CrossRefGoogle
    Scholar Wang et al., 2020 T. Wang, et al. A rough set-based bio-inspired fault
    diagnosis method for electrical substations International Journal of Electrical
    Power & Energy Systems, 119 (2020), Article 105961 View PDFView articleView in
    ScopusGoogle Scholar Wu et al., 2017 Z. Wu, et al. Efficiently translating complex
    SQL query to mapreduce jobflow on cloud IEEE Transactions on Cloud Computing,
    8 (2) (2017), pp. 508-517 Google Scholar Wu et al., 2020 Z. Wu, et al. On scalability
    of association-rule-based recommendation: A unified distributed-computing framework
    ACM Transactions on the Web (TWEB), 14 (3) (2020), pp. 1-21 View in ScopusGoogle
    Scholar Xu et al., 2014 Y. Xu, et al. A genetic algorithm for task scheduling
    on heterogeneous computing systems using multiple priority queues Information
    Sciences, 270 (2014), pp. 255-287 View PDFView articleView in ScopusGoogle Scholar
    Xu et al., 2021 Z. Xu, et al. A new approach for resource recommendation in the
    fog-based IoT using a hybrid algorithm The Computer Journal (2021), p. bxab189
    Google Scholar Xu et al., 2021 Z. Xu, et al. A new approach for resource recommendation
    in the fog-based IoT using a hybrid algorithm The Computer Journal (2021) Google
    Scholar Yang et al., 2020 X. Yang, et al. Mixed-timescale caching and beamforming
    in content recommendation aware fog-RAN: A latency perspective IEEE Transactions
    on Communications (2020) Google Scholar Yang et al., 2021 L. Yang, et al. An analytical
    model of page dissemination for efficient big data transmission of C-ITS IEEE
    Transactions on Intelligent Transportation Systems (2021) Google Scholar Yu, 2022
    B. Yu The impact of the internet on industrial green productivity: Evidence from
    China Technological Forecasting and Social Change, 177 (2022), Article 121527
    View PDFView articleView in ScopusGoogle Scholar Yu, 2018 Yu, L. (2018). Matlab
    programming environment based on Web. in 2018 IEEE 4th Information Technology
    and Mechatronics Engineering Conference (ITOEC). IEEE. Google Scholar Zhao et
    al., 2020 S. Zhao, et al. Smart and practical privacy-preserving data aggregation
    for fog-based smart grids IEEE Transactions on Information Forensics and Security,
    16 (2020), pp. 521-536 CrossRefView in ScopusGoogle Scholar Zhao et al., 2021
    Y. Zhao, et al. Trustworthy authorization method for security in Industrial Internet
    of Things Ad Hoc Networks, 121 (2021), Article 102607 View PDFView articleView
    in ScopusGoogle Scholar Zheng et al., 2021 W. Zheng, et al. Knowledge base graph
    embedding module design for Visual question answering model Pattern Recognition,
    120 (2021), Article 108153 View PDFView articleView in ScopusGoogle Scholar Cited
    by (2) VGNet: A Lightweight Intelligent Learning Method for Corn Diseases Recognition
    2023, Agriculture (Switzerland) Service Recommendation for a Group of Users on
    the Internet of Things Using the Most Popular Service 2023, 2023 12th International
    Conference on Modern Circuits and Systems Technologies, MOCAST 2023 - Proceedings
    View Abstract © 2022 Published by Elsevier Ltd. Recommended articles Effects of
    Cr and Ti additions on the stability and migration of C, N and O in vanadium:
    A first-principles study Fusion Engineering and Design, Volume 168, 2021, Article
    112604 Ruihuan Li, …, Jijun Zhao View PDF Investment strategies under stochastic
    electricity prices and implications for charging infrastructure network coverage:
    A case of photovoltaic pavements Computers & Industrial Engineering, Volume 172,
    Part A, 2022, Article 108523 Haonan He, …, Fei Ma View PDF Re-considering the
    energy efficient retrofitting approach to question cost-optimality and nZEB under
    COVID-19 measures Building and Environment, Volume 219, 2022, Article 109227 Burcu
    Çiğdem Yılmaz, Yiğit Yılmaz View PDF Show 3 more articles Article Metrics Citations
    Citation Indexes: 2 Captures Readers: 20 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computers and Industrial Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A new service recommendation method for agricultural industries in the fog-based
    Internet of Things environment using a hybrid meta-heuristic algorithm
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
