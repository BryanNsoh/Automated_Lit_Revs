- analysis: '>'
  authors:
  - Snehi M.
  - Bhandari A.
  - Verma J.
  citation_count: '0'
  description: 'Introduction: The convergence of the Internet of Anything (IoX), software-defined
    communication layer, and sophisticated cloud platform has steered the dawn of
    the fourth industrial revolution era (Industry 4.0). The technological leap forward
    has given shelter to the umbrella of cyber-physical systems such as Smart Grids,
    Agriculture, and Healthcare. The exponential growth of vulnerable spots (the Internet
    of Things) in multi-layer cyber-physical systems is involuntarily contributing
    to malignant IoT-generated denial-of-service attacks. The IoT devices manifest
    a high degree of diversity in traffic patterns, and a single dataset is insufficient
    to cover fiducial attack scenarios. In addition, the research community is pressing
    to overcome other roadblocks, such as an optimal architecture for solution efficacy,
    performance issues, and the need for comprehensive validation of the proposed
    solutions. Methods: The paper offers a five-stage defense framework for building
    a mitigation against IoT-based DDoS attacks. The article brings forth an amalgamated
    dataset concocted from InSDN, BoT-IoT, and UNSW-Sydney datasets and a simulated
    dataset for IoT-DDoS to the research community. The paper employs a multi-stage
    Stack-Ensembled framework at the heart of the solution pillared on physical devices''
    behavioral attributes, resulting in a universal defense approach. The experiment
    leverages fog computing with distributed computational nodes to reduce response
    latency. Furthermore, the paper implements attack-detection-as-a-service on top
    of the Docker framework for a cost-effective, reusable, and portable framework.
    The novel design of the framework presents a light mitigation scheme to the SDN
    controller, ensuring a negligible impact on the controller''s performance. Results
    and Discussion: The hand-crafted feature selection process reduced the features
    by 80%, demonstrating a high accuracy of 99.99% with benchmark datasets, 98.84%
    accuracy in the simulation environment, and collateral damage of 1.52%. The experiment
    observes encouraging values for vital performance parameters that researchers
    often miss to discuss. Furthermore, the paper thoroughly analyzes IoT-DDoS mitigation
    framework performance parameters.'
  doi: 10.1016/j.cose.2024.103702
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related work 3. System overview 4.
    Proposed mitigation framework 5. Experimental setup 6. Results and analysis 7.
    Discussion and future scope 8. Conclusion Declaration of Competing Interest Data
    availability References Vitae Show full outline Figures (21) Show 15 more figures
    Tables (10) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Computers
    & Security Volume 139, April 2024, 103702 Foggier skies, clearer clouds: A real-time
    IoT-DDoS attack mitigation framework in fog-assisted software-defined cyber-physical
    systems Author links open overlay panel Manish Snehi, Abhinav Bhandari, Jyoti
    Verma Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.cose.2024.103702
    Get rights and content Abstract Introduction The convergence of the Internet of
    Anything (IoX), software-defined communication layer, and sophisticated cloud
    platform has steered the dawn of the fourth industrial revolution era (Industry
    4.0). The technological leap forward has given shelter to the umbrella of cyber-physical
    systems such as Smart Grids, Agriculture, and Healthcare. The exponential growth
    of vulnerable spots (the Internet of Things) in multi-layer cyber-physical systems
    is involuntarily contributing to malignant IoT-generated denial-of-service attacks.
    The IoT devices manifest a high degree of diversity in traffic patterns, and a
    single dataset is insufficient to cover fiducial attack scenarios. In addition,
    the research community is pressing to overcome other roadblocks, such as an optimal
    architecture for solution efficacy, performance issues, and the need for comprehensive
    validation of the proposed solutions. Methods The paper offers a five-stage defense
    framework for building a mitigation against IoT-based DDoS attacks. The article
    brings forth an amalgamated dataset concocted from InSDN, BoT-IoT, and UNSW-Sydney
    datasets and a simulated dataset for IoT-DDoS to the research community. The paper
    employs a multi-stage Stack-Ensembled framework at the heart of the solution pillared
    on physical devices'' behavioral attributes, resulting in a universal defense
    approach. The experiment leverages fog computing with distributed computational
    nodes to reduce response latency. Furthermore, the paper implements attack-detection-as-a-service
    on top of the Docker framework for a cost-effective, reusable, and portable framework.
    The novel design of the framework presents a light mitigation scheme to the SDN
    controller, ensuring a negligible impact on the controller''s performance. Results
    and Discussion The hand-crafted feature selection process reduced the features
    by 80%, demonstrating a high accuracy of 99.99% with benchmark datasets, 98.84%
    accuracy in the simulation environment, and collateral damage of 1.52%. The experiment
    observes encouraging values for vital performance parameters that researchers
    often miss to discuss. Furthermore, the paper thoroughly analyzes IoT-DDoS mitigation
    framework performance parameters. Previous article in issue Next article in issue
    Keywords Distributed random forestFog computingIndustry 4.0Internet of thingsIoT-DDoSSDNSmart
    healthcareStack ensembleXGBoost 1. Introduction The ubiquitous ‘Internet of Things’
    (IoT) has transformed into an envisioned communicable machine network called the
    Internet of Anything (IoX). The IoT trend report from Ericsson has predicted an
    IoT mount of up to 30.2 billion devices by 2027 at a CGPR of 13% (Ericsson, 2023).
    The meticulous fusion of the Internet of Things (IoT), cloud computing, and futuristic
    software-defined network backbone have motivated the evolution of novel cyber-physical
    systems (CPS). The advanced intelligent grids, transportation, agriculture, healthcare,
    and Industry 4.0 have brought the divergent domains together. The communication
    backbone has always been an inseparable and indispensable component of a cyber-physical
    system. The decoupling of data and control planes in the network architecture
    has opened the ports to the lattice of technologies by offering configurable,
    cost-effective, and intelligent solutions (Halpern et al., 2010). Software-defined
    networking (SDN) architecture offers novel network configurations and policy enforcement
    opportunities. The SDN has got researchers'' attention because of its flair for
    providing resilient security frameworks. The business value articulation of SDN
    and endless applications offers the configurable software-defined network a dominant
    role in building a software-defined CPS (SD-CPS) (Molina and Jacob, 2018). The
    ‘cyber-world’ acclaims another significant component in the cyber-physical system
    hierarchy (Snehi and Bhandari, 2021a). The cloud model offers on-demand computing
    services with its elastic pooled infrastructure and broad network access. The
    evolution of IoT and cloud adaption is exponential. The volumetric network traffic
    from endless IoT devices floods the cloud. It fills the cloud''s data lakes with
    redundant data involving excessive usage of computing services and defeating the
    primary responsibilities promised by the cloud (Jindal and Maini, 2014). Fog computing
    is another contemporary computing paradigm in a state-of-the-art CPS. Fog offers
    additional services to the cloud by carrying out data analytics at the edge of
    the cloud, facilitates networking and storage supports, helps in latency reduction,
    and adds a computing support dimension to the cloud network. 1.1. Cyber–physical
    systems and industry 4.0 Cyber-physical systems tightly integrate computing, networking,
    and physical processes. They often comprise sensors, actuators, and control systems
    interacting with the physical world to achieve a specific goal. Examples of cyber-physical
    systems include autonomous vehicles, industrial control systems, and smart cities.
    The hardware includes sensors, actuators, and computing devices, such as microcontrollers
    or embedded systems. The software consists of algorithms for processing data,
    making decisions, and controlling physical processes. The interconnected cyber-physical
    system concept map (as illustrated in Fig. 1) vividly portrays a seamless feedback
    loop impacting the human, environmental and economic factors. The real-time or
    offline implementation of the cyber-physical system is distributed or centralized
    with reactive or preventive actions for an event. The widespread adoption of Cyber-Physical
    Systems demands that cybersecurity become an indispensable aspect of these systems
    to ensure their resilience and compliance with privacy regulations. Effective
    cybersecurity measures protect CPS against potential cyber-attacks and safeguard
    critical data, which is at the heart of these systems. The system''s design identifies
    hazards and protects the system from physical, chemical, biological, radiological,
    or environmental hazards. Download : Download high-res image (705KB) Download
    : Download full-size image Fig. 1. Cyber-physical system - a concept map. With
    the admiration of the fourth industrial revolution (a.k.a. Industry 4.0), cyber-physical
    systems further conceptualize highly automated transformation of societal processes,
    technology, and industries into interconnected intelligent ecosystems well appropriate
    for decentralized decisions, interconnections, and information transparency (Paul
    et al., 2021). The principal ingredients of Industry 4.0 are Artificial Intelligence,
    Big-data, IoT, Software-defined Networks, and Robotics. The abstraction of Industry
    4.0 architecture has captivated analogous cyber-physical systems such as Healthcare
    under the same umbrella and deemed with the like principles (Wadhawan and Maini,
    2022). The market players such as Microsoft have adapted Healthcare 4.0 revolution
    and offered Azure-based cloud services for cost-effective quality by offering
    interoperable, virtualized, and distributed services (Microsoft, 2023). The principle
    ingredients of modern smart systems, IoT devices, have weak security implementations.
    The specific-purpose IoT devices stand highly vulnerable to attacks. The physical
    devices can be compromised easily to participate in the botnet army. An open source
    botnet (Mirai - an IoT malware) source code has revealed that the devices can
    be easily brute-forced to jailbreak into weakly secured devices and compromise
    (Snehi and Bhandari, 2021b; Verma et al., 2021; Singh et al., 2022). This research
    is motivated by IoT-DDoS attacks triggered by unsecured IoT devices, which could
    contribute to more frequent and extreme attacks in the future. 1.2. IoT-DDoS attacks
    As technological advancement speeds, so does the sophistication of cyber attacks.
    IoT-generated Distributed Denial-of-Service (DDoS) attacks have emerged as one
    of the most devastating cyber-attacks in this rapidly evolving landscape (Zarpelão
    et al., 2017). Due to weak security implementation, the omnipresent IoT devices
    are vulnerable targets for any device compromise and help participate as an attacking
    army. IoT-generated DDoS attacks (IoT-DDoS) are the most devastating attack types
    affecting system availability. IoT-DDoS, based initially on the Mirai botnet,
    has undergone multiple mutations since its inception. In its elementary form,
    IoT-DDoS has four principal constituents: Command and Control (C&C), Scanner,
    Loader, and Report Server. C&C offers the bot shepherd with a centralized administration
    interface and commands to stage the DDoS attack. The scanner disseminates with
    vulnerable IoT devices and sends the specifics of vulnerable IoT devices to the
    report server. Loader transfers the malware binary file (based on the CPU architecture
    of the target bot) to the weakly secured IoT device. The report server maintains
    the database to store the botnet devices'' specifics. Fig. 2 explains the modus
    operandi for IoT-DDoS. The attack sequence employed for IoT-DDoS is given as:
    Download : Download high-res image (182KB) Download : Download full-size image
    Fig. 2. IoT-DDoS modus operandi. (a) STEP-1: Scanner scans the network and brute-forces
    into available IoT devices. (b) STEP-2: Scanner sends the device specifics for
    successful brute-forced IoT to the report server. (c) STEP-3: Loader queries the
    reporting server for vulnerable devices. (d) STEP-4: Loader transfers the malware
    binary file per the IoT device''s CPU architecture to the victim IoT device. (e)
    STEP-5: The C&C fetches details of compromised bot''s details from the reporting
    server. (f) STEP-6: The C&C sends the ‘ATTACK_LAUNCH’ command to the botnet army.
    (g) STEP-7: Botnet army follows the attack command from C&C and sends volumetric
    traffic to the target server to overwhelm the server resources. As the IoT traffic
    is diverse and heterogeneous, traditional DDoS detection frameworks are inefficient.
    Hence, sophisticated machine and deep learning algorithms are the critical priority
    in developing intelligent and self-learning machines for zero-day attacks (Haq
    et al., 2015; Tahsien et al., 2020; Virk and Maini, 2023). Additionally, to reduce
    the cloud computing overhead due to unnecessary use of resources in redundant
    data processing, it is recommended to deploy the traffic monitoring and analytics
    systems at the fog computing layer to attain low-latent industrial CPS. 1.3. Scope
    of the paper The paper aims to develop a novel mitigation framework against real-time
    IoT-DDoS attacks in a fog-assisted software-defined cyber-physical system. The
    paper also publishes an amalgamated dataset for IoT-based DDoS attacks for the
    research community. Though the article presents the case study for Industry 4.0
    as the potential prospect for the framework implementation, the proposed framework
    may find its applicability in diverse cyber-physical systems. The prime objective
    of the article is to deliver optimized defense framework components and propose
    a light mitigation scheme without adversely affecting the performance of a software-defined
    networking controller. Moreover, the experimental study aims to bring distributed
    computing from cloud to fog computing infrastructure by horizontally scaling the
    computing nodes to offer cloud-like on-demand services. Last but not least, the
    article intends to introduce a novel IoT-DDoS-Detection-as-a-Service (IDDaaS)
    concept to lower the computing cost, scalability, portability, easy integration,
    upgrades, and a novel platform to develop proofs-of-concept for the research community.
    The paper develops a defense framework against TCP, UDP, and HTTP attacks, and
    contemporary protocols such as MQTT are out of scope. Moreover, the paper must
    validate the framework for cutting-edge deep learning-based technology and recommend
    it as a prospect. 1.4. Acronyms The description of acronyms used in the paper
    is depicted in Table 1. Table 1. Acronym. Acronym Description CPS Cyber Physical
    System DDoS Distributed Denial of Service DRF Distributed Random Forest HTTP Hyper
    Text Transfer Protocol ICMP Internet Control Message Protocol IoT Internet of
    Things IP Internet Protocol LSTM Long Short-Term Memory ML Machine Learning MQTT
    Message Queue Telemetry Protocol PCC Pearson Correlation Coefficient RNN Recurrent
    Neural Network SDN Software-defined Network SD-CPS Software-defined CPS IDDaaS
    IoT-DDoS Detection as a Service SVM Support Vector Machines TCP Transmission Control
    Protocol UDP User Datagram Protocol 1.5. Motivation CPSs are recasting how humans
    communicate and interact with intelligent systems in Industry 4.0. For example,
    Healthcare 4.0, under the umbrella of Industry 4.0, has become famous for its
    ultramodern services. The COVID-19 pandemic (Yuki et al., 2020) has pushed Remote
    Patient Monitoring (RPM) priorities ahead of traditional healthcare. The cutting-edge
    Medical Cyber-Physical Systems are committed to improving patient experience,
    reliability, and quality of patient data. The adaption rate is too high, and it
    is predicted that the healthcare market will grow from $185.3 billion in 2020
    to $528.9 in 2027, with Compound Annual Growth Rate (CAGR) of 16.2% (Research,
    2023). The major market players like IBM, Cisco, GE Healthcare, Allscripts Healthcare,
    Apple Inc, and AT&T Inc are invading the healthcare sector to transform the patient
    experience with enhanced patient engagement, improved medical care, and improved
    health data insights solutions. Additional application areas of cyber-physical
    systems such as power grids and Agriculture 4.0 (Ferrag et al., 2022) show similar
    adaptation trends and market growth rates. The research is also motivated by the
    massive growth of IoT devices, diversity, and applicability in almost every domain.
    The exponential and endless IoT applications produce volumetric network traffic.
    The network traffic from IoT devices is forecasted to grow to 79.4 ZB by 2025
    (Gartner, 2023). The volumetric network traffic containing structured and unstructured
    data offer a sea of opportunities in big data and data analytics spheres. In the
    ever-evolving world of cyber attacks, a recent report from Kaspersky lab (Q3-2022)
    (Kaspersky-Labs, 2022) has revealed that UDP flood is the go-to attack type, accounting
    for over half of all DDoS attacks at 51.84%. Not far behind, SYN flood attacks
    were the second most popular at 26.96%, with TCP floods trailing behind at 15.73%.
    Meanwhile, the lesser-known HTTP flood comprised just 3.77% of all attacks. The
    applicability of IoT devices in all spheres of life has motivated attackers to
    conceive novel attacks. Hence, the implications of IoT security infringement are
    manifold and need the immediate attention of researchers. 1.6. Research and development
    questions In this research endeavor, we undertake the pressing issue of IoT-DDoS
    attacks by proposing a comprehensive and effective mitigation solution. The authors
    have sought to address the research questions outlined below, and the ensuing
    discussion provides a detailed analysis and comprehensive response to each of
    these inquiries. (i) RQ1: How can inherent diversity, complexity, and network
    traffic behavior demonstrated by IoT devices be effectively captured and analyzed?
    Can the behavior features unique to IoT devices be leveraged to identify and mitigate
    IoT-DDoS traffic accurately? (ii) RQ2: What are the potential challenges and limitations
    of relying solely on a single dataset to address the full spectrum of IoT traffic
    diversity, and how can these challenges be overcome? (iii) RQ3: How can a combination
    of multiple stack-ensembled algorithms be effectively integrated and optimized
    to provide enhanced protection against an ever-evolving threat landscape? (iv)
    RQ4: Can the security solution be decoupled from the SDN code to offer a lightweight
    mitigation scheme that minimizes the impact of security measures on the overall
    SDN performance? This research aims to explore the feasibility of such an approach
    and provide insights into its potential benefits and limitations. (v) RQ5: What
    measures can mitigate latency concerns and ensure optimal performance of a deployed
    cyber security solution without compromising the system''s ability to detect and
    respond to potential security threats effectively? (vi) RQ6: What strategies and
    approaches can transform a tailored cyber security solution into a reusable, portable,
    and scalable architecture capable of providing effective threat detection and
    response across various network environments and infrastructures? 1.7. Paper contributions
    As the menacing shadow of IoT-DDoS attacks looms ever more extensive, the article
    publishes amalgamated and simulated datasets for IoT-DDoS attacks. The paper proposes
    a novel multi-stage attack mitigation framework against IoT-DDoS attacks. The
    research also offers a visionary Service-Oriented Architecture (SOA) for IoT-DDoS
    detection and a light yet effective mitigation scheme. The paper embarks on the
    journey to deal with the intricacies confronted by the research community and
    presents a comprehensive breakdown of our endeavors as follows: (i) Publishing
    Robust IoT-DDoS Datasets through Amalgamation and Simulation: In this rapidly
    evolving technological landscape, cyber attacks are becoming increasingly sophisticated
    and advanced, making it essential for DDoS mitigation solutions to keep pace with
    these developments. However, a significant challenge these solutions face is inadequate
    training data to handle cutting-edge network traffic. With a robust and diverse
    dataset to train on, self-learning algorithms may be able to effectively identify
    and mitigate attacks, turning networks vulnerable to resilient. In response to
    this challenge, the paper proposes a novel approach to generate a composite dataset
    from the current benchmarked dataset. By combining data from a range of attack
    scenarios, this hybrid dataset provides a strong foundation for learning techniques.
    The paper not only presents a comprehensive simulation of various attack scenarios
    using simulators and botnets based on the Mirai philosophy but pushes the envelope
    by generously publishing the resulting dataset, providing valuable resources for
    future research in the field. (ii) Low Complexity Feature List: The paper proposes
    a novel attack detection philosophy centered on the behavioral attributes of IoT
    devices. By prioritizing computationally inexpensive network flow attributes over
    expensive deep packet inspection features, the approach presents a realistic and
    efficient solution to identifying IoT-DDoS attacks, offering a cost-efficient
    alternative to more resource-intensive detection methods. The paper''s findings
    demonstrate that the device''s behavioral characteristics are a reliable and effective
    means of identifying these attacks, with encouraging experimental results that
    underline the approach''s value and efficacy. (iii) Radical IoT-DDoS Detection
    Metric: The paper introduces an efficient approach to IoT-DDoS detection, leveraging
    a multi-stage Stack-Ensemble of optimized Distributed Random Forest (DRF) and
    Extreme Gradient Boosting Trees (XGBoost) to produce novel and highly effective
    detection metrics that outperform traditional methods in both accuracy and efficiency.
    (iv) Optimized Fog Architecture: The paper unveils the untapped potential of fog-computing
    architecture by determining and addressing the research gaps in the current literature.
    It puts forth an off-the-wall proposal to offer a novel approach to incorporating
    cloud-like services for IoT-DDoS detection into the fog layer through on-demand
    elastic infrastructure implemented on top of distributed computing promises to
    transform the domain. (v) Service-Oriented Architecture (SOA) for IoT-DDoS Detection:
    The paper proposes a leading-edge IoT-DDoS detection-as-a-service (IDDaaS) that
    offers a cost-effective, extensible, and highly scalable defense solution against
    the ever-evolving landscape of heterogeneous volumetric IoT traffic. The experimental
    study deploys the IDDaaS in the fog network to reduce the response latency. However,
    cloud deployment can offer a reusable software component for research in a similar
    realm. (vi) Event Driven Light Mitigation Framework: The experiment decouples
    the IoT-DDoS mitigation algorithm from the SDN controller''s main application
    code by strategically integrating a service-oriented and event-driven architecture.
    The tight coupling of the defense logic and the controller''s code can harm the
    controller''s overall performance, particularly its ability to handle and process
    network traffic effectively and efficiently. 1.8. Paper organization The present
    manuscript is structured to facilitate a comprehensive understanding of the research
    study. Section 2 provides an extensive literature review and identifies research
    gaps, paving the way for the proposed cutting-edge solutions. Fig. 3 illustrates
    the end-to-end process for developing the defense framework with the outcome details
    at each stage. The process starts with presenting the system model and elucidating
    oT-DDoS detection philosophy in section 3. The system model highlights the improvements
    in the fog-computing layer by implementing the limitations in existing solutions.
    Section 4 covers the implementation details, including the employed datasets,
    the integration of datasets, feature engineering, and the stack-ensemble model.
    The section also describes the SDN-based light mitigation framework integrated
    with the IoT DDoS detection service. Section 5 covers the experimental details
    for the development and deployment environment. In section 6, the paper delves
    into the experimental results and offers a thorough discussion of them. The section
    7 elucidates the study''s significant contributions while delving into the prospective
    avenues for future research exploration. Finally, section 8 concludes the study
    with recommendations and outlines future research directions. Download : Download
    high-res image (406KB) Download : Download full-size image Fig. 3. Activity diagram
    for proposed work. 2. Related work With the widespread proliferation of IoT devices
    and diverse traffic patterns, sophisticated cyber attacks have become increasingly
    prevalent, underscoring the urgent need for robust and effective security solutions.
    This paper presents the comprehensive details of the latest available studies
    involving work against IoT-DDoS attacks in multiple dimensions with the intent
    to perform a polyhedral analysis. The literature explores the solutions inheriting
    the datasets used in the experimental study, i.e., BoT-IoT, In-SDN, and UNSW-Sydney
    datasets (Verma et al., 2020). However, the study is more exhaustive than the
    dataset mentioned above; other contemporary realms and the applicability of solutions
    in Fog, Cyber-Physical System environments have been investigated as follows.
    2.1. Literature inheriting BoT-IoT dataset The following cutting-edge solutions
    leveraged the BoT-IoT dataset, an innovative and comprehensive dataset delivering
    realistic network traffic generated by a wide range of IoT devices, to develop
    their DDoS defense solution. Koroniotis et al. (2019a), the BoT-IoT dataset''s
    originator, set up an IoT lab environment simulating weather station and smart
    fridge to generate legitimate and attack traffic for MQTT traffic. They tested
    the reliability of the dataset using ML (SVM, RNN, and LSTM) and statistical techniques
    (Pearson Correlation Coefficient and Entropy). The paper needs to report vital
    performance metrics other than accuracy. Nimbalkar and Kshirsagar (2021) proposed
    the feature selection technique for the NIDS system. They evaluated and validated
    the efficiency of selected features on BoT-IoT and KDDCup''99 datasets using JRipClassifier.
    They trained and tested the model using synthetic data and failed to report the
    results in the simulation environment. Shafiq et al. (2020) suggested a machine-learning-based
    bot detection framework. The authors used correlation and area-under-curve-based
    metrics to select novel traffic features leveraging the BoT-IoT dataset. They
    applied Shannon Entropy to detect IoT-generated attack traffic. The paper lacked
    reporting the vital performance metrics and validation in the simulation environment.
    Ferrag et al. (2020) created a NIDS based on decision trees leveraging BoT-IoT
    and CICIDS2017 datasets for experimentation. The study needs to include a discussion
    of vital performance metrics but accuracy. 2.2. Work leveraging InSDN dataset
    The innovative solutions discussed herein have successfully devised a potent DDoS
    defense mechanism by capitalizing on the InSDN dataset, an extensive repository
    of open-flow traffic in SDN ecosystems. With the intent to publish an SDN-based
    dataset to the research community, Elsayed et al. (2020) invested their sincere
    efforts in inventing an SDN-based attack dataset. The authors have offered a realistic,
    labeled dataset covering the attack diversity comprising 83 attributes in the
    traffic flows. They evaluated the dataset on the Mininet emulated environment.
    A variety of attack scenarios such as DDoS, Web-Attacks, Remote-to-Local (R2L),
    Malware, Probe, and User-to-Root (U2R) have been covered in the dataset. Their
    solution is tightly integrated with the SDN controller and increases the computational
    load on the controller. Hence, the solution needs to be explored in the big-data
    dimension of IoT security. Firdaus et al. (2020) proposed a stack-ensemble-based
    DDoS detection model leveraging the InSDN dataset. They executed the experiment
    in a two-stage process. Stage 1 involved clustering and classification for feature
    selection. Furthermore, stage 2 involved an ensemble for clustering and classification
    by employing KMeans++ and Random Forest classifier. But, the validation of the
    proposed work does not involve the real-time dataset. Zoppi et al. (2021) performed
    quantitative analysis on the InSDN dataset by employing unsupervised machine learning
    algorithms to identify issues and challenges in detecting zero-day attacks. They
    further described the impact of features on performance, appropriate metrics for
    security solutions evaluations, and meta-learning usage to reduce misclassification.
    Though their work is conceptual, no experimentation study has been carried out.
    2.3. Work adapting UNSW-Sydney dataset The innovative solutions discussed herein
    have effectively devised a powerful DDoS defense mechanism by expertly exploiting
    the vast UNSW-Sydney dataset as follows: In Sivanathan et al. (2017), the authors
    experimented with evaluating security threats to Smart-Home environments. In their
    empirical study, they developed test suites to investigate confidentiality, integrity,
    authorization, and availability. They installed 17 consumer IoT devices in their
    lab environment. Despite the comprehensive experimentation, the paper needs to
    discuss necessary performance metrics. Sivanathan et al. (2020) developed an SDN-based
    IoT cyber-security solution using machine learning techniques. They analyzed IoT
    traces and developed multi-stage ML architecture using flow attributes of the
    traffic. However, their work still needs the system performance evaluation against
    volumetric traffic and its impact on real-time traffic streaming. Singh et al.
    (2021) employed multi-classifier IDS leveraging the UNSW-Sydney dataset and proposed
    a fog-computing-based model with deep learning algorithms implementations. The
    paper needs a discussion of performance metrics in the results and experiment
    discussion. 2.4. Work in other similar dimensions The literature subsequently
    provides a comprehensive overview of the findings into the latest advancements
    in security solutions across various comparable domains as follows: Priyadarshini
    et al. (2020) proposed a light mitigation framework against IoT-DDoS attacks in
    Fog-computing-based Cyber-Physical Systems. They deployed the machine-learning-based
    defense solution onto the Fog-based SDN controller for latency reduction. The
    tight coupling of the deployed ML-based defense system with the SDN controller
    increases the computational load of the controller. They leveraged HPing-3 to
    generate TCP, UDP, and ICMP floods. Zhou et al. (2019) proposed a fog-based mitigation
    scheme against DDoS attacks in IIoT systems. They applied the fog concept at the
    edge of the IIoT network to reduce traffic latency and response time. They employed
    a signature-based attack detection methodology to filter the attack packets and
    validated the experimental testbed on the Industrial Control System. As IoT devices
    evolve and generate diverse network traffic, the signature-based detection approach
    may not be suitable for contemporary heterogeneous devices. Cvitić et al. (2021a)
    offered an innovative conceptual model for detecting IoT-DDoS attacks based on
    the behavioral traffic patterns manifested by IoT devices. The case study included
    the traffic classified into home monitoring, automated devices, electrical devices,
    and multimedia devices to cover a range of device behaviors. They further categorized
    the IoT traffic into Human Type Communication (HTC) and Machine Type Communication
    (MTC), forming the base of their conceptual model. The presented model is purely
    conceptual, and the authors planned the implementation. The authors extended their
    work in Cvitić et al. (2021b), experimented with 41 IoT devices, and applied logistic
    regression. However, the study needs a discussion of vital system performance
    metrics, scalability, and comprehensive validation. Özçelik et al. (2017) proposed
    an edge defense framework in reliance on an SDN controller. The mitigation framework
    against Mirai was used in the Fog environment. The article needs to include a
    discussion of the performance parameters of a defense system. Doshi et al. (2018)
    presented an ML-based method to distinguish attack traffic from legitimate traffic
    generated from intelligent consumer devices. They employed the stateful and stateless
    network features to build the ML model. They deployed several intelligent consumer
    IoT in-house to generate the IoT traces for TCP_SYN, UDP Flood, and HTTP Flood.
    The proposed solution was evaluated only against the in-house attack traffic rather
    than with the available benchmark datasets. Al-Mashadani and Ilyas (2022) proposed
    a defense framework leveraging SDN (OpenDaylight) capabilities. The Scapy tool
    was used to generate the traffic in the Mininet-based experimental study. The
    authors discussed the average detection time for the attack. The study needs to
    evaluate solutions against current datasets and include a discussion of performance
    metrics needs. In Wani and Revathi (2020), authors proposed an SDN-based security
    framework. They have used a Micro-Cluster-based Outlier (MCOD) for anomalous IoT
    behavior. They further used Multilayer perceptron to classify the DDoS attack.
    The discussion must include selecting the features best suited to the ML-based
    technique. Moreover, the experiment involved simulators, and the solution has
    not been validated using benchmark datasets for real-time traffic scenarios. Kumar
    et al. (2023) have introduced a novel approach to enhance the security and efficiency
    of IoT-enabled Smart Grid networks. It combined blockchain for secure communication,
    advanced Deep Learning for attack detection, SDN for low latency, and Digital
    Twin technology for behavior modeling. Pros include improved security and efficiency,
    while cons involve complexity, resource intensity, and potential adoption challenges
    in existing networks. Kumar et al. (2022) presented a novel framework for securing
    Software-Defined Industrial Internet of Things (SDIIoT) networks. It combined
    blockchain technology for secure data transmission and a deep learning-based flow
    analyzer to detect anomalies in network traffic. Pros include enhanced security
    and efficient traffic analysis, while potential cons involve increased complexity
    and resource requirements. Kumar et al. (2021) presented a privacy-preserving
    intrusion detection framework (P2IDF) for SDIoT-Fog networks, addressing data
    privacy and security challenges. It offered enhanced security and privacy through
    privacy-preservation techniques and intrusion detection using Artificial Neural
    Networks. Pros include improved security, privacy preservation, and high performance,
    while cons involve potential complexity and resource intensity during implementation.
    Javeed et al. (2023) introduced an innovative approach to address the challenges
    of managing the growing data traffic in IoT-enabled Consumer Electronics (CE)
    networks. It combined Software-Defined Networking (SDN) for flexible network management
    and Deep Learning (DL) using Cu-BLSTM for an effective IDS. Though it enhances
    network management and security, potential drawbacks include complexity and resource
    intensity during deployment. Table 2 presents the summary of literature work in
    the realm of IoT-DDoS attacks and the available defense and mitigation solutions
    in the similar domains. Table 2. Literature review summary. Ref Objective Method(s)
    Dataset Testbed Configuration Performance Koroniotis et al. (2019a) IoT-DDoS Detect
    ML (SVM, RNN, LSTM), Entropy In-Lab, BoT-IoT Lab Simulation Accuracy: SVM:88.3%,
    RNN: 99.7%, LSTM: 99.7% Nimbalkar and Kshirsagar (2021) NIDS JRipClassifier BoT-IoT,
    KDDCup''99 Not Available Accuracy: 99.57% Shafiq et al. (2020) IoT-DDoS Detect
    Shannon Entropy BoT-IoT Not Available Accuracy: 96%, Precision: 99.52% Ferrag
    et al. (2020) NIDS Decision Trees BoT-IoT, CICIDS2017 Not Available Accuracy:
    96.99% Elsayed et al. (2020) SDN IDS ML InSDN SDN Mininet Lab Accuracy: 99.7%,
    Precision: 99.72%, Recall: 99.76% Firdaus et al. (2020) DDoS Detect Ensemble InSDN
    Not Available Accuracy: 100% Zoppi et al. (2021) Zero-Day Detect Unsupervised
    ML InSDN Not Available Not Available Sivanathan et al. (2017) Ensure CIA ML UNSW-Sydney
    Smart Home Not Available Sivanathan et al. (2020) IoT Security Multi-stage ML
    UNSW-Sydney In-Lab Consumer IoT Accuracy: 98.7%, Precision: 99.7%, Recall: 98%
    Singh et al. (2021) IDS Multi-stage classifier UNSW-Sydney Not Available Not Available
    Priyadarshini et al. (2020) IoT-DDoS detect ML Not Available Simulation with Fog,
    SDN Accuracy: 82.81%, Precision: 82.83%, Recall: 83.13% Zhou et al. (2019) IoT-DDoS
    detect ML Not Available Simulation with Fog, SDN Accuracy: TC: 99.84%, Modbus:
    88.02% Cvitić et al. (2021a) IoT-DDoS Logistic Regression Not Available Simulation
    Accuracy: 99.79%, Precision: 99.7%, F1-score: 99.7% Özçelik et al. (2017) Security
    Framework ML Not Available Fog-based simulation Not Available Doshi et al. (2018)
    IoT-DDoS Defense ML Not Available Consumer IoT Accuracy: 99% Al-Mashadani and
    Ilyas (2022) Security Framework – Not Available Mininet Not Available Wani and
    Revathi (2020) Security Framework Micro-cluster based Outlier (MCOD) Not Available
    Lab simulation Accuracy: 95.9% Precision: 98.7%, Recall: 96.4% Kumar et al. (2023)
    Security Framework SA-BiGRU N-BaIoT Lab simulation Accuracy: 99.73% Kumar et al.
    (2022) Security Framework Blockchain and Deep Learning Not Available Lab simulation
    Not Available Kumar et al. (2021) Security Framework ANN ToN-IoT Lab simulation
    Accuracy: 99.44% F1-score: 98.61% Javeed et al. (2023) IDS DL (Cu-BLSTM) Accuracy:
    99.57% Proposed Work Security Framework Stack-Ensemble BoT-IoT, In-SDN, UNSW-Sydney,
    ADS SDN, Fog, Lab simulation Accuracy: 99.9% Precision: 99.9%, Recall: 99.9% F1-score:
    99.9% 2.5. Research gaps The literature review on DDoS detection and mitigation
    frameworks has uncovered valuable knowledge and visions for the course ahead.
    However, the survey has also highlighted several critical gaps in research, providing
    an excellent opportunity for future scholarly inquiry. Therefore, the critical
    dimensions surfaced during the extensive incursion into the literature, meticulously
    put together for the perusal as follows: (i) High Latency: A Data Transmission
    Bottleneck: A conspicuous concern from the literature landscape is the detrimental
    impact of high latency during data transmission to the cloud, highlighting a critical
    research gap that demands immediate attention. Only a few researchers have ventured
    beyond the surface-level exploration of fog computing to unravel the intricacies
    of execution performance and latency evaluation in data transmission (Priyadarshini
    et al., 2020; Zhou et al., 2019; Özçelik et al., 2017). (ii) Unsustainable Infrastructure:
    There needs to be more discussion on infrastructure cost optimization through
    low-cost design implementations. The high cost of implementation dominates the
    adoption of cutting-edge mitigation frameworks. The existing solutions must address
    an effective, low-cost solution for handling the massive data volumes of IoT devices.
    (iii) Legacy Upgrade Models: The cutting-edge solutions have a tight coupling
    of ML-based implementation and SDN code, making the attack detection algorithm
    upgrades a nightmare. There has yet to be a discussion on decoupling security
    core logic from the SDN controller. We have presented a conceptual model leveraging
    the network-function-virtualization (NFV) based security framework in our previous
    work (Snehi and Bhandari, 2021c). (iv) Not Suitable for Diverse IoT Data: The
    literature evidence that most researchers have focused on traditional methods
    of DDoS attacks. Moreover, machine and deep learning approaches also concentrate
    on deep packet inspection and specific network traffic features. The proposed
    solutions need more generalized attributes of the ingress network traffic flow
    that broadly apply to the diverse network traffic from IoT devices. (v) Limited
    Validation Scope: The proposed solutions, as discussed, have been tested only
    against a narrow range of scenarios, including a simulated lab setup or a single
    benchmark dataset. A more comprehensive validation strategy is necessary to address
    the challenges posed by the diverse and complex data generated by IoT devices.
    The is a need to reevaluate and optimize the approach to ensure its efficacy in
    handling a range of scenarios and heterogeneous data types. Therefore, a broader
    validation scope is critical for the success of any proposed solution in the rapidly
    evolving IoT landscape. 3. System overview A coherent and precise illustration
    of the Cyber-Physical System must account for the key components that make up
    its architecture, including IoT devices situated at the perception layer, connecting
    communication paths, computational nodes within the fog layer, an SDN controller,
    and cloud servers. The following section models the cyber-physical system mathematically
    and illustrates the necessary conditions for an IoT-DDoS attack to hold. The system
    description provides a comprehensive overview of the proposed model''s innovative
    fog computing implementation, representing a significant advancement over current
    solutions outlined in the existing literature. The detailed exposition of system
    components also encompasses an in-depth analysis of the attack detection philosophy
    reinforcing the proposed system and the attack detection metrics derived from
    the sophisticated algorithms at its core. The mathematical system model, including
    the core components of underlying cyber-physical system is represented as follows.
    3.1. Mathematical system model The cyber-physical system under test comprises
    multi-layered sub-systems, including the perception layer, fog-computing layer,
    and cloud layer. The bottommost perception layer is well connected to the cloud
    through a fog computing layer with a software-defined communication backbone (as
    shown in Fig. 4). Download : Download high-res image (217KB) Download : Download
    full-size image Fig. 4. System mathematical model. (For interpretation of the
    colors in the figure(s), the reader is referred to the web version of this article.)
    The definitions of primary components of the well-connected smart ecosystem, necessary
    conditions for IoT-DDoS attacks, and assumptions are as follows. 3.1.1. The perception
    layer At the heart of the cutting-edge Cyber-Physical System lies the perception
    layer, which comprises a vast and interconnected collection of physical and IoT
    devices, all working together to gather, process, and analyze real-time data to
    provide valuable insights and facilitate seamless communication and interaction
    between machines and humans alike. The legitimate systems at perception layer
    are defined as: where, IT defines the source nodes, physical systems, or IoT devices.
    Unfortunately, the perception layer is not immune to security threats. It is often
    vulnerable to compromise by malicious actors seeking to gain control of a network
    of compromised IoT devices, also known as a botnet. The attackers leverage the
    Botnet to launch devastating attacks on targeted servers, with potentially catastrophic
    consequences. The Botnet is defined as: where, B is the set of compromised IoT
    devices as botnet. 3.1.2. The fog computing layer The fog computing layer (software-defined
    fog in the scope of current work) offers a sophisticated and powerful framework
    designed to provide cloud-like services at the edge of the cloud. It also intercepts
    cloud traffic to perform traffic/data analytics and security functions. The fog
    is comprised of a wide range of infrastructure components, including computing
    nodes, servers, open-flow switches, links, and an array of SDN controllers. Fog
    systems are mathematically represented as: • The overall networked fog system
    is defined by the set where, is the set of fog system nodes. The fog system nodes
    include traffic monitoring systems and a server offering IoT-DDoS-Detection-as-a-Service
    (IDDaaS). • is the set of OpenFlow switches deployed at the fog network. • are
    the links connecting perception layer IoT devices to the fog system, defining
    the connectivity between fog components and fog-to-cloud connectivity. • defines
    fog-based SDN controllers. 3.1.3. The cloud layer The cloud layer lies at the
    heart of the cyber-physical system, a critical component that provides end users
    access to vital data storage and a wide range of services. The cloud system is
    defined by: defines target cloud servers. 3.1.4. Nexus lane The nexus lane or
    the path ‘P’ between source and destination is defined by: from source to destination.
    3.1.5. Necessary conditions for attack The section defines the necessary conditions
    for an IoT-based DDoS attacks as: (a) Condition 1: A direct or indirect path exists
    between botnet network and target server. (b) Condition 2: If ‘z’ is minimum bots
    required to generate IoT-DDoS, then number of bots deployed ‘n’ >= ‘z’. 3.1.6.
    Assumptions The model assumes that following conditions must evaluate to true
    for the cyber-physical system under study: (a) Assumption 1: There is secure communication
    channel C between fog and cloud. (b) Assumption 2: Training and validation of
    machine-learning model is done at regular intervals. Like a constellation in the
    night sky, the Fig. 4 elegantly displays the interconnected naming of components
    within the mathematical model for understanding and discovery. For example, one
    of the Nexus Lanes (P) follows the green links from the perception layer component
    IT1 to the cloud server (T1). The illustration defines the path P in EQ. (1) as:
    (1) 3.2. Reformed fog computing layer The proposed mitigation framework offers
    reformed fog computing over existing fog-based solutions in multiple dimensions.
    The software architecture design puts the distributed computing forward. It offers
    an elastic approach towards computing infrastructure by horizontally scaling the
    computing nodes (Patel et al., 2019). Furthermore, the deployment architecture
    of the intelligent stacked-ensembled meta-algorithm-based analytics in the IDDaaS
    interface offers the opportunity to extend the design into a reusable service
    for the research community. The comprehensive details of the improvement in the
    fog layer are as follows. 3.2.1. Distributed computational nodes The IoT traffic
    is enormous; the deployment pipeline requires high-end computing resources deployed
    at the detection framework. However, acquiring high-end computing resources is
    expensive. The work proposed in the present article''s scope leverages the concept
    of the computational load distribution from underlying machine-learning algorithms
    to worker nodes. Distributed computing avoids any significant computational and
    memory overhead at a single node (Nguyen et al., 2019; Achbarou et al., 2018;
    Al-Jarrah et al., 2014). In an attempt to establish a mathematical model that
    no losses are observed while distributing the computational load, Behal et al.
    (2021) proved that sum of computational metrics calculated at multiple Points-of-Presence
    (PoP) (where i = 1 to n) from source to destination is equal to the computational
    metric calculated at the destination Point-of-Presence . Hence, distributing the
    computational load influences memory and computing constraint devices positively.
    The authors have used the information theory metric ϕ-Divergence involving the
    probability distribution to calculate the entropy index parameter. The model in
    Fig. 5 shows that individual nodes Pi calculate the divergence metric from the
    packets, ( ), originating from source node ‘S’. Download : Download high-res image
    (221KB) Download : Download full-size image Fig. 5. Divergence calculations at
    individual point-of-presence and destination point of presence. The sum of divergence
    metric from the individual nodes is equal to divergence metric calculated at the
    destination node provided . The model is proven mathematically in EQ. (2) as:
    (2) Furthermore, advanced big data tools such as Spark and H2O.ai distribute the
    computational load to worker nodes in a machine-learning pipeline for efficient
    and real-time processing of volumetric ingress data. 3.2.2. Elastic computing
    infrastructure Exponentially increasing demands for Smart-Systems pose an essential
    responsibility for the underlying infrastructure to be resilient, fault-tolerant,
    and able to handle volumetric traffic with zero (or near to zero) latency (Venters
    and Whitley, 2012; Gama et al., 2019; Salman et al., 2018). The cloud servers
    can scale hardware vertically for high-end computations and horizontally for load
    balancing volumetric traffic analysis (Abbasi et al., 2021; Muñoz et al., 2018).
    The proposed fog-computing defense framework architecture is designed for horizontal
    scaling to distribute the computational load. Horizontal scaling is easy and more
    efficient than vertical scaling, has zero (or near to zero) downtime, is resilient,
    fault-tolerant, and has improved performance. Thus, it can provide on-demand computing
    (Buch, 2018) with reduced latency compared to the cloud layer offers. 3.2.3. SOA
    for attack detection at fog layer The proposed defense framework offers a cost-effective
    solution with an IoT-DDoS-Detection-as-a-Service (IDDaaS) interface against IoT-DDoS
    attacks. It delivers better time management and high compatibility solutions to
    the end-user. The software solution offers less responsibility toward infrastructure
    management and increased vendor responsibility. The vendor is responsible for
    training the model regularly; the service provides resiliency against zero-day
    attacks with an abstraction to the underlying model. The availability of IDDaaS
    as a web service and easy accessibility through HTTP protocol sets the stage for
    the service to be deployed at either fog level in production deployments to address
    latency issues or the cloud layer for the research community for further exploration
    and research. The versatility of the DDoS attack detection service, shown in Fig.
    6, is demonstrated by its ability to be consumed by SDN controllers at enterprise
    network entry points, integrated with NIDS systems, repurposed for research labs,
    deployed as honeypots, and utilized by educational institutes for training and
    research purposes. Download : Download high-res image (260KB) Download : Download
    full-size image Fig. 6. IDDaaS with application subsets of potential domains.
    3.2.4. SDN-based light-weight mitigation framework In contrast to contemporary
    solutions, the proposed framework offers a light mitigation scheme for Software-defined
    Cyber-Physical Systems. The tight coupling of mitigation schemes into SDN directly
    impacts SDN performance. The evolving machine and deep learning models are computationally
    expensive, requiring a dedicated high-end hardware setup for analytics. Tight
    coupling of the mitigation scheme into SDN controller exploits controller computing
    capability. Hence, in contrast to available solutions, the proposed mitigation
    scheme queries a database that stores the blocked IP addresses and determines
    if the traffic from the ingress IP address should be allowed or deferred. The
    parallel thread on a dedicated traffic monitoring machine is responsible for capturing
    the incoming network traffic, translating the packet capture files into meaningful
    feature files, querying the IDDaaS modules for suspicious IP addresses, and updating
    the database with the blocked IP address. The architecture helps SDN accomplish
    the intended functionality with the light mitigation scheme without impacting
    the controller performance. 3.3. IoT-DDoS detection philosophy The heart of the
    IoT-DDoS detection philosophy lies in the authors'' previous work on IoT device
    classification based on the behavioral attributes of IoT devices (Snehi and Bhandari,
    2022). The IoT devices are low computational powered, special-purpose devices
    meant to transfer the specific data to the server at regular intervals. Hence,
    the experiment leverages the behavioral aspects of IoT devices to identify legitimate
    and attack traffic. The IoT device classification philosophy presented in earlier
    work holds for classifying the IoT-DDoS attack. The algorithm based on behavioral
    technique is computationally fast as it does not require scanning the payload
    (Snehi and Bhandari, 2021d). The derived model adds a few more features to the
    feature list and introduces some features that contribute to the behavioral aspects
    of the network traffic. The comprehensive details of the feature list are discussed
    later in the section 4. The details of the core behavioral features for the IoT-DDoS
    detection philosophy are as follows. 3.3.1. Data exchange features As the IoT
    devices are special-purpose low computational devices deployed to transfer specific
    physical entities and attributes to the server, the cyber-physical system controls
    the data being transmitted. Behaviorally, the dedicated device transfers small
    chunks of data in a short burst to the server. However, the distributed denial
    of service attack traffic constantly transfers the high volume network traffic
    to the server to overwhelm the server resources. Therefore, flow volume per-flow
    level and average flow rate for an IoT device that identifies the IoT traffic
    behavior are defined as: (3) (4) In EQ. (3), represents sum of bidirectional bytes
    transfer during a flow. Similarly, EQ. (4) depicts average flow volume per unit
    time. The experimental study has evaluated TCP_SYN, UDP flood, and HTTP_Flood
    attacks. Fig. 7 (a) draws the number of data packets exchanged during the legitimate
    flow and the comparative plots for TCP, UDP, and HTTP flooding. Fig. 7 (b) plots
    the flow volume for the similar trend. The plots infer that internet-enabled embedded
    machines exchange an average of 2 packets per flow ranging from 2-4 packets for
    more than 90% of the flow entries. However, TCP flood has an exchange rate of
    4 packets per flow. On a similar trend, 7-12 UDP packet exchanges and 16-25 packet
    exchanges are recorded per-flow entries. Similarly, an average flow volume of
    2500 bytes per flow, 1500 bytes per flow, and 3500 bytes per flow is observed
    for legitimate, TCP flood, and UDP flood. Therefore, the plots illustrate a precise
    distinction between legitimate traffic and the attack traffic. A similar trend
    is observed for flow rate. Fig. 7 (c)-(d) illustrates that legitimate traffic
    has a comparatively low flow rate than HTTP flood. In contrast, HTTP and UDP floods
    have a higher flow rate than legitimate traffic. Download : Download high-res
    image (890KB) Download : Download full-size image Fig. 7. Data exchange attributes
    illustration (a) Total packets exchanged per flow (b) Flow volume (Bytes) per
    flow (c) Flow rate: Legitimate vs HTTP flood (d) Flow rate: Legitimate vs TCP
    flood. 3.3.2. Device activity attributes The IoT devices transfer the data in
    small bursts with the specified time interval between each burst. The IoT devices
    close sockets with the server during the packet inter-arrival time (a.k.a. idle
    time). IoT devices'' idle time patterns and small packet sizes help distinguish
    between legitimate and attack traffic. Hence, idle time and flow duration are
    critical parameters for flow classification. Flow duration for ith flow is the
    time duration for which the flow was active. Mathematically, flow duration is
    described as (in EQ. (5)): (5) Similarly, device idle time for ith flow is time
    difference between start of flow and the current flow (ith flow) and is defined
    as in EQ. (6). (6) Fig. 8 (a) shows that IoT devices observe an averagely small
    flow duration of 300 ms ranging from 45-600 ms. The plot infers that the average
    flow duration for more than 80% of traffic is 250 ms. However, the attack traffic
    maintains a significantly high flow duration because it tries to keep the connection
    alive for a longer duration and floods the channel with the attack packets. Fig.
    8 (b) shows that the TCP and UDP flood traffic has a significantly higher flow
    duration. HTTP flood has a significantly low flow duration due to Slowloris HTTP
    attacks, where attackers send a high volume of tiny packets to overwhelm the server
    resources. Download : Download high-res image (943KB) Download : Download full-size
    image Fig. 8. Device activity pattern attributes illustration (a) Flow duration:
    Legitimate traffic vs TCP flood vs UDP flood (b) Flow duration: Legitimate vs
    HTTP flood (c) Idle time: Legitimate flow (d) Idle time: TCP flood vs UDP flood
    vs HTTP flood. On a similar trend, the device IdleTime possesses a uniquely identifiable
    behavior for legitimate and DDoS traffic. Fig. 8 (c) shows that the internet-enabled
    embedded devices observe a predefined idle time pattern between flows. The TCP,
    UDP, and HTTP flood traffic (Fig. 8 (d)) keep the connection alive with the packet
    floods for longer. 3.3.3. Rationale of IoT-DDoS detection philosophy The rationale
    compiled from the illustrated graphs ((Fig. 8 (a)-(d))) indicates the specialized
    and distinctive behavioral patterns exhibited by IoT devices. The behavioral attributes
    unique to IoT devices provide valuable insights into IoT design philosophy and
    are rooted in their data exchange and device activity patterns. The characteristics
    of the network traffic originating from IoT devices are as follows: (i) The IoT
    devices are low computational powered, specific-purpose devices meant to transfer
    the specific data to the server at regular intervals. The specific-purpose devices
    have significantly less flow duration (Zhou et al., 2019; Ullah et al., 2009;
    Hanif et al., 2019). (ii) The IoT devices stay in idle disconnected state while
    not communicating to the server. Hence, IoT devices observe the sleep time (idle
    time) between flows (Sivanathan et al., 2020). (iii) Machine-2-Machine (M2M) traffic
    assumes one of the three states: Periodic traffic exchange, traffic generated
    due to trigger of some event, or payload exchange (Finley et al., 2020; Jara et
    al., 2014). (iv) The IoT devices, being specific purpose device, transfer only
    limited data to the server in each of the network flow. Hence, low flow volume
    is observed for IoT devices. (v) Low flow volume infers to low average flow rate
    i.e., data transfer per unit of time. (vi) Each class of IoT device exists for
    a specific purpose. Hence, each of the device observe different data transfer
    patterns. Therefore, every IoT class has a specific pattern and value for the
    device''s behavioral attributes. So, the devices can also be classified and distinguished
    from each other based on device behavioral patterns. The behavioral class paves
    the foundation for the IoT-DDoS defense framework. The perceptive philosophy of
    IoT detection asserts that through the meticulous analysis of behavioral attributes
    within network traffic, including data transfer volume, frequency, and sleep time
    patterns, distinct patterns can be deduced, thereby enabling swift and precise
    differentiation between legitimate IoT traffic and nefarious attack traffic. 3.4.
    IoT-DDoS detection metric The proposed metric for IoT-DDoS detection utilizes
    a stack-ensemble algorithm built on top of XGBoost and Distributed Random Forest
    (DRF) algorithms. The two algorithms prove sequent intended to derive a meta-learning
    stack-ensembled algorithm. The proposed work presents the novelty of the machine-learning-based
    algorithm in selecting the best-performing base algorithms with tuned hyper-parameters.
    The illustration of the details of the individual participating base algorithm
    and meta-learning algorithms are as follows. 3.4.1. Distributed random forests
    and extreme gradient boosting The heart of IoT-DDoS detection meta-learning model
    lies in Distributed Random Forest (DRF) (Hoon et al., 2018) and Extreme Gradient
    Boosting (XGBoost) (Zhang et al., 2018) that are founded on decision trees. The
    Stack-Ensemble trains multiple unique classifier ensembles in a parallel fashion.
    The homogeneous ensembles are highly recommended for building a solid stack ensemble
    for ease of fusion (Tama et al., 2020). The experimentation uses the H2O.ai library
    to construct a stack-ensembled classifier that recommends using XGBoost, DRF,
    GBM, and GLM (the homogeneous classifiers built on top of Decision Trees) for
    a robust classification model. Several researchers have employed multiple classification
    algorithms for Network Intrusion Detection Systems and advocated the mentioned
    classifiers (DRF and XGBoost) for their best performance and classification results
    (Gouveia and Correia, 2020; Alzahrani and Alenazi, 2021; Chen et al., 2023). Another
    compelling motivation to use the XGBoost is the ability for distributed computing
    and parallelization for real-time prediction systems (Anande and Leeson, 2023).
    Furthermore, the model employs a more regularized model, thus providing better
    performance and reducing the model complexity to avoid overfitting (Sathiyapriya
    et al., 2023). Similarly, the DRF is advocated for its ability to reduce the correlation
    between trees by randomly selecting the features (Kwon and Lim, 2023). Hence,
    it improves the prediction power and results in higher efficiency. Another advantage
    of DRF is being good at handling high dimensional data because it can handle missing
    data, continuous, categorical, and binary data (Tama et al., 2020; Kwon and Lim,
    2023). The Stage-1 (Meta model) type is the Generalized Linear Model (GLM). The
    model has more than two classes (device type) as outcome responses. The GLM classifier
    is recommended as the best fit for the given stacking of base classifiers (XGBoost,
    DRF, GBM) by the H2O.ai library because of its less susceptibility to overfitting
    (Tama et al., 2020; Chen et al., 2023). Moreover, the model is easy to interpret
    and clearly understands how each base learner influences the outcome. The machine
    learning pipeline avoids errors/bias propagation to the next level by selecting
    strong learners as base classifiers. Hence, strong learners at the base are utilized
    to model a robust classifier at the meta-model stage. The internal nodes of the
    tree represent a test on the data characteristics (attribute), branch depicts
    the outcome from the test, and leaf holds the classification result. The choice
    for the algorithms is made on the fact that the network flows from the available
    datasets are in form of structured tabular data, hence decision trees algorithms
    are best-in-class. A Distributed Random Forest (DRF) works on the principle of
    Decision Trees operating as an ensemble. Each tree in the forest predicts the
    classification outcomes, and the class with the most votes becomes the prediction
    outcome of the model. Mathematically, if is prediction class of nth tree in random
    forest, then final prediction class of the random forest is defined in EQ. (7)
    as: (7) Random forests compute the feature importance as a factor of reduction
    in node impurity weighted by the likelihood of reaching that specific node. The
    probability of reaching the node ‘n’ is defined by EQ. (8) as: (8) The nodes in
    the classification forest are defined by Gini index as (EQ. (9)): (9) Here, is
    the relative frequency of a class under observation and ‘n’ are the total number
    of classes. The low correlation of individual trees protects each other from individual
    errors. Moreover, the model relies on critical features that make it perform better
    than random guessing. DRF takes advantage of the fact that decision trees are
    sensitive to training data, and a slight change in training data may alter the
    complete decision tree structure. Hence, DRF leverages bagging to generate a forest
    of unique decision trees. Furthermore, DRF builds the decision trees with a random
    subset of features to force more variations amongst trees resulting in a low correlation
    between trees, hence, the tree diversification. The core of XGBoost is the Decision
    Trees Ensembles (DTE) (Sangkatsanee et al., 2011; Rai et al., 2016). DTEs are
    based on the CART structures (Classification & Regression Trees) (Chkirbene et
    al., 2020; Douiba et al., 2023) that are the tree structures involving decisions
    at each level of the tree. The lineage of XGBoost can be attributed to its genesis
    in Decision Trees (DT). The advent of the problem-to-solution mapping technique
    was first marked by the introduction of Decision Trees, which relied on graphical
    representations to depict the mapping process visually. The series of advancements
    continued with Bagging techniques after Decision Trees, which employed a collective
    ensemble approach based on voting to combine predictions from many decision trees.
    After Bagging, the development of Random Forest marked the next stage in the progression,
    utilizing a feature subsampling mechanism to select random subsets of attributes
    and then rebuilding the forest model. The subsequent step in the process involved
    iterative reconstruction of the model to reduce inaccuracies, incorporating feedback
    from the previous model to enhance its performance. This process is commonly referred
    to as Boosting. Gradient Boosting, as an extension of the Boosted Model, entails
    the combination of multiple weak learners to construct a robust predictive model.
    Hardware and software optimization culminates in the development of Extreme Gradient
    Boosting, which characterizes boosted machines operating at an unparalleled efficiency,
    analogous to algorithms running on steroids (Gupta and Singh, 2023). 3.4.2. Stack-ensembled-meta-learning
    model The construction of a Stack-Ensemble Model can be represented as a two-stage
    process, as depicted in Fig. 9. In Stage-0, the base models (XGBoost and DRF)
    are trained to create a prediction dataset. The prediction dataset generated in
    Stage-0 is then utilized in Stage-1 to train the meta-model (Generalized Linear
    Model (GLM)). The trained model is subsequently employed for generating final
    predictions. In this work, the meta-model is trained on multiple variants of XGBoost
    and DRF by modifying various hyperparameters. The process of integrating and training
    these models is elucidated as follows: (i) Staging Stacked-Ensemble: The training
    dataset at level-0 (L0) is presented in form of a matrix ‘D’ with ‘M’ flows, each
    flow with ‘N’ features in ‘N’ columns and another matrix depicts the ‘M’ classification
    labels corresponding flows. (10) The base-learner set B is identified by another
    set of categorized base-learner sets as: where, . Here, the training process applies
    pre-specified configuration (hyperparameters) for XGBoost algorithm. Similarly,
    . The model illustrates the meta-model as . The meta-learning classifier combines
    the predictions for the base-learners. (ii) Training the Model: The development
    environment setup splits the IoT-DDoS dataset into training, test, and validation
    sets. The experiment trains each base learner on the training set. Thenceforth,
    the test and validation process performs k-fold cross-validation and gathers the
    model predictions in for each base learner. The authors have chosen stratified
    cross-validation for improved performance of the model. The ‘M’ predictions from
    each of the base learners are blended to form EQ. (11). The ML pipeline further
    trains the meta-model on combiner predictions resulting in prediction vector from
    meta-model. The model is then exported to the meta-model in binary file format
    for deployment as IoT-DDoS-Detection-as-a-Service. (11) (iii) Testing model on
    validation set: The meta-model is tested on the validation set and then deployed
    to production pipeline. Download : Download high-res image (342KB) Download :
    Download full-size image Fig. 9. Stack-ensemble model derived from XGBoost and
    distributed random forest base learners. 3.4.3. Time and space complexity of base
    models Time complexity (often expressed in Big ‘O’ notation) refers to the time
    an algorithm takes to complete its execution as a function of the input size.
    It provides an upper bound on the worst-case running time of an algorithm. The
    temporal performance of XGBoost and DRF algorithms can be subcategorized into
    training and running time complexity. The depiction of time and space complexities
    are as follows. A machine learning algorithm''s training time complexity refers
    to the time it takes to train the model on a given dataset. This time complexity
    is often determined by the algorithm''s computational requirements, such as the
    number of iterations required to converge to a solution, the number of parameters
    to be estimated, and the training data size. Random Forest aims for low bias and
    variance. Let the dataset contains n flows. Additionally, if ‘t’ represents number
    of trees, ‘d’ denotes tree depth, ‘α’ symbolize yield from each tree, and ‘m’
    defines dimensions (or features). EQ. (12) defines the training time complexities
    of XGBoost and DRF. (12) Similarly, a machine learning algorithm''s running time
    complexity refers to the time it takes to make predictions using the trained model
    on new data. This time complexity is often determined by the algorithm''s computational
    requirements for processing and analyzing the new data, such as the number of
    features or dimensions in the input data and the number of operations required
    for making a prediction. EQ. (13) defines the running time complexity of base
    algorithms. (13) The comparative analysis of time complexities for both algorithms
    shows that DRF has a lower complexity than XGBoost because DRF builds decision
    trees in parallel, which can significantly reduce the training time. The space
    complexity of an algorithm refers to the amount of memory or storage required
    by the algorithm to execute as a function of the size of the input. The space
    complexity of XGBoost and DRF algorithms for training can be affected by various
    factors, such as the training data size, the number of features, and the number
    of trees or boosting rounds used. EQ. (14) defines the space complexity of XGBoost
    and DRF for training. However, the exact space complexity can vary depending on
    the specific implementation and configuration of the algorithm. (14) The space
    complexity of an algorithm during running time refers to the amount of memory
    or storage required by the algorithm to make predictions or process new data as
    a function of the size of the input. During running time, the space complexity
    of XGBoost and DRF is typically lower than during training. The trained model
    is already stored in memory, and the input data can be processed in smaller batches.
    EQ. (15) defines the equations for space complexity of XGBoost and DRF. (15) The
    space complexities for both algorithms infer that the space complexity of XGBoost
    is higher than DRF. The higher space complexity for XGBoost is for storing the
    additional data structures, such as the gradient and hessian values used to update
    the model during training. 4. Proposed mitigation framework The mitigation strategy
    for an IoT-DDoS defense system is multifaceted. It encompasses essential elements,
    including universal dataset creation, feature reduction, feature selection, building
    stack-ensemble meta-models from multiple machine learning models, and proposing
    the deployment architecture for real-time attack detection. The proposed methodology
    defines a comprehensive five-stage approach, as illustrated in Fig. 10, for developing
    a robust IoT-DDoS defense system as follows: (i) Stage 1: Acquiring the Benchmark
    Datasets (ii) Stage 2: Generating an Amalgamated Dataset (iii) Stage 3: Feature
    Reduction and Feature Selection (iv) Stage 4: Stack Ensemble Model Generation
    (v) Stage 5: Model Deployment and Simulation Dataset Generation Download : Download
    high-res image (821KB) Download : Download full-size image Fig. 10. Proposed model.
    The mitigation strategy for an IoT-DDoS defense system is multifaceted. It encompasses
    essential elements, including universal dataset creation, feature reduction, feature
    selection, building stack-ensemble meta-models from multiple machine learning
    models (XGBoost, Distributed Random Forest), and proposing the deployment architecture
    for real-time attack detection. The end-to-end process involves exporting the
    trained model as a portable binary model object (MOJO) for the model deployment.
    Furthermore, exported meta-learning MOJO is deployed as an independent IoT-DDoS
    attack detection available as an HTTP service. The entire configuration is deployed
    onto the fog layer for high efficiency and reduced response latency. The details
    of the individual stages involved in developing the proposed IoT-DDoS defense
    system are described as follows. 4.1. Acquiring the benchmark datasets The dataset
    acquisition and processing are the springboards for the proposed IoT-DDoS detection
    and mitigation framework. The stepping stone for the feature selection is extracting
    the flow entries into flow-feature-files (in .csv format) from raw network packet
    captures (in .pcap format) from the benchmark datasets. The experiment leveraged
    the publicly available IoT-based attack datasets in the study. The study used
    the following datasets to bring forth the amalgamated dataset for training, testing,
    and validation purposes. 4.1.1. BoT-IoT dataset The Cyber Security Lab, UNSW,
    Australia, divulged the recent BoT-IoT dataset primarily for the botnet scenarios
    (Koroniotis et al., 2019a). The publicly available dataset contains diverse traffic
    from 5 IoT devices in the controlled experimental environment. The dataset is
    available as network capture files from the smart-home scenario with IoT devices
    connected to cloud services. The authors of the dataset have used the application
    layer MQTT protocol for data transfer to the cloud. The MQTT protocol developed
    over standard TCP protocol works on the ‘publish and subscribe’ model and is a
    modern-day standard protocol for IoT devices. The datasets include attack traffic
    from IoT devices infected by Mirai and Bashlite. The BoT-IoT dataset contains
    benign and malicious traffic, with 7,33,51,357 packets in 49 pcap files. The legitimate
    traffic was generated by benign usage scenarios, such as browsing the web, sending
    emails, and downloading files. In contrast, the malicious traffic was generated
    by botnet malware, such as DDoS attacks, port scanning, and brute-force attacks.
    4.1.2. In-SDN dataset The In-SDN (Intrusion Detection in Software-Defined Networks)
    dataset is a publicly available dataset of network traffic generated by a software-defined
    network (SDN) environment collected for intrusion detection research. Researchers
    from the University of Padova in Italy created the dataset (Elsayed et al., 2020).
    The In-SDN dataset was generated using an SDN testbed consisting of an OpenFlow
    controller, two switches, and six hosts, each running different operating systems.
    The testbed was used to simulate a small network environment, with traffic generated
    by legitimate users and attackers. The lab environment utilized tools such as
    LOIC, slowhttptest, Hping3, Nping, Metasploit, and Nmap to create the attack vector.
    The attack vector includes DoS, DDoS, Web Attacks, Brute Force, Probe, and U2R
    Exploitation attacks. The dataset contains legitimate and attack traffic available
    in 150 pcap files. The dataset covers the cyberattacks found in the SDN elements
    at various planes of a software-defined network. The network traffic is classified
    into ‘Normal Group,’ ‘Metasploit Group,’ and ‘OVS Group.’ The dataset combines
    the benign and attacks traffic instances to produce a total number of 343,275
    instances. Regular traffic class contributes to 68,424 instances, 136,743 instances
    of Metasploit, and 138,772 instances of attacks on the OVS group. The authors
    have used CICFlowMeter to extract features into (.csv) format, containing the
    traffic as bidirectional flows. 4.1.3. UNSW-Sydney dataset The authors of the
    UNSW-Sydney dataset instrumented 28 IoT devices representing the smart-city scenario
    in the university lab (Sivanathan et al., 2019; Sivanathan and Gharakheili, 2023).
    For six months, they collected the traffic traces and published them as raw (.pcap)
    format files. They empirically demonstrated that the IoT devices could be classified
    using the behavioral traits of the underlying device, such as flow volume and
    sleep-time of specific purposed IoT devices. They constituted the roadbed for
    further research in the cyber security realm to classify the attack and benign
    traffic. The network traces contain the benign and IoT-DDoS traffic. 4.1.4. Simulation
    dataset The simulated dataset generation involves a complex simulation, including
    the legitimate IoT and attack traffic. The simulation process generates the data
    from digital twins for temperature, humidity, and smoke sensors over TCP, UDP,
    and HTTP protocols. The experimentation also involves setting up Raspberry Pi
    with sensors employing similar data transfer protocols. Therefore, the simulation
    entails various communication protocols that require a meticulous setup involving
    a range of tools, software, and underlying protocols. The experimental section
    of the article offers a thorough overview of all the technical details of the
    setup, presents a comprehensive account of the communication protocols, and lists
    the pieces of software and tools used to generate and monitor traffic. Table 3
    conveys the statistical information about the utilized benchmark and the simulated
    dataset. Table 3. Summary of datasets. Dataset Year Malicious Instance Number
    of IoT-devices Attacks BoT-IoT Koroniotis et al. (2019b) 2019 7,33,51,357 5 IoT-DDoS
    (HTTP, TCP, UDP), DoS (HTTP, TCP, UDP), Scan (OS, Service), Theft (Exfiltration
    of data, Key Logs) In-SDN Elsayed et al. (2020) 2019 275,515 – DoS, DDoS, Brute-Force
    Password Attack, Web Attacks, Probe, U2R Exploitation (Metasploit) UNSW-Sydney
    Sivanathan et al. (2019); Sivanathan and Gharakheili (2023) 2019 Available as
    raw (.pcap) files 28 IoT-DDoS Simulation 2022 Available as raw (.pcap) files 2,05,797
    8 IoT-DDoS (TCP, UDP, HTTP) 4.2. Generating an amalgamated dataset The Amalgamated
    Dataset (ADS) generation entails extracting features from the available benchmark
    datasets, followed by a thoughtful and consistent fusion of the extracted data
    to form a hybrid dataset. The primary challenge of fusing datasets with divergent
    dimensionality is the most significant roadblock. The proposed methodology for
    dataset amalgamation adeptly overcomes this difficulty by seamlessly merging multiple
    benchmark datasets with different dimensions. The comprehensive details of the
    end-to-end process for generating the ADS are described as follows. 4.2.1. Feature
    extraction The experiment involves extracting significant features from raw PCAP
    files using the CICFlowMeter (Lashkari, 2016) tool. It is an open-source network
    traffic analysis tool developed by Canadian Cybersecurity Institute, designed
    to analyze network flow data and extract important features related to network
    security. The authors preferred selecting CICFlowMeter over an array of available
    feature extraction tools, including Snort, Bro, nProbe, Argus, SiLK, and TcpDump,
    as it uniquely incorporates statistical features and deep packet inspection, culminating
    in superior accuracy compared to tools that solely utilize statistical or flow-based
    features. Furthermore, the authors acknowledge that CICFlowMeter expertly handles
    high-speed network traffic while requiring minimal resources as it leverages multi-threading
    and parallel processing. Therefore, the tool ensures optimal performance on even
    the most demanding networks. The primary objective of this experiment was to investigate
    the behavioral attributes of network flow and assess its effectiveness in managing
    anomalies in network traffic. The behavioral approach aligns with recent privacy
    standards concerning personal, confidential, or encrypted data in communication.
    The study employed feature extraction techniques that extracted statistical data
    from network flows in contrast to deep packet inspection methods involving examining
    individual packets. The approach significantly reduced the analysis time and computational
    resources required while maintaining robust anomaly detection capabilities. Though
    the research enterprises have published the benchmark datasets in CSV format,
    the CSV-based datasets presently available have varying sizes in terms of available
    attributes and the number of features. Therefore, it is critical to undertake
    feature extraction from PCAP to ensure the appropriate fusion of multiple datasets.
    The CICFlowMeter mines 84 network attributes from the PCAP files as bidirectional
    flow entries. The seamless fusion of datasets necessitates that they conform precisely
    to the exact dimensions. Therefore, the authors employed CICFlowMeter to extract
    features from the available raw packet captures to normalize the features to a
    consistent number of attributes. CICFlowMeter leverages a hybrid approach to obtain
    accurate feature sets that conform to the desired dimensions, enabling seamless
    dataset fusion and reliable analysis. The Algorithm 1 explains the details of
    the feature extraction process. The algorithm describes that the input PCAP files
    are passed into the CICFlowMeter as the parameter, which returns the feature set
    in Comma Separated Values (CSV) format. Download : Download high-res image (342KB)
    Download : Download full-size image Algorithm 1. Psuedo code for extracting flows
    from raw packet capture files: ExtractFlowsFromRawPackets(input pcap_file). 4.2.2.
    Dataset amalgamation The amalgamated dataset generation involved extracting the
    subset of flow entries from multiple datasets (BoT-IoT, InSDN, and UNSW Sydney)
    and collating the entries as a single dataset (as presented in Algorithm 2). The
    intricacies involved in the generation of an amalgamated and comprehensive dataset
    from the benchmark dataset are expounded upon with meticulousness as follows:
    (i) The foundation for extracting CSV-formatted feature files using CICFlowMeter
    is built upon the benchmark datasets (BoT-IoT, In-SDN, and UNSW-Sydney) acquired
    in PCAP format. (ii) The data mining and feature extraction process from the labeled
    benchmarked datasets generated CSV formatted feature files for each included dataset.
    The fusion process combines the extracted flow entries in a single dataset. In
    addition, the feature extraction process also plays a vital role in preventing
    various biases in the dataset. The employed amalgamation process and standardized
    tools for extracting the features help ensure that the dataset is free from measurement,
    selection, convenience, response, and under-coverage biases. (iii) Subsequently,
    the CSV-formatted dataset flows undergo labeling as entries of Legitimate Flow,
    TCP Flood, UDP Flood, and HTTP Flood, respectively. (iv) After that, the experimentation
    process randomizes the amalgamated dataset rows to add more generalization and
    remove any bias at the model training stage. The randomization of flow entries
    eliminates potential biases and guarantees that the sample is a representative
    and unbiased population selection. Hence, randomizing the flow entries ensures
    the retention of integrity and accuracy of the dataset. The randomization process
    is the Stratified Random Sample, which seeks to create an unbiased and balanced
    population representation. (v) The final step in the dataset preparation algorithm
    involves carefully selecting a random subset of the amalgamated dataset deemed
    crucial for the model''s training purposes. Download : Download high-res image
    (1MB) Download : Download full-size image Algorithm 2. Pseudo code for generating
    amalgamate dataset (ADS). The amalgamation dataset helps cover the contemporary
    scenarios in multiple benchmark datasets and supports building a generalized,
    extensible, and robust model. 4.3. Feature reduction and feature selection The
    feature selection process involves pre-processing the features to reduce insignificant
    network traffic attributes and applying the feature selection technique to select
    the most significant elements. The network features are initially classified as
    numerical and categorical features. Algorithm 3 explains the feature selection
    process described as follows: (i) The feature reduction process consists in removing
    constant features having a zero standard deviation. (ii) The next step in the
    algorithm removes the quasi-constant features (having negligible variance threshold).
    The quasi-constant features do not add value to the self-learning model. (iii)
    Furthermore, the algorithm calculates the Pearson Correlation Coefficient (PCC)
    (Bhuyan et al., 2021) of the remaining features and removes the highly correlated
    features. EQ. (16) calculates PCC for the remaining features and forms a correlation
    matrix. (16) (iv) Subsequently, the algorithm identifies and removes the flow
    identifier features such as Flow ID, Source IP address, Source Port, Destination
    IP address, and Timestamp. As IoT devices are exponentially immense in number,
    flow identifier features may be a nightmare for the training models and may not
    articulate any value to the model. (v) Lastly, the feature selection process applies
    ANOVA to numerical features and selects the 15 best features from the remaining
    numerical features. Download : Download high-res image (2MB) Download : Download
    full-size image Algorithm 3. Pseudo code for feature selection. The feature reduction
    and selection process identifies the 17 best features (will be described in Section
    6) for model training. The features second the philosophy for IoT DDoS detection
    and include the behavioral attributes of IoT devices. The result section further
    comprehends the details of the results for feature selection. 4.4. Model generation
    for IoT-DDoS detection The stacked-ensemble meta-model against IoT DDoS attacks
    is built in multiple subsequent stages with underlying XGBoost and Distributed
    Random Forest (DRF) algorithms at the ensemble''s heart. XGBoost selects the random
    subset of the features from the feature set, creates the decision trees, and makes
    the predictions. The process is repeated multiple times result of the forecast
    is fed to the next iteration of random feature selections and further predictions.
    Contrary to XGBoost, DRF makes the predictions from the feature subset, and the
    resultant prediction set is fed to the meta-algorithm. The meta-algorithm is trained
    on new training set from underlying base models. The mathematical details and
    algorithm for the Stack-Ensemble description are detailed in section 3.4.2. 4.5.
    Model deployment The defense framework model against IoT-DDoS attacks is deployed
    in four parallel vital software components, namely: (a) Traffic Capture, (b) Traffic
    Monitoring, Analytics, and Detection, (c) Attack Detection Service, and (d) SDN-based
    Mitigation. These software components are autonomous and independent in their
    work. However, each software component communicates to send or seek the data.
    Fig. 11 shows the comprehensive view of the deployment model. Further, Fig. 12
    illustrates the flow diagram for end-to-end IoT-DDoS mitigation modules. The comprehensive
    details of the individual framework components are elucidated as follows. Download
    : Download high-res image (626KB) Download : Download full-size image Fig. 11.
    Software-defined fog assisted mitigation framework against IoT-DDoS deployment
    pipeline. Download : Download high-res image (835KB) Download : Download full-size
    image Fig. 12. Traffic capture sequence flow chart. 4.5.1. Automated traffic capture
    The Fog layer employs an automated Python script at the entry point leveraging
    standard ‘tcpdump’ to capture ingress traffic traces with configurable PCAP size.
    The ‘tcpdump’ is configured for the ‘number of packets’. The default configuration
    is set to 10,000 packets. The ‘tcpdump’ keeps listening to the network until it
    captures the configured amount of packets. When the desired packets (say, 10,000
    packets) are captured, ‘tcpdump’ outputs the packets into PCAP and listens to
    another set of packets. Therefore, the prime responsibility of the ‘Traffic Monitoring’
    module is to listen to ingress network traffic and dump the packets into the PCAP
    file. 4.5.2. Traffic monitoring, analytics, and detection Traffic monitoring,
    analytics, and detection module are implemented as a Watchdog and corresponding
    Watchdog Handler (as shown in Fig. 12). The watchdog triggers FileCreateEvent
    as soon as ‘tcpdump’ creates a traffic dump file. The FileCreateEvent event handler
    converts the PCAP into a CSV feature file and queries the ‘IoT-DDoS attack detection
    service’ module for blacklisting of IP addresses sending the attack traffic. The
    blocked IP addresses are stored in ‘Blacklist-DB.’ 4.5.3. IoT-DDoS detection service
    The IoT-DDoS Detection Service module is deployed on a Docker-based H2O.ai pipeline
    with master and worker configuration for analyzing the real-time traffic to make
    predictions. The service responds to incoming HTTP requests for attack prediction
    with the required attributes as parameters to HTTP requests. The attack detection
    service module is upheld with the exported trained binary model, which serves
    as the heart of the service. 4.5.4. SDN-based mitigation Algorithm 4 describes
    the pseudo-code for the SDN-based mitigation module. The sequence diagram in Fig.
    13 depicts the mitigation module and classifies the web resource request into
    legitimate and attack requests. Various stages are labeled at the top of the sequence
    diagram for end-to-end traffic flow. Download : Download high-res image (413KB)
    Download : Download full-size image Algorithm 4. Psuedo code for Light SDN-based
    IoT-DDoS mitigation scheme. Download : Download high-res image (316KB) Download
    : Download full-size image Fig. 13. Sequence diagram: End-to-end IoT-DDoS mitigation
    framework. The legitimate case explains that SDN intercepts the request for web
    resources. SDN-based mitigation module queries Blacklist-DB for any blocked IP
    address. SDN is not involved in analytics, making the mitigation framework lightweight.
    In the event of a legitimate request with no entry for the incoming IP address
    in the database, the SDN quickly transmits the signal, enabling the traffic to
    flow smoothly. In contrast, SDN finds the IP address from the incoming request
    in the database for attack traffic and installs the rule to block traffic from
    the prohibited IP address. The proposed work expounds upon the end-to-end IoT-DDoS
    attack detection and mitigation process in real time. Each stage involved in the
    framework describes the communication between the atomic yet connected framework
    components bridging the gaps in the cutting-edge solutions. Thus, the proposed
    work offers a comprehensive toolkit that researchers can leverage to augment their
    research and development endeavors. 5. Experimental setup The proposed system
    development and deployment is a two-stage process. The earlier stage includes
    dataset mining, feature selection, and model training. The later stage consists
    of model deployment onto a fog computing environment. The model development, including
    features mining, ADS dataset generation, model training, and testing, is carried
    out on Intel i5 (CPU 1.60 GHz, 16 GB RAM) using Scikit Learn and H2O.ai libraries.
    The model deployment involves preparing the stage with a simulation setup. The
    deployment includes setting up sensor servers, actual sensor setup, digital twin
    for physical sensors, HTTP server, Botnet Network, and HTTP clients. The Mininet
    hosts the complete configuration mentioned above. The Mininet is configured in
    Network Address Translation (NAT) settings so that botnet and cloud servers (Sensor
    servers and HTTP Server) reside outside the Mininet hosts. The Mininet is assumed
    to mimic a fog layer network with a traffic monitor, attack detection module,
    IoT-DDoS detection service, database to store the blocked (attack) IP addresses,
    and a pox controller. The IoT-DDoS detection service is deployed on the cluster
    of H2O.ai Docker containers to leverage distributed computing for attack detection
    in real-time and to handle the volumetric traffic. The distributed H2O.ai nodes
    work as load balancers during high traffic. The botnet and cloud servers are deployed
    on separate virtual machines. The details of the simulation setup are as follows:
    (a) Sensor Servers: The experiment involved deploying proprietary TCP, UDP, and
    HTTP servers for the Sensor network. (b) Real-Sensor Setup: The real-sensor setup
    was done using a ‘Raspberry Pi Model B’ for setting up the physical layer. The
    ‘Raspberry Pi’ was interfaced with temperature and humidity sensors (DTH22 Temperature
    and Humidity Sensor Modules) and was responsible for sending the data to the cloud
    server in raw-bytes format over TCP and UDP. DTH22 has the inbuilt conversion
    capability for A2D (Analog to Digital). Hence, it can be interfaced with Raspberry
    without any additional chips. (c) Sensor Simulators: Additionally, the temperature,
    humidity, and smoke sensor simulators were added to generate physical layer traffic
    for underlying physical layer extrapolation. The traffic was transmitted over
    TCP and UDP for raw-byte transfer and HTTP for application layer packet format.
    (d) Tuning the data transfer parameters in sensor nodes: The connection of sensor
    nodes and the packet sizes for data transfer to the server is simulated mimicking
    the IoT behavioral attributes from the employed amalgamated dataset. (e) HTTP
    Web-Server: Apache web server was deployed on one of the designated cloud nodes
    for delivering web pages over HTTP. (f) Simulation of Feedback loop: Furthermore,
    to close the feedback loop in the simulated cyber-physical system, an alert system
    was designed to generate alarms and alerts if the sensor values from the physical
    layer were reported to go beyond the threshold. The alerts were generated in the
    form of email alerts and delivered to the pre-configured email addresses. (g)
    Botnet Network: The botnet network involved the development of a C&C server and
    several Bots for executing the ‘LAUNCH’ command for the attack traffic. The Botnet
    network was coded leveraging Hping3 and SCAPY to support several DDoS attacks
    types (TCP, UDP, and HTTP). Moreover, the botnet architecture is extensible to
    support more attack types. (h) HTTP Clients: The custom HTTP clients were deployed
    over several nodes to query the HTTP server. 6. Results and analysis The experiment
    was initiated with the feature reduction and selection process. Subsequently,
    the investigation advanced to the training of a Stack-Ensemble of XGBoost and
    DRF models employing the selected features. The resultant outcomes at various
    stages of the experiment are detailed in the subsequent sections. 6.1. Dataset
    amalgamation and feature selection The dataset underpinning the experiment consisted
    of network traffic traces that combined legitimate traffic, TCP Flood, UDP Flood,
    and HTTP Flood. Table 4 presents the details of the flow statistics extracted
    from the benchmark datasets. The table highlights that the amalgamation dataset
    included ample instances of each attack category. Table 4. Flow extraction summary.
    Dataset Normal TCP Flood UDP Flood HTTP Flood Total BoT-IoT 103,056 262,153 63,149
    79,165 507,523 InSDN 68,425 30,021 23,053 20,458 141,957 UNSW Sydney 267,527 33,045
    – – 300,572 Simulation 61,201 75,205 57,094 73,498 266,998  Total Instances 500,209
    400,424 143,296 173,121 12,17,050 The amalgamated dataset originally contained
    83 features (Excluding the output label). The features were classified into 72
    numerical, nine categorical, and two object features. During the numerical features
    processing (72 features), the feature reduction process initially examined the
    amalgamated dataset for constant features and identified four features as constants.
    Subsequently, the strategy identified and removed two quasi-constant features.
    After that, two duplicated features were removed from the dataset. The further
    stage involved removing the highly correlated features. Here, PCC (Bhuyan et al.,
    2021) was calculated (as defined in EQ. (16)) for the remaining feature set forming
    a correlation matrix as shown in Fig. 14. The correlation matrix resulted in thirty-six
    highly correlated features. Therefore, the numerical feature reduction resulted
    in 30 available features. The subsequent step applied ANOVA to the remaining thirty
    features and selected 15 best available numerical features. Table 5 shows the
    feature importance based on their ANOVA scores. The categorical features are represented
    with ANOVA scores as ‘NA’ i.e. ‘Not Applicable’. Download : Download high-res
    image (568KB) Download : Download full-size image Fig. 14. Pearson correlation
    matrix for network features. Table 5. Selected feature set for model training.
    Feature(s) ANOVA Score - Descending Description Idle Mean 235405.70 Mean of device
    sleep time or inter-packet arrival time for a given flow Fwd Pkt Len Std 37893.37
    Standard deviation of packets in forward direction in a flow RST Flag Cnt 17464.87
    Total RST packets Tot Fwd Pkts 14786.45 Total number of forwarded packets in a
    flow Flow Byts/s 13880.69 Average Flow (Flow bytes per second) Init Fwd Win Byts
    12100.21 Number of bytes in forward direction during initial window Bwd Pkt Len
    Std 11736.62 Standard deviation of packets in backward direction in a flow Fwd
    Seg Size Min 9737.64 Minimum segmentation size in forward packets Down/Up Ratio
    8883.51 Ratio of uploaded and downloaded packets Flow Duration 7944.47 Total flow
    duration in milli-seconds Fwd PSH Flags 5413.53 Total number of occurrence of
    PSH flag set for forward packets (Zero for UDP) PSH Flag Cnt 5412.87 Total PUSH
    packets Tot Bwd Pkts 5410.75 Total number of packets in backward direction in
    a flow FIN Flag Cnt 5143.26 Total FIN packets ACK Flag Cnt 4315.17 Total ACK packets
    Dst Port NA Destination Port Protocol NA Underlying communication protocol Next,
    the study identified and removed five flow identifier features (Flow ID, Source
    IP, Source Port, Destination IP, and Timestamp). There are three categorial and
    two object features in flow identifiers. Henceforth, Chi-Square removed four more
    features from the categorial list based on their p-Values, leaving two categorical
    features for further processing. Therefore, the selection process left 17 best-suited
    features for further consideration (as depicted in Table 5). The presented table
    unequivocally indicates that device behavioral attributes occupy the highest ranking
    positions in the list of selected features. As a result, the experiment aligns
    with the overarching IoT-DDoS detection philosophy that underscores the significance
    of device-centric anomalies in identifying and mitigating DDoS attacks in IoT
    environments. 6.2. Model development The experiment entails evaluating the two-stage
    meta-model in multiple orientations. The study evaluates performance metrics such
    as Mean-per-class-error, Logloss, MSE, RMSE, Confusion Matrix, Accuracy, Model
    hit ratio, Recall, Precision, and F1-score. Therefore, multiple and exhaustive
    analysis of metric performance projects the resiliency of the model in an isometric
    view. There are multiple models involved in the course of constructing the Stack-Ensemble
    model. The following section elucidates the individual performance of each model
    through the comparison of losses. 6.2.1. Models leaderboards The ensembled models
    are trained and evaluated against an amalgamated dataset tuned to the hyperparameters.
    Table 6 presents the details of the model leaderboard describing the performance
    parameters. Table 6. Model performance details. Model ID Optimal Parameters Mean
    Per-Class Error Logloss RMSE MSE Stack-Ensemble Meta-Model number_of_trees=50
    7.49893e-05 0.000544629 0.00831966 6.92167e-05 XGBoost number_of_trees=61 0.00010522
    0.000427076 0.00889163 7.9061e-05 DRF number_of_trees=44, min_depth=1, max_depth=17,
    min_leaves=2, max_leaves=81 0.000162019 0.00874992 0.021972 0.00048277 The table
    illustrates the optimal parameters for underlying algorithms and minimal error
    values. The statistical data presented in the table shows that the Meta model
    has the most negligible Mean Per-Class Error (7.49893e-05), Logloss, RMSE, and
    MSE values. The significantly low error infers that the predicted flow labels
    are skinned to actual values. Furthermore, the experiment observed the training
    time of 9940 milliseconds for DRF, 8234 milliseconds for XGBoost, and 31487 milliseconds
    for meta-model. 6.2.2. Model''s learning curves A model''s learning curve represents
    how the performance of a model improves as the amount of training data increases.
    It plots the learning performance of the model during the incremental training
    process over time. Fig. 15 defines the learning curve regarding the number of
    participating trees and logloss. The plot of logloss against incremental values
    of the number of trees signifies that the divergence of logloss decreases with
    increasing the trees in the learning mode. Download : Download high-res image
    (363KB) Download : Download full-size image Fig. 15. Model learning curves. Fig.
    15 (a) shows the higher deviation for the meta-model at the start of the training,
    and it starts stabilizing at nearly 20 decision trees. However, a value of 50
    is selected for a robust meta-model. The XGBoost learning curve has stabilized
    at a value near 60 (in Fig. 15 (b)). DRF''s learning curve (in Fig. 15 (c)) has
    assumed a value of 44 for stabilization. Training and validation have yielded
    a tightly coupled learning curve in the case of Meta-learner and XGBoost. However,
    DRF has shown high variation in learning curves for training, cross-validation,
    and validation data. 6.2.3. Confusion matrix and performance metrics The experimental
    observations collate the performance of the machine learning models in the Confusion
    Matrix. The confusion matrix plots the actual class (on the y-axis) and the predicted
    class (on the x-axis). The dictionary CM (in EQ. (17)) symbolizes the confusion
    matrix presentation of actual and predicted classes as: (17) The confusion matrix
    in Fig. 16 (a)-(e) depicts the results of the experiment on validation and cross-validation
    data for meta and base models. Each figure in the sequence is annotated appropriately
    and represents an unambiguous interpretation of the corresponding confusion matrix.
    The results are illustrated for the preduction on amalgamated and simulated datasets.
    Download : Download high-res image (403KB) Download : Download full-size image
    Fig. 16. Model''s confusion matrix. The figures show a high accuracy in Meta-Model
    as well as base models. The confusion matrix infers high True Positive (TP) and
    True Negative (TN) rates. The False Positives and False Negatives have values
    tending to zero. Hence, the confusion matrix advocates the underlying machine
    learning model as ideal. Therefore, the model''s accuracy is highly encouraging,
    with an accuracy percentage of 99.99. The confusion matrix in Fig. 16 depicts
    a very high accuracy in Meta-Model. The statistical data extracted from the confusion
    matrix for the meta-model are collated in Table 7. The table outlines vital performance
    metrics often ignored by researchers, such as Precision, Accuracy, Recall, and
    F1-Score. Furthermore, it is inferred by the presented statistical data that the
    system is highly accurate, with a value of 99.99% for the validation performed
    with Amalgamated Dataset. The high values of Accuracy (99.99), Precision (99.99),
    Recall (99.99), and F1-Score (99.99) endorse the highly accurate system model.
    Table 7. Performance metric for amalgamated and simulation dataset. Traffic Class
    TP TN FP FN Accuracy Precision Recall F1 Score Amalgamated Dataset Results 0 7265
    20779 1 2 0.999893 0.999862 0.999725 0.999794 1 7045 20999 2 1 0.999893 0.999716
    0.999858 0.999787 2 6994 21053 0 0 1 1 1 1 3 6740 21307 0 0 1 1 1 1 Simulated
    Dataset Results 0 60272 203642 740 929 0.994 0.988 0.985 0.986 1 74380 189534
    753 825 0.994 0.990 0.989 0.990 2 56282 207632 783 812 0.994 0.986 0.986 0.986
    3 72980 190934 808 518 0.995 0.989 0.993 0.991 Acronyms: TP: True Positive, TN:
    True Negative, FP: False Positive, FN: False Negative Similarly, the interpretation
    from the confusion matrix (in Fig. 16 (c)) shows an accuracy of 98.84% on simulation
    data in the live production environment. The simulation resulted in the collateral
    damage of 1.52%, where legitimate traffic was reported as attack traffic. Fig.
    17 illustrates the performance summary visualization for Stack Ensemble model.
    The graphs are indicative of the high performance of the Stack-Ensemble algorithm
    as compared to XGBoost and DRF. Therefore, the Stack-Ensemble combines the two
    robust classifiers to build a resilient system. Here, the base models have been
    chosen as strong classifiers to have a minimal impact on any error propagation
    from the base models. Download : Download high-res image (422KB) Download : Download
    full-size image Fig. 17. Comparison of (a) Hit ratio and (b) Performance metrics
    for traffic classes for validation set from amalgamated dataset. 6.3. Impact of
    feature reduction on system performance The feature selection reduced the 84 extracted
    features by 80%, positively impacting the system performance. The system observed
    97.37% accuracy with the amalgamated dataset with all the features included and
    99.99% with the reduced feature set. However, the accuracy gaps increased when
    tested in the simulation environment. The model trained with all the features
    reported an accuracy of 65.32%, whereas the model trained on a reduced feature
    set maintained a high accuracy of 98.84% in the simulated environment. The above
    results inferred that the model trained on the complete feature set is barely
    resilient in the practical environment due to overfitting. Similarly, the experiment
    observed a reduction in training time for the reduced features in contrast to
    complete features in the amalgamated dataset from 545.87 sections to 9.94 seconds
    for DRF, from 513.80 seconds to 8.23 seconds for XGBoost, and from 2109.83 seconds
    to 31.49 seconds for meta-model. The experiment further noted an average prediction
    time of 23.6 microseconds with the complete feature set and 10.29 microseconds
    with the reduced feature set in the simulation environment. Therefore, feature
    reduction helped reduce 98.5% in training time and 56.4% in prediction time. 6.4.
    Empirical results for performance study (fog computing vs cloud computing Fog
    computing is an extension of cloud computing that brings computing and storage
    capabilities closer to the end-users. It provides the power to applications for
    real-time data processing and low-latency communication. In this context, the
    present paper conducts a comprehensive qualitative and quantitative evaluation
    of fog-computing-based IoT-DDoS defense solutions. The details of the empirical
    fog analysis are as follows. 6.4.1. Qualitative assessment Qualitative analysis
    of deploying IoT-DDoS defense solutions at fog computing offers subjective characteristics
    and qualities, such as its benefits and potential applications, through non-numerical
    methods. It can provide valuable insights into fog computing solutions'' feasibility,
    usability, and effectiveness as follows: (a) It acts as a reservoir of resources
    between the perception and cloud computing layers. (b) It saves network bandwidth
    by lowering network traffic to the cloud, cost savings, quicker reaction time,
    and enhanced security close to the edge devices. Hence, the solutions expecting
    low latency are recommended to be deployed at the fog-computing layer. (c) Fog
    works best for small deployment models, has less operational complexity, is more
    cost-effective due to low-specification machines, and works well even with intermittent
    network connectivity. (d) Fog nodes perform essential communication and networking
    functions close to the end-users, rather than redirecting tra?c data into the
    backbone network, allowing the cloud network to concentrate on its primary functions.
    Fog computing provides a network edge with cloud-like services. (e) Due to its
    proximity to end users, Fog Computing supports a variety of application domains.
    6.4.2. Quantitative assessment For quantitative analysis of the fog-based solution
    is done by conducting the performance assessment of the security solution deployed
    at the fog-computing layer. The experimentation setup was stress tested to evaluate
    the reliability and consistency of the web requests. Reliability is defined as
    the maximum execution time, and consistency is defined as the number of failed
    connections. The measurements were taken using the open-source stress/load testing
    tool JMeter. JMeter was configured for a continuous increase of load on the cloud-based
    web server. The load tests instructed the JMeter to simulate 100, 200, 500, and
    1000 concurrent connections and execute 1000 requests for each connection (For
    example, 100 simultaneous connections would result in 100,000 requests). The results
    are then compared with a similar setup with a security solution deployed at the
    cloud-computing layer. The setup has leveraged an Azure-based virtual machine
    (AVD) for the experimentation setup. Table 8 summarizes the maximum execution
    time for fog versus cloud requests for each stress test. The stress test results
    show that fog-based security solution records significantly lower maximum execution
    time, with differences in maximum latency measured at 99.4% (at 100 connections),
    70.7% (at 200 connections), 89.8% (at 500 connections), and 68.9% (at 1000 connections).
    Table 8. Max. execution time in milliseconds (fog vs cloud). No. of Parallel Connections
    Execution Time (Fog) Execution Time (Cloud) Difference Percentage 100 467 72,278
    71,811 99.4 200 28,642 97,811 69,229 70.7 500 8672 85,260 76,588 89.8 1000 16,387
    52,692 36,305 68.9 Similarly, Table 9 presents the number of failed connections
    for fog and cloud for each test scenario in the stress test. The results show
    zero failed connections for 100,000, 200,000, 500,000, and 1000,000 web requests.
    However, the study recorded a failure rate of 0.08% (for 100 connections), 1.58%
    (for 200 connections), 1.25% (for 500 connections), and 1.27% (for 1000 connections).
    Table 9. Failed requests (fog vs cloud). Parallel Req. Failed Req. Percentage
    Failed Req. Percentage Difference (X1000) (Fog) (%) (Cloud) (%) (Fog vs Cloud)(%)
    100 0 0 82 0.08 0.08 200 0 0 3,178 1.58 1.58 500 0 0 6,275 1.25 1.25 1000 0 0
    12,749 1.27 1.27 The quantitative study seconds the inferences of qualitative
    study for fog vs cloud setups. However, the outcomes of the experiment are a factor
    of underlying hardware, internet connectivity, software or hardware dependencies,
    or failure rates due to network disruptions. Hence, the fog model gives a better
    performance than the cloud-based security model. Additionally, apart from the
    quantitative/qualitative details of fog/cloud, the fog-computing is further justified
    as: (a) The IP addresses are gigantic during a DDoS attack. And, these IP addresses/attack
    devices grow on a gigantic level considering the exponentially growing IoT-devices.
    Hence, the system is designed for enormous IoT-devices. (b) Second, the decision
    making for attack traffic is not one time. The architecture of the system at fog
    computing layer shows that there is continuous monitoring of incoming network
    traffic, attack detection, and mitigation. Hence, the system represents a real-time
    defense system against IoT-DDoS attack. (c) The mitigation module blocks the incoming
    traffic from a blocked IP address for a configurable time window and is analogous
    to the flow table of SDN. Once the time window is expired for a particular IP
    address (say, blocked IP), the incoming traffic from the blocked IP is re-evaluated
    for its legitimacy. Hence, given that the empirical data for fog-computing for
    system performance, failure rate, high volume IP addresses, and continuous monitoring
    and mitigation of attack traffic, the fog computing is not an optional layer.
    6.5. Comparison with state-of-the-art defense frameworks It is vital to consider
    the influencing factors in multiple dimensions for assessing the security framework.
    The critically important is the training and validation of machine learning algorithms
    against benchmark datasets of superior quality. The model trained against a single
    benchmark dataset could be inefficient in handling the diverse attack scenarios
    containing diverse network traffic patterns. Hence, an amalgamated dataset yielded
    from multiple datasets can provide more reliable results and test the system''s
    effectiveness in various scenarios. Similarly, other benchmarks include vital
    performance metric discussion, computational load distribution, on-demand service,
    solution coupling approach (tightly coupled or decoupled), and latency reduction.
    Table 10 compares the proposed system with state-of-the-art against the parameters
    mentioned above. Table 10. Comparison with state-of-the-art defense frameworks.
    Ref A B C D E F G Koroniotis et al. (2019a) N S N N T N R Nimbalkar and Kshirsagar
    (2021) N S N N T N NR Shafiq et al. (2020) Y M N N T N NR Ferrag et al. (2020)
    N S N N T N NR Elsayed et al. (2020) Y M N N T N NR Firdaus et al. (2020) N S
    N N T N NR Zoppi et al. (2021) N S N N T N NR Sivanathan et al. (2017) N S N N
    T N R Sivanathan et al. (2020) Y S N N T N R Singh et al. (2021) N S Y N T Y NR
    Priyadarshini et al. (2020) Y S Y N T Y R Zhou et al. (2019) N S N N T Y R Cvitić
    et al. (2021a) Y S Y N T N R Özçelik et al. (2017) N S N N T N R Doshi et al.
    (2018) N S N N T N R Al-Mashadani and Ilyas (2022) N S N N T N R Wani and Revathi
    (2020) Y S N N T N R Kumar et al. (2023) Y S N N T N R Kumar et al. (2022) Y S
    N N T N R Kumar et al. (2021) Y S N N T N R Javeed et al. (2023) Y S N N T N R
    Proposed Work Y M Y Y D Y R Acronyms: A: Discussion of vital performance metrics,
    B: Validated with Single (S) or Multiple (M) Datasets, C: Computational Load Distribution,
    D: On-demand Security Service, E: Coupling Approach Decoupled (D) or Tightly Coupled
    (T), F: Latency Reduction, G: Real Time (R) or Non Real time (NR) The proposed
    research on the IoT-DDoS framework seeks to evaluate the system''s efficacy by
    utilizing Machine Learning algorithms and multiple datasets. The system''s effectiveness
    is assessed based on its accuracy, precision, recall, and F1 score, as well as
    its resistance to novel and sophisticated attacks and its ability to handle volumetric
    and real-time data. Additionally, the proposed solution evaluates the framework
    in multiple dimensions. 7. Discussion and future scope The paper presents a comprehensive
    mitigation framework for IoT-based DDoS attacks. The ever-increasing adoption
    of IoT devices has increased security concerns, and DDoS attacks on IoT networks
    have become a significant threat. The authors have invested considerable efforts
    in designing and conducting experiments to develop a robust and reliable defense
    solution. The end-to-end system design comprised a five-stage defense framework
    that leverages physical devices'' behavioral attributes to identify and mitigate
    IoT-DDoS traffic. The experiment employed multiple stack-ensembled algorithms
    to enhance security against an ever-evolving threat landscape. Furthermore, the
    mitigation framework designed and published a service for attack detection on
    top of the Docker framework for a cost-effective, reusable, and portable framework.
    The responses to research queries, objectives, and accomplishments are as follows.
    The experiment involved proposing the IoT-DDoS detection philosophy based on IoT
    devices'' behavioral attributes to prepare a response to RQ1. The attack detection
    philosophy described that IoT devices are specialized, low-powered, less secure
    devices and exhibit specific behavioral patterns such as low-volume data exchange,
    specific flow durations, and sleep intervals between consecutive flows. The philosophy
    further described using behavioral attributes to detect IoT-based DDoS attacks.
    The work involved proposing a real-time mitigation framework against IoT-DDoS
    attacks. The experimental work involved acquiring three benchmark datasets: BoT-IoT,
    InSDN, and UNSW-Sydney. Further, the experiment thoughtfully combined the three
    datasets to form the amalgamated dataset to incorporate the diverse IoT-DDoS attack
    scenarios for a resilient mitigation framework. Moreover, the work involved setting
    up the simulation environment based on analyzing the amalgamated dataset. The
    work contributed the amalgamated and simulated dataset for IoT-DDoS to the research
    community, resolving RQ2. Further, the Stack-Ensemble model was trained and tested
    on the amalgamated dataset after performing the feature engineering. The encouraging
    results helped answer RQ3. The selected features followed the IoT-DDoS detection
    philosophy. Furthermore, the paper offered to decouple the mitigating module.
    The service-based architectonics at the fog computing layer offered a low-latent,
    cost-effective, reusable, and portable defense solution. The proposed solution
    delivered a light mitigation scheme in a fog-assisted software-defined environment
    and ensured a minimal impact on the SDN performance. The decoupled configuration
    deployed on the orchestration of Docker-based architecture for the mitigation
    solution offered effective responses for RQ4, RQ5, and RQ6. Though the paper fills
    the gap in state-of-the-art, there is a vast scope for further research. The number
    of IoT devices continues to increase, thereby increasing heterogeneous network
    traffic. The machine-learning algorithms have their limitation to work with gigantic
    network traffic. Therefore, the paper recommends using deep learning algorithms
    so that research focuses on developing more sophisticated and adaptive defense
    mechanisms to counter these threats effectively. The paper offered an approach
    for generating an amalgamated dataset by fusing multiple benchmark datasets. However,
    the paper recommends developing and integrating an automation framework to fuse
    newly released or simulated datasets into existing amalgamated datasets. Moreover,
    emerging techniques such as blockchain and artificial intelligence can provide
    more robust and efficient security solutions for IoT devices. Moreover, future
    work can cover more sophisticated and specialized protocols for IoT devices such
    as MQTT. 8. Conclusion The prolific increase in vulnerable IoT devices adapted
    by widely dispersed cyber-physical systems is accountable for inducing the volumetric
    network traffic. Moreover, IoT devices are involuntarily contributing to IoT-DDoS
    attacks. The paper has offered the IoT-DDoS detection philosophy based primarily
    on the behavioral characteristics of IoT devices. The research generated an amalgamated
    dataset from BoT-IoT, InSDN, and UNSW-Sydney for operative model training and
    comprehensive validation. The paper established that existing security solutions
    are deployed in the cloud environment and negatively impact cloud resource utilization
    and latency issues. Thus, the paper proposed an ameliorated fog-computing layer
    for data filtration, distributed computing, and reducing latency in data transmission.
    The experiment showcased the improvement of execution time between 68 and 99 percent
    and trivial failed requests in the fog computing environment. Further, the paper
    introduced a multi-stage stack-ensembled-based defense framework rooted in XGBoost
    and Distributed Random Forest. The paper demonstrated through empirical results
    that the model was outmatched with an accuracy of 99.99% when it was validated
    on an amalgamated dataset. The higher values of precision (99.99%), recall (99.99%),
    and F1-score (99.9%) endorsed the system''s resilience, robustness, and accuracy.
    The performance metric parameters in the simulated lab environment exhibited an
    accuracy of 98.84%, precision of 98.8%, recall value of 98.8%, and an F1-score
    of 98.8%. The collateral damage observed during the experimentation process where
    benign traffic was identified as attack traffic was 1.52%. The captured dataset
    for the simulated lab environment is published for the research community and
    is available on a request basis. The paper has proposed a cost-effective, reusable,
    and novel IoT-DDoS-Detection-as-a-Service (IDDaaS) interface for the research
    community. The docker-based distributed computing nodes deployed on the fog computing
    layer stand as the foundation for the IDDaaS interface. The paper offered a unique
    lightweight defense architecture for SDN-based networks. In future work, the solution
    is proposed to be extended to leverage the big-data tools for in-memory computations.
    The experimental study was limited to TCP, UDP, and HTTP flooding attacks. The
    article recommends extending the defense solution to cutting-edge technologies
    such as blockchain, unsupervised deep learning, and IoT protocols such as MQTT.
    Declaration of Competing Interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. Data availability No data was used
    for the research described in the article. References Abbasi et al., 2021 M. Abbasi,
    A. Shahraki, A. Taherkordi Deep learning for network traffic monitoring and analysis
    (NTMA): a survey Comput. Commun., 170 (2021), pp. 19-41, 10.1016/j.comcom.2021.01.021
    View PDFView articleView in ScopusGoogle Scholar Achbarou et al., 2018 O. Achbarou,
    M.A.E. Kiram, O. Bourkoukou, S. Elbouanani A new distributed intrusion detection
    system based on multi-agent system for cloud environment Int. J. Commun. Netw.
    Inf. Secur., 10 (3) (2018), pp. 526-533 View in ScopusGoogle Scholar Al-Jarrah
    et al., 2014 O.Y. Al-Jarrah, A. Siddiqui, M. Elsalamouny, P.D. Yoo, S. Muhaidat,
    K. Kim Machine-learning-based feature selection techniques for large-scale network
    intrusion detection Proceedings - International Conference on Distributed Computing
    Systems 30-June-20 (2014), pp. 177-181, 10.1109/ICDCSW.2014.14 View in ScopusGoogle
    Scholar Al-Mashadani and Ilyas, 2022 A.K.A. Al-Mashadani, M. Ilyas Distributed
    denial of service attack alleviated and detected by using mininet and software
    defined network Webology, 19 (1) (2022), pp. 4129-4144, 10.14704/WEB/V19I1/WEB19272
    Google Scholar Alzahrani and Alenazi, 2021 A.O. Alzahrani, M.J. Alenazi Designing
    a network intrusion detection system based on machine learning for software defined
    networks Future Internet, 13 (5) (2021), p. 111 CrossRefView in ScopusGoogle Scholar
    Anande and Leeson, 2023 T.J. Anande, M.S. Leeson Synthetic Network Traffic Data
    Generation and Classification of Advanced Persistent Threat Samples: a Case Study
    with GANs and XGBoost (2023), pp. 1-18, 10.1007/978-3-031-39059-3_1 View in ScopusGoogle
    Scholar Behal et al., 2021 S. Behal, K. Kumar, M. Sachdeva D-FAC: a novel divergence
    based distributed DDoS defense system J. King Saud Univ, Comput. Inf. Sci., 33
    (3) (2021), pp. 291-303, 10.1016/j.jksuci.2018.03.005 View PDFView articleView
    in ScopusGoogle Scholar Bhuyan et al., 2021 H. Bhuyan, D.C. Chakraborty, S. Pani,
    V. Ravi Feature and subfeature selection for classification using correlation
    coefficient and fuzzy model IEEE Trans. Eng. Manag. (2021), pp. 1-15, 10.1109/TEM.2021.3065699
    Google Scholar Buch, 2018 D. Buch Taxonomy on cloud computing security issues
    at virtualization layer Int. J. Adv. Res. Eng. Technol., 9 (4) (2018), pp. 50-76
    View in ScopusGoogle Scholar Chen et al., 2023 Y. Chen, X. Liu, L. Gao, M. Zhu,
    B.-C. Shia, M. Chen, L. Ye, L. Qin Using the H2O automatic machine learning algorithms
    to identify predictors of web-based medical record nonuse among patients in a
    data-rich environment: mixed methods study JMIR Med. Inform., 11 (2023), Article
    e41576, 10.2196/41576 View in ScopusGoogle Scholar Chkirbene et al., 2020 Z. Chkirbene,
    S. Eltanbouly, M. Bashendy, N. Alnaimi, A. Erbad Hybrid machine learning for network
    anomaly intrusion detection 2020 IEEE International Conference on Informatics,
    IoT, and Enabling Technologies, ICIoT 2020 (2020), pp. 163-170, 10.1109/ICIoT48696.2020.9089575
    View in ScopusGoogle Scholar Cvitić et al., 2021a I. Cvitić, D. Peraković, M.
    Periša, M. Botica Novel approach for detection of IoT generated DDoS traffic Wirel.
    Netw., 27 (3) (2021), pp. 1573-1586, 10.1007/s11276-019-02043-1 View in ScopusGoogle
    Scholar Cvitić et al., 2021b I. Cvitić, D. Peraković, M. Periša, B. Gupta Ensemble
    machine learning approach for classification of IoT devices in smart home Int.
    J. Mach. Learn. Cybern., 12 (11) (2021), pp. 3179-3202, 10.1007/s13042-020-01241-0
    View in ScopusGoogle Scholar Doshi et al., 2018 R. Doshi, N. Apthorpe, N. Feamster
    Machine learning ddos detection for consumer Internet of things devices 2018 IEEE
    Security and Privacy Workshops (SPW), IEEE (2018), pp. 29-35, 10.1109/SPW.2018.00013
    View in ScopusGoogle Scholar Douiba et al., 2023 M. Douiba, S. Benkirane, A. Guezzaz,
    M. Azrour An improved anomaly detection model for iot security using decision
    tree and gradient boosting J. Supercomput., 79 (3) (2023), pp. 3392-3411, 10.1007/s11227-022-04783-y
    View in ScopusGoogle Scholar Elsayed et al., 2020 M.S. Elsayed, N.-A. Le-Khac,
    A.D. Jurcut Insdn: a novel sdn intrusion dataset IEEE Access, 8 (2020), pp. 165263-165284,
    10.1109/CIT.2017.61 View in ScopusGoogle Scholar Ericsson, 2023 T.L. Ericsson
    IoT connections forecase - mobility report - Ericsson https://www.ericsson.com/en/reports-and-papers/mobility-report/dataforecasts/iot-connections-outlook
    (2023), Accessed 16th Apr 2023 Google Scholar Ferrag et al., 2020 M.A. Ferrag,
    L. Maglaras, A. Ahmim, M. Derdour, H. Janicke Rdtids: rules and decision tree-based
    intrusion detection system for Internet-of-things networks Future Internet, 12
    (3) (2020), p. 44, 10.3390/fi12030044 View in ScopusGoogle Scholar Ferrag et al.,
    2022 M.A. Ferrag, L. Shu, O. Friha, X. Yang Cyber security intrusion detection
    for agriculture 4.0: machine learning-based solutions, datasets, and future directions
    IEEE/CAA J. Autom. Sin., 9 (3) (2022), pp. 407-436, 10.1109/JAS.2021.1004344 View
    in ScopusGoogle Scholar Finley et al., 2020 B. Finley, J. Benseny, A. Vesselkov,
    J. Walia How does enterprise IoT traffic evolve? Real-world evidence from a Finnish
    operator Internet of Things (Netherlands), 12 (2020), Article 100294, 10.1016/j.iot.2020.100294
    View PDFView articleView in ScopusGoogle Scholar Firdaus et al., 2020 D. Firdaus,
    R. Munadi, Y. Purwanto Ddos attack detection in software defined network using
    ensemble k-means++ and random forest 2020 3rd International Seminar on Research
    of Information Technology and Intelligent Systems (ISRITI) (2020), pp. 164-169,
    10.1109/ISRITI51436.2020.9315521 View in ScopusGoogle Scholar Gama et al., 2019
    E.S. Gama, R. Immich, L.F. Bittencourt Towards a multi-tier fog/cloud architecture
    for video streaming Proceedings - 11th IEEE/ACM International Conference on Utility
    and Cloud Computing Companion, UCC Companion 2018 (2019), pp. 13-14, 10.1109/UCC-Companion.2018.00022
    Google Scholar Gartner, 2023 I. Gartner Gartner top strategic technology trends
    for 2022 https://www.gartner.com/en/information-technology/insights/top-technology-trends
    (2023), Accessed 16th Apr 2023 Google Scholar Gouveia and Correia, 2020 A. Gouveia,
    M. Correia Network intrusion detection with xgboost Recent Advances in Security,
    Privacy, and Trust for Internet of Things (IoT) and Cyber-Physical Systems (CPS),
    Chapman and Hall/CRC (2020), pp. 137-166 CrossRefGoogle Scholar Gupta and Singh,
    2023 A. Gupta, A. Singh Prediction framework on early urine infection in IoT–fog
    environment using XGBoost ensemble model Wirel. Pers. Commun., 131 (2) (2023),
    pp. 1013-1031, 10.1007/s11277-023-10466-5 View in ScopusGoogle Scholar Halpern
    et al., 2010 J.M. Halpern, R. Haas, A. Doria, L. Dong, W. Wang, H.M. Khosravi,
    J.H. Salim, R. Gopal Forwarding and control element separation (ForCES) protocol
    specification, RFC 5810 https://doi.org/10.17487/RFC5810 https://www.rfc-editor.org/info/rfc5810
    (Mar. 2010) Google Scholar Hanif et al., 2019 S. Hanif, T. Ilyas, M. Zeeshan Intrusion
    detection in IoT using artificial neural networks on UNSW-15 dataset HONET-ICT
    2019 - IEEE 16th International Conference on Smart Cities: Improving Quality of
    Life Using ICT, IoT and AI (2019), pp. 152-156, 10.1109/HONET.2019.8908122 View
    in ScopusGoogle Scholar Haq et al., 2015 N.F. Haq, A.R. Onik, M.A.K. Hridoy, M.
    Rafni, F.M. Shah, D.M. Farid Application of machine learning approaches in intrusion
    detection system: a survey Int. J. Adv. Res. Artif. Intell., 4 (3) (2015), pp.
    9-18, 10.14569/IJARAI.2015.040302 Google Scholar Hoon et al., 2018 K.S. Hoon,
    K.C. Yeo, S. Azam, B. Shunmugam, F. De Boer Critical review of machine learning
    approaches to apply big data analytics in DDoS forensics 2018 International Conference
    on Computer Communication and Informatics, ICCCI 2018, vol. 1 (2018), pp. 2-6,
    10.1109/ICCCI.2018.8441286 Google Scholar Jara et al., 2014 A.J. Jara, D. Genoud,
    Y. Bocchi Big data for cyber physical systems an analysis of challenges, solutions
    and opportunities Proceedings - 2014 8th International Conference on Innovative
    Mobile and Internet Services in Ubiquitous Computing, IMIS 2014 (2014), pp. 376-380,
    10.1109/IMIS.2014.139 View in ScopusGoogle Scholar Javeed et al., 2023 D. Javeed,
    M.S. Saeed, I. Ahmad, P. Kumar, A. Jolfaei, M. Tahir An intelligent intrusion
    detection system for smart consumer electronics network IEEE Trans. Consum. Electron.
    (2023), p. 1, 10.1109/TCE.2023.3277856 Google Scholar Jindal and Maini, 2014 S.
    Jindal, R. Maini An efficient technique for detection of flooding and jamming
    attacks in wireless sensor networks Int. J. Comput. Appl. (2014), Article 0975
    Google Scholar Kaspersky-Labs, 2022 Kaspersky-Labs Report on DDoS attacks in Q3-2022
    | securelist https://securelist.com/ddos-report-q3-2022/107860/ (2022), Accessed
    1st Mar 2023 Google Scholar Koroniotis et al., 2019a N. Koroniotis, N. Moustafa,
    E. Sitnikova, B. Turnbull Towards the development of realistic botnet dataset
    in the Internet of things for network forensic analytics: bot-iot dataset Future
    Gener. Comput. Syst., 100 (2019), pp. 779-796, 10.1016/j.future.2019.05.041 View
    PDFView articleView in ScopusGoogle Scholar Koroniotis et al., 2019b N. Koroniotis,
    N. Moustafa, E. Sitnikova, B. Turnbull Towards the development of realistic botnet
    dataset in the Internet of things for network forensic analytics: bot-IoT arXiv:1811.00701
    https://doi.org/10.1016/j.future.2019.05.041 (2019) Google Scholar Kumar et al.,
    2021 P. Kumar, R. Tripathi, G.P. Gupta P2IDF: a privacy-preserving based intrusion
    detection framework for software defined Internet of things-fog (SDIoT-Fog) Adjunct
    Proceedings of the 2021 International Conference on Distributed Computing and
    Networking, ACM (2021), pp. 37-42, 10.1145/3427477.3429989 View in ScopusGoogle
    Scholar Kumar et al., 2023 P. Kumar, R. Kumar, A. Aljuhani, D. Javeed, A. Jolfaei,
    A.K.M.N. Islam Digital twin-driven SDN for smart grid: a deep learning integrated
    blockchain for cybersecurity Sol. Energy, 263 (2023), Article 111921, 10.1016/j.solener.2023.111921
    View PDFView articleView in ScopusGoogle Scholar Kumar et al., 2022 R. Kumar,
    P. Kumar, A. Kumar, A.A. Franklin, A. Jolfaei Blockchain and deep learning for
    cyber threat-hunting in software-defined industrial iot 2022 IEEE International
    Conference on Communications Workshops (ICC Workshops) (2022), pp. 776-781, 10.1109/ICCWorkshops53468.2022.9814706
    View in ScopusGoogle Scholar Kwon and Lim, 2023 M.-S. Kwon, D.-K. Lim A study
    on the optimal design of pma-synrm for electric vehicles combining random forest
    and genetic algorithm IEEE Access, 11 (2023), pp. 52357-52369, 10.1109/ACCESS.2023.3279126
    View in ScopusGoogle Scholar Lashkari, 2016 A.H. Lashkari GitHub - CICFlowMeter:
    CICFlowmeter-V4.0 (formerly known as ISCXFlowMeter) https://github.com/ahlashkari/CICFlowMeter
    (2016), Accessed 20th Apr 2022 Google Scholar Microsoft, 2023 Microsoft Microsoft
    cloud for healthcare https://www.microsoft.com/en-in/industry/health/microsoft-cloud-for-healthcare
    (2023), Accessed 16th Apr 2023 Google Scholar Molina and Jacob, 2018 E. Molina,
    E. Jacob Software-defined networking in cyber-physical systems: a survey Comput.
    Electr. Eng., 66 (2018), pp. 407-419, 10.1016/j.compeleceng.2017.05.013 View PDFView
    articleView in ScopusGoogle Scholar Muñoz et al., 2018 R. Muñoz, R. Vilalta, N.
    Yoshikane, R. Casellas, R. Martínez, T. Tsuritani, I. Morita Integration of IoT,
    transport SDN, and edge/cloud computing for dynamic distribution of IoT analytics
    and efficient use of network resources J. Lightwave Technol., 36 (7) (2018), pp.
    1420-1428, 10.1109/JLT.2018.2800660 View in ScopusGoogle Scholar Nguyen et al.,
    2019 T.G. Nguyen, T.V. Phan, B.T. Nguyen, C. So-In, Z.A. Baig, S. Sanguanpong
    SeArch: a collaborative and intelligent NIDS architecture for SDN-based cloud
    IoT networks IEEE Access, 7 (2019), pp. 107678-107694, 10.1109/ACCESS.2019.2932438
    View in ScopusGoogle Scholar Nimbalkar and Kshirsagar, 2021 P. Nimbalkar, D. Kshirsagar
    Feature selection for intrusion detection system in Internet-of-things (iot) ICT
    Express, 7 (2) (2021), pp. 177-181, 10.1016/j.icte.2021.04.012 View PDFView articleView
    in ScopusGoogle Scholar Özçelik et al., 2017 M. Özçelik, N. Chalabianloo, G. Gür
    Software-defined edge defense against iot-based ddos 2017 IEEE International Conference
    on Computer and Information Technology (CIT), IEEE (2017), pp. 308-313, 10.3390/fi12030044
    View in ScopusGoogle Scholar Patel et al., 2019 N.D. Patel, B.M. Mehtre, R. Wankar
    Simulators, emulators, and test-beds for Internet of things: a comparison Proceedings
    of the 3rd International Conference on I-SMAC IoT in Social, Mobile, Analytics
    and Cloud, I-SMAC 2019 (2019), pp. 139-145, 10.1109/I-SMAC47947.2019.9032519 View
    in ScopusGoogle Scholar Paul et al., 2021 S. Paul, M. Riffat, A. Yasir, M.N. Mahim,
    B.Y. Sharnali, I.T. Naheen, A. Rahman, A. Kulkarni Industry 4.0 applications for
    medical/healthcare services J. Sens. Actuator Netw., 10 (3) (2021), p. 43, 10.3390/jsan10030043
    Google Scholar Priyadarshini et al., 2020 R. Priyadarshini, R. Kumar Barik, H.
    Dubey Fog-sdn: a light mitigation scheme for ddos attack in fog computing framework
    Int. J. Commun. Syst., 33 (9) (2020), Article e4389, 10.1002/dac.4389 View in
    ScopusGoogle Scholar Rai et al., 2016 K. Rai, M.S. Devi, A. Guleria Decision tree
    based algorithm for intrusion detection Int. J. Adv. Netw. Appl., 07 (04) (2016),
    pp. 2828-2834 Google Scholar Research, 2023 G.V. Research Smart healthcare market
    size, share, trends analysis report and segment forecasts, 2022 - 2030 https://www.grandviewresearch.com/industry-analysis/smart-healthcare-market
    (2023), Accessed 16th Apr 2023 Google Scholar Salman et al., 2018 O. Salman, I.
    Elhajj, A. Chehab, A. Kayssi IoT survey: an SDN and fog computing perspective
    Comput. Netw., 143 (2018), pp. 221-246, 10.1016/j.comnet.2018.07.020 View PDFView
    articleView in ScopusGoogle Scholar Sangkatsanee et al., 2011 P. Sangkatsanee,
    N. Wattanapongsakorn, C. Charnsripinyo Practical real-time intrusion detection
    using machine learning approaches Comput. Commun., 34 (18) (2011), pp. 2227-2235,
    10.1016/j.comcom.2011.07.001 View PDFView articleView in ScopusGoogle Scholar
    Sathiyapriya et al., 2023 K. Sathiyapriya, S. Vankadara, K.S. Babu, M. Muralidharan
    Performance comparison of LSTM and XGBOOST for ether price prediction from spam
    filtered tweets 2023 International Conference on Intelligent Systems for Communication,
    IoT and Security (ICISCoIS), IEEE (2023), pp. 650-655, 10.1109/ICISCoIS56541.2023.10100425
    View in ScopusGoogle Scholar Shafiq et al., 2020 M. Shafiq, Z. Tian, A.K. Bashir,
    X. Du, M. Guizani Corrauc: a malicious bot-iot traffic detection method in iot
    network using machine-learning techniques IEEE Int. Things J., 8 (5) (2020), pp.
    3242-3254, 10.1109/JIOT.2020.3002255 Google Scholar Singh et al., 2022 K. Singh,
    L. Kaur, R. Maini A survey of intrusion detection techniques based on negative
    selection algorithm Int. J. Syst. Assur. Eng. Manag., 13 (1) (2022), pp. 175-185,
    10.1007/s13198-021-01357-8 View in ScopusGoogle Scholar Singh et al., 2021 S.
    Singh, S.V. Fernandes, V. Padmanabha, P. Rubini Mcids-multi classifier intrusion
    detection system for iot cyber attack using deep learning algorithm 2021 Third
    International Conference on Intelligent Communication Technologies and Virtual
    Mobile Networks (ICICV) (2021), pp. 354-360, 10.1109/ICICV50876.2021.9388579 View
    in ScopusGoogle Scholar Sivanathan and Gharakheili, 2023 A. Sivanathan, H.H. Gharakheili
    IoT security: UNSW-Sydney IoT dataset https://iotanalytics.unsw.edu.au/index (2023),
    Accessed 16th Apr 2023 Google Scholar Sivanathan et al., 2017 A. Sivanathan, F.
    Loi, H.H. Gharakheili, V. Sivaraman Experimental evaluation of cybersecurity threats
    to the smart-home 2017 IEEE International Conference on Advanced Networks and
    Telecommunications Systems (ANTS) (2017), pp. 1-6, 10.1109/ANTS.2017.8384143 View
    in ScopusGoogle Scholar Sivanathan et al., 2019 A. Sivanathan, H.H. Gharakheili,
    F. Loi, A. Radford, C. Wijenayake, A. Vishwanath, V. Sivaraman Classifying iot
    devices in smart environments using network traffic characteristics IEEE Trans.
    Mob. Comput., 18 (8) (2019), pp. 1745-1759, 10.1109/TMC.2018.2866249 View in ScopusGoogle
    Scholar Sivanathan et al., 2020 A. Sivanathan, H. Habibi Gharakheili, V. Sivaraman
    Managing iot cyber-security using programmable telemetry and machine learning
    IEEE Trans. Netw. Serv. Manag., 17 (1) (2020), pp. 60-74, 10.1109/TNSM.2020.2971213
    View in ScopusGoogle Scholar Snehi and Bhandari, 2021a M. Snehi, A. Bhandari Vulnerability
    retrospection of security solutions for software-defined cyber–physical system
    against ddos and iot-ddos attacks Comput. Sci. Rev., 40 (2021), Article 100371,
    10.1016/j.cosrev.2021.100371 View PDFView articleView in ScopusGoogle Scholar
    Snehi and Bhandari, 2021b M. Snehi, A. Bhandari Apprehending mirai botnet philosophy
    and smart learning models for iot-ddos detection 2021 8th International Conference
    on Computing for Sustainable Global Development (INDIACom) (2021), pp. 501-505
    View in ScopusGoogle Scholar Snehi and Bhandari, 2021c M. Snehi, A. Bhandari An
    sdn/nfv based intelligent fog architecture for ddos defense in cyber physical
    systems 2021 10th International Conference on System Modeling & Advancement in
    Research Trends (SMART) (2021), pp. 229-234, 10.1109/SMART52563.2021.9676241 View
    in ScopusGoogle Scholar Snehi and Bhandari, 2021d M. Snehi, A. Bhandari Empirical
    investigation of iot traffic in smart environments: characteristics, research
    gaps and recommendations 2021 10th International Conference on System Modeling
    & Advancement in Research Trends (SMART) (2021), pp. 176-181, 10.1109/SMART52563.2021.9676298
    Google Scholar Snehi and Bhandari, 2022 M. Snehi, A. Bhandari A novel distributed
    stack ensembled meta-learning-based optimized classification framework for real-time
    prolific IoT traffic streams Arab. J. Sci. Eng. (2022), pp. 2191-4281, 10.1007/s13369-021-06472-z
    Google Scholar Tahsien et al., 2020 S.M. Tahsien, H. Karimipour, P. Spachos Machine
    learning based solutions for security of Internet of things (iot): a survey J.
    Netw. Comput. Appl., 161 (2020), Article 102630, 10.1016/j.jnca.2020.102630 View
    PDFView articleView in ScopusGoogle Scholar Tama et al., 2020 B.A. Tama, L. Nkenyereye,
    S.M. Islam, K.S. Kwak An enhanced anomaly detection in web traffic using a stack
    of classifier ensemble IEEE Access, 8 (2020), pp. 24120-24134, 10.1109/ACCESS.2020.2969428
    View in ScopusGoogle Scholar Ullah et al., 2009 S. Ullah, P. Khan, N. Ullah, S.
    Saleem, H. Higgins, K. Sup Kwak A review of wireless body area networks for medical
    applications Int. J. Commun. Netw. Syst. Sci., 02 (08) (2009), pp. 797-803, 10.4236/ijcns.2009.28093
    Google Scholar Venters and Whitley, 2012 W. Venters, E.A. Whitley A critical review
    of cloud computing: researching desires and realities J. Inf. Technol., 27 (3)
    (2012), pp. 179-197, 10.1057/jit.2012.17 View in ScopusGoogle Scholar Verma et
    al., 2020 J. Verma, A. Bhandari, G. Singh Review of existing data sets for network
    intrusion detection system Adv. Math., Sci. J., 9 (6) (2020), pp. 3849-3854 CrossRefView
    in ScopusGoogle Scholar Verma et al., 2021 J. Verma, A. Bhandari, G. Singh A meta-analysis
    of role of network intrusion detection systems in confronting network attacks
    2021 8th International Conference on Computing for Sustainable Global Development
    (INDIACom) (2021), pp. 506-511 View in ScopusGoogle Scholar Virk and Maini, 2023
    I.S. Virk, R. Maini Multiclass classification of prostate cancer Gleason grades
    groups using features of multi parametric-mri (mp-mri) images by applying machine
    learning techniques 2023 International Conference on Artificial Intelligence and
    Smart Communication (AISC) (2023), pp. 954-958, 10.1109/AISC56616.2023.10085270
    View in ScopusGoogle Scholar Wadhawan and Maini, 2022 S. Wadhawan, R. Maini Etcd:
    an effective machine learning based technique for cardiac disease prediction with
    optimal feature subset selection Knowl.-Based Syst., 255 (2022), Article 109709,
    10.1016/j.knosys.2022.109709 View PDFView articleView in ScopusGoogle Scholar
    Wani and Revathi, 2020 A. Wani, S. Revathi Ddos detection and alleviation in iot
    using sdn (sdiot-ddos-da) J. Inst. Eng. (India), Ser. B, 101 (2) (2020), pp. 117-128,
    10.1007/s40031-020-00442-z View in ScopusGoogle Scholar Yuki et al., 2020 K. Yuki,
    M. Fujiogi, S. Koutsogiannaki Covid-19 pathophysiology: a review Clin. Immunol.,
    215 (2020), Article 108427, 10.1007/s11276-019-02043-1 View PDFView articleView
    in ScopusGoogle Scholar Zarpelão et al., 2017 B.B. Zarpelão, R.S. Miani, C.T.
    Kawakani, S.C. de Alvarenga A survey of intrusion detection in Internet of things
    J. Netw. Comput. Appl., 84 (2017), pp. 25-37, 10.1016/j.jnca.2017.02.009 View
    PDFView articleView in ScopusGoogle Scholar Zhang et al., 2018 B. Zhang, Y. Yu,
    J. Li Network intrusion detection based on stacked sparse autoencoder and binary
    tree ensemble method 2018 IEEE International Conference on Communications Workshops,
    ICC Workshops 2018 - Proceedings (2018), pp. 1-6, 10.1109/ICCW.2018.8403759 Google
    Scholar Zhou et al., 2019 L. Zhou, H. Guo, G. Deng A fog computing based approach
    to ddos mitigation in iiot systems Comput. Secur., 85 (2019), pp. 51-62, 10.1016/j.cose.2019.04.017
    View PDFView articleView in ScopusGoogle Scholar Zoppi et al., 2021 T. Zoppi,
    A. Ceccarelli, A. Bondavalli Unsupervised algorithms to detect zero-day attacks:
    strategy and application IEEE Access, 9 (2021), pp. 90603-90615, 10.1109/ACCESS.2021.3090957
    View in ScopusGoogle Scholar Cited by (0) Dr. Manish Snehi received his Bachelor
    Degree (B.Tech.) from Kurukshetra University, Kurukshetra, India with specialization
    in Computer Engineering in 2002 and Master Degree (MS) in Software Systems from
    Birla Institute of Technology and Science (BITS), Pilani, Rajasthan, India in
    2005. He completed his doctoral degree in Computer Engineering (Ph.D.) from Punjabi
    University, Patiala, Punjab, India. He has 21 years of professional experience
    in Smart Healthcare, Internet of Things, Cyber Security, and Remote Device Management
    domains. Presently, he is working as a Senior Technology Architect in the department
    of Engineering Services in Infosys Limited, Chandigarh, India. He can be reached
    at: snehi.manish@outlook.com. Dr. Abhinav Bhandari was born on 20 April 1979.
    He received his Bachelor''s Degree (B.Tech.) from GTBKIET, Malout, Punjab Technical
    University, Jalandhar with specialization in Computer Science & Engineering in
    2001. He received his Master''s Degree (MTech.) from DAVIET Jalandhar, in 2008.
    His professional experience includes the teaching as Lecturer, Assistant Professor
    and Head, Department of Electronics Engineering at L.L.R.I.E.T. Moga. Presently,
    he is working as an Assistant Professor in Department of Computer Science and
    Engineering at Punjabi University, Patiala (PB) India. His fields of special interest
    include Computer Networks, Network Security, DDoS attacks defense. He has registered
    for his Ph.D. Degree from Dr. B. R Ambedkar National Institute of Technology,
    Jalandhar, (PB) India). He can be reached at: abhinavbhandari@pbi.ac.in. Ms. Jyoti
    Verma holds an M. Tech in Computer Science and Engineering from Dr. B.R Ambedkar
    NIT, Jalandhar, India. She obtained her bachelor''s degree (B. Tech) in Computer
    Engineering from Kurukshetra University, India, in 2002. Jyoti has more than 15
    years of experience in teaching. She worked as Assistant Professor at Chitkara
    University, Punjab, India, and Lingaya''s University, Haryana, India. Jyoti is
    pursuing her doctoral degree (Ph.D.) in Computer Engineering from Punjabi University,
    Patiala, India. Her research work has been widely recognized, and she has published
    several papers in top-tier peer-reviewed journals. Jyoti has also edited technical
    books and served as a reviewer for several journals. She holds several patents
    in cross-functional domains, demonstrating her ability to bring innovative ideas
    to fruition. View Abstract © 2024 Elsevier Ltd. All rights reserved. Recommended
    articles XRan: Explainable deep learning-based ransomware detection using dynamic
    analysis Computers & Security, Volume 139, 2024, Article 103703 Sibel Gulmez,
    …, Ibrahim Sogukpinar View PDF An adversarial attack approach for eXplainable
    AI evaluation on deepfake detection models Computers & Security, Volume 139, 2024,
    Article 103684 Balachandar Gowrisankar, Vrizlynn L.L. Thing View PDF GAPBAS: Genetic
    algorithm-based privacy budget allocation strategy in differential privacy K-means
    clustering algorithm Computers & Security, Volume 139, 2024, Article 103697 Yong
    Li, …, Ming Liu View PDF Show 3 more articles Article Metrics Captures Readers:
    12 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Security
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Foggier skies, clearer clouds: A real-time IoT-DDoS attack mitigation framework
    in fog-assisted software-defined cyber-physical systems'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Rezaee M.R.
  - Abdul Hamid N.A.W.
  - Hussin M.
  - Zukarnain Z.A.
  citation_count: '0'
  description: The proliferation of Internet of Things (IoT) devices and other IT
    forms in almost every area of human existence has resulted in an enormous influx
    of data that must be managed and stored. One viable solution to this issue is
    to store and handle massive amounts of data in cloud environments. Real-time data
    analysis has always been critical. However, it becomes even more crucial as technology
    and the IoT develop, and new applications emerge, such as autonomous cars, smart
    cities, and IoT devices for healthcare, agriculture, and other industries. Given
    the massive volume of data, moving to a remote cloud is time-consuming and produces
    severe network congestion, rendering cloud administration and rapid data processing
    difficult. Fog computing provides close-to-device processing at the network's
    periphery, and fog computing can analyze data in near real-time. However, the
    increased amount of IoT gadgets and data they produce is a formidable challenge
    for fog nodes. Task offloading may enhance fog computing by offloading the excess
    data to other nodes for processing due to the restricted resources in the fog.
    Management of tasks and resources must be optimized in fog devices. This review
    article overviews related works on task offloading in IoT-Fog-Cloud Environment.
    In addition, we discuss about fog networks and Software-defined network (SDN)
    applications and challenges in fog offloading.
  doi: 10.1109/ACCESS.2024.3375368
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Access >Volume: 12
    Fog Offloading and Task Management in IoT-Fog-Cloud Environment: Review of Algorithms,
    Networks, and SDN Application Publisher: IEEE Cite This PDF Mohammad Reza Rezaee;
    Nor Asilah Wati Abdul Hamid; Masnida Hussin; Zuriati Ahmad Zukarnain All Authors
    168 Full Text Views Open Access Comment(s) Under a Creative Commons License Abstract
    Document Sections I. Introduction II. Overview of Fundamental Concepts III. Related
    Surveys IV. Fog Offloading Related Approaches V. Evaluation and Comparative Analysis
    Show Full Outline Authors Figures References Keywords Metrics Abstract: The proliferation
    of Internet of Things (IoT) devices and other IT forms in almost every area of
    human existence has resulted in an enormous influx of data that must be managed
    and stored. One viable solution to this issue is to store and handle massive amounts
    of data in cloud environments. Real-time data analysis has always been critical.
    However, it becomes even more crucial as technology and the IoT develop, and new
    applications emerge, such as autonomous cars, smart cities, and IoT devices for
    healthcare, agriculture, and other industries. Given the massive volume of data,
    moving to a remote cloud is time-consuming and produces severe network congestion,
    rendering cloud administration and rapid data processing difficult. Fog computing
    provides close-to-device processing at the network’s periphery, and fog computing
    can analyze data in near real-time. However, the increased amount of IoT gadgets
    and data they produce is a formidable challenge for fog nodes. Task offloading
    may enhance fog computing by offloading the excess data to other nodes for processing
    due to the restricted resources in the fog. Management of tasks and resources
    must be optimized in fog devices. This review article overviews related works
    on task offloading in IoT-Fog-Cloud Environment. In addition, we discuss about
    fog networks and Software-defined network (SDN) applications and challenges in
    fog offloading. A Deep Dive into IoT-Fog-Cloud Environments, Exploring Strategies
    for Offloading and Task Management, Including Algorithmic Approaches, Network
    ,and SDN Applications. Published in: IEEE Access ( Volume: 12) Page(s): 39058
    - 39080 Date of Publication: 13 March 2024 Electronic ISSN: 2169-3536 DOI: 10.1109/ACCESS.2024.3375368
    Publisher: IEEE Funding Agency: CCBY - IEEE is not the copyright holder of this
    material. Please follow the instructions via https://creativecommons.org/licenses/by/4.0/
    to obtain full-text articles and stipulations in the API documentation. SECTION
    I. Introduction The vast development of intelligent devices and the rise of cloud
    computing have led to exponential growth in the quantity of data generated by
    IoT gadgets. Furthermore, cutting-edge IoT applications need ultra-low latency
    for data transmission and processing. These include augmented reality (AR), virtual
    reality (VR), autonomous driving, and intelligent manufacturing. A new computer
    paradigm, “fog computing,” is designed to fulfil these needs. Rather than transmitting
    large amounts of data to a centralized cloud server, delay-sensitive apps like
    augmented reality (AR), virtual reality (VR), and online games may do the necessary
    processing at fog nodes. It would significantly lessen the latency of information
    processing and reduce the quantity of data sent inside the primary networks. In
    fog computing, fog nodes are located close to the IoT devices so that they may
    act as a bridge between them and the public cloud. Depending on the structure,
    a fog node might be a cloudlet, a micro-data center, or an IoT gateway. The benefits
    of fog computing have yet to be realized entirely despite many practical and educational
    efforts [1], [2]. Since the IoT generates copious amounts of data, cloud computing
    may be used to manage and analyze this deluge of information. However, real-time
    processing is essential for many IoT devices. Fog computing provides a great answer
    to this problem. Offloading tasks from one fog to another node is crucial for
    continuing processing operations without interruption due to the limited resources
    in fogs for heavy-duty processing, particularly for procedures that need to be
    handled in real-time or quickly. Fog offloading and SDN have been widely used
    across several industries, showcasing their capacity to improve operational efficiency
    and decision-making. Fog computing is employed in smart cities to decrease latency
    and power usage, which is essential for IoT applications such as traffic management
    and public safety systems. Additionally, wireless fog networks enabled by SDN
    offer reduced latency and effective load balancing [3], [4], [5]. Within the healthcare
    sector, it facilitates expedited processing of data at the periphery, hence enhancing
    the promptness and dependability of patient treatment [6], [7] Fog computing and
    SDN are advantageous for industrial automation since they provide predictive maintenance
    and process optimization, particularly in industrial Internet of Things (IIoT)
    systems, ensuring real-time performance and high reliability [8], [9]. Vehicular
    ad-hoc networks (VANET) [10] and vehicular networks [11] integrate SDN and fog
    computing, while [12] employs a fusion of fog computing, SDN, and blockchain to
    enhance IoT sensors in agriculture. Additionally, within the domain of Intelligent
    Transportation Systems (ITS), [13] highlights further innovative deployments and
    [14] focus on prediction of forest fires via distributed machine learning on a
    fog network. These examples highlight the extensive influence of the technology
    across several industries. An evaluation of existing research shows that several
    frameworks and methods have been used to offload computation from the fog onto
    other nodes in the computing infrastructure. While algorithms provide many options
    for dealing with this problem, including offloading to the cloud, the most practical
    approach is to upload work to another fog due to the high expense of cloud offloading.
    The challenge now is picking the right node from all the available ones on the
    network—one that has enough computing power, a fast enough connection, enough
    bandwidth, and is not too far from the original place. Literature evaluation and
    research of various methods and methodologies show that centralized and distributed
    architectures have benefits and drawbacks. The fogs assemble their data and the
    rest of the network’s nodes and linkages. In addition to placing a heavy computational
    burden on the fog and communication lines, this effort also needs to improve the
    efficiency of the underlying network and computing fog. The Centralized architecture
    has performance concerns since it relies on a single device, making it vulnerable
    to outages in case of a communication breakdown between the nodes. In light of
    the numerous complexities surrounding offloading in fog computing, with particular
    emphasis on the intricate nature of network structures, this review paper delves
    into a comprehensive analysis of the prevailing challenges and their corresponding
    solutions. Our objective is to scrutinize the diverse aspects of network utilization
    in fog offloading and explore the applications, benefits, and obstacles associated
    with SDN technology within this domain. The following are the primary contributions
    of this survey: A thorough analysis of the fog offloading issue classifies the
    most recent solutions and identifies the various aspects impacting the offloading
    decision. We discuss and explore diverse types of offloading networks by focusing
    on SDN applications in this field. We present a classification for the optimization
    methodologies to tackle the service placement issue for IoT applications deployed
    across fog nodes. Finally, we explore future research directions in fog-based
    systems and identify great difficulties. We will go deeply into each issue in
    the following parts of this review article. In the second part, we will review
    the significant components, ideas, and aspects of fog computing. In the third
    section, the related surveys are discussed. We will then perform a detailed assessment
    and evaluation of fog offloading related approaches and analyzing recent studies
    in the fourth part. In the fifth part, we will assess and evaluate the approaches
    and categorization of fog computing architectures and SDN. In the sixth part,
    we will discuss the results, emphasizing both the advantages and problems connected
    with SDN in fog computing. Finally, in the last part, we will make conclusions
    that will pave the way for future research areas in fog computing. SECTION II.
    Overview of Fundamental Concepts A. IoT The term “Internet of Things” (IoT) refers
    to a network of physical things, such as buildings, cars, and other objects, that
    collect and distribute data using software, sensors, electronics, and network
    connections. IoT devices have confronted storage, communication, energy, and computing
    limits. Due to these inefficiencies, IoT and cloud computing technologies are
    combined [15]. Many IoT systems and information science addresses associated with
    IoT devices are connected to the internet to provide end users and businesses
    with regular services and tasks. Applications for the IoT have exploded in recent
    years, and predictions indicate that this trend will continue. More than seven
    billion IoT devices were linked to the internet in 2018; fourteen billion were
    anticipated to do so in 2019. Among the IoT applications with the highest number
    of deployed devices is the home sector, with 663 million devices in use in 2017.
    Some of the purposes for intelligent homes include locks, freezers, stoves, refrigerators,
    and lighting. Expanded IoT usage, or the “smart city,” has been proposed for many
    European nations. Automation, pricing potency, and exactness have contributed
    most to the present trend in industrial, agricultural, and health applications.
    Patient monitoring, energy-saving, and imaging-related technologies are a few
    examples of healthcare gadgets (X-ray machines) [16]. B. Cloud Computing “IoT”
    and “cloud computing” are the foundation of a swift and autonomous transformation.
    IoT technology’s processing, storage, and communications constraints may initially
    be made up for by the almost limitless cloud computing resources and capabilities.
    Additionally, cloud computing may be advantageous in many real-world situations
    by allowing new services. IoT technology has extended its reach to solve real-world
    issues in a more distributed and dynamic fashion [17]. Connecting self-aware,
    intelligent nodes, or “things,” in a dynamic, worldwide network architecture is
    the core concept of the IoT. It supports ubiquitous and pervasive computing potential
    and is one of the most problematic technologies. Some define the IoT as a phrase
    for small, universal, global, and responsible items with limited processing and
    storage power and privacy, security, and accountability concerns. On the other
    hand, cloud computing is a highly developed technology that offers almost endless
    processing and storage capacity and has addressed or substantially resolved most
    IoT issues. As such, it is anticipated that a single IT paradigm—in which Cloud
    and IoT are complementary technologies—will disrupt the current and future internet
    [18]. The necessity for an interface between cloud and fog infrastructures was
    seen from the beginning of the fog concept [19]. Additionally, [18] addresses
    the interaction between such entities; the standardization of this interface is
    highlighted as one of the crucial challenges [20]. C. Edge Computing In order
    to improve reaction times and save bandwidth, edge computing and fog computing—two
    essential elements of distributed computing—seek to move processing and data storage
    closer to the point of need. Even if their goals are identical, their distinct
    qualities may either support or contradict one another. Whereas fog computing
    makes use of an intermediate layer, such as routers or gateway devices, edge computing
    processes data on devices at the edge of the network, such as smartphones and
    IoT sensors. Through a layered computing architecture, the synergy of these two
    enables a more effective allocation of computational activities, boosting efficiency,
    performance, scalability, and system dependability. Edge computing requires the
    construction of tiny, virtualized infrastructures between base stations, radio
    network controllers, and other aggregation sites at the network edge. Although
    edge computing uses an architecture and an operating system distinct from fog
    computing (one operator maintains the infrastructure, excluding consumer devices),
    it targets applications comparable to fog computing. Edge computing also leverages
    telecom infrastructures to provide mobile edge services, including location, information
    measure management, and radio network information [21]. To prolong the battery
    life of edge devices, the applications running on edge devices may be efficiently
    migrated to fog devices that possess sufficient resources and battery capacity.
    This approach has been demonstrated in research [22]. Nevertheless there are additional
    difficulties in combining edge and fog computing. It is difficult to manage resources
    between fog nodes and edge devices, and the increasing data processing at the
    edge raises security and privacy issues. Interoperability problems may arise from
    a lack of standardisation, and in certain situations, the interdependency on network
    connection presents difficulties. Furthermore, the deployment and maintenance
    of these integrated systems are very complicated, and the energy consumption and
    sustainability of such a dispersed network need cautious management. All things
    considered, edge computing enhances fog computing by improving processing power,
    but it also brings new challenges that must be resolved in order to maximise dispersed
    computing systems. D. Fog Computing Fog computing has emerged as a feasible supplement
    to cloud computing with the advent of real-time IoT devices, bringing cloud computing
    to the edge of the network to fulfill the stringent latency constraints and intense
    processing needs of these applications [22], [23]. A typical fog compute node
    comprises several geographically distributed fog nodes positioned at the network’s
    edge with different resource provisioning, such as storage, processing power,
    and communication bandwidth [24]. Fog computing bridges edge devices and the cloud,
    offering low-latency connections and a dynamic environment. It is similar to the
    edge in architecture and closer to the cloud regarding resources, capable of performing
    computations and storing data fields [25]. A cloud extension known as fog computing
    occasionally reduces latency and supports time-sensitive applications, including
    online gaming, healthcare, and autonomous driving. Local devices execute simple
    activities, whereas large cloud installations handle sophisticated procedures.
    Fog computing collects virtual resources from several devices scattered around
    the environment, each managed by a different entity [21]. The IoT enables connections
    between objects and networks. Fog computing, an innovative concept, provides computer,
    storage, and networking services to IoT devices (such as sensors or embedded devices)
    at the network’s edge. Fog computing benefits mobile computing swiftly analyses
    massive amounts of data and manages billions of internet-connected devices. Fog
    property, quality of service, interface and programming model, machine offloading,
    scheduling, accounting and tracking, resource and repair management, and information
    privacy are among the fundamental problems in fog computing. Fog computing eliminates
    interruptions with an economical cloud architecture. Positioning fog nodes adjacent
    to the information source provides cloud support options. Instead of transferring
    IoT data to the cloud, fog evaluates and stores it locally at IoT devices, enabling
    fog to offer higher-quality services with quicker response times. Fog is the ideal
    choice for allowing the IoT to provide a range of IoT applications in an IoT system
    with practical and dependable services [26]. The closeness of end users, regionally
    targeted allocation, and quality allowance will distinguish fog from the cloud.
    Fog substantially minimizes network information measure utilization when compared
    to the cloud. In cloud based IoT data processing, each unique piece of IoT data
    must be sent to the cloud data center. Transferring data becomes increasingly
    costly if the number of data to be reviewed rises fast as is the situation with
    today’s IoT. Because of the fog, information is kept and processed locally, reducing
    the utility of sending such information. If processed data is required to be retained
    for different analytical and historical reasons, it is uploaded to the cloud.
    Consumers would benefit from cheaper operational expenses as a consequence. Furthermore,
    since the data is handled so close to the source, the end-user application becomes
    very fast, which is crucial for maintaining the quality of service for period
    and Mobile to Mobile operations. As a result, fog management services improve
    customer satisfaction while IoT information services become more reliable, efficient,
    and consistent [26]. Even though fog networking seems to be a realistic solution
    for overcoming the drawbacks of cloud computing and current networks, some concerns
    must be addressed in the future. The most critical need is a distributed intelligent
    platform for managing computing, networking, and storage resources at the edge.
    Given the wide variety of processing power capabilities of nodes, the uncertainty
    surrounding task demands, resources available at fog nodes, and distribution choices,
    it is challenging to make an acceptable distribution decision in fog networks
    [27]. Furthermore, communication delays between nodes should be considered when
    selecting a distribution, since this may lead to more extended processing times
    [28]. Consequently, the Fog computing paradigm confronts several challenges [29].
    A fog node’s response period is used to evaluate whether it should handle the
    whole of a service request that has been received, process just a part of it,
    or offload it to another fog. Each fog’s reaction time will be determined regularly
    utilizing the fog’s available capacity (i.e., waiting line volume) and the service’s
    demand travel time (lower latency is always desirable) [30]. Each fog in the network
    tries to gather data about other fogs and nodes nearby. Whenever a fog has to
    offload its responsibilities to other nodes, it stays connected to the surrounding
    nodes, changes the value of the computational function and the state of its connection
    connections, and decides about which fog to offload based on an algorithm that
    analyses the different fogs. In contrast, the centralized architecture relies
    on a server or other centralized device to gather data from distributed fogs,
    analyze computing resources, and map out connections between distributed fogs
    throughout a network. Send the communication connections from the nodes constantly
    to the device in the center. A node will communicate with this centralized machine
    when it wants to submit its duties. Central devices pick the target fog for offloading
    and introduce the source node based on nodes and network connections following
    the decision process for which the choice is made. A three-layer fog computing
    architecture is shown in Figure 1. FIGURE 1. A three-layer fog computing architecture
    [22]. Show All E. Task Offloading IoT and mobile devices are not suited for running
    programs needing significant resources since they have limited memory, computing
    power, battery life, and measurement of communication data. Mobile cloud computing
    was developed to solve the current problem and eliminate such challenges. It is
    a paradigm for shifting heavy-lifting mobile device tasks to the cloud or compute
    offloading, which frees up mobile devices’ resource constraints. Several constraints,
    including a sizeable average access latency between users and remote clouds, high
    battery consumption, and a deficiency of local user data, make offloading activities
    to the cloud possible only for specific mobile applications. Novel approaches
    are being presented to address these problems, including offloading mobile network
    traffic to complementary networks like Wi-Fi and satellite-terrestrial networks
    and edge cloud computing [31]. Consider the case when a fog node first receives
    and processes a request for data processing from a thing before responding. When
    a fog node is overloaded with other requests, it may only process a portion of
    the payload before sending it to other fog nodes. There are two ways to simulate
    fog node interactions: With the first approach, a central node keeps up the fog
    node offload contact. Every fog node follows a protocol to provide its most current
    status information to its neighbors. Second, every fog node maintains a frequently
    updated list of the best nodes to manage the offloaded workloads [30]. Offloading
    must handle many challenges in fog computing, including: How to construct the
    best offloading scheme, how to partition an application for offloading, and what
    sort of data is needed for offloading decisions are the first three questions
    [24]. Offloading must handle many challenges in fog computing, including: How
    to construct the best offloading scheme, how to partition an application for offloading,
    and what sort of data is needed for offloading decisions are the first three questions
    [13], [32], [33]. According to [23], resource allocation and dynamic offloading
    in fog computing present many vital challenges. These challenges include the following:
    The Power-Latency Tradeoff and System Dynamics: A fog system often consists of
    several layers, intricate dynamic interactions between fog tiers and the cloud,
    and dynamic internal dynamics that are always changing. Effective Decision-Making
    Process: Because of overheads, decision-making processes should be computationally
    effective. The challenges are often brought on by the unpredictable nature of
    the traffic data, the ongoing nature of task delivery, and the intrinsic complexity
    of the issue. Understanding the Benefits of Predictive Offloading: A crucial aspect
    of online decision-making is using predictive offloading to reduce delays and
    improve the quality of service. Although fog computing prediction offloading has
    various applications, its primary constraints remain a mystery. The key topic
    that will be explored is resource management in terms of computing resources and
    data storage amongst different fogs in the network. IoT devices may offload tasks
    to fog nodes fog nodes to other fog nodes, and fog nodes to clouds. The tasks
    are re-offloaded to the surrounding fog nodes or cloud due to the fog node’s low
    processing resources [34], [35], [36], [37], that resulted in more transmission
    and processing costs [37], [38]. Figure 2 depicts the scopes of task offloading
    in fog computing. FIGURE 2. Task offloading scopes related to fog computing. Show
    All Here, we will present and discuss related fog processing and offloading efforts.
    Due to its relevance and significance, the fog processing debate has garnered
    the attention of several scholars. F. Software Defined Network (SDN) SDN is an
    advanced networking concept that divides the control plane from the data plane
    [39]. This leads to increased flexibility and agility as well as more straightforward
    network design and management. SDN’s main idea is to let a logically centralized
    software-based controller, or control plane, take care of network intelligence
    and decision-making, with the data plane handling tasks like traffic forwarding.
    SDN has many advantages, including network programmability, which promotes network
    automation, and network management, which lowers operating costs by streamlining
    administration activities. And virtualization of networks [40]. Most device power
    consumption in IoT applications happens during packet forwarding on the network
    side [13], [41]. Device life and offloading quality will suffer from poor-quality
    offloading brought on by limited bandwidth and excessive latency. SDN has evolved
    as an auxiliary technology on the network side in offloading operations to alleviate
    this issue [13], [42]. Centralized control, programmability, load balancing, and
    management are just some of the problems that plague traditional Fog networks
    [43], [44], [45]. Fog nodes can efficiently operate together using SDN [2], [45],
    [46]. By enhancing the rules in its centralized SDN controller with a network-wide
    perspective [47], SDN allows for more wiggle room in the network’s programming.
    By gathering information from each network device, adjusting the load-balancing
    plan, and keeping an eye on network traffic, an SDN controller dynamically manages
    the network [45], [48], [49]. Gathering network data, such as utilization of resources,
    device positioning and mobility, load metrics, and network information, is the
    primary duty of the SDN controller in order to ensure the field of SDN-enabled
    networks provides a high level of service [13], [50], [51], [52], [53]. The offloading
    service with SDN can detect changes in the network since it uses the SDN controller
    according to the compute demands and network conditions, it may select the best
    offloading node for an overloaded fog node. SECTION III. Related Surveys As pointed
    out earlier, merely transferring and offloading data across Fogs won’t provide
    the perfect setup without considering task management and resource availability.
    Nevertheless, the majority of prior review papers have addressed algorithms from
    a broad perspective, failing to take into account the specifics of the algorithm’s
    capacity for task and resource management. This work makes a substantial addition
    to the area of fog computing by analyzing fog analysis algorithms based on the
    three primary capabilities of task management, resource management, and task offloading.
    This study diverges from recent surveys focused on fog and Edge computing, mobile
    Edge computing, or machine learning applications. Instead, it offers an in-depth
    analysis of network concerns and SDN applications, specifically within the framework
    of fog offloading. This extensive examination of network and SDN issues fills
    a gap in previous research, which either ignored or briefly addressed these aspects.
    As a result, it makes a substantial addition to the subject. This approach fills
    an essential need in existing literature, establishing our study as a crucial
    asset in comprehending and progressing network management tactics in these developing
    computing paradigms. Surveys [39], [40], and [44] mainly examined Edge computing,
    mobile Edge computing, and general SDN usage. However, they either neglected or
    just briefly addressed network concerns. On the other hand, this study provides
    a detailed analysis of these topics, addressing a significant deficiency in the
    existing body of knowledge and offering valuable perspectives for enhancing network
    management tactics in Fog computing. In [54], task offloading in edge computing
    and the IoT is investigated. The study considers the benefits, factors that impact
    the decision of offloading, and different offloading techniques and algorithms.
    The algorithms are classified into two categories, machine learning and non-machine
    learning, and offloading strategies, such as total and partial offloading, are
    discussed. Authors of [55] analyzed the role and challenges of Artificial Intelligence
    and Machine Learning algorithms for resource management in fog/edge computing
    environments. References [56] examined significant journal publications on mobile
    computing and how the research route, challenges, and methodologies have evolved.
    Also, the architecture and essential components of edge computing are described.
    Reference [57] overviews offloading strategies in a fog environment. The contributions
    they cover are articles published on or before November 2020 and do not contain
    the most recent research in fog computing. A general overview of the goals, optimization
    methods, algorithms relevant to task offloading in fog computing, and formulation
    of its mathematical issue is covered in [58]. The article [35] examines the factors
    influencing whether to utilize the cloud or the fog for offloading while discussing
    various offloading techniques in the cloud-IoT ecosystem. The authors also discuss
    other offloading-supporting technologies, such as wireless connection, virtualization,
    and AI. Reference [59] reviews how Reinforcement Learning (RL) and Deep Reinforcement
    Learning (DRL) algorithms deal with offloading problems in fog computing. Value-based,
    policy-based, and hybrid-based algorithms are the three classes into which it
    divides the fog computing offloading methods. In contrast to prior review studies,
    we focused on task management from different perspectives in this study, including
    network problems and SDN technologies. Table 1 compares this study with other
    relevant studies in this field. TABLE 1 Related Works This review article focuses
    on the importance of networks and SDN in fog computing, emphasizing how they improve
    resource management, scalability, and compute efficiency in centralized and distributed
    computing environments. As a cloud computing extension, fog computing moves storage
    and processing closer to the network’s edge, requiring reliable and adaptable
    network management systems. In this context, SDN’s function is essential since
    it offers dynamic network design and optimization, which can adjust to fog computing
    environments’ different and sometimes erratic requirements. The detailed examination
    of these issues by this study not only offers a complete knowledge of the problems
    and solutions in this field today but also opens the door for future advancements
    in SDN application and network management, both essential for developing fog computing
    technologies. SECTION IV. Fog Offloading Related Approaches The paradigm for fog
    computing has extremely low latency. Due to fog computing scalability and improved
    reactivity, it has caught the interest of numerous academics [14], [35], [46],
    [55], [59], [60]. Several publications in the fog computing sector were investigated
    in the literature review. These articles are classified and compared into the
    following areas of fog offloading based on the kind of algorithms and system architectures.
    Resource management Task management Task Offloading The interconnected components
    comprising the fog computing architecture are shown in Figure 3, and relevant
    articles will be discussed in the following sections. FIGURE 3. The system of
    interconnected components that constitutes fog offloading. Show All Before proceeding
    to the articles connected to the debate, we evaluate the available surveys on
    this issue and emphasize the significance of this study in this part. A. Resource
    Management The fog network consists of various heterogeneous devices that may
    perform computations, store data, and exchange messages. Due to the ever-changing
    nature of fog networks and the mobility of their constituent devices, resource
    management is a significant challenge. Considering the importance of effectively
    managing resources, this might enhance fog network performance and make the most
    of fog’s processing capability. Since then, various attempts to improve fog networks’
    resource management have been assessed. In [30], a fog-to-fog cooperation paradigm
    encourages fog nodes to offload incoming requests based on their load and processing
    capacity. The mathematical model of fog-to-fog collaboration that achieves near-optimal
    task distribution across cooperating fog nodes. The Fog Resource Management Scheme
    (FRAMES) encourages load balancing to address the latency issue with service requests
    received from objects. It is built on the fog as a service concept, which implies
    that each fog node is self-contained in processing, networking, and storage. The
    study uses a formal mathematical model that underlies fog node load balancing.
    The DLAEC algorithm, introduced in reference [61] aims to enhance service quality
    through the utilization of deep learning, taking into account the availability
    of human resources and network capacity for each edge system. The DLAEC method
    maximizes resource utilization at the edge while guaranteeing the concurrent execution
    of the maximum number of deep learning tasks via a three-step decision procedure.
    DLAEC independently evaluates edge access and calculates the correct number of
    deep learning layers for identification at both the edge and cloud nodes, in contrast
    to previous models that allocate a set number of deep learning layers to edge
    systems. By assigning the majority of deep learning tasks to edge nodes, this
    method lessens the requirement for cloud transfers in an Edge Computing-based
    intelligent city environment, reducing network congestion and the load on the
    cloud. Nevertheless, instead of minimizing processing time delays, its primary
    objective is to maximize the capacity of the edge nodes. Consequently, the maximization
    may result in delays, and additional tasks may be accumulated on a single node
    before being redistributed to other nodes. Blaster is a federated structure for
    routing packets within a dispersed edge network to improve application performance
    and data-intensive application scalability [62]. It also includes a revolutionary
    path selection algorithm that predicts the best route using Long Short-Term Memory
    (LSTM). This method employs a Federated Learning (FL) model to increase communication
    across SDN controllers while retaining data flow capacity. Choose the optimal
    route during system construction by using the results of an LSTM model, which
    is a kind of recurrent neural network that uses regression as a tunable technique.
    It is common practice to use the LSTM approach to deep learning-based time series
    forecasting problems. It provides a traffic matrix and a network graph to the
    LSTM. In a peak load prediction, the SDN controller or application may modify
    route selection based on the output, which is the estimated future load on the
    input connections. As a consequence, the state of the network influences route
    selection. Reference [63] deal with implementing SDN to fog networks, namely P4/P4Runtime.
    According to the industry, P4 as a data plan programming language and P4Runtime
    as a control-to-data plan interface may assist address the demands of next-generation
    networks. It presents a unique technique for deploying SDN control plans capable
    of handling fog network SDN data plans and SDN data plans integrated near the
    main network. In this manner, SDN controllers may handle cross-layer SDN data
    plans, enabling certain operations to be offloaded to the Edge. Reference [64]
    creates Android applications that serve as intermediaries between IoT devices
    and Edge/Fog/Cloud Computing ecosystems is made more. These modules facilitate
    connectivity with numerous devices functioning as data sources, and they can seamlessly
    integrate with various Fog/Cloud frameworks, making them readily adaptable for
    diverse applications. This concept is confined to one Android application and
    face limitation to be implemented in any system. A mechanism for data allocation
    in IoT systems was proposed in [65] using the Blockchain. A data controller based
    on fuzzy logic aids in data allocation decisions. FogBus used blockchain-based
    cloud and fog technologies to improve a healthcare case study. The latency of
    data transfers, network utilization, energy consumption, and blockchain storage
    have all decreased, but security mechanism delays persist. In [66], a paradigm
    based on Edge Affinity was proposed and developed to manage applications in processioning
    fog infrastructures. This paradigm organizes applications so that its resource-aware
    approach employs a larger number of fog processes to run applications with heavy
    data loads and rigorous resource needs. It addresses difficulties with application
    data flow and bandwidth. The drawback of this strategy is that it is dependent
    on a static fog management server to perform. In [67], a fog computing model be
    utilized to produce mobility assistance advice for visually impaired people. This
    device combines a mobile phone with a low-cost, low-power embedded board and a
    neural computing stick, giving rise to the acronym PEN (Phone + Embedded Board
    + Neural Computing Stick). These three devices work together to provide numerous
    distributed capabilities by combining fog computing with cloud computing. The
    model’s shortcoming is that varied hardware devices impact the system’s mobility
    and adaptability. Reference [68] present SOSW in Mobile Edge Computing (MEC) by
    leveraging the network traffic matrix. To determine the ideal placements for fog
    nodes, the SOSW model combines column-pivoting linear algebra techniques with
    singular-value decomposition (SVD) and QR factoring. With the aid of ant colony
    optimization (ACO), SOSW provides the constraint-based shortest path algorithm
    (CSPA), a heuristic-based traffic engineering solution that optimizes route calculation
    for task offload. The architecture of fog and its grid to its location within
    the network are the main topics of this research. The placement of fog to IoT
    devices in offloading data to fog in less time is also useful in decreasing energy
    consumption. Selects the route by which the IoT device may upload its data to
    the fog by collecting data through SDN and the recommended method for transmission.
    Research [69] measuring connection quality over time as the average failure, downtime,
    or repair time. To evaluate the reliability of connections, use a k-nearest (k-NNR)
    ML approach based on regression trained on a 5-month real-life network data set.
    The k-NNR considers connection parameters such as the rate of link utilization,
    link failure, and the frequency of data set failures. Furthermore, calculate the
    connection delay as the sum of the transfer delay package size. Research [70]
    discusses the internet of vehicular in MEC by utilizing SDN to propose a resource
    allocation and communication enhancement technique. It leverages q-learning to
    enhance the allocation of communication and computation resources by anticipating
    offload choices. This design’s shortcoming is that it ignores a number of environmental
    factors that are necessary for the proper functioning of the Internet of Vehicles
    system. In order to determine the best offloading choice, communication, computing
    resource allocation, and privacy protection design, it applies a deep reinforcement
    learning method in SDN networks with an emphasis on edge computing-based computing
    offloading and resource allocation. Real-time business from terminal vehicles
    is sent straight into MEC’s processing equipment, and MEC and SDN are integrated
    to provide centralized resource management and flexible network control. Study
    [9] has proposed an adaptive computing optimization for resource management in
    industrial IoT using SDN and edge computing. It describes a strategy for effectively
    calculating the resources of neighboring devices and edge nodes for task processing:
    priority-based transmission with the least energy. In [71] a user revocation system
    with an efficient architecture for a multi-user cloud environment that maintains
    data integrity is provided. It is efficient at reducing overhead when compared
    to current models in the cloud environment, but as user numbers rise, it increases
    the duration it takes to create signatures and proofs. Using CCTV cameras for
    surveillance and event monitoring or on-board cameras for traffic monitoring,
    an application may produce enormous volumes of data, especially when video stream
    processing is involved field [72]. The primary contribution of [20] is the development
    of dynamic workload placement methods for latency-constrained stream processing
    requests. The primary concentration is on the arrangement of operators and the
    allocation of resources in a distributed environment that utilizes cloud and fog
    computing. When there is a network capacity shortage, provisioning of computing
    infrastructure uses the interaction between fog and cloud. The algorithms’ goal
    is to optimize the proportion of successfully handled requests while adhering
    to application delay requirements by efficiently using the resources at hand.
    To balance quality of service and energy consumption in large-scale networks,
    [73] introduces the Set-based Differential Evolutionary algorithm for energy-efficient
    resource management in IoT-based smart cities, employing SDN and fog computing.
    In [74], each fog node in the resource allocation approach for fog computing based
    on SDN is defined by its processing capability and bandwidth (communication capacity).
    The method begins with picking an admin node and then mapping the nodes in the
    task graph to the fog node depending on the capacity of the fog node. Following
    this mapping, the allotted resources are taken from the fog node’s capacity, which
    is maintained by a management module. However, this approach begins by virtualizing
    all of the nodes and scheduling them to one fog node. It then optimizes the schedule
    by relocating the nodes to other fog nodes. B. Task Management By leveraging fog
    in processing information related to IoT devices in many sectors, such as health,
    agriculture, transportation, media, and other sections of intelligent cities,
    various tasks are assigned to the fog for analysis and processing. Several tasks
    are available, ranging from little data gathered by sensors to extensive data
    and films taken by cameras, as well as location and navigation for analysis and
    processing. Most of these data and devices need immediate reactions and real-time
    data processing via fog. Consequently, effectively managing diverse tasks is crucial
    for tasks that must be completed before a deadline. Several studies have developed
    approaches and algorithms for task management in fog networks, some of which are
    addressed here. In order to improve quality in hybrid cloud settings for data-intensive
    applications running in a centralized shared file system, Tuli et al. suggested
    making use of dynamic resources and task scheduling. For data-intensive applications,
    it assesses data file type, data transfer time, network speed, and data proximity
    while planning and dynamically supplying public cloud resources. By lowering the
    quantity of shared file transfers across nodes, this technique may improve service
    quality and decrease task placement in a hybrid cloud environment. This approach
    was designed for cloud computing and is currently incompatible with edge and fog
    computing [75]. A lightweight distributed solution to self-organizing surveillance
    and monitoring fog networks is offered by [76]. FogMon analyses the hardware resources
    (CPU, RAM, HDD) of the access nodes, the end-to-end network quality of service
    (latency and bandwidth) and detects available IoT devices. It does not take storage
    or bandwidth into account when selecting leader nodes. Reference [77] propose
    a privacy-aware task scheduling approach for a Blockchain-based fog network. The
    Ant Colony Optimization (ACO) approach optimizes work scheduling. It keeps end-user
    devices anonymous and reduces work processing time on the cloud’s VRs. To reduce
    application latency, consider demands from edge scheduling [78]. Network latency
    and service time for live video streaming services are significantly decreased
    by a score-based edge service scheduling approach that examines the network, computing,
    and reliability aspects of edge nodes. The flaw is that it restricts the centralized
    optimization process. A fuzzy evolutionary organizer is provided for the multi-target
    resource allocation in a fog environment [79]. Since task processing time, information
    about inter-task communication, and task deadlines are all represented as fuzzy
    values; the technique achieves both the agreement index and robustness aims. The
    proposed approach has a significant temporal complexity. Machine learning is employed
    in the mobile edge processing environment by [80] or distributed task scheduling
    algorithms and distributed device coordination. This model uses the Stackelberg
    game theory and the distributed ADMM optimization approach. This approach can
    achieve quick and ideal convergence regarding intelligent edge processing. The
    design has a significant issue in that it only impacts one MEC server, and the
    scheduling strategy may change when there are several MEC servers. In [81], a
    paradigm for safe data storage and processing at the edge and in the cloud was
    presented. For privacy, this approach encrypts data during transit. In this architecture,
    tasks are broken into tiny portions and transmitted between edge nodes for execution;
    if a node does not have adequate processing capacity, the task migrates to its
    side nodes, and so on, until a suitable node is identified and wholly performed.
    In this system, the node is only dispatched for processing based on its proximity,
    independent of its resources or capacity. It may fail and be compelled to move
    to other nodes. This data transfer and undefined movement might cause substantial
    data latency issues when system demands increase. C. Task Offloading Since there
    is a variety of fog in the network, it is vital to identify the destination fog
    for offloading when fog is overloaded, or IoT devices demand an external processor.
    So, the destination selection choice influences the amount of processing time,
    data delay, and deadline. Conversely, the destination fog’s reliability in completing
    the requisite processing with no errors is another priority offloading operation.
    Factors like having adequate processing power in the destination fog, enough memory,
    and a sufficient and acceptable connection to send data may all be utilized to
    establish the fog’s competence. The right strategy for gathering fog information
    in the network and selecting the optimal fog is vital at this stage. Several approaches
    have been developed to acquire fog information in the network, which may be categorized
    into two categories: centralized and distributed. Most centralized algorithms
    have incorporated SDN technology because of the advantages of SDN networks. 1)
    Decentralize Task Offloading As discussed in last section, some fog offloading
    methods are based on distributed architecture or created without SDN technologies.
    The matching theory-based distributed computing offloading framework MATO, utilized
    for heterogeneous fog nodes to minimize task execution latency, was introduced
    in the research field [82]. Reference [14] enhanced the framework for distributed
    processing on a fog network based on Akka. The Akka toolkit is one of the most
    comprehensive and well-liked actor modeling solutions for Java Virtual Machine
    (JVM). In the Fog IoV network, [37] provide a task offloading strategy employing
    the roadside parked cars as a computing offload location. The struggle between
    IoT devices for fog nodes is treated as a game in Field [83]. The Weighted Potential
    Game’s finite improvement characteristic demonstrates the Nash equilibrium. DecChain
    is a secure edge computing solution based on blockchain that removes the requirement
    for a trusted third party on the network [84]. Concerns such as eliminating a
    trusted network failure point when losing access to a third party have been addressed.
    It faces challenges, such as integrating blockchain into the processing environment
    at the edge. Edge servers or service providers manage tasks in the network. As
    can be seen, service providers handle tasks based on a predefined structure, and
    the capacity of edge nodes to split tasks is not considered. Reference [85] concentrate
    on multi-hop vehicular systems to have optimum options for performing activities
    locally or remotely. For compute offloading, efficient route selection and fog
    node assignment may reduce average service latency and energy consumption. Its
    performance is inferior to other frameworks when there are less than 50 automobiles,
    but by increasing the numbers, performance is more outstanding than others. In
    5G network technologies based on edge computing, research [86] combines optimization
    techniques for task offloading and resource allocation by controlling the energy
    consumption of the system. The plan may provide even better latency performance,
    which boosts the functionality of 5G mobile communication networks and enhances
    end-user satisfaction. The suggested approach ignores the order in which computing
    tasks are completed and only considers the overall processing time delay of all
    tasks inside the system. An Optimal Stopping Theory (OST) inspired paradigm for
    data quality-aware task offloading in mobile edge computing is presented in [87].
    The OST-based method is acceptable when mobile nodes make small, independent choices
    inside the MEC environment and do not need many resources. Each offloading mobile
    node will run the models in a single configuration without considering the context
    of other mobile nodes. The structure and task offloading based on neural network
    service are illustrated using a GPU-based embedded edge server [88]. An offloading
    mechanism is presented based on the computing gap between the edge and the central
    cloud. It is particularly costly to build since it depends on GPU resources at
    the network’s edge. In [22], when one node on the network becomes overburdened,
    it may upload all or part of its responsibilities to other fogs through a cooperative
    mechanism. This algorithm improves fog dispersal based on multipliers distributed
    alternating direction approach. This model focuses on optimizing the Quality of
    Experience (QoE) and increasing the power efficiency of fog nodes and the tradeoff
    between these two measures. Reference [23] provides a multi-layered fog computing
    system for dynamic resource allocation and offloading utilizing traffic prediction.
    It defined the problem as a stochastic network optimization problem and offered
    a solution that reduces power consumption while maintaining queue stability. The
    shortcoming of the concept is that power usage and overall queue backlog sizes
    would become inefficient if forecast mistakes happened. For the concurrent task
    data offloading, [36] suggests collaborating horizontally with several fog nodes
    and vertically with a faraway cloud. It took into account the latency in communication
    between end users and the fog, as well as the time it took to send data and provide
    services. It also factored in local computation time and waiting times at the
    fog node linked to queuing. The authors [89] put their attention on offloading
    duties from a device to fog and fog-to-fog. The ideal scheduling approach for
    the two queues, such as low and high priority in a fog node, is examined in this
    model. The stability of both queues is concurrently maintained while more offloaded
    tasks that are aware of deadlines may be finished. Two techniques comprise the
    recommended approach: The Lyapunov drift-plus-penalty method and fog computing
    collaboration are used to construct a priority-aware scheduling approach based
    on the fog nodes’ queue status. According to the simulation findings, with the
    same resource setup, this strategy may ensure that more tasks are finished within
    the allotted time limit. 2) Centralized Task Offloading Centralized task offloading
    is split into two groups: those that use a SDN and those that don’t. a: SDN-Based
    Task Offloading In this part, we investigate and evaluate fog offloading strategies
    based on SDN technology. Most of these techniques are developed for data offloading
    from IoT or mobile devices to fog. For an SDN-based fog computing system, a dynamic
    offloading service between fog nodes is suggested by [2]. Selecting the suitable
    offloading node and enabling the offloading path by providing an end-to-end bandwidth
    guarantee are the goals of using SDN technology. To choose an appropriate offloading
    node, the proposed method makes use of fog node information and real-time network
    status. Furthermore, a few network parameters may be used to ensure bandwidth
    throughout the offloading path and create an optimal end-to-end path selection
    route. Q-learning offloading choice allows the controller to choose appropriate
    actions depending on the reward function [29]. In this strategy, the controller
    may customize their incentive function based on the desired performance. Consequently,
    the suggested Q-learning-based offloading choice can estimate how good the current
    offloading will be in the future, resulting in remarkable overall system performance.
    Furthermore, the suggested solution is compatible with SDN architecture as the
    reinforcement learning-based decision-making process is on-demand, which allows
    the controller to construct a reward function depending on the required performance.
    By using an integer linear programing (ILP), [90] resolves the multi-hop task
    offloading issue. To solve the problem effectively, use a greedy heuristic-based
    approach since the viable set is non-convex. Latency, energy costs, multi-hop
    routes, and fluctuating network factors like link utilization and SDN rule capacity
    are all part of the greedy approach. The contribution 1) the best decision is
    to compute a work locally or remotely; 2) the best fog node selection; 3) the
    best offloading route selection. With fewer fog devices, the recommended technique
    can attain excellent performance. In [31], SDN approaches are used to optimize
    resource management and load balance across a network of Cloudlets. To balance
    the distribution of different tasks offloaded from mobile devices while optimizing
    resource utilization, it is handled as a mixed-integer linear programming (MILP)
    optimization model. Taking into account both communications and computation delay,
    available resources, and a task with a restricted deadline, the issue of a balanced
    distribution of incoming requests throughout the Cloudlet network is outlined.
    To emulate the recommended architecture, experiment with utilizing Mininet-WIFI
    and Floodlight as the SDN controller. The limitations of this method are the available
    resources and the demands of the consumers. Reference [11] created a blend offloading
    structure to improve the offloading choice selection process by selecting the
    optimal offload node and assuring the infeasible request’s needed deadline and
    the average processing cost of the fog node. It employs a mathematical approach
    known as Binary Linear Programming (BLP) to determine to offload destination fog.
    The fog node’s SDN controller will choose the optimal offload target fog by comparing
    the needed deadline of the infeasible request with the response time of each available
    parked and moving car. Reference [91] suggests a four-layer network paradigm based
    on SDN for the Industrial Internet of Things (IIoT). Depending on the requirements
    of different controllers, all possible computation offloading locations indirectly
    manage the production equipment to tasks at the closest power steering device.
    SDN controllers oversee data transmission routing, while lightweight containers
    such as Docker and Micro are utilized to offer computing. Reference [92] provide
    algorithm in fog system resource management to ensure each task’s specific service
    quality and optimize resource consumption by collaborating amongst fog computing
    nodes. Develop a common heterogeneous task download and resource method with Deep
    Recurrent Reinforcement Learning to optimize tasks within time restrictions. Depending
    on their buffer and resource state, the proposed method may offload their tasks
    into nearby nodes. Prevent unfairness in resource allocation slices with varied
    priorities, resulting in a higher average success rate. Which cloudlet should
    be utilized to offload a particular task from mobile devices is determined by
    [93] based on the load assessment of cloudlets in multi-cloudlet networks. Furthermore,
    SDN is used by this system to load balance between cloudlets in wireless mobile
    networks. Additionally, it suggests an admission control mechanism to limit the
    acceptance of task assignment requests made if there are more requests than the
    network can handle. Authors in [94] considered the multi-hop route and the impact
    of vehicle mobility while proposing a software-defined vehicle network offloading
    technique. It provided an ILP-based optimization problem for determining the ideal
    number of fog nodes for a given network in order to lower operating and capital
    costs. The dynamic offloading for soft real-time workloads in an SDN-based fog
    architecture is investigated in research [95]. Preliminary results have emphasized
    the impact of intra- and inter-fog cluster analysis on the expense of missing
    the deadline. Study [50] explores the offloading problem in IoV systems based
    on SDN and fog computing. It proposes an energy-aware dynamic offloading technique
    to extend the battery life of the IoV system and run more apps. The system model
    calculation and application transfer incur cost, and the heuristic searching optimization
    technique sometimes need assistance in order to find the best answer. However,
    testing on a real IoV edge network was not done in the experiment scenario. The
    Programming Protocol-independent Packet Processors(P4) framework allows for the
    direct execution of resource and system functions on the programmable data plane,
    including in the newly introduced P4. This functionality enables the shifting
    of specific tasks from the controller to specialized hardware, such as P4 switches.
    With P4, programmers can specify packet behavior in the data plane [13]. To optimize
    the efficiency of task-offloading solutions and reduce computational overhead
    and latency in IoT networks, [13] propose a P4-assisted task-offloading scheme
    for fog-based IoT networks. However, if the fog server has the necessary resources,
    the offloaded task from IoT device will be executed immediately; otherwise, the
    task will wait in the queue until those resources become available in the fog.
    As a result, the system becomes less effective, and task processing experiences
    slight delays. b: Centralized Task Offloading (Without SDN) Some research provides
    centralized architectures without using SDN. Authors in [96] provide Fogbus, a
    blockchain-based platform that integrates IoT, fog, edge, and cloud communications
    via user identification and data encryption. Duties are controlled by a fog called
    master fog, who distributes tasks to other fog nodes called workers. The mechanism
    chooses master fog and worker fog nodes at random. When confronted with enormous
    volumes of data and activities, system flexibility is reduced, and modifying and
    transmitting data from multiple nodes to identify the final processing node delays
    and system performance. This complex technique employs a rudimentary blockchain
    algorithm that the system administrator may activate or stop. As the blockchain
    is activated, the system latency rises immediately compared to the inactive state.
    Reference [97] provides a cost-effective compute offloading architecture for use
    in industrial networks. It works based on a fog federation in which a master fog
    controller manages the flow of traffic and data from IIoT sensors to the various
    fog nodes. Furthermore, it hired a policy-based reinforcement learning approach
    using a Q-learning algorithm and a controller-based device adaption strategy to
    regulate emergency-based service requests effectively and route them toward the
    fog devices along the shortest path. Reference [98] introduces a hierarchical
    paradigm for the IoT, fog, and the cloud. Distributed task execution may control
    global energy usage and enable highly scalable IoT applications. As a proof of
    concept, analyze the efficacy of a three-tier design by considering the processing
    needs of several IoT applications in medicine, multimedia, geolocation, and text.
    It evaluates three use cases employing real-world datasets: fog-only, cloud-only,
    and fog-cloud cooperative. SECTION V. Evaluation and Comparative Analysis The
    research about the offloading fog given in the offloading section were examined
    and compared in this part. Table 2 provides an overview of the studied algorithms,
    including the technique employed, the usage of SDN and the kind of protocol utilized,
    the metrics employed the type of simulator used, area of algorithm, and their
    notable features and constraints. As shown in the examination of the articles,
    the majority of the papers and algorithms are concerned with IoT to fog offloading,
    and a few methods have been described in the offloading section from one fog to
    another fog. TABLE 2 Summary of Task Offloading Algorithms Several things could
    be improved when looking at fog-to-fog algorithms utilizing SDN. Fog selection
    is a decision-making method with a high real-time processing requirement and is
    one of the main obstacles in the decision-making process and destination. On the
    other hand, reducing system efficiency by increasing the amount of fog and network
    traffic is a significant difficulty that most of these algorithm’s face. In addition,
    the network data plan could be more helpful in choosing the connection for offloading
    to the destination. Additionally, connection traffic and data plans must be appropriately
    considered when choosing a fog, which might increase the latency in data transmission
    to the target fog and cause the offloading process to halt and fail if the link
    fails. The following is a summary of the comparative evaluation and notable shortcomings
    in current approaches: A. Fog Offloading Algorithm Types Based on the reviewed
    research, we can categorize task offloading techniques as indicated in Figure
    4 fog computing employs a variety of task-offloading strategies. Machine learning
    uses data-driven judgements to adapt to changing situations, but it may need much
    training data and computing power. When well-modelled, mathematical optimization
    gives near-optimal solutions but is challenging and less adaptable. Heuristic
    approaches are simple and efficient, but they are not ideal. Blockchain-based
    offloading improves trust and decentralization while potentially adding overhead.
    The technique of choosing is determined by application requirements and resource
    availability while balancing flexibility, complexity, and trust factors. To summarize,
    fog computing task offloading strategies each have their own benefits and drawbacks
    that suit different application needs. To achieve a balance between flexibility
    and cost, the decision should take into account the unique demands of the application
    as well as the available resources. FIGURE 4. Task offloading algorithm types.
    Show All The combination of mathematical algorithms, AI algorithms, and blockchain
    technology with fog computing has resulted in varied and complex solutions for
    data and resource management. Each of these approaches has distinct advantages
    and constraints, making them crucial in the realm of fog computing. Mathematical
    techniques are often used in fog offloading for various purposes, such as task
    offloading, load balancing, energy optimization, and delay reduction. Their focused
    and precise approach offers practical answers for optimization difficulties, such
    as minimizing energy consumption and distributing computing workloads evenly.
    Nevertheless, they only sometimes provide the most favorable outcomes and may
    need significant processing resources since their effectiveness relies greatly
    on the particularities of the situation and the design of the algorithm. Although
    optimization and game theory based solutions are effective in some constrained
    contexts, matching-based techniques provide potential benefits due to their distributed
    nature and low computing cost methodology [82]. However, AI algorithms in fog
    computing are used for predictive analytics [97], dynamic decision-making [29],
    and adaptive resource management [92]. They possess exceptional flexibility and
    aptitude for learning, making them well-suited for dynamic and unexpected circumstances.
    The primary advantage of AI is its capacity to automate intricate decision-making
    procedures and predict forthcoming requirements. However, it also presents problems
    such as the need for extensive datasets, intricacy in training and implementing
    models, and sometimes, the opaqueness of decision-making processes. Blockchain
    technology [30], a recent addition to the field of fog computing, provides a clear
    benefit in terms of security and the preservation of data integrity. Blockchain
    guarantees a high degree of security by facilitating transparent and distributed
    transactions and communications inside fog networks, according to its distributed
    and tamper-evident characteristics. This capability is essential in remote computing
    systems, where maintaining the accuracy and reliability of data is of utmost importance.
    Nevertheless, blockchain faces a lot of constraints. Scalability problems arise,
    especially when dealing with higher transaction volumes, and the maintenance of
    a blockchain network needs significant resources. Furthermore, the process of
    incorporating blockchain into current systems has its own distinct set of difficulties.
    Ultimately, the selection of mathematical algorithms, AI, and blockchain in fog
    computing is determined by specific criteria such as security, flexibility, utilization
    of resources, and intricacy of the environment. Mathematical algorithms give precise
    and efficient solutions in certain situations, while AI brings flexibility and
    predictive capabilities. Additionally, blockchain ensures unmatched security and
    integrity in distributed systems. Frequently, using a hybrid strategy that capitalizes
    on the advantages of these varied technologies provides the most efficient answer
    in the complex realm of fog computing. Fog-to-fog offloading difficulties and
    challenges need a study and enhancement of route selection and decision selection
    algorithms and the successful use of SDN-based network characteristics. Due to
    the advancement of artificial intelligence and machine learning in multiple sectors,
    many of the approaches that have been seen have turned to employ machine learning,
    deep learning, or AI algorithms in fog computing algorithms. Although these algorithms
    have significantly improved predictions for fog offloading, employing them presents
    several difficulties owing to their high computational cost and the limited processing
    power in the network’s fog. Challenges like: Computing resources are plentiful
    for artificial intelligence, machine learning, and deep learning algorithms, while
    computing resources are scarce in fog. On the other hand, the amount of communication
    load and bandwidth required to transmit data between devices for fog calculations
    adds to the difficulty of fog calculations. B. Fog Computing Architecture The
    effects of centralized, distributed, and SDN techniques on fog computing algorithms
    differ. Algorithms can optimize task offloading in a centralized system with a
    global view of resources and network circumstances, resulting in theoretically
    optimum solutions but presenting a single point of failure and scalability difficulties.
    Distributed techniques disperse decision-making across fog nodes, depending on
    local data and cooperation, making them more robust but less globally optimum.
    SDN-based designs provide dynamic network management, improving algorithm flexibility
    and responsiveness to real-time network changes, but their efficacy depends on
    algorithm integration and network programming. Task offloading centralized and
    distributed schemes features comparison are shown in Table 3. As can be seen,
    centralized networks, particularly SDN, provide several benefits despite their
    limitations and low flexibility. Centralized management using controllers in the
    SDN network allows for more simple controlling and managing of the computing resources
    of various fogs in the network with high capabilities and low loads on fog nodes.
    TABLE 3 Task Offloading Networking Schemes Comparision In dynamic fog environments,
    where node availability, network circumstances, and workload vary, many of the
    current techniques may not be able to adapt properly. Inflexible strategies may
    not function as well as they could under changing circumstances, which might affect
    the system’s overall performance. Mitigating the negative impacts of a highly
    dynamic nature, such as the lack of fog device availability and end device mobility
    support, is an essential concern. SDN is a potential network architecture for
    fog computing because of its centralized, intelligent view and control of the
    network [95]. The following is an overview of the benefits and limitations of
    SDN architecture for fog offloading, including SDN protocols discussion: 1) SDN
    Advantages SDN enables the immediate acquisition of network state, allowing for
    real-time centralized network management based on current network status and user-defined
    rules. Furthermore, this results in advantages in optimizing network setups and
    enhancing network performance [99], which is crucial for fog networks to offload
    tasks immediately without delay. Configuration is crucial in network administration,
    particularly when incorporating new equipment into an established network. The
    difficulty stems from the diversity among network device manufacturers and their
    configuration interfaces, resulting in laborious and error-prone manual setup
    procedures. These errors need extensive troubleshooting efforts. SDN solves this
    problem by consolidating the control plane across different network devices, enabling
    centralized and automated setup via software control. This not only streamlines
    network administration but also allows for adaptive optimization depending on
    current network circumstances. The use of SDN in network configuration greatly
    affects fog computing networks by improving their capacity to quickly and easily
    manage and adjust fog devices to enable new applications and services. In light
    of the present network condition and demand, flow rules may be simply adjusted
    dynamically and optimally using SDN [100]. SDN significantly impacts mathematical
    algorithms [2], [11], [13], [20], [31], [50], [68], [90], [91], [95] by streamlining
    network resource management in fog computing, enhancing load balancing, task offloading,
    and latency optimization. The dynamic allocation of resources empowers these algorithms
    to optimize distribution based on real-time data and preset criteria. Additionally,
    SDN’s adaptability allows swift adjustments, bolstering algorithmic agility amidst
    network changes. In the realm of AI algorithms [20], [29], [69], [70], [92], SDN
    facilitates efficient data handling and routing crucial for decision-making processes.
    Its adaptability enables real-time resource optimization, augmenting AI system
    performance and scalability across diverse networks. Moreover, in blockchain integration
    [30], SDN aligns with the secure, distributed nature of transactions, enhancing
    network security and optimizing resource allocation. It also fosters improved
    interoperability among fog computing nodes, facilitating seamless integration
    of blockchain systems. 2) SDN Challenges Previous research has encountered many
    obstacles with conventional SDN-based handover, which leads to increased latency
    and packet losses because of centralized control. The increase in mobility cars
    puts a load on the main SDN controller, making it difficult to fulfill quality
    of service requirements and causing frequent handover problems. Further limiting
    their efficacy in high-mobility circumstances requires comprehensive simulation
    evaluations. In order to close this gap, article [10] presents a Vehicular ad-hoc
    networks (VANET) architecture that places changeover procedures at the edge of
    the network by merging SDN and fog computing technologies. This adaptable solution
    eases the load on core networks by decentralizing changeover management using
    zone SDN controllers and fog computing vehicles while meeting the needs of highly
    mobile and data-intensive services. Incorporating SDN into fog computing poses
    significant obstacles that need resolution. These tasks include guaranteeing the
    capacity to handle many fog devices and adaptability, improving security and privacy
    within a centralized control system, establishing compatibility across different
    technologies, and optimizing resource management to distribute the workload efficiently.
    Additionally, addressing the critical challenges of optimizing traffic flows while
    minimizing latency, enhancing the energy efficiency of SDN controllers and fog
    nodes, ensuring consistent Quality of Service and reliability in dynamic fog environments,
    and seamlessly integrating SDN into current network infrastructures is essential.
    The number of SDN controllers used in reviewed research is limited, so multi-controller
    scenario challenges need to be considered and discussed in massive networks. It
    is crucial to address these shortcomings to ensure the effective adoption of SDN
    in fog computing. This will need ongoing innovation and cooperation in the industry.
    3) SDN Protocols The OpenFlow [29], [50] protocol, which is well recognized in
    the field of Software-Defined Networking (SDN), provides extensive support and
    compatibility. However, it is limited in terms of flexibility because of its rigid
    architecture. Also it also has some security and scalability concerns. P4 [13],
    a more recent and adaptable protocol, enables the customization of packet processing.
    However, it is more complex and lacks widespread compatibility. In addition to
    these, other protocols such as NetConf and YANG provide network configuration
    management by providing structured data models and transactions. However, they
    may not possess the extensive programmability of P4 or the broad acceptance of
    OpenFlow. Each protocol fulfils distinct network needs, with OpenFlow being characterized
    by a higher level of standardization, P4 providing enhanced control capabilities,
    and NetConf or YANG concentrating on configuration management. The selection of
    either OpenFlow or P4 for fog offloading relies on the particular demands of the
    network. OpenFlow’s standardization and compatibility render it well-suited for
    contexts that priorities interoperability and stability. On the other hand, the
    ability of P4 to define packet processing behaviors is beneficial in situations
    that need customized and specialized data handling. Hence, if the task of offloading
    fog requires packet processing and flexibility that are highly specialized, P4
    would be the more suitable choice. However, for broader and standardized implementations,
    OpenFlow may be the preferred option. The particular needs and attributes of the
    fog computing environment will determine which SDN protocol is best for fog offloading.
    While Netconf is well-known for its simplicity and ease of use, making it a suitable
    match for easy network administration, OpenFlow is recognized for its fine-grained
    control and flexibility, making it excellent for dynamic and complicated network
    management. A network’s complexity, scalability, required functionality and accessible
    knowledge are among the variables that determine which SDN protocol is best. Other
    protocols, including BGP-SDN, ONOS, and Faucet each offer advantages and disadvantages.
    Depending on their particular requirements, certain fog computing architectures
    may even combine these protocols to handle different aspects of task offloading
    and network management. 4) SDN With Machine Learning The integration of SDN with
    Machine Learning may provide several advantages for Fog offloading. SDN offers
    a centralized perspective of the network, enabling the optimization of the decision-making
    process for selecting the most suitable Fog node for offloading. Machine learning
    may be used to create compute offloading strategies that enhance the efficiency
    and dependability of Fog computing. The advantages of integrating Software-Defined
    Networking (SDN) with Machine Learning (ML) for Fog offloading include enhanced
    utilization of storage and computing resources, improved performance metrics like
    latency, energy consumption, and Quality of Service, and the ability to dynamically
    allocate services based on objectives such as power consumption, security, and
    QoS constraints. Nevertheless, it is essential to take into account the drawbacks
    as well. The system’s complexity may result in elevated maintenance expenses.
    Acquiring substantial data to train machine learning models may be a significant
    obstacle. The confidentiality and integrity of the data being processed by the
    Fog nodes may be compromised. To address these challenges, employing lightweight
    methodologies such as federated learning might be effective in fog offloading.
    C. Metrics for Validation During fog offloading, route selection, latency, and
    energy metrics are crucial, yet not all research studies encompass these elements
    based on Table 2. Factors like problem complexity, limited resources, or research
    focus contribute to this omission. Some studies prioritize energy efficiency [50],
    [73], [83], [98], overlooking metrics like latency or route selection, while majority
    concentrate solely on delay optimization, disregarding energy concerns or routes.
    Some researchers highlighted path selection like [2], [69], [74], [85], [97].
    Due to experimental constraints or study scope, researchers sometimes explore
    only a subset of these metrics. However, disregarding any of these measures can
    significantly impact system performance. Neglecting energy efficiency may deplete
    IoT and Fog device battery life while overlooking latency can degrade user experience
    and system performance. Ignoring route selection may lead to poor data transfer
    and heightened network congestion. Therefore, considering all criteria remains
    paramount for optimal system performance in constructing an efficient fog offloading
    system. In prior frameworks, time issues are only partially explored, and the
    computing power of resources needs to be better used. The computational strain
    increases the overall delay time, deployment cost, and energy consumption of IoT
    devices or resource-enriched fog nodes, requiring an efficient task management
    strategy to address this issue. Real-time processing is hampered by the high latency
    and system overload caused by the AI techniques utilized in these systems. D.
    Simulation Limitation Most current articles have undergone testing and evaluation
    in simulated contexts, with only methods [13], [14], [50] applied in actual or
    near-real situations. Furthermore, various kinds of simulators have been employed,
    each with its own merits and drawbacks. The wide range of simulators and the intricate
    nature of different network topologies, particularly SDN, will significantly challenge
    the effectiveness of the suggested algorithms in the real world. While simulations
    carried out using simulators such as iFogSim and Mininet and Matlab, provide insightful
    results, real-world validation is essential. From simulation to real-world application,
    there might be unanticipated difficulties or new factors to take into account.
    Although there are many theoretical ideas, there may not be as much opportunity
    for these techniques’ practical application or real-world assessment. Real-world
    implementation and thorough testing under various conditions are essential to
    verify its efficacy and functionality of proposed algorithms. E. Dataset A primary
    obstacle is the need for uniformity in the datasets used for modelling and executing
    fog-offloading studies and publications. This makes it challenging to generalize
    the data and compare the outcomes of various investigations [101]. More real-world
    data is needed to support the simulation conclusions. This may result in exaggerated
    expectations and erroneous forecasts [101]. Additionally, the particular use case
    and the surrounding environment significantly impact fog computing systems’ performance.
    As a result, it’s critical to carefully choose the simulation tools and datasets
    suitable for the particular use case [102]. The majority of studies use randomized
    data or fail to identify the application as data and tasks that are delegated
    to other fog nodes. Nevertheless, a limited number of researches, such as [14],
    have used real datasets. Consequently, the outcomes of most of experiments may
    not be applicable to addressing real-world applications that need low latency
    or real-time execution. The absence of appropriate datasets and a simulation environment
    that accurately reflects the intricate nature of the fog space is a significant
    challenge. F. Scalability and Throughput As the number of nodes in the network
    increases, the system’s efficiency is significantly diminished. The issue of managing
    massive networks of fog will provide a significant obstacle to the system. In
    the technique described in reference [2], the maximum number of fogs is limited
    to 16, and only a single SDN controller is used. Just 5 fogs used in [29], [90]
    and in real testbed fog node limited to 2 fog in [50], 6 fogs in [13]. Other algorithms
    have also been presented with more fogs, but only a limited number of fogs have
    been tried in small spaces and networks. It has been observed that as the number
    of fogs increases, there is a considerable loss in efficiency. The use of more
    fog nodes in the experiments resulted in a reduction in the overall waiting time
    for tasks [13]. Delay or waiting time is one of the main metrics of related researches
    that is in front of the efficiency of systems, so should be considered. Scalability
    is a significant challenge, particularly in systems with many devices and fogs.
    High overhead approaches may need help scaling efficiently, affecting their viability
    in real-world applications. This can be true of communication overhead, compute
    overhead, or resource allocation. It is crucial to thoroughly evaluate the scalability
    of the suggested algorithms, particularly in practical smart city implementations,
    where the quantity of devices and fog resources may be much greater. G. Security
    and Privacy Maintaining data security and privacy throughout offloading procedures
    is an important yet difficult component. Many current techniques may disregard
    strong security safeguards, putting sensitive data at risk. The [12] merges fog
    computing, SDN, and blockchain to create a security framework for IoT in agriculture.
    By combining blockchain technology with SDN controllers, this design emphasizes
    safe IoT communication. This increases security and dependability, particularly
    for devices with limited resources. If the fog nodes in smart healthcare systems
    lack robust security protocols, there is a risk that malevolent users may be able
    to steal users’ private data. In addition, fog computing must address emerging
    issues, like resource limited IoT devices and insider assaults. In order to address
    these difficulties, [7] suggests implementing a secure authentication system for
    fog nodes in intelligent healthcare based on SDN. The system involves the implementation
    of an authentication algorithm in the SDN gateway to verify the credibility of
    the fog node. The IoT devices only need to transmit their privacy and functional
    properties to the SDN gateway to reduce the computational burden on the IoT devices.
    In the context of fog offloading, where the network environment is constantly
    changing, it is crucial to prioritize secure communication, authentication, and
    authorization. Nonetheless, these aspects have been overlooked in the majority
    of previous research and have not been taken into account. Software-Defined Networking
    (SDN) enables more effective management of these issues via its centralized control
    structure. The centralized method enables the application of security rules and
    network settings in a dynamic and flexible manner, capable of adjusting to evolving
    network circumstances and threats. SDN facilitates enhanced network visibility,
    a critical factor in detecting and addressing security breaches and anomalies.
    SDN facilitates the implementation of encryption, firewalls, and intrusion detection
    systems by unifying control. Conversely, in the absence of SDN, maintaining security
    in fog offloading settings necessitates the use of decentralized methods. This
    involves the implementation of distributed firewalls and intrusion detection systems
    at several network nodes. Effective communication in such situations depends significantly
    on effective peer-to-peer authentication techniques and resilient encryption mechanisms.
    Periodic updates and manual adjustments are essential to align security rules
    with the changing network environment. This technique requires more coordination
    among various network components and may exhibit less adaptability in rapidly
    evolving circumstances as compared to SDN-enabled systems. However, it enables
    a decentralized approach to security, which might be advantageous in situations
    where centralized control is impractical. A complete security architecture that
    includes secure communication, dynamic authentication, strong authorization, network
    segmentation, monitoring, blockchain integration, frequent updates, and user education
    is required due to the changing fog offloading scenario. Every aspect plays a
    vital role in strengthening the fog environment while adjusting to its constantly
    changing circumstance. H. Other Chalenges As indicated in Table 2, most current
    studies do not incorporate cloud offloading in their simulations and implementations.
    This omission can lead to delays in many scenarios due to the absence of a comprehensive
    and accurate integration of cloud services. If the cost and delay associated with
    cloud offloading are less than those of using other fog nodes, the efficiency
    of such algorithms in evaluating cloud offloading remains unaddressed. Consequently,
    when tasks are only offloaded to other fog nodes instead of the cloud, this may
    result in increased delays and costs, leading to reduced system efficiency. Due
    to the dynamic nature of the fog environment, it comprises many fogs with distinct
    memory capacities and processing capabilities. Conversely, the ongoing tasks vary
    in size and have varying deadlines. The intelligent organization of these tasks
    is a challenge faced by the majority of systems and algorithms since it aims to
    maximize the efficiency and capacity used by the fog computing infrastructure.
    For instance, in a scenario where there are three distinct fogs with varying available
    capacities and three different sizes of tasks (small, medium, and large), the
    optimal approach would involve transferring larger tasks to a fog with higher
    capacity and medium tasks to a fog with a proper capacity, smaller tasks to a
    fog with a sufficient capacity. Suppose a fog with more computational capacity
    is allocated to a minor task for any reason like it first come. In that case,
    the computational capacity of other fogs may not be sufficient for the enormous
    task, resulting in a potential delay in completing the task owing to the absence
    of a suitable fog with enough capacity. While several algorithms for resource
    and task management merely include these factors, managing resources and tasks
    concurrently to optimize task offloading efficiency and load balancing is still
    a significant and unavoidable difficulty in large-scale systems and real-time
    tasks that are ignored in most researches. One potential option to address this
    difficulty and enhance fog systems load balancing is integrating SDN with machine
    learning techniques. SDN may get the latest information on forthcoming tasks and
    fog resources. Machine learning can then use the knowledge stored in SDN to forecast
    future events and tasks and choose the most appropriate fog resource for offloading.
    Most previous studies assumed that the task size and fog capacity were the same.
    However, instead of using actual tasks, they have used randomly generated data,
    which fails to accurately depict the present state of the fog network in terms
    of task transmission, task processing, and real-time response. Addressing these
    gaps highlights the need for more flexible and comprehensive offloading approaches
    in the fog computing realm. Fog offloading solutions must improve with strategies
    that balance energy efficiency, scalability, security, flexibility, and latency
    in dynamic settings in a way that considers real-world implementation circumstances.
    SECTION VI. Discussion When a fog is overwhelmed, tasks should be transferred
    to another fog since it cannot process them (known as fog-to-fog offloading).
    In real-time computing, the process of determining and choosing the optimal destination
    node with adequate processing capacity in the quickest possible time is critical.
    Furthermore, most models disregard heterogeneity in computer infrastructure. In
    most present algorithms, when a fog gets overloaded, it asks that the central
    server introduce the destination node for offloading. Before determining which
    node to deploy, the central server evaluates and compares the available nodes.
    It takes a long time to request the central server, perform the decision algorithm,
    respond to the initial node, and ultimately upload data to the destination node.
    Also, choosing the optimum method to convey data from the main fog to the target
    fog is difficult since the selected path may be delayed due to traffic congestion.
    Because of traffic congestion on a particular route, another fog node with an
    acceptable and sufficient bandwidth for data transmission may be used. The issues
    in fog-to-fog offloading include making a judgment about picking fog with adequate
    resources in the shortest period and choosing a suitable way to transmit data.
    In older frameworks, time issues are explored from a limited perspective, and
    computing resources could be used more effectively. Implementing an efficient
    task management strategy is required to address this issue since computational
    strain increases the overall delay time, deployment costs, and energy consumption
    of IoT devices or resource-enriched fog nodes. Real-time processing is hampered
    by the AI algorithms utilized in these techniques, which also introduce significant
    delay and overload into the system. When looking into fog-to-fog algorithms utilizing
    SDN, many things could be improved. Fog selection is one of the main obstacles
    in the decision-making process and destination because it requires a decision-making
    algorithm that is time consuming and high cost in real-time processing. On the
    other hand, increasing the amount of network traffic and fog reduces system efficiency,
    which is a significant difficulty faced by the majority of these algorithms. The
    network data plan is not believed to successfully choose the connection for offloading
    to the destination. Additionally, connection traffic and data plans should be
    adequately taken into account when choosing a fog, which might cause data transmission
    to the target fog to be delayed. If the link fails, the offloading process will
    also halt and fail. A summary of the methods used in task offloading schemes is
    provided in TABLE 4. Fog-to-fog offloading concerns and difficulties need a study
    and enhancement of decision selection and route selection algorithms with appropriate
    use of SDN-based networks’ capabilities. To expedite and enhance the fog offloading
    algorithms, it effectively employs the characteristics and capabilities of SDN
    networks, and artificial intelligence is crucial. Due to the advancement of artificial
    intelligence and machine learning in multiple sectors, many of the diverse fog
    offloading techniques that have been seen have turned to employing AI. These algorithms
    present several difficulties owing to their high computational cost and the limited
    computing resources available in the network for fog, even though they have been
    highly successful in improving estimates for fog and clouds. Challenges like:
    While computational resources are scarce in fog, they are ample for computing
    machine learning, deep learning, and artificial intelligence algorithms. Contrastingly,
    the amount of bandwidth and communication burden required to transmit data between
    devices for offloading decisions makes fog offloading more challenging. TABLE
    4 Summary of Methodology Used in Task Offloading Schemes The term “link prediction-based”
    refers to a technique for maximizing traffic offloading that is based on link
    prediction. The link prediction-based strategy prioritizes traffic offloading
    by selecting relevant seed nodes for efficient data transmission while keeping
    quality of service (QoS) in mind. To optimize overall performance, it is vital
    to establish a balance between traffic dumping and minimizing time delay [103].
    Link prediction methods can assist in determining the optimum link and node to
    offload. In prior studies of resource management that can be addressed as future
    research, heterogeneity or homogeneity of fog nodes is an essential factor that
    keeps the same for different fogs. Another issue for future task management studies
    is partial or whole task offloading. The algorithms should divide and distribute
    tasks efficiently based on task size and priority. Depending on the fog processing
    constraints and task size, each task may offload partially or fully. Aside from
    time and delay, energy consumption and algorithm computation cost are essential
    metrics for fog offloading techniques that are often overlooked in many suggested
    algorithms and should be considered in future studies. While SDN has many benefits,
    it also has certain drawbacks. Latency remains an issue since faraway fog nodes
    or data centers introduce inevitable delays. The complexity of SDN deployment,
    possible security issues from centralized management, and increased network overhead
    may impede adoption. Interoperability concerns might develop, especially in heterogeneous
    fog computing environments, and the initial expense of specialized hardware and
    software may dissuade some organizations from using SDN for fog offloading. SDN’s
    applicability must be determined by carefully examining individual use cases and
    needs. Fog computing simulation has a number of drawbacks, such as issues with
    model accuracy, scalability, the lack of real-time elements, overhead, abstraction,
    and dependence on behavioral assumptions. It may be difficult to effectively simulate
    the dynamic nature of fog computing with constantly changing workloads and network
    circumstances. Further impediments include incomplete network models, problems
    with validation and verification, and low predictive power. Large-scale and resource-intensive
    simulations may also be difficult to execute due to resource limitations. Although
    simulations provide insightful information, they should be utilized with caution,
    and the findings should be interpreted considering these limitations. Real-world
    testing and simulation combined may lead to a more comprehensive knowledge of
    fog computing systems. SECTION VII. Conclusion and Future Work Most of the examined
    related fog offloading algorithms do not take a holistic approach to resource
    management, task management, and task offloading in the same system, instead focusing
    on one or two of these three critical components. Lake of this viewpoint will
    encounter several obstacles in implementing these algorithms in real-world complicated
    settings with various types of tasks and diverse fogs hardware and software with
    changing resources simultaneously. As a result, fog offloading systems need further
    development to be highly adaptable to IoT’s diverse and extensive real-time task
    response. SDN provides various advantages for fog offloading in computer systems.
    It enables network flexibility by enabling dynamic and programmable configurations
    to react to changing workloads. Centralized control streamlines decision-making
    for task offloading, optimizing routing, and enhancing service quality. SDN is
    a crucial tool for practical fog computing since it improves traffic optimization
    and scales to handle the rising number of IoT devices and fog nodes. SDN can manage
    the fog network effectively. However, its centralized and unique architecture
    does increase the possibility of initial implementation expenses. Machine learning
    may be helpful for fog processing if it transfers little data across the network
    while using far fewer computing resources. Machine learning may determine the
    decision-making process in choosing the connection link for data transmission
    and the fog destinations for offload. Selecting an efficient machine learning
    algorithm that decreases the computational burden on the network with its few
    connections and computation resource will be a problem solver. Therefore, future
    studies aim to speed up and enhance the fog-to-fog algorithm by efficiently using
    the capabilities and characteristics of SDN networks and artificial intelligence.
    Furthermore, the implementation of additional SDN controllers and Fog networks
    on a wider scale, together with conducting rigorous testing in real-world scenarios
    and networks, is viable. likewise, exploring the integration of SDN networks with
    both centralized and decentralized networks outside the realm of SDN may serve
    as a viable approach to accommodate and merge novel and more expansive networks
    and smart city challenges. ACKNOWLEDGMENT Any options, finding, and conclusion
    or recommendation expressed in this material are those of the author(s) and do
    not necessarily reflect the views of the United States Air Force. Authors Figures
    References Keywords Metrics More Like This Software-Defined Networking for Internet
    of Things: A Survey IEEE Internet of Things Journal Published: 2017 A Software-Defined-Networking-Enabled
    Approach for Edge-Cloud Computing in the Internet of Things IEEE Network Published:
    2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Access
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Fog Offloading and Task Management in IoT-Fog-Cloud Environment: Review
    of Algorithms, Networks, and SDN Application'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Roy S.
  - Panda D.
  - Kim B.G.
  - Bairagi P.
  - Mondal T.
  - Arosh S.
  - Sinha S.
  - De D.
  - Wang Y.
  - Skala K.
  - Davidovic D.
  citation_count: '0'
  description: Dew computing, a new version of the computing paradigm appeared along
    with cloud, edge, and fog computing. Dew computing is a distributed computing
    framework that is deliberated as an augmentation in the cloud computing schema.
    Researchers and academic practitioners have explored the concept of dew computing
    since its germination. In dew computing, users can perform full system functionality
    without depending on Internet availability. Information will be warehoused on
    the local storage of the user’s device, and when the Internet connection is present,
    harmonization will be accomplished to synchronize the transmitted information
    on cloud-dependent applications. There have been voluminous implementations of
    dew computing in prevailing usages, although research achieved concerning dew
    computing is not as much as in erstwhile distributed computing spheres. They have
    even tried to integrate computing into several existing and sustainable applications,
    such as the Internet of Things, smart Healthcare, Indoor navigation, agriculture,
    and numerous human-centric paradigms. The key objective of dew computing is to
    enhance the efficiency and reduce the cost of personal IoT devices which further
    augment the productivity and scalability of any distributed computing network.
    In this chapter, we first briefly focus on unfolding the concept of dew computing.
    We illustrate a set of real-time case studies, such as the cache computing framework
    for dew devices, the reduced Internet dependency-induced decision-making processes,
    the crises, the humanitarian Internet of Music Things, and so on, where the flow
    of information should be abundant despite having issues with constant digital
    network connectivity. We would focus on providing a detailed literature survey
    of dew computing architecture, applications, tools, and technologies that might
    assist in delivering ICT-based sustainable Internet of Things applications. This
    chapter additionally provides a deep insight into upcoming tools and technologies
    that can be integrated with the conventional dew computing architecture for obtaining
    more efficiency in Internet-dependent distributed networks.
  doi: 10.1007/978-981-99-4590-0_1
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Dew Computing pp 3–39Cite as Home
    Dew Computing Chapter DewMetrics: Demystification of the Dew Computing in Sustainable
    Internet of Things Samarjit Roy , Debadrita Panda, Byung-Gyu Kim, Palash Bairagi,
    Tamal Mondal, Sirshendu Arosh, Suprabhat Sinha, Debashis De, Yingwei Wang, Karolj
    Skala & Davor Davidovic  Chapter First Online: 03 September 2023 145 Accesses
    Part of the book series: Internet of Things ((ITTCC)) Abstract Dew computing,
    a new version of the computing paradigm appeared along with cloud, edge, and fog
    computing. Dew computing is a distributed computing framework that is deliberated
    as an augmentation in the cloud computing schema. Researchers and academic practitioners
    have explored the concept of dew computing since its germination. In dew computing,
    users can perform full system functionality without depending on Internet availability.
    Information will be warehoused on the local storage of the user’s device, and
    when the Internet connection is present, harmonization will be accomplished to
    synchronize the transmitted information on cloud-dependent applications. There
    have been voluminous implementations of dew computing in prevailing usages, although
    research achieved concerning dew computing is not as much as in erstwhile distributed
    computing spheres. They have even tried to integrate computing into several existing
    and sustainable applications, such as the Internet of Things, smart Healthcare,
    Indoor navigation, agriculture, and numerous human-centric paradigms. The key
    objective of dew computing is to enhance the efficiency and reduce the cost of
    personal IoT devices which further augment the productivity and scalability of
    any distributed computing network. In this chapter, we first briefly focus on
    unfolding the concept of dew computing. We illustrate a set of real-time case
    studies, such as the cache computing framework for dew devices, the reduced Internet
    dependency-induced decision-making processes, the crises, the humanitarian Internet
    of Music Things, and so on, where the flow of information should be abundant despite
    having issues with constant digital network connectivity. We would focus on providing
    a detailed literature survey of dew computing architecture, applications, tools,
    and technologies that might assist in delivering ICT-based sustainable Internet
    of Things applications. This chapter additionally provides a deep insight into
    upcoming tools and technologies that can be integrated with the conventional dew
    computing architecture for obtaining more efficiency in Internet-dependent distributed
    networks. Access provided by University of Nebraska-Lincoln. Download chapter
    PDF 1 Introduction The personalization aspect is indispensable for the engrossment
    of the users in any computing genus. Dew computing is an emerging paradigm that
    inherits a flexible and super hybrid methodology to afford personal information
    to users’ self-regulating Internetwork connectivity [1, 2]. Dew computing encompasses
    a set of innovative design attributes in terms of hardware and software prototypes
    that includes the dew computer, dew server, dew site, dew database, dew domain
    name system, dew domain name redirection, Software-as-a-Dew Product, Infrastructure-as-a-Dew
    service and super-hybrid-peer-to-peer network [3, 4]. The foremost indication
    behind dew computing is to minimize the dependency on obtainable Internetwork
    backhaul, thus reducing network traffic, indirect overall power consumption of
    the network system as well as data dependency over cloud-fog-edge services [4,
    5]. Dew computing provides augmentations of real-time personalized services to
    users employing instantaneous web data that is surf-ready. Further, transparency
    and lose coupling with the Internetwork configuration are envisioned [4]. Most
    people refer to modern mobile and wireless ubiquitous solutions as the Internet
    of Things applications. The encroachments of the technology and establishment
    of cloud-based systems emerge the idea of a connected world over the Internet
    based on distributed processing frameworks [5, 6]. We illustrate in this contribution
    the dew computing architectural approach for sustainable IoT solutions and give
    an organizational outline of the dew server and its connections with IoT devices
    in the overall cloud-based solutions. Dew servers act as another computing layer
    in the cloud-based architecture for IoT solutions [7, 8], and we are going to
    demonstrate its specific goals and requirements. This is compared to fog computing
    and cloudlet solutions with an overview of the overall computing trends [8, 9].
    The dew servers are analyzed from architectural and organizational aspects as
    devices that collect, process, and offload streaming data from the IoT sensors
    and devices, besides the communication with higher level servers in the cloud
    [10, 11]. The dew computing concept is on the edge of the Internet network means
    that the analyzed devices and systems will work only as a part of a general common
    integrated system, such as in the case of cyber-physical systems and various devices
    that act as an Internet of connected Things [5, 6]. The dew computing implementation
    in cyber-physical systems allows autonomous devices and smart systems, that can
    collaborate and exchange information with the environment, still, be independent
    of other external systems, or perform in a connected more complex cyber-physical
    system of systems [5]. The Internet of Things is a promising paradigm that integrates
    additionally a plethora of heterogeneous computational devices, incorporating
    the crowd, frameworks, additional system elements, and infrastructure [12]. Information
    sensing, modeling, retrieval, and distribution perform an emerging role in the
    Internet of Things network [13]. Dew computing is a challenging research issue,
    which needs to demonstrate its impact on the sensor data in the domain of parallel
    and distributed computing [14]. The crowdsourcing paradigms are efficient to collect
    and analyze billions of information efficiently with a diminutive cost. In this
    promising paradigm, participated sensing devices sense information from the environment;
    transmit the sensor data to associated edge and fog computing devices through
    a dew repository, and eventually, the cloud data center stores the processed data
    for providing aggregated information and relevant services to the end-users [10].
    Technological innovations have brought revolutionary modifications in terms of
    information storage and its accessibility both in subjective and business-related
    domains. The Internet facility helps everybody to fetch their information requirements
    without any location, or timeframe constraints. There are fundamentally three
    subdomains, i.e., cloud, edge, and fog computational paradigms that exist in brain-computer
    interfaces. Information can be stored and transmitted whenever required from the
    cloud data center. These Internet-enabled features untangle the optimum usage
    of physical IoT devices. Along with the immense benefits in the context of contemporary
    digital transformations, cloud data servers, and data centers may suffer from
    certain issues in terms of constricted bandwidth, latency, and cost [15]. 1.1
    Motivations We depict that the cloud, edge, and fog computing paradigms flop principally
    to convey the Internet-free computing prototypes [2, 3], near-optimal scalable
    explanations, and reliable service concerns [14, 16]. To avoid these restraints
    in the conservative cloud, fog, and edge computing archetypes, the integrated
    or disseminated information storage is desirable to specify copious facilities
    to those who are availing the services, where the expedients will be within the
    Internet-dependent zone may be active or inactive genre [7, 10]. Hence, in the
    progressive mobile edge computing framework [11, 13, 15], the authors projected
    an emerging computational and session-based data repository platform, titled dew
    computing [4, 7]. The dew takes care of the existing peripherals in a collective
    network, although the surroundings are somehow Internet dependent [2, 3]. By adopting
    dew computing, diverged set of services, for example, distributed networks are
    strictly dependent on locations, facilities dependent on information dissemination,
    network latency, and cyber-physical combined interfaces, which are mostly decentralized
    and aid energy-efficient protocols [5, 8,9,10]. The projected dew-induced sustainable
    IoT paradigm also sets provisions in smart information sensing and confined data
    analytics [10, 11]. The incorporation of information sensing arrangements and
    widespread computing Intra-network-based apparatus occasioned the sustainable
    Internet of Things (IoT) advancement [10]. The sustainable IoT devices and paradigms
    are assiduous which specify voluminous applications and put together massive data
    volumes [12]. We can claim that dew computing is not a surrogate paradigm for
    depicting influences on the sustainable IoT, rather this newly emerged computing
    schema is an expanded augmentation over the conventional schemas of information
    processing and system evaluations. 1.2 Chapter Contributions The significant contributions
    of DewMetrics are mentioned in the following: (a) We depict a systematized study
    on the potential Dew computing framework aiming toward sustainable IoT applications.
    (b) We attempt to focus on unfolding the concept of dew computing by illustrating
    the background infrastructures, system architectures, and a set of potential application
    areas where the minimized Internet-dependent schemas are significant enough. (c)
    We discuss the agglomerative real-time case studies, such as the cache computing
    framework for the dew devices, the reduced Internet dependency-induced decision-making
    processes, the crises, and the humanitarian Internet of Music Things. (d) This
    chapter provides a deep insight into upcoming tools and technologies which can
    be incorporated with the traditional dew computing archetype to acquire supplementary
    efficiency in the Internet-dependent distributed prototypes. 1.3 Chapter Organization
    We organize the remaining DewMetrics chapter as follows: Sect. 2 presents the
    potential state-of-the-art on dew computing architectures, systems, and applications.
    We illustrate the summarized outline of dew computing in Sect. 3. We demonstrate
    a Dew Computing-induced prototype in Dealing with Crisis Situations in Sect. 4
    along with the crisis management through the dew-cloud architecture. We explain
    a procedural schema in the context of reduced Internet-dependency-aware consumer
    decision-making procedures in Sect. 5. Dew computing-inspired Computational finance
    outline is presented in Sect. 6. We additionally propose a systematic summary
    to define Dew Computing paradigms for Quantum Machine Learning and Quantum Cryptography
    in Sect. 7. We append the influence of Dew computing in the congregating paradigms
    of Computational musicology and sustainable Internet of Things in Sect. 8. We
    discuss several topics of interest in Sect. 9 which have significant applicability
    in the dew-driven sustainable Internet of Things paradigms. Eventually, we conclude
    the chapter with the concluding remarks in Sect. 10. 2 Related Works As we have
    highlighted Dew Computing is relatively a new post-cloud computing paradigm that
    was introduced in 2015. While the conventional cloud computing framework utilizes
    centralized servers for providing numerous services, dew computing utilizes on-premises
    computational devices to provide decentralized, contemporary cloud-friendly, and
    collaborative services to the end-users. Researchers have illustrated a set of
    dew-induced system architectures for providing distributed and collaborative services
    and application domains. In the paper [1], the authors have demonstrated the concept
    of newly emerged dew computing, the significant dew computing paradigms, and a
    set of future research challenges. Researchers projected dew computing as the
    ubiquitous and permeating computational framework to enable secretive networks
    to depict processed sensor data orchestration [2, 3]. Working principles, methodologies,
    large application paradigms, and a set of future research scopes had also been
    outlined in [2, 4]. Taxonomical representation has been depicted in the dew computing
    context that can be a significant component for the dew-cloud-induced future research
    direction [2, 3, 16, 17]. Authors have projected three diverged schemas where
    the future IoT applications may proceed for real-time data analytics [3], such
    as the multi-operations, cloud-centered IoT information processing, and contextual
    dew computing framework [6, 9, 16, 17]. Researchers have also depicted that service
    models, such as SaaS and SaaP can be associated with the dew-based framework [7].
    Key advantages and limitations had additionally been outlined. Moreover, in [12]
    a schematic demonstration of web surfing has been presented when the Internet
    connectivity is lost or inactive which is a challenging real-time application
    scenario of dew computing. In [8], the preliminary demonstration of hierarchical
    connexions has been framed among the conventional computational artifacts, such
    as the cloud, fog, and dew, where they have proposed that the dew computing layer
    can be set up as the ground-level tier of edge, fog, and cloud computing hierarchy.
    In [14] Information privacy-related concern has been represented in the accessible
    dew-cloud design. A cloud computing-inspired multi-agent scenario has been executed
    for postulating healthcare services using neural networks where the custom-made
    web resource has been acquired to shrink the access to large data volume to be
    processed through the cloud [8]. An illustration of the dew computing paradigm
    for cyber-physical systems has been introduced in [5] that encompasses autonomous
    systems for collaboration and exchanging system information. In [18], a dew-induced
    trace-driven validated framework has been projected to quicken resource management.
    The researchers have framed an efficient resource allocation paradigm to assign
    time-astute tasks by the appropriate allotment of Virtual Machines [16, 17]. Moreover,
    they have anticipated a comprehensive task distribution order among cloud-dew-edge-fog
    computation archives by evaluating performance time, transmission and service
    latency, and network usage. Authors proposed a paradigm in [19], titled, DC-Health,
    an emerging dew computing-enabled sustainable IoT healthcare solution for decisions
    with offline and ultra-low latency. The projected endeavor incorporates several
    healthcare peripherals and is provisioned in user-specific domains even when Internet
    connectivity is not active [20]. In the recent research contributions [21], the
    researchers have presented profound insight into machine learning-inspired diverge
    archetypes for detecting intrusion in edge-induced IoT networks. Paper [22] depicted
    the query optimization on graph database in a dew-cloud environment along with
    the performance metrics in terms of memory usage and execution time. Articles
    [23, 24] illustrate a set of future research challenges and projected solutions
    in the domains of next-generation IoT-driven fog computing and analytics. In [25],
    the researchers have proposed to allocate tasks in Dew computing paradigms using
    an artificial intelligent agent, named, Proximal Policy Optimization that acquires
    tasks in the simulated Dew ecosystem. The hierarchical artifact of cloud-fog-dew
    has been presented in [26] to overwhelm the restrictions of cloud computing in
    the real-time application environment, such as latency and resource management.
    They have verified the projected model using Non-dominated Sorting Genetic Algorithm
    II for analyzing the system scalability and a Mixed Integer Non-Linear Programming
    model for scheduling the real-time applications to lessen Internet data traffic
    and power dissipation. [27] demonstrates an archetype, titled as MedGini, which
    generates effective utilization of IoT and cloud-dew framework for monitoring
    a sustainable healthcare paradigm. They have used Wireless sensor nodes to monitor
    the dynamic bio-signals, the Gini index, and Shannon entropy for ensuring intelligent
    information synchronization in the cloud along with the evaluations of the cost
    and power consumption of the system. Mental health monitoring schema has been
    represented in [28] which was powered by a Lightweight Convolutional Neural Network.
    Demonstrations on the attack framework and required security characteristics for
    the dew computing paradigm have been presented in [29]. The authors have illustrated
    client–server security schemes and identified two specific criteria such as security
    point and key agreement protocols. The authors of the [30] have addressed the
    security issues, a reciprocated authentication framework for dew computing, which
    certifies authorized and secured session formation deprived of the necessity of
    a reliable server. Authors have implemented dew computing in cyber-physical systems
    that tolerate core appliances and smart peripherals which involved in information
    communication in the surroundings [31]. Their projected study aims at the demonstration
    of architecture to apply cyber-physical system-induced dew computing for setting
    up new characteristics and peripheral services and compared with additionally
    comparable system architectures. The chapter [32] illustrates an AI-induced self-monitoring
    potential healthcare application in edge and dew computing. He elaborated a use-case
    schema for serving as an AI-based cardiologist for the end-user expending a smart
    device and an electrocardiogram sensor along with the future challenges, advantages,
    and limitations of the proposed paradigm. A precise review of the blockchain implementations
    in cyber security perception and energy information protections of smart grids
    has been illustrated in [33] with the depiction of the key security issues of
    smart grid environments with big data and blockchain. In paper [34], a content-based
    Dew-Cloud-inspired framework has been modeled for enabling a hierarchical federated
    learning approach and to provide a higher level of data privacy with significant
    availability of Internet of Medical Things critical scenarios. Authors have depicted
    a blockchain and dew computing-inspired converged framework for the smart city
    application with the evaluations of performance metrics of the proposed model
    [35]. The researchers in [36] have highlighted the lacking of Saurabh et al.’s
    strategy in the context of forward security and user anonymity and introduced
    an authenticated key agreement (AKA) protocol, titled e-SMDAS. Researchers have
    stated that there are numerous solutions offered to enhance system performance
    in Cloud healthcare computing domains, such as Edge, Fog, Mist, and Dew computing
    [37]. The proposed article studied Fog computing schema, its benefits, and qualitative
    system architecture. Authors [38] presented an emerging distributed edge framework
    pointing to analyzing and storing the Internet of Things [39] and multimedia information
    in modern application scenarios. A systematized case study on healthcare cyber-physical
    systems has been illustrated along with the characteristics, the task of diverged
    technologies, and the implementation of cyber-physical medication Paradigms [40].
    Researchers have discussed a dew-induced and blockchain-inspired Internet of Things,
    termed BCoT, that shows the convergence phenomena in the reformation of Industry
    5.0 along with some typical future research challenges of industrial IoT applications
    [41]. In [42], the contribution illustrates a comprehensive study to realize scalable
    Blockchain storage systems for dealing with the ambiguity among the redundancy
    and decentralization characteristics, based on scalable Blockchain storage systems
    (SMBSS). 3 Dew Computing: The Infrastructure Outline With the increase of end-users
    and readily available computing devices such as mobile, portable laptops, tablets,
    etc., dew computing has become a very useful technique to balance the load sharing
    between the end-user and the cloud. Most of the current services such as mobile
    apps, google documents, presentations, GitHub, and YouTube videos are on the cloud
    and users need steady Internet connections to access these services which might
    increase the load over the Internet which in turn leads to network congestion
    and the need for more bandwidth. However, there are many places where data and
    service availability, network latency, and throughput quality are limited and
    restricted [43]. Regions affected by natural calamities or disasters might face
    Internet loss and loss of other dedicated connectivity like GSM, PSN, etc. for
    a prolonged duration [44]. Dew computing architecture can be an alternative in
    certain situations where establishing direct communication to the cloud is improbable.
    By the definition, Dew computing depends on two basic entities: Independence and
    collaboration. Independence relates to the mutually exclusive service to every
    user. Collaboration indicates synchronization to local and remote data. This computing
    includes six fundamental features Rule-based Data Collection, Synchronization,
    Scalability, Re-origination, Transparency, and Any Time Any How Accessibility.
    The model includes predefined policies to save end-users’ data to its database
    which is addressed in Rule-based Data Collection. Synchronization deals with the
    organization of local and distributed data with integrity. The data stored needs
    to be minimum taking the mobile users into account and that is addressed by scalability.
    The data loss policy is managed by Re-origination. Dew transparency deals with
    data replication and distribution. Lastly and most importantly, the service should
    be available to everyone with or without the Internet which is tackled by Any
    Time Any How Accessibility. These methods will decrease the dependency on the
    cloud as well as reduce the load over the Internet connectivity. As of now, there
    are seven service models available in the literature [4, 5]. Infrastructure-as-dew
    (IAD) [7] demands that the end-user is supported by cloud services either by Dew
    virtual machines or by saving the data and setting the service from the local
    device to the cloud. The advantage of such a system is that data and devices will
    be completely independent of each other. If the device is damaged, another new
    device can take the place of the old device and the user just needs to log in
    to its account where all possible data can be accessed. Nowadays many mobile companies
    are providing such services. Web in Dew (WiD) [12] is a dew computing category
    where end-user hardware contains a fraction of duplicated or modified world wide
    web depending on their frequent usage or important service category. Since it
    is available locally, without an Internet connection also, the information can
    be browsed as per capacity. Since this is the exact copy of the original one,
    it satisfies the collaborative property too. Software in Dew (SiD) [45] is a dew
    computing category where the end-user owns a certain piece of software in his/her
    local devices. Additional information or portions of the application can be acquired
    as per requirement and further downloaded or real-time data transfer-based communications
    also can be possible. The best examples are the iPhone app store and google play
    store. For certain applications, a set of information is available offline (saved
    maps, train time table or standard non-dynamic fare charts of buses, trains, etc.),
    while the app goes online, additional activities can be done (e.g., downloading
    the further portion of the maps, know the current running status of trains, book
    tickets). Platform in Dew (PiD) [46] is a dew computing category where development
    and operational software are installed in the end user’s hardware; the setting
    and application data are dynamically synchronized as per available connection.
    GitHub qualifies for such a service. Storage in Dew (STiD) [47] is a dew computing
    category where the stored data in end-user hardware is duplicated in the cloud
    service and get updated automatically. A common existing STiD service is Dropbox.
    The files/folders in Dropbox are available to users at any time with or without
    the Internet. Hence, it satisfies the independence feature. Moreover, these files/folders
    are automatically synchronized with cloud services when the Internet is available
    so that it satisfies the collaboration property. Database in Dew (DBiD) [48] is
    a dew computing category where a local database is kept which is a replication
    of the original cloud database. The local database can be synchronized on-roll,
    periodically, or dependent on an Internet connection. As discussed before, it
    follows both the properties of Dew computing. Data in Dew (DiD) [17] is a dew
    computing category where data such as email, messaging, calendaring, contact management,
    and scheduling are kept locally and for personal usage, and with the availability
    of the Internet, those are synchronized in the cloud with global sharing. The
    summary of the Dew service models has been depicted in Table 1. Table 1 Summarized
    representation of the essential dew computing services Full size table Dew computing
    is distinguished by its minimal reliance on the Internet, extreme user control
    flexibility, and proximity to the end-user. Dew computing attempts to provide
    a variety of services, such as (1) densely distributed service, (2) awareness
    of one''s location, (3) support for heterogeneity, (4) reduction of network-service
    latency, (5) facilitation of any time, anywhere access, and (6) quality of service
    that uses little energy. Infinite applications can benefit from its faultless
    security services, including smart retail, e-healthcare, real-time data analytics,
    localized industrial automation, and smart sensing and actuation (Fig. 1). Fig.
    1 Representation of the dew-cloud integration infrastructure Full size image With
    this knowledge, the importance of dew computing in distressed areas can be apprehended
    easily. Dew computing can be helpful for those end-users dealing with the absence
    or limitation of Internet connectivity. Now, the question lies in how the dew
    computing services, models, and architectures can be found resourceful in dealing
    with crisis response situations. That is, how the offline and online services
    of Dew computing can be utilized simultaneously in IoT devices and applications
    for effective data flow to retrieve real-time crisis information. In a crisis,
    it might be possible that (a) the Internet connectivity gets disrupted in the
    affected regions due to loss of communication infrastructures or (b) the connectivity
    might present in some small pockets. In such circumstances, the Dew computing
    infrastructure should be helpful in storing, processing, and analyzing the locally
    generated data in offline mode and sending the information periodically whenever
    Internet connectivity is available to the users’ devices. 4 Crisis Environments
    and Significance of Data Flow for Response Acquisition, analysis, and processing
    of the large volume of raw data germinated from various data generation platforms,
    i.e., Web applications, Online Social Networks [49, 50] like Twitter, WhatsApp,
    Facebook, etc., SMS generated in GSM services and real-time testbeds and applications
    (portable devices and applications used for establishing communication in opportunistic
    environments) for extraction of comprehensive information remain a considerable
    challenge. With the advent of the enormous amount of raw data generated from these
    data sources, different sectors (E-services, Business, Agriculture, Disaster Management,
    Health, Education, etc.) are currently focusing on data mining steps for extracting
    comprehensive knowledge from the data. From the “Crisis Management” viewpoint,
    one of the prime goals is to perform effective crisis response and recovery which
    solely relies upon real-time analysis and processing of situational data and proper
    dissemination of information acquired from data. The crisis management operation
    also involves the participation of diverse stakeholders like Government Personnel,
    NGOs, Rapid Action Forces, etc. consuming data from heterogeneous sources for
    real-time situation analysis and resource management. Therefore, the overall information
    and communication technology (ICT) plays a critical role in coordination among
    the stakeholders through a constructive flow of information [51]. Any ICT-based
    crisis response can be characterized in two ways (also depicted in Fig. 2): (a)
    Handling the data flow through deploying the hybrid Ad Hoc communication infrastructure
    with the help of low-cost portable devices (Smartphones, Single Board Computers,
    UAVs, etc.) and protocol stacks [52, 53] when the existing communication services
    like GSM, Internet, Satellite, etc. are limited in use and (b) Utilization of
    data received through news reports, press releases, social media posts (Facebook,
    Twitter, WhatsApp, etc.) through the Internet, emergency calls, etc. when the
    existing communication persists into crisis zones or regions [54, 55]. These diverse
    data sources contribute to real-time damage and require assessment for obtaining
    effectual crisis retaliation and recuperation. Fig. 2 Framework of data-driven
    ICT-based crisis management Full size image From the above study, it can be comprehended
    that data dissemination sources can be multimodal and subject to the status of
    conventional network infrastructure in any crisis response situation. For developing
    overall ICT-based services, equivalent utilization of such data sources both for
    opportunistic and traditional network environments (i.e., GSM, Internet, etc.)
    is required. Depending upon the status of the crisis regions in terms of the Internet
    accessibility, both offline and online data sources should be made useful intermittently
    for real-time information extraction. Besides, through exploiting the data acquisition
    and mining steps, proper collection, the realization of association rules, and
    processing of such data are also essential for representation in a standard periodic
    report format that satisfies the interests regarding the “damage and needs assessment”
    of crisis management stakeholders. Moreover, such regular reports should also
    be made utilizable for designing real-time decision support tools for resource
    management. In Sect. 4.1, the utilization of the Dew computing component in crisis
    management has been discussed in greater detail. 4.1 Utilization of Dew Computing
    in Crisis Situations Dew computing models can be considered ubiquitous, pervasive,
    and convenient ready-to-go, plug-in facilitated computing that empowers personal
    hybrid peer-to-peer communication links. Such networks comprise low-cost scalable
    devices like PC, laptops, tablets, high-end Smartphones, and software protocol
    stacks. The prime objective of such an arrangement is to efficiently collect,
    process, store, and utilize raw data in the offline communication environment.
    Such communication can help to run data mining applications in a distributed manner
    without the intervention of stable Internet connectivity. In Fig. 3, the probable
    generic Dew architecture has been depicted that might be helpful in establishing
    post-crisis communication for information flow. The Dew cloud architecture has
    been used in several application domains like healthcare, cyber-physical systems,
    air quality monitoring, disaster management, and many more. Since Dew is a newborn
    baby, therefore, it’s yet to be applied to such real-life application domains
    mentioned above. Here, in this section, we specifically discuss the usage of Dew
    architecture for crisis mitigation. Fig. 3 Proposed dew computing-based communication
    architecture Full size image 4.2 Dew-Cloud Architecture for Crisis Management
    The intermittent integration of Dew clients like wireless sensor networks (WSN),
    Smartphones with applications, Single board computers, etc. with dedicated cloud
    architecture can be considered as an ICT-based data communication and mining tool
    which can further augment the crisis management services. In [56], a 3D-based
    cloud platform has been built utilizing the wireless censored data for an effective
    disaster response, i.e., optimal allocation of resources like (robots, drones,
    firefighters, etc.). The system’s purpose is to be used as a training environment
    for a rescue team to develop various rescue plans before they are applied in real
    emergency situations. The proposed cloud architecture combines 3D data streaming
    and sensor data collection to build an efficient network infrastructure that meets
    the strict network latency requirements for 3D mobile disaster applications. As
    compared to other existing systems, the proposed system is truly complete. In
    [57], proposed a scheme called MGRA for the allocation of computing nodes which
    takes into account different issues like the users’ mobility, inefficacy in resource
    allocation, and handling of failure situations. Experimentation was carried out
    using a Dew computing testbed comprising low-cost android devices connected with
    Wi-Fi Direct protocol. MGRA exhibited significant improvement in terms of time
    for application completion, amount of battery usage, and time required for recovering
    from failure as compared to present-day approaches. 4.3 Internet of Drone Things
    UAVs can play a major role in crisis management in terms of data collection, communication
    establishment, surveillance, etc. These few design frameworks have been proposed
    for crisis management through utilizing IOT devices and drones in the past literature.
    In [58], a distributed architecture of clusters of UAVs and IoT devices located
    on the ground is proposed which will monitor various disaster management applications
    and do real-time surveillance. Here, each UAV has been considered as a Dew client
    which involves the computation of real-time route prediction, object detection,
    obstacle avoidance, etc. The authors in [59] proposed a Dew cloud computing framework
    adjoined with the UAV networks known as “DewDrone” for providing opportunistic
    network connectivity for smart cities, rural sectors, etc. Also, a robust disaster
    management framework has been considered for the design of an IoT infrastructure
    with UAVs to generate an Internet of drone things for establishing communication
    between electricity service and smart city. 4.4 Dew Robotics Applications In [60],
    a cloud robotics application has been developed named Dew Robotics which allows
    the development of solutions that do not rely completely on the Cloud but whose
    computational capabilities are distributed among different devices. Dew Robotics
    exploits the intelligence of edge devices to change the operating conditions of
    our applications and adapt them to the system’s status. 5 Reducing the Dependency
    on Internetwork During Consumer Decision-Making From the inception to the latest,
    most frameworks related to consumer decision-making are fully interconnected and
    hugely interdependent. If any problem or frustration arises at any level, it propagates
    to all the consequent steps and finally hampers consumer decision-making. Especially
    when purchases are made on online platforms, consumers are the utmost sufferers.
    Internet connection loss or Internetwork-free orientation completely exhausts
    the information and decision-making flow of these frameworks. Although cloud computing
    comes with a huge opportunity for users, like universal access and scalability,
    some challenges are present, like all resources located remotely, far from the
    user''s machine and control. For this, if the Internet connection goes off, all
    access to those resources is completely lost. This is the thrust area where dew
    architecture intervenes [1]. In the cloud-dew architecture, installed websites
    are always available to the users irrespective of the Internet connection. When
    the Internet connection resumes, it starts synchronizing with the cloud server.
    In the beginning, dew computing was started as a web application [4]. Dew computing
    is characterized as a software organization paradigm for personal computers through
    this definition. Through this architecture, the local computers offer rich capability
    independent of the cloud services, and local computers collaborate with cloud
    services when the network connection resumes [5, 6]. Numerous frameworks related
    to consumer decision-making have been present in the literature since 1960. Most
    of these frameworks are also applicable to online consumer decision-making. One
    of the traditional online consumer decision-making frameworks has been presented
    in Fig. 4. Fig. 4 Traditional framework of consumer decision-making Full size
    image This traditional framework has been developed in [61]. There are a total
    of five steps present in the framework. Along with the steps, the moment and all
    the factors are also present. The moment is representing the thrust area of the
    step and the factors are broadly capturing the responsible criteria that are driving
    the concerned step. All the steps are interdependent and hugely dependent on the
    Internet while making online purchase decisions. For example, All the responsible
    factors for need recognition, i.e., information about new products, are mostly
    driven by online platforms, the social media can influence desired status creation.
    Next, if the information search online is satisfactory, the evaluation of alternatives
    will be complete. If the evaluation of the alternatives is not complete, the purchase
    experience will not reach a satisfactory level. Each step has a huge dependency
    on the network connection. Suppose the Internet connection fluctuates or becomes
    off frustrations of consumer increases. In such a situation, dew computing through
    reducing the interdependency on the Internet widens a huge scope for the users.
    Not only traditional or root decision-making models but also the latest or modified
    decision-making models have shown strong dependency on the Internet connection
    if the consumer purchases online. One of the latest another framework of consumer
    decision-making is McKinsey’s dynamic model of consumer decision [62]. Figure
    5 shows this framework. This framework also consists of highly interconnected
    steps and depends on the network connection. Just like the previous framework,
    the loss of an Internet connection creates frustrations. Here also, dew computing
    can be a solution through which customer loyalty can increase significantly. Fig.
    5 McKinsey’s dynamic model of the consumer decision journey Full size image 5.1
    Intervention of Dew Computing There are some other areas where dew computing can
    enhance performance such as: (a) The operational efficiency of retail businesses.
    (b) Improvised and customized consumer experiences. (c) Helps to determine consumer
    trends. (d) Provide hassle-free consumer services to those places/retail stores
    where Internetwork connection is not present/disrupting. In this regard, the advantage
    of dew computing can be utilized by integrating the decision-making models in
    the cloud-dew architecture. The interlinkage between cloud-dew architecture and
    consumer decision-making traditional funnel is presented in Fig. 6. Fig. 6 Demonstration
    of the projected dew-assisted consumer decision-making paradigm Full size image
    The Dew server is an essential part of the proposed framework. The server must
    be equipped with many adaptive technologies. The four main co-servers are Database,
    Mobile Information, Application, and POP/IMAP message protocols. There are some
    pre-installed websites present on the dew server. When a user searches some website
    contents, the dew server provides all the responses. Internet connection is not
    at all an issue. After searching, the dew server creates a dual copy of the visited
    website on the user’s local machine. This dual copy is called Dew Site. The dew
    scripts generally take care of the modifications of dew sites. The supervisor
    of the dew scripts is called the dew analyzer. The user can access the website
    or modify the contents through the dew server without any Internet presence. Once
    the Internet connection resumes, the dew server synchronizes with the cloud server.
    6 Dew in Computational Finance Theories The process of computational finance with
    the behavioral components causes complex problems. Agent-based computational finance
    can be defined as bottom-up approaches that use computer technology to simulate
    financial environments [63]. The decision-makers called agents, interact with
    individual rules of behavior and the trading mechanism [64]. In this model financial
    market is the interacting group of learning, heterogeneous and bounded-rational
    agents, including the financial market’s efficiency and rationality, Time series
    data remain a curious puzzle to understand and Financial data provides a wealth
    of price and volume of data that can be analyzed [65]. So, several models of the
    Artificial Finance Markets (AFM) have increased the discussion on the research
    literature and problems of the models. According to [14, 15] agent-based computational
    finance (ACF) can be classified into three most important components such as few-type
    model, a dynamic model under learning, and a many-type model and its emergence.
    In this model, agents usually follow two base strategies called technical analysis
    and fundamental analysis. In the few-type model, technical analysis follows a
    historical pattern and trend in data to predict future trends, in which the future
    replicates itself. Fundamental analysis is more complicated in determining the
    trends, as it determines the internal value of the securities. If the agent finds
    bias in its intrinsic value and the face value, then they find an opportunity
    to develop a path strategy [66]. A dynamic model under learning includes the generic
    algorithm methods [63], in which optimal risk and risk-free rate are considered
    to measure the overlapping of price in the exchange rate and its conversion to
    a single value [67]. The emergence and many-type model determines the expected
    value in a dynamic environment and confirms that the markets evolve into an efficient
    market which means price reflects on all available information. Based on the above
    context we can call an agent of the financial phenomenon a fundamental/rational
    agent, noise agent, and technical agent to simulate or integrate the financial
    data in the computational process. In other words, it is a method that guides
    the science of complexity based on multi-agent computer simulation technology
    with financial theories [68]. This model indicates how market forces influence
    and impact stock prices. 6.1 Relational Agent’s Decision Model In finance, we
    believe that “investors behave rationally and they are rational agents” most of
    the time [69, 70]. These rational agents’ are the new computational financial
    agent (CFA) that are evolving as autonomous interacting system agents. The trade
    network game model and the computational decision in finance are broad categories
    in three strategic decision functions [71]. (a) First, the agent’s decisions are
    heterogeneous in a character who interacts with other agents by initializing their
    initial data and the behavioral pattern, i.e., making a protocol to communicate
    with other traders, for trade partner search and matching or to trade interaction.
    (b) Second, the agent predicts and makes the association or relationship between
    the price and the number of different asset classes based on the information gathered,
    attributes, beliefs, and preferences of the agents. (c) Third, creating a new
    model of agent behavior and their interaction by gathering new information, determining
    trade behavior, update in investors’ preferences, and modifying the fitness level.
    6.2 Technical Agents The technical agent is usually called momentum traders, they
    use historical market data to forecast the trend of price. They buy (sell) when
    the price goes up (down). They follow a simplified way of trading in technical
    analysis and traders follow a hard behavior [63, 72]. In this model \\({T}_{i}\\)
    is assigned each momentum trade at the beginning of the simulated random walk
    model, following a normal distribution of the time-series data, which is subjected
    to the Markowitz portfolio model. This model also used in genetic networking programming
    (GNP) or the Genetic algorithm (GA) Model and the reinforcement algorithm model
    defined by [63]. 6.3 Noise Trader/Agent Noise agents are irrational investors
    who do not follow the common trading mechanism, technical analysis methods, and
    portfolio optimization methods. Such traders do not have access to inside information
    about the stock. Irrational behavior acts as noise traders with an assumption
    of expecting biases in stock trading [63, 73, 74]. The bias follows a normal distribution
    with a constant variance in their expected price. 6.4 Reinforcement Learning Reinforcement
    learning is the framework or deterministic approach in financial computation that
    tells the agent is the software portfolio manager performing trading actions in
    the financial market or in the financial environment [67]. These financial comprises
    all financial assets and the expectations of the participants toward them. It
    describes how an agent can learn an optimal action policy in a sequential decision
    process [66]. It creates a feedback loop between the learning system and the experience
    gained from the environment. It treats the time \\(t\\) period as: (a) The agent
    can take an action (\\({a}_{t}\\in A\\)). (b) The agent obtained a reward as (\\({r}_{t}\\in
    R\\)) for short-run. (c) The State becomes (\\({s}_{(t-1)}\\in S\\)). Starting
    from using online platforms for investing to capturing financial information through
    system programming or mathematical formula, everything is dependent on an Internet
    connection. Loss or disturbance of Internet connection hampers real-time data
    capturing, data fetching, and transactions and creates huge dissatisfaction among
    investors. It increases the risk factor among the investors, which may restrict
    them from investing. Under such circumstances, dew computing can be an excellent
    solution. The dew server resides in the investor’s local machine and consists
    of four components, such as (1) Dew Server, (2) Dew data capturing system, (3)
    Dew Client program, and (4) Dew Client Service Application. This server helps
    serve the requested service to the investors by correlating the local with the
    remote data. The dew server keeps track, based on the configuration of the investors
    or self-motivated, of all the visited websites (investment platforms) and creates
    a dual copy. One or multiple dew sites can be mapped with one dew server. At first,
    an investor login into a website as well as the dew site. The dew site does systematic
    rule-based data collection. Now if the Internet connection disrupts, the dew script
    analyzer starts and generates the required files. Next, an acknowledgment was
    sent to the dew client program and the updating of the master mapping table took
    place. With the resume of the Internet connection, the synchronization took place
    and any ordinary user can access the dew investor’s data in read mode. The following
    flowchart presents all the interconnections between the dew-cloud architecture
    and agent-based computational finance (ACF). Figure 7 depicts the interconnection
    paradigm in the dew-cloud-assisted ACF. Fig. 7 Interconnection between ACF and
    cloud-dew architecture Full size image 7 Dew Computing Paradigms for Quantum Machine
    Learning and Quantum Cryptography Machine learning and dew computing both are
    the most powerful emerging technologies in the present era. These technologies
    contribute a crucial role in the development of modern science and have advantages
    in their domains. But when they merge it produces a significant advantage. Machine
    learning algorithms are primarily used to learn and improve machines from experience.
    It provides the capability to the machines so that they can learn automatically
    without any human intervention or assistance and adjust actions according to necessity.
    There are different types of machine learning algorithms and many algorithms have
    already been developed. Most of these algorithms required a huge amount of storage
    to execute, which is a primary point of concern to most people. This is the place
    where dew computing walks in. It is the outsourcing technology, which enables
    us sufficient space to access applications and data remotely through Internet
    connectivity. Besides this, the technology has a tremendous advantage in terms
    of flexibility, availability, accessibility, cost-effectiveness, and so on [17,
    16]. These things make this field an obvious choice for every sector. With the
    advancement of time machine learning algorithms are becoming more powerful and
    complex and demanding better computational power than every previous day. Besides
    this, the security of the system is also facing challenges every day. Quantum
    technology offers a way that the introduction of this technology can address the
    aforementioned issues. 7.1 Quantum Machine Learning in Dew Computing Quantum machine
    learning [75] is such a domain that connects two fields machine learning and a
    new kind of computing device known as a Quantum Computer. This domain mainly focused
    to find the complex models in machine learning, which can’t be calculated using
    classical computing methods. It also concentrates to find a way to invent and
    apply quantum software that enables the machine learning faster than classical
    computers. Machine learning is mainly used to train machines using data. To minimize
    the training time CPUs and GPUs are used in the classical computing method. But
    if the data is too large it will take a huge time to train a machine. Here quantum
    machine learning comes forward. It can compute multiple states at the same time.
    Besides this quantum machine learning uses quantum data for operation and during
    the processing, it follows the laws of quantum physics. For this reason, it is
    found that quantum machine learning algorithms can exponentially reduce the training
    time of a machine. It also improves the learning capacity and efficiency of a
    machine [76]. It is found that quantum computing devices (Quantum Computers) can
    produce patterns that are very difficult for classical computing devices (Classical
    Computers). This is another reason which shows that machine learning based on
    quantum computing can outperform the domain based on classical computing. Quantum
    machine learning algorithms execute on quantum computing devices (Quantum Computers).
    This is the main challenge in this field. Because quantum computers are not fully
    developed yet. It is also not possible to set up these currently available quantum
    computers everywhere or at very frequent intervals. Because there are some serious
    challenges with these quantum computers. One of the major challenges is quantum
    computers need very low temperatures and isolation. Normal temperature and interaction
    with other particles cause the increment of the decoherence rate of computer qubits
    very fast. It will cause the loss of the quantum properties of computer qubits
    which will further be pointed toward the loss of data stored in the computer qubits.
    On the other side, rotations can affect the computer qubits, which can cause a
    crucial error in the circuit. Another challenge comes in this field with the development
    of algorithms. The development of quantum algorithms is a very critical task because,
    during the development, the developer has to be very concerned about the background
    physics. These challenges can impact quantum machine learning very deeply. Dew
    computing offers a partial solution to these challenges. Few quantum computers
    can be developed with high capacity and proper precaution. These few computers
    can be used from anywhere using Internet connectivity through dew computing technology.
    This emerging technology also offers proper resource management of accessible
    quantum computers. 7.2 Quantum Cryptography in Dew Computing The security of the
    domain of dew computing has become a point of concern with the advancement of
    technology. In the classical cryptographic method, the primary drawback is that
    there is no way to exchange the keys with full security. It is impossible to address
    whether the exchanged key has been revealed or not in the journey. An asymmetric
    key encryption method has been introduced to solve this problem but this method
    also has its drawback. It is a very slow method, and it can’t be applied to a
    large size of data. Besides this, the development of quantum technology directly
    challenges the modern cryptographic technique. Computes based on quantum technology
    can decrypt classical encryption in a limited time. For any classical modern computers,
    this time amount is impractical. The introduction of quantum technology in cryptography
    can address these problems [77, 78]. The no-cloning theorem is the fundamental
    concept of the quantum cryptographic technique. According to this theorem, quantum
    states can’t be copied. Since quantum states are used in the quantum cryptographic
    technique so, as per the no-cloning theorem they can’t be intercepted during transmission.
    If anyone tries to intercept information, it will be detected, and the signal
    will be destroyed. Quantum cryptography is not a new technique as a whole, it
    doesn’t develop from scratch. The working principle of this cryptographic technique
    is similar to the classical asymmetric cryptographic system. The only difference
    is that a quantum Cryptographic system uses the properties of quantum physics
    for the transmission of key. This method is termed Quantum Key Distribution (QKD).
    7.3 Quantum Key Distribution (QKD) Quantum Key Distribution (QKD) is the central
    technique of quantum cryptography. This technique is used to generate and share
    random keys between the sender and receiver. There are different types of schemes
    for QKD, i.e., BB84 [79], Silberhorn, Decoy state, KMB09, E91, etc. Among these
    BB84 is the most commonly discussed QKD protocol scheme. In this protocol, binary
    information is encoded on photons using their different properties (i.e., polarization,
    spin, etc.) and sent these encoded photons to the receiver. Let Alice and Bob
    agree to share their secret key using QKD (BB84). At first, Alice choose any random
    bit as her secret key and two bases (rectilinear basis [+] and diagonal basis
    [x] as mentioned in Table 2) to encode the secret key. Then she encodes the secret
    key on photons by the preparation of the polarization state of it using the considered
    basis randomly. After that, she sent the encoded photons to Bob using quantum
    channels. As Bob does not know the sequence of encoding basis, after receiving
    the encoded photons he measures these photons using any random basis. After completing
    the measurement, Bob contacts Alice by any classical channel and discusses the
    sequence of his basis of measurement. Now Alice compares her basis sequence with
    Bob’s basis sequence and discards the mismatch basis. After removing the mismatched
    basis, the matched basis’s information formed the communication secret key between
    Alice and Bob (Table 3). Table 2 Demonstration of quantum key-distribution indexes
    Full size table Table 3 Representation of quantum key-distributions Full size
    table According to the no-cloning theorem, quantum states can’t be copied. So
    if anyone tries to intercept the encoded photons between transmissions, then he
    has to measure these. As others (except Alice) don’t know the basis sequence of
    encoding photons, when he tries to measure these photons the information in the
    state will be destroyed. 7.4 Application of QKD in Dew Computing Kerberos [80,
    81] is a widely used secure authentication technique in cloud computing including
    dew. In this technique, the Key Distribution Center (KDC) plays a significant
    role to provide the secure key to the user. The user uses this secure key to access
    the cloud server safely. Applying QKD in KDC introduces a tremendous advancement
    of security in this technique over the classical approach. QKD can also be used
    in asymmetric cryptographic systems for different applications. 8 Dew Computing
    in Sustainable Internet of Music Things The usability of Information and Communications
    Technology in music education displays the signs of existence to provoke conventional
    music teaching and learning strategies. This projected contribution will assert
    the advancement of new conceptions of music teaching–learning, music composition,
    and reconstruction paradigms through the application’s congenital applications
    to the Information and Communication framework. The device-oriented music composition
    and reconstruction in the Internet-dominant era is usually participant-specific
    musical information recognition and analytical strategies which incorporates the
    devices, i.e., the mobile phones, sound sensor devices, and the Cloud-Dew-Edge-Fog
    (CDEF) peripherals. These smart devices intensify the succession of the Internet
    of Things (IoT), largely, the Internet of Everything (IoE), where they sense the
    information from the environment in a collective concern as end-users require.
    Data sensing through sensors, framing, information retrieval, and dispensation
    accomplish a significant benefaction on the IoT network. The projected contribution
    will analyze a set of fruitful music reconstruction and composition applications
    in the IoT context, which we titled the “Internet of Music Things (IoMT)”. The
    proposed framework will illustrate that the involved individuals who will have
    the information sensing devices, will be qualified for musical data sensing and
    composition tasks, which may be shareable for experience within the group and
    recoup the required information for advanced music analytics and reconstruction
    operations of common attentiveness. The Internet of Things is a propitious framework
    that amalgamates the plethora of diversified computational gadgets, assimilating
    the crowd, substructures, supplementary system ingredients, and organizational
    structures. 8.1 System Outline: Dew-Induced Internet of Music Things We demonstrate
    the system outline of the Dew-induced IoMT into two distinct subsections. The
    outline of the anticipated architecture is presented in subsection 8.1.1. We depict
    the modeling assumptions in the Sect. 8.1.2 of estimated dew-induced schema for
    efficient IoMT. 8.1.1 The System Architecture This subsection deals with a five-layered
    ordered dew-induced IoMT schema. Figure 8 consists of five assorted layers, (a)
    Data Sensing layer, (b) Dew computing layer, (c) Edge computing layer, (d) cloud
    computing layer, and (e) Application layer. Distinct layers of the projected and
    ordered framework are illustrated in the following: Fig. 8 Representation of the
    anticipated dew-induced sustainable internet of music things schema Full size
    image (a) Data Sensing Layer: The data sensing layer is the lowermost layer of
    the provided dew-induced IoMT archetype. This layer comprises numerous virtual
    segments that embrace the music sources and physical sound sensors. Sound sensing
    peripherals are capable to sense and accumulate the unprocessed and pre-processed
    musical data from the musical environments [15]. The data sensing layer also comprises
    the connected and active microcontrollers for communicating with the associated
    computing systems and additional microcontrollers to sense the information transmission.
    (b) Dew computing Layer: The dew computing layer accumulates the ordinary sound
    sources, physical peripherals, sensors, and connected microcontrollers. It involves
    the agglomerative and virtual dew clusters. Dew clusters comprise a minimum of
    three crucial components, such as the (i) dew server, which enables interactions
    with upper layered computing devices and sporadic synchronization of information;
    (ii) dew analyzer amasses the sensor information and explores local computations;
    (iii) dew storage stores pre-processed sensor data for Internet-independent settings
    [10]. (c) Edge computing Layer: Proposed system transmits the pre-processed sensor
    information to the immediate next layer from the dew layer when the Internet connectivity
    is ON. This layer is titled the edge computing layer. Modules of this layer are
    the decision-making edge instances, that consist of computing tools, storage,
    and edge-cloud communication gateways [10]. The available devices are proficient
    for information evaluations, processed information accumulation, and information
    transmission to the higher layer. It additionally contains the communication networks
    for interacting within themselves and/or among edge and cloud computing layers.
    (d) Cloud computing layer: The adjacent next to the edge layer in the projected
    architecture hierarchy in Fig. 8, the cloud computing layer encompasses data centers
    and essential services. This layer necessitates music resource managing and handling
    musical compositional activities for the level of data aggregation assignments.
    It comprises cloud resources dealing with the competencies of predetermination
    and authorized service excellence of edge computing implementations. (e) Application
    Layer: The uppermost layer in the proposed dew-music architecture approaches the
    processed musical presentations from the cloud data center. End-users in the application
    layer are efficient in assembling musical compositions, combinations, and reconstruction
    assignments as the audiences prefer. Eventually, the uppermost layer of the hierarchy
    grasps the user-requester performances that effects the dew-cloud-based musical
    information approachability to convey inventive and smart music arrangements of
    the music auditors and the composers as well. 8.1.2 System Assumptions for Dew-Driven
    IoMT Schema We are to depict numerous methodical assumptions centered on the real-time
    dew-cloud computing consequence. We denote the useful hypotheses over the projected
    scheme state-of-the-art in the following: (a) We categorize all peripherals and
    nodes in the data sensing layer into two all-inclusive segments: the sources of
    music pieces and partaken in sound sensing equipment. (b) We assume the musical
    performances as the sound repository in our projected endeavor and a set of vocal
    and instrumental music enactments. We also undertake that all information demands
    pre-processing. (c) Sensing peripherals are smart gadgets and real-time sound
    sensors that appreciate optimal pre-processed and unprocessed information. We
    additionally assume that sensors are positioned in outright Geospatial locations.
    (d) In Dew peripherals assemble the sensor information as the restricted sources
    to evaluate the locale and when the Internet connectivity status is inactive.
    (e) Edge computing gadgets are disseminated in a tier within a distributed network
    to accomplish computational assignments based on the crowdsourcing policy. (f)
    Cloud server represents the accumulated music analyzer in which the information
    summarization and storage of managed information-allied undertakings are achieved.
    (g) The end-users in the application layer are authenticated in accessing information
    from the cloud data center. The users, music composers, and audience are capable
    to approach public data centers for music information retrieval, qualitative music
    composition, and reconstruction of the music pieces. 8.2 Connection Strategies
    for Scheming an Efficient Dew Computing Framework for IoMT As we discussed earlier,
    musical information is diffused to associated computational devices with the assistance
    of a cloud server. The networks can be overcrowded and integrated peripherals
    may be overburdened owing to viscous bottlenecks. To reduce, the transmission-related
    latency and to enhance the performance, information is scattered to the cloud
    server as well as the edge devices. Dew computing conglomerates the underlying
    perception of the cloud and edge computing, which feeds access to the cloud data,
    and sustains duplicates on the local repositories. This suggestive schema in the
    anticipated framework is essentially contingent upon diminishing the duration
    of data transmission, latency, system power dissipation, and energy depletion.
    We assume the projected system can be Quality of Service (QoS) and Quality of
    Experience (QoE), evaluating dual-fold aspects: (a) Reduce the response time of
    the system, lessen the information transportation time within intermediate computing
    nodes, and shrink system the service latency that can make a system energy-efficient;
    and (b) Minimize the intermediate gaps between the sensor devices to the active
    dew nodes, dew nodes to the adjacent edge, and integrated edge to the cloud data
    center, that may correspondingly expose toward developing an effective dew-induced
    IoMT framework. 9 Topics of Interest: Application Domains and Future Research
    Challenges of Dew Computing-Assisted Sustainable Internet of Things We illustrate
    numerous application domains of the Dew Computing in the Sustainable IoT perspectives
    in the following, although the projected dew computing paradigm can conceptually
    be depicted in the contexts of large-scale human-centric Internet of Things application
    domains. 9.1 The Dew-Assisted IoT in Computational Musicology The research in
    the context of computational musicology is typically an interdisciplinary research
    area where systematic analytics, information representation, and humanized creation
    interact. The technological advancements draw on and significantly contribute
    to our understanding, perceptions, and visions of the physics and psychophysics
    of sound. Computational Musicology is always an interdisciplinary or to some extent,
    a multidisciplinary domain for methodical music analysis, musical patterns identification,
    and humanized musical information retrieval which is a comprehensive amalgamation
    of Person Intelligence (PI), Artificial Intelligence (AI), typical programming
    languages, algorithms, representation learning; additionally, the psychology,
    music theory, acoustics, signal processing, multimedia information systems, engineering,
    physics, performance practice, library science, applied mathematics, statistics,
    and so forth. Systematized technology is perpetually confounding and altering
    the landscape of human beings’ musical experiences as music creators, participants,
    music listeners, and consumers. Music theorists, musicologists, vocal and instrumental
    performers, and music composers are habitually meeting with real-world challenges
    as musical compositions are largely dependent on human perceptions. Apart from
    the conventional methodologies to retrieve elementary musical components, we apply
    heuristic and representation learning approaches to recognize or extract the higher
    level musical features from symbolic musical information, intending to automate
    or expedite real-world musical tasks, in terms of music generation, composition,
    and substantial music reconstruction. In the remote and scattered musical performances
    concern, the dew-assisted IoMT framework can be significant enough to compose
    specific and smart musical compositions without much-reliant on Internetwork connectivity.
    Projected phenomena will additionally illustrate the major implications for the
    music teaching–learning and composition in the subordinate smart classroom with
    IoT, inclusive of the significance of rigorous proposition, crowd inclusion, paradigms
    of learning objectives, methodical and pervasive music learning, evaluation, and
    system integration. 9.2 Dew Computing in Sustainable Internet of Music Things
    In the dew-music computational paradigm, future endeavors can be involved in:
    (a) the illustration of participatory crowdsensing in CDEF framework (b) bandwidth
    allotment; (c) service and resource virtualization in Internet of Sounds; (d)
    Performance metrics in low-resource settings. 9.3 Sustainable and Humanized Internet
    of Music Things In the contexts of the humanistic-care inspired IoMT schema, we
    may highlight the following scopes for the further researches, as (a) Dew-driven
    music crowdsourcing architecture, and (b) modeling of dew-assisted humanized music
    information fusion. 9.4 Dew-Osmosis: Convergence of Dew and Osmotic Computing
    in Human-Centric IoT It is a promising Internet-independent technology, which
    requires demonstrating parallel and distributed computing over the heterogeneous
    network. The integration framework of dew and osmotic computing in the context
    of the Internet of Music Things (IoMT) can be illustrated for framing heterogeneous
    musical data migration within a dynamic and distributed infrastructure. This work
    aims to intellectualize, how audiences can be benefited from the osmotic computing-based
    dew-induced IoMT system analytics. The scope of the future research of the projected
    Dew-Osmosis computational paradigm may be (a) illustration of participatory and
    opportunistic crowdsensing and crowdsourcing perceptions, (b) energy-efficient
    dew-inspired osmotic computing paradigm, (c) performance visualization and virtualized
    service monitoring for IoT applications, (d) cluster computing in the context
    of heterogeneous and distributed systems, and (e) dew-osmotic convergence architecture
    for Industrial IoT (IIoT) applications. 9.5 Communication and Computational Intelligence
    in Dew-Assisted IoT Computational intelligence assessments, correctness, and meticulousness
    at distinct layers in IoT paradigms are verbalized by computational intelligence
    strategies, which are capable of data collection, the interconnection among the
    devices and Internet, data processing, intelligent analytics, and decision-making,
    exclusive of direct human interactions with the systems. 9.6 Cloud-Dew-Edge-Fog
    (CDEF) and Sustainable Internet of Musical Things: The Convergence The traditional
    cloud computing paradigm along with the extended performance-driven computational
    strategies such as the dew, edge, and fog computing frameworks provide the efficient
    and smart mechanisms of musical compositions in the domain of the (a) Remote musical
    performance control and organization, (b) Remote Recording environment, (c) Auto-tuning
    of the smart musical instruments and Remote Live Mixing, (d) Generative Music
    and Algorithmic Composition within the shared network. 9.7 Dew-Assisted Big Data
    Analytics and Industrial Automation The Network infrastructure in the age of Big
    data, Industry 4.0, sustainable IoT, and Artificial Intelligence enhance the restrictions
    of information availability, system scalability, strategic reliability, optimum
    bandwidth, and less latency. This stemmed from an emerging schema of cloud computing
    offering centralized information storage, efficient resource balancing, and software-based
    consequences promoted in the as-a-Service policy. Conversely, there are still
    a lot of QoS-aware use cases, such as sufficient information and service availability,
    network delay, jitter, and throughput requirements to be additionally addressed.
    Limited outcomes to these challenges are solved by the Fog and the Edge computing,
    offering computing and information closer to the end-user network peripherals.
    Although these conceptions do not optimally address the concerns of offline information
    availability and Internetwork latency. A hypothetical response to those challenges
    could be the conception of dew computing—a supplementary tier in the obtainable
    client–server framework, functioning on end-users devices to succeed at the optimum
    level of information synchronization among the data in the cloud and the local
    devices, that makes a system reliant in the typical Cloud-Fog-Edge schema in the
    context of network connectivity. Dew-assisted paradigm can address the efficient
    system modeling in the context of the industrial automation and big data analytics
    evaluated in the cloud server, with local accomplishment by lessening the network
    delay and affording offline information availability, specifying the significant
    data synchronization among the local and cloud databases. 9.8 Influence of Dew
    Computing on Human–Computer Interaction Human–Computer Interaction is the key
    finding procedure of interactions of human beings with computing systems, specifically,
    as it communicates the technological innovations. The User-centered design, UI,
    and UX are coalesced with the Human–Computer Interaction to afford the intuitive
    technology and outcome. Human–Computer Interaction analysts reflect on how to
    establish and adopt computing systems that can provide satisfactory products to
    human beings. Nowadays, when we are majorly dependent on the Internet, human-centric
    applications and outcomes should be offered to the end-users without much interruptions
    of the Internetwork, and hence, the expected outcome can be achieved shortly.
    In this scenario, the projected dew computing schema can play a significant role
    to provide services and to maintain the Quality of Experience. 9.9 Integration
    of Dew and Affective Computing Recently, affective computing has acquired admiration
    and has been harnessed extensively in numerous domains, including marketing, e-learning
    management, financial and economic behaviors, smart healthcare, assistive tools,
    and human–machine interface design. Artificial Intelligence plays a pivotal role
    in the context of designing affective computing schemas and is mainly utilized
    for decision-making systems. Advancements in artificial intelligence, CDEF, and
    IoT research have empowered researchers to articulate cost-efficient and robust
    tools for a diversity of application scenarios. Specifically, the arrival of the
    machine, deep, and representation learning strategies have crafted it feasible
    to implement proficient effective computing artifacts for potential healthcare,
    humanitarian, agricultural, and additional sustainable applications. 9.9.1 Dew-Assisted
    Sonification in Internet of Humanitarian Things Sonification refers to the utility
    of non-speech audio to put across information or perceptualized data. To date,
    the researchers have carried out a few findings on the applicability of the Internet
    of Things (IoT) paradigm to the context of interactive sonification. IoT has the
    promise of facilitating the emergence of emerging outlines of interactive sonification
    which are the outcome of the shared expertise of interactive sonification artifact
    by both the presenters performing gestures locally within the infrastructure and
    with the set of remote users. The dew-assisted interactive sonification in the
    IoT context may have a large impact on smart healthcare and the Internet of Medical
    Things. Researchers can additionally utilize the interactive sonification in the
    Internet of Behaviors, Internet of Sounds, and Internet of Music Things which
    can be remotely controlled and can be capable to sense the analyzing data based
    on the implementation requirements. 9.9.2 Dew-Inspired Tactile Internet of Things
    One of the foremost Tactile Internet applications is the sustainable Tactile Internet
    of Things (IoT) which enables human beings to control the desired systems remotely
    and construct a new-fangled generation of cyber-physical systems, with the significant
    assistance of haptic technologies. The future research challenges of the dew-inspired
    Tactile Internet of Things can be the (a) Remote Presence: The interactions of
    Human-Agent to Human-Agent in the contexts of virtual and augmented reality, (b)
    Telerobotics: the interactions from Human-Agent to the Working Robot, (c) Remote
    Robotics: The task flows from a Human-Agent to the Robot-Agent, (d) Extended Reality:
    A potential task transformation from the Human-Agent to the Virtual Agent. 9.9.3
    Cloud-Dew-Edge-Fog-Roof (CDEFR) Computing Strategies for Internet of Risky Things
    Along with the traditional computing paradigms, such as cloud, edge, and fog computing,
    new-age computing technologies like the dew and roof have been introduced to enhance
    the service providing schemas in IoT applications. If dew computing highlights
    (a) lessening the network latency, (b) affording offline data availability, and
    (c) specifying qualitative data synchronization between the local and cloud databases,
    simultaneously the roof computing emphasizes as an emerging federated computing
    and networking schema to operate the constrained tools in IoT which offers (i)
    connectivity, (ii) context assembling, (iii) data and service management, and
    (iv) majorly the issues of security and privacy. Conventional IoT conveys computerization
    and connectivity to billions of performing devices worldwide. We are concerning
    vehicles, drones, healthcare systems, smart homes, and smart cities. Although
    the major threats in these disciplines are attacks, the security on the Internet
    significantly relies on the security of Internet-assisted devices. By specifying
    visibility in real-time systems and at the granular level, the research challenges
    should be (a) to securely connect Internetworks the authorized “risky” IoT devices
    and (b) to recognize and retort to all vulnerability topics, which can cause when
    the unauthorized and “risky” devices for communicating through the cache-driven
    network. 10 Conclusions In this chapter, we have illustrated a personalized dew-cloud-based
    sustainable Internet of Things framework. The dew computing schema enables contextual
    collaboration between the local computing resources and the contemporary cloud
    infrastructures. The local analyzers stipulate the essential data transmission
    and analytics functionalities being independent of the integrated Internetwork
    when in offline mode, synchronize the processes automatically, and update the
    modifications performed during offline mode with the cloud when the Internet connectivity
    is restored. This chapter depicts a set of dew-supported diverged IoT and consumer
    behaviors-oriented paradigms with concepts, system architectures, and systematized
    service-oriented outlines. Additionally, we have discussed numerous application-oriented
    case studies and future research challenges in dew-assisted IoT perspectives.
    We have incorporated the dew computing schema into perception-driven information
    sensing, data synchronization, system scalability, and distributed information
    accessibility individualities. Likewise, the dew computing-enabled devices embrace
    the answerability of human–computer interactions that exist at the derived level
    in the projected dew-edge-cloud-based computing archetype. We can measure the
    dew-assisted system performance evaluations, in terms of the network latency,
    information transference, service, and transportation time delay, system and integrated
    information entropy, power dissipation, energy consumption, bandwidth allocation
    and service virtualization, jitter, analysis of QoS and QoE-aware system depiction,
    resource provisioning, secured communication outlining, scalability, and so forth.
    References Olabisi, D., Abubakar, S.K., Abdullahi, A.T.: Demystifying dew computing:
    concept, architecture and research opportunities. Int. J. Comput. Trends Technol.
    70, 39–43 (2022). https://doi.org/10.14445/22312803/IJCTT-V70I5P105 Ray, P.P.:
    An introduction to dew computing: definition, concept and implications. IEEE Access
    6, 723–737 (2018). https://doi.org/10.1109/ACCESS.2017.2775042 Ray, P.P.: Minimizing
    dependency on internetwork: is dew computing a solution? Trans. Emerg. Telecommun.
    Technol. (2018). https://doi.org/10.1002/ett.3496 Article   Google Scholar   Wang,
    Y.: Definition and categorization of dew computing. Open J. Cloud Comput. 3, 1–7
    (2016). urn:nbn:de:101:1-201705194546 Google Scholar   Gushev, M.: Dew computing
    architecture for cyber-physical systems and IoT. Internet Things (Elsevier) (2020).
    https://doi.org/10.1016/j.iot.2020.100186 Gusev, M.: A dew computing solution
    for IoT streaming devices. In: Information and Communication Technology, Electronics
    and Microelectronics (MIPRO) , pp. 387–392. IEEE (2017). https://doi.org/10.23919/mipro.2017.7973454
    Wang, Y., LeBlanc, D.: Integrating SaaS and SaaP with dew computing. In: IEEE
    International Conferences on Big Data and Cloud Computing (BDCloud), pp. 590–594
    (2016). https://doi.org/10.1109/bdcloud-socialcom-sustaincom.2016.92 Axak, N.,
    Rosinskiy, D., Barkovska, O., Novoseltsev, I.: Cloud-fog-dew architecture for
    personalized service-oriented systems. In: 9th International Conference on Dependable
    Systems, Services and Technologies (DESSERT), pp. 78–82. IEEE (2018). https://doi.org/10.1109/dessert.2018.8409103
    Frincu, M.: Architecting a hybrid cross layer dew-fog-cloud stack for future data-driven
    cyber-physical systems. In: Information and Communication Technology, Electronics
    and Microelectronics (MIPRO) , pp. 399–403. IEEE (2017). https://doi.org/10.23919/mipro.2017.7973456
    Roy, S., Sarkar, D., De, D.: DewMusic: crowdsourcing-based internet of music things
    in dew computing paradigm. J. Ambient. Intell. Humaniz. Comput. 12, 2103–2119
    (2021). https://doi.org/10.1007/s12652-020-02309-z Article   Google Scholar   Roy,
    S., Mukherjee, A., De, D.: IoHMT: a probabilistic event-sensitive music analytics
    framework for low resource internet of humanitarian musical things. Innov. Syst.
    Softw. Eng. 1–24,(2022). https://doi.org/10.1007/s11334-022-00499-7 Wang, Y.,
    Skala, K., Rindos, A., Gusev, M., Shuhui, Y., Yi, P.: Dew computing and transition
    of internet computing paradigms. ZTE Commun. 15(4), 30–37 (2019). https://doi.org/10.3969/j.issn.1673-5188.2017.04.004
    Roy, S., Sarkar, D., De, D.: Entropy-aware ambient IoT analytics on humanized
    music information fusion. J. Ambient Intell. Hum. Comput. 11(1), 151–171 (2020).
    https://doi.org/10.1007/s12652-019-01261-x Patel, H., Suthar, K.: A novel approach
    for securely processing information on dew sites (Dew computing) in collaboration
    with cloud computing: an approach toward latest research trends on Dew computing.
    In: Engineering (NUiCONE), pp. 1–6 (2017). https://doi.org/10.1109/nuicone.2017.8325622
    Roy, S., Sarkar, D., Hati, S., De, D.: Internet of music things: an edge computing
    paradigm for opportunistic crowdsensing. J. Supercomput. 74, 6069–6101 (2018).
    https://doi.org/10.1007/s11227-018-2511-6 Khan, F.A., Shaheen, S., Asif, M., Rahman,
    A.U., Imran, M., Rehman, S.U.: Towards reliable and trustful personal health record
    systems: a case of cloud-dew architecture based provenance framework. J. Ambient
    Intell. Hum. Comput. 10(10), 3795–3808 (2019). https://doi.org/10.1007/s12652-019-01292-4
    Khan, M.S.H., Roy, P., Khanam, F., Hera, F.H., Das, A.K.: An efficient resource
    allocation mechanism for time-sensitive data in dew computing. In: 2019 International
    Conference of Artificial Intelligence and Information Technology (ICAIIT) , pp.
    506–510. IEEE (2019). https://doi.org/10.1109/icaiit.2019.8834633 Hirsch, M.,
    Mateos, C., Rodriguez, J.M., Zunino, A.: DewSim: a trace-driven toolkit for simulating
    mobile device clusters in Dew computing environments. Softw. Pract. Exp. (Wiley)
    (2019). https://doi.org/10.1002/spe.2696 Medhi, K., Ahmed, N., Hussain, M.I.:
    Dew-based offline computing architecture for healthcare IoT. ICT Express 8(3),
    371–378 (2022). https://doi.org/10.1016/j.icte.2021.09.005 Article   Google Scholar   Ray,
    P.P., Dash, D., De, D.: Internet of things-based real-time model study on e-healthcare:
    device, message service and dew computing. Comput. Netw. (2018). https://doi.org/10.1016/j.comnet.2018.12.006
    Article   Google Scholar   Kaura, S., Bhardwaj, D.: A comprehensive review on
    intrusion detection in edge-based IoT using machine learning. Intell. Commun.
    Technol. Virtual Mob. Netw. 615–624,(2023). https://doi.org/10.1007/978-981-19-1844-5_48
    Alyas, T., Alzahrani, A., Alsaawy, Y., Alissa, K., Abbas, Q., Tabassum, N.: Query
    optimization framework for graph database in cloud dew environment. CMC-Comput.
    Mater. Contin. 74(1), 2317–2330 (2023). https://doi.org/10.32604/cmc.2023.032454
    Article   Google Scholar   Bhatia, J., Italiya, K., Jadeja, K., Kumhar, M., Chauhan,
    U., Tanwar, S., Bhavsar, M., Sharma, R., Manea, D.L., Verdes, M., Raboaca, M.S.:
    An overview of fog data analytics for IoT applications. Sensors 23(1), 199 (2023).
    https://doi.org/10.3390/s23010199 Article   Google Scholar   Roman, R., Lopez,
    J., Mambo, M.: Mobile edge computing, fog: a survey and analysis of security threats
    and challenges. Fut. Gen. Comput. Syst. 78, 680–698 (2018). https://doi.org/10.1016/j.future.2016.11.009
    Sanabria, P., Tapia, T.F., Toro Icarte, R., Neyem, A.: Solving task scheduling
    problems in Dew computing via deep reinforcement learning. Appl. Sci. 12(14),
    7137 (2022). https://doi.org/10.3390/app12147137 Article   Google Scholar   Javadzadeh,
    G., Rahmani, A.M., Kamarposhti, M.S.: Mathematical model for the scheduling of
    real-time applications in IoT using Dew computing. J. Supercomput. 78(5), 7464–7488
    (2022). https://doi.org/10.1007/s11227-021-04170-z Article   Google Scholar   Karmakar,
    A., Banerjee, P.S., De, D., Bandyopadhyay, S., Ghosh, P.: MedGini: Gini index
    based sustainable health monitoring system using dew computing. Med. Novel Technol.
    Dev. 100145,(2022). https://doi.org/10.1016/j.medntd.2022.100145 Podder, T., Bhattacharya,
    D., Majumdar, A.: Dew computing-inspired mental health monitoring system framework
    powered by a lightweight CNN. In: Disruptive Technologies for Big Data and Cloud
    Applications, pp. 309–319. Springer, Singapore (2022). https://doi.org/10.1007/978-981-19-2177-3_31
    Braeken, A.: Authenticated key agreement protocols for dew-assisted IoT systems.
    J. Supercomput. 1–21,(2022). https://doi.org/10.1007/s11227-022-04364-z Rana,
    S., Obaidat, M.S., Mishra, D., Mishra, A., Rao, Y.S.: Efficient design of an authenticated
    key agreement protocol for dew-assisted IoT systems. J. Supercomput. 78(3), 3696–3714
    (2022). https://doi.org/10.1007/s11227-021-04003-z Article   Google Scholar   Raza,
    H., Amjad, M., Muneer, S.: IoT based cyber-physical system in automobile devices
    with dew computing architecture. J. NCBAE 1(1) (2022) Google Scholar   Gusev,
    M.: AI cardiologist at the edge: a use case of a dew computing heart monitoring
    solution. In: Artificial Intelligence and Machine Learning for EDGE Computing,
    pp. 469–477. Academic Press (2022). https://doi.org/10.1016/B978-0-12-824054-0.00020-4
    Alorf, A.: Blockchain and Dew computing for secure energy trading in smart grids:
    a profit-aware approach. SSRN 4088660 Google Scholar   Singh, P., Gaba, G.S.,
    Kaur, A., Hedabou, M., Gurtov, A.: Dew-cloud-based hierarchical federated learning
    for intrusion detection in IoMT. IEEE J. Biomed. Health Inform. (2022). https://doi.org/10.1109/JBHI.2022.3186250
    Article   Google Scholar   Hati, S., De, D., Mukherjee, A.: DewBCity: blockchain
    network-based dew-cloud modeling for distributed and decentralized smart cities.
    J. Supercomput. 78(6), 8977–8997 (2022). https://doi.org/10.1007/s11227-021-04203-7
    Article   Google Scholar   Ma, Y., Ma, Y., Cheng, Q.: Cryptanalysis and enhancement
    of an authenticated key agreement protocol for dew-assisted IoT systems. Secur.
    Commun. Netw. 2022,(2022). https://doi.org/10.1155/2022/7125491 Kaur, N., Mittal,
    A., Kumar, A., Kumar, R.: Healthcare monitoring through fog computing: a survey.
    ECS Trans. 107(1), 7689 (2022). https://doi.org/10.1149/10701.7689ecst Article   Google
    Scholar   Debauche, O., Mahmoudi, S., Guttadauria, A.: A new edge computing architecture
    for IoT and multimedia data management. Information 13(2), 89 (2022). https://doi.org/10.3390/info13020089
    Article   Google Scholar   Lee, K., & Man, K.L.: Edge computing for internet of
    things. Electronics 11(1), 1239 (2022). https://doi.org/10.3390/electronics11081239
    Verma, R.: Smart city healthcare cyber physical system: characteristics, technologies
    and challenges. Wirel. Pers. Commun. 122(2), 1413–1433 (2022). https://doi.org/10.1007/s11277-021-08955-6
    Article   Google Scholar   De, D., Karmakar, A., Banerjee, P.S., Bhattacharyya,
    S., Rodrigues, J.J.: BCoT: introduction to blockchain-based internet of things
    for industry 5.0. In: Blockchain based internet of things, pp. 1–22. Springer,
    Singapore (2022). https://doi.org/10.1007/978-981-16-9260-4_1 Fan, X., Niu, B.,
    Liu, Z.: Scalable blockchain storage systems: research progress and models. Computing
    104(6), 1497–1524 (2022). https://doi.org/10.1007/s00607-022-01063-8 Article   Google
    Scholar   Maheshwari, S., Raychaudhuri, D., Seskar, I., Bronzino, F.: Scalability
    and performance evaluation of edge cloud systems for latency constrained applications.
    In: 2018 IEEE/ACM Symposium on Edge Computing (SEC), pp. 286–299. IEEE (2018).
    https://doi.org/10.1109/SEC.2018.00028 Jarwan, A., Sabbah, A., Ibnkahla, M., Issa,
    O.: LTE-based public safety networks: a survey. IEEE Commun. Surv. Tutor. 21(2),
    1165–1187 (2019). https://doi.org/10.1109/COMST.2019.2895658 Article   Google
    Scholar   Ahammad, I., Khan, M.A.R., Salehin, Z.U.: Software-defined dew, roof,
    fog and cloud (SD-DRFC) framework for IoT ecosystem: the journey, novel framework
    architecture, simulation, and use cases. SN Comput. Sci. 2, 1–51 (2021) Article   Google
    Scholar   Brezany, P., Ludescher, T., Feilhauer, T.: Cloud-dew computing support
    for automatic data analysis in life sciences. In: 2017 40th International Convention
    on Information and Communication Technology, Electronics and Microelectronics
    (MIPRO), pp. 365–370. IEEE. (2017). https://doi.org/10.23919/MIPRO.2017.7973450
    Suwansrikham, P., Kun, S., Hayat, S., Jackson, J.: Dew computing and asymmetric
    security framework for big data file sharing. Information 11(6), 303 (2020). https://doi.org/10.3390/info11060303
    Article   Google Scholar   Ageed, Z.S., Zeebaree, S.R., Sadeeq, M.A., Ibrahim,
    R.K., Shukur, H.M., Alkhayyat, A.: Comprehensive study of moving from grid and
    cloud computing through fog and edge computing towards dew computing. In 2021
    4th International Iraqi Conference on Engineering Technology and Their Applications
    (IICETA), pp. 68–74. IEEE (2021). https://doi.org/10.1109/IICETA51758.2021.9717894
    Bramer, M.: Principles of Data Mining, vol. 180, p. 2. Springer, London (2007).
    https://doi.org/10.1007/978-1-4471-7493-6 Chen, M.S., Han, J., Yu, P.S.: Data
    mining: an overview from a database perspective. IEEE Trans. Knowl. Data Eng.
    8(6), 866–883 (1996). https://doi.org/10.1109/69.553155 Article   Google Scholar   Li,
    T., Xie, N., Zeng, C., Zhou, W., Zheng, L., Jiang, Y., et al.: Data-driven techniques
    in disaster information management. ACM Comput. Surv. (CSUR) 50(1), 1–45 (2017).
    https://doi.org/10.1145/3017678 Saha, S., Nandi, S., Paul, P.S., Shah, V.K., Roy,
    A., Das, S.K.: Designing delay constrained hybrid ad hoc network infrastructure
    for post-disaster communication. Ad Hoc Netw. 25, 406–429 (2015). https://doi.org/10.1016/j.adhoc.2014.08.009
    Article   Google Scholar   Hazra, K., Shah, V.K., Bilal, M., Silvestri, S., Das,
    S.K., Nandi, S., Saha, S.: A novel network architecture for resource-constrained
    post-disaster environments. In: 2019 11th International Conference on Communication
    Systems & Networks (COMSNETS), pp. 328–335. IEEE. https://doi.org/10.1109/COMSNETS.2019.8711166
    Zhang, C., Fan, C., Yao, W., Hu, X., Mostafavi, A.: Social media for intelligent
    public information and warning in disasters: an interdisciplinary review. Int.
    J. Inf. Manag. 49, 190–207 (2019). https://doi.org/10.1016/j.ijinfomgt.2019.04.004
    Article   Google Scholar   Mondal, T., Pramanik, S., Pramanik, P., Datta, K. N.,
    Paul, P. S., Saha, S., & Nandi, S.: Emergency Communication and Use of ICT in
    Disaster Management. Emerging Technologies for Disaster Resilience: practical
    Cases and Theories, pp. 161–197 (2021). https://doi.org/10.1007/978-981-16-0360-0_10
    Sharma, K., Anand, D., Sabharwal, M., Tiwari, P.K., Cheikhrouhou, O., Frikha,
    T.: A disaster management framework using internet of things-based interconnected
    devices. Math. Probl. Eng. 2021, 1–21 (2021). https://doi.org/10.1155/2021/9916440
    Article   Google Scholar   Savyanavar, A.S., Ghorpade, D.V.R.: Resource allocation
    scheme for Dew computing paradigm using mobile grids. Int. J. Innov. Technol.
    Explor. Eng. 199–203,(2019). https://doi.org/10.35940/ijitee.H6545.078919 Mukherjee,
    A., De, D., Dey, N., Crespo, R.G., Herrera-Viedma, E.: DisastDrone: a disaster
    aware consumer internet of drone things system in ultra-low latent 6G network.
    IEEE Trans. Consum. Electron. (2022). https://doi.org/10.1109/TCE.2022.3214568
    Article   Google Scholar   Mukherjee, A., De, D., Dey, N.: Dewdrone: dew computing
    for internet of drone things. IEEE Consum. Electron. Mag. 12(1), 52–57 (2021).
    https://doi.org/10.1109/MCE.2021.3139306 Article   Google Scholar   Stanco, G.,
    Botta, A., Ventre, G.: Dewros: a platform for informed dew robotics in ros. In:
    2020 8th IEEE International Conference on Mobile Cloud Computing, Services, and
    Engineering (MobileCloud), pp 9–16. IEEE (2020). https://doi.org/10.1109/MobileCloud48802
    Belch, G.E., Belch, M.A.: Advertising and Promotion: an Integrated Marketing Communications
    Perspective, 6th edn. McGraw-Hill, New York Google Scholar   Court, D., Elzinga,
    D., Mulder, S., Vetvik, O.J.: The consumer decision journey. McKinsey Q. 3(3),
    96–107 (2009) Google Scholar   Chen, Y., Xu, Z., Yu, W.: Agent-based artificial
    financial market with evolutionary algorithm. Econ. Res.-Ekonomska Istraživanja
    35(1), 5037–5057 (2022). https://doi.org/10.1080/1331677X.2021.2021098 Article   Google
    Scholar   Sachs, J., Meng, Y., Giarola, S., Hawkes, A.: An agent-based model for
    energy investment decisions in the residential sector. Energy 172, 752–768 (2019)
    Article   Google Scholar   Anufriev, M., Radi, D., Tramontana, F.: Some reflections
    on past and future of nonlinear dynamics in economics and finance. Decis. Econ.
    Financ. 41, 91–118 (2018). https://doi.org/10.1007/s10203-018-0229-9 Article   MathSciNet   MATH   Google
    Scholar   Charpentier, A., Elie, R., Remlinger, C.: Reinforcement learning in
    economics and finance. Comput. Econ. 1–38 (2021) Google Scholar   Jiang, Z., Xu,
    D., Liang, J.: A deep reinforcement learning framework for the financial portfolio
    management problem (2017). arXiv:1706.10059. https://doi.org/10.48550/arXiv.1706.10059
    Wang, Y., Xu, T., Niu, X., Tan, C., Chen, E., Xiong, H.: STMARL: a spatio-temporal
    multi-agent reinforcement learning approach for cooperative traffic light control.
    IEEE Trans. Mob. Comput. 21(6), 2228–2242 (2020). https://doi.org/10.1109/TMC.2020.3033782
    Article   Google Scholar   Panda, B., Leepsa, N.M.: Agency theory: review of theory
    and evidence on problems and perspectives. Indian J. Corpor. Gov. 10(1), 74–95
    (2017) Article   Google Scholar   Kumala, R., Siregar, S.V.: Corporate social
    responsibility, family ownership and earnings management: the case of Indonesia.
    Soc. Responsibil. J. 17(1), 69–86 (2021). https://doi.org/10.1108/SRJ-09-2016-0156
    Article   Google Scholar   Adhikari, R.: Foundations of computational finance.
    Math. J. 22, 1–59 (2020). https://content.wolfram.com/uploads/sites/19/2020/08/Adhikari-1.pdf
    Tran, M., Pham-Hi, D., Bui, M.: Parameter optimization for trading algorithms
    of technical agents. In: 2022 RIVF International Conference on Computing and Communication
    Technologies (RIVF), pp. 689–694. IEEE (2022) Google Scholar   Zubillaga, B.J.,
    Vilela, A.L., Wang, C., Nelson, K.P., Stanley, H.E.: A three-state opinion formation
    model for financial markets. Phys. A 588, 126527 (2022). https://doi.org/10.1016/j.physa.2021.126527
    Article   Google Scholar   Granha, M.F., Vilela, A.L., Wang, C., Nelson, K.P.,
    Stanley, H.E.: Opinion dynamics in financial markets via random networks. Proc.
    Natl. Acad. Sci. 119(49), e2201573119 (2022) Article   MathSciNet   Google Scholar   Biamonte,
    J., Wittek, P., Pancotti, N., Rebentrost, P., Wiebe, N., Lloyd, S.: Quantum machine
    learning. Nature 549(7671), 195–202 (2017) Article   Google Scholar   Phillipson,
    F.: Quantum machine learning: benefits and practical examples. In: QANSWER, pp
    51–56 (2020) Google Scholar   Pandya, M.: Securing Cloud-The Quantum Way (2015).
    arXiv:1512.02196 Sharma, G., Kalra, S.: A novel scheme for data security in cloud
    computing using quantum cryptography. In: Proceedings of the International Conference
    on Advances in Information Communication Technology & Computing, pp. 1–6 (2016)
    Google Scholar   Bennett, C.H., Brassard, G.: Quantum cryptography: public key
    distribution and coin tossing (2020). arXiv:2003.06557 Baliello, C., Basso, A.,
    Giusto, C.D.: Kerberos protocol: an overview. Distributed Systems, Italy, Fall
    (2002) Google Scholar   Fan, K., Li, H., Wang, Y.: Security analysis of the kerberos
    protocol using BAN logic. In: 2009 Fifth International Conference on Information
    Assurance and Security, vol. 2, pp. 467–470. IEEE (2009) Google Scholar   Download
    references Author information Authors and Affiliations School of Computer Science,
    Engineering, and Applications (SCSEA), Department of Computer Science and Engineering,
    D Y Patil International University, Pune, 411044, Maharashtra, India Samarjit
    Roy & Suprabhat Sinha Center for Informatics and Computing, Ruđer Bošković Institute,
    Zagreb, Croatia Samarjit Roy, Karolj Skala & Davor Davidovic School of Computing
    and Information Technology, Eastern International University, Thu Dau Mot City,
    Vietnam Samarjit Roy Department of Social Sciences, Technology, and Arts, Luleå
    University of Technology, Luleå, Sweden Debadrita Panda Department of Artificial
    Intelligence Engineering, Sookmyung Women’s University, Seoul, South Korea Byung-Gyu
    Kim School of Commerce and Management (SCM), D Y Patil International University,
    Pune, 411044, Maharashtra, India Palash Bairagi Symbiosis Centre for Information
    Technology, Symbiosis International (Deemed University), Pune, Maharashtra, India
    Tamal Mondal & Sirshendu Arosh Department of Computer Science and Engineering,
    Maulana Abul Kalam Azad University of Technology, West Bengal, Kolkata, India
    Debashis De School of Mathematical and Computational Sciences, University of Prince
    Edward Island, Charlottetown, Canada Yingwei Wang Corresponding author Correspondence
    to Samarjit Roy . Editor information Editors and Affiliations Department of Computer
    Science and Engineering, Maulana Abul Kalam Azad University of Technology, West
    Bengal, Kolkata, India Debashis De Department of Computer Science and Engineering,
    D Y Patil International University, Pune, India Samarjit Roy Rights and permissions
    Reprints and permissions Copyright information © 2024 The Author(s), under exclusive
    license to Springer Nature Singapore Pte Ltd. About this chapter Cite this chapter
    Roy, S. et al. (2024). DewMetrics: Demystification of the Dew Computing in Sustainable
    Internet of Things. In: De, D., Roy, S. (eds) Dew Computing. Internet of Things.
    Springer, Singapore. https://doi.org/10.1007/978-981-99-4590-0_1 Download citation
    .RIS.ENW.BIB DOI https://doi.org/10.1007/978-981-99-4590-0_1 Published 03 September
    2023 Publisher Name Springer, Singapore Print ISBN 978-981-99-4589-4 Online ISBN
    978-981-99-4590-0 eBook Packages Engineering Engineering (R0) Share this chapter
    Anyone you share the following link with will be able to read this content: Get
    shareable link Provided by the Springer Nature SharedIt content-sharing initiative
    Publish with us Policies and ethics Download book PDF Download book EPUB Sections
    Figures References Abstract Introduction Related Works Dew Computing: The Infrastructure
    Outline Crisis Environments and Significance of Data Flow for Response Reducing
    the Dependency on Internetwork During Consumer Decision-Making Dew in Computational
    Finance Theories Dew Computing Paradigms for Quantum Machine Learning and Quantum
    Cryptography Dew Computing in Sustainable Internet of Music Things Topics of Interest:
    Application Domains and Future Research Challenges of Dew Computing-Assisted Sustainable
    Internet of Things Conclusions References Author information Editor information
    Rights and permissions Copyright information About this chapter Publish with us
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Internet of Things
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'DewMetrics: Demystification of the Dew Computing in Sustainable Internet
    of Things'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh P.
  - Singh K.D.
  - Kaur R.
  - Singh D.
  - Tripathi V.
  citation_count: '0'
  description: To ensure that the world is fed healthily, agriculture plays an important
    role. The increased need for both quantity and quality of food necessitates agricultural
    intensification and industrialization. Internet of things (IoT) is a potential
    family of technologies that may help farmers modernize their practices. Research
    institutions and scientific organizations are rushing to provide even more IoT
    solutions for agricultural stakeholders, as well as to lay the framework for a
    clear role when IoT is widely adopted as a standard technology. At the same time,
    Cloud and Fog computing, two technologies that have been more popular in recent
    years are capable of handling the huge amounts of data generated by IoT devices.
    Various real-time tasks may be improved and automated with the help of IoT data
    management and analysis. 454Interoperability across heterogeneous devices has
    also driven the creation of appropriate tools that can be used to build new applications
    and services that add value to data flows created at the network’s edge. An excellent
    solution for smart agriculture is proposed by the use of IoT which proves its
    worthiness to farmers by boosting overall productivity.
  doi: 10.1201/9781003435228-27
  full_citation: '>'
  full_text: '>

    "Access Provided By:University of Nebraska-Lincoln T&F eBooks ‍ Advanced Search
    Login About Us Subjects Browse Products Request a trial Librarian Resources What''s
    New!! HomeEnvironment & AgricultureAgriculture & Environmental SciencesAgriculturePrecision
    Agriculture for SustainabilityFateh: A Novel Framework for Internet-of-Things-Based
    Smart Agriculture Monitoring System Chapter Fateh: A Novel Framework for Internet-of-Things-Based
    Smart Agriculture Monitoring System ByPrabhdeep Singh, Kiran Deep Singh, Rajbir
    Kaur, Diljot Singh, Vikas Tripathi Book Precision Agriculture for Sustainability
    Edition 1st Edition First Published 2024 Imprint Apple Academic Press Pages 10
    eBook ISBN 9781003435228 Share ABSTRACT To ensure that the world is fed healthily,
    agriculture plays an important role. The increased need for both quantity and
    quality of food necessitates agricultural intensification and industrialization.
    Internet of things (IoT) is a potential family of technologies that may help farmers
    modernize their practices. Research institutions and scientific organizations
    are rushing to provide even more IoT solutions for agricultural stakeholders,
    as well as to lay the framework for a clear role when IoT is widely adopted as
    a standard technology. At the same time, Cloud and Fog computing, two technologies
    that have been more popular in recent years are capable of handling the huge amounts
    of data generated by IoT devices. Various real-time tasks may be improved and
    automated with the help of IoT data management and analysis. 454Interoperability
    across heterogeneous devices has also driven the creation of appropriate tools
    that can be used to build new applications and services that add value to data
    flows created at the network’s edge. An excellent solution for smart agriculture
    is proposed by the use of IoT which proves its worthiness to farmers by boosting
    overall productivity. Previous Chapter Your institution has not purchased this
    content. Please get in touch with your librarian to recommend this.  To purchase
    a print version of this book for personal use or request an inspection copy  GO
    TO ROUTLEDGE.COM  Policies Privacy Policy Terms & Conditions Cookie Policy Journals
    Taylor & Francis Online Corporate Taylor & Francis Group Help & Contact Students/Researchers
    Librarians/Institutions Connect with us Registered in England & Wales No. 3099067
    5 Howick Place | London | SW1P 1WG © 2024 Informa UK Limited"'
  inline_citation: '>'
  journal: 'Precision Agriculture for Sustainability: Use of Smart Sensors, Actuators,
    and Decision Support Systems'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'FATEH: A NOVEL FRAMEWORK FOR INTERNET-OF-THINGS-BASED SMART AGRICULTURE
    MONITORING SYSTEM'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Aljuhani A.
  - Kumar P.
  - Islam A.K.M.N.
  - Kumar R.
  - Jolfaei A.
  citation_count: '7'
  description: The Internet of Things (IoT) technology is considered the foundation
    for next-generation smart villages due to its ability to use sustainable information
    and communication technologies. The smart villages can enable real-time data analytics
    and can automate decision-making for local villagers in terms of agriculture,
    health care, transportation, environment, and energy. However, most of the wireless
    sensing devices exchange information using public networks and therefore may not
    be able to resist all forms of attacks. In addition, most of the IoT devices are
    resource restricted and use cloud servers to process and store data. However,
    when IoT devices communicate with cloud computing data centers, the volume of
    data causes network congestion. To provide efficient and secure services, a new
    network architecture named distributed fog computing (DFC) can be created and
    integrated with the IoT-based smart villages deployment. Motivated from the aforementioned
    discussions, this article explores the integration of DFC with IoT in improving
    security and privacy solutions for consumer electronic devices used by villages.
    As a case study, we also design and evaluate the performance of an intrusion detection
    system in a DFC-based smart village environment. Finally, we discuss several open
    security issues and challenges regarding Fog-to-Things enabled smart villages.
  doi: 10.1109/MCE.2022.3193268
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Consumer Electronics
    Mag... >Volume: 12 Issue: 5 Fog Intelligence for Secure Smart Villages: Architecture
    and Future Challenges Publisher: IEEE Cite This PDF Ahamed Aljuhani; Prabhat Kumar;
    Randhir Kumar; Alireza Jolfaei; A. K. M. Najmul Islam All Authors 10 Cites in
    Papers 345 Full Text Views Abstract Authors Figures References Citations Keywords
    Metrics Footnotes Abstract: The Internet of Things (IoT) technology is considered
    the foundation for next-generation smart villages due to its ability to use sustainable
    information and communication technologies. The smart villages can enable real-time
    data analytics and can automate decision-making for local villagers in terms of
    agriculture, health care, transportation, environment, and energy. However, most
    of the wireless sensing devices exchange information using public networks and
    therefore may not be able to resist all forms of attacks. In addition, most of
    the IoT devices are resource restricted and use cloud servers to process and store
    data. However, when IoT devices communicate with cloud computing data centers,
    the volume of data causes network congestion. To provide efficient and secure
    services, a new network architecture named distributed fog computing (DFC) can
    be created and integrated with the IoT-based smart villages deployment. Motivated
    from the aforementioned discussions, this article explores the integration of
    DFC with IoT in improving security and privacy solutions for consumer electronic
    devices used by villages. As a case study, we also design and evaluate the performance
    of an intrusion detection system in a DFC-based smart village environment. Finally,
    we discuss several open security issues and challenges regarding Fog-to-Things
    enabled smart villages. Published in: IEEE Consumer Electronics Magazine ( Volume:
    12, Issue: 5, 01 September 2023) Page(s): 12 - 21 Date of Publication: 22 July
    2022 ISSN Information: DOI: 10.1109/MCE.2022.3193268 Publisher: IEEE The rapid
    evolution of technologies and communications raises the demand for emerging smart
    paradigms, such as the Internet of Things (IoT). The IoT aims to transform “things”
    from conventional to a smart object, enabling multiple connected devices to send,
    process, and receive data across multiple locations with minimal or no human involvement.
    Such technology provides several great features to end users, including cost reduction,
    automation, real-time analysis, improving productivity, and better business opportunities.
    IoT technology has been integrated into the operations of smart systems in a wide
    range of critical sectors, such as energy, transportation systems, industrial,
    communication, and healthcare. As a result, the number of IoT-connected devices
    has been growing exponentially and might reach 27 billion by 2025.[1] Thus, from
    a consumer perspective, IoT should be centered on providing safe and automated
    infrastructure in living and nonliving environments. IoT technology plays a vital
    role in allowing smart villages to provide cost-effective and efficient solutions
    for villagers. As the majority of people in different countries live in rural
    settlements with minimum technology and resources, this offers several opportunities
    for developing IoT applications in different important domains within rural settlements.[2]
    For example, villagers regularly use traditional crop harvesting methods, making
    farm management extremely difficult. A smart village includes the agricultural
    IoT, which can help farmers deal with all of the issues associated with farming,
    such as weather and water management. The use of IoT applications and services
    in such a village will improve the quality of life by providing a resilient, cost-effective,
    and sustainable smart village.[3] Even though IoT-based smart villages improve
    the quality of villagers’ lives, developing rural areas as smart villages with
    limited technological resources, such as computational and communication infrastructure,
    remains critical. To address these issues, fog computing is a new emerging technology
    that enables storage, communication, and network functions in a distributed fashion.[4]
    The main principle of fog computing is to extend the cloud closer to IoT devices,
    acting as an intermediate layer between the IoT end user and the cloud. Cloud
    technology has several limitations, such as latency, volume, limited bandwidth,
    data protection, and Internet connectivity. To provide secure, robust, and safe
    telecommunication infrastructures, fog computing offers a great opportunity to
    improve the quality of life for villagers and IoT-enabled smart village consumer
    electronics (CE) devices by offloading security features to multiple fog nodes,
    and providing real-time cyberattack detection near to the data source (see Figure
    1). However, fog computing is not a replacement for cloud computing but it functions
    as an extension of the cloud. Fog computing is considered to be an implementation
    or evolution of edge computing, which is another network paradigm that enables
    technologies to allow computation performed at the edge of the network, closer
    to the data generation points, i.e., sensors.[5] Fog computing shifts the data
    process into a fog node or IoT gateway, which is located within the local area
    network. This is physically more distant from sensors. In addition, the flexibility
    of placing fog nodes anywhere between devices and the cloud is the most significant
    feature that distinguishes fog computing from several implementations of edge
    computing.[5] Figure 1. Fog computing improved security and privacy services in
    IoT-based smart villages. Show All Although IoT-based smart villages aim to improve
    human life and ameliorate the quality of service in several domains, their security
    issues remain a big challenge.[6] Since the term “smart” and “things” often refers
    to technology, such as the IoT, the deployment of such platform in villages introduces
    several cyber threats worth investigating. A Sybil attack, for example, is one
    type of security threat in which an attacker may exploit vulnerabilities in smart
    village networks. In a Sybil attack, a malicious node falsifies its identity and
    excessively broadcasts incorrect information to legitimate nodes, causing a node''s
    resources to be completely drained.[7] In addition, a scanning attack could pose
    a major risk, as such an attack scans vulnerabilities in smart village devices
    and performs malicious activities. Another well-known cyber threat is the man-in-the-middle
    attack, in which an adversary intercepting the network communication between connected
    smart village devices acts as a legitimate device to eavesdrop and steal sensitive
    information. Following this introduction, this article discusses the integration
    of distributed fog computing (DFC) with IoT-based smart villages to improve security
    and privacy services. In addition, this article discusses security-by-design (SbD)
    for an intrusion detection system (IDS) based on DFC in IoT-enabled smart villages
    and explores the potential uses of other emerging technologies with such an environment.
    We also design and implement an IDS for a DFC-based smart village as a case study.
    Finally, this article discusses several open security issues and recommendations
    regarding Fog-to-Things enabled smart villages. DFC-ENABLED IDS The integration
    of fog computing and IoT has driven Fog-of-Things to overcome the cloud limitations
    and provide several advantages. Fog computing improves the security and privacy
    of IoT-enabled smart villages from many perspectives. One of the distinctive features
    of fog computing is that it provides a distributed computing environment, unlike
    cloud computing, which follows a centralized architecture.[6] Therefore, DFC can
    be utilized to provide distributed security solutions, such as IDS. Moreover,
    in such an environment, IoT devices generate a large amount of heterogeneous data
    that require rapid, efficient, and real-time response. The DFC has the ability
    to improve the computational resource of IDS as a security function by working
    closer to the network edge. This can help by providing a lightweight, efficient,
    and rapid mitigation response against several cybersecurity threats. In addition,
    fog computing enables the deployment of parallel and distributed security solutions.
    For example, IDS can be implemented as distributed security functions at multiple
    fog nodes in the context of Fog-of-Things architecture. Thus, enabling a collaborative
    detection and mitigation approach that can share and exchange data to provide
    an effective and robust mitigation approach against several cyberattacks. The
    IDS can benefit from DFC in providing a low latency that allows rapid response,
    resulting in a decrease in potential damages caused by such attacks. Several approaches
    can be implemented to achieve a collaborative IDS in fog computing; however, Fog-of-Things
    IDS architecture has several advantages because it fully leverages the benefits
    of distributed fog nodes in terms of data processing, storage, latency, and scalability.
    In addition, the recourse constraints of IoT devices that require lightweight
    detection are closer to applications and in the proximity of IoT nodes. Therefore,
    utilizing fog architecture in detecting various cyber threats, such as man-in-the-middle,
    sniffing, and eavesdropping attacks, is more effective than the cloud.[8] As Figure
    2 shows, the detection model is hosted locally at each node, while the master
    fog node performs the computation and updates the detection model parameters to
    each node. The architecture reveals that the data can be trained and validated
    at a single node, and distributes the model parameters in parallel to each node,
    enabling a collaborative intrusion detection closer to IoT devices while distributed
    detection nodes exchange the learning parameters with their neighbor nodes through
    the master fog node. The Fog-of-Things IDS architecture allows the building of
    a lightweight, scalable, and rapid detection approach that can effectively and
    efficiently mitigate several cyber threats. Figure 2. Fog-to-Things distributed
    IDS architecture in IoT-based smart villages. Show All IDS-BASED EMERGING TECHNOLOGY
    IN FOG COMPUTING The IDS as a security service can be improved with emerging technologies
    as well as benefit from the architecture of the DFC paradigm in order to enable
    a secure IoT-based smart village that can effectively and efficiently combat several
    cyber threats. We discuss SbD for the possible integration of emerging technologies
    with IDS-based DFC to improve security and privacy solution in smart villages.
    5G Networks The new generation of wireless network technology promises a significant
    revolution in wireless connectivity and network communications. As the IoT environment
    contains a large number of connected devices from several smart domains, which
    communicate with different network topology and protocols, the 5G networks provide
    several benefits over current cellular networks, including fast data transmission,
    low latency, improved capacity, and enhanced coverage for machine type communication.
    The 5G networks also can be a complement with fog computing as such an environment
    cooperates with different network layers requiring fast, reliable, and efficient
    machine-to-machine communication. As the nature of fog computing reveals a decentralized
    architecture that requires a high-frequency transmission rate with minimum delay
    among distributed Fog nodes, such a collaborative security function like a distributed
    IDS can leverage the benefits of 5G technology with fog computing in providing
    rapid and effective security attack mitigation. Artificial Intelligence (AI) AI
    plays a vital role in smart technology and has potential uses of its applications
    within critical domains in smart villages. When speaking of AI, machine learning
    and deep learning (ML/DL) have gained much attention in detecting malicious activities
    and reducing damages to the systems when integrated with security functions, such
    as IDS. The IDS can be employed as a collaborative detection model based on ML/DL
    techniques, leveraging the computational resources, and low latency that are provided
    by DFC to analyze, classify, and mitigate attacks effectively on real time.[9]
    Such features of DFC help develop a lightweight, efficient, and rapid mitigation
    mechanism based on ML/DL techniques, reducing the risk caused by cyber threats
    in smart villages. Software-Defined Network Fog computing can employ software-defined
    networking (SDN) and benefit from its significant features. SDN is a network architecture
    paradigm that enables a network topology to be managed and programmed by software
    applications. As the SDN controller is considered the most important function
    of SDN architecture, the fog layer can utilize the SDN controller to provide the
    anomaly detection approach where the network traffic has to go through a fog node
    or a fog server, in which the SDN controller is hosted.[10] The detection and
    mitigation mechanism provides the controller with updated flow rules to segregate
    and disregard malicious traffic from legitimate traffic. Fog computing provides
    sufficient computational resources for such an implemented detection algorithm
    based on an SDN controller. Network Functions Virtualization (NFV) In addition
    to the SDN, NFV is an emerging technology that employs virtualization concepts
    to its network functions, decoupling network components from underline hardware
    to be all virtualized network functions running as software on standard servers.
    As fog computing operates in a virtualized intermediate layer and virtual machines
    can be dynamically instantiated and removed, the NFV paradigm will benefit fog
    computing by virtualizing different network functions, such as switches, IDS,
    load balancers, and firewalls, and operating those instances over fog nodes.[11]
    NFV also provides flexibility to its virtualized security functions, such as intrusion
    detection and prevention systems, by adapting new rules or instantiating new security
    instances on demand. Blockchain Blockchain technology has been employed with several
    emerging technologies, such as the IoT ecosystem. Blockchain technology follows
    the decentralized architecture by its nature, which can help provide decentralized
    security services for an IoT-based smart village ecosystem. A distributed IDS
    gains several advantages over a single IDS in detecting sophisticated attacks.
    Moreover, distributed IDS nodes need to collaborate and exchange data efficiently
    and effectively between IDS nodes to detect and mitigate a diverse range of cyber
    threats. However, two major challenges with distributed IDS have been observed[12],[13]:
    sharing the information among multiple IDS nodes and computation trust between
    participants. To resolve these issues, blockchain technology ensures the integrity
    of data when sharing and exchanging information among multiple IDS nodes through
    building a trust management model for data sharing. With the advent of fog computing,
    fog nodes can communicate with each other by using blockchain technology without
    the involvement of a centralized authority or third party in the cloud, which
    helps avoid the single point of failure problem.[12] Blockchain technology has
    strong potential and can be integrated with other emerging technology, such as
    SDN and fog computing, to provide a secure, resilient, and more efficient mitigation
    system against several cyber threats in IoT-based smart villages. Big Data Analytic
    The massive amount of heterogeneous data produced from IoT devices requires a
    cost-effective and efficient computational resources method to process, analyze,
    and filter Big Data near IoT devices. The architecture of DFC provides fog data
    services, which comprise several functionalities, such as data management, data
    analysis, data security, and data virtualization.[14] With such features of data
    services in fog architecture, the distributed fog nodes help analyze data in real
    time, providing rapid and efficient decision-making near the IoT sensors. Such
    a lightweight analytical tool implemented based on ML techniques will help in
    analyzing data and selecting the most important features in classifying and detecting
    attacks effectively. CASE STUDY OF DFC FOR SECURE SMART VILLAGE As a case study,
    we have designed and implemented an IDS based on XGBoost and Random Forest using
    DFC. Figure 3 shows the general architecture of our proposed distributed and parallelized
    attack detection process in an IoT-based smart village scenario. In this case
    study, we have several IoT sensors and actuators responsible for capturing real-time
    data from their surroundings and transmitting it to nearby fog nodes for further
    processing. Once the data are received by the nearest worker fog nodes, they compute
    the gradient and send the partial gradient to the master fog node. The master
    fog node aggregates the gradients from all worker fog nodes and sends back the
    new weight to worker fog nodes. The gradients are further used to produce attack
    detection models as an output from the worker fog nodes. This sharing reduces
    overall training time in real time and increases the efficiency of the attack
    detection process. The proposed IDS is based on three different steps. Data acquisition
    and preprocessing: In particular, actual IoT datasets obtained from the IoT environment
    are used to simulate the proposed IDS. The initial features are preprocessed to
    make datasets more generalized and compatible for learning algorithms. Distributed
    learning in fog environment: The learning algorithms are implemented and trained
    on multiple fog nodes. This process can be executed on routing and switching devices
    of the smart village. Attack detection: This phase use the knowledge obtained
    from training to detect attacks. Figure 3. Case study of DFC for secure smart
    village. Show All Performance Evaluation The abovementioned steps are used to
    design and simulate the proposed IDS. The overall experiments of this study were
    performed on an Intel(R) Xeon(R) Silver 4114 CPU @ 2.20 GHz (2 processors), 128-GB
    RAM, and a 2-TB hard disk. We have used Kubernetes and H2O.ai platform to train
    and test the proposed IDS. The parallelism and distribution are carried out by
    a varying number of machines used during training. The ToN-IoT dataset is used
    to show the effectiveness of the proposed model.[8] This dataset contains various
    recent attacks, such as backdoor, DoS, DDoS, injection, MITM, password, ransomware,
    scanning, and XSS attacks, which are mostly found in IoT-based smart village environments.
    The algorithms mentioned in Kumar et al.''s[13] work were used to design proposed
    IDS using DFC. Figure 4 shows the training time for XGBoost and Random Forest
    using 15 fog nodes. It is clear that the training time decreases with the increase
    in worker fog nodes. We have used multiple evaluation metrics, such as detection
    rate (DR), precision (PR), F1, and false alarm rate to evaluate the performance
    of the proposed IDS, as mentioned in Kumar et al.''s[13] work. Table 1 shows per-class
    prediction results using the ToN-IoT dataset. It is worth noting that the performance
    of both algorithms on the ToN-IoT dataset is effective and has obtained higher
    values (i.e., 86%–100%) for different evaluation metrics. Moreover, we see that
    the FAR for the attack groups has been reduced close to 0%. This indicates that
    the DFC-enabled IDS has huge potential in detecting attacks in a real-time IoT-based
    smart villages environment. Finally, we have compared our work with some recent
    state-of-the-art techniques using the ToN-IoT dataset. Table 2 shows the comparison
    in terms of overall accuracy. The proposed distributed IDS has achieved 99.89%
    and 98.31% accuracy with XGBoost and Random Forest, respectively. This is higher
    compared with the works presented in Alsaedi et al.[15] and Ribeiro Junior et
    al.''s[8] works. Moreover, the proposed framework works in distributed environment
    compared with Alsaedi et al.[15] and Ribeiro Junior et al.''s[8] works that uses
    centralized attack detection approach. Table 1. Per-class prediction results (%)
    for proposed IDS on ToN-IoT dataset. Table 2. Performance comparison with existing
    state-of-the-art techniques using ToN-IoT dataset. Figure 4. Training time analysis
    by varying fog nodes. Show All SECURITY ISSUES AND CHALLENGES Although the integration
    of fog computing in a smart village provides considerable advantages to end users,
    security and privacy issues remain significant challenges. We briefly discuss
    the major security and privacy challenges in the integration of fog computing
    with IoT-based smart villages. Authentication The nature of IoT technology requires
    devices to prove their identity and ensure that IoT devices can be trusted to
    connect and exchange data among IoT objects and fog nodes. Authentication of devices
    is important to avoid cyberattacks, such as man-in-the-middle attacks. Many proposed
    authentication schemes were presented in the previous work; however, traditional
    authentication approaches are insufficient and lack scalability. Therefore, a
    lightweight authentication protocol is needed to meet the security requirements
    between IoT devices and fog nodes.[15] As fog computing authenticates many end
    users’ devices simultaneously, to become a part of the network, it lacks real-time
    interaction and causes high latency. Another challenge of authentication is regarding
    trust and service level agreement between different members of interconnected
    services while designing a mutual authentication scheme is another obstacle. Access
    Control Access control is one of the major security protection approaches that
    entails protecting, preserving, and restricting access to a user''s data or service
    from unauthorized access, and allowing the credentials for only authorized entities.
    The main objective of access control is to maintain security and privacy for end
    users and protect data from attacks that attempt to gain unauthorized access and
    perform malicious activities. Due to the involvement of different members of interconnected
    services, “IoT-Fog-Cloud,” maintaining access control between a large group of
    different service providers becomes a challenge. As fog computing comprises many
    fog nodes and data are transmitted among those nodes, it may trigger time delay
    and result in a high latency issue, which affects the access decision to be within
    an acceptable time.[15] Preserving the privacy state while transmitting data from
    one domain to another through fog access control is another challenge in terms
    of maintaining the user''s security and privacy requirements. Data Privacy With
    the rapid growth of several emerging technologies that deal with users’ data,
    privacy constantly becomes a major concern. When discussing privacy, the main
    issues center on how the data are collected, shared, and stored. Due to the increasing
    number of interconnected devices and emerging new technologies that may be integrated
    with other technology architectures, users’ privacy becomes a crucial part to
    maintain and control. An example is sharing users’ data across multiple domain
    architectures, such as IoT-Fog-Cloud. As fog computing follows a distributed architecture,
    in other words, multiple fog nodes scattered and distributed over large areas,
    maintaining data privacy across multiple nodes in different locations becomes
    another challenge.[15] Moreover, fog nodes receive and process data at different
    fog storage levels and forward users’ data to the cloud, such an attack on fog
    node storage will reveal sensitive user data. Therefore, designing new solutions
    for ensuring data privacy is another major challenge. Trust Management Trust management
    is an essential part to be maintained and established to identify a trusted node
    and isolate a malicious node before it is connected to the network. Due to the
    nature of the fog environment, which includes scattered and distributed fog nodes
    over large areas, defining and maintaining the trust status of each node to determine
    whether a node is trustworthy or not becomes a challenge. Another trust management
    challenge is the integration of multiple environments, such as Things-Fog-Cloud,
    which reveals a centralized architecture for the cloud and a distributed environment
    for fog computing. Consequently, designing and maintaining trust management among
    distributed fog nodes is a research issue.[13] Virtualization Technologies The
    primary purpose of network function virtualization (such as SDN and NFV) is to
    enhance network performance while enhancing the network infrastructure''s programmability
    and flexibility. In IoT-based smart villages, the inherent constraints in adapting
    such virtualized infrastructure and ensuring low latency, high throughput, and
    minimal computation overheads are challenging and a research issue. Transition
    From 5G to Beyond 5G The introduction of 5G and the shift to beyond 5G may present
    possible issues for carrier access networks in large-scale DFC installations of
    IoT-based smart villages (e.g., interconnections and interfaces, coordination,
    administration and control, and interconnections between mobile, user plane function
    and fixed carriers). Thus, it will be an interesting research direction to design
    a security solution in such an ecosystem. CONCLUSION In this article, we have
    explored the integration of DFC with IoT-based smart villages to improve the quality
    of life for villagers and CE devices from a security and privacy perspective.
    We have discussed SbD for IDS with the integration architecture of DFC in IoT-based
    smart villages. This article also presented the possible integration of several
    emerging technologies with the IDS-based distributed fog computing to improve
    security and privacy solutions in a smart village. We also designed and implemented
    a case study of an IDS for a distributed fog computing-based smart village. In
    the end, we discussed various security and privacy challenges that require attention
    from the research community. Authors Figures References Citations Keywords Metrics
    Footnotes More Like This A Survey on Security and Privacy Issues in Edge-Computing-Assisted
    Internet of Things IEEE Internet of Things Journal Published: 2021 Security Framework
    for Internet-of-Things-Based Software-Defined Networks Using Blockchain IEEE Internet
    of Things Journal Published: 2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Consumer Electronics Magazine
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Fog Intelligence for Secure Smart Villages: Architecture and Future Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Padhy S.
  - Alowaidi M.
  - Dash S.
  - Alshehri M.
  - Malla P.P.
  - Routray S.
  - Alhumyani H.
  citation_count: '16'
  description: Every aspect of the 21st century has undergone a revolution because
    of the Internet of Things (IoT) and smart computing technologies. These technologies
    are applied in many different ways, from monitoring the state of crops and the
    moisture level of the soil in real-time to using drones to help with chores such
    as spraying pesticides. The extensive integration of both recent IT and conventional
    agriculture has brought in the phase of agriculture 4.0, often known as smart
    agriculture. Agriculture intelligence and automation are addressed by smart agriculture.
    However, with the advancement of agriculture brought about by recent digital technology,
    information security challenges cannot be overlooked. The article begins by providing
    an overview of the development of agriculture 4.0 with pros and cons. This study
    focused on layered architectural design, identified security issues, and presented
    security demands and upcoming prospects. In addition to that, we propose a security
    architectural framework for agriculture 4.0 that combines blockchain technology,
    fog computing, and software-defined networking. The suggested framework combines
    Ethereum blockchain and software-defined networking technologies on an open-source
    IoT platform. It is then tested with three different cases under a DDoS attack.
    The results of the performance analysis show that overall, the proposed security
    framework has performed well.
  doi: 10.3390/pr11030757
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Processes All Article Types Advanced   Journals
    Processes Volume 11 Issue 3 10.3390/pr11030757 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Jie Zhang Subscribe
    SciFeed Recommended Articles Related Info Link More by Authors Links Article Views
    4015 Citations 13 Table of Contents Abstract Introduction Overview of Agriculture
    4.0 Agriculture 4.0 Security Threats in Multi-Layered Paradigm Security Threats
    in Modern Agriculture Existing Research on Security in Agriculture 4.0 Proposed
    Security Framework Case Studies and Experimental Results Smart Agriculture 5.0
    Conclusions Author Contributions Funding Institutional Review Board Statement
    Informed Consent Statement Data Availability Statement Conflicts of Interest References
    share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessArticle AgriSecure: A Fog Computing-Based Security Framework for Agriculture
    4.0 via Blockchain by Sasmita Padhy 1, Majed Alowaidi 2,*, Sachikanta Dash 3,
    Mohamed Alshehri 2, Prince Priya Malla 4, Sidheswar Routray 5,* and Hesham Alhumyani
    6 1 School of Computing Science and Engineering, VIT Bhopal University, Bhopal-Indore
    Highway Kothrikalan, Sehore 466114, Madhya Pradesh, India 2 Department of Information
    Technology, College of Computer and Information Sciences, Majmaah University,
    Majmaah 11952, Saudi Arabia 3 Department of Computer Science and Engineering,
    GIET University, Gunupur 765022, Odisha, India 4 School of Electronics Engineering,
    Kalinga Institute of Industrial Technology, Bhubaneswar 751024, Odisha, India
    5 Department of Computer Science and Engineering, School of Engineering, Indrashil
    University, Rajpur, Mehsana 382740, Gujarat, India 6 Department of Computer Engineering,
    College of Computers and Information Technology, Taif University, Taif 21944,
    Saudi Arabia * Authors to whom correspondence should be addressed. Processes 2023,
    11(3), 757; https://doi.org/10.3390/pr11030757 Submission received: 23 January
    2023 / Revised: 23 February 2023 / Accepted: 24 February 2023 / Published: 3 March
    2023 (This article belongs to the Special Issue Analysis, Design and Industrial
    Application of Intelligent Control Systems) Download keyboard_arrow_down     Browse
    Figures Review Reports Versions Notes Abstract Every aspect of the 21st century
    has undergone a revolution because of the Internet of Things (IoT) and smart computing
    technologies. These technologies are applied in many different ways, from monitoring
    the state of crops and the moisture level of the soil in real-time to using drones
    to help with chores such as spraying pesticides. The extensive integration of
    both recent IT and conventional agriculture has brought in the phase of agriculture
    4.0, often known as smart agriculture. Agriculture intelligence and automation
    are addressed by smart agriculture. However, with the advancement of agriculture
    brought about by recent digital technology, information security challenges cannot
    be overlooked. The article begins by providing an overview of the development
    of agriculture 4.0 with pros and cons. This study focused on layered architectural
    design, identified security issues, and presented security demands and upcoming
    prospects. In addition to that, we propose a security architectural framework
    for agriculture 4.0 that combines blockchain technology, fog computing, and software-defined
    networking. The suggested framework combines Ethereum blockchain and software-defined
    networking technologies on an open-source IoT platform. It is then tested with
    three different cases under a DDoS attack. The results of the performance analysis
    show that overall, the proposed security framework has performed well. Keywords:
    IoT; blockchain; SDN; precision farming; cyber security; fog computing 1. Introduction
    Farming is the main source of food and contributes significantly to the economy.
    According to the FAO (Food and Agriculture Organization of the United Nations),
    by 2050, the demand for producing food must be increased by 70% to satisfy the
    world’s demand. In recent studies, 550 million people of the world’s population
    are in nutrition deficiencies; every day, around 820 million people are still
    not obtaining food. The study says that the world’s population will increase to
    more than two billion, and most of the population will live in cities. It has
    also been observed that the population in India and Nigeria will increase to around
    482 million between 2019 and 2050 [1]. The biggest challenging situation arises
    with this population growth to achieve the Sustainable Development Goals (SDGs)
    of zero hunger [2]. These projections for the near future have an impact on overall
    food demand. Because of the scarcity of water today, it is difficult to meet only
    40% of the water supply by 2030, and the unavailability of farming land will lead
    to a reduction in the food supply. As a result, the agriculture sector needs sufficient
    resources than are presently available, as well as more self-sustaining systems
    to boost cultivation percentages while reducing environmental resource use [3].
    Though it might be appropriate to reach rising demand, it is unclear how to do
    so in an equitable and resilient manner. Again, there is a vital need to accelerate
    and scale up the agricultural production transformation [4]. Agriculture 4.0 can
    provide a way to increase agricultural efficiency with the available crop area.
    It also optimizes irrigation to use limited water and energy and allocate resources
    to protect crops effectively. Those would be possible through the integration
    of environmental monitoring, forecasting, and smart devices [5]. Smart farming’s
    new technologies can enhance agricultural mechanisms, allowing cultivation to
    increase while using natural resources efficiently. Agricultural sector innovations
    are referred to as the ‘‘digital agricultural revolution”, which turns most factors
    of agriculture, ensuing in more effective, efficient, self-sustaining, integrated,
    truthful, and self-reliant agriculture. Cellular devices, sensors, data analysis,
    fog computing, information security, and intelligent systems influence how technologies
    are integrated into the agricultural sector [6]. Nowadays, agriculture is changing
    quickly as it enters a new age known as Agriculture 4.0. Agriculture 4.0 seeks
    to employ new technology and approaches to address the issues facing modern agriculture
    (such as climatic alteration, illnesses, extreme application of resources, etc.)
    and to lower risks while enhancing production efficiency and safety [7]. To do
    this, it makes extensive use of cutting-edge ICTs. In addition to this evolution,
    there is a rising trend in food needs. Given the continual evolution and the rising
    need for food, it is anticipated that the market for agriculture 4.0 will expand
    greatly in the years to come. Wireless Sensor Networks (WSNs) and Internet of
    Things (IoT) technologies are widely utilized in Agriculture 4.0 and provide farmers
    with a number of advantages, including observing numerous environmental factors
    connected to crops, spotting crop illnesses, predicting yield, and lowering labor
    costs [8]. However, the Sensor and network connectivity and communications in
    farming might act as a base factor for many types of attacks since these devices
    frequently have obsolete or unpatched firmware or software [9]. Security is a
    top priority in agriculture, and any interruption or distortion may present difficult
    problems and have disastrous outcomes. Monitoring and categorization of network
    traffic, which have attracted a lot of attention since the earliest beginnings
    of the Internet, can be crucial to preventing network assaults [10]. Scientific
    research on network traffic categorization for IoT system security has been extensive.
    It is an essential part of intrusion detection systems (IDS) and aids in the identification
    and detection of harmful network activity. This revolution in agricultural technology
    is built on having access to all the data produced by every sensor used on a farm,
    centralized via the internet, and analyzed for the best possible decision-making
    [11]. Any sensor employed generates a significant amount of data that can be extensively
    examined and provides useful information to enhance crop quality or lessen environmental
    impact. Cloud computing, physical hardware, and the IoT are the three key components
    that enable the automation and data sharing needed by this new smart agriculture
    [12]. With the help of technical improvements (drones, sensors, software, etc.),
    we can complete agricultural jobs faster and more effectively than humans. Agriculture
    4.0 must make sure that an appropriate security mechanism is implemented to avert
    an attack to build scalable and secure systems. The integrity of data is important
    for the effective functioning of information technological advances such as data
    analysis and intelligent devices [13]. Because agriculture 4.0 incorporates elements
    from conventional Internet, cellular, and wireless technologies, which may include
    all of the security risks that advancements present situation. It also addresses
    current security risks such as data and device integrity, consistency, and accessibility.
    Devices in agriculture 4.0 are implemented in outdoor spaces where they are subjected
    to external factors such as animals, human beings, or farming equipment. Unknowingly,
    these factors remove or damage sensors. Since the 6th century B.C., there has
    been a threat known as Agro terrorism [5]. This type of terrorism could have a
    variety of goals, including causing financial harm, fear, and social unrest [6,7].
    Terrorists could incite community disturbance and lack of credibility in administration
    by exploiting agricultural and food corporate crises, which can lead to undivided
    attention in the world. Cyber-agro-terrorism in agriculture 4.0 is an electronic
    system in agricultural settings to harm crops and animals while causing economic
    loss. Cyber-agro-terrorists can operate attacks on fields and through the internet,
    using cyber resources [8]. 2. Overview of Agriculture 4.0 Agriculture has gone
    through many revolutionary movements, all of which have increased the agriculture
    industry’s performance and effectiveness. Plant cultivation “in 10,000 BC” resulted
    in the birth of the world’s first societies and civilizations. Machines were used
    in the farming sector to execute work, which increased production from 1900 to
    1930. Farmers were able to use newly discovered crops and agrochemicals during
    the Green Revolution (from around the 1960s). Biotechnology facilitated the production
    of plants with previously selected attributes, with increased yield and pest resistance,
    desertification, and herbicide, from 1990 to 2000. Now, in the 21st century, digitalization
    has the potential to help humanity survive and flourish for a long time [4]. The
    world’s largest industry, agriculture, contributes significantly to both social
    stability and economic growth [13]. A growing number of studies on smart agriculture
    are driven by the task of resolving the conflict between the population increase
    and the constrained food output. The advancement of science and technology fuels
    the revolution in agriculture, which is based on both the rise in output and the
    limitations of the time [14]. Figure 1 is used to explain the features of agriculture
    development to readers (from Agriculture 1.0 to Agriculture 4.0). Figure 1. The
    uprising of Agriculture 1.0 to agriculture 4.0. Figure 1 is used to explain the
    features of agriculture development to readers (from Agriculture 1.0 to Agriculture
    4.0). Agriculture 1.0: During the conventional agricultural age (1784–1870), which
    was dominated by animal and human resources, the fundamental problem with agriculture
    was its lack of operational efficiency. Agriculture 2.0: During the automated
    agricultural period of the 20th century, resource waste was the major problem.
    Agriculture 3.0: During the period of rapid advancement of automated agriculture
    (1992–2017), the key problem was the lack of intelligence. Agriculture 4.0: the
    age of smart agriculture (which began in 2017 and is defined by unmanned operations)
    is primarily characterized by the application of contemporary information technology
    to both support and intelligently improve agriculture. The term “smart agriculture”
    [15] refers to a new approach to agriculture that personalized service through
    the integration of contemporary information technologies such as the internet,
    big data, IoT, and many more [16]. In a nutshell, the new mode is an intelligent
    agricultural solution that fuses current information technology with agriculture.
    Although recent information technology opens up new possibilities for the progress
    of agricultural output, it also places heavy demands on security and privacy in
    the context of smart agriculture and poses significant obstacles therein [17].
    More than a movement, agriculture 4.0 represents the next development in the sector’s
    transition to a more intelligent, effective, and environmentally responsible one.
    The supply chain’s daily operations produce a tremendous amount of data [18].
    Most of the time, this information went unused, but thanks to big data and new
    technology, it can now be used to boost any crop’s performance and productivity.
    2.1. Advantages of Agriculture 4.0 The effects of smart agriculture are covered
    in the following sections. Production volume: The use of smart technology in agriculture
    can significantly boost the number of products produced on the farm. This will
    contribute to feeding a growing population. Production quality: The wellness and
    nutrition of people from all socioeconomic strata in the nation can be significantly
    impacted by the quality of food produced. A country’s population will live longer
    and in better health with better food, which will improve its citizens’ economic
    contribution. Effectiveness of farming practices and resource use: The application
    of smart technologies to conventional agricultural operations can increase their
    effectiveness. In turn, this encourages more efficient use of agricultural resources.
    Ideal cost of cultivation: It is achieved when there is a balance between quantity,
    quality, and efficiency in the procedures used. This results in a higher price
    for the agricultural output that is produced. Reducing wastage: The farming industry,
    one of the main economic sectors, is in great part to blame for the massive quantities
    of food and other secondary resources that are wasted. Smart technology could
    be employed to track and cut down on this waste. Ecologically sustainable: The
    reduced agricultural waste and improved agricultural process efficiency directly
    reduce the environmental and ecological footprint. Effective use of Time: Timely
    delivery of the necessary insecticides, fertilizers, and other chemicals can provide
    timely and high-quality agricultural output with fewer losses thanks to smart
    agriculture. The farming industry may be at threat by the following while deploying
    agricultural 4.0 technology: Theft of business and customer data. Taking resources
    under the control of sensors and gadgets. Destroying the objects that devices
    control. Damage to reputation if a data breach is disclosed. Agriculture 4.0 may
    be at risk from infrastructure damage, sensor failures may affect poultry and
    cattle breeding, and control system hacks may affect greenhouse farming. All of
    these could cause problems or malfunction in agricultural operations by harming
    the IoT architecture’s hardware and software. In addition, data-collecting technologies
    face challenges from malicious assaults, unauthorized access, privacy breaches,
    and other issues. The landscape has shifted, with AI and ML research concentrating
    on agro-based contexts, water management, livestock, and farmlands. Monitoring,
    control, and decision-making alternatives in the irrigation field repeatedly tried
    to save water and enhance productivity [8,9,10,11,12,13]. Some research concentrated
    on plant leaf disease [14], horticulture [15], vineyards [16], hydroponic [17],
    alert facilities [18], integration of IoT technological innovations [19], tracking
    resources [20], and cloud control [21]. 2.2. IoT in Agriculture 4.0 Table 1 lists
    several well-known uses of IoT integration and utilization in agriculture. Table
    1. Use of IoT in agriculture and corresponding studies. Intelligent soil cultivation
    system: This system would plow, weed, prepare the seedbed, and sow the field soil
    in order to prepare it for harvest. Efficient irrigation mechanisms: This technology
    would automate the controlled artificial supply of water needed for plant growth.
    Smart fertilizer systems: These automate the application of fertilizer to a field
    while allowing for precise control over the kind, amount, and timing of fertilizer.
    Intelligent pest detection and treatment systems: These systems keep an eye out
    for pest infestations, analyze agricultural damage, and incorporate methods to
    manage the infestation. Intelligent livestock agriculture: This involves employing
    cutting-edge technologies to breed animals and uses precision agriculture to enhance
    the quantity and quality of the produce. Smart harvesting system: This system
    harvests a field effectively by using IoT-based methods. Smart farm management
    system: This kind of technology would aim to offer analytics on data to increase
    field productivity and yield. Intelligent groundwater quality management system:
    The final product is greatly influenced by the quantity and quality of the groundwater.
    As a result, this system uses IoT approaches to maintain appropriate groundwater
    levels. Though there are many smart agriculture alternatives, they are still underdeveloped
    and offer a low degree of intellect. Many initiatives are limited in their automated
    systems, with the internet of things sending data to the base station [53]. There
    is also no implementation with the Internet in several cases, except that in a
    few cases, data is stored in the cloud by the local systems. The multi-layer architecture
    of IoT used in agriculture 4.0 consists of four layers, which are the physical
    layer, network layer, edge layer, and application layer. Table 2 below gives a
    detailed description of Resources used in the multi-layered architecture of IoT
    in Agriculture 4.0 [54]. Table 2. Resources used in the multi-layered architecture
    of IoT in Agriculture 4.0. The RFID, cameras, actuators, GPS, and all these devices
    are all implemented in the physical layer, which collects data from the farming
    field and digitizes them using an Analog to Digital converter (ADC). As the equipment
    at the physical layer does not compute and store the data, this needs to connect
    with the edge layer through the network layer. The edge layer includes various
    resources such as decision-making, gateway, data filters, data security, and interfaces
    [55]. The advancement of devices and technological developments will allow for
    the incorporation of more computer capabilities into systems. This type of integration
    aims to meet the various needs of agricultural mechanization, farming techniques,
    and sustainable agriculture [56,57]. A further issue is data security. This is
    very important to focus on data privacy, the trustworthiness of data, and the
    correctness of data from generation to decision-making. 2.3. Research Motivation
    Three factors serve as inspiration for this article: Smart agriculture is a new
    paradigm that integrates information technology with conventional farming as a
    result of the low productivity of traditional agriculture and the extensive usage
    of information technology. It has the potential to become the next big thing in
    agricultural development. Consequently, it is crucial to outline the current manufacturing
    model and particular studies [58]. Despite substantial research on smart agriculture,
    less has been conducted in comparison to industrial security solutions to analyze
    security problems. It is crucial to examine the features of security concerns
    in relation to situations involving smart agriculture [59]. This article attempts
    to give a review of the security challenges raised by smart agriculture in light
    of the aforementioned variables, which inevitably results in a significant number
    of open research questions. 2.4. Research Contributions The research contributions
    of the paper are as follows: We go over the advantages of using IoT in the farming
    sector and outline some of the potential uses. We provide a layered approach for
    smart agriculture that can be applied to any precision agriculture application.
    We suggest an agricultural sensor data management system that can gather, analyze,
    visualize, and manage sensing data in real-time. We present a blockchain-based
    authenticity monitoring technique to prevent erroneous control and information
    delivery. To improve network management, we proposed a simulated switch that supports
    SDN technologies. We present experimental results with different case studies
    from an open-source IoT platform integrating Ethereum blockchain and SDN technologies,
    demonstrating the efficacy of the suggested security architecture. 2.5. Paper
    Outline In addition to the introduction, this paper mentions the overview of Agriculture
    4.0 in Section 2. Section 3 provides important security risks from a multi-layer
    perspective. Section 4 describes the current state of security research in Agriculture
    4.0. Section 5 presents the current scenario of security challenges in Agriculture
    4.0. Section 6 describes the proposed agricultural security framework. The experimental
    setup configuration and architecture along with the experimental results presented
    in Section 7. The use of 5G technology in the scenario of smart agriculture is
    described in Section 8. Finally, Section 8 concludes with future challenges in
    Agriculture 4.0. 2.6. Analytical Distribution of Referred Articles The referenced
    articles are compared in Figure 2 based on the place of publication. The distribution
    of cited articles by publication type is shown in Figure 2. Out of the total number
    of referred papers, 88 are original research articles from reputable journals,
    while 25 are from conferences. Figure 2. Types of Article distribution. The frequency
    of papers discussing the agriculture 4.0 system is depicted in Figure 3. Due to
    our interest in current technologies, we have assessed 20 papers that were published
    in 2018, out of which five articles are based on agricultural security issues.
    In contrast to the 19 research papers on the agriculture sector and security aspects
    from the year 2020 that we have cited, we have cited 18 publications from the
    year 2019. With the papers becoming publicly available from various reputable
    journals for reference, we studied 46 modern technology-based quality papers in
    smart agriculture along with articles on security challenges in 2021 and 2022.
    In order to be updated regarding the current tools and technologies in this era,
    we also referred few articles to be published in 2023. Figure 3. The total number
    of Related Research articles studied on Agriculture 4.0 and security challenges
    in Agriculture 4.0 from 2018 to 2023. 3. Agriculture 4.0 Security Threats in Multi-Layered
    Paradigm There are several security issues in agriculture 4.0, starting from Storing
    data, processing data, and transmitting it through Internet connectivity. Figure
    4 shows security risks in the intelligent agricultural system in a multi-layered
    paradigm. Security issues can be either unintentional or sometimes known. Animals,
    farm laborers, and machine tools can all easily gain access to agricultural environments
    and cause problems [55]. Most of the security threats are very common, but there
    some are unique to others who function in harsh-field environments, such as Intelligent
    Agriculture. Figure 4. Security Risks at the multi-layered paradigm of IoT in
    agriculture 4.0. 3.1. Security Risks at the Physical Layer This is primarily concerned
    with physical equipment such as sensors and actuators. Physical devices can fail
    due to unintentional or intentional human behavior, viruses, spyware, or cyber-attacks.
    Smart farming applications use a wide range of sensors and technologies, and this
    diversity opens up several security risks, including the following: Random device
    incidents: This is the unintended alteration of physical equipment that causes
    it to deviate from its normal performance. The physical equipment may be damaged
    by farm machinery, causing short- or long-term physical damage, as a result, generates
    false data and affects data accessibility. Mobile node hijacking: It is the theft
    of farm equipment such as tractors, drones, and sowing robots. Drones can indeed
    be pesticides, fertilizers sprinkling could be performed by Drone, and robots
    could do weeding detecting disease. The intruder may access and use the farm equipment
    remotely without having access permission. Fake node: An intruder introduces imitation
    or harmful nodes into the automated agriculture field to disturb the smooth functioning
    of the system [55]. This attack could be triggered by capturing a node and making
    a replica of it. This type of attack typically aims to either alter or modify
    data-shuttered devices and applications. Abnormal Measurement: It senses unusual
    observations due to data falsification, energy exhaustion, radio radiation, detection
    of various connections, extreme storms, malfunctions, or wrong inputs. Incorrect
    data can jeopardize making decisions that result in the analysis of data will
    be inaccurate, which minimizes system correctness. Sleeplessness attack: The sleeplessness
    attack sends a series of seemingly legitimate requests in order to keep the devices
    awake for prolonged life. As a result, the device’s battery runs out, and the
    device stops working [56,57]. When the devices are turned off, the observed information
    is not properly sent, jeopardizing decision-making and system efficiency. 3.2.
    Security Risks at Network Layer The objective of this layer is to send the generated
    data by the sensors from the physical layer to the most trustable computational
    unit, which is the cloud. The most common attacks, which affect the resources
    used in the network layer, are focused on [58,59]. The security risks in network
    layers are: Distributed Denial of Service (DDoS): It attempts to affect access
    to service providers by overburdening the communication link or manipulating protocol
    flaws, which cause resources, such as CPU and memory collapse [60]. Due to resource
    exhaustion brought on by a DDoS attack, the victim server is forced to block connections
    from new reliable clients. The victim server’s buffer capacity or bandwidth may
    have reached its limit of resources. The overall probability of resource scarcity
    at the target end is provided by Equation (1) [15]. 𝑃 𝐴𝑡𝑡𝑎𝑐𝑘 =1−(1− 𝑃 𝐵𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ
    )(1− 𝑃 𝑚𝑒𝑚𝑜𝑟𝑦 ) (1) where, 𝑃 𝐴𝑡𝑡𝑎𝑐𝑘 : Probability of total attack, 𝑃 𝐵𝑎𝑛𝑑𝑤𝑖𝑑𝑡ℎ
    : Probability of Consumption of bandwidth 𝑃 𝑚𝑒𝑚𝑜𝑟𝑦 : Probability of Consumption
    of memory Attacks on Data Transit: These types of attacks aim to retrieve information
    shared between network devices in order to obtain confidential information [61].
    An adversary could intercept traffic via malicious routers or man-in-the-middle
    attacks [62]. Interception of traffic reveals confidential data such as private
    keys, access credentials, or digital signatures. Attacks on Routers: They plan
    to change network routes in order to gain traffic control. Inimical nodes in IoT
    networks might attempt to reroute communicating paths during the process of transmission.
    As a result of attacks, the receiver might receive information lately, partially,
    or incorrectly, or not at all [63,64]. Malware Injection Attacks: The malware
    injection attack [34], in which malware is injected by an attacker into a connected
    computing device. This is a very common attack on smart farming. Malware is a
    very significant threat in distributed projects because it automatically spreads
    through the system, making it an appealing target for intruders. Malware damage
    comes in multiple varieties of sizes. Malware can steal data about farm material
    usage, buying information for fruits, vegetables, and farm animals, data about
    farm equipment, and so on. It could hire automated devices to form a botnet that
    would be used to commit harmful attacks under the influence of an intruder. Botnet:
    At each architectural layer of the precision farming system, there are numerous
    IoT devices. These machines are vulnerable to attack and could be taken over by
    a centralized malicious system. This results in a ‘Botnet of Things’ (BoT) [35].
    A mutant farm workforce IoT equipment that is already infected [36] is easily
    used to infect other networks via various communication links, and thus automated
    farming could become an internet of destructibility for cyber illegitimates. The
    security features are not added in many of the Precision agriculture devices,
    but still, they are used frequently for establishing adequate data security defensive
    system frameworks. 3.3. Security Risks at Edge Layer The edge contains important
    aspects that monitor, and control modules communicate with all layers and access
    resources. The physical layer’s large volumes of data can be processed locally
    rather than centralized in the cloud. The following are major edge security issues.
    Actuator control Forge: It introduces false measures of data into the system in
    order to manipulate it. Typically, the data is received by the gateway in plain
    text. Corrupted data will lead to poor decision-making. An opponent, for example,
    could inject incorrect soil moisture measurements into a smart irrigation system
    to manipulate it. Booting Attacks: Devices are vulnerable to attacks due to a
    lack of security processes during boot [37]. Memory cards and flash drive sticks,
    for example, may detect dangerous codes which run at startup [38]. Suspicious
    booting practices could launch numerous attacks on the edge with insufficient
    protection. Signature wrapping: The attacker modulates the cipher text by inserting
    a bogus element that allows you to perform a random Web Application requisition
    while identifying as an authenticated user [39]. Measure infusion Forgery: It
    is the injection of wrong specifications into a system in order to modify it.
    An attacker sends known data patterns through actuators to the cloud storage,
    which is then injected into the system through computational units. Corrupted
    data could lead to poor decision-making. Unauthorized access: The process of validating
    is a critical security component. The authentication process is a technology that
    ensures security and privacy, honesty, and accessibility [40]. Several agricultural
    practices, however, use gateways with insufficient or no access controls. Gateway-cloud
    fabrication: The cloud and the gateway are linked by ISPs or wireless connections.
    A network attacker could fabricate cloud requests by interrogating a gateway.
    The attacker could use these requests to change parameters in precision agriculture,
    control queries for sensitive services, or interpret system equipment. The cloud
    can implement security services as it has computational power. In order to ensure
    maximum system reliability, these strategies must be incorporated into the system.
    3.4. Security Risks at Application Layer This layer provides end-user assistance
    and data to process and make system decisions. This layer’s security concerns
    are application-specific, focusing on preventing data theft and ensuring privacy.
    Some of the attacks that might affect cloud services and applications are listed
    below in terms of security. Malicious scripts: Malicious scripts can deceive clients,
    infuse malicious data, access confidential material, and compromise security features.
    This type of attack is frequently carried out by cybercriminals for specific,
    economic, or political reasons. They can damage or destabilize operational processes
    by using malicious scripts, presenting unnecessary ad campaigns, and stealing
    money [41]. Phishing: It is an attack that attempts to obtain highly classified
    personal information, such as an Identity and password, fraudulently. Phishing
    typically targets end-users through fraud and sites [42]. The attacker also affects
    decision-making and internal operations in many cases. The most effective protection
    would be for users to remain vigilant while surfing the web [43]. Denial of Service
    (DoS): This threat disrupts service by overburdening traffic on the network or
    flooding the provider with repeated attempts [44]. Because of flaws in security
    setup, an attacker can launch this attack from the Web or a sub-system. 4. Security
    Threats in Modern Agriculture Farmers typically carry out the developed smart
    system initiatives in physical fields or green fields. In Agriculture 4.0, most
    efforts are focused on water processes, disease monitoring, seed production, and
    record keeping. It can be either automatically controlled or manually controlled.
    In both cases, the system monitors the environment with sensors and changes it
    with actuators. Some initiatives only digitize farms, whereas others incorporate
    industry 4.0 or IoT technologies. As an immature industry, open-field agriculture
    is the focus of this work, with security issues restricted to access control and
    web-encrypted communications. It is too difficult to execute different security
    measures in rural areas since there is a shortage of modern technical infrastructure
    and advanced technology. Many difficulties can arise if security measures are
    attempted in rural agriculture. Table 3 lists a few of the security challenges
    that are prevalent in rural locations. Table 3. Rural-Agriculture Security Issues.
    Recently most of the agriculture 4.0 projects have implemented IoT, but the security
    features in that have become disabled by default. It has been introduced that
    a server controls and manages these devices remotely via a web application. Opportunistic
    opponents did not know details about security resources. They gain unauthorized
    access to the system, insert fabricated measures, fabricate actuator controls,
    or report earlier attacks to divert the system from its normal functioning [45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64].
    The author proposed a smart watering system that remotely controls and observes
    the flow of water in the farm but is not focused on security risks to detect malicious
    attacks and unallowed access that manipulate the monitored data. To monitor the
    growing environment, ref. [65] introduce a Hydroponic Farming Ecosystem (HFE).
    It is automatically controlled, and the client can monitor the farming via a web
    interface. These automated systems require high-security concerns to detect or
    avoid random sensor incidents, weak sensors, wrong data injection, and other attacks,
    which could corrupt data and affect system reliability. Similarly, in [66], the
    author focused on creating a system for monitoring fields based on humidity, soil
    moisture, light levels, and temperature. Irrigation can be controlled manually
    or automatically via web or mobile systems. An intelligent solution for detecting
    diseases in leaves focused in [67]. By using sensor data and camera images, the
    system identifies leaf diseases. A mobile or web application is used by the end-user
    to interact with the system. This paper does not go into detail about the implementation
    of security. Similarly, ref. [68] proposed an intelligent agricultural system
    for information interchange among farm equipment. The article discusses the system’s
    construction but makes no mention of manual intervention or remote control, nor
    does it concern any security challenges. As this is a data exchange system, the
    DoS attack can affect the network layer. Ref. [69] provides NETPIE, a solution
    that gives agricultural product information. The growing environment can be controlled
    and monitored with a set of physical devices. The generated data is analyzed saved
    in a QR code, and which is then available to the customer. NETPIE does not discuss
    security resources. Ref. [51] Introduced monitoring of crop fields and watering
    using IoT, which measures data and controls data to avoid unauthorized access
    to these data but could not protect the other devices, which leads to weak security,
    which might result in a major loss. Ref. [52] Proposed a system known as SEnviro,
    which observes the crop field and detects diseases remotely. This system does
    not focus on the prediction of disease, but unauthorized access is controlled
    here. According to the relevant literature, from a security standpoint, farming
    equipment is used without security features. Furthermore, the gateway contains
    no security information. Transmission privacy or device authentication is not
    presented in any of the above-discussed systems. Access control and management
    and encryption of data need to add security technologies to Information dissemination.
    Smart agriculture is currently a convenient target for cyber criminals’ agents.
    Attacks can be motivated by a variety of factors, including an advertisement,
    intellectual, or even terrorist reasons. Terrorist groups, for example, can cause
    ecological loss to a country, economic chancers may take part in market manipulation,
    and workers can attack a range of factors [53]. 4.1. Data and Device Security
    Issues and Threats in Agriculture 4.0 As was previously mentioned, harsh environmental
    factors that can seriously harm electromechanical equipment, such as extreme heat,
    moisture, moisture, shocks, and other anomalies, have a direct impact on the agricultural
    sector [70]. The majority of these sensors are prone to failure, making it feasible
    for them to produce inaccurate data and instructions that could cause a manufacturing
    disaster [71]. Additionally, sensors and network equipment are predominance reachable.
    This poses a serious risk to farmlands since anybody with bad intentions can access
    them and corrupt or harm them to cause them to malfunction [72]. Another potential
    security concern is the online transfer of the information gathered by IoT sensors
    and other agricultural machines. Major security concern in the agriculture industry
    is security, privacy, and control [73], as farmers may incur a significant financial
    and personal loss in the event of a data breach. Ref. [74] Divides the threats
    to confidentiality into four distinct categories: Intentional data theft through
    smart platforms and applications that do not adhere to security and privacy standards;
    Internal information thefts from a stakeholder in the supply chain intended to
    harm an agri-business or a farmer; Unethical data sales intended to reduce profits
    for farmers or to harm them; and other threats. Unsupervised foreign access to
    private and sensitive information using drones, sensors, and cameras with the
    intention of utilizing them to harm farmers or jeopardize public safety [64,75].
    Every application of modern technology, IoT in agriculture, carries the aforementioned
    dangers, weaknesses, and threats. A more thorough and complex explanation of the
    risks and their sources in aspects of cyberattacks in the agro sector is provided
    in the following paragraph, which is primarily focused on illegal behavior and
    exploited vulnerabilities in ICT systems. 4.2. Cybercrime and Cybersecurity in
    Agriculture A cyber-attack on an agribusiness or food industry is increasingly
    likely today thanks to automation and the widespread use of internet-connected
    equipment, which give potential (cyber) criminals greater chances in fields that
    were previously too remote or difficult to physically access [61]. Consequently,
    a potential cyber-attack or security problem in an agricultural organization could
    have serious human or financial repercussions. This implies that pertinent security
    concerns brought about by the widespread and ongoing usage of IoT, as well as
    the emergence of agro-terrorism, require adequate attention, better equipment,
    and solutions [62]. The bulk of system operations in the agriculture sector are
    network-based, and frequently these systems are not protected from cyber threats,
    which can have substantial financial and security ramifications [76,77,78,79,80,81,82,83,84,85,86].
    Five important elements, as identified in [87], strengthen these risks in the
    agricultural sector: Increasing the farm consolidation highly depends on technology;
    The joint ventures of the food supply chains, allow manufacturers to conduct processes
    and trade products directly; Food-related technologies in intelligent markets
    depend on more components, which increases their vulnerability to errors and malfunctions.
    Effective monitoring of food-related systems, social networks, and industries
    in a safe, dynamic, and almost real-time manner is lacking, making it difficult
    to identify serious digital and security vulnerabilities that could be the root
    of significant data breaches and system defects. Due to the heightened risk of
    cybercrime, the agriculture sector may be impacted by such threats in a number
    of ways. Categorize these methods as in [84]. Threats of tampering include delivery
    disruption, confidential information interception, formula modification, and delivery
    disruption. These risks are undoubtedly closely related to the adoption and application
    of technological advancements in the agriculture and food sectors. Cooper et al.
    and Bogaardt et al. identify the following as the primary technical advancement
    areas that are commonly used in the agri-sector and contain vulnerable places
    for harmful cyber-attacks [86,87,88]: Radio Frequency Identification (RFID); wireless
    communications (such as Wi-Fi); Sensors for the infrastructure, soil, and crops;
    Drones and other unmanned aerial vehicles (UAVs); PA-specific automation solutions
    (such Real Time Kinematic Technology); Portable electronics (such as laptops,
    smartphones, and GPS trackers); Smart agriculture and vertical agriculture; The
    use of AI in conjunction with biotech and nanotech (AI). Table 4 provides a summary
    of the study performed on different attacks in agricultural 4.0 due to cyber security
    concerns. Table 4. Summary of the study performed on attacks in agricultural 4.0.
    4.3. IoT Vulnerabilities, Risks, and Threats in Agriculture IoT is made up of
    four main systems that make it possible to communicate between nodes. Sensing
    technology, IoT gateways, cloud servers, data storage, and mobile applications
    for remote control make up an IoT system. The architectures of IoT systems in
    agriculture come with current and new threats and vulnerabilities. These flaws
    can be linked to IoT device hardware and software problems, communication protocols,
    and also data processing and storage solutions (found, for example, in cloud infrastructures,
    data centers, and smartphones) [2,11]. According to [99,100,101], the following
    is a concise but accurate classification of the primary causes of low security
    in the IoT: Firmware that is not patched and/or default passwords that have been
    used for a long time allow for device compromise in an IoT network. Because of
    the limited computing power of smart devices and vendors’ efforts to keep their
    prices low in a cutthroat market, it is difficult to incorporate complicated cryptographic
    algorithms. Flaws in the routing protocols used by smart devices (such as Bluetooth
    and ZigBee); The Wi-Fi Protected Access (WPA) protocol’s outdated, low-security
    version, which is frequently still in use; Conducting passive vulnerability detection
    using search engines; The risk of assembling millions of smart devices into a
    potent botnet (such as Mirai), given how simple it is to find vulnerabilities
    via internet scanning; A general disregard for the security of smart gadgets Finally,
    a variety of criteria can be used to categorize IoT vulnerabilities, hazards,
    and threats. These risks apply to all IoT applications, including those in the
    agricultural sector. First, internal vs. external risks and passive vs. active
    risks are the two basic classification groups of security concerns in IoT systems
    in the agriculture sector [79]. IoT hazards are categorized in another intriguing
    way using a layer-based system. According to [22], each of the levels below integrates
    many technologies that could lead to a variety of security threats, vulnerabilities,
    and/or breaches. The application layer, middleware layer, internet layer, access
    gateway layer, and edge technology layer are the five main layers that make up
    the IoT architecture. 5. Existing Research on Security in Agriculture 4.0 In [54],
    the author states that The United States Department of Homeland Security issued
    a report emphasizing the significance of agriculture 4.0 and the associated internet
    security threat and possible attacks. The report emphasizes the information security
    model of confidential information, credibility, and accessibility in farming.
    The researchers of [55] suggested a new access control solution that combines
    session keys and public keys to speed up the encrypted communications tasks. It
    yields quick and lightweight appropriate control measures that are ideal for precision
    agriculture communication. Ref. [56] Proposed a framework for understanding vulnerabilities
    in emerging technologies and their application in an intelligent farming environment.
    The goal of the approach is to determine the level to which intelligent farming
    emerging innovations are prone to cyber. It assesses the threat prediction model
    using the common vulnerability scoring system (CVSS). Nowadays, The Blockchain
    is not only used in cryptocurrency but also utilized in other fields and different
    applications such as in the medical sector, agriculture sector, etc. [57,58,59].
    This article concentrated on the application of blockchain technology to food
    safety. For tracking and monitoring the food items and stages of production, such
    as cultivation/breeding, raw resources, processing, transporting, warehousing,
    and selling, the author developed a system [60]. In addition, the system employs
    a variety of sensor-based equipment to adopt sustainable recording and confirmation
    with sensor-based verification. Ref. [61] Proposed a blockchain-based easy and
    simple security framework for smart Greenfield farming. Each IoT node can nominate
    the cluster member’s leader, which helps to avoid a hot spot problem if an intruder
    focuses on the leader node. Furthermore, the authors discussed the security risks
    of their suggested scheme, which adhered to the traditional confidentiality, integrity,
    and availability principles. Ref. [62] proposed a cost-effective IoT-based security
    monitoring system. The physical layer is the primary concern of this system of
    precision agriculture, where data are collected from sensors. These data are sent
    to a controller, which analyses it to take action, such as activating the actuators
    for water sprinklers on farms. Table 5 describes some of the recent research which
    has already been performed on security issues related to smart farming. Gupta,
    M et al. explained [102] the necessity of clouds applied in vehicles in this time-
    and location-sensitive context and present an extended access control oriented
    (E-ACO) architecture that is pertinent to IoV. Here, they describe using scenarios
    to highlight access control needs in our vision of cloud-assisted connected automobiles
    and vehicular IoT, as well as approaches to various access control models that
    may be applied at different tiers of the E-ACO architecture and in the authorization
    framework. Gupta, M et al. [103], in their work, describe an edge infrastructure-based
    solution to V2V and V2I communication that is safe and trustworthy in place of
    direct peer-to-peer connection. To approve, check, and verify the authenticity,
    integrity, and anonymity of communications sent in the system, they add trusted
    cloudlets in this section. Along with a proof of concept implementation of the
    suggested approach on the AWS IoT platform, they also describe a formal attribute-based
    model for V2V and V2I communication, known as AB-ITS. This cloudlet-supported
    architecture supports crucial use cases such as an accident or ice-threat warning
    and other safety applications. It supplements direct V2V or V2I communication.
    Sontowski, S. et al. [104] presented a DoS attack that can impair a smart farm’s
    operation by interfering with the functioning of installed on-field sensors. They
    specifically covered a Wi-Fi de-authentication attack that makes use of flaws
    in IEEE 802.11, where the management packets are not encrypted. A development
    board for the ESP8266 maker focus When a Raspberry Pi is attached, WiFi Deauther
    Monster is used to disconnect it from the network and stop sensor data from being
    transferred to a distant cloud. The notion of Activity-Centric Access Control
    (ACAC) for smart and connected ecosystems was first proposed by Gupta, M. et al.
    in [105] and discussed in this article as a first step. Here, they examined the
    idea of activity with regard to cooperative and dispersed yet interconnected systems,
    identifying the many parties involved as well as the crucial elements to consider
    when making an activity control choice. They provide an initial framework for
    developing activity control expressions that may be used by various smart objects
    in the system. The biggest obstacle to the growth of cloud computing is security
    worries. Information security continues to have an impact on the market even though
    it raises inconveniences related to information security. The threat of security
    breaches in the cloud infrastructure must be understood by clients. Cloud-computing
    capacity, networking, and computing powers are brought to the edge by fog computing.
    One of the most critical challenges with fog computing platforms is safety and
    security. Lightweight devices have benefited greatly from edge computing’s ability
    to complete difficult tasks quickly, but the technology’s hasty development has
    led to a general disregard for safety risks in edge computing stages and the applications
    they allow. In our proposed framework we have focused on the threats in fog computing-based
    IoT environment via blockchain for the application in agriculture 4.0. Table 5.
    Related Research performed on Security issues in Agriculture 4.0.               6.
    Proposed Security Framework The proposed security framework for agriculture 4.0
    is described in this section. The block diagram of the proposed security framework
    is illustrated in Figure 5. Figure 5. Proposed Security Framework. 6.1. Sensor
    Layer in Agriculture 4.0 This layer’s major function is to acquire meaningful
    information from the external environment via sensors to take required action
    against it. This sensor layer has a variety of Sensor nodes of various forms and
    sizes. As a result, they all use the same basic components, such as input and
    output components, information handling units, communication segments, and many
    more units for the management of power sections. To analyze and store all detected
    data, it is sent to the relevant fog nodes. Furthermore, Sensor nodes receive
    instructions to undertake agricultural operations. 6.2. Fog Computing Layer This
    layer is made up of multiple fog nodes, which are insubstantial equipment that
    carry out processing, communication, and storing tools to do operations that an
    end device cannot perform. Not every piece of data that is gathered becomes processed
    on the cloud. Rather, this layer hosts all authentic analysis and latency-sensitive
    applications. Virtualization: Recognizing that configuring several devices, in
    the same manner, might be time-consuming, the nodes can be contained inside a
    Virtualized environment for a more pleasant setup for all subsequent fog nodes.
    Agricultural Sensor data monitoring: This node is going to collect real-time sensing
    data, analyze it, visualize it, manage devices, and store some of it locally.
    The user can obtain information from the fog layer while smoothly synchronizing
    cloud-directed data. Block-chain Client software: This consists of a piece of
    programs that is installed on the fog node. Its primary goal is to sync authentic
    sensitive Sensor data to the Blockchain. It is in charge of producing transactions,
    batching them, and sending them to the validator so that they can be aggregated
    into blocks and recorded to the Blockchain. Simulated Switch: Additionally, this
    node is used as a transmitting device with the support of virtual switch software,
    which provides NFV and SDN technologies to enhance network services by establishing
    the routing features for computational extension and control. Some network virtual
    functions include security, quality of service (QoS), and automated control. The
    main objective is to create switching layers for virtual machine environments
    while continuing to support the OpenFlow protocol [107], which allows this node
    to interact directly with the SDN Controller; an outstanding demonstration of
    such implementation is Open vSwitch, an interactive multilayered software switch.
    6.3. Distributed Network Using SDN This network is made up of numerous geologically
    dispersed and SDN controllers linked to it that operates as a common Networking
    Operating System (NOS), combining nominally autonomous operations with centralized
    control [108]. The main component of an SDN network is the SDN controller. This
    can help with network monitoring by managing all transactions among network and
    application devices, allowing it to manage and adjust network flows more efficiently
    in response to new requirements [109]. It maintains a consistent glimpse of the
    network from afar, delivering data to fog nodes via one APIs and application via
    other APIs (MQTT, CoAP...) [109]. In addition, the SDN controller employs a Block-chain
    contractor to properly secure flow tables of SDN in the Block-chain, hence avoiding
    rule counterfeit. 6.4. Block-Chain Based Network To keep all the nodes up to date,
    all Blockchain modules are interconnected and constantly exchange the most updated
    information in the Blockchain among themselves. Smart contracts will trigger and
    enforce relevant actions based on the data provided, allowing for verifiable transactions
    in the Blockchain when such circumstances are met without the requirement for
    third-party involvement [110,111]. The Ethereum Blockchain platform serves as
    the foundation for the blockchain network architecture because it provides a highly
    flexible and modular design that separates the runtime environment as per the
    application domain, permitting agreements to define the business rules for the
    application that are not necessary for the core system’s fundamental design. The
    Blockchain complete node is made up of the following components: Node for Validation:
    This is a key component that verifies batches of transactions before combining
    them into blocks. It also ensures that candidate blocks are added to the Blockchain
    version for each node. Blockchain Software: it determines which transactions or
    operations are permitted on the block-chain and contains the following: Database
    model: it defines relevant operations and the description of the transaction’s
    payload. Transaction Processor: defines the business logic for different applications,
    validates batches of transactions, and modifies the blockchain system based on
    the application’s rules. Client: it specifies the service client functionality,
    which the client develops and delivers to the validator. The client also shows
    blockchain information. REST API: This protocol is used to communicate within
    the clients and the transactions processing system. Digital Signature: To ensure
    transaction integrity, the data used in the transactions is hashed using SHA-256
    and then encrypted using the sender’s secret key to produce a signature. The processor
    then validates the transaction by verifying this signature. 7. Case Studies and
    Experimental Results To test the security framework, we allowed DDoS attacks against
    the Blockchain Network. A distributed denial-of-service (DDoS) attack targets
    websites and servers by disrupting network services. A DDoS attack attempts to
    exhaust an application’s resources. We provide an experimental setup configuration
    shown in Table 6, as well as the simulation architecture is shown in Figure 6.
    Figure 6. Experimental Setup Architecture. Table 6. Experimental Setup Configuration.
    Host Machine (HM): Here we have installed an open-source based IoT framework called
    ThingsBoard, which make it possible to construct fog layers while seamlessly syncing
    with the cloud, on the host system and constructed a scenario of a smart farm
    with two silos, each with a different number of IoT devices. Every second, each
    gadget reports a pseudo-random value. We utilized a code to simulate a Blockchain
    client, which accepts the provided values and generates transactions. Mininet
    network emulation tool is then used to commit the transaction onto the Blockchain
    via the Open vSwitch module. We also connected the ONOS SDN controller and sFlow4
    collector to the Mininet virtual network. Virtual Machine (VM): We have installed
    the Ethereum Blockchain network and its Supply Chain AssetTrack application in
    the Virtual Machine. To keep records of their updated information, we formed a
    user for the host system (fog node) and various assets. Every reported value will
    be used by the blockchain client to update the specified asset in the Ethereum
    blockchain. To put our framework architecture to the test, we conducted three
    case studies. Case 1: We examined the platform’s usual workflow, which means we
    did not conduct any attacks on the Ethereum blockchain. Case 2: Using the Hping
    programme on the host PC, we launched a DDoS assault on the Blockchain network.
    We implemented a DDoS mitigation programme on the SDN controller. Case 3: We launched
    a DDoS attack against the Blockchain network, by turning off the DDoS mitigation
    programme in the SDN controller. During the simulation, we noticed two crucial
    metrics in each case: The number of network packets received by the Blockchain
    per minute. The number of transactions published in the Blockchain network. The
    results are shown in Figure 7 and Figure 8, respectively. Taking the case 1 findings
    as ideal, with 120 published transactions in 10 min at an average of 100 Kbps;
    the third scenario revealed a really dismal performance with about 45 published
    transactions, representing a loss of more than 60% compared to the 1st case, and
    an unreliable Blockchain network. To understand the outcomes of the second scenario,
    we must first recognize what took place in the network during the test. The Open
    vSwitch sends all network traffic data to the sFlow forecast system, a real-time
    reporting system that gives real-time notice of network assaults, involving attackers
    and target information, to the SDN controller security framework via commands.
    The SDN controller interacts with the switch to discard DDoS traffic while allowing
    valid traffic to continue through. The attack is stopped fast enough to prevent
    it from rapidly growing and resulting in 95 blocks published, which is approximately
    40% more than the 3rd case. Figure 7. Number of packets received by Blockchain
    per minute. Figure 8. Number of transactions published in Blockchain per minute.
    8. Smart Agriculture 5.0 With 100 times faster upload and download speeds than
    “fourth generation of mobile technology (4G)” and “fourth-generation long-term
    evolution (4GLTE)” technologies and latencies as low as 1 ms, the “5th generation
    mobile network (5G)” is a new technology for wireless that can connect a million
    gadgets per square kilometer. In order to exchange data effectively, the millions
    of smart gadgets that make up the precision agricultural networks must be connected
    to one another over a given piece of land. Therefore, the Agriculture 4.0 scenario
    is particularly well adapted to 5G technology [112,113,114]. A framework for the
    digitization of agriculture networks and function modules for an intelligent irrigation
    system was provided by Meng and Cheng [115]. Tao and Donglin [116] also investigated
    how 5G technology may be used for agricultural planting, livestock farming, and
    traditional farming growth [117,118,119,120,121]. 9. Conclusions Modernization
    of agricultural methods is required to increase productivity levels while conserving
    nature. Precision agriculture could improve farming works by controlling actuators
    more efficiently, enhancing the use of resources, increasing revenues, and minimizing
    expenses. In order to accomplish this objective, IoT technologies have to incorporate
    more computing performance, such as edge computing, big data handling, automated
    resources, and safety features. As limited devices sense a huge amount of data
    and forward it to the gateway or the cloud, security requires special attention.
    The data must be secured throughout the agricultural system, from diagnosis to
    risks and inventory. Even though numerous security issues may affect farming production,
    they still include a few security measures. This could be because these technologies
    were in their initial phases of development. For most of the points, only computing
    resources are incorporated, and that has limited computation power. As a result,
    security mechanisms are very rare in the current list of requirement specifications.
    Reaching a higher level of agricultural development, on the other hand, necessitates
    technologies with security features that provide enough quality and validity to
    incorporate these technologies on a high level. As precision agriculture introduces
    new complexities, it also opens up new future directions in security and other
    areas. In this study, we suggested a security framework for the agricultural internet
    of things that integrates blockchain technology, fog computing, and software-defined
    networking. The suggested architecture avoids the requirement for simulation-based
    work with both private and public blockchain for communication between SDN controllers
    and IoT devices. Here, for IoT connectivity, each SDN controller is linked to
    a blockchain. SDN controllers are interconnected by a network’s topology. One
    of the key objectives of the proposed architecture is to enhance communication
    security for IoT devices. For IoT devices with limited resources, distributed
    trust-based verification makes blockchain even more useful. With a focus on fixing
    security and data reliability issues in a distributed controller context. Additionally,
    we want to increase the accuracy of our system using machine learning methods.
    It might be significant to add an intrusion detection system utilizing various
    deep learning algorithms in future work to prevent the insertion of fake Sensor
    data in the intelligent agricultural field. Author Contributions Conceptualization,
    S.P., S.D. and S.R.; methodology, S.P., M.A. (Majed Alowaidi), S.D. and P.P.M.;
    software, S.P., S.R., M.A. (Majed Alowaidi), P.P.M. and H.A.; validation, M.A.
    (Mohamed Alshehri), S.R. and H.A.; formal analysis, S.P., S.D., M.A. (Mohamed
    Alshehri) and P.P.M.; writing—original draft preparation, S.P., S.D. and P.P.M.;
    writing—review and editing, M.A. (Mohamed Alshehri), S.R. and H.A. All authors
    have read and agreed to the published version of the manuscript. Funding The author
    would like to thank Deanship of Scientific Research at Majmaah University for
    supporting this work under Project Number No. R-2023-67. Institutional Review
    Board Statement Not applicable. Informed Consent Statement Not applicable. Data
    Availability Statement Research data are not shared. Conflicts of Interest The
    authors declare that they have no conflict of interest. References Vangala, A.;
    Sutrala, A.K.; Das, A.K.; Jo, M. Smart Contract-Based Blockchain-Envisioned Authentication
    Scheme for Smart Farming. IEEE Internet Things J. 2021, 8, 10792–10806. [Google
    Scholar] [CrossRef] Abbasi, R.; Martinez, P.; Ahmad, R. The digitization of agricultural
    industry–a systematic literature review on agriculture 4.0. Smart Agric. Technol.
    2022, 2, 100042. [Google Scholar] [CrossRef] Akinwumi, S.A.; Ezenwosu, A.C.; Omotosho,
    T.V.; Adewoyin, O.O.; Adagunodo, T.A.; Oyeyemi, K.D. Arduino Based Security System
    using Passive Infrared (PIR) Motion Sensor. In IOP Conference Series: Earth and
    Environmental Science; IOP Publishing: Bristol, UK, 2021; Volume 655, p. 012039.
    [Google Scholar] Albiero, D.; Paulo, R.L.D.; Félix Junior, J.C.; Santos, J.D.S.G.;
    Melo, R.P. Agriculture 4.0: A terminological introduction. Rev. Ciência Agronômica
    2021, 51, e20207737. [Google Scholar] [CrossRef] Altalak, M.; Ammad uddin, M.;
    Alajmi, A.; Rizg, A. Smart Agriculture Applications Using Deep Learning Technologies:
    A Survey. Appl. Sci. 2022, 12, 5919. [Google Scholar] [CrossRef] Andrade, R.;
    Ontaneda, N.; Silva, A.; TelloOquendo, L.; Cadena, S.; Quiroz, D.; Fuertes, W.;
    Nacional, E. Application of Big Data Analytic in Cybersecurity. In Proceedings
    of the 2019 International Conference on Applied Cognitive Computing, Las Vegas,
    NV, USA, 29 July–1 August 2020. [Google Scholar] [CrossRef] Catalano, C.; Paiano,
    L.; Calabrese, F.; Cataldo, M.; Mancarella, L.; Tommasi, F. Anomaly detection
    in smart agriculture systems. Comput. Ind. 2022, 143, 103750. [Google Scholar]
    [CrossRef] Dash, S.; Panda, R.; Padhy, S. Blockchain-based intelligent medical
    IoT healthcare system. SPAST Abstr. 2021, 1, 2190. Available online: https://spast.org/techrep/article/view/2190
    (accessed on 22 April 2022). Ferrag, M.A.; Shu, L.; Djallel, H.; Choo, K.K.R.
    Deep learning-based intrusion detection for distributed denial of service attack
    in Agriculture 4.0. Electronics 2021, 10, 1257. [Google Scholar] [CrossRef] Boghossian,
    A.; Linsky, S.; Brown, A.; Mutschler, P.; Ulicny, B.; Barrett, L. Threats to Precision
    Agriculture; Technical Report; US Department of Homeland Security: Washington,
    DC, USA, 2018; p. 20181003a. [Google Scholar] [CrossRef] Shu, L.; Hancke, G.P.;
    Abu-Mahfouz, A.M. Guest Editorial: Sustainable and Intelligent Precision Agriculture.
    IEEE Trans. Ind. Inform. 2021, 17, 4318–4321. [Google Scholar] [CrossRef] Javaid,
    M.; Haleem, A.; Singh, R.P.; Suman, R. Enhancing smart farming through the applications
    of Agriculture 4.0 technologies. Int. J. Intell. Netw. 2022, 3, 150–164. [Google
    Scholar] [CrossRef] Gzar, D.A.; Mahmood, A.M.; Al-Adilee, M.K.A. Recent trends
    of smart agricultural systems based on Internet of Things technology: A survey.
    Comput. Electr. Eng. 2022, 104, 108453. [Google Scholar] [CrossRef] Charatsari,
    C.; Lioutas, E.D.; Papadaki-Klavdianou, A.; Michailidis, A.; Partalidou, M. Farm
    advisors amid the transition to Agriculture 4.0: Professional identity, conceptions
    of the future and future-specific competencies. Sociol. Rural. 2022, 62, 335–362.
    [Google Scholar] [CrossRef] Singh, K.J.; De, T. Mathematical modelling of DDoS
    attack and detection using correlation. J. Cyber Secur. Technol. 2017, 1, 175–186.
    [Google Scholar] [CrossRef] Raj, M.; Gupta, S.; Chamola, V.; Elhence, A.; Garg,
    T.; Atiquzzaman, M.; Niyato, D. A survey on the role of Internet of Things for
    adopting and promoting Agriculture 4.0. J. Netw. Comput. Appl. 2021, 187, 103107.
    [Google Scholar] [CrossRef] Benavides, E.; Fuertes, W.; Sanchez, S.; Sanchez,
    M. Classification of phishing attack solutions by employing deep learning techniques:
    A systematic literature review. Dev. Adv. Def. Secur. 2020, 152, 51–64. [Google
    Scholar] [CrossRef] Singh, R.K.; Berkvens, R.; Weyn, M. AgriFusion: An Architecture
    for IoT and Emerging Technologies Based on a Precision Agriculture Survey. IEEE
    Access 2021, 9, 136253–136283. [Google Scholar] [CrossRef] Bernhardt, H.; Bozkurt,
    M.; Brunsch, R.; Colangelo, E.; Herrmann, A.; Horstmann, J.; Kraft, M.; Marquering,
    J.; Steckel, T.; Tapken, H.; et al. Challenges for Agriculture through Industry
    4.0. Agronomy 2021, 11, 1935. [Google Scholar] [CrossRef] Bolfe, E.L.; Jorge,
    L.A.C.; Sanches, I.D.; Júnior, A.L.; Costa, C.C.D.; Victoria, D.C.; Inamasu, R.Y.;
    Grego, C.R.; Ferreira, V.R.; Ramirez, A.R. Precision and digital agriculture:
    Adoption of technologies and perception of Brazilian farmers. Agriculture 2021,
    10, 653. [Google Scholar] [CrossRef] Chae, C.-J.; Cho, H.-J. Enhanced secure device
    authentication algorithm in P2P-based smart farm system. Peer-Peer Netw. Appl.
    2018, 11, 1230–1239. [Google Scholar] [CrossRef] Khalid, H.; Ikram, U.D.; Ahmad,
    A.; Naveed, I. An energy efficient and secure IoT-based wsn framework: An application
    to smart agriculture. Sensors 2020, 20, 2081. [Google Scholar] [CrossRef] Hassija,
    V.; Chamola, V.; Saxena, V.; Jain, D.; Goyal, P.; Sikdar, B. A survey on IoT security:
    Application areas, security threats, and solution architectures. IEEE Access 2019,
    7, 82721–82743. [Google Scholar] [CrossRef] Infosys Precision Crop Management
    Testbed. 2021. Available online: https://www.infosys.com/industries/agriculture/industry-offerings/precision-farming.html
    (accessed on 17 May 2022). West, J. A prediction model framework for cyber-attacks
    to precision agriculture technologies. J. Agric. Food Inf. 2018, 19, 307–330.
    [Google Scholar] [CrossRef] Jha, S.; Routray, S.; Ahmad, S. An expert system-based
    IoT system for minimisation of air pollution in developing countries. Int. J.
    Comput. Appl. Technol. 2022, 68, 277–285. [Google Scholar] [CrossRef] Rao, R.N.;
    Sridhar, B. IoT Based Smart Crop-Field Monitoring and Automation Irrigation System.
    In Proceedings of the 2018 2nd International Conference on Inventive Systems and
    Control (ICISC), Coimbatore, India, 19–20 January 2018; IEEE: Toulouse, France,
    2018; pp. 478–483. [Google Scholar] [CrossRef] Li, T.; Li, D. Prospects for the
    application of 5g technology in agriculture and rural areas. In Proceedings of
    the 2020 5th International Conference on Mechanical, Control and Computer Engineering
    (ICMCCE), Harbin, China, 25–27 December 2020; pp. 2176–2179. [Google Scholar]
    [CrossRef] Muragijimana, E.; Shankar, T.N.; Kumar, N.; Sah, B.; Padhy, S. Digital
    Crimes in Cloud Environment and the Analysis via Blockchain. In Proceedings of
    the 2022 IEEE 3rd Global Conference for Advancement in Technology (GCAT), Bangalore,
    India, 7–9 October 2022; pp. 1–6. [Google Scholar] [CrossRef] Lioutas, E.D.; Charatsari,
    C. Innovating digitally: The new texture of practices in agriculture 4.0. Sociol.
    Rural. 2022, 62, 250–278. [Google Scholar] [CrossRef] Lorencowicz, E.; Uziak,
    J. Selected Problems on Data Used in Precision Agriculture. In International Symposium
    on Farm Machinery and Processes Management in Sustainable Agriculture; Springer:
    Cham, Switzerland, 2023; pp. 217–226. [Google Scholar] Ferrag, M.A.; Shu, L.;
    Yang, X.; Derhab, A.; Maglaras, L. Security and privacy for green IoT-based agriculture:
    Review, blockchain solutions, and challenges. IEEE Access 2020, 8, 32031–32053.
    [Google Scholar] [CrossRef] Gupta, M.; Abdelsalam, M.; Khorsandroo, S.; Mittal,
    S. Security and Privacy in Smart Farming: Challenges and Opportunities. IEEE Access
    2020, 8, 34564–34584. [Google Scholar] [CrossRef] Shankar, T.N.; Padhy, S.; Ch,
    S.M.; Ravella, H.; Varun, M.; Kumar, N. Development of 6G web by Multilayer Perceptron
    in C-RAN for VANETs. In Proceedings of the IEEE Global Conference on Computing,
    Power and Communication Technologies, GlobConPT, New Delhi, India, 23–25 September
    2022. [Google Scholar] [CrossRef] Ganeshkumar, C.; David, A. Digital Information
    Management in Agriculture—Empirical Analysis. In Proceedings of the Third International
    Conference on Information Management and Machine Intelligence, Rajasthan, India,
    23–24 December 2021; Springer: Singapore, 2023; pp. 243–249. [Google Scholar]
    García, L.; Parra, L.; Jimenez, J.M.; Lloret, J.; Lorenz, P. IoT-based smart irrigation
    systems: An overview on the recent trends on sensors and IoT systems for irrigation
    in precision agriculture. Sensors 2020, 20, 1042. [Google Scholar] [CrossRef]
    [PubMed] Srivastava, J.; Routray, S.; Ahmad, S.; Waris, M.M. Internet of Medical
    Things (IoMT)-based smart healthcare system: Trends and progress. Comput. Intell.
    Neurosci. 2022. [Google Scholar] [CrossRef] Srivastava, J.; Routray, S. AI Enabled
    Internet of Medical Things Framework for Smart Healthcare. In Proceedings of the
    Innovations in Intelligent Computing and Communication: First International Conference,
    ICIICC 2022, Bhubaneswar, Odisha, India, 16–17 December 2022; Springer International
    Publishing: Cham, Switzerland, 2023; pp. 30–46. [Google Scholar] Rajasoundaran,
    S.; Prabu, A.V.; Routray, S.; Kumar, S.S.; Malla, P.P.; Maloji, S.; Mukherjee,
    A.; Ghosh, U. Machine learning based deep job exploration and secure transactions
    in virtual private cloud systems. Comput. Secur. 2021, 109, 102379. [Google Scholar]
    [CrossRef] Dash, S.; Padhy, S.; Azad, S.M.A.K.; Nayak, M. Intelligent IoT-Based
    Healthcare System Using Blockchain. Ambient Intelligence in Health Care. Smart
    Innovation, Systems and Technologies; Springer: Singapore, 2023; Volume 317. [Google
    Scholar] [CrossRef] Maffezzoli, F.; Ardolino, M.; Bacchetti, A.; Perona, M.; Renga,
    F. Agriculture 4.0: A systematic literature review on the paradigm, technologies
    and benefits. Futures 2022, 142, 102998. [Google Scholar] [CrossRef] Mahadik,
    S.; Pawar, P.M.; Muthalagu, R. Efficient Intelligent Intrusion Detection System
    for Heterogeneous Internet of Things (HetIoT). J. Netw. Syst. Manag. 2022, 31,
    2. [Google Scholar] [CrossRef] Mahalakshmi, M.; Priyanka, S.; Rajaram, S.P.; Rajapriya,
    R. Distant Monitoring and Controlling of Solar Driven Irrigation System through
    IoT. In Proceedings of the 2018 National Power Engineering Conference (NPEC),
    Madurai, India, 9–10 March 2018; IEEE: Toulouse, France, 2018; pp. 1–5. [Google
    Scholar] [CrossRef] Manesh, M.R.; Kenney, J.; Hu, W.C.; Devabhaktuni, V.K.; Kaabouch,
    N. Detection of GPS spoofing attacks on unmanned aerial systems. In Proceedings
    of the 2019 16th IEEE Annual Consumer Communications & Networking Conference (CCNC),
    Las Vegas, NV, USA, 11–14 January 2019; IEEE: Toulouse, France, 2019; pp. 1–6.
    [Google Scholar] [CrossRef] Manjunath, M.; Venkatesha, G.; Dinesh, S. Raspberry
    Pi Based Anti-Theft Security System using Home Automation for Multi-Level Authentication.
    Perspect. Commun. Embed.-Syst. Signal-Process.-PiCES 2021, 4, 249–253. [Google
    Scholar] Routray, S.; Ray, A.K.; Mishra, C.; Palai, G. Efficient hybrid image
    denoising scheme based on SVM classification. Optik 2018, 157, 503–511. [Google
    Scholar] [CrossRef] McCaig, M.; Rezania, D.; Dara, R. Framing the response to
    IoT in agriculture: A discourse analysis. Agric. Syst. 2023, 204, 103557. [Google
    Scholar] [CrossRef] Qureshi, T.; Saeed, M.; Ahsan, K.; Malik, A.A.; Muhammad,
    E.S.; Touheed, N. Smart Agriculture for Sustainable Food Security Using Internet
    of Things (IoT). Wirel. Commun. Mob. Comput. 2022, 2022, 9608394. [Google Scholar]
    [CrossRef] Rajasoundaran, S.; Prabu, A.; Routray, S.; Malla, P.P.; Kumar, G.S.;
    Mukherjee, A.; Qi, Y. Secure routing with multi-watchdog construction using deep
    particle convolutional model for IoT based 5G wireless sensor networks. Comput.
    Commun. 2022, 187, 71–82. [Google Scholar] [CrossRef] Roy, S.K.; De, D. Genetic
    Algorithm based Internet of Precision Agricultural Things (IopaT) for Agriculture
    4.0. Internet Things 2022, 18, 100201. [Google Scholar] [CrossRef] Martinho, V.J.P.D.;
    Cunha, C.A.D.S.; Pato, M.L.; Costa, P.J.L.; Sánchez-Carreira, M.C.; Georgantzís,
    N.; Rodrigues, R.N.; Coronado, F. Machine Learning and Food Security: Insights
    for Agricultural Spatial Planning in the Context of Agriculture 4.0. Appl. Sci.
    2022, 12, 11828. [Google Scholar] [CrossRef] Mourato, J.; Ferreira, L.P.; Sá,
    J.C.; Silva, F.J.; Dieguez, T.; Tjahjono, B. Improving internal logistics of a
    bus manufacturing using the lean techniques. Int. J. Prod. Perform. Manag. 2020,
    70, 1930–1951. [Google Scholar] [CrossRef] Guarda, T.; Augusto, M.F.; Lopes, I.
    The Art of Phishing. In Proceedings of the International Conference on Information
    Technology & Systems, Cairo, Egypt, 24–26 March 2019; Springer: Cham, Switzerland,
    2019; pp. 683–690. [Google Scholar] [CrossRef] Colezea, M.; Musat, G.; Pop, F.;
    Negru, C.; Dumitrascu, A.; Mocanu, M. CLUeFARM: Integrated web-service platform
    for smart farms. Comput. Electron. Agric. 2018, 154, 134–154. [Google Scholar]
    [CrossRef] Sarma, R.; Barbhuiya, F.A. Internet of Things: Attacks and Defences.
    In Proceedings of the 2019 7th International Conference on Smart Computing & Communications
    (ICSCC), Sarawak, Malaysia, 28–30 June 2019; IEEE: Toulouse, France, 2019; pp.
    1–5. [Google Scholar] [CrossRef] De Souza, T.T.A.; de Oliveira, C.C.; Abe, J.M.;
    Aharari, A.; Nakamatsu, K. Paraconsistent Artificial Neural Network Applied to
    Agribusiness. Smart Innov. Syst. Technol. 2021, 183, 19–28. [Google Scholar] [CrossRef]
    Demestichas, K.; Peppes, N.; Alexakis, T. Survey on security threats in agricultural
    IoT and smart farming. Sensors 2020, 20, 6458. [Google Scholar] [CrossRef] [PubMed]
    Kumar, L.S.; Ahmad, S.; Routray, S.; Prabu, A.V.; Alharbi, A.; Alouffi, B.; Rajasoundaran,
    S. Modern Energy Optimization Approach for Efficient Data Communication in IoT-Based
    Wireless Sensor Networks. Wirel. Commun. Mob. Comput. 2022, 2022, 7901587. [Google
    Scholar] [CrossRef] Scuderi, A.; Foti, V.T.; Timpanaro, G. The supply chain value
    of pod and pgi food products through the application of blockchain. Qual. Access
    Success 2019, 20, 580–587. [Google Scholar] Dey, D.; Sizan, N.S.; Mia, M. GreenFarm:
    An IoT-Based Sustainable Agriculture with Automated Lighting System. In Proceedings
    of the International Conference on Innovative Computing and Communications, Delhi,
    India, 17–18 February 2023; Springer: Singapore, 2023; pp. 517–528. [Google Scholar]
    Di Modica, G.; Gulino, S.; Tomarchio, O. IoT fault management in cloud/fog environments.
    In Proceedings of the 9th International Conference on the Internet of Things,
    Bilbao, Spain, 18 September 2019; pp. 1–4. [Google Scholar] [CrossRef] Dibirov,
    A. Approaches to Modeling the Machine and Tractor Fleet of an Agricultural Organization
    in the Conditions of Digitalization. In Agriculture Digitalization and Organic
    Production; Springer: Singapore, 2023; pp. 339–350. [Google Scholar] Food and
    Agriculture Organization of the United Nations—FAO. Strengthened Global Partnerships
    Are Needed to End Hunger and Malnutrition. 2019. Available online: http://www.fao.org/news/story/en/item/1194310/icode/
    (accessed on 20 August 2022). Food and Agriculture Organization. The State of
    Agricultural Commodity Markets 2020. In Agricultural Markets and Sustainable Development:
    Global Value Chains, Smallholder Farmers and Digital Innovations; Food and Agriculture
    Organization: Rome, Italy, 2020. [Google Scholar] Paul, K.; Chatterjee, S.S.;
    Pai, P.; Varshney, A.; Juikar, S.; Prasad, V.; Bhadra, B.; Dasgupta, S. Viable
    smart sensors and their application in data driven agriculture. Comput. Electron.
    Agric. 2022, 198, 107096. [Google Scholar] [CrossRef] Klerkx, L.; Begemann, S.
    Supporting food systems transformation: The what, why, who, where and how of mission-oriented
    agricultural innovation systems. Agric. Syst. 2021, 184, 102901. [Google Scholar]
    [CrossRef] Krishnan, K.S.; Jerusha, K.; Tanwar, P.; Singhal, S. Self-automated
    agriculture system using IoT. Int. J. Recent Technol. Eng. 2020, 8, 758–762. [Google
    Scholar] [CrossRef] Kumar, N.; Sharma, B.; Narang, S. Emerging Communication Technologies
    for Industrial Internet of Things: Industry 5.0 Perspective. In Proceedings of
    the Third International Conference on Computing, Communications, and Cyber-Security,
    Ghaziabad, India, 30–31 October 2023; Springer: Singapore, 2022; pp. 107–122.
    [Google Scholar] Maini, E.; De Rosa, M.; Vecchio, Y. The Role of Education in
    the Transition towards Sustainable Agriculture: A Family Farm Learning Perspective.
    Sustainability 2021, 13, 8099. [Google Scholar] [CrossRef] Majumdar, P.; Mitra,
    S.; Bhattacharya, D. IoT for Promoting Agriculture 4.0: A Review from the Perspective
    of Weather Monitoring, Yield Prediction, Security of WSN Protocols, and Hardware
    Cost Analysis. J. Biosyst. Eng. 2021, 46, 440–461. [Google Scholar] [CrossRef]
    Meng, H.; Cheng, Y. Research on key technologies of intelligent agriculture under
    5G environment. J. Physics Conf. Ser. 2019, 1345, 042057. [Google Scholar] [CrossRef]
    Mentsiev, A.U.; Magomaev, T.R. Security threats of NB-IoT and countermeasures.
    IOP Conf. Ser. Mater. Sci. Eng. 2020, 862, 052033. [Google Scholar] [CrossRef]
    Mahbub, M. A smart farming concept based on smart embedded electronics, internet
    of things and wireless sensor network. Internet Things 2020, 9, 100161. [Google
    Scholar] [CrossRef] Mode, G.R.; Calyam, P.; Hoque, K.A. False data injection attacks
    in internet of things and deep learning enabled predictive analytics. arXiv 2019,
    arXiv:1910.01716. [Google Scholar] Padhy, S.; Dash, S.; Routray, S.; Ahmad, S.;
    Nazeer, J.; Alam, A. IoT-Based Hybrid Ensemble Machine Learning Model for Efficient
    Diabetes Mellitus Prediction. Comput. Intell. Neurosci. 2022, 2022, 2389636. [Google
    Scholar] [CrossRef] [PubMed] Pogorelskaia, I.; Várallyai, L. Agriculture 4.0 and
    the role of education. J. Agric. Inf. 2020, 11, 45–51. [Google Scholar] [CrossRef]
    Anand, S.; Sharma, A. AgroKy: An approach for enhancing security services in precision
    agriculture. Meas. Sens. 2022, 24, 100449. [Google Scholar] [CrossRef] Santos,
    L.; Rabadao, C.; Goncalves, R. Intrusion detection systems in Internet of Things:
    A literature review. In Proceedings of the 13th Iberian Conference on Information
    Systems and Technologies (CISTI), Caceres, Spain, 13–16 June 2018; IEEE: Toulouse,
    France, 2018; pp. 1–7. [Google Scholar] [CrossRef] Shankar, T.N.; Padhy, S.; Dash,
    S.; Teja, M.B.; Yashwant, S. Induction of Secure Data Repository in Blockchain
    over IPFS. In Proceedings of the 2022 6th International Conference on Trends in
    Electronics and Informatics (ICOEI), Tirunelveli, India, 28–30 April 2022; IEEE:
    Toulouse, France, 2022; pp. 738–743. [Google Scholar] [CrossRef] Shurman, M.M.;
    Khrais, R.M.; Yateem, A.A. IoT Denial-of-Service Attack Detection and Prevention
    Using Hybrid IDS. In Proceedings of the 2019 International Arab Conference on
    Information Technology (ACIT), Al Ain, United Arab Emirates, 3–5 December 2019;
    IEEE: Toulouse, France, 2019; pp. 252–254. [Google Scholar] [CrossRef] Tamala,
    J.K.; Maramag, E.I.; Simeon, K.A.; Ignacio, J.J. A bibliometric analysis of sustainable
    oil and gas production research using VOSviewer. Clean. Eng. Technol. 2022, 7,
    100437. [Google Scholar] [CrossRef] Tang, Y.; Dananjayan, S.; Hou, C.; Guo, Q.;
    Luo, S.; He, Y. A survey on the 5G network and its impact on agriculture: Challenges
    and opportunities. Comput. Electron. Agric. 2020, 180, 105895. [Google Scholar]
    [CrossRef] Tanwar, R.; Chhabra, Y.; Rattan, P.; Rani, S. Blockchain in IoT Networks
    for Precision Agriculture. In International Conference on Innovative Computing
    and Communications; Springer: Singapore, 2023; pp. 137–147. [Google Scholar] Mukherjee,
    S.; Baral, M.M.; Chittipaka, V.; Srivastava, S.C.; Pal, S.K. Discussing the impact
    of industry 4.0 in agriculture supply chain. In Recent Advances in Smart Manufacturing
    and Materials; Springer: Singapore, 2021; pp. 301–307. [Google Scholar] O’Grady,
    M.; Langton, D.; Salinari, F.; Daly, P.; O’Hare, G. Service Design for Climate-Smart
    Agriculture. Inf. Process. Agric. 2021, 8, 328–340. [Google Scholar] [CrossRef]
    Oliver, S.T.; González-Pérez, A.; Guijarro, J.H. An IoT proposal for monitoring
    vineyards called SEnviro for agriculture. In Proceedings of the 8th International
    Conference on the Internet of Things, Santa Barbara, CA, USA, 15–18 October 2018;
    pp. 1–4. [Google Scholar] [CrossRef] Padhy, S.; Dash, S.; Malla, P.P.; Routray,
    S.; Qi, Y. An Energy Efficient Node Localization Algorithm for Wireless Sensor
    Network. In Proceedings of the 2021 IEEE 2nd International Conference on Applied
    Electromagnetics, Signal Processing, & Communication (AESPC), Bhubaneswar, India,
    26–28 November 2021; IEEE: Toulouse, France, 2021; pp. 1–5. [Google Scholar] [CrossRef]
    Singh, G.; Yogi, K.K. Internet of Things-Based Devices/Robots in Agriculture 4.0.
    In Sustainable Communication Networks and Application; Springer: Singapore, 2022;
    pp. 87–102. [Google Scholar] Smart Farming with IoT and Cloud in Malaysia. 2021.
    Available online: https://techwireasia.com/2021/08/smart-farming-with-iot-and-cloud-inmalaysia/
    (accessed on 11 July 2022). Sobb, T.; Turnbull, B.; Moustafa, N. Supply Chain
    4.0: A Survey of Cyber Security Challenges, Solutions and Future Directions. Electronics
    2020, 9, 1864. [Google Scholar] [CrossRef] Soukup, V. Industry 4.0: From Smart
    Factories to Artificial Intelligence. In Industry 4.0 Challenges in Smart Cities;
    Springer: Cham, Switzerland, 2023; pp. 95–105. [Google Scholar] Sturiale, L.;
    Scuderi, A.; Timpanaro, G.; Matarazzo, B. Sustainable Use and Conservation of
    the Environmental Resources of the Etna Park (UNESCO Heritage): Evaluation Model
    Supporting Sustainable Local Development Strategies. Sustainability 2020, 12,
    1453. [Google Scholar] [CrossRef] Malche, T.; Maheshwary, P.; Kumar, R. Environmental
    Monitoring System for Smart City Based on Secure Internet of Things (IoT) Architecture.
    Wirel. Pers. Commun. 2019, 107, 2143–2172. [Google Scholar] [CrossRef] Prabu,
    A.V.; Kumar, G.S.; Rajasoundaran, S.; Malla, P.P.; Routray, S.; Mukherjee, A.
    Internet of things-based deeply proficient monitoring and protection system for
    crop field. Expert Syst. 2022, 39, e12876. [Google Scholar] [CrossRef] Pranitha,
    G.; Rukmini, T.; Shankar, T.N.; Sah, B.; Kumar, N.; Padhy, S. Utilization of Blockchain
    in E-Voting System. In Proceedings of the 2022 2nd International Conference on
    Intelligent Technologies (CONIT), Kartakata, India, 24–26 June 2022; IEEE: Toulouse,
    France, 2022; pp. 1–5. [Google Scholar] [CrossRef] Prasad, S.; Samimalai, A.;
    Rani, S.R.; Kumar, B.P.P.; Hegde, N.; Banu, S. Information Security and Privacy
    in Smart Cities, Smart Agriculture, Industry 4.0, Smart Medicine, and Smart Healthcare.
    In IoT Based Control Networks and Intelligent Systems. Lecture Notes in Networks
    and SystemsJoby; Joby, P.P., Balas Valentina, E., Palanisamy, R., Eds.; Springer:
    Singapore, 2022; Volume 528. [Google Scholar] [CrossRef] Pundir, S.; Wazid, M.;
    Singh, D.P.; Das, A.K.; Rodrigues, J.J.P.C.; Park, Y. Designing Efficient Sinkhole
    Attack Detection Mechanism in Edge-Based IoT Deployment. Sensors 2020, 20, 1300.
    [Google Scholar] [CrossRef] [PubMed] Liu, L.; Xu, B.; Zhang, X.; Wu, X. An intrusion
    detection method for internet of things based on suppressed fuzzy clustering.
    EURASIP J. Wirel. Commun. Netw. 2018, 2018, 113. [Google Scholar] [CrossRef] Farooq,
    M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem, M.A. A Survey on the Role of IoT in
    Agriculture for the Implementation of Smart Farming. IEEE Access 2019, 7, 156237–156271.
    [Google Scholar] [CrossRef] Munir, M.S.; Bajwa, I.S.; Cheema, S.M. An intelligent
    and secure smart watering system using fuzzy logic and blockchain. Comput. Electr.
    Eng. 2019, 77, 109–119. [Google Scholar] [CrossRef] Dash, S.; Padhy, S.; Parija,
    B.; Rojashree, T.; Patro, K.A. A Simple and Fast Medical Image Encryption System
    Using Chaos-Based Shifting Techniques. Int. J. Inf. Secur. Priv. (IJISP) 2022,
    16, 1–24. [Google Scholar] [CrossRef] Gupta, M.; Sandhu, R. Authorization framework
    for secure cloud assisted connected cars and vehicular internet of things. In
    Proceedings of the 23rd ACM on Symposium on Access Control Models and Technologies,
    Indianapolis, IN, USA, 13–15 June 2018; pp. 193–204. [Google Scholar] Gupta, M.;
    Benson, J.; Patwa, F.; Sandhu, R. Secure V2V and V2I communication in intelligent
    transportation using cloudlets. IEEE Trans. Serv. Comput. 2020, 15, 1912–1925.
    [Google Scholar] [CrossRef] Sontowski, S.; Gupta, M.; Chukkapalli, S.S.L.; Abdelsalam,
    M.; Mittal, S.; Joshi, A.; Sandhu, R. Cyber attacks on smart farming infrastructure.
    In Proceedings of the 2020 IEEE 6th International Conference on Collaboration
    and Internet Computing (CIC), Atlanta, GA, USA, 1–3 December 2020; pp. 135–143.
    [Google Scholar] Gupta, M.; Sandhu, R. Towards activity-centric access control
    for smart collaborative ecosystems. In Proceedings of the 26th ACM Symposium on
    Access Control Models and Technologies, Virtual, Spain, 16–18 June 2021; pp. 155–164.
    [Google Scholar] Yang, X.; Shu, L.; Chen, J.; Ferrag, M.A.; Wu, J.; Nurellari,
    E.; Huang, K. A Survey on Smart Agriculture: Development Modes, Technologies,
    and Security and Privacy Challenges. IEEE/CAA J. Autom. Sin. 2021, 8, 273–302.
    [Google Scholar] [CrossRef] Kreutz, D.; Ramos, F.; Verissimo, P.; Rothenberg,
    C.; Azodolmolky, S.; Uhlig, S. Software-defined networking: A comprehensive survey.
    Proc. IEEE 2014, 103, 14–76. [Google Scholar] [CrossRef] Nunes, B.A.A.; Mendonca,
    M.; Nguyen, X.-N.; Obraczka, K.; Turletti, T. A survey of software-defined networking:
    Past, present, and future of programmable networks. IEEE Commun. Surv. Tutor.
    2014, 16, 1617–1634. [Google Scholar] [CrossRef] Ferrag, M.A.; Maglaras, L.; Janicke,
    H. Blockchain and its role in the internet of things. In Strategic Innovative
    Marketing and Tourism; Springer: Berlin/Heidelberg, Germany, 2019; pp. 1029–1038.
    [Google Scholar] Vasques, A.T.; Gondim, J.J.C. Amplified reflection ddos attacks
    over iot mirrors: A saturation analysis. In Proceedings of the 2019 Workshop on
    Communication Networks and Power Systems (WCNPS), Brasília, Brazil, 3–4 October
    2019; IEEE: Toulouse, France, 2019; pp. 1–6. [Google Scholar] [CrossRef] McKeown,
    N.; Anderson, T.; Balakrishnan, H.; Parulkar, G.; Peterson, L.; Rexford, J.; Shenker,
    S.; Turner, J. Openflow: Enabling innovation in campus networks. ACM SIGCOMM Comput.
    Commun. Rev. 2008, 38, 69–74. [Google Scholar] [CrossRef] Iqbal, W.; Abbas, H.;
    Daneshmand, M.; Rauf, B.; Bangash, Y.A. An In-Depth Analysis of IoT Security Requirements,
    Challenges, and Their Countermeasures via Software-Defined Security. IEEE Internet
    Things J. 2020, 7, 10250–10276. [Google Scholar] [CrossRef] Wei, Y.; Jones, P.
    Emergent urban agricultural practices and attitudes in the residential area in
    China. Urban For. Urban Green. 2022, 69, 127491. [Google Scholar] [CrossRef] Sakthi,
    U.; DafniRose, J. Blockchain-Enabled Smart Agricultural Knowledge Discovery System
    using Edge Computing. Procedia Comput. Sci. 2022, 202, 73–82. [Google Scholar]
    [CrossRef] Williamson, H.F.; Leonelli, S. Towards Responsible Plant Data Linkage:
    Data Challenges for Agricultural Research and Development; Springer: Berlin/Heidelberg,
    Germany, 2023. [Google Scholar] Ragazou, K.; Garefalakis, A.; Zafeiriou, E.; Passas,
    I. Agriculture 5.0: A New Strategic Management Mode for a Cut Cost and an Energy
    Efficient Agriculture Sector. Energies 2022, 15, 3113. [Google Scholar] [CrossRef]
    Contreras-Medina, D.I.; Medina-Cuéllar, S.E.; Rodríguez-García, J.M. Roadmapping
    5.0 Technologies in Agriculture: A Technological Proposal for Developing the Coffee
    Plant Centered on Indigenous Producers’ Requirements from Mexico, Via Knowledge
    Management. Plants 2022, 11, 1502. [Google Scholar] [CrossRef] Martini, B.; Helfer,
    G.; Barbosa, J.; Modolo, R.E.; da Silva, M.; de Figueiredo, R.; Mendes, A.; Silva,
    L.; Leithardt, V. IndoorPlant: A Model for Intelligent Services in Indoor Agriculture
    Based on Context Histories. Sensors 2021, 21, 1631. [Google Scholar] [CrossRef]
    Martins, J.A.; Ochôa, I.S.; Silva, L.A.; Mendes, A.S.; González, G.V.; De Paz
    Santana, J.; Leithardt, V.R.Q. PRIPRO: A Comparison of Classification Algorithms
    for Managing Receiving Notifications in Smart Environments. Appl. Sci. 2020, 10,
    502. [Google Scholar] [CrossRef] Okolie, C.C.; Danso-Abbeam, G.; Groupson-Paul,
    O.; Ogundeji, A.A. Climate-Smart Agriculture Amidst Climate Change to Enhance
    Agricultural Production: A Bibliometric Analysis. Land 2023, 12, 50. [Google Scholar]
    [CrossRef] Selbonne, S.; Guindé, L.; Causeret, F.; Bajazet, T.; Desfontaines,
    L.; Duval, M.; Sierra, J.; Solvar, F.; Tournebize, R.; Blazy, J.M. Co-Design and
    Experimentation of a Prototype of Agroecological Micro-Farm Meeting the Objectives
    Set by Climate-Smart Agriculture. Agriculture 2023, 13, 159. [Google Scholar]
    [CrossRef]                     Disclaimer/Publisher’s Note: The statements, opinions
    and data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2023 by
    the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Padhy, S.; Alowaidi, M.; Dash, S.; Alshehri, M.; Malla, P.P.;
    Routray, S.; Alhumyani, H. AgriSecure: A Fog Computing-Based Security Framework
    for Agriculture 4.0 via Blockchain. Processes 2023, 11, 757. https://doi.org/10.3390/pr11030757
    AMA Style Padhy S, Alowaidi M, Dash S, Alshehri M, Malla PP, Routray S, Alhumyani
    H. AgriSecure: A Fog Computing-Based Security Framework for Agriculture 4.0 via
    Blockchain. Processes. 2023; 11(3):757. https://doi.org/10.3390/pr11030757 Chicago/Turabian
    Style Padhy, Sasmita, Majed Alowaidi, Sachikanta Dash, Mohamed Alshehri, Prince
    Priya Malla, Sidheswar Routray, and Hesham Alhumyani. 2023. \"AgriSecure: A Fog
    Computing-Based Security Framework for Agriculture 4.0 via Blockchain\" Processes
    11, no. 3: 757. https://doi.org/10.3390/pr11030757 Note that from the first issue
    of 2016, this journal uses article numbers instead of page numbers. See further
    details here. Article Metrics Citations Crossref   9 Scopus   15 Web of Science   7
    Google Scholar   [click to view] Article Access Statistics Article access statistics
    Article Views 14. Jan 24. Jan 3. Feb 13. Feb 23. Feb 4. Mar 14. Mar 24. Mar 3.
    Apr 0k 1k 2k 3k 4k 5k For more information on the journal statistics, click here.
    Multiple requests from the same IP address are counted as one view.   Processes,
    EISSN 2227-9717, Published by MDPI RSS Content Alert Further Information Article
    Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI
    Guidelines For Authors For Reviewers For Editors For Librarians For Publishers
    For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org
    Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Processes
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'AgriSecure: A Fog Computing-Based Security Framework for Agriculture 4.0
    via Blockchain'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Makondo N.
  - Kobo H.I.
  - Mathonsi T.E.
  - Mamushiane L.
  citation_count: '0'
  description: Many sectors, including agriculture, have benefited significantly from
    the introduction of Fifth Generation wireless technology (5G). One of the most
    interesting benefits of 5G is how it may optimize the latency of the Internet
    of Things (IoT). The amount of data generated by IoT devices like sensors, cameras,
    and actuators in smart farming is growing at an exponential rate. The traditional
    way of processing and storing IoT data is done on cloud data centers, which are
    mostly located far from the data sources. Thus, the underlying network is unable
    to cope with the increasing traffic while also meeting the strict low-latency
    requirements of different IoT applications. The emergence of Edge Computing (EC)
    has the potentially to address this latency issue by deploying network functions
    such as User Plane Function (UPF) near the IoT sensors, this will allow data processing
    to be done close to the sensors and latency will be reduced. This paper primarily
    reviews the smart farming enabling technologies, and latency issue presented by
    the Cloud based 5G architecture. The challenges and opportunities of integrating
    the EC in the 5G-enabled IoT applications are reviewed. Finally, this paper reviews
    the real-time IoT monitoring applications and the latency reducing techniques.
  doi: 10.1109/ICECET58911.2023.10389349
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2023 International Conference...
    A Review on Edge Computing in 5G-Enabled IoT for Agricultural Applications: Opportunities
    and Challenges Publisher: IEEE Cite This PDF Ntshuxeko Makondo; Hlabishi I. Kobo;
    Topside E. Mathonsi; Lusani Mamushiane All Authors 97 Full Text Views Abstract
    Document Sections I. Introduction II. Smart Farming Enabling Technologies III.
    Latency Issue Faced By Cloud Based 5g Enabled Iot Applications IV. The Fusion
    of Edge Computing in 5g Intelligent Agricultural Internet of Things V. Factors
    that Are Hindering the Implementation of the Edge Computing Show Full Outline
    Authors Figures References Keywords Metrics Abstract: Many sectors, including
    agriculture, have benefited significantly from the introduction of Fifth Generation
    wireless technology (5G). One of the most interesting benefits of 5G is how it
    may optimize the latency of the Internet of Things (IoT). The amount of data generated
    by IoT devices like sensors, cameras, and actuators in smart farming is growing
    at an exponential rate. The traditional way of processing and storing IoT data
    is done on cloud data centers, which are mostly located far from the data sources.
    Thus, the underlying network is unable to cope with the increasing traffic while
    also meeting the strict low-latency requirements of different IoT applications.
    The emergence of Edge Computing (EC) has the potentially to address this latency
    issue by deploying network functions such as User Plane Function (UPF) near the
    IoT sensors, this will allow data processing to be done close to the sensors and
    latency will be reduced. This paper primarily reviews the smart farming enabling
    technologies, and latency issue presented by the Cloud based 5G architecture.
    The challenges and opportunities of integrating the EC in the 5G-enabled IoT applications
    are reviewed. Finally, this paper reviews the real-time IoT monitoring applications
    and the latency reducing techniques. Published in: 2023 International Conference
    on Electrical, Computer and Energy Technologies (ICECET) Date of Conference: 16-17
    November 2023 Date Added to IEEE Xplore: 22 January 2024 ISBN Information: DOI:
    10.1109/ICECET58911.2023.10389349 Publisher: IEEE Conference Location: Cape Town,
    South Africa SECTION I. Introduction Most of the Southern African Development
    Community (SADC) member states rely mostly on agriculture to sustain rural livelihoods
    and economic growth [1]. Recently, agriculture has undergone a fourth industrial
    revolution (Farming 4.0) as a result of the integration of Information and Communications
    Technologies (ICT) into traditional methods of farming [2]. This resulted in the
    development of smart farming that entails the use of technology to track and monitor
    the livestock [3]. Smart farming include sensors that monitor several environmental
    and animal-based variables, as well as control systems that allow it to make management
    decisions with or without human intervention [4]. As a result, farmers can continuously
    monitor the wellbeing of the animals and crops in real-time. The technologies
    that have the potential to revolutionize agricultural operations include Internet
    of Things (IoT), Fifth Generation of Cellular Technology (5G), Cloud Computing
    (CC), and Edge Computing (EC) [5]. The emergence of the EC model presents a great
    potential to solve the problem of high latency currently exnerienced in the CC
    model [6]. The integration of EC in the 5G-enabled IoT offers considerable prospects
    for revolutionizing agricultural applications [7]. This combination provides low-latency,
    high-bandwidth, and real-time capabilities, making it well-suited for many latency-sensitive
    applications for smart farming [7] This paper reviews the latest developments
    in smart farming, opportunities, challenges, and the applications in the context
    of SADC as a developing region. The key contributions of this paper are summarised
    as Follows: A comprehensive overview of smart farming enabling technologies is
    presented. Outlines the challenges faced by cloud based 5G architecture. Discusses
    the EC latency reducing techniques. Tailored for emerging markets particularly
    SADC that are faced with the challenge of high latency. The organizational structure
    of this paper is as follows. Section II presents the smart farming enabling technologies,
    Section III presents the challenges faced by cloud based 5G architecture, and
    Section IV discusses the EC fusion in 5G intelligent agricultural IoT. The factors
    that are hindering the implementation of the EC are presented in Section V. In
    Section VI latency reducing techniques using EC. Latency sensitive 5G enabled
    IoT applications in agriculture with EC are presented in Section VII. Our discussion
    is presented in section VIII. Finally, the work is concluded, and the future work
    is described in section IX. SECTION II. Smart Farming Enabling Technologies This
    section introduces the enabling technologies that are playing a vital role in
    the Smart farming. These technologies are at the cutting edge of modernizing and
    optimizing agricultural practices while addressing concerns about sustainability,
    resource management, and food production [8]. A. Internet of Things The Internet
    is important for the transfer of information [9]. However, instead of simply sharing
    information, technology is shifting toward data gathering, analysis, and remote
    control of equipment via the Internet, resulting in a new technology known as
    IoT [10]. IoT is one of the most innovative wireless technologies today as it
    paves a way for wide range of things to communicate with each other by utilizing
    the telecommunication infrastructure of the internet [11]. The fundamental idea
    is the interaction between various physical entities or objects linked to the
    internet [11]. Furthermore, IoT technology can be used in a variety of vertical
    areas, including agriculture, industry, transportation, healthcare, and automobiles
    [11]. However, IoT applications frequently require a low latency connection to
    enable real-time communication that is difficult to achieve due to the physical
    distance between IoT devices and servers [12]. As the number of industrial latency
    sensitive IoT applications expanded and the demand for low latency increased,
    5G emerged as a potential solution for meeting this latency demand [13]. Devices
    are connected by means of wired and wireless technologies such as Bluetooth, Wi-Fi,
    ZigBee, Long Range (LoRa) [11]. B. Fifth Generation of Cellular Technology With
    the advent of 5G enabled IoT, advanced solutions with sufficient broadband spectrum
    are needed to keep up with the needs of the quickly expanding network traffic
    [14]. 5G, as the most recent version of wireless technology, promises to be a
    major upgrade over the present 4G networks that connect the most recent cell phones
    [14]. 5G is standardized by the 3rd Generation Partnership Project (3GPP) and
    the requirement model for 5G is specified by International Telecommunication Union
    (ITU) under International Mobile Telecommunications-2020 (IMT -2020) [15]. 5G
    wireless communication offers faster speeds, lower latency, and a considerable
    improvement in the capacity to connect many more devices at once [16]. Furthermore,
    it opens new opportunities for machine to machine (M2M) and IoT applications [17].
    Beyond information technology, 5G is expected to have a significant impact on
    society and the economy. It could radically change the internet. The use cases
    identified for 5G are Enhanced Mobile Broadband (eMBB), Massive Machine Type Communication
    (mMTC), Ultra Reliable and Low Latency Communications (uRLLC) [17]. In emerging
    markets, Software Defined Networking (SDN) and Network Function Virtualization
    (NFV) and Massive Multiple-Input Multiple-Output (MIMO) technologies have emerged
    as the key enablers of the 5G [18]. 5G is a software-defined network however,
    it will not totally replace wired networks [18]. The necessity for them will be
    much reduced by deploying the 5G core network within the cloud [19]. SDN divides
    networks into control and data planes, streamlining network management and facilitating
    real-time functions at the edge. As a supplementary technology to SDN, NFV emerged.
    NFV seeks to replace traditional, costly, and dedicated network operations like
    firewalls, routers and load balancers [18]. Lastly, Massive MIMO improves network
    capacity and energy efficiency by allowing multiple devices to offload tasks at
    the edge concurrently, effecting network capacity and energy efficiency [18].
    One of the 5G network advantages is that it has 100 times the capacity of 4G,
    which will significantly boost network speeds [17]. Table I, outlines the main
    differences between 4G and 5G. Table I. Differences between 4G and 5G C. Edge
    Computing Edge Computing is a distributed computing architecture that enables
    organizations to use data collecting, analysis, and processing at the network''s
    edge without direct user interference [20]. Edge technology processes data as
    close to its physical source as possible. EC applications include autonomous vehicles,
    fleet management devices, smart agriculture, and surveillance [20]. EC devices
    provide autonomous self-decisions and real-time replies based on information gathered
    by IoT devices. Table II summarises the key differences between Cloud and Edge
    computing. In telecoms, Edge Computing is also known as Multi-Access Edge Computing
    (MEC). EC brings data processing closer to where the data is consumed and generated
    as depicted in Figure 1 [21]. The data does not need to travel a long distance
    which enables the operating model to remain efficient as well as scalable and
    sustainable [14]. Fig. 1. Edge Computing Architecture Show All The implementations
    of EC differ depending on things like architecture, deployment models, use cases,
    and the technologies deployed. Below is a discussion of various popular EC implementations
    [22]. 1) Fog Computing Fog Computing brings CC capabilities to the edge of the
    network. It entails placing intermediate computing nodes, known as fog nodes,
    between the cloud and end-users or IoT devices. Fog computing focuses on placing
    computing workloads and services closer to the data source, lowering latency and
    conserving bandwidth [22]. Real-time processing capabilities can be offered by
    locating fog nodes at the network edge, close to end-users or IoT devices, making
    it suited for use cases demanding low latency and rapid data analysis [22]. 2)
    Multi-Edge Computing Multi-Edge Computing (MEC) is an additional specialized EC
    implementation that focuses on mobile network infrastructure, particularly 4G
    and 5G networks. MEC brings computing resources, such as servers and storage,
    closer to mobile network base stations or access points [23]. This enables low-latency
    services to be delivered directly from the mobile edge, avoiding the need for
    data to go through the core network. MEC is especially useful for mobile applications,
    augmented reality, content caching, and interactive services, where quick responses
    and low latency are essential for a good user experience [23]. Table II. The difference
    between cloud and edge computing SECTION III. Latency Issue Faced By Cloud Based
    5g Enabled Iot Applications The emergence of cloud-based 5G wireless networks
    has presented numerous benefits and significant opportunities in various vertical
    industries such as Healthcare, Agriculture, Manufacturing, Automotive and Mining
    [19]. Particularly, the rapid growth of latency-sensitive applications in South
    Africa, especially smart farming, which requires real-time monitoring of multiple
    factors such as soil moisture, smoke detectors, weather conditions, and crop health,
    has exposed the limitations of the centralized cloud-based 5G core network functions
    [17]. However, this architecture causes increased latency because it is distant
    from the IoT devices and sensors that gather data, jeopardizing the performance
    and reliability of smart farming [2]. Therefore, a solution to the latency issue
    is necessary, and a model to decrease the distance data must travel by performing
    data processing closer to IoT devices such as sensors in smart farming is critical
    [24]. Therefore, there is an urgent need to address the latency issue presented
    by the current setup. Finally, it is imperative to propose a model for lowering
    the distance the data needs to travel by doing data processing closer to the IoT
    devices such as sensors in smart farming. SECTION IV. The Fusion of Edge Computing
    in 5g Intelligent Agricultural Internet of Things The future operation of IoT
    networks will depend greatly on the EC. The function of EC is currently the main
    IoT research topic. The most crucial one is to decrease latency by limiting the
    volume of data transferred to the cloud. The following roles are played by EC
    in a 5G-enabled IoT environment to support successful operations [25]. A. Provides
    Local Storage User equipment can offload large volumes of data to edge servers
    with the help of EC [22]. The cloud, on the other hand, has more and infinite
    storage compared to the edge, which has significantly less storage [22]. Computational
    data, metadata (e.g., location and timestamps), and monitoring data are examples
    of data found on servers. The edge servers offer various data storage capabilities
    to handle a wide range of data kinds. For example, ephemeral storage gives temporary
    storage to a specific networked IoT [25]. B. Local Computational Tasks Edge servers
    are used to handle the computation and processing for smart devices [22]. While
    traditional computational paradigms provide simple computational and processing
    capabilities, the edge is a smart computational system that independently and
    autonomously pushes these capabilities closer to the user equipment [22]. SECTION
    V. Factors that Are Hindering the Implementation of the Edge Computing A. Infrastructure
    and Connectivity To transfer and analyse data in real time, EC primarily depends
    on reliable infrastructure and low-latency communication [26]. The essential infrastructure
    for 5G and EC may not be readily available or effectively constructed in some
    regions or distant areas, hindering implementation [26]. B. Security Concerns
    Moving important data processing to the edge servers may increase security threats.
    Edge nodes may be more vulnerable to physical manipulation and attacks, making
    it critical to install effective security measures at the edge. Managing security
    at the edge is complex and requires careful consideration to secure data privacy
    and protection [27]. C. Skill Gap Expertise in both networking and distributed
    systems is required to implement the EC. There may be a scarcity of experienced
    experts who can effectively design, deploy, and operate EC systems [28]. D. Scalability
    Scaling EC solutions get difficult as the number of IoT devices and data volume
    increase. It is vital for the effective adoption of IoT to ensure that edge infrastructure
    can handle increased workloads and expanding IoT deployments [29]. E. High Investment
    Cost Edge frameworks can be costly and sophisticated as well. Typically, because
    of their complexity, which necessitates more equipment and assets. Furthermore,
    the IoT devices with EC need the use of more local equipment to function. This
    will result in greater effectiveness, but critical thinking is required [26].
    SECTION VI. Potential Latency Reducing Techniques Using Edge Computing Integrating
    5G-enabled IoT with EC has considerable potential for lowering latency and boosting
    real-time data processing capabilities [26]. Here are few techniques for minimizing
    latency. A. Edge Computing Gateway Positioning The gateway acts as an intermediary
    between the edge devices such sensors and the central cloud or data center [30].
    Choosing the best locations for placing these gateways within the edge network
    includes situating EC gateways [30]. 1) Placement Based on Proximity Placing edge
    gateways near IoT devices or within the same geographical area decreases the physical
    distance data must travel, resulting in decreased latency. Because of this proximity,
    data sharing and real-time processing are facilitated [31]. 2) Distributed Gateway
    Deployment Strategically deploying numerous edge gateways around the IoT network
    enables load balancing and optimal resource use. Each gateway can only serve a
    subset of IoT devices, decreasing the overall load on a single gateway and reducing
    latency [31]. B. Upf Placement User Plane Function (UPF) is a key Network Function
    (NF) of the 5G Core Network as it handles data traffic processing and routing
    [32]. As a result, the deployment of UPF at the edge will eventually satisfy the
    uRLLC requirements for 5G-enabled IoT applications [33]. UPF handles data packets
    between the User Equipment (UE) and the external network, it becomes a critical
    component of the 5G core network [34], and its placement and design can have a
    significant impact on network speed, latency, and user experience [35]. Therefore,
    there is significant interest in shifting the UPF from the centralized 5G core
    network to the distributed edge servers to address these limitations and capitalize
    on the opportunities of EC [36]. 1) Regional Upf The regional UPF can be defined
    as the distributed deployment of UPF on the Data center that helps reduce data
    traffic backhaul transmission burden on the transport network. It also provides
    local data service offloading, which reduces service latency [36]. A common application
    case is a large video service. To improve video service user experience, regional
    UPF must be established in each city to access service ends of local video service
    providers. Furthermore, by putting UPF and Cache nodes in the same regional data
    center, the video access transmission path can be minimized [36]. 2) Edge Upf
    To deal with latency issues, the UPF can be placed on the edge node. It recognizes
    users based on their Internet Protocol (IP) addresses and offloads user traffic
    in accordance with the traffic offloading rules [37]. It handles local forwarding
    and routing for data traffic that requires local processing, minimizing detours,
    lowering data forwarding latency, and enhancing user rate and experience [36].
    SECTION VII. Latency Sensitive 5g Enabled Iot Applications in Agriculture With
    the Use of Edge Computing The emergence of a 5G enabled IoT networks offer the
    infrastructure required for smart agriculture and agricultural productivity. This
    paper focusses on latency sensitive environmental monitoring applications [38].
    A. Environmental Monitoring One of the most significant advantages of 5G enabled
    IoT for agriculture has been the ability to remotely monitor many parts of farm
    operations [38]. This enables the data required for delivery solutions to be generated
    and gathered closer to the origin, while some data processing processes can be
    handled on the edge devices themselves [38]. The applications are discussed below.
    1) Early Detection and Prevention of Wildfires In the context of IoT -driven smart
    farming, wildfires have a crucial connection to environmental monitoring. Although
    wildfires may not be directly related to farming operations, they can have significant
    effects on the environment, including animals and crops. In a livestock farm can
    be equipped with a 5G-enabled IoT system for monitoring purposes on the perimeter
    fence [38]. This system allows the IoT sensors such as smoke detectors that are
    distributed across the farm to collect and transmit data to the edge servers for
    real-time processing and decision-making [39]. Therefore, the detection of fire
    outbreaks and alerting process will be quicker. As a result, the authorities will
    be notified of the fire immediately, resulting in shorter response times that
    could lead to a less damage to the animals or crops [38]. 2) Iot-Based Geofencing
    IoT -based geofencing is one of the latency-sensitive applications in smart farming.
    This requires creating and maintaining virtual barriers, or geofences, around
    certain areas using IoT devices. Furthermore, an IoT -based Geofencing system
    can assist secure animals and stop stock theft by instantly alerting farmers when
    livestock leave their designated region [40]. SECTION VIII. Discussion In our
    opinion, Edge Computing is a cutting-edge technology that effectively addresses
    the requirements of 5G-enabled IoT applications in agriculture. It improves data
    processing and analysis and changes agricultural decision-making by lowering latency.
    Therefore, Service providers should consider integrating Edge Computing, 5G, and
    IoT, which will increase production and promote environmentally friendly farming
    practices. SECTION IX. Conclusion and Future Work This review paper presented
    the overview of smart farming enabling technologies. We further discussed the
    shortcomings of the centralised cloud based 5G architecture. The benefits of introducing
    edge computing in the 5G enabled IoT were outlined together with the latency sensitive
    applications in smart farming. Ultimately, the integration of IoT, 5G, and EC
    can assist to develop a more responsive, efficient, and dependable network infrastructure,
    allowing farmers to obtain real-time insights and make better decisions based
    on data nrovided by their IoT devices. Future work will focus on conducting research
    experiments and real-world deployment studies to demonstrate the effectiveness
    of EC in 5G-enabled IoT environmental monitoring applications in a variety of
    agricultural scenarios. These studies can provide useful insights into practical
    difficulties and accomplishments. Authors Figures References Keywords Metrics
    More Like This Research on Wireless Sensor Network Localization Method for Real-Time
    System 2023 China Automation Congress (CAC) Published: 2023 An Assessment on Integration
    of Wireless Sensor Networks with Cloud Computing 2022 International Conference
    on Emerging Trends in Smart Technologies (ICETST) Published: 2022 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: International Conference on Electrical, Computer and Energy Technologies,
    ICECET 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'A Review on Edge Computing in 5G-Enabled IoT for Agricultural Applications:
    Opportunities and Challenges'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors: []
  citation_count: '0'
  description: 'The proceedings contain 31 papers. The special focus in this conference
    is on Sustainable Development through Machine Learning, Artificial Intelligence,
    and IoT. The topics include: Predicting Crop Yield in Smart Agriculture Using
    IoT and Machine Learning for Sustainable Development; effectiveness of Agile Sustainable
    Project Management Approach in Software Industries; enhancing Sustainable Returns:
    Unleashing the Potential of Automated Trading with Advanced Technologies; the
    Contribution of Pilgrimage Tourism to Environmental Sustainability, Particularly
    in the Context of India; Leveraging AI and IoT for Sustainable Waste Management;
    enabling Sustainable Development Through IoT; analyzing Real Time Farming Using
    Internet of Things in Agriculture; Securing the Sustainable 5G Enabled IoMT-Fog
    Computing Environment: A Blockchain-Based Approach; deep Learning-Based Diagnosis
    of Osteoarthritis in Knee X-Ray Images Using Convolutional Neural Networks for
    Sustainable Healthcare; attaining Sustainable Development Goal of Quality Education
    through Data Analytics in Institutional Research: Insights and Applications; contribution
    Improving Dermatoscopy in Low-Level Laser Therapy Using Convolutional Neural Networks
    for Enhanced Diagnosis and Treatment Planning; Empowering the Visually Impaired:
    A Sustainable ML-Based Currency Recognition System; machine Learning Based Early
    Prediction of Parkinson''s Disease for Sustainable Healthcare; integrating Machine
    Learning for Sustainable Development: Advanced Psychometrics Analysis of Learners
    across Multiple Levels and Parameters; enhancing Sustainable Development Through
    Electrooculography Based Computer Control System for Individuals with Mobility
    Limitations; enhancing Global Optimization for Sustainable Development Using Modified
    Differential Evolution; Design and Implementation of a Sustainable FPGA-Based
    UART with HyperTerminal and External Input Device Integration for Enhanced Communication;
    enabling Sustainable Development Through Artificial Intelligence-Based Surveillance
    System on Cloud Platform; preface.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Communications in Computer and Information Science
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 1st International Conference on Sustainable Development through Machine Learning,
    Artificial Intelligence, and IoT, ICSD 2023
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Raikar M.M.
  - S M M.
  citation_count: '0'
  description: Internet of Things (IoT) has evolved and penetrated in different sectors
    such as healthcare, agriculture, manufacturing, transportation, and logistics.
    The IoT services are deployed in the cloud for accessing it virtually independent
    of location. The data-intensive IoT applications when deployed in the cloud have
    high response time. To overcome this challenge, the fog computing techniques is
    proposed to access the data from the sensors in real time. In this paper, the
    Fog-enabled IoT architecture for precision agriculture is presented. Precision
    agriculture is the usage of information technology to increase yield of crops
    and improve health of plants by ensuring accurate and controlled supply of nutrients.
    The sensors are deployed in the fields, and data is sent to the edge devices used
    for improving the produce. The different services available are automated irrigation
    and fertigation, recommendation by experts, decision support system, and protection
    from rodents. The farmers can subscribe to the service and make the best use.
    The advantage of Fog-enabled IoT is the reduction in round-trip time (RTT) compared
    to Cloud IoT architecture. The result demonstrates 40% reduction in RTT when Fog-enabled
    IoT architecture is used for different services.
  doi: 10.1007/978-3-031-15175-0_27
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Conference on Machine
    Learning and Big Data Analytics ICMLBDA 2022: Machine Learning and Big Data Analytics
    pp 329–339Cite as Home Machine Learning and Big Data Analytics Conference paper
    Fog Computing-Enabled Internet of Things for Resource Optimization Meenaxi M.
    Raikar & Meena S M   Conference paper First Online: 07 June 2023 420 Accesses
    Part of the book series: Springer Proceedings in Mathematics & Statistics ((PROMS,volume
    401)) Abstract Internet of Things (IoT) has evolved and penetrated in different
    sectors such as healthcare, agriculture, manufacturing, transportation, and logistics.
    The IoT services are deployed in the cloud for accessing it virtually independent
    of location. The data-intensive IoT applications when deployed in the cloud have
    high response time. To overcome this challenge, the fog computing techniques is
    proposed to access the data from the sensors in real time. In this paper, the
    Fog-enabled IoT architecture for precision agriculture is presented. Precision
    agriculture is the usage of information technology to increase yield of crops
    and improve health of plants by ensuring accurate and controlled supply of nutrients.
    The sensors are deployed in the fields, and data is sent to the edge devices used
    for improving the produce. The different services available are automated irrigation
    and fertigation, recommendation by experts, decision support system, and protection
    from rodents. The farmers can subscribe to the service and make the best use.
    The advantage of Fog-enabled IoT is the reduction in round-trip time (RTT) compared
    to Cloud IoT architecture. The result demonstrates 40% reduction in RTT when Fog-enabled
    IoT architecture is used for different services. Access provided by University
    of Nebraska-Lincoln. Download conference paper PDF 1 Introduction The Fog-enabled
    Internet of Things (IoT) architecture is used for resource optimization. The agriculture
    sector use case is considered for providing service to the farmers. The farmer
    can enable the services using the mobile application. The lightweight protocol
    is chosen for communication between the devices for energy-efficient transmission
    of the data. The network topology consists of heterogeneous nodes such as things
    and edge devices. The nodes in the network are power constraint devices; hence,
    the lightweight protocol is opted for the communication. The Message Queue Telemetry
    Transport (MQTT) is the lightweight protocol that is used for communication between
    the edge devices such as Raspberry Pi. The MQTT protocol uses publish-subscribe
    communication model. It is assumed that the service provider will have the infrastructure
    for facilitating the different services mentioned. The recommendation by experts
    regarding which crop to be grown in the field based on region, season, and climate
    conditions is available to the farmers. Advice related to the appropriate time
    for sowing the seed to get better yield is facilitated on request through mobile.
    This paper outlines the use of IoT devices such as rain sensor, soil moisture
    sensor, and temperature sensor to sense the agricultural data and store into edge
    device database. The stored data is monitored through big data analytics, and
    prediction is performed using data mining techniques. The energy efficiency is
    computed in terms of the packet size and the round trip time for the transmission
    of the data between the devices. The organization of the paper: In Sect. 2, related
    work on Fog IoT services is presented. In Sect. 3, the architecture for Fog IoT
    taking precision agriculture as a use case is described. The energy model for
    the Fog IoT devices is discussed in Sect. 4. The distance between the Fog IoT
    nodes, a factor to reduce latency, is presented in Sect. 5. The result analysis
    and conclusion is presented in Sects. 6, and 7, respectively. 2 State of the Art
    in Fog-Enabled IoT Services In [1], the system that collects soil properties and
    stores it in cloud for further analysis is mentioned. It also speaks about building
    a scalable sensor data analysis for smart farming with commercially available
    IoT devices which reduces maintenance cost and provides data analytics resulting
    in increased crop yield. In [2], cloud-based IoT application for precision agriculture
    with three-layer architecture is described. The top layer deals with collecting
    information and applying necessary agricultural actions. The next layer connects
    the top layer to IoT. The last layer deals with data storage and processing. AgroTick,
    a novel hybrid system for smart agriculture, is discussed in [3]. AgroTick is
    an Internet of Things (IoT) system with a mobile interface that was created using
    technological modules such as cloud computing, embedded firmware, hardware, and
    big data analytics. AgroTick is built to increase agricultural efficiency, develop
    a well-connected farming network, and provide a knowledge-sharing platform for
    farmers. In [4,5,6,7], the lightweight protocol, Message Queue Telemetry Transport
    (MQTT), is the communication model used. It has opened its way in many sectors
    since its invention in 1999. The different cloud deployments and services available
    for the Internet users are presented in [8]. The various applications of IoT such
    as smart parking, waste management, and home automation are described in [9].
    The power efficiency for IoT devices is enhanced using the software-defined networks
    (SDN) architecture [10]. The energy efficiency of the IoT devices is improved
    using load balancing and fault tolerance techniques [11]. The IoT services of
    the smart city are described in [12]. The 6LoWPAN and CoAP protocol in development
    of the applications are presented in [13]. The security issues are concerns in
    the IoT network presented in [14, 15]. 3 Fog Computing-Enabled IoT Architecture
    The Fog computing-enabled IoT architecture for precision agriculture using lightweight
    protocol is shown in Fig. 1. The objective is to provide different service for
    farmers that aid in precision agriculture such as: 1. Irrigation and fertigation
    as a service 2. Crop-related decision support system as a service 3. Recommendation
    as a service 4. Pest control as a service The farmers have to subscribe for the
    services by registration process. The metering and billing module at the service
    provider (SP) side keeps track of the unit amount of resource utilized by the
    farmers. Irrigation and Fertigation As a Service: This service is used by farmers
    to irrigate and fertigate the land. The controlled amount of water and fertilizers
    are supplied to the plants based on the different parameters such as soil moisture
    content, temperature, and rainfall in the region. Crop-Related Decision Support
    System As a Service This service aids the farmer in making decisions related to
    the type of crop to be sowed or the suitable time for sowing in the region. To
    facilitate this service at the SP side, big data analytics technique are applied
    as shown in Fig. 1. Recommendation As a Service The farmers who have subscribed
    to this service get recommendation related to the crop. The data related to each
    farmers land is collected using sensors and stored at the data center for analysis.
    The data mining techniques are applied for recommendation to the farmers. Pest
    Control As a Service This service enables the farmers to combat the loss in yield
    due to pests and rodents. The automated fertigation unit is installed at the service
    provider location. The metering unit aids in determining the amount of unit consumed
    by the farmers for accounting and billing. The virtualization technique is applied
    for efficient utilization of resources at the data centers. The virtual private
    network (VPN) component enables the user to have private network for security
    reasons. These services are deployed at the edge device closer to the sensors
    to minimize the latency. In the Fig. 1, end devices could be the mobile, laptop,
    or the tablet. The services could be accessed using a browser or an application.
    The service response time could be greatly enhanced by deploying these on the
    edge devices closer to the sensors. In the next section, the energy efficiency
    model for fog IoT architecture is presented. Fig. 1 Fog-enabled IoT architecture
    using lightweight protocol Full size image 4 Energy Model for the Fog IoT Devices
    The evolution of Fog computing-enabled Internet of Things is at its peak as represented
    in Gartner’s predictions in the recent days. Here, the things connect to the Internet
    anytime, anywhere providing the ubiquity to the users. These things are fueled
    by energy sources. Hence, energy efficient utilization of the IoT resources is
    an important research domain. With the invention of Industrial IoT, the need for
    low power technology is increasing tremendously. Thus, the power consumption model
    for IoT applications plays an important role in network resource optimization.
    A trade-off is to be achieved between cost incurred, network lifetime, and the
    power consumption of the devices. The power efficiency model for IoT devices is
    presented in [16]. The effect of power consumption based on the traffic pattern
    in IoT devices of smart city applications is described in [17]. In an IoT application,
    energy is consumed during data acquisition, processing, and communication. The
    alternate to save energy is to use energy harvesting technologies, which is out
    of the scope of this paper. The analysis of energy in the life cycle of an IoT
    application is presented here. The objective is to minimize the power consumption
    of the IoT applications. In the literature, system level conservation of energy
    is described vastly. The focus of this paper is mainly from the perspective of
    energy consumption during communication between the devices. In an IoT application,
    the pattern observed is data acquisition by the sensors/things, processing performed
    by the controller, and the transmission of the data. Based on this pattern, the
    power consumption of the IoT application is broken into four different blocks.
    The first block being the power consumed at the system/device level (PSYS) to
    perform the operations at the operating system level. The second block being the
    power consumption during the data acquisition by the sensors/things (PDACQ). The
    third block is power consumed for processing (PPROC) and finally the power utilized
    for communicating between the networking devices (PCOMMN). The mathematical representation
    of the observed pattern in IoT application is given in Eq. (1). $$ {P}_{NDEV}={P}_{SYS}+{P}_{DACQ}+{P}_{PROC}+{P}_{COMMN}
    $$ (1) With the main objective being the power conservation during communication,
    the lightweight protocol is used in the development of the IoT applications. The
    payload in case of lightweight protocol such as MQTT for IoT applications is 2
    bytes. Since the IoT devices are battery powered, the objective is to minimize
    the power consumed during transmission for increasing the network lifetime. 4.1
    Power Consumption Model for Data Communication The average power consumed during
    communication is represented as energy required to send a message (EM) and the
    time interval between consecutive messages (TM) as given in Eq. (2). $$ {P}_{COMMN}=\\sum
    \\limits_{k=1}^n\\frac{E_M^{(k)}}{T_M^{(k)}} $$ (2) where n is the number of messages
    sent during the experimental period and k varies from 1 to n. The factors that
    influence EM are based on whether it is a wired medium or wireless medium for
    transmission, embedded chip type on the sensor/thing and the period for every
    transmission. The IoT applications can be categorized into two types such as periodic
    and event trigger-based reporting. In case of periodic reporting such as temperature
    monitoring, the value for \\( {T}_{\\textrm{M}}^{(k)} \\) is constant. Therefore,
    Eq. (2) is rewritten as: $$ {P}_{COMMN}=\\frac{1}{T_M^0}\\sum \\limits_{k=1}^n{E}_M^{(k)}
    $$ (3) Here, \\( {T}_M^0 \\) is constant time interval between consecutive reporting
    instances. 4.2 Power Consumption Model for Data Acquisition The IoT applications
    are classified into two types such as periodic reporting and nonperiodic or event
    trigger-based reporting. The power consumption for the data acquisition is given
    by Eq. (4): $$ {P}_{DACQ}=\\left\\{\\begin{array}{c}{P}_{DACQ-1- SAMPLE}\\cdot
    {SN}_1.\\dots (periodic)\\\\ {}{P}_{DACQ-1- SAMPLE}\\cdot {SN}_2\\cdot \\Pr ob(E)\\end{array}\\right.
    $$ (4) where SN1 and SN2 are the number of samples for periodic and event trigger-based
    reporting, respectively. In case of the event trigger-based reporting, the probability
    of occurrence of an event (E) is taken into consideration. 4.3 Power Consumption
    Model of a System/Device The different states of a networking device are active,
    idle/sleep, transmit, and receive. The power consumption of a networking device
    (PSYS) is given as: $$ {P}_{SYS}={P}_{active}+{P}_{sleep/ idle}+{P}_{transmit}+{P}_{receive}
    $$ (5) The power consumption during each of these states is presented in this
    section. Data Transmission The power consumption for transmission of data in an
    IoT environment, considering periodic transmission, is represented as: $$ {E}_{DataTx}={P}_{DataTx}(mW)\\times
    {T}_M^0(ms)\\vspace*{-1.5pc} $$ (6) Data Reception Similarly, the power consumed
    to receive the data is given as: $$ {E}_{DataRx}={P}_{DataRx}(mW)\\times {T}_{Rx}(ms)
    $$ (7) where TRx(ms) is the duration for data reception. Active/Sleep Modes Based
    on the active and sleep modes of the networking device, power consumption is modelled
    as: $$ {P}_{active+ sleep}={P}_s\\times {T}_s+\\left({T}_{total}-{T}_s\\right)\\ast
    {P}_{active} $$ (8) where Ttotal and Ts are the total time spent and time spent
    in sleep mode, respectively. The power consumption of an IoT device can be reduced
    by increasing the sleep modes. Based on the deviation of the sensed data, the
    sleep modes can be increased for prolonged network lifetime. The deviation of
    the sensed data is computed as: $$ Deviation\\mbox{\\_ }of\\mbox{\\_ }sensed\\mbox{\\_}data=\\frac{\\sqrt{\\sum
    \\left({y}_i-\\mu \\right)}}{\\mu } $$ (9) where yi is the sensed data and μ is
    the mean computed for “n” sensed data values. μ is computed as \\( \\sum \\limits_{i=1}^n{y}_i/n
    \\). The data reduction is performed by monitoring the deviation in the data sensed.
    The voluminous data, variety of sensors, and velocity of data generated are the
    aspects to be considered in Fog computing. 4.4 Power Consumption Model for Data
    Processing The power consumed for data processing depends on the number of operations
    performed such as arithmetic operations. It depends on the hardware architecture
    chosen for the deployment of the IoT applications. In this section, the different
    units of power consumption in the IoT applications are outlined. With the proposed
    architecture, the latency for the services is reduced which aids in decreasing
    the power consumed. 5 Distance Between Nodes in Fog IoT Assuming there exists
    “M” routers between the source and destination, the end-to-end delay (dE-to-E)
    is given by Eq. (10), when the queuing delay is negligible: $$ {d}_{E- to-E}=M\\ast
    \\left({d}_{proc}+{d}_{trans}+{d}_{prop}\\ \\right) $$ (10) where dproc is the
    processing delay, dtrans is the transmission delay, and dprop is the propagation
    delay [18]. If the link length is doubled from d to 2d, the propagation delay
    is dprop = 2 * dprop. The propagation delay is proportional to the distance between
    the nodes. Hence, the Fog computing reduces the end-to-end delay when the distance
    between the data gathering nodes and edge devices is reduced. 6 Result Analysis
    The Raspberry Pi 3 is used as the end node at the fog computing layer for aggregation,
    computation, and processing. The lightweight protocol is used for data transmission
    between the nodes. MQTT protocol is chosen as the lightweight protocol for transmission
    of the sensor-captured data. The “publish-subscribe” communication model is applied
    in MQTT. The mosquito broker is utilized to send the sensor-captured data between
    the subscriber (farmers) and publisher (SP). The mosquito broker is configured
    to function as a broker on Raspberry Pi system. An instance is created on broker
    with the port number. The topic with name as “IrrigationFertigation” is created.
    The subscribers connect to the broker using this topic. The message to “ON” the
    irrigation/fertigation unit is sent using this topic. The Wireshark tool is used
    to capture the packet information. The filter is applied to compare the packet
    length during transmission using “http” and “mqtt” protocol. The area covered
    with blue represents the packet length for HTTP, and the red color presents the
    packet length for MQTT as shown in Fig. 2. The other lightweight protocol is CoAP
    (Constrained Application Protocol) used for power-constrained devices. In Fig.
    3, the average, minimum, and maximum packet length of non-lightweight protocol
    – Hyper Text Transfer Protocol (HTTP) – and lightweight protocol (MQTT) is represented.
    In Fig. 4, the round-trip time comparison for Cloud IoT and Fog IoT architecture
    is presented. Fig. 2 Comparison of packet length for HTTP and MQTT protocol Full
    size image Fig. 3 Packet length for lightweight protocol and non-lightweight protocol
    Full size image Fig. 4 RTT comparison of Fog IoT and Cloud IoT architecture Full
    size image 7 Conclusion The Fog-enabled IoT architecture proposed reduces the
    round-trip time as the edge devices are closer to the sensor devices. The case
    study presented benefits the farmer to deploy precision agriculture techniques
    in the farm for increasing the crop yield. This model could be scaled to the entire
    rural area. The lightweight protocol is selected for service providing, because
    it aids in lowering the latency and achieving higher throughput. References S.
    Rajeswari and et al., “A smart agricultural model by integrating IoT, mobile and
    cloud-based big data analytics”, 2017 International Conference on Intelligent
    Computing and Control (I2C2), Coimbatore, 2017, pp. 1–5. Google Scholar   A. Khattab
    and et al., “Design and implementation of a cloud-based IoT scheme for precision
    agriculture,” 2016 28th International Conference on Microelectronics (ICM), Giza,
    2016, pp. 201–204. Google Scholar   S. Roy et al., “IoT, big data science & analytics,
    cloud computing and mobile app based hybrid system for smart agriculture,” 2017
    8th Annual Industrial Automation and Electromechanical Engineering Conference
    (IEMECON), 2017, pp. 303–304, https://doi.org/10.1109/IEMECON.2017.8079610. W.
    R. Heinzelman and et al., “Energy-efficient communication protocol for wireless
    microsensor networks,” Proceedings of the 33rd Annual Hawaii International Conference
    on System Sciences, Maui, HI, USA, 2000, pp. 10 pp. vol.2. Google Scholar   P.
    R. Deshmukh and D. Bhalerao, “An implementation of MQTT through the application
    of warehouse management system for climacteric fruits and vegetables”, 2nd International
    Conference on Communication and Electronics Systems (ICCES), Coimbatore, 2017,
    pp. 844–849. Google Scholar   J. Velez and et al., “IEEE 1451-1-6: Providing common
    network services over MQTT,” 2018 IEEE Sensors Applications Symposium (SAS), Seoul,
    2018, pp. 1–6. Google Scholar   M. M. Raikar and et al., “Blend of Cloud and Internet
    of Things (IoT) in agriculture sector using light weight protocol”, 2018 IEEE
    ICACCI, Bangalore. Google Scholar   M. M. Raikar, P. Desai, M. Vijayalakshmi and
    P. Narayankar, “Augmenting Cloud concepts learning with Open source software environment,”
    2018 International Conference on Advances in Computing, Communications and Informatics
    (ICACCI), Bangalore, 2018, pp. 1405–1411. https://doi.org/10.1109/ICACCI.2018.8554826
    M. M. Raikar, P. Desai, V. M and P. Narayankar, “Upsurge of IoT (Internet of Things)
    in engineering education: A case study,” 2018 International Conference on Advances
    in Computing, Communications and Informatics (ICACCI), Bangalore, 2018, pp. 191–197.
    https://doi.org/10.1109/ICACCI.2018.8554546 N. Kaur and S. K. Sood, “An Energy-Efficient
    Architecture for the Internet of Things (IoT),” in IEEE Systems Journal, vol.
    11, no. 2, pp. 796–805, June 2017. https://doi.org/10.1109/JSYST.2015.2469676.
    Farzad Kiani, “A Survey on Management Frameworks and Open Challenges in IoT,”
    Wireless Communications and Mobile Computing, vol. 2018, Article ID 9857026, 33
    pages, 2018. https://doi.org/10.1155/2018/9857026. A. Zanella, N. Bui, A. Castellani,
    L. Vangelista and M. Zorzi, “Internet of Things for Smart Cities,” in IEEE Internet
    of Things Journal, vol. 1, no. 1, pp. 22–32, Feb. 2014. https://doi.org/10.1109/JIOT.2014.2306328
    Izal, Mikel et al. “Computation of Traffic Time Series for Large Populations of
    IoT Devices” Sensors (Basel, Switzerland) vol. 19, 1 78. 26 Dec. 2018, https://doi.org/10.3390/s19010078.
    M. M. Raikar and S. M. Meena, “SSH brute force attack mitigation in Internet of
    Things (IoT) network: An edge device security measure,” 2021 2nd International
    Conference on Secure Cyber Computing and Communications (ICSCCC), 2021, pp. 72–77,
    https://doi.org/10.1109/ICSCCC51823.2021.9478131. M. M. Raikar and M. S M, “Vulnerability
    assessment of MQTT protocol in Internet of Things (IoT),” 2021 2nd International
    Conference on Secure Cyber Computing and Communications (ICSCCC), 2021, pp. 535–540,
    https://doi.org/10.1109/ICSCCC51823.2021.9478156. B. Martinez, M. Montón, I. Vilajosana
    and J. D. Prades, “The Power of Models: Modeling Power Consumption for IoT Devices,”
    in IEEE Sensors Journal, vol. 15, no. 10, pp. 57775789, Oct. 2015. https://doi.org/10.1109/JSEN.2015.2445094.
    A. Ikpehai, B. Adebisi and K. Anoh, “Effects of Traffic Characteristics on Energy
    Consumption of IoT End Devices in Smart City,” 2018 Global Information Infrastructure
    and Networking Symposium (GIIS), Thessaloniki, Greece, 2018, pp. 1–6. https://doi.org/10.1109/GIIS.2018.8635744.
    Kurose, J. F., & Ross, K. W. (2001). Computer networking: A top-down approach
    featuring the Internet. Boston: Addison-Wesley. Google Scholar   Download references
    Author information Authors and Affiliations K. L. E. Technological University,
    Hubballi, India Meenaxi M. Raikar & Meena S M Corresponding author Correspondence
    to Meenaxi M. Raikar . Editor information Editors and Affiliations Dept. of Computer
    Science & Engineering, Indian Institute of Technology Patna, Patna, Bihar, India
    Rajiv Misra Cardiff University, Cardiff, UK Rana Omer Dept. of EE Engineering,
    University of London, London, UK Muttukrishnan Rajarajan Dept. of ECE, National
    University of Singapore, Singapore, Singapore Bharadwaj Veeravalli Dept. of Computer
    Science, Central University of Rajasthan, Tehsil Kishangarh, Rajasthan, India
    Nishtha Kesswani Dept. of CSE, Indian Institute of Information Technology, Kota,
    Jawahar Lal Nehru Marg, Rajasthan, India Priyanka Mishra Rights and permissions
    Reprints and permissions Copyright information © 2023 The Author(s), under exclusive
    license to Springer Nature Switzerland AG About this paper Cite this paper Raikar,
    M.M., S M, M. (2023). Fog Computing-Enabled Internet of Things for Resource Optimization.
    In: Misra, R., Omer, R., Rajarajan, M., Veeravalli, B., Kesswani, N., Mishra,
    P. (eds) Machine Learning and Big Data Analytics. ICMLBDA 2022. Springer Proceedings
    in Mathematics & Statistics, vol 401. Springer, Cham. https://doi.org/10.1007/978-3-031-15175-0_27
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-15175-0_27
    Published 07 June 2023 Publisher Name Springer, Cham Print ISBN 978-3-031-15174-3
    Online ISBN 978-3-031-15175-0 eBook Packages Mathematics and Statistics Mathematics
    and Statistics (R0) Share this paper Anyone you share the following link with
    will be able to read this content: Get shareable link Provided by the Springer
    Nature SharedIt content-sharing initiative Publish with us Policies and ethics
    Download book PDF Download book EPUB Sections Figures References Abstract Introduction
    State of the Art in Fog-Enabled IoT Services Fog Computing-Enabled IoT Architecture
    Energy Model for the Fog IoT Devices Distance Between Nodes in Fog IoT Result
    Analysis Conclusion References Author information Editor information Rights and
    permissions Copyright information About this paper Publish with us Discover content
    Journals A-Z Books A-Z Publish with us Publish your research Open access publishing
    Products and services Our products Librarians Societies Partners and advertisers
    Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy
    choices/Manage cookies Your US state privacy rights Accessibility statement Terms
    and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic
    Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024
    Springer Nature"'
  inline_citation: '>'
  journal: Springer Proceedings in Mathematics and Statistics
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Fog Computing-Enabled Internet of Things for Resource Optimization
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Vyas M.
  - Anand G.
  - Yadav R.N.
  - Nayak S.K.
  citation_count: '1'
  description: In a smart agriculture system many resource-constrained sensors are
    installed near the crops as well as at some strategic locations in an agriculture
    field to collect relevant crop and environment data in real-time. This data is
    then used for both critical latency-sensitive decision making as well as for long-term
    planning. Nowadays, with the help of smart IoT systems, resolving the problems
    like irrigate fields, avoid animal intrusions, notify the farmer about the seasonal
    rainfall etc. becomes easier. The edge of the IoT networks regularly receives
    a huge amount of data generated by sensors that need to be delivered to the server
    present in the remote data centers/cloud for additional real time control or long
    term decision making. However, transmitting huge amount of these IoT data across
    the network toward the cloud imposes a high overhead in terms of bandwidth demand
    and latency on the IoT network. So, the key challenge in building a smart agriculture
    system include high communication latency and bandwidth consumption incurred with
    computing over the data on the cloud. Also, frequent Internet disconnections in
    rural areas may lead to improper latency sensitive decision making at cloud due
    unavailability of data. In this paper to resolve such issues of cloud based smart
    agriculture system, we present a LoRa-based three-tier smart agriculture system
    comprised of (i) Field layer, (ii) Fog computing layer, and (iii) Cloud computing
    layer. In particular, a data aggregation algorithm through a LoRa enabled fog
    computing layer for smart agriculture (DASA) is proposed to compress the total
    amount of IoT data to be uploaded to the cloud. We present the performance of
    our proposed scheme and compare with the existing frameworks for smart agriculture
    system in terms of compression ratio, compression time, compression power, and
    amount of data transmitted to cloud from fog computing layer. Comparison results
    show that the proposed algorithm significantly decreases the volume of data to
    be uploaded to the cloud platform and achieves highest compression ratio among
    other existing schemes. We also tested the performance of the proposed data aggregation
    algorithm on real testbed.
  doi: 10.1007/978-3-031-28451-9_4
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Conference on Advanced
    Information Networking and Applications AINA 2023: Advanced Information Networking
    and Applications pp 40–52Cite as Home Advanced Information Networking and Applications
    Conference paper DASA: An Efficient Data Aggregation Algorithm for LoRa Enabled
    Fog Layer in Smart Agriculture Mayank Vyas, Garv Anand, Ram Narayan Yadav & Sanjeet
    Kumar Nayak  Conference paper First Online: 15 March 2023 453 Accesses 1 Citations
    Part of the book series: Lecture Notes in Networks and Systems ((LNNS,volume 654))
    Abstract In a smart agriculture system many resource-constrained sensors are installed
    near the crops as well as at some strategic locations in an agriculture field
    to collect relevant crop and environment data in real-time. This data is then
    used for both critical latency-sensitive decision making as well as for long-term
    planning. Nowadays, with the help of smart IoT systems, resolving the problems
    like irrigate fields, avoid animal intrusions, notify the farmer about the seasonal
    rainfall etc. becomes easier. The edge of the IoT networks regularly receives
    a huge amount of data generated by sensors that need to be delivered to the server
    present in the remote data centers/cloud for additional real time control or long
    term decision making. However, transmitting huge amount of these IoT data across
    the network toward the cloud imposes a high overhead in terms of bandwidth demand
    and latency on the IoT network. So, the key challenge in building a smart agriculture
    system include high communication latency and bandwidth consumption incurred with
    computing over the data on the cloud. Also, frequent Internet disconnections in
    rural areas may lead to improper latency sensitive decision making at cloud due
    unavailability of data. In this paper to resolve such issues of cloud based smart
    agriculture system, we present a LoRa-based three-tier smart agriculture system
    comprised of (i) Field layer, (ii) Fog computing layer, and (iii) Cloud computing
    layer. In particular, a data aggregation algorithm through a LoRa enabled fog
    computing layer for smart agriculture (DASA) is proposed to compress the total
    amount of IoT data to be uploaded to the cloud. We present the performance of
    our proposed scheme and compare with the existing frameworks for smart agriculture
    system in terms of compression ratio, compression time, compression power, and
    amount of data transmitted to cloud from fog computing layer. Comparison results
    show that the proposed algorithm significantly decreases the volume of data to
    be uploaded to the cloud platform and achieves highest compression ratio among
    other existing schemes. We also tested the performance of the proposed data aggregation
    algorithm on real testbed. Keywords IoT Fog computing Clustering Compression LoRa
    Smart agriculture system M. Vyas and G. Anand have equal contributions. Access
    provided by University of Nebraska-Lincoln. Download conference paper PDF 1 Introduction
    The vast emerging domain of Internet of Things (IoT) has witnessed the ever-growing
    demand for ease in human behavior in various fields like smart homes, smart offices,
    and smart agriculture [6, 18]. The aim of smart agriculture is to improve the
    productivity and reduce farmers efforts by utilizing IoT and advanced communication
    technology [5, 15, 20]. Various applications such as switching ON/OFF water sprinklers,
    detection of animal invasion, fire detection etc. related to smart agriculture
    application require huge amount of data transmission from agriculture fields to
    data centers/clouds for real-time decision making [19, 22]. Because of continuous
    data transmission from sensors deployed in agriculture fields, the edge nodes
    of the IoT networks regularly receives a huge amount of data. However, transmitting
    these huge IoT data across the network toward the data center or the cloud impose
    a high overhead in terms of bandwidth demand and latency on the IoT network. Further,
    as per the available reports most of the farming lands in India are placed in
    remote areas and have very poor Internet connectivity. Hence, it prevents the
    deployment of various short and long range communication techniques such as cellular,
    WiFi, and NB-IoT [4, 9]. To address this issue of communication requirements,
    we utilized the strength of Long Range (LoRa) communication technology [10] for
    smart agriculture which may help farmers in India. It helps in wireless communication
    up to long distances (up to few Kms) without using an Internet connection. So,
    to address the intermittent connectivity issue, in this paper, we present a LoRa-based
    three-tier smart agriculture framework comprised of (i) Field layer, (ii) Fog
    computing layer, and (iii) Cloud computing layer. Fog computing layer brings the
    processing and decision-making power close to the end devices, thus in a way reducing
    the communication time. We can store the data locally and thus, helps in reducing
    the uploading cost to the cloud [11]. Therefore, with the use of fog computing
    layer, rapid response to the end devices can be made and moderate level of computation
    can also be performed at the edge of the network itself (more importantly, even
    in case of Intermittent Internet connection) [7]. When there is a poor Internet
    connection, the fog computing layer need to efficiently utilise the bandwidth.
    So, instead of sending all the data received from the field layer, if we can aggregate
    the data before communicating to the cloud computing layer, then the issue mentioned
    above can be addressed. In this paper, a data aggregation algorithm is developed
    for the LoRa enabled Fog Computing layer that efficiently compresses the data
    before sending it to the cloud. The proposed data aggregation algorithm for Fog
    Layer in Smart Agriculture (DASA) consists of four phases: (i) selecting proper
    attribute of the data for clustering using Euclidean Similarity (ii) determination
    of optimum number of cluster for the received data (iii) clustering on the received
    data, and (iv) compression on each cluster of data. We performed experiments with
    DASA on real dataset [1] and also compared with existing data compression schemes
    like LZW and Huffman. We also conduct experiments and show the performance of
    the proposed algorithm on real testbed. We found DASA provides high compression
    ratio for the data as compared to the existing schemes. The remainder of the paper
    is organized as follows. Section 2 presents the existing related works. The proposed
    communication framework for LoRa enabled data transmission in smart agriculture
    is provided in Sect. 3. Section 4 presents the proposed efficient data aggregation
    framework. Section 5 presents various results in support of performance evaluation
    of DASA. Finally, Sect. 6 concludes the paper and discusses some future works.
    2 Related Work In [21], a decentralized multi competitive clustering protocol
    was proposed which can be used for wireless senor network assisted smart agriculture
    application. Degree of node, residual energy and distance were used for performing
    clustering. In [3], the authors showed that how wireless sensor network can be
    used to build clustering for wireless sensor network. They did the entire experiment
    in Egypt and it results in increased productivity and crop output. Similarly,
    an energy efficient static multi-hop based routing protocol is proposed in [8],
    which helps in finding the static path for data transfer in smart agricultural
    applications. Recently, authors in [13], proposed a novel fuzzy criteria based
    clustering mechanism to find the optimum cluster head in smart agriculture application.
    This approach helps the users of the application by providing the optimum route
    to minimize the usage of energy. In [16], the authors proposed a Gateway clustering
    energy efficient centroid protocol where centroid is used determine the cluster
    head. Also, to reduce the overhead on cluster head, each cluster’s gateway node
    were used to transmitting data to base station. The scheme discussed above does
    not provide considerable amount of data compression and cannot be extended for
    locations having intermittent Internet connection. 3 Proposed Communication Framework
    The communication framework for efficient data collection and processing in smart
    agriculture is shown in Fig. 1. It consists of three layers, namely, field layer,
    fog computing layer, and cloud computing layer. They are linked by cross-layer
    upstream and downstream for data and control information flows. Field Layer: It
    includes the actual sensors deployed in the agriculture field that measure the
    physical parameters of interest such as air temperature, air humidity, solar radiation,
    soil temperature at various depths, wind speed, rainfall, etc. Further, this layer
    can also accommodate intelligent actuators for irrigation, to execute commands
    send from higher layers such as fog or cloud level. Fog Computing Layer: The fog
    nodes collect data from the sensors deployed in the field and execute the data
    processing algorithms for intelligent aggregation that will reduce network traffic
    and bandwidth demand for transmitting data to cloud. Various decision making algorithms
    that exploit the incoming data at this level can be deployed for local decisions,
    thus avoiding completely the increased cost and latency of the upper layer. Cloud
    Computing Layer: Data is transferred towards a cloud platform for long-term storage
    and for performing analytical decisions. To implement this, we aim to use The
    Thing Network [2] platform in conjunction with the data aggregation algorithm
    deployed for the fog computer layer. Various decisions can be made in this layer
    in case of latency and intermittent internet connection issues. Also, the anomalous
    data can be stored in the cloud for future reference. Fig. 1. Proposed communication
    framework using fog computing for smart agriculture Full size image 4 DASA: Proposed
    Data Aggregation Algorithm In this section, the data aggregation algorithm (DASA)
    is discussed in detail for the communication framework provided in Sect. 3. DASA
    consists of four steps: (i) selecting proper attribute of the data for clustering
    using euclidean similarity (ii) determining the optimum number of cluster for
    the received data (iii) clustering on the received data, and (iv) compression
    on each cluster of data. The detailed algorithm is provided in Algorithm 1 and
    discussed below. The idea of applying clustering is to partition the whole data
    received (in various time interval) into groups based on similarity of data values.
    After clustering, each cluster has nearly similar data. So, if we apply compression
    in a cluster, then the compressed data will be smaller in length and finally,
    will results in higher compression ratio. Now, we discuss each steps of DASA in
    detail. We have used a clustering method inspired from agglomerative hierarchical
    clustering, in which the data points are grouped into clusters using euclidean
    distance and later the clusters are merged together using Ward distance [17].
    This clustering uses a bottom-up approach, where each data point starts in its
    own cluster. These clusters are then joined using a greedy approach, by taking
    the two most similar clusters together and merging them. This bottom-up approach
    treat each data point as single cluster and then, successively agglomerates pairs
    of clusters until all the clusters have been merged into a single cluster (which
    contains all the data). We have used two-dimensional clustering, in which the
    algorithm selects two suitable attributes from the received data. We used the
    Euclidean distance method to find the suitable attributes. After the selection
    of attributes, the clustering algorithm gets two attributes to begin clustering
    and it produces the optimal number of clusters based on the value it received
    from the \\(algo\\_to\\_find\\_optcluster()\\) method. This is used to find the
    optimal number of clusters for the received data point in the given time period
    [12, 14]. Below, we provide how to compute the Euclidean distance between the
    data points of two attributes. Euclidean Similarity Let \\(x = \\{x_1,x_2, \\dots
    x_p\\}\\) and \\(y = \\{y_1,y_2, \\dots y_p\\}\\). Then, Euclidean metric is defined
    as Eq. (1). $$\\begin{aligned} d(x,y) = (\\sum _{i=1}^{p} | x_{i}-y_{i}|)^m )^{1/m}
    \\end{aligned}$$ (1) In DASA, we used d(x, y) as Euclidean distance with \\(m
    = 2\\). Ward Linkage: Ward distance is a mathematical norm that is used to merge
    the cluster on the basis of a minimum error scheme. Instead of measuring the distance
    directly, it analyzes the variance of clusters. This method is said to be the
    most suitable method for quantitative variables. Ward’s method says that the distance
    between two clusters, A and B, is the amount of sum of squares increase when we
    merge the clusters. The lesser the value of the function which calculates the
    increase in the error of the sum of squares, more the respective clusters will
    be merged. Mathematically, the Ward linkage is provided as Eq. (2). $$\\begin{aligned}
    \\triangle (A,B)= \\sum _{i \\in A \\cup B} || \\overrightarrow{z_{i}} - \\overrightarrow{m_{A
    \\cup B}}&||^2 - \\sum _{i \\in A} || \\overrightarrow{z_i} - \\overrightarrow{m_{A}}||^2
    - \\nonumber \\\\ {}&\\sum _{i \\in B} || \\overrightarrow{z_{i}} - \\overrightarrow{m_B}||^2
    = \\dfrac{n_{A} n_{B}}{n_{A} + n_{B}} || \\overrightarrow{m_{A}} - \\overrightarrow{m_{B}}||^2
    \\end{aligned}$$ (2) In Eq. (2), \\(\\vec {z_i}\\) and \\(\\vec {m_j}\\) denote
    the center of cluster i and j, and \\(n_j\\) is the number of data points in each
    cluster j. \\(\\triangle \\) is called the merging cost of combining the clusters
    A and B. With clustering, the sum of squares starts out at zero (because every
    point is in its own cluster) and then grows as we merge clusters. Ward’s method
    keeps this growth as small as possible. Fig. 2. Clustering of data Full size image
    The \\(algo\\_to\\_find\\_optcluster()\\) method in Algorithm 1 generates the
    optimal number of clusters based on the numeric values of the attribute given
    to the clustering method. As shown in Fig. 2(a), \\(k=7\\) is the number of required
    clusters, and the 7 clusters are represented in Fig. 2(b). Next, we discuss the
    data compression method i.e., huffman coding, which is used in the third phase
    (see Algorithm 1). In this phase, every data value is used for each cluster to
    construct a heap data structure. Using a while loop a tree is constructed with
    binary value 0 for the left child and binary value 1 for the right child. Subsequently,
    a binary tree is created for each cluster. Finally, the encoded values of each
    cluster are stored and compressed to a binary file, which results as an output
    of DASA. 5 Performance Evaluation The aim of the proposed data aggregation technique
    is to decrease the communication cost by compressing the volume of data that need
    to be transmitted using the Internet to the cloud from the fog layer. After receiving
    the sensors’ data, fog nodes perform preprocessing and remove the redundant data
    and noises from the collected data before applying DASA. After that, fog nodes
    transmit the compressed file to the cloud along with the dictionary required to
    decode the file to get the original data points. In this section, we evaluate
    the proposed data aggregation approach that will be executed at the fog node.
    First, we use the available dataset [1] for preliminary experiments and performance
    evaluation. Then, we also evaluated the performance of the proposed DASA on our
    own testbed (see below). In this section, we compared our proposed DASA Algorithm
    with existing baseline compression algorithms like LZW lossless compression and
    Huffman coding (denoted as Huff). To analyse the performance, We use different
    performance metrics, such as compression ratio (CR), compression and decompression
    time, compression power, and size of transmitted data. Compression Ratio (CR in
    %): Mathematical definition is provided in Eq. (3): $$\\begin{aligned} CR (\\%)
    = (1-\\frac{D_{Compressed}}{D_{Original}}) * 100 \\end{aligned}$$ (3) where \\({D_{Compressed}}\\)
    refers to the data size after compression (Compressed Data) and \\({D_{Original}}\\)
    is the data size before compression (Original Data). Compression Time: It is defined
    as the total time required (measured in seconds) by the scheme to generate the
    compressed file from the original file. Compression Power (CP): It is typically
    defined as the ratio between the uncompressed volume of data to the volume of
    compressed volume of data. Mathematically defined as Eq. (4): $$\\begin{aligned}
    CP = \\frac{D_{Original}}{D_{Compressed}} \\end{aligned}$$ (4) where \\({D_{Compressed}}\\)
    refers to the data size after compression (Compressed Data) and \\({D_{Original}}\\)
    is the data size before compression (Original Data). In the dataset [1], there
    are temperature, humidity, and soil moisture at two different depth as attributes.
    First, we used Euclidean similarity method to select two attributes that will
    be used to cluster the data points. Using Euclidean similarity, we found that
    temperature and humidity are suitable attributes for clustering. Then, we perform
    clustering to group the data points. For that, we use the \\(algo\\_to\\_find\\_optclusters()\\)
    function to find the optimal number of clusters. Figure 2(a) shows the scores
    at the various number of clusters and optimal number of clusters are 7. The final
    clusters are shown in Fig. 2(b). Test Bed Setup: Various sensors connected to
    the Arduino board to monitor the soil moisture, and environmental parameters such
    as temperature, humidity, etc. as shown in Fig. 3. The Arduino board programmed
    to acquire data from the sensors connected to it and send them to the gateway
    (fog node) via LoRa communication, the latest wireless technology that allows
    long distance communication, and low power consumption. It is more suitable for
    smart agriculture applications. We use a star topology to connect sensor nodes
    to the gateway, which is kept at a distance of 1000 mts and at a height of 40
    ft. During the experiments, we found that the latency of the data is around 1.1
    sec. In this way, we can have very few gateways to handle large agricultural lands.
    The characteristics of LoRa communication protocol and sensor’s accuracy used
    in our implementation are presented in Table 1 and Table 2 respectively. Fig.
    3. Test bed setup Full size image Table 1. Preliminary information about LoRa
    communication protocol Full size table Characteristic of Fog Node: At the fog
    layer, we connected Raspberry Pi with 10 channels LoRaWAN GPS concentrator as
    shown in Fig. 3(b). We use the PG1301, a LoRa based multi-channel transmitter/receiver
    designed to simultaneously receive several LoRa packets using random spreading
    factors on random channels. Its goal is to enable robust connection between a
    central wireless data concentrator and a massive amount of wireless end-points
    spread over a very wide range of agriculture field. The PG1301 is based on SX1301
    + 2 \\(\\times \\) 1257 IC. Table 2. Different types of sensors and their accuracy
    Full size table Fig. 4. Comparison of various schemes interms of several performance
    metric Full size image Figure 4(a) shows the compression ratio for various compression
    techniques including DASA using the dataset [1] and Testbed. The compression ratio
    is an important metric that determines the bandwidth demands to transmit the data
    in the network. Figure 4(a) shows that DASA algorithms perform better than the
    original LZW and Huffman compression schemes. The results indicate that DASA generates
    a better compression ratio in comparison with other approaches. DASA compresses
    the data size up to \\(57.39 \\%\\) (for the dataset [1]) and upto \\(38.39\\%\\)
    (for the testbed). Figure 4(b) shows the compression time for various approaches.
    The result shows that our proposed DASA takes higher compression time as compared
    to LZW and Huffman (for the dataset [1] and testbed). Figure 4(c) shows the compression
    power (CP) for various compression techniques including DASA using both the datasets.
    The compression power is an important metric that determines the amount of data
    compressed. Figure 4(c) shows that DASA algorithm perform better than the lossless
    LZW and Huffman. The results indicate that DASA is having a better compression
    power in comparison with other approaches. DASA compresses the data with a CP
    of 2.35 whereas for LZW and Huffman it is 1.18 and 2.09 respectively(for the dataset
    [1]). Similarly, for the testbed dataset DASA achieves a CP of 1.62. Fig. 5. Comparison
    of size of transmitted data (Dataset [1]) Full size image In the next experiment,
    we compare the performance of proposed scheme in terms of volume of transmitted
    data to the cloud. It is the size of the final compressed file that is to be uploaded
    to the cloud, i.e. the file size after applying the DASA/existing compression
    technique. We use The Things Network cloud in our experiment. Figure 5 and Fig.
    6 show the size of transmitted data for the dataset [1] and our won data generated
    from testbed. The result shows that DASA approach can generate a lower size of
    data (to be sent) as compared to the lossless LZW and Huffman (in case of dataset
    [1]). The size of the transmitted file is larger in the case of Huff and LZW as
    compared DASA (see Fig. 5). Fig. 6. Comparison of size of transmitted data (Testbed
    Dataset) Full size image 6 Conclusions and Future Work In this paper, we proposed
    a data aggregation algorithm to reduce bandwidth consumption of LoRa enabled Fog
    layer in smart agriculture (DASA). The entire volume of sensor data is efficiently
    aggregated before uploading to the cloud. Initially, we performed experiments
    on existing data set using python programming language, and then we also conducted
    experiments and show the performance of DASA on real testbed. Comparison results
    show that the proposed algorithm significantly decreases the volume of data to
    be uploaded to the cloud. Thus, can be highly effective for performing data communication
    from fog layer to cloud where Internet is intermittent. In the future, we aim
    to find a representative (a member is called a representative if it is similar
    to most of the members and different from the members in other cluster) of each
    cluster and only the representative will be send to the cloud. We will also analyze
    the trade-off between the cost of information loss vs bandwidth demand and storage
    requirement of the cloud. References Smart Fasal-smart irrigation and fertilization
    system for precision agriculture using internet of things and cloud infrastructure
    (wheat dataset (Feb 2021 to April 2021)). http://smartfasal.in/ftp-dataset-portal/
    The things network. http://swww.thethingsnetwork.org/ Abd El-kader, S.M., El-Basioni,
    B.M.M.: Precision farming solution in Egypt using the wireless sensor network
    technology. Egyptian Inform. J. 14(3), 221–233 (2013) Google Scholar   Ahmed,
    N., De, D., Hussain, I.: Internet of things (IoT) for smart precision agriculture
    and farming in rural areas. IEEE Internet Things J. 5(6), 4890–4899 (2018) Article   Google
    Scholar   Atmaja, A.P., El Hakim, A., Wibowo, A.P.A., Pratama, L.A.: Communication
    systems of smart agriculture based on wireless sensor networks in IoT. J. Robot.
    Control (JRC) 2(4), 297–301 (2021) Google Scholar   Babangida, L., Perumal, T.,
    Mustapha, N., Yaakob, R.: Internet of things (IoT) based activity recognition
    strategies in smart homes: a review. IEEE Sens. J. (2022) Google Scholar   da
    Costa Bezerra, S.F., Filho, A.S., Delicato, F.C., da Rocha, A.R.: Processing complex
    events in fog-based internet of things systems for smart agriculture. Sensors
    21(21), 7226 (2021) Article   Google Scholar   Dubey, A.K., Upadhyay, D., Thilagam,
    P.S.: An energy-efficient static multi-hop (ESM) routing protocol for wireless
    sensor network in agriculture. In: 2018 2nd International Conference on Micro-Electronics
    and Telecommunication Engineering (ICMETE), pp. 277–280. IEEE (2018) Google Scholar   Farooq,
    M.S., Riaz, S., Abid, A., Umer, T., Zikria, Y.B.: Role of IoT technology in agriculture:
    a systematic literature review. Electronics 9(2), 319 (2020) Article   Google
    Scholar   Gkotsiopoulos, P., Zorbas, D., Douligeris, C.: Performance determinants
    in LoRa networks: a literature review. IEEE Commun. Surv. Tutor. (2021) Google
    Scholar   Kalyani, Y., Collier, R.: A systematic survey on the role of cloud,
    fog, and edge computing combination in smart agriculture. Sensors 21(17), 5922
    (2021) Article   Google Scholar   Kumar, U., Legendre, C.P., Lee, J.C., Zhao,
    L., Chao, B.F.: On analyzing GNSS displacement field variability of Taiwan: hierarchical
    agglomerative clustering based on dynamic time warping technique. Comput. Geosci.
    169, 105243 (2022) Article   Google Scholar   Pandiyaraju, V., Logambigai, R.,
    Ganapathy, S., Kannan, A.: An energy efficient routing algorithm for WSNs using
    intelligent fuzzy rules in precision agriculture. Wirel. Pers. Commun. 112(1),
    243–259 (2020) Article   Google Scholar   Patel, P., Sivaiah, B., Patel, R.: Approaches
    for finding optimal number of clusters using k-means and agglomerative hierarchical
    clustering techniques. In: 2022 International Conference on Intelligent Controller
    and Computing for Smart Power (ICICCSP), pp. 1–6. IEEE (2022) Google Scholar   Qazi,
    S., Khawaja, B.A., Farooq, Q.U.: IoT-equipped and AI-enabled next generation smart
    agriculture: a critical review, current challenges and future trends. IEEE Access
    (2022) Google Scholar   Qureshi, K.N., Bashir, M.U., Lloret, J., Leon, A.: Optimized
    cluster-based dynamic energy-aware routing protocol for wireless sensor networks
    in agriculture precision. J. Sens. 2020 (2020) Google Scholar   Roux, M.: A comparative
    study of divisive and agglomerative hierarchical clustering algorithms. J. Classif.
    35(2), 345–366 (2018) Article   MathSciNet   MATH   Google Scholar   Sinha, B.B.,
    Dhanalakshmi, R.: Recent advancements and challenges of internet of things in
    smart agriculture: a survey. Futur. Gener. Comput. Syst. 126, 169–184 (2022) Article   Google
    Scholar   Sungheetha, A., Sharma, R.: Real time monitoring and fire detection
    using internet of things and cloud based drones. J. Soft Comput. Paradigm (JSCP)
    2(03), 168–174 (2020) Article   Google Scholar   Tao, W., Zhao, L., Wang, G.,
    Liang, R.: Review of the internet of things communication technologies in smart
    agriculture and challenges. Comput. Electron. Agric. 189, 106352 (2021) Article   Google
    Scholar   Venkateshwar, A., Patil, V.C.: A decentralized multi competitive clustering
    in wireless sensor networks for the precision agriculture. In: 2017 International
    Conference on Current Trends in Computer, Electrical, Electronics and Communication
    (CTCEEC), pp. 284–288. IEEE (2017) Google Scholar   Zamora-Izquierdo, M.A., Santa,
    J., Martínez, J.A., Martínez, V., Skarmeta, A.F.: Smart farming IoT platform based
    on edge and cloud computing. Biosys. Eng. 177, 4–17 (2019) Article   Google Scholar   Download
    references Acknowledgment We acknowledge TIH-IoT at IIT Bombay for sponsoring
    this work through Technology Development Program via sanctioned letter no. TIH-IoT/21-22/
    TDP/Acad/SL/004. Author information Authors and Affiliations Department of Electrical
    and Computer Science Engineering, Institute of Infrastructure Technology, Research
    and Management (IITRAM), Ahmedabad, India Mayank Vyas, Garv Anand & Ram Narayan
    Yadav Department of Computer Science and Engineering, Indian Institute of Information
    Technology, Design and Manufacturing, Kancheepuram, Chennai, India Sanjeet Kumar
    Nayak Corresponding author Correspondence to Sanjeet Kumar Nayak . Editor information
    Editors and Affiliations Department of Information and Communication Engineering,
    Faculty of Information Engineering, Fukuoka Institute of Technology, Fukuoka,
    Japan Leonard Barolli Rights and permissions Reprints and permissions Copyright
    information © 2023 The Author(s), under exclusive license to Springer Nature Switzerland
    AG About this paper Cite this paper Vyas, M., Anand, G., Yadav, R.N., Nayak, S.K.
    (2023). DASA: An Efficient Data Aggregation Algorithm for LoRa Enabled Fog Layer
    in Smart Agriculture. In: Barolli, L. (eds) Advanced Information Networking and
    Applications. AINA 2023. Lecture Notes in Networks and Systems, vol 654. Springer,
    Cham. https://doi.org/10.1007/978-3-031-28451-9_4 Download citation .RIS.ENW.BIB
    DOI https://doi.org/10.1007/978-3-031-28451-9_4 Published 15 March 2023 Publisher
    Name Springer, Cham Print ISBN 978-3-031-28450-2 Online ISBN 978-3-031-28451-9
    eBook Packages Intelligent Technologies and Robotics Intelligent Technologies
    and Robotics (R0) Share this paper Anyone you share the following link with will
    be able to read this content: Get shareable link Provided by the Springer Nature
    SharedIt content-sharing initiative Publish with us Policies and ethics Download
    book PDF Download book EPUB Sections Figures References Abstract Introduction
    Related Work Proposed Communication Framework DASA: Proposed Data Aggregation
    Algorithm Performance Evaluation Conclusions and Future Work References Acknowledgment
    Author information Editor information Rights and permissions Copyright information
    About this paper Publish with us Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'DASA: An Efficient Data Aggregation Algorithm for LoRa Enabled Fog Layer
    in Smart Agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Shingare H.
  - Kumar M.
  citation_count: '2'
  description: The adoption of Internet of Things (IoT) applications is growing rapidly
    in various sectors to create a smart atmosphere like automobiles, medicine, smart
    cities, agriculture, etc. Each IoT device produces enormous data that requires
    the resources for processing, but these devices have resource constraints. However,
    the cloud platform executes such types of tasks, but it cannot process the real-time
    latency-sensitive applications due to communication delay, scalability, and high
    power consumption. Task offloading becomes a challenging issue, where tasks should
    be allocated to an efficient resource that can process them without delay and
    save energy. Hence, fog computing is a promising solution to address the mentioned
    issue, and it provides a computation-oriented service, is closer to data sources,
    and improves the QoS metrics including delay and energy. Several task offloading
    approaches have been proposed to allocate the resource for IoT applications, but
    are unable to take the appropriate offloading decision and best resource allocation
    which degrades the QoS parameters. In this paper, a whale optimization approach
    is proposed that fills up research gaps by taking the offloading decision at run
    time. The simulation results proved that the proposed approach performs better
    as compared with the state-of-the-art approach.
  doi: 10.1007/978-981-19-6525-8_35
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Soft Computing for Problem
    Solving Conference paper Whale Optimization-Based Task Offloading Technique in
    Integrated Cloud-Fog Environment Conference paper First Online: 02 March 2023
    pp 459–469 Cite this conference paper Access provided by University of Nebraska-Lincoln
    Download book PDF Download book EPUB Soft Computing for Problem Solving Haresh
    Shingare & Mohit Kumar  Part of the book series: Lecture Notes in Networks and
    Systems ((LNNS,volume 547)) 303 Accesses 1 Citations Abstract The adoption of
    Internet of Things (IoT) applications is growing rapidly in various sectors to
    create a smart atmosphere like automobiles, medicine, smart cities, agriculture,
    etc. Each IoT device produces enormous data that requires the resources for processing,
    but these devices have resource constraints. However, the cloud platform executes
    such types of tasks, but it cannot process the real-time latency-sensitive applications
    due to communication delay, scalability, and high power consumption. Task offloading
    becomes a challenging issue, where tasks should be allocated to an efficient resource
    that can process them without delay and save energy. Hence, fog computing is a
    promising solution to address the mentioned issue, and it provides a computation-oriented
    service, is closer to data sources, and improves the QoS metrics including delay
    and energy. Several task offloading approaches have been proposed to allocate
    the resource for IoT applications, but are unable to take the appropriate offloading
    decision and best resource allocation which degrades the QoS parameters. In this
    paper, a whale optimization approach is proposed that fills up research gaps by
    taking the offloading decision at run time. The simulation results proved that
    the proposed approach performs better as compared with the state-of-the-art approach.
    Access provided by University of Nebraska-Lincoln. Download conference paper PDF
    Similar content being viewed by others Towards Computation Offloading Approaches
    in IoT-Fog-Cloud Environment: Survey on Concepts, Architectures, Tools and Methodologies
    Chapter © 2023 Energy and time efficient task offloading and resource allocation
    on the generic IoT-fog-cloud architecture Article 19 July 2019 Energy-Efficient
    Delay-Aware Task Offloading in Fog-Cloud Computing System for IoT Sensor Applications
    Article 17 October 2021 Keywords Cloud computing Fog computing Internet of Things
    Task offloading Whale Optimization(WOA) 1 Introduction In today’s era, mobile
    devices are using different applications such as 3D gaming, virtual reality (VR),
    smart homes, and many more. The data generated by these applications is vast and
    difficult to implement on limited resource available devices like personal laptops
    or mobile devices. It takes a large amount of time to process and sometimes fails
    to satisfy the requirements of the application. The cloud paradigm provides the
    services to IoT applications because it has infinite resources in virtualization
    mode and offers the services as per the demand. There are several characteristics
    of the cloud paradigm like resource pooling, elasticity, on-demand services, etc.,
    which confirms that it is the most momentous and well-known evolution in the computing
    paradigm, but it fails to provide the services to latency-sensitive applications.
    Hence, a new paradigm has been introduced named fog computing to process the real-time
    applications without delay and accomplish the demands of IoT applications at local
    nodes [1]. The main goal of IoT-based applications is to provide end-to-end service
    without the involvement of the user. The fog device provides the services to real-time
    IoT applications such as healthcare systems, video surveillance, parking systems,
    and many more. Fog computing develops its architecture using different routers.
    There are many advantages of fog computing like it creates very low latency in
    between data generation devices and processing or analytics devices, and it also
    reduces bandwidth. It also has more user privacy because it processes data locally
    [2]. Uncountable transmitting or processing delay from IoT device to cloud device
    becomes a highly impactful factor while processing data with maximum network bandwidth,
    transmitting data from IoT applications to the cloud [3]. The main goal of fog
    computing is to create an intermediate platform for processing the data. Such
    systems significantly reduce the transmitting, communicating, and receiving delay,
    thus reducing the overall propagation delay. There are many more applications
    of IoT available that are facing the issue of resource constraints in fog environments
    because the fog paradigm has limited computation and storage capability and cannot
    execute a large amount of data in a limited period of time affecting other QoS
    parameters as well. On the contrary, the centralized cloud infrastructure can
    process a large amount of data but fails to provide accurate results to real-time
    IoT applications, whereas the fog paradigm is a decentralized architecture in
    which many devices are connected. Hence, to overcome the issue of cloud and fog,
    we need the integrated cloud-fog architecture that can process every type of application
    (latency sensitives or others) without violating the constraints. The goal of
    integrated architecture is to allocate the resource for IoT applications where
    resources may be fog oriented or cloud oriented. Hence, identifying the applications
    and offloading them to suitable platforms (cloud or fog) as per their demands
    become a challenging issue in an integrated cloud-fog environment [4]. Fig. 1
    Research approach Full size image 1.1 Task Offloading It is a mechanism to allocate
    the appropriate resources for IoT applications as per their requirement. The required
    resource can belong to the cloud or fog paradigm to process the diverse IoT applications.
    Hence, it becomes a challenging issue to search and allocate the best possible
    resources for delay and resource concerning applications. After the adoption of
    IoT-based applications in various domains, it has received the attention of various
    authors, scientists, and researchers. The IoT devices should offload the applications
    to an appropriate device based on QoS metrics like latency, bandwidth, power consumption,
    scalability, and many more. The rest of the paper is organized as follows. Section
    2 depicts the literature review, and Sect. 3 discusses the whale optimization
    algorithm. We introduce the architecture of an integrated cloud-fog environment
    for the task offloading as described in Sect. 4. The performance of the proposed
    algorithm with results is discussed in Sects. 5 and 6 followed by a conclusion.
    2 Literature Review Several techniques have been proposed by several researchers
    to offload the task efficiently in an integrated cloud-fog environment. Some of
    the recent techniques are discussed below: The authors proposed the LOTEC algorithm
    to study energy-efficient processing of data for managing the trade-off between
    the time it takes to analyze data and the cost of running the system. To evaluate
    the algorithm performance, the authors have implemented the round-robin approach
    to allocate the cloud or fog resources to IoT applications [1]. The authors implemented
    the PSO and BAT algorithms. BAT outperforms the other in a variety of scenarios.
    Makespan reduction leads to energy conservation. The idle time of VMs is reduced
    when the system make span is diminished. VMs are inactive for a short period;
    they consume less energy [5]. The fog nodes are not appropriate for processing
    resource-intensive IoT applications because of their limited resource capacity.
    The authors have proposed an integrated cloud-fog infrastructure to process the
    delay and resource-concerned applications using an efficient metaheuristic offloading
    approach. The proposed firefly algorithm finds the optimal solution and improves
    the QoS parameter’s time and power consumption [2]. The authors focus on resource
    monitoring and the service allocation process. The authors proposed support and
    confidence-based approach that improves resource utilization. Traditional resource
    monitoring algorithms, resource monitoring models, are used to monitor resources,
    and the push model delivers up-to-date resource information and improves service
    efficiency [6]. Existing studies focus on real-time delay-sensitive IoT applications.
    Researchers propose a new delay-dependent priority aware task offloading (DPTO)
    technique for allocating and executing the end user’s requests over the appropriate
    computing machines. The suggested approach prioritizes each work depending on
    its completion time and places it in the multilevel feedback queue to improve
    QoS parameters such as communication time, average queuing time, and offloading
    time [7]. IoT applications must efficiently distribute tasks on fog nodes to increase
    service quality, the authors used two schedulers, particle swarm optimization
    (PSO), and ant colony optimization (ACO) for successfully balancing IoT jobs among
    fog nodes while keeping transmission costs and response time in mind. The proposed
    ACO-based scheduler improves IoT application response time and efficiently balances
    the load [8]. Mobile devices can offload their heavy duties to fog nodes. The
    authors describe a module placement strategy based on classification and regression
    tree algorithms in this research. In cloud and fog computing platforms, simulated
    studies suggest that MPCA outperforms FF and local mobile processing approaches.
    MPMCP has a faster response time and higher performance [3]. This article presents
    a dependable scheduling strategy for assigning customer requests to cloud-fog
    environments’ resources. The load balanced service scheduling approach (LBSSA)
    addresses load balancing across resources when assigning requests. The quicker
    the method for scheduling requests, the greater the value, particularly for real-time
    queries [9]. Load balancing is another important aspect of cloud technology since
    it allows for a balanced distribution of load over several servers to meet customers’
    increasing demands. Particle swarm optimization (PSO), cat swarm optimization
    (CSO), BAT, cuckoo search algorithm (CSA) optimization algorithm, and whale optimization
    algorithm (WOA) were used in this study to balance the load, improve energy efficiency,
    and better resource scheduling [10]. Emerging vehicular applications require a
    real-time connection between the data center and end users. Three-layer service
    architecture with the resources of vehicular fog (VF), fog server (FS), and central
    cloud are used cooperatively. Computational results demonstrate the probabilistic
    task offloading (PTO) issue to reduce the execution time and energy consumption.
    The task offloading approach combines the alternating direction method of multipliers
    with particle swarm optimization to tackle the PTO issue [11]. In VFC, several
    task offloading issues are necessary to be solved. Authors propose the energy-efficient
    scheduling approach to schedule the task on fog nodes to satisfy the task deadline
    and resource allocation using a reinforcement-based algorithm. With a fuzzy logic
    heuristic reinforcement approach, it will outperform other scheduling approaches
    like rate monotonic FCFS [12]. Motivation and Goal: Motivation and Goal: Task
    offloading becomes a significant aspect of the integrated cloud-fog environment
    for IoT networks and directly influences the mentioned QoS parameters. Hence,
    an efficient task offloading technique is required to accomplish the objectives
    without compromising any constraints. The goal of the paper is to understand the
    concept of task offloading, get an overview the existing state-of-the-art strategy,
    and analyze the different QoS parameters that are considered for task offloading
    to ensure that the system needs to link all tasks with available resources efficiently.
    The research methodology figure is shown in Fig. 1 [13]. 3 Whale Optimization
    Algorithm WOA is a nature-inspired algorithm inspired by humpback whales’ bubble-net
    hunting behavior and searches for the optimal solution to the hard computational
    problems in the field of computer science [14]. Bubble-net feeding is a term used
    to describe the foraging behavior of humpback whales. Humpback whales tend to
    hunt krill or small fish near the water’s surface. We have mapped the WOA algorithm
    with our task offloading problem where the algorithm finds the optimal resource
    over the fog server or cloud data center for n number of requests. Each WOA represents
    the solution after mapping with a whale. It is represented with 1 \\(\\times \\)
    n where n is a task. Each element of the mapping whale has 1 and m numbers, where
    m is in total VMs. Exploration phase: The search agent finds the best solution
    randomly based of current position of search agent. $$\\begin{aligned} \\varDelta
    = |\\nu * \\sigma -\\chi | \\end{aligned}$$ (1) $$\\begin{aligned} \\chi (t+1)
    = \\sigma - \\alpha * \\varDelta \\end{aligned}$$ (2) \\(\\sigma \\) = is random
    position vector from population Encircling Phase: During hunting, humpback whales
    surround their prey. The current best candidate solution is considered the best
    and closest to the optimal option. Following is the encircling behavior model
    that is used to update the position of the other whales concerning the best search
    agent. $$\\begin{aligned} \\varDelta = |\\nu * \\varPsi (t) - \\chi (t)| \\end{aligned}$$
    (3) $$\\begin{aligned} \\chi (t+1) = \\varPsi (t) - \\alpha * \\varDelta \\end{aligned}$$
    (4) \\(\\alpha \\text {and} \\nu \\) = are coefficient vector \\(\\varPsi \\)
    = is the best solution position \\(\\chi \\) = is position vector The value of
    \\(\\alpha \\text {and} \\nu \\) calculated as following: $$\\begin{aligned} \\alpha
    = 2 * \\mu * \\omega - \\mu \\end{aligned}$$ (5) $$\\begin{aligned} \\nu = 2 *
    \\omega \\end{aligned}$$ (6) Bubble-net Hunting: This bubble-net hunting strategy
    uses two approaches: shrinking encircling mechanism and a spiral updating position.
    This approach begins with calculating the distance between the hunt (X’, Y’) and
    the whale (X, Y). $$\\begin{aligned} \\chi (t+1)= {\\left\\{ \\begin{array}{ll}
    |\\varPsi (t) - \\chi (t)|*e^{xy}*\\cos (2*\\pi *l)+\\varPsi (t) &{} \\text {if
    } x\\ge 0.5\\\\ \\varPsi (t) - \\alpha * \\varDelta &{} \\text {otherwise} \\end{array}\\right.
    } \\end{aligned}$$ (7) |\\(\\varPsi (t)-\\chi (t)\\)|= distance between whale
    and hunt. x is the constant value, y is the random number[−1,1]. 4 Architecture
    of Integrated Cloud-Fog Environment We have proposed an integrated cloud-fog framework
    that offers the services to upcoming demand in an efficient way and improves the
    QoS metrics. This framework has been divided into three parts: IoT layer, fog
    layer and cloud layer as shown in Fig. 2. Fig. 2 Cloud-fog architecture Full size
    image 4.1 IoT Layer Components for IoT Device Communication [15] 1. IoT Device:
    Any IoT device, from the tiniest temperature sensor to a massive industrial robot,
    is an IoT device. 2. Local Communications: The process through which the gadget
    communicates with nearby devices. 3. Application Protocol: The architecture that
    determines how information material is transmitted is known as the application
    protocol. 4. Gateways: Often used to connect local device networks to the Internet,
    gateways translate and re-transmit data. 5. Network Servers: Systems that control
    the receipt and transmission of IoT data, which are usually housed in data centers.
    6. Cloud Applications: Transform IoT data into actionable information for users.
    7. User Application: This is where users can view IoT data, alter it, and send
    commands to IoT devices. Sensor devices may connect in a variety of ways and with
    a variety of protocols. That is because how they communicate is determined by
    what they are doing, where they are doing it, what other devices and systems they
    need to communicate with, and what they have to say. There is not a single optimum
    protocol, which is effectively a “language” for routing data from one IoT device
    to another. The best option is always determined by the application’s requirements.
    4.2 Fog Layer Fog computing allows IoT devices to do computing, decision-making,
    and action-taking while only sending relevant data to the cloud. Cisco invented
    the term “Fog computing”, and it works as a computing paradigm. The fog brings
    the cloud closer to the devices that generate and act on IoT data. Fog nodes,
    as they are known, may be placed everywhere there is a network connection [6].
    In this section, we will describe the fog model. In a fog environment, there is
    one fog node that is the master and other nodes work as slaves (leader). Fog master’s
    aim is to allocate and manage the resources in a fog environment. It accepts requests
    from client nodes and assigns them to fog slave nodes to process. Fog slave’s
    nodes accept the client node request, create different small chunks of operation,
    and send requests to sensors and fog devices to process them. Each fog device
    collects processing data from sensors and executes the request on source data.
    The fog device node receives the service request from the fog slave node and creates
    a number of container requests that collects data from different IoT sensors and
    return the result to fog slave nodes [6]. 4.3 Cloud Layer This is the top layer
    in the architecture. It has a large number of resources available to process or
    store the data remotely as it is accessible over the Internet. The task is offloaded
    to the cloud environment when it realizes that it can process the data at a fog
    level due to insufficient availability of resources. Sometimes tasks are offloaded
    to fog by cloud because they require less communication overhead over the network.
    Also, fog nodes offload the task to the cloud when it requires storing and processing
    the task for a long period of time. 5 Result and Discussion In this section, we
    will analyze the performance of the proposed whale optimization algorithm in cloud
    and fog environments based upon some QoS metrics. We have also considered some
    test cases for comparative analysis between cloud and fog services for latency-sensitive
    IoT applications or CPU intensive applications. 5.1 Experimental Setup The authors
    have experimented to implement the proposed whale optimization algorithm over
    a system with configuration 8GB RAM, AMD RYZEN processor, and Windows 11 Operating
    System with Java as programming language. Authors have evaluated the performance
    by changing the simulation parameters like task length, task deadline, and resource
    processing speed in different scenarios. The authors have considered two QoS parameters
    named makespan time and execution time for this experiment. To calculate the mentioned
    parameters, we follow the problem formulation from the article [16]. 5.2 Experimental
    Analysis In this section, we have done comparative analysis of whale optimization
    algorithm with two test cases. 5.2.1 Test Case 1 with Task Size 1000 In the first
    discussion, we have taken the 25 resources initially and increased up to 75 for
    this experiment, where all the resources are heterogeneous and their processing
    speed or CPU cycle computation varies from 1500 to 2000. For cloud environment
    processing, transmission delay is considered 0.25 s. We run the proposed whale
    optimization algorithm and found the makespan time for fog is 0.28, 0.24, 0.13
    and cloud is 0.32, 0.26, and 0.14. Figure 3 shows the comparative analysis of
    whale optimization with respect to diverse tasks and heterogeneous VMs. Fig. 3
    Analysis for test case 1: execution and makespan time Full size image Fig. 4 Analysis
    for test case 2: execution and makespan time Full size image 5.2.2 Test Case 2
    with Task Size 1500 In this test case, we have taken 25 resources initially and
    increased up to 75 for this experiment, where all the resources are heterogenous
    and their processing speed or CPU cycle computation varies from 1500 to 2000.
    For cloud environment processing, transmission delay is considered 0.25 s. The
    makespan time for fog is 0.39, 0.25, and 0.19 and cloud is 0.43, 0.29, and 0.21.
    Figure 4 shows the comparative analysis of whale optimization concerning diverse
    tasks and heterogeneous VMs. 6 Conclusion In this paper, firstly we discussed
    the cloud and fog paradigm and their applications. The research methodology approach
    and motivation of the article are depicted in the introduction section. Further,
    we rigorously reviewed some state-of-the-art approaches for task offloading and
    resource allocation in an integrated cloud-fog environment. An integrated cloud-fog
    framework has been proposed for efficient task offloading to improve different
    QoS parameters. In addition, the structure of cloud fog with different layers
    along with their working principle is discussed. In the end, we have implemented
    a metaheuristic algorithm named whale optimization algorithm to offload the task
    in an integrated cloud-fog environment and allocate the best resource for the
    processing of IoT applications. We have evaluated the performance of the proposed
    algorithm over the simulation environment and found that the cloud paradigm is
    unable to process the latency-sensitive IoT applications due to its high delay,
    while such types of applications can process over the fog node due to less delay.
    The cloud paradigm can execute the high workload that can afford the latency.
    For future work, we plan to explore this approach to improve other QoS parameters.
    References Nan Y et al (2017) Adaptive energy-aware computation offloading for
    cloud of things systems. IEEE Access 5: 23947–23957 Google Scholar   Adhikari
    M, Gianey H (2019) Energy efficient offloading strategy in a fog-cloud environment
    for IoT applications. Internet of Things 6:100053 Article   Google Scholar   Rahbari
    D, Nickray M (2020) Task offloading in mobile fog computing by classification
    and regression tree. Peer-to-Peer Netw Appl 13(1):104–122 Article   Google Scholar   Kumar
    M, Dubey K, Pandey R (2021) Evolution of emerging computing paradigm cloud to
    fog: applications, limitations and research challenges. In: 2021 11th international
    conference on cloud computing, data science engineering (confluence), IEEE Google
    Scholar   Mishra SK et al (2018) Sustainable service allocation using a metaheuristic
    technique in a fog server for industrial applications. IEEE Trans Industrial Informatics
    14(10): 4497–4506 Google Scholar   Battula SK et al (2019) An efficient resource
    monitoring service for fog computing environments. IEEE Trans Services Comput
    13(4): 709–722 Google Scholar   Adhikari M, Mukherjee M, Srirama SN (2019) DPTO:
    a deadline and priority-aware task offloading in a fog computing framework leveraging
    multilevel feedback queueing. IEEE Internet Things J 7(7): 5773–5782 Google Scholar   Hussein
    MK, Mousa MH (2020) Efficient task offloading for IoT-based applications in fog
    computing using ant colony optimization. IEEE Access 8: 37191–37201 Google Scholar   Alqahtani
    F, Amoon M, Nasr AA (2021) Reliable scheduling and load balancing for requests
    in cloud-fog computing. Peer-to-Peer Netw Appl: 1–12 Google Scholar   Goyal S
    et al (2021) An optimized framework for energy-resource allocation in a cloud
    environment based on the whale optimization algorithm. Sensors 21(5): 1583 Google
    Scholar   Liu Z et al (2021) A distributed algorithm for task offloading in vehicular
    networks with hybrid fog/cloud computing. IEEE Trans Syst Man Cybernetics: Systems
    Google Scholar   Vemireddy S, Rout RR (2021) Fuzzy reinforcement learning for
    energy efficient task offloading in vehicular fog computing. Comput Netw 199:
    108463 Google Scholar   Kumar M et al (2019) A comprehensive survey for scheduling
    techniques in cloud computing. J Netw Comput Appl 143: 1–33 Google Scholar   Mirjalili
    S, Lewis A (2016) The whale optimization algorithm. Adv Eng Softw 95:51–67 Article   Google
    Scholar   https://data-flair.training/blogs/how-iot-works/ Xu J, Hao Z, Sun X
    (2019) Optimal offloading decision strategies and their influence analysis of
    mobile edge computing. Sensors 19(14):3231 Article   Google Scholar   Download
    references Author information Authors and Affiliations Department of CSE, Dr.
    B.R. Ambedkar National Institute of Technology, Jalandhar, India Haresh Shingare
    Department of IT, Dr. B.R. Ambedkar National Institute of Technology, Jalandhar,
    India Mohit Kumar Corresponding author Correspondence to Haresh Shingare . Editor
    information Editors and Affiliations School of Mathematical and Statistical Sciences,
    Indian Institute of Technology Mandi, Mandi, Himachal Pradesh, India Manoj Thakur
    School of Computing and Electrical Engineering, Indian Institute of Technology
    Mandi, Mandi, Himachal Pradesh, India Samar Agnihotri School of Computing and
    Electrical Engineering, Indian Institute of Technology Mandi, Mandi, Himachal
    Pradesh, India Bharat Singh Rajpurohit Department of Applied Science and Engineering,
    Indian Institute of Technology Roorkee, Roorkee, Uttarakhand, India Millie Pant
    Department of Mathematics, Indian Institute of Technology Roorkee, Roorkee, Uttarakhand,
    India Kusum Deep School of Mathematics, Computer Science and Engineering, Liverpool
    Hope University, Liverpool, UK Atulya K. Nagar Rights and permissions Reprints
    and permissions Copyright information © 2023 The Author(s), under exclusive license
    to Springer Nature Singapore Pte Ltd. About this paper Cite this paper Shingare,
    H., Kumar, M. (2023). Whale Optimization-Based Task Offloading Technique in Integrated
    Cloud-Fog Environment. In: Thakur, M., Agnihotri, S., Rajpurohit, B.S., Pant,
    M., Deep, K., Nagar, A.K. (eds) Soft Computing for Problem Solving. Lecture Notes
    in Networks and Systems, vol 547. Springer, Singapore. https://doi.org/10.1007/978-981-19-6525-8_35
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-981-19-6525-8_35
    Published 02 March 2023 Publisher Name Springer, Singapore Print ISBN 978-981-19-6524-1
    Online ISBN 978-981-19-6525-8 eBook Packages Intelligent Technologies and Robotics
    Intelligent Technologies and Robotics (R0) Share this paper Anyone you share the
    following link with will be able to read this content: Get shareable link Provided
    by the Springer Nature SharedIt content-sharing initiative Publish with us Policies
    and ethics Sections Figures References Abstract Introduction Literature Review
    Whale Optimization Algorithm Architecture of Integrated Cloud-Fog Environment
    Result and Discussion Conclusion References Author information Editor information
    Rights and permissions Copyright information About this paper Publish with us
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Whale Optimization-Based Task Offloading Technique in Integrated Cloud-Fog
    Environment
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mishra S.
  - Nayak S.
  - Yadav R.
  citation_count: '10'
  description: With the advancement and usage of Internet of Things (IoT), smart agriculture
    is evolving rapidly. Smart solutions based on IoT can not only help the farmers
    in maximizing the profits but also help them in reducing the manual supervision
    of agriculture land. In a smart agriculture system, inexpensive, resource-constrained
    sensors are installed near the crops as well as at some strategic locations in
    an agriculture field to collect relevant crop and environment data in real time.
    This data is then used for both critical, latency-sensitive decision making as
    well as long-term planning. The key challenges in building a smart agriculture
    system include high communication latency and bandwidth consumption incurred with
    computing on the cloud, frequent Internet disconnections in rural areas, and a
    need for keeping the overall cost low for the end users (farmers). In this paper,
    we discuss the design and implementation of our on-going, LoRa-based three-tier
    smart agriculture system comprised of (i) Sensing layer, (ii) Fog layer, and (iii)
    Cloud layer. In particular, we focus on the how the low-power, low-bandwidth and
    long-range features of LoRa are utilized to transform traditional agriculture
    land of rural areas in India into smart agriculture system. We present the performance
    of our current prototype and compare with the existing, state-of-the-arts framework
    for smart agriculture system in terms of cost, latency and distance.
  doi: 10.1109/WiSNeT56959.2023.10046242
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2023 IEEE Topical Conference ...
    An Energy Efficient LoRa-based Multi-Sensor IoT Network for Smart Sensor Agriculture
    System Publisher: IEEE Cite This PDF Shivakant Mishra; Sanjeet Nayak; Ramnarayan
    Yadav All Authors 11 Cites in Papers 738 Full Text Views Abstract Document Sections
    I. Introduction II. System Architecture III. Sensing Layer IV. Fog Layer V. Future
    Work Authors Figures References Citations Keywords Metrics Abstract: With the
    advancement and usage of Internet of Things (IoT), smart agriculture is evolving
    rapidly. Smart solutions based on IoT can not only help the farmers in maximizing
    the profits but also help them in reducing the manual supervision of agriculture
    land. In a smart agriculture system, inexpensive, resource-constrained sensors
    are installed near the crops as well as at some strategic locations in an agriculture
    field to collect relevant crop and environment data in real time. This data is
    then used for both critical, latency-sensitive decision making as well as long-term
    planning. The key challenges in building a smart agriculture system include high
    communication latency and bandwidth consumption incurred with computing on the
    cloud, frequent Internet disconnections in rural areas, and a need for keeping
    the overall cost low for the end users (farmers). In this paper, we discuss the
    design and implementation of our on-going, LoRa-based three-tier smart agriculture
    system comprised of (i) Sensing layer, (ii) Fog layer, and (iii) Cloud layer.
    In particular, we focus on the how the low-power, low-bandwidth and long-range
    features of LoRa are utilized to transform traditional agriculture land of rural
    areas in India into smart agriculture system. We present the performance of our
    current prototype and compare with the existing, state-of-the-arts framework for
    smart agriculture system in terms of cost, latency and distance. Published in:
    2023 IEEE Topical Conference on Wireless Sensors and Sensor Networks Date of Conference:
    22-25 January 2023 Date Added to IEEE Xplore: 22 February 2023 ISBN Information:
    ISSN Information: DOI: 10.1109/WiSNeT56959.2023.10046242 Publisher: IEEE Conference
    Location: Las Vegas, NV, USA Funding Agency: SECTION I. Introduction Smart agriculture
    is one of the most promising areas where IoT-enabled technologies have the potential
    to substantially improve the quality and quantity of the crops and reduce the
    associated operational cost. At present, cloud-based infrastructures are being
    utilized to support various smart agriculture applications and data processing.
    Data from smart sensors in the agricultural field is transmitted to the cloud
    over the Internet, and then stored and processed in the cloud for decision making.
    While cloud-based infrastructures certainly offer enormous processing power and
    storage capacity, there are two key limitations that need to be addressed when
    used in the context of smart agriculture [1]: (i) Sensor data transmitted over
    the Internet requires continuous Internet connectivity, consumes high bandwidth
    and incurs delays. (ii) Since IoT devices must transmit large volumes of data
    to the cloud for storage and processing, the energy of battery-powered IoT devices
    is quickly be drained. These limitations make cloud-based infrastructure ill-suited
    for smart agriculture. To address these limitations, we propose a LoRa-enabled,
    fog-based smart agriculture infrastructure that will reduce the quantity of data
    transferred to the cloud and enable latency-sensitive services delivered just
    in time. This paper provides a high-level overview of our project whose goal is
    to develop an end-to-end, LoRa-enabled, fog-based infrastructure for smart agriculture
    in India and USA. We focus on the how the low-power, low-bandwidth and long-range
    features of LoRa are utilized to transform traditional agriculture lands in rural
    areas into smart agriculture system. We describe the design and a preliminary
    implementation of a microservice-based edge server that allows to provide important,
    latency-sensitive services to the farmers and enable operation in a disconnected
    Internet environment. We present the performance of our current prototype and
    compare with the existing, state-of-the-arts framework for smart agriculture system
    in terms of cost, latency and distance. SECTION II. System Architecture The architecture
    of the proposed microservice-based fog enabled infrastructure for smart agriculture
    is shown in the Figure 1. It consists of the following layers: sensing layer,
    fog computing layer, and cloud computing layer, which are linked by cross-layer
    upstream and downstream communication for data and control information flows.
    The sensing layer is comprised of the sensors and actuators deployed across the
    agricultural field to periodically sense the physical parameters of interest such
    as air temperature, air humidity, solar radiation, soil temperature and moisture
    at various depths, wind speed and rainfall. In a typical scenario, agriculture
    fields tend to be at remote locations with low-bandwidth and poor Internet connectivity.
    Furthermore, farmers need to remotely monitor large agriculture fields spanning
    distances of 5 km to 10 km, or even more. To address these challenges, we have
    adopted a LoRa and LoRaWAn enabled communication system due to their support for
    low power, wide area networking designed to wirelessly connect limited energy
    operated IoT devices to an edge server at a distance of 1–2 km. The fog computing
    layer is comprised of one or more servers, e.g. a Dell PowerEdge or Dell Precision
    server. This layer provides an administrative control of the entire IoT infrastructure
    of the agricultural field. This layer addresses the limitations of intermittent
    Internet connectivity, high latency and high network bandwidth consumption of
    cloud-based infrastructure. The fog nodes collect data from the sensors deployed
    in the field, perform key data cleaning, filtering, aggregation and fusion tasks,
    and execute latency sensitive services, such as fire management and animal intrusion
    detection. To facilitate a flexible architecture that may utilize existing container-based
    support for various ML/AI services, we have structured the fog layer as a microservice
    architecture [2]. In this architecture, an application is composed from a collection
    of loosely-coupled microservices, where each microservice is fine-grained and
    the associated protocols are lightweight. Benefits of this architecture include
    modularity, scalability, software reuse, and integration. In our prototype, we
    are employing some of the latest state-of-the-art methodologies for container
    instantiation and intercontainer communication at the layer for high efficiency
    [3]. Figure 1: End-to-end architecture of a lora-enabled, fog-based infrastructure
    for smart agriculture smart agriculture Show All Finally, the cloud computing
    layer is used for performing complex, computational intensive decision making
    as well as for long-term data storage and visualization. SECTION III. Sensing
    Layer Sensing layer consists of several End nodes whose task is to sense the agriculture
    field parameters and communicate them to Fog layer using LoRa communication protocol.
    The end node is responsible for sending the sensors'' data to fog node or receiving
    the actions/commands for actuation from fog nodes. First, we build an End node
    (shown in Figure 2) which consists of various sensors (required for smart agriculture),
    one microcontroller (e.g., ESP32, Arduino Mega, etc.), LoRa Hat with Antenna.
    LoRa hat is build using LoRa SX1276 IC. Various sensors like PIR, IR, Capacitive
    soil moisture, Humidity and Temperature are connected to Arduino microcontroller
    that monitors motion, moisture content in the soil, humidity and temperature of
    the environment respectively. Table I shows sensor''s accuracy used in our implementation.
    Figure 2: Lora end node Show All Table I: Different types of sensors As a part
    of our first experiment, we demonstrated how a fog node can connect and/or communicate
    multiple end nodes. We used single channel (it can communicate with one end node
    at a time) LoRa antenna at fog node. To experiment the scheduling capability of
    fog node, we connected three end nodes with one LoRa enabled gateway (Raspberry
    Pi with LoRa hat) as shown in Figure 3. The end nodes are scheduled in a round
    robin fashion by fog node to avoid interference of data during simultaneous communication
    by the three end nodes. Figure 3: Lora communication using multiple end nodes
    Show All Table II: Lora experiment result Table II shows the experimental results
    obtained while communicating data from end node to the fog gateway. We varied
    the height of sender and receiver and also the distance between them and checked
    the delay in LoRa communication. We performed these experiments in environment
    where are objects and building were present (these obstacles cause channel attenuation
    thus affect the received signal strength). Data that is communicated between sender
    and receiver is 16 bytes. It can be noticed from the Table II that communication
    latency depends distance and height of communicating nodes. It can be observed
    that as we increase distance between sender and receiver, latency increases. Latency
    can be reduced further by placing receiver (fog node) at proper height for real
    time application such as Fire detected or animal intrusion detection. The LoRa
    communication technology (used in this work) is compared with existing other technologies
    like Zigbee, WiFi, Bluetooth low energy (BLE) is provided in Table III. LoRa communication
    has high range (upto 15 KM in rural areas) and it consumes very less power, which
    makes it suitable for application areas where Internet connection is intermittent.
    Table III: Comparison of different communication technology SECTION IV. Fog Layer
    The goal of fog layer is to provide support for latency-sensitive services as
    well as operation in a disconnected environment. In order to gain a deeper understanding
    and better motivate the design of our proposed smart agriculture application,
    we first need to learn the ground reality of the key challenges faced by farmers
    in agriculture. To this end, we conducted a survey with five farmers in India
    to understand (1) what are the key issues they face that could be addressed by
    smart agriculture? (2) what tasks could be simplified by smart agriculture? and
    (3) what new and useful features could be provided by smart agriculture that are
    infeasible at present? Top three challenges identified by the farmers are (1)
    animal intrusion in the field, particularly in the night; (2) rising manual labor
    cost; and (3) fire hazards and efficient irrigation. Our goal is to address each
    of these challenges. At present, we are addressing the problem of animal intrusion.
    In particular, our goal is to automatically detect animal intrusions, develop
    an actuation method to drive away the animals, and inform the farmer(s) in a timely
    manner about the intrusion. Figure 4 shows an architecture diagram. Since this
    is a latency sensitive service, it is completely implemented in the Fog computing
    layer. We are experimenting with three types of sensors, a PIR motion sensor that
    detects if there is any movement in its field of view, an ultrasonic sensor that
    detects distance of the object, and an infrared camera sensor that creates an
    an image using infrared radiation. Details of what actuation we can provide in
    case an animal intrusion is detected is currently being investigated. The current
    actuation mechanism is switching on an LED light. The Security Module passes the
    sensor data it receives from authenicated sensors to the appropriate Data Collector
    & Filter container (Distance, IR images or Motion). Data Collection & Filter containers
    perform two tasks. First, they drop any spurious data, e.g. a distance value larger
    than 15 meters, or an anomalous IR image. Second, they store copies of the data
    received in the last ten minutes or so (time parameter is configurable). Finally,
    the Animal Detection container detects if there is an animal intrusion, including
    perhaps identifying the type of animal using machine learning models. The Animal
    Detection container is being designed to operate for any or all of the three sensors.
    For example, based on the cost-benefit tradeoff, a farmer may choose a low-cost
    solution and install only PIR motion sensors, in which case the accuracy of animal
    intrusion would be lower, while another farmer may choose to install all three
    types of sensors, in which case the accuracy of animal intrusion would be much
    higher. Figure 4: End-to-end architecture of a lora-enabled, fog-based infrastructure
    for smart agriculture smart agriculture Show All All intercontainer communication
    at this layer, e.g. from security module to Data Collector & Filter containers
    or fromm Data Collector & Filter containers to Animal Detection container is implemented
    using our shared memory based inter-container tool that is compatible with Kubemetes
    [3], [4]. SECTION V. Future Work This project is currently on-going with a goal
    to develop an end-to-end prototype of a smart agriculture system from low-cost
    sensors on one end to the cloud on the other end with edge server in the middle.
    ACKNOWLEDGMENT This research is supported in part by grants from TIH-IoT (TIH-IoT/2022-07/
    IC /NSF/SL/ NIUC-2022-04/005) and NSF (13012641). Authors Figures References Citations
    Keywords Metrics More Like This Towards Integration of Wireless Sensor Networks
    and Cloud Computing 2015 IEEE 7th International Conference on Cloud Computing
    Technology and Science (CloudCom) Published: 2015 Internet of Things and Wireless
    Sensor Networks for Smart Agriculture Applications: A Survey IEEE Access Published:
    2023 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2023 IEEE Topical Conference on Wireless Sensors and Sensor Networks, WiSNeT
    2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An Energy Efficient LoRa-based Multi-Sensor IoT Network for Smart Sensor
    Agriculture System
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Tu J.
  - Aznoli F.
  - Jafari Navimipour N.
  - Yalcin S.
  citation_count: '2'
  description: Regardless of public perceptions of the agricultural techniques, the
    fact is that the current agriculture industry is more data-driven, accurate, and
    intelligent than before. Therefore, novel technologies such as fog computing and
    the Internet of Things (IoT) can provide a flexible and real-time platform to
    meet the data-driven requirements of the current agricultural decision-makers.
    Smart agriculture is a new idea since IoT sensors and fog platforms can provide
    information about agriculture and then operate on them based on user feedback.
    Also, with the rapid growth of IoT, the importance of recommender systems is increased
    in this domain. Therefore, the main goals of this study are to improve the accuracy
    of agricultural service recommendations and decrease the Mean Absolute Error (MAE)
    in the IoT-based fog systems using collaborative filtering and artificial Artificial
    Bee Colony (ABC). However, many of the current methods suffer from low accuracy
    of recommendations of the agricultural services. The present article suggested
    a collaborative filtering-based approach based on the ABC and genetic operators
    to design an effective recommender scheme in fog-based IoT systems. The results
    showed that the accuracy and MAE are optimized compared to some state-of-the-art
    methods. They also revealed that compared to other methods, the proposed method
    improves ranking score by 5.8 %, precision by 5%, recall by 5.7%, intra similarity
    by 13%, and hamming distance by 4.8%.
  doi: 10.1016/j.cie.2022.108605
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract BetaPowered by GenAIQuestions answered in this article
    Keywords 1. Introduction 2. Related work 3. Proposed algorithm 4. Results 5. Conclusion
    and future works CRediT authorship contribution statement Declaration of Competing
    Interest Appendix A. References Show full outline Figures (13) Show 7 more figures
    Tables (3) Table Table 1 Table 2 Computers & Industrial Engineering Volume 172,
    Part A, October 2022, 108605 A new service recommendation method for agricultural
    industries in the fog-based Internet of Things environment using a hybrid meta-heuristic
    algorithm Author links open overlay panel Jiaqing Tu a, Fariba Aznoli b, Nima
    Jafari Navimipour d, Senay Yalcin c Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.cie.2022.108605
    Get rights and content Highlights • Increasing the accuracy of agricultural service
    recommendations in the IoT systems based on the fog using collaborative filtering
    and artificial ABC. • Decreasing the MAE of agricultural service recommendation
    in the IoT systems based on the fog using collaborative filtering and ABC. • Presenting
    results from computer tests that show the efficacy of the suggested method and
    the features of the final solution. Abstract Regardless of public perceptions
    of the agricultural techniques, the fact is that the current agriculture industry
    is more data-driven, accurate, and intelligent than before. Therefore, novel technologies
    such as fog computing and the Internet of Things (IoT) can provide a flexible
    and real-time platform to meet the data-driven requirements of the current agricultural
    decision-makers. Smart agriculture is a new idea since IoT sensors and fog platforms
    can provide information about agriculture and then operate on them based on user
    feedback. Also, with the rapid growth of IoT, the importance of recommender systems
    is increased in this domain. Therefore, the main goals of this study are to improve
    the accuracy of agricultural service recommendations and decrease the Mean Absolute
    Error (MAE) in the IoT-based fog systems using collaborative filtering and artificial
    Artificial Bee Colony (ABC). However, many of the current methods suffer from
    low accuracy of recommendations of the agricultural services. The present article
    suggested a collaborative filtering-based approach based on the ABC and genetic
    operators to design an effective recommender scheme in fog-based IoT systems.
    The results showed that the accuracy and MAE are optimized compared to some state-of-the-art
    methods. They also revealed that compared to other methods, the proposed method
    improves ranking score by 5.8 %, precision by 5%, recall by 5.7%, intra similarity
    by 13%, and hamming distance by 4.8%. Previous article in issue Next article in
    issue Questions answered in this article BetaPowered by GenAI This is generative
    AI content and the quality may vary. Learn more. What is the main feature module
    of the agricultural marketing recommendation system based on the cloud? How does
    a fog-based recommender system minimize the need for Internet access and cloud
    servers? What are the features of intelligent recommendations for agricultural
    products? What is the role of e-commerce platforms in the sales of farm products?
    What are the primary drivers behind this paper? Keywords Smart farmingAgricultureInternet
    of ThingsFogRecommender systemArtificial bee colonyGenetic algorithm 1. Introduction
    Internet of Things (IoT) offers an opportunity for many technologies in a wide
    range of industries, including the food and agriculture sector (Cao et al., 2021,
    Li et al., 2021, Yu, 2022, Zhao et al., 2021). The integration of the IoT into
    the agricultural system has led to maximizing benefits and improving agricultural
    services in the big data era (Ostad-Ali-Askari and Shayan, 2021, Yang et al.,
    2021). The agriculture domain is experiencing new evolution caused by fog, MapReduce
    IoT, and cloud technology (Eslamian et al., 2018, Ostad-Ali-Askari and Shayannejad,
    2020, Wu et al., 2017). Besides, industries are still looking at improving efficiency
    and decreasing operating expenses. They search for ways to enhance performance,
    such as system stability, fault tolerance, flexibility, and cost-effectiveness,
    leading to more complexity and interactivity (Tariq et al., 2019). To fulfill
    these requirements, fog computing was widely applied as an interconnected extension
    of cloud computing (Zhao et al., 2020). Fog may be a router, server, switch, or
    any other thing or device with processing and storage capabilities. Fog-based
    IoT can address many privacy, security, and performance issues. Fog-based IoT
    is an innovative and remarkable communication technology solution that delivers
    many services with fixed network bandwidth, portability assistance, and low latency
    (Michael, 2021, Singh et al., 2020). The requirement and significance of fog in
    IoT have been illustrated in several surveys (Jalali et al., 2017). A recommender
    system can recommend suitable services that consider users’ interests (Aznoli
    and Navimipour, 2017, Wu et al., 2020, Xu et al., 2021). With emerging novel and
    network-based services and apps on the Internet, end-users'' data flow and the
    utilized services are growing dramatically. It is a helpful trend for selecting
    suitable services, but a high level of complexity may happen at the same time
    (Shrestha et al., 2014). Research on recommendation systems is not new; it has
    been in progress since the ''90 s (Pazzani & Billsus, 2007). In recent years,
    these systems have meaningfully influenced decreasing the negative effect of information
    overload on cloud providers (Jararweh et al., 2014). In fact, they have been generated
    simultaneously with the Web to suggest the most suitable services for users (Foster,
    et al., 2008, Xu et al., 2021). It was hard for consumers to arrive at the most
    appropriate selections from the massive diversity of offered products and services
    (Lei et al., 2021, Ricci et al., 2011). The systems related to the ICT have great
    potential for application in food and agriculture, mainly because of this sector''s
    societal and environmental challenges (Ireri et al., 2021, Thapa et al., 2020).
    The issues of information overload in IoT (Mou et al., 2022), and the difficulty
    of optimizing it, are the primary drivers behind this paper. A fog-based hybrid
    recommender system will solve both problems. A fog-based recommender system will
    prefilter worthless data and process data locally within the limits of its computational
    capability. Thus, the system will significantly minimize the need for Internet
    access and cloud servers. A fog-based system can offer recommendations after learning
    the preference relation connections within different fog nodes, fog servers, and
    IoT (Wang et al., 2019). Because of the significance of system accuracy for users
    and providers, this research focuses on agricultural service recommendations in
    IoT systems based on fog to recommend the most suitable services according to
    customer necessities with high accuracy. This research proposes a collaborative
    filtering approach based on genetic operators and Artificial Bee Colony (ABC)
    to design efficient agricultural service recommendations in fog-based IoT systems.
    To the best of our knowledge, this is the first research where agricultural service
    recommendation is analyzed in the fog-based IoT systems usıng collaborative filtering
    based on the ABC and genetic operators to design an effective recommender scheme.
    The main goals of the present investigation are: • Increasing the accuracy of
    agricultural service recommendations in the IoT systems based on the fog using
    collaborative filtering and artificial ABC; • Decreasing the MAE of agricultural
    service recommendation in the IoT systems based on the fog using collaborative
    filtering and ABC; • Presenting results from computer tests that show the efficacy
    of the suggested method and the features of the final solution. The related literature
    is discussed in Section 2. Section 3 explains the suggested method of recommending
    fog-based IoT systems using collaborative filtering and the ABC algorithm. Section
    4 defines the empirical outcomes. Ultimately, Section 5 provides conclusions and
    suggestions for upcoming investigations. 2. Related work Most researchers employed
    some methods such as collaborative filtering, knowledge-base (Zheng et al., 2021),
    heuristic, and meta-heuristic algorithms to solve this problem. In this section,
    we review some newly proposed recommender systems. Altaleb, Deeken (Altaleb, Deeken,
    & Hertzberg, 2022) proposed a method to extend the CRoss-Industry Standard Process
    for Data Mining (CRISP-DM) to focus on the agricultural domain and give guidelines
    on handling and structuring the agricultural data and processes to reach defined
    data mining goals. In addition, the paper provided a walk-through for a use case
    to build a recommendation system. The results showed that the proposed process
    model helped structure the data-driven model''s development. Xu, Qin (Xu et al.,
    2021) presented an approach (GA-PSO) for resource recommendation in the fog-based
    IoT using a hybrid optimization algorithm. The CloudSim simulation environment
    is used for simulation. The findings demonstrated that the suggested technique
    outperforms existing algorithms in terms of performance and accuracy. Also, Junhui,
    Chushan (Junhui et al., 2021) summarized the features of intelligent recommendations
    for agricultural products. Then, they introduced the research status of intelligent
    recommendation of farm products based on big e-commerce data from 4 features:
    commodity information utilization, user behavior mining, recommendation algorithm
    design, and assessment of agricultural products recommendation. The results showed
    that as the online sales of farm products maintained a high growth rate, the e-commerce
    platform became an essential channel for farming products sales. Hui and Li (Hui,
    Li, & Collaborative Recommendation Model, 2021) proposed a personalized recommendation
    collaborative filtering model for agricultural planting technology integrating
    user features. The user characteristic tags were used from farmers'' attributes
    and calculated user similarity through Jaccard. At the same time, slope one is
    applied to enhance the user-based collaborative filtering recommendation algorithm,
    and the user similarity is calculated via the revised cosine similarity. The results
    showed that the algorithm improves precision, recall rate, and F1 value compared
    to user-based collaborative filtering and user-characteristic-based recommendations.
    Moreover, Jejurkar, Vaibhav (Jejurkar et al., 2021) proposed a model for expecting
    soil plan and giving sensible yield. The results showed that the sacked tree and
    K-Nearest Neighbors (KNN) had incredible accuracy among the classifiers. The sponsorship
    vector machine has given the most raised precision in soil gathering with less
    time. A multi-cell multi-antenna recommendation is a problem that Yang, Fu (Yang
    et al., 2020) studied. They developed a common suggestion, caching, and beamforming
    optimization issues to reduce content transmission latency. Challenging a two-time-scale
    mixed integer nonlinear programming issue is minimization that is difficult to
    tackle. They suggested a substitute optimization algorithm of low complexity by
    dissolving the original issue into three sub-problems based on the structural
    properties of the issue. The results showed that this approach would greatly minimize
    the time for content to be transmitted. Naik (Naik, 2020) proposed a co-scheduling
    system that suggests proper fog-node to implement IoT applications and manage
    load in the cloud-fog environment (CoS_FRLM). The CoS-FRLM determines each application''s
    Pheromone Indicator (PI) value and suggests running the IoT application on a fog
    node with a higher PI value. The outcomes showed that this method outperforms
    the existing load management and scheduling methods by efficient resource usage,
    decreased service costs, and makespan-time. Also, Lin, Zhou (Lin et al., 2019)
    proposed a weighted interest degree recommendation method utilizing association
    rules for intelligence on the Internet of Vehicles (IoV) to attain more precise
    recommending content. Initially, in order to create the association rule mining,
    the user data were inspected. Afterward, the consumer interest score was predicted
    by examining the association among consumer interests to suggest personalized
    service for the consumer. The findings indicated that the suggested algorithm
    would provide more accurate recommendations. Erdeniz, Maglogiannis (Erdeniz et
    al., 2018) suggested a new recommender system for IoT, which help patients find
    new applications, healthcare technologies, and physical exercise schedules. They
    examined the applicability and benefits of recommendation approaches in IoT-based
    m-health applications by demonstrating examples of their project''s (AGILE) pilot
    application (Quantified-Self). They suggested two recommendation usage cases:
    virtual coach and nurse, all of which assist consumers/patients in improving their
    wellbeing. The results showed that the recommendation result is accurate. Furthermore,
    to enhance the scalability and precision of consumer-based collaborative filtering
    methods, Menhaj and Jamalzehi (Menhaj & Jamalzehi, 2016) identified two homophily
    and influence correlation indices derived from common social phenomena used to
    synthesize user interest. So, they offered a proximity-based similarity assessment
    model employing fuzzy logic. Ultimately, the technique''s effectiveness on a MovieLens
    dataset compared to state-of-threat approaches was demonstrated. Furthermore,
    the obtained results showed that it solves cold start and sparsity problems. Also,
    Fang, Liu (Fang et al., 2016) suggested an agility-oriented and fuzziness-embedded
    cloud service ontology model that uses agility-centric design and Web Ontology
    Language (WOL2). The cloud service features that had been captured were held transparently
    and interactively. The model offers a full-service definition by incorporating
    cloud design specifics and their interactions. Also, through the knowledge-based
    nature of the model, a service recommendation system prototype is constructed.
    Case studies illustrated that the method could conduct better than available methods
    by obtaining efficient service search, retrieval, and recommendation results.
    In order to produce reliable recommendations for producers, Haiyan and Tao (Haiyan
    & Tao, 2015) suggested an agricultural marketing recommendation system based on
    the cloud. The main feature modules are the consumer interest module based on
    the obvious and implicit construct, information retrieval and preprocessing, and
    the recommendation algorithm module usıng a mixture of BP and SOM neural networks.
    The findings revealed that the outcome of the recommendation is correct; the system
    is functioning normally; also, it is capable of achieving successful outcomes.
    Finally, Geng, Li (Geng et al., 2015) developed a basic recommender scheme that
    combines mutual filtering with a multi-objective evolutionary algorithm. It aimed
    to increase the recommendation list''s diversity while maintaining the system''s
    consistency. Multi-objective algorithms were utilized to find a collection of
    Pareto solutions in order to allow a trade-off between the competing priorities.
    The lists that the target consumer should have liked were also projected using
    this tool. Each list made a particular trade-off between accuracy and variety
    when it came to matching. If the customer had a problem with one of the lists,
    extra recommendation lists with a diverse focus; the customer could choose from
    the trade-off Pareto options. 3. Proposed algorithm In this section, the cloud
    model of recommender systems is first presented. Afterward, the Genetic Algorithm
    (GA) and ABC algorithm are described in detail for clustering in the recommender
    system. 3.1. IoT in the field of agriculture The structure of fog-based IoT is
    three-layered. The IoT layer consists of physical objects embedded with sensors
    and electronics to capture information and data. The fog layer is the second layer,
    and it is where you can do some preliminary data processing or trust assessment
    before sending the data to the cloud. Eventually, the cloud layer (third layer)
    aids in the storage or processing of any large computation in order to derive
    valuable information (Hussain & Huang, 2018). Many studies recognize the significance
    of using emerging technologies in intelligent agriculture (Danner et al., 2021,
    Torky and Hassanein, 2020). Smart farming adopts advanced technology and the corresponding
    principles to improve production and economic returns and decrease the environmental
    impact (Köksal & Tekinerdogan, 2019). It is the era of digitalization. Therefore,
    digitalization also is required in agriculture. Fog-based IoT services are becoming
    popular. Using IoT in agriculture can boost yield. The use of IoT in farming will
    help increase the yield and is beneficial for the farmers (Aher et al., 2018).
    As seen in Fig. 1, the IoT will bring a variety of innovations to the agricultural
    sector. It has the potential to be very beneficial to the agricultural sector:
    soil control to keep an eye on the humidity and moisture levels in the soil; crop
    inspection to track and manage leaf diseases and insects, all of which are extremely
    damaging to crops; optimizing the use of soil fertilizers to increase crop production
    while reducing the time and expense associated with soil testing; monitoring the
    field''s atmosphere and ambient temperature. Farmers, agriculture experts, and
    the government will use these services to assess the present situation and forecast
    possible harvests (Bansal, Ahirwar, & Shukla, 2019). Download : Download high-res
    image (242KB) Download : Download full-size image Fig. 1. IoT in the field of
    agriculture. 3.2. Mathematical model The services'' location, number (n), and
    the number of users (m) have been determined before. The mathematical model of
    service recommendation to the intended user is zero-and-one nonlinear. This zero-and-one
    variable is defined as (1). (1) (2) Eq. (3) is related to the capacity limit of
    each service, which means that it can support the user. Mk is the maximum number
    of requests of user k. λi is the number of requests or communications that service
    i can have per unit time. (3) Eq. (4) considers the cost of the exchange. When
    two different services are connected to a specific user, yij is one; otherwise,
    it is zero. (4) If yij is one, the exchange cost in the objective function (5)
    is zero, where hij is the exchange cost between service i and service j. (5) The
    connection cost is also calculated using (6), where cik is the connection cost
    between service i and user k for each product, and dik is the distance between
    service i and user k. (6) Ultimately, the objective function of the mathematical
    model of the issue will be minimized as (7). (7) 3.3. Displaying answers The random
    key method is used to display the answers in this algorithm. It means that the
    answers are in the form of a matrix (n × 1), n is the number of services. Each
    entry is a decimal number, the integer part representing the user number to which
    the service is associated. Among the devices with the same integers, the one with
    the smallest decimal number is the user''s location. For example, look at the
    following answer, which is for 7 services (n = 7) and 3 users (m = 3): (3.45,
    3.15, 1.41, 2.12, 2.49, 2.90, 1.23) Services 1 and 2 are recommended to user 3,
    and user 3 is recommended to service 2. Services 3 and 7 are recommended to user
    1, and user 1 is recommended to service 7. Services 4, 5, and 6 are recommended
    to user 2, and user 2 is recommended to service 4. Fig. 2 shows how services are
    recommended to users and where users are located for the above answer, assuming
    the desired coordinates for the services. Download : Download high-res image (101KB)
    Download : Download full-size image Fig. 2. An example of recommending services
    to users. 3.4. Genetic algorithm Holland invented the GA, which is an evolutionary
    algorithm to solve complex optimization problems (Holland, 1992). A random solution
    is optimized over generations in the GA, and each novel population is generated
    by human mutation and crossover (Mirjalili, Mirjalili, & Lewis, 2014). GA has
    fast operating and convergence speed and simultaneously local search and early
    convergence features. Based on its features in optimization problems, it is used
    to increase the accuracy of the results. The algorithm utilizes GA with a heuristic
    approach to achieve its goals. The GA operators are important to converge a population''s
    individuals (Abed et al., 2014). Selection, mutation, and crossover are the three
    primary genetic operations in the simple GA algorithm (Pirnazar et al., 2018,
    Xu et al., 2014). 3.5. ABC algorithm Karaboga (Karaboga, 2005) presented the ABC
    in 2005. It is an effortless, stable, and population-based stochastic algorithm
    inspired by honey bee intelligence. On restricted and unrestrained issues, the
    efficiency of the ABC is compared to many other modern heuristic algorithms such
    as PSO and Differential Evolution (DE) (Basturk and Karaboga, 2006, Karaboga and
    Basturk, 2007). The colony of bees includes three types of them: onlooker bees,
    employed bees, and scouts. A potential solution to the optimization issue can
    be seen in the form of a food supply. The amount of nectar in a food supply is
    proportional to the solution''s consistency. Around the hive, the number of food
    supplies and employed bees is equivalent. The employed bee was converted to a
    scout after abandoning the food supply. The ABC produces a random population of
    N solutions that explains the employed bee . The novel solution is produced based
    on as below (Karaboga & Ozturk, 2011): (8) where is a neighbor employed bee of
    and it is created randomly. The objective functions for and are computed for and
    respectively; then, if , the solution is removed from the memory of the first
    collection and is added. is obtained from employed bees and is moved to the onlooker
    bees. Afterward, the roulette wheel selection strategy is employed to define the
    probability of selecting the bees for the next steps: (9) Each onlooker bee uses
    the same mechanism as the employed bees to upgrade the solution. The onlooker
    bee evaluates both the current and old solutions in order to determine if the
    old one can be erased from memory. For a certain number of repetitions, if there
    is no discrepancy between the solutions, they are discarded; then, the scout bee
    discovers a new solution to update as: (10) where is an optimized parameter for
    the ith employed bee, and are the lower and upper bounds for , and δ is a random
    number. When a new solution, is generated, it becomes an employed bee (Ewees et
    al., 2020). The principal levels of the algorithm are as follows: 1) Create an
    initial population. 2) Repeat. 3) Deploy the Employed Bees (EB) on their food
    sources. 4) Deploy the Onlooker Bees (OB) on food sources according to their nectar
    amount. 5) Send scout bees to the search space to find new food sources. 6) Remember
    the best food source ever found. 7) Continue this function until the stop conditions
    are established. Pseudo-code of the ABC algorithm is shown in Algorithm 1. Algorithm
    1. Pseudo-code of the ABC algorithm 1) Load test samples 2) Create the initial
    answer Xi where i = 1,2,…,SN 3) assess population fitness (fiti) 4) Set the cycle
    to 1 5) Repeat 6) Create a new answer for each employed bee according to (8),
    calculate the value of fiti, and apply the selection process 7) Calculate the
    probability value pi for the answers according to (9) 8) For each onlooker bee,
    select an answer using pi and generate a new answer, calculate its value fiti
    and apply the selection process 9) If there is an abandoned answer for the scout
    bee, replace it with a new answer that is randomly generated according to (10)
    10) Save the best answer 11) Add one to the value of the previous cycle 12) Continue
    this action until the cycle is the Maximum Cycle Number (MCN) 3.6. ABC based on
    genetic operators Since each GA and ABC have advantages and disadvantages, both
    can be used to overcome the disadvantages. GA has great speed and quickly converges,
    but the disadvantages of falling into local optimization and early convergence.
    In addition, the structure of basic ABC has no suitable local search, and it is
    better to be combined with other algorithms. This article uses ABC based on genetic
    operators to design a cloud recommender system introduced in (Ozturk, Hancer,
    & Karaboga, 2015). The algorithm sets the initial population randomly, then classifies
    the services’ features and users according to the collaborative filtering approach.
    Those users, who have used a service, record a comment about it. Users in each
    category are also connected, creating a communication graph (V, G) in which V
    represents the system users, and G represents the relationship between users.
    In the next stage, users are selected based on who is closer to the target user
    and get checked which service they used and liked to find appropriate services.
    The genetic operator puts the selected services next to each other and creates
    a gene that is a solution to the problem. The selected services will be combined
    to generate various solutions. Finally, the solution that is closest to the user''s
    preferences is selected. The ABC-GA algorithm will be iterated until the termination
    situation is met. In each repetition of the algorithm, the approach finds an optimal
    solution that may come in later repetitions or find a better one. If the found
    solution is better than the previous, the algorithm continues. Otherwise, it terminates
    automatically if it cannot find a better solution after 10 rounds. The main steps
    of the proposed method are: 1. Start the algorithm, receive, and check the inputs.
    2. Identify the neighbor users of each user based on the relationship graph. 3.
    Calculate the similarity of neighbor users to each user and gather similar users
    in a group. 4. Define the variables GBest and Zero (with the initial value of
    zero). 5. For each employed bee i, perform the following steps: a) Create two
    new feeding areas randomly (Xj and Xk) in the neighborhood (Xi). b) Consider the
    variables Xi, Xj, Xk, and Zero as the parents. c) Randomly select two parents,
    complete the merging operation and create the child feeding area. d) Perform the
    mutation operation on the child feeding area. e) Repeat steps c and d for the
    number of population times. f) Choose the best feeding area based on the values
    of the fitness function. 6. For each onlooker bee i, perform the following steps:
    a) Select a feed area according to the roulette wheel (Xi). b) Create two new
    feeding areas randomly (Xj and Xk) in the neighborhood (Xi). c) Consider the variables
    Xi, Xj, Xk, GBest, and Zero as the parents. d) Randomly select two parents complete
    the merging operation and create the child feeding area. e) Perform the mutation
    operation on the child feeding area. f) Repeat steps c and d for the number of
    population times. g) Choose the best feeding area based on the values of the fitness
    function. 7. If there is a trapped feeding area, send the explorer bee to check.
    8. Update GBest according to the best possible area discovered in steps 5, 6,
    and 7. The ABC-GA algorithm creates recommendations in two stages: In the first
    stage, it classifies users based on a collaborative filtering method and determines
    their similarities based on Eq. (11) (Navimipour, Keshanchi, & Milani, 2017):
    (11) In the subsequent stage, subscribers who are closer to the target subscriber
    are found. The services used and liked by them get checked, and appropriate services
    to the target user by the ABC algorithm will be found. GA uses a single-point
    approach in the crossover and mutation operations. The crossover operator combines
    the selected parents to create new children. Besides, the mutation operator changes
    the children regarding the specified rules. Then, the best feeding areas based
    on fitness function are selected, shown in Eq. (12). It selects the agricultural
    services that are most similar to user’s interest. Provided single point operator
    generates four children while changing both sides of children. (12) Fig. 3 illustrates
    the example of a single-point crossover operation in the proposed algorithm, and
    Fig. 4 indicates its mutation operator. Download : Download high-res image (233KB)
    Download : Download full-size image Fig. 3. Crossover operation sample. Download
    : Download high-res image (98KB) Download : Download full-size image Fig. 4. Mutation
    operation sample. The proposed method includes the following steps: Step 1: For
    a current food source, Xi = (xi1, xi2, …, xiD), two neighborhood, Xk = (xk1, xk2,
    …, xkD) and Xj = (xj1, xj2, …, xjD), are randomly selected (D is the dimension
    of food source). Step 2: Determine a D dimensional zero food source. Step 3: Define
    Xi, Xk, Xj, Zero, and Xbest as parent food sources. Step 4: Randomly match the
    parent food sources and then apply a crossover on the matched parent sources.
    Step 5: Apply the mutation operator to the children''s food sources. Step 6: Select
    the best food source. Step 7: Vi is determined as the current food source instead
    of Xi if the fitness value of Vi is better than the fitness value of Xi. The provided
    flowchart in Fig. 5 shows the steps of the method. Download : Download high-res
    image (1001KB) Download : Download full-size image Fig. 5. Flowchart of ABC-GA
    hybrid algorithm. 3.7. Complexity The formula can be employed to estimate the
    time complexity of the described algorithm. Let the highest number of iterations
    be t. In each iteration, the fitness value is calculated with O(OF) (Hashemi et
    al., 2021, Wang et al., 2020). If there are P solutions, the total complexity
    will be O(t(P * OF)). 4. Results The method is simulated using Matlab and compared
    to other methods. Matlab is a mathematics software that is the industry leader
    in the numerical calculation (Yu, 2018). The environment is Matlab 2017b on a
    64-bit system with an Intel Core i7-6700 processor and 32 GB DDR3 RAM. The compared
    technique is compared to the CoS_FRLM, Association rule, CRISP-DM, User Characteristics-Collaborative
    Filtering (UCCF), and KNN methods based on recommendation accuracy. Table 1 lists
    the utilized parameters in the studies. Table 1. Used parameters for the experiment.
    Parameters Value Crossover rate 90 % Mutation rate 5 % Number of chromosomes in
    each generation 100 Maximum number of repetitions 1000 Number of bees 40 Number
    of food sources 20 Minimum bee moves 8 Maximum bee moves 20 θ, α, β 0–0.9 Number
    of users 50–500 Before comparing the results, the crossover rate for the proposed
    method was considered to be 55, 60, 65, 70, 75, 80, 85, 90, and 95. The results
    obtained for fitness are 0.42, 0.412, 0.41, 0.405, 0.4, 0.39, 0.387, 0.385, 0.374,
    0.38, respectively (see Fig. 6). According to the numbers obtained, the rate of
    90 % provides the best fitness value that must be considered as a final value
    for the crossover rate. Download : Download high-res image (173KB) Download :
    Download full-size image Fig. 6. The fitness value in the different crossovers
    rate. The outcomes have demonstrated that the proposed method outperforms the
    CoS_FRLM, Association rule, CRISP-DM, UCCF, and KNN methods. To check the convergence
    of the algorithms, we compared them to 190 iterations. Fig. 7 indicates the convergence
    test for 500 requests with 40 various services. Download : Download high-res image
    (232KB) Download : Download full-size image Fig. 7. The convergence chart of 500
    requests with 40 services. 4.1. Comparison parameters Statistical accuracy metrics
    compare the numerical variation of the forecast ratings from the real consumer
    ratings to determine the accuracy of a prediction algorithm. RMSE, MAE, and the
    association between ratings and forecasts are some of the most commonly utilized
    metrics. All of the above parameters were calculated using the same data and yielded
    similar results. MAE is used as a statistical accuracy parameter. Formally, MAE
    is the average absolute difference among the n pairs if n is the actual ratings
    in an item set. Suppose that p1, p2, p3, …,pn predicts subscribers'' ratings,
    and the corresponding data set of users is q1, q2,q3, …, qn. MAE can be calculated
    using (Gong, 2010): (13) The smaller the MAE, the more accurate the forecasts,
    making for more reliable recommendations. MAE has been calculated for various
    prediction algorithms and sparsity levels (Hu et al., 2015). Five parameters (ranking
    score, precision, recall, intra similarity, and hamming distance) can be used
    to show the optimization results. 4.2. Comparison results Fig. 8 shows the comparison
    of the suggested technique with the CoS_FRLM, Association rule, CRISP-DM, UCCF,
    and KNN methods. • MAE Download : Download high-res image (413KB) Download : Download
    full-size image Fig. 8. The comparison of the MAE of the proposed method with
    three parameters (θ, α, β) to the other algorithms; (a) the comparison of the
    MAE with parameter (θ); (b) the comparison of the MAE with the parameter (α);
    (c) the comparison of the MAE with the parameter (β). The results in Fig. 8 indicate
    that MAE decreases with increasing α, β, and θ; therefore, higher values for all
    three parameters positively affect MAE criteria. The proposed method was reviewed
    and compared to other methods in all 5 criteria. The results for 300 users are
    shown in Fig. 9, Fig. 10, Fig. 11, Fig. 12, Fig. 13. • Ranking Source Download
    : Download high-res image (257KB) Download : Download full-size image Fig. 9.
    Comparing the ranking source between the suggested technique and other techniques.
    Download : Download high-res image (252KB) Download : Download full-size image
    Fig. 10. Comparing precision among the methods. Download : Download high-res image
    (234KB) Download : Download full-size image Fig. 11. Comparing the recall among
    suggested technique and other techniques. Download : Download high-res image (233KB)
    Download : Download full-size image Fig. 12. Comparing the intra similarity among
    the proposed method and other methods. Download : Download high-res image (244KB)
    Download : Download full-size image Fig. 13. Comparing the hamming distance among
    the proposed method and other methods. For an arbitrary user ui, rij=Rij/Li if
    the suggested object oj is ranked in Rij position in the ordered recommendation
    list Li. Since users currently obtain the probe entries, a successful algorithm
    can provide them with high-quality recommendations, resulting in a small rij (Pan,
    Deng, & Liu, 2010). As mentioned earlier, the lower the average ranking score,
    the higher the algorithm accuracy, and vice versa. Fig. 9 indicates the results
    of comparing the average ranking score of the suggested technique to other techniques.
    The outcomes show that with increasing the number of users, the average ranking
    score in the proposed algorithm has decreased more than other methods. • Precision
    It is the number of suggested objects to the number of recommended items obtained
    by subscribers in the test collection. This metric is utilized to assess the validity
    of a particular recommendation list. The accuracy may be calculated as a/L, where
    a is the number of recommended products gathered by subscribers in test collection
    and L illustrates the total number of recommended products. Totally, there are
    less than 100 items that are recommended (Ju & Xu, 2013). Fig. 10 indicates the
    results of comparing the accuracy of the suggested technique to other techniques.
    The outcomes illustrate that the accuracy has been increased with an increasing
    number of users. • Recall The ratio of the number of suggested objects gathered
    by subscribers to the total number of objects gathered by these subscribers is
    specified as recall. The higher the recall, the stronger the results. The recall
    can be calculated as a/M, where a is the number of recommended products gathered
    by subscribers emerging in test collection, and M illustrates the whole number
    of actual buying of subscribers (Ju & Xu, 2013). Fig. 11 illustrates the results
    of comparing the recall of the suggested technique to other techniques. The outcomes
    illustrate that with the growth in the number of users, the recall in all algorithms
    has increased, but the amount of the increase is less than other methods except
    the UC-CF method. • Intra Similarity It assesses the similarity among items inside
    recommendation lists of users. Here the widely used cosine similarity to measure
    the similarity of items is adopted. For two items oi and oj, their similarity
    is defined as follows: (14) where L indicated the number of recommendation items
    for an arbitrary user ul. At first, (−1)/2 couple of items'' similarities should
    be computed, and then the average of these values must be calculated to get Il=<Sij>.
    Eventually, the average subscribers'' mean value of I is utilized to assess the
    diversity of recommendation lists. Fig. 12 illustrates the results of comparing
    the intra similarity of the suggested technique to other methods. The outcomes
    illustrate that the intra similarity in all the methods has decreased with increasing
    users, and the proposed method has better performance than other methods (KNN,
    UC-CF, CoS_FRLM, Association rule, and CRISP-DM). • Hamming Distance G It will
    assess the degree to which personalization is effective. If the overlapped number
    of objects in ui and ui’s recommendation lists is Q, their Hamming distance is:
    (15) Generally speaking, a customized recommendation list should have long Hamming
    distances to other lists. Therefore, the mean value of distances S=<Hij> from
    the overall user-user pairs is used to measure the strength of customization.
    Parameter θ is utilized as a predefined threshold for the final similarity weights
    among subscribers in the suggested approach to determine the closest neighbors
    using Eq. (16). Besides, α is employed as a predefined threshold for the reliability
    values to determine unreliable forecast ratings utilizing Eq. (17). Ultimately,
    β is applied as a predefined threshold for the confidence values among subscribers
    to determine the novel neighborhood of subscribers utilizing Eq. (18). (16) where
    U is the collection of the whole subscribers in the system and θ is a predetermined
    threshold for the ultimate similarity weights among subscribers. The suggested
    approach uses a threshold value (α) to determine if forecast ratings are inaccurate;
    ratings with a reliability value below the threshold α are considered unreliable
    and would be recalculated by the suggested process. The unreliable estimated ratings
    are calculated as below: (17) where UR illustrates the unreliable estimated rating
    collection and Ra,i is the subscriber a''s reliability value. The confidence values
    of the subscribers in the neighborhood collection are evaluated using a threshold
    value (β), and those with confidence values less than the threshold β are excluded
    from the target subscriber''s neighborhood collection. Therefore, a novel neighborhood
    is attained to recalculate the prognosticated rating , as below: (18) where is
    the novel neighborhood of subscriber a for target item i, and is the primary neighbor
    collection of the subscriber a, attained utilizing Eq. (16). Fig. 13 illustrates
    the results of comparing the hamming distance of the suggested technique to other
    methods. The outcomes illustrate that the hamming distance has increased with
    an increasing number of users, but based on the results, the way performs better
    provides better hamming distance values than the other algorithms. 5. Conclusion
    and future works Fog computing has lately been hailed as a modern networking and
    computing model for the Internet of Vehicles, sensor networks, smart grids, and
    other applications. So, the combination of fog computing and available networks
    has significant advantages. Meanwhile, establishing social-like associations between
    objects from the IoT to the cloud is a novel trend for these items, with the advantages
    of efficiently adding developed sociality to a complex world. Recommending a suitable
    service is one of the principal issues in fog-based IoT systems. In the present
    investigation, a novel recommendation algorithm based on IoT for farming services
    is suggested using an ABC based on genetic operators to optimize accuracy. ABC
    and GA are among the most efficient biologically inspired population-based algorithms;
    therefore, they were applied to solve the recommendation problem. Matlab is employed
    to evaluate the performance of the proposed recommendation algorithm. The simulation
    outcomes illustrate that the suggested technique outperforms other algorithms,
    and the algorithm''s accuracy is enhanced. The main reason for this improvement
    is that the proposed method uses the ability and the powerful features of two
    optimization algorithms, whereas their main drawbacks are masked. In the future,
    a better approach demanding lower hardware resources might be found using other
    meta-heuristic algorithms as this proposed method needs powerful hardware and
    takes a long time to perform simulation that should be considered. The following
    are the main future research directions: • A new subject is blockchain-enabled
    auto-scaling, which uses blockchain capabilities to resolve security issues in
    the fog and cloud for collaborative computing services such as agricultural services.
    • Extending auto-scaling from IoT devices to the fog for timely processing of
    scaling choices is one of the complex challenges that must be considered. • Also,
    future research may focus on the influence of providing treatment recommendations
    according to the best practices. • Finally, other metrics, such as Minimum Mean-Square
    Error (MMSE) (Sui et al., 2020), can be investigated in the future. Some limitations
    are interesting to consider in future works. The present investigation was limited
    to agricultural service recommendations in fog-based IoT systems. An extension
    of the research to cover the other areas would enhance the results’ generalizability.
    Due to the general nature of the model and its solution guideline, it can be extended
    in various circumstances. This paper does not use real data sets, so examining
    these data can affect the validity of the results. Finally, the analytic and the
    proposed method are general and can be employed for various problems in different
    imprecise environments, inventory control problems, supply chain management, etc.
    CRediT authorship contribution statement Jiaqing Tu: Conceptualization, Methodology,
    Software, Validation, Investigation, Resources, Data curation, Writing – original
    draft, Writing – review & editing, Visualization, Supervision, Project administration.
    Fariba Aznoli: Conceptualization, Methodology, Software, Validation, Investigation,
    Resources, Data curation, Writing – original draft, Writing – review & editing,
    Visualization, Supervision, Project administration. Nima Jafari Navimipour: Conceptualization,
    Methodology, Software, Validation, Investigation, Resources, Data curation, Writing
    – original draft, Writing – review & editing, Visualization, Supervision, Project
    administration. Senay Yalcin: Conceptualization, Methodology, Software, Validation,
    Investigation, Resources, Data curation, Writing – original draft, Writing – review
    & editing, Visualization, Supervision, Project administration. Declaration of
    Competing Interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Appendix A. See Table 2. Table 2. List of notations.
    Artificial Bee Colony ABC CRoss-Industry Standard Process for Data Mining CRISP-DM
    Differential Evolution DE Employed Bees EB Internet of Things IoT Internet of
    Vehicles IoV K-Nearest Neighbors KNN Mean Absolute Error MAE Onlooker Bees OB
    Particle Swarm Optimization PSO Pheromone Indicator PI Root Mean Squared Error
    RMSE User Characteristics-Collaborative Filtering UCCF Web Ontology Language WOL
    References Abed et al., 2014 I. Abed, et al. Optimization of the time of task
    scheduling for dual manipulators using a modified electromagnetism-like algorithm
    and genetic algorithm Arabian Journal for Science & Engineering (Springer Science
    & Business Media BV), 39 (8) (2014) Google Scholar Aher et al., 2018 A. Aher,
    et al. Smart agriculture using clustering and IOT International Research Journal
    of Engineering and Technology (IRJET), 5 (03) (2018), pp. 2395-10056 Google Scholar
    Altaleb et al., 2022 Altaleb, M., Deeken, H., & Hertzberg, J. (2022). A data mining
    process for building recommendation systems for agricultural machines based on
    big data. 42. GIL-Jahrestagung, Künstliche Intelligenz in der Agrar-und Ernährungswirtschaft.
    Google Scholar Aznoli and Navimipour, 2017 F. Aznoli, N.J. Navimipour Cloud services
    recommendation: Reviewing the recent advances and suggesting the future research
    directions Journal of Network and Computer Applications, 77 (2017), pp. 73-86
    View PDFView articleView in ScopusGoogle Scholar Bansal et al., 2019 A. Bansal,
    M.K. Ahirwar, P.K. Shukla Assessment on Different Classification Algorithms Used
    in Internet of Things Applications International Journal of Organizational and
    Collective Intelligence (IJOCI), 9 (1) (2019), pp. 1-11 Google Scholar Basturk
    and Karaboga, 2006 B. Basturk, D. Karaboga An artificial bee colony (ABC) algorithm
    for numeric function optimization In IEEE swarm intelligence symposium (2006)
    Google Scholar Cao et al., 2021 B. Cao, et al. Large-scale many-objective deployment
    optimization of edge servers IEEE Transactions on Intelligent Transportation Systems,
    22 (6) (2021), pp. 3841-3849 CrossRefView in ScopusGoogle Scholar Danner et al.,
    2021 M. Danner, et al. Efficient RTM-based training of machine learning regression
    algorithms to quantify biophysical & biochemical traits of agricultural crops
    ISPRS Journal of Photogrammetry and Remote Sensing, 173 (2021), pp. 278-296 View
    PDFView articleView in ScopusGoogle Scholar Erdeniz et al., 2018 S.P. Erdeniz,
    et al. Recommender systems for IoT enabled m-health applications IFIP International
    conference on artificial intelligence applications and innovations, Springer (2018)
    Google Scholar Eslamian et al., 2018 S. Eslamian, et al. Water P. Bobrowsky, B.
    Marker (Eds.), Encyclopedia of engineering geology, Springer International Publishing,
    Cham (2018), pp. 1-5 Google Scholar Ewees et al., 2020 A.A. Ewees, et al. Improved
    artificial bee colony using sine-cosine algorithm for multi-level thresholding
    image segmentation IEEE Access, 8 (2020), pp. 26304-26315 CrossRefView in ScopusGoogle
    Scholar Fang et al., 2016 D. Fang, et al. An agility-oriented and fuzziness-embedded
    semantic model for collaborative cloud service search, retrieval and recommendation
    Future Generation Computer Systems, 56 (2016), pp. 11-26 View PDFView articleView
    in ScopusGoogle Scholar Foster, et al., 2008 Foster, I., et al. (2008). Cloud
    computing and grid computing 360-degree compared. in Grid Computing Environments
    Workshop, 2008. GCE''08. IEEE. Google Scholar Geng et al., 2015 B. Geng, et al.
    NNIA-RS: A multi-objective optimization based recommender system Physica A: Statistical
    Mechanics and its Applications, 424 (2015), pp. 383-397 View PDFView articleView
    in ScopusGoogle Scholar Gong, 2010 S. Gong A collaborative filtering recommendation
    algorithm based on user clustering and item clustering JSW, 5 (7) (2010), pp.
    745-752 View in ScopusGoogle Scholar Haiyan and Tao, 2015 Haiyan, H., & Tao, C.
    (2015). Design and implementation of agricultural production and market information
    recommendation system based on cloud computing. In 2015 8th international conference
    on intelligent computation technology and automation (ICICTA). IEEE. Google Scholar
    Hashemi et al., 2021 M. Hashemi, et al. A multi-objective method for virtual machines
    allocation in cloud data centres using an improved grey wolf optimization algorithm
    IET COMMUNICATIONS, 15 (18) (2021), pp. 2342-2353 CrossRefView in ScopusGoogle
    Scholar Holland, 1992 Holland, J.H. (1992). Adaptation in natural and artificial
    systems: an introductory analysis with applications to biology, control, and artificial
    intelligence. MIT Press. Google Scholar Hu et al., 2015 L. Hu, et al. CFSF: On
    cloud-based recommendation for large-scale e-commerce Mobile Networks and Applications,
    20 (3) (2015), pp. 380-390 CrossRefView in ScopusGoogle Scholar Hui and Li, 2021
    Hui, Y. & Li, S., (2021). A collaborative recommendation model of agricultural
    planting technology based on user characteristics. In: 2021 3rd international
    conference on advances in computer technology, information science and communication
    (CTISC). IEEE. Google Scholar Hussain and Huang, 2018 Y. Hussain, Z. Huang TRFIoT:
    Trust and reputation model for fog-based IoT International Conference on Cloud
    Computing and Security, Springer (2018) Google Scholar Ireri et al., 2021 D.M.
    Ireri, et al. Role of ICT in the dissemination and access of agricultural information
    by smallholder farmers in South Eastern Kenya Acta Informatica Malaysia, 5 (1)
    (2021), pp. 31-41 CrossRefGoogle Scholar Jalali et al., 2017 Jalali, F., et al.
    (2017). Greening iot with fog: A survey. in 2017 IEEE international conference
    on edge computing (EDGE). IEEE. Google Scholar Jararweh et al., 2014 Y. Jararweh,
    et al. Cloudexp: A comprehensive cloud computing experimental framework Simulation
    Modelling Practice and Theory, 49 (2014), pp. 180-192 View PDFView articleView
    in ScopusGoogle Scholar Jejurkar et al., 2021 S. Jejurkar, et al. An artificial
    intelligence based recommendation system for farmers in agricultural field IoT
    and machine learning International Journal of Progressive Research in Science
    and Engineering, 2 (3) (2021), pp. 1-3 Google Scholar Ju and Xu, 2013 C. Ju, C.
    Xu A new collaborative recommendation approach based on users clustering using
    artificial bee colony algorithm The Scientific World Journal, 2013 (2013) Google
    Scholar Junhui et al., 2021 Junhui, W., et al. (2021). Research on agricultural
    products intelligent recommendation based on e-commerce big data. In 2021 IEEE
    6th International Conference on Big Data Analytics (ICBDA). IEEE. Google Scholar
    Karaboga and Basturk, 2007 D. Karaboga, B. Basturk A powerful and efficient algorithm
    for numerical function optimization: Artificial bee colony (ABC) algorithm Journal
    of Global Optimization, 39 (3) (2007), pp. 459-471 CrossRefView in ScopusGoogle
    Scholar Karaboga and Ozturk, 2011 D. Karaboga, C. Ozturk A novel clustering approach:
    Artificial Bee Colony (ABC) algorithm Applied Soft Computing, 11 (1) (2011), pp.
    652-657 View PDFView articleView in ScopusGoogle Scholar Karaboga, 2005 Karaboga,
    D., An idea based on honey bee swarm for numerical optimization. 2005, Technical
    report-tr06, Erciyes university, engineering faculty, computer engineering department.
    Google Scholar Köksal and Tekinerdogan, 2019 Ö. Köksal, B. Tekinerdogan Architecture
    design approach for IoT-based farm management information systems Precision Agriculture,
    20 (5) (2019), pp. 926-958 CrossRefView in ScopusGoogle Scholar Lei et al., 2021
    W. Lei, et al. Optimal remanufacturing service resource allocation for generalized
    growth of retired mechanical products: Maximizing matching efficiency IEEE Access,
    9 (2021), pp. 89655-89674 CrossRefView in ScopusGoogle Scholar Li et al., 2021
    B. Li, et al. Research on AI security enhanced encryption algorithm of autonomous
    IoT systems Information Sciences, 575 (2021), pp. 379-398 View PDFView articleView
    in ScopusGoogle Scholar Lin et al., 2019 F. Lin, et al. Content recommendation
    algorithm for intelligent navigator in fog computing based IoT environment IEEE
    Access, 7 (2019), pp. 53677-53686 CrossRefView in ScopusGoogle Scholar Menhaj
    and Jamalzehi, 2016 Menhaj, M. B., & Jamalzehi, S. (2016). Scalable user similarity
    estimation based on fuzzy proximity for enhancing accuracy of collaborative filtering
    recommendation. In: 2016 4th international conference on control, instrumentation,
    and automation (ICCIA). IEEE. Google Scholar Michael, 2021 Michael, V. (2021).
    Security and privacy issues of IoT at fog layer architecture. Google Scholar Mirjalili
    et al., 2014 S. Mirjalili, S.M. Mirjalili, A. Lewis Grey wolf optimizer Advances
    in Engineering Software, 69 (2014), pp. 46-61 View PDFView articleGoogle Scholar
    Mou et al., 2022 J. Mou, et al. An effective hybrid collaborative algorithm for
    energy-efficient distributed permutation flow-shop inverse scheduling Future Generation
    Computer Systems, 128 (2022), pp. 521-537 View PDFView articleView in ScopusGoogle
    Scholar Naik, 2020 Naik, K. J. (2020). A co-scheduling system for fog-node recommendation
    and load management in cloud-fog environment (CoS_FRLM). in 2020 International
    Conference on Data Analytics for Business and Industry: Way Towards a Sustainable
    Economy (ICDABI). IEEE. Google Scholar Navimipour et al., 2017 N.J. Navimipour,
    B. Keshanchi, F.S. Milani Resources discovery in the cloud environments using
    collaborative filtering and ontology relations Electronic Commerce Research and
    Applications, 26 (2017), pp. 89-100 View PDFView articleView in ScopusGoogle Scholar
    Ostad-Ali-Askari and Shayan, 2021 K. Ostad-Ali-Askari, M. Shayan Subsurface drain
    spacing in the unsteady conditions by HYDRUS-3D and artificial neural networks
    Arabian Journal of Geosciences, 14 (18) (2021), pp. 1-14 CrossRefGoogle Scholar
    Ostad-Ali-Askari and Shayannejad, 2020 K. Ostad-Ali-Askari, M. Shayannejad Impermanent
    changes investigation of shape factors of the volumetric balance model for water
    development in surface irrigation Modeling Earth Systems and Environment, 6 (3)
    (2020), pp. 1573-1580 CrossRefView in ScopusGoogle Scholar Ozturk et al., 2015
    C. Ozturk, E. Hancer, D. Karaboga A novel binary artificial bee colony algorithm
    based on genetic operators Information Sciences, 297 (2015), pp. 154-170 View
    PDFView articleView in ScopusGoogle Scholar Pan et al., 2010 X. Pan, G. Deng,
    J.-G. Liu Weighted bipartite network and personalized recommendation Physics Procedia,
    3 (5) (2010), pp. 1867-1876 View PDFView articleView in ScopusGoogle Scholar Pazzani
    and Billsus, 2007 M.J. Pazzani, D. Billsus Content-based recommendation systems
    The adaptive web, Springer (2007), pp. 325-341 CrossRefGoogle Scholar Pirnazar
    et al., 2018 M. Pirnazar, et al. The evaluation of the usage of the fuzzy algorithms
    in increasing the accuracy of the extracted land use maps International Journal
    of Global Environmental Issues, 17 (4) (2018), pp. 307-321 CrossRefView in ScopusGoogle
    Scholar Ricci et al., 2011 Ricci, F., Rokach, L., & Shapira, B. (2011). Introduction
    to recommender systems handbook. Springer. Google Scholar Shrestha et al., 2014
    S.K. Shrestha, et al. Recommendation of a cloud service item based on service
    utilization patterns in Jyaguchi Knowledge and systems engineering, Springer (2014),
    pp. 121-133 CrossRefView in ScopusGoogle Scholar Singh et al., 2020 S.P. Singh,
    et al. Leveraging energy-efficient load balancing algorithms in fog computing
    Concurrency and Computation: Practice and Experience, n/a(n/a) (2020), Article
    e5913 Google Scholar Sui et al., 2020 T. Sui, et al. Multi-sensor state estimation
    over lossy channels using coded measurements Automatica, 111 (2020), Article 108561
    View PDFView articleView in ScopusGoogle Scholar Tariq et al., 2019 N. Tariq,
    et al. The security of big data in fog-enabled IoT applications including blockchain:
    A survey Sensors, 19 (8) (2019), p. 1788 CrossRefView in ScopusGoogle Scholar
    Thapa et al., 2020 A. Thapa, et al. Information and communication technology (ICT)
    mediated extension services in agriculture in Nepal-A review Acta Informatica
    Malaysia (AIM), 4 (2) (2020), pp. 33-36 CrossRefGoogle Scholar Torky and Hassanein,
    2020 M. Torky, A.E. Hassanein Integrating blockchain and the internet of things
    in precision agriculture: Analysis, opportunities, and challenges Computers and
    Electronics in Agriculture (2020), Article 105476 View PDFView articleView in
    ScopusGoogle Scholar Wang et al., 2019 X. Wang, et al. A fog-based recommender
    system IEEE Internet of Things Journal, 7 (2) (2019), pp. 1048-1060 CrossRefGoogle
    Scholar Wang et al., 2020 T. Wang, et al. A rough set-based bio-inspired fault
    diagnosis method for electrical substations International Journal of Electrical
    Power & Energy Systems, 119 (2020), Article 105961 View PDFView articleView in
    ScopusGoogle Scholar Wu et al., 2017 Z. Wu, et al. Efficiently translating complex
    SQL query to mapreduce jobflow on cloud IEEE Transactions on Cloud Computing,
    8 (2) (2017), pp. 508-517 Google Scholar Wu et al., 2020 Z. Wu, et al. On scalability
    of association-rule-based recommendation: A unified distributed-computing framework
    ACM Transactions on the Web (TWEB), 14 (3) (2020), pp. 1-21 View in ScopusGoogle
    Scholar Xu et al., 2014 Y. Xu, et al. A genetic algorithm for task scheduling
    on heterogeneous computing systems using multiple priority queues Information
    Sciences, 270 (2014), pp. 255-287 View PDFView articleView in ScopusGoogle Scholar
    Xu et al., 2021 Z. Xu, et al. A new approach for resource recommendation in the
    fog-based IoT using a hybrid algorithm The Computer Journal (2021), p. bxab189
    Google Scholar Xu et al., 2021 Z. Xu, et al. A new approach for resource recommendation
    in the fog-based IoT using a hybrid algorithm The Computer Journal (2021) Google
    Scholar Yang et al., 2020 X. Yang, et al. Mixed-timescale caching and beamforming
    in content recommendation aware fog-RAN: A latency perspective IEEE Transactions
    on Communications (2020) Google Scholar Yang et al., 2021 L. Yang, et al. An analytical
    model of page dissemination for efficient big data transmission of C-ITS IEEE
    Transactions on Intelligent Transportation Systems (2021) Google Scholar Yu, 2022
    B. Yu The impact of the internet on industrial green productivity: Evidence from
    China Technological Forecasting and Social Change, 177 (2022), Article 121527
    View PDFView articleView in ScopusGoogle Scholar Yu, 2018 Yu, L. (2018). Matlab
    programming environment based on Web. in 2018 IEEE 4th Information Technology
    and Mechatronics Engineering Conference (ITOEC). IEEE. Google Scholar Zhao et
    al., 2020 S. Zhao, et al. Smart and practical privacy-preserving data aggregation
    for fog-based smart grids IEEE Transactions on Information Forensics and Security,
    16 (2020), pp. 521-536 CrossRefView in ScopusGoogle Scholar Zhao et al., 2021
    Y. Zhao, et al. Trustworthy authorization method for security in Industrial Internet
    of Things Ad Hoc Networks, 121 (2021), Article 102607 View PDFView articleView
    in ScopusGoogle Scholar Zheng et al., 2021 W. Zheng, et al. Knowledge base graph
    embedding module design for Visual question answering model Pattern Recognition,
    120 (2021), Article 108153 View PDFView articleView in ScopusGoogle Scholar Cited
    by (0) View Abstract © 2022 Published by Elsevier Ltd. Recommended articles Effects
    of Cr and Ti additions on the stability and migration of C, N and O in vanadium:
    A first-principles study Fusion Engineering and Design, Volume 168, 2021, Article
    112604 Ruihuan Li, …, Jijun Zhao View PDF Re-considering the energy efficient
    retrofitting approach to question cost-optimality and nZEB under COVID-19 measures
    Building and Environment, Volume 219, 2022, Article 109227 Burcu Çiğdem Yılmaz,
    Yiğit Yılmaz View PDF Optimal pricing and healthcare warranty strategies for chronic
    diseases Computers & Industrial Engineering, Volume 172, Part A, 2022, Article
    108539 Heng Zhao, …, Lipeng Fu View PDF Show 3 more articles Article Metrics Citations
    Citation Indexes: 2 Captures Readers: 19 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computers and Industrial Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A new service recommendation method for agricultural industries in the fog-based
    Internet of Things environment using a hybrid meta-heuristic algorithm
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Singh P.
  - Singh K.D.
  - Angurala M.
  citation_count: '0'
  description: The growing global population needs more food production in all areas,
    particularly agriculture. Demand and supply will still be out of sync at times.
    Managing and maintaining capital and people is a difficult task for increasing
    agricultural output. For expanding food production, resource management, and labor,
    smart agriculture is a superior solution. A drone is a useful tool in dealing
    with everyday concerns that affect the general population. Drones in low-altitude
    airspace are becoming more common, and a developing trend is to connect them to
    build the Internet of Drones (IoD). This chapter proposes a platform for environmental
    monitoring that provides data for the user to understand what is going on in the
    region that is being monitored. In this chapter a three-tier framework is proposed
    which utilizes the concept of fog computing to perform real-time processing. Internet
    of Drones is utilized to gather & process agriculture data. The drone's processing
    platform stores the data, which is then synced with a remote database on a server.
    Server-side code was written to enable audio streaming.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Revolutionary Applications of Intelligent Drones
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Drone centric IoT-Fog-cloud based smart agriculture support service
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Abunadi I.
  - Rehman A.
  - Haseeb K.
  - Parra L.
  - Lloret J.
  citation_count: '4'
  description: In recent decades, networked smart devices and cutting-edge technology
    have been exploited in many applications for the improvement of agriculture. The
    deployment of smart sensors and intelligent farming techniques supports real-time
    information gathering for the agriculture sector and decreases the burden on farmers.
    Many solutions have been presented to automate the agriculture system using IoT
    networks; however, the identification of redundant data traffic is one of the
    most significant research problems. Additionally, farmers do not obtain the information
    they need in time, such as data on water pressure and soil conditions. Thus, these
    solutions consequently reduce the production rates and increase costs for farmers.
    Moreover, controlling all agricultural operations in a controlled manner should
    also be considered in developing intelligent solutions. Therefore, this study
    proposes a framework for a system that combines fog computing with smart farming
    and effectively controls network traffic. Firstly, the proposed framework efficiently
    monitors redundant information and avoids the inefficient use of communication
    bandwidth. It also controls the number of re-transmissions in the case of malicious
    actions and efficiently utilizes the network’s resources. Second, a trustworthy
    chain is built between agricultural sensors by utilizing the fog nodes to address
    security issues and increase reliability by preventing malicious communication.
    Through extensive simulation-based experiments, the proposed framework revealed
    an improved performance for energy efficiency, security, and network connectivity
    in comparison to other related works.
  doi: 10.3390/s22176676
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 22 Issue 17 10.3390/s22176676 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editors Viacheslav
    Adamchuk Abdul M. Mouazen Subscribe SciFeed Recommended Articles Related Info
    Links More by Authors Links Article Views 1593 Citations 5 Table of Contents Abstract
    Introduction Related Work Material and Methods Simulations Results with Discussion
    Conclusions Author Contributions Funding Institutional Review Board Statement
    Informed Consent Statement Data Availability Statement Acknowledgments Conflicts
    of Interest References Altmetric share Share announcement Help format_quote Cite
    question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessArticle Traffic-Aware Secured Cooperative
    Framework for IoT-Based Smart Monitoring in Precision Agriculture by Ibrahim Abunadi
    1,2, Amjad Rehman 1,2, Khalid Haseeb 2,3, Lorena Parra 4,* and Jaime Lloret 4
    1 College of Computer & Information Sciences, Prince Sultan University, Riyadh
    11586, Saudi Arabia 2 Artificial Intelligence and Data Analytics (AIDA) Lab, CCIS
    Prince Sultan University, Riyadh 11586, Saudi Arabia 3 Department of Computer
    Science, Islamia College Peshawar, Peshawar 25000, Pakistan 4 Instituto de Investigación
    para la Gestión Integrada de Zonas Costeras, Universitat Politenica de Valencia,
    46022 Valencia, Spain * Author to whom correspondence should be addressed. Sensors
    2022, 22(17), 6676; https://doi.org/10.3390/s22176676 Submission received: 31
    July 2022 / Revised: 26 August 2022 / Accepted: 30 August 2022 / Published: 3
    September 2022 (This article belongs to the Special Issue Precision Agriculture
    and Sensor Systems) Download keyboard_arrow_down     Browse Figures Versions Notes
    Abstract In recent decades, networked smart devices and cutting-edge technology
    have been exploited in many applications for the improvement of agriculture. The
    deployment of smart sensors and intelligent farming techniques supports real-time
    information gathering for the agriculture sector and decreases the burden on farmers.
    Many solutions have been presented to automate the agriculture system using IoT
    networks; however, the identification of redundant data traffic is one of the
    most significant research problems. Additionally, farmers do not obtain the information
    they need in time, such as data on water pressure and soil conditions. Thus, these
    solutions consequently reduce the production rates and increase costs for farmers.
    Moreover, controlling all agricultural operations in a controlled manner should
    also be considered in developing intelligent solutions. Therefore, this study
    proposes a framework for a system that combines fog computing with smart farming
    and effectively controls network traffic. Firstly, the proposed framework efficiently
    monitors redundant information and avoids the inefficient use of communication
    bandwidth. It also controls the number of re-transmissions in the case of malicious
    actions and efficiently utilizes the network’s resources. Second, a trustworthy
    chain is built between agricultural sensors by utilizing the fog nodes to address
    security issues and increase reliability by preventing malicious communication.
    Through extensive simulation-based experiments, the proposed framework revealed
    an improved performance for energy efficiency, security, and network connectivity
    in comparison to other related works. Keywords: agriculture system; Internet of
    Things; fog system; soil monitoring; green energy 1. Introduction Today, the Internet
    and the Internet of Things (IoT) dominate nearly everyone’s life. IoT is a paradigm
    that connects things, people, or networks and allows them to process and react
    precisely to any kind of physical or virtual communication [1,2,3]. IoT has applications
    in every industry, including healthcare, agriculture, and home controllers. It
    efficiently provides user-required services by utilizing Internet connectivity,
    sensors, and a variety of other technologies and protocols for collecting and
    analyzing data [4,5,6]. The Internet of Things helps companies to automate operations
    and improve service delivery using Internet technologies and cloud-based data
    transmission. For the various industries it is utilized in, IoT does not permit
    the adoption of universal software architecture; instead, it must be modified
    to meet user requirements [7,8,9]. Nowadays, smart agriculture is more important
    than ever because of the expanding global population and rising food demand. In
    this context, smart technologies have become a crucial route to cutting-edge agricultural
    practices [10,11,12]. There are many different applications, protocols, and prototypes
    in the field of agricultural land. Furthermore, several IoT policies and standards
    have been developed in the agriculture sector in numerous nations and organizations
    worldwide. Due to the limited boundaries of IoT devices, sensors, and actuators,
    a detailed study of IoT in the context of agriculture is required to understand
    the present state of research [13,14,15]. Throughout history, the agricultural
    industry has played a significant role in human cultures worldwide. Machine learning
    is a subset of artificial intelligence widely explored for identifying malicious
    attacks. Such a technique also focuses on making the system smart so that additional
    overhead can be reduced on the IoT devices [16,17]. The organization and practices
    of modern agriculture are significantly impacted by the development of information
    and communication technologies (ICTs). Despite the benefits of this evolution,
    several security concerns have the potential to negatively affect the agriculture
    sector [18,19,20]. Since farmers could sustain a significant financial and personal
    loss in the event of a data breach, data integrity and confidentiality are critical
    security concerns within the agricultural sector [21,22,23]. In this work, the
    main contributions are as follows: It provides a strategy to effectively manage
    IoT resources, identify the redundant nodes that are collecting the same data
    and forbid using them. Such a scheme is efficient in utilizing the resources of
    the network and prolonging the system life cycle. It develops intelligent methods
    using distributed machine learning to predict routing decisions for the selection
    of optimal forwarders with increasing data delivery and load balancing. Another
    aspect of the proposed framework is the usage of a fog system to establish a secure
    chain in the presence of unidentified and faulty nodes by establishing a reliable
    group of nodes. We verified the proposed framework with other work and the results
    demonstrate enhanced performance for various network parameters. This paper is
    further organized as follows: the discussion for related studies is presented
    in Section 2. Section 3 presents the detail of the proposed framework. In Section
    4, the simulation environment is briefly explained. Section 5 presents the results
    and discussion of the experiments. Lastly, the conclusion is in Section 6. 2.
    Related Work The smart city emerged as a concept with the fast growth of dependable
    information and communication models and the combination of sensor technologies
    [24,25,26]. Modern fog computing technology develops intelligent networks combining
    IoT networks and cloud platforms. Fog computing is applied at the network edge,
    and they perform a significant number of tasks in terms of processing, storage,
    and communication. Networking devices such as routers, gateways, etc., make up
    fog computing. Compared to sensor nodes, these devices have more processing, transmission,
    and storage capabilities [27,28]. In an IoT system, fog nodes received data from
    sensors and are further forwarded for high-cost processing with the support of
    data centers. A smart city promotes sustainability by utilizing various sensors
    to collect information from the environment while providing improved social facilities,
    transportation, and accessibility. The gathered information can then be utilized
    to manage urban infrastructure, including water supply, food services, environmental
    monitoring, and traffic congestion [29,30,31]. Smart agriculture is based on the
    IoT with future generation networks and is expected to benefit from the intelligently
    developed methodologies. The objectives of this strategy are to preserve water
    resources, lessen soil erosion, and improve soil quality [32,33]. An effective
    and scalable protocol for the remote monitoring and decision making of farms in
    rural areas is named the CL-IoT protocol, and it was proposed to focus on the
    requirements for smart farming applications [34]. To decrease network communication
    delay, latency, and energy consumption, cross-layer-based clustering, and routing
    algorithms were developed. The cluster head (CH) selection method based on cross-layers
    has been proposed as a means of solving the energy efficiency issue for resource
    constraint networks. Each sensor’s physical, medium access control (MAC), and
    network layer parameters were analyzed and chosen as the optimal CH for effective
    data transfer. The algorithm with a novel probabilistic decision rule that was
    inspired by nature is proposed and serves as a fitness function to choose the
    best path for data transfer. To choose the cluster head, a hybrid artificial neural
    network and decision tree method were built with the cognitive radio [35]. The
    base station receives more packets and collects more data from the typical sensor
    nodes as the residual energy level rises. The on-demand routing protocol is designed
    to hold data in local storage for retransmission during link failure to achieve
    reliable data transfer. Performance metrics for the proposed technique include
    throughput, packet drop rate, packet delivery ratio, normalized overhead, and
    residual energy. The effectiveness of the proposed strategy was compared to a
    cluster-based data aggregation scheme. A novel intelligent routing protocol was
    proposed in [36] to increase the network lifetime and offer energy efficiency
    in the routing process, which is used to deliver data to the irrigation system.
    The protocol is known as terrain-based routing using fuzzy rules for precision
    agriculture and it uses fuzzy rules to provide a revolutionary intelligent energy-efficient
    routing scheme. The routing decisions were made using the fuzzy inference method
    described in this work. The equalized cluster head election routing protocol and
    region-based routing are two routing algorithms that were constructed and compared
    with the system. The experimental findings demonstrate that the suggested algorithm
    outperforms the other available algorithms. For an Agriculture Internet of Things
    (AG-IoT) network, the authors proposed a supervised machine learning multipath
    and administrative-distance-based load balancing algorithm [37]. The proposed
    algorithm, also known as AI-enabled multi-hop and administrative-distance-based
    opportunistic routing (MHADBOR), processes the collected data from source to destination
    using the network’s multi-hop count and administrative-distance-based communication
    infrastructure. In addition, the authors frequently used CHs, microbase, and macrobase
    stations in the network to efficiently manage the deployed network traffic in
    a communication environment without congestion. In [38], the authors proposed
    an optimization of resource utilization in smart agriculture systems using IoT
    (SMAIoT) that can monitor several low-cost IoT sensor types. This framework gathers
    information from the soil, air, water, and insects and uses them to produce suitable
    decisions. The innovative aspect of the proposed framework is the scientific automation
    of functions such as irrigation, fertigation, pest detection, and pesticide spraying
    with efficient productivity. In [39], the authors provide an inter planetary file
    system (IPFS) storage for protecting agricultural sampling data based on the double-blockchain
    method for IoT networks. It stores the content of the sampled data using the IPFS
    network, and the proposed system can obtain the entire data segment using an oracle
    technique. Then, the authors developed a consortium blockchain, Agricultural Sample
    Data Chain (ASDC) by using Ethereum technology, and enhanced the Merkle Patricia
    Trie (MPT)-based accounts for all categories of sampled data. To retain a public
    record in the case of malicious attacks, block hashes are generated and uploaded
    on Ethereum’s main chain after storing the data in ASDC blocks. Limitations of
    the Existing Schemes The summary of relevant studies shows that the IoT has grown
    significantly in creating and developing smart agriculture systems. It aids the
    farmers in monitoring soil conditions and water supply and increases productivity
    with the management of costs. It gathers the agricultural data and sends them
    to cloud databases to take the necessary actions accordingly. Numerous solutions
    have recently been proposed to deal with intelligent data monitoring with improved
    latency using machine learning techniques. However, many of the existing systems
    do not make it apparent how different connections are handled when there are redundant
    data. Moreover, efficient load balancing with the collaboration of mobile sensors
    is another significant research challenge [40,41]. Although many solutions have
    offered security for remote monitoring, this has been at the cost of computation
    and complexity. As a result, we need a framework to handle the timely supply of
    monitoring data using some smart and intelligent behaviors. 3. Material and Methods
    This section presents a detailed discussion of the proposed framework with the
    system model. Additionally, its algorithm and developed components are explained.
    3.1. System Model and Background of the Proposed Framework The system model consists
    of sensors, fog nodes, and the sink node. They are deployed at random positions
    and the sink node is mobile. The fog nodes are considered more intelligent and
    have sufficient resources as compared to ordinary sensors. The mobile sink has
    a direct association with cloud systems. Initially, IoT sensors are arranged in
    an undirected graph 𝐺 with finite vertices  𝑁  and edges 𝐸 . Each node has enough
    memory to hold and maintain its neighbors’ information. Similarly, neighbors in
    the fog system’s proximity are arranged in the form list based on a particular
    score. Fog systems not only aggregate the agricultural data for transmission towards
    the sink node but also offer a security layer among sensors and cloud services.
    Each node has a prefixed transmission range, and in case the sink node is far
    away from it, the proposed framework adopts a multi-hop forwarding decision. We
    show the scenario for the proposed framework in Figure 1. A robust routing strategy
    was built with the identification of the redundant nodes, and agricultural sensors
    are installed in the field to sense the various situations. In the case of redundant
    nodes, such information is not permitted for transmission. Later, fog layers are
    made up of numerous fog nodes to initiate communication with sink nodes. Agriculture
    users may simply obtain the data from their smart devices with the support of
    cloud platforms. Our proposed framework also ensures data privacy and security
    in an unpredictable environment. Figure 1. Scenario for fog-based IoT agricultural
    system. Figure 2 depicts the block diagram of the proposed framework. It is comprised
    of three sub-blocks, i.e., network structure, machine learning system, and fog-based
    secured communication. Firstly, sensors, actuators, gateways, and other communication
    devices initialized themselves for sensing and forwarding agricultural data. The
    sensors continuously record environmental information, which is then sent to sink
    nodes via local coordinators or gateways. Second, a machine learning-based technique
    was created to reduce the communication overheads of the sensor nodes. Finally,
    the proposed system adopts the distributed regression function to assess the various
    attributes of the system and achieves efficient node management [42]. Moreover,
    the machine learning approach not only balances the load over the multiple routes,
    but the proposed framework can also identify the redundant nodes. Duplicate data
    are therefore prohibited from entering in proximity to fog nodes. In the end,
    a fog-based secured scheme is developed with the intelligence of fog nodes and
    cryptographic techniques. Fog nodes perform dual functionalities for communication
    with both the IoT system and cloud platform. This validates the authenticity of
    incoming packets, and accordingly, appropriate actions are taken. In the case
    of authorized nodes, they are allowed to send the data towards the cloud system
    or the request packets are dropped by the fog nodes. The information is recorded
    in the table about false messages and non-authentic devices. Figure 2. Block diagram
    of the proposed methodology. 3.2. Machine Learning-Based Distributed Regressional
    Analysis Based on the undirected graph, the proposed framework identifies the
    initial and temporary routes 𝑅( 𝑟 1 ,  𝑟 2 ,……,  𝑟 𝑛 ). The selected routes are
    based on the distance factor and each node maintains its neighbor table in a controlled
    manner. By exploring the neighbor table, each node formulates a route to the sink
    node for data transmission. To attain an efficient routing scheme with balances
    the load and bandwidth utilization, the proposed framework initiates the nodes
    management activity on the routes 𝑟 𝑖 . Let us consider that 𝑁 𝑖 has a data 𝐷
    𝑖 to transmit to the sink node. Then, the proposed framework first identified
    the overlapping nodes that lay in the same transmission range. If any such nodes
    exist, then set their flag’s value in the routing table. The flag value indicates
    the forwarding status of the nodes. Let us suppose that 𝐷 𝑡 is the distance threshold
    of the node  𝑁𝐷𝑠 , and 𝑟 is the predefined radius. To determine the overlapping
    nodes, the proposed framework exploits the search zone candidate nodes  𝐶 𝑁  based
    on the 𝐷 𝑡 and 𝑟 , as given below 𝑁𝐷𝑠 ( 𝐶 𝑁 ,  𝐷 𝑡 )≤𝑟 (1) After determining the
    candidate nodes, the proposed framework updates the routing table of source node
    𝑖 with the latest statistical values of neighbors. Table 1 describes the format
    of the routing table. It comprised node identity, transmission power, flag value,
    computing score, and distance. The node identity which is one byte long is unique.
    The next field is one byte long and contains the value of preset transmission
    power. The flag field is just a Boolean parameter to indicate whether the node
    can be silent or not, and it is one bit long. Finally, the scoring factor is two
    bytes long and depends on the captured information about the nodes. In the end,
    the distance is 1 byte long and contains information about the space toward the
    fog system. Table 1. Format of a routing table. The proposed framework only allows
    one node in the transmission radius for sensing and forwarding the agricultural
    data. To achieve this, it determines the node score  𝑠 𝑐 𝑖  with 𝑤 𝑖  weighted
    coefficient using distributed weighted regression function 𝑋(𝑖) , and based on
    the maximum score, the flag value of the nodes 𝑖  is set to either “True” or “False”,
    as given below: ⎧ ⎩ ⎨     𝑖𝑓 𝑠 𝑐 𝑖 ==𝑚𝑎𝑥 𝑓 𝑖   𝑖𝑠  𝑇𝑟𝑢𝑒 𝑓𝑎𝑙𝑠𝑒, 𝑜𝑡ℎ𝑒𝑟𝑤𝑖𝑠𝑒   (2)
    𝑋(𝑖)= 𝑤 𝑖  . 𝑠 𝑐 𝑖  (3) The 𝑠 𝑐 𝑖  value for node 𝑖 is determined by exploring
    the residual energy 𝑒 𝑖  , packets load  𝑃 𝐿 𝑖  , distance  𝐷 𝑓 𝑖  , as given
    below: 𝑠 𝑐 𝑖 = 𝑒 𝑖 +1/𝑃 𝐿 𝑖 + 1 𝐷 𝑓 𝑖 / (4) where  𝑃 𝐿 𝑖   defines in terms of
    transmitted packets 𝑁 at time interval 𝑇 , as defined below. 𝑃 𝐿 𝑖 = 𝑁 𝑇 / (5)
    3.3. Fog Systems-Based Security Maintenance In the proposed framework, the fog
    nodes performed the role of the intermediate system between the data originating
    network and cloud services. Firstly, it received all the data and stores it in
    memory for further analysis and processing. It then confirms the data authenticity
    to forward it towards the cloud system in the multi-hop discipline. Then, the
    aggregated data  𝐷 𝐴  is encrypted 𝐸𝑛 using the secret key 𝑘 of the node 𝑖 . Additionally,
    it is integrated with the identity 𝐼 𝐷 𝑖  as given below. 𝐸𝑛(𝑘) ( 𝐷 𝐴 +𝐼 𝐷 𝑖 )
    (6) Upon receiving, fog nodes decrypt it to retrieve the aggregated data and the
    identity of the data-originated node. After the decryption process, the fog nodes
    verify the identity of the nodes with their stored information, and if it matches
    positively, then it will look up its routing table for the selection of the next
    hop among the neighboring fogs. Moreover, the cloud system 𝑐 authenticates the
    receiving data using digital signatures. To achieve this, the fog node 𝐹𝐺 first
    digitally signs the aggregated data 𝐷 𝐴  using its private key 𝑝 𝑟  to generate
    a secret value 𝑆 , as given below. 𝐹 𝐺 𝑐  =𝑆 + 𝐷 𝐴  (7) where 𝐸 𝑝 𝑟 ( 𝐷 𝐴 )=𝑆
    (8) On the other side, the cloud system first authenticates the digital signature
    using the public key of the fog nodes and upon successful verification, it is
    further forwarded to the connected end users with the IoT system. The flow between
    the developed techniques for intelligent agricultural routing is shown in Figure
    3. Initial routes are formulated using the greedy method and exploited for optimizing
    the routing process. It can detect redundant nodes in the proximity of a predefined
    radius and accordingly, it sets the flag value by exploring the intelligent technique
    of machine learning. The flag value indicates the status of neighbors and whether
    they can transmit the data or keep them in silent mode. Finally, agricultural
    data is transmitted towards the sink node using the fog-based IoT system. Figure
    3. Developed methods for the proposed framework. Figure 4 explains the security
    algorithm for transmitting agricultural data with the support of fog nodes. It
    clarifies the fog-based trust mechanism with privacy concerns and reliability.
    Accordingly, the proposed security algorithm decreases the probabilities of network
    attacks and stabilizes the communication system. Fog nodes are utilized as a bridge
    to facilitate both the IoT and cloud systems. Firstly, fog nodes verified the
    incoming agricultural data, and upon its validation, authentication and session
    agreement are established. The session agreement is valid for a particular time
    and needs to be refreshed later for further communication. In case verification
    is unsuccessful, then the error message is generated towards the data originating
    node. Additionally, fog nodes construct routing paths for data forwarding by exploring
    the routing table. The routing information is updated and evaluated each time
    that data transmission is needed. In the end, fog and cloud ensure data security
    using cryptography-based digital signature and encryption techniques. Such a technique
    provides high-level security measures to the upper layers. Figure 4. Flowchart
    of the proposed security algorithm. Moreover, the functioning of the proposed
    framework consists of many states, as depicted in Figure 5. The system will be
    in a specific state at a given time, and it will change states when a particular
    trigger is called. The objectives of the states are defined below. Figure 5. States
    of the proposed framework. - Sensor’s deployment: In this state, agriculture nodes
    are randomly dispersed in the targeted area. They have limited constraints and
    not enough memory, transmissions, and processing resources. They are not able
    to communicate with the sink node directly; - Data sense: All the deployed sensors,
    actuators, and IoT devices collaborate in collecting the data. In addition, the
    data are transferred to the sink nodes through integrating fog systems. The fog
    nodes are explored for reducing communication delays; - Relay node: The data are
    obtained from the deployed sensors and forwarded towards the relay node. The roles
    for relay nodes are not predefined, they are chosen using quality-aware parameters;
    - Decision making: In this state, a distributed machine learning technique is
    applied using network statistics to offer the optimal results for attaining a
    reliable communication system; - Data security: In this end, security actions
    are performed in this state. It identifies faulty nodes and false messages to
    detect the comprised data using private values. It increases the reliability of
    remote users that are connected to cloud systems. 4. Simulations This section
    presents the simulation environment and a discussion of the various tests. We
    ran the simulations of a core i7 laptop with 64 GB RAM and 1 TB hard drive. 20
    trials of the simulations were performed. Between 150 and 750 sensor nodes were
    used in each simulation experiment. Zigbee technologies were used in the testing,
    and experiments were carried out in 1000 m × 1000 m area with a variety of configuration
    settings. For sensing the agricultural environment, numerous sensor categories
    were utilized, including temperature, air humidity, soil moisture, and water quality.
    Two sink nodes, between ten and fifteen 15 fog nodes, and various relay nodes
    were also deployed. Sensor nodes collected the agriculture data and forwarded
    them to the relay nodes for aggregation and data routing. The fog nodes existed
    between sensors and sink nodes. The duration of the experiments was 2000 rounds
    and each round had a time interval of 20 s. The sensors were equipped with GPS.
    Communication channels were scattered with certain malicious nodes to test the
    system’s security. The results analysis was obtained based on the packet delivery,
    energy efficiency, network connectivity, and reliability metrics. All the network
    metrics were evaluated under scenarios of varying sensors and distances from the
    sink node. Table 2 contains the various parameters for simulations. Table 2. Simulation
    parameters. 5. Results with Discussion We evaluated the performance of the proposed
    framework with other studies in terms of energy efficiency. The performance evaluation
    of the proposed framework against those of related works is shown in Figure 6a,b
    for varied IoT sensors and the distance from the sink node. It was found that
    the proposed framework, even in the presence of malfunctioning nodes, considerably
    improves the delivery rate of data packets by an average of 20% for varying nodes,
    and 22% for varying distances from the sink. It results from exploring security
    approaches, key generation, and mutual trust. In the proposed paradigm, the intelligent
    system achieves sustainability and effectively identifies harmful activities by
    utilizing the secret and personal data of devices. Furthermore, the sink nodes
    are more powerful than IoT sensors and verify each activity before sending it
    to the end users. Unlike the majority of the proposed research, our framework
    explicitly provides intelligent decision modules for enhancing packet delivery
    performance with the aid of machine learning and sustains the network load with
    improved throughput. Figure 7a,b demonstrate the comparison of the proposed framework
    in the literature and it was discovered that it notably improves the network reliability
    by an average of 18% and 23% for both scenarios. This is due to the exposure of
    machine learning techniques to identify the optimal IoT nodes and intelligently
    interact with cloud systems. Moreover, the proposed framework can tackle redundant
    information and decreases the chances of data unavailability and congestion. Additionally,
    the security solution decreases unwanted traffic across the open transmission
    system and stops malicious devices from sending false route request packets. As
    a result, the proposed framework lengthens the response time for critical situations
    with a nominal delay rate. The comparison of the proposed and existing solutions
    is revealed in Figure 8a,b in terms of varying nodes and distances from the sink.
    The statistical analysis demonstrated that the proposed framework increased energy
    usage by 15% and 24%, respectively. Energy efficiency was found to be negatively
    impacted when the number of devices increased. On the other hand, the proposed
    framework provides a smart energy solution based on a distributed machine learning
    technique and smoothly selects the updated routes by utilizing the optimum solution.
    Additionally, the proposed framework effectively defends against multiple attacks
    and minimizes the consumption of network bandwidth by employing a security algorithm.
    Consequently, the nodes’ energy is increased, which improves the performance of
    the entire network. By finding the redundant nodes in the routing table, the flag
    status is modified. Nodes whose flag value is false are therefore prohibited from
    participating in data routing. The performance comparison of the proposed framework
    to the existing solutions for network connectivity is illustrated in Figure 9a,b.
    Network connectivity indicates the active time at which nodes use particular communication
    links. The connectivity ratio for the proposed framework against various IoT devices
    and varied distances is remarkably enhanced by an average of 16% for varying distances
    from the sink and 20% in terms of varying nodes. This is due to the ability of
    the proposed framework to efficiently manage power distribution across the sensors
    and investigate the machine learning principles for accomplishing forwarding decisions.
    Moreover, the proposed framework directs the routing module to formulate the routes
    by re-evaluating the decisions whenever any disrupted intermediate links are discovered
    or frequent re-transmissions. The proposed framework successfully manages the
    transmission overheads by including the least computational cost function. Figure
    6. (a) Packets delivery with varying sensors and (b) Packets delivery with varying
    distance. Figure 7. (a) Reliability with varying sensors and (b) Reliability with
    varying distance. Figure 8. (a) Energy efficiency with varying sensors and (b)
    Energy efficiency with varying distance. Figure 9. (a) Network connectivity with
    varying sensors and (b) Network connectivity with varying distance. 6. Conclusions
    With an emphasis on green energy and remote monitoring, smart technologies and
    agricultural systems have grown significantly in recent years. It controls the
    plants, soil characteristics, water pressure, and weather-related information,
    which benefits farmers and increases production. However, limited solutions have
    been proposed to enhance production in precision agriculture while reducing latency
    and information disturbance. Furthermore, protecting agricultural data while utilizing
    the insecure Internet is another significant research challenge. In this study,
    we presented a framework for providing a farmer communication system to enhance
    timely delivery through the cooperation of fog systems. This system also incorporates
    redundant information detection, which reduces network bandwidth inefficiencies.
    Additionally, the proposed framework employs security methods to counter privacy
    attacks on sensing data. The performance results showed the good outcomes of the
    proposed framework with maximum energy efficiency and delivery ratio. Furthermore,
    its performance has proven the improved processing usage in the existence of malicious
    devices. In the future, we intend to cope with the proposed framework’s scalability
    and load-balancing issues with the support of a multi-cloud architecture. Moreover,
    we would like to integrate security to maintain cloud integrity from the point
    of users’ perspective. Author Contributions Conceptualization, A.R. and K.H.;
    methodology, A.R. and I.A.; software, I.A. and K.H.; validation, J.L., L.P. and
    A.R.; formal analysis, A.R. and J.L.; investigation, L.P. and I.A.; resources,
    A.R. and I.A.; data curation, J.L. and L.P.; writing—original draft preparation,
    I.A. and A.R.; writing—review and editing, K.H., J.L. and L.P.; visualization,
    A.R. and L.P.; supervision, J.L. and I.A.; project administration, A.R. and I.A.;
    funding acquisition, J.L. and I.A. All authors have read and agreed to the published
    version of the manuscript. Funding This work has been funded by the “Ministerio
    de Ciencia e Innovación” through the Project PID2020-114467RR-C33 and by “Ministerio
    de Agricultura, Pesca y Alimentación” through the “proyectos de innovación de
    interés general por grupos operativos de la Asociación Europea para la Innovación
    en materia de productividad y sostenibilidad agrícolas (AEI-Agri)”, project GO
    TECNOGAR. This work was supported by the research SEED project “Intelligent and
    trusted metaheuristic optimization model for agriculture using ubiquitous sensors
    network” Prince Sultan University, Riyadh Saudi Arabia, (SEED-CCIS-2022{109})
    under Artificial Intelligence & Data Analytics Research Lab. CCIS. Institutional
    Review Board Statement Not applicable. Informed Consent Statement Not applicable.
    Data Availability Statement All data are provided within the manuscript. Acknowledgments
    The authors are thankful for the support. Conflicts of Interest The authors declare
    no conflict of interest. References Zhou, I.; Makhdoom, I.; Shariati, N.; Raza,
    M.A.; Keshavarz, R.; Lipman, J.; Abolhasan, M.; Jamalipour, A. Internet of things
    2.0: Concepts, applications, and future directions. IEEE Access 2021, 9, 70961–71012.
    [Google Scholar] [CrossRef] Nguyen, V.-L.; Lin, P.-C.; Cheng, B.-C.; Hwang, R.-H.;
    Lin, Y.-D. Security and Privacy for 6G: A Survey on Prospective Technologies and
    Challenges. IEEE Commun. Surv. Tutor. 2021, 23, 2384–2428. [Google Scholar] [CrossRef]
    Rehman, A.; Haseeb, K.; Saba, T.; Lloret, J.; Ahmed, Z. Mobility Support 5G Architecture
    with Real-Time Routing for Sustainable Smart Cities. Sustainability 2021, 13,
    9092. [Google Scholar] [CrossRef] Rehman, A.; Haseeb, K.; Saba, T.; Lloret, J.;
    Tariq, U. Secured Big Data Analytics for Decision-Oriented Medical System Using
    Internet of Things. Electronics 2021, 10, 1273. [Google Scholar] [CrossRef] Quy,
    V.K.; Hau, N.V.; Anh, D.V.; Quy, N.M.; Ban, N.T.; Lanza, S.; Randazzo, G.; Muzirafuti,
    A. IoT-Enabled Smart Agriculture: Architecture, Applications, and Challenges.
    Appl. Sci. 2022, 12, 3396. [Google Scholar] [CrossRef] Lloret, J.; Garcia, M.;
    Bri, D.; Sendra, S. A Wireless Sensor Network Deployment for Rural and Forest
    Fire Detection and Verification. Sensors 2009, 9, 8722–8747. [Google Scholar]
    [CrossRef] [PubMed] Gavrilović, N.; Mishra, A. Software architecture of the internet
    of things (IoT) for smart city, healthcare and agriculture: Analysis and improvement
    directions. J. Ambient Intell. Humaniz. Comput. 2021, 12, 1315–1336. [Google Scholar]
    [CrossRef] Raj, M.; Gupta, S.; Chamola, V.; Elhence, A.; Garg, T.; Atiquzzaman,
    M.; Niyato, D. A survey on the role of Internet of Things for adopting and promoting
    Agriculture 4.0. J. Netw. Comput. Appl. 2021, 187, 103107. [Google Scholar] [CrossRef]
    Haseeb, K.; Saba, T.; Rehman, A.; Ahmed, Z.; Song, H.H.; Wang, H.H. Trust management
    with fault-tolerant supervised routing for smart cities using internet of things.
    IEEE Internet Things J. 2022. [Google Scholar] [CrossRef] Khan, A.I.; Alsolami,
    F.; Alqurashi, F.; Abushark, Y.B.; Sarker, I.H. Novel energy management scheme
    in IoT enabled smart irrigation system using optimized intelligence methods. Eng.
    Appl. Artif. Intell. 2022, 114, 104996. [Google Scholar] [CrossRef] Singh, R.K.;
    Berkvens, R.; Weyn, M. AgriFusion: An Architecture for IoT and Emerging Technologies
    Based on a Precision Agriculture Survey. IEEE Access 2021, 9, 136253–136283. [Google
    Scholar] [CrossRef] Maddikunta, P.K.R.; Hakak, S.; Alazab, M.; Bhattacharya, S.;
    Gadekallu, T.R.; Khan, W.Z.; Pham, Q.-V. Unmanned Aerial Vehicles in Smart Agriculture:
    Applications, Requirements, and Challenges. IEEE Sens. J. 2021, 21, 17608–17619.
    [Google Scholar] [CrossRef] Farooq, M.S.; Riaz, S.; Abid, A.; Abid, K.; Naeem,
    M.A. A Survey on the Role of IoT in Agriculture for the Implementation of Smart
    Farming. IEEE Access 2019, 7, 156237–156271. [Google Scholar] [CrossRef] Johnson,
    N.; Kumar, M.S.; Dhannia, T. A study on the significance of smart IoT sensors
    and Data science in Digital agriculture. In Proceedings of the 2020 Advanced Computing
    and Communication Technologies for High Performance Applications (ACCTHPA), Cochin,
    India, 2–4 July 2020. [Google Scholar] He, S.; Shi, K.; Liu, C.; Guo, B.; Chen,
    J.; Shi, Z. Collaborative Sensing in Internet of Things: A Comprehensive Survey.
    IEEE Commun. Surv. Tutor. 2022, 24, 1435–1474. [Google Scholar] [CrossRef] Churcher,
    A.; Ullah, R.; Ahmad, J.; Rehman, S.U.; Masood, F.; Gogate, M.; Alqahtani, F.;
    Nour, B.; Buchanan, W. An Experimental Analysis of Attack Classification Using
    Machine Learning in IoT Networks. Sensors 2021, 21, 446. [Google Scholar] [CrossRef]
    Bagaa, M.; Taleb, T.; Bernabe, J.B.; Skarmeta, A. A Machine Learning Security
    Framework for Iot Systems. IEEE Access 2020, 8, 114066–114077. [Google Scholar]
    [CrossRef] Demestichas, K.; Peppes, N.; Alexakis, T. Survey on Security Threats
    in Agricultural IoT and Smart Farming. Sensors 2020, 20, 6458. [Google Scholar]
    [CrossRef] Elijah, O.; Rahman, T.A.; Orikumhi, I.; Leow, C.Y.; Hindia, M.N. An
    Overview of Internet of Things (IoT) and Data Analytics in Agriculture: Benefits
    and Challenges. IEEE Internet Things J. 2018, 5, 3758–3773. [Google Scholar] [CrossRef]
    Abunadi, I.; Mengash, H.A.; Alotaibi, S.S.; Asiri, M.M.; Hamza, M.A.; Zamani,
    A.S.; Motwakel, A.; Yaseen, I. Optimal Multikey Homomorphic Encryption with Steganography
    Approach for Multimedia Security in Internet of Everything Environment. Appl.
    Sci. 2022, 12, 4026. [Google Scholar] [CrossRef] Ferrag, M.A.; Shu, L.; Yang,
    X.; Derhab, A.; Maglaras, L. Security and privacy for green IoT-based agriculture:
    Review, blockchain solutions, and challenges. IEEE Access 2020, 8, 32031–32053.
    [Google Scholar] [CrossRef] Vangala, A.; Das, A.K.; Chamola, V.; Korotaev, V.;
    Rodrigues, J.J. Security in IoT-enabled smart agriculture: Architecture, security
    solutions and challenges. Clust. Comput. 2022. [Google Scholar] [CrossRef] Haseeb,
    K.; Ud Din, I.; Almogren, A.; Islam, N. An Energy Efficient and Secure IoT-Based
    WSN Framework: An Application to Smart Agriculture. Sensors 2020, 20, 2081. [Google
    Scholar] [CrossRef] [PubMed] Rao, P.M.; Deebak, B.D. Security and privacy issues
    in smart cities/industries: Technologies, applications, and challenges. J. Ambient
    Intell. Humaniz. Comput. 2022. [Google Scholar] [CrossRef] Singh, T.; Solanki,
    A.; Sharma, S.K.; Nayyar, A.; Paul, A. A Decade Review on Smart Cities: Paradigms,
    Challenges and Opportunities. IEEE Access 2022, 10, 68319–68364. [Google Scholar]
    [CrossRef] Sodhro, A.H.; Pirbhulal, S.; Luo, Z.; de Albuquerque, V.H.C. Towards
    an optimal resource management for IoT based Green and sustainable smart cities.
    J. Clean. Prod. 2019, 220, 1167–1179. [Google Scholar] [CrossRef] Abidoye, A.P.;
    Kabaso, B. Energy-efficient hierarchical routing in wireless sensor networks based
    on fog computing. EURASIP J. Wirel. Commun. Netw. 2021, 2021, 8. [Google Scholar]
    [CrossRef] Wang, T.; Zhang, G.; Alam Bhuiyan, Z.; Liu, A.; Jia, W.; Xie, M. A
    novel trust mechanism based on Fog Computing in Sensor–Cloud System. Future Gener.
    Comput. Syst. 2020, 109, 573–582. [Google Scholar] [CrossRef] Ahmed, S.; Hossain,
    F.; Kaiser, M.S.; Noor, M.B.T.; Mahmud, M.; Chakraborty, C. Artificial Intelligence
    and Machine Learning for Ensuring Security in Smart Cities. In Data-Driven Mining,
    Learning and Analytics for Secured Smart Cities; Springer: Cham, Switzerland,
    2021; pp. 23–47. [Google Scholar] [CrossRef] Alam, T. Cloud-Based IoT Applications
    and Their Roles in Smart Cities. Smart Cities 2021, 4, 1196–1219. [Google Scholar]
    [CrossRef] Aldegheishem, A.; Alrajeh, N.; Garcia, L.; Lloret, J. SWAP: Smart WAter
    Protocol for the Irrigation of Urban Gardens in Smart Cities. IEEE Access 2022,
    10, 39239–39247. [Google Scholar] [CrossRef] Zikria, Y.; Ali, R.; Afzal, M.; Kim,
    S. Next-Generation Internet of Things (IoT): Opportunities, Challenges, and Solutions.
    Sensors 2021, 21, 1174. [Google Scholar] [CrossRef] Maksimovic, M. Greening the
    future: Green Internet of Things (G-IoT) as a key technological enabler of sustainable
    develop-ment. In Internet of Things and Big Data Analytics Toward Next-Generation
    Intelligence; Springer: Cham, Switzerland, 2018; pp. 283–313. [Google Scholar]
    Mahajan, B.H.; Badarla, A.; Junnarkar, A.A. CL-IoT: Cross-layer Internet of Things
    protocol for intelligent manufacturing of smart farming. J. Ambient. Intell. Humaniz.
    Comput. 2021, 12, 7777–7791. [Google Scholar] [CrossRef] Tabassum, M.; Perumal,
    S.; Kashem, S.B.A.; Ponnan, S.; Chakraborty, C.; Chowdhury, M.E.H.; Khandakar,
    A. Enhance data availability and network consistency using artificial neural network
    for IoT. Multimedia Tools Appl. 2022. [Google Scholar] [CrossRef] Pandiyaraju,
    V.; Logambigai, R.; Ganapathy, S.; Kannan, A. An Energy Efficient Routing Algorithm
    for WSNs Using Intelligent Fuzzy Rules in Precision Agriculture. Wirel. Pers.
    Commun. 2020, 112, 243–259. [Google Scholar] [CrossRef] Adil, M.; Khan, M.K.;
    Jamjoom, M.; Farouk, A. MHADBOR: AI-Enabled Administrative-Distance-Based Opportunistic
    Load Balancing Scheme for an Agriculture Internet of Things Network. IEEE Micro
    2021, 42, 41–50. [Google Scholar] [CrossRef] Jani, K.A.; Chaubey, N.K. A Novel
    Model for Optimization of Resource Utilization in Smart Agriculture System Using
    IoT (SMAIoT). IEEE Internet Things J. 2021, 9, 11275–11282. [Google Scholar] [CrossRef]
    Ren, W.; Wan, X.; Gan, P. A double-blockchain solution for agricultural sampled
    data security in Internet of Things network. Futur. Gener. Comput. Syst. 2020,
    117, 453–461. [Google Scholar] [CrossRef] Dilek, S.; Irgan, K.; Guzel, M.; Ozdemir,
    S.; Baydere, S.; Charnsripinyo, C. QoS-aware IoT networks and protocols: A comprehensive
    survey. Int. J. Commun. Syst. 2022, 35, e5156. [Google Scholar] [CrossRef] Khan,
    S.; Parkinson, S.; Qin, Y. Fog computing security: A review of current applications
    and security solutions. J. Cloud Comput. 2017, 6, 19. [Google Scholar] [CrossRef]
    Kumar, D.P.; Amgoth, T.; Annavarapu, C.S.R. Machine learning algorithms for wireless
    sensor networks: A survey. Inf. Fusion 2019, 49, 1–25. [Google Scholar] [CrossRef]
    Publisher’s Note: MDPI stays neutral with regard to jurisdictional claims in published
    maps and institutional affiliations.  © 2022 by the authors. Licensee MDPI, Basel,
    Switzerland. This article is an open access article distributed under the terms
    and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Abunadi, I.; Rehman, A.; Haseeb, K.; Parra,
    L.; Lloret, J. Traffic-Aware Secured Cooperative Framework for IoT-Based Smart
    Monitoring in Precision Agriculture. Sensors 2022, 22, 6676. https://doi.org/10.3390/s22176676
    AMA Style Abunadi I, Rehman A, Haseeb K, Parra L, Lloret J. Traffic-Aware Secured
    Cooperative Framework for IoT-Based Smart Monitoring in Precision Agriculture.
    Sensors. 2022; 22(17):6676. https://doi.org/10.3390/s22176676 Chicago/Turabian
    Style Abunadi, Ibrahim, Amjad Rehman, Khalid Haseeb, Lorena Parra, and Jaime Lloret.
    2022. \"Traffic-Aware Secured Cooperative Framework for IoT-Based Smart Monitoring
    in Precision Agriculture\" Sensors 22, no. 17: 6676. https://doi.org/10.3390/s22176676
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations Crossref   5
    Scopus   4 Web of Science   3 Google Scholar   [click to view] Article Access
    Statistics Article access statistics Article Views 14. Jan 24. Jan 3. Feb 13.
    Feb 23. Feb 4. Mar 14. Mar 24. Mar 3. Apr 0 500 1000 1500 2000 For more information
    on the journal statistics, click here. Multiple requests from the same IP address
    are counted as one view.   Sensors, EISSN 1424-8220, Published by MDPI RSS Content
    Alert Further Information Article Processing Charges Pay an Invoice Open Access
    Policy Contact MDPI Jobs at MDPI Guidelines For Authors For Reviewers For Editors
    For Librarians For Publishers For Societies For Conference Organizers MDPI Initiatives
    Sciforum MDPI Books Preprints.org Scilit SciProfiles Encyclopedia JAMS Proceedings
    Series Follow MDPI LinkedIn Facebook Twitter Subscribe to receive issue release
    notifications and newsletters from MDPI journals Select options Subscribe © 1996-2024
    MDPI (Basel, Switzerland) unless otherwise stated Disclaimer Terms and Conditions
    Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Traffic-Aware Secured Cooperative Framework for IoT-Based Smart Monitoring
    in Precision Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Idrees S.K.
  - Idrees A.K.
  citation_count: '15'
  description: 'The rapid evolution of the Internet of Things (IoT) leads to emerging
    several applications such as smart home, ehealth, smart agriculture and farming,
    etc. The edge of the IoT networks will receive a huge amount of data generated
    by these smart applications which regularly require to be delivered to the servers
    of the remote data centers for additional real-time treatment. However, transmitting
    the whole of these IoT data across the network toward the data center of the cloud
    will impose a high overhead on the IoT network. The data exchange and processing
    long delay have a significant impact on the response speed of the real-time IoT
    applications. It can reduce the time responsiveness of these applications. The
    fog computing has provided for the IoT applications as an intermediate layer between
    the smart end devices and the cloud to reduce IoT data and improve the response
    time for IoT applications. In this paper, new fog computing enabled lossless EEG
    data compression scheme is proposed to minimize the amount of IoT EEG data uploaded
    to the cloud. The EEG data compression scheme consists of two phases: clustering
    and compression. First, the received data is clustered into clusters using agglomerative
    hierarchical clustering. The Huffman encoding is applied to each resulted cluster
    in the second phase. Finally, the compressed files of smaller clusters are combined
    and uploaded from fog to cloud. Several experiments have been implemented and
    the comparison results show that the suggested combined Hierarchical Clustering
    and Huffman Encoding (HCHE) method significantly decreases the volume of EEG data
    uploaded to the cloud platform. The proposed HCHE method achieves 4.33 of average
    compression power that is more than twice as much the compression power of some
    existing methods.'
  doi: 10.1007/s12652-021-03161-5
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Journal of Ambient Intelligence and
    Humanized Computing Article New fog computing enabled lossless EEG data compression
    scheme in IoT networks Original Research Published: 22 March 2021 Volume 13, pages
    3257–3270, (2022) Cite this article Download PDF Access provided by University
    of Nebraska-Lincoln Journal of Ambient Intelligence and Humanized Computing Aims
    and scope Submit manuscript Sara Kadhum Idrees & Ali Kadhum Idrees   634 Accesses
    14 Citations Explore all metrics Abstract The rapid evolution of the Internet
    of Things (IoT) leads to emerging several applications such as smart home, ehealth,
    smart agriculture and farming, etc. The edge of the IoT networks will receive
    a huge amount of data generated by these smart applications which regularly require
    to be delivered to the servers of the remote data centers for additional real-time
    treatment. However, transmitting the whole of these IoT data across the network
    toward the data center of the cloud will impose a high overhead on the IoT network.
    The data exchange and processing long delay have a significant impact on the response
    speed of the real-time IoT applications. It can reduce the time responsiveness
    of these applications. The fog computing has provided for the IoT applications
    as an intermediate layer between the smart end devices and the cloud to reduce
    IoT data and improve the response time for IoT applications. In this paper, new
    fog computing enabled lossless EEG data compression scheme is proposed to minimize
    the amount of IoT EEG data uploaded to the cloud. The EEG data compression scheme
    consists of two phases: clustering and compression. First, the received data is
    clustered into clusters using agglomerative hierarchical clustering. The Huffman
    encoding is applied to each resulted cluster in the second phase. Finally, the
    compressed files of smaller clusters are combined and uploaded from fog to cloud.
    Several experiments have been implemented and the comparison results show that
    the suggested combined Hierarchical Clustering and Huffman Encoding (HCHE) method
    significantly decreases the volume of EEG data uploaded to the cloud platform.
    The proposed HCHE method achieves 4.33 of average compression power that is more
    than twice as much the compression power of some existing methods. Similar content
    being viewed by others Data Traffic Management Based on Compression and MDL Techniques
    for Smart Agriculture in IoT Article 20 May 2021 Efficient compression technique
    for reducing transmitted EEG data without loss in IoMT networks based on fog computing
    Article 07 January 2023 IoT Stream Data Compression Using LDPC Coding Chapter
    © 2021 1 Introduction The fast-growing in the communication and sensing technologies
    make the IoT network able to interconnect several physical devices and this leads
    to emerging several IoT applications such as smart home, smart healthcare, smart
    transportation, smart environment monitoring, etc. (Idrees et al. 2020; Harb et
    al. 2017; Idrees and Witwit 2020). The fast response to the data of these IoT
    applications represents a big challenge on the IoT network, especially in satisfying
    the latency, traffic reduction, privacy, and bandwidth conditions of IoT applications
    (Idrees et al. 2017, 2018, 2019). For example, the smart healthcare application
    needs good security and privacy for the patient data, fast response to the emergency
    state, and high bandwidth for transferring the huge amount of daily sensed patient
    data over the IoT network. These requirements cannot be satisfied by the current
    IoT network because of bandwidth restriction, the inevitable long delay, and the
    huge amount of uploaded data is very expensive. These challenges have led to introduce
    fog computing by Cisco (Bonomi et al. 2012). Fog computing is an extended architecture
    of cloud computing by using edge devices to compute, storage, analysis, communicate
    locally between the smart end devices and the data centers of cloud computing
    (Rocha Filho et al. 2020; De Paola et al. 2019). It brings processing and intelligence
    close to the source of data (La et al. 2019). Therefore, the data reduction at
    the fog computing layer can produce a rapid response to the smart end devices
    as well as reducing the volume of uploaded data to the cloud platform that leads
    to saving the bandwidth of the network (Mouradian et al. 2017; Reddy and Gayathri
    2020; Jain and Kumar 2020). The electroencephalogram (EEG) signals are utilized
    to observe the activities of the brain and to analyze several brain diseases.
    These activities are recognized by a set of sensors located on the scalp that
    transmit their sensed reading to the smart gateway (fog node) and then to the
    data centers of the cloud. The results of EEG signals are presented as changes
    in brain activities. These signals can be utilized to diagnose infarcts, tumors,
    dementia, and epilepsy (Feng et al. 2016; Boylan et al. 2015). Therefore, the
    studies of EEG signals are the interest of researchers and physicians (Xu et al.
    2015). The activity of the maximum number of neurons is measured by the electroencephalogram
    (EEG) signals. These signals need a large space to store and transmit (Prieto
    et al. 2018). To deal with this problem, the EEG data can be compressed at the
    fog layer using a compression approach to reduce the gathered data before sending
    it to the cloud. A massive volume of medical data is saved, processed, and transmitted
    in the health monitoring systems (Abdellatif et al. 2019). The data obtained from
    high-quality devices comprise up to one hundred electrodes can reach 1.6 Mbps
    per patient, where the medical data reporting to the medical health cloud in every
    5 min (Abdellatif et al. 2019). Moreover, in some emergency status, need highly
    intensive monitoring, the medical patient’s data reported every 10 s (Abdellatif
    et al. 2019). Therefore, health monitoring systems have many limitations, like
    an increase in the records of the patients that transmitting to the medical cloud
    across the fog computing node, increment in the size of medical data, the cost
    of bandwidth, in addition to the errors that generated during sending process.
    These limitations can be treated with appropriate compression methods (Hejrati
    et al. 2017) that can be applied at the fog computing node before transmitting
    it to the data centers of the cloud platform.  This paper contains the following
    contributions. (i) This article suggests a new lossless compression approach to
    reduce the EEG data of the patient at the fog node platform, so that the entire
    volume of IoT data is minimized before uploading it to the data centers of the
    could platform. The suggested lossless compression approach integrates two efficient
    techniques: agglomerative hierarchal clustering and Huffman encoding and named
    (HCHE) to achieve a high lossless compression ratio on the collected EEG data
    at the fog gateway. The agglomerative hierarchal clustering is responsible for
    clustering the huge gathered EEG data into small clusters of similar data. After
    that, the Huffman encoding is employed on each cluster of data to compress it
    exploiting the similarity among data. The compressed data of all the clusters
    are merged at the fog device and then transmitted to the cloud. (ii) Employ the
    integrated lossless compression approach (HCHE) inside the fog gateway in the
    proposed EEG health network architecture (see Fig. 1) leads to an increase in
    the performance of the IoT network by reducing the uploaded EEG patient data to
    the smart health network due to the high lossless compression ratio of the proposed
    HCHE method while preserving the quality of EEG data at the cloud. Besides, the
    fog computing layer between the smart end devices and the cloud platform can exploit
    the proposed HCHE method to reduce IoT data and improve the response time for
    IoT applications. (iii) Extensive experiments are achieved by using Python programming
    language and based on real EEG collected data of patients from the Bonn University
    with different records (Z, F, N, O, S) (Andrzejak et al. 2001) to show the improved
    performance of the proposed HCHE lossless compression method. The proposed HCHE
    method is compared with some existing methods like 2-D SPIHT + AC (Srinivasan
    et al. 2011), JPEG2000 (Srinivasan et al. 2011), 1-D SHORTEN (Srinivasan et al.
    2011), AC (Srinivasan et al. 2011), 2-D SPIHT (Srinivasan and Reddy 2010), and
    1-D SPIHT (Srinivasan and Reddy 2010) and the comparison results show that the
    proposed HCHE method has potentially outperformed other methods from the compression
    ratio point of view. Fig. 1 The smart health network architecture of the proposed
    method Full size image The remaining of this paper is organized as following:
    The literature review is presented in the next section. Section 3 introduces a
    scientific background about the smart health system, clustering, and lossless
    compression techniques. The proposed lossless compression approach is detailed
    in Sect. 4. Section 5 displays the conducted results and analysis. The conclusion
    and future work are given in Sect. 6. 2 Literature review One important challenge
    in the medical health monitoring system of the IoT network is to reduce the huge
    the sensed EEG data of the patient to increase the performance of the network
    while keeping the accuracy of the received data at the final destination. The
    lossless compression technique is one essential approach to achieve this process
    at the edge between the biosensors and the cloud. It performs a process of coding
    that will efficiently decrease the total number of bits required to represent
    specific information where the compression and decompression processes produce
    no information loss. There are several studies have focused on EEG compression
    techniques presenting different methods and algorithms. The authors in Srinivasan
    and Reddy (2010) proposed. An efficient method for real-time lossless compression
    of EEG signals. This method is composed of lifting wavelet transform (decorrelator)
    and set division in hierarchical trees (source coder). In Srinivasan et al. (2011),
    the authors investigated different lossless compression approaches for compressing
    the EEG signals. These methods such as 2-D SPIHT + AC, JPEG2000, 1-D SHORTEN,
    AC, 2-D SPIHT, and 1-D SPIHT for EEG lossless compression in medical applications.
    They have studied these methods and compared them based on real data collected
    from the biosensors. A simple and efficient lossless compression method was proposed
    in Hejrati et al. (2017). Authors are used inter-channel and intra-channel correlations.
    In the first stage, to extract intra-channel correlation, they used code modulation
    and differential technique as a preprocessing step and grouped channels in different
    clusters. The centroid of each cluster is calculated and coded by arithmetic coding.
    As a second step, in each cluster, the difference among channels data and the
    centroid is computed and compressed by arithmetic coding. In Azar et al. (2018)
    Discrete Wavelet Transform (DWT) used the lifting scheme extended with polynomial
    interpolation was proposed as a lossless compression method. The proposed method
    reduced the consumed energy by minimizing the number of bits required to represent
    the sensed data before to transmission. This method does not need complexity in
    mathematical computations and further space of memory storage. The results of
    the proposed method compared with other compression methods such as discrete cosine
    transform, lifting scheme based Haar transform and, simple delta encoding and
    they found the compression ratio for the proposed algorithm is better than the
    rest. EEG signal classification was accomplished in the frequency domain using
    several machine learning algorithms (Han et al. 2018). The dimensional reduction
    algorithm used to reduce the group of feature sets. The signal is categorized
    from the data acquisition process, segmentation in addition to features contains
    wavelet statistical features. The best performance was obtained from wavelet features
    compared to statistical features. The accuracy increases when comparing the feature
    pair. The evaluation result demonstrated accuracy in \\(6\\%\\) with the classifier.
    The compression of EEG signal feature used widely in the principal component analysis
    (PCA) (Sahu et al. 2018; Robinson Raju and Moh 2019). This task is implemented
    by the channel brain computer interface (BCI). In this suggested method, the brain’s
    electrical signals are splattered in electrophysiological monitoring. The work
    in Sahu et al. (2018) mainly depending on the classification of EEG feature to
    provide BCI. After classified different patterns of EEG signals, the motor imagery
    domain was utilized to mapping the movements. The data were processed for the
    acquisition of feature and it comprises two main classes such our right hand and
    limb. In Sarasa et al. (2019) a normalized compression distance (NCD) proposed
    to compressed data without loss. It was calculated the distance of compression
    and then used for ASCII objects. This method presented two kinds of clustering
    algorithms such as the multidimensional projection method and hierarchical clustering
    algorithm. The results are analyzed in different clustering performances and showed
    the accuracy of the proposed method. The EEG characteristics determined by the
    proposed NCD method. Rajasekar and Pushpalatha (2020) proposed Huffman based discrete
    cosine transform as a lossless compression method. They proposed the discrete
    cosine transform and inverse discrete cosine transform to reduce the data complexity
    and to increase the privacy of the data. Where the transmission of the EEG data
    is performed efficiently. Elaskary et al. (2017) are combining discrete cosine
    transform as lossy compression and then quantized Huffman coding as a lossless
    compression algorithm to obtain a high compression ratio with adequate distortion
    in the primary signal. There are some recent works concentrated on data reduction
    using fog computing in IoT networks. Hosseinpour et al. (2016) proposed an intelligent
    data structure for managing the big data in fog devices. In Mehdipour et al. (2016),
    the authors presented a fog-engine module to process the data before sending it
    to the cloud. The data gathering, mining, storage, etc. are supported by this
    fog-engine module to process them before the cloud. In this article, we are motivated
    to propose a lossless compression scheme to reduce the received EEG patient data
    at the fog gateway before transmitting it to the cloud platform. The EEG data
    are clustered in the first phase into several small clusters of similar data and
    then the lossless compression like Huffman encoding is applied on each cluster
    to produce a compressed file. finally, the compressed files are combined into
    one compressed one to send it to the Cloud platform. 3 Scientific background 3.1
    Health monitoring system The health monitoring system (HMS) includes monitoring
    vitals of patients remotely by some physical devices placed on the human body
    that collect patient’s data and then send the data to visualization or processing
    device by wires or wireless to take the necessary action. The diagnosis and the
    monitoring of (HMS) help to provide the necessary diagnosis and assistance to
    the patient remotely without the need to be in the hospital (Swaroop et al. 2019).
    It uses many sensors for monitoring the vitals of the patient like EEG, ECG, the
    temperature of body, heart rate, respiration and, blood pressure etc. In addition,
    some diseases such as cardiovascular and diabetes in which the patients need continuous
    monitoring throughout the day. Where they need to carry several devices and wires
    if the traditional systems are applied. In addition to the possibility of obtaining
    inaccurate data as a result of the continuous movement of patients. These effects
    can treat effectively with the health monitoring system that depends on wireless
    body area network (WBAN) by using its features of mobility and wireless communication.
    The health monitoring systems based on (WBAN) consist of three essential parts
    representing in sensor nodes, gateway, and back-end part. These components are
    described in details as follows (Gia et al. 2015). (1) Medical sensors nodes:
    are a combination of many physical devices that either wearable or implantable
    in the human body which sense the physical condition of the patient for collecting
    medical or the vital data of patient such as location, temperature, blood pressure,
    ECG, EEG, and EMG and then sending the collecting data to the gateway node by
    Wi-Fi, Bluetooth, 6LoWPAN or ZigBee. (2) Gateway: is the heart of the healthcare
    system because it connects a great number of sensors with the cloud server. When
    a bottle-neck happens at a gateway or is not working properly, the performance
    of all the healthcare system will be affected. Consequently, it is not possible
    to access the patient’s vital data at the cloud server and take the necessary
    action in the appropriate time. (3) Back end part: includes a cloud server and
    heath care servers (back end services) which may be different from one system
    to another depending on the services and the technologies provided. The cloud
    server responsible for gathering the patient’s sensitive data from the gateway
    devices for saving, processing then transmitting to the heath care servers for
    analyzing the medical data and monitor the physical conditions of the patient
    to take a decision depending on the patient’s conditions. The architecture of
    IoT health monitoring system is shown in Fig. 1. Fig. 2 The architecture of IoT
    health monitoring system Full size image The nature of the data generated by the
    medical sensors in these health care systems are very massive data and needs immediate
    and rapid decision-making. Therefore, in this paper, we propose a method for compressing
    the massive EEG data without losing in the information to be sent through the
    network rapidly as possible (Fig. 2). 3.2 Hierarchical clustering algorithm (HCA)
    HCA algorithms are used to group similar data into a number of subgroups named
    clusters. Where all clusters are different from each other, and all features of
    the objects of one cluster are very close to each other. The types of hierarchical
    clustering algorithms are agglomerative and divisive clustering algorithm (Zhou
    et al. 2016). In the agglomerative hierarchical clustering, starting from bottom
    up separates each data points into a single cluster in order that the initial
    number of clusters equals the total number of data point (Yim and Ramdeen 2015).
    Then, compute the distance (e.g., similarity) among all the clusters to generate
    the proximity matrix and merge the two clusters that have close distance with
    each other. Finally, repeating the distance computation to the new clusters and
    merge the closest one until a single cluster is formed. The method that determines
    the closest clusters to each other affects the end results (Yim and Ramdeen 2015).
    The most popular metrics for determining the similarities between two cluster
    are: Euclidean distance, Square Euclidean Distance, Manhattan distance, and Maximum
    distance. After calculating the distance between clusters and determining the
    appropriate distance metric, it became necessary to determine the criteria that
    use to merge two clusters. For example, the single linkage referring to the minimum
    distance between the data point in the first cluster and the data point in the
    second cluster. Complete linkage depends on calculating the longest distance between
    two points in two clusters. Average linkage using the average distance among every
    data point in one cluster to each data point in the other cluster. While the ward
    linkage computing the distance depends on the sum of squared differences within
    all clusters. The second type of (HCA) is the divisive approach is the inverse
    of the agglomerative algorithm it starts the clustering from top to bottom. Where
    begin with one big cluster and start separating it into number of small groups
    of clusters till each data point is a separate cluster (Yim and Ramdeen 2015).
    Several clustering algorithms have been proposed in the literature and for various
    applications. In this paper, we have employed hierarchical clustering because
    it is simple to achieve and it can be understood using the dendrograms. Besides,
    the agglomerative clustering is selected instead of divisive clustering because
    it has less complexity and it is most widely used. There are several methods for
    combining clusters at each step in the agglomerative hierarchical approach such
    as single linkage, complete linkage, average linkage, centroid method, and Ward’s
    method. In this paper, Ward’s method is used. It is an ANOVA based method. It
    looks at cluster analysis as an analysis of variance problem, instead of using
    distance metrics or measures of association. The two clusters are combined in
    each step if they provide the smallest increment in the combined error sum of
    squares. The reason of choosing Ward Linkage method in our proposed approach because
    it is most suitable for quantitative variables, and not binary variables. 3.3
    Huffman coding algorithm Huffman coding algorithm is used to achieve high compression
    range among 20–90% (Rajasekar and Pushpalatha 2020). The data messages compress
    in this technique in the form of variable-length of binary bits. The process of
    encoding done depending on the number of frequencies of each symbol in the message
    and these frequencies will be encoding by using the least number of bits. The
    algorithm creates a binary tree that contains numbers of leaves, where the weight
    of each leaf represents the number of frequencies in the message. After the encoding
    process, the decoding process will apply by visiting tree leaves from the root
    sequentially. The main benefit of this algorithm is the low time complexity. In
    addition to use the variable-length code to represent the symbols according to
    its frequency so that, more storage space can be provided (Rajasekar and Pushpalatha
    2020). The main reason behind employing the Huffman coding in the proposed HCHE
    method because it is a greedy algorithm and it consumes low computation time.
    It decreases the average length of code to represent the representatives of the
    alphabet. Variable-length code is used to replace every character depending on
    the character’s frequency. This will decrease the access time for the characters.
    The prefix codes can be provided by Huffman coding to guarantees lossless EEG
    compression and prevent the occurrence of ambiguity. 4 The EEG lossless compression
    approach In this section, we propose a fog computing enabled medical EEG lossless
    compression approach to compress the EEG data to reduce the transmitted EEG data
    to the data centers of the cloud and to increase the performance of the IoT network.
    Figure 3 illustrates the fog computing enabled medical EEG lossless compression
    approach. Fig. 3 Fog computing enabled medical EEG lossless compression approach
    Full size image The EEG biosensors are batch of sensors placed on patient scalp
    to record brain activity and forwarding them to the fog smart gateway in wireless
    way. EEG signal data are obtained from patients utilizing EEG headset in wearable
    sensors layer, and then they are sent to fog smart gateway periodically. The fog
    gateway process and compress the collected EEG data and finally, the compressed
    EEG data are forwarded to the remote cloud platform for further analysis (see
    Fig. 3). First, the EEG data readings are collected periodically at the fog smart
    gateway from the EEG biosensors. In each period, two records of EEG data readings
    are processed in the fog gateway and they can be represented as X = x1, \\(\\ldots\\),
    xn, where n is the total number of EEG data readings of the two records that is
    equal to 8194 EEG values. The EEG data readings in X are clustered in to several
    clusters based on their similarity using HCHE lossless Algorithm. It depends on
    the Euclidean distance (see Eq. 2) for calculating the distance between values,
    in addition, to ward linkage criteria (see Eq. 1). The Huffman encoding is applied
    on each cluster to compress the EEG data readings inside the cluster to reduce
    volume of transmitted EEG data from the fog gateway to the data centers in the
    cloud platform in the IoT system. The Huffman encoding applies the standard steps
    of the algorithm which depends on the frequency of each EEG data reading to determine
    the length of the codewords that replace the original data. Therefore, it decreases
    the data number in each cluster after compressing it with maintain the data accuracy.
    The Algorithm 1 shows the proposed HCHE lossless compression approach that is
    named Hierarchical Clustering and Huffman Encoding (HCHE). Definition 1 (Ward
    Linkage Metric) It is a criterion for selecting a couple of clusters at each step
    to merge them depending on the objective function optimal value. The distance
    between two groups (clusters), \\(C_1\\) and \\(C_1\\), is the amount of sum of
    squares increase when they are combined. It is referred to as follow. $$\\begin{aligned}
    \\Delta (C_1,C_2)&= \\sum _{i\\in C_1 \\bigcup C_2} \\Vert \\overrightarrow{y_i}
    - \\overrightarrow{m}_{C_1 \\bigcup C_2}\\Vert ^2 - \\sum _{i \\in C_1}\\Vert
    \\overrightarrow{y_i} - \\overrightarrow{m}_{C_1}\\Vert ^2 \\\\&\\quad -\\sum
    _{i \\in C_2}\\Vert \\overrightarrow{y_i}- \\overrightarrow{m}_{C_2}\\Vert ^2
    = \\frac{n_{C_1}n_{C_2}}{n_{C_1}+n_{C_2}} \\Vert \\overrightarrow{m}_{C_1}- \\overrightarrow{m}_{C_2}\\Vert
    ^2 \\end{aligned}$$ (1) where \\(\\overrightarrow{y_i}\\) and \\(\\overrightarrow{m_j}\\)
    refers to the cluster i center and the cluster j center respectively. The parameter
    \\(n_j\\) refers to the number of the values in the cluster j. \\(\\Delta\\) represents
    the cost of merging of the clusters \\(C_1\\) and \\(C_2\\). Definition 2 (Euclidean
    distance) It refers to the straight-line distance between two EEG data values
    \\(x_i\\) and \\(y_i\\) in Euclidean space is referred to as follow. $$\\begin{aligned}
    dis(x, y) = dis(y, x) = \\sqrt{\\sum _{i=1} (y_i-x_i)^2}. \\end{aligned}$$ (2)
    The BringCluster(C, K) function in Algorithm 1 is to generate the required clusters
    based on the given number of clusters identified by the parameter K. As shown
    in Fig. 4, if K = 15 then the number of vertical lines that have intersected depending
    on the value of the parameter K, represents the number of required clusters. In
    this figure, the horizontal black line intersects two vertical lines, therefore,
    the constructed clusters are [0, 1, 2, 3, 4, 5, 6, 7] and [12, 13, 8, 9, 10, 11].
    Fig. 4 An example of using hierarchical clustering Full size image The method
    operates by constructing a binary tree of nodes. These will be saved in an array
    of size n. The node will be an internal node or a leaf node. In the beginning,
    the whole of the nodes will be leaf nodes. They include the EEG value itself,
    its repetition, and maybe a connection to the child nodes. The left child is represented
    by the bit “0” and the right child is represented by the bit “1”. The priority
    queue is employed to save the nodes, which produces the lowest repetition node
    when popped. In Algorithm 2, the leaf node to every EEG value is constructed and
    pushed in the priority queue. Line 6 includes a loop that will continue while
    there is more than one node in the queue. The lines 7–11 will delete the nodes
    from the queue which they have the biggest priority. After that, it constructs
    a new node that includes these two nodes with the sum of their frequency as children.
    Then, the new node will be appended to the queue. Finally, the tree is completed
    and the root node is the resting one. The time complexity of Algorithm 1 is O(nlogn).
    The decompression approach is to interchange the prefix codes sequence to a specific
    byte value. It is achieved by following the tree from node to another as every
    bit is gathered from the input sequence. The byte value is completed when the
    traversing reaches the leaf node. The leaf value expresses the wanted EEG value.
    5 Simulation results and analysis The principal purpose of the suggested EEG lossless
    compression approach is to decrease the communication cost by reducing the volume
    of data that will be transmitted across the Internet to the cloud platform by
    eliminating the redundant EEG data from the collected data of EEG sensor devices
    at the fog smart gateway level before sending it to the cloud platform. In this
    section, we evaluate the proposed EGG lossless compression approach that will
    be executed at the fog smart gateway. The performance evaluation is achieved using
    different performance metrics such as Compression Ratio (CR), compression and
    decompression Computation Time, and size of transmitted data. The experiments
    are performed based on the dataset of the Bonn University with different records
    (Z, F, N, O, S) (Andrzejak et al. 2001). We have used the Python programming language.
    In this paper, we have named our proposed EGG lossless compression approach as
    HCHE. The HCLZW is the combination of hierarchical clustering and the LZW lossless
    compression. HE is the original lossless Huffman algorithm, while the LZW is the
    original LZW approach. 5.1 Performance metrics This section introduces some important
    performance measures to assess the proposed EEG lossless compression approach
    and we can define them as follow. (I) Compression ratio (CR): it can be defined
    as follow. $$\\begin{aligned} CR (\\%) = \\left( 1- \\frac{EEG_{Compressed}}{
    EEG_{Original}}\\right) \\times 100 \\end{aligned}$$ (3) where \\(EEG_{Compressed}\\)
    refers to the compressed EEG data size after applying the HCHE approach while
    the \\(EEG_{Original}\\) refers to the original EEG data size before compression
    process. (II) Compression and decompression computation time (T): it refers to
    the overall time of compression process and decompression process respectively.
    (III) Size of transmitted data: it refers to the size of the compressed data sent
    to the cloud data center from fog smart gateway in KB. (IV) Compression power
    (CP): also known as the ratio of data compression is typically expressed as the
    ratio between the uncompressed volume \\((EEG_{Original})\\) and compressed volume
    \\((EEG_{Compressed})\\) of data. It can be defined as follow: $$\\begin{aligned}
    CP =\\frac{EEG_{Original}}{ EEG_{Compressed}}. \\end{aligned}$$ (4) 5.2 Number
    of clusters In this section, we will study the impact of the number of clusters
    on the performance of the proposed approach using the performance measures in
    Sect. 5.1. We have used different numbers of clusters (K) such as 10, 30, 50,
    70, and 100 during conducting the results in this section. The presented results
    in this section are based on the record “Z” in the dataset of the Bonn University.
    Table 1 refers to the number of clusters versus performance metrics like compression
    ratio, sent data, compression, and decompression computation time that presented
    in Sect. 5.1. Table 1 The number of cluster versus performance metrics Full size
    table As shown in Table 1, the proposed HCHE approach introduces better compression
    ratio compared to HCLZW and especially in the case of K = 100. The high percentage
    of lossless compression (see Table 1) led to a high reduction in the EEG data
    volume before transmitting it to the cloud data center. The proposed HCHE approach
    introduces better EEG data reduction size in the case of K = 100. This can increase
    the performance of the network and decreasing the overhead on the IoT network.
    The Table 1 shows that the HCHE with K equal to 50 and 70 can consume a slight
    less execution time for the compression compared with the HCHE with K equal 100
    but they provide a less compression ratio. Besides, the results presents that
    the HCHE with K equal to 30, 50 and 70 can take a slight less execution time for
    the decompression compared to HCHE with K =100. We can conclude from the results
    in this section that the proposed HCHE with K =100 can improve the performance
    of the IoT network because it can highly reduce the transmitted EEG data from
    fog gateway to the cloud platform. 5.3 Comparison results In this section, we
    will compare our proposed EGG lossless compression approach (HCHE) with three
    other methods such as the original Huffman Encoding, Original LZW method, and
    the HCLZW. We set the number of clusters (K) in Algorithm 1 to 100. The results
    are conducted for all EEG data records of the dataset of the Bonn University with
    different records (Z, F, N, O, S). 5.3.1 Compression ratio The compression ratio
    is an important factor that affects the performance of the network. in this experiment,
    we study this measure using different records and compare the results with different
    approaches. Figure 5 shows the compression ratio for various methods using the
    dataset(Z, F, N, O, S). The results show that our HCHE approach can introduce
    a better compression ratio in comparison with other approaches. HCHE can compress
    the EEG data in all records from 70% up to 83%. The other methods compress the
    EEG data in all records from 14% up to 56%, from 65% up to 70%, from 40% up to
    54% for HCLZW, HE, and LZW respectively. Fig. 5 The compression ratio. a Z, b
    F, c N, d O, e S Full size image 5.3.2 Sent EEG data In this experiment, the impact
    of the proposed HCHE Lossless compression approach on the sent EEG data to the
    cloud platform. Figure 6 shows the compression ratio for various methods using
    the dataset (Z, F, N, O, S). The results reveal that our HCHE approach can present
    a lower size of sent EEG data in comparison with other approaches. HCHE can transmit
    a reduced size of EEG data and in different records (in KB) from 5% up to 15%.
    The other methods compress the EEG data in all records (in KB) from 14% up to
    37%, from 10% up to 22%, from 16% up to 34% for HCLZW, HE, and LZW respectively.
    Fig. 6 Sent data. a Z, b F, c N, d O, e S Full size image 5.3.3 Compression time
    In this experiment, the impact of the proposed HCHE Lossless compression approach
    on the compression time of EEG data. Figure 7 shows the compression time for various
    methods using various datasets (Z, F, N, O, S). The results exhibit that our HCHE
    approach can offer a less compression time per period in comparison with HCLZW
    and LZW while it consumes a little bit higher compression time than HE. The HCHE
    introduces better performances in terms of the size of transmitted EEG data and
    compression ratio which have a great effect on the performance of the network.
    Fig. 7 Compression time (s). a Z, b F, c N, d O, e S Full size image 5.3.4 Decompression
    time In this study, the influence of the proposed HCHE Lossless decompression
    approach on the decompression time of EEG data. Figure 8 presents the decompression
    time for several methods using multiple datasets (Z, F, N, O, S). The results
    display that our HCHE approach can offer a less decompression time per period
    in comparison with HCLZW and LZW while it consumes a little bit higher decompression
    time than HE. Fig. 8 Decompression time (s). a Z, b F, c N, d O, e S Full size
    image 5.3.5 Compression power (CP) In this experiment, The compression power (see
    (4)) for our proposed approach HCHE is evaluated and compared with some existing
    lossless compression methods in the literature such as 2-D SPIHT + AC (Srinivasan
    et al. 2011), JPEG2000 (Srinivasan et al. 2011), 1-D SHORTEN (Srinivasan et al.
    2011), AC (Srinivasan et al. 2011), 2-D SPIHT (Srinivasan and Reddy 2010), and
    1-D SPIHT (Srinivasan and Reddy 2010). Table 2 presents the compression power
    for different lossless compression methods. Table 2 Compression power for different
    lossless compression methods Full size table The results in Table 2 show that
    the proposed HCHE algorithm introduces a better performance in comparison with
    the rest existing methods. Where the average of the compression power of the proposed
    HCHE method is more than twice as much the compression power of the existing methods.
    The proposed HCHE approach achieves a better EEG data reduction size by exploiting
    the spatial correlation among the collected EEG data at the Fog gateway. 6 Conclusion
    and perspectives The increased use of smart health monitoring applications in
    the IoT networks will lead to sending a huge amount of medical data to the edge
    of the IoT networks that regularly require to be delivered to the servers of the
    remote data centers for additional real-time treatment. However, sending the whole
    large gathered medical data across the IoT network toward the data centers will
    impose a high overhead on the IoT network that impact on the response speed of
    the real-time IoT health monitoring applications. The response time for IoT applications
    can be enhanced by reducing the Huge amount of medical IoT data at the fog computing
    layer. In this paper, we propose a new fog computing enabled lossless EEG data
    compression scheme to reduce the volume of IoT EEG data uploaded to the cloud.
    The EEG data compression scheme consists of a combination of two algorithms: agglomerative
    hierarchal clustering and Huffman encoding. First, the received EEG data is clustered
    into clusters. Then, the Huffman encoding is applied to each resulted cluster
    in the second phase. Finally, the compressed files of smaller clusters are combined
    and uploaded from the fog gateway to the cloud data center. The proposed HCHE
    approach introduces better EEG data reduction size and improved compression ratio
    by exploiting the similarity among the EEG data at each cluster. Various experiments
    have been achieved and the comparison results show that the proposed HCHE lossless
    compression method significantly decreases the volume of EEG data uploaded to
    the cloud platform and outperforms other existing methods in terms of the compression
    ratio. In the future, we plan to use deep learning as a predictor to further reduce
    redundant data before transmitting it to the cloud. References Abdellatif AA,
    Emam A, Chiasserini CF, Mohamed A, Jaoua A, Ward R (2019) Edge-based compression
    and classification for smart healthcare systems: concept, implementation and evaluation.
    Expert Syst Appl 117:1–14 Article   Google Scholar   Andrzejak RG, Lehnertz K,
    Mormann F, Rieke C, David P, Elger CE (2001) Indications of nonlinear deterministic
    and finite-dimensional structures in time series of brain electrical activity:
    dependence on recording region and brain state. Phys Rev E 64(6):061907 Article   Google
    Scholar   Azar J, Darazi R, Habib C, Makhoul A, Demerjian J (2018) Using dwt lifting
    scheme for lossless data compression in wireless body sensor networks. In: 2018
    14th International wireless communications & mobile computing conference (IWCMC),
    25–29 June 2018. IEEE, Limassol, Cyprus, pp 1465–1470 Bonomi F, Milito R, Zhu
    J, Addepalli S (2012) Fog computing and its role in the internet of things. In:
    Proceedings of the first edition of the MCC workshop on mobile cloud computing,
    August 17, 2012, Helsinki, Finland, pp 13–16 Boylan GB, Kharoshankaya L, Wusthoff
    CJ (2015) Seizures and hypothermia: importance of electroencephalographic monitoring
    and considerations for treatment. Semin Fetal Neonatal Med 20:103–108 Article   Google
    Scholar   De Paola A, Ferraro P, Re GL, Morana M, Ortolani M (2019) A fog-based
    hybrid intelligent system for energy saving in smart buildings. J Ambient Intell
    Human Comput 11(7):2793–2807 Article   Google Scholar   Elaskary RM, Saeed M,
    Ismail T, Mostafa H, Gabran S (2017) Hybrid DCT/quantized Huffman compression
    for electroencephalography data. In: 2017 Japan-Africa conference on electronics,
    communications and computers (JAC-ECC), 18–20 Dec 2017. IEEE, Alexandria, Egypt,
    pp 111–114 Chapter   Google Scholar   Feng G, Jiang G, Li Z, Wang X (2016) Prognostic
    value of electroencephalography (EEG) for brain injury after cardiopulmonary resuscitation.
    Neurol Sci 37(6):843–849 Article   Google Scholar   Gia TN, Jiang M, Rahmani AM,
    Westerlund T, Liljeberg P, Tenhunen H (2015) Fog computing in healthcare internet
    of things: a case study on ECG feature extraction. In: 2015 IEEE international
    conference on computer and information technology; ubiquitous computing and communications;
    dependable, autonomic and secure computing; pervasive intelligence and computing,
    26–28 Oct 2015. IEEE, Liverpool, UK, pp 356–363 Han J, Zhao Y, Sun H, Chen J,
    Ke A, Xu G, Zhang H, Zhou J, Wang C (2018) A fast, open EEG classification framework
    based on feature compression and channel ranking. Front Neurosci 12:217 Article   Google
    Scholar   Harb H, Idrees AK, Jaber A, Makhoul A, Zahwe O, Taam MA (2017) Wireless
    sensor networks: a big data source in internet of things. Int J Sens Wirel Commun
    Control 7(2):93–109 Google Scholar   Hejrati B, Fathi A, Abdali-Mohammadi F (2017)
    Efficient lossless multi-channel EEG compression based on channel clustering.
    Biomed Signal Process Control 31:295–300 Article   Google Scholar   Hosseinpour
    F, Plosila J, Tenhunen H (2016) An approach for smart management of big data in
    the fog computing context. In: 2016 IEEE international conference on cloud computing
    technology and science (CloudCom), 12–15 Dec 2016. IEEE, Luxembourg, Luxembourg,
    pp 468–471 Idrees AK, Witwit AJH (2020) Energy-efficient load-balanced RPL routing
    protocol for internet of things (IoTs) networks. Int J Internet Technol Secur
    Trans. https://doi.org/10.1504/IJITST.2020.10030144 Article   Google Scholar   Idrees
    AK, Harb H, Jaber A, Zahwe O, Abou Taam M (2017) Adaptive distributed energy-saving
    data gathering technique for wireless sensor networks. In: 2017 IEEE 13th international
    conference on wireless and mobile computing, networking and communications (WiMob),
    9–11 Oct 2017. IEEE, Rome, Italy, pp 55–62 Idrees AK, Al-Yaseen WL, Abou Taam
    M, Zahwe O (2018) Distributed data aggregation based modified k-means technique
    for energy conservation in periodic wireless sensor networks. In: 2018 IEEE Middle
    East and North Africa communications conference (MENACOMM), 18-20 April 2018.
    IEEE, Jounieh, Lebanon, pp 1–6 Idrees AK, Al-Qurabat AKM, Abou Jaoude C, Al-Yaseen
    WL (2019) Integrated divide and conquer with enhanced k-means technique for energy-saving
    data aggregation in wireless sensor networks. In: 2019 15th International wireless
    communications & mobile computing conference (IWCMC), 24-28 June 2019. IEEE, Tangier,
    Morocco, pp 973–978 Idrees AK, Alhussaini R, Salman MA (2020) Energy-efficient
    two-layer data transmission reduction protocol in periodic sensor networks of
    IoTs. Personal Ubiquitous Comput. https://doi.org/10.1007/s00779-020-01384-5 Article   Google
    Scholar   Jain K, Kumar A (2020) An energy-efficient prediction model for data
    aggregation in sensor network. J Ambient Intell Human Comput 11:5205–5216 Article   Google
    Scholar   La QD, Ngo MV, Dinh TQ, Quek TQ, Shin H (2019) Enabling intelligence
    in fog computing to achieve energy and latency reduction. Digit Commun Netw 5(1):3–9
    Article   Google Scholar   Mehdipour F, Javadi B, Mahanti A (2016) Fog-engine:
    towards big data analytics in the fog. In: 2016 IEEE 14th international conference
    on dependable, autonomic and secure computing, 14th international conference on
    pervasive intelligence and computing, 2nd international conference on big data
    intelligence and computing and cyber science and technology congress (DASC/PiCom/DataCom/CyberSciTech),
    8-12 Aug. 2016. IEEE, Auckland, New Zealand, pp 640–646 Mouradian C, Naboulsi
    D, Yangui S, Glitho RH, Morrow MJ, Polakos PA (2017) A comprehensive survey on
    fog computing: state-of-the-art and research challenges. IEEE Commun Surv Tutor
    20(1):416–464 Article   Google Scholar   Prieto J, Amira A, Bajo J, Mazuelas S,
    De la Prieta F (2018) IoT approaches for distributed computing. Wirel Commun Mob
    Comput 2018:1–2 Article   Google Scholar   Rajasekar P, Pushpalatha M (2020) Huffman
    quantization approach for optimized eeg signal compression with transformation
    technique. Soft Comput 24:14545–14559 Article   Google Scholar   Reddy V, Gayathri
    P (2020) Energy efficient data transmission in WSN thru compressive slender penetrative
    etiquette. J Ambient Intell Human Comput 11:4681–4693 Article   Google Scholar   Robinson
    Raju MM, Moh TS (2019) Compression of wearable body sensor network data. In: Smart
    data: state-of-the-art perspectives in computing and applications, Smart Data,
    1st edn. Chapman and Hall/CRC Rocha Filho GP, Meneguette RI, Maia G, Pessin G,
    Gonçalves VP, Weigang L, Ueyama J, Villas LA (2020) A fog-enabled smart home solution
    for decision-making using smart objects. Future Gener Comput Syst 103:18–27 Article   Google
    Scholar   Sahu M, Sharma Y, Sharma D, Bajpai S (2018) Feature compression using
    PCA on motor imagery classifications. In: Proceedings of 3rd international conference
    on internet of things and connected technologies (ICIoTCT), March 26–27, 2018.
    Malaviya National Institute of Technology, Jaipur, India, pp 26–27 Sarasa G, Granados
    A, Rodriguez FB (2019) Algorithmic clustering based on string compression to extract
    p300 structure in EEG signals. Comput Methods Programs Biomed 176:225–235 Article   Google
    Scholar   Srinivasan K, Reddy MR (2010) Efficient preprocessing technique for
    real-time lossless EEG compression. Electron Lett 46(1):26–27 Article   Google
    Scholar   Srinivasan K, Dauwels J, Reddy MR (2011) A two-dimensional approach
    for lossless EEG compression. Biomed Signal Process Control 6(4):387–394 Article   Google
    Scholar   Swaroop KN, Chandu K, Gorrepotu R, Deb S (2019) A health monitoring
    system for vital signs using IoT. Internet Things 5:116–129 Article   Google Scholar   Xu
    G, Han J, Zou Y, Zeng X (2015) A 1.5-d multi-channel EEG compression algorithm
    based on NLSPIHT. IEEE Signal Process Lett 22(8):1118–1122 Article   Google Scholar   Yim
    O, Ramdeen KT (2015) Hierarchical cluster analysis: comparison of three linkage
    measures and application to psychological data. Quant Methods Psychol 11(1):8–21
    Article   Google Scholar   Zhou S, Xu Z, Liu F (2016) Method for determining the
    optimal number of clusters based on agglomerative hierarchical clustering. IEEE
    Trans Neural Netw Learn Syst 28(12):3007–3017 Article   MathSciNet   Google Scholar   Download
    references Author information Authors and Affiliations Department of Computer
    Science, University of Babylon, Babylon, Iraq Sara Kadhum Idrees & Ali Kadhum
    Idrees Corresponding author Correspondence to Ali Kadhum Idrees. Additional information
    Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Reprints and permissions About this article Cite this article Idrees, S.K., Idrees,
    A.K. New fog computing enabled lossless EEG data compression scheme in IoT networks.
    J Ambient Intell Human Comput 13, 3257–3270 (2022). https://doi.org/10.1007/s12652-021-03161-5
    Download citation Received 27 July 2020 Accepted 13 March 2021 Published 22 March
    2021 Issue Date June 2022 DOI https://doi.org/10.1007/s12652-021-03161-5 Share
    this article Anyone you share the following link with will be able to read this
    content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords IoT Fog computing Sensor EEG data compression Hierarchical
    clustering Huffman encoding Use our pre-submission checklist Avoid common mistakes
    on your manuscript. Sections Figures References Abstract Introduction Literature
    review Scientific background The EEG lossless compression approach Simulation
    results and analysis Conclusion and perspectives References Author information
    Additional information Rights and permissions About this article Advertisement
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Journal of Ambient Intelligence and Humanized Computing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: New fog computing enabled lossless EEG data compression scheme in IoT networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Dubey K.
  - Sharma S.C.
  - Kumar M.
  citation_count: '28'
  description: Applications of the Internet of Things (IoT) are used in several areas
    to create a smart environment such as healthcare, smart agriculture, smart cities,
    transportation, and water management, etc. Due to the high pace of IoT technology
    adoption, Big Data generation is increasing excessively, requiring an efficient
    platform like cloud computing to process a large amount of data. On the other
    hand, time/delay-sensitive and real-time applications cannot be processed in the
    cloud due to high latency and energy consumption. Hence, a new emerging computing
    model named fog has emerged to address the mentioned issues and provide a complementary
    solution. However, Fog nodes provide limited cloud services in minimum delay and
    energy at the local node, but they cannot process the highly computation-oriented
    IoT applications. Furthermore, an adaptive cloud-fog integrated framework is proposed
    to process entire IoT applications and significantly improve the latency, computation
    cost, load balancing, and energy consumption by accommodating the resources in
    the form of virtual machine instances. This article exploited the features of
    two metaheuristic-based techniques Cuckoo Search Optimization (CSO) and Partial
    Swarm Optimization (PSO). We have developed a secure framework to solve the allocation
    of the IoT services in the cloud-fog environment while minimizing the mentioned
    influential parameters. The performance of the proposed framework is rigorously
    evaluated at synthetic datasets and heterogeneity of resources in fog as well
    as cloud simulation environment. The simulation results proved that the proposed
    hybrid metaheuristic algorithm outperforms other baseline policies and improves
    the various influential parameters.
  doi: 10.1007/s10723-021-09591-x
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Journal of Grid Computing
    Article A Secure IoT Applications Allocation Framework for Integrated Fog-Cloud
    Environment Published: 15 February 2022 Volume 20, article number 5, (2022) Cite
    this article Download PDF Access provided by University of Nebraska-Lincoln Journal
    of Grid Computing Aims and scope Submit manuscript Kalka Dubey , S. C. Sharma
    & Mohit Kumar  322 Accesses 23 Citations 1 Altmetric Explore all metrics Abstract
    Applications of the Internet of Things (IoT) are used in several areas to create
    a smart environment such as healthcare, smart agriculture, smart cities, transportation,
    and water management, etc. Due to the high pace of IoT technology adoption, Big
    Data generation is increasing excessively, requiring an efficient platform like
    cloud computing to process a large amount of data. On the other hand, time/delay-sensitive
    and real-time applications cannot be processed in the cloud due to high latency
    and energy consumption. Hence, a new emerging computing model named fog has emerged
    to address the mentioned issues and provide a complementary solution. However,
    Fog nodes provide limited cloud services in minimum delay and energy at the local
    node, but they cannot process the highly computation-oriented IoT applications.
    Furthermore, an adaptive cloud-fog integrated framework is proposed to process
    entire IoT applications and significantly improve the latency, computation cost,
    load balancing, and energy consumption by accommodating the resources in the form
    of virtual machine instances. This article exploited the features of two metaheuristic-based
    techniques Cuckoo Search Optimization (CSO) and Partial Swarm Optimization (PSO).
    We have developed a secure framework to solve the allocation of the IoT services
    in the cloud-fog environment while minimizing the mentioned influential parameters.
    The performance of the proposed framework is rigorously evaluated at synthetic
    datasets and heterogeneity of resources in fog as well as cloud simulation environment.
    The simulation results proved that the proposed hybrid metaheuristic algorithm
    outperforms other baseline policies and improves the various influential parameters.
    Article PDF Similar content being viewed by others An Autonomous Evolutionary
    Approach to Planning the IoT Services Placement in the Cloud-Fog-IoT Ecosystem
    Article 14 September 2022 Solving the Multi-Objective Problem of IoT Service Placement
    in Fog Computing Using Cuckoo Search Algorithm Article 22 January 2022 Resource
    Provisioning in Fog-Based IoT Chapter © 2022 Data Availability Data sharing not
    applicable to this article as no datasets were generated or analyzed during the
    current study. References Mansouri, N., Zade, B.M.H., Javidi, M.M.: Hybrid task
    scheduling strategy for cloud computing by modified particle swarm optimization
    and fuzzy theory. Comput. Ind. Eng. 130, 597–633 (2019) Article   Google Scholar   Bansal,
    M., Malik, S.K.: A multi-faceted optimization scheduling framework based on the
    particle swarm optimization algorithm in cloud computing. Sustain. Comput. Inform.
    Syst. 28, 100429 (2020) Google Scholar   Souza, V.B., Masip-Bruin, X., Marín-Tordera,
    E., Ramírez, W., Sanchez, S.: \"Towards distributed service allocation in fog-to-cloud
    (f2c) scenarios.\" In: 2016 IEEE global communications conference (GLOBECOM),
    pp. 1–6. IEEE, (2016) Li, W., Santos, I., Delicato, F.C., Pires, P.F., Pirmez,
    L., Wei, W., Song, H., Zomaya, A., Khan, S.: System modelling and performance
    evaluation of a three-tier cloud of things. Futur. Gener. Comput. Syst. 70, 104–125
    (2017) Article   Google Scholar   Maddikunta, P.K.R., Gadekallu, T.R., Kaluri,
    R., Srivastava, G., Parizi, R.M., Khan, M.S.: Green communication in IoT networks
    using a hybrid optimization algorithm. Comput. Commun. 159, 97–107 (2020) Article   Google
    Scholar   Ahmed, U., Lin, J.C.-W., Srivastava, G., Aleem, M.: A load balance multi-scheduling
    model for OpenCL kernel tasks in an integrated cluster. Soft. Comput. 25(1), 407–420
    (2021) Article   Google Scholar   Khalid, M., Yousaf, M.M., Iftikhar, Y., Fatima,
    N.: \"Establishing the state of the art knowledge domain of cloud computing.\"
    In: Advanced Computer and Communication Engineering Technology, pp. 1001–1014.
    Springer, Cham, (2016) Mahmud, R., Srirama, S.N., Ramamohanarao, K., Buyya, R.:
    Profit-aware application placement for integrated fog–cloud computing environments.
    J. Parallel Distrib. Comput. 135, 177–190 (2020) Article   Google Scholar   Azimi,
    I., Anzanpour, A., Rahmani, A.M., Liljeberg, P., Salakoski, T.: \"Medical warning
    system based on Internet of Things using fog computing.\" In: 2016 International
    Workshop on Big Data and Information Security (IWBIS), pp. 19–24. IEEE, (2016)
    Seth, B., Dalal, S., Jaglan, V., Le, D.-N., Mohan, S., Srivastava, G.: Integrating
    encryption techniques for secure data storage in the cloud. Trans. Emerg. Telecommun.
    Technol. e4108 (2020) Vilela, P.H., Rodrigues, J.J.P.C., Solic, P., Saleem, K.,
    Furtado, V.: Performance evaluation of a fog-assisted IoT solution for e-health
    applications. Futur. Gener. Comput. Syst. 97, 379–386 (2019) Article   Google
    Scholar   Thirumalai, C., Mohan, S., Srivastava, G.: An efficient public key secure
    scheme for cloud and IoT security. Comput. Commun. 150, 634–643 (2020) Article   Google
    Scholar   Adhikari, M., Gianey, H.: Energy efficient offloading strategy in fog-cloud
    environment for IoT applications. Internet Things. 6, 100053 (2019) Article   Google
    Scholar   Aburukba, R.O., AliKarrar, M., Landolsi, T., El-Fakih, K.: Scheduling
    internet of things requests to minimize latency in hybrid fog–cloud computing.
    Futur. Gener. Comput. Syst. 111, 539–551 (2020) Article   Google Scholar   Yadav,
    V., Natesha, B.V., Guddeti, R.M.R.. \"GA-PSO: Service Allocation in Fog Computing
    Environment Using Hybrid Bio-Inspired Algorithm.\" In: TENCON 2019–2019 IEEE Region
    10 Conference (TENCON), pp. 1280–1285. IEEE (2019) Alli, A.A., Alam, M.M.: SecOFF-FCIoT:
    Machine learning based secure offloading in Fog-Cloud of things for smart city
    applications. Internet Things. 7, 100070 (2019) Article   Google Scholar   M.
    Abdelmoneem et al., \"A Cloud-Fog Based Architecture for IoT Applications Dedicated
    to Healthcare,\" In: IEEE International Conference on Communications (ICC), Pp.
    1–6 (2019) Yasmeen, A., Javaid, N., Rehman, O.U., Iftikhar, H., Malik, M.F., Muhammad,
    F.J. \"Efficient resource provisioning for smart buildings utilizing fog and cloud
    based environment.\" In: 2018 14th International Wireless Communications & Mobile
    Computing Conference (IWCMC), pp. 811-816. IEEE (2018) Naha, R., et al.: deadline-based
    dynamic resource allocation and provisioning algorithms in fog-cloud environment.
    Futur. Gener. Comput. Syst. 104, 131–141 (2020) Article   Google Scholar   Shah-Mansouri,
    H., Wong, V.W.S.: Hierarchical fog-cloud computing for IoT systems: A computation
    offloading game. IEEE Internet Things J. 5(4), 3246–3257 (2018) Article   Google
    Scholar   Siasi, N., Jasim, M., Aldalbahi, A., Ghani, N.: Delay-aware SFC provisioning
    in hybrid fog-cloud computing architectures. IEEE Access. 8, 167383–167396 (2020)
    Article   Google Scholar   Tang, Z., Srivastava, G., Liu, S.: Swarm intelligence
    and ant colony optimization in accounting model choices. J. Intell. Fuzzy Syst.
    38(3), 2415–2423 (2020) Article   Google Scholar   Deng, R., Lu, R., Lai, C.,
    Luan, T.H., Liang, H.: Optimal workload allocation in fog-cloud computing toward
    balanced delay and power consumption. IEEE Internet Things J. 3(6), 1171–1181
    (2016) Google Scholar   Chen, X., Zhou, Y., Yang, L., Lu, L.: Hybrid fog/cloud
    computing resource allocation: joint consideration of limited communication resources
    and user credibility. Comput. Commun. 169, 48–58 (2021) Article   Google Scholar   Fu,
    W., Liu, S., Srivastava, G.: Optimization of big data scheduling in social networks.
    Entropy. 21(9), 902 (2019) Article   MathSciNet   Google Scholar   Gad-Elrab,
    A.A.A., Noaman, A.Y.: A two-tier bipartite graph task allocation approach based
    on fuzzy clustering in cloud–fog environment. Futur. Gener. Comput. Syst. 103,
    79–90 (2020) Article   Google Scholar   Kennedy, J., Eberhart, R.: \"Particle
    swarm optimization,\" In: IEEE Proceedings of ICNN''95-International Conference
    on Neural Networks, vol. 4, pp. 1942–1948 (1995) Yang, X.-S., Deb, S.: Cuckoo
    search: recent advances and applications. Neural Comput. & Applic. 24(1), 169–174
    (2014) Article   Google Scholar   Bouyer, A., Hatamlou, A.: An efficient hybrid
    clustering method based on improved cuckoo optimization and modified particle
    swarm optimization algorithms. Appl. Soft Comput. 67, 172–182 (2018) Article   Google
    Scholar   Dash, J., Dam, B., Swain, R.: Optimal design of linear phase multi-band
    stop filters using improved cuckoo search particle swarm optimization. Appl. Soft
    Comput. 52, 435–445 (2017) Article   Google Scholar   Gupta, H., Vahid Dastjerdi,
    A., Ghosh, S.K., Buyya, R.: iFogSim: a toolkit formodeling and simulation of resource
    management techniques in the internet of things, edge and fog computing environments.
    Softw. Pract. Experience. 47(9), 1275–1296 (2017) Article   Google Scholar   Buyya,
    R., Ranjan, R., Calheiros, R.N.: \"Modeling and simulation of scalable Cloud computing
    environments and the CloudSim toolkit: Challenges and opportunities.\" In: 2009
    international conference on high performance computing & simulation, pp. 1–11.
    IEEE (2009) Rafique, H., Shah, M.A., Islam, S.U., Maqsood, T., Khan, S., Maple,
    C.: A novel bio-inspired hybrid algorithm (NBIHA) for efficient resource management
    in fog computing. IEEE Access. 7, 115760–115773 (2019) Article   Google Scholar   Mulani,
    K., Talukdar, P., Das, A., Alagirusamy, R.: Performance analysis and feasibility
    study of ant colony optimization, particle swarm optimization and cuckoo search
    algorithms for inverse heat transfer problems. Int. J. Heat Mass Transf. 89, 359–378
    (2015) Article   Google Scholar   Kumar, M., Sharma, S.C.. \"PSO-based novel resource
    scheduling technique to improve QoS parameters in cloud computing.\" Neural Comput.
    & Applic. 1–24 (2019) Download references Author information Authors and Affiliations
    Cloud Computing and Wireless Sensor Lab, Indian Institute of Technology Roorkee,
    Roorkee, India Kalka Dubey & S. C. Sharma Department of Information Technology,
    B R Ambedkar National Institute of Technology, Jalandhar, India Mohit Kumar Corresponding
    author Correspondence to Kalka Dubey. Additional information Publisher’s Note
    Springer Nature remains neutral with regard to jurisdictional claims in published
    maps and institutional affiliations. Rights and permissions Reprints and permissions
    About this article Cite this article Dubey, K., Sharma, S.C. & Kumar, M. A Secure
    IoT Applications Allocation Framework for Integrated Fog-Cloud Environment. J
    Grid Computing 20, 5 (2022). https://doi.org/10.1007/s10723-021-09591-x Download
    citation Received 08 June 2021 Accepted 29 September 2021 Published 15 February
    2022 DOI https://doi.org/10.1007/s10723-021-09591-x Share this article Anyone
    you share the following link with will be able to read this content: Get shareable
    link Provided by the Springer Nature SharedIt content-sharing initiative Keywords
    Cloud computing Fog computing Internet of things Particle swarm optimization Cuckoo
    search optimization Use our pre-submission checklist Avoid common mistakes on
    your manuscript. Associated Content Part of a collection: Math for SDG 7 - Affordable
    and Clean Energy Sections References Abstract Article PDF Data Availability References
    Author information Additional information Rights and permissions About this article
    Advertisement Discover content Journals A-Z Books A-Z Publish with us Publish
    your research Open access publishing Products and services Our products Librarians
    Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC
    Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy
    rights Accessibility statement Terms and conditions Privacy policy Help and support
    129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Journal of Grid Computing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Secure IoT Applications Allocation Framework for Integrated Fog-Cloud Environment
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Talaat F.M.
  citation_count: '36'
  description: 'Recently, many concepts in technology has been changed. According
    to the digital transformation trends, Internet of Things (IoT) represents an interested
    research issue. As the IoT grows, the data and the processes will need more space.
    The data in cases like healthcare, smart cities, autonomous vehicles, smart agriculture,
    etc. needs to be analyzed and processed in real-time. Cisco refers to the dependence
    of edge and cloud as “The Fog”. The data can be analyzed at the fog layer to maximize
    data utilization. This paper presents a new Effective Prediction and Resource
    Allocation Methodology (EPRAM) for Fog environment, which is suitable for Healthcare
    applications. Resource Allocation (RA) represents a hard mission as it involves
    a set of various resources and fog nodes to achieve the required computations
    for IoT systems. EPRAM tries to achieve effective resource management in Fog environment
    via real-time resource allocating as well as prediction algorithm. EPRAM is composed
    of three main modules, namely: (i) Data Preprocessing Module (DPM), (ii) Resource
    Allocation Module (RAM) and (ii) Effective Prediction Module (EPM). The EPM uses
    the PNN to predict a target field, using one or more predictors. In order to detect
    the probability of the heart attack, PNN is trained using the training dataset.
    Then PNN will be tested using the user’s sensing data coming from the IoT layer
    to predict the probability of heart attack and then take the most appropriate
    action accordingly. The main goal of the system is to achieve a low latency while
    improving the Quality of Service (QoS) metrics such as (the allocation cost, the
    response time, bandwidth efficiency and energy consumption). Unlike other RA techniques,
    EPRAM employs deep Reinforcement Learning (RL) algorithm in a new manner. It also
    uses the PNN for the prediction algorithm. It has achieved such acceptable performance
    due to using deep RL and PNN. Deep RL has shown impressive promises in resource
    allocation. PNN generates accurate predicted target and is much faster than multilayer
    perceptron networks. Comparing the EPRAM with the state-of-the-art algorithms,
    EPRAM achieved the minimum Makespan as compared to previous LB algorithms, while
    maximizing the Average Resource Utilization (ARU) and the Load Balancing Level
    (LBL). Accordingly, EPRAM is a suitable algorithm in the case of real-time systems
    in FC which leads to load balancing. ERAM is effective in monitoring and predicting
    the status of the patient accurately and quickly.'
  doi: 10.1007/s11042-022-12223-5
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Multimedia Tools and Applications
    Article Effective prediction and resource allocation method (EPRAM) in fog computing
    environment for smart healthcare system Open access Published: 02 February 2022
    Volume 81, pages 8235–8258, (2022) Cite this article Download PDF You have full
    access to this open access article Multimedia Tools and Applications Aims and
    scope Submit manuscript Fatma M. Talaat   3732 Accesses 31 Citations 1 Altmetric
    Explore all metrics Abstract Recently, many concepts in technology has been changed.
    According to the digital transformation trends, Internet of Things (IoT) represents
    an interested research issue. As the IoT grows, the data and the processes will
    need more space. The data in cases like healthcare, smart cities, autonomous vehicles,
    smart agriculture, etc. needs to be analyzed and processed in real-time. Cisco
    refers to the dependence of edge and cloud as “The Fog”. The data can be analyzed
    at the fog layer to maximize data utilization. This paper presents a new Effective
    Prediction and Resource Allocation Methodology (EPRAM) for Fog environment, which
    is suitable for Healthcare applications. Resource Allocation (RA) represents a
    hard mission as it involves a set of various resources and fog nodes to achieve
    the required computations for IoT systems. EPRAM tries to achieve effective resource
    management in Fog environment via real-time resource allocating as well as prediction
    algorithm. EPRAM is composed of three main modules, namely: (i) Data Preprocessing
    Module (DPM), (ii) Resource Allocation Module (RAM) and (ii) Effective Prediction
    Module (EPM). The EPM uses the PNN to predict a target field, using one or more
    predictors. In order to detect the probability of the heart attack, PNN is trained
    using the training dataset. Then PNN will be tested using the user’s sensing data
    coming from the IoT layer to predict the probability of heart attack and then
    take the most appropriate action accordingly. The main goal of the system is to
    achieve a low latency while improving the Quality of Service (QoS) metrics such
    as (the allocation cost, the response time, bandwidth efficiency and energy consumption).
    Unlike other RA techniques, EPRAM employs deep Reinforcement Learning (RL) algorithm
    in a new manner. It also uses the PNN for the prediction algorithm. It has achieved
    such acceptable performance due to using deep RL and PNN. Deep RL has shown impressive
    promises in resource allocation. PNN generates accurate predicted target and is
    much faster than multilayer perceptron networks. Comparing the EPRAM with the
    state-of-the-art algorithms, EPRAM achieved the minimum Makespan as compared to
    previous LB algorithms, while maximizing the Average Resource Utilization (ARU)
    and the Load Balancing Level (LBL). Accordingly, EPRAM is a suitable algorithm
    in the case of real-time systems in FC which leads to load balancing. ERAM is
    effective in monitoring and predicting the status of the patient accurately and
    quickly. Similar content being viewed by others Fog Networking for Machine Health
    Prognosis: A Deep Learning Perspective Chapter © 2017 Quality of service-based
    machine learning in fog computing networks for e-healthcare services with data
    storage system Article 23 August 2023 RETRACTED ARTICLE: Deep learning based energy
    efficient novel scheduling algorithms for body-fog-cloud in smart hospital Article
    19 August 2020 1 Introduction Depending on the phenomenal development of the digital
    technology in recent years, the Internet of Things (IoT) has a great impact in
    our lives [16]. IoT can be considered as a set of devices equipped with sensors,
    actuators, and processors that communicate with each other to serve a reliable
    objective. IoT innovates an integrated system that combines different systems
    to provide intelligent performances in each task. It has created a new growth
    of cell phones, home and other embedded applications that are all connected to
    the internet. Consequently, different IoT-enabled systems such as smart healthcare,
    smart city, smart home, smart factory, smart transport and smart agriculture are
    getting significant attention across the world. Cloud Computing (CC) is considered
    as the standard infrastructure, platform and services to develop IoT systems [11].
    However, Cloud datacenters locate at remote distance from IoT devices which leads
    to high latency. This issue adversely affects the response time for real time
    applications such as critical health monitoring systems, traffic monitoring, and
    emergency fire. In addition, IoT sources are geographically extended and can generate
    a large amount of data sent to Cloud for processing which lead to overloading.
    The edge computational resources can handle the previous mentioned challenges
    in IoT systems [21]. Fog Computing (FC) can be defined as edge computing that
    aims to deploy services at the edge network. The FC achieves the location-awareness
    and reduces the latency [2]. In FC, there are various devices such as Cisco IOx
    networking equipment, micro-datacenter, Nano-server, smart phone, personal computer
    and Cloudlets. The fog device is usually named as Fog Node (FN). These Fog Nodes
    create a generous distribution of services to process IoT-data near to the source.
    FC and CC paradigms most often work in an integrated manner as shown in the Fig.
    1 to meet Quality of Service (QoS) and resource requirements of wide standard
    IoT systems [2]. In FC, Resource Allocation (RA) represents a hard mission as
    it involves a set of various resources and fog nodes to achieve the required computations
    for IoT systems [38]. Many previous RA methods have been proposed such as Least
    Connection (LC), Round Robin (RR), Weighted Round Robin (WRR), and Adaptive Weighted
    Round Robin (AWRR). These algorithms will illustrated in details in section 2
    (the related work section). However, they have many disadvantages such as; (i)
    they do not take into account the heterogeneity of the computational resources,
    (ii) low performance due to process migration. (iii) High latency. (iv) The lack
    of unified standard for FC [1]. The integration between Fog, Cloud, and various
    IoT devices increases the difficulty of RA issue [22]. The real-world implementation
    of FC environment with IoT and Cloud datacenters is very expensive and the modification
    is tiresome issue so the solution is the empirical analysis using simulation.
    There are a certain number of simulators like Edgecloudsim [28], SimpleIoTSimulator
    [25] and iFogSim [12] for modelling FC environment. Fig. 1 Interactions among
    IoT-enabled systems, Fog and Cloud Computing Full size image The rest of this
    section introduces some concepts in the field of stratified sampling, resource
    management, Deep Learning (DL) algorithm, Deep Neural Network (DNN), Probabilistic
    Neural Networks (PNN), and Reinforcement Learning (RL). Figure 1 shows the relation
    between IoT, big dta, cloud, and fog. It also illustrates some examples of IoT
    applications. 1.1 Stratified sampling In stratified sampling, the data is first
    divided into subgroups (or strata) with same probability. For example, you can
    stratify by gender to ensure that men and women are sampled in equal proportions,
    or by region to ensure that each region within an urban population is represented.
    It is also possible to specify a different sample size for each stratum. For example,
    when you want to sample for a survey, you can give men a higher probability of
    being sampled than women when you think that the willingness to participate in
    the survey is lower for men than for women. It is used when we might reasonably
    expect the measurement of interest to vary between the different subgroups, and
    we want to ensure representation from all the subgroups. For example, in a study
    of stroke outcomes, we may stratify the population by gender, to ensure equal
    representation of men and women. The study sample is then obtained by taking equal
    sample sizes from each stratum. In stratified sampling, it may also be appropriate
    to choose non-equal sample sizes from each stratum. For example, in a study of
    the health outcomes of nursing staff in a county, if there are three hospitals
    each with different numbers of nursing staff (hospital A has 500 nurses, hospital
    B has 1000 and hospital C has 2000), then it would be appropriate to choose the
    sample numbers from each hospital proportionally (e.g. 10 from hospital A, 20
    from hospital B and 40 from hospital C). This ensures a more realistic and accurate
    estimation of the health outcomes of nurses across the county, whereas simple
    random sampling would over-represent nurses from hospitals A and B. The fact that
    the sample was stratified should be taken into account at the analysis stage.
    Stratified sampling improves the accuracy and representativeness of the results
    by reducing sampling bias. However, it requires knowledge of the appropriate characteristics
    of the sampling frame (the details of which are not always available), and it
    can be difficult to decide which characteristic(s) to stratify by. 1.2 Resource
    management The resource management is divided into; (i) resource assignment, and
    (ii) task placement [14, 34]. Resource assignment defines the number of incoming
    processes and determines the resource to be allocated to each process. For example,
    a Spark application selects the resource to be allocated based on the available
    memory and the data size. Task placement involves the determination of the location
    for each incoming task. For example, Delay Scheduling algorithm [41] in Hadoop
    assigns tasks based on data locality. 1.3 Deep learning (DL) Deep learning (DL)
    (also known as deep structured learning or hierarchical learning) is a branch
    of machine learning methods based on Artificial Neural Networks (ANN) [39]. DL
    is named deep as it uses the deep neural networks [4, 26]. It is applied in fields
    of object detection, classification, and speech recognition [6]. Unlike the traditional
    learning algorithms, the performance of DL algorithm increases with the increase
    of the amount of data as shown in Fig. 2. Fig. 2 Why deep learning Full size image
    1.4 Deep neural network (DNN) A Deep Neural Network (DNN) is an ANN with multiple
    layers between the input and output layers [29]. It is constructed with a set
    of connected layers which are: (i) Input Layer, (ii) Output Layer, and (iii) Hidden
    Layers (all layers in between). It finds the correct mathematical method to convert
    the input into the output. The word \"deep\" means the network joins the neurons
    in more than two layers (hidden layers) [3] as shown in Fig. 3. Fig. 3 DNN architecture
    Full size image In DNN, each layer represents a deeper level of knowledge, i.e.,
    the hierarchy of knowledge. At first, the DNN creates a map of virtual neurons
    and assigns random numerical values, or \"weights\", to connections between them.
    The weights and inputs are multiplied and return an output between 0 and 1. If
    the network did not accurately recognize a particular pattern, an algorithm would
    adjust the weights [15]. That way the algorithm can make certain parameters more
    influential, until it determines the correct mathematical manipulation to fully
    process the data. 1.5 Probabilistic neural networks (PNN) Probabilistic Neural
    Networks (PNN) is organized into a multilayered feed forward network containing
    four layers [17, 35]: (i) Input layer: contains nodes with a set of measurements.
    (ii) Pattern layer: contains one neuron for each case in the training data set.
    It computes the Euclidean distance of the test case from the neuron’s center point
    and then applies the Radial Basis Function (RBF) kernel function using the sigma
    values. (iii) Summation layer: performs a sum operation of the outputs from the
    second layer for each class. (iv) Output layer: takes all the outputs of the summation
    nodes and outputs the max, e.g. the label node that had the highest score. PNN
    has several advantages such as [17]: (i) PNNs are much faster than multilayer
    perceptron networks. (ii) PNN networks are insensitive to outliers. (iii) PNNs
    can be more accurate than multilayer perceptron networks. (iv) PNN networks generate
    accurate predicted target probability scores. (v) Guaranteed to converge to an
    optimal classifier as the size of the representative training set increases. In
    general, it is obvious that PNNs have high speed of learning and training. The
    main advantage of a PNN is its ability to output probabilities in multi-classification.
    However, PNN has disadvantages such as it requires more memory space to store
    the model. It requires a representative training set. The originality of this
    paper is to introduce a new Effective Resource Allocation Methodology (ERAM) for
    Fog environment, which is suitable for Healthcare applications. ERAM tries to
    achieve effective resource management in Fog environment via real-time resource
    allocating as well as prediction algorithm. ERAM is composed of three main modules,
    namely: (i) Data Preprocessing Module (DPM), (ii) Resource Allocation Module (RAM)
    and (ii) Effective Prediction Module (EPM). The DPM is responsible for sampling,
    partitioning, and balancing data to be in the appropriate form for analyzing and
    processing. The RAM learns to select the best FN to execute the incoming request.
    The RAM uses Reinforcement Learning (RL) algorithm to achieve a high LB for fog
    environment. The EPM uses the PNN to predict a target field, using one or more
    predictors. In order to detect the probability of the heart attack, PNN is trained
    using the training dataset. Then PNN will be tested using the user''s sensing
    data coming from the IoT layer to predict the probability of heart attack and
    then take the most appropriate action accordingly. The proposed IoT-Fog system
    consists of three layers, namely: (i) IoT Layer, (ii) Fog Layer, and (iii) Cloud
    Layer. The mission of the IoT layer is to monitor the patient symptoms. The fog
    layer is considered with handling the incoming requests and forwards them to the
    suitable server. The cloud layer is responsible for managing the transfer of data
    to and from the fog layer. The user data is sent to the most appropriate resource
    to be allocated and processed. The allocating resource is managed by a specific
    healthcare organization. The main goal of the system is to achieve a low latency
    while improving the Quality of Service (QoS) metrics such as the allocation cost,
    the response time, bandwidth efficiency and energy consumption. Unlike other RA
    techniques, EPRAM employs deep RL algorithm in a new manner. It also uses the
    PNN for the prediction algorithm. It has achieved such acceptable performance
    due to using deep RL and PNN. Deep RL has shown impressive promises in resource
    allocation. PNN generates accurate predicted target and is much faster than multilayer
    perceptron networks. Accordingly, EPRAM is a suitable algorithm in the case of
    real-time systems in FC which leads to load balancing. The rest of paper is organized
    as follows: Section 2 introduces some of the recent previous efforts in the field
    of RA techniques generally. Then, it introduces the recent previous efforts in
    the area of RA algorithms for in CC and FC. Section 3 introduces a proposed Effective
    Prediction and Resource Allocation Methodology (EPRAM) for Fog environment using
    real-time resource allocating as well as PNN with more details about each contribution.
    Section 4 introduces the evaluation results and discussion. Our conclusion is
    discussed in Section 5. 2 Related work This section introduces some of the recent
    previous efforts in the field of RA techniques generally and in the area of RA
    algorithms for in CC and FC. In the last years, many researchers are working on
    different issues to solve the FC and IoT challenges. Fatma M. Talaat et al. [30]
    proposed a dynamic RA method based on Reinforcement learning and genetic algorithm.
    It observes the traffic in the network continuously, collects the information
    about each node, manages the incoming tasks, and distributes them between the
    available nodes equally using DRA method. It is efficient in real-time systems
    in FC environment such as in the case of smart healthcare system. Dubey Sh et
    al. [7] used Round Robin (RR) to list the available nodes and assign the incoming
    processes equally to each node in order. It is simple and easy to understand and
    implement. However, if the servers have different processing capacities, one of
    them can become overloaded and crashed. Gupta S et al. [13] used Weighted Round
    Robin (WRR) for resource allocation process. It is similar to the RR in the cyclical
    assigning manner but it differs in that the node with the higher weight will be
    given the highest number of requests. In WRR, each server is allocated with a
    weight based on its capacity. Singh G, Kaur K [27] used Least Connection (LC)
    to achieve the load balancing. It chooses the node with the least number of active
    transactions and modifies its data periodically depending number of connections.
    Q. Fan et al. [8] proposed a model to minimize the communication and processing
    time by assigning the incoming process to the suitable source. Authors in [8]
    use the best Signal-to-Noise Ratio (SNR) and distributed alpha algorithm to measure
    the load on each node to achieve the load balancing. It reconstructs set of series
    of events and compares the SNR. However, the disadvantage of this method is that
    it focuses on the delay of wireless communications. Wei Y et al. [36] use the
    Reinforcement Learning algorithm to find the best policy for scheduling in nonhomogeneous
    networks to maximize the energy efficiency. Authors in [37] used Multi-agent Reinforcement
    Learning to increase the network resource utilization. Ashkan Yousefpour et al.
    [40] proposed a policy to minimize the latency of the IoT services. They aimed
    to assign each task according to the response time. The proposed policy in [40]
    divides the tasks to light and heavy. If the response time on a specific fog node
    is less than the threshold, the task will be assigned to this node. Otherwise,
    the task will be forwarded to one of the neighboring nodes or to the cloud. The
    limitations of this method are: (i) It explores various scenarios in a distributed
    manner. (ii) It is not reasonable to decide whether to assign task to fog or to
    cloud depending on the processing time. The RA problem in CC has gained attention
    for several years. However, there are little studies related to this issue in
    FC. Table 1 summarizes some of these related works highlighting their strength
    and weakness. Table 1 Related RA methods for Fog Computing and Cloud Computing
    Full size table Many researches about PM2.5 prediction are presented in many research
    papers such as in [10, 19, 20]. Convolutional neural networks are frequently hampered
    by high computational and storage needs. For several structural model pruning
    procedures and datasets (CIFAR-10 and ImageNet), the authors in [5] examine the
    accuracy-efficiency trade-off (TPUs). 2.1 Problem statement Although, there are
    many RA algorithms they have many limitations such as i) most of them depend on
    the response time to decide whether to assign task to fog or to cloud which is
    not plausible. ii) They don''t consider the task''s requirements such as the priority
    of the task and the number of tasks. (iii) Calculating the capacity is difficult
    in some cases such as in case with varying packet size. (iv) They may cause network
    bottleneck. 2.2 Plan of solution The proposed IoT-Fog system consists of three
    layers, namely: (i) IoT Layer, (ii) Fog Layer, and (iii) Cloud Layer. The mission
    of the IoT layer is to monitor the patient symptoms. The fog layer is considered
    with handling the incoming requests and forwards them to the suitable server.
    The cloud layer is responsible for managing the transfer of data to and from the
    fog layer. The user data is sent to the most appropriate resource to be allocated
    and processed. The allocating resource is managed by a specific healthcare organization.
    2.3 The proposed effective prediction and resource allocation methodology (EPRAM)
    One of the most significant applications related to the aims of IoT is an efficient
    healthcare system. In healthcare systems, many factors should be taken into consideration
    such as time, privacy of data, and accuracy. The healthcare system should be reliable
    and available at any time. Accordingly, this paper is concerned with designing
    an IoT-Fog based Healthcare System as shown in Fig. 4. The proposed IoT-Fog system
    consists of three layers which are: (i) IoT Layer, (ii) Fog Layer, and (iii) Cloud
    Layer. The IoT layer combines the IoT devices (pulse oximeter, ECG monitor, etc.)
    to observe the user status. The fog layer is considered with handling the incoming
    requests and forwards them to the suitable Fog Node (FN). The fog layer is divided
    into set of fog regions. Each fog region has a Master Node (MN) which manages
    and controls the whole nodes'' data. Each FN''s managing software sends its characteristics
    information to the MN. The characteristics of the FN can be found by checking
    the values in each Node Characteristics Table (NCT) which is located at the MS.
    The main characteristics for each FN as shown in Table 2 are: (i) The cache size
    (capacity), (ii) The RAM size (RAM), and (iii) the usage of the CPU (CPU_Usage).
    A new characteristic (Adaptive Weight (AW)) will be calculated according to the
    mentioned parameters by (1) as: Fig. 4 Fog environment for IoT-enabled healthcare
    case study Full size image Table 2 Server characteristics table (SCT) Full size
    table $$AW=\\alpha * \\left(\\ \\frac{\\left( Capacity\\ast RAM\\right)}{CPU_{Usage}}\\
    \\right)$$ (1) The cloud layer is responsible for managing the transfer of data
    to and from the fog layer. 2.4 A case study in smart healthcare In Healthcare
    systems, the IoT devices are usually connected with smart phones. Examples of
    these devices are; pulse oximeter, ECG monitor, smart watches, etc. They send
    the health status of the patient via application module. The smart phones act
    as gateway node to preprocess the IoT sensed data. If the available resources
    at the gateway node meets the requirements, the process will be executed at the
    application. Otherwise it will be executed at FN. The application gateway node
    selects the appropriate node to execute the process and initiate actuators according
    to the result. The smart healthcare systems are useful in many cases such as:
    (i) Reduce the incidence of a heart attack among those with a cardiac disease,
    (ii) Early detection of symptoms of a particular virus, (iii). Detecting Parkinson’s
    disease. The IoT based healthcare system architecture can be illustrated as 3-tier
    architecture as shown in the Fig. 4. Layer 1 combines the IoT devices (pulse oximeter,
    ECG monitor, etc.), layer 2 contains the fog nodes combined as set of regions,
    and layer 3 is the cloud datacenters. 2.5 The proposed EPRAM This subsection introduces
    a new Effective Prediction and Resource Allocation Methodology (EPRAM) for Fog
    environment, which is suitable for Healthcare applications. ERAM tries to achieve
    effective resource management in Fog environment via real-time resource allocating
    as well as prediction algorithm. The patient data is sent to the most appropriate
    server to handle it. This server is administrated by a specific healthcare organization.
    The main goal of the system is to achieve a low latency. The fog layer consists
    of three main modules as shown in the Fig. 5, namely: (i) Data Preprocessing Module
    (DPM), (ii) Resource Allocation Module (RAM) and (ii) Effective Prediction Module
    (EPM). Fig. 5 Effective Resource Allocation Methodology (ERAM) Full size image
    2.5.1 Data preprocessing module (DPM) The DPM is responsible for sampling, partitioning,
    and balancing data to be in the appropriate form for analyzing and processing.
    The DPM is divided into three sub modules, namely: (i) Sampling Module (SM), (ii)
    Partitioning Module (PM) and (ii) Balancing Module (BM). Sampling module (SM)
    In SM, the incoming data is divided into subgroups (or strata) which share a similar
    characteristic using stratified sampling algorithm. In stratified sampling, it
    may also be appropriate to choose non-equal sample sizes from each stratum. In
    SM, data is first sampled according to the location it comes from. Then it will
    be sampled according to its type. Data can be classified as the following: (i)
    Not or Low Critical: Examples are the logging of training activity, weight or
    body posture. Such data can be examined by doctor when needed. If the system fails
    to log some data points, the patient is still safe. (ii) Critical Data: data in
    critical conditions. Examples are cardiac monitoring via ECG with automatic alarms
    once critical situations are detected [9]. The criticality requires fast response
    time, i.e., real-time response. Context Management merely observes patients, devices,
    or employees to figure out their context and help by improving planning or taking
    proper decisions [32]. However, data in this case is not urgent but it gains some
    degree of criticality due to real-time response need. (iii) Very Critical Data
    Control: The detected events are not only used to alert personnel, but also to
    control devices. This kind of data needs a feedback and real-time response. An
    example is a device that regulates the amount of oxygen provided to a patient
    [23]. Partitioning module (PM) PM splits the data into three samples. The model
    is built on the training set, and the model is applied to the testing set to establish
    its credibility. However, the testing set can then be used to further refine the
    model. If the performance of the model needs improvement, the parameters can be
    changed, and the model is then rebuilt using the training sample, after which
    the performance on the testing set is examined. The validation sample, which unlike
    the training and testing sets played no role in developing the final model, is
    then used to assess the model the model’s performance against unseen data. Balancing
    module (BM) The BM achieves the balancing of the data by discarding (reducing)
    records in the higher-frequency categories. The reason is that when you boost
    record you will run the risk of duplicating anomalies in the data. 2.5.2 Resource
    allocation module (RAM) The proposed RAM is based on Reinforcement Learning (RL)
    algorithm to achieve a high LB for fog environment. In RL, an agent learns to
    interact with environment to achieve a reward. RL is an Artificial Intelligence
    technique in which an agent takes an action in an environment to gain rewards.
    The agent receives the current environment state and takes an action accordingly.
    The taken action leads to a change in the environment state and then the agent
    will be informed with the change through a reward. The RAM learns to select the
    best FN to execute the incoming request. The overall steps of the Resource Allocation
    Module (RAM) are shown in Algorithm 1. Algorithm 1. (RAM) uses RL to achieve the
    lowest latency (the target of RL or the reward is defined as the lowest latency).
    The reward of RL is defined by the user as we want the agent performs. We here
    define the reward as the low latency. It achieved that by training and interacting
    with the environment [24]+. 2.5.3 Effective prediction module (EPM) The EPM uses
    the PNN to predict a target field, using one or more predictors. In order to detect
    the probability of the heart attack, PNN is trained using the training dataset.
    Then PNN will be tested using the user''s sensing data coming from the IoT layer
    to predict the probability of heart attack and then take the most appropriate
    action accordingly. The architecture of PNN is shown in Figs. 6 and 7. The steps
    of PNN based Prediction Algorithm (PPA) are shown in Algorithm 2. Fig. 6 PNN Layers
    Full size image Fig. 7 PNN Architecture Full size image Illustrative example Assume
    there are ten cases. For each case, we consider the values from three sensors
    Sens.1_P, Sens.2_P, and Sens.3_P as shown in Table 3. Table 3 Servers’ capabilities
    Full size table When new incoming sensing data arrives with values [2, 21, 22].
    Count_1 is the number of examples belongs to Probability 1. Count_2 is the number
    of examples belongs to Probability 2. Count_3 is the number of examples belongs
    to Probability 3 (Tables 4, 5, 6, 7). Table 4 Input Data Set for PNN Full size
    table Table 5 Test example Full size table Table 6 Training Calculations 1 Full
    size table Table 7 Training Calculations 2 Full size table As P2 has the largest
    value, incoming sensing data arrives with values [2, 21, 22] will be detected
    as Probability 2. 3 Implementation and evaluation FC runs applications in fog
    devices between cloud and end devices. This paradigm is used benefits of cloud
    and edge for distributed data and low latency. IoT sensors which are located in
    the lower layer of the architecture, are responsible for receiving and transmitting
    data through the gateways to the higher layer. The actuators in the lowest level,
    are also responsible for system controls. In fact, FC provides filtering and analysis
    of data by edge devices. Each application of fog network has a different topology.
    3.1 Simulation tool iFogSim [33] is a toolkit used for simulation and modeling
    FC environments. It is used for evaluation of scheduling algorithms and resource
    management techniques in FC Environments. It can be used in different scenarios
    and it focuses on the effect on operational cost, power consumption, latency,
    and network congestion. It simulates cloud data centers, network links, and edge
    devices to measure performance metrics. iFogSim is available for download from:
    https://github.com/harshitgupta1337/fogsim. NetBeans IDE 8.0.2 can be downloaded
    from: https://netbeans.org/downloads/8.0.2/. Or Eclipse Modeling Tools from: http://www.eclipse.org/downloads/packages/release/Mars/2.
    The iFogsim simulator has a Graphical User Interface (GUI) module for designing
    custom and ready topologies [33]. Sensors, actuators, fog, cloud, and link elements
    can be added to the topology via this GUI. We create a case study with the new
    topology for healthcare environment and use a case study in iFogsim as shown in
    Fig. 8. These topologies can be read and executed by other modules in the simulator.
    Fig. 8 Simulation of Fog Topology Full size image The Resource Allocation Module
    (RAM) and the Effective Prediction Module (EPM) are implemented using python.
    3.2 Mobile HEALTH dataset The Mobile HEALTH (MHEALTH) (https://archive.ics.uci.edu/ml/datasets/MHEALTH+Dataset)
    dataset contains vital signs and body motion recordings for 10 volunteers during
    several physical activities. Sensors placed on the subject''s chest, right wrist
    and left ankle are used to measure the motion experienced by diverse body parts,
    namely, acceleration, rate of turn and magnetic field orientation. The main characteristics
    of MHEALTH Dataset are shown in Table 8. Table 8 MHEALTH dataset characteristics
    Full size table In this paper, the MHEALTH is used to detect the possibility of
    heart attack. Hence, a new extra column (column 24) is added to have the values
    of the probability of attack. Column 24 has three main values which are; (i) 1
    for strong probability, (ii) 2 for average probability, (iii) 3 for low probability.
    In order to simplify the classification, only 560 instances are selected from
    the MHEALTH Dataset for training and 240 instances are selected for testing. Number
    of training dataset instances for each probability is shown in Table 9. A sample
    of MHEALTH Dataset is shown in Table 10. Table 9 Used MHEALTH dataset Full size
    table Table 10 A sample of MHEALTH Dataset Full size table 3.3 Performance metrics
    The performance of LBOS vs. previous mentioned LB algorithms can be compared by
    considering the following metrics shown in Table 11. Table 11 the Performance
    metrics to evaluate the proposed EPRAM scheme Full size table TAT: is the time
    difference between completion time and arrival time as calculated in (2). WT:
    is the time difference between turnaround time and burst time as calculated in
    (3). $$\\kern0.75em TAT= CT- AT$$ (2) $$WT= TAT- BT$$ (3) Where, AT: is the Arrival
    Time which is the point of time in milli seconds at which a process arrives at
    the ready queue to begin the execution. BT: is the Burst Time which refers to
    the time required in milli seconds by a process for its execution. ARU can be
    calculated as in (4) and LBL can be calculated as in (5). $$ARU=\\frac{\\left(
    BS+ OL\\right)\\ }{FSs} * 100\\%$$ (4) $$LBL=\\frac{BS\\ }{FSs} * 100\\%$$ (5)
    Where, BS: is the number of Balanced FNs, OL: is the number of Overloaded FNs,
    and FNs: is the number of all available FSs. 3.4 EPRAM implementation Comparing
    the performance of the proposed EPRAM algorithm and the previous LB algorithms
    (LC, RR, WRR, and AWRR) is shown in Table 12. The value of WT for EPRAM compared
    to previous LB algorithms is shown in Fig. 3. The value of WT for EPRAM compared
    to previous LB algorithms is shown in Fig. 4. Table 12 EPRAM vs. previous LB algorithms
    Full size table From Figs. 9 and 10, it''s observed that the EPRAM algorithm takes
    the lowest WT and the lowest TAT because the RL develops an agent that can assign
    tasks fast and efficiently [24]. It also uses the PNN for the prediction algorithm.
    It has achieved such acceptable performance due to using deep RL and PNN. Deep
    RL has shown impressive promises in resource allocation. PNN generates accurate
    predicted target and is much faster than multilayer perceptron networks [17].
    EPRAM algorithm has been compared with LC, RR, WRR, and AWRR. The values of makespan
    are shown in Table 13 and in Fig. 11. The values of ARU are shown in Table 14
    and in Fig. 12. The values of LBL are shown in Table 15 and in Fig. 13. Fig. 9
    WT for EPRAM vs previous LB algorithms Full size image Fig. 10 TAT for EPRAM vs
    previous LB algorithms Full size image Table 13 Makespan analysis (in ms) Full
    size table Fig. 11 Makespan for EPRAM vs Previous LB algorithms Full size image
    Table 14 ARU Analysis (%) Full size table Fig. 12 ARU for EPRAM vs Previous LB
    algorithms Full size image Table 15 LBL Analysis (%) Full size table Fig. 13 LBL
    for EPRAM vs Previous LB algorithms Full size image Figure 11 explained that EPRAM
    algorithm gives lower Makespan as compared to previous LB algorithms. Figures
    12 and 13 explained that EPRAM algorithm gives better result as compared to previous
    LB algorithms as it achieved the higher ARU and higher LBL. Hence all the above
    results have shown that EPRAM algorithm performs better for makespan, ARU and
    LBL as compared to LC, RR, WRR, and AWRR. 4 Conclusions and future work This paper
    presented a new Effective Resource Allocation Methodology (ERAM) for Fog environment,
    which is suitable for Healthcare applications. The proposed IoT-Fog system consists
    of three layers, namely: (i) IoT Layer, (ii) Fog Layer, and (iii) Cloud Layer.
    The mission of the IoT layer is to monitor the patient symptoms. The fog layer
    is considered with handling the incoming requests and forwards them to the suitable
    server. The cloud layer is responsible for managing the transfer of data to and
    from the fog layer. The user data is sent to the most appropriate resource to
    be allocated and processed. The allocating resource is managed by a specific healthcare
    organization. ERAM achieved an effective resource management in Fog environment
    via real-time resource allocating as well as prediction algorithm. ERAM is composed
    of three main modules, namely: (i) Data Preprocessing Module (DPM), (ii) Resource
    Allocation Module (RAM) and (ii) Effective Prediction Module (EPM). The DPM is
    responsible for sampling, partitioning, and balancing data to be in the appropriate
    form for analyzing and processing. The RAM learned to select the best FN to execute
    the incoming request. The RAM uses Reinforcement Learning (RL) algorithm to achieve
    a high LB for fog environment. The EPM used the PNN to predict a target field,
    using one or more predictors. In order to detect the probability of the heart
    attack, PNN is trained using the training dataset. Then PNN has been tested using
    the user''s sensing data coming from the IoT layer to predict the probability
    of heart attack and then take the most appropriate action accordingly. The main
    goal of the system is to achieve a low latency while improving the Quality of
    Service (QoS) metrics such as (the allocation cost, the response time, bandwidth
    efficiency and energy consumption). Unlike other RA techniques, EPRAM employed
    deep RL algorithm in a new manner. It also used the PNN for the prediction algorithm.
    It has achieved such acceptable performance due to using deep RL and PNN. Deep
    RL has shown impressive promises in resource allocation. PNN generates accurate
    predicted target and is much faster than multilayer perceptron networks. Comparing
    the EPRAM with the state-of-the-art algorithms, EPRAM achieved the minimum Makespan
    as compared to previous LB algorithms, while maximizing the Average Resource Utilization
    (ARU) and the Load Balancing Level (LBL). Accordingly, EPRAM is a suitable algorithm
    in the case of real-time systems in FC which leads to load balancing. Then EPRAM
    has been tested using the user''s sensing data coming from the IoT layer to predict
    the probability of heart attack and then take the most appropriate action accordingly.
    In future work, we aim to test EPRAM using various datasets to calculate the data
    transfer rate and compare it with the previous algorithms in different scenarios.
    In future work, EPRAM will also be tested to be used at different hierarchical
    levels with current investigations on how to make it more distributed. References
    Alam M, Khan Z A (2017) Issues and challenges of load balancing algorithm in cloud
    computing environment. Indian journal of science and Technology. 10(25). DOI:
    https://doi.org/10.17485/ijst/2017/v10i25/105688 H. F. Atlam, R. J. Walters, G.
    B. Wills, \"Fog Computing and the Internet of Things: A Review\", Big Data Cogn.
    Comput., 2), (2018). Bengio Y Learning Deep Architectures for AI (PDF). Foundations
    and Trends in Machine Learning 2(1):1–127. CiteSeerX 10.1.1.701.9550. https://doi.org/10.1561/2200000006
    Archived from the original (PDF) on 2016-03-04. Retrieved 2015-09-03 Bengio Y,
    Courville A, Vincent P (2013) Representation Learning: A Review and New Perspectives.
    IEEE Transactions on Pattern Analysis and Machine Intelligence 35(8):1798–1828.
    arXiv:1206.5538. https://doi.org/10.1109/tpami.2013.50 Article   Google Scholar   Chen
    K, Franko K, Sang R Structured Model Pruning of Convolutional Networks on Tensor
    Processing Units. Computer Science, Machine Learning arxiv.org/abs/2107.04191
    Deng L, Yu D (2014) Deep learning: Methods and applications. Found. Trends Signal
    Process 7:197–387 Article   Google Scholar   Dubey Sh, Dahiya M, Jain S (2019)
    Implementation of load balancing algorithm with cloud collaboration for logistics.
    Journal of Engineering and Applied Sciences 14(2): 507-515. https://doi.org/10.36478/jeasci.2019.507.515
    Fan Q, Ansari N (2018) Towards workload balancing in fog computing empowered IoT.
    IEEE Transactions on Network Science and Engineering Gia TN, Jiang M, Rahmani
    A-M, Westerlund T, Liljeberg P, Tenhunen H (2015) Fog computing in healthcare
    Internet of Things: A case study on ECG feature extraction. In: Proc. IEEE Int.
    Conf. Comput. Inf. Technol., Ubiquitous Comput. Commun., Dependable, Auto. Secur.
    Com-put., Pervasive Intell. Comput. (CIT/IUCC/DASC/PICOM), Oct., pp 356–363 Google
    Scholar   Gu K, Liu H, Xia Z, Qiao J, Lin W, Thalmann D (2021) PM2.5 monitoring:
    use information abundance measurement and wide and deep learning. IEEE Trans Neural
    Netw Learn Syst 32(10). https://doi.org/10.1109/TNNLS.2021.3105394 Gubbi J, Buyya
    R, Marusic S, Palaniswami M (2013) Internet of things (IoT): a vision, architectural
    elements, and future directions. Futur Gener Comput Syst 29(7):1645–1660 Article   Google
    Scholar   H. Gupta, A. Dastjerdi , S. Ghosh, and R. Buyya, iFogSim: a toolkit
    for modeling and simulation of resource management techniques in internet of things,
    edge and fog computing environments, software: practice and experience (SPE),
    47(9): 1275–1296, 2017 Google Scholar   Gupta S, Rani S, Dixit A, Dev H (2019)
    Features exploration of distinct load balancing algorithms in cloud computing
    environment. Int J Advanced Networking and Applications 11(1):4177–4183 ISSN:
    0975-0290 Article   Google Scholar   Hindman B, Konwinski A, Zaharia M, Ghodsi
    A, Joseph AD, Katz R, Shenker S, Stoica I (2011) Mesos: A platform for fine-grained
    resource sharing in the data center. In: Proceedings of the 8th USENIX Conference
    on Networked Systems Design and Implementation, Boston, MA, USA, 30 March–1 April
    2011; USENIX Association: Berkeley, CA, USA, pp 295–308 Google Scholar   Hof RD
    (2018) Is artificial intelligence finally coming into its own? MIT Technology
    Review, Retrieved Google Scholar   Hua P, Dhelima S, Ninga H, Qiud T (2017) Survey
    on fog computing: architecture, key technologies, applications and open issues.
    Journal of Network and Computer Applications 98:27–42 Article   Google Scholar   Karthikeyan
    B, Gopal S, Venkatesh S (2008) Partial discharge pattern classification using
    composite versions of probabilistic neural network inference engine. Expert Syst.
    Appl 34:1938–1947 Article   Google Scholar   Kaur R, Luthra P (2014) Load balancing
    in cloud system using max min and min min ALGORITHM. International Journal of
    Computer Applications (0975 –8887) National Conference on emerging trends in computer
    technology (NCETCT-2014): 31-34 Ke G, Qiao J, Li X (2019) Highly Efficient Picture-Based
    Prediction of PM2.5 Concentration. IEEE Transactions on Industrial Electronics
    66(4). https://doi.org/10.1109/TIE.2018.2840515 Ke G, Xia Z, Qiao J (2020) Stacked
    Selective Ensemble for PM2.5 Forecast. IEEE Transactions on Instrumentation and
    Measurement 69(3). https://doi.org/10.1109/TIM.2019.2905904 Mahmud R, Ramamohanarao
    K, Buyya R (2017) In: Beniamino DM, Laurence Y, Li K-C, Antonio E (eds) ISBN 978–981–10-5861-5Fog
    computing: A taxonomy, survey and future directions, Internet of Everything: Algorithms,
    Methodologies, Technologies and Perspectives. Springer, Singapore Google Scholar   Mahmud
    R, Koch FL, Buyya R (2018) Cloud-Fog Interoperability in IoT-enabled Healthcare
    Solutions. In: Proceedings of the 19th International Conference on Distributed
    Computing and Networking (ICDCN ''18), pp. 1–10, Varanasi, India, Jan. 4–7 Google
    Scholar   Masip-Bruin X, Marín-Tordera E, Alonso A, Garcia J (2016) Fog-to-cloud
    computing (F2C): The key technology enabler for dependable ehealth services deployment.
    In: Proc. Medit. Ad Hoc Netw. Workshop (Med-Hoc-Net), June, pp 1–5 Google Scholar   Matthew
    B (2019) Reinforcement learning, fast and slow. Trends Cogn Sci 23(5):408–422.
    https://doi.org/10.1016/j.tics.2019.02.006 Article   Google Scholar   Online (n.d.)
    https://www.smplsft.com/SimpleIoTSimulator.html Schmidhuber J (2015) Deep Learning
    in Neural Networks: An Overview. Neural Networks 61:85–117. arXiv:1404.7828. https://doi.org/10.1016/j.neunet.2014.09.003
    Article   Google Scholar   Singh G, Kaur K (2018) An improved weighted least connection
    scheduling algorithm for load balancing in web cluster systems. International
    Research Journal of Engineering and Technology (IRJET). 5(3). E-ISSN: 2395-0056
    Sonmez C, Ozgovde A, Ersoy C (2017) Edgecloudsim, An environment for performance
    evaluation of edge computing systems. In: Proceedings of the Second International
    Conference on Fog and Mobile Edge Computing (FMEC’17), pp. 39–44, Valencia, Spain,
    May. 8–11 Google Scholar   Szegedy C, Toshev A, Erhan D (2013) Deep neural networks
    for object detection. Advances in Neural Information Processing Systems:2553–2561
    Talaat Fatma M, Mohamed S, Ahmed S, Hesham A, Shereen A (2020) A load balancing
    and optimization strategy (LBOS) using reinforcement learning in fog computing
    environment. Journal of Ambient Intelligence and Humanized Computing. https://doi.org/10.1007/s12652-020-01768-8
    Tan Y, Liu W, Qiu Q (2009) Adaptive power management using reinforcement learning.
    In: Proceedings of the 2009 international conference on computer-aided design,
    ACM: 461-467. https://doi.org/10.1145/1687399.1687486 Tentori M, Favela J (2007)
    Activity-aware computing in mobile collaborative working environments. In: Proc.
    13th Int. Conf. Groupw., Design Implement. (CRIWG), Berlin, Germany, September,
    pp 337–353 Google Scholar   Vaquero LM, Rodero-Merino L (2014) Finding your way
    in the fog. ACM SIGCOMM Comput. Commun. Rev 44(5):27–32 Article   Google Scholar   Vavilapalli
    VK, Murthy AC, Douglas C, Agarwal S, Konar M, Evans R, Graves T, Lowe J, Shah
    H, Seth S et al (2013) Apache hadoop YARN: Yet another resource negotiator. In:
    Proceedings of the 4th Annual Symposium on Cloud Computing, Santa Clara, CA, USA,
    1–3 October. ACM, New York, NY, USA, pp 5:1–5:16 Google Scholar   Venkatesh S,
    Gopal S (2011) Robust Heteroscedastic Probabilistic Neural Network for multiple
    source partial discharge pattern recognition—Significance of outliers on classification
    capability. Expert Syst. Appl 38:11501–11514 Article   Google Scholar   Wei Y,
    Yu FR, Song M, Han Z (2018) User scheduling and resource allocation in HetNets
    with hybrid energy supply: an actor-critic reinforcement learning approach. IEEE
    Trans Wirel Commun 17(1):680–692. https://doi.org/10.1109/TWC.2017.2769644 Article   Google
    Scholar   Yan M, Feng G, Qin S (2017) Multi-RAT Access Based on Multi-Agent Reinforcement
    Learning. In: 2017 IEEE global communications conference. https://doi.org/10.1109/GLOCOM.2017.8254980
    Chapter   Google Scholar   Yi S, Li C, Li Q (2015) A survey of fog computing:
    concepts, applications and issues. In: Proceedings of the 2015 Workshop on Mobile
    Big Data. ACM, pp 37–42 Chapter   Google Scholar   Yoshua B, Yann L, Geoffrey
    H (2015) \"Deep Learning\". Nature 521(7553): 436–444. Bibcode:2015Natur.521..436L.
    https://doi.org/10.1038/nature14539 Yousefpour A, Ishigaki G, Jue JP (2017) Fog
    computing: Towards minimizing delay in the internet of things. In: 2017 IEEE International
    Conference On Edge Computing (EDGE), pp 17–24 Chapter   Google Scholar   Zaharia
    M, Borthakur D, Sen Sarma J, Elmeleegy K, Shenker S, Stoica I (2010) Delay scheduling:
    A simple technique for achieving locality and fairness in cluster scheduling.
    In: Proceedings of the 5th European Conference on Computer Systems; ACM: New York,
    NY, USA, pp 265–278 Chapter   Google Scholar   Download references Funding Open
    access funding provided by The Science, Technology & Innovation Funding Authority
    (STDF) in cooperation with The Egyptian Knowledge Bank (EKB). Author information
    Authors and Affiliations Faculty of Artificial Intelligence, Kafrelsheikh University,
    Kafrelsheikh, Egypt Fatma M. Talaat Corresponding author Correspondence to Fatma
    M. Talaat. Ethics declarations Funding and/or conflicts of interests/competing
    interests We wish to confirm that there are no known conflicts of interest associated
    with this publication and there has been no significant financial support for
    this work that could have influenced its outcome. Additional information Publisher’s
    note Springer Nature remains neutral with regard to jurisdictional claims in published
    maps and institutional affiliations. Rights and permissions Open Access This article
    is licensed under a Creative Commons Attribution 4.0 International License, which
    permits use, sharing, adaptation, distribution and reproduction in any medium
    or format, as long as you give appropriate credit to the original author(s) and
    the source, provide a link to the Creative Commons licence, and indicate if changes
    were made. The images or other third party material in this article are included
    in the article''s Creative Commons licence, unless indicated otherwise in a credit
    line to the material. If material is not included in the article''s Creative Commons
    licence and your intended use is not permitted by statutory regulation or exceeds
    the permitted use, you will need to obtain permission directly from the copyright
    holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.
    Reprints and permissions About this article Cite this article Talaat, F.M. Effective
    prediction and resource allocation method (EPRAM) in fog computing environment
    for smart healthcare system. Multimed Tools Appl 81, 8235–8258 (2022). https://doi.org/10.1007/s11042-022-12223-5
    Download citation Received 26 September 2021 Revised 30 December 2021 Accepted
    10 January 2022 Published 02 February 2022 Issue Date March 2022 DOI https://doi.org/10.1007/s11042-022-12223-5
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Resource Allocation Internet of Things (IoT) Fog Computing
    (FC) Digital Technology Digital Transformation Deep Learning (DL) smart Healthcare
    System Prediction Reinforcement Learning Mobile HEALTH Dataset Use our pre-submission
    checklist Avoid common mistakes on your manuscript. Sections Figures References
    Abstract Introduction Related work Implementation and evaluation Conclusions and
    future work References Funding Author information Ethics declarations Additional
    information Rights and permissions About this article Advertisement Discover content
    Journals A-Z Books A-Z Publish with us Publish your research Open access publishing
    Products and services Our products Librarians Societies Partners and advertisers
    Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy
    choices/Manage cookies Your US state privacy rights Accessibility statement Terms
    and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic
    Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024
    Springer Nature"'
  inline_citation: '>'
  journal: Multimedia Tools and Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Effective prediction and resource allocation method (EPRAM) in fog computing
    environment for smart healthcare system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Praveen Kumar A.
  - Reddy C.
  citation_count: '4'
  description: This Health-related problem is now seen as crucial to people that smart
    health care is developing to address them. Information and Communication Technologies
    (ICT) will give reasonable solutions in healthcare, education, smart agriculture,
    intelligent vehicles, smart cities, and so on; energy-efficient and secure networking
    models are required. There are modern sustainable computing solutions for e-healthcare
    applications that rely on cloud computing and the Internet of Things (IoT). This
    approach also increases the overall expenses for treating patients and the protracted
    treatment of such patients. According to various studies, the amount of energy
    consumed in transmitting data from IoT devices to a Cloud server is significantly
    high and results in quick energy depletion. Fog computing technology is best suited
    for real-time applications in which low latency, less energy consumption, and
    increased response time are of the utmost importance, especially for healthcare
    applications. Our research mainly focuses on passive optical Networks. This article
    demonstrates fog computing methodologies in passive optical networks.
  doi: 10.1109/I-SMAC55078.2022.9987329
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2022 Sixth International Conf...
    Comprehensive Analysis on Low Power Health Monitoring System using Fog Computing
    in Passive Optical Networks Publisher: IEEE Cite This PDF A. Praveen Kumar; Crk
    Reddy All Authors 4 Cites in Papers 55 Full Text Views Abstract Document Sections
    I. Introduction II. Methodology III. Related Work IV. Performance Evaluation V.
    Conclusion Authors Figures References Citations Keywords Metrics Abstract: This
    Health-related problem is now seen as crucial to people that smart health care
    is developing to address them. Information and Communication Technologies (ICT)
    will give reasonable solutions in healthcare, education, smart agriculture, intelligent
    vehicles, smart cities, and so on; energy-efficient and secure networking models
    are required. There are modern sustainable computing solutions for e-healthcare
    applications that rely on cloud computing and the Internet of Things (IoT). This
    approach also increases the overall expenses for treating patients and the protracted
    treatment of such patients. According to various studies, the amount of energy
    consumed in transmitting data from IoT devices to a Cloud server is significantly
    high and results in quick energy depletion. Fog computing technology is best suited
    for real-time applications in which low latency, less energy consumption, and
    increased response time are of the utmost importance, especially for healthcare
    applications. Our research mainly focuses on passive optical Networks. This article
    demonstrates fog computing methodologies in passive optical networks. Published
    in: 2022 Sixth International Conference on I-SMAC (IoT in Social, Mobile, Analytics
    and Cloud) (I-SMAC) Date of Conference: 10-12 November 2022 Date Added to IEEE
    Xplore: 22 December 2022 ISBN Information: ISSN Information: DOI: 10.1109/I-SMAC55078.2022.9987329
    Publisher: IEEE Conference Location: Dharan, Nepal SECTION I. Introduction With
    innovative technologies, Industries have been automated quickly within the last
    10 years. The health sector also has many drastic changes in diagnosing diseases
    and treatment due to the internet of things and cloud computing. As Healthcare
    3.0 was completely hospital-centric, patients with chronic diseases faced many
    problems because of multiple hospital visits for frequent health check-ups [1].
    Many diseases, such as chronic diseases and COVID-1,9, have been met by today’s
    world threatens public health issues. The healthcare system’s primary function
    is continuously monitoring parameters like a heartbeat, blood glucose level and
    pressure. Furthermore, this information from remote cloud servers can be accessed
    and analyzed by the e-medical system and used by doctors, nurses and ambulances
    to check the patient’s health status [2]. Cloud computing facilitates large memory
    storage capacity, network communication and computational abilities and to process
    sensor data it has been known as an efficient technique. Fog computing is introduced
    as a new paradigm in the latest cloud computing methodologies. Adverse to the
    cloud computing mechanism, at the network edge, fog computing provides storage
    facilities, performs the computation and establishes communication. Hence, fog
    nodes of fog computing can execute real-time and delay-sensitive analyses while
    decreasing traffic congestion and reducing energy depletion. When a fog node gets
    a request from an end device, it has two options: either it accepts or reject
    the request locally using its own resources, or it transmits it to a distant cloud
    server. It will reduce power consumption and delay; fog computing improves performance
    while conserving network bandwidth and maximizing resource efficiency. [3]. The
    architecture of fog system and the critical parameters are explained below. A.
    Healthcare With the acceleration in population and patient upsurge, Healthcare
    should be updated as per the needs. The conventional healthcare system cannot
    aid the needs of everyone due to huge increase in population. Despite advanced
    technologies and significant infrastructures, cost, medical services are not affordable
    to all the economic people. One of the objectives of smart healthcare system,
    is to alert the people about their health conditions. In some emergencies, Smart
    healthcare technology enables people to manage themselves [5]. Various smart health
    monitoring systems with appropriate sensors and cloud servers have been suggested
    to enable health monitoring. They provide services to the individual in question
    anywhere, at any time [6]. In addition, the emergence of the IoT as a cutting-edge
    technology hastened the demand for cloud servers and expanded their uses in business
    and technology. By the end of 2025, the number of internet-connected things (IoT)
    may outnumber people on the planet, according to Cisco studies. Illustrates several
    IoT applications and their projected market shares through 2025. Fig. 1. No. of
    devices predicted to be connected to the internet by 2025 [21] Show All Figure
    1 shows the growth of internet-connected IoT devices from the year 2003 to 2025.
    In terms of scalability, efficiency, quality of service, cost, security, and improved
    outcomes with or without human participation, the externalization of IoT in healthcare
    has flourished to tremendous progress. SECTION II. Methodology Like other Computer
    resources, cloud computing services are susceptible to data thefts and cyber-attacks.
    Sophisticated e-mail phishing, or spear phishing, is one cloud cyber-attack in
    which the malevolent user targets only one individual. By clicking the link in
    such a spoofing assault, a hacking issue that affects millions of individuals
    is opened up to the one who was targeted. Cloud computing comes into the equation
    here. Cloud cryptography encrypts data stored in the cloud to keep it safe from
    unauthorized access. Cloud cryptography is being protected from data breaches,
    hacking, and malware infection by various measures. Because cloud companies encrypt
    all data, customers can confidently use shared cloud services. By encrypting data
    in the cloud, users may send it more rapidly while keeping it secure. Computers
    and protocols mix up the data into cipher text, which is then deciphered. Encrypted
    data can then be decrypted using a sequence of bits and transformed to clear text
    using an encryption key. Because it protects users’ information once it leaves
    the system, cloud encryption is a novel approach to data security. This assures
    that no matter where data travels over users, it will be safe and secure. As a
    result of cryptography, the organization will have a higher level of cyber security
    than before. Currently, the IT industry’s highest-rated computing service is cloud
    computing. The service-orientated paradigm removes the burden of owning and licensing
    computer hardware and managing the IT infrastructure. Adopting the pay-and-use
    paradigm in the cloud offers efficiency in resource use. Moving businesses, infrastructure,
    and associated data around with cloud services is now a lot easier. By using cloud
    services, it is now practicable to do computer services from a remote site even
    when we are situated in any area of the globe. Cloud Computing has lowered the
    cash previously invested in products like hardware, software, and others. Data
    security has become more pressing as more firms embrace cloud computing services.
    The many data breaches are not concealed from anyone, even if cloud companies
    assure us that the data is 100% protected in the cloud. Therefore, the cloud providers
    and the customers must protect the data in the cloud. Many procedures and strategies
    must be employed to protect information stored in the cloud. Small and large businesses
    are migrating to a cloud-based data paradigm, where they may encounter various
    data-related difficulties. It may be either storing or processing so much info.
    The data quality may not always be as good as it is. The most pressing problem
    when it comes to data is data security. As a result of the exposure of really
    confidential private data, it could result in significant financial losses. Nevertheless,
    Cloud-IoT driven framework cannot solve the issues related to network traffic
    and congestion, cost, delay, system convolution, and real-world execution. Consequently,
    an extra layer that brings processing, storage, communication, and intelligence
    close to the IoT sources is presented by CISCO, called ‘Fog’. Fog computing is
    applied in the contiguity of user users and a substantial number of distributed
    devices, heterogeneity, interoperability, real-time communication, and pre-processing
    with respected interplay with the cloud. In addition to local storage and processing,
    Fog computing can use different types of internet of things sensors [7]. The characteristics
    of fog computing are low latency, Heterogeneity, contextual location awareness,
    and Real-time interactions: Real-time processing applications, mission-critical
    applications and applications with deadlines can be effectively solved by Fog
    computing technology. Interoperability and federation: Fog computing offers seamless
    services to different providers so that components should cooperate and interoperate,
    and services across various domains should be assisted effectively. A. Passive
    Optical Networks Global telecommunications corporations have begun taking Fiber
    to the Home (FTTH) seriously, allowing technology to advance quickly. PON and
    AON are key components of the FTTH systems that enable broadband connections.
    The bulk of FTTH implementations uses more PON that can offer cost-effective alternatives.
    This art icle will present the OLT, ONT, ONU, and ODN, the essential elements
    and associated technologies that makeup PON. In contrast to AON, a PON design
    connects several clients to a single transceiver using a branching tree of fibers
    and passive splitter/combiner devices. These devices operate only in the optical
    domain and are powerless. Gigabit Passive Optical Networks (GPON) and Ethernet
    Passive Optical Networks are the two main PON standards in use today (EPON). They
    both have very identical topological structures. The PON solution is the primary
    option in many FTTH implementation situations because it offers the following
    notable advantages: Less Energy Consumption Requires Less Space Increased Bandwidth
    Increased Security Simpler to Setup and Expand Lower Management and Operation
    Costs PON Components and Structure The service provider’s central office houses
    the optical line terminal (OLT) (SPL). The optical distribution network (ODN)
    is also used to transmit OLT and ONU/ONT. Terminal for Optical Lines (OLT) The
    passive optical network’s OLT is its hub and linked through Ethernet wires to
    a core switch. The key responsibilities of the OLT include multiplexing optical
    network terminals for shared upstream transmission and converting, framing, and
    sending signals for the PON network. A second module is incorporated into the
    PON card and power supply, supporting hot swapping. B. Optical Network Terminal
    (ONT)/Optical Network Unit (ONU) (ONT) ONU transforms fiber-transmitted optical
    impulses into electrical signals. The individual subscribers are then provided
    these electrical impulses. Between the premises of the end user and the ONU, there
    is often a distance or other access network. Additionally, ONU may communicate,
    combine, and groom various forms of consumer data before sending it upstream to
    the OLT. The grooming process involves restructuring and autotomizing the data
    stream to increase delivery efficiency. OLT offers bandwidth allocation that enables
    float data, which often flows from the client in bursts, to be sent to the OLT
    smoothly. There are several ways to link ONU, including twisted-pair copper wire,
    coaxial cable, optical fiber, and Wi-Fi. Optical network terminals may also refer
    to end-user devices (ONT). ONT and ONU are conceptually equivalent. While ONU
    is an IEEE word, ONT is an ITU-T term. They both pertain to the user-side devices
    in the GEPON system but are from distinct standard bodies. However, ONT and ONU
    vary somewhat in practice depending on their location. (Fig.2) Fig. 2. Architecture
    of Optical Network Terminal source: Huawei forums Show All C. Optical Distribution
    Network (ODN) The optical transmission channel for the physical connection of
    the ONUs to the OLTs with a reach of 20 km or more is provided by ODN, a crucial
    component of the PON system. Passive optical splitters, fiber optic cables, connectors,
    and ancillary parts work together inside the ODN. Feeder fiber, visual distribution
    point, distribution fiber visual access point, and drop fiberize the five segments
    that make up the ODN. Optical fibres are distributed for nearby regions along
    the distribution fiber that runs from the visual distribution point to the optical
    access point. The optical access point and terminals (ONTs) are connected via
    the drop fiber, enabling optical fiber to drop into user houses (Fig.3). Fig.
    3. Architecture of optical distribution network (ODN) source: Huawei forums Show
    All Metrics and their Definition: The quality of service factors that evaluate
    the performance of fog services is Efficiency, Energy consumption, Latency, Scalability,
    Reliability, Security, Resource utilization, Accuracy, Precision/Recall, and Response
    time. Fig. 4. Taxonomy of energy efficient techniques in sensor nodes of WSN.
    [22] Show All It is the time lapsed between the request submission and request-reply
    in a system. For successful computing, low response times may be crucial. D. Motivation
    One of the critical attributes of IoT systems in healthcare is energy efficiency.
    The duration between the recharging of wearable low-power sensor nodes may be
    extended or powered via energy harvesting from ambient sources. It involves a
    setting where the sensor node’s internal ambient energy is transformed into electrical
    energy. This technique will extend a sensor node’s lifespan. However, when fuelled
    by solar energy and a considerably more basic power management device made up
    of a voltage regulator, a buck converter, and a boost converter, contextual sensor
    nodes, and gateways may operate independently. Wireless Sensor Networks WSNs [12]
    promote a variety of applications such as vehicle tracking, system control, healthcare
    monitoring, environmental monitoring, or disquisition in a hostile environment
    in an extensive range. WSNs can be mainly used for such data gathering applications,
    in which the target is to detect and report the status of an event occurring in
    some area of interest to the destination. In WSNs, the sensors continuously release
    energy while performing operations like sensing, receiving, processing, or transmitting
    data to execute a particular task required by an application. The sensing section
    is allocated to data obtainment. In constrained sensors, the data extraction from
    the transducer must be minimized to save energy. In a network that routes the
    data to a sink, the feature redundancy native in WSNs will generate enormous similar
    reports. As shown in figure 5, “The energy-efficient techniques are broadly classified
    into five main categories, such as reductions in data volume, protocol overhead,
    energy-efficient routing, duty cycling, and topology management.” reduction of
    data: Its main aim is to reduce production, transmission, and processing data
    volumes. Data aggregation and data compression are instances of such techniques.
    overhead protocol: The main focus is accelerating protocol efficacy by busting
    overhead. Message transmission periods are adjusted depending on the network’s
    stability or the extent to which the transmitted information’s source. To optimize
    the communication protocols by considering application requirements, a cross-layering
    approach is to be empowered in general. Optimized flooding is the other technique
    that can significantly reduce the amount of overhead. Energy efficient routing:
    It deals with the various routing protocols that reduce energy consumption. By
    taking the benefits of broadcast nature and the mobility of wireless communications
    into consideration, some protocols reduce the energy consumption in data transmission
    to sink. Using geographical coordinates and hierarchy of nodes, other protocols
    find the route to the destination with less overhead. Topology control: While
    maintaining network connectivity, it decreases energy consumption by customizing
    transmission power, and also, based on native information, a novel reduced network
    topology is generated. In various studies, energy preservation is considered a
    critical criteria at the network layer of the protocol pile by accomplishing energy-efficient
    route setup and coherent data communication between sensor nodes and base station.
    The routing protocols in WSNs [13] are mainly used to conserve sensor nodes’ energy,
    support them workable for a long period, extend the network lifetime, and hold
    network connectivity. In augmentation, routing protocols in WSNs should exclude
    redundant information generated by neighbor sensor nodes. Additionally, most of
    the data flow in WSNs is channeled from different points of the source to a single
    sink, as IP-dependent organization is not directly applied and nodes have bounded
    processing and storage capacity. In Figure 4, the classification of protocols
    with their taxonomy is proposed hierarchically with some particular categories.
    These protocols are categorized into four based on (i) network structure, (ii)
    data exchange, (iii) location information is used/not used, and (iv) multiple
    paths or quality of service are supported/ not supported. In a network, some popular
    energy-saving techniques are Task Scheduling, Data Duplication, and Load balancing.
    Scheduling is allocating service/ application tasks to appropriate processing
    resources for execution. Fig. 5. Energy-efficient routing protocol categorization
    for wireless sensor networks [23] Show All Duplication of data is the process
    of maintaining a clone of actual data closer to end users (requests) to accelerate
    system performance and fault tolerance, besides diminishing the load on the servers
    and utilization of network bandwidth. Load balancing is the technique of distributing
    workloads evenly between all virtual machines or hosts to make sure that either
    of them are neithis overloaded nor underutilized. Moreover, the two offloading
    techniques, i.e., tasks and server consolidation are used to save energy by discharging
    tasks from an unutilized server to another. SECTION III. Related Work This section
    explores the studies affiliated with energy-efficient fog/cloud with computing
    architecture in health care systems using diverse techniques. At access network,
    to optimize the position of processing servers (PSs), in [14] authors explored
    MILP, a mathematical model, so that whole energy consumed by the health monitoring
    application is diminished and also for real-time pursuance of the energy effectual
    fog-based health system, a heuristic algorithm is designed. To evaluate the health
    system, two data rates, i.e., ECG Monitoring, and high data rate i.e., video-based
    fall monitoring, are considered. Also, the influence of idle power of servers,
    network apparatus, and accelerating traffic on the proposed system is analyzed.
    A Fog-assisted IoT system is implemented in [15] to monitor patients with diabetes
    and cardiovascular diseases, and the integral system has sensors, intelligent
    gateways with fog infrastructure, and servers. Furthermore, other information
    like bio-signals (i.e., ECG, Spo2, glucose, and body temperature) and ambient
    signals (i.e., room temperature, air quality, humidity) are analyzed to improve
    the accuracy of disease. At Fog-assisted gateways, unique Lightweight algorithms
    are applied for fall detection to extract ECG features, and activity status categorization.
    Along with these algorithms, the push notification service helps increase medical
    service quality. An ultra-low power 2.4 GHz ISM band wireless protocol, like nRF
    protocol, is used due to flexible data rate and energy efficacy. In [14], authors
    proposed a global system architecture for the evolution of ensemble deep learning
    operating on fog computing. They evolved HealthFog, a sophisticated autonomous
    deep learning-based approach for diagnosing cardiac patients. To integrate IoT-Edge-Cloud
    for real-time data analysis and to validate HealthFog in a fog computing environment,
    the HealthFog is deployed using the FogBus framework. In [8], A low-cost IoT-Fog-based
    health monitoring system has been proposed, and it is capable of acquiring health-related
    data (i.e., ECG and SPO2 levels, etc.) as well as surrounding data (humidity and
    temperature, etc.).The collected real-time data is forwarded wirelessly for remote
    monitoring. Furthermore, the Fog layer supports the system by delivering cultivated
    services such as data classification and processing, channel management, and push
    notification to enhance the healthcare standards. An ultra-low power 2.4 GHz radio
    frequency protocol (MRF) is proposed for the entire remote health monitoring system.
    An edge-fog-cloud aided collaborative network-based location-aware IoHT system
    is suggested for exemplary health care and to assist in an emergency. Users’ mobility
    or constant shifts in position are considered, and a multi-layer trajectory graph
    is used to simulate the patterns. For the framework to be able to help users in
    an emergency, the generative adversarial network is employed to forecast the location
    sequences. Compared to a cloud-based healthcare system, the suggested architecture
    reduces user device energy usage and latency by around 28% and 27%, respectively.
    To attain energy clustering and disease determination, in [10], authors explained
    an efficient EEPSOC-ANN model that exercises IoT devices. The proposed framework
    is exploited in three critical subsystems: cloud, user, and alert. Using medical
    sensor devices, the data is obtained from the user in the user subsystem. While,
    an EEPSOC technique is implemented to cluster IoT devices and to select cluster
    heads (CHs) appropriately. Further, the sensed data is transmitted from IoT devices
    to Fog gateways and cloud. Eventually, in cloud subsystem, disease determination
    occurs and ANN forecasts the disease based on its severity level and yields an
    alert system. The proposed EEPSOC model results in maximum energy efficacy with
    the minimal energy amount of IoT devices. An energy-efficient technique is proposed
    in [11] that depends on the residual CPU capacity and energy consumption, to assign
    the incoming requests (tasks) from sensors to Fog devices. Edge-wards, a default
    placement technique, allocates the CPUs available to the incoming bids/requested
    tasks directly. Dynamic voltage and frequency scaling (DVFS) algorithm and improved
    round robin (IRR) algorithms are used at Fog nodes to enhance energy efficacity,
    which is one of the essential purposes of the proposed approach. The proposed
    technique always selects the Fog device that consumes minimum energy rather than
    the energy-inefficient one, for the placement of application modules. To acclimate
    the CPU frequency at Fog computing devices (Fog servers) and to ensure depletion
    in energy consumption, Dynamic voltage and frequency scaling (DVFS) algorithm
    is utilized. Fog IoHT(Fog computing-based Internet of Health Things), a new fog-assisted
    healthcare monitoring system has been proposed in [12] and uses Fog intermediate
    devices for processing health-related data. The proposed method applies routers,
    switches, cloudlets, gateways, Small Cell cloud-enhanced e-node B (ScceNB), portable
    femtocells, roadside units as fog devices. Portable femtocells, gateways, and
    RSUs act as fog devices for data processing in outdoor region. A weighted majority
    game theory has been embraced for selecting fog devices indoors and outdoors to
    provide delay-sensitive and energy-efficient health monitoring systems. Contrary
    to Cloud only healthcare framework, an IOHT framework has diminished the delay,
    jitter and energy consumption in both regions. In [13], the authors addressed
    workload distribution problem in IoT-fog-cloud architecture. In executing workloads
    by both fog and cloud, a computation model has been defined to evaluate propagation
    delay in cloud and energy consumption in fog and Further, an NSGAII algorithm
    is used to solve this multi-objective model. To increase the power of IoT devices
    to reduce energy consumption and response times for application requests while
    also handling resource allocation for IoT applications. A general IoT-fog-cloud
    computing architecture is first put forward, which thoroughly investigates the
    benefits of fog and cloud. Later, writers developed a resource allocation and
    computation offloading strategy that is both time and energy efficient to reduce
    the problem’s energy and time costs. The solution is an algorithm called ETCORA
    (Energy and time efficient computation offloading and resource allocation), which
    consists of two steps: transmission power distribution and computation offloading
    selection (choosing fog or cloud for processing). In [15], a fog computing architecture
    with high resilience is suggested for the healthcare sector. The architecture
    is intended to be robust against server failures under two situations: those with
    and without geographic restrictions. A Mixed Integer Linear Programming (MILP)
    model is suggested to optimize the number and locations of both the primary and
    backup computing servers. As a result, both network infrastructure and processing
    devices use less energy. Due to the increase in the number of patients, it is
    also possible to reduce the energy consumption of networking equipment by increasing
    the number of processing servers handling requests at each candidate node. Based
    on the notion of Collaborative Machine Learning, a new multi-level architecture
    for AI- driven IoT eHealth applications has been proposed in [16] and the intelligence
    has been allocated across Cloud layer, Edge/Fog layer and IoT(Device) layer. The
    proposed approach empowers healthcare professionals in constant monitoring of
    health records of patients ubiquitously and facilitates appropriate real-time
    responses that eventually enhances the decision-making power. The following table
    shows the energy efficiency in fog-IoT-based architectures using different techniques:
    Table I Energy-Efficiency In Fog-Iot Based Architectures Using Different Techniques:
    SECTION IV. Performance Evaluation This section presents the outcomes of computer-based
    simulations for multiple-OLT with multiple-wavelength PON-OAN as indicated in
    Fig.6. The behavior for bandwidth exploitation, time cycle length, uplink efficiency,
    and overhead-to-data ratio are presented to develop the system. For several service
    providers, the performance of the multi-OLT, multi-wavelength PONOAN converged
    network has been documented. These service providers have dynamic behavior and
    are linked to ONUs at random. The service providers are divided into two groups
    in this article; Group-I, which includes FTTH and WSN, has packet sizes of 1024
    bytes, while Group-II, which provides HDTV and femtonet works, has packet sizes
    of 1500 bytes [15]. Each service provider requires a distinct transmission window
    during uplink transmission since the transmission window size depends on the number
    of service providers and the length of the data packets. The transmission window
    lengthens as the number of ONUs and data packets lengthens. In this configuration,
    the distance between the OLT and ONUs is 10–20 kilometers, and there is anything
    from 3 to 18 ONUs. The suggested system’s analysis is presented at regular time
    cycles (varying from 0.5 to 3 ms). Other protocols, like round robin and packets
    with various priority last in first out, may be examined shortly to evaluate how
    well the suggested system is doing. The quantity of ONUs and service providers
    determines how long it takes to process data—figure 7 displays time cycle variation
    for different data packet speeds. The analysis results show that the time cycle
    increases as the data rate rises due to the addition of data in such convergent
    PON-based OANs. Additionally, it has been determined that, as the number of ONUs
    increases, the time cycle length is about the same for every data rate. As a result,
    even with increased data rates, the time cycle for a more significant number of
    ONUs remains essentially constant. Fig. 6. Time cycle variations of PON Show All
    Fig. 7. data transmission speed of PON Show All SECTION V. Conclusion In this
    paper, we comprehensively analyzed research trends, opportunities, and challenges
    in smart healthcare. Energy efficiency and delay are two significant factors in
    real-time and mission-critical applications. In this work, we exploited an energy-efficient
    fog-IoT-based healthcare architecture and different technologies; algorithms included
    to reduce the power consumption generated by other sections of the system in terms
    of sensor nodes, gateways, different routing protocols in WSNs, various communication
    technologies, load balancing, task scheduling, data replication and by using other
    optimization techniques. The findings show that PON-based OAN can support additional
    service providers at more excellent data transfer rates. The benchmark for determining
    the level of service provided by such networks is the overhead-to-data ratio.
    Authors Figures References Citations Keywords Metrics More Like This Dynamic Routing
    Scheme for Linking Wireless Sensor Network towards Internet of Things 2021 5th
    International Conference on Electrical Information and Communication Technology
    (EICT) Published: 2021 A Brief Overview of Wireless Sensor Networks for Internet
    of Things 2022 2nd International Conference on Networking, Communications and
    Information Technology (NetCIT) Published: 2022 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 6th International Conference on I-SMAC (IoT in Social, Mobile, Analytics
    and Cloud), I-SMAC 2022 - Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Comprehensive Analysis on Low Power Health Monitoring System using Fog Computing
    in Passive Optical Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kummar S.
  - Bhushan B.
  citation_count: '0'
  description: The unprecedented growth of population in urban areas has been causing
    a challenge for the citizens in their day-to-day lives such as road congestion,
    public security, environmental pollution, electricity shortage and water shortage.
    To control and resolve all these issues, new technologies have been developed
    for smart cities. Intelligent services and better applications are deployed in
    smart cities, by combining the Internet of Things (IoT) with the technologies
    like data mining (DM) and deep learning (DL). Many sectors like healthcare, governance,
    agriculture and public safety can increase their efficiency with the help of these
    new technologies and can convert these into smart applications for smart cities.
    Different kinds of computing like edge computing, fog computing and cloud computing
    support to provide better insights into analytics with the help of big data in
    smart cities. All these technologies are transforming or raising healthcare ecosystems,
    leading them in the direction of smart healthcare. This permits surgeons to get
    real-time data of their patients distantly with the help of wireless communication.
    Smart healthcare is established on new technologies to convey enriched and valued
    healthcare facilities for patients. This chapter explores the current challenges
    that are faced during the indigenous development of the smart cities. Furthermore,
    the chapter discusses the theoretical background of smart cities with the explanation
    of their components. Moreover, the chapter describes the necessity of computational
    infrastructure for smart cities in a framework of big data and DM. The chapter
    highlights some mining methods for extracting important information from huge
    and mixed data. Additionally, the chapter examines the advancement of healthcare
    sector in smart cities in context of big data and DM.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: 'The Internet of Medical Things: Enabling technologies and emerging applications'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Big data analytics and data mining for healthcare and smart city applications
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sahoo J.
  citation_count: '1'
  description: Smart farming has enabled farmers to reduce cost, improve agricultural
    yield, and make better decisions using Internet of Things (IoT) technology. IoT
    nodes such as soil sensors and pH probes provide farmers with a real-time update
    on the farm. Traditionally, the farm data sensed by IoT nodes are processed by
    a cloud data center. However, it results in a higher delay in sending results
    to the farmer. Fog computing is a recent paradigm that reduces the delay by deploying
    fog nodes on the farm to process the farm data. However, the fog nodes need to
    be placed in proper locations as it will impact the energy consumption of IoT
    nodes in transmitting data to the fog node. Moreover, the placement must ensure
    a fair distribution of load among the fog nodes to ensure effective resource utilization.
    Therefore, it is critical to determine the optimal location of fog nodes to minimize
    the energy consumption of IoT nodes and balance load among the fog nodes. We ensure
    load balancing by minimizing the maximum load. In this paper, we model the fog
    node placement as an optimization problem and present an Integer Programming Formulation
    (ILP) formulation of the same. We also propose a placement algorithm designed
    based on k-means clustering. Our simulation results show that the proposed algorithm
    performs close to the optimal placement in terms of energy consumption and load
    distribution.
  doi: 10.1007/978-3-031-06371-8_6
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Summit Smart City
    360° SmartCity 360 2021: Science and Technologies for Smart Cities pp 77–91Cite
    as Home Science and Technologies for Smart Cities Conference paper Energy and
    Load Aware Fog Node Placement for Smart Farming Jagruti Sahoo  Conference paper
    First Online: 17 June 2022 990 Accesses Part of the book series: Lecture Notes
    of the Institute for Computer Sciences, Social Informatics and Telecommunications
    Engineering ((LNICST,volume 442)) Abstract Smart farming has enabled farmers to
    reduce cost, improve agricultural yield, and make better decisions using Internet
    of Things (IoT) technology. IoT nodes such as soil sensors and pH probes provide
    farmers with a real-time update on the farm. Traditionally, the farm data sensed
    by IoT nodes are processed by a cloud data center. However, it results in a higher
    delay in sending results to the farmer. Fog computing is a recent paradigm that
    reduces the delay by deploying fog nodes on the farm to process the farm data.
    However, the fog nodes need to be placed in proper locations as it will impact
    the energy consumption of IoT nodes in transmitting data to the fog node. Moreover,
    the placement must ensure a fair distribution of load among the fog nodes to ensure
    effective resource utilization. Therefore, it is critical to determine the optimal
    location of fog nodes to minimize the energy consumption of IoT nodes and balance
    load among the fog nodes. We ensure load balancing by minimizing the maximum load.
    In this paper, we model the fog node placement as an optimization problem and
    present an Integer Programming Formulation (ILP) formulation of the same. We also
    propose a placement algorithm designed based on k-means clustering. Our simulation
    results show that the proposed algorithm performs close to the optimal placement
    in terms of energy consumption and load distribution. Access provided by University
    of Nebraska-Lincoln. Download conference paper PDF 1 Introduction Agricultural
    production will need to increase by 60% to meet the food demand of the growing
    population in 2050. However, with diminishing natural resources, unpredictable
    weather conditions, and shrinking arable land, it is a significant challenge to
    increase the yield to meet future food demand [1]. Smart farming is an emerging
    technique that can improve agricultural yield by using IoT nodes (e.g., sensors,
    robots, and GPS) and advanced information and communication technologies [2].
    With smart farming, the farm processes can be made smarter, automated, and data-driven,
    enabling the farmers to make informed decisions, reduce agricultural efforts,
    and minimize costs. Typically, a smart farming system uses a remote cloud server
    for storage and computation. While a cloud server is needed to support compute-intensive
    applications, it does not meet the real-time requirement of latency-sensitive
    agricultural applications such as soil and water quality monitoring [3], intelligent
    greenhouses [3], disease and pest monitoring [3]. Fog computing is an effective
    paradigm that has emerged recently to allow the execution of latency-sensitive
    applications at the network edge, thereby reducing the latency [4, 5]. A fog infrastructure
    consists of edge devices such as gateways and mobile devices that can provide
    computational and storage resources for IoT applications. Those edge devices,
    also known as fog nodes, receive farm variables from the IoT nodes and execute
    tasks with varying resource requirements. Figure 1 shows the high-level view of
    a smart farming system. Fig. 1. Smart farming system Full size image The IoT nodes
    used in smart farming are mostly battery-operated devices. As the nodes are deployed
    in remote locations, it is a tedious task to replace their batteries. IoT nodes
    need to conserve their energy to continue sensing the farm and sending the sensed
    measurement to the fog. However, the locations of fog nodes affect the energy
    consumption. Therefore, the fog nodes must be deployed in proper locations that
    minimize the energy consumption of the IoT nodes. Since fog nodes have limited
    processing capacity and IoT nodes generate workload with varying resource requirements,
    it is imperative that IoT nodes’ workload need to be distributed as evenly as
    possible among the deployed fog nodes to ensure effective utilization of fog resources.
    The load balancing can be achieved by minimizing the maximum load on fog nodes.
    In this paper, we address the problem of finding the optimal location of fog nodes,
    referred to as fog node placement. It entails two objectives: minimizing the energy
    consumption and minimizing the maximum load. We consider that the placement must
    meet a given budget, and we represent it in terms of the number of fog nodes that
    need to be deployed. Clearly, the fog node placement problem is a variation of
    the k-median problem that finds k centers for a given number of facilities to
    minimize the communication cost between the centers and the facilities [6]. The
    optimal placement of fog nodes for various IoT domains has been addressed in the
    literature [7,8,9,10,11,12,13,14,15]. However, there has been a handful of papers
    that solve the fog node placement for smart farming. Moreover, there are limited
    efforts on addressing the placement that ensures the energy-efficiency of IoT
    nodes. In this paper, we present an ILP model of the fog node placement problem.
    We propose a placement algorithm, referred to as the k-fog node placement (k-FNP),
    to find the appropriate location of fog nodes. The k-FNP algorithm is designed
    based on k-means clustering [16]. In k-FNP, the IoT nodes are grouped into k clusters,
    and cluster centers represent the fog node location. In k-means clustering, IoT
    nodes are assigned to their nearest cluster, i.e., cluster that offers the smallest
    distance between the IoT nodes and the cluster centers. However, k-FNP uses a
    composite metric consisting of energy consumption and load within a cluster for
    the cluster selection process, where an IoT node selects the cluster with the
    smallest value of the composite metric. The remainder of the paper is organized
    as follows. Section 2 discusses the related works. The fog node placement problem
    and the proposed algorithm are presented in Sect. 3. Section 4 presents the simulation
    results. Section 5 provides the conclusion. 2 Related Works Yuan et al. [7] proposed
    a search and clustering algorithm to decide the fog node position based on sensor
    node peak density. Their algorithm is a modification of the k-means algorithm.
    In addition, an integrated optimization model is proposed to deal with all the
    resource constraints and delay. Density-based clustering algorithms perform well
    when the fog node has very high resource availability. However, in energy crunch
    situations, some fog nodes drain out all their energies very fast. Jiang et al.
    [8] proposed an architecture for smart manufacturing. Also, they proposed a k-means
    based clustering algorithm and validated it through a prototype model. Three kinds
    of deployment, i) random deployment, ii) k-means clustering, and iii) improved
    k-means clustering, are considered. The SDN-based clustering is implemented on
    the fly based on available resources. A flow conservation-based optimization model
    is proposed to balance resource constraints and deal with the network delay and
    computing cost. The SDN-based algorithms are very effective for real-time decision-making.
    However, fog node placement is an infrequent activity, and usually, it is carried
    out when existing hardware infrastructure fails to handle growing resource needs.
    For each decision, fog nodes have to depend on SDN controllers/servers, which
    introduces an additional resource burden. As this method is implemented in a resource-rich
    scenario, it may not be suitable for other areas such as smart farming, connected
    drone coalition, and underwater sensor networks. Manogaran & Rawal [9] proposed
    an optimal node placement and resource allocation algorithm to deal with communication
    delays for the Internet of Everything (IoE) environment. A profit function is
    defined to deal with resource allocation problem. The proposed RA-Fog algorithm
    decides the fog node placement based on latency, cost, and resource utilization.
    A novel fog-cloud architecture is proposed to minimize service delays. Considering
    the complex IoT/IoE environment scenario, only resource allocation consideration
    does not always find an optimal fog topology. Though resource allocation is an
    essential factor, the energy constraints of IoT nodes and the cost of implanting
    suggested fog topology are equally vital for a robust architecture. The RA-Fog
    algorithm will suffer heavily in energy crunch situations. It is evident that
    in large-scale IoT environments, fog nodes work as a smooth transit point for
    heavy delay-sensitive applications. [10] proposes an edge node (EN) deployment
    architecture to be implemented in an airport to deal with traffic diversity and
    wireless diversity. In this deployment strategy, the ENs collect data from the
    candidate IoT nodes and sends maintenance instructions to designated IoT nodes.
    The throughput is the prime factor in this heavy data traffic scenario. Though
    node and network diversity are considered here, minimizing the number of edge
    nodes may lead to infrastructure fatality. Lin et al. [11] addressed the optimal
    deployment of smart gateways for smart home environments. The deployment is modeled
    as a binary integer programming. The goal is to minimize the deployment cost while
    ensuring that the gateways cover all service areas in a smart home. To find the
    candidate gateway locations, the house floor plan is transformed into a new plan
    consisting of multiple nodes based on the coverage required for the service areas
    in the house. Although the deployment provides the required communication infrastructure
    for smart home IoT services, the model does not consider either energy consumption
    or IoT workload in choosing the gateway location. Zhang et al. [12] addressed
    the edge server placement problem in smart farming that involves minimizing the
    data transmission delay between the sensors and edge servers and the energy cost
    of edge servers. Moreover, the load is balanced among the edge servers. However,
    the energy consumption of sensors is not considered in finding the edge server
    locations. 3 Optimal Fog Node Placement 3.1 Problem Description The fog node placement
    problem involves finding the optimal location of fog nodes and assigning IoT nodes
    to appropriate fog nodes to minimize the energy consumption of IoT nodes and ensure
    load balancing. Load balancing can be achieved by minimizing the maximum load.
    3.2 ILP Formulation Minimize $$\\sum\\nolimits_{i\\in F}\\sum\\nolimits_{j\\in
    S}{E}_{ij}{x}_{ij}+ \\lambda $$ (1) Subject to $$\\sum\\nolimits_{i\\in F}{y}_{i}\\le
    K $$ (2) $$\\sum\\nolimits_{i\\in F}{x}_{ij}=1 \\quad \\forall j\\in S$$ (3) $${x}_{ij}\\le
    {y}_{i}\\,\\forall i\\in F, j\\in S$$ (4) $${x}_{ij}{d}_{ij}\\le R$$ (5) $$\\sum\\nolimits_{j\\in
    S}\\sum\\nolimits_{k\\in {A}_{j}}{x}_{ij}{L}_{jk}\\le \\lambda , \\forall i\\in
    F$$ (6) $$0\\le \\lambda \\le P$$ (7) The first term in (1) represents the energy
    consumption objective. We used the energy model proposed in [17] to compute the
    energy consumption of IoT nodes. As the receiving energy of IoT nodes is negligible,
    the energy consumption includes the transmission energy only. Given a fog node
    location i, the transmission energy of an IoT node i in transmitting \\({b}_{j}\\)
    bits to the location i is computed as follows: $${E}_{ij}={ E}_{elec}*{b}_{j}+{\\varepsilon
    }_{amp}*{b}_{j}*{d}_{ij}^{2}$$ (8) where \\({E}_{elec}\\) is the electronic energy
    required for coding, modulation, filtering, etc., \\({\\varepsilon }_{amp}\\)
    is the amplification energy, and \\({d}_{ij}\\) is the distance between the IoT
    node j and the fog node location i. The second term in (1) represents the objective
    for load balancing. The decision variable \\(\\lambda \\) represents the maximum
    load on a fog node that needs to be minimized (Table 1 and 2). Table 1. ILP notations
    Full size table Table 2. Decision variables Full size table Constraint (2) ensures
    that the number of fog nodes must be limited to k. It represents the maximum budget
    for deploying fog nodes. Constraint (3) ensures that an IoT node j is assigned
    to exactly one of the fog nodes. Constraint (4) indicates that an IoT node j is
    assigned to location i only if a location has been selected to deploy a fog node.
    Since the IoT nodes have a limited transmission range, we introduce a distance
    constraint (5). It ensures that the distance between an IoT node and the location
    to which it is assigned must not exceed the transmission range of the IoT node.
    Constraint (6) ensures that the total load on any fog node is limited by the selected
    maximum load. As fog nodes have limited processing capacity, constraint (7) ensures
    that the maximum load must not exceed that fog capacity. 3.3 K-means Based Fog
    Node Placement (k-FNP) Algorithm The fog node placement problem can be solved
    using the clustering concept, where the IoT nodes are grouped to form a given
    number of clusters and the cluster center provide the location for deploying fog
    nodes. We design our algorithm based on k-means clustering which is an effective
    way to cluster a set of given data points into k distinct clusters. In k-means
    clustering, the Euclidean Distance between the data point and the centroid of
    a cluster is used in the cluster selection procedure, where the data point selects
    the cluster with the smallest distance. However, we design a composite metric
    consisting of two parameters: 1) the energy consumption of IoT node incurred by
    transmitting data to the centroid, 2) the current load of the cluster. The current
    load of a cluster is considered so that IoT nodes will be assigned to a cluster
    with a minimum load, minimizing the maximum load. Since our goal is to minimize
    the energy consumption and balance the load among the fog nodes, we sort the clusters
    using the composite metric and assign an IoT node to the cluster with the smallest
    value of the metric. Since the composite metric components are in different units,
    they are normalized by converting each parameter into a range (0,1). The cluster
    selection metric for an IoT node sj and cluster ci is computed as follows: $$M
    ({s}_{j},{c}_{i})=\\alpha {E}_{ij}+\\beta {L}_{ij}$$ (9) where E denotes the transmission
    energy consumed by IoT node \\({s}_{j}\\) if it is assigned to cluster \\({c}_{i}\\).
    L denotes the total load (including the workload of IoT node \\({s}_{j}\\)) of
    cluster \\({c}_{i}\\). α and β denote the parameters that control the importance
    of energy efficiency and load balancing, respectively on the cluster selection
    metric. These parameters can be selected by the network designer during the deployment
    phase depending on whether the parameters are given equal or difference preference.
    For example, if more preference is given for energy efficiency, then α should
    be set to a value higher than β. A pseudo-code of k-FNP is shown in Algorithm
    1. The algorithm starts by selecting k random centroids from IoT node locations
    which are considered as candidate locations for fog nodes. As shown in the ILP,
    the distance between an IoT node and the centroid of its cluster must be limited
    to one hop. Moreover, the total load in a cluster must not exceed the processing
    capacity of a fog node. Thus, in our algorithm, for each IoT node, clusters that
    meet the distance and capacity requirements are selected. The clusters are then
    sorted using the composite metric given by (9). The IoT node is assigned to the
    cluster with the smallest value of the composite metric. After all the IoT nodes
    are assigned to one of the k clusters, the center of each cluster is updated as
    the mean of locations of IoT nodes that belong to the cluster. The algorithm repeats
    until a certain number of iterations, MaxItr is reached. 4 Performance Evaluation
    4.1 Simulation Setup We used IBM Cplex optimization studio [18] to implement the
    proposed ILP model. We compared the optimal solution with the proposed k-FNP algorithm
    under a small-scale scenario that consists of 4 to 10 IoT nodes randomly deployed
    in an area of 100 m × 100 m. The placement algorithm is executed offline prior
    to deploying the fog infrastructure. We considered two configurations of the small-scale
    scenario: 1) small-scale scenario-I that has variable number of IoT nodes, and
    2) small-scale scenario-II that has fixed number (i.e., 10) of IoT nodes. We consider
    fog nodes with a capacity of 15000 MIPS. We consider a transmission range of 60
    m for the IoT nodes. We consider that each IoT node generates a number of tasks
    with varying resource requirements. Each task will execute on a fog node and process
    the data received from the IoT nodes. We also consider a large-scale scenario
    consisting of 50 to 200 nodes deployed in an area of 300 m × 300 m. The large-scale
    scenario is used to compare the k-FNP algorithm with a random placement algorithm.
    The random placement algorithm randomly selects k fog nodes that satisfy the distance
    and capacity constraints. Both k-FNP and the random placement algorithms are implemented
    using Python. In our large-scale scenario, the capacity of fog nodes is set to
    40000 MIPS. The transmission range of IoT nodes is set to 125 m. We set the parameter
    k to 50% and 20% of the number of IoT nodes in small-scale and large-scale scenarios,
    respectively. The simulation parameters are listed in Table 3. 4.2 Performance
    Metrics We consider the following metrics to evaluate the effectiveness of the
    proposed algorithm. 1) Energy Consumption: It is given by the sum of energy consumed
    by IoT nodes in transmitting data to the fog node that execute their tasks. 2)
    Standard Deviation of load: We use standard deviation to measure the distribution
    of load among the deployed fog nodes. 3) Maximum Load: It is the maximum load
    (in MIPS) that a fog node can host. This metric is also used to evaluate the load
    balancing performance of the proposed algorithm. Table 3. Simulation parameters
    Full size table 4.3 Results and Discussions Figure 3 shows the energy consumption
    of IoT nodes for small-scale scenario-I. The energy consumption of k-FNP remains
    close to that of ILP. Both ILP and k-FNP show consistent energy performance irrespective
    of the number of IoT nodes. An increase in the number of IoT nodes results in
    more clusters as k increases proportionally to the number of nodes. With more
    clusters, the distance between nodes and their cluster center decreases, and the
    total energy remains the same compared to when there are fewer nodes. On the other
    hand, the energy consumption of random placement is significantly higher than
    that of ILP and k-FNP. This is because, random placement does not aim to optimize
    the energy efficiency of IoT nodes (Fig. 2). Fig. 2. Energy consumption (Small-Scale
    Scenario-I) Full size image Fig. 3. Standard deviation (Small-Scale Scenario-I)
    Full size image Figure 4 shows the standard deviation of load in all three schemes.
    We observe that k-FNP performs close to the ILP in terms of balancing the load.
    It outperforms random placement for any number of IoT nodes. This is because,
    random placement considers neither the cluster load nor the fog capacity in selecting
    a cluster for an IoT node. We observe that ILP and k-FNP experience a reduction
    in standard deviation as the number of nodes increases. Since increase in number
    of nodes results in more clusters and as a result, allows for efficient distribution
    load among the clusters. Figure 5 shows the energy efficiency performance for
    small-scale scenario-II with respect to the number of fog nodes (i.e., k). We
    observe a considerable gap between the random placement and k-FNP. Both ILP and
    k-FNP show a decrease in energy consumption with increase in k. This is because
    higher values of k lead to more clusters, decreasing the distance between IoT
    nodes and their selected clusters, eventually decreasing the energy requirement
    of IoT nodes. The performance of k-FNP is slightly lower than that of ILP, which
    leads to the conclusion that k-FNP can yield placements close to the optimal solutions.
    Figure 6 shows the standard deviation of load for small-scale scenario-II. It
    shows that k-FNP performs close to ILP, whereas random placement exhibits drastically
    poor performance across all nodes. Fig. 4. Energy consumption (Small-Scale Scenario-II)
    Full size image Fig. 5. Standard deviation (Small-Scale Scenario-II) Full size
    image Figure 7 and Fig. 8 show the energy consumption and standard deviation obtained
    with k-FNP and random placement under a large-scale scenario. In Fig. 7, we observe
    an increase in energy consumption for random placement as the number of nodes
    increases. As k is set to only 20% of the number of IoT nodes, some fog nodes
    are still farther from the IoT nodes compared to when k is set to 50%, resulting
    in higher energy consumption. The growth in energy consumption of k-FNP is significantly
    low than that of the random placement, confirming the suitability of k-FNP in
    finding appropriate fog nodes. In Fig. 8, we observe a considerable performance
    gap between k-FNP and random placement. Although the random placement considers
    the transmission range and fog capacity constraint in selecting clusters, it does
    not consider the load of IoT nodes, thereby resulting in a non-uniform distribution
    of load among the fog nodes. Fig. 6. Energy consumption (Large-Scale Scenario)
    Full size image Fig. 7. Standard deviation (Large-Scale Scenario) Full size image
    Table 4. Maximum load (MIPS) (Small Scale Scenario-I) Full size table Table 5.
    Maximum load (MIPS) (Small Scale Scenario-II) Full size table Table 4 shows the
    maximum load for small-scale scenario-I. Both ILP and k-FNP experience a slight
    variation maximum load with an increase in the number of IoT nodes. k-FNP shows
    a maximum load close to optimal placement, thereby confirming its ability to minimize
    the maximum load. Moreover, on average, k-FNP yields 69% better performance than
    random placement. Table. 5 shows the maximum load on a fog node with respect to
    the number of fog nodes for small-scale scenario-II. As the number of fog nodes
    increases, the maximum load decreases slightly for both ILP and k-FNP. As the
    IoT tasks have heterogeneous computational requirements, with higher value of
    k, the fog load can be balanced more effectively than with a lower value of k.
    We observe that random placement yields significantly higher maximum load irrespective
    of the number of IoT nodes. On average, Random placement results in a maximum
    load that is twice as much as the maximum load of the optimal placement obtained
    by the ILP. On the other hand, k-FNP remains close to ILP for any number of fog
    nodes. Table 6. Maximum load (MIPS) (Large Scale Scenario) Full size table The
    maximum load for the large-scale scenario is shown in Table. 6. k-FNP shows consistent
    performance in balancing load even in the presence of many IoT nodes. On the contrary,
    random placement shows significant variation in maximum load. Moreover, the maximum
    load in random placement peaks at 148673 MIPS for 200 nodes, which is 4.4 times
    higher than that of k-FNP. 5 Conclusion In this paper, we address the fog node
    placement problem that entails finding appropriate fog nodes to minimize the energy
    consumption of IoT nodes and minimize the maximum load to ensure an even distribution
    of IoT workload among fog nodes. First, we present an ILP formulation of the fog
    node placement problem. Then, we propose a placement algorithm that is based on
    k-means clustering. A composite metric consisting of two parameters: energy consumption
    and cluster load, is designed to address the two objectives: minimization of energy
    consumption and load balancing. Our simulation results show that the proposed
    algorithm performs close to the ILP in terms of both objectives and hence can
    produce good quality solutions. In the future, we would like to address the placement
    issue considering complex scenarios that involve heterogeneous fog nodes that
    vary in terms of resource and security requirements. References Elijah, O., Rahman,
    T.A., Orikumhi, I., Leow, C.Y., Hindia, M.N.: An overview of Internet of Things
    (IoT) and data analytics in agriculture: benefits and challenges. IEEE Internet
    Things J. 5(5), 3758–3773 (2018) Article   Google Scholar   Ivanov, S., Bhargava,
    K., Donnelly, W.: Precision farming: sensor analytics. IEEE Intell. Syst. 30(4),
    76–80 (2015) Article   Google Scholar   Ahmed, N., De, D., Hussain, I.: Internet
    of Things (IoT) for smart precision agriculture and farming in rural areas. IEEE
    Internet Things J. 5(6), 4890–4899 (2018) Article   Google Scholar   Naha, R.K.,
    et al.: Fog computing: survey of trends, architectures, requirements, and research
    directions. IEEE Access 6, 47980–48009 (2018) Article   Google Scholar   Mouradian,
    C., Naboulsi, D., Yangui, S., Glitho, R.H., Morrow, M.J., Polakos, P.A.: A comprehensive
    survey on fog computing: state-ofthe-art and research challenges. IEEE Commun.
    Surveys Tutorials 20(1), 416–464 (2018) Article   Google Scholar   Xia, X., et
    al.: Budgeted data caching based on k-median in mobile edge computing. In: IEEE
    International Conference on Web Services (ICWS), pp. 197–206 (2020) Google Scholar   Yuan,
    X., He, Y., Fang, Q., Tong, X., Du, C., Ding, Y.: An improved fast search and
    find of density peaks-based fog node location of fog computing system. In: IEEE
    International Conference on Internet of Things (iThings) and IEEE Green Computing
    and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom)
    and IEEE Smart Data (SmartData), pp. 635–642 (2017) Google Scholar   Jiang, C.,
    Wan, J., Abbas, H.: An edge computing node deployment method based on improved
    k-means clustering algorithm for smart manufacturing. IEEE Syst. J. 15(2), 2230–2240
    (2021) Article   Google Scholar   Manogaran, G., Rawal, B.S.: An efficient resource
    allocation scheme with optimal node placement in iot-fog-cloud architecture. IEEE
    Sensors J. 21(22), 25106–25113 (2021) Article   Google Scholar   Zhao, Z., Min,
    G., Gao, W., Wu, Y., Duan, H., Ni, Q.: Deploying edge computing nodes for large-scale
    iot: a diversity aware approach. IEEE Internet Things J. 5(5), 3606–3614 (2018)
    Article   Google Scholar   Lin, P.: Optimal smart gateway deployment for the Internet
    of Things in smart home environments. In: IEEE 4th Global Conference on Consumer
    Electronics (GCCE), pp. 273–274 (2015) Google Scholar   Zhang, J., Li, X., Zhang,
    X., Xue, Y., Srivastava, G., Dou, W.: Service offloading oriented edge server
    placement in smart farming. Softw Pract Exper. 1– 18, (2020) Google Scholar   Gravalos,
    I., Makris, P., Christodoulopoulos, K., Varvarigos, E.A.: Efficient gateways placement
    for internet of things with QoS constraints. In: IEEE Global Communications Conference
    (GLOBECOM), pp. 1–6 (2016) Google Scholar   Lee, J.-H., Chung, S.-H., Kim, W.-S.:
    Fog server deployment technique: an approach based on computing resource usage.
    Int. J. Distrib. Sensor Netw. 15(1), 1550147718823994 (2019) Google Scholar   da
    Silva, R.A.C., da Fonseca, N.L.S.: On the Location of Fog Nodes in Fog-Cloud Infrastructures.
    Sensors 19(11), 2445 (2019) Google Scholar   Guo, X., Lin, H., Wu, Y., Peng, M.:
    A new data clustering strategy for enhancing mutual privacy in healthcare IoT
    systems. Futur. Gener. Comput. Syst. 113, 407–417 (2020) Article   Google Scholar   Heinzelman,
    W.R., Chandrakasan, A., Balakrishnan, H.: Energy-efficient communication protocol
    for wireless microsensor networks. In: The 33rd Annual Hawaii International Conference
    on System Sciences, vol. 2, p. 10 (2000) Google Scholar   IBM CPLEX Optimizer
    [Online] Available: https://www.ibm.com/analytics/cplex-optimizer Download references
    Acknowledgment This work is supported by the National Institute of Food and Agriculture,
    United States Department of Agriculture, Evans-Allen project number SCX-314–02-19.
    Author information Authors and Affiliations Department of Computer Science and
    Mathematics, South Carolina State University, Orangeburg, USA Jagruti Sahoo Corresponding
    author Correspondence to Jagruti Sahoo . Editor information Editors and Affiliations
    Instituto Politécnico de Viana do Castelo, Viana do Castelo, Portugal Sara Paiva
    Auckland University of Technology, Auckland, New Zealand Xuejun Li Instituto Politécnico
    de Viana do Castelo, Viana do Castelo, Portugal Sérgio Ivan Lopes SRM Institute
    of Science and Technology, Chennai, India Nishu Gupta Howard University, Washington,
    DC, USA Danda B. Rawat Stoke-on-Trent, Birmingham, UK Asma Patel Politecnico di
    Milano, Milan, Italy Hamid Reza Karimi  Rights and permissions Reprints and permissions
    Copyright information © 2022 ICST Institute for Computer Sciences, Social Informatics
    and Telecommunications Engineering About this paper Cite this paper Sahoo, J.
    (2022). Energy and Load Aware Fog Node Placement for Smart Farming. In: Paiva,
    S., et al. Science and Technologies for Smart Cities. SmartCity 360 2021. Lecture
    Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications
    Engineering, vol 442. Springer, Cham. https://doi.org/10.1007/978-3-031-06371-8_6
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-031-06371-8_6
    Published 17 June 2022 Publisher Name Springer, Cham Print ISBN 978-3-031-06370-1
    Online ISBN 978-3-031-06371-8 eBook Packages Computer Science Computer Science
    (R0) Share this paper Anyone you share the following link with will be able to
    read this content: Get shareable link Provided by the Springer Nature SharedIt
    content-sharing initiative Publish with us Policies and ethics Download book PDF
    Download book EPUB Sections Figures References Abstract Introduction Related Works
    Optimal Fog Node Placement Performance Evaluation Conclusion References Acknowledgment
    Author information Editor information Rights and permissions Copyright information
    About this paper Publish with us Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes of the Institute for Computer Sciences, Social-Informatics
    and Telecommunications Engineering, LNICST
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Energy and Load Aware Fog Node Placement for Smart Farming
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Lakshmi P.
  - Rejith G.
  - Toby T.
  - Sai Shibu N.B.
  - Rao S.N.
  citation_count: '5'
  description: An increasing number of natural and artificially induced disasters
    shows the need for rapid disaster management methods backed by a reliable communication
    infrastructure and data source. Disasters bring losses to human life, livestock,
    properties and habitat. Building collapse is one of the disasters that predominantly
    endanger the local population. A proper rapid disaster management mechanism can
    cut down postdisaster damages. During a disaster, natural or otherwise, the Internet
    of Things (IoT) can play a crucial, potentially life-saving role. IoT systems
    support disaster management operations such as prevention, preparation, response
    and recovery phases. This paper summarises the existing IoT systems designed for
    disaster management and rescue operations. This paper proposes a fog computing
    and UAV-based IoT network architecture to combat the problems associated with
    frequent disasters focusing on collapsed buildings. The proposed architecture
    assists rescuers by integrating IoT sensors and UAVs data with the status of infrastructures.
    The architecture supports the rescuers by providing real-time data by analyzing
    disasters and facilitating disaster search and rescue operations. The paper also
    proposes a communication system with Lora mesh to transmit critical information
    to the base station during post-disaster situations. It presents the results from
    a prototype implementation of the proposed architecture in the Google Cloud Platform.
  doi: 10.1109/WiSPNET54241.2022.9767132
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2022 International Conference...
    A Resilient IoT System Architecture for Disaster Management in Collapsed Buildings
    Publisher: IEEE Cite This PDF Lakshmi P; Gopika Rejith; Tom Toby; Sai Shibu N.
    B.; Sethuraman N. Rao All Authors 3 Cites in Papers 309 Full Text Views Abstract
    Document Sections I. Introduction II. Related Work III. Proposed System Architecture
    IV. Results and Discussions V. Conclusion Authors Figures References Citations
    Keywords Metrics Abstract: An increasing number of natural and artificially induced
    disasters shows the need for rapid disaster management methods backed by a reliable
    communication infrastructure and data source. Disasters bring losses to human
    life, livestock, properties and habitat. Building collapse is one of the disasters
    that predominantly endanger the local population. A proper rapid disaster management
    mechanism can cut down postdisaster damages. During a disaster, natural or otherwise,
    the Internet of Things (IoT) can play a crucial, potentially life-saving role.
    IoT systems support disaster management operations such as prevention, preparation,
    response and recovery phases. This paper summarises the existing IoT systems designed
    for disaster management and rescue operations. This paper proposes a fog computing
    and UAV-based IoT network architecture to combat the problems associated with
    frequent disasters focusing on collapsed buildings. The proposed architecture
    assists rescuers by integrating IoT sensors and UAVs data with the status of infrastructures.
    The architecture supports the rescuers by providing real-time data by analyzing
    disasters and facilitating disaster search and rescue operations. The paper also
    proposes a communication system with Lora mesh to transmit critical information
    to the base station during post-disaster situations. It presents the results from
    a prototype implementation of the proposed architecture in the Google Cloud Platform.
    Published in: 2022 International Conference on Wireless Communications Signal
    Processing and Networking (WiSPNET) Date of Conference: 24-26 March 2022 Date
    Added to IEEE Xplore: 09 May 2022 ISBN Information: DOI: 10.1109/WiSPNET54241.2022.9767132
    Publisher: IEEE Conference Location: Chennai, India SECTION I. Introduction Globally,
    billions of people have been affected by disasters between 2005 and 2018 according
    to a study by the United Nations Office for Disaster Risk Reduction [1]. There
    are some outrageous consequences when Disasters strike, such as loss of life,
    property, and habitat. To minimize the damage and risks associated with disasters,
    it is necessary to employ efficient management techniques. The cost of the system
    on chip is gradually decreasing so availability and cheaper cost of IoT modules
    allows for more growth in this area [2] and [3]. Lately, the development in technology
    paved a new way to mission-critical service MMTC in 5G NR [4]. So IoT technology
    available today is quite mature and has the potential to be very useful to manage
    disaster scenarios. Rescue events may be interlinked through IoT for proper control
    technique and disaster warning systems, rescue methods, follow-up, and regulation
    techniques can be conjugated for this purpose [5]. So an architectural system
    for effective disaster control using IoT strategies should be introduced to reduce
    the fatality of a disaster phenomenon. The disaster search and rescue operations
    in collapsed buildings are limited by the quantity of information available at
    the time [6] and [7]. The inefficiency of the current mechanism for identification,
    assessment and monitoring is the main challenge faced in a disaster rescue operation.
    This paper aims at developing an architecture for an IoT system for a particular
    use case scenario. The IoT system is expected to function in pre-disaster and
    post-disaster scenarios by efficiently utilizing the information from the IoT
    sensors deployed in a smart building for minimal delay in search and rescue and
    to provide network resilience. During a Disaster, severe damage may happen to
    IoT resources deployed in a building. This will affect the Network resilience
    and result in single-point failure of IoT system deployed in Smart Building [8].
    The major contributions of this paper are: A comprehensive survey on the existing
    disaster management methodologies and understand the key components that delay
    the search and rescue operations. To define IoT architecture for disaster management
    in smart building for the particular use case scenario. To propose a communication
    system for IoT in smart building with importance for network resilience. The paper
    is organised as follows: Section II summarises the state of the art and research
    findings. Section III describes the proposed IoT architecture for disaster response.
    Section IV presents the results and discusses the system performance. The paper
    is concluded in V. SECTION II. Related Work This section presents scholarly works
    on fog computing and wireless mesh topology for IoT architecture in building management
    systems along with different communication technologies used in disastrous scenarios.
    Fog computing has ushered in a gradual change from older cloud servers to newer
    fog servers with the advent of this new concept. Not only does this technology
    provide extensibility to existing cloud architecture, but it also allows for a
    decentralised architecture. The emergence of wireless mesh topology allows for
    the tradeoff of long-range with multiple hops, along with the provision of network
    resilience while reducing the number of nodes that can be reached in a given period.
    A. State of the Art Review Sangmin Park et al. review an effective and economical
    building disaster management system appropriate for fire disasters in smart cities
    [1]. They discuss an Augmented Reality-based Disaster Management System to solve
    the problems due to fire disasters in urban areas. The system was implemented
    and set up with a service system board of 10 system machines. They say that the
    system provides intelligence as a service that provides prompt structure and eviction
    simulation and monitoring and gives Safety Guidelines that provide legal assistance
    to residents and rescuers in the event of a real fire. This IoT-based real-time
    outlying system can respond quickly in association with the fire department by
    providing information on real-time fire incidents. Anurag Verma et al. review
    a combination of IoT Architecture and Building Management and Information System
    (BMIS) which forms Building Internet of Things(BIoT) that maintains energy efficiency
    and sustainability to help reduce global warming [2]. The authors discussed the
    high-level implementation of advanced intelligence features, control parameters
    and IoT infrastructure required for smart building. Focused on sensing, managing
    the infrastructure that makes cloud clients work to use the sensing field using
    communication protocols. The authors have given special attention to some of the
    smart features that make buildings smart like privacy and security, network facilities,
    health and safety services as well general management in smart buildings. Chaitanya
    Kapoor et al. presents a research paper on modelling communication protocols for
    Smart Cities using MatLab''S 5G toolbox. They modelled various V2X, V2I and I2X
    communication protocols and proposed a mathematical model to develop a resilient
    smart city network model [9]. Siddarth et al propose UbiQNet, a Ubiquiti network
    architecture consisting of drones to provide an ad-hoc network during disasters
    in a smart city. They propose to create a mesh network with the support of drones
    to provide a reliable communication backbone for first responders to speed up
    the rescue operations [10]. Manohar N et al. demonstrated how machine learning
    algorithms work in conjunction with the internet of things (IoT) technology to
    monitor floods and alert people living nearby [11]. The authors say that if people
    living in the tremor wave inclined zone are prepared to endure the strike, the
    subsequent harm can be mitigated and daily activities can be maintained. Alarming
    individuals can lessen the misfortunes by admonishing the frameworks. It would
    be possible to limit the damage to life and property if floods were predicted
    at the earliest stages. The authors discuss how machine learning technology and
    the Internet of Things (IoT) are used to implement a flood observing and warning
    system. They cover several sections in this framework. First, sensors are used
    to measure the height of water. After the tallness data is received from the Ethernet
    shield, it is sent to the web page. The third part consists of giving information
    to higher-level specialists regarding the possibility of flooding. While not discussing
    any early warning systems and predicting water level rise times, this system predicts
    whether a flood will occur in a given area without discussing real-life deployment
    details, such as battery requirements. Huang-Chen Lee et al. discusses a detailed
    study of a network of wireless mesh architecture using the Lora module to achieve
    wide area coverage [12]. Apart from the availability of several available communication
    technologies that can transmit wireless data is a basic requirement of an IoT
    system, the high cost calculated makes it impossible for real applications. Dealing
    with this, the problem is choosing a network topology that provides a high level
    of Package Delivery Rate (PDR). The authors say that the architecture uses the
    topology of the star network in communication between LoRa Gateways and IoT devices
    and allows only one hop in between the LoRa device and gate. B. Research Findings
    The papers discuss the role of IoT in disaster management as well as its utilization
    in energy conservation in smart buildings. It has been examined how IoT can assist
    those who are involved in relief operations after a disaster concerning technology
    in disaster management. The paper [1] discusses how to detect residents in the
    event of fire hazards in buildings by providing an instant service for Intelligence
    and Safety Guidelines and the paper provides a clear comparison between the Current
    System and the Proposed System but gives less importance to Post-disaster communication
    methods. The authors have delved into the fog computing domain extensively in
    papers [13] and [2]. This paper has identified a number of applications in the
    modern-day that are based on the fog computing domain extensively in papers [13]
    and [2]. Communication, data flow, and other characteristics of these applications
    are outlined according to the fog paradigm. A novel architecture has been developed
    that depicts the data flow, communication, and security across the entities. A
    comprehensive architectural proposal has yet to be put forth. However system failure
    case is not discussed and the system is not deployed in real-time to study the
    energy consumption in the system in paper [13] and in paper [2], sensing and controlling
    mechanism related description remains unmodified and the constraints also remain
    uncertain. In paper [11], Using the latest technological equipment and simultaneously
    transmitting through the web, the proposed system can effectively detect and predict
    flood times, thus saving lives and making the world a better place. The paper
    [12] introduces mesh topology which gives an advantage over single-point failure
    and provides a long-distance switching solution that can reduce the number of
    nodes delivered at a time avoid multiple locations simultaneously uploading their
    data to a wireless network and minimize data collisions. However, this approach
    causes delays between locally generated data and data uploads at Gateway are high.
    A few of the studies reviewed and discussed scholarly works that reviewed and
    explained a few of the applications that follow modern, state-of-the-art architectures
    as well as taking into account the latest IoT boom that helps meet human needs
    seamlessly. SECTION III. Proposed System Architecture This section describes the
    system architecture in pre-disaster and post-disaster scenarios. The pre-disaster
    scenario architecture consists of sensor nodes, fog computation nodes and a cloud
    node. The sensor nodes and the fog nodes communicate using WiFi during pre-disaster.
    In case of any disaster scenario, the sensor nodes communicate using WiFi. If
    the WiFi connectivity is lost, then the sensor nodes can switch to LoRa and transmit
    data to the ground control station or fog nodes for further processing. Thus making
    it a resilient communication network during disaster scenarios and helping responders
    with uninterrupted real-time data. This section also describes how the network
    resilience can be improved by including a UAV to support the communication between
    the sensor nodes and the ground control station. A. Pre-Disaster Scenario Using
    real-time data collected from the building ambiance in real time, this paper seeks
    to develop a layered IoT architecture that provides disaster detection and mitigation
    in building management. In the pre-disaster scenario architecture consists of
    four layers: the end device layer, the network connectivity layer, the fog computing
    layer, and the cloud computing layer. 1) End Devices Layer: This layer has three
    main functions. To enter data into the system, the first step is to collect the
    necessary data about the ambiance of the building and convert it to a digital
    format. Controlling the building environment in response to the actions and decisions
    received from the system. Moreover, the end-device layer transmits the collected
    data wirelessly to the system, while receiving the control commands from the management
    system. Building ambiance sensors and microcontrollers with wireless interfaces
    are the main components of the end device layer. 2) Network Connectivity Layer:
    Data collected by the various sensors throughout the building is reliably routed
    to their destinations by the network connectivity layer. Consequently, this layer
    implements IoT wireless communication protocols (e.g. WiFi, Lora) and application
    messaging protocols (e.g. MQTT, AMQP, etc.). Essentially, the building''s edge
    nodes and sensor nodes implement the network connectivity layer. Fig. 1. Figure
    shows the IoT-based BMS architecture in pre-disaster scenario Show All 3) Fog
    Computing Layer: A fog computing layer is included in the proposed architecture
    that serves two purposes. Firstly, it extends cloud storage to the edge of the
    network from within the building. Next, it selectively relays data to the cloud.
    Second, it eliminates the need for urgent data to be sent to Internet-based back-ends
    and awaiting feedback, especially when it comes to security-related decisions.
    Fog computing is responsible for the majority of control decisions in a building
    and then transmits those decisions over the network to the end devices. 4) Cloud
    Computing Layer: This architecture is made up of four layers, and the cloud computing
    layer stores and analyzes data relayed from the fog computing layer. Data from
    that building was extensively used to develop some actions related to the building
    as a whole in order to visualize the data and make it more accessible to interested
    users. In addition, this layer contains application program interfaces (APIs)
    and other software tools that can be used by Internet-enabled authorized devices
    to access building data. B. Post Disaster Scenario 1) With Fog device: In the
    post-disaster scenario, of all the N end nodes, k nodes are damaged. Only (N-k)
    end nodes and fog devices are active. Once a disaster is detected and the network
    fails, automatically Lora will be activated by the code running in the Fog device
    implemented in python. The Lora will create a mesh with available nodes and through
    the Fog device, the network will connect to the GS via this Lora Gateway situated
    at the Ground station. The Fog system will initiate commands to signal the UAV
    from the GS for rescue, the location details stored in the database previously
    for each building can be used for path planning. As a backup GSM module is also
    connected to the fog device for emergency data transmission to the cloud. Fig.
    2. Figure shows the network architecture for post-disaster scenario considering
    the fog node Show All Fig. 3. Figure shows the network architecture for post disaster
    scenario without considering the fog node Show All 2) Without the Fog device:
    In this post-disaster scenario, of all the N end nodes, if k nodes and the fog
    device is damaged and only (N-k) end nodes are active, a layered architecture
    will be created using the ESP modules an Emergency data handover to the UAV will
    be initiated and the data will be sent to the cloud via the Lora gateway in the
    GS. As the UAV is fitted with the LoRa module and as this is a mesh network formed
    at the site, the UAV can connect to any node at any location of the building directly
    using the LoRa module and hence access data from IoT modules directly. The data
    from the mesh network is accessed by UAV and is shared with GCS. Here the LoRa
    Mesh can use the UAV as a hop to GCS. C. UAV Assisted Resilient Architecture During
    Post Disaster Scenario The main issue the responders face after a disaster is
    knowing the exact location of the disaster. We consider two disaster scenarios,
    earthquake and fire explosion for demonstrating our proposed methodology. The
    IoT sensors monitor vital parts of the building and provide an early warning with
    the location information to the responders. In case of disaster occurrence, the
    data generated from these IoT devices are analysed to determine the condition
    inside the building, estimate the severity of the destruction and help responders
    plan disaster response activities. UAVs are employed to provide an aerial Lora
    gateway that helps to connect the sensor nodes in the building with the groud
    control station as shown in Figure 4. The Lora mesh network initiates communication
    between its nodes and the UAV as soon as an earthquake is detected. The data from
    the sensor nodes are received by the ground control station and analysed. Based
    on the analysis, rescue operations are planned. After the fire is detected by
    the sensing system in the building, the Lora mesh network initiates communication
    between the nodes and the UAV, which then requests pick up from the ground station
    and asks the fire department to assist as shown in Figure 5. The sensor nodes
    detect motion in a specific range, detect acceleration above a threshold, and
    collect information about the indoor environment. There are a total of 96 sensor
    values from all the total 12 IoT modules from the 3 floors of the building. The
    code generate the data with some adjustments so that it looks like real sensor
    value changes and it is saved into MySQL database at the cloud location. Fig.
    4. Figure shows the system architecture during earthquake scenario Show All Fig.
    5. Figure shows the system architecture during fire or explosion scenario Show
    All SECTION IV. Results and Discussions The Raspberry Pi acting as the fog device
    will analyze each scenario. The DHT11 sensor measures the temperature, humidity,
    and moisture values with an accuracy of 1-degree Celsius, the sensor can measure
    temperature from 0 to 50 degrees Celsius and humidity from 20percentage to 90per-centage.
    Considering a fire scenario, the triggering condition is when the sensor detects
    temperature less than 50C and moisture value less than 20 per cent RH. For smoke
    detection, we can use MQ-2 which is a digital gas and smoke detector and can measure
    or detect LPG, Alcohol, Propane, Hydrogen, CO, and even methane. The critical
    condition is when the value is 1, similarly for the digital flame sensor and PIR
    occupancy sensor. According to the system, if all the four conditions i.e the
    temperature value exceeding 50C along with humidity value going down 20 per cent
    RH and the presence of flame and smoke are detected by the fog device, it is assumed
    that there is a fire disaster. Figure 6 shows the flowchart for the sensing parameters
    in the building showing the threshold values for each sensor and the output for
    the triggering condition which determines whether it is a fire disaster or earthquake.
    The exact location is determined by analyzing the sensor values of the particular
    module in the particular floor and warnings are generated and transmitted to GCS.
    From the database, this data is visualized using Grafana. In real-time, the last
    entry at the MySQL will be analyzed and displayed with related thresholds and
    the building status can be monitored visually as shown in Figure 7. Fig. 6. Figure
    shows the flowchart for sensing parameters in buildings with threshold values
    Show All Fig. 7. Visualisation of overall data in grafana Show All Fig. 8. Figure
    shows a screenshot of the warning message received on a smartphone Show All We
    consider that the fog device continuously receives data from all the modules and
    it will take the last received value and check on the threshold and if all the
    four conditions are triggered, it will read out all the modules where these conditions
    are over the threshold and warning is generated and if all conditions are satisfied
    a fire scenario is detected in the particular location. The location will be identified
    and will be shared with the concerned authorities over an SMS as shown in Figure
    8. Fog device also checks whether all the IoT modules are functional or not and
    if more than 10 per cent of the modules are not producing output, it assumes that
    there is a network failure/disaster detected and it initiates to backup communication
    procedure i.e Lora mesh, till then it will work on WiFi. SECTION V. Conclusion
    This paper presents a fog computing and UAV-based IoT network architecture to
    support first responders in rescue management in collapsed buildings. The architecture
    incorporates IoT nodes and UAV systems to monitor, analyze disasters, and assist
    rescue responders with the status of infrastructures, thereby accelerating disaster
    search and rescue efforts. IoT sensor systems are deployed at various locations
    in the building to generate data during pre and post-disaster scenarios. A fog
    computing node analyse the data generated from this system to provide real-time
    insights to the first responders. The fog computing node transmits the data to
    a ground control station for further analysis. In case of loss to the fog computing
    node, a Lora mesh architecture is proposed with the support of UAVs to deliver
    the data to the responders or the ground station. In this paper, we synthetically
    generated the IoT sensor data that mimics pre and post-disaster scenarios. The
    generated data is then analysed to provide insights to first responders. This
    proposed integrated system can effectively improve disaster management monitoring
    and responses. In future, we would like to employ machine learning algorithms
    to analyse the data and improve the efficiency of the overall system. We would
    also like to have a real-world deployment and understand the operation of the
    system. ACKNOWLEDGEMENT We express our deep gratitude to our beloved Chancellor
    and world renowned humanitarian leader Shri. (Dr) Mata Amritanandamayi Devi (AMMA),
    for the inspiration and motivation. We also thank the faculty and staff members
    of our center for their support in carrying out this work. We also like to thank
    Ms. Divyasree Mohan Menon from Tata Elxsi for supporting us in the work. Authors
    Figures References Citations Keywords Metrics More Like This A High-Level Language
    and Computer Architecture for Real-Time Systems 1989 American Control Conference
    Published: 1989 Testing and debugging in real time systems-design decisions to
    use a distributed computer architecture in a real time application [1989] Proceedings.
    EUROMICRO Workshop on Real Time Published: 1989 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2022 International Conference on Wireless Communications, Signal Processing
    and Networking, WiSPNET 2022
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Resilient IoT System Architecture for Disaster Management in Collapsed
    Buildings
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kumar A.
  - Upadhyay A.
  - Mishra N.
  - Nath S.
  - Yadav K.R.
  - Sharma G.
  citation_count: '4'
  description: People and urban economies have benefited greatly from smart cities'
    better quality of life and services. They have complete power over physical objects
    in real-time and can provide intelligent information to people in areas such as
    transportation, healthcare, building automation, public safety, smart parking,
    and traffic systems, as well as smart agriculture. Smart city apps have the ability
    to collect confidential data. At different levels of the architecture, nevertheless,
    various security and privacy issues can arise. As a result, it's important to
    consider these security and privacy concerns when developing and implementing
    applications. The key applications of smart cities are highlighted in this paper
    and the major security and privacy problems in the design of smart city applications.
    It discusses some of the latest protection and privacy strategies for information-centric
    smart city applications and potential research issues that must be identified
    for performance enhancement.
  doi: 10.1007/978-3-030-96737-6_5
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Robotics and AI for Cybersecurity
    and Critical Infrastructure in Smart Cities Chapter Privacy and Security Concerns
    in Edge Computing-Based Smart Cities Chapter First Online: 29 March 2022 pp 89–110
    Cite this chapter Access provided by University of Nebraska-Lincoln Download book
    PDF Download book EPUB Robotics and AI for Cybersecurity and Critical Infrastructure
    in Smart Cities Ashutosh Kumar, Aditya Upadhyay, Neha Mishra, Srawan Nath, Kalu
    Ram Yadav & Gajanand Sharma  Part of the book series: Studies in Computational
    Intelligence ((SCI,volume 1030)) 638 Accesses 4 Citations Abstract People and
    urban economies have benefited greatly from smart cities'' better quality of life
    and services. They have complete power over physical objects in real-time and
    can provide intelligent information to people in areas such as transportation,
    healthcare, building automation, public safety, smart parking, and traffic systems,
    as well as smart agriculture. Smart city apps have the ability to collect confidential
    data. At different levels of the architecture, nevertheless, various security
    and privacy issues can arise. As a result, it''s important to consider these security
    and privacy concerns when developing and implementing applications. The key applications
    of smart cities are highlighted in this paper and the major security and privacy
    problems in the design of smart city applications. It discusses some of the latest
    protection and privacy strategies for information-centric smart city applications
    and potential research issues that must be identified for performance enhancement.
    Access provided by University of Nebraska-Lincoln. Download chapter PDF Similar
    content being viewed by others A Conceptual Framework for Security and Privacy
    in Edge Computing Chapter © 2019 EDGE4ALL: Edge Computing for Smart City Chapter
    © 2020 An Empirical Review on Secure Edge Computing Architecture Chapter © 2023
    Keywords Edge computing Privacy Fog computing IoT Smart city Cyber-attacks Encryption
    1 Introduction The population in urban areas has been increasingly growing in
    recent decades. According to a United Nations Population Fund survey, cities are
    home to more than half of the world’s population [1]. Due to its strong criteria
    and the realistic context in an urbanised world, the idea of a smart city has
    gotten much too much attention from academia and industry [2]. Several cities
    have started to create their smart city plans to improve residents’ standard of
    living and provide better services. Many countries with rapidly rising populations
    are investing heavily in smart city programmes. China, for example, is operating
    on over 200 initiatives related to the smart city paradigm [3]. Smart cities-related
    innovations are allowing city governments to better control their day-to-day activities
    in order to make people''s lives easier. The infrastructure of smart cities involves
    a range of devices and integrated networks that support people in several settings,
    including healthcare, smart transportation, parking management, smart traffic
    networks, smart farming, and smart homes. Information-centric networking or INC
    models allows packet delivery to be maintained in insecure environments such as
    leaf pathology [4, 5]. As a consequence, in smart cities, ICN is a substitute
    for IP-based networks [6]. The fast expansion of wire-free communication technologies
    which enables small and cheap objects to link to the Internet, as well as the
    introduction of several low-cost digital devices like sensors and actuators, have
    led to an increase in the implementation of the Internet of Things (IoT), In which
    in daily life actual objects become smart objects. In addition to IP-based methods
    like the one suggested by Sheng et al. [7] In order to improve IoT life and its
    Network Stability, ICN solutions can be used. Instead of using an IP host, ICN
    is defined by the term content and central architecture details [8]. The main
    concept is to fully overhaul the internet''s architecture and make it more generic
    and straightforward [9]. ICN will support multiple Internet of Things situations
    and overcome their existing weaknesses by using their advantages to incorporate
    various technologies in compliance like smart cities and smart homes [10]. It
    can also be used as a platform to link various objects with security features
    in IoT environments to offer a variety of programmes. Furthermore, during the
    age of IoT, the use of ICN would result in a reduction in energy consumption [11].
    Cities are getting smarter, which can put people''s security and privacy at risk
    [12]. This is due to the resource-constrained existence of smart city devices
    that make the system vulnerable to a variety of security threats [13]. These flaws
    could lead to a slew of cyberattacks in smart cities. Malicious attackers, for
    example, can generate false data while manipulating sensing data, resulting in
    the loss of influence over extremely advanced systems [12]. In 2015, in Ukraine
    230 000 people lost power as a result of a hacker attack on the smart grid or
    SG that was sent to them in the type of denial of service (DOS) attack [1]. Several
    resource-constrained devices in smart cities, including cameras that capture and
    exchange sensitive data, are susceptible to destructive cybersecurity threats,
    putting people''s security and privacy at risk. The area data gathered and monitored
    by smart devices can reveal people''s private way of living and may even result
    in economic loss as a result of these cyberattacks [12]. There will be increasing
    demand for intelligent cities to $1.5 trillion by 2020, according to a survey
    [14]. In reality, governments are in charge of attracting major investments to
    realise the vision of smart cities [15]. In the city, to provide real-time data
    about services including traffic, water, air and so and so on, more than a thousand
    sensor nodes have been installed [16]. However, processing and analysing such
    a large volume of confidential information poses a range of problems, as well
    as questions about how to keep private data secure from unauthorised access [17].
    Ten Cloud infrastructure will provide efficient data handling and archiving services
    in the IoT era and smart cities [18]. However, some problems mobility, position
    awareness, latency, and protection are all issues that can be addressed using
    the fog computing model in cloud-based IoT applications [17, 19,20,21]. It solves
    these issues by delivering computing services to consumers at the network''s edge,
    thus reducing latency and improving service efficiency [22]. However, because
    of the variation between the two that is fog and cloud computing, privacy and
    security are challenging issues in fog computing. As a result, security responses
    designed for cloud services are not appropriate for IoT applications services
    available to users. Cyber-attacks can be dealt with using a variety of cryptographic
    techniques. These strategies, on the other hand, are not suitable for resource-constrained
    Internet of Things gadgets in smart cities. Offloading additional security operations
    to a fog-based node, which can allow data security analysis right at the network''s
    edge, is one solution in this regard [23]. Furthermore, in publish and subscribe
    schemes, which distribute data to subscriber from the publisher, information is
    spread out through a channel of hackers who can extract sensitive user data. As
    brokers seek access to publication tags and subscriber preferences, the system
    must maintain publication and subscription secrecy in this context [24]. The idea
    of a smart city, according to IBM, is characterized by these three features: instrumented,
    interconnected, and intelligent [25]. Instrumented refers to a city that is encircled
    by a network of devices like sensors and actuators. As a result, these instruments
    provide accurate and real-time information to the city''s core structures. Interconnected
    because it has a large number of networks that work together for sending data
    through different sources and locations. The use of a right combination of connected
    and regulated systems can then be used to create a connection between the physical
    world and real Intelligent means the instrumented and integrated world that uses
    data from different devices and systems like sensors, to enhance the citizens’
    standard of living. Despite the aforementioned advantages of smart cities, the
    massive number of wireless cameras and sensors that capture and transmit data
    to various internet connections for data processing raise some security and privacy
    issues. All of these devices are processing critical data and transmitting it
    over various networks. In today''s intelligent environment, data is the most important
    commodity for users. All data gets processed via operating systems that have security
    issues, like infrastructural concerns and cyber threats (e.g. DoS attacks). The
    quality of extremely advanced systems will decrease in the form of services due
    to these safety issues. To let this system become safer and user friendly, it
    is essential to resolve these security challenges [26]. Several survey papers
    on the protection and safety of edge computing-based smart cities have been released.
    In the work of Zhang et al.10, for example, protection and privacy in the application
    smart city are investigated. The investigators have addressed some of the protection
    and privacy issues that these apps face. The authors of Gharaibehet al. [27] described
    data protection and privacy strategies and explored the innovations that change
    smart cities into a reality. Different types of privacy, attackers, and needed
    sources for attacks in smart cities were discussed in Eckhoff and Wagner''s report
    [28]. The authors have looked at new privacy-enhancing techniques as well as different
    forms of citizen privacy in smart cities. Similarly, Sicari et al. addressed the
    key research issues as well as existing security solutions in IoT environments
    [29] (Fig. 1). Fig. 1 Features of a smart city [29] Full size image 2 The Architecture
    of Edge-Computing Based Smart Cities The IoT-based system design focuses on smart
    city''s sensitive issues, is based on the architecture proposed in Hwang and Shin
    [30]. The following sections address a brief description of all the architectural
    layers (Fig. 2). Fig. 2 Layers of edge–computing based smart city [30] Full size
    image The physical layer that is at the bottom of the model. It is made up of
    embedded systems (such as sensing devices) which collect file and transmit them
    to the architecture''s top layer, the network layer, for processing. The communication
    or central layer is the essential layer, also known as the networking layer. Basic
    networks are required for this layer, including wireless sensor networks (WSNs),
    the internet, and networking systems. The primary task of the network layer is
    to relay data from the top layer and to connect multiple entry points such as
    databases and smart administration. The database sheet, also known as the layer
    formed, works in tandem with the architecture and design upper layers. Application
    servers and cognitive processing systems form the foundation of this architecture.
    The primary purpose of this layer is to include intelligent computing strategies
    such as cloud/edge computing to meet application requirements. The virtualization
    layer, that provides a virtual network process for integrating hardware & software
    functions into a single logically customizable software-based entity. Network
    virtualization [31] can necessitate platform and resource virtualization to be
    effective. The analytics of data and mining layer translates the original data
    to valuable knowledge that improves network stability and provides predictions
    of system failure. This layer uses a range of data mining and analysis techniques,
    such as machine learning (ML) algorithms, to analyze data. It is the top layer
    of a secure IoT architecture and provides users with smart and smart applications
    and services tailored to their specific requirements. There are some typical examples
    of these applications. in Table 1. Table 1 IoT based approach and its application
    in various aspects of smart life [32, 33] Full size table 3 Privacy Concerns in
    Smart Cities Applications Major issues have recently arisen in a variety of application
    scenarios. In smart cities, for example, smart metering infrastructure will regulate
    residents’ private lives, such as their working hours [45]. Furthermore, network
    operators and device suppliers may have access to sensitive consumer data in smart
    homes and healthcare [46]. Moreover, smart mobility apps can gather massive data
    about the individual''s movement that can be helpful in determining their mobility
    pattern and position [47]. With such concerns, because cities are focused on being
    smarter, privacy and security have now become a critical concern in smart city-related
    applications. In recent decades, numerous concerning issues are already uncovered
    in numerous smart home applications [1]. In the parts that follow, we''ll mention
    and briefly address some of the most pressing security concerns. 3.1 Cyber Attacks
    Cyberattacks wreak havoc on the security of smart city systems, and they come
    in two flavours: active and passive. The aim of a passive attack is to use and
    learn various system database without affecting the system''s resources. The key
    focus of this attack is encrypted data to gain an understanding of the system''s
    configuration and behaviour, as well as its architecture. Since the data is not
    altered, it is difficult to identify these attacks. As a consequence, it is preferable
    to concentrate more on avoiding such attacks. Active attacks, but at the other
    hand, are designed to have an effect or improvement in the system''s operation
    by changing data or injecting inaccurate data into the database. Cyberattacks
    are mostly motivated by sabotage, deception, and espionage [48]. 3.2 Distributed
    Denial of Service Bots are one among the most recent problems to pose a significant
    threat to IoT-based systems. The Mirai botnet, for example, Modifies, deletes,
    and then spreads infection to other IoT devices on a wide range of computer data,
    including Router and Webcams, IP cameras, and printers. This may lead to an attack
    against the server by a distributed denial-of-service [49]. In contrast to many
    other smart devices such as smartphones and computers, IoT devices are generally
    built with almost no protection. Since this threat was not recognised until 2016,
    further research is needed to address it in the future. Otherwise, the IoT ecosystem
    would be harmed by this assault [50]. Ghafir et al. proposed a method for preventing
    such attacks in their paper [51]. To secure critical systems from malware attacks,
    the authors proposed BotDet, a botnet management & control traffic detection approach.
    They developed an alert correlation system for polling between the detection algorithms
    and developed four detection modules in order to identify unorthodox methods used
    in central botnet commands. The results show that, respectively, the proposed
    solution blends false and exact rates of over 13% and 82%, which demonstrate the
    real-time detection capability of the method. 3.3 Unauthorised Data Access Attackers
    may use intelligent surveillance systems to capture, distribute, and process personal
    data such as medical problems, identification and location of individuals in lifestyle
    and transportation. As a result, smart infrastructures are insecure to data breaches,
    to address this issue, smart cities will use a variety of security and privacy
    measures (such as anonymity, authentication, and access controls) to protect sensitive
    data from hacker attacks [52, 53]. On the other hand, most of the current privacy
    and protection policies can only protect against malicious attackers and do not
    take into account the location of possible attackers within [53]. A smart house,
    for example, may use a surveillance camera to detect fraud or suspicious activity.
    Internal attackers (employees as well as those with exposure to surveillance records,
    for example) may obtain personal data or open a door for outside hackers. As a
    consequence, it is difficult to create a security and privacy scheme in intelligent
    grids that balances privacy and competitiveness. 3.4 Autonomous Automobiles Driverless
    cars, also known as autonomous vehicles, are vehicles that drive themselves without
    the assistance of a human driver, using a variety of in-vehicle technology and
    equipment like cameras, Braking devices for global positioning, antilock systems,
    etc. The development of a safer society with a view both to reducing the number
    of road accidents and to all of the advantages of this increasingly evolving technology,
    has gained too much consideration in autonomous vehicles and presents severe privacy
    and security threats, if it is hacked, threatening citizen data security and life
    security in smart cities [54]. Elmaghraby and Losavio [54] In various situations,
    hackers may use safety faults to control the car, such as shutdown of the engine
    or braking. Furthermore, the massive amount of personal information gathered from
    an autonomous vehicle''s computer system could result in issues of critical protection
    and privacy. 4 Privacy and Security Solutions It is difficult to safeguard the
    privacy of the inhabitants in smart cities due to the number and complexity of
    the apps, the fact that each person carries multiple devices, and communications
    options, and the fact that no organisation, including the city government, is
    using one technology for more than one function. While a large part of the risk
    with the exposure of information is found in the application itself, there is
    another equal portion located in the way that an application utilises the fundamental
    technologies. Methods of cashless payments (such as smartcards) on public transportation
    does not poses a privacy risk but can be enacted in a privacy-invasive manner.
    This section identifies a set of user privacy solutions that are used to address
    critical threats to data security in smart environments (Fig. 3). Fig. 3 Privacy
    Solutions for Smart Cities [55] Full size image 4.1 Encryption Information privacy
    is preserved through encryption, which shields messages or data from interception
    and disclosure. Public-key encryption requires two participants to have an able
    to share decryption key, the standard symmetric encryption allows encryption,
    but only associated private keys can decrypt the messages using a public key.
    Public key encryption is a type of ID encryption where any random string can be
    a public key. You can encrypt text for a receiver safely using this method, even
    if a public and private key pair has not been created. Private services that use
    one''s identity are able to discover one''s information by means of identity-based
    encryption. Both the private keys and cipher text are expanded by this type of
    public-key encryption is an attribute-based encryption depends on the users. If
    the key attributes for the user are the same as the cipher text attributes, the
    user is able to decrypt the message. Therefore, increased level of control over
    encrypted files can be implemented by using this system. where information needs
    to be encrypted for multiple recipient groups, such as medical personnel with
    the same sets of attributes, using attribute-based encryption can be employed
    to include patients, doctors, nurses, and physicians. 4.2 Anonymous or Pseudonymous
    Credentials Anonymous or pseudonymous digital credentials It is therefore feasible
    to give out a set of digital credentials which keep the sender anonymous but give
    some other attribute, like age or nationality, such as whether the email is fake
    or not, without making him or her personally identifiable. To be sure, the message
    has not been changed, an authority has signed messages even if they cannot read
    the contents Thus, the signature has proven the identity of the sender, but the
    same doesn’t make the sender''s identity obvious. use biometric signatures to
    make and decoy car signing messages to ensure that the origin of the message has
    been proved, and conceal the identity of vehicle owners [53]. There is no need
    for a real-name system [55] in a system where users can obtain credentials from
    anyone they want and where they can use those credentials anonymously. Although
    an attribute-based authentication method relies on un pseudonymous credentials,
    it provides anonymous attributions as well access credentials that authenticate
    the users claims to cloud providers in terms of attributes that are useful in
    other purposes, for example, allowing users to log in without exposing their identifications.
    A pseudonymous identity can be established using the public key infrastructure.
    Each user gets their long-term certificate authority issued, as well as a pool
    of different short-term ones, anonymous certificates. 4.3 Biometrics Biometrics
    are used for authenticating Internet of Things-based infrastructures in almost
    all of them. Because it heavily depends on human behaviour, this system tends
    to work on an awful well with bio-data from fingerprints, faces, voices, and signatures,
    it is considered primitive. It''s also one of the most precise, high-performance
    and efficient methods which also support brain authentication [56, 57], as Amin
    et al. proposed an additional protocol to safeguard the privacy for data in storage
    devices, to restrict both mutually untrusted users’ abilities to expand their
    knowledge of that data. Additional data protection measures are outlined in this
    section should be taken under consideration if bio-based methods haven''t been
    used properly. presented an example in the report of Natgunathan et al. [58] in
    the section on which it was stated that new biometric methods, like the one described
    in, should be adopted that would need to secure the privacy of users. Natgunathan
    et al. [58] not only have potential for general purpose e-commerce and have revealed
    that such biometrics will have amazing practical use, biometrics can be used for
    exchanging information with an unmanned aerial vehicle (UAV) and a control station.
    Sing and Pei et al. [59] provided an example, which used resources for UAV threat
    mitigation that are extremely low-cost, as a method of improving safety, by presenting
    a methodology that can be developed with biometrics. In any case where cybersecurity
    attacks are relevant, the proposed strategy was found to be applicable is demonstrated
    to be effective is stated to be in this study: It was shown that the proposed
    strategy could be used to address issues that affect all sorts of unmanned aerial
    vehicles [60]. 4.4 Data Mining Whereby assisting in the automation, artificial
    intelligence is concerned, machine learning is also endeavouring to do everything
    possible so that systems will be able to learn from experience. Today, current
    efforts of organisations are investing in machine learning for IoT environments
    in order to further strengthen their intrusion detection systems [1]. WSN were
    found in a research study by Alsheikh et al. [61] to demonstrate the benefit of
    applying ML techniques to increase the protection for an Internet of Things. Luo
    et al. also developed a machine-driven method to increase data security in WSNs,
    as was also done by Luo et al. [62] for some complex system vulnerabilities. Another
    novel model was also proposed by Aminato et al. [63], which involves the use of
    ML algorithms, to be able to find MAC or phishing attacks in a Wi-Fi network.
    4.5 IoT Regulations One of the critical features of the Internet of Things is
    the diverse collection of technologies, like (M2M) or machine 2 machine, wireless
    sensor, and radio-frequency identification (RFID) communication. Although, this
    same IoT industry is not currently subject to regulation. The outcome of this
    has had more far-reaching security and privacy ramifications. The application
    of devices with compromised security in numerous industries, including the armed
    forces and healthcare, like that of the Internet of Things, is especially valuable,
    because of the numerous layers is so critical to ensure secure, and because it''s
    so simple to hack [64]. While the industry has been aware of the problems associated
    with IoT security and privacy, recent attacks have increased awareness of the
    industry''s concerns with internet-connected devices like Jerkins [65] and others
    have given us another opportunity to showcase how necessary and advantageous security
    safeguards are, particularly for unintended actions and access to end users’ privacy.
    5 Suggestions for Secure Structure Thousands and thousands of resource-constrained
    systems make up an Internet of things major infrastructure that operate over heterogeneous
    networks (HetNets). The core elements of a smart city architecture based on IoT
    are shown. Black networks (BNs), a secure software-defined networking (SDN) controller
    known as TTP, a centralised registry (UR), and a key management system are among
    the components (KMS). These four components have different roles in the architecture
    and are responsible for safe validation and connectivity through HetNets. Data
    protection, honesty, confidentiality, and authentication are all handled by black
    networks. The reliable third party is responsible for efficient IoT nodes routing
    while UR serves to store a database of various devices including nodes, sensors
    and gateways. Last but not least, KMS is in charge of IoT networks (Fig. 4). Fig.
    4 Layout of a secure architecture [65] Full size image 5.1 Black Networks In an
    IoT protocol, black networks are used to protect data that includes meta-data
    linked to each packet. They can protect data using a variety of encryption methods,
    such as Grain128a or AES in the EAX or OFB modes. At both the connection and network
    layers, black networks allow identification and secure connectivity. Furthermore,
    because of the secure messages at the network and connection layer, BNs can minimise
    a huge spectrum of possible attacks, Provision in IoT-based networks of confidentiality,
    completeness and privacy. 5.2 Software-Defined Networking/SDN Controller A networking
    model that offers numerous methods to improve the network security is a network
    specified by software [66]. In this architecture, a software Defined Networking
    Controller is used to link network devices with various protocols. Open Flow is
    the most frequently used protocol to communicate between network devices and the
    SDN controller. The primary objective of the SDN controller is to tackle the privacy
    and a security issue faced by IoT-based BNs. Open Flow protocol allows a safe
    connection to the network devices by the SDN controller. An IoT-based network
    model with a stable SDN controller is able to cope with sleep and/or wake cycles.
    5.3 Unified Registry/UR The main objective of the UR is to combine various technologies
    to create intelligent cities IoT infrastructures. The definition for mobile and
    cross-system IoT nodes can apply to a visiting UR. The consideration of fixed
    nodes by wireless machines by a variety of IoT networks is important from a security
    perspective. Wi-Fi is two WLAN network networks that are used by smart cities.
    Long-term evolution is two. Moreover, a number of protocols like IPv6 via wireless
    personal area with lower power capacity, ZigBee, and Bluetooth can be used in
    smart settings as well as a number of methods of addressing such as 128-bit IPv6
    addressing, radio wave recovery and 48-bit addressing. All these systems, protocols
    and schemes require one attribute for identity protection, authentication and
    authorisation. In addition, wireless communication schemes, protocols and approach
    addresses need to be translated, and this process is facilitated by UR. The implementation
    of a UR is difficult due to numerous regulatory, functional and security issues.
    An IoT node logical entity can therefore be used in a highly distributed way,
    which addresses the data and attribute sets of the smart city network. 5.4 System
    of Key Management It is the way different working aspects of a cryptographic key
    for a cryptosystem are treated. It is an important part of any defence infrastructure.
    Resource restricted devices are used to communicate safely using a symmetrical
    shared key in IoT settings. Store and use keys securely, should be done. When
    used on a distributed mobile device, key distribution is a critical issue. In
    intelligent cities, the hierarchical KMS makes it possible to distribute the keys
    effectively. It is necessary for IoT device communications to be authenticated.
    Furthermore, different security protocols and standards are needed for IoT applications
    because they can deal with different security vulnerabilities. Message queuing,
    telemetry transport, and restricted application protocol are some of the most
    widely used IoT protocols that lack built-in security mechanisms. Constrained
    application protocols and other protocols, on the other hand, may use protocols
    like protected sockets layer to improve the security, which means that single-factor
    authentication is insufficient for safe communication between IoT devices. As
    a consequence, providing a KMS with a two-factor authentication system is needed
    to reduce risk and enhance security in IoT networks. Apart from it, there are
    various requirements that are needed for the privacy of edge- computing based
    smart cities that are mentioned in Table 2. Table 2 Requirements and applications
    of edge-computing based smart cities [67] Full size table 6 Future Challenges
    and Open Research Directions A number of strategies have been devised to handle
    the issue of secure and private data usage in smart cities recently. Though, the
    implementation for some of these techniques is unrealistic. In urban infrastructures,
    because of the presence of energy and resource constraints, more-based systems,
    it is not possible to put in place strong and effective security protocols. Thus,
    heavier, robust security systems must be examined to ensure they don''t impose
    too much of a burden while still providing a strong level of protection. Although
    much has been learned about data privacy and security in the last decade, the
    world still has some unsettled questions to be addressed. 6.1 Rapid Increase in
    Data According to IDC, a study from early 2013, the rate of increase in smart
    devices and big data will lead to greater concern over the problem of cities such
    applications like intelligent systems that demand higher levels of security and
    privacy. That is where attackers are able to draw on the human intelligence, obtain
    or purchase big data, and misuse the information as well as breaching the privacy
    of the data holders. Many means of detection for attackers are there, for example,
    methods that use cryptographic techniques such as encrypting fraudulent data or
    scrambling to avoid detection. As well, it would be useful to make the traceability
    of the network better so that it could be monitored and controlled more effectively.
    It is necessary to have data privacy, safety and security to ensure the completeness
    of the data as well. 6.2 The Adoption of Cloud/fog for Smart Cities Internet of
    Things (IoT)-based cloud computing allows devices to keep a huge amount of data
    locally rather than sending it to a centralised storage location for possible
    destruction. Even though the process of sending that much data is difficult, with
    regards to space, frequency, and potency, it must be done because this is extremely
    valuable. Fog computing enabled them to suggest that IBM apply methods to data
    in the cloud applications that allow large amounts of data to be processed at
    the network perimeter instead of relocating that amount of information to the
    cloud. She was very concerned that he was more concerned about her advancement
    as a poet than his job as a software engineer. There are a variety of different
    approaches that smart cities may take to accomplishing sustainable development
    requirements, including the implementation of smart agriculture, [76] healthcare,
    [77] water management, and wastewater infrastructure [78]. 6.3 Crowd Sensing Crowd
    sensing (CS) is a medium for collecting and sharing data on their shared interests
    through a community of users with devices. Digital gadgets such as Smartphone
    and other such technology are commonly referred to as mobile CS as surveillance,
    networking and interaction systems, and crowd sensing (MCS) [79]. Mobile Crowd
    Sensing can improve the quality of life of people in a variety of fields, including
    healthcare and transport. Despite all the advantages of MCS, data security and
    user confidence are serious problems [79]. As a result, these problems in intelligent
    cities are essential to CS, and must be thoroughly addressed in future studies.
    In smart cities, MCS already has a broad variety of social and environmental applications.
    In the climate, MCS is used to measure the level of contamination in a community
    and the water level in creeks and also to map the natural habitats of wildlife
    [80]. In addition, users share information through a database server in social
    MCS to provide a better sense of group problems. 6.4 Confidentiality and Authentication
    Authentication is required in smart systems to ensure that only approved users
    can access services in heterogeneous systems [81]. Smart city IoT devices can
    authenticate the network, other nodes in the network, other devices and management
    station messages. Furthermore, since the amount of data that needs to be authenticated
    is rapidly increasing, it is critical to creating efficient and more advanced
    technology to help precise and real-time validation in smart cities. 6.5 IoT Networks
    The Internet of Things (IoT) can be thought of as HetNets, in which various networks
    such as mobile networks, social networks, the internet, and relevant factor are
    interconnected and linked and serve users better. Because of this dynamic world,
    it is crucial to perform research on successful solutions to address the most
    recent challenges in smart city security and privacy [60, 82, 83]. The development
    of successful preventive strategies is critical in this regard. Furthermore, modelling
    data spread patterns in WSNs is advantageous [84, 85]. 6.6 Accessibility and Integrity
    Services in smart cities ought to be accessible when they are needed. They should
    also be able to keep up their effective acts when under attack. Furthermore, a
    smart device in a smart city should be capable of detecting unusual conditions
    and preventing further system harm. As a result, robust security techniques must
    be investigated in order to cope with increasingly sophisticated attacks [86].
    Furthermore, the security of IoT devices and the information shared between them
    and the cloud is crucial [87]. In smart cities, communications take place between
    different devices; as a result, data can be easily damaged if it is not properly
    secured during transmission. As a result, it''s critical to look at successful
    methods for ensuring data privacy in IoT system communication in smart cities
    [88]. 7 Conclusion Smart cities can boost the accessibility of modern societies
    while also improving people''s quality of life and well-being. Cyber Security
    issues have grown in importance as a result of the introduction of numerous smart
    systems, necessitating effective and efficient solutions. Furthermore, when designing
    and implementing new smart systems, it is critical to understand security and
    privacy risks. In this paper we have analyzed and discussed safety and privacy
    issues in smart city information-centered applications. We went through the most
    common applications for smart cities at the start. The general requirements for
    smart city services were then provided for security and privacy concerns. We have
    also proven a number of privacy and safety solutions for a range of applications
    in intelligent cities that focus on information. The ongoing use of innovation
    to provide people with networks and interactions and to implement new revolutionary
    systems and channels, many of which are accessible through the use of smartphones,
    risks disenfranchising key segments of the population. The rapid pace of technology,
    which can deliver new and exciting communication methods with healthcare providers,
    banks, insurance companies, utility providers and transportation companies, is
    probably an obstacle to adoption among the elderly, who lack the faith and enthusiasm
    that younger demographic groups are better informed about the technology. Finally,
    we have discussed some recent research questions to be investigated in detail
    as the performance of intelligent cities is increased in terms of safety and security.
    References Cui, L., Xie, G., Qu, Y., Gao, L., Yang, Y.: Security and privacy in
    smart cities: challenges and opportunities. IEEE Access. 6, 46134–46145 (2018)
    Article   Google Scholar   Ever, E., Al-Turjman, F.M., Zahmatkesh, H., Riza, M.:
    Modelling green HetNets in dynamic ultra-large-scale applications: a case-study
    forfemtocells in smart-cities. Comput. Netw. 128, 78–93 (2017) Article   Google
    Scholar   Li, Y., Lin, Y., Geertman, S.: The development of smart cities in China.
    In: Proceedings of the 14th International Conference on Computersin Urban Planning
    and Urban Management. Cambridge, MA (2015) Google Scholar   Sharma, G., Kumar,
    A., Saini, A., Upadhyay, A.: Inventors. IoT based smart plant leaf pathology classification
    and detection using artificial intelligence. India Patent. 202011055879 (2021)
    Google Scholar   Sharma, G., Kumar, A., Upadhyay, A.: Inventors. Development of
    scene perception system for visually impaired People using IOT Based System. India
    Patent. 2020111009212 (2021) Google Scholar   Wang, M., Wu, J., Li, G., Li, J.,
    Li, Q., Wang, S.: Toward mobility support for information-centric IoV in smart
    city using fog computing. In: Paper Presented at IEEE International Conference
    on Smart Energy Grid Engineering (SEGE). Oshawa, Canada (2017) Google Scholar   Sheng,
    Z., Yang, S., Yu, Y., Vasilakos, A.V., McCann, J.A., Leung, K.K.: A survey on
    the ietf protocol suite for the Internet of Things: standards, challenges, and
    opportunities. IEEE Wirel. Commun. 20(6), 91–98 (2013). Vasilakos, A.V., Li, Z.,
    Simon, G., You, W.: Information centric network: research challenges and opportunities.
    J. Netw. Comput. Appl. 52, 1–10 (2015) Google Scholar   Mars, D., Gammar, S.M.,
    Lahmadi, A., Saidane, L.A.: Using information centric networking in internet of
    things: a survey. Wirel. Pers. Commun. 105, 87–103 (2019) Article   Google Scholar   Lindgren,
    A., Ben Abdesslem, F., Ahlgren, B., Schelén, O., Malik, A.: Applicability and
    trade offs of information-centric networking for efficient IoT (2015) Google Scholar   Hahm,
    O., Baccelli, E., Schmidt, T.C., Wahlisch, M., Adjih, C.: A named data network
    approach to energy efficiency in IoT. In: Paper presented at: 2016 IEEE Globecom
    Workshops (GC Wkshps). Washington, DC (2016) Google Scholar   Zhang, K., Ni, J.,
    Yang, K., Liang, X., Ren, J., Shen, X.S.: Security and privacy in smart city applications:
    challenges and solutions. IEEE Commun. Mag. 55(1), 122–129 (2017) Article   Google
    Scholar   Biswas, K., Muthuk kumarasamy, V.: Securing smart cities using blockchain
    technology. In: Paper presented at: 2016 IEEE 18th InternationalConference on
    High Performance Computing and Communications, IEEE 14th International Conference
    on Smart City, IEEE 2nd International Conference on Data Science and Systems (HPCC/SmartCity/DSS).
    Sydney, Australia (2016) Google Scholar   Perevezentsev, M., Sullivan, F.: Strategic
    opportunity analysis of the global smart city market. Technical Report. Frost
    and Sullivan (2013) Google Scholar   Albino, V., Berardi, U., Dangelico, R.M.:
    Smart cities: definitions, dimensions, performance, and initiatives. J. Urban
    Technol. 22(1):3–21 (2015) Google Scholar   Smart Cities Require Smarter Cybersecurity.
    Technical Report. http://www.govtech.com/ (2016) He, Y., Yu, F.R., Zhao, N., Leung,
    V.C., Yin, H.: Software-defined networks with mobile edge computing and caching
    for smart cities: a big data deep reinforcement learning approach. IEEE Commun.
    Mag. 55(12), 31–37 (2017) Article   Google Scholar   Maamar, Z., Baker, T., Sellami,
    M., Asim, M., Ugljanin, E., Faci, N.: Cloud versus edge: who serves the Internet-of-Things
    better. Internet Technol. Lett. 1(5), e66 (2018) Google Scholar   Kikuchi, Y.,
    Shibata, Y.: Mobile cloud computing for distributed disaster information system
    in challenged communication environment. In: Proceeding of IEEE 29th International
    Conferences on Advanced Information Networking and Applications Workshops (WAINA),
    pp. 512–517 (2015) Google Scholar   Mahmud, R., Kotagiri, R., Buyya, R.: Fog computing:
    a taxonomy, survey and future directions. In: Internet of Everything: Algorithms,
    Methodologies, Technologies and Perspectives. Singapore: Springer Nature Singapore
    Pte Ltd, pp. 103–130 (2018) Google Scholar   Liang, K., Zhao, L., Chu, X., Chen,
    H.H.: An integrated architecture for software defined and virtualized radio access
    networks with fog computing. IEEE Network 31(1), 80–87 (2017) Article   Google
    Scholar   Chaitanya, K.S., Kumar, A., Kumar, R.: Secure storage of data using
    cryptography for network. Int. J. Eng. Sci. Technol. 4(4), 1638–1645 (2012) Google
    Scholar   Abbas, N., Asim, M., Tariq, N., Baker, T., Abbas, S.: A mechanism for
    securing IoT-enabled applications at the fog layer. J. Sens. Actuator Netw. 8(1),
    16 (2019) Article   Google Scholar   Cui, S., Belguith, S., De Alwis, P., Asghar,
    M.R., Russello, G.: Collusion defender: preserving subscribers’ privacy in publish
    and subscribe systems. IEEE Trans. Dependable Secure Comput. 1 (2019) Google Scholar   Ferraz,
    F.S., Sampaio, C., Ferraz, C.: Towards a smart-city security architecture: proposal
    and analysis of impact of major smart-city security issues. In: Proceedings of
    the First International Conference on Advances and Trends in Software Engineering
    (SOFTENG). Barcelona, Spain (2015) Google Scholar   Butt, T.A., Afzaal, M.A.:
    Security and privacy in smart cities: issues and current solutions. In: Smart
    Technologies and Innovation for a Sustainable Future: Proceedings of the 1st American
    University in the Emirates International Research Conference, Dubai, UAE 2017.
    Cham, Switzerland. Springer Nature Switzerland AG, pp. 317–323 (2019) Google Scholar   Gharaibeh,
    A., Salahuddin, M.A., Hussini, S.J., et al.: Smart cities: a survey on data management,
    security, and enabling technologies. IEEE Commun. Surv. Tutor. 19(4), 2456–2501
    (2017) Google Scholar   Eckhoff, D., Wagner, I.: Privacy in the smart city—applications,
    technologies, challenges, and solutions. IEEE Commun. Surv. Tutor. 20(1), 489–516
    (2018) Article   Google Scholar   Sicari, S., Rizzardi, A., Grieco, L.A., Coen-Porisini,
    A.: Security, privacy and trust in internet of things: the road ahead. Comput.
    Netw. 76, 146–164 (2015) Article   Google Scholar   Tan, L., Wang, N.: Future
    internet: the internet of things. In: Paper presented at: 2010 3rd International
    Conference on Advanced Computer Theory and Engineering (ICACTE). Chengdu, China
    (2010) Google Scholar   Hwang, I., Shin, D.: Application level network virtualization
    using selective connection. In: Paper presented at: IEEE International Conference
    on Consumer Electronics (ICCE). Las Vegas, NV (2018) Google Scholar   Anoh, K.,
    Ikpehai, A., Bajovic, D., et al.: Virtual microgrids: a management concept for
    peer-to-peer energy trading. In: Proceedings of the 2nd ACM International Conference
    on Future Networks and Distributed Systems (ICFNDS). Amman, Jordan (2018) Google
    Scholar   Zanella, A., Bui, N., Castellani, A., Vangelista, L., Zorzi, M.: Internet
    of Things for smart cities. IEEE Internet Things J. 1(1), 22–32 (2014) Article   Google
    Scholar   Li, X., Lu, R., Liang, X., Shen, X., Chen, J., Lin, X.: Smart community:
    an internet of things application. IEEE Commun Mag. 49(11), 68–75 (2011) Article   Google
    Scholar   Ni, J., Lin, X., Zhang, K., Shen, X.: Privacy-preserving real-time navigation
    system using vehicular crowdsourcing. In: Paper presented 2015 IEEE 84th Vehicular
    Technology Conference (VTC-Fall). Montreal, Canada (2016) Google Scholar   Catarinucci,
    L., de Donno, D., Mainetti, L., et al.: An IoT-aware architecture for smart healthcare
    systems. IEEE Internet Things J. 2(6), 515–526 (2015) Article   Google Scholar   Fajardo,
    J.T.B., Yasumoto, K., Shibata, N., Sun, W., Ito, M.: Disaster information collection
    with opportunistic communication and message aggregation. J. Inf. Proc. 22(2),
    106–117 (2014) Google Scholar   Aouini, I., Azzouz, L.B.: Smart grids cyber security
    issues and challenges. Int. J. Electron. Commun. Eng. 9(11), 1263–1269 (2015)
    Google Scholar   Petinrin, J.O., Shaaban, M.: Smart power grid: technologies and
    applications. In: Paper presented at: 2012 IEEE International Conference onPower
    and Energy (PECon). Kota Kinabalu, Malaysia (2012) Google Scholar   Vlahogianni,
    E.I., Kepaptsoglou, K., Tsetsos, V., Karlaftis, M.G.: A real-time parking prediction
    system for smart cities. J. Intell. Trans. Syst. 20(2), 192–204 (2016) Article   Google
    Scholar   Tang, B., Chen, Z., Hefferman, G., Wei, T., He, H., Yang, Q.: A hierarchical
    distributed fog computing architecture for big data analysis in smartcities. In:
    Proceedings of the ASE Big Data and Social Informatics (ASE BD&SI). Kaohsiung,
    Taiwan (2015) Google Scholar   Ding, D., Conti, M., Solanas, A.: A smart health
    application and its related privacy issues. In: Paper presented at: Smart City
    Security and Privacy Work shop (SCSP-W). Vienna, Austria (2016) Google Scholar   Gungor,
    V.C., Sahin, D., Kocak, T., et al.: Smart grid technologies: communication technologies
    and standards. IEEE Trans. Ind. Inform. 7(4), 529–539 (2011) Article   Google
    Scholar   Bello, O., Zeadally, S.: Toward efficient smartification of the internet
    of things (IoT) services. Future Gener. Comput. Syst. 92, 663–673 (2019) Article   Google
    Scholar   Mohanty, S.P., Choppali, U., Kougianos, E.: Everything you wanted to
    know about smart cities: the Internet of Things is the backbone. IEEE Consumer
    Electron Mag. 5(3), 60–70 (2016) Google Scholar   Gong, T., Huang, H., Li, P.,
    Zhang, K., Jiang, H.: A medical healthcare system for privacy protection based
    on IoT. In: Paper Presented 2015 Seventh IEEE International Symposium on Parallel
    Architectures, Algorithms and Programming (PAAP). Nanjing, China (2015) Google
    Scholar   Ning, Z., Xia, F., Ullah, N., Kong, X., Hu, X.: Vehicular social networks:
    enabling smart mobility. IEEE Commun. Mag. 55(5), 16–55 (2017). Wagner, M., Kuba,
    M., Oeder, A.: Smart grid cyber security: a German perspective. Paper presented
    at: IEEE International Conference onSmart Grid Technology, Economics and Policies
    (SG-TEP); Nuremberg, Germany (2012) Google Scholar   Delgado-Gomes, V., Martins,
    J.F., Lima, C., Borza, P.N.: Smart grid security issues. In: Paper presented at:
    2015 9th IEEE International Conference on Compatibility and Power Electronics
    (CPE). Costa da Caparica, Portugal (2015) Google Scholar   Zargar, S.T., Joshi,
    J., Tipper, D.: A survey of defense mechanisms against distributed denial of service
    (DDoS) flooding attacks. IEEE Commun. Surv. Tutor. 15(4), 2046–2069 (2013) Article   Google
    Scholar   Ghafir, I., Prenosil, V., Hammoudeh, M., et al.: BotDet: a system for
    real time botnet command and control traffic detection. IEEE Access. 6, 38947–38958
    (2018) Article   Google Scholar   Hutson, M.: A matter of trust. Science 358(6369),
    1375–1377 (2017) Article   Google Scholar   Weber, R.H.: Internet of things–new
    security and privacy challenges. Comput. Law Secur. Rev. 26(1), 23–30 (2010) Article   Google
    Scholar   Chaum, D.: Blind Signatures for Untraceable Payments. In: Chaum, D.,
    Rivest, R.L., Sherman, A.T. (eds.) Advances in Cryptology, pp. 199–203. Springer,
    Boston, MA (1983) Chapter   Google Scholar   Schaub, F., Kargl, F., Ma, Z., Weber,
    M.: V-tokens for conditional pseudonymity in VANETs. In: IEEE Wireless Communication
    and Networking Conference (WCNC) IEEE Sydney, Australia, pp.1–6 (2010) Google
    Scholar   Elmaghraby, A.S., Losavio, M.M.: Cyber security challenges in smart
    cities: safety, security and privacy. J. Adv. Res. 5(4), 491–497 (2014) Article   Google
    Scholar   Zhou, L., Su, C., Chiu, W., Yeh, K.H.: You think, therefore you are:
    transparent authentication system with brainwave-oriented bio-featuresfor IoT
    networks. IEEE Trans. Emerg. Top Comput. 1 (2017) Google Scholar   Amin, R., Sherratt,
    R.S., Giri, D., Islam, S.H., Khan, M.K.: A software agent enabled biometric security
    algorithm for secure file access in consumer storage devices. IEEE Trans. Consum.
    Electron. 63(1), 53–61 (2017) Article   Google Scholar   Sharma, P., Walia, G.S.,
    Rohilla, R.: Alignment-Free Cancelable Biometric: A Contemporary Survey, Opportunities
    & Challenges. In: 2020 3rd International Conference on Intelligent Sustainable
    Systems (ICISS), Thoothukudi, India, pp. 881–889 (2020). https://doi.org/10.1109/ICISS49785.2020.9316054
    Natgunanathan, I., Mehmood, A., Xiang, Y., Beliakov, G., Yearwood, J.: Protection
    of privacy in biometric data. IEEE Access 4, 880–892 (2016) Google Scholar   Singandhupe,
    A., La, H.M., Feil-Seifer, D.: Reliable security algorithm for drones using individual
    characteristics from an EEG signal. IEEE Access 6, 22976–22986 (2018) Google Scholar   Sharma,
    P., Walia, G.S., Rohilla, R.: Recent advancement in cancelable biometric for user
    recognition: a brief survey. In: 2020 9th International Conference System Modeling
    and Advancement in Research Trends (SMART), Moradabad, India, pp. 137–146 (2020).
    https://doi.org/10.1109/SMART50582.2020.9337107 Alsheikh, M.A., Lin, S., Niyato,
    D., Tan, H.P.: Machine learning in wireless sensor networks: algorithms, strategies,
    and applications. IEEE Commun. Surv. Tutor. 16(4), 1996–2018 (2014) Article   Google
    Scholar   Luo, X., Zhang, D., Yang, L.T., Liu, J., Chang, X., Ning, H.: A kernel
    machine-based secure data sensing and fusion scheme in wireless sensornetworks
    for the cyber-physical systems. Futur. Gener. Comput. Syst. 61, 85–96 (2016) Article   Google
    Scholar   Aminanto, M.E., Choi, R., Tanuwidjaja, H.C., Yoo, P.D., Kim, K.: Deep
    abstraction and weighted feature selection for Wi-Fi impersonation detection.
    IEEE Trans. Inf. Forensics Secur. 13(3), 621–636. 228–241 (2018) Google Scholar   Saleem,
    J., Hammoudeh, M., Raza, U., Adebisi, B., Ande, R.: IoT standardisation: challenges,
    perspectives and solution. In: Proceedings of the 2nd ACM International Conference
    on Future Networks and Distributed Systems (ICFNDS). Amman, Jordan (2018) Google
    Scholar   Jerkins, J.A.: Motivating a market or regulatory solution to IoT insecurity
    with the Mirai botnet code. In: Paper presented 7th IEEE Annual Computing and
    Communication Workshop and Conference (CCWC). Las Vegas, NV (2017) Google Scholar   Flauzac,
    O., González, C., Hachani, A., Nolot, F.: SDN based architecture for IoT and improvement
    of the security. In: Paper presented 201529th IEEE International Conference on
    Advanced Information Networking and Applications Workshops. Gwangju, South Korea
    (2015) Google Scholar   Wang, Q., Ren, K., Yu, S., Lou, W.: Dependable and secure
    sensor data storage with dynamic integrity assurance. ACM Trans. Sens. Netw. 8(1),
    9 (2011) Google Scholar   Kursawe, K., Danezis, G., Kohlweiss, M.: Privacy-friendly
    aggregation for the smart-grid. In: Proceedings of the Privacy Enhancing Technologies:
    11th Inter-national Symposium, PETS 2011, Waterloo, ON, Canada, July 27–29. Berlin,
    Germany, Springer, Heidelberg, 175–191 (2011) Google Scholar   Shi, J., Zhang,
    R., Liu, Y., Zhang, Y.: PriSense: privacy-preserving data aggregation in people-centric
    urban sensing systems. In: Proceedings IEEE INFOCOM. San Diego, CA (2010) Google
    Scholar   Gürses, S., Troncoso, C., Diaz, C.: Engineering privacy by design. Comput.
    Priv. Data Prot. 14(3), 25 (2011) Google Scholar   Le Métayer D. Privacy by design:
    a formal framework for the analysis of architectural choices. In: Proceedings
    of the Third ACMConference on Data and Application Security and Privacy (CODASPY);
    2013; San Antonio, TX. Google Scholar   Monreale, A., Rinzivillo, S., Pratesi,
    F., Giannotti, F., Pedreschi, D.: Privacy-by-design in big data analytics and
    social mining. EPJ Data Sci. 3(1), 10 (2014) Article   Google Scholar   Denning,
    T., Matuszek, C., Koscher, K., Smith, J.R., Kohno, T.: A spotlight on security
    and privacy risks with future household robots: attacksand lessons. In: Proceedings
    of the 11th ACM International Conference on Ubiquitous Computing (UbiComp). Orlando,
    FL (2009) Google Scholar   Jha, S., Kruger, L., Shmatikov, V.: Towards practical
    privacy for genomic computation. In: Paper presented at: 2008 IEEE Symposium on
    Security and Privacy (SP). Oakland, CA (2008) Google Scholar   Chakrabarty, S.,
    Engels, D.W.: A secure IoT architecture for smart cities. In: Paper presented
    2016 13th IEEE Annual Consumer Communications and Networking Conference (CCNC).
    Las Vegas, NV (2016) Google Scholar   Commonwealth Scientific and Industrial Research
    Organisation (CSIRO).: Phenonet: Distributed Sensor Network for Phenomics Supportedby
    High Resolution Plant Phenomics Centre, CSIRO ICT Centre, and CSIRO Sensor and
    Sensor Networks TCP. Technical Report (2011) Google Scholar   Zao, J.K., Gan,
    T.T., You, C.K., et al.: Augmented brain computer interaction based on fog computing
    and linked data. In: Paper presented 2014 International Conference on Intelligent
    Environments. Shanghai, China (2014) Google Scholar   Mishra, A., Gupta, N., Gupta,
    B.B.: Defense mechanisms against DDoS attack based on entropy in SDN-cloud using
    POX controller. Telecomm. Syst. 1–16 (2021) Google Scholar   He, D., Chan, S.,
    Guizani, M.: User privacy and data trustworthiness in mobile crowd sensing. IEEE
    Wirel. Commun. 22(1), 28–34 (2015) Article   Google Scholar   Song, H., Srinivasan,
    R., Sookoor, T., Jeschke, S.: Smart Cities: Foundations, Principles, and Applications.
    John Wiley and Sons, Hoboken, NJ (2017) Book   Google Scholar   He, D., Zeadally,
    S., Kumar, N., Lee, J.H.: Anonymous authentication for wireless body area networks
    with provable security. IEEE Syst. J. 11(4), 2590–2601 (2017) Article   Google
    Scholar   Tewari, A., Gupta, B.B.: Security, privacy and trust of different layers
    in internet-of-things (IoTs) framework. Futur. Gener. Comput. Syst. 108, 909–920
    (2020) Article   Google Scholar   Esposito, C., Ficco, M., Gupta, B.B.: Blockchain-based
    authentication and authorization for smart city applications. Inf. Proc. Manag.
    58(2), 102468 (2021) Google Scholar   Li, D., Deng, L., et al.: A novel CNN based
    security guaranteed image watermarking generation scenario for smart city applications.
    Inf. Sci. 479, 432–447 (2019) Article   Google Scholar   Jiang, F., Fu, Y., Gupta,
    B.B., Liang, Y., Rho, S., Lou, F., Tian, Z.: Deep learning based multi-channel
    intelligent attack detection for data security. IEEE Trans. Sustain. Comput. 5(2),
    204–212 (2018) Article   Google Scholar   Gupta, B.B., Quamara, M.: An overview
    of Internet of Things (IoT): Architectural aspects, challenges, and protocols.
    Concurrency and Computation: Practice and Experience, 32(21), e4946 (2020) Google
    Scholar   Bhushan, K., Gupta, B.B.: Distributed denial of service (DDoS) attack
    mitigation in software defined network (SDN)-based cloud computing environment.
    J. Ambient. Intell. Humaniz. Comput. 10(5), 1985–1997 (2019) Article   Google
    Scholar   Stergiou, C.L., Psannis, K.E., Gupta, B.B.: IoT-based Big Data secure
    management in the Fog over a 6G Wireless Network. IEEE Int. Things J. (2020) Google
    Scholar   Zhang, K., Lu, R., Liang, X., Qiao, J., Shen, X.S.: PARK: a privacy-preserving
    aggregation scheme with adaptive key management for smart grid. In: Paper presented
    at: 2013 IEEE/CIC International Conference on Communications in China (ICCC).
    Xi''an, China (2013) Google Scholar   McGregory, S.: Preparing for the next DDoS
    attack. Netw. Secur. 2013(5), 5–6 (2013) Article   Google Scholar   Brewster,
    T.: Smart or stupid: will our cities of the future be easier to hack. The Guardian
    (2014) Google Scholar   Cédric, L.B., Darra, E., Bachlechner, D., et al.: Cyber
    security for smart cities-an architecture model for public transport. ENISA (2015)
    Google Scholar   Angrishi, K.: Turning the internet of things (IoT) into the internet
    of vulnerabilities (IoV): IoT botnets. arXiv:1702.03681 (2017) Wang, Y., Wan,
    J., Guo, J., Cheung, Y.M., Yuen, P.C.: Inference-based similarity search in randomized
    Montgomery domains for privacy-preserving biometric identification. IEEE Trans.
    Pattern Anal. Mach. Intell. 40(7), 1611–1624 (2018) Google Scholar   Carlin, A.,
    Hammoudeh, M., Aldabbas, O.: Intrusion detection and countermeasure of virtual
    cloud systems-state of the art and current challenges. Int. J. Adv. Comput. Sci.
    Appl. 6(6) (2015) Google Scholar   Shivraj, V.L., Rajan, M.A., Singh, M., Balamuralidhar,
    P.: One time password authentication scheme based on elliptic curves for Internet
    of Things (IoT). In: Paper presented 2015 5th National Symposium on Information
    Technology: Towards New Smart World (NSITNSW). Riyadh, Saudi Arabia (2015) Google
    Scholar   Conti, M., Kumar, M., et al.: Opportunities in Opportunistic Computing.
    Computer 43(1), 42–50 (2010) Article   Google Scholar   Download references Author
    information Authors and Affiliations JECRC University, Jaipur, Rajasthan, India
    Ashutosh Kumar, Aditya Upadhyay, Neha Mishra, Srawan Nath & Gajanand Sharma Government
    Polytechnic College, Kota, India Kalu Ram Yadav Editor information Editors and
    Affiliations State University of Rio de Janeiro, Rio de Janeiro, Brazil Nadia
    Nedjah Mathematics and Computer Science Department, Menoufia University, Faculty
    of Science, Menofia, Egypt Ahmed A. Abd El-Latif Department of Computer Science
    and Information Engineering, Asia University, Taichung, Taiwan Brij B. Gupta State
    University of Rio de Janeiro, Rio de Janeiro, Brazil Luiza M. Mourelle Rights
    and permissions Reprints and permissions Copyright information © 2022 The Author(s),
    under exclusive license to Springer Nature Switzerland AG About this chapter Cite
    this chapter Kumar, A., Upadhyay, A., Mishra, N., Nath, S., Yadav, K.R., Sharma,
    G. (2022). Privacy and Security Concerns in Edge Computing-Based Smart Cities.
    In: Nedjah, N., Abd El-Latif, A.A., Gupta, B.B., Mourelle, L.M. (eds) Robotics
    and AI for Cybersecurity and Critical Infrastructure in Smart Cities. Studies
    in Computational Intelligence, vol 1030. Springer, Cham. https://doi.org/10.1007/978-3-030-96737-6_5
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-030-96737-6_5
    Published 29 March 2022 Publisher Name Springer, Cham Print ISBN 978-3-030-96736-9
    Online ISBN 978-3-030-96737-6 eBook Packages Intelligent Technologies and Robotics
    Intelligent Technologies and Robotics (R0) Share this chapter Anyone you share
    the following link with will be able to read this content: Get shareable link
    Provided by the Springer Nature SharedIt content-sharing initiative Publish with
    us Policies and ethics Sections Figures References Abstract Introduction The Architecture
    of Edge-Computing Based Smart Cities Privacy Concerns in Smart Cities Applications
    Privacy and Security Solutions Suggestions for Secure Structure Future Challenges
    and Open Research Directions Conclusion References Author information Editor information
    Rights and permissions Copyright information About this chapter Publish with us
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Studies in Computational Intelligence
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Privacy and Security Concerns in Edge Computing-Based Smart Cities
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Saini K.
  - Raj P.
  citation_count: '6'
  description: Edge computing, a rapidly growing technology, satisfies the business
    needs of most of the smart business cultures today. Smart agriculture, smart cities,
    smart manufacturing or any other smart business can be benefited from Edge computing.
    The chapter discuss how to about the cloud computing to edge computing. Various
    edge computing technologies and applications are also discussed in detail. 5G
    Communications, Remote Monitoring, Healthcare and other such applications require
    tremendous accuracy, high latency I less cost. Augmented and Virtual reality applications
    or gaming are just few applications. There are many more to discuss about. The
    chapter discuss how edge computing is helpful for all such applications. Unlike
    cloud computing, edge computing enables data analysis, its processing, and transfer
    at the edge of the network. Basically data is analyzed locally where it is stored.
    The analysis is done in real time without latency and allows for quicker data
    processing and content delivery.
  doi: 10.1016/bs.adcom.2022.02.005
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full volume
    Outline Abstract Keywords 1. Introduction to cloud computing 2. Cloud computing
    to edge computing 3. Edge computing: A brief overview 4. Essential of edge computing
    5. Advantages of edge computing 6. Significance of cloudlets 7. Conclusion References
    Vitae Show full outline Cited by (7) Figures (6) Advances in Computers Volume
    127, 2022, Pages 237-258 Chapter Eight - Edge platforms, frameworks and applications
    Author links open overlay panel Kavita Saini a, Pethuru Raj b c Show more Share
    Cite https://doi.org/10.1016/bs.adcom.2022.02.005 Get rights and content Abstract
    Edge computing, a rapidly growing technology, satisfies the business needs of
    most of the smart business cultures today. Smart agriculture, smart cities, smart
    manufacturing or any other smart business can be benefited from Edge computing.
    The chapter discuss how to about the cloud computing to edge computing. Various
    edge computing technologies and applications are also discussed in detail. 5G
    Communications, Remote Monitoring, Healthcare and other such applications require
    tremendous accuracy, high latency I less cost. Augmented and Virtual reality applications
    or gaming are just few applications. There are many more to discuss about. The
    chapter discuss how edge computing is helpful for all such applications. Unlike
    cloud computing, edge computing enables data analysis, its processing, and transfer
    at the edge of the network. Basically data is analyzed locally where it is stored.
    The analysis is done in real time without latency and allows for quicker data
    processing and content delivery. Previous chapter in volume Next chapter in volume
    Keywords Cloud computingFog computingEdge computingIoT devicesVideo StreamingRemote
    monitoringGaming-as-a-serviceSecurity MonitoringEdge computing enabled devicesEdgeOS
    1. Introduction to cloud computing Cloud computing by which remote servers hosted
    on the Internet store and process data, rather than local servers or personal
    computers [1]. It is ready to move to the next level, i.e., “Edge Computing.”
    Icloud, onedrive, Google are the few examples of cloud computing [2]. As cloud
    computing is the “On-Demand” availability of the computer system resources, especially
    data storage and computing power, without direct active management by the user
    [3]. To Leverage 5G wireless technology and artificial Intelligence to enable
    faster response times, lower latency (ability to process very high volumes of
    data with minimal delay), and simplified maintenance in computing. Cloud provider
    are responsible to manage, restore and backup. In short data centers are being
    managed by cloud service providers [4], [5]. They are also providing high-end
    computing power, software and so on. This is where Edge Computing comes in, which
    many see as an extension to the cloud computing, but which is in fact, different
    in several basic ways [6]. 2. Cloud computing to edge computing The basic difference
    between cloud computing and edge computing lies in the place where the data processing
    takes place. At the moment, the existing Internet of Things (IoT) system performs
    all of their computations in the cloud using data centers. Experts believe the
    true potential of edge computing will become apparent when 5G networking go mainstream
    in a year from now. Edge offers an extra added scalability which will be needed
    for locally applicable responsibilities in the environment with a huge quantity
    of data producers and customers [7], [8]. Multifaceted, extensive and data determined
    responsibilities which aren''t time threating would be benefited greatly from
    the richness of ascendable sources in clouds [9], [10]. Edge can make the communications
    more consistent, in the manner that it could provide an option if the network
    link to cloud breaks. It can be an interesting especially for crisis management
    scene where edge provides optional substructure to preserve critical responsibilities
    thriving. Edge sources could generally be accessible within one hop from the wireless
    gateways which operators are linked with. Preferably, edge system can identify
    and back handler flexibility, e.g., by moving its information and computing to
    the subsequent nearby positions. User will be able to enjoy consistent connectivity
    without even realizing it [7]. 3. Edge computing: A brief overview Edge Computing
    enables data to be analyzed, processed and transferred at the edge of a network.
    The idea is to analyze data locally, closer to where it is stored, in real-time
    without latency, rather that send it far away to a centralized data center [4],
    [10]. Time-sensitive data is processed using edge computing, while data that is
    not time-sensitive is processed using cloud computing which is the main advantage
    of edge computing over cloud computing. The prime aid edge offers consist lower
    latency, higher bandwidth [11], device processing and data unburden as well as
    reliable computations and storing. Concludingly, 5G requires edge to drive need
    for its facilities [5]. In edge computing some content will be offload before
    using which will help in accessing data without any delay. In short in Edge computing
    there is a use of 5G wireless technology and AI. Edge could be considers as an
    additional layer between the CC and users, applications and devices (such IoT
    devices). With the rapid advancement in IoT and Edge Computing, the traditional
    cloud computing was facing communication latency and network bandwidth as a biggest
    challenge. A new driving technology coming into role has now moved the functionality
    of centralized cloud computing to the network edge node for addressing the difficulties
    in traditional system. Several edge computing systems have emerged from various
    backgrounds in order to reduce latency, increase computational capabilities and
    handle huge machine connectivity [12]. This study provides an in-depth look at
    three common edge computing technologies: mobile edge computing (MEC), cloudlets,
    and fog computing [6]. 4. Essential of edge computing Pushes the intelligence,
    processing power, and Communication Capabilities of an edge gateway or applicant
    directly into devices [13]. The idea is to analyze data locally, closer to where
    it is stored, in real-time without latency, rather than send it far away to a
    centralized data center. So whether you are streaming a video on Netflix or accessing
    a library of video games in the cloud, edge computing allows for quicker data
    processing and content delivery [12]. As of now all the applications using IoT
    devices store and compute the data on cloud data center. With edge computing it
    is possible to perform all the analysis and computation at the edge on cloud and
    saves lots of time. Not just saving time edge helps in computation in real time.
    Playing online games, live video streaming are the examples where computation
    should be finished in fraction on second. This is possible with edge computing
    [14], [15]. This is how edge computing different from cloud computing. Only important
    data is sent over the network instead of whole data. In this way edge computing
    is reduces the amount of data traversal over the network. Transferring data from
    cloud to devices and vice versa take time, also known as Internet latency. It
    can be achieved using AI, 5G wireless tech and IoT devices. It will help in reducing
    amount of data stored over cloud as some data some data could be stored only on
    edge [8]. Edge Computing simplifier this Communication chain and reduces Potential
    Print of Failure. In edge Computing, physical assets like pumps, motor, and generators
    are again physically wired into a control system, but this system in controlled
    by an Edge Programmable Industrial Controller, or EPIC. Edge Computing saves time
    and money by Streamline IoT Communication, reducing system and Network Architecture
    Complexity and decreasing the number of potential failure in an IoT application
    Reducing system Architecture Complexity is key to the Success of IoT applications
    [7], [16]. 5. Advantages of edge computing Edge computing has many important features
    unnoticed in preceding network generations. These consist of huge data generation.
    Edge directs the computing information, application, and facilities aside from
    the Cloud server to the edge of networks [10]. Content suppliers and app creators
    can utilize an edge computational system by providing handlers the facilities
    nearer to themselves. Edge computation is categorized as employing higher bandwidths,
    lower latencies, and real time admittance to the system data which could be utilized
    by numerous appliances [13], [17], [18]. Edge is favored to supply the wireless
    communication needs of next-gen technologies, like virtual reality & augmented
    reality, that are collaborating in behavior [14]. Edge technology enables the
    computing to be executed at the networking edges. 5.1. Latency reduction Cloud
    computing can''t adequately support the volume of data being processed every second.
    Having spoken about latency within the cloud computing world, there is a lot that
    cloud computing does not provide to cloud-based applications [5]. Given the amount
    of stored data within the cloud, there are two problems that transpire during
    the processing stage—latency in processing and high number of wasted resources.
    These issues exist especially in decentralized data centers, mobile edge nodes,
    and cloudlets [17]. By reducing latency, edge computing enhances network performance.
    The information does not go travel as far as it would in a traditional cloud architecture
    rather devices process data natively or at a local edge center. It has been noticed
    earlier if source is sending any mail at destination at same workplace also, there
    could be some delay in standard network. This delay does not exist if the procedure
    occurs at the edge and the company''s router handling office emails [19]. 5.2.
    Safer data processing DDoS (Distributed Denial of Service) assaults and power
    outages are common in cloud environments. Systems are less prone to interruption
    and unavailability because edge computing spreads processing and storage. There
    is no single point of failure in the setup [15]. Furthermore, because many procedures
    take place locally, cyber attackers are unable to prevent data from being sent.
    Even if a data breach occurs on one machine, the attacker can only access location
    data [20]. 5.3. Inexpensive scalability Edge computing empowers a company to increase
    its capacity with a combination of IoT devices and peripheral servers. Adding
    additional resources does not require investing in a more expensive private data
    center to build, maintain, and expand [5]. Instead, the company can set up regional
    edge servers to expand the network quickly and inexpensively. Edge computing also
    reduces growth costs as each new device does not add additional bandwidth requirements
    across the network. 5.4. Simple expansions to new markets The company can partner
    with the local edge data center to quickly expand and explore new markets. The
    expansion does not require expensive new infrastructure. Instead, the company
    only sets up end-to-end devices and starts serving customers without delay. If
    the market seems unwanted, the extraction process is quick and inexpensive. This
    benefit is important for industries that need rapid expansion in areas with limited
    connectivity. 5.5. Consistent user experience As the edge servers work closer
    to end users, the problem of a remote network is less likely to affect customers.
    Even if the local facility is disconnected, the peripheral devices may continue
    to operate due to their ability to handle important traditional tasks. The system
    can also extract the data route in other ways to ensure that users retain access
    to the services [15]. 5.6. Speed Speed is absolutely vital to any company''s core
    business. Take the financial sector''s reliance upon high-frequency trading algorithms,
    for example. A slowdown of mere milliseconds in their trading algorithms can result
    in expensive consequences. In the healthcare industry, where the stakes are much
    higher, losing a fraction of a second can be a matter of life or death [1], [20].
    5.7. Edge computing technologies There has been a substantial growth in connected
    smart devices and IoT nodes, which resulted into increased data generation at
    these nodes. Handling this massive amount of raw data is a crucial challenge because
    of limited computational and energy resources [2], [4], [9], [19]. Due to the
    requirement of large processing and storage capacity, the existing cloud computing
    platform can easily handle the tremendous heaps of data generated by IoT devices.
    But this is not conceptual for dissipated IoT systems or the On-time operation
    of deliciated latency IoT applications as they require centralized manner of operation
    and are concerned with the associated delay also. Edge computing can minimize
    end-to-end latency, save bandwidth in backlog links, and mitigate the computational
    pressures on cloud-servers, by providing cloud-like computing environment, storage,
    and communication facilities at the network edge [21]. The presence of “Edge devices”
    reduces the compute burden at data centers by handling some of the requests directed
    to the cloud locally, without the need for cloud involvement. As a result, the
    delay in resolving requests is reduced, and a subset of requests can be handled
    in real time. Because of their widespread availability and geographical distribution,
    edge devices also aid mobility. There are various technologies that can be used
    to develop edge computing, which is based on the idea that it can expand the settings
    of IoT usage by complementing the cloud [22]. Let''s take a close look at some
    IoT based edge computing technologies, including cloudlets, mobile edge computing
    (MEC), fog computing, and a novel idea called the Cloud of Things [11]. These
    technologies are also predicted to be important in the development of edge computing
    platforms. 5.8. Cloudlets: An overview A cloudlet is basically a regional cloud
    that can bring far-flung cloud services nearer to the user. Cloudlets are small-scale,
    mobility-enhanced cloud data centers that sit at the network''s edge. The cloudlet''s
    primary goal is to support furious resource and interactive mobile applications
    by delivering strong computing resources to mobile devices with reduced latency.
    A wireless local area network with single hop at comparatively higher speed, allows
    User Equipments (UEs) to connect to the computing resources in the neighboring
    cloudlet [15]. To ensure crisp reaction time, cloudlets constitute the intermediate
    tier in a 3-tier hierarchical architecture containing Edge device layer, cloudlet
    layer, and cloud layer. For security reasons, cloudlet is bounded in a tamper
    resistant box for safeguarding safety in unregulated regions [9]. On the inside,
    cloudlets consist of a group of source rich multicore computer with high-speed
    internet connection and higher bandwidth wireless LAN for the use by closer mobile
    gadgets (Fig. 1). Download : Download high-res image (198KB) Download : Download
    full-size image Fig. 1. Three tier view of cloud data centers at edge network.
    The Cloudlet is an architecture model that enables cloud computing at the mobile
    network''s edge. Low latency and high bandwidth characterize this environment,
    forming a fresh ecosystem in which network service provider can open their network
    edge for third party user, allowing them to quickly and flexibly install creative
    and innovative services. 6. Significance of cloudlets The purpose of a cloudlet
    is to improve the response time of mobile apps by employing low-latency, high-bandwidth
    wireless communication and physically bringing cloud computing resources, such
    as virtual computers, closer to the mobile devices that access them [23]. Cloudlet
    vs Cloud: Cloudlets differ from Cloud in many cases: 1. Clouds are normally monitored
    by their service providers whereas cloudlet is self-managed. 2. Provider locate
    the cloud in purpose specific areas at his premises, on the other hand cloudlet
    are located in business premises in the form of a data center in a box. 3. Cloud
    uses internet bandwidth/latency whereas cloudlet uses the latency/ bandwidth of
    a local area network. 4. Since cloud has a centralized ownership, cloudlet is
    owned by the local business/organization. 5. Cloud can accommodate hundreds and
    thousands of users at a time but cloudlet can accommodate only few users. Benefits:
    Cloudlet resides as a middle layer in its three tier view, offering various benefits
    in the edge infrastructure 1. Simple to set up: The fact that cloudlet servers
    are exiled makes maintenance easier; adding or replacing of a cloudlet just takes
    few minutes for setup and simple steps of configuration. 2. Enhancement of security:
    The cloudlet''s proximity to mobile nodes makes the architecture more resistant
    to DoS attacks (secondary variants). It can also help to avoid data leakage from
    traffic analysis by limiting the range of end-to-end connection, which prohibits
    snoopers from accessing traffic data from afar. 3. Resilience: Even with shaky
    connectivity to a remote cloud provider, a cloudlet collection can provide dependable
    cloud computing services. Mobile Edge Computing (MEC): Multi-access Edge Computing,
    also known as Mobile Edge Computing (MEC), is a network design that allows computational
    and storage resources to be placed within the Radio Access Network (RAN). The
    MEC aids in improving network efficiency and content delivery to end-users. This
    device can do this by adapting over the load available on the radio link, resulting
    into increase in network efficiency and reducing the requirement for long-distance
    backlogs. MEC offers mobile and cloud computational abilities among the access
    system, and goals to unite the telco and IT at the mobile edge network [19]. As
    in near locations to users, MEC can provide a service environment with ultra-low
    latencies, high bandwidth, and direct entree to real time system data [23], [24].
    Mobile Edge Computing is the principal technology among the next gen system technologies.
    As per European Telecommunications Standards Institute (ETSI), mobile edge computing
    is defined as “Mobile Edge Computing offers an IT service environment and cloud
    computing capabilities at the mobile network''s edge, within the Radio Access
    Network (RAN), and close to mobile customers.” Listed below are few characteristics
    of MEC: Download : Download high-res image (571KB) Download : Download full-size
    image MEC is a layer that sits between mobile devices and the cloud. As a result,
    the infrastructure is organized into three layers: cloud layer, MEC layer, and
    mobile device layer. Mobile edge computing, for the most part, works in tandem
    with cloud computing for supporting and improving the performance of end devices
    (Fig. 2). Download : Download high-res image (324KB) Download : Download full-size
    image Fig. 2. General architecture: three tier view of MEC. 6.1. MEC benefits
    Listed below are some advantages of Mobile Edge Computing (MEC) that are proving
    to be beneficial to both Mobile Network Operators (MNOs) and application service
    providers. • Mobile network operators might provide third-party suppliers with
    real-time access, allowing them to deploy their applications and services in a
    more flexible and agile manner. These services could make money by charging for
    things like storage, bandwidth, and other IT resources. • MEC-enabled infrastructure-as-a-service
    (IaaS) platforms at the network edge node could benefit application service providers
    by allowing them to scale their services while maintaining higher bandwidth and
    reduced latency. ASPs may also gain real-time access to radio pursuit that is
    likely to develop. • End users may perform faster computation by offloading the
    MES servers. • Driving business model evolution—The capacity to collect or process
    data from any facility''s base leads to the development of a wide range of business
    models. Evolution of the Industry 4.0 is a best example for this. In this case,
    mobile edge computing can act as an enabler for developing a proactive maintenance
    business model to extend the life of any resources. • A new way to run your business
    more efficiently—Mobile edge computing will allow SMEs to grow their marketing
    efforts, reach more customers, and improve their services at considerably lower
    costs than the public cloud. 6.2. FOG computing Fog computing is a framework hierarchical
    architecture defined by the OpenFog Consortium as a horizontal architecture that
    divides processing, storage, control, and connectivity services and goods anywhere
    along the spectrum from the fog to things [5], [19]. Fog computing differs from
    edge computing in that it includes tools for across networks and between edge
    devices for spreading, coordinating, controlling, and protecting resources and
    services [1]. It is also known as Fog networking or fogging. It is a decentralized
    infrastructure where application resides between data stores and the cloud. It
    is an architecture which uses edge device for computation, storage and communication
    [19]. This edge device is the device that controls the data flow at the boundaries
    of any two networks, example: router, switch, IAD, gateways, hub, multiplexer
    or bridge. It is actually a mediator between hardware and remote server. Fog is
    a distributed network environment and is very close to cloud computing and IoT
    device. It has a high security network. Instead of sending selected data to the
    cloud for processing, fog actually process the data which saves the network bandwidth
    and reduces latency requirement which in turn helps in fast decision making capability
    (Fig. 3). Download : Download high-res image (228KB) Download : Download full-size
    image Fig. 3. Three tier view of Fog infrastructure. Definition: Some researchers
    have defined Fog computing as: “Fog computing is a highly virtualized platform
    that provides compute, storage, and networking services between IoT devices and
    traditional cloud computing data centers, typically, but not exclusively located
    at the edge of network.” “Fog computing is a scenario where a huge number of heterogeneous
    (wireless and sometimes autonomous) ubiquitous and decentralised devices communicate
    and potentially cooperate among them and with the network to perform storage and
    processing tasks without the intervention of third parties. These tasks can be
    for supporting basic network functions or new services and applications that run
    in a sandboxed environment. Users leasing part of their devices to host these
    services get incentives for doing so.” “The term Fog computing or Edge Computing
    means that rather than hosting and working from a centralized cloud, Fog systems
    operate on network ends. It is a term for placing some processes and resources
    at the edge of the cloud, instead of establishing channels for cloud storage and
    utilization.” Considering these definitions we can define Fog computing as: “A
    distributed computing platform in which end or edge devices perform the majority
    of the work. By existing in between users and the cloud, it is also associated
    with the cloud for non-latency-aware processing and long-term storage of important
    data.” 6.3. Benefits 6.3.1. Confidentiality Fog computing can be used to keep
    the quantity of data shared to a minimum. Instead of sending sensitive personal
    information to a centralized cloud platform, any confidential material can be
    reviewed regionally. In this way, the IT staff will be able to monitor and control
    the device. Any portion of data that has to be analyzed can also be sent to the
    cloud [6]. 6.3.2. Efficiency Clients can employ fog procedures to make the machine
    function effectively they want it to. Publishers may easily design these fog applications
    with the right combination of tools. They can use it whenever they want once the
    job gets completed [13]. 6.3.3. Safety and security Fog computing supports multiple
    devices to be connected to the same network. As a result, rather from being consolidated,
    processes in a complex decentralized system take place at multiple end terminals.
    This makes it easier to identify potential threats before they have a large-scale
    impact on the network [5]. 6.3.4. Bandwidth The cost of bandwidth required for
    data transmission depends on the availability of resources and it can be costly
    [7]. The throughput requirements are greatly decreased because the chosen processing
    is done locally instead of being transferred to the cloud. This bandwidth reduction
    will be particularly significant as the number of Internet—connected devices grows.
    When the number of IoT devices grows, this bandwidth savings will be especially
    useful. Fog computing allows multiple devices to share a common network. As a
    result, instead of being centralized, processes in a complex distributed system
    occur at multiple end points. This makes it easier to identify potential threats
    before they spread throughout the network. 6.3.5. Latency Another advantage of
    processing data locally is the reduction in latency. The data can be analyzed
    or processed at the data source that is expected to be geographically nearer to
    the user. This can result in instantaneous responses, which is highly valuable
    for services that require quick reactions [4]. Several edge computing systems
    have emerged from various backgrounds in order to reduce latency, increase computational
    capabilities and handle huge machine connectivity. This study provides an in-depth
    look at three common edge computing technologies: mobile edge computing (MEC),
    cloudlets, and fog computing. 6.4. Edge computing applications There are various
    applications of Edge computing, some are listed below (Fig. 4): Download : Download
    high-res image (209KB) Download : Download full-size image Fig. 4. Edge computing
    applications. 6.4.1. Smart systems It comprises of IoT devices used as home essentials
    like smart TVs, smart phones, smart lights, CCTV cameras etc. Smart systems also
    include devices used for monitoring air quality index, weather conditions, traffic
    management, smart gardening and others which will help in making smart city. All
    those systems used in healthcare like fitness tracker, apps for pandemic diseases
    (Arogya setu) are also a part of smart systems [25]. 6.4.2. Video streaming Various
    reports have highlighted the statistics that video streaming on internet will
    be capturing almost 83% of all internet traffic by 2022. This video streaming
    requires good bandwidth resources and cache requirement which directly affect
    the cost parameter and the video quality. Edge computing is undoubtedly providing
    a reasonable mechanism to cache the local video. These devices are embedded with
    filtering capability, to figure out useful data [16]. 6.4.3. Remote monitoring
    and predictive analysis With the help of edge computing enabled IoT devices manufactures
    are now able to remotely monitor their assets more carefully and at early stage
    before they create any disaster. Bringing the processing capabilities closer to
    the device, has helped in predicting the real-time health status of the machines
    [20]. This may beneficial in analyzing and detecting the changes required in production
    line before any failure occurs. 6.4.4. Gaming-as-a-service It is a kind of online
    video game that runs on a cloud server and directly stream on the player''s device
    [26]. Xbox, a Microsoft soft product is a cloud gaming service, where game itself
    is hosted and processed in cloud data centers but feed directly to the gamers
    device through real time streaming. Edge and 5G connectivity integrations provides
    the bandwidths required to aid high quality, multi-player gaming experiences.
    Edge is not only restricted to the gaming but it is also the future of mobile
    applications. It significantly contributes into the future of industries adopting
    hybrid multi-clouds & edge structures as it plays a crucial role in the digital
    structures. Mobile experience will be more real-time, more interactive, and rich
    in handling/operating just because it will be because of edge computing [23].
    6.4.5. 5G communications For lower latency and higher throughput 5G communication
    is required. 5G is considered as a next gen. Cellular network. With edge computing
    it is possible to bring the cloud computing capabilities closer to the end user
    or to the edge of network. Cloud computing where there is high latency, low throughput
    and less security, edge computing combat with all mentioned problem and improves
    the user experience. 5G and edge computing technologies are capable to improve
    the application''s performance significantly. Specially where data is to be processed
    in real time, 5G increases speeds 10 times in comparison to 4G and edge computing
    reduces the latency by bringing the computational capabilities to the edge of
    the network. This deadly combination of 5G and edge computing improves the users
    real time application''s experience. 6.4.6. 5G smart health care 5G smart health
    care, on the other hand, has far more grave safety and seclusion apprehension
    than traditional healthcare services. Traditional medical services are altered
    by 5G medical applications, which extend them from the healthcare center to an
    online examine mode that involves many users, data systems, and medical devices,
    is embedded by posing serious security, massive medical data transmission, and
    privacy challenges. The quality of medical services and the routine operations
    of medical facilities will be severely harmed by security weaknesses in terminals,
    networks, and systems. Science and technology in healthcare area is a considerable
    study part for countless scholars. Similar to various manufacturing, health care
    subdivision can also be assisted from edge, for example heart patients suffering
    from heart attack [14]. Health care application are generally regarded time sensitive
    applications in Internet of Things. At first, cloud computing was utilized for
    health care implementations but was not great success due to latencies problems.
    Introduction of edge solved these problems & made cloud accurate for health care
    IoT uses. Into the smart clinics edge is currently used in numerous ways, like
    in wireless health regulation the data received from the affected ones directed
    to the physicians which eases them to tackle the emergencies [1]. Meanwhile, there
    are no 5G security standards or 5G medical engineering safety standards in place,
    and it''s unclear to concern security protection for 5G health check appliances.
    6.4.7. Security monitoring Various IoT devices like Intrusion detection systems
    (IDS) are deployed on either ends of communicators for an efficient network monitoring.
    It helps in security and privacy related issues while transmitting data either
    from one network to another or from data centers to edge device [19]. 6.4.8. AR
    and VR Augmented Reality (AR) and Virtual Reality (VR) is one of the rapidly growing
    industry. Reason is both helps in reducing the cost and time to perform any task,
    for example remotely managed any operation [2]. By removing the geographical barriers
    any operation and be performed by the experts sitting on same or different places.
    But presently the biggest problem with deployment of such applications is comprehensive
    deployment of mobile AR is that current devices. Still there is a need to improve
    the computational power, data communication and graphical performance. With the
    edge computing all computational task could be taken care by the edge of network
    and will help in improved performance in all aspects. Challenges that can now
    be overcome by 5G and edge computing by performing computation at the network
    edge and not need to send and receive data frequently to/from cloud and will support
    more and more real-life applications [19] (Fig. 5). Download : Download high-res
    image (188KB) Download : Download full-size image Fig. 5. Applications of edge
    computing. 6.5. Edge computing and future Edge computing is currently in its early
    stages and has a great capability to pave the pathway for more effective dispersed
    computations [19]. The prime goals of edge computing are to give real time interactions,
    local processing, higher data rates, and higher availabilities. Edge advances
    network actions to assist and locations varied scenes, like distant surgeries
    [17]. The flaws and lacunas of cloud and fog are completed by the edge computing
    to a greater amount which has consequence in low response time, lower latency,
    lower bandwidth price, lesser energy usage and superior and higher data privacy.
    The significance and need of edge computing is acceptable with the assistance
    of few of the upcoming sectors and appliances that are extensively utilized in
    recent times like smart city, smart houses, online marketing, etc. So, to offer
    an advanced and well-organized facility to IoT smart applications, the idea of
    edge computing is able to execute all the functions by going beyond the cloud
    capabilities. Edge visions to get facilities and efficacies of Clouds near to
    the handler for safeguarding fast processing of data-concentrated apps. Video
    analytics, online shopping, smart cities, smart homes, digital health care, mutual
    edge and high privacy apps are few of the extensively utilized famous areas &
    applications that uses the idea of edge. Transferring data processes through the
    edge networks will be helpful to companies so that they can take benefit of the
    increasing quantities of IoT gadgets, advance network speeds, and increase customer
    experiences. Scalable behavior of the edge also makes it an appropriate option
    for the rapidly developing, sprightly industries, particularly to those who uses
    data centers and utilizes cloud substructures [1]. Edge gives an unprecedented
    benefit of flexibility and reliability which will increase of each product combined
    or integrated with it resulting into customer satisfaction. Edge computing provides
    varied benefits over conventional type of network structures and will definitely
    play a significant part in near future. With the advancement in internet associated
    gadgets coming in markets everyday advanced administrations have just scratched
    the uppermost part of what''s possible with Edge. 6.6. Shortcomings of edge computing
    So far the chapter talks about edge computing and benefits of its use over the
    cloud computing. Every technology be it cloud or edge computing have some drawbacks
    and give scope of improvements in the technologies. It also help in discovering
    the scope and hope for new technologies [4]. Like other technologies, Edge computing
    also has some Shortcomings. This section will elaborate the same. With Edge devices,
    (used for edge computing) open the door for the various attacks [10]. With different
    attacks, an attacker can inject malicious activity. Edge devices can be infect
    with these attacks which may lead to A software or even entire network may be
    infected. These attacks are difficult to manage adequately due to distributed
    environment. Another problem is cost. Though with the edge computing we can reduce
    the computing but at the same time its maintenance cost will increase. The main
    reason for higher maintenance cost is typically used of various edge devices,
    maintenance team should be knowledgeable enough to manage this technology. 7.
    Conclusion This chapter briefly introduced cloud computing and given a more comprehensive
    definition of edge computing. The chapter talk about various technologies around
    the edge computing. After a deep discussion about the technology various benefits
    out of use of the same explained widely. The chapter also discuss the journey
    from cloud computing and edge computing in detail. Various applications after
    detailed explanation also major part of the chapter. Though, there are noteworthy
    security threats within IoT gadgets, which means edge security is most vital than
    ever. Along with the threat resolvase techniques, edge also gives a chance to
    improve the security by researching the related areas. The chapter concludes that
    the edge computing has tremendous benefits over the cloud computing and helpful
    to overcome the limitations of traditional and cloud computing. With 5G and edge
    technology there is very bright future of many real time applications. References
    [1] K. Saini, V. Agarwal, A. Varshney, A. Gupta E2EE for data security for hybrid
    cloud services: a novel approach IEEE International Conference on Advances in
    Computing, Communication Control and Networking (IEEE ICACCCN 2018) Organized
    by Galgotias College of Engineering & Technology Greater Noida , 12–13 October,
    2018 (2018), 10.1109/ICACCCN.2018.8748782 Google Scholar [2] I. Goodfellow, et
    al. Generative adversarial nets Proc. Adv. Neural Inf. Process. Syst. (2014),
    pp. 2672-2680 Google Scholar [3] H.T. Dinh, C. Lee, D. Niyato, P. Wang A survey
    of mobile cloud computing: architecture, applications, and approaches Wirel. Commun.
    Mob. Comput. (2013) Google Scholar [4] P.J. Werbos Backpropagation through time:
    what it does and how to do it Proc. IEEE, 78 (10) (1990), pp. 1550-1560 View in
    ScopusGoogle Scholar [5] S.R. Jena, R. Shanmugam, R. Dhanaraj, K. Saini Recent
    advances and future research directions in edge cloud framework Int. J. Eng. Adv.
    Technol., 2249-8958, 9 (2) (2019), 10.35940/ijeat.B3090.129219 Google Scholar
    [6] V. Mnih, et al. Human-level control through deep reinforcement learning Nature,
    518 (7540) (2015), p. 529 CrossRefView in ScopusGoogle Scholar [7] S.R. Jena,
    R. Shanmugam, K. Saini, S. Kumar Cloud computing tools: inside views and analysis
    International Conference on Smart Sustainable Intelligent Computing and Applications
    under ICITETM2020, Elsevier (2020), pp. 382-391 View PDFView articleView in ScopusGoogle
    Scholar [8] F. Bonomi, R. Milito, J. Zhu, S. Addepalli Fog computing and its role
    in the internet of things Workshop on Mobile Cloud Computing, ACM (2012) Google
    Scholar [9] C. Szegedy, et al. Going deeper with convolutions Proceedings of the
    IEEE Conference on Computer Vision and Pattern Recognition (2015), pp. 1-9 CrossRefGoogle
    Scholar [10] K. Saini, P. Raj Handbook of Research on Smarter and Secure Industrial
    Applications Using AI, IoT, and Blockchain Technology IGI Global (2021) ISBN13:
    9781799883678, ISBN10: 1799883671, EISBN13: 9781799883685 Google Scholar [11]
    Z. Liu, Z. Dai, P. Yu, Q. Jin, H. Du, Z. Chu, D. Wu Intelligent station area recognition
    technology based on NB-IoT and SVM Proceedings of the IEEE 28th International
    Symposium on Industrial Electronics (2019), pp. 1827-1832 CrossRefView in ScopusGoogle
    Scholar [12] J. Marescaux, J. Leroy, M. Gagner, et al. Transatlantic robot-assisted
    telesurgery Nature, 413 (2001), pp. 379-380 View in ScopusGoogle Scholar [13]
    I. Stojmenovic, S. Wen The fog computing paradigm: scenarios and security issues
    Federated Conference on Computer Science and Information Systems (FedCSIS), IEEE
    (2014) Google Scholar [14] M. Satyanarayanan, P. Bahl, R. Caceres, N. Davies The
    case for VM-based cloudlets in mobile computing IEEE Pervasive Comput., 4 (2009),
    pp. 14-23 View in ScopusGoogle Scholar [15] C.-C. Hung, et al. VideoEdge: processing
    camera streams using hierarchical clusters Proceedings of the IEEE/ACM Symposium
    on Edge Computing (SEC) (2018), pp. 115-131 CrossRefView in ScopusGoogle Scholar
    [16] K. Hong, D. Lillethun, U. Ramachandran, B. Ottenwalder, B. Kold-ehofe Opportunistic
    spatio-temporal event processing for mobile situation awareness Proceedings of
    the ACM International Conference on Distributed Event-Based Systems (2013) Google
    Scholar [17] L.M. Vaquero, L. Rodero-Merino Finding your way in the fog: towards
    a comprehensive definition of fog computing ACM SIGCOMM CCR (2014) Google Scholar
    [18] I. Stojmenovic Fog computing: a cloud to the ground support for smart things
    and machine-to-machine networks Telecommunication Networks and Applications Conference
    (ATNAC), IEEE (2014) Google Scholar [19] S. Hochreiter, J. Schmidhuber Long short-term
    memory Neural Comput., 9 (8) (1997), pp. 1735-1780 CrossRefView in ScopusGoogle
    Scholar [20] J. Zhu, et al. Improving web sites performance using edge servers
    in fog computing architecture SOSE, IEEE (2013) [12] H. Madsen, G. Albeanu, B.
    Burtschy, and F. Popentiu-Vladicescu, “Reliability in the utility computing era:
    Towards reliable fog computing,” in IEEE International Conference on Systems,
    Signals and Image Processing (IWSSIP), 2013 Google Scholar [21] S. Yi, Z. Qin,
    Q. Li Security and privacy issues of fog computing: a survey International Conference
    on Wireless Algorithms, Systems and Applications (WASA) (2015) Google Scholar
    [22] D.N. Le, R. Kumar, B.K. Mishra, J.M. Chatterjee, M. Khari, (Eds.). Cyber
    Security in Parallel and Distributed Computing: Concepts, Techniques, Applications
    and Case Studies John Wiley & Sons (2019) Google Scholar [23] B. Chen, S. Qiao,
    J. Zhao, D. Liu, X. Shi, M. Lyu, H. Chen, H. Lu, Y. Zhai A security awareness
    and protection system for 5G smart healthcare based on zero-trust architecture
    IEEE Internet Things J. (2020), 10.1109/JIOT.2020.3041042 Google Scholar [24]
    B. Ottenwalder, B. Koldehofe, K. Rothermel, U. Ramachandran Migcep: operator migration
    for mobility driven distributed complex event processing Proceedings of the ACM
    International Conference on Distributed Event-Based Systems (2013) Google Scholar
    [25] K. Hong, D. Lillethun, U. Ramachandran, B. Ottenwalder, B. Kold-ehofe Mobile
    fog: a programming model for large-scale applications on the internet of things
    ACM SIGCOMM Workshop on Mobile Cloud Computing (2013) Google Scholar [26] S. Yi,
    C. Li, Q. Li A survey of fog computing: concepts, applications and issues Proceedings
    of the 2015 Workshop on Mobile Big Data, ACM (2015) Google Scholar Cited by (7)
    Applications of food packaging quick response codes in information transmission
    toward food supply chain integrity 2024, Trends in Food Science and Technology
    Show abstract Artificial intelligence and machine learning in healthcare 2024,
    Biomedical Research Developments for Improved Healthcare Fog Computing: The Secret
    Sauce for Immersive Tech Experiences 2024, Lecture Notes in Networks and Systems
    Role of Dew Computing in Smart Healthcare Applications 2024, Internet of Things
    The Foggy Frontier: Exploring the Fog and Edge Computing for Online Games 2024,
    Communications in Computer and Information Science Integration of Digital Twin
    and Federated Learning for Securing Vehicular Internet of Things 2023, 2023 Research
    in Adaptive and Convergent Systems RACS 2023 View all citing articles on Scopus
    Kavita Saini, is presently working as professor, School of Computing Science and
    Engineering, Galgotias University, Delhi NCR, India. She received her PhD degree
    from Banasthali Vidyapeeth, Banasthali. She has 18 years of teaching and research
    experience supervising Masters and PhD scholars in emerging technologies. She
    has published more than 40 research papers in national and international journals
    and conferences. She has published 17 authored books for UG and PG courses for
    a number of universities including MD University, Rothak, and Punjab Technical
    University, Jallandhar with National Publishers. Kavita Saini has edited many
    books with International Publishers including IGI Global, CRC Press, IET Publisher
    Elsevier and published 15 book chapters with International Publishers. Under her
    guidance many MTech and PhD scholars are carrying out research work. She has also
    published various patents. She has also delivered technical talks on Blockchain:
    An Emerging Technology, Web to Deep Web, and other emerging areas and handled
    many special sessions in International Conferences and Special Issues in International
    Journals. Her research interests include Web-Based Instructional Systems (WBIS),
    Blockchain Technology, Industry 4.O, and Cloud Computing. Pethuru Raj working
    as a chief architect at Reliance Jio Platforms Ltd. (JPL) Bangalore. Previously.
    worked in IBM global Cloud center of Excellence (CoE), Wipro consulting services
    (WCS), and Robert Bosch Corporate Research (CR). In total, I have gained more
    than 20 years of IT industry experience and 8 years of research experience. Finished
    the CSIR-sponsored Ph.D. degree at Anna University, Chennai and continued with
    the UGC-sponsored postdoctoral research in the Department of Computer Science
    and Automation, Indian Institute of Science (IISc), Bangalore. Thereafter, I was
    granted a couple of international research fellowships (JSPS and JST) to work
    as a research scientist for 3.5 years in two leading Japanese universities. Focuses
    on some of the emerging technologies such as the Internet of Things (IoT), Optimization
    of Artificial Intelligence (AI) Models, Big, fast and streaming Analytics, Blockchain,
    Digital Twins, Cloud-native computing, Edge and Serverless computing, Reliability
    engineering, Microservices architecture (MSA), Event-driven architecture (EDA),
    5G, etc. My personal web site is at https://sweetypeterdarren.wixsite.com/pethuru-raj-books/my-books
    https://scholar.google.co.in/citations?user=yaDflpYAAAAJ&hl=en. View Abstract
    Copyright © 2022 Elsevier Inc. All rights reserved. Part of volume Edge/Fog Computing
    Paradigm: The Concept Platforms and Applications Edited by Pethuru Raj, Kavita
    Saini, Chellammal Surianarayanan Download full volume Recommended articles Article
    Metrics Citations Citation Indexes: 3 Captures Readers: 14 View details About
    ScienceDirect Remote access Shopping cart Advertise Contact and support Terms
    and conditions Privacy policy Cookies are used by this site. Cookie settings |
    Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Advances in Computers
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Edge platforms, frameworks and applications
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mahajan P.
  citation_count: '6'
  description: The paper being presented will be tracking the working of Internet
    of things along with how combination of IOT and fog computing can add on in the
    development of smart agriculture. Agriculture is one of the major source of economy
    of many countries like India, China and others. With the innovation of internet
    and then moving to internet of things all other fields are exploiting the upcoming
    trends of IOT but the agriculture field. Farmers are facing a time of predicament
    to cope with the growing demand of consumption and irregular soil content, rainfall
    and many such conditions, at this time incorporating IOT in the field of agriculture
    will modernize it at the higher pace. To make working of IOT more efficient we
    can incorporate Fog computing with it this would help us to keep track all the
    real time activities as well as help proper monitoring, predicting and keeping
    track of the production, rainfall and so on.
  doi: 10.1109/GCAT52182.2021.9587896
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2021 2nd Global Conference fo...
    Internet of things revolutionizing Agriculture to Smart Agriculture Publisher:
    IEEE Cite This PDF Palvi Mahajan All Authors 6 Cites in Papers 314 Full Text Views
    Abstract Document Sections I. Introduction II. Architecture of Iot III. Fog Computing
    IV. Smart Agriculture V. Proposed Model For Incorporating Fog Computing- Show
    Full Outline Authors Figures References Citations Keywords Metrics Abstract: The
    paper being presented will be tracking the working of Internet of things along
    with how combination of IOT and fog computing can add on in the development of
    smart agriculture. Agriculture is one of the major source of economy of many countries
    like India, China and others. With the innovation of internet and then moving
    to internet of things all other fields are exploiting the upcoming trends of IOT
    but the agriculture field. Farmers are facing a time of predicament to cope with
    the growing demand of consumption and irregular soil content, rainfall and many
    such conditions, at this time incorporating IOT in the field of agriculture will
    modernize it at the higher pace. To make working of IOT more efficient we can
    incorporate Fog computing with it this would help us to keep track all the real
    time activities as well as help proper monitoring, predicting and keeping track
    of the production, rainfall and so on. Published in: 2021 2nd Global Conference
    for Advancement in Technology (GCAT) Date of Conference: 01-03 October 2021 Date
    Added to IEEE Xplore: 09 November 2021 ISBN Information: DOI: 10.1109/GCAT52182.2021.9587896
    Publisher: IEEE Conference Location: Bangalore, India SECTION I. Introduction
    In modern world Internet is becoming one of the major source for all of our information,
    may it be via computer or mobile phones one way or the other we are being dependent
    on it. This has given rise to the new era of “Internet of things”. Nowadays IOT
    has become a trending research topic, gaining lots of attention from academe,
    industries as well the government [2]. Now the question arises what is Internet
    Of Things: “Internet of thing (IOT)” came into existence in Auto-ID lab by Kevin
    Ashton, then in his journal explaining about IOT he stated that if we were able
    to accumulate all the information about the things in one system it would provide
    a great help in tracking the wear and tear of the things/objects with decreased
    cost and other benefits, but the condition being the data is required to be accumulated
    without any human interference [1]. Things in here are being referred to any object
    or device varying from most intelligent computing system to a simple light-bulb,
    sensors, and gateways etc which are now being provided with the network access
    as per some stipulated protocols via information discerning equipment, so that
    all their actions can be stored, monitored, administrated and used for future
    benefit. In simple terms connecting all the objects/ devices together via internet
    forming a network of everything and controlling it a simple example of it can
    be as simple as turning on a bulb via your mobile phone to controlling temperature
    of a cooling system in a truck 1000 miles away from us. IoT is a network of physical
    things, objects or devices, such as radio-frequency identification (RFID) tags,
    sensors, actuators, mobile phones, and laptops. The IoT enables objects to be
    sensed and controlled remotely across existing network infrastructure, including
    the Internet; thereby creating opportunities for more direct integration of the
    physical world into the cyber world. SECTION II. Architecture of Iot Earlier at
    the initial stage of IOT the architecture comprised of only 3 layers which were
    perception, network and the application layer. But for a large scale application
    of IOT we needed a proper management and communication, so it lead to combining
    some fields of tele-communication managing network [3]. Fig.1 depicts the nowadays
    working architecture of IOT with 5 layers, middleware layer and business layer
    being added on to the previous 3 layer. The business layer added value to the
    digital industrialization [10] and with the introduction of cloud computing along
    IOT opened up a whole new paradigm of smart homes, smart farming, and smart agriculture
    [4] Perception layer- In this layer the physicals objects are accoutered with
    various sensors, tags and embedded microchips and actuators etc. We in here make
    sure that sensors or tags automatically perceive properties of their environment
    like movement, temperature, location etc and the actuators provide the local services.
    To keep track of all objects we provide them with a digital identity uniquely.
    Network layer- The network layer is responsible for transmitting the data of the
    perception layer to the decision making centers via any wireless or wired network
    so that it is globally accessible through internet. For transmitting the data
    any of the communication technology (wifi, Bluetooth,3g, zigbee, etc) can be implemented
    with any of the device(switch, hub, gateways) depending upon the requirement.
    Processing/Middleware layer- The precision layer’s sensors, chips etc keep on
    sensing the environment all the time which create a lot of data. This information
    generated is stored in the databases for intelligent processing to reach to repercussions
    of the actuators due to certain event. Cloud computing has become one of the most
    promising backend technology for this layer. The Cloud provides the top most level
    coverage and data transmission. It is also used as a central repository for data
    storage; the storage capacity of which is virtually infinite and unbounded by
    time Here cloud computing provide access to large pools of resources for complex
    computations, storage Application layer- Basic functionality of the application
    layer to provide a web services or access to us so that we take advantage of all
    the previous layers functionality globally. Any web application can be created
    depending on the requirement to exploit IOT functionality at remote end like for
    smart healthcare, smart homes, smart agriculture and many more. Business layer-
    This layer above application layer is for managing and manipulating various application
    as they fit in the business model and profit models. With the help of this layer
    we are able to formulate our future actions and business ventures. In 2010 [21]
    On the basis of services provided by IOT it is divided as Service related to identity
    it mostly involved RFID sensors and tags which could benefit production and shipping
    supply-chain [7], Service of aggregating information accumulating which help in
    monitoring and control system [8] Service for generating awareness collaboratively
    which is similar to the previous service but it just had an added on feature of
    storing the data and then acting on it and Other ubiquitous services which basically
    created a web of things by providing them with a universal API [9]. IOT has uncanny
    potential and its bizarre how it is being used everywhere as in healthcare for
    elderly monitoring, biomedical, in industries for supply and product management,
    for transportation, for energy conserving and it could also be used in environment
    for agriculture, and home safety. With fast growing life many chronic diseases
    have wide spread healthcare industry could really use help in clinical and home
    monitoring [35]. Kuljeet kaur along with neeraj kumar [23] discussed about the
    vehicular cloud with RFID sensors could help in saving lives by continuous monitoring
    and updating data on the cloud, fasso and carter [22] have also shown how the
    IOT sensors can be used in the healthcare industry. Using IOT can also help us
    in controlling the spreads of pandemics by analyzing their social networking to
    find the spread patterns and stop the infections [36]. The main problem with IOT-cloud
    types systems is delayed results as the observations are firstly stored on the
    cloud this in some cases can make the results totally useless example in case
    of smart homes thermal sensors delayed result can compromise security [15]. As
    we require faster and more real time results we are now moving to incorporating
    fog layer in between the cloud and the IOT layer. The fog computing or the fog
    layer helps to compute the major results of the IOT devices near to edge of the
    sensors thus giving faster results and only taking the data that is required for
    further computation to the cloud databases. Presence of fog supports the decentralized
    and intelligent processing of unrivalled data volumes generated by IoT sensors
    deployed for smooth integration of physical and cyber environments. And how this
    could generate many benefits to society [5]. Cloud data center are considered
    to centralized and far away fog computing comes for providing more networking
    at the edge [37].With the emerging of fog computing a new real time analytics
    systems can be added to the already available system of the IOT and cloud [24].The
    amalgamation of these three is already being used in the healthcare industry [25]
    rfid sensors helping us to sense the presence of any infected person around us
    and fog giving notification about their presence earlier we were only able to
    determine the pattern but with fog we get real time notifications. An integrated
    fog cloud and IOT architecture can increase performance, be energy efficiency,
    reduce latency, scalability, and better accuracy for IoT at the local level. A
    reconfigurable fog node architecture that can adapt according to the workload
    being run at a given time for better performance, energy, and real-time requirements
    of applications [43]. Fig. 1. Layer of IOT Show All SECTION III. Fog Computing
    As the trend of IOT started growing due to its use in various fields, the numbers
    of sensor, actuators devices went on increasing from thousand to millions and
    it was not easy to store this versatile and continuous data is a difficult task
    soon it started outstripping the bandwidth of traditional cloud and moreover the
    demand of more quick response in this fast time was seemed to be necessary [5]
    so fog computing was introduced in this architecture which acted as a bridge between
    the IOT devices and far away centralized data centers of cloud. The term fog computing
    was introduced by cisco which could provide a much quick response in the time
    sensitive cases like healthcare, vehicular or any other emergency uses at the
    very end of the network near to the sensor layer decreasing the latency rate of
    far of cloud centers. This in response could also help in only forwarding the
    information which is valuable for informatics analysis to the data centers of
    cloud [6]. Fog computing features as an intermediary layer between the cloud server
    and end user to avoid unnecessary flow of information and better control over
    data privacy and security while processing and sharing the information [40]. Figure
    2 gives a brief overlook of how the introduction of fog layer effect the previous
    architecture of IOT-cloud in figure 1. In here only the fog nodes has been added
    just after the IOT layer these nodes transfer the data to the nearest fog available
    for fastest response. Then the fog datacenters reduce the data to desired amount
    and then required data is transferred to the cloud [33]. Fog basically allows
    data analytics and generation of knowledge to be acquired near the data source
    with the help of vast network fog nodes which is actually anything with computing
    capability, storage capacity and internet access (switches, router, servers controllers
    are some example) [21]. Fig. 2. architecture of Fog based IOT Show All SECTION
    IV. Smart Agriculture Agriculture in most of the countries is primarily considered
    as the backbone of the economy. It not only provides us food and commodities but
    also incorporates a large sum of manforce for employment. The traditional agriculture
    is facing major setback to keep up with growing demand. This is due numerous aspect,
    mostly the farmers are unaware of their soil texture they just grow as per the
    needs of masses [12] and to maximize the production from the same amount of land,
    use of synthetic fertilizers has taken a toll on soil texture and lead to land
    degraded. Climate change is also making it worse for the crop growth [13] and
    we are very much aware that water scarcity is right around the corner [14]. Also
    monitoring of the crops at all times is really an impossible task. It can also
    be used in agriculture field. Most of the people engaged in the agriculture practices
    are not having proper and timely knowledge of the how to properly utilize their
    land and how to take proper care of certain crop in a time of attack of different
    bugs or how much fertilizer is required [16]. For modernization in the agriculture
    field IOT could be of great help. Most prominent sensors of IOT that could help
    are [45] [46] [26]: Most basic sensors being used are moisture sensors, ph sensors,
    humidity sensors. Moisture and humidity sensors make sure we water the plants
    correctly and on right time. The ph sensors determines the ph of the soil being
    used. Other IOT based sensor which could help are fertility sensor which make
    sure that we know what type nutrients are available in the soil so that we can
    decide accordingly what plants can be grown on that soil or what type of fertilizers
    we require for a good yield. Climatic sensors could also prove to be helpful for
    predicting climate changes. To provide a more real time track of growth of plants
    we could use video surveillance via video sensors and light intensity sensors
    By fully utilizing the potential of IOT we can take full advantage of the available
    resources to maximize the yield in our fields. Many countries now are investing
    in this field like European government has started venture in a project named
    Smart Akis for smart farming [32], Wefarm [33] is a UK based venture for the same
    purpose. Using IOT with wireless networks to monitor the field for humidity, temperature
    sensing for proper irrigation, weeding by remote controlled robots can be done
    [17]. We can also propose irrigation system which will be initiated by soil moisture
    sensors which after going below a threshold value will notify the farmer about
    it so that monitoring can be done anywhere [18]. Selecting proper crop for cultivation
    as per soil and multi crop cultivation can help farmers to cope with the ever
    changing crop prices [19].In 2013 [26] Fang created an agriculture cloud which
    can store all the information stored by various IOT sensors and we can use that
    information to work better on that field. Then Mili and rakesh in 2013 [27] showed
    that how this cloud-IOT based agriculture system will impact farmers and their
    lives. The GPS could be used for tracking the location and the information related
    to that area stored in the cloud could be easily shared regarding the soil type,
    crops preferred, amount of water required for crop, fertilizers required, and
    so on. Sensors, cameras used for regular monitoring and the data collected can
    again be stored on cloud for pattern recognition to help in future prediction
    [4]. The monitoring of social interactions could help in uncovering the similarities
    in the way individuals interact in different contexts, and identifying patterns
    of super connected behavior of the community [44] could help in recommendations
    for others in that area. Hongyue, Jingguo [28] introduced a smart way of planting
    using IOT and cloud based system using the mobile phones could help in identifying
    the problems. Adding a verified knowledge base could also help the budding farmers
    to have the required information when and where require [31]. Open source monitoring
    based system could also rendered for making an impact on a precision based agriculture
    this is easily accessible solution by smartphone application and also could be
    seen relatively have lower cost [20]. In 2017 [29] Mahammad along with Viswanathan
    gave a survey on various smart agriculture with IOT and cloud computing and concluded
    how much effective it can prove in phase of decision making. All of the previous
    system work well with the stored database of the cloud but will be slow when are
    asked to work on real time situations [30] and also working with various sensors
    will generate a large amount of data all of these problems can be solved with
    the introduction of the fog nodes between the system which work near to the IOT
    or the sensor level and give on spot real time outputs to the values obtained.
    using fog layer can lead to decreasing load to be shared to the cloud decreasing
    latency rate in [38] a precision based agriculture system has been proposed which
    could lead to better productions. Many such systems are being built and being
    implemented but still a lot has to be done to make this a success. The approach
    aims to provide a seamless handover from one Fog node to another, by automatically
    detecting the connectivity change, e.g., moving out of the range of one Fog node,
    and automatically connecting to the next available Fog node. This enables any
    application running on the users device to continue where it left off before the
    disconnect event occurred [42]. Figure 2 shows the working sequence followed by
    the cloud in comparison to the sequence followed by the fog which shows how fog
    prefers to give actions before storing the data but cloud stores the data then
    analyzed it and then takes an action that is why fog is preferred for a real time
    analytics. Fig. 3. working sequence of cloud v/s fog Show All SECTION V. Proposed
    Model For Incorporating Fog Computing- We have introduced a system in figure 2.
    Which comprises of the four layer the first one is the IOT layer of the sensors
    for sensing next comes the Fog layer which will work as analyzing and notification
    generating layer then it will transfer the data to the cloud for the storage.
    Then there is the layer of user interaction for queries and alert receiving. Detailed
    description of the working of these layers is as given below. Where the first
    layer is the IOT layer which comprises of various sensors embedded together such
    as moisture detectors, soil checker, surveillance cameras, and temperature measurer.
    The moisture detectors will sense the humidity of the soil and will generate an
    alert as soon as the moisture content decrease than the threshold value required
    for a particular crop which in return can turn on the irrigation system being
    used. The soil checker will check contents of various minerals present in the
    soil, which we can compare with the required contents thus helping us to know
    what type of fertilizers are required and will help in knowing which content we
    have to increase to get best yield. The second layer is the middle layer between
    the cloud database and IOT sensors which will work at sensor edge in acquiring
    the real-time data and performing the actions as alert generation for water requirement
    as soon as possible. It passes the observation than to the third layer of cloud.
    Cloud layer is used for storing the results for future use like for checking the
    trends of water requirement for a crop, which crop thrive best under what temperature
    and geographical location also what mineral content help in better and healthiest
    yield. The cloud here comprises of the data about the all the farming activities.
    The most important layer is user interaction layer by using which can send their
    farming related queries and will get their answers. Also they can live stream
    the condition their fields. Also they will get the notifications form the fog
    computing here only. SECTION VI. Proposed Algorithm: Input: Current classified
    information regarding user, crops, probability of various events and a threshold
    value predefined. Step 1. Continuously monitor the various attributes and events
    using IOT sensors in a given time stamp. Step 2. If the sensed value >= threshold
    value. Step 2.1 Take immediate action depending on the current requirement and
    also generate an alert for the user. Step 3. Store the action taken and data analysis
    on the cloud. Fig. 4. working methodology Show All In the given paper we have
    discussed technologies like IOT and fog are changing the world. Agriculture field
    cannot be left untouched with this revolution. In the given paper we have discussed
    various system with IOT and fog layer being used in the agriculture field. IOT
    layer which comprises of various sensors embedded together such as moisture detectors,
    soil checker, surveillance cameras, and temperature measurer. The moisture detectors
    could sense the humidity of the soil and will generate an alert as soon as the
    moisture content decrease than the threshold value required for a particular crop
    which in return can turn on the irrigation system being used. The soil checker
    will check contents of various minerals present in the soil, which we can compare
    with the required contents thus helping us to know what type of fertilizers are
    required and will help in knowing which content we have to increase to get best
    yield. It not will not only help in better growth of crop but also will help in
    saving water, less or the required amount of fertilizers can be used, indeed we
    can also save the gained information to the cloud and can be used by coming generation
    thus making it better and its faster and able to work in the real time. Authors
    Figures References Citations Keywords Metrics More Like This Internet of Things
    (IoT) in agriculture: an exploratory study on the production of growth tomato
    (industrial) in the south of Goiás, Brazil 2022 International Conference on Electrical,
    Computer, Communications and Mechatronics Engineering (ICECCME) Published: 2022
    Internet of Things for Sustainable Agriculture 2023 2nd International Conference
    on Futuristic Technologies (INCOFT) Published: 2023 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2021 2nd Global Conference for Advancement in Technology, GCAT 2021
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Internet of things revolutionizing Agriculture to Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
