- analysis: '>'
  authors:
  - Nguyen H.H.
  - Shin D.Y.
  - Jung W.S.
  - Kim T.Y.
  - Lee D.H.
  citation_count: '0'
  description: Industrial greenhouse mushroom cultivation is currently promising,
    due to the nutritious and commercial mushroom benefits and its convenience in
    adapting smart agriculture technologies. Traditional Device-Cloud protocol in
    smart agriculture wastes network resources when big data from Internet of Things
    (IoT) devices are directly transmitted to the cloud server without processing,
    delaying network connection and increasing costs. Edge computing has emerged to
    bridge these gaps by shifting partial data storage and computation capability
    from the cloud server to edge devices. However, selecting which tasks can be applied
    in edge computing depends on user-specific demands, suggesting the necessity to
    design a suitable Smart Agriculture Information System (SAIS) architecture for
    single-crop requirements. This study aims to design and implement a cost-saving
    multilayered SAIS architecture customized for smart greenhouse mushroom cultivation
    toward leveraging edge computing. A three-layer SAIS adopting the Device-Edge-Cloud
    protocol, which enables the integration of key environmental parameter data collected
    from the IoT sensor and RGB images collected from the camera, was tested in this
    research. Implementation of this designed SAIS architecture with typical examples
    of mushroom cultivation indicated that low-cost data pre-processing procedures
    including small-data storage, temporal resampling-based data reduction, and lightweight
    artificial intelligence (AI)-based data quality control (for anomalous environmental
    conditions detection) together with real-time AI model deployment (for mushroom
    detection) are compatible with edge computing. Integrating the Edge Layer as the
    center of the traditional protocol can significantly save network resources and
    operational costs by reducing unnecessary data sent from the device to the cloud,
    while keeping sufficient information.
  doi: 10.3390/agriculture14030489
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Agriculture All Article Types Advanced   Journals
    Agriculture Volume 14 Issue 3 10.3390/agriculture14030489 Submit to this Journal
    Review for this Journal Propose a Special Issue Article Menu Academic Editor Wei
    Lu Subscribe SciFeed Recommended Articles Related Info Link More by Authors Links
    Article Views 768 Table of Contents Abstract Introduction Background and Related
    Work System Architecture Design Implementation Results Discussion and Future Direction
    Conclusions Author Contributions Funding Data Availability Statement Conflicts
    of Interest References share Share announcement Help format_quote Cite question_answer
    Discuss in SciProfiles thumb_up Endorse textsms Comment first_page settings Order
    Article Reprints Open AccessArticle An Integrated IoT Sensor-Camera System toward
    Leveraging Edge Computing for Smart Greenhouse Mushroom Cultivation by Hoang Hai
    Nguyen 1, Dae-Yun Shin 1,2, Woo-Sung Jung 3, Tae-Yeol Kim 2 and Dae-Hyun Lee 4,*
    1 Sejong Rain Co., Ltd., In-House Venture of K-Water, Daejeon 34134, Republic
    of Korea 2 Graduate School of Smart Agriculture, Chungnam National University,
    Daejeon 34134, Republic of Korea 3 K-Water Research Institute, Daejeon 34045,
    Republic of Korea 4 Department of Biosystems Machinery Engineering, Chungnam National
    University, Daejeon 34134, Republic of Korea * Author to whom correspondence should
    be addressed. Agriculture 2024, 14(3), 489; https://doi.org/10.3390/agriculture14030489
    Submission received: 13 January 2024 / Revised: 25 February 2024 / Accepted: 5
    March 2024 / Published: 18 March 2024 (This article belongs to the Special Issue
    Application of Intelligent Greenhouse and Plant Factory Systems in Agricultural
    Production) Download keyboard_arrow_down     Browse Figures Versions Notes Abstract
    Industrial greenhouse mushroom cultivation is currently promising, due to the
    nutritious and commercial mushroom benefits and its convenience in adapting smart
    agriculture technologies. Traditional Device-Cloud protocol in smart agriculture
    wastes network resources when big data from Internet of Things (IoT) devices are
    directly transmitted to the cloud server without processing, delaying network
    connection and increasing costs. Edge computing has emerged to bridge these gaps
    by shifting partial data storage and computation capability from the cloud server
    to edge devices. However, selecting which tasks can be applied in edge computing
    depends on user-specific demands, suggesting the necessity to design a suitable
    Smart Agriculture Information System (SAIS) architecture for single-crop requirements.
    This study aims to design and implement a cost-saving multilayered SAIS architecture
    customized for smart greenhouse mushroom cultivation toward leveraging edge computing.
    A three-layer SAIS adopting the Device-Edge-Cloud protocol, which enables the
    integration of key environmental parameter data collected from the IoT sensor
    and RGB images collected from the camera, was tested in this research. Implementation
    of this designed SAIS architecture with typical examples of mushroom cultivation
    indicated that low-cost data pre-processing procedures including small-data storage,
    temporal resampling-based data reduction, and lightweight artificial intelligence
    (AI)-based data quality control (for anomalous environmental conditions detection)
    together with real-time AI model deployment (for mushroom detection) are compatible
    with edge computing. Integrating the Edge Layer as the center of the traditional
    protocol can significantly save network resources and operational costs by reducing
    unnecessary data sent from the device to the cloud, while keeping sufficient information.
    Keywords: smart agriculture; mushroom; edge computing; farm management information
    system (FMIS); machine vision; Agricultural IoT 1. Introduction Nowadays, edible
    mushrooms are well known as not only a healthy food but also a valuable pharmacy,
    since they can provide rich nutrients such as protein, minerals, and vitamins
    as well as increase the human immune system to prevent many diseases, even cancer
    [1,2]. Therefore, the demand for mushroom products is increasing in the world’s
    food market, especially after the COVID-19 pandemic [3,4]. Although wild mushrooms
    can be harvested in the natural environment, their high sensitivity to seasonal
    variations of weather/climate factors leads to unsustainable production [5,6].
    Industrialized mushroom cultivation in the greenhouse offers an alternative strategy
    to natural cultivation to improve both the quantity and quality of mushroom production
    because the key environmental parameters affecting mushroom growth can be monitored
    and controlled. However, the traditional cultivation method based on manual monitoring,
    controlling, and harvesting involves time-consuming and labor-intensive work which
    can then increase operational costs, demanding timely, automated, cost-effective,
    and eco-friendly solutions for the mushroom industry [7,8]. Along with the Fourth
    Industrial Revolution (Industry 4.0) when innovative technologies such as the
    Internet of Things (IoT), cloud computing, Big Data (BD), and Artificial Intelligence
    (AI) have been commonly employed in industrial automation, a parallel revolution
    in agriculture (Agriculture 4.0) boosts automation in farming activities by applying
    those new technologies to the agriculture sector, so-called smart agriculture/farming
    (or precision agriculture, digital agriculture, and Agricultural IoT). Although
    it can contribute to the reduction in labor costs, deploying smart agriculture
    systems in practice is facing other cost-related problems such as setup costs
    and running costs [9]. On the one hand, from the users’ point of view, especially
    in some developing countries where most people working in agriculture are smallholder
    farmers, they have limited access to modern smart farming infrastructure due to
    the expensive product prices (setup costs). On the other hand, from the perspective
    of service developers/providers, smart farming system construction and applications,
    which are commonly implemented in centralized cloud servers can consume massive
    resources for BD storage, management, analytics, and security, resulting in higher
    overall cloud service costs (running costs). Cutting those unnecessary costs is
    therefore pivotal for many business organizations, especially small and medium
    enterprises (SMEs), to optimize their smart farming systems toward serving smallholder
    clients with cost-saving infrastructures. Besides the cloud service costs, traditional
    smart agriculture systems are often limited by the slow network connection (low
    bandwidth) between Agricultural IoT devices and cloud servers when all the huge
    numbers of data collected from the devices are directly sent to the cloud, which
    then delays the system decisions and hampers real-time applications in smart agriculture
    (high latency) [10,11,12]. This is a challenge for mushroom cultivation when its
    key parameters require strict monitoring within short time intervals [13]. Edge
    computing (including cloudlets, fog, and mobile edge computing) has recently emerged
    as a promising solution to bridge this connection gap, thanks to the rapid advancement
    of information and communication technologies as well as hardware capacity. Specifically,
    an edge computing node can be regarded as a decentralized local server (edge server)
    that allows for storing a small number of data and bringing data computation closer
    to the edge devices [14,15,16]. By coupling the edge computing paradigm with a
    classical Device-Cloud protocol, the original BD is effectively managed in an
    offline process at the edge server before transmission instead of storing and
    processing all the collected raw data at the cloud server [17]. This can free
    up the bandwidth for faster connection and for the cloud server load spent on
    complicated analytics and applications [16,18]. Despite the wide deployment of
    edge computing in smart homes and smart cities, it is not very commonplace in
    smart farming, and thus there is still room for leveraging and improving this
    paradigm to meet the demands of smart agriculture as well as the greenhouse mushroom
    industry. Shifting partial work from cloud to edge offers SMEs an effective and
    cost-saving solution to overcome the issues of excessive bandwidth-cloud utilization
    and high latency [10]. However, determining which features should be conducted
    in the edge server highly depends on the specific functional requirements and
    capacity of each smart farming system [19]. This suggests the necessity to design
    a proper digital Farm Management Information System (FMIS) architecture assisting
    smart agriculture applications for the specific farmer’s requirements (e.g., for
    each different crop) [20,21,22], hereafter the Smart Agriculture Information System
    (SAIS). From the perspective of an SME, Sejong Rain Company in collaboration with
    Chungnam National University aims to design and implement a low-cost SAIS architecture
    customized for smart greenhouse mushroom management in association with a paradigm
    shift to edge computing for business objectives, in this article. This system
    was tested in a pilot site located in Songsan Green City, Republic of Korea. The
    advanced Agricultural IoT sensors developed by Korean companies, a standard network
    flow that is possible for scalability, and edge computing tasks suitable for greenhouse
    mushroom cultivation, together with examples of how to implement them, were introduced
    through the proposed SAIS architecture. Finally, a potential SAIS architecture
    for business purposes in future studies was also suggested, especially for the
    developing country markets that consider smart agriculture development as the
    core industry. 2. Background and Related Work 2.1. Smart Agriculture Information
    System (SAIS) The traditional FMIS, which relied on simple farm recordkeeping
    tasks, has been developed since the 1970s to provide useful information for decision-makers
    to effectively manage farming activities [23]. However, in the era of Agriculture
    4.0 nowadays, the adoption of a traditional FMIS is limited when massive data
    are provided from the IoT sensors and complex tasks are required for modern farm
    management [24,25]. To cope with the rapid increase of agricultural data pools
    and data-driven farming applications, the SAIS, whose cornerstone is the large
    digital FMIS specialized for precision agriculture, can improve the automation
    and efficiency in managing enormous amounts of farming information including data
    collection, data processing, and data-driven decision making [20,25]. Although
    the core of the SAIS is the multi-layered architecture comprising four basic components
    of Smart Product, Network Connection, Data, and Smart Service [22], recent studies
    paid more attention to adapting this core SAIS to the domain-specific uses by
    breaking it into higher-level architectures, ranging from the classical three-
    or four-layer up to the advanced seven- or eight-layer architectures. Among the
    classical architectures, the three-layer one, which corresponds to the two-layer
    without the Network Layer, refers to the Device-Cloud protocol where the raw data
    obtained by sensors will be directly transmitted to the cloud for storage, processing,
    and applications. The four-layer architecture (three-layer without the Network
    Layer) can allow edge computing to involve those cloud tasks. Integrating a separate
    layer of edge computing into SAIS architectures is also gaining attraction and
    possibly becoming a trending paradigm in future studies [17]. Additionally, advanced
    architectures improved on the classical ones for business objectives by proposing
    enterprise architecture by adding new layers such as the Business, User, or Security
    Layers [26]. For more details, the readers are referred to the literature reviews
    of different multi-layered SAISs in previous studies, summarized in Table 1. Table
    1. Literature reviews of multi-layered Smart Agriculture Information Systems.
    2.2. Smart Greenhouse Mushroom Cultivation Aside from the benefits for human health
    and commerce, edible mushrooms are currently becoming the preferred crop for indoor
    cultivation, even in urban farming, because they are easily relocated, do not
    require large space and direct sunlight, and need only a short duration until
    harvesting [35]. However, the major limitation came from the high sensitivity
    of mushrooms to the surrounding environment, since extreme weather conditions
    can immediately damage mushroom health. Therefore, the most important task of
    indoor mushroom cultivation relies on the timely and continuous control of the
    key environmental parameters’ ideal conditions at every mushroom growing stage
    [36]. Previous studies listed a wide range of those key parameters [13], but the
    two most important ones that are worth regarding are air temperature and humidity,
    while several studies further considered light intensity or carbon dioxide (CO2)
    levels. The ideal ranges for these parameters vary depending on different mushroom
    species [7,37], and they can be easily, timely, and automatically observed and
    controlled in the greenhouse using IoT sensors, which have been widely reported
    in the literature as the common approach for indoor mushroom management. Alongside
    the development of computer vision and precision agriculture technologies, high-resolution
    cameras associated with AI-based image processing have been successfully applied
    in the mushroom industry to enhance management accuracy and efficiency [38]. Current
    advances improved by combining the advantages of IoT sensors and camera computer
    vision, which opens a new door for future smart greenhouse mushroom cultivation
    in particular and smart agriculture in general. Literature reviews of smart greenhouse
    mushroom management using IoT sensors, cameras, and integrated IoT sensor-camera
    systems are summarized in Table 2. Table 2. Literature reviews of smart greenhouse
    mushroom management. 3. System Architecture Design Based on the potential of the
    SAIS with edge computing and the increased need for mushroom products, this study
    aims to design and implement a multi-layered SAIS architecture with leveraging
    edge computing for cost-effective smart greenhouse mushroom cultivation. In particular,
    an integrated IoT environmental sensor-camera system and the oyster mushroom were
    selected to test in this study. To highlight the capability of coupling the edge
    computing model to the classical Device-Cloud protocol, a general three-layer
    SAIS architecture (without the Network Layer), which adopted the Edge Layer as
    a bridge for the Device and Cloud (Device-Edge-Cloud protocol), was employed.
    Moreover, we also suggested the integration of a bidirectional (two-way) communication
    mechanism in this system to separate the network flow into two major domains for
    different functional tasks, including the Forward and Backward Domains. In each
    layer, two modules were included to respond to separated functional tasks in the
    Forward and Backward Domains, respectively. The proposed SAIS architecture applied
    to greenhouse mushroom management in this paper is depicted in Figure 1. Specifically,
    according to Figure 1, the Forward Domain enables data transmission from the Device
    Layer (Data Collecting module) through the Edge Layer for quality control and
    aggregation (Data Preprocessing module), and then to the Cloud Layer (Data Storage
    module). In contrast, the Backward Domain allows an inverse direction that AI-based
    solutions developed at the Cloud Layer using stored data (Data Analytics/AI Development
    module) to be deployed at the Edge Layer for real-time applications (Real-time
    AI Deployment module), then to control the ideal conditions of the environmental
    parameters if necessary via controlling actuators/sensors at the Device Layer
    (Device Controlling module). The Forward Domain is responsible for the data management
    and storage tasks while the Backward Domain is responsible for the solutions development
    and decision-making based on the obtained data. In this study, we describe the
    proposed architecture following its network flow and focus especially on the Forward
    Domain, since it is the mainstream in the SAIS. It is important to note that although
    the Network/Communication Layer which encompasses the protocols for network connection
    is also important and was already employed in this paper, we did not focus on
    modifying this layer, so it was not mentioned here as a major layer. A detailed
    description of the proposed SAIS architecture and its implementation for smart
    greenhouse mushroom management at the testbed site is provided below. Figure 1.
    A proposed design of the Smart Agriculture Information System (SAIS) architecture
    for smart greenhouse mushroom cultivation. The blue dashed border and arrows indicate
    the Forward Domain and its procedure, and the red dashed border and arrows indicate
    the Backward Domain and its procedure. 3.1. Forward Domain–Device Layer The Device
    Layer is the first layer in this proposed SAIS architecture, which enables a workspace
    for Agricultural IoT end devices. In this layer, the Data Collecting module is
    particularly responsible for the Forward Domain. Its detailed architecture is
    presented in Figure 2. Figure 2. The architecture of the Forward Domain in the
    Device Layer. Data Collecting: This module aims to collect farming and environmental
    data observed from the IoT sensors system. Since the integrated IoT environmental
    sensor-camera system was employed, this module was separated into two sub-modules
    for better management, consisting of (1) the one-dimensional (1D) Data sub-module
    which stands for point environmental data collected from the IoT sensors, and
    (2) the two-dimensional (2D) Data sub-module, which stands for image data collected
    from the cameras. 1-Dimensional Data (1): This sub-module offers a workspace for
    the point IoT sensors to collect the environmental data time series. Because temperature,
    humidity, and CO2 are generally the key environmental parameters for mushroom
    growth in the literature, they were considered in this system. A three-in-one
    IoT environmental sensor, which measures automatically and simultaneously the
    three key parameters of temperature (T), relative humidity (RH), and CO2 levels
    (CO2) in real-time using only one sensor, was adopted in this study. This low-cost
    combination sensor is a domestic Korean product that was researched and developed
    by the Sejong Rain Company, Republic of Korea, and is currently being tested before
    commercialization. Even though this combination sensor can observe real-time data,
    the maximum 10 min time resolution has been set to be updated in this sub-module.
    For more information or inquiries on this combination IoT sensor, please refer
    to the company homepage (http://sejongrain.com/, accessed on 10 January 2024).
    Its photos and specifications are shown in Figure 3a,b, and Table 3, respectively.
    Two-Dimensional Data (2): Besides the IoT environmental sensor, this system uses
    a surveillance camera system to collect crop image/video (time series of RGB images)
    data, which enhances automation in intuitive recognition of mushroom characteristics
    (e.g., shapes, colors, species, phenological stages, or related diseases) and
    was implemented in this sub-module. Specifically, an industrial high-definition
    (HD 720p) digital camera (model SMT-720PUSBBOX) manufactured by Smtkey Electronic
    Technology Company, Shenzhen Guangdong, China, was employed to provide streaming
    images/video of the oyster mushroom. However, to match the temporal resolution
    of the environmental sensor, the camera system was set to capture image time series
    at 10 min intervals in single red (R), green (G), and blue (B) bands. A photo
    of the camera used is shown in Figure 3c and its specifications are presented
    in Table 4. Figure 3. Photos of the combination IoT environmental sensor: (a)
    displaying temperature and humidity and (b) displaying CO2 level; and (c) photo
    of the surveillance camera used in this study. The Korean word in the IoT combination
    sensor label is the name of the company who develops this device, the Sejong Rain
    Company, Republic of Korea. Table 3. Specifications of the combination IoT environmental
    sensor used. Table 4. Specifications of the surveillance camera used. 3.2. Forward
    Domain–Edge Layer The Edge Layer or edge server is a middle layer in this proposed
    three-layer SAIS, where edge computing is executed, and is the major part of this
    study. It is important to note that edge computing is not a replacement for traditional
    cloud computing, but that it is a complement for cloud computing. Edge computing
    is normally conducted in low-memory and low-power microprocessors and assigned
    for small workloads with lightweight computation, which fits in with real-time
    AI applications. In contrast, cloud computing is compatible with smart solutions
    requiring BD and heavy computation capacity. Therefore, a powerful, low-energy-consumption,
    and cost-effective Raspberry Pi single-board computer was used in this study for
    edge computing in both Forward and Backward Domains. In particular, the Raspberry
    Pi 3 Model B+, which also provides a high-speed processor suitable for HD video
    processing and dual connections via both WiFi (wireless) and Ethernet port (wired),
    was employed in the system. For a more detailed description of its specifications,
    users are referred to the company’s website (https://www.raspberrypi.com/, accessed
    on 10 January 2024). The related tasks are shown in the Data Preprocessing module
    for the Forward Domain, and its architecture is depicted in Figure 4. Figure 4.
    The architecture of the Forward Domain in the Edge Layer. Data Preprocessing:
    It is important to note that not all the raw data should be stored in the cloud.
    Selecting essential data for the cloud can save resources by decreasing cloud
    and bandwidth workloads. Hence, the main mission of this module is to reduce the
    number of raw data observed from the Device Layer while keeping data quality before
    sending them to the Cloud Layer, based on the following sub-modules for preprocessing:
    Small-Data Storage (1): Since a previous study indicated the effective greenhouse
    mushroom monitoring on an hourly basis [13], we also set a one-hour (1 h) interval
    as the standard temporal resolution to be sent to the cloud and for mushroom cultivation
    in this study. To this end, several raw data should be stored in the Edge Layer
    for further temporal data resampling and quality control development. Temporal
    Resampling (2): The temporal resampling applied in this sub-module aims to convert
    the 10 min raw data into hourly data and relies on a simple Average Filtering
    method, whereas the six raw data samples within every 1h interval stored in the
    Small-Data Storage sub-module will be transferred to this sub-module for averaging
    into one data sample. This method can be applied to both 1D and 2D data in this
    SAIS and may help it reduce the number of data together with overcoming the temporal
    gaps (missing data) that occurred at the original 10 min interval. Data Quality
    Control (3): Despite the benefit of temporal resampling in dealing with the gaps
    in raw data time series, the resampled data still probably suffer from temporal
    gaps (when six raw data samples are missing values) or sudden extreme conditions.
    This requires an AI-based data quality control filter that can not only automatically
    and continuously detect such outliers in the data stream, but also has a low computational
    cost when it is applied to the Edge Layer. Even though several lightweight AI
    models are compatible with edge/fog computing, the well-known k-nearest neighbors
    (k-NN) algorithm was used for showcasing in this research. The k-NN is simply
    a non-parametric supervised learning method, which considers k samples of training
    data to solve the classification and regression problems, but it can be regarded
    as an unsupervised learning algorithm when it is applied to anomaly detection
    [50]. The k-NN integrated with a 24 h moving window was applied in this study
    to identify whether real-time data are anomalous or not, based on the lagged 23h
    data samples stored in the Small-Data Storage sub-module. Whenever the ksample
    is detected and masked, it can be continuously used to identify the (k + 1) sample,
    and the (k − 23) sample is then automatically removed from the Small-Data Storage
    sub-module. This AI-based data quality control filter can be applied to both 1D
    and 2D data. For 1D data, besides transmitting them to the Cloud Layer for long-term
    storage, the processed data were also sent to a responsive module of the Backward
    Domain in the Edge Layer to support the system’s real-time decision-making. However,
    in the case of 2D data, to reduce the high computational cost when processing
    image data, the RGB images obtained from the camera were first converted to grayscale
    images and then transformed to 1D format by simply averaging the digital number
    (DN) values within an image scene (scene-averaging) before they can be applied,
    with the data quality control filter. Anomalous DN data samples closer to 0 can
    be identified as temporal gaps (black images), while those with high values (e.g.,
    higher than 80—a typical average grayscale digital number value) can be classified
    as light images, which still provide useful information. The quality-controlled
    image data on an hourly basis were sent only to the Cloud Layer. 3.3. Forward
    Domain–Cloud Layer The Cloud Layer is the final layer in this proposed SAIS, which
    is widely used in various architectures and allows high computational application
    development based on the quality-controlled BD. Hence, the Forward Domain offers
    long-term high-quality data to be stored firstly in the Cloud Layer under the
    Data Storage module management. Data Storage: Because the accuracy of AI models
    significantly depends on the quality and quantity of the training data, this module
    aims to provide a space to store long-term (e.g., one life cycle of mushrooms)
    high-quality data observed from the integrated environmental sensor-camera system
    to develop AI-based solutions which require a high computation cost. These necessary
    datasets stored in this module can be then transmitted to the responsive module
    of the Backward Domain in the Cloud Layer for training AI models with respect
    to specific user requirements. 3.4. Backward Domain–Cloud Layer As highlighted
    in the description above, the mission of the Backward Domain is to develop AI-based
    smart solutions and make decisions based on the collected and stored data in the
    Forward Domain. Therefore, in the Cloud Layer, the Backward Domain tasks are conducted
    in the AI Development module. Figure 5 presents the architecture of the Backward
    Domain in the Cloud Layer. Figure 5. The architecture of the Backward Domain in
    the Cloud Layer. AI Development: This module is designed to account for AI-based
    smart solution development for specific demands, which requires BD for high computational
    cost training and complex analytics. The implementation of this module in the
    Backward Domain of the Cloud Layer follows the two sub-modules: AI Model Training
    (1): This sub-module includes the feature selection task for training AI models
    based on user-specific demands, whereas relevant important features were extracted
    from the BD in the Data Storage module. Furthermore, several well-known AI model
    candidates will be selected for training. Parameter Storage (2): The optimal AI
    model among the candidates was chosen and its optimal parameters were then stored
    in this sub-module for further deployment. Various AI-based smart greenhouse mushroom-cultivation
    solutions can be considered for development. However, to showcase only one example
    of the high-computational-cost AI model application with BD (mostly with image/video
    data) in the Cloud Layer, a well-known, fast, effective, and advanced computer
    vision algorithm version among the series of the “You Only Look Once” (YOLO) framework
    [51], the YOLOv5 model, was used in this study for real-time mushroom detection
    with a surveillance camera. Specifically, the YOLOv5 model, whose cornerstone
    is a simple deep convolutional neural network, was introduced in 2020 to improve
    on its predecessors in object detection. The YOLOv5 model divides images into
    a grid cell and finally predicts the objects with multiple bounding boxes per
    grid cell. Its architecture consists of three main components: the BackBone for
    feature extraction, the Neck for feature fusion, and the Head for feature conversion
    to bounding-box parameters. The BD images stored in the Big-Data Storage module
    can be labeled for training the YOLOv5 model. To reduce the training costs (including
    the training time and number of training-data samples), this study adopted the
    Transfer Learning method to fine-tune the pre-trained YOLOv5 model for mushroom
    detection to be compatible with the current training mushroom images in the Big-Data
    Storage module. The optimal model parameters were stored in the Parameter Storage
    sub-module and then transferred to the Edge Layer for real-time deployment. 3.5.
    Backward Domain–Edge Layer The Backward Domain in the Edge Layer provides the
    workspace for real-time smart agriculture solution deployment, which was assigned
    to the Real-time AI Deployment module, with its architecture provided in Figure
    6. Figure 6. The architecture of the Backward Domain in the Edge Layer. Real-time
    AI Deployment: This module consists of four sub-modules for integrating analytics
    from both environmental sensors and cameras to improve real-time solution/decision
    making, as follows: Short-term Analytics (1): This sub-module receives the analytical
    results from the Forward Domain in the Edge Layer (Data Preprocessing module),
    mainly based on temporary small-data storage of the 1D data from the IoT environmental
    sensor. Long-term Analytics (2): The optimal AI model obtained from the Backward
    Domain based on BD analytics in the Cloud Layer (AI Development module) was deployed
    in this sub-module, mainly for the 2D image data. Integrated Analytics (3): This
    sub-module combines the analytical results from the Short-term and Long-term Analytics
    sub-modules to enhance decision-making. Solutions/Decision Making (4): Relevant
    solutions/decisions will be made in this sub-module, based on the results from
    the Integrated Analytics sub-module. 3.6. Backward Domain–Device Layer The Backward
    Domain in the Device Layer covers the Device Controlling module. Device Controlling:
    This module aims to automatically control sensors/actuators to make farm management
    decisions as soon as possible, based on the analytical solutions provided by the
    Real-time AI Deployment module in the Edge Layer. For example, the image-based
    mushroom detection solution allows users to recognize whether the mushrooms are
    currently in the growing period or have been harvested. In the case of extreme
    conditions observed by the environmental sensor during the mushroom growing period,
    this module enables the modulating of key environmental parameters by controlling
    IoT sensors/actuators such as the heater/cooling fan (for temperature), humidifier/dehumidifier
    (for humidity), or air ventilation (for CO2 level) via connection to a microcontroller.
    4. Implementation Results 4.1. Implementation of Forward Domain–Device Layer Installation
    of the integrated IoT environmental sensor-surveillance camera system for smart
    greenhouse mushroom cultivation is the first implementation step and was carried
    out in a mushroom house located in Songsan Green City, Republic of Korea. This
    system aims to collect the key environmental parameters affecting mushroom growth
    and intuitive mushroom information, which is the responsibility of the Data Collecting
    module belonging to the Forward Domain in the Device Layer. Figure 7 describes
    the installation of the combination IoT environmental sensor for simultaneously
    measuring the real-time 1D data of three key environmental parameters including
    air temperature (T), atmospheric relative humidity (RH), and CO2 level (CO2),
    together with the construction of a data logger containing the Raspberry Pi single-board
    computer. Data collected from the IoT environmental sensor were then transmitted
    to the data logger for further processing, mainly via a wireless connection (Figure
    7a). However, we also set up ethernet cables here to ensure that data transmission
    can be automatically switched to a wired connection when the wireless connection
    collapses, maintaining their stable transmission (Figure 7b). It is important
    to note that although the environmental sensor was set up in the greenhouse environment,
    we constructed the data logger outside the mushroom house for future combination
    with outdoor smart agriculture sensors/actuators such as smart precipitation gauges,
    unmanned aerial vehicles, tractors, and so on (Figure 7c). Figure 7. Installation
    of the combination IoT environmental sensor for the greenhouse mushroom information
    system with connection to data logger via the following: (a) wireless connection
    and (b) wired connection. (c) Construction of data logger outdoors with potential
    combination with outdoor sensors. The Korean words in the label of the data logger
    represent for the system name “Agriculture Environment Data Collection System”
    and the company name “Sejong Rain”. The time series of the raw 1D data (at 10
    min of temporal resolution) for the three key parameters from the installed IoT
    environmental sensor for nearly one month (one life cycle of the mushroom) is
    depicted in Figure 8. In general, no major operational errors occurred when continuous
    data were collected without missing values and the observed data range fell within
    the sensor’s allowable measuring range for each parameter, according to Table
    3. This suggests that the combination IoT environmental sensor used in this study,
    which was developed by the Korean company, is ready and has potential for smart
    mushroom monitoring and further applications in smart agriculture. Figure 8. Time
    series of 1D raw data in 10 min intervals collected from the combination IoT environmental
    sensor for (a) temperature (T), (b) humidity (RH), and (c) CO2 level (CO2). Besides
    the IoT environmental sensor, the simultaneous installation of the surveillance
    camera to capture real-time intuitive 2D data for crop information was also implemented
    in the pilot area, as illustrated in Figure 9. The camera was fixed to collect
    a time series of RGB images covering a partial mushroom farm for preliminary testing.
    We also connected the camera system to the data logger for data transmission.
    Figure 9. Installation of the surveillance camera for the greenhouse-mushroom
    information system. Time series of the raw 2D data at 10 min time intervals were
    obtained from the installed surveillance camera. We showcase several RGB image
    samples of mushrooms at different growth stages in Figure 10. It can be drawn
    from Figure 10 that intuitive mushroom information can be well captured by the
    installed surveillance camera, even with the changes between growth stages. However,
    there are several temporal gaps (image samples with no-value/black images) that
    occurred during the operation which need to be noticed and addressed. All the
    raw data collected in the Device Layer were then sent to the Edge Layer for pre-processing.
    Figure 10. Samples of 2D raw data in 10 min intervals collected from the surveillance
    camera during different mushroom growth stages. The red rectangle highlights the
    gap (no-value data) in the data stream. 4.2. Implementation of Forward Domain–Edge
    Layer The raw 1D and 2D data collected at the Device Layer were then delivered
    to the Forward Domain in the Edge Layer for further preprocessing before being
    transmitted to the Cloud Layer. The Edge Layer is the major layer in this designed
    SAIS, whose main goal is a stepping stone toward saving cloud and bandwidth resources
    as well as selecting essential data for the cloud server. Therefore, the Forward
    Domain in this layer (represented by the Data Preprocessing module) is responsible
    for reducing unnecessary data collected from the Device Layer and conducting quality
    control for high-quality data sent to the Cloud Layer. To this end, several raw
    data samples (small data) should be stored in this layer for a short period and
    the Small-Data Storage sub-module is responsible for providing storage space in
    this task. The first preprocessing task in this module is data reduction. Since
    the mushroom monitoring on an hourly basis is sufficient and was selected as the
    standard temporal resolution to be updated in the cloud, an average filtering
    technique was utilized as the temporal resampling method to convert 10 min data
    into 1h data. Figure 11 illustrates examples of how to conduct this temporal resampling
    method in both 1D and 2D data time series. In particular, every six raw data samples/images
    within a current 1h duration were initially stored. Since no significant differences
    were observed among these raw data, an hourly representative point value/image
    can be generated by simply taking an average of those six data samples/images.
    After an hourly representative data sample/image is given, it will be sent back
    to the Small-Data Storage sub-module for temporal storage and the current raw
    data will be automatically removed from this sub-module for updating the coming
    raw data. It is important to note that, besides the data reduction benefit, this
    method also supports dealing with temporal gap problems, ensuring continuous measurement
    of the data stream. For example, a black image (temporal gap) that occurred in
    the raw 2D data was successfully removed and replaced by a representative image
    (average image of the six raw data in 10 min intervals within every 1h interval)
    while keeping sufficient information, as illustrated in Figure 11b. Figure 11.
    Examples of the temporal resampling based on the average filtering method to resample
    raw data in 10 min intervals into standard data in 1h intervals applied to the
    following: (a) 1D data from the environmental sensor and (b) 2D data from the
    camera. The red dashed rectangle represents the 1h data window. The second preprocessing
    task in the Forward Domain of the Edge Layer is for data quality control, which
    is covered by the Data Quality Controlling sub-module. For the 1D data, since
    the important task of smart greenhouse mushroom cultivation is mainly based on
    modulating the ideal conditions of key environmental parameters, this sub-module
    aims to determine the sudden extreme conditions occurring in the environmental
    data, supporting the system with timely responses to address the problems as well
    as managing high-quality data sent to the cloud server. However, because edge
    computing is compatible with light computing applications that can work well in
    short-term small-data numbers stored in this layer, effective and lightweight
    AI algorithms are preferable for this task. As a result, a widely used lightweight
    AI model, the k-NN algorithm, was selected as the anomaly-detection method in
    this study. More specifically, the k-NN was conducted in a 24h moving window (k
    = 23) for the continuous hourly data samples stored in the Small-Data Storage.
    The real-time outlier detection of the current data sample (the k sample) can
    be performed based on its recent 23 lagged hourly data samples. Whenever the k
    sample is detected and masked, it can be continuously used to identify the (k
    + 1) sample, and the (k − 23) sample is automatically deleted from the Small-Data
    Storage sub-module. Figure 12 presents the results of applying the k-NN algorithm-based
    anomaly detection to the 1D hourly data of three key environmental parameters
    for mushroom cultivation. These successful implementation results of the k-NN
    model-based anomaly detection in the 1D environmental data, as illustrated in
    Figure 12, highlight the suitability and potential application of lightweight
    AI models for edge computing. Figure 12. Results of the AI-based anomaly-detection
    application to the 1D hourly (hr) environmental data for (a) temperature (T),
    (b) humidity (RH), and (c) CO2 level (CO2). As regards the 2D data, one problem
    is that although the temporal resampling method can deal with temporal gaps in
    the raw data, they still possibly occur in the resampled data (when the six original
    images within one hour are all black images). Hence, the anomaly-detection method
    should be applied to the hourly 2D data to detect these gaps. However, to deal
    with the high computational cost when processing numerous crop images, a preprocessing
    procedure series was applied to the 2D data to transform them into 1D data before
    conducting the AI-based anomaly detection. In particular, an RGB image was first
    converted to a grayscale image and subsequently transformed into a digital number
    value by averaging grayscale digital numbers from all pixels within an image scene
    (scene averaging). Figure 13 provides a general example of how to carry out AI-based
    anomaly detection in the 2D data and their results for mushroom images in this
    study. As can be seen from Figure 13, two types of outliers have been identified
    by using the k-NN anomaly-detection method. Anomalous data with digital numbers
    closer to 0 are assigned to the temporal gaps (black images), which do not provide
    any useful information, whereas the outliers with the highest values (e.g., greater
    than 80—a typical average grayscale digital number value) are identified and masked
    as “light image”, which still provide similar crop information to the normal images
    but at a higher brightness. Finally, after the resampled data are quality-controlled,
    they will be sent to the cloud server for storage and to the Short-term Analytics
    sub-module in the Backward Domain of the Edge Layer for supporting real-time decision
    making. Figure 13. An example of the AI-based anomaly-detection application to
    the 2D image data. The color maps on the left side display the heatmap of an original
    image in digital numbers for red, green, blue, and grayscale channels. 4.3. Implementation
    of Forward- and Backward-Domain–Cloud Layer In the Cloud Layer, high-quality BD
    transmitted from the Edge Layer after passing the data quality control procedure
    will be initially stored in the Big-Data Storage Module of the Forward Domain.
    These high-quality BD stored in the Cloud Layer were then sent to the AI Development
    Module for training high-computational-cost AI models based on specific user requirements.
    This study employed a widely used deep learning-based object-detection algorithm,
    the YOLOv5 model, to address the mushroom recognition problem, mainly for the
    2D image data. Moreover, to reduce the computational cost during the training
    process, the transfer learning technique was integrated to fine-tune the pre-trained
    YOLOv5 model for adapting the mushroom images stored in the Cloud Layer. Detailed
    information on training and evaluation of the YOLOv5 model for mushroom detection
    in this study is shown in Table 5. The obtained optimal hyperparameters were subsequently
    stored in the Parameter Storage module and were used for real-time deployment
    of this solution in the Edge Layer. Table 5. Information on the training and evaluation
    of the YOLOv5 model for mushroom detection. 4.4. Implementation of Backward Domain–Edge
    Layer The Backward Domain in the Edge Layer, which was carried out by the Real-time
    AI Development module, aims to provide integrated analytics for decision-making
    by combining the results of short-term and long-term analytics. In particular,
    on the one hand, the Short-term Analytics module in this layer obtained the key
    environmental-parameter anomaly-detection results from the Forward Domain in the
    Edge Layer, which was described in the section above (Implementation of Forward
    Domain–Edge Layer) and is shown in Figure 12. On the other hand, when it comes
    to long-term analytics, this module adapted the developed YOLOv5-based mushroom-recognition
    model for detection, based on the stored optimal model hyperparameters from the
    Backward Domain in the Cloud Layer. Representative examples of the YOLOv5 model
    deployment for mushroom detection in this study are depicted in Figure 14, whereas
    single-object (mushroom) areas are detected in continuous images with the red
    bounding box and confidence level by further applying instance segmentation. According
    to the figure, in general, most of the mushroom areas during the fruiting period
    can be well identified by the system, with a clear discrimination of the non-mushroom
    areas observed. This indicated the successful deployment of a high-computational-cost
    AI model in the Edge Layer, demonstrating its suitability to adopt a developed
    AI model in the Cloud Layer for edge computing. However, there are still several
    mushroom areas in an image that the system cannot detect, suggesting the need
    for retraining the model to improve its performance by the updated high-quality
    BD sent to the Cloud. The results from the long-term analytics can be integrated
    with those from the short-term analytics to support the system’s decision-making.
    For example, if outliers are detected in the streaming environmental data (results
    from the short-term analytics) during the mushroom’s fruiting period (results
    from the long-term analytics), the system can automatically send an alert notification
    to the users or control the sensors/actuators for maintaining the normal status
    of environmental conditions. Figure 14. An example of implementation of the Real-time
    AI Deployment module (deployment of YOLOv5 and transfer learning in mushroom detection).
    5. Discussion and Future Direction The major difference between this proposed
    research and related work mentioned in Table 1 and Table 2 is the combined use
    of the edge-computing paradigm in a smart greenhouse mushroom-cultivation information
    system. In particular, the Edge Layer was not included in the SAIS architecture
    for mushroom cultivation in Table 1 [28], while none of the previous mushroom
    management studies in Table 2 employed the edge computing model in their system.
    Thus, the successful practical application of this study can shed new light on
    leveraging edge-computing paradigm shifts as well as improving smart mushroom
    cultivation systems. In addition, a minor discrepancy that is worth mentioning
    is the introduction of a new low-cost combination IoT environmental sensor made
    by a Korean company. This product combines three single sensors for different
    environmental parameters into one sensor (three-in-one sensor) and also employs
    low-cost Raspberry Pi single-board computers working in the resource-saving edge
    computing paradigm, so it can contribute to the diverse selections for clients
    in low-cost smart agriculture devices and information system markets. Notwithstanding
    the benefits of edge computing in complementing classical cloud computing and
    in improving smart greenhouse mushroom cultivation, this preliminary study may
    suffer from several challenges in the future. First, the implementation costs
    when scaling this framework up to a larger scale for other crops, together with
    integrating outdoor smart agriculture systems, are questionable, since additional
    costs from new IoT devices and their installation might be included in the system.
    This may limit the commercialization of this framework for business objectives.
    Second, the improvement in mushroom production efficiency when the edge computing
    paradigm is included is not fully analyzed, suggesting the implementation of more
    detailed analyses for this problem in further studies. Addressing potential challenges
    is also related to the future outlook of this research. Besides the application
    customized for mushroom cultivation, the successful practical implementation of
    this study suggests a potential to scale up this framework for business objectives
    and other user-specific requirements (e.g., other crops) in future studies. To
    this end, in the future direction, this fundamental SAIS architecture is expected
    to be coupled with the two new layers, including the User and Administration Layers.
    The potential architecture for future the SAIS is illustrated in Figure 15, and
    a detailed description for each added layer is provided below. Figure 15. The
    potential architecture of the future SAIS for business objectives. The blue dashed
    border and arrows indicate the Forward Domain and its procedure, and the red dashed
    border and arrows indicate the Backward Domain and its procedure. User Layer:
    This layer is particularly designed for the users of the SAIS such as farmers
    or clients. From the user’s perspective, the acquisition of quality-controlled
    datasets and the intuitive visualization of these datasets with timely notifications
    if any anomalous events occur from the Cloud Layer, and the capability to control
    the devices manually in an emergency in the Device Layer, are preferable. Thus,
    several respective modules such as Data Extraction, Visualization/Notification,
    or Manual Device Controlling Modules can be considered in this layer. Since the
    users mainly work in the Device and Cloud Layers, the users can only access these
    two layers, and they do not need to access the Edge Layer to adjust any edge computing
    tasks. Administration Layer: This layer is particularly designed for the providers
    or developers (e.g., companies) of the SAIS for business goals. Unlike the users,
    the administrators aim to manage all the data flow from the Device Layer to the
    Cloud Layer, so they can access and collect data from all the layers in this system,
    which can be conducted by the Data Extraction/Management module. Moreover, the
    administrators can meet the specific user requirements by developing suitable
    solutions, and ensure the safety of the system by maintaining the security. Therefore,
    the two respective modules including Application Development and Network Security
    are considered in this layer. Not only are the above additional layers being included,
    but the Device Layer is also planning to be extended with new sensors, in the
    future system. Microcontrollers and several controlling sensors/actuators (e.g.,
    heaters, fans, humidifiers, or air ventilation…) are expected to be utilized,
    which can complement the current indoor system. Furthermore, a parallel SAIS for
    outdoor smart agriculture with relevant IoT devices (e.g., smart rain gauges,
    automated weather sensors, irrigation valves, or unmanned aerial vehicles…) can
    be considered and developed for an integrated indoor–outdoor smart agriculture
    system. 6. Conclusions Traditional Device-Cloud protocol in smart agriculture
    often suffers from the challenges of delayed system responses caused by low bandwidth
    and high latency, together with high cloud-service costs for data computation
    and storage when enormous numbers of data acquired from IoT devices are directly
    transmitted to the cloud server without processing. Novel edge computing offers
    an effective solution to deal with challenges in this traditional protocol by
    shifting partial data storage and computation capability from the cloud server
    to edge devices. Nevertheless, selecting which tasks can be implemented in edge
    computing depends on user-specific demands, suggesting the need to design a specific
    and proper Smart Agriculture Information System (SAIS) architecture that is compatible
    with single-crop requirements. Based on the nutritious and commercial benefits
    of edible mushrooms as well as the necessity of cost reduction from a business
    viewpoint, the major goal of this study is to design and implement a standard
    multilayered SAIS architecture for smart greenhouse mushroom cultivation toward
    leveraging edge computing, which can be scalable for business goals. In this designed
    SAIS, the three-layer architecture, which couples edge computing in the central
    layer to connect the Device and Cloud Layers (Device-Edge-Cloud protocol) and
    enables automation in mushroom management using an integration of the IoT environmental
    sensor (for mushroom key environmental-parameter monitoring) and surveillance
    camera (for intuitive mushroom monitoring) was employed and tested in a testbed
    site in the Republic of Korea. Via this designed SAIS, we aim to introduce the
    advanced combination environmental IoT sensors developed by Korean companies,
    a standard network flow that is possible for scalability and suitable edge computing
    tasks, with typical examples. Moreover, a potential SAIS architecture with additional
    layers for a future direction for business purposes was also suggested. The successfully
    implemented SAIS architecture indicated that our combination IoT environmental
    sensor integrated with a surveillance camera could monitor the real-time key environmental
    parameters affecting mushroom growth and intuitive mushroom information. Typical
    examples of mushroom cultivation based on the collected data revealed that several
    low-cost data pre-processing procedures including small-data storage, temporal
    resampling-based data reduction, and lightweight artificial intelligence (AI)-based
    data quality control for anomaly detection within environmental conditions, together
    with real-time AI model (YOLOv5) deployment for mushroom recognition from crop
    images, are compatible with edge computing. In contrast, high-quality BD storage
    and high-computational-cost AI model development can be implemented in the cloud.
    Moreover, integrating the Edge Layer as the center of the traditional protocol
    can significantly save network resources and operational costs by reducing unnecessary
    data sent from the device to the cloud while keeping sufficient information. Finally,
    the future improvement suggests including additional layers to meet user-specific
    demands for business objectives and the extension of the current system with new
    controlling sensors and a parallel outdoor system, toward an integrated indoor–outdoor
    smart agriculture system. Author Contributions Conceptualization, H.H.N., D.-Y.S.
    and D.-H.L.; methodology, H.H.N. and D.-Y.S.; software, H.H.N.; validation, D.-Y.S.,
    W.-S.J. and T.-Y.K.; formal analysis, T.-Y.K.; investigation, W.-S.J.; resources,
    D.-Y.S.; data curation, H.H.N.; writing—original draft preparation, H.H.N.; writing—review
    and editing, D.-Y.S., W.-S.J. and T.-Y.K.; visualization, H.H.N.; supervision,
    D.-H.L.; project administration, D.-H.L.; funding acquisition, D.-H.L. All authors
    have read and agreed to the published version of the manuscript. Funding This
    research was supported by the “Regional Innovation Strategy” (RIS) through the
    National Research Foundation of Korea (NRF), funded by the Ministry of Education
    (MOE) (2021RIS-004), and the research fund of Chungnam National University (CNU),
    Republic of Korea (2022-0694-01). The APC was also funded by the MOE through the
    NRF RIS project (2021RIS-004) and the CNU research fund (2022-0694-01). Data Availability
    Statement The raw data supporting the conclusions of this article will be made
    available by the authors on request. Conflicts of Interest Authors Hoang Hai Nguyen
    and Dae-Yun Shin were employed by the company Sejong Rain Co., Ltd. The remaining
    authors declare that the research was conducted in the absence of any commercial
    or financial relationships that could be construed as a potential conflict of
    interest. The funders had no role in the design of the study; in the collection,
    analyses, or interpretation of data; in the writing of the manuscript; or in the
    decision to publish the results. References Ba, D.M.; Ssentongo, P.; Beelman,
    R.B.; Muscat, J.; Gao, X.; Richie, J.P. Higher Mushroom Consumption Is Associated
    with Lower Risk of Cancer: A Systematic Review and Meta-Analysis of Observational
    Studies. Adv. Nutr. 2021, 12, 1691–1704. [Google Scholar] [CrossRef] [PubMed]
    Roncero-Ramos, I.; Delgado-Andrade, C. The Beneficial Role of Edible Mushrooms
    in Human Health. Curr. Opin. Food Sci. 2017, 14, 122–128. [Google Scholar] [CrossRef]
    Hamza, A.; Ghanekar, S.; Santhosh Kumar, D. Current Trends in Health-Promoting
    Potential and Biomaterial Applications of Edible Mushrooms for Human Wellness.
    Food Biosci. 2023, 51, 102290. [Google Scholar] [CrossRef] Kour, H.; Kour, D.;
    Kour, S.; Singh, S.; Jawad Hashmi, S.A.; Yadav, A.N.; Kumar, K.; Sharma, Y.P.;
    Ahluwalia, A.S. Bioactive Compounds from Mushrooms: Emerging Bioresources of Food
    and Nutraceuticals. Food Biosci. 2022, 50, 102124. [Google Scholar] [CrossRef]
    Kauserud, H.; Stige, L.C.; Vik, J.O.; Økland, R.H.; Høiland, K.; Stenseth, N.C.
    Mushroom Fruiting and Climate Change. Proc. Natl. Acad. Sci. USA 2008, 105, 3811–3814.
    [Google Scholar] [CrossRef] Procházka, P.; Soukupová, J.; Tomšík, K.; Mullen,
    K.J.; Čábelková, I. Climatic Factors Affecting Wild Mushroom Foraging in Central
    Europe. Forests 2023, 14, 382. [Google Scholar] [CrossRef] Rukhiran, M.; Sutanthavibul,
    C.; Boonsong, S.; Netinant, P. IoT-Based Mushroom Cultivation System with Solar
    Renewable Energy Integration: Assessing the Sustainable Impact of the Yield and
    Quality. Sustainability 2023, 15, 13968. [Google Scholar] [CrossRef] Sujatanagarjuna,
    A.; Kia, S.; Briechle, D.F.; Leiding, B. MushR: A Smart, Automated, and Scalable
    Indoor Harvesting System for Gourmet Mushrooms. Agriculture 2023, 13, 1533. [Google
    Scholar] [CrossRef] Elijah, O.; Rahman, T.A.; Orikumhi, I.; Leow, C.Y.; Hindia,
    M.N. An Overview of Internet of Things (IoT) and Data Analytics in Agriculture:
    Benefits and Challenges. IEEE Internet Things J. 2018, 5, 3758–3773. [Google Scholar]
    [CrossRef] Pan, J.; McElhannon, J. Future Edge Cloud and Edge Computing for Internet
    of Things Applications. IEEE Internet Things J. 2018, 5, 439–449. [Google Scholar]
    [CrossRef] Alharbi, H.A.; Aldossary, M. Energy-Efficient Edge-Fog-Cloud Architecture
    for IoT-Based Smart Agriculture Environment. IEEE Access 2021, 9, 110480–110492.
    [Google Scholar] [CrossRef] Singh, R.; Gill, S.S. Edge AI: A Survey. Internet
    Things Cyber-Phys. Syst. 2023, 3, 71–92. [Google Scholar] [CrossRef] Islam, M.A.;
    Islam, M.A.; Miah, M.S.U.; Bhowmik, A. An Automated Monitoring and Environmental
    Control System for Laboratory-Scale Cultivation of Oyster Mushrooms Using the
    Internet of Agricultural Thing (IoAT). In Proceedings of the 2nd International
    Conference on Computing Advancements, Dhaka, Bangladesh, 10–12 March 2022; pp.
    207–212. [Google Scholar] [CrossRef] Das, R.; Inuwa, M.M. A Review on Fog Computing:
    Issues, Characteristics, Challenges, and Potential Applications. Telemat. Inform.
    Rep. 2023, 10, 100049. [Google Scholar] [CrossRef] Shi, W.; Cao, J.; Zhang, Q.;
    Li, Y.; Xu, L. Edge Computing: Vision and Challenges. IEEE Internet Things J.
    2016, 3, 637–646. [Google Scholar] [CrossRef] Zhang, X.; Cao, Z.; Dong, W. Overview
    of Edge Computing in the Agricultural Internet of Things: Key Technologies, Applications,
    Challenges. IEEE Access 2020, 8, 141748–141761. [Google Scholar] [CrossRef] Lin,
    Y.B.; Chen, W.E.; Chang, T.C.Y. Moving from Cloud to Fog/Edge: The Smart Agriculture
    Experience. IEEE Commun. Mag. 2023, 61, 86–92. [Google Scholar] [CrossRef] da
    Costa Bezerra, S.F.; Filho, A.S.M.; Delicato, F.C.; da Rocha, A.R. Article Processing
    Complex Events in Fog-Based Internet of Things Systems for Smart Agriculture.
    Sensors 2021, 21, 7226. [Google Scholar] [CrossRef] Mansouri, Y.; Babar, M.A.
    A Review of Edge Computing: Features and Resource Virtualization. J. Parallel
    Distrib. Comput. 2021, 150, 155–183. [Google Scholar] [CrossRef] Köksal; Tekinerdogan,
    B. Architecture Design Approach for IoT-Based Farm Management Information Systems.
    Precis. Agric. 2019, 20, 926–958. [Google Scholar] [CrossRef] Murakami, E.; Saraiva,
    A.M.; Ribeiro, L.C.M.; Cugnasca, C.E.; Hirakawa, A.R.; Correa, P.L.P. An Infrastructure
    for the Development of Distributed Service-Oriented Information Systems for Precision
    Agriculture. Comput. Electron. Agric. 2007, 58, 37–48. [Google Scholar] [CrossRef]
    Strobel, G. Farming in the Era of Internet of Things: An Information System Architecture
    for Smart Farming. WI2020 Community Tracks 2020, 208–223. [Google Scholar] [CrossRef]
    Fountas, S.; Carli, G.; Sørensen, C.G.; Tsiropoulos, Z.; Cavalaris, C.; Vatsanidou,
    A.; Liakos, B.; Canavari, M.; Wiebensohn, J.; Tisserye, B. Farm Management Information
    Systems: Current Situation and Future Perspectives. Comput. Electron. Agric. 2015,
    115, 40–50. [Google Scholar] [CrossRef] Sørensen, C.G.; Fountas, S.; Nash, E.;
    Pesonen, L.; Bochtis, D.; Pedersen, S.M.; Basso, B.; Blackmore, S.B. Conceptual
    Model of a Future Farm Management Information System. Comput. Electron. Agric.
    2010, 72, 37–47. [Google Scholar] [CrossRef] Villa-Henriksen, A.; Edwards, G.T.C.;
    Pesonen, L.A.; Green, O.; Sørensen, C.A.G. Internet of Things in Arable Farming:
    Implementation, Applications, Challenges and Potential. Biosyst. Eng. 2020, 191,
    60–84. [Google Scholar] [CrossRef] Winter, R.; Fischer, R. Essential Layers, Artifacts,
    and Dependencies of Enterprise Architecture. In Proceedings of the 2006 10th IEEE
    International Enterprise Distributed Object Computing Conference Workshops (EDOCW’06),
    Hong Kong, China, 16–20 October 2006; pp. 30–38. [Google Scholar] [CrossRef] Li,
    X.H.; Cheng, X.; Yan, K.; Gong, P. A Monitoring System for Vegetable Greenhouses
    Based on a Wireless Sensor Network. Sensors 2010, 10, 8963–8980. [Google Scholar]
    [CrossRef] [PubMed] Moysiadis, V.; Karaiskou, C.; Kokkonis, G.; Moscholios, I.D.;
    Sarigiannidis, P. A System Architecture for Smart Farming on Mushroom Cultivation.
    In Proceedings of the 2022 5th World Symposium on Communication Engineering (WSCE),
    Nagoya, Japan, 16–18 September 2022; pp. 89–94. [Google Scholar] [CrossRef] Ferrández-Pastor,
    F.J.; García-Chamizo, J.M.; Nieto-Hidalgo, M.; Mora-Pascual, J.; Mora-Martínez,
    J. Developing Ubiquitous Sensor Network Platform Using Internet of Things: Application
    in Precision Agriculture. Sensors 2016, 16, 1141. [Google Scholar] [CrossRef]
    [PubMed] Carpio, F.; Jukan, A.; Sanchez, A.I.M.; Amla, N.; Kemper, N. Beyond Production
    Indicators: A Novel Smart Farming Application and System for Animal Welfare. In
    Proceedings of the Fourth International Conference on Animal-Computer Interaction,
    Milton Keynes, UK, 21–23 November 2017; pp. 1–11. [Google Scholar] [CrossRef]
    Verma, S.; Gala, R.; Madhavan, S.; Burkule, S.; Chauhan, S.; Prakash, C. An Internet
    of Things (IoT) Architecture for Smart Agriculture. In Proceedings of the 2018
    Fourth International Conference on Computing Communication Control and Automation,
    Pune, India, 16–18 August 2018; pp. 1–4. [Google Scholar] [CrossRef] Zamora-Izquierdo,
    M.A.; Santa, J.; Martínez, J.A.; Martínez, V.; Skarmeta, A.F. Smart Farming IoT
    Platform Based on Edge and Cloud Computing. Biosyst. Eng. 2019, 177, 4–17. [Google
    Scholar] [CrossRef] Ray, P.P. Internet of Things for Smart Agriculture: Technologies,
    Practices and Future Direction. J. Ambient Intell. Smart Environ. 2017, 9, 395–420.
    [Google Scholar] [CrossRef] Khan, F.A.; Abubakar, A.; Mahmoud, M.; Al-Khasawneh,
    M.A.; Alarood, A.A. Cotton Crop Cultivation Oriented Semantic Framework Based
    on IoT Smart Farming Application. Int. J. Eng. Adv. Technol. 2019, 8, 480–484.
    [Google Scholar] Ramli, M.I.; Ariffin, M.A.M.; Zainol, Z.; Amin, M.N.M.; Hirawan,
    D.; Sumitra, I.D.; Jamil, N. Design of a Smart Portable Farming Kit for Indoor
    Cultivation Using the Raspberry Pi Platform. Pertanika J. Sci. Technol. 2023,
    31, 1731–1754. [Google Scholar] [CrossRef] Chen, L.; Qian, L.; Zhang, X.; Li,
    J.; Zhang, Z.; Chen, X. Research Progress on Indoor Environment of Mushroom Factory.
    Int. J. Agric. Biol. Eng. 2022, 15, 25–32. [Google Scholar] [CrossRef] Suresh,
    M.; Srinivasan, M.; Gowri Shankar, S.; Karthikeyan, D.; Nakhul, V.; Naveen Kumar,
    A.; Sundar, S.; Maniraj, P. Monitoring and Automatic Control of Various Parameters
    for Mushroom Farming. IOP Conf. Ser. Mater. Sci. Eng. 2021, 1055, 012011. [Google
    Scholar] [CrossRef] Yin, H.; Yi, W.; Hu, D. Computer Vision and Machine Learning
    Applied in the Mushroom Industry: A Critical Review. Comput. Electron. Agric.
    2022, 198, 107015. [Google Scholar] [CrossRef] Kassim, M.R.M.; Harun, A.N.; Yusoff,
    I.M.; Mat, I.; Kuen, C.P.; Rahmad, N. Applications of Wireless Sensor Networks
    in Shiitake Mushroom Cultivation. In Proceedings of the 2017 Eleventh International
    Conference on Sensing Technology, Sydney, NSW, Australia, 4–6 December 2017; pp.
    1–6. [Google Scholar] [CrossRef] Mohammed, M.F.; Azmi, A.; Zakaria, Z.; Tajuddin,
    M.F.N.; Isa, Z.M.; Azmi, S.A. IoT Based Monitoring and Environment Control System
    for Indoor Cultivation of Oyster Mushroom. J. Phys. Conf. Ser. 2018, 1019, 012053.
    [Google Scholar] [CrossRef] Dipali, D.; Subramanian, T.; Kumaran, G.S. A Smart
    Oyster Mushroom Cultivation Using Automatic Fuzzy Logic Controller. J. Discret.
    Math. Sci. Cryptogr. 2023, 26, 601–615. [Google Scholar] [CrossRef] Dong, J.;
    Zheng, L. Quality Classification of Enoki Mushroom Caps Based on CNN. In Proceedings
    of the 2019 IEEE 4th International Conference on Image, Vision and Computing,
    Xiamen, China, 5–7 July 2019; pp. 450–454. [Google Scholar] [CrossRef] Lu, C.P.;
    Liaw, J.J. A Novel Image Measurement Algorithm for Common Mushroom Caps Based
    on Convolutional Neural Network. Comput. Electron. Agric. 2020, 171, 105336. [Google
    Scholar] [CrossRef] Wei, B.; Zhang, Y.; Pu, Y.; Sun, Y.; Zhang, S.; Lin, H.; Zeng,
    C.; Zhao, Y.; Wang, K.; Chen, Z. Recursive-YOLOv5 Network for Edible Mushroom
    Detection in Scenes with Vertical Stick Placement. IEEE Access 2022, 10, 40093–40108.
    [Google Scholar] [CrossRef] Moysiadis, V.; Kokkonis, G.; Bibi, S.; Moscholios,
    I.; Maropoulos, N.; Sarigiannidis, P. Monitoring Mushroom Growth with Machine
    Learning. Agriculture 2023, 13, 223. [Google Scholar] [CrossRef] Aguirre, L.;
    Frias, J.M.; Barry-Ryan, C.; Grogan, H. Modelling Browning and Brown Spotting
    of Mushrooms (Agaricus bisporus) Stored in Controlled Environmental Conditions
    Using Image Analysis. J. Food Eng. 2009, 91, 280–286. [Google Scholar] [CrossRef]
    Barauskas, R.; Kriščiūnas, A.; Čalnerytė, D.; Pilipavičius, P.; Fyleris, T.; Daniulaitis,
    V.; Mikalauskis, R. Approach of AI-Based Automatic Climate Control in White Button
    Mushroom Growing Hall. Agriculture 2022, 12, 1921. [Google Scholar] [CrossRef]
    Rahman, H.; Faruq, M.O.; Abdul Hai, T.B.; Rahman, W.; Hossain, M.M.; Hasan, M.;
    Islam, S.; Moinuddin, M.; Islam, M.T.; Azad, M.M. IoT Enabled Mushroom Farm Automation
    with Machine Learning to Classify Toxic Mushrooms in Bangladesh. J. Agric. Food
    Res. 2022, 7, 100267. [Google Scholar] [CrossRef] Chong, J.L.; Chew, K.W.; Peter,
    A.P.; Ting, H.Y.; Show, P.L. Internet of Things (IoT)-Based Environmental Monitoring
    and Control System for Home-Based Mushroom Cultivation. Biosensors 2023, 13, 98.
    [Google Scholar] [CrossRef] [PubMed] Goldstein, M.; Uchida, S. A Comparative Evaluation
    of Unsupervised Anomaly Detection Algorithms for Multivariate Data. PLoS ONE 2016,
    11, e0152173. [Google Scholar] [CrossRef] Redmon, J.; Divvala, S.; Girshick, R.;
    Farhadi, A. You Only Look Once: Unified, Real-Time Object Detection. In Proceedings
    of the IEEE Conference on Computer Vision and Pattern Recognition, Las Vegas,
    NV, USA, 27–30 June 2016; pp. 779–788. [Google Scholar] [CrossRef]           Disclaimer/Publisher’s
    Note: The statements, opinions and data contained in all publications are solely
    those of the individual author(s) and contributor(s) and not of MDPI and/or the
    editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.  © 2024 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Nguyen, H.H.; Shin, D.-Y.; Jung, W.-S.; Kim,
    T.-Y.; Lee, D.-H. An Integrated IoT Sensor-Camera System toward Leveraging Edge
    Computing for Smart Greenhouse Mushroom Cultivation. Agriculture 2024, 14, 489.
    https://doi.org/10.3390/agriculture14030489 AMA Style Nguyen HH, Shin D-Y, Jung
    W-S, Kim T-Y, Lee D-H. An Integrated IoT Sensor-Camera System toward Leveraging
    Edge Computing for Smart Greenhouse Mushroom Cultivation. Agriculture. 2024; 14(3):489.
    https://doi.org/10.3390/agriculture14030489 Chicago/Turabian Style Nguyen, Hoang
    Hai, Dae-Yun Shin, Woo-Sung Jung, Tae-Yeol Kim, and Dae-Hyun Lee. 2024. \"An Integrated
    IoT Sensor-Camera System toward Leveraging Edge Computing for Smart Greenhouse
    Mushroom Cultivation\" Agriculture 14, no. 3: 489. https://doi.org/10.3390/agriculture14030489
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations No citations
    were found for this article, but you may check on Google Scholar Article Access
    Statistics Article access statistics Article Views 18. Mar 20. Mar 22. Mar 24.
    Mar 26. Mar 28. Mar 30. Mar 1. Apr 3. Apr 5. Apr 7. Apr 9. Apr 11. Apr 0 1000
    250 500 750 For more information on the journal statistics, click here. Multiple
    requests from the same IP address are counted as one view.   Agriculture, EISSN
    2077-0472, Published by MDPI RSS Content Alert Further Information Article Processing
    Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines
    For Authors For Reviewers For Editors For Librarians For Publishers For Societies
    For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit
    SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Agriculture (Switzerland)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An Integrated IoT Sensor-Camera System toward Leveraging Edge Computing for
    Smart Greenhouse Mushroom Cultivation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Alazzai W.K.
  - Abood B.S.Z.
  - Al-Jawahry H.M.
  - Obaid M.K.
  citation_count: '0'
  description: 'This review article titled "Precision Farming: The Power of AI and
    IoT Technologies"delves into the transformative impact of Artificial Intelligence
    (AI) and the Internet of Things (IoT) in revolutionising modern agricultural practices.
    This paper explores the integration of cutting-edge technologies, including AI,
    IoT, remote sensing, and Geographic Information Systems (GIS), in addressing the
    challenges posed by diminishing agricultural resources and an expanding population.
    Precision farming, empowered by these technologies, offers a paradigm shift from
    traditional farming methods to a more data-driven, efficient, and environmentally
    sustainable approach. The use of AI and IoT in agriculture has led to significant
    advancements in crop monitoring, resource management, and decision-making processes.
    However, the implementation of these technologies is not without challenges, such
    as accessibility, connectivity, and the complexity of integration. This article
    reviews the current state and future prospects of precision farming, emphasising
    its role in enhancing agricultural productivity while minimising environmental
    impact. The potential for future innovations in this field is vast, promising
    a new era of efficient and sustainable farming practices essential for global
    food security.'
  doi: 10.1051/e3sconf/202449104006
  full_citation: '>'
  full_text: '>

    "Journals Books Conferences EDPS Account All issuesSeriesForthcomingAbout Search
    Menu All issues Volume 491 (2024) E3S Web Conf., 491 (2024) 04006 Abstract Table
    of Contents Previous articleNext article Open Access E3S Web of Conferences 491,
    04006 (2024) Precision Farming: The Power of AI and IoT Technologies Waleed K.
    Alazzai11, Baydaa Sh.Z. Abood22, Hassan M. Al-Jawahry33 and Mohammed Kadhim Obaid44
    1 Medical Technical College, Al-Farahidi University, Baghdad, Iraq 2 National
    University Of Science And Technology, Dhi Qar, Iraq 3 The Islamic university,
    Najaf, Iraq ; 4 Ahl Al Bayt University, Karbala, Iraq ; 1 Corresponding author:
    Rohitvaish2023@outlook.com 2 Corresponding author: baydaa.zghair@nust.edu.iq 3
    Corresponding author: hassanaljawahry@gmail.com 4 Corresponding author: Mohammed.obiad@
    abu.edu.iq Abstract This review article titled \"Precision Farming: The Power
    of AI and IoT Technologies\" delves into the transformative impact of Artificial
    Intelligence (AI) and the Internet of Things (IoT) in revolutionising modern agricultural
    practices. This paper explores the integration of cutting-edge technologies, including
    AI, IoT, remote sensing, and Geographic Information Systems (GIS), in addressing
    the challenges posed by diminishing agricultural resources and an expanding population.
    Precision farming, empowered by these technologies, offers a paradigm shift from
    traditional farming methods to a more data-driven, efficient, and environmentally
    sustainable approach. The use of AI and IoT in agriculture has led to significant
    advancements in crop monitoring, resource management, and decision-making processes.
    However, the implementation of these technologies is not without challenges, such
    as accessibility, connectivity, and the complexity of integration. This article
    reviews the current state and future prospects of precision farming, emphasising
    its role in enhancing agricultural productivity while minimising environmental
    impact. The potential for future innovations in this field is vast, promising
    a new era of efficient and sustainable farming practices essential for global
    food security. Key words: AI and IoT / Precision Farming / data-driven / food
    / agricultural © The Authors, published by EDP Sciences, 2024 This is an Open
    Access article distributed under the terms of the Creative Commons Attribution
    License 4.0, which permits unrestricted use, distribution, and reproduction in
    any medium, provided the original work is properly cited. Download this article
    in PDF format Table of Contents Article contents AbstractPDF (1.846 MB)References
    Database links NASA ADS Abstract Service Metrics Show article metrics Services
    Same authors - Google Scholar - EDP Sciences database Recommend this article Download
    citation Alert me if this article is corrected Alert me if this article is cited
    Related Articles Smart Agriculture Solutions: Harnessing AI and IoT for Crop Management
    E3S Web of Conferences 477, 00057 (2024) Harvesting the Future: AI and IoT in
    Agriculture E3S Web of Conferences 477, 00090 (2024) Farming in the Digital Age:
    Smart Agriculture with AI and IoT E3S Web of Conferences 477, 00081 (2024)     More
    Bookmarking Mendeley Reader''s services Email-alert E3S Web of Conferences eISSN:
    2267-1242 All issues Volume 491 (2024) E3S Web Conf., 491 (2024) 04006 Abstract
    Back to top Mentions légales Contacts Privacy policy A Vision4Press website By
    using this website, you agree that EDP Sciences may store web audience measurement
    cookies and, on some pages, cookies from social networks. More information and
    setup OK"'
  inline_citation: '>'
  journal: E3S Web of Conferences
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Precision Farming: The Power of AI and IoT Technologies'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Fu R.
  - Ren X.
  - Li Y.
  - Wu Y.
  - Sun H.
  - Al-Absi M.A.
  citation_count: '12'
  description: In recent years, unmanned aerial vehicle (UAV) remote sensing has developed
    rapidly in the field of farmland information monitoring. Real-time and accurate
    access to farmland information and crop growth dynamics is a prerequisite for
    the implementation of precision agriculture. Machine learning identifies existing
    knowledge to acquire new knowledge, promotes the development of Artificial Intelligence,
    and brings a large number of data training sets for machine learning. This article
    aims to ensure the safe operation of agricultural information systems and guarantee
    the data security of intelligent agriculture. The machine learning method explores
    the wireless network deployment of the UAV system. The geographical location deployment
    of agricultural information security can effectively carry out rapid security
    detection of agricultural information security. First, the UAV-assisted information
    acquisition system was studied. Besides, a double deep Q -network (DDQN) algorithm
    for location deployment based on geography position information (GPI) was proposed
    to quickly optimize the deployment location of UAVs. GPI can avoid the complicated
    calculation process of channel state information. The DDQN algorithm was introduced
    to obtain the functional relationship between the GPI and the optimal UAV deployment
    position, forming a new GPI-Learning strategy. In addition, the convolutional
    neural network (CNN) and long short-term memory (LSTM) are integrated as the CNN-LSTM
    algorithm to build the intrusion detection system for Agricultural Internet of
    Things (AIoT) for agriculture. In the integrated network structure of the system,
    LSTM is responsible for data transmission, and CNN is capable of network model
    building. Combined with the influence of various parameters on the performance
    of the UAV deployment location algorithm, the simulation experiment set the population
    size as 36, the discovery probability as 0.25, the step scaling factor as 0.8,
    and the Levy flight index as 1.25. The network throughput performance of the GPI-Learning
    algorithm combined with cuckoo search was better than other algorithms under different
    numbers of UAVs. On the KDD-CUP99 data set, the accuracy and detection rate of
    the AIoT intrusion detection system based on the CNN+LSTM algorithm reached 93.5%
    and 94.4%, respectively. In general, the AIoT intrusion detection system reported
    here has crucial practical reference value for the safe operation of agricultural
    information systems.
  doi: 10.1109/JIOT.2023.3236322
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Internet of Things
    Journal >Volume: 10 Issue: 21 Machine-Learning-Based UAV-Assisted Agricultural
    Information Security Architecture and Intrusion Detection Publisher: IEEE Cite
    This PDF Rui Fu; Xiaojun Ren; Ye Li; Yongtang Wu; Hao Sun; Mohammed Abdulhakim
    Al-Absi All Authors 9 Cites in Papers 880 Full Text Views Abstract Document Sections
    I. Introduction II. Related Work III. Agricultural Information Security Architecture
    and Intrusion Detection IV. Results and Discussion V. Conclusion Authors Figures
    References Citations Keywords Metrics Abstract: In recent years, unmanned aerial
    vehicle (UAV) remote sensing has developed rapidly in the field of farmland information
    monitoring. Real-time and accurate access to farmland information and crop growth
    dynamics is a prerequisite for the implementation of precision agriculture. Machine
    learning identifies existing knowledge to acquire new knowledge, promotes the
    development of Artificial Intelligence, and brings a large number of data training
    sets for machine learning. This article aims to ensure the safe operation of agricultural
    information systems and guarantee the data security of intelligent agriculture.
    The machine learning method explores the wireless network deployment of the UAV
    system. The geographical location deployment of agricultural information security
    can effectively carry out rapid security detection of agricultural information
    security. First, the UAV-assisted information acquisition system was studied.
    Besides, a double deep Q -network (DDQN) algorithm for location deployment based
    on geography position information (GPI) was proposed to quickly optimize the deployment
    location of UAVs. GPI can avoid the complicated calculation process of channel
    state information. The DDQN algorithm was introduced to obtain the functional
    relationship between the GPI and the optimal UAV deployment position, forming
    a new GPI-Learning strategy. In addition, the convolutional neural network (CNN)
    and long short-term memory (LSTM) are integrated as the CNN–LSTM algorithm to
    build the intrusion detection system for Agricultural Internet of Things (AIoT)
    for agriculture. In the integrated network structure of the system, LSTM is responsible
    for data transmission, and CNN is capable of network model building. Combined
    with the influence of various parameters on the performance of the UAV deployment
    location algorithm, the simulation experiment set the population size as 36, the
    discovery probability as 0.25, the step scaling factor as 0.8, and the Levy flight
    ind... (Show More) Published in: IEEE Internet of Things Journal ( Volume: 10,
    Issue: 21, 01 November 2023) Page(s): 18589 - 18598 Date of Publication: 30 January
    2023 ISSN Information: DOI: 10.1109/JIOT.2023.3236322 Publisher: IEEE Funding
    Agency: SECTION I. Introduction “Agriculture 4.0,” also known as intelligent agriculture
    or digital agriculture, is characterized by the development and adoption of new
    digital technologies, which is considered to have evolved from the era of precision
    agriculture [1], [2], [3]. On the one hand, it continues precision agriculture
    and allows for the automation of more agricultural production activities using
    new advanced technologies. On the other hand, Agriculture 4.0 realizes the “Internet
    of Agriculture” to intelligently apply and analyze the data of the entire agricultural
    and food supply chain, thereby reducing costs and improving the quality and traceability
    of agricultural products [4], [5]. The ZigBee ad hoc network transmits control
    information between the monitoring center and wireless gateway through the fifth-generation
    (5G) communication technology [6], [7], [8]. Unmanned aerial vehicles (UAVs) have
    been widely used in many fields. They can complete many civil and military tasks,
    including trajectory planning, obstacle avoidance, and cruise [9]. In the field
    of precision agriculture, UAV remote sensing can monitor crop growth parameters,
    in terms of assisting crop decision making. UAV remote sensing can diagnose crop
    nutritional status and field moisture information with high accuracy for monitoring
    pests and diseases [10], [11]. Using Machine learning methods to solve the deployment
    issues of UAV wireless networks can quickly determine the optimal deployment location
    of UAVs, which is significant for optimizing the performance of wireless networks
    [12], [13]. In addition, the demand for agricultural information security is increasing
    with the rapid development of information technology, and the UAV for agricultural
    information collection and data intrusion detection can avoid the leakage of agricultural
    information data. The intelligent agricultural monitoring system can effectively
    solve the problem of workers’ management of land and crops. With the smart agricultural
    monitoring system, people can always have monitoring equipment ready no matter
    where they are. With the continuous development of wireless communication technology
    research and breakthroughs in smart agriculture, farmers’ daily management will
    be increasingly convenient, minimizing human input, and allowing fewer people
    to do more efficient work. The intelligent control technology of various agricultural
    equipment has been paid a proliferation of attention by people from all walks
    of life. Most of the existing intelligent agricultural monitoring systems are
    high in cost, large in size, high in power consumption, and low in detection accuracy.
    There are also quite a few agricultural monitoring systems with poor control core
    performance, low operating speed, unable to run the Internet of Things (IoT) operating
    system, and poor real-time performance. UAVs could provide global Internet connectivity
    in the air. However, there are still many technical problems in their communication
    systems, such as ground channel modeling and wireless communication deployment
    and security. The development of wireless connectivity services for UAVs is currently
    in great shape. However, when people’s online appliances, such as agricultural
    equipment, can be controlled by strangers at any time without permission, and
    when national infrastructure is at risk of being controlled or destroyed by enemy
    forces, the development of IoT will be significantly hindered. Therefore, we must
    attach great importance to the security-related issues of IoT and strengthen research
    on related technologies. With the rapid development of the Internet, network security
    is even more closely related to people’s production and life. It is imminent to
    protect network security and strengthen network intrusion detection. This work
    aims to strengthen UAV positioning technology, ensure the safe operation of agricultural
    information systems, and guarantee the data security of smart agriculture. Research
    on UAV positioning and intrusion detection is very necessary and valuable. This
    work designs a new agricultural IoT (AIoT) intrusion detection system based on
    Machine learning methods after earnestly studying and summarizing previous related
    research. It can quickly determine the optimal deployment location of UVAs and
    further improve the accuracy and detection rate of AIoT intrusion detection, which
    is of great significance for optimizing the single performance of wireless networks.
    In summary, the above literature works focus on studies related to AIoT and UAVs
    and identify the technical framework of UAV-assisted agricultural systems based
    on machine learning. They are of practical significance for promoting the safe
    operation of agricultural information systems. The contribution of this work is
    the agricultural information security framework supported by the UAV technology.
    This work innovatively integrates machine learning and UAV for data collection,
    promoting the enhancement of Internet and information security technologies. The
    present work focuses on the UAV-assisted information monitoring system. Besides,
    a double deep Q -network (DDQN) algorithm for location deployment based on geographic
    position information (GPI) is proposed to quickly optimize the deployment position
    of UAVs and realize the continuity of UAV trajectory planning. Finally, an intrusion
    detection scheme for abnormal data based on deep learning is proposed to ensure
    the safe operation of the smart agricultural information management system (SAIMS).
    Fig. 1 displays the framework structure of the whole study. Fig. 1. Overall framework
    structure of the study. Show All Fig. 1 illustrates the realization of the UAV-assisted
    agricultural information security architecture based on machine learning. Here,
    Section I provides a research background for this work based on domestic and foreign
    research focusing on the AIoT information security architecture and intrusion
    detection issues. Section II discusses three aspects of machine learning-based
    UAV wireless network deployment, UAV-assisted farm information collection, and
    agricultural data detection and interference detection models to analyze the process
    of machine learning and UAVs for data collection to establish UAV-assisted information
    monitoring systems. Section III evaluates the wireless network deployment strategy
    and explains the research results. SECTION II. Related Work UAVs have become an
    essential part of a new generation of wireless communication networks. Compared
    with traditional terrestrial solutions, UAV networks are of great help in improving
    coverage and spectral efficiency in various communication-based applications [14].
    Traditional UAVs mostly rely on centralized servers for data processing through
    sophisticated machine learning algorithms. Therefore, all traditional cyberattacks
    impact the data transmission and storage of UAVs. Khan et al. (2021) [15] improved
    the performance of UAVs through a blockchain-based decentralized machine learning
    framework. The authors believe that this framework may significantly enhance data
    integrity and storage capabilities, significant for the intelligent decision making
    between humans and machines. Shrestha et al. (2021) [16] proposed a UAV- and satellite-based
    5G cybersecurity model that effectively leverages machine learning to detect vulnerabilities
    and cyberattacks. AIoT Information Collection System: IoT collects relevant information
    on agricultural production, agricultural product circulation, and crop ontology
    by applying various sensors and sensing technologies [17], [18]. As an essential
    part of IoT, various performance sensors, including noncontact rapid measurement
    and intelligent sensors, provide a new acceptable quantitative technical means
    for collecting field soil and crop information. He and Shi (2021) [19] believed
    that the application of advanced sensors in the AIoT provides strong technical
    support for measuring important information. At present, there are mainly two
    types of intrusion detection techniques: 1) anomaly detection and 2) misuse detection
    [20]. Meanwhile, scientific and technological personnel are studying some new
    intrusion detection techniques, such as detection methods based on the immune
    system, genetic algorithms, and detection methods based on kernel systems [21].
    Hamid and Sugumaran (2020) [22] used data mining technology to analyze data and
    extract features and utilized a multimodel cost-based method to generate a low-cost,
    high-precision detection model. It effectively improved the efficiency and scalability
    of intrusion detection systems. Onyema et al. (2022) [23] established an automated
    security continuous cloud service model through data flow analysis using deep
    belief and decision tree algorithms. They verified that the model effectively
    improved the accuracy of the intrusion detection system. Deep learning has achieved
    great success in the intrusion detection field. Khan (2021) [24] proposed a highly
    scalable IoT intrusion detection system based on deep neural networks (DNNs).
    According to the research of foreign and domestic scholars, the relevant technologies
    of intrusion detection have been developed for many years and are relatively mature.
    However, related research started relatively late in the field of IoT. Researchers
    pay much attention to simply improving the detection rate of the detection system,
    lacking a balance between high accuracy and detection rate. At the same time,
    the maintenance assistance of UAV positioning technology has little consideration
    for the IoT intrusion detection system. Combined with the above research progress,
    this research focuses on the AIoT information security architecture and intrusion
    detection issues. In the SAIMS, UAVs are used to assist in information collection.
    Besides, the wireless network deployment of the UAV system is explored based on
    the machine learning method. In addition, a solution to the agricultural data
    processing and network intrusion detection problems is proposed based on machine
    learning to ensure the safe operation of the AIoT information system. SECTION
    III. Agricultural Information Security Architecture and Intrusion Detection A.
    Key Technologies of the SAIMS Smart agriculture is a digital method formed by
    integrating modern information technologies and traditional agriculture. Smart
    agriculture is an agricultural form that realizes precise perception, intelligent
    control, and intelligent management of the production process based on information
    technology and advanced equipment conditions and pursues higher agricultural resource
    utilization, higher labor productivity, and better employment experience [25],
    [26]. The SAIMS consists of four major parts: 1) wireless sensor nodes; 2) wireless
    routing nodes; 3) wireless gateways; and 4) monitoring centers. There are four
    key technologies in the practical application of the IoT in agricultural information
    management: 1) sensor technology; 2) radio frequency identification (RFID) technology;
    3) quick response code method; and 4) embedded system technology [27], [28], [29].
    Fig. 2 presents the AIoT architecture. Fig. 2. AIoT architecture. Show All As
    can be seen from Fig. 2, the AIoT architecture mainly contains the application
    layer, processing layer, transportation layer, and perception layer. The application
    layer includes agricultural land cultivation, horticultural protection, agricultural
    products logistics, and livestock breeding. The system transportation layer includes
    wireless sensors, mobile communication, and the Internet. The perception layer
    includes sensors, bar codes, and radio frequency information cards. B. Machine
    Learning-Based UAV Wireless Network Deployment GPI is generally used to describe
    the temporal and spatial relationships of geographic things. It can be used to
    locate geographic things qualitatively and quantitatively according to the different
    needs of people so as to grasp the temporal and spatial attributes and relevant
    characteristics of geographic things. The use of aerial platforms, such as UAVs,
    has emerged as a promising solution for providing reliable and cost-effective
    wireless communications. In particular, UAVs can be deployed quickly and efficiently
    to support the operation of cellular networks and improve the Quality of Service
    (QoS) by establishing line-of-sight communication links [30]. Despite these inherent
    advantages of UAV-based communications, little has been done to analyze the performance
    tradeoffs of using UAVs as aerial wireless platforms [31], [32], [33]. Fig. 3
    reveals the UAV-to-user communication system. Fig. 3. UAV-to-user communication
    system. Show All In Fig. 3, different colors of connecting lines indicate different
    reception paths of signals, where red indicates interference signals, purple indicates
    system information signals, and black indicates signal transmission from UAV to
    ground. The AtG model is composed of line-of-sight links and non-line-of-sight
    links. The UAV is used to collect multimedia data; the relay base station is connected
    to the UAV to obtain multimedia data; the relay base station link is a link composed
    of multiple relay base stations for a user communication connection between the
    UAV and the ground base station; the control terminal is wirelessly connected
    to the ground base station and can obtain multimedia data. The line-of-sight link
    probability is calculated according to Pr LoS = d= 1 1+aexp(−b(arcsin( H d )−α))
    H 2 + ( x UAV − x user ) 2 + ( y UAV − y user ) 2 − − − − − − − − − − − − − −
    − − − − − − − − − − − − − − − − √ (1) (2) View Source where a and b denote the
    constant value of the environment and the constant value of the carrier frequency,
    respectively; H stands for the altitude of the UAV; d represents the spatial distance
    between the UAV and the user; Pr LoS signifies the probability of failure of the
    link line; x UAV − x user refers to the difference between the system input and
    the user input; and y UAV − y user indicates the difference between the system
    output and the user interface output. Combined with (1), the probability of non-line-of-sight
    links can be expressed as Pr NLoS =1− Pr LoS . (3) View Source In (3), Pr NLoS
    denotes the probability of nonvisible links. The path loss corresponding to line-of-sight
    links and non-line-of-sight links are written as P L LoS = P L NLoS = μ LoS (
    4πfd c ) α μ NLoS ( 4πfd c ) α (4) (5) View Source where c represents the speed
    of light; μ LoS and μ NLoS are the path loss coefficient of the line-of-sight
    link and the non-line-of-sight link, respectively, α refers to the path loss;
    and f signifies the carrier frequency. Equation (6) describes the mean path loss
    PL=P L LoS × Pr LoS +P L NLoS × Pr NLoS . (6) View Source Equation (7) indicates
    the channel gain g= ( 4πf c ) −α d −α [ Pr LoS ⋅ μ LoS + Pr NLoS ⋅ μ NLoS ] −1
    . (7) View Source The total transmission rate of the downlink channel is taken
    as the criterion for evaluating the deployment location of the UAV base station.
    If the user k is served by the UAV j , based on the Shannon formula, the transmission
    rate of the channel can be expressed as R j,k = B j,k log 2 ⎛ ⎝ 1+ p j,k ⋅ g j,k
    ∑ i≠j i∈j p j,k ⋅ g j,k + σ 2 ⎞ ⎠ . (8) View Source In (8), p j,k and g j,k refer
    to the transmission power and channel gain, respectively; σ 2 represents the white
    noise power; and B j,k represents the bandwidth allocated by the UAV j to the
    user k . Assuming that the UAV can quickly reach the deployed position in each
    fixed time slot, each time slot can be modeled as a static optimization problem,
    as presented in max l ∑ i=1 I ∑ k=1 K ρ i,k R i,k . (9) View Source In (9), R
    i,k denotes the QoS constraint; R ρ i,k is a binary variable, indicating whether
    the user k accesses the UAV j ; and l i represents the location constraint of
    the UAV. It is essential to analyze the specific process of the DDQN algorithm.
    First, the values and network parameters corresponding to all states and actions
    are randomly initialized to the first state of the current state sequence to get
    its feature vector. The corresponding action in the current network output is
    selected in the ϵ -Greedy method of the current network. Then, the feature vector
    and reward corresponding to the new state are obtained to determine whether it
    is a terminated state. Finally, the mean square loss function is used to update
    all parameters of the current network by backpropagation of the gradient of the
    neural network. After the parameter assignment of the target network is completed,
    the UAV state value is obtained by observing the environment. The detail procedures
    are shown in Algorithm 1. Algorithm 1 DDQN Algorithm Flow 1: Initialize the parameters
    of the online network, assign values to the parameters θ of the target network
    θ − , and initialize the experience playback buffer pool D 2: Get user location,
    and initialize UAV location 3: for t=1…,T do 4: Get the state s t by observing
    the environment 5: for each UAV do 6: Choose random action; otherwise, choose
    the optimal action 7: Update status s t = s t+1 8: if the UAV moves outside the
    target area, then 9: Cancel the movement of this UAV and select it again 10: _end
    if 11: Save ( s t , a t , r t , s t+1 ) in the experience playback cache pool
    D 12: Randomly select state transition data from the experience replay pool D
    13: _ Update the weight parameters of the online network using the extracted data
    θ i 14: _ Assign the parameters of the online network to the weight parameters
    of the target network θ − every N step of the way θ i 15: _end for_ 16: _end for
    This work acquires the UAV state values by observing the environment through DDQN
    to obtain the functional relationship between geographic information and the optimal
    UAV deployment location to form a complete GPI learning strategy. A deep learning
    algorithm is introduced to obtain the functional relationship between the GPI
    and the optimal UAV deployment position, generating a new strategy named GPI-Learning.
    The positions of the kn users generated for the k th time are expressed as U k
    =[( x (u)1 , y (u)1 ),( x (u)2 , y (u)2 )⋯( x (u) k n , y (u) k n )]. (10) View
    Source In (10), ( x (u)i , y (u)i ) indicates the user i ’ GPI. The corresponding
    optimal deployment position of k j UAVs can be written as D k =[( x (d)1 , y (d)1
    ),( x (d)2 , y (d)2 )⋯( x (d) k j , y (d) k j )]. (11) View Source In (11), (
    x (d)i , y (d)i ) represents the UAV i ’ GPI. Denote [ U k , D k ] as a piece
    of data. Then, a data set containing n samples can be presented as (U,D)=[( U
    1 , D 1 ),( U 2 , D 2 ),…,( U n , D n )]. (12) View Source Fig. 4 shows the data
    processing process of the GPI-Learning algorithm. Fig. 4. Data processing via
    the GPI-Learning algorithm. Show All Fig. 4 shows the preprocessing of the original
    training data on the sample data. The features of each dimension are normalized
    to the same value interval, and the correlation between different features is
    eliminated to obtain the desired data features. D i corresponding to U i is regarded
    as the preset target. The optimal neural network parameters are obtained by training
    the GPI-Learning algorithm according to ω ∗ = d ˆ i = argmin ω 1 l ∑ i=1 I L(
    D i , d ˆ i ) DNN( U i ;ω) (13) (14) View Source where ω stands for the parameter
    of DNN, d ˆ i represents the position of the UAV, and L refers to the loss function.
    After determining the GPI-Learning algorithm, the Cuckoo search (CS) algorithm
    is adopted to supplement the UAV deployment strategy. In the CS algorithm, when
    the cuckoo i generates a new solution x t+1 i , it follows the Levy Flight rule,
    which can be formally expressed as x t+1 i = Levy(β)= x t i +α⊗Levy(β) u/ |v|
    1/β (15) (16) View Source where x t i represents the position of the first i th
    bird’s nest in the first t generation; α denotes the step factor; ⊗ refers to
    the point product; and Levy(β) is the probability density function followed by
    Levy Flight. C. UAV-Assisted Farmland Information Collection Fig. 5 presents the
    scheme design of the whole UAV farmland information collection system, including
    UAVs, collection points, airborne receivers, ground service centers, and application
    programs. Wireless data transmission and UAV trajectory planning are the most
    critical technologies [34], [35]. Wireless data transmission primarily ensures
    the stable transmission of information between the acquisition point and the receiver,
    and between the receiver and the ground service center [36]. The airborne receiver
    includes three modules: 1) wireless antenna; 2) primary controller circuit; and
    3) general packet radio service [37]. Fig. 5. Overall architecture of the UAV-assisted
    farmland information collection system. Show All Fig. 5 uses the global positioning
    system for navigation, automatic route planning, flight by route, and independent
    relay. It can control the farming UAV through radio remote control facilities
    or onboard computer program control systems. The acquisition of high-resolution
    images fills the agricultural data for which satellite remote sensing often fails
    to acquire images due to cloud cover. Assuming that the antenna gain coefficients
    of the two ideal target points GT and GA are both 1, the path loss L p is the
    ratio of the transmitted power P T to the received power P A L p = L p (dB)= P
    T / P A = (4π/c) 2 × f 2 r 2 10lg P T / P A =20lg( 4πd λ ) (17) (18) View Source
    where d represents the signal transmission distance, f denotes the operating frequency
    of the transmitter, and r refers to the spherical radius from the antenna point.
    The Egli model is defined as L M (dB)=88+40lgd+20lgf−20lg( H t − H r )−Kh. (19)
    View Source In (19), L M represents the median path loss; d stands for the distance
    between the transmitting antenna and the receiving antenna; f signifies the operating
    frequency; Kh denotes the terrain correction factor; and H t and H r are the antenna
    heights of the transmitter and receiver, respectively. D. Agricultural Data Detection
    and Intrusion Detection Methods Agriculture 4.0 is defined by combining emerging
    technologies, such as blockchain, software-defined networks, artificial intelligence,
    and IoT [38], [39], [40]. Data anomalies often arise from sensor noise, weak communication
    signals, or human reading errors in an AIoT environment. The current processing
    methods usually eliminate or smooth abnormal data. The correlation between most
    sensor data in the AIoT is not apparent. Consequently, the traditional clustering
    algorithm cannot identify the actual cluster structure, thus reducing the detection
    efficiency [41], [42]. When discussing the problem of identifying intrusion behavior
    in the AIoT, a corresponding AIoT intrusion detection system is constructed considering
    the advantages of the convolutional neural network (CNN) in processing local related
    information and the vital feature extraction ability. The gated convolution is
    employed to remove invalid and duplicate information X= Y= g(E)= E∗W+b E∗V+c X⊗Relu(Y)
    (20) (21) (22) View Source where E stands for the input of the previous network
    layer; W and V represent the weight parameters of the response; and b and c denote
    the bias in the neuron. The final convolution value is obtained by multiplying
    the convolution values X and Y . The output layer selects the Softmax function
    as the classifier. The regression hypothesis expression is f θ ( x (i) )= w= ⎡
    ⎣ ⎢ ⎢ ⎢ ⎢ ⎢ p( y (i) )=1 ∣ ∣ x (i) ;θ p( y (i) )=2 ∣ ∣ x (i) ;θ ⋯ p( y (i) )=k
    ∣ ∣ x (i) ;θ ⎤ ⎦ ⎥ ⎥ ⎥ ⎥ ⎥ =w∗ ⎡ ⎣ ⎢ ⎢ ⎢ ⎢ ⎢ e θ 1 x (i) e θ 2 x (i) ⋯ e θ k x
    (i) ⎤ ⎦ ⎥ ⎥ ⎥ ⎥ ⎥ 1 ∑ k j=1 e θ r j x (i) (23) (24) View Source where θ represents
    the parameter in the model, and w denotes the probability used for the post-classification
    result. The cost function of Softmax can be expressed as J(θ)=− 1 m ⎡ ⎣ ∑ i=1
    m ∑ j=1 k g( y (i) =j)log e θ T j x (i) ∑ k j=1 e θ T j x (i) ⎤ ⎦ . (25) View
    Source The output value is 1 when the expression evaluates to true; otherwise,
    g( y (i) =j)=0 . The classifier is calculated by Softmax regression. The probability
    of classifying the information x into the category j can be written as p( y (i)
    =j ∣ ∣ x (i) ;θ)= e θ T j x (i) ∑ k j=1 e θ T j x (i) . (26) View Source The output
    features can be expressed as (27) when the convolution kernel convolves all data
    features H d =[ h d 1 , h d 2 ⋯ h d n− d r +1 ]. (27) View Source Superimposing
    all the features H d obtained after convolution can get the feature sequence,
    as shown in H s =[ h 1 , h 2 ⋯ h n− d r +1 ]. (28) View Source The convolutional
    layer obtains the feature sequence after convolutional processing. Then, it is
    passed to the pooling layer. First, the input H d is divided into M blocks. The
    maximum value of each block is selected and stitched together to get the feature
    vector P s =[ p m 1 , p m 2 ,L, p m ] (29) View Source where p m 1 represents
    the vector obtained by the pooling layer after completing the pooling operation
    on the first m i block of data. Integrating the long short-term memory (LSTM)
    network into CNN effectively solves the problem of parameter explosion and improves
    the processing ability of the system for data with time series characteristics.
    Fig. 6 presents the AIoT intrusion detection system based on CNN–LSTM. Fig. 6.
    AIoT intrusion detection system based on CNN–LSTM. Show All As shown in Fig. 6,
    the CNN–LSTM algorithm first feeds raw data to the preprocessing module of AIoT’s
    CNN–LSTM network. After the data is displayed in the model display layer, it is
    processed through the convolutional and pooling layers. Finally, the data are
    fed to the connection layer for data detection and output. E. Simulation Test
    In the experiment, the algorithm test platform built here is configured with Windows
    10 operating system, Intel Core i5 2.5-GHz CPU, and 8-GB memory. A simulation
    analysis is conducted to verify the feasibility of the GPI-Learning algorithm.
    Suppose users are distributed in a square area (the side length is 1300 m). The
    feedforward neural network reported here has a four-layer structure. Neurons are
    randomly pruned during each training. The number of input neurons depends on the
    number of cells deployed by the target; the number of output neurons is related
    to the number of UAVs. The line-of-sight and non-line-of-sight links have path
    loss coefficients of 1 and 20 dB, respectively. The carrier frequency of the UAV
    is 2 GHz, and the flight altitude is 120 m. The classic K -means clustering algorithm,
    DDQN algorithm, and random static deployment strategy are selected for comparison.
    These algorithms use the same power control and resource allocation scheme. Moreover,
    the simulation also discusses the effects of four parameters on the convergence
    of the CS algorithm, namely, the population size n , discovery probability P α
    , step size scaling factor α , and Levi Flight index β . The KDD-CUP99 data set
    is adopted for the network intrusion detection experiments to test the performance
    of the CNN–LSTM-based AIoT intrusion detection system. The KDD-CUP99 training
    data set contains one typical identification type and 22 training attack types.
    Another 14 attacks only appear in the testing data set. Four indicators evaluate
    the intrusion detection capability of the system: 1) accuracy; 2) recall; 3) precision;
    and 4) false alarm rate. Besides, the FP-growth algorithm and the CNN algorithm
    are selected as comparison algorithms to verify the performance advantages of
    the CNN–LSTM algorithm. SECTION IV. Results and Discussion A. Evaluation of the
    UAV Wireless Network Deployment Strategy Fig. 7(a) shows the variation trend of
    the transmission rate of each user with the operation time of the CPU under different
    deployment methods. The results indicate that the DDQN algorithm reaches convergence
    after running for about 8000 s and obtains the optimal deployment position of
    the UAV. The K-means clustering algorithm requires less computation time, but
    the deployment effect is only better than the random static deployment strategy.
    However, the GPI-Learning algorithm reported here obtains the optimal deployment
    position of the UAV in only a short computing time with almost no performance
    loss. Fig. 7(b) compares network throughput results corresponding to different
    deployment methods under the changing user density. Fig. 7. Performance evaluation
    of different UAV wireless network deployment strategies. (a) Comparison of transmission
    rates of users. (b) Comparison of network throughput. Show All The CS algorithm
    is integrated into the GPI-Learning algorithm, denoted as CS+ GPI-Learning. The
    effects of four parameters, population size n , discovery probability P textsubscript
    α , step scaling factor α , and Levi Flight index β , on the convergence of the
    CS algorithm using the same power control and resource allocation scheme are discussed.
    This test analyzes the effects of the population size n , discovery probability
    P α , step size scaling factor α , and Levi Flight index β on the algorithm’s
    convergence performance. The convergence speed of the CS algorithm increases with
    the expansion of the population size. In addition, when the group size n is 36,
    the algorithm converges after 50 iterations. The effect of probability P α on
    the convergence is negligible. When the step size scaling factor α is 0.8, fewer
    iterations are required to reach the convergent state. The best convergence effect
    can be achieved when the Levy Flight exponent β is 1.25. According to the influence
    of various parameters on the algorithm’s performance (Fig. 8), this experiment
    set the parameters as follows: the population size is 36, the discovery probability
    is 0.25, the step scaling factor is 0.8, and the Levy Flight index is 1.25. From
    the analysis of the effect of different parameter factors on the convergence of
    the algorithm, the population size and discovery probability have a greater impact
    on the performance of the algorithm than the step scale factor and flight index.
    Fig. 9(a) indicates the performance comparison results of different algorithms.
    The results demonstrate that the DDQN algorithm can achieve convergence after
    reaching a certain number of iterations and obtaining a suitable UAV deployment
    position. In contrast, the CS+GPI-Learning algorithm reported here achieves better
    performance in a converged state, avoids performance loss during parameter training,
    and achieves a balance between performance and deployment delay. Fig. 9(b) displays
    the network throughput under different numbers of UAVs. The CS+GPI-Learning algorithm
    outperforms the DDQN algorithm when the number of UAVs varies. To sum up, the
    CS+GPI-Learning algorithm is better than other algorithms when the number of UAVs
    is different. Fig. 8. Influence of each parameter on the convergence effect of
    the CS algorithm. (a) Population size. (b) Discovery probability. (c) Step scaling
    factor. (d) Levy fight index. Show All Fig. 9. Performance comparison of different
    deployment methods. (a) Algorithm performance comparison. (b) Network throughput
    comparison. Show All B. Analysis of the Wireless Communication Performance of
    the Farmland Information Collection System According to the application mode designed
    in the wireless communication system for farmland information collection, the
    distance H t between the UAV and the ground when flying is set to 1000 m, the
    height of the wire H r is 1 m, and the height Δ h around the terrain is 200 m.
    This experiment verifies the wireless communication performance of the farmland
    information collection system with the carrier frequency of the UAV at different
    frequencies of 220 MHz, 335 MHz, 430 MHz, and 926 MHz, respectively. Fig. 10(a)
    illustrates the resulting loss curves, demonstrating that the path loss of the
    same frequency band increases with the increase in the communication distance.
    The path loss curves of the free-space propagation model and the Egli model are
    compared when the frequency is 430 MHz, as presented in Fig. 10(b). It can be
    seen that the median path loss of the Egli model is significantly lower than that
    of the free-space propagation model, showing higher accuracy. Fig. 10. Performance
    analysis of the Egli wireless communication propagation model. (a) Path loss of
    the Egli model at each frequency. (b) Comparison of the path loss of different
    models. Show All When applying the Egli model, the terrain height will directly
    affect the communication quality of the UAV acquisition system. Fig. 11(a) shows
    the influence of the surrounding terrain on path loss. According to Fig. 11(a),
    the path loss gradually increases with the rise of the surrounding terrain height.
    Moreover, the path loss increases with the growth of frequency. When the frequency
    is 926 MHz, the path loss is significantly higher than the other three cases.
    In addition, the change of the flight height of the UAV affects the path loss.
    Fig. 11(b) provides the path loss values corresponding to different flight heights.
    It suggests that the path loss in various frequency bands decreases with the increase
    of flight altitude. In summary, the collection range of the UAV of the farmland
    information collection system is 3000×3000 m 2, and the height between the UAV
    and the ground should be set to 750 m. Fig. 11. Influencing factors of UAV path
    loss. (a) Surrounding terrain height. (b) Flight height. Show All C. Performance
    Evaluation of the Agricultural IoT Intrusion Detection System An intrusion detection
    system is built with CNN as the core. Besides, the LSTM network is introduced
    into CNN to improve the detection rate of the system. The legends in different
    colors in Fig. 12(a) indicate different system intrusion methods. The legends
    in different colors in Fig. 12(b) indicate the overall detection accuracy, precision,
    and efficiency of the system. Fig. 12(a) shows the detection rates of the CNN+LSTM
    for different attack types. The results demonstrate that after the LSTM module
    processing long-distance attribute data is integrated, the detection rate of the
    CNN-based intrusion detection system for the five attack types is significantly
    improved, and the detection rates for normal and Denial of Service (DoS) exceptions
    reach 95.4% and 94.4%, respectively. Fig. 12(b) shows the overall performance
    comparison of intrusion detection systems based on different algorithms. The intrusion
    detection system based on the FP-growth algorithm has the lowest detection rate
    and accuracy. In contrast, the intrusion detection system based on the CNN+LSTM
    algorithm has a precision and detection rate of 93.5% and 94.4%. Fig. 12. Performance
    evaluation of different intrusion detection systems. (a) Detection rate of different
    attack types. (b) System overall performance. Show All D. Discussion The results
    reported here are compared with the results of previous studies in the literature.
    Yin et al. (2020) [43] detected deeply embedded AIoT anomalies. They introduced
    a transformation-based pipeline to reveal obscure data anomalies. The comparative
    experimental results suggested that the accuracy of the IoT detection method exceeds
    the rest of the research methods. Ferrag et al. (2021) [39] proposed a distributed
    DoS attack intrusion detection system based on CNN, DNN, and recurrent neural
    networks. The results showed that the data traffic detection accuracy of the system
    is 99.95%, which exceeds other research methods. Riaz et al. (2022) [44] analyzed
    IoT-based smart agriculture risks and integrated IoT with adaptive security operations
    into smart agriculture environments. They found that the ultimate goal of the
    adaptive algorithm can increase the model detection accuracy. In contrast, the
    UVA-supported agricultural information security framework reported here innovatively
    uses machine learning and drones for data collection, promotes the enhancement
    of Internet and information security technologies, and strengthens agricultural
    information security. The accuracy and detection rate of intrusion detection enables
    the maintenance of UAV positioning technology to achieve a balance between high
    accuracy and detection rate, when assisting the intrusion detection system of
    IoT. In summary, the intrusion detection system constructed using the UAV wireless
    network can detect different types of attacks and has significant application
    value for improving the security of data transmission in AIoT. SECTION V. Conclusion
    The CS+GPI-Learning algorithm proposed here has brilliant performance in reaching
    the convergence state, avoids the performance loss in the parameter training process,
    and realizes the balance between performance and deployment delay. The corresponding
    AIoT intrusion detection system is constructed considering the advantages of CNNs
    in processing local relevant information and strong feature extraction ability.
    In addition, this work builds an AIoT intrusion detection system with a CNN+LSTM
    algorithm as the core. The system accuracy and detection rate are 93.5% and 94.4%,
    respectively. At the same time, the system can timely obtain the sensor noise
    and weak communication signals and improve the information transmission efficiency.
    The CNN-based intrusion detection system has significantly improved the detection
    rate of five attack types, reaching 95.4% and 94.4% for common and DoS attacks,
    respectively. According to the results, the intrusion detection system reported
    here has higher accuracy and better performance than other models. Overall, the
    AIoT intrusion detection system reported here avoids performance loss during parameter
    training and achieves a balance between performance and deployment delay. It has
    vital practical reference value for the safe operation of agricultural information
    systems. The AIoT intrusion detection system is efficient and practical, which
    is of great value to maintaining the normal operation of AIoT. The AIoT intrusion
    detection system built here does not have a system that can receive network or
    computer data information in real time, so the detection system is not complete.
    In addition, the experiment uses a few intrusion detection data sets. The follow-up
    research will develop a real-time information capture system to improve the detection
    system’s real-time detection efficiency and use additional data sets for training
    to improve the applicability and detection performance of the detection system.
    Authors Figures References Citations Keywords Metrics More Like This A Framework
    of Novel Feature Set Extraction based Intrusion Detection System for Internet
    of Things using Hybrid Machine Learning Algorithms 2018 International Conference
    on Computing, Power and Communication Technologies (GUCON) Published: 2018 Impact
    of Machine Learning Algorithms in Intrusion Detection Systems for Internet of
    Things 2021 International Conference on Advances in Computing and Communications
    (ICACC) Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Internet of Things Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Machine-Learning-Based UAV-Assisted Agricultural Information Security Architecture
    and Intrusion Detection
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - André G.
  - Bachelet B.
  - Battistoni P.
  - Belhassena A.
  - Bimonte S.
  - Cariou C.
  - Chabot F.
  - Chalhoub G.
  - Couvent A.
  - Garani G.
  - Laneurit J.
  - Moussa R.
  - Oikonomou K.
  - Sammour I.
  - Sebillo M.
  - Souza M.V.
  - Tricot N.
  - Wrembel R.
  citation_count: '0'
  description: 'The usage of IoT and robots is more and more present in smart farming,
    and in particular in agro-ecology since robots are able to provide smart practices
    and avoid repetitive human tasks. However, these new technologies rise several
    research issues, which are strongly inter-related, about Farm Management Information
    System, such as robots’ programming, sensor data capture, management and processing
    at different layers of the IoT ecosystem. In particular, scheduling the tasks
    of different autonomous agricultural robots needs for a complex architecture that
    support at the same time real-time monitoring of robots and analysis of their
    historical data (Belhassena et al., Towards an architecture for agricultural autonomous
    robots’ scheduling. In: 2021 IEEE 25th international enterprise distributed object
    computing workshop (EDOCW), 2021. IEEE Computer Society, Los Alamitos, pp 194–203,
    2021, https://doi.org/10.1109/EDOCW52865.2021.00049). Many studies investigated
    these issues, but to the best of our knowledge none has contributed with a fully-featured
    architecture design of monitoring and scheduling of autonomous agricultural robots.
    This work extends our previous work, where we propose a new architecture for autonomous
    agriculture robots scheduling, called LambdAgrIoT. LambdAgrIoT is designed to
    support big data and different types of workload (real-time, near real-time, analytic,
    and CRUD). We present the main features of each layer, and the implementation
    details. We also put to the test our LambdAgrIoT architecture using simulated
    data, and providing a real experience in a field. Results from real experiments
    show the feasibility of our new proposal.'
  doi: 10.1007/s10586-022-03592-5
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Cluster Computing Article LambdAgrIoT:
    a new architecture for agricultural autonomous robots’ scheduling: from design
    to experiments Published: 14 October 2022 Volume 26, pages 2993–3015, (2023) Cite
    this article Download PDF Access provided by University of Nebraska-Lincoln Cluster
    Computing Aims and scope Submit manuscript Geraldine André, Bruno Bachelet, Pietro
    Battistoni, Amina Belhassena, Sandro Bimonte, Christophe Cariou, Frederic Chabot,
    Gerard Chalhoub, Adrian Couvent, Georgia Garani, Jean Laneurit, Rim Moussa, Konstantinos
    Oikonomou, Ibrahim Sammour, Monica Sebillo, Mateus Vilela Souza, Nicolas Tricot
    & Robert Wrembel  362 Accesses 1 Citation Explore all metrics This article has
    been updated Abstract The usage of IoT and robots is more and more present in
    smart farming, and in particular in agro-ecology since robots are able to provide
    smart practices and avoid repetitive human tasks. However, these new technologies
    rise several research issues, which are strongly inter-related, about Farm Management
    Information System, such as robots’ programming, sensor data capture, management
    and processing at different layers of the IoT ecosystem. In particular, scheduling
    the tasks of different autonomous agricultural robots needs for a complex architecture
    that support at the same time real-time monitoring of robots and analysis of their
    historical data (Belhassena et al., Towards an architecture for agricultural autonomous
    robots’ scheduling. In: 2021 IEEE 25th international enterprise distributed object
    computing workshop (EDOCW), 2021. IEEE Computer Society, Los Alamitos, pp 194–203,
    2021, https://doi.org/10.1109/EDOCW52865.2021.00049). Many studies investigated
    these issues, but to the best of our knowledge none has contributed with a fully-featured
    architecture design of monitoring and scheduling of autonomous agricultural robots.
    This work extends our previous work, where we propose a new architecture for autonomous
    agriculture robots scheduling, called LambdAgrIoT. LambdAgrIoT is designed to
    support big data and different types of workload (real-time, near real-time, analytic,
    and CRUD). We present the main features of each layer, and the implementation
    details. We also put to the test our LambdAgrIoT architecture using simulated
    data, and providing a real experience in a field. Results from real experiments
    show the feasibility of our new proposal. Similar content being viewed by others
    AI-Based Modeling: Techniques, Applications and Research Issues Towards Automation,
    Intelligent and Smart Systems Article Open access 10 February 2022 Data Science
    and Analytics: An Overview from Data-Driven Smart Computing, Decision-Making and
    Applications Perspective Article 12 July 2021 Automation of a Business Process
    Using Robotic Process Automation (RPA): A Case Study Chapter © 2017 1 Introduction
    The world population growth is increasing the demand for sustainable healthy farming
    production. To satisfy such a need, agro-ecology aims at developing new cultural
    practices leading to an environment friendly farming production [34]. Agro-ecology
    requires a global approach, where different types of data must be combined, integrated,
    and further analyzed at different spatial and temporal scales. It also combines
    innovation coming from precision agriculture, which analyzes data at detailed
    granularities, to more complex and global agronomic, social, economic, and environmental
    data [16]. In order to support agriculture stakeholders in all their activities,
    such as basic management of stocks, as well as sophisticated assistance in complex
    technical operations on fields (e.g. plowing, weeding, fertilizing, etc.), traditional
    Farm Management Information Systems (FMIS) have been proposed, which represented
    the first example of integrated systems specifically conceived to support the
    planning, implementation and monitoring of multi-objective forest management activities.
    FMIS include multiple design artefacts, business processes, and customization
    of software technologies suitable to farming information systems [23]. Research
    carried out along this direction has resulted in the smart farming, which represents
    a step towards the adoption and the implementation of new advances in information
    technology (e.g., Internet of Things, Big Data frameworks, Computer Vision, Artificial
    Intelligence) to monitor and optimize agricultural business processes, and overcome
    the current challenges of sustainable and healthy food production to define new
    agro-ecology practices. In particular, the implementation of affordable sensor
    technologies (e.g. Odometry, LiDAR) in farms has prompted traditional FMIS to
    consider new characteristics of collected data, both data at rest and data in
    motion, and be able to extract information from them. As an example, sensed data
    once analyzed can be useful to improve field activities, such as precise irrigation
    and soil fertilization, as well as tasks scheduling and robots’ tracking [36].
    To support the aforementioned agro-ecology transition, robots have an essential
    role to play in the smart farming domain. They are able to perform repetitive
    and accurate farming operations over a long time period with a low impact on the
    environment (light, possibility to operate in fleet). With special equipment,
    combined with data acquisition and data processing technologies, robots are able
    to autonomously perform efficiently targeted tasks in the fields, e.g., within
    inter-cropping systems, while optimizing the use of resources and maintaining
    a high level of productivity. In this paper, we consider scenarios where robots
    do not cooperate with farm workers in the field, and we generalize the applicability
    of our proposal to most of agricultural tasks of robots. Many research works address
    smart farming. However, to the best of our knowledge none has contributed with
    a fully-featured architecture design, which investigates the multiple layers and
    the different edges of the IoT ecosystem towards smart monitoring and scheduling
    of autonomous agricultural robots, with scalable data processing. This lack has
    been put in evidence by some recent survey papers that focus on robots and IoT
    for Agriculture 4.0 ([1, 47, 54]). In particular, even though some client–server
    architectures have been proposed [22], they do not fully exploit all the insights
    extracted from the analysis of IoT data and new communication and computation
    architectures (e.g., edge–fog–cloud). Moreover, existing works do not address
    real-life scenarios, but experimental farms configurations. Therefore, in this
    work we present: A detailed analysis of requirements for real-life scheduling
    autonomous agricultural robots systems, cf. Sect. 2. These requirements have been
    defined based on our several years experience in the context of smart farming,
    and cooperation with farms’ managers. The skeleton of an architecture for scheduling
    autonomous agricultural robots, called LambdAgrIoT, which is based on the Lambda
    architecture, cf. Sect. 3. It is designed to support big data, and different types
    of workload (real-time, near real-time, analytic, and CRUD). This paper extends
    our previous work [7] in several ways: It presents an exhaustive set of real-time
    queries provided by the Speed layer, and corresponding performance time-computation
    tests. It shows the implementation of the Batch layer for the analysis of historical
    data by means of a Trajectory Data Warehouse (TDW). OLAP queries’ performance
    time-computation tests are also presented. It presents experiment results that
    show the performance of the online scheduling algorithm based on mixed integer
    linear program (MILP). It presents a Wi-Fi multihop solution to control and supervise
    the robots. A real experience is presented to prove the feasibility of our proposals
    in a real scenario. The paper is structured as follows. Section 2 presents requirements
    for the designed system. Section 3 discusses the main contribution of this paper,
    i.e., the architecture of the system. Section 4 reports some experiments with
    simulated data and a real experience showing the feasibility of our proposal.
    Section 5 outlines related approaches. Finally, Sect. 6 summarizes and concludes
    the paper. The contribution presented in this work has been achieved within the
    French ANR I-SITE CAP 20-25 SuperRob project. 2 Requirements’ specification In
    this section, we present the requirements specification for an agricultural autonomous
    robots scheduling system (Table 1). The following described issues have been elucidated
    thanks to our several years research experience in the context of robotics and
    information systems for smart farming. Moreover, we collect users requirements
    from farmers that work on our experimental farm in Montoldre (France). This farm,
    which has been deployed from more than 20 years, is an experimental platform used
    by INRAE to test agronomy and Information Technology research works. In the next
    we present requirements associated to data management and analysis (Sect. 2.1)
    and then network ones (Sect. 2.2). Table 1 Requirements Full size table 2.1 Data
    management and analysis requirements An agricultural robot is an unmanned ground
    vehicle with sensors and actuators able to safely and autonomously perform one
    or several tasks on a farm field. Such a robot is composed of a locomotion part
    connected to a navigation system, and an agricultural part with either mounted,
    semi-mounted, or towed implements. An agricultural robot can be designed to perform
    a specific task (e.g. weeding, harvesting) or it can be used as a tool carrier
    offering various equipment combinations (e.g. tillage, seeding, fertilizing).
    The scheduling of autonomous agricultural robots is a logistic application to
    find out the best allocation of robots for their agricultural tasks on fields.
    This allocation is made according to: (1) the compatibility of a robot and its
    equipment with an agricultural task to be done, (2) the temporal availability
    of a robot and its associated equipment, and (3) the compatibility of meteorological
    conditions with an agricultural task. When these conditions are satisfied, the
    output of the scheduling algorithm is a set of reference (i.e. predefined) trajectories
    that must be followed by robots. Usually, the design of a reference trajectory
    is based on simulation models [14]. Other empirical approaches can also be used,
    and are based on analyzing past trajectories of robots. However, some problems
    can arise during the execution of an agricultural task (e.g., a physical object
    blocking robot’s movement, heavy rainfall or snowfall). Consequently, the robot’s
    planned trajectory has to be updated. Thus, an online re-scheduling computation
    service must be executed to find out (whenever possible) the best alternative
    trajectory. The following events may trigger a re-scheduling of planned tasks:
    Robot fault since robots operate in rural environments, frequently under hard
    weather conditions and on topologically difficult grounds (e.g., ground elevation,
    rocky grounds), they may experience technical problems. Delay alert robots are
    programmed to follow a scheduled trajectory, but they are also allowed to automatically
    re-adjust their trajectories in order to avoid obstacles (e.g. animals, tree branches,
    rocks) [49]; any trajectory re-adjustment results in delays (see Fig. 1). Meteorological
    alert weather conditions (like heavy rains, thunderstorms, high winds) can impact
    badly a scheduled trajectory. For instance, the spraying task cannot be performed
    during strong wind, and in such a situation a robot must stop its work. Fig. 1
    A delay event example Full size image The aforementioned events may require the
    re-scheduling of tasks, namely: spatio-temporal issues and contextual issues.
    Spatio-temporal issues refer to the lack of respect of the spatio-temporal constraints
    associated with predefined trajectories for one or several robots. These issues
    occur due to robot(s)’ deficiency (i.e. Robot fault event) or an event external
    to a robot but associated with a particular spatial or temporal point (i.e. Delay
    alert event). Contextual issues refer to problems caused by a phenomenon that
    cannot be associated with a particular spatio-temporal point, but that is valid
    for a set of plots and/or technical operations (i.e. Meteorological alert event).
    A smart farm information system involves the following stake-holders. Farmers
    they have to monitor in real-time the trajectories of robots on their plots. They
    must also be alerted in real-time when problems occur. Scheduling experts they
    are users with logistic skills who set-up scheduling algorithms, to provide the
    most efficient reference trajectories for all plots, robots, and activities. The
    system must provide them details on all executed scheduling tasks in the past
    and allow them to explore and analyze these data. They typically react in time
    windows of different lengths (e.g., 1 h for re-scheduling operations, a few days
    for the reconfiguration of the scheduling algorithms). Mechatronics engineers
    they off-line analyze the behaviour of robots, to update and adjust robots settings.
    The deployment of IoT technologies in farms generates big data [21, 39]. For this
    reason, agricultural autonomous robots scheduling systems must be able to handle
    data characterized by the well-known three V’s: Velocity sensors and network devices
    produce continuous data during the whole day of a robot work. For instance, each
    robot emits 200 odometry records per second that are used to analyze its mechanical
    behaviour by robots experts. Also, the monitoring of robot faults is performed
    in real-time. Volume since a lot of data are generated with high frequency, huge
    volumes of data are produced, which have to be stored and analyzed. Variety data
    types fall into different formats, including structured (e.g. robot trajectories),
    semi-structured (e.g. GeoJSON produced by meteorological sensors), and unstructured
    (e.g. photos and videos taken by robots, upon a request from a farmer, in order
    to take appropriate corrective trajectory actions). Consequently, suitable software
    applications are needed for analysing historical data, processing data in real-time,
    and handling different data formats. The scheduling of the fleet of robots must
    support the following types of queries: Analytical queries, which explore historical
    data. Typical queries include OLAP queries, and Machine Learning algorithms, in
    order to improve the scheduling algorithm. Logistic experts could be interested
    in the duration (e.g., min, max, average) of trajectories across task types, robots,
    weather conditions, and farms. These queries involve data related to the different
    farms, and they are usually computed offline. Continuous queries, which run over
    streams of data. Continuous queries are automatically triggered with a fixed frequency.
    These queries involve data of a single farm. An example of a continuous query
    is: “Calculate every minute, the accumulated delay for each robot, over the last
    10 minutes”. Create, Read, Update, Delete (CRUD) queries, which run over dictionary
    data (e.g., reference trajectories). These queries may use data of different farms
    to check the availability of robots. An example of a CRUD query is: “Update the
    reference trajectory as consequence of a re-scheduling operation”. Finally, these
    queries feature different time computation constraints ranging from hard real-time
    ( e.g., hard real-time time computation for robot fault queries) to offline (e.g.
    OLAP queries). 2.2 Network requirements Commonly, robots and wireless sensors
    do not have the ability to be connected to the Internet. Indeed, depending on
    the location of the farm, cellular networks might not have sufficient coverage
    to support data transmission. Therefore, they cannot be connected directly to
    the cloud, which is necessary to store and compute Big Data. Therefore, we propose
    and implement an intermediary effective communication network layer Access network
    between field robots, sensors and the cloud. Moreover, the Access network must
    support dynamic configurations, since robots are mobile, and by consequence their
    dynamic location makes it difficult to communicate to the network. The Access
    network should offer enough bandwidth and high reliability for uninterrupted supervision
    and control of the robots. Moreover, the robots should be able to transmit critical
    real-time data to the farmer (such as video and images necessary for the remote
    control guidance of robots in case of unexpected or faulty behavior of robots).
    This requires low latency links especially for real-time commands sent by the
    farmer to the robots. Based on the network requirements shown in Table 1, the
    network solution should be well designed, i.e., a good coverage and sufficient
    number of access points to guarantee these network requirements. A deployed control
    station, managed by the farmer, plays the role of a gateway for the Access network
    in order to offer Internet connection to the robots. This control station is reachable
    through the network, and is connected to the cloud by means of classical protocols
    such as ADSL, fiber optics, or any other type of high speed connection. Therefore,
    the system must be deployed over a three-layer network architecture: Edge–Fog–Cloud.
    Robots represent the Edge layer, the control station of the farmer represents
    the Fog layer, and servers on the Cloud represent the third layer. In the next
    section, we describe the architecture implementing the aforementioned requirements.
    The transition from the requirements to the architecture has not been formalized,
    but we applied a practical approach based on our several years of experience on
    this topic. Indeed, a formal transition needs theoretical software engineering
    methods using a data-centric vision. A preliminary work in this direction is [8].
    3 LambdAgrIoT architecture It has been proved that the Lambda architecture [33]
    allows to efficiently process streaming data and static (warehouse-like) data,
    e.g., [26, 38]. For this reason, we draw upon this architecture, to meet the requirements
    described in Sect. 2. In this paper, we propose a new architecture, called LambdAgrIoT,
    as shown in Figs. 2, 9, and 10. Fig. 2 Components of the LambdAgrIoT architecture
    Full size image LambdAgrIoT is composed of the following five layers (see Fig.
    2). Data producers layer represents data sources deployed in the field, i.e.,
    robots and meteorological stations. They produce data that are sent to the Message
    queuing layer. Message queuing layer is in charge of managing data (messages)
    that are exchanged by different layers. Robots also receive data from this layer.
    Speed analysis layer provides tools for analyses of data in a real time. The layer
    is deployed in each farm. Serving layer supports scheduling robots and their tasks.
    Batch analysis layer centralizes all data from all farms and it supports the management
    and the analysis of historical data. Notice that this layer is in a very early
    stage of development and is part of the closest future work. These layers are
    deployed over the edge–fog–cloud network communication layers (see Figs. 9, 10).
    In the following, we detail the main features of each layer. 3.1 Data producers
    layer As we mentioned earlier, the two data producers are weather stations and
    robots. The station delivers multiple weather data measurements, such as temperature,
    humidity, dew point, wind speed and direction, wind chill, barometric pressure,
    rainfall, rain rate, UV and solar radiation data, using radio frequency and LAN
    converter. These data are published in specific topics at the Message queuing
    layer. Weather data are consumed by both the Speed layer using a stream pattern
    and the Batch layer. Robots run on Robot Operating System (ROS), which is an open
    source platform for robot software development. It provides a set of functionalities
    for hardware abstraction, low-level device control, and messaging. It comes with
    a set of external libraries, such as rospy and roscpp. The odometry and GPS data
    acquisition module is implemented in Python. These data are acquired 200 times/s,
    and then, sent via a socket to the Message queuing layer. Therefore, the Python
    code represents a data producer for the distributed streaming platform deployed
    at the Message queuing layer. The socket is also always listening for new reference
    trajectories, turning into a data consumer, in the case of a re-scheduling operation.
    Actually, we have installed one Davis Vantage Pro 2 wireless weather station in
    our farm. We have used our two Adap2e autonomous robots developed by INRAE [18].
    The usage of two robots corresponds to a realistic scenario, since fleets of huge
    number of robots is not yet a matter of fact in the French agriculture context.
    3.2 Message queuing layer Our system requires: (1) a scalable and fault-tolerant
    message delivering in real-time, and (2) the Publish/Subscribe and the stream
    interaction patterns. Therefore, we use Apache Kafka. Our choice is also motivated
    by the recent performance analysis of Kafka [19, 25], demonstrating high data
    ingestion rates. In our architecture, data producers (i.e. robots and the weather
    station) publish messages to specific kafka topics (a.k.a. channel). A kafka topic
    is a logical grouping for messages for all the consumers subscribing to that topic.
    The following kafka topics are created: Weather topic it stores data from the
    weather station. This topic is consumed by the Speed analysis layer for real-time
    analysis and by the Batch layer for storing historical data. Odometry low-frequency
    topic and GPS low-frequency topic they include data sent by a robot every second.
    These data are used by the Speed layer for real-time analysis. Odometry low-frequency
    topic represents mechatronics data of the robot. GPS low-frequency topic represents
    the real-time trajectory of the robot by the triplet <GPS-coordinates, timestamp,
    idrobot, speed>. Odometry high-frequency topic and GPS high-frequency topic they
    include data sent by robots every millisecond. They are exclusively used by the
    Batch layer. Odometry and GPS data are collected at high resolution for the following
    reasons. First, robotics engineers use real data to run their mechanical fault
    algorithms, which use odometry and GPS data at this high resolution. Second, some
    numerical values, such as traveled distance, battery energy level, are computed
    using raw data. The more data are delivered by robots, the more precise results
    are produced by these computations. Moreover, the Batch layer is in charge of
    calculating aggregation of several trajectories data. Therefore, reducing the
    error in the computation of traveled distance, battery energy level, and others,
    is mandatory when several trajectories are used. Third, the algorithm used to
    define the reference trajectory is defined using a 10 cm distance between two
    consecutive points. Therefore, in order to compare the real trajectory to the
    referenced one, a high resolution is needed since sometimes robots can reach speed
    of 45 km/h. Fourth, it is important to note that during a normal work of a robot
    (e.g., no incidents, no faults, no obstacles on a road), odometry data do not
    change at m/s scale, but when a fault arrives they can suddenly change and such
    a change has to be detected immediately to produce an immediate reaction of the
    system. Scheduled trajectory topic it includes reference trajectories re-scheduled
    by the algorithm at the Serving layer. Alerts and actions topic it includes alerts
    computed by the Speed layer and the corrective actions (automatically determined
    by the system or by the farmer). Therefore, data producers for Alerts and Actions
    are deployed in the Speed layer. Consumers are Batch layer and the robots, which
    retrieve from corresponding sub-topics actions they must perform. To conclude,
    this layer allows to handle in a uniform way all data coming from the sources
    and forwards them to other layers keeping transparent their variety (Requirement
    R–D3 Table 1). 3.3 Speed layer Three modules compose the Speed layer, namely:
    the Stream Analysis Module, DD-ST Module, and RT Monitoring Dashboard Module.
    The Stream Analysis module consumes data streams produced by data producers (robots,
    weather station), and published in specific kafka topics. The analysis of data
    streams allows: (1) tracking work progress in real time (calculate delays if any)
    and (2) signaling alerts and recommending corrective actions. This module requires
    scalable in-memory computations. For this purpose, we use Apache Spark and Apache
    Spark Streaming [52, 53]. In order to handle spatial data and spatial operators,
    we use Apache Sedona. In our architecture Sedona, Spark, and Spark Streaming process
    data coming from Kafka. The choice of using Spark Streaming, deployed on a stand-alone
    machine, results from the need to have an architecture that does not depend on
    the network communication. Indeed, if we supposed to have an access network such
    as 5G, then the Speed layer could be implemented directly in the cloud with the
    Batch layer. Therefore, the Speed layer and so Spark Streaming would process data
    from more farms, which could required to have a distributed architecture. We chose
    Spark since it comes with Sedona, which allows to query also spatial data. This
    functionality is mandatory for our analytical applications. We have defined four
    alerts: Delay, Spatial gap, Collision, and Meteo. Delay alert computes the delay
    of the robot in respect of the planned one, and informs the farmer. It calculates
    the difference time between the real time data sent by the robot and its reference
    trajectory. The reference trajectory is the historical data that is stored in
    PostGIS in the DD-ST module described in the next of this section. The message
    “Delayed” is sent to the farmer if the robot is more than 5 min late. Also, when
    the robot is 5 min faster than the planned time, a message (“Too Fast”) is sent
    to the farmer. The implementation of this query is shown in Fig. 3. Fig. 3 Delay
    alert query implementation Full size image Spatial gap alert calculates the spatial
    distance between the robot location and the reference trajectory points and inform
    the farmer if the robot is far or near to its reference trajectory. In particular,
    we have used a 1 min window query to calculate this alert. Then, if for all points
    received in the last minute there is a spatial deviation less than 1 m, the farmer
    receives the message “No Gap”, which mean that the robot is near to its reference
    trajectory. Otherwise, if there is a spatial deviation more than 1 m of all the
    robot points in the 1 min window, the farmer will receive the message “Strong
    Gap” which means that the robot is far from its reference trajectory. Finally,
    if only some points in the window have a gap of more than 1 m, the farmer will
    receive the message “Average Gap”, which means that the robot can catch-up to
    be near to its reference trajectory. This alert uses the window concept provided
    by Spark to create temporal buffers and compute data over these data. Collision
    alert computes in real time if any collision among robots can appear. This alert
    calculates for each data sent by the robots a spatio-temporal buffer of 5 m and
    5 s. When an intersection is present, then a message “Collision” with the robots’
    names is sent to the farmer. Note that the collision depends also on the speed
    of the robots, but in our case study, static temporal and spatial parameters can
    be effectively used. Meteo alert permits to monitor if the weather conditions
    are suitable for the agricultural activities. For each activity, the Meteo alert
    uses different weather parameters. For example, for spreading, the alert send
    the “Stop spreading” message to the farmer if average speed of the wind is superior
    to 18 km/h, or rainfall is superior to 5 mm, or air humidity is between 40 and
    45. Since rainfall needs to be measured as a cumulative value, a 3 h window is
    used in the implementation. It is worth to note that some alerts’ (such as Spatial
    gap and Delay) computation could be implemented directly inside the robots. However,
    we choose to handle them at the Speed layer to have a minimal maintenance of robots’
    software, and to enable correlation analysis with other events. To conclude, this
    module allows to support requirements about data R–D1 (Velocity) and R–D5 (Trajectory),
    and query R–Q2 (Continuous) as described in Table 1. The support for requirements
    computation are shown in Sect. 4. Description and Dictionary data, and Scheduled
    Trajectories (DD-ST) is a transactional spatial database that aims to store data
    used by the system. It is deployed on top of PostgreSQL relational database, implementing
    the PostGIS spatial extension. The database stores among others: reference trajectories,
    geometries of farms’ plots, and multiple robot data. These data are also used
    by the Speed analysis layer to resolve continuous queries and compute alerts (cf.
    Sect. 2). Since the communication network between the farm and the cloud is not
    reliable (typically an ADSL connection), it is not appropriate to query the cloud
    database to meet low-latency requirements. Therefore, we install a local replica
    of the cloud database in the farm. The database is made available as a database
    as a service. An excerpt of the database conceptual model, using the UML profile
    presented in [9] is shown in Fig. 4. The pivot element of the model is the reference
    trajectory (TrajectoryREF). It is associated with exactly one Plot and one Configuration.
    Configuration models a mapping of one robot to at most one equipment and one particular
    agricultural task (Activity) at a time. A robot has several attributes that do
    not change in time (e.g., name, dimensions), and two attributes that are updated
    by the scheduling algorithm, namely Available and PowerAvailable. They represent:
    (1) the next time range where the robot is free for use, and (2) the remaining
    battery power, respectively. Activity includes attributes that define meteorological
    conditions that must be satisfied to do an activity. These attributes values are
    used to define alerts on real-time meteorological data. Fig. 4 Excerpt of the
    UML model of the DD-ST module Full size image A trajectory is a sequence of spatial
    points (i.e. coordinates) with a timestamp attribute and other attributes (Point-TimeRF).
    Let us note that a trajectory is split into three sub-trajectories: (1) inside
    a plot (TrajectoryPlotREF), (2) from the warehouse to a plot (and vice versa)
    (TrajectoryWarehouseToPlotREF), and (3) from a plot to another plot (TrajectoryPlotToPlotREF).
    To conclude, this module allows to support requirements about data R–D4 (Spatio-temporal)
    and R–D5 (Trajectory), and query R–Q3 (CRUD) as described in Table 1. RT Monitoring
    Dashboard Module is used to analyze and visualize data computed in the Stream
    analysis module. The real-time data visualization application was designed to
    provide a quick and simple way to notify the farmers about alerts and to provide
    a visual analysis tool for the actual trajectories of robots. To allow multi-user
    interaction and to be multi-platform, the software was developed as a web application.
    It is executed partially on the client-side (by any web browser), and partially
    on the server-side by the Apache web server. The user does not need to install
    any native application on his device, but needs only access the web page served
    by the local web server installed on the edge device in the farm. Through PHP
    scripts, the web server can directly consume Kafka data streams produced by Spark
    analysis. Furthermore, the same PHP script, employing Server-Sent Events (SSE)
    technologies, can forward Kafka streaming data to any connected browser in real-time.
    The SSE allows the browser to get a notification for each new data available without
    multiple HTTP requests. In this way, the web page is automatically updated whenever
    the data change. In particular, the RT Monitoring Dashboard was deployed with
    an Apache2 web server employing PHP language for server-side processes and JavaScript,
    HTML, and CSS for client-side front-end. An Apache Kafka consumer was deployed
    employing the open-source library PHP-rdkafka released under the MIT license.
    The Kafka consumer subscribes to a specific topic, and whenever a new event is
    received at the server-side, it is forwarded to the connected clients using SSEs
    technology. Client-side, the JavaScript code catches the server event and displays
    its data manipulating the DOM document. Finally, the leaflet library was employed
    to visualize data on the map. The leaflet is a very popular open-source JavaScript
    library for mobile-friendly interactive maps. The web interface allows farmers
    to visualize at glance all information about the execution of the scheduled tasks.
    It is composed on three main panels (cf., Fig. 5): (1) Interactive and dynamic
    Gantt, which is responsible for the visualization of the advancement of each robot
    in its task; (2) Dynamic graphical charts, which visualize the numerical data
    (weather, odometry, and speed); (3) Interactive and dynamic map, which visualizes
    the real-time trajectories of robots and their reference trajectories. Yellow
    color is used for the reference trajectory, and red color for the real-time trajectory,
    then, using color blending, the real-time trajectory will be marked orange when
    the robot is in the right trajectory. Fig. 5 RT Monitoring Dashboard Module example
    in the current deployment (Color figure online) Full size image As suggested in
    [31], our geo-visualization system uses multiple coordinates views, which consists
    in providing different synchronized visual representations of the same data. When
    the farmer clicks on a particular line of the Gantt diagram, the map is centered
    and zoomed in the plot where the robot is working. The Gantt diagram linked to
    graph visualizations has been quite investigated in literature, but to the best
    of our knowledge no work proposes to synchronize them with maps. This coordination
    is inspired from the visual analytics mantra [13], “Overview first, zoom and filter,
    then details on-demand”. It allows the farmer to have a global vision of the scheduled
    tasks using the Gantt diagram (Overview first), where the temporal dimension is
    shown for different robots, but spatial and numerical details of the real-time
    trajectories are not shown. Then, using the Gantt diagram, the farmer can zoom
    on the trajectory of a particular robot (filter) and see information about its
    work (details on-demand) using the map. This module is implemented using PHP and
    installed on a Apache2 web-server. A video showing the functioning of the web
    interface is shown at this https://youtu.be/e52gNgseQFg. 3.4 Batch layer Data
    Warehouse (DW) and OLAP systems are main tools for Business Intelligence. They
    allow the analysis of huge volumes of data stored according to the multidimensional
    model. Warehoused data are organized in facts (i.e. analysis subjects) and dimensions
    (i.e. analysis axes). Dimensions are composed of hierarchies that allow analyzing
    data at different thematic, spatial and temporal granularities. Facts are described
    by numerical attributes called measures, which are aggregated along hierarchies
    with common SQL aggregation functions such as Min, Max, Sum, etc. OLAP systems
    allow exploring and aggregating measures via OLAP operators. More common OLAP
    operators are: Roll-Up and Drill-Down, which allow climbing and aggregating measures
    over dimensions levels, and Slice and Dice, which allow selecting a subset of
    the warehoused data. Usually, DWs are implemented using classical Relational DBMS
    using the star-schema approach, which denormalizes dimensional data to improve
    queries performance. In this work, we propose the usage of a DW to analyze the
    trajectories of robots with alerts and actions. Therefore, we implement a TDW,
    whose relational structure is shown in Fig. 6. The integration of trajectories
    data in DW has been investigated in several works (as detailed in Sect. 5) that
    propose three main different solutions: (i) storing point and timestamp data into
    spatial and temporal dimensions, (ii) use complex measures representing the trajectory
    as a single unique object, (iii) translate the point representation of the trajectory
    into a grid one. We opt for the solution (i) because the solution (ii) is not
    supported yet by commercial OLAP server, and solution (iii) implies a spatial
    granularity precision, which is not tolerated by robotics experts. Of course solution
    (i) presents also some drawbacks essentially associated to the huge size of the
    fact table, since for each point of the trajectory a fact table tuple is created.
    The DW that we have deployed contains the following dimensions (Fig. 6): Spatial
    dimension is composed of the point of the trajectory, the trajectory inside a
    plot, the corresponding farm and city. It is noted that since robots can move
    also outside plots (for example in roads), we use the term Plot/OutPlot. Point
    and Plot/OutPlot have spatial point and multi-polygon representation, respectively.
    Crop dimension is used to represent the crop present in the plot and it classifies
    crops into two coarse levels. Alert dimension is the list of the possible alerts.
    Action dimension represents the different actions applied by robots and/or farmers.
    Activity dimension identifies the particular agricultural task executed by the
    robots. Robot dimension is the list of the robots, classified according to their
    size. Equipment dimension represents the set of equipment, also classified by
    their size. Campaign dimension is a temporal dimension that represents the agricultural
    year. Scheduling dimension is used to group together trajectories belonging to
    the same scheduling. Temporal dimension represents the time of the trajectory
    point, and groups it by the starting hour. The fact table contains some numerical
    values that are associated to each point of the trajectory. In particular, the
    odometry values such as the speed and also the temporal delay in respect of the
    corresponding point of the reference trajectory are stored in the fact table.
    Fig. 6 Logical schema of the Trajectory Data Warehouse for analysis of historical
    robots trajectories data Full size image Using this DW, it is possible to answer
    to queries providing an insight into historic trajectories to visualize the mechanical
    behaviour of the robots, but it is also possible to analyze the scheduling tasks
    by retrieving the different computed alerts. These data are computed according
    to all other dimensions (analysis parameters). Examples of queries are: What alerts
    have been computed for all robots for the harvest task in this plot? What is the
    average delay of the spreading robot used in this farm? What is the max speed
    per robot in this plot? Finally, this layer allows for handling Volume and trajectory
    data (Requirements R–D2 and R–D5) and exploring them by means of OLAP queries
    (Requirements R–Q1) (see Table 1). We have implemented our DW using PostGIS. In
    this version of the system, the implementation of the Batch layer is based on
    a non-distributed DBMS. We are aware of the limitations of such an architecture,
    mainly scalability, but for the time being, the number of robots deployed at the
    same time at the farm is up to three and therefore, the proposed DBMS architecture
    is sufficient to handle the amount of data generated by these robots. Moreover,
    the choice of this kind of the relational logical design is motivated by the possibility
    to transparently change the physical implementation to adopt the distributed version
    of PostgreSQL (Postgres-XL) or Apache Hive, in order to handle huge volumes of
    trajectory data. We are working on the finalization of the OLAP system. This implementation
    is compatible with OLAP technologies we currently use in other projects. In particular,
    for the OLAP Server we plan to use Mondrian, and for the OLAP client—Saiku. However,
    we are working on the extension of our cartographic tool for the geovisualization
    of OLAP queries (Map4OLAP) [11] in order to take into account also temporal data
    for the visualization of spatial dimensional data. In other words, we are working
    on the parser of OLAP queries results of Map4OLAP, to build geometrical representations
    using spatial and temporal dimension members. This is to allow to build choropleth
    maps with trajectories data. 3.5 Serving layer The Scheduling service of robots’
    tasks is composed of two parts, namely, (1) the logistical decisions and (2) the
    trajectory design. The former, called extra-plot scheduling, is mainly the assignment
    of robots to perform necessary tasks on plots. The latter, called intra-plot scheduling,
    is mainly the movement of robots inside a plot to perform tasks. Intra-plot scheduling
    can be done beforehand, which means that for each pair robot-equipment, called
    configuration, and for each plot, the trajectory inside the plot can be designed
    in advance. Then, when using a configuration for a plot, the extra-plot scheduling
    can determine, from intra-plot scheduling, time and energy spent to perform the
    task. The extra-plot scheduling goal is to satisfy a set of demands that are emitted
    by the human operators. A demand i is a request for a task \\(t_{i}\\) to carry
    out in a time window \\([l_{i};u_{i}]\\), with a preferred starting date \\(o_{i}\\),
    and a priority \\(p_{i}\\) to indicate the importance of the demand. The scheduling
    is mainly to decide when and with which robot(s) to fulfill each demand. The quality
    of a solution is measured by a prize \\(P_{i}\\) for each demand i that depends
    on the date \\(w_{i}\\) its task is scheduled to start and its priority: the closer
    \\(w_{i}\\) is to the preferred starting date \\(o_{i}\\), the closer is the prize
    \\(P_{i}\\) to the priority \\(p_{i}\\). The scheduling problem aims at finding
    a solution that maximizes the sum of all the prizes \\(P_{i}\\). As described
    in the previous sections, new demands possibly come on the fly. Thus, we focus
    here on online scheduling: only a subset of demands is known at any time, and
    the algorithm adapts in real-time the schedule with the evolution of the demands.
    Our algorithm provides only the next reference trajectory of each robot, which
    should satisfy only some of the demands. A reference trajectory is here a circuit
    starting at the warehouse where the robot is first set up with an equipment and
    refilled, then sent successively to many plots to achieve the same task, and ultimately,
    returns to the warehouse where its next trajectory is computed. Finding the next
    reference trajectory is modeled as a MILP, an optimization problem that can be
    solved by linear program solvers like CPLEX with C++. As input, this program needs,
    for each robot and equipment, the date it will be available, and as output, it
    provides the next reference trajectory of each robot (cf. Fig. 7). Fig. 7 Finding
    next reference trajectories with online scheduling Full size image At the first
    iteration (i.e., a call) of the algorithm, a trajectory is assigned to each robot.
    At the next iterations, a trajectory is assigned only to the next available robot
    in the warehouse. As the algorithm works online, it could lead to a blocking situation,
    e.g. decisions of iteration k could make impossible to satisfy some demand at
    iteration \\(k+j\\). To prevent this, a “simulation” of the next decisions of
    the online algorithm is run: based on the estimated availability date of each
    robot, the online algorithm is run for iteration \\(k+1, k+2,\\ldots\\) until
    all the demands known at iteration k are satisfied. If a blocking situation is
    found, the priorities of the demands are adjusted and a new simulation is run,
    until finding a non blocking solution (cf. Fig. 7). This algorithm can be used
    to deal with unpredictable events. Indeed, meteorological alerts, robots’ failures,
    or plants’ disease detection, can be seen by the online algorithm as robots that
    go back to the warehouse (some tasks are stopped) and new demands that arise (uncompleted
    tasks become new demands, and some events can produce new demands). It is also
    necessary to decide which robots to interrupt in their mission to make them available
    to adapt to these events. One approach (cf. Fig. 8) would be to select, among
    many recall scenarios, the one providing the best solution with the online algorithm
    from Fig. 7. Fig. 8 Management of unpredictable events with online scheduling
    Full size image Solving the whole scheduling problem at once is difficult since
    it requires long computation time, using for instance linear programming (as we
    begin to do). In this work, to reduce computation time, we choose an iterative
    approach that solves each time a MILP, and we are developing constraints for our
    model to prevent most of the iteration blocking situations. 3.6 Network architecture
    As mentioned in Sect. 2, motivated by our real experience-based ascertainment
    that most of French farms are not deployed with recent network communication protocols
    such as 5G, fibre-optic, etc., we use a Wi-Fi network to ensure a wireless connection
    between the robots and the farmer. This allows the farmer to have a permanent,
    low budget, and operator independent communication network to control and supervise
    the robots. Figures 9 and 10 show the three-layer network architecture: Edge–Fog–Cloud.
    Robots represent the Edge layer, the farmer control station represents the Fog
    layer, and the cloud servers represent the Cloud layer. In our case, the Fog plays
    a crucial role. It offers Internet connection to the robots, offloads processing
    from the robots, and most importantly, allows real-time interaction between the
    farmer and the robots. The proximity and the quality of the Wi-Fi network must
    allow real-time interaction that guarantees the application requirements (i.e.,
    low delay, high data rate, low data loss). Fig. 9 The LambdAgrIoT network architecture
    Full size image Fig. 10 LambdAgrIoT network and modules mapping Full size image
    High speed Wi-Fi standards including IEEE 802.11ac (Wi-Fi 5) [35] and IEEE 802.11ax
    (Wi-Fi 6) [27] come with a vast improvement in features and capabilities compared
    to legacy 802.11 standards. The problem of overcoming spectrum limitation while
    delivering high data rate requirements can be achieved using multiple antennas.
    The multiple-input multiple-output (MIMO) technique has proven to be the next
    major advance in radio technology. It plays a vital role in enhancing the capacity
    and the reliability of wireless communication systems, as it offers the possibility
    to profit from spatial multiplexing and beamforming. In spatial multiplexing,
    different symbols are transmitted through different antennas, so that the data
    rate is improved reaching up to 9.6 Gbps. Beamforming on the other hand reduces
    multipath fading and channel interference by concentrating the signal radiation
    only toward the anticipated direction. Beamforming techniques extend Wi-Fi coverage
    and allow utilizing higher Modulation and Coding Scheme (MCS) values at farther
    distances, which leads to achieving higher data rates. Multi-User MIMO (MU-MIMO),
    as well as OFDMA (used in Wi-Fi 6), allow to serve multiple robots at once reducing
    the amount of time a robot/router has to wait in order to receive the next data
    frame. The range extension and capacity enhancement achieved by using the MIMO
    technology is not only limited to increasing the data rate and reducing interference,
    it also complements the deployment technique by reducing the number of required
    Wi-Fi routers and overcoming the physical limitations on their placement caused
    by obstacles inside the field. As depicted in Fig. 9, Wi-Fi routers placement
    is important in order to enlarge the coverage area, and minimize non-coverage
    areas. In certain scenarios, i.e.: deployment in large fields, multihop networks
    are used by either introducing static robots or using the mobile robots themselves,
    it extends the coverage of the network and improves connectivity. Moreover, using
    the robots as intermediate nodes eliminates the need for cable deployment reducing
    the cost and the complexity of the deployment. In this architecture, we can distinguish
    two types of networks: Access network and Collect network (Figs. 9, 10). The Access
    network ensures quality communication links between the robots (Edge layer) and
    the farmer (Fog layer). This is done through the Wi-Fi network. The Collect network
    offers a communication link between the farmer and the cloud servers for further
    analysis and storage. This is done through any type of broadband connection (e.g.
    ADSL, Fiber, Cable). The performance on both networks will have a direct impact
    on the size and type of data that can be exchanged at any time between the robots
    and other entities (like farmers and cloud servers). 4 Experiments In this section
    we report the results of a preliminary experimental evaluation of the architecture,
    conducted to show the feasibility of our proposal. Firstly, we put to the test
    each layer using simulated data (Sect. 4.1 for the Speed layer, Sect. 4.2 for
    the Batch layer and Sect. 4.3 for the Serving layer), then we describe a real
    experience in the field. 4.1 Speed layer In the next of this section, we report
    some tests showing the performance of the Speed layer w.r.t. the Volume of data
    computed and real-time features as defined in the Table 1. In particular, we measure
    the computation time for two alerts: Delay and Collision w.r.t. the number of
    robots (i.e. the number of different data ingested and computed by the Stream
    Analysis module). We simulate data for 10, 20 and 50 robots, which is at the limit
    of a realistic scenario for the Speed layer since we recall that in our architecture
    one Speed layer is deployed for each farm, which means that the 50 robots scenario
    means that one farmer has 50 robots at the same time on her/his farm. From a pure
    technical point of view, the test data used do not represent a real Big Data set.
    However, the experimental setting composed of 50 simulated and 2 real robots reflect
    a real setting used in farms. Indeed, the usage of robots in agriculture is real
    in the primordial era. In real life, really few farms have robots, and when they
    deploy them, maximum one to three robots are shared by different farmers. Therefore,
    the usage of larger data volumes is an interesting issue, for future experimentation,
    as described in Sect. 6. For this test, we have deployed the Speed layer using
    Spark Streaming (version 2.3.3) running on Java 1.8 installed on one machine (a
    PC laptop), running on Windows (version 10) as the operating system. The machine
    has 32 GB RAM and a quad-core 64-bit i5 processor. Results for the Delay and Collision
    alerts are shown in Figs. 11 and 12. Results show that execution time for Collision
    alert takes less than 1.5 s for 50 robots, which confirms the scalability of our
    approach w.r.t. the number of robots, since 1.5 s processing time can be tolerated
    by the farmer for this kind of alert. Delay alert computation time are a little
    bit higher, since this query must use reference trajectory data that is stored
    in the DBMS PostGIS of the DD-ST module. However, also in this case, the performance
    is under 2.5 s that is reasonable for this kind of alert that does not need hard
    real time computation. Fig. 11 Alert Delay time performance Full size image Fig.
    12 Alert Collision time performance Full size image 4.2 Batch layer In this section,
    we present some tests to show the scalability of the TDW. In particular, we measure
    the computation time of a set of representative OLAP queries over our case study.
    The DW of the Batch layer has been deployed using a machine running Windows 10
    64-bit as the operating system, 4GB of RAM and an AMD FX 4100 @3.6 GHz 64-bit
    Quad core processor. The DW has been implemented using PostGIS. In order to test
    the feasibility of our implementation, we have defined a set of representative
    queries for our case study as shown in Table 2. These queries have been implemented
    in SQL. For example the implementation of the query: “What are the points and
    their alerts for each plot, each year that have an alert and alerts different
    from NoAlert(AlertID = 8)?” is shown in Fig. 13. We have defined six queries according
    to how trajectory is used. Queries q1, q2 and q3, consider each trajectory as
    one unique complex object and calculate an aggregation of the numerical measure
    (i.e. delay) over all its points. Moreover, queries q2 and q3 apply a spatial
    and temporal predicate to select the trajectories that must be computed, respectively.
    Query q4 outputs points inside the trajectories. Finally, q5 computes the numerical
    values using different trajectories. In order to test the time performance of
    our logical schema of Fig. 6, we have fed the DW with trajectories composed of
    6442 points per trajectory, achieving a fact table with 1.062.120 tuples. These
    data have been simulated, introducing some spatial deviations from the corresponding
    reference one. Fig. 13 Example of OLAP query implementation Full size image Table
    2 OLAP queries Full size table From the results shown by Fig. 14, we can conclude
    that all kinds of queries have feasible time and so the implementation is coherent
    for OLAP analysis and then coherent with offline computation requirement (R–Q1
    and R–C2) described in Sect. 2 (Table 1). Fig. 14 Execution time of OLAP queries
    of Table 2 Full size image 4.3 Serving layer In the next, we present the performance
    of the Serving layer, and in particular of solving the MILP (cf. Fig. 7) that
    is the part requiring most of the computation time of online scheduling. The experiment
    has been achieved on an Intel Core i5-8400 CPU @ 2.80 GHz with 6 cores, on Ubuntu
    20.04.2 LTS 64-bit operating system, and using CPLEX version 12.10 for linear
    programming solving. The tested problem instances are adapted from well-known
    instances of the Vehicle Routing Problem with Time Window (VRPTW) introduced in
    [46]. The time windows and the distances from the VRPTW instances are kept to
    define the demands and the travel times of our instances. The preference time
    of each demand is set inside its time window and is twice farther from the end
    than from the start. Each demand’s priority was generated randomly between 1 and
    100. Instances are designed with three robots of the same kind and six tools from
    three different compatible equipment kinds, i.e. two tools of each kind. This
    makes three different possible configurations. The demands are divided into three
    groups, each one can be satisfied by at least two configurations. The battery
    capacity is 100 J, enough for a robot to satisfy the farthest demand. The instances
    are designed to spend most of the energy in performing the tasks and not in traveling.
    Table 3 shows the effective execution time (in seconds, third column) to solve
    the first iteration MILP of 17 instances generated with 20 demands and 20 plots,
    and the proportion (second column) of demands satisfied by each found solution
    (as we test the first iteration of the online algorithm, the solution consists
    in the first scheduled routes of the robots). For 12 instances, an optimal solution
    was found within 600 s, and for the others, the solving has been stopped when
    reaching this time limit, getting feasible solutions with a maximum gap (i.e.
    relative distance to the best found yet upper bound of the objective) of 99.38%
    in the worst case (last column). This shows that the MILP resolution that is at
    the center of the online algorithm is suited for real-time response. Therefore,
    the Serving layer supports analytical and real-time requirements as described
    in Sect. 2. Table 3 MILP solving performance Full size table 4.4 A real scenario
    In this section, we present a real experience to put to the test the Data producer,
    Queuing and Speed layer. Both robots used to perform this experiment run under
    ROS. These two robots are equipped with the following equipment: one GPS, one
    IMU, one Wi-Fi transceiver 2.4 GHz (Bullet M2), and sensors for the odometry.
    To insist on the flexibility of this architecture, the chosen robots are different.
    One robot is a mobile manipulator (Campero robot) and one is a mobile platform
    (Adap2e robot) (Fig. 15). Built by the Robotnik company, Campero, a mobile manipulator
    piloted by skid-steering, can be used as a support for research on mobile manipulation.
    this robot weighs 150 kg for a payload of 30 kg. The dimensions of this robot
    are 1 m long and 0.8 m wide. It is equipped with a Universal Robot UR10 arm allowing
    10 kg to be loaded at the end of the arm. This prototype makes it possible to
    test the servo-control of on-board tools against a plant structure. Designed entirely
    by the Romea team as part of the Adap2E project, 1 this robot has four independent
    driving and steering wheels. It weighs 500 kg for a footprint of \\(2.3\\times
    0.7\\times 1\\) m and is designed to go in different types of plots with a payload
    of 150 kg. Designed to be versatile, it is able to associate with its twin, in
    the process of being finalized, and to embed different types of sensors to adapt
    to varied conditions, as well as to its multiple missions. Fig. 15 Robots used
    for the real experiment: Campero (left) and Adap2e (right) Full size image The
    experiment area is shown in Fig. 16. Figure 16 shows the area where Adap2e robot
    evolved during GPS trajectory following and the stand-by point for Campero robot.
    Its size is \\(40\\,{\\text {m}}x18\\,{\\text {m}}\\). The PC laptop with the
    message queuing layer and the Speed layer (RT Monitoring Dashboard) is located
    in our office near the field. This laptop is running Ubuntu 20.04.3 LTS (Focal
    Fossa) as the operating system, 8 GB of RAM and an Intel core i7-6700 @4.0 GHz
    64-bit Quad core processor. For this experiment, the mobile manipulator (Campero)
    follows the GPS reference trajectory that we have manually predefined (the yellow
    trajectory shown in Fig. 16). During this time, the mobile platform (Adap2e) is
    on standby. The two robots transmit their speeds, GPS positions, and some internal
    alerts to the Message Queuing layer at a 10 Hz rate (i.e. 10 data/s). We chose
    to send more data than what shown in the previous section (1 data/s) to put to
    the test in a real life condition the Speed layer and the Wi-Fi connection. For
    this experiment, weather data was simulated. The tested alert is the collision
    alert among robots described in the previous section. The standby robot is closed
    to the trajectory followed by the second one. Thus, the distance between the robots
    will vary over time and when it is less than 5 m over a period of more than 5
    s, then the collision alarm will warn the user via the web interface. The network
    communication is configured in this way (Fig. 16): robots send data via Wi-Fi
    and radio to Ubiquity bullets. Then, data are forwarded to the PC laptop through
    Ethernet. Figure 17 shows a picture of the robots during the work. The picture
    has been taken using a drone. Figure 17 shows also the corresponding visualization
    using our web interface. A video excerpt of the experience can be found here:
    https://www.youtube.com/watch?v=hSt35G82rv4. Fig. 16 Experimental area configuration
    Full size image Fig. 17 A picture of the experimentation Full size image The results
    of the experience are the following ones: Data producer layer ROS has not found
    any difficulties or problems in collecting and sending data. Message Queuing layer
    Kafka has ingested and sent all data of the robots without no data loss. Speed
    layer: the collision alerts have been well computed and shown on the web interface.
    Network it has supported the data communication without difficulties or problems.
    The experience validates the requirements described in the Sect. 2 about the important
    computation and communication provided by the software tools used by the architecture.
    Moreover, it is important note the independence of the architecture from the robot
    type and the ROS middleware, which allows for easy implementation. Four other
    particularly interesting points could be observed from the robots’ applications
    development: This architecture allows for real-time or near real-time monitoring.
    The robot can share information with other robots or other computers easily without
    dependency on its low level. The robot can share information with other robots,
    other computers, or DWs easily without dependency on its low level. The system
    is able to support multiple robots for monitoring. 5 Related work The usage of
    IoT data in smart farming, and recently for agro-ecology, has been investigated
    in several works. Reference [48] provides a survey of existing works using IoT
    for crop management. Authors put in evidence the importance of IoT for precision
    farming and predictive actions. In the same way, References [36] and [5] provide
    surveys of works using IoT for smart farming. A particular focus on the usage
    of robots in agriculture is provided in [24] and [28] that show the potentialities
    of autonomous robots in agriculture. Other existing works cover mainly different
    scopes (as surveyed in [29]): (1) capturing, storing, and analyzing data for a
    specific purpose [32, 37, 51], (2) agricultural machinery management [6, 12, 20],
    and (3) scheduling robots. Capturing, storing, and processing data. Collected
    data must be managed appropriately in order to extract insights, and support farmers.
    In [51], authors stress that early forecasting of farms’ products is important
    for market planning and for growers and exporters to plan labour, bins, as well
    as storage and purchase of packing materials. Forecasts are basically based on
    continuous check of the production. In [32], the authors describe the deployment
    of sensors in chicken coops in order to ensure a healthy environment via monitoring
    ambient air quality. Reference [37] focuses on the use of IoT technologies in
    Food supply chain farm to fork, starting with production phase (smart farming,
    livestock management), transportation and distribution phases, and finally retail
    phase (loyalty cards, smart trolleys). A particular focus on TDW for mobility
    data is presented in what follows. In the last years some works study TDW (see
    [3, 41] for a survey). Reference [41] groups existing works in two main groups:
    cell and segment approaches. Cell approaches map the trajectory in a regular cells
    grid. For each cell, a aggregation of all numerical values is stored in the TDW.
    Segment approaches store start and end points of the trajectory and some numerical
    descriptive values, such as duration, distance, etc. These works are not suitable
    for our case study, where a detailed representation of the robots trajectories
    is needed. In other terms, these work provide an aggregated/approximated representation
    of the trajectory. Therefore, some works propose to store all the point of the
    trajectory in the TDW. However, these works do not report performance queries
    time and use ad hoc OLAP queries. To conclude, although Spatial DW [10], and TDW
    has been studied in several work, its usage in the context of autonomous agricultural
    robots analysis is still an open issue. Agricultural machinery management. As
    highlighted in the literature review [12], many research works address agricultural
    machinery management tasks such as capacity planning, tasks’ times planning, scheduling,
    route planning, and performance evaluation. Robots’ routes planning is complex,
    and is usually based on implementing and assessing simulations. In [6], the authors
    create and model simulated robots’ trajectories on ROS Gazebo simulation tool.
    This allows them to test robots’ trajectories using first real Digital Elevation
    Model (DEM) for 3-D representation of the terrain, and second the effectiveness
    of obstacles’ encounters detection by robots’ LiDAR sensors. In [20], authors
    present also a simulation tool for minimizing the worked distance of agricultural
    vehicles using their real time geographical position. However, this optimization
    tool is not designed for a fleet of vehicles. In [45], the authors propose a rescheduling
    algorithm for a fleet of vehicles. This algorithm uses real time data issued from
    the vehicles (speed and GPS) to define the new reference trajectory. Scheduling
    is by nature a difficult optimization problem [40]. Scheduling a fleet of robots
    in an agricultural system adds more complexity, as the scheduling must take into
    account new constraints, and outputs new schedule in real-time. The VRPTW is also
    proved to be a hard optimization problem [15]. Thus, one common approach is to
    use metaheuristics instead of exact optimization methods, like [30] that uses
    a hybrid genetic algorithm for a harvest scheduling problem. In addition, to find
    a solution robust enough to resist to hazards, such as delay or robot failure
    that will inevitably occur, high computing would be necessary to find solutions
    for a set of scenarios [2]. Online scheduling usually needs to be more reactive
    and less predictive [42] than offline scheduling, because less time is available
    to test many scenarios. The optimization techniques and the problem formulations
    can thus be different. Notably, related to our optimization problem, we can notice
    the DS-VRPTW (Dynamic and Stochastic VRPTW, i.e., VRPTW with stochastic customer
    demands) solved by online methods like the GSA (Global Stochastic Assessment)
    algorithm that is based on a stochastic programming heuristic [44]. A survey of
    works on scheduling of agricultural vehicles is presented in [12]. They classify
    scheduling tasks according to used decision methods, such as simulation or analytical
    optimization. They also highlight the online capabilities of these scheduling
    methods, based on data collected in real time by sensors installed in the field
    and on robots [47]. In all research directions, the adoption of new information
    technologies is very important since it provides better support to stake-holders.
    In [36], the authors survey literature and evaluate the adoption of new IT technologies,
    such as big data, computer vision, artificial intelligence, blockchain and fuzzy
    logic in the smart agriculture field. In [50], the authors survey literature on
    big data applications in Smart Farming which turn farm management and farm processes
    into highly data driven and data enabled applications. The data chain includes
    data capture, data storage, data transfer, data transformation, data analytics,
    and data marketing. Few related works use big data architecture for monitoring
    farming tasks. In [17], the authors propose a big data architecture for processing
    weather data and aerial images of crop farms. The architecture implements the
    Speed layer (e.g. Kafka, Samsa, and Druid technologies) and the Batch layer (e.g.
    Hadoop, Spark technologies), in order to set up a smart data enabled irrigation
    system. In [43], authors have adopted Lambda architecture, which guarantees the
    scalable and fault-tolerant of the real-time data processing. They develop a cloud-based
    Smart farming management system, applied to the Wallonia region of Belgium. Our
    work aims to not only manage the massive data coming from IoT devices, but also
    control and schedule tasks through distributed systems using smart robots. Recently,
    References [29] and [1] survey related work concerning multi-agent based allocation
    and robots collaboration. Reference [1] proposes a general multi-agent cloud framework,
    but no implementation has been provided. The lack of successfully proved data
    and network architectures in this scheduling context has been also identified
    in the survey work of [47], and [54]. A review of technologies supporting the
    Internet of Vehicles (loosely related to our work) has been published recently
    [4]. 6 Conclusion and future work Nowadays autonomous agricultural robots are
    more and more frequently used. They offer an important solution for the agro-ecology
    transition, as they have low impact on the environment (light, possibility to
    operate in fleet), and they are able to perform repetitive and accurate farming
    operations over a long time period. These autonomous vehicles produce huge volumes
    of data, which combined with other smart farming IoT devices, play a crucial role
    for agriculture stake-holders to analyze the agricultural practices. In this context,
    a challenging research and technological issues include: (1) managing massive
    data that come from autonomous robots in a form of streaming data and (2) robots’
    scheduling in real-time, based on the analysis of the streaming data. To this
    end, in this paper, we proposed a multi-layer Lambda Architecture—LambdAgrIoT.
    It was designed to fulfill the requirements of big data management, query execution,
    real-time reactivity and network monitoring. The main components of LambdAgrIoT
    include: (1) data producers, which are mainly the robots and the weather stations;
    (2) the message queuing layer, based on Apache Kafka, for managing messages exchange
    between the different components of the architecture; (3) the Speed layer, based
    on Apache Spark, Apache Spark Streaming, and Apache Sedona, which manages, stores
    and shows all real time data generated by data producers; (4) the Batch layer
    with all its underlying dimensions, which manages the big data related to robots
    operations, based on the Data Warehouse and OLAP technologies; (5) the Serving
    layer, which manages the decision making and the trajectory design of robots,
    based on optimization problem solving. The whole architecture was evaluated experimentally
    in a real, although small, setting. The results turned out to be promising, as
    they showed the applicability of LambdAgrIoT to managing real farm robots. Moreover,
    LambdAgrIoT offered an acceptable processing delay and execution time of its main
    components. The main limitation of the experimental evaluation is the fact that
    LambdAgrIoT produced simulated trajectories and that it was tested in a controlled
    environment with a relatively low usage of the wireless network. For this reason,
    an extended experimental evaluation including a larger setting is currently under
    development, including extensive experiments of the Speed Layer using massive
    streaming data. Moreover, the on-going work focuses also on: The OLAP Server implementation
    in the Batch layer and the extension of Map4OLAP for cartographic visualization
    of trajectory data. Benchmarking other logical models than the one presented in
    Sect. 3.4, using an high number of data and varying the resolution of each trajectory
    (i.e. the number of elements composing each trajectory). Benchmarking the physical
    implementation of the OLAP implementation using Postgres XL and Hive, which are
    relational-based distributed DBMSs. In the nearest future, it is envisaged to
    extend the scheduling algorithm to provide as an output real trajectories (and
    not simulated ones), using a new top-k robots trajectories algorithm. The main
    idea is to find in the TDW the ’best’ trajectory. Furthermore, with multiple robots
    connected to the same access network, guaranteeing performance with the presence
    of interference in the Wi-Fi network is not an easy task. Therefore, we will work
    on a cross-layer network design that allows the application to be aware of the
    quality and capacity of the communication links, in order to adapt its requirements
    accordingly. Data availability The datasets generated during and/or analysed during
    the current study are not publicly available due to confidential reasons. Change
    history 13 November 2022The original online version of this article was revised:
    The author biographies and photos were mismatched, the biographies and photos
    have been corrected now. Notes https://adap2e.inrae.fr/. References Afrin, M.,
    Jin, J., Rahman, A., et al.: Resource allocation and service provisioning in multi-agent
    cloud robotics: a comprehensive survey. IEEE Commun. Surv. Tutor. (2021). https://doi.org/10.1109/COMST.2021.3061435
    Article   Google Scholar   Aissi, H., Bazgan, C., Vanderpooten, D.: Min–max and
    min–max regret versions of combinatorial optimization problems: a survey. Eur.
    J. Oper. Res. 197(2), 427–438 (2009) Article   MathSciNet   MATH   Google Scholar   Alsahfi,
    T., Almotairi, M., Elmasri, R.: A survey on trajectory data warehouse. Spat. Inf.
    Res. 28(1), 53–66 (2020) Article   Google Scholar   Arooj, A., Farooq, M.S., Akram,
    A., et al.: Big data processing and analysis in Internet of vehicles: architecture,
    taxonomy, and open research challenges. Arch. Comput. Methods Eng. 29, 793–829
    (2021) Article   Google Scholar   Ayaz, M., Ammad-Uddin, M., Sharif, Z., et al.:
    Internet-of-Things (IoT)-based smart agriculture: toward making the fields talk.
    IEEE Access 7(1), 129551–129583 (2019) Article   Google Scholar   Bechtsis, D.,
    Moisiadis, V., Tsolakis, N., et al.: Scheduling and control of unmanned ground
    vehicles for precision farming: a real-time navigation tool. In: International
    Conference on Information and Communication Technologies in Agriculture, Food
    and Environment (HAICTA), 2017, pp. 180–187 (2017) Belhassena, A., Battistoni,
    P., Souza, M., et al.: Towards an architecture for agricultural autonomous robots’
    scheduling. In: 2021 IEEE 25th International Enterprise Distributed Object Computing
    Workshop (EDOCW), 2021, pp 194–203. IEEE Computer Society, Los Alamitos (2021).
    https://doi.org/10.1109/EDOCW52865.2021.00049 Belhassena, A., Bimonte, S., Battistoni,
    P., et al.: On modeling data for IoT agroecology applications by means of a UML
    profile. In: International Conference on Management of Digital EcoSystems (MEDES),
    2021 (2021) Belhassena, A., Bimonte, S., Battistoni, P., et al.: On modeling data
    for IoT agroecology applications by means of a UML profile. In: Chbeir, R., Manolopoulos,
    Y., Bellatreche, L., et al. (eds) MEDES ’21: Proceedings of the 13th International
    Conference on Management of Digital EcoSystems, Virtual Event, Tunisia, 1–3 November
    2021, pp 120–128. ACM (2021). https://doi.org/10.1145/3444757.3485109 Bimonte,
    S.: Current approaches, challenges, and perspectives on spatial OLAP for agri-environmental
    analysis. Int. J. Agric. Environ. Inf. Syst. 7(4), 32–49 (2016). https://doi.org/10.4018/IJAEIS.2016100103
    Article   Google Scholar   Bimonte, S., Edoh-Alove, É., Coulibaly, F.A.: Map4OLAP:
    a web-based tool for interactive map visualization of OLAP queries. In: Chen,
    Y., Ludwig, H., Tu, Y., et al. (eds) 2021 IEEE International Conference on Big
    Data (Big Data), Orlando, FL, USA, 15–18 December 2021, pp 3747–3750. IEEE (2021).
    https://doi.org/10.1109/BigData52589.2021.9671574 Bochtis, D.D., Sørensen, C.G.,
    Busato, P.: Advances in agricultural machinery management: a review. Biosyst.
    Eng. 126, 69–81 (2014) Article   Google Scholar   Card, S.K., Mackinlay, J.D.,
    Shneiderman, B.: Readings in Information Visualization—Using Vision to Think.
    Academic, London (1999) Google Scholar   Cariou, C., Gobor, Z., Seiferth, B.,
    et al.: Mobile robot trajectory planning under kinematic and dynamic constraints
    for partial and full field coverage. J. Field Robot. 34(7), 1297–1312 (2017) Article   Google
    Scholar   Cordeau, J.F., Desaulniers, G., Desrousiers, J., et al.: VRP with time
    windows. In: The Vehicle Routing Problem. SIAM Monographs on Discrete Mathematics
    and Applications, pp. 157–193. SIAM, Philadelphia (2002) Dalgaard, T., Hutchings,
    N., Porter, J.: Agroecology, scaling and interdisciplinarity. Agric. Ecosyst.
    Environ. 100(1), 39–51 (2003) Article   Google Scholar   Debauche, O., El Moulat,
    M., Mahmoudi, S., et al.: Irrigation pivot-center connected at low cost for the
    reduction of crop water requirements. In: International Conference on Advanced
    Communication Technologies and Networking (CommNet), 2018, pp 1–9. IEEE (2018)
    Deremetz, M., Couvent, A., Lenain, R., et al.: A generic control framework for
    mobile robots edge following. In: Proceedings of International Conference on Informatics
    in Control, Automation and Robotics, 2019, pp 104–113 (2019) Dobbelaere, P., Esmaili,
    K.S.: Kafka versus RabbitMQ: a comparative study of two industry reference publish/subscribe
    implementations: industry paper. In: ACM International Conference on Distributed
    and Event-based Systems (DEBS), 2017, pp. 227–238 (2017) Edwards, G.T., Hinge,
    J., Skou-Nielsen, N., et al.: Route planning evaluation of a prototype optimised
    infield route planner for neutral material flow agricultural operations. Biosyst.
    Eng. 153, 149–157 (2017) Article   Google Scholar   Emani, C.K., Cullot, N., Nicolle,
    C.: Understandable big data: a survey. Comput. Sci. Rev. 17, 70–81 (2015) Article   MathSciNet   Google
    Scholar   Emmi, L., Gonzalez-de Soto, M., Pajares, G., et al.: New trends in robotics
    for agriculture: integration and assessment of a real fleet of robots. Sci. World
    J. (2014). https://doi.org/10.1155/2014/404059 Article   Google Scholar   Fountas,
    S., Carli, G., Sørensen, C.G., et al.: Farm management information systems: current
    situation and future perspectives. Comput. Electron. Agric. 115, 40–50 (2015)
    Article   Google Scholar   Gonzalez-de Santos, P., Fernández, R., Sepúlveda, D.,
    et al.: Field robots for intelligent farms—inhering features from industry. Agronomy
    10(11), 1638 (2020) Article   Google Scholar   Hesse, G., Matthies, C., Uflacker,
    M.: How fast can we insert? An empirical performance evaluation of Apache Kafka.
    In: IEEE International Conference on Parallel and Distributed Systems (ICPADS),
    2020, pp 641–648 (2020) Iftikhar, N., Lachowicz, B.P., Madarasz, A., et al.: Real-time
    visualization of sensor data in smart manufacturing using Lambda architecture.
    In: International Conference on Data Science, Technology and Applications (DATA),
    2020, pp. 215–222 (2020) Khorov, E., Kiryanov, A., Lyakhov, A., et al.: A tutorial
    on IEEE 802.11ax high efficiency WLANs. IEEE Commun. Surv. Tutor. (2019). https://doi.org/10.1109/COMST.2018.2871099
    Article   Google Scholar   Krishnan, A., Swarna, S., Balasubramanya, S.H.: Robotics,
    IoT, and AI in the automation of agricultural industry: a review. In: Proceedings
    of B-HTC, 2020, pp. 1–6 (2020) Lujak, M., Sklar, E., Semet, F.: Agriculture fleet
    vehicle routing: a decentralised and dynamic problem. AI Commun. 34(1), 55–71
    (2021) Article   MathSciNet   Google Scholar   Luo, X., Zhang, L.: The optimal
    scheduling model for agricultural machinery resources with time-window constraints.
    Int. J. Simul. Model. 15(4), 721–731 (2016) Article   Google Scholar   MacEachren,
    A.M., Gahegan, M., Pike, W., et al.: Geovisualization for knowledge construction
    and decision support. IEEE Comput. Graph. Appl. 24(1), 13–17 (2004) Article   Google
    Scholar   Mahale, R.B., Sonavane, S.: Smart poultry farm monitoring using IoT
    and wireless sensor networks. Int. J. Adv. Res. Comput. Sci. (2016). https://doi.org/10.26483/ijarcs.v7i3.2665
    Article   Google Scholar   Marz, N., Warren, J.: Big Data: Principles and Best
    Practices of Scalable Realtime Data Systems. Manning, New York (2015) Google Scholar   Maurel,
    V.B., Huyghe, C.: Putting agricultural equipment and digital technologies at the
    cutting edge of agroecology. Ol. Corps Gras Lipides 24(3), 1–7 (2017) Google Scholar   Narayan,
    S., Jayawardena, C., Wang, J., et al.: Performance test of IEEE 802.11ac wireless
    device. In: International Conference on Computer Communication and Informatics,
    2015 (2015). https://doi.org/10.1109/ICCCI.2015.7218076 Navarro, E., Costa, N.,
    Pereira, A.: A systematic review of IoT solutions for smart farming. Sensors 20(15),
    4231 (2020) Article   Google Scholar   Nukala, R., Panduru, K., Shields, A., et
    al.: Internet of Things: a review from ‘farm to fork’. In: Irish Signals and Systems
    Conference (ISSC), 2016, pp. 1–6 (2016) Pandya, A., Odunsi, O., Liu, C., et al.:
    Adaptive and efficient streaming time series forecasting with Lambda architecture
    and Spark. In: IEEE International Conference on Big Data, 2020, pp. 5182–5190.
    IEEE (2020) Percivall, G.: Realizing the geospatial potential of mobile, IoT and
    big data. In: Liao, L. (ed.) International Conference on Computing for Geospatial
    Research and Application, 2012, p. 8. ACM (2012) Pinedo, M., Zacharias, C., Zhu,
    N.: Scheduling in the service industries: an overview. J. Syst. Sci. Syst. Eng.
    24(1), 1–48 (2015) Article   Google Scholar   Ribeiro de Almeida, D., de Souza,
    B.C., Gomes de Andrade, F., et al.: A survey on big data for trajectory analytics.
    ISPRS Int. J. Geo-Inf. 9(2), 88 (2020) Article   Google Scholar   Rossit, D.A.,
    Tohmé, F., Frutos, M.: Industry 4.0: smart scheduling. Int. J. Prod. Res. 57(12),
    3802–3813 (2019) Article   Google Scholar   Roukh, A., Fote, F.N., Mahmoudi, S.A.,
    et al.: Big data processing architecture for smart farming. Procedia Comput. Sci.
    177, 78–85 (2020) Article   Google Scholar   Saint-Guillain, M., Deville, Y.,
    Solnon, C.: A multistage stochastic programming approach to the dynamic and stochastic
    VRPTW. In: Michel, L. (ed.) International Conference on AI and OR Techniques in
    Constraint Programming for Combinatorial Optimization Problems, 2015, pp. 357–374
    (2015) Seyyedhasani, H., Dvorak, J.S.: Dynamic rerouting of a fleet of vehicles
    in agricultural operations through a dynamic multiple depot vehicle routing problem
    representation. Biosyst. Eng. 171, 63–77 (2018) Article   Google Scholar   Solomon,
    M.M.: Algorithms for the vehicle routing and scheduling problems with time window
    constraints. Oper. Res. 35(2), 254–265 (1987) Article   MathSciNet   MATH   Google
    Scholar   Villa-Henriksen, A., Edwards, G.T., Pesonen, L.A., et al.: Internet
    of Things in arable farming: implementation, applications, challenges and potential.
    Biosyst. Eng. 191, 60–84 (2020). https://doi.org/10.1016/j.biosystemseng.2019.12.013
    Article   Google Scholar   Vitali, G., Francia, M., Golfarelli, M., et al.: Crop
    management with the IoT: an interdisciplinary survey. Agronomy 11(1) (2021). https://www.mdpi.com/2073-4395/11/1/181
    Wellington, C., Courville, A., Stentz, A.T.: A generative model of terrain for
    autonomous navigation in vegetation. Int. J. Robot. Res. 25(12), 1287–1304 (2006)
    Article   Google Scholar   Wolfert, S., Ge, L., Verdouw, C., et al.: Big data
    in smart farming—a review. Agric. Syst. 153, 69–80 (2017) Article   Google Scholar   Wulfsohn,
    D., Zamora, F.A., Téllez, C.P., et al.: Multilevel systematic sampling to estimate
    total fruit number for yield forecasts. Precis. Agric. 13(2), 256–275 (2012) Article   Google
    Scholar   Zaharia, M., Chowdhury, M., Das, T., et al.: Resilient distributed datasets:
    a fault-tolerant abstraction for in-memory cluster computing. In: USENIX Symposium
    on Networked Systems Design and Implementation, 2012, pp. 15–28 (2012) Zaharia,
    M., Xin, R.S., Wendell, P., et al.: Apache Spark: a unified engine for big data
    processing. Commun. ACM 59(11), 56–65 (2016) Article   Google Scholar   Zhai,
    Z., Martínez, J.F., Beltran, V., et al.: Decision support systems for agriculture
    4.0: survey and challenges. Comput. Electron. Agric. (2020). https://doi.org/10.1016/j.compag.2020.105256
    Article   Google Scholar   Download references Funding This work is supported
    by the French National Research Agency Project ANR-19-LCV2-0011 Tiara, and French
    Government IDEX-ISITE Initiative 16-IDEX-0001 (CAP 20-25). Author information
    Authors and Affiliations INRAE, TSCF, University Clermont Auvergne, Clermont-Ferrand,
    France Geraldine André, Amina Belhassena, Sandro Bimonte, Christophe Cariou, Frederic
    Chabot, Adrian Couvent, Jean Laneurit & Nicolas Tricot University of Salerno,
    Fisciano, Italy Pietro Battistoni & Monica Sebillo University of Clermont Auvergne,
    Clermont-Ferrand, France Bruno Bachelet, Gerard Chalhoub, Ibrahim Sammour & Mateus
    Vilela Souza University of Carthage, Carthage, Tunisia Rim Moussa Poznan University
    of Technology, Poznan, Poland Robert Wrembel University of Thessaly, Thessaly,
    Greece Georgia Garani & Konstantinos Oikonomou Contributions All authors contributed
    to the study conception and design. Material preparation, data collection and
    analysis were performed by all authors. All authors write the manuscript. All
    authors read and approved the final manuscript. Corresponding author Correspondence
    to Geraldine André. Ethics declarations Conflict of interest The authors have
    no relevant financial or non-financial interests to disclose. Additional information
    Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. This paper extends our
    previous EAIoT 2021 paper [7]. Rights and permissions Springer Nature or its licensor
    (e.g. a society or other partner) holds exclusive rights to this article under
    a publishing agreement with the author(s) or other rightsholder(s); author self-archiving
    of the accepted manuscript version of this article is solely governed by the terms
    of such publishing agreement and applicable law. Reprints and permissions About
    this article Cite this article André, G., Bachelet, B., Battistoni, P. et al.
    LambdAgrIoT: a new architecture for agricultural autonomous robots’ scheduling:
    from design to experiments. Cluster Comput 26, 2993–3015 (2023). https://doi.org/10.1007/s10586-022-03592-5
    Download citation Received 25 December 2021 Revised 25 March 2022 Accepted 31
    March 2022 Published 14 October 2022 Issue Date October 2023 DOI https://doi.org/10.1007/s10586-022-03592-5
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Internet of Things Big data Smart farming Agriculture robots
    scheduling Use our pre-submission checklist Avoid common mistakes on your manuscript.
    Sections Figures References Abstract Introduction Requirements’ specification
    LambdAgrIoT architecture Experiments Related work Conclusion and future work Data
    availability Change history Notes References Funding Author information Ethics
    declarations Additional information Rights and permissions About this article
    Advertisement Discover content Journals A-Z Books A-Z Publish with us Publish
    your research Open access publishing Products and services Our products Librarians
    Societies Partners and advertisers Our imprints Springer Nature Portfolio BMC
    Palgrave Macmillan Apress Your privacy choices/Manage cookies Your US state privacy
    rights Accessibility statement Terms and conditions Privacy policy Help and support
    129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Cluster Computing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'LambdAgrIoT: a new architecture for agricultural autonomous robots’ scheduling:
    from design to experiments'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Cota D.
  - Martins J.
  - Mamede H.
  - Branco F.
  citation_count: '3'
  description: 'Precision Beekeeping, a field of Precision Agriculture, is an apiary
    management strategy based on monitoring honeybee colonies to promote more sustainable
    resource usage and maximise productivity. The approach related to Precision Beekeeping
    is based on methodologies to mitigate the stress associated with human intervention
    in the colonies and the waste of resources. These goals are achieved by supporting
    the intervention and managing the beekeeper''s timely and appropriate action at
    the colony''s level. In recent years, the growth of IoT (Internet-of-Things) in
    Precision Agriculture has spurred several proposals to contribute to the paradigm
    of Precision Beekeeping, built on different technical concepts and with different
    production costs. This work proposes and describes an information systems architecture
    concept named BHiveSense, based on IoT and microservices, and different artefacts
    to demonstrate its concept: (1) a low-cost COTS (Commercial Off-The-Shelf) hive
    sensing prototype, (2) a REST backend API, (3) a Web application, and (4) a Mobile
    application. This project delivers a solution for a more integrated and sustainable
    beekeeping activity. Our approach stresses that by adopting microservices and
    a REST architecture, it is possible to deal with long-standing problems concerning
    interoperability, scalability, agility, and maintenance issues, delivering an
    efficient beehive monitoring system.'
  doi: 10.1016/j.joitmc.2023.100110
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related work 3. Methodology 4. Proposed
    architecture 5. Conclusions and future work Supplementary materials Informed consent
    statement Funding Ethical statement CRediT authorship contribution statement Declaration
    of Competing Interest Acknowledgements References Show full outline Cited by (4)
    Figures (12) Show 6 more figures Journal of Open Innovation: Technology, Market,
    and Complexity Volume 9, Issue 3, September 2023, 100110 BHiveSense: An integrated
    information system architecture for sustainable remote monitoring and management
    of apiaries based on IoT and microservices Author links open overlay panel Duarte
    Cota a b, José Martins c d e 1, Henrique Mamede a d, Frederico Branco b d Show
    more Share Cite https://doi.org/10.1016/j.joitmc.2023.100110 Get rights and content
    Under a Creative Commons license open access Abstract Precision Beekeeping, a
    field of Precision Agriculture, is an apiary management strategy based on monitoring
    honeybee colonies to promote more sustainable resource usage and maximise productivity.
    The approach related to Precision Beekeeping is based on methodologies to mitigate
    the stress associated with human intervention in the colonies and the waste of
    resources. These goals are achieved by supporting the intervention and managing
    the beekeeper''s timely and appropriate action at the colony''s level. In recent
    years, the growth of IoT (Internet-of-Things) in Precision Agriculture has spurred
    several proposals to contribute to the paradigm of Precision Beekeeping, built
    on different technical concepts and with different production costs. This work
    proposes and describes an information systems architecture concept named BHiveSense,
    based on IoT and microservices, and different artefacts to demonstrate its concept:
    (1) a low-cost COTS (Commercial Off-The-Shelf) hive sensing prototype, (2) a REST
    backend API, (3) a Web application, and (4) a Mobile application. This project
    delivers a solution for a more integrated and sustainable beekeeping activity.
    Our approach stresses that by adopting microservices and a REST architecture,
    it is possible to deal with long-standing problems concerning interoperability,
    scalability, agility, and maintenance issues, delivering an efficient beehive
    monitoring system. Previous article in issue Next article in issue Keywords Precision
    beekeepingSustainable remote monitoringLow-costInternet-of-ThingsInformation systems
    architectureDesign science research 1. Introduction The current digital transition
    is a remarkable and transformative phenomenon reshaping societies and revolutionising
    businesses worldwide. With rapid advancements in technology and connectivity,
    the world is witnessing a remarkable shift towards a digital-centric era. This
    transition is marked by the widespread adoption of digital technologies and the
    increasing reliance on digital platforms and services for various aspects of life
    (Guandalini, 2022). Agriculture, a vital economic activity for human survival
    as a species, has evolved throughout time, adapting - through the constant incorporation
    of innovation, to new challenges and realities where environmental balance and
    sustainability are keys (de Boon et al., 2022, Wu and Li, 2023). According to
    ISPA - International Society of Precision Agriculture, \"Precision Agriculture
    is a management strategy that gathers, processes and analyses temporal, spatial
    and individual data and combines it with other information to support management
    decisions according to estimated variability for improved resource use efficiency,
    productivity, quality, profitability and sustainability of agricultural production\"
    (ISPA, 2021). Precision Beekeeping is a branch of Precision Agriculture which
    extends these concepts to the specific area of apiculture in a systematic approach
    of beekeeping practices supported by the consistent integration of all the information
    necessary for beekeeper''s decision-making, efficient use of resources and sustainably
    maximising production (Hadjur et al., 2022). The world has been slowly but relentlessly
    witnessing the degradation of honeybee colonies. The role of these insects in
    the balance of ecosystems, environmental health and preservation of life is crucial.
    Further than the production of honey, beeswax, royal jelly and propolis, bees''
    pollination activity is essential to the proliferation of a wide variety of plant
    species (Kasiotis et al., 2021, Ullah et al., 2021). This phenomenon of decreased
    activity in apiaries, known as CCD (Colony Collapse Disorder), is characterised
    by a drastic and sudden reduction in the bee population. The causes of this problem
    are not yet fully identified, but scientists tend to converge towards multiple
    factors that can act alone or in combination, contributing to the decline of bee
    populations (e.g., mites and viruses, malnutrition, pesticides, beekeeping practices,
    genetically modified crops, etc.) (Cecchi et al., 2020, Hong et al., 2020). The
    introduction of systems that allow monitoring of apiary production and environmental
    conditions, inside and outside the hives, has been proposed through several solutions
    aiming to mitigate this phenomenon. These devices generate data to understand
    better which factors most affect productivity, honeybee activity, and hives''
    health. Besides data collecting and scientific analyses to better understand and
    mitigate CCD, these systems are also focused on directly supporting beekeepers
    in their activity by signalling situations that require human intervention in
    apiaries, either by triggering alarms and sending notifications or signalling
    events on monitoring panels. These features lead to fast and focused intervention
    while diminishing negative impacts in apiaries, fitting these systems within the
    paradigm of Precision Agriculture and Precision Beekeeping. The expansion of IoT
    systems in recent years has been paralleled by generalised access to low-cost
    COTS (Commercial Off-The-Shelf) components. Within these conditions, some remote
    monitoring systems have been proposed to reduce apiary maintenance costs and increase
    colony production and data collecting for scientific and investigation purposes.
    These contribute to CCD mitigation and a better understanding of the factors affecting
    beekeeping activity. Our proposed solution aligns to contribute to more sustainable
    apiary management, both in terms of productivity maximisation, colony health and
    well-being, by conceptualising an architecture for precision beekeeping based
    on microservices, focused on flexibility, modularity, scalability, replicability
    and adaptability, granting interoperability, a significant low-cost production,
    and low-complexity maintenance. To demonstrate and evaluate the adequacy of the
    proposed conceptual artefact, a remote sensing hardware prototype, a Web App,
    and a Mobile App, both served by a REST-based (Representational State Transfer)
    backend API were developed, and these will be described later in this article.
    Hence, in summary, our research highlights are as follows: • There is a clear
    need to establish innovative, scalable and agile beehive and apiary monitoring
    solutions based on IoT to not only provide beekeepers with an additional layer
    of support for his decision-making process but also to ensure he is alerted when
    the beehives need in-loco attention; • Monitoring solutions based on microservices
    architectures tend to be more agile, scalable, maintainable and performant when
    compared to solutions based on other types of architectures; • A novel IoT-based
    beehive monitoring solution supported by a microservices architecture that can
    easily encompass additional sensing nodes and functional modules is proposed;
    • The proposed monitoring solution has been tested using a controlled case study,
    and it was possible to establish that it not only delivered valid and accurate
    results, but also presented adequate performance and stability. This paper is
    organised as follows: in Section 2, we present the related work, while in Section
    3, the selected methodology and the process model approach are described in detail.
    Section 4 describes the conceptual architecture, and the validation artefacts
    are presented and evaluated. In Section 5 and 6, we offer the conclusions and
    suggest topics for future work. 2. Related work 2.1. Remote monitoring One of
    the main challenges associated with Agriculture 4.0 is the development of remote
    monitoring systems and solutions that can aid farmers in improving the control
    they have on their farms and continuously fostering production efficiency and
    sustainability (Dayioglu and Turker, 2021). As established by Abbasi et al. (2022),
    when applied to the agriculture sector, the remote sensing field of the study
    refers to the development and deployment of sensor networks – composed of multiparameter
    sensing nodes – that can ensure connectivity between all the elements of the network
    and a central connectivity node, system, service or API. Furthermore, drawing
    on Khujamatov and Toshtemirov (2020), despite the referred sensing network''s
    potential impact towards the development of the agri-food sector, they are somewhat
    dependent on the degree of complexity and ability to accurately monitor - and
    report the collected data - the set of predefined parameters of each of the sensing
    nodes. Remote monitoring systems for hives integrated into apiaries is an area
    of research where a relevant effort has been made and with a significant set of
    literature, mainly focused on hardware, its complexity, and how data generated
    by these devices contribute to Precision Beekeeping. This branch of Precision
    Agriculture is defined as a strategy for apiary management based on monitoring
    individual colonies (hives) with the goal of not only minimising resource consumption
    and maximising production sustainably but also optimising beekeeping activity
    and CCD mitigation (Zacepins et al., 2015). Precision beekeeping''s focus is to
    supply beekeepers with access to intelligent and automated tools that reduce their
    workload, maintain long colony life cycles, and increase productivity. Alongside
    this, it is also important to establish this technological scope and focus on
    protecting the colonies and their continuous sustainability (Uthoff et al., 2023).
    Also, the use of remote monitoring systems and solutions will aid beekeepers as
    – due to the wireless technologies inherent to the sensor networks and nodes,
    data on apiaries can be accessed at any moment, in near real-time, on any devices
    (e.g., mobile devices), thus avoiding unnecessary travel and expenses (Hong et
    al., 2020). In summary, remote sensing solutions are one of the most promising
    technological solutions for precision beekeeping (J. Navarro et al., 2022). 2.2.
    IoT-based remote monitoring Drawing on authors such as Symeonaki et al. (2022),
    IoT is increasingly assuming a central role as a trigger for the development of
    innovative and disruptive (remote) monitoring systems based on sensing nodes that
    are continuously interconnected, that are both scalable and agile in the incorporating
    of updates when facing new needs, and that are globally interoperable. Furthermore,
    existing literature also holds multiple examples of IoT-based applications, frameworks,
    ontologies and methodologies (Chukkapalli et al., 2020, Farooq et al., 2020, Symeonaki
    et al., 2022). IoT-based remote monitoring in Agriculture 4.0 refers to using
    Internet of Things (IoT) technology to monitor and manage agricultural operations
    remotely (Abbasi et al., 2022). It involves the integration of sensors, devices,
    and connectivity solutions to collect and transmit data from various agricultural
    assets, such as crops, livestock, soil, and equipment. From a more practical perspective,
    when applied to the Agriculture 4.0 paradigm, IoT-based remote monitoring is perceived
    as an enabler of real-time data acquisition and analysis, offering farmers, livestock
    breeders, poultry farmers, pig farmers, goat farmers, beekeepers, and many other
    industry players valuable insights for decision-making, optimising resource usage,
    and improving overall efficiency. The key components of this system include IoT
    sensors, network connectivity, data processing, and visualisation tools (Araújo
    et al., 2021, Maffezzoli et al., 2022). IoT sensors are deployed in agricultural
    environments to capture and collect data (Roy and De, 2022). These sensors can
    measure various parameters, including temperature, humidity, soil moisture, pH
    levels, nutrient content, rainfall, air quality, and livestock behaviour. They
    can be placed in fields, greenhouses, animal housing, and machinery to monitor
    critical factors affecting agricultural productivity continuously (Swain et al.,
    2021). The collected data from IoT sensors is transmitted via wireless networks,
    such as Wi-Fi, cellular networks, or Low-Power Wide-Area Networks (LPWAN), to
    a centralised platform or cloud infrastructure for storage and analysis (Miranda
    et al., 2019). The data obtained from IoT-based remote monitoring systems can
    be analysed using advanced analytics techniques and algorithms. Machine learning
    and data modelling approaches can be employed to detect patterns, identify anomalies,
    and derive actionable insights (Pyingkodi et al., 2022). For example, predictive
    analytics can help anticipate weather conditions, disease outbreaks, or crop growth
    stages, facilitating proactive interventions and resource planning (Xu et al.,
    2022). Visualisation tools, such as dashboards and data visualisations, enable
    users to understand the collected data intuitively. These tools can present real-time
    information, historical trends, and alerts in a user-friendly format, allowing
    farmers to monitor the status of their agricultural operations at a glance and
    respond promptly to emerging challenges or opportunities. Thus, IoT-based monitoring
    can trigger the arise of decision support systems that, drawing on real-time data
    collection, analysis, and visualisation, can aid farmers in their daily decision-making
    tasks and their strategic planning (Zhai et al., 2020). The benefits of IoT-based
    remote monitoring in Agriculture 4.0 include improved resource management, enhanced
    productivity, reduced costs, and increased sustainability. Farmers can optimise
    irrigation, fertilisation, and pest control practices by continuously monitoring
    key parameters, leading to better resource allocation and minimising environmental
    impact. Additionally, early detection of anomalies or deviations in crop health
    or livestock behaviour can help prevent losses and improve overall yield and animal
    welfare (Maffezzoli et al., 2022). Hence, drawing on the arguments above, IoT-based
    remote monitoring in Agriculture 4.0 leverages sensor technology, connectivity,
    data analysis, and visualisation to enable real-time monitoring and decision-making
    in agricultural operations. This approach empowers farmers to manage their assets
    more efficiently, respond to changing conditions promptly, and adopt precision
    agriculture practices for sustainable and productive farming. 2.3. Beehive monitoring
    using IoT-based solution Bees are vital in pollination, supporting global food
    production and maintaining ecosystem biodiversity. However, in recent years, bee
    populations have faced significant challenges due to climate change, habitat loss,
    and pests (Panziera et al., 2022, Patel et al., 2021). To address these concerns
    and ensure the well-being of bee colonies, beekeepers and researchers are turning
    to IoT-based solutions for beehive monitoring (Hong et al., 2020). To this point,
    multiple authors aimed to deliver IoT-based solutions to monitor beehives and,
    consequently, foster bee sustainability. As easily perceived by analysing existing
    literature, the majority of proposed solutions have a similar backbone structure
    that is composed of multiple sensors connected to a microcontroller and to a communication
    hub, all of these powered by a battery system that serves the purpose of relaying
    the collected data with the remote servers (Andrijević et al., 2022, Aydin and
    Nafiz Aydin, 2022, Cecchi et al., 2020, Hong et al., 2020, Imoize et al., 2020,
    Kontogiannis, 2019, Tashakkori et al., 2021, Zacepins et al., 2020). Hence, we
    can extrapolate that, from a conceptual perspective, the main modules of a beehive
    monitoring solution are as follows: • A MCU - Microcontroller Unit (also known
    as the brain of the entire solution) that collects data from the sensors and communicates
    these readings to a remote server at regular intervals; • A set of sensors physically
    connected to the microcontroller or communicating with it via wireless protocols;
    • A source of electrical energy consisting of a battery connected or not to a
    photovoltaic solar panel through a charge regulator (i.e., a solution mainly adopted
    for remote installations). The sensing module, i.e., the set of sensors used to
    collect data, is typically located inside the hive, although there are cases of
    sensors placed on the outside of that hive or in its proximity. Concerning the
    MCU, these are generally placed outside, on the roof of the beehive (Khairul Anuar
    et al., 2019), in COTS dedicated boxes or 3D printed solutions similar to the
    one proposed by Tashakkori et al. (2021). The isolation of the MCU allows protection
    against the defensive and natural behaviour of the honeybees. The design of a
    remotely monitored hive must also be carefully planned, trying to anticipate the
    obstacles that may arise in its development and assembly (Ntawuzumunsi et al.,
    2021). Based on Bellino et al. (2022) and Voudiotis et al. (2021) arguments, the
    main module of an apiary remote monitoring system is the microcontroller unit.
    This element is responsible for iteratively executing a firmware that updates
    all sensor readings, prepares the data in a specific data format, and sends it
    to a Web server. Several COTS microcontroller units have been tested and integrated
    into remote monitoring systems. Despite the relevant amount of cases using the
    \"NODE ESP32\" model as the MCU (Andrijević et al., 2022), \"NODE ESP8266\" model
    is more widely used (Imoize et al., 2020, Jegan et al., 2021, Zacepins et al.,
    2020) as the results of its higher performance, easier connections to external
    components and easier programming. This last MCU also has an onboard Wi-Fi module
    – an added value to those developing the monitoring solutions - and is considered
    low-cost. In some more recent research, \"Arduino\" family units are also used.
    Examples of this are both the Catania and Vallone (2020) and Ntawuzumunsi et al.
    (2021) works, where the authors used an \"Arduino ATmega2560\", and also Kontogiannis
    (2019) used an \"Arduino ATmega328\" as the MCU of the proposed monitoring solution.
    Other platforms, such as \"Raspberry Pi\", have also been used by researchers
    when offering their remote monitoring solutions (Cecchi et al., 2020, Tashakkori
    et al., 2021). 2.4. Beehive monitoring parameters In recent years, bee populations
    have faced significant declines due to various environmental factors and the threat
    of colony collapse disorder. To address this issue and support beekeepers in their
    efforts to protect these essential pollinators, beehive monitoring has emerged
    as a promising solution (Anwar et al., 2023). Beehive monitoring involves using
    advanced technology to gather real-time data and insights from beehives. By deploying
    various sensors within the hive, beekeepers can monitor critical parameters such
    as temperature, humidity, weight, and sound. These sensors provide valuable information
    on the overall health and well-being of the colony, allowing beekeepers to make
    informed decisions and intervene promptly if necessary (Abdollahi et al., 2022,
    Bellino et al., 2022). One of the primary benefits of beehive monitoring is the
    early detection of potential issues. For example, sudden changes in temperature
    or humidity levels may indicate that the hive is under stress, and swift action
    can be taken to identify and address the underlying problem, such as disease or
    pests (Zaman and Dorin, 2023). Tracking the hive''s weight can offer insights
    into honey production and help beekeepers determine the optimal time for honey
    harvesting, ensuring maximum yield while leaving enough honey for the bees'' sustenance
    (Robustillo et al., 2022). As established by authors such as Ntawuzumunsi et al.
    (2021) and Szczurek et al. (2023), ensuring efficient and effective multiparameter
    monitoring of a given beehive is essential to assess its overall health and production
    (perspectives). The related literature also unveils a set of indicators that are
    commonly used for both beehives and apiaries monitoring systems that serve the
    purpose of delivering insights on the occurrence of essential changes that can
    potentially indicate the need for human intervention to preserve the colony: •
    Weight: monitoring the weight allows beekeepers to have necessary inputs concerning
    the state of a hive (Meikle et al., 2016). Providing this data in almost real-time
    lets for the arise of valid perceptions of the state of the hive. The decrease
    in the hive''s weight tends to represent the occurrence of events for which it
    is critical to unravel the origin and totality of the impact generated. Examples
    of these events are the increase or decrease of the colony population size, the
    existence of adverse environmental conditions that might have triggered the need
    to supply food, the occurrence of swarming, or the honey harvesting itself (Cecchi
    et al., 2020, Fitzgerald et al., 2015, Hong et al., 2020). Thus, monitoring weight
    allows beekeepers to have precise data to analyse the condition of the hives and
    indicates the need for harvesting or human intervention, all without disturbing
    the colony. • Temperature: honeybee reproduction demands that the air temperature
    inside the hive remains stable and floats, at the very worst, between + 15 and
    + 35ºC. To ensure the referred temperature stability, bees generate metabolic
    heat by grouping themselves in a cluster in case of lower temperature values or
    taking water to the hive''s interior in case of higher temperature values, thus
    increasing humidity. Temperature stability is an important indicator of the colony''s
    health status (Edwards-Murphy et al., 2016). According to Zacepins et al. (2016),
    the increase in temperature is also an important indicator of swarming, a natural
    phenomenon which, if not controlled by beekeepers, can result in crucial negative
    profitability impacts. • Humidity: monitoring the relative humidity inside the
    hives is a relevant variable for determining the state of the colonies and has
    a direct impact on productivity (Mohamed and Mansor, 2023). As established by
    existing literature, temperature and humidity vary according to the bee''s subspecies
    (Gil-Lebrero et al., 2020). For instance, according to Hong et al. (2020), the
    relative humidity inside the hive must be between 90% and 95% to enhance the hatching
    of the eggs. On the other hand, authors such as Andrijević et al. (2022) pose
    that when maintaining a temperature of 35ºC and a humidity percentage of around
    75%, beehives have better chances to ensure sustainable growth throughout. Hence,
    drawing on the above, it is very relevant to provide long-term monitoring of relative
    humidity inside the hive as it also contributes, alongside temperature, to prompt
    the beekeeper for immediate intervention. • Sound: The sound produced by bees
    can indicate the hive''s overall health and vitality. A strong and healthy hive
    will produce distinctive sounds, typically associated with the worker bees'' labour.
    In contrast, weak or stressed colonies might exhibit different sound patterns,
    reflecting potential issues that require attention, such as diseases, foraging
    activities, swarming or other colony events (Abdollahi et al., 2022). Hence, monitoring
    the sound of a hive will thus allow the collection of data that the beekeeper
    can use to, in parallel with the definition of alarm mechanisms, be able to react
    in anticipation of the occurrence of events or situations that put the health
    and sustainability of the hive at risk (Kulyukin et al., 2018, Murphy et al.,
    2015). • Population Size: Several works also refer to the population size as an
    indicator of the hive health and production level. Honeybee colonies can be likened
    to intricate systems, where their survival hinges on individual bees'' quality,
    ability to adapt, and resilience to various pressures. Multiple stress factors
    interacting with one another are likely responsible for the mortality of colonies
    (Requier, 2019). Thus by ensuring efficient monitoring of the population size,
    beekeepers can actively anticipate serious issues that might endanger the beehive.
    The existing literature poses multiple proposals to count/estimate the number
    of bees that exist in a given beehive at a given time from an array of photoelectric
    or infrared sensors on both sides of the individual holes in the entrance of the
    hive that, by detect the sequence of the interruption of the radiation beams,
    can give information about the movement of the bees (i.e., leaving or entering
    the hive) that is finally used to estimate the population size (Struye et al.,
    1994), to systems that use RFID tags attached to the back of the bees to allow
    detection at the entrance of the hive (Schneider et al., 2012), and to real-time
    imaging systems that by a series of analysis to a set of collected images can
    detect each individual inside the hive (Ngo et al., 2019). 2.5. Power systems
    Despite representing a groundbreaking paradigm and playing a decisive role in
    remote monitoring and operational control for a multitude of contexts, as established
    by Ramson et al. (2020), one of its most critical aspects is the continuous assurance
    of power supply. If this is true for all situations where IoT-based remote monitoring
    is used, when focusing on this issue from the agriculture sector perspective this
    is even critical as the referred solutions must be deployed in remote areas where
    most of the times there isn''t a technical supply grid that supplies power, energy
    or both (Liu et al., 2022). According to Sari et al. (2020), the choice for the
    optimal location for deployment of an apiary is made be considering a set of parameters
    that are intrinsically related to the beehive sustainability and production maximisation
    and not on the availability of internet connection or even local energy supply.
    Hence, and drawing on authors such as Zaceptins et al. (2015), we can easily establish
    that these are not the ideal condition to implement a precision beekeeping approach
    or solution. Remote apiary monitoring systems demand the existence of a stable
    and permanent electric power source, allowing a long-term and low-maintenance
    system operation (Fitzgerald et al., 2015). The typical location of apiaries,
    away from public power grids, represents a contingency that can be overridden
    by using autonomous power systems (Gil-Lebrero et al., 2016). In order to address
    the abovementioned issues, authors such as Andrijević et al. (2022), Fitzgerald
    et al. (2015), He et al. (2020), Kontogiannis (2019), and Murphy et al. (2015),
    have proposed a self-sustained power system using solar photovoltaic cells and
    batteries to compensate the intermittency of the solar energy availability, associated
    with low-power components. 2.6. Proposed architectures Proposing architectures
    that support scalable Internet of Things (IoT) monitoring solutions is of paramount
    importance in today''s rapidly advancing technological landscape. As the number
    of connected devices and sensors continues to grow exponentially, scalable architectures
    are crucial for efficiently managing and processing the massive volume of data
    generated by these interconnected devices (Calvo et al., 2022). Scalability ensures
    that IoT monitoring systems can accommodate the increasing number of devices and
    users without compromising performance or reliability (Sharma et al., 2017). According
    to existing literature, using microservices is a key criterion for adopting a
    contemporary software architecture approach, where features such as scalability
    and flexibility, decentralised governance and data management and use, reusability,
    resiliency, technology stack, replaceability, and maintainability (Atitallah et
    al., 2022, Butzin et al., 2016, Cebeci̇ and Korçak, 2020, Lyu et al., 2020, Siddiqui
    et al., 2023). Several benefits are associated with the usage of microservices.
    Having a single responsibility, each microservice provides modularity for quick
    and easy deployment (Gan and Delimitrou, 2018) and enables agility and fast development
    (Marquez et al., 2021). A microservices architecture also delivers technology
    heterogeneity. Not only in software (coding language, frameworks, or database
    management systems) but also in hardware (Gan and Delimitrou, 2018). For communications
    between the sensing devices and the data and storage subsystems, the IoT-based
    remote sensing concept typically uses the Transmission Control Protocol/Internet
    Protocol (TCP/IP) technology. In these conditions, having an access point is necessary
    and depends on the availability of: (i) a local Wi-Fi network using cable connections
    (ethernet); (ii) a local Wi-Fi connection based on mobile data networks. In the
    related work applied to beehive monitoring systems, Wi-Fi modules are the most
    frequent devices for data transfer (Andrijević et al., 2022, Ntawuzumunsi et al.,
    2021, Tashakkori et al., 2021). In several studies, it is also possible to determine
    the options for data storage. Several authors use MySQL (Hong et al., 2020, Zabasta
    et al., 2019) while others use NoSQL databases – MongoDB – (Komasilovs et al.,
    2019). From the analysis of previous research it is possible to identify authors
    who proposed concepts of simple, yet disruptive, solutions for beehive monitoring
    that are based on the abovementioned microservices architecture (Alifieris et
    al., 2023). Despite this, and as stated by the referred authors, at this point
    in time there is still a gap in what refers to the practical development and deployment
    of those conceptual proposal. 3. Methodology 3.1. Design science research We follow
    a Design Science Research (DSR) approach in this project. DSR is a proven methodology
    oriented towards problem-solving. DSR aims to improve human knowledge by creating
    innovative artefacts through disruptive solutions for real-world problems (Hevner
    et al., 2004). According to these authors, it is possible to identify a set of
    principles to apply DSR in information systems design, to produce artefacts whose
    utility, quality and efficiency must be rigorously verified, and the solution
    efficiently disclosed to the relevant stakeholders. This project is based on the
    Design Science Research Model (DSRM) proposed by Peffers et al. (2007) for information
    systems research. This model encloses a set of six nominal sequential activities
    (Fig. 1). However, the authors say that not always researchers would proceed in
    this sequential order. In practice, it is possible to start at almost any point
    and move in both directions. Download : Download high-res image (249KB) Download
    : Download full-size image Fig. 1. DSRM process model adapted from Peffers et
    al. (2007). The six sequential activities proposed by Peffers et al. (2007) are
    the following: Activity 1: Identify problem and motivation – In this activity,
    the specific research problem should be defined to atomise the problem conceptually
    so that the solution can capture its complexity. By justifying the value of a
    solution, researchers and the general stakeholders will be motivated to research,
    find the solution and accept the results. It also helps to understand the rationale
    linked to the researcher''s understanding of the problem. For this activity, it
    is important to have knowledge of the state of the problem and the impacts of
    its solution. Activity 2: Deﬁne the objectives for a solution – conclude about
    the objectives of a solution starting from the problem definition and awareness
    of what is possible and practical. The objectives can be quantitative or qualitative
    and should be derived from rationality from the problem specifications. For this
    activity, knowledge about the state of problems and current solutions, if any,
    and their efficacy is required. Activity 3: Design and development – at this point,
    it is expected to create the artefact. Such prototypes are potential models, methods,
    or instantiations. Artefacts can also be new properties of technical, social,
    and/or informational resources. Conceptually, an artefact delivered in the context
    of a design research methodology can be any designed object in which a research
    contribution is embedded in the design. This activity includes also setting the
    artefact''s desired functionality, its architecture and then developing the actual
    artefact itself. Resources required for going from objectives to design and development
    include knowledge of theory that can be brought to deliver a solution. Activity
    4: Demonstration – this activity aims to demonstrate the use of the artefact to
    solve one or more instances of the identified problem. It can involve the use
    of the artefact in experimentation, simulation, case study, proof, or other activities.
    To demonstrate the artefact, an effective knowledge of how to use the artefact
    to solve the problem is needed. Activity 5: Evaluation – aims to observe and measure
    how the artefact supports the solution to the problem. The evaluation aims to
    compare the results from the demonstration of the artefact to those defined in
    the proposed solution. This activity demands mastery of metric and analytical
    tools and, depending on the nature of the artefact, can take many forms. Evaluation
    could include items such as a comparison of the artefact''s functionality with
    the solution goals from Activity 2, objective quantitative performance measures
    such as budgets or items produced, the results of satisfaction surveys, client
    feedback, or simulations. It could include quantiﬁable measures of system performance,
    such as response time or availability. Conceptually, could include any relevant
    empirical evidence or logical proof. At the end of this activity, the researchers
    can decide whether to iterate back to Activity 3 to try to improve the effectiveness
    of the artefact or to continue to communicate and leave future improvements to
    subsequent projects. Activity 6: Communication – in this activity the problem,
    its relevance, the artefact, the degree of innovation and functionality, the rigour
    of the design and its efficacy must be communicated to other researchers and other
    audiences. Researchers may use the process model to structure their papers. Considering
    the context of this project in the field of Precision Beekeeping, its goals and
    its focus on the process model proposed by Peffers et al. (2007), we have structured
    the work along a six-step iterative process detailed in Fig. 2. Each step is directly
    related to the project development. Download : Download high-res image (287KB)
    Download : Download full-size image Fig. 2. Schematic representation of the project
    process model. 4. Proposed architecture In this chapter, the proposed architecture
    is described in detail. First, we identified, contextualised, and defined the
    problem, based on our goals and the related work. Then, we propose a solution
    based on the previously identified problem and the goal of implementing the necessary
    features. After this step, we designed and developed the artefact corresponding
    to the proposed architecture, and created four pilot artefacts for demonstration
    proposes. In the evaluation step, several tests were performed using these pilot
    artefacts. Finally, in the communication step, we present the knowledge disclosure,
    results, and future strategies. 4.1. Problem identification and motivation The
    problem identification and motivation start by analysing the main research question:
    what are the functional, technological, and architectural visions necessary for
    the deployment of a low-cost, COTS-based monitoring system, for apiary remote
    monitoring based on IoT? The answer to this question can be divided into four
    sub-questions: (1) What is the technical and functional framework for an apiary
    monitoring system?; (2) Which low-cost components should be selected and applied
    to produce an artefact allowing remote self-sustained apiary monitoring?; (3)
    Which technological architecture will best support the execution of an IoT-based
    system to apiary remote monitoring?; and, (4) What contextual limitations will
    have a bigger impact in the success of an apiary remote monitoring system? Despite
    the significant amount of work already proposed in this area of Precision Beekeeping,
    the literature review helped to identify a lack of focus on the global information
    system architectural concept for the delivered systems. It is clear that previous
    studies are well-oriented to describe prototypes that supply huge amounts of data
    to validate hypotheses concerning, e.g., the identification of the environmental
    variables that can provide important information about the state of the honeybee''s
    colonies and their health, relating these variables with hive production and bee
    colony evolution. However, proposing a high-level conceptual architecture, and
    solid demonstration artefacts, based on more recent architectural and technological
    paradigms can contribute significantly to the field of Precision Beekeeping, also
    in the scope of the emerging paradigm of Artificial Intelligence, more specifically
    the subfields of Machine Learning and Deep Learning, well known to be intensively
    data dependent. The problem characterisation was an iterative process which considered
    the extant literature and the current state-of-the-art of remote monitoring systems
    for Precision Beekeeping. This characterisation identified the main problem that
    motivates this project: the lack of an integrated solution describing an information
    system architecture for remote apiary monitoring, in terms of hardware, communications,
    data processing and storage, end-user application features, and data specifications.
    4.2. Artefact features definition Considering the problem definition and the related
    context (Precision Beekeeping), the main artefact features were listed. As stated
    in the literature review, the main goal of Precision Beekeeping is to allow having
    almost real-time data collected from the bee colonies (hives). This data can provide
    the necessary information to assess the state of the colony in terms of health,
    the presence of predators or growing diseases, and natural events like swarming.
    For this project, to generate real and contextualised data, the choice was to
    monitor temperature, humidity (inside and outside the hive), the weight of the
    hive, and sound inside the hive, since these are the variables most mentioned
    as the most important to assess the state of the honeybee colonies. An additional
    mechanical sensor to detect if the hive lid is opened, by an animal attack, for
    example, was also included. By monitoring these variables, several important events
    can be detected generating alarms and notifications to the beekeeper. After being
    collected and processed by a physical device (sensing device), the data must be
    sent to a data processing unit (Web server) using a specific data format. The
    data is then processed before being stored for future analytics. During this process,
    several instant analyses can be performed to assess the actual state of the hive.
    This intermediate step will trigger and register events that will automatically
    generate notifications to the beekeeper using different approaches (e.g., push
    notifications, update monitoring dashboards, or sending e-mails). These notification
    events are triggered based on high levels of temperature or humidity inside the
    hive, swarming based on the sound level inside the hive and the evolution of the
    weight, and simple harvesting information by using a setpoint defined by the beekeeper.
    Also, in the scope of this work, management of the apiaries is an important feature.
    So, the system must also manage the scheduling of interventions (e.g., regular
    maintenance or cleaning), associated with apiaries, notifying the beekeeper when
    those calendar interventions are approaching, in a single and integrated interface.
    Several other features were also considered, like organisational aspects of the
    apiaries, registration of devices (hives), commissioning and decommissioning of
    devices in apiaries, analytical aspects like monitoring honey production (hive
    and apiary level), and event logs, among others. 4.3. Design and development of
    the architecture artefact The IoT can be defined as a worldwide network of unique
    interconnected devices, with sensing abilities, using communication protocols,
    leveraging computational capacities, and delivering services/capacity to provide
    data analytics (Gupta and Quamara, 2020). The most common architecture in IoT
    is the three-layer and four-layer (Ramachandran et al., 2022). The three-layer
    architecture, the most common, includes (i) a physical or perception layer, consisting
    of sensors and actuators that capture data or control acting devices, (ii) a network
    layer responsible for connecting the physical layer to, for example, servers,
    and (iii) an application layer that delivers applications to the users. The four-layer
    architecture is based on the three-layer approach, adding a new layer called the
    service layer. This layer acts as a middleware between the application layer and
    the network layer, managing access to different services and APIs. In this project,
    a proposal for a beehive remote monitoring system has been developed, based on
    a multilayer microservice-based architecture represented in Fig. 3. This architecture
    consists of six different layers: the physical layer, the user layer, the applications
    layer, the data layer, the microservices layer, and the data storage layer. Layers
    are interconnected with each other depending on the flow of data between them.
    Data flows from the physical layer to the microservices layer and then to the
    user layer thru the applications layer. Other services can be provided to the
    users (beekeepers) by several microservices. These services can or not depend
    on the data sent by the physical layer. Download : Download high-res image (543KB)
    Download : Download full-size image Fig. 3. BhiveSense high-level system architecture.
    Physical layer: the physical layer corresponds to the hive sensing nodes network
    (each node defined by a set of subsystems including sensors, communications, processing,
    and power) and an Internet gateway. Several different types of sensors can be
    placed inside and outside the hive, depending on the variables to monitor. As
    for the Internet gateway, a mobile data router is proposed for TCP/IP communications
    with the web server via HTTP requests (network layer). Yet, there is no dependency
    on the chosen technology since the same data specification format is used. User
    layer: the user layer is mainly composed by the beekeepers as the main stakeholders
    of the system. These stakeholders are the final users of the system in terms of
    the Precision Beekeeping context. In this work, and concerning the context of
    the proposal, the main stakeholders are the beekeepers. However, others could
    be identified, such as the system administrators or researchers in this field.
    Even though typical IoT architectures don''t include a user layer and given that
    this work proposes a solution squarely contextualised in the field of Precision
    Beekeeping, we believe that underlining the set of stakeholders for this context
    in a dedicated layer is relevant. Application layer: different categories of software
    applications can be developed to use the collected data in the scope of an apiary
    monitoring and management system. Typical desktop, Web and mobile applications
    are proposed as possible solutions to deliver the entire features of the system,
    in the application layer. Also, this layer represents the user interfaces (front
    end) with which the stakeholders interact with the system. Independently from
    the type of application (desktop, Web, mobile or hybrid), the proposed REST-based
    architecture allows the integration of monitoring, management, and events notification
    preconised in this approach. Data layer: the data layer represents the data format
    specification for the proposed architecture. Different data formats can be provided
    by the data layer (e.g., XML, CSV, JSON, etc.) since REST-based APIs can handle
    messages in practically all data formats. We propose JSON due to its popularity,
    smaller size, and being more easily readable by humans. All messages flowing thru
    the proposed architecture use the JSON data format. Microservices layer: the microservices
    layer consists of a set of microservices to manage every data transaction and
    can have independent databases and/or data models. However, the more important
    feature of a microservice approach is that each one should have a single responsibility.
    For example, in the proposed solution, the HIVE module is only responsible for:
    (1) handling data between the physical layer and the client applications (applications
    layer), in a context of interoperability between components; (2) providing analytics
    regarding hive data upon request from the users. This layer is identical to the
    service layer described in the four-layer architecture approach. Data storage
    layer: the data storage layer is the layer responsible for persistent data storage,
    not only to provide real-time data to the user layer but also to deliver long-term
    data for analytics and apiary management purposes requested by other microservices.
    As per the user layer, we propose this layer to better underline the importance
    of data storage in the overall solution. 4.4. Demonstration of the proposed architecture
    The main data source for the proposed apiary monitoring system architecture is
    a physical device installed in each apiary hive. This device can gather different
    types of data, as much as is needed, not having any impact on the system architecture,
    since the same data format is followed. According to the DSR methodology adopted
    for this work, the demonstration step is crucial to assess the validity of any
    proposed artefact, by creating a suitable context and developing test/pilot artefacts
    for evaluation purposes. To demonstrate the proposed architecture, three pilot
    instances were developed: a node hive device (physical layer), a RESTful microservices-based
    API (microservices layer), and a Web and a mobile application (applications layer).
    These pilot artefacts are described below. 4.4.1. Hive node sensing device: hardware
    and firmware In the context of providing a hive node prototype to demonstrate
    the proposed architecture, a popular NODE MCU ESP8266 low-cost microcontroller
    was used. This unit is an open-source software and hardware development environment
    built around an inexpensive System-on-a-Chip (SoC) named ESP8266. The ESP8266
    contains the crucial elements of a computer: CPU (32 bit-80Mhz), RAM (4MB), and
    networking (Wi-Fi). That makes it an excellent choice for IoT projects of all
    kinds. In terms of collected data, we selected temperature (inside and outside
    the hive), sound (inside the hive) and the weight of the hive. These variables
    are commonly referred to in related works as the most important for detecting
    the hive health, production levels and other dynamic honeybee behaviour like swarming.
    Isolated or combined, these variables provide crucial information for the context
    of this project. To monitor temperature and humidity inside and outside the hive,
    we used two low-cost and commonly used DHT22 temperature and humidity sensors.
    Concerning sound measurement, an Adafruit electret microphone (20–20KHz), with
    a MAX4466 amplifier and adjustable gain is used. As for weight, four strain gauges
    connected in a Wheatstone Bridge configuration were used with an HX711, a precision
    24-bit analogue-to-digital converter (ADC) designed for weigh scales and industrial
    control applications, to interface directly with the bridge sensor. An additional
    GNSS (Global Navigation Satellite System) module is included to provide the geolocation
    of the hive and spot its position in a digital map (e.g., Google Maps), thus allowing
    the beekeeper to best find the location of a hive for intervention. The addition
    of this element can also enable future integrations in other research projects,
    for example, studies requiring spatial data and cross-information between colony
    data and the geographic position of the hives. The artefact also includes several
    mechanical sensors: two press buttons, one for resetting the GNSS module to provide
    new geographical coordinates (in case the hive switches apiary), one to calibrate
    the weight sensor, and a microswitch to detect if the hive lid has been opened
    to trigger an event alarm to the beekeeper. The proposed demonstration prototype
    is powered by a 7 V photovoltaic cell with a 3.3 V-1500mAh lithium-polymer (Li-Po)
    battery, controlled by a solar power manager for energy autonomy. The overall
    system schematic is shown in Fig. 4. Fig. 5 shows the installation in situ of
    the BHiveSense node hive prototype. Download : Download high-res image (243KB)
    Download : Download full-size image Fig. 4. BhiveSense hive node prototype – schematic.
    Download : Download high-res image (223KB) Download : Download full-size image
    Fig. 5. BHiveSense hive node prototype – hardware. The hive node prototype firmware
    is coded in C/C+ +. However, any programming language could be used if another
    MCU or development board is used. The only important aspect is the data format
    in the scope of this solution. Before commissioning the hive node, the Internet
    gateway credentials (node ID, network SSID, and password) must be saved to the
    device while uploading the firmware. In the first iteration of the loop function,
    the system waits for GNSS fixing to get and save the latitude and longitude of
    the device in the Electrically Erasable Programmable Read-Only Memory (EEPROM).
    In case the beekeeper decides to install the same node in a different hive, located
    in a different apiary, the EEPROM address containing the coordinates is cleared
    and the procedure to get the new coordinates is repeated for the new location.
    After this, the process reiterates: get updated readings from the sensors, turn
    the Wi-Fi connection ON and connect to the gateway, send HTTP POST request with
    the updated JSON body containing the last sensor readings, plus the device credentials,
    until receiving an HTTP response status of 200. After a successful POST request,
    the system idles for 10 min until it wakes up and a new iteration of the process
    starts. Fig. 6 shows the flow diagram of the hive node firmware. Download : Download
    high-res image (264KB) Download : Download full-size image Fig. 6. BhiveSense
    hive node prototype firmware - flow diagram. 4.4.2. Data model In the proposed
    architecture the data storage layer stores persistent long-term data to support
    apiary monitoring and management features, compatible with the Precision Beekeeping
    paradigm. Despite the ability to have different databases for different microservices,
    in this solution, we use a single MongoDB NoSQL database with several JSON data
    collections, each one linked with a separate microservice. Fig. 7 shows the data
    model schema for this project. The connection between each entity and the corresponding
    microservice is obvious. Several collections are proposed for normalisation features.
    The attribute data in the HIVE entity is an array of JSON instances. One instance
    is automatically created for each day, and the dayData array saves each JSON instance
    sent from the hive node device. This approach makes the analytics process faster
    and more efficient, for example, getting weekly or monthly data for the hive.
    Download : Download high-res image (476KB) Download : Download full-size image
    Fig. 7. BhiveSense data model. 4.4.3. RESTful API The proposed backend architecture
    follows a modular, flexible, and robust architecture built under the HTTP protocol
    and REST, an architectural pattern known to ease Web service development (Cebeci̇̇̇
    and Korçak, 2020). Due to the nature of HTTP, request/response communication are
    carried on synchronously. HTTP delivers this type of communication through blocking
    and awake approach. The use of an API (Application Programming Interface) with
    the REST architecture provides efficiency, procedure automation, and interoperability
    as the main advantages. REST also allows independent implementations from the
    server and client sides. The client only needs to know the endpoints to reach
    the resources delivered by the API and a known message format. In this case, we
    use JSON. Implementing the API gateway in a RESTful Web approach eases the use
    of microservices methods providing an interface, keeping it as simple as possible
    in our solution. The demonstration backend is implemented in NodeJS following
    the MVC protocol and the CRUD paradigm (Create, Read, Update, Delete) which corresponds
    to the methods POST, GET, PUT and DELETE in an HTTP environment. Fig. 8 shows
    the component diagram for the API and backend. Download : Download high-res image
    (275KB) Download : Download full-size image Fig. 8. BhiveSense component diagram
    (API). 4.4.4. API gateway module the API gateway module is the entry point for
    the backend application. This module handles the HTTP requests from the clients
    and routes them to the relevant module. The routing feature is a fundamental technique
    in a REST API. This module also runs a daily routine (CRON JOB) to detect if there
    are any near interventions scheduled for the next days (0 ≥ numDays ≤ 5) to notify
    the beekeeper. 4.4.5. Auth module this module contains all the login and authentication
    methods to secure the application. All request handling is subject to authentication
    control (token) before routing to the queue correspondent microservice. 4.4.6.
    User module is responsible for managing the user login and authentication, providing
    the tokens that are delivered in the response header and the necessary user data
    to the client. It also provides methods for user registration and account management.
    Apiary module: the Apiary module manages requests to perform all the operations
    concerning apiaries (e.g., create an apiary, update apiary data, delete the apiary,
    get apiaries for a specific user, etc.). Hive module: this module delivers methods
    to assign/unassign hives (node devices) to a specific user, register the hives
    in an apiary, and return the hive data to the users. It also has a method to handle
    the requests sent from the node devices to register a new data package. Interventions
    module: the Interventions module can register scheduled interventions for an apiary
    and handle requests to update, delete, or change its state to conclude. These
    microservices are related to apiary management, one of this solution''s goals
    in the Precision Beekeeping paradigm. Harvest module: this module is responsible
    for registering harvest actions for each hive/apiary and delivers methods for
    production analytics by hive, apiary, or user. Message module: this is the module
    that groups methods to handle messages from the beekeepers (users) to the platform
    administration in case of the need to report any issue or problem with the system.
    Event module: this module handles requests related to events. It delivers the
    methods to create events and to change their status. This is the crucial microservice
    to trigger alarms to the beekeeper. An event is a particular situation that arises
    from hive data analysis in real-time. In this project, events are triggered in
    the following conditions: temperature or relative humidity inside the hive above
    the setpoint; the hive lid is open; the harvest setpoint has been reached; or
    a possible swarm situation has been detected. Notifications module: this module
    supplies the method and services to generate and send notifications to the users
    in case of new events or near future interventions scheduled. It delivers services
    to send e-mails or push notifications to the application layer instances. In this
    solution, we use an external microservice from OneSignal that eases sending a
    web and mobile push notifications. History module: in case the beekeeper decides
    to move a hive from one apiary to another, there are important procedures to carry
    out. First, the new location will be a different geographical point. Second, the
    beekeeper should have a way to decide about the accumulated data in the previous
    location. The history module provides the possibility to save the collected data
    when a hive is unassigned from an apiary, for future analytical proposes. 4.4.7.
    User applications 4.4.7.1. Web application To demonstrate the proposed system
    architecture, a web application was developed. This artefact was developed in
    a modern SPA (Single Page Application) approach, using the Vue.JS framework and
    several specific packages. The application offers distinct features to the beekeeper,
    according to project goals and identified problems in the scope of Precision Beekeeping.
    In the application, there are two main user levels: administrator and beekeeper.
    The first has access to different tools such as user administration, registering
    or managing devices in the system, or replying to beekeepers'' messages. The beekeepers
    have access to different options, for example, to visualise aggregated information
    in a simple dashboard (Fig. 9), perform CRUD operations over apiaries or devices
    (hives), monitor detailed hive data (Fig. 10), view and manage event logs (Fig.
    11), and several others feature like register harvest activities, monitor production
    by apiary or hive, and receive push notifications for events and alarms. Download
    : Download high-res image (256KB) Download : Download full-size image Fig. 9.
    BhiveSense Web app dashboard showing a notification (Web). Download : Download
    high-res image (193KB) Download : Download full-size image Fig. 10. BhiveSense
    detailed hive data example (Web). Download : Download high-res image (255KB) Download
    : Download full-size image Fig. 11. BhiveSense event log for user devices (Web).
    This platform also includes an intervention management service that allows the
    beekeeper to schedule interventions in each apiary, being notified in the dashboard
    and via e-mail when the intervention date is coming (less or equal to five days).
    The focus is on the information about important events that occurred in the hives
    such as abnormal values of temperature or humidity inside the hives, the hive
    lid opening, possible swarm events or near future interventions to come. The dashboard
    also shows the need for harvesting using the weight parameter and gives access
    to a complete log of events. The beekeeper also has the correct tools to register
    each harvest to control the production by apiary or hive. 4.4.7.2. Mobile application
    In addition to the web application, an extra demonstration artefact was developed,
    consisting of a mobile application (Android version). This tool was also implemented
    using a modern concept, with the framework Flutter, developed by Google. The application
    allows the beekeeper to monitor the state of the apiaries in a simple dashboard
    (Fig. 12a). The apiaries can be monitored individually (Fig. 12b), accessing their
    associated hives (Fig. 12c). Information about each hive parameter and the general
    hive state can be accessed on a dedicated screen (Fig. 12d). Both applications
    (web and mobile) also use the GNSS feature of the device prototype to give a geolocation
    dimension to the system (Fig. 12e). Like the web version, this application receives
    push notifications in case of the occurrence of important events that can indicate
    anomalies demanding the beekeeper intervention: hive inside temperature our air
    humidity higher than the setpoint, hive lid open, harvest setpoint reached or
    possible swarm situation (Fig. 12a), allowing a fast reaction from the beekeeper
    to prevent situations that could impact in the apiary production, or in the colony''s
    health and behaviour. Download : Download high-res image (452KB) Download : Download
    full-size image Fig. 12. (a) Mobile app dashboard showing notification; (b) List
    of apiaries; (c) List of hives in one apiary; (d) Hive detailed data example;
    (e) Location of the hive in Google Maps. 4.4.7.3. Evaluation Conducting practical
    tests on an IoT-based monitoring solution for beehives presents several notable
    challenges that require thoughtful consideration (Wrysinski et al., 2023). Firstly,
    the ever-changing and unpredictable natural environment of beehives, with its
    diverse weather conditions, temperature fluctuations, and varied bee behaviour
    patterns, poses uncontrollable factors that can impact data collection and overall
    system performance. Ensuring consistent and reliable results becomes a demanding
    task. Secondly, the introduction of new technology like IoT devices into beehives
    might disturb or alter the behaviour of bee colonies. As bees are highly sensitive
    creatures, any disruptions to their habitat could cause stress and affect their
    natural activities, potentially influencing the accuracy of the collected data
    and the effectiveness of the monitoring solution. Moreover, the dispersion of
    beehives across different geographical locations creates logistical challenges
    for deploying and maintaining the IoT devices. Overcoming obstacles such as accessing
    remote areas, ensuring stable network connectivity, and powering the devices in
    isolated locations demands careful planning and resource allocation. Another crucial
    concern is the durability and safety of the IoT devices used in beehives. They
    must withstand harsh environmental conditions, including extreme temperatures
    and moisture. Additionally, ensuring the quality, reliability, security and privacy
    of the collected data is of utmost importance. Any data bias or breaches could
    have serious implications for both the beekeepers and the bee colonies (Hadjur
    et al., 2022). Hence, real-life testing requires prolonged observation periods
    to understand the long-term performance and reliability of the IoT-based monitoring
    solutions. This extended testing demands significant time and resources, potentially
    delaying the evaluation of the system''s effectiveness and hindering the pace
    of improvements or modifications (Abdollahi et al., 2022). Therefore, considering
    the aforementioned factors and taking inspiration from similar research (Heaton
    and Parlikad, 2019, Paganelli et al., 2022, Tamburis et al., 2020) where conceptual
    proposals underwent only initial validation but emphasized the need for real-life
    testing to assess all contextual aspects and biases, a series of initial evaluation
    procedures were undertaken to validate the adequacy of the proposed components,
    their compatibility, and interoperability. This step was critical to assess the
    proposed architecture and we used demonstration artefacts for this validation.
    As established by existing literature (Jacob and Mani, 2018, Popereshnyak et al.,
    2018), in order to validate the proposed artefact, an initial set of different
    types of tests was performed: unit tests, integration tests, and acceptance tests.
    Unit tests were created and performed during the development of the demonstration
    artefacts to test each service provided by the REST API, individually, and ran
    often, as payloads and logic involved. These tests, performed using the Insomnia
    REST Client application (Insomnia, 2023), indicated that all the used sensors
    were able to individually perform according to the manufacturer specifications,
    thus allowing to collect data within expected sets of values. To test and evaluate
    the integration of the different services, several integration tests were performed
    in a top-down approach depending on the coverage of the components. These tests
    allowed us to evaluate if the several components and services work together in
    an orchestrated way. In order to perform the referred integration tests all sensing
    nodes were activated in parallel and were set in a \"data collection\" mode that
    enabled each one of them to effectively and simultaneously collect data and save
    it in the data storage module. After analysing the data collection and communication
    log it was possible to perceive that all activated sensing modules performed correctly
    and within the expected accuracy and performance levels. Finally, acceptance tests
    validate the user requirements (beekeepers), specifically if the several operations
    and monitoring features related to the Precision Beekeeping paradigm are implemented
    in the solution. These validations were based on a set of dynamic tests, using
    the entire system architecture. The REST API was deployed in a shared cloud server
    service, while the web and mobile applications were running in a local environment.
    The monitoring hardware was commissioned for five continuous months in a controlled
    environment composed of a beehive installed in similar conditions as it would
    be in a real apiary but without a bee colony installed inside. During this period,
    several events were induced to test the response of the system and validation
    of the architecture. For example, the hive lid was open, the temperature and humidity
    were intentionally raised, or sounds with frequencies compatible with swarming
    were simulated to test the response of the sensors and the action of the microservice
    responsible for triggering the events and notifying the beekeeper. 4.5. Communication
    The final step of DSR-based research is the communication of the entire project
    development and results, including the relevance of the research question, the
    proposed artefact, its design, innovation, and functionality must be delivered,
    disclosing the achievements to other researchers and related relevant stakeholders.
    This paper itself is integrated into this step. Considering the research and development
    stage of this work, future actions to communicate this work will be addressed,
    with planned dissemination sessions and workshops in the apiculture section of
    the Agricultural Development Services of the Azores (São Miguel Island), to engage
    beekeepers with the proposed solution. 5. Conclusions and future work Monitoring
    beehives and apiaries is critical to preserving both honeybee numbers and the
    delicate ecological balance that they support. Honeybees contribute greatly to
    agriculture as pollinators by supporting the reproduction of numerous fruit, vegetable,
    and nut crops. Beekeepers can monitor the health of colonies, detect and manage
    possible hazards such as diseases, pests, or environmental stressors, and implement
    appropriate remedies by frequently observing beehives. Timely monitoring also
    helps to reduce colony losses, which promotes food security and economic stability.
    Furthermore, knowing honeybee behaviour through monitoring allows researchers
    to acquire insights into their sophisticated social structure and communication
    patterns, allowing for the development of science-based conservation policies
    that are both sustainable and long-term. We can protect these important pollinators
    by investing in careful monitoring procedures. Using IoT-based monitoring systems
    and solutions provide vital aid in the abovementioned monitoring and administration
    of beehives and apiaries, thus offering an innovative approach to beekeeping.
    These smart systems collect real-time data on critical parameters such as temperature,
    humidity, hive weight, and even sound and movement patterns via a network of interconnected
    sensors, cameras, and gadgets installed within the beehives. This constant flow
    of data enables beekeepers to remotely monitor and assess hive conditions, allowing
    them to respond to any irregularities or signals of stress inside the colony as
    soon as possible. By configuring alerts and notifications, beekeepers can receive
    instant indications if conditions deviate from ideal, preventing potential problems.
    Furthermore, IoT monitoring solutions provide data insights and analytics that
    enable beekeepers to make more informed decisions. Microservices architectures
    have emerged as a powerful approach to building and managing complex systems,
    including IoT (Internet of Things) applications. In a microservices architecture,
    a large application is broken down into small, independent, and loosely coupled
    services, each responsible for specific functionalities. This modular design allows
    for greater flexibility and scalability, especially in IoT systems where the number
    of connected devices and data volume can vary significantly. By adopting microservices,
    IoT applications can easily scale up or down based on demand, as each service
    can be individually deployed, upgraded, or replicated as needed. This elasticity
    ensures that the system can efficiently handle varying workloads, making it well-suited
    to the dynamic and evolving nature of IoT environments. Additionally, microservices
    promote rapid development and deployment, allowing IoT applications to adapt quickly
    to changing requirements and technological advancements, while also enabling easier
    maintenance and fault isolation. With the above in mind the present research proposes
    a novel low-cost IoT-based monitoring solution supported by a microservices architecture
    and aimed at continuously monitor beehives and apiaries. From a formal perspective,
    the proposed solution well-framed and interoperable six-layer architecture ensures
    the needed agility and scalability that beekeepers require. In order to ensure
    the necessary validity to the proposed artifact, we have developed a prototype
    of the conceptual solution that has been tested using a controlled simulation
    environment. The achieved results allowed to attain that the proposed solution
    fulfils all the initially established functional and performance requirements,
    thus allowing us to consider it as a valuable contribute to both science and practice.
    5.1. Limitations and future work This work has some primary limitations. Firstly,
    only one prototype for the hive node device was developed and tested. Although
    the tests were conducted in a natural laboratory with varying weather conditions,
    there were no tests conducted with an actual bee colony installed inside the hive.
    In the future, to fully validate the node sensing prototype''s response in a broader
    and long-term context, it is essential to produce and install multiple identical
    hive nodes in different apiaries located in various places. This validation will
    also involve testing the hardware prototype with bee colonies installed in the
    hives. The plan is to collaborate with the local Agricultural Development Services
    of the Azores (São Miguel Island, Azores), who have agreed to deploy the proposed
    system in several of their apiaries for these tests. However, securing funds for
    replicating the devices is necessary for carrying out these tests. Despite these
    limitations, the tests conducted with the developed demonstration artifacts are
    considered sufficient to validate the functionality, scalability, and flexibility
    of the proposed architectural solution. Supplementary materials Not applicable.
    Informed consent statement Not applicable. Funding This work was supported by
    national funds through the Portuguese Funding Agency, the Fundação para a Ciência
    e a Tecnologia (FCT) within project LA/P/0063/2020. Ethical statement Not applicable
    as no human subjects were included as participants in the research activities
    that were conducted. CRediT authorship contribution statement Conceptualization,
    D.C., F.B, and J.M.; Methodology, J.M., D.C., and F.B.; Investigation: D.C., J.M.,
    F.B., and H.M.; Writing – original draft, D.C., J.M., F.B., and H.M.; Writing
    – review & editing, D.C., J.M., F.B., and H.M.; Supervision, F.B. and J.M.; Funding
    acquisition, H.M. and J.M. All authors have read and agreed to the published version
    of the manuscript. Declaration of Competing Interest none. Acknowledgements JM
    is grateful to the FCT for the projects titled \"AquaValor—Centro de Valorização
    e Transferência de Tecnologia da Água\" (NORTE-01–0246-FEDER-000053) and \"Emprego
    altamente qualificado nas empresas ou em COLABS—Contrataç ão de Recursos Humanos
    Altamente Qualificados (PME ou CoLAB)\" (NORTE-06–3559-FSE-000095), supported
    by the North Portugal Regional Operational Programme (NORTE 2020) under the PORTUGAL
    2020 Partnership Agreement through the European Regional Development Fund (ERDF).
    References Abbasi et al., 2022 R. Abbasi, P. Martinez, R. Ahmad The digitization
    of agricultural industry – a systematic literature review on agriculture 4.0 Smart
    Agric. Technol., 2 (2022), Article 100042, 10.1016/j.atech.2022.100042 View PDFView
    articleView in ScopusGoogle Scholar Abdollahi et al., 2022 M. Abdollahi, P. Giovenazzo,
    T.H. Falk Automated beehive acoustics monitoring: a comprehensive review of the
    literature and recommendations for future work Appl. Sci., 12 (8) (2022), p. 3920
    CrossRefView in ScopusGoogle Scholar Alifieris et al., 2023 Alifieris, C., Chamaidi,
    T., Malisova, K., Mamalis, D., Nomikos, E., Rigakis, C., Vlachogiannis, E., &
    Stavrakis, M. (2023). IOHIVE: Architecture and Infrastructure of an IOT System
    for Beehive Monitoring and an Interactive Journaling Wearable Device for Beekeepers.
    133–149. Google Scholar Andrijević et al., 2022 N. Andrijević, V. Urošević, B.
    Arsić, D. Herceg, B. Savić IoT monitoring and prediction modeling of honeybee
    activity with alarm Electronics, 11 (5) (2022), p. 783, 10.3390/electronics11050783
    View in ScopusGoogle Scholar Anwar et al., 2023 O. Anwar, A. Keating, R. Cardell-Oliver,
    A. Datta, G. Putrino Apis-Prime: a deep learning model to optimize beehive monitoring
    system for the task of daily weight estimation Appl. Soft Comput., 144 (2023),
    Article 110546, 10.1016/j.asoc.2023.110546 View PDFView articleView in ScopusGoogle
    Scholar Araújo et al., 2021 S.O. Araújo, R.S. Peres, J. Barata, F. Lidon, J.C.
    Ramalho Characterising the agriculture 4.0 landscape—Emerging trends, challenges
    and opportunities. Agronomy, 11 (4) (2021), p. 667 CrossRefView in ScopusGoogle
    Scholar Atitallah et al., 2022 S.B. Atitallah, M. Driss, H.B. Ghzela Microservices
    for data analytics in IoT applications: current solutions, open challenges, and
    future research directions Procedia Comput. Sci., 207 (2022), pp. 3938-3947 View
    PDFView articleView in ScopusGoogle Scholar Aydin and Nafiz Aydin, 2022 S. Aydin,
    M. Nafiz Aydin Design and implementation of a smart beehive and its monitoring
    system using microservices in the context of IoT and open data Comput. Electron.
    Agric., 196 (2022), Article 106897, 10.1016/j.compag.2022.106897 View PDFView
    articleView in ScopusGoogle Scholar Bellino et al., 2022 F. Bellino, G. Turvani,
    U. Garlando, F. Riente An integrated multi-sensor system for remote bee Health
    Monit. (2022), pp. 334-338 CrossRefView in ScopusGoogle Scholar de Boon et al.,
    2022 A. de Boon, C. Sandström, D.C. Rose Governing agricultural innovation: a
    comprehensive framework to underpin sustainable transitions J. Rural Stud., 89
    (2022), pp. 407-422 View PDFView articleView in ScopusGoogle Scholar Butzin et
    al., 2016 Butzin, B., Golatowski, F., & Timmermann, D. (2016). Microservices approach
    for the internet of things. 1–6. Google Scholar Calvo et al., 2022 I. Calvo, A.
    Espin, J.M. Gil-García, P. Fernández Bustamante, O. Barambones, E. Apiñaniz Scalable
    IoT architecture for monitoring IEQ conditions in public and private buildings
    Energies, 15 (6) (2022), p. 2270 CrossRefView in ScopusGoogle Scholar Catania
    and Vallone, 2020 P. Catania, M. Vallone Application of A precision apiculture
    system to monitor honey daily production Sensors, 20 (7) (2020), p. 2012, 10.3390/s20072012
    View in ScopusGoogle Scholar Cebeci̇ and Korçak, 2020 K. Cebeci̇, Ö. Korçak Design
    of an enterprise level architecture based on microservices Bilişim Teknol. Derg.,
    13 (4) (2020), pp. 357-371, 10.17671/gazibtd.558392 Google Scholar Cecchi et al.,
    2020 S. Cecchi, S. Spinsante, A. Terenzi, S. Orcioni A smart sensor-based measurement
    system for advanced bee hive monitoring Sensors, 20 (9) (2020), p. 2726, 10.3390/s20092726
    View in ScopusGoogle Scholar Chukkapalli et al., 2020 Chukkapalli, S., Piplai,
    A., Mittal, S., Gupta, M., & Joshi, A. (2020). A Smart-Farming Ontology for Attribute
    Based Access Control. 2020 IEEE 6th Intl Conference on Big Data Security on Cloud
    (BigDataSecurity), IEEE Intl Conference on High Performance and Smart Computing,
    (HPSC) and IEEE Intl Conference on Intelligent Data and Security (IDS), 29–34.
    https://doi.org/10.1109/BigDataSecurity-HPSC-IDS49724.2020.00017. Google Scholar
    Dayioglu and Turker, 2021 M.A. Dayioglu, U. Turker Digital transformation for
    sustainable future-agriculture 4.0: a review J. Agric. Sci., 27 (4) (2021), pp.
    373-399 View in ScopusGoogle Scholar Edwards-Murphy et al., 2016 F. Edwards-Murphy,
    M. Magno, P.M. Whelan, J. O’Halloran, E.M. Popovici B+ WSN: smart beehive with
    preliminary decision tree analysis for agriculture and honey bee health monitoring
    Comput. Electron. Agric., 124 (2016), pp. 211-219 View PDFView articleView in
    ScopusGoogle Scholar Farooq et al., 2020 M.S. Farooq, S. Riaz, A. Abid, T. Umer,
    Y.B. Zikria Role of IoT technology in agriculture: a systematic literature review
    Electronics, 9 (2) (2020), p. 319, 10.3390/electronics9020319 View in ScopusGoogle
    Scholar Fitzgerald et al., 2015 Fitzgerald, D.W., Murphy, F.E., Wright, W.M. D.,
    Whelan, P.M., & Popovici, E.M. (2015). Design and development of a smart weighing
    scale for beehive monitoring. 2015 26th Irish Signals and Systems Conference (ISSC),
    1–6. https://doi.org/10.1109/ISSC.2015.7163763. Google Scholar Gan and Delimitrou,
    2018 Y. Gan, C. Delimitrou The architectural implications of cloud microservices
    IEEE Comput. Archit. Lett., 17 (2) (2018), pp. 155-158, 10.1109/LCA.2018.2839189
    View in ScopusGoogle Scholar Gil-Lebrero et al., 2016 S. Gil-Lebrero, F.J. Quiles-Latorre,
    M. Ortiz-López, V. Sánchez-Ruiz, V. Gámiz-López, J.J. Luna-Rodríguez Honey bee
    colonies remote monitoring system Sensors, 17 (1) (2016), p. 55 CrossRefGoogle
    Scholar Gil-Lebrero et al., 2020 S. Gil-Lebrero, F.J. Navas González, V. Gámiz
    López, F.J. Quiles Latorre, J.M. Flores Serrano Regulation of microclimatic conditions
    inside native beehives and its relationship with climate in Southern Spain Sustainability,
    12 (16) (2020), 10.3390/su12166431 Google Scholar Guandalini, 2022 I. Guandalini
    Sustainability through digital transformation: a systematic literature review
    for research guidance J. Bus. Res., 148 (2022), pp. 456-471 View PDFView articleView
    in ScopusGoogle Scholar Gupta and Quamara, 2020 B.B. Gupta, M. Quamara An overview
    of internet of things (IoT): architectural aspects, challenges, and protocols
    Concurr. Comput.: Pract. Exp., 32 (21) (2020), 10.1002/cpe.4946 Google Scholar
    Hadjur et al., 2022 H. Hadjur, D. Ammar, L. Lefèvre Toward an intelligent and
    efficient beehive: a survey of precision beekeeping systems and services Comput.
    Electron. Agric., 192 (2022), Article 106604, 10.1016/j.compag.2021.106604 View
    PDFView articleView in ScopusGoogle Scholar He et al., 2020 W. He, S. Zhang, Z.
    Hu, J. Zhang, X. Liu, C. Yu, H. Yu Field experimental study on a novel beehive
    integrated with solar thermal/photovoltaic system Sol. Energy, 201 (2020), pp.
    682-692, 10.1016/j.solener.2020.03.054 View PDFView articleView in ScopusGoogle
    Scholar Heaton and Parlikad, 2019 J. Heaton, A.K. Parlikad A conceptual framework
    for the alignment of infrastructure assets to citizen requirements within a smart
    cities framework Cities, 90 (2019), pp. 32-41, 10.1016/j.cities.2019.01.041 View
    PDFView articleView in ScopusGoogle Scholar Hevner et al., 2004 Hevner, et al.
    Design science in information systems research Hevner, A., March, S., Park, J.,
    & Ram, S. (2004) MIS Q., 28 (1) (2004), pp. 75-105 CrossRefView in ScopusGoogle
    Scholar Hong et al., 2020 W. Hong, B. Xu, X. Chi, X. Cui, Y. Yan, T. Li Long-term
    and extensive monitoring for bee colonies based on internet of things IEEE Internet
    Things J., 7 (8) (2020), pp. 7148-7155, 10.1109/JIOT.2020.2981681 View in ScopusGoogle
    Scholar Imoize et al., 2020 A.L. Imoize, S.D. Odeyemi, J.A. Adebisi Development
    of a low-cost wireless bee-hive temperature and sound monitoring system IJEEI,
    8 (3) (2020), pp. 476-485, 10.11591/ijeei.v8i3.2268 View in ScopusGoogle Scholar
    Insomnia, 2023 Insomnia. (2023). Insomnia REST Client application (2023 v4.0)
    [Computer software]. 〈https://insomnia.rest/〉. Google Scholar ISPA, 2021 ISPA.
    (2021). Precision Ag Definition | International Society of Precision Agriculture.
    〈https://www.ispag.org/about/definition〉. Google Scholar Jacob and Mani, 2018
    P.M. Jacob, P. Mani A reference model for testing internet of things based applications
    J. Eng. Sci. Technol., 13 (8) (2018), pp. 2504-2519 View in ScopusGoogle Scholar
    Jegan et al., 2021 Jegan, S., Padmapriya, L., Manjari, P.V., & Shanmathi, R. (2021).
    Honey hive monitoring using IOT. 140023. https://doi.org/10.1063/5.0070127. Google
    Scholar Kasiotis et al., 2021 K.M. Kasiotis, E. Zafeiraki, E. Kapaxidi, E. Manea-Karga,
    S. Antonatos, P. Anastasiadou, P. Milonas, K. Machera Pesticides residues and
    metabolites in honeybees: a Greek overview exploring Varroa and Nosema potential
    synergies Sci. Total Environ., 769 (2021), Article 145213, 10.1016/j.scitotenv.2021.145213
    View PDFView articleView in ScopusGoogle Scholar Khairul Anuar et al., 2019 Khairul
    Anuar, N.H., Amri Md Yunus, M., Baharuddin, M.A., Sahlan, S., Abid, A., Ramli,
    M.M., Razzi Abu Amin, M., & Mohd Lotpi, Z.F. (2019). IoT Platform for Precision
    Stingless Bee Farming. 2019 IEEE International Conference on Automatic Control
    and Intelligent Systems (I2CACIS), 225–229. https://doi.org/10.1109/I2CACIS.2019.8825089.
    Google Scholar Khujamatov and Toshtemirov, 2020 Khujamatov, K., & Toshtemirov,
    T. (2020). Wireless sensor networks based Agriculture 4.0: Challenges and apportions.
    2020 International Conference on Information Science and Communications Technologies
    (ICISCT), 1–5. https://doi.org/10.1109/ICISCT50599.2020.9351411. Google Scholar
    Komasilovs et al., 2019 Komasilovs, V., Zacepins, A., Kviesis, A., Fiedler, S.,
    & Kirchner, S. (2019). Modular sensory hardware and data processing solution for
    implementation of the precision beekeeping [PDF]. 523.5Kb. https://doi.org/10.15159/AR.19.038.
    Google Scholar Kontogiannis, 2019 S. Kontogiannis An internet of things-based
    low-power integrated beekeeping safety and conditions monitoring system Inventions,
    4 (3) (2019), p. 52, 10.3390/inventions4030052 View in ScopusGoogle Scholar Kulyukin
    et al., 2018 V. Kulyukin, S. Mukherjee, P. Amlathe Toward audio beehive monitoring:
    deep learning vs. Standard machine learning in classifying beehive audio samples
    Appl. Sci., 8 (9) (2018), p. 1573 View in ScopusGoogle Scholar Liu et al., 2022
    Y. Liu, D. Li, B. Du, L. Shu, G. Han Rethinking sustainable sensing in agricultural
    internet of things: from power supply perspective IEEE Wirel. Commun., 29 (4)
    (2022), pp. 102-109, 10.1109/MWC.004.2100426 Google Scholar Lyu et al., 2020 Z.
    Lyu, H. Wei, X. Bai, C. Lian Microservice-based architecture for an energy management
    system IEEE Syst. J., 14 (4) (2020), pp. 5061-5072, 10.1109/JSYST.2020.2981095
    View in ScopusGoogle Scholar Maffezzoli et al., 2022 F. Maffezzoli, M. Ardolino,
    A. Bacchetti, M. Perona, F. Renga Agriculture 4.0: a systematic literature review
    on the paradigm, technologies and benefits Futures, 102998 (2022) Google Scholar
    Marquez et al., 2021 G. Marquez, C. Taramasco, H. Astudillo, V. Zalc, D. Istrate
    Involving stakeholders in the implementation of microservice-based systems: a
    case study in an ambient-assisted living system IEEE Access, 9 (2021), pp. 9411-9428,
    10.1109/ACCESS.2021.3049444 View in ScopusGoogle Scholar Meikle et al., 2016 W.
    Meikle, M. Weiss, A. Stilwell Monitoring colony phenology using within-day variability
    in continuous weight and temperature of honey bee hives Apidologie, 47 (2016),
    pp. 1-14 CrossRefView in ScopusGoogle Scholar Miranda et al., 2019 J. Miranda,
    P. Ponce, A. Molina, P. Wright Sensing, smart and sustainable technologies for
    Agri-Food 4.0 Comput. Ind., 108 (2019), pp. 21-36 View PDFView articleView in
    ScopusGoogle Scholar Mohamed and Mansor, 2023 Mohamed, M.Y., & Mansor, M.S. (2023).
    Measuring the Variability and Humidity of Apis mellifera Honeybee Hives by the
    Effect of some Ventilation and Indoor Fires During the Autumn Season Using a New
    System. 1158(3), 032015. Google Scholar Murphy et al., 2015 Murphy, F.E., Magno,
    M., O’Leary, L., Troy, K., Whelan, P., & Popovici, E.M. (2015). Big brother for
    bees (3B) — Energy neutral platform for remote monitoring of beehive imagery and
    sound. 2015 6th International Workshop on Advances in Sensors and Interfaces (IWASI),
    106–111. https://doi.org/10.1109/IWASI.2015.7184943. Google Scholar Navarro et
    al., 2022 Navarro, J., Lima, F., Porto, M., Steinfeld, L., 2022. BeeSmart: A real-time
    remote monitoring and control system for beekeeping Symp. . Internet Things (SIoT)
    2022 2022 1 4 doi: 10.1109/SIoT56383.2022.10070330. Google Scholar Ngo et al.,
    2019 T.N. Ngo, K.-C. Wu, E.-C. Yang, T.-T. Lin A real-time imaging system for
    multiple honey bee tracking and activity monitoring Comput. Electron. Agric.,
    163 (2019), Article 104841 View PDFView articleView in ScopusGoogle Scholar Ntawuzumunsi
    et al., 2021 E. Ntawuzumunsi, S. Kumaran, L. Sibomana Self-Powered Smart Beehive
    Monitoring and Control System (SBMaCS) Sensors, 21 (10) (2021), p. 3522, 10.3390/s21103522
    View in ScopusGoogle Scholar Paganelli et al., 2022 A.I. Paganelli, P.E. Velmovitsky,
    P. Miranda, A. Branco, P. Alencar, D. Cowan, M. Endler, P.P. Morita A conceptual
    IoT-based early-warning architecture for remote monitoring of COVID-19 patients
    in wards and at home Internet Things, 18 (2022), Article 100399, 10.1016/j.iot.2021.100399
    View PDFView articleView in ScopusGoogle Scholar Panziera et al., 2022 D. Panziera,
    F. Requier, P. Chantawannakul, C.W. Pirk, T. Blacquière The diversity decline
    in wild and managed honey bee populations urges for an integrated conservation
    approach Front. Ecol. Evol., 10 (2022), Article 767950 View in ScopusGoogle Scholar
    Patel et al., 2021 V. Patel, N. Pauli, E. Biggs, L. Barbour, B. Boruff Why bees
    are critical for achieving sustainable development Ambio, 50 (2021), pp. 49-59
    CrossRefView in ScopusGoogle Scholar Peffers et al., 2007 K. Peffers, T. Tuunanen,
    M.A. Rothenberger, S. Chatterjee A design science research methodology for information
    systems research J. Manag. Inf. Syst., 24 (3) (2007), pp. 45-77, 10.2753/MIS0742-1222240302
    View in ScopusGoogle Scholar Popereshnyak et al., 2018 Popereshnyak, S., Suprun,
    O., Suprun, O., & Wieckowski, T. (2018). IoT application testing features based
    on the modelling network. 127–131. Google Scholar Pyingkodi et al., 2022 Pyingkodi,
    M., Thenmozhi, K., Nanthini, K., Karthikeyan, M., Palarimath, S., Erajavignesh,
    V., & Kumar, G.B. A. (2022). Sensor based smart agriculture with IoT technologies:
    A review. 1–7. Google Scholar Ramachandran et al., 2022 V. Ramachandran, R. Ramalakshmi,
    B. Kavin, I. Hussain, A. Almaliki, A. Almaliki, A. Elnaggar, E. Hussein Exploiting
    IoT and Its enabled technologies for irrigation needs in agriculture Water, 14
    (5) (2022), p. 719, 10.3390/w14050719 View in ScopusGoogle Scholar Ramson et al.,
    2020 Ramson, S.R. J., Vishnu, S., & Shanmugam, M. (2020). Applications of Internet
    of Things (IoT) – An Overview. 2020 5th International Conference on Devices, Circuits
    and Systems (ICDCS), 92–95. https://doi.org/10.1109/ICDCS48716.2020.243556. Google
    Scholar Requier, 2019 F. Requier Bee colony health indicators: Synthesis and future
    directions CABI Rev., 2019 (2019), pp. 1-12 CrossRefGoogle Scholar Robustillo
    et al., 2022 M.C. Robustillo, C.J. Pérez, M.I. Parra Predicting internal conditions
    of beehives using precision beekeeping Biosyst. Eng., 221 (2022), pp. 19-29 View
    PDFView articleView in ScopusGoogle Scholar Roy and De, 2022 S.K. Roy, D. De Genetic
    algorithm based internet of precision agricultural things (IopaT) for agriculture
    4.0 Internet Things, 18 (2022), Article 100201 View PDFView articleView in ScopusGoogle
    Scholar Sari et al., 2020 F. Sari, İ. Kandemir, D.A. Ceylan, A. Gül Using AHP
    and PROMETHEE multi-criteria decision making methods to define suitable apiary
    locations J. Apic. Res., 59 (4) (2020), pp. 546-557 CrossRefView in ScopusGoogle
    Scholar Schneider et al., 2012 C.W. Schneider, J. Tautz, B. Grünewald, S. Fuchs
    RFID tracking of sublethal effects of two neonicotinoid insecticides on the foraging
    behavior of apis mellifera PLoS One, 7 (1) (2012), Article e30023, 10.1371/journal.pone.0030023
    View in ScopusGoogle Scholar Sharma et al., 2017 P.K. Sharma, M.-Y. Chen, J.H.
    Park A software defined fog node based distributed blockchain cloud architecture
    for IoT IEEE Access, 6 (2017), pp. 115-124 CrossRefGoogle Scholar Siddiqui et
    al., 2023 H. Siddiqui, F. Khendek, M. Toeroe Microservices based architectures
    for IoT systems-State-of-the-art review Internet Things (2023), Article 100854
    View PDFView articleView in ScopusGoogle Scholar Struye et al., 1994 M.H. Struye,
    H.J. Mortier, G. Arnold, C. Miniggio, R. Borneck Microprocessor-controlled monitoring
    of honeybee flight activity at the hive entrance Apidologie, 25 (4) (1994), pp.
    384-395, 10.1051/apido:19940405 View in ScopusGoogle Scholar Swain et al., 2021
    M. Swain, D. Zimon, R. Singh, M.F. Hashmi, M. Rashid, S. Hakak LoRa-LBO: an experimental
    analysis of LoRa link budget optimization in custom build IoT test bed for agriculture
    4.0 Agronomy, 11 (5) (2021), p. 820 CrossRefView in ScopusGoogle Scholar Symeonaki
    et al., 2022 E. Symeonaki, K.G. Arvanitis, D. Piromalis, D. Tseles, A.T. Balafoutis
    Ontology-based IoT middleware approach for smart livestock farming toward agriculture
    4.0: a case study for controlling thermal environment in a pig facility Agronomy,
    12 (3) (2022), 10.3390/agronomy12030750 Google Scholar Szczurek et al., 2023 A.
    Szczurek, M. Maciejewska, P. Batog Monitoring system enhancing the potential of
    urban beekeeping Appl. Sci., 13 (1) (2023), 10.3390/app13010597 Google Scholar
    Tamburis et al., 2020 O. Tamburis, F. Giannino, M. D’Arco, A. Tocchi, C. Esposito,
    G. Di Fiore, N. Piscopo, L. Esposito A night at the OPERA: a conceptual framework
    for an integrated distributed sensor network-based system to figure out safety
    protocols for animals under risk of fire Sensors, 20 (9) (2020), 10.3390/s20092538
    Google Scholar Tashakkori et al., 2021 R. Tashakkori, A.S. Hamza, M.B. Crawford
    Beemon: an IoT-based beehive monitoring system Comput. Electron. Agric., 190 (2021),
    Article 106427, 10.1016/j.compag.2021.106427 View PDFView articleView in ScopusGoogle
    Scholar Ullah et al., 2021 A. Ullah, I. Tlak Gajger, A. Majoros, S.A. Dar, S.
    Khan, Kalimullah, A. Haleem Shah, M. Nasir Khabir, R. Hussain, H.U. Khan, M. Hameed,
    S.I. Anjum Viral impacts on honey bee populations: a review Saudi J. Biol. Sci.,
    28 (1) (2021), pp. 523-530, 10.1016/j.sjbs.2020.10.037 View PDFView articleView
    in ScopusGoogle Scholar Uthoff et al., 2023 C. Uthoff, M.N. Homsi, M. von Bergen
    Acoustic and vibration monitoring of honeybee colonies for beekeeping-relevant
    aspects of presence of queen bee and swarming Comput. Electron. Agric., 205 (2023),
    Article 107589 View PDFView articleView in ScopusGoogle Scholar Voudiotis et al.,
    2021 G. Voudiotis, S. Kontogiannis, C. Pikridas Proposed smart monitoring system
    for the detection of bee swarming Inventions, 6 (4) (2021), p. 87 CrossRefView
    in ScopusGoogle Scholar Wrysinski et al., 2023 Wrysinski, E., Stock, J., Paiz,
    C., & Blanc, D. (2023). A Hardware Platform for Wireless Beehive Monitoring [Bachelor
    Of Science In Computer Science And Engineering, Santa Clara University]. https://scholarcommons.scu.edu/cseng_senior/245/.
    Google Scholar Wu and Li, 2023 H. Wu, J. Li Risk preference, interlinked credit
    and insurance contract and agricultural innovative technology adoption J. Innov.
    Knowl., 8 (1) (2023), Article 100282 View PDFView articleView in ScopusGoogle
    Scholar Xu et al., 2022 J. Xu, B. Gu, G. Tian Review of agricultural IoT technology
    Artif. Intell. Agric., 6 (2022), pp. 10-22 View PDFView articleView in ScopusGoogle
    Scholar Zabasta et al., 2019 Zabasta, A., Kunicina, N., Kondratjevs, K., & Ribickis,
    L. (2019). IoT Approach Application for Development of Autonomous Beekeeping System.
    2019 International Conference in Engineering Applications (ICEA), 1–6. https://doi.org/10.1109/CEAP.2019.8883460.
    Google Scholar Zacepins et al., 2015 A. Zacepins, V. Brusbardis, J. Meitalovs,
    E. Stalidzans Challenges in the development of precision beekeeping Biosyst. Eng.,
    130 (2015), pp. 60-71, 10.1016/j.biosystemseng.2014.12.001 View PDFView articleView
    in ScopusGoogle Scholar Zacepins et al., 2016 A. Zacepins, A. Kviesis, E. Stalidzans,
    M. Liepniece, J. Meitalovs Remote detection of the swarming of honey bee colonies
    by single-point temperature monitoring Biosyst. Eng., 148 (2016), pp. 76-80, 10.1016/j.biosystemseng.2016.05.012
    View PDFView articleView in ScopusGoogle Scholar Zacepins et al., 2020 A. Zacepins,
    A. Kviesis, V. Komasilovs, F. Rido Muhammad Monitoring system for remote bee colony
    state detection Balt. J. Mod. Comput., 8 (3) (2020), 10.22364/bjmc.2020.8.3.05
    Google Scholar Zaman and Dorin, 2023 A. Zaman, A. Dorin A framework for better
    sensor-based beehive health monitoring Comput. Electron. Agric., 210 (2023), Article
    107906 View PDFView articleView in ScopusGoogle Scholar Zhai et al., 2020 Z. Zhai,
    J.F. Martínez, V. Beltran, N.L. Martínez Decision support systems for agriculture
    4.0: survey and challenges Comput. Electron. Agric., 170 (2020), Article 105256
    View PDFView articleView in ScopusGoogle Scholar Cited by (4) BeeLive: The IoT
    platform of Beemon monitoring and alerting system for beehives 2023, Smart Agricultural
    Technology Show abstract ENABLING ROBUST SENSOR NETWORK DESIGN WITH DATA PROCESSING
    AND OPTIMIZATION MAKING USE OF LOCAL BEEHIVE IMAGE AND VIDEO FILES 2024, arXiv
    Precision Beekeeping Systems: State of the Art, Pros and Cons, and Their Application
    as Tools for Advancing the Beekeeping Sector 2024, Animals Investigating an Enhanced
    Approach for Greenhouse Climate Control: Optimising Cooling and Heating Systems
    2023, International Journal on Advanced Science, Engineering and Information Technology
    1 Present address: Rua Dr. Júlio Martins, Nº1, 5400–342 Chaves, Portugal © 2023
    The Authors. Published by Elsevier Ltd on behalf of Prof JinHyo Joseph Yun. Recommended
    articles b+WSN: Smart beehive with preliminary decision tree analysis for agriculture
    and honey bee health monitoring Computers and Electronics in Agriculture, Volume
    124, 2016, pp. 211-219 Fiona Edwards-Murphy, …, Emanuel M. Popovici View PDF A
    predictive modeling for health expenditure using neural networks strategies Journal
    of Open Innovation: Technology, Market, and Complexity, Volume 9, Issue 3, 2023,
    Article 100132 Mohammad H. Saleh, …, Jamil J. Jaber View PDF Sensemaking of family
    enterprise business model Journal of Open Innovation: Technology, Market, and
    Complexity, Volume 9, Issue 3, 2023, Article 100115 Indra Abeysekera View PDF
    Show 3 more articles Article Metrics Citations Citation Indexes: 3 Captures Readers:
    49 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: 'Journal of Open Innovation: Technology, Market, and Complexity'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'BHiveSense: An integrated information system architecture for sustainable
    remote monitoring and management of apiaries based on IoT and microservices'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Li J.
  - Maiti A.
  - Fei J.
  citation_count: '1'
  description: Regulatory Technology (RegTech) is an emerging set of computing and
    network-based information systems and practices intended to enhance and improve
    regulatory compliance processes. Such technologies rely on collecting exclusive
    information from the environment and humans through automated Internet of Things
    (IoT) sensors and self-reported data. The key enablers of RegTech are the increased
    capabilities and reduced cost of IoT and Artificial Intelligence (AI) technologies.
    This article focuses on a survey of RegTech, highlighting the recent developments
    in various sectors. This work identifies the characteristics of existing implementations
    of RegTech applications in the financial industry. It examines the critical features
    that non-financial industries such as agriculture must address when using such
    technologies. We investigate the suitability of existing technologies applied
    in financial sectors to other industries and the potential gaps to be filled between
    them in terms of designing information systems for regulatory frameworks. This
    includes identifying specific operational parameters that are key differences
    between the financial and non-financial sectors that can be supported with IoT
    and AI technologies. These can be used by both producers of goods and services
    and regulators who need an affordable and efficient supervision method for managing
    relevant organizations.
  doi: 10.3390/fi15080256
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all   Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Future Internet All Article Types Advanced   Journals
    Future Internet Volume 15 Issue 8 10.3390/fi15080256 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editor Massimo
    Cafaro Subscribe SciFeed Recommended Articles Related Info Link More by Authors
    Links Article Views 3168 Citations 2 Table of Contents Abstract Introduction Current
    Supervisory or Regulatory Technologies Fundamental Technologies for RegTech RegTech
    in Financial Sector RegTech Applications in Non-Financial Sectors Comparing FinTech
    and Different RegTech RegTech and Industrial Internet of Things Conclusions Funding
    Data Availability Statement Conflicts of Interest References Altmetric share Share
    announcement Help format_quote Cite question_answer Discuss in SciProfiles thumb_up
    Endorse textsms Comment first_page settings Order Article Reprints Open AccessReview
    Features and Scope of Regulatory Technologies: Challenges and Opportunities with
    Industrial Internet of Things by Jinying Li 1, Ananda Maiti 2,* and Jiangang Fei
    1 1 Australian Maritime College, University of Tasmania, Newnham, TAS 7248, Australia
    2 School of Information and Communication Technology, University of Tasmania,
    Newnham, TAS 7248, Australia * Author to whom correspondence should be addressed.
    Future Internet 2023, 15(8), 256; https://doi.org/10.3390/fi15080256 Submission
    received: 25 June 2023 / Revised: 16 July 2023 / Accepted: 22 July 2023 / Published:
    30 July 2023 (This article belongs to the Section Techno-Social Smart Systems)
    Download keyboard_arrow_down     Browse Figures Versions Notes Abstract Regulatory
    Technology (RegTech) is an emerging set of computing and network-based information
    systems and practices intended to enhance and improve regulatory compliance processes.
    Such technologies rely on collecting exclusive information from the environment
    and humans through automated Internet of Things (IoT) sensors and self-reported
    data. The key enablers of RegTech are the increased capabilities and reduced cost
    of IoT and Artificial Intelligence (AI) technologies. This article focuses on
    a survey of RegTech, highlighting the recent developments in various sectors.
    This work identifies the characteristics of existing implementations of RegTech
    applications in the financial industry. It examines the critical features that
    non-financial industries such as agriculture must address when using such technologies.
    We investigate the suitability of existing technologies applied in financial sectors
    to other industries and the potential gaps to be filled between them in terms
    of designing information systems for regulatory frameworks. This includes identifying
    specific operational parameters that are key differences between the financial
    and non-financial sectors that can be supported with IoT and AI technologies.
    These can be used by both producers of goods and services and regulators who need
    an affordable and efficient supervision method for managing relevant organizations.
    Keywords: regulatory technologies; RegTech; internet of things; IIoT; machine
    learning; artificial intelligence 1. Introduction Regulation Technology, or RegTech,
    refers to the use of technology to assist organizations in meeting regulatory
    compliance requirements [1]. RegTech has rapidly gained popularity in the financial
    industry due to the benefits it offers [2]. The existing financial RegTech solutions
    have been well-developed with the ability to conduct automated data distribution
    and regulatory reporting through big data analytics, real-time reporting, risk
    exposure assessment, potential threat prediction, real-time monitoring, tracking
    of compliance states and future regulations, and auditing with the adoption of
    multiple technologies. With the benefits it can bring, RegTech has addressed many
    issues in financial industries, such as the regulatory interpretation problem,
    the development of compliant management and business policies, effective and productive
    regulatory compliance reporting, better performance of data governance and analysis
    for enterprises, integrated risk management, and automated control throughout
    the business [3]. RegTech, as large software solutions or complex cyber-physical
    solutions, comprises two kinds of entities: the producers of goods and services
    and the regulators/supervisors responsible for monitoring the producers. Generally,
    there are a large number of producers who have competing interests and a small
    number of regulators who must be impartial to all producers but find ways to improve
    the performance of the industries altogether. This way, supervisors have one-to-many
    relationships with the producers. Supervisory technology (SupTech) has also been
    proposed from the perspective of the supervisory entity [4]. The significantly
    increased regulations after the last global financial crisis have driven financial
    institutions like banks to optimize workflow efficiency and challenge the supervisory
    processes that mainly rely on manual operations [5]. Financial institutions can
    enormously improve their internal processing speed to comply with policies and
    regulations by adopting regulatory technologies, which force the corresponding
    financial regulators or supervisors to take advantage of the supervisory technologies
    to keep the same pace as required. RegTech and SupTech have different focuses,
    whereas the former is concentrated on assisting companies and the latter spotlights
    enhancing supervision from the supervisor’s viewpoint. RegTech is a tool for enterprises
    to prove what they performed, while SupTech is used to evaluate and verify their
    behaviors. The key mediator that links them is the data collected and reported
    by one while being received and verified by the other. SupTech and RegTech belong
    to the family of compliance technologies as they share the same target of making
    the products or services qualified to meet compliance requirements and regulations.
    A failure in either the reporting of data or its verification will risk the whole
    compliance process, which must be integrated. In this paper, we refer to a broad
    scope of RegTech, as shown in Figure 1, when discussing RegTech from the perspective
    of compliance, which is the destination of all efforts. In short, the rapid development
    of compliance in all sectors relies on the joint efforts of all stakeholders.
    Figure 1. Focus of Broad RegTech. In addition, by examining the characteristics
    and challenges of the various industries, this paper recommends an integrated
    framework of RegTech infrastructure that potentially suits non-financial enterprises
    more, strengthening the workflow and importance of data treatment as well as decision-making
    by taking advantage of various advanced and developed technologies. In discussing
    the proposed compliance system framework, both supervisory and producer roles
    are considered. By comparing the features of different sectors in using technologies,
    the Industrial Internet of Things (IIoT) is identified as one of the key differences
    between the financial area and the other fields in terms of data collection. In
    contrast to others, the financial RegTech system has negligible field data to
    collect. The remainder of the paper is organized as follows: Section 2 presents
    the current applications, solutions, and terminologies used in RegTech and related
    technologies. Section 3 discusses how current RegTech applications work, their
    features, and standard operating policies. Section 4 and Section 5 present a review
    of how RegTech currently works in financial applications and new approaches taken
    for other industries. We compare the difference between financial technologies
    and other fields in Section 6 and discuss a potential approach to using the IIoT
    to seamlessly extend the use of RegTech effectively in industries with considerable
    human or environmental actions and a substantial number of tangible products in
    Section 7. 2. Current Supervisory or Regulatory Technologies 2.1. Definition of
    Several Concepts: Fintech, RegTech, SupTech Financial Technology (FinTech), Regulatory
    Technology (RegTech), and Supervisory Technology (SupTech) are all related to
    the application of technology in the financial industry, but they have distinct
    focuses and purposes. 2.1.1. FinTech FinTech was first coined in 1993 [6] and
    defined by the Financial Stability Board (FSB) as “technology-enabled innovation
    in financial services” [7]. It refers to using technology to deliver innovative
    financial products, services, and solutions. It encompasses a wide range of applications,
    including mobile banking, online payment systems, peer-to-peer lending, robot
    advisors, digital currencies, digital wallets, etc. For example, a pioneer digital
    wallet provider, Safaricom, which is also a mobile network provider at the same
    time, provides M-PESA for clients who can manage money and accounts by themselves
    within the app [8]. Furthermore, multiple Fintech examples are listed by [9] in
    both the banking process and the insurance process in terms of provider types
    (bank, non-bank, insurer, and non-insurer) and interaction types such as B2C,
    C2C, and B2B, etc. For instance, Fintech products in the B2C business mode are
    identified, such as video conferencing (HVB, GER) and personal finance management
    (Mint, US) for Advice services; social media payments (Commonwealth Bank of Australia,
    AUS) and cryptocurrency (Bitcoin) in Payments services; robot-advisory (UBS, CH)
    and multi-assets trading (360t, GER) in Investment services; online credit application
    (Targobank, GER) and Corporate credits (Finpoint, GER) in Financing services;
    online bank account opening (Fidor Bank, GER) and electronic data safe (SecureSafe,
    CH) in Cross-process service. FinTech aims to enhance and automate various financial
    processes, increase accessibility, improve efficiency, and provide new business
    models. Although the development of fintech has become relatively mature, issues
    and challenges still exist. The research in [10] identified a series of Fintech
    challenges in framework and model, regulation and policy, financial literacy,
    supervision, personal data protection, collaboration, data security, etc. For
    instance: Fintech needs a practical and systematic framework. A stable and efficient
    public infrastructure and trust in the payment system are required for public
    policies. Absolute regulation may not be suitable or effective enough for Fintech.
    Significant data protection issues are caused by the use of big data and new technologies.
    knowledge of the success factors of equity crowdfunding open to non-accredited
    investors. Issues in secure data storage and processing. 2.1.2. RegTech RegTech
    was first presented in 2015 by the Financial Conduct Authority (FCA) [11]. As
    quite a new industry, it is defined as “the use of technologies to solve regulatory
    and compliance requirements more effectively and efficiently” by the Institute
    of International Finance (IIF) [12]. RegTech focuses specifically on leveraging
    technology to address regulatory compliance challenges faced by organizations,
    particularly in highly regulated industries like finance. It involves using advanced
    technologies such as AI, machine learning (ML), natural language processing (NLP),
    and data analytics to streamline compliance processes, automate regulatory reporting,
    monitor risks, ensure data privacy and security, and manage regulatory changes
    effectively. RegTech solutions aim to help organizations meet their compliance
    obligations more efficiently, accurately, and cost-effectively. The basic differences
    between Fintech and RegTech are shown in Table 1. Table 1. Comparison of Differences
    Between FinTech and RegTech. The life cycle of products in certain industries,
    such as electronic products, is becoming shorter and shorter [13]. Companies must
    constantly design new products to replace old ones to maintain their market share.
    New products need to be designed to meet changing market demands and comply with
    regulations. Implementing RegTech ensures that designers are aware of whether
    the new products are compliant at the design stage so that they can be successfully
    launched after mass production. At the same time, competition in new industries
    is increasing. A larger number of companies are startups developing new products.
    This creates a risk for consumers as the final products may not be of acceptable
    quality and/or the companies may not be able to meet the regulatory requirements
    while maintaining design and functional originality in the long run. Having an
    in-built RegTech application from the start of product design for such companies
    can ensure that companies are aware of quality requirements and confidently design
    and sell their products with high quality assurance. Larger companies, on the
    other hand, will benefit proportionately less from RegTech for new product design
    but can still ensure that the production and logistics themselves have acceptable
    regulatory compliance. 2.1.3. SupTech (RegTech for Supervisors) The fast development
    of RegTech presents significant opportunities for supervisory agencies. SupTech
    refers to the application of technology by regulatory authorities to enhance their
    supervisory and regulatory functions. It involves the use of data analytics, AI,
    ML, and other technologies to collect, analyze, and monitor large volumes of data
    from regulated entities with “a shift away from current approaches based on past
    data, lengthy on-site inspections, and often delayed supervisory action, towards
    a pro-active, forward-looking supervision that relies on better data collection
    and sophisticated data analytics” [12]. SupTech can improve the efficiency and
    effectiveness of regulatory processes such as risk assessment, market surveillance,
    fraud detection, and compliance monitoring. It also enables regulators to have
    a more proactive and data-driven approach to supervision. While FinTech focuses
    on innovation in financial products and services, RegTech addresses compliance
    challenges faced by organizations, and SupTech involves using technology by regulatory
    bodies to improve their supervisory functions. However, these terms are not mutually
    exclusive, and there can be overlap and synergy among them as technology continues
    to shape the financial industry. 2.2. Three Stages of RegTech Development The
    development of RegTech has gone through three stages [14]. RegTech 1.0 refers
    to the early stages of RegTech development when companies started leveraging technology
    to address regulatory challenges. RegTech solutions primarily focused on automating
    manual processes, improving data management, and ensuring compliance with existing
    regulations during this period. It developed risk management practices by introducing
    new technologies to monitor regulations, risks, or specific processes before the
    2008 global crisis [15]. RegTech 2.0 applications, driven by industry and regulators
    to improve regulatory compliance and efficiency after the global crisis, facilitated
    companies improvements in consumer protection and supervisory activities [16].
    Regulators seek to enhance their capacity to analyze the rising volumes of data
    generated by institutions required by the post-GFC (global financial crisis) reporting
    obligations in 2008. It involves more advanced and sophisticated solutions that
    leverage emerging technologies like artificial intelligence, machine learning,
    natural language processing, and data analytics. These technologies strengthen
    risk assessment, real-time monitoring, predictive analytics, and regulatory reporting.
    It enables financial institutions to control costs and predict risks more effectively,
    saving regulatory funds and creating new opportunities for the financial industry.
    It also allows regulators to identify problems using continuous monitoring tools
    and spend less time conducting compliance breach investigations. Without RegTech,
    regulators will face significant challenges such as “fundamental information asymmetry,
    higher regulatory arbitrage, and more serious systemic risks” [17]. In the third
    phase, more advanced technologies are adopted in applications to foresee risks
    with predictive algorithms [18] and tools shifting the focus from KYC (Know Your
    Customer) [19] to KYD (Know Your Data) [20]. This stage involves further advancements
    in automation, integration, and scalability of RegTech solutions. It incorporates
    technologies like blockchain, cloud computing, and decentralized applications
    to address compliance challenges more efficiently and securely. 2.3. Current Development
    of RegTech and Existing Applications The high compliance cost accelerates the
    increasing implementation of various compliance systems with digital technologies
    such as machine learning, artificial intelligence, big data, and blockchain. According
    to the statistics of Deloitte in 2023 [21], 485 RegTech companies have exposed
    detailed information about their businesses covering various subsectors such as
    regulatory reporting, risk management, identity management and control, compliance,
    and transaction monitoring (see Figure 2). Most RegTech solutions focus on compliance,
    one of the critical metrics for financial industries. Figure 2. Thematic fields
    covered by RegTech companies (based on Deloitte, 2023). 2.4. Existing RegTech
    Applications Some statistical presentations (Figure 3 and Figure 4, and Table
    2) are made based on the information disclosed in the “RegTech100 Report 2023”
    [22]. It can be concluded (see Figure 3) that most RegTech companies are small,
    with less than a hundred employees, which indicates that this industry is still
    in its primary development stage, attracting startups with incredible potential
    and opportunities. Figure 4 shows that most RegTech enterprises were set up after
    2008. The worldwide economic crisis of 2008 forced countries to tighten regulations
    in various sectors, especially the financial sector, to avoid a similar large-scale
    economic collapse. Table 2 indicates that RegTech focuses on compliance management,
    risk management, onboarding identification, regulatory reporting, and transaction
    monitoring. This finding also matches the data shown in Figure 2. It is worth
    noting that almost all of the 100 applications are in the financial sector. This
    indirectly shows that RegTech applications in non-financial sectors still lag
    behind those in the financial industry. Moreover, there are some interesting new
    areas developed by some companies, including [22]: Figure 3. Size of RegTech Companies
    (Based on “RegTech100-Report-2023” [22]). Figure 4. Numbers and Year of Establishment
    of RegTech Companies (Based on “RegTech100-Report-2023” [22]). Table 2. Thematic
    fields covered by the report (Based on “RegTech100-Report-2023” [22]). Digital
    Transformation and Automation (by “Profinch”) Market surveillance (by “Solidus
    Labs”) Web3 scam prevention (by “Solidus Labs”) Web3 Intelligence and Forensics
    (by “Merkle Science”) Blockchain Analytics and Investigations (by “Coinfirm”)
    Data Privacy (by “Enveil”) Taxation Reporting (by “MAP FinTech”) Trade Surveillance
    (by “MAP FinTech”) Staff Compliance (by “U-Reg”) Data Exchange (by “U-Reg”) Contract
    Lifecycle Management (by “SignDesk”) eSignature (by “SignDesk”) 3. Fundamental
    Technologies for RegTech FinTech is a complex, overarching set of technologies
    for monitoring, supervision, compliance, and ultimate consumer assurance and satisfaction.
    Key technologies in RegTech include artificial intelligence, machine learning,
    IoT, big data analytics, cloud computing, Distributed Ledger Technology (DLT),
    Application Program Interface (API), smart contracts, cryptography, biometrics,
    etc. The technologies adopted in RegTech are the same as those implemented in
    FinTech. 3.1. Features For a cyber-physical solution to be part of RegTech, it
    has to have some specific features. Some of the critical aspects of RegTech include:
    Automation: RegTech solutions often involve the automation of compliance processes,
    which can help reduce the risk of human error and increase efficiency [14,23,24,25,26,27,28].
    Data management: RegTech solutions typically involve collecting, processing, and
    analyzing large amounts of data. This requires sophisticated data management tools
    and techniques like data analytics and machine learning [24,29,30,31,32]. Risk
    management: RegTech solutions can help companies identify and manage compliance
    risks more effectively. This includes tools for risk assessment, monitoring, and
    reporting [14,16,23,31,33]. Transparency: RegTech solutions can help improve transparency
    and accountability by providing real-time access to compliance data and reports
    [17,24]. Collaboration: RegTech solutions often require collaboration between
    different stakeholders, such as regulators, industry associations, and technology
    providers. This can help promote innovation and best practices in regulatory compliance
    [34]. 3.2. Tools RegTech solutions, which have the above features, are typically
    composed of independently developed software and hardware tools. RegTech focuses
    on leveraging technology to improve compliance processes, reduce costs, and enhance
    the overall effectiveness of regulatory compliance by utilizing a range of technologies
    to automate, streamline, and enhance compliance processes. It may be noted that
    the technologies used in RegTech are extremely mature and have been in use for
    decades. This helps the developers integrate such software and hardware to meet
    the requirements. Some of the key technologies used in RegTech include: AI and
    Machine Learning: AI is an advanced technology that can perform tasks in areas
    that require human intelligence with the implementation and development of computer
    systems, including a broad range of techniques, algorithms, and methodologies
    that enable computers to mimic or simulate human intelligence. It involves creating
    intelligent machines that can perceive, reason, learn, and problem-solve in ways
    similar to or surpassing human capabilities [35]. For example, the AI-based scoring
    system is more objective in making credit decisions more precise and reasonable
    without bias and with brilliant fraud detection, no matter how sophisticated or
    complex the regulations are [36]. In addition, AI plays an incredible role in
    complying with the General Data Protection Regulation (GDPR) [37,38], the European
    Data Protection Law that aims to protect personal information. For instance, Aigine
    offers a tool based on AI to detect personal data from various sources, including
    structured or unstructured files such as emails or notes, to handle the challenge
    of unstructured personal data through four stages: filtering, highlighting, assessing,
    and documenting [16]. Machine learning is a subset of AI that focuses on algorithms
    and models that enable computers to learn from and make predictions or decisions
    based on data. It involves training computer systems to automatically improve
    performance on a specific task through experience and without explicit programming.
    Blockchain: Blockchain technology can improve transparency and traceability in
    compliance processes. For example, it can be used to create tamper-proof records
    of transactions and improve the audit trail [39,40,41]. Blockchain technology
    has several potential applications in RegTech, primarily due to its ability to
    provide an immutable and transparent record of transactions. Natural Language
    Processing: NLP can analyze unstructured data, such as text documents, to identify
    and flag potential compliance issues [42]. Big Data Analytics: RegTech relies
    on analyzing large amounts of data to identify patterns, trends, and anomalies
    that may indicate compliance risks [2,43]. Cloud Computing: Cloud computing can
    be used to store and process large amounts of data in a cost-effective and scalable
    way [44,45,46]. Robotic Process Automation (RPA): RPA can be used to automate
    routine compliance tasks, such as data entry and reconciliation, to improve efficiency
    and reduce errors [47,48,49]. Internet of Things: IoT devices can be used to collect
    data from physical assets and locations, such as factories or supply-chain nodes
    [50,51,52], to monitor compliance and identify potential risks. Adopting these
    technologies can automate compliance processes, such as monitoring and reporting,
    by analyzing large volumes of data in real-time [46,47]. They are constantly evolving
    as new solutions are developed to meet the specific needs of different industries
    and regulatory requirements. 3.3. Policies and Standard Operating Procedures Over
    time, RegTech, particularly FinTech, has developed several well-known and tested
    policies and standard operating procedures. These are mainly aimed at acquiring
    the correct data from the correct source in a timely manner. They are based on
    the tools mentioned above. Here are some ways in which blockchain can be used
    in RegTech: Know Your Customer: Blockchain can be used to create a decentralized
    and secure identity verification system that allows customers to prove their identity
    without the need for intermediaries. This can streamline the KYC process for financial
    institutions while maintaining data privacy and security [53,54]. Regulatory Reporting:
    Blockchain can be used to create a secure and transparent audit trail of regulatory
    reports, making it easier for regulators to monitor compliance and identify potential
    issues. This can potentially reduce the burden of regulatory reporting for financial
    institutions and improve the overall quality of the data [54]. Supply chain compliance:
    Blockchain can be used to create a secure and transparent record of transactions
    in supply chains, enabling companies to track the movement of goods and ensure
    compliance with regulations. This can aid in reducing the risk of fraud and improving
    the overall efficiency of supply-chain management [55]. Smart contracts: Blockchain
    can be used to automate compliance processes through the use of smart contracts,
    which are self-executing contracts that automatically enforce the terms of an
    agreement. This lowers the impact of errors and improves the overall efficiency
    of compliance processes [56]. 3.4. Applications The combination of blockchain
    and IoT can provide a powerful solution for compliance management, enabling companies
    to monitor and enforce compliance requirements securely, transparently, and efficiently.
    Some ways in which blockchain and IoT can be used in traceability and quality
    assurance are: Supply chain management: IoT devices can be used to collect data
    from physical assets and locations, such as factories or supply-chain nodes. These
    data can be stored on a blockchain, creating a secure and transparent record of
    transactions [57]. This can help to ensure compliance with regulations, such as
    food safety regulations, by providing an auditable trail of the movement of goods
    and the conditions under which they were transported. Anti-Money Laundering (AML):
    Blockchain can be used to create a secure and tamper-proof record of transactions,
    making it easier to detect and prevent money laundering and other financial crimes.
    This reduces the risk of fraud and increases transparency in the financial system
    [53]. Asset tracking and management: IoT devices can be used to track and monitor
    the condition of assets, such as machinery or vehicles [58,59,60]. Similar to
    the supply chain. These data can be stored on a distributed database, creating
    a reliable and quickly accessible record of the asset’s history. This can help
    to ensure compliance with regulations, such as maintenance schedules or environmental
    standards, by providing an auditable trail of the asset’s use and maintenance.
    Identity verification: Blockchain can be used to create a decentralized and secure
    identity verification system. IoT devices can be used to collect biometric data,
    such as fingerprints [61] or facial recognition, to verify the identity of individuals.
    This can help streamline financial institutions’ KYC processes and reduce the
    risk of identity theft or fraud. Product tracking and monitoring: IoT devices
    can be used to monitor the quality of products in real-time, such as temperature,
    humidity [62,63], or vibration. These data can also be stored on a blockchain,
    creating a record of the product’s history. This can help identify quality issues
    and ensure that products meet the required quality standards. Quality control
    and testing: IoT devices can collect data for quality control [64] and testing
    processes, such as test results or inspection data, to monitor compliance with
    these requirements. Based on this, it can trigger automatic actions if required.
    This can help identify quality issues and improve the overall quality of products.
    3.5. RegTech and TRL RegTech can be used to determine the Technology Readiness
    Level (TRL) [65] in certain contexts. TRL measures how mature a technology is
    and its readiness for deployment [65]. It is often used in research and development
    projects to assess the progress of technology development and identify areas for
    further investment and improvement. RegTech can be used to automate the collection,
    analysis, and reporting of data related to TRL [65]. For example, RegTech solutions
    can be used to collect data on the performance and reliability of a technology,
    such as its ability to meet regulatory requirements, the quality of its data output,
    or its ability to integrate with other systems. These data can be analyzed to
    determine the technology’s TRL and identify areas for improvement. RegTech can
    also be used to automate compliance processes related to TRL. RegTech solutions
    can be used to ensure that the development of a technology complies with regulatory
    requirements and standards for safety, performance, and quality. RegTech can provide
    a more efficient and accurate way to determine TRL, enabling organizations to
    make better-informed decisions about developing and deploying new technologies.
    4. RegTech in Financial Sector The mortgage industry turned to a virtual approach
    during the pandemic period to serve clients by introducing digital mortgage companies
    and application processes, which brought back mortgage fraud and synthetic identity
    fraud [66]. According to the report by McKinsey [67], synthetic identity fraud
    contributed to 10–15% of lender losses in the UK. And the 2020 Q3 ACES Quality
    Control Industry Trends Report [68] indicated that the error rate of the industry
    reached the highest percentage (2.34%) since 2016. Hence, lenders must mitigate
    risks by introducing risk reduction and credit monitoring tools. RegTech can provide
    an easier solution for them to achieve this. Further, the latest Anti Money Laundering
    (AML) rules require businesses to use electronic verification instead of manual
    identity checks to keep pace with the increasing sophistication of fake identities
    and financial documentation. Electronic RegTech solutions help lenders check these
    faster and improve the application process timeline, which is a key sore point
    for applicants. This not only makes the companies comply with the ever-changing
    regulatory landscape cost-effectively but also boosts customer retention and competitiveness.
    4.1. Benefits of the Current Compliance Application in Financial Sectors RegTech
    offers numerous benefits to the financial industry, assisting financial institutions
    in streamlining their regulatory compliance processes and improving overall regulatory
    effectiveness. Some key benefits of RegTech in the financial industry include:
    Compliance Efficiency: With the help of RegTech applications, the compliance processes
    can be automated, greatly reducing manual effort and time to save costs and improve
    productivity in compliance operations [69]. In addition, useful tools enable financial
    entities to keep good auditable records of compliance activities by maintaining
    a robust audit trail [25] and capturing all relevant actions during the compliance
    process, which provides clear evidence for future investigations. Moreover, financial
    regulations keep changing [16], which not only costs entities time to keep pace
    with them but may also cause potential non-compliance risks without good regulatory
    change management. RegTech solutions can automatically monitor and interpret regulatory
    changes and provide timely updates and alerts so that organizations can stay informed
    and adapt their compliance processes and policies accordingly. For example, the
    NLP can help users interpret the regulatory rules and identify any changes or
    updates; Robotic Process Automation can produce the regulatory reports automatically;
    distributed ledger technology can verify and check the authentication of the report;
    and the programming interface will enable the report to be submitted directly
    to regulators or supervisors [70]. The combination of various digital technologies
    can have a greater effect on the compliance process. Transparency and Regulatory
    Collaboration: RegTech can handle real-time monitoring [70] and internal and external
    reporting. On the one hand, by analyzing real-time data such as transactions,
    market activities, and regulatory changes, financial institutions can identify
    potential compliance issues or suspicious transactions and take appropriate action
    immediately against any potential risks. In addition, entities can identify and
    assess risks via real-time monitoring, detect patterns, and generate insights
    that support risk mitigation strategies by analyzing large volumes of data. On
    the other hand, RegTech also facilitates automated, accurate, and timely reporting
    to regulators or supervisors, contributing to transparency and accountability
    [32] and building trust between entities and supervisors. As a result, better
    collaboration and communication between two parties can be facilitated by providing
    a standardized platform with automated reporting, which can streamline the exchange
    of information, reduce duplication of efforts, and foster a more efficient and
    transparent relationship. Customer Due Diligence: Client background checks are
    crucial in the financial industry to avoid causing financial crimes such as money
    laundering. As criminals become more technologically advanced, it presents unprecedented
    challenges for financial service providers. Hence, customer due diligence processes
    such as Know Your Customer (KYC) and Anti-Money Laundering (AML) checks are inevitable
    [71]. By automating data collection, verification, and risk assessment, the applied
    RegTech can make more accurate analyses and judgments in due diligence procedures
    as well as streamline customer onboarding with reduced manual errors [71], establishing
    a good reputation in customer service. Data Integrity and Security: RegTech solutions
    often incorporate robust data management and security features, including encryption,
    access controls, audit trails, and other security measures to protect sensitive
    information and prevent data breaches [72], which helps financial companies ensure
    the integrity, confidentiality, and accuracy of data used in regulatory compliance.
    RegTech offers significant advantages to the financial industry, allowing financial
    institutions to effectively navigate complex regulatory landscapes, enhance compliance
    efficiency, and mitigate risks. These benefits ultimately contribute to a more
    resilient and sustainable financial ecosystem. 4.2. Shortcomings of the Current
    Compliance Application in Financial Sectors Limitations or challenges still exist
    despite the successful development of RegTech. It is suggested by Teichmann and
    Boticiu [14] that the following three challenges deserve attention: the inconsistent
    and complicated national and international regulatory landscape, cybersecurity
    issues caused by the exposure of internet vulnerabilities [73], and the difficult
    integration with new technologies for the legacy systems that require a lot of
    modifications [74]. Moreover, a wide variety of applications may create selection
    challenges for enterprises. It is expected that future RegTech applications can
    upgrade compliance processes to be more streamlined with more automation, standardization,
    and simplified interpretation. But standardization is only possible with the long-term
    involvement of relevant governance bodies. For short-term or mid-term solutions,
    there are limited options. The industry can proceed by: establishing a collaborative
    relationship among financial institutions, technology providers, and regulatory
    bodies to identify the specific challenges faced by compliance applications. creating
    regulatory sandboxes or innovation hubs that allow for better understanding of
    the limitations and challenges while providing an opportunity to refine and improve
    them based on real-world feedback. issuing clear guidance on compliance requirements
    and expectations, taking technological advancements into account. initiating pilot
    programs or demonstrations to showcase the effectiveness of compliance applications.
    regularly monitoring the evolution of compliance applications and providing timely
    updates to regulations and compliance requirements. It is expected that most of
    these steps will be automated and data-reliant in future RegTech software solutions.
    5. RegTech Applications in Non-Financial Sectors RegTech was initially adopted
    in the financial industry, but it is gaining more and more attention in other
    sectors. RegTech aims to identify fraud in all industries. Increasing fraud occurrences
    pose significant challenges to regulators’ authority and cause serious consequences
    or threats to consumers’ safety. Fraud may result in the loss of capital in the
    financial sector and the loss of lives in non-financial industries. Hence, fraud
    detection and risk prediction are even more important in non-financial sectors.
    5.1. Agriculture Sector The agriculture industry faces many regulatory challenges,
    including environmental regulations, food safety regulations, and supply-chain
    transparency requirements. RegTech solutions can help companies comply with these
    regulations and improve their overall operations. Effective RegTech solutions
    will likely improve compliance with agricultural regulations by automating and
    streamlining processes for accurate data collection, analysis, and real-time reporting.
    For example, RegTech can monitor compliance with food safety regulations, track
    the use of pesticides and other chemicals, ensure that farmers meet environmental
    standards, improve traceability and transparency in the supply chain, and enhance
    risk management. The adoption of blockchain technology can track the movement
    of agricultural products from farm to market, providing a tamper-proof record
    of the products’ journeys and ensuring compliance with regulations related to
    food safety [75]. A good example is Aglive, a cloud-based platform that provides
    traceability and compliance solutions for the agriculture sector. It allows farmers
    and producers to record and manage data related to animal health, welfare, and
    movements, as well as compliance with regulations around food safety and animal
    welfare. Similarly, TR4 Hub is a traceability platform developed specifically
    for the banana industry in Australia, allowing producers to track the movement
    of bananas from farms to retailers and enabling rapid response to any outbreaks
    of banana plant disease. Another traceability platform is FreshChain, which uses
    blockchain technology to track the movement of fresh produce through the supply
    chain. It allows producers to record and manage data related to product quality,
    safety, and compliance. Other traceability platform solutions perform similar
    functions and advantages, such as BeefChain, Farmless, Livestock Data Link, AgriChain,
    HarvestMark, AgriLedger, OriginTrail, Farmforce, SmartAgriHubs, Agrivi, Farmbook,
    AgUnity, MUIIS, Bext360 (US), AgroTrace (Philippines), AgriChain (EU), FieldSense
    (EU), Smartbow (EU, livestock), etc. All the above solutions address, to varying
    degrees, parts of or the whole stages of supply-chain tracking for agricultural
    products by adopting technologies such as blockchain, cloud computing, IoT, big
    data analysis, or tangible identification solutions such as QR codes or RFID.
    The digitalization of agricultural supply-chain tracking has gained varying degrees
    of popularity and application. Some of these solutions focus on the internal data
    management of farms or the tracking record from the perspective of end consumers
    for provenance, and others focus on the traceability of the whole supply chain
    from farm to fork to comply with regulations. But this is not enough for a mature
    application that can satisfy all stakeholders in agriculture supply-chain tracking.
    A few applications have added the timely supervision of regulators to the whole
    picture. There might be data available for supervisors to view, but few solutions
    have an architecture design with direct intervention mechanisms or real-time action
    windows open to them. In the context of international market expansion of agricultural
    products, given the complexity, diversity, and variability of international laws
    and regulations, future applications need to value the in-system supervision of
    the regulators. RegTech in agriculture is still in its early stages of development,
    and several challenges need to be addressed for its widespread adoption. Limited
    data availability: RegTech solutions rely on data to provide insights and automate
    compliance processes. However, data can be limited or fragmented in agriculture,
    making it difficult to develop effective RegTech solutions. For example, data
    on weather patterns, soil conditions, and crop yields may be available from different
    sources, making it challenging to integrate and analyze the data [76,77]. Weather
    pattern data may be obtained from local weather stations, while soil condition
    data is collected from soil testing laboratories, and remote sensing techniques
    capture information about soil composition. Additionally, crop yield data are
    sourced from agricultural surveys, farm management systems, and market reports.
    These diverse sources lead to data fragmentation, where information is scattered
    across multiple platforms, formats, and sources. High implementation costs: Implementing
    RegTech solutions can be expensive and may be prohibitive for smaller farms. To
    gather the required data, the farm would need to invest in various sensors, which
    can be quite costly considering the scale of deployment across different fields
    or crops. In addition, acquiring and maintaining the necessary hardware, software,
    and connectivity infrastructure can add to the expenses. Moreover, collecting
    and analyzing the data may involve utilizing cloud-based storage, advanced analytics
    platforms, and data integration tools. These technologies often come with subscription
    fees or licensing costs, which can be prohibitive for smaller farms with limited
    budgets. Furthermore, farmers or farm managers may need training to operate the
    sensors, interpret the data, and make informed decisions based on the insights
    obtained, which requires additional expenses for professional training or hiring
    consultants. Lastly, sensors may require software updates and potential system
    repairs that incur additional costs. This can limit the adoption of RegTech solutions,
    particularly in developing countries or regions where agriculture is a significant
    source of income [78]. Lack of standardization: Agriculture is a complex industry,
    with different crops, farming practices, and regulations varying by region and
    country. Different crops have unique growth requirements, susceptibility to pests
    and diseases, and market demands. For example, if there are two regions and region
    A specializes in wheat production and follows conventional farming practices,
    the local regulatory authority requires farmers to adhere to specific guidelines
    for pesticide usage, irrigation methods, and soil conservation. In contrast, if
    region B focuses on vineyard cultivation and practices organic farming methods,
    the regulatory framework in this region places strong emphasis on organic certification,
    water conservation, and biodiversity protection. Farms in Region B need to keep
    detailed records of crop inputs, such as organic fertilizers, compost, and pest
    control products, to secure organic certification. This can make it challenging
    to develop RegTech solutions that are widely applicable and can be scaled across
    different contexts [77,79]. Limited understanding and awareness: Many farmers
    and agricultural stakeholders may not be aware of the potential benefits of RegTech
    solutions [76,78] or may lack the technical expertise to implement and use them
    effectively [78,80]. A small family-owned farm in a rural area with tight budgets
    may be reluctant to allocate resources towards technology adoption if farmers
    are not aware of the potential return on investment or long-term benefits. The
    farmers have been using traditional farming practices for generations and are
    not familiar with modern technologies or digital solutions. They may also lack
    the necessary skills and knowledge to set up and operate the required hardware,
    software, and connectivity infrastructure and struggle with data collection, analysis,
    and interpretation. This can limit the adoption and impact of RegTech solutions
    in agriculture [81]. Regulatory barriers: In some cases, regulations may not allow
    the use of certain technologies or may require manual processes that cannot be
    automated with RegTech solutions. For example, drones equipped with advanced imaging
    sensors and artificial intelligence algorithms can efficiently identify pest infestations,
    monitor crop health, and optimize irrigation practices. However, due to concerns
    related to airspace regulations, privacy, or safety, the regulatory framework
    in a particular region may prohibit or limit the use of drones in agriculture.
    In addition, some agricultural regulations may require manual processes or paper-based
    record-keeping for compliance purposes. For instance, a regulation might require
    farmers to manually record the use of certain pesticides or the application of
    specific fertilizers, which poses challenges when integrating RegTech solutions
    that automate data collection, analysis, and reporting. This can limit the potential
    impact of RegTech in agriculture. 5.2. Manufacturing Manufacturing companies face
    a range of regulatory requirements, such as environmental regulations, health
    and safety standards, labor laws, and product quality standards. The compliance
    cost is a heavy burden for manufacturers. The World Bank reports that about 8%
    of the gross national product is spent on regulatory compliance annually [82].
    The National Association of Manufacturers (NAM) also reports that the U.S. company
    spent $9991 on average per employee per year to comply with federal regulations
    in the USA. But it cost each manufacturer almost $19,654, which is two times the
    average, and the smaller producers’ costs could be close to $35,000, which is
    almost three times more than the average [83]. Fulfilling compliance requirements
    is expensive for manufacturers, who will pay more if they fail to meet regulatory
    guidelines, as non-compliance can cost up to $14.82 million for manufacturers,
    according to the study conducted by the Ponemon Institute [84]. With the help
    of RegTech, which can facilitate the automation and precise interpretation of
    ever-changing compliance guidelines, manufacturers can increase efficiency in
    the compliance process and reduce labor costs significantly. They can automate
    data collection, analysis, and reporting processes, enabling real-time monitoring
    of compliance status and facilitating timely corrective actions. Moreover, workplace
    injuries are another high cost for manufacturers related to occupational health
    and safety compliance. RegTech can minimize this loss by specializing in risk
    management that monitors employee behavior and workplace conditions. Potential
    dangers can be identified by analyzing incident data to improve processing procedures
    by reducing weak points. For example, manufacturers can apply pressure-sensitive
    tags to “circumvent recurring blockage of their stamping equipment by examining
    the data sets presented for embossing” [82]. In addition, manufacturers must adhere
    to stringent regulations and standards to ensure product safety and quality. RegTech
    solutions can automate product testing, quality control, and traceability processes.
    By integrating data from various sources, such as IoT devices or quality management
    systems, RegTech tools provide real-time visibility into production processes
    and enable proactive measures to maintain compliance with relevant standards.
    Moreover, manufacturers can minimize the potential impact on their operations
    and keep a good reputation through supply-chain compliance management and product
    quality control by proactively addressing compliance risks. Manufacturers often
    have complex supply chains involving multiple suppliers and subcontractors. Effective
    supply-chain management directly impacts the manufacturer’s efficiency in production.
    RegTech solutions can assist them in automating due diligence processes and monitoring
    suppliers’ compliance status. By enhancing transparency and traceability, RegTech
    enables manufacturers to ensure that their suppliers meet regulatory requirements,
    such as ethical sourcing or product safety standards. By taking advantage of technology
    and automation, RegTech solutions enable manufacturers to navigate complex regulatory
    landscapes, enhance compliance efficiency, and mitigate compliance risks, ultimately
    contributing to improved operations, reduced costs, and increased regulatory effectiveness.
    5.3. Healthcare The healthcare industry is the most attractive target for cyberattacks
    because healthcare records contain sensitive personal data and important financial
    information that are valuable resources for criminals. In addition, during the
    pandemic, more healthcare professionals worked remotely, which further increased
    the vulnerability of cybersecurity. Moreover, healthcare workers’ education and
    awareness of cybersecurity risks need to be improved. These issues can be solved
    by implementing standardized security protocols such as “Single Sign-On Software”,
    “risk-based authentication policies, and annual cybersecurity training for healthcare
    professionals” [85]. In addition, the healthcare fraud issue is regarded as a
    top priority by The National Money Laundering Risk Assessment (NMLRA) [86]. According
    to this report, 345 people were charged in healthcare fraud schemes involving
    over $6 billion in 2020, the largest fraud in history. Applications of RegTech
    such as AML, KYC, and anti-fraud detection can be adopted in the risk prediction
    of Medicare fraud. In addition, RegTech services provided by Abside RegTech and
    6Clicks can track current and upcoming regulations for the medical industry [85].
    In addition, the highly digital transformation of the healthcare industry has
    also brought new issues, such as data privacy. To address this issue, Theta Lake
    uses AI to identify risks such as video and voice content by implementing a data
    privacy impact assessment, which can standardize health data protection [85].
    5.4. Logistics RegTech solutions can enhance tracking and traceability capabilities
    in logistics operations. Through technologies such as RFID (Radio Frequency Identification)
    and IoT, RegTech tools enable real-time visibility of shipments, inventory, and
    transportation conditions. Logistics companies must comply with regulations governing
    transport operations and driver safety. RegTech solutions can automate driver
    compliance checks, including driver qualifications, licensing, hours of service,
    and vehicle maintenance records. 5.5. International Trade and Business RegTech
    is crucial in facilitating compliance and streamlining international trade and
    business processes. It can benefit international trade and business in the following
    aspects: Trade Compliance Automation: The complex international political environment
    brings significant regulatory challenges to cross-border trades [87] that need
    to comply with regulations imposed by governments and international bodies. Providing
    real-time monitoring and screening of parties involved in trade transactions against
    sanctioned lists or restricted entities can ensure compliance with export control
    requirements, mitigate reputational risks, and help businesses avoid penalties.
    The trade compliance processes can be automated by digitizing documentation, automating
    data collection, and providing real-time updates on regulatory changes to achieve
    a simplified compliance process and smoother cross-border transactions with reduced
    error. Cross-Border Payments: The settlement of payments for international trade
    carries a high risk. In international trade, the consignee often refuses to pay
    the final payment for various reasons. This problem can be avoided to a certain
    extent by using smart contracts [88]. Efficient Documentation Management: International
    trade involves extensive documentation, including contracts, invoices, bills of
    lading, and certificates of origin. Proper digitalization reduces reliance on
    physical paperwork [89], improves accessibility, and facilitates efficient sharing
    of documents with trading partners and regulatory authorities. It also ensures
    proper record-keeping, easy retrieval, and compliance with document retention
    requirements. For instance, RegTech can assist in classifying products more accurately
    in terms of their harmonized system (HS) codes and automatically calculating customs
    duties to minimize errors, improve efficiency, and ensure compliance with tariff
    regulations. Implementing RegTech in international trade and business helps businesses
    navigate complex regulatory landscapes, streamline compliance processes, mitigate
    risks, and enhance efficiency, facilitating smoother international trade transactions
    and overall business success in the global marketplace. 5.6. Challenges in Non-Financial
    Sectors Based on the above investigation of RegTech applications, some common
    challenges associated with a range of non-financial industry sectors are identified:
    Lack of Customization: Existing RegTech applications, derived from the financial
    industry, may not be readily applicable to the wide range of non-financial regulations
    to cater for the specific compliance needs of different sectors, which will create
    gaps in compliance coverage and hinder effective regulatory compliance in specific
    industries. Complex and Evolving Regulatory Landscape: Keeping pace with the evolving
    regulatory landscape is challenging as regulations of various industries can be
    complex and rapidly changing, which leads to difficulties in staying up to date
    with regulatory changes, gaps in compliance coverage, and potential non-compliance
    risks. Limited Adoption and Awareness: RegTech adoption in non-financial sectors
    is relatively low, and the limited awareness of available RegTech solutions may
    result in a lack of understanding about these technologies’ potential benefits
    and limitations. Integration Challenges: Many non-financial organizations have
    legacy systems that were not designed to accommodate modern RegTech solutions.
    Integrating new RegTech applications with existing infrastructure can be challenging.
    It requires additional investments in technology and staff training and may also
    cause disruptions during implementation. In addition, disparate systems with different
    data sources collected from non-financial entities are not easily integrated,
    which presents great challenges to the existing applications in effectively aggregating,
    normalizing, and analyzing data. Standardization: The implementation of RegTech
    in the financial sector is comparatively advanced and well-established, with hundreds
    of applications providing relatively complete functional modules and practical
    technical applications. However, it is still in the initial application stage
    in other sectors, such as agriculture, the food industry, supply-chain management,
    etc. No matter how developed they are, on-shelf applications lack uniformity and
    standardization. To address these challenges, RegTech solution providers must
    recognize non-financial sectors’ diverse compliance requirements and develop customized
    solutions. Collaboration between RegTech providers, regulators or supervisors,
    regulatory producers, and industry stakeholders can help foster innovation and
    awareness of effective compliance solutions. Additionally, solution providers
    should consider the development based on specific industry requirements and seek
    integration strategies that ensure seamless data flow and interoperability with
    existing systems. 6. Comparing FinTech and Different RegTech In this section,
    we discuss how different non-financial sectors differ but can still benefit from
    or evolve to improve compliance and monitoring. Although RegTech is derived from
    the financial sector and has made good progress in that field, the development
    in other sectors is still in its infancy. The application of RegTech in the non-financial
    sectors has much to learn from the valuable experience of the financial sector.
    It is also important to note that there are many differences in the non-financial
    sectors in terms of product or service features, business focus, compliance focus,
    value chain, and scope of compliance. The following aspects have been identified
    that deserve further attention in future framework designs, as shown in Table
    3: Table 3. Comparison of Differences Between Financial Industry and Non-Financial
    Industries. 6.1. Different Business Focuses All actions in the financial sector
    revolve around trading. It includes the object of the transaction, the instruments
    used for the transaction, the medium, and how the transaction is completed. In
    the current highly digital age, most transactions are performed through electronic
    devices and networks. This feature dictates that all transactions are traceable
    and that any transactional behavior leaves a footprint online. The application
    of regulatory technology tools has made tracking and monitoring transactions easy,
    and data access is relatively simple. The supervision procedures also focus on
    transaction-related activities. In the non-financial sector, transactions are
    only a small part of the value chain. The core lies in the products or services
    and the humans who operate the business. The manufacturing entities aim to sell
    as many products as possible. But the products can only be sold consistently if
    they meet the buyer’s quality standards and the relevant regulatory requirements,
    such as Work Health and Safety (WHS), industry certification, government regulations,
    and even the regulations of the target markets for the exported products. Failure
    to meet compliance requirements at any point or in any way could result in the
    product not being sold. It is particularly high-risk for sellers in international
    trade. Regulators will issue industrial certificates to those who comply with
    the regulations. The company must obtain these certificates to sell its products
    properly. 6.2. Different Compliance Focus Compliance in the financial industry
    mainly lies in the legitimacy of the sources, paths, and destinations of transactions
    as well as the identities of clients. However, compliance in other fields, such
    as manufacturing, is quite different. Producers may do anything to obtain regulatory
    certificates, such as falsifying data. The role of regulation is to avoid these
    irregularities and the potentially serious consequences they may entail. Furthermore,
    compliance involves more factors in the latter, including raw materials, production
    processes, production equipment, the environment, and the relevant production
    operators that must all comply with the laws and regulations. In the manufacturing
    sector, each qualified product needs to be processed through a series of processing
    operations, from the raw material’s processing to the assembly of the finished
    product. These procedures may involve one or multiple manufacturers depending
    on the product type, and each manufacturer has different management abilities
    and processing standards as per the industrial requirements or buyer’s standards.
    The compliance of the finished product depends on the overall compliance of the
    whole supply chain. It includes not only the processing procedures from upstream
    to downstream but also the laborers hired by different entities, who may vary
    in enterprise culture, expertise in compliance, and the relevant technological
    equipment. All these will positively or negatively affect the ultimate compliance
    degree of the finished product. 6.3. Different Audit Sequences In finance, it
    may be possible to do something first and audit later. It means that the regulator
    will come to audit the legality of the transaction after it has been completed,
    while in the non-financial sectors, the relevant certification must be obtained
    before the product or service can be sold on the shelves. 6.4. Value Chain Compliance
    is more complicated in non-financial sectors due to the longer value chain, the
    complicated processing procedures, and the variety of environments and business
    focuses (see Table 2). For example, the manufacturing industry focuses on the
    processing of materials and supply-chain management (SCM). As the products are
    involved in multiple manufacturing processes, compliance must be achieved within
    the whole supply chain, from the raw material to the final finished product. Outsourcing
    materials may bring risks without proper supplier management. Hence, manufacturers
    need to play a supervisor’s role before products reach consumers, and each process
    is as important as the final one. Furthermore, several features exist in the non-financial
    sector but are absent in finance: Industrial Equipment: Industrial equipment is
    unnecessary in the financial industry, but it is indispensable in most physical
    industries. Physical Safety of Humans: Compliance in the financial sector is less
    concerned with people’s physical health and safety, which is considered as important
    as product quality in non-financial fields due to its huge impact. Field Data:
    There is no field data in finance. However, it is a critical source of information
    for non-financial entities. Collecting field data is more challenging because
    of extreme weather and human interference. Logistics: Logistics is only available
    in non-financial industries to contribute to the value-adding process. Thus, logistics-relevant
    activities are also within the scope of compliance, such as the truck driver’s
    behavior, the internal environment of containers in transportation, etc. 6.5.
    Virtual vs. Physical World The financial industry relies on the internet network,
    and most business activities are conducted online in cyberspace. On the contrary,
    the businesses of non-financial sectors are conducted in the physical environment.
    In contrast, the activities also need the internet for communication, documentation,
    and payment, but most value-adding processes take place offline, in the field,
    in workshops, or at other workplaces. The corresponding compliance scope of products
    or services covers humans, machines, materials, procedures, environments, and
    even supply-chain management. 6.6. Human Roles The activity is more of a peer-to-peer
    mode in the financial field. However, the roles of humans play differently in
    the non-financial industries, and it is difficult to avoid human interference
    in real-world activities that affect the various perspectives in the compliance
    process, which causes compliance issues. For example, humans operate industrial
    equipment, do quality control, inspections, and packaging, do on-site audits,
    and may have close contact with products during processing. All these processes
    that require human operation or control can create compliance issues, as the complexities
    of human nature can have positive or negative effects and outcomes that are hard
    to control with digital devices. The supervision of non-financial sectors involves
    more aspects such as equipment, environment, humans, materials, and even the policies
    of entities. By comparison, the supervision in finance focuses on the data, which
    is in large volume and might be available online in most cases. But supervision
    in other industries includes both online and offline activities, which make it
    more difficult to collect and integrate data. 7. RegTech and Industrial Internet
    of Things So far, we have discussed the current status of RegTech developments,
    their underlying computing technologies, and how RegTech functions in different
    industries. In this section, we present a possible future direction for RegTech.
    We present the basic components of RegTech in terms of how data propagate through
    various phases of a RegTech solution and then discuss the potential issues and
    usability of IIoT in RegTech. 7.1. The Core of RegTech The data-relevant treatment
    is the focal objective of the entire regulation compliance process, which involves
    data from both regulators and regulated entities. Due to the existing legacy systems,
    the integration of varying user systems is the key to large-scale RegTech adoption.
    Such integration must be low-cost and involve minimal disruptions to operations
    and existing practices. RegTech is expected to gain unprecedented popularity if
    its implementation can achieve this goal with the lowest cost in terms of time
    and monetary investment and, at the same time, help companies operate and run
    more efficiently under the premise of protecting enterprise data. It is suggested
    that the general activities of RegTech are data collection, data processing, data
    analysis, and data visualization [5]. Data collection is a continuous, repeating
    process that involves quality management internally and regulatory compliance
    externally. Considering the privacy of data and the protection of organizations’
    interests, a screener is necessary to be designed in the data collection process
    to make sure that only the compliance-related required data are retrieved. In
    the traditional regulation audit process, regulation-related data are prepared
    in advance by the organizations on paper or digital devices. Collecting authentic
    data is a significant challenge for supervisors, as these documents can be easily
    forged or tampered with. Data processing is the step where the authentication
    of data should be verified and the fake, invalid, and irrelevant data should be
    cleared. Data analysis is the process where the generated data are matched with
    the standard of regulatory rules, and a positive or negative decision is made
    along with it. Data visualization is the proper presentation of data, showing
    the result of data analysis in a readable and easy-to-comprehend format. Data
    storage, or data archiving, is the definitive treatment of data. In this step,
    all the data should have clear identification, and they deserve various destinations
    as per their categories. In terms of complexity, the most time-consuming procedure
    is data processing. There may be some additional steps, such as data storage or
    archiving. The development of regulatory technologies benefits some key drivers
    that are relevant to data processing. It is mentioned that the following data
    issues in the financial sector, to some extent, drive regulation technology forward
    [5]: Unstructured Data: Data is collected from various sources within organizations
    without a unified format, so it is time-consuming for regulators to aggregate
    information and identify risks. The complexity of Received Data: The increasing
    regulations, which are increasingly complex, challenge the expertise of professionals
    to make timely and correct judgments or recommendations. New Risks Caused by the
    Dynamic Development of Entities: Migrating financial companies to virtual companies
    may bring new potential risks to the industry in terms of regulation and management.
    We can conclude that the financial industry and other industries are facing these
    problems, too. Although other industries started later than the financial sector,
    the issues and needs in these regulatory activities are similar. Other industries
    even face more problems. A major difference between the financial sector and the
    other physical industries is that there needs to be more filed data in the former,
    but field data in the latter is one of the main data sources. 7.2. The Need for
    IIoT in RegTech To improve information transparency from the perspective of regulators,
    the implementation of IIoT is necessary, especially for industries involving large
    amounts of field data. Not only can IoT applications free human hands from data
    collection, but the data collected automatically by the devices also avoids possible
    data falsification and human errors. For example, operators may make up fake data
    to cover up mistakes they make in the processing procedures. Moreover, the significant
    information asymmetry between firms and regulators causes extra costs for regulators
    to supervise. It is identified by Gao, Ling, and Liu [90] that social media can
    promote the information disclosure of non-compliance behaviors based on the case
    analysis of environmental incidents. However, it is important to note that media
    information is also sourced indirectly from secondary sources, and media disclosures
    are processed and guided by subjective language or concepts rather than objective
    and neutral ones. Data collected by the IoT is more objective and unbiased in
    the absence of malicious human intervention. The adoption of IoT can improve information
    transparency, save labor in data collection, reduce human errors, and solve the
    information asymmetry issue between regulators and producers. 7.3. Data Security
    and Access Control Information privacy is a significant point that needs to be
    addressed. Psychologically, it is human nature to be reluctant to make public
    disclosures [91]. From a business perspective, companies may be concerned about
    their trade secrets being leaked. Implementing IoT for data collection can provide
    a good database for maximum data sharing, and at the same time, the privacy of
    enterprises should be properly protected. In addition, the threat to cyber security
    is another serious problem in the existing network [92,93,94,95]. Data sharing
    should be conducted within safe networks for both regulators and regulated entities.
    Blockchain, defined by Don and Alex Tapscott [96] as “an incorruptible digital
    ledger of economic transactions that can be programmed to record not just financial
    transactions but virtually everything of value”, is one of the potential solutions
    to this issue due to its significant advantages or features such as transparency,
    immutability, and trustworthiness with high reliability [97,98,99]. With the advantages
    of the technology, blockchain is identified as an effective tool in the bill operation
    of commercial banks through building a decentralized digital billing system to
    decrease bill-forgery risk and credit risks, as well as in the cross-border payment
    operation to save service charges and transfer time compared with the traditional
    payment method such as the SWIFT system [100]. Similarly, blockchain technology
    can be used in RegTech applications to ensure data security and smooth information
    communication between stakeholders. In addition to adopting blockchain technology
    to protect data privacy and security, another effective way is to set proper access
    control as agreed upon by all stakeholders who have access to relevant data pools.
    For example, Attribute-Based Encryption (ABE) is the best way to apply access
    control [101,102,103]. It is also taken as a useful technique to solve the issue
    of “data privacy and fine-grained access control” in popular cloud storage systems
    [104]. By taking advantage of this technology, access to the relevant data can
    be restricted to desired groups of users only through data encryption and authorized
    decryption [105]. This will prevent data breaches in daily compliance activities
    and protect the producer’s commercial confidentiality. The combination of ABE
    and blockchain (as shown in Figure 5) can make data sharing flexible and secure.
    Figure 5. Regulatory Supervision Framework in Non-Financial Sectors. 7.4. Data
    Storage and Archiving The daily collected data needs to be stored securely after
    being processed. Some data may need to go to the blockchain after processing,
    while others may be stored on a local server. Data treatment is different in terms
    of importance. Furthermore, centralized storage methods such as cloud storage
    and decentralized storage is another potential solution for dealing with the massive
    amounts of data generated daily. Data is more secure to store on blockchain networks.
    But the limitations of blockchain technology, such as scalability and availability
    in data processing, retrieval, and storage [106], restrain its application to
    large files or document storage. The Interplanetary File System (IPFS), which
    “identifies, verifies, and transfers files relying on the cryptographic hashes
    of their contents” [107], is a content-addressable distributed file storage platform
    [108] with a decentralized storage protocol. It is a potential solution to address
    excessive file redundancy when using blockchain technology. The IPFS system can
    allocate a unique hash for each file stored by users who have access to their
    corresponding files via the hash address. Data owners can encrypt their data before
    storing it on the IPFS platform. For example, Sun and Yao discussed the implementation
    of IPFS in medical data storage to control the access to the patient’s medical
    records of various users [109]. They indicate that medical data can be encrypted
    based on attributes and determine the attributes of users by matching the private
    key related to their attributes with the access policy set in advance. The users
    can have secured data access by matching the private key related to the users’
    attributes with the access policy set in advance and related to the ciphertext.
    They also advocate that blockchain can record medical data’s storage and search
    processes, providing both tracking of data sources and data retrieval records.
    In addition, IPFS is a good way to archive data. Centralizing data storage on
    a cloud server is cost-effective and convenient for data retrieval for companies.
    However, the failure of one cloud model may lead to the unavailability of the
    whole cloud server. In contrast, the IPFS has no single point of failure without
    a central server, and the data are stored in duplicate copies in different places
    worldwide [104]. In short, the regulated entities may choose the most suitable
    data storage mode—cloud storage or distributed storage—as shown in Figure 5. 7.5.
    Potential IIoT-Based Regulatory Supervision Framework The presence of supervisory
    activity is a sign of the regulator’s distrust of the regulated entities. Traditionally,
    the supervisors may need to audit producers on site to confirm their actions comply
    with the regulatory requirements. But it is more difficult to ascertain compliance
    immediately after such spot checks. Although many of the producers follow the
    rules, some of them can violate them to reduce costs or pursue higher profits.
    One possible solution is real-time supervision. There are two ways to conduct
    it. One is that the producers can proactively report to regulators or supervisors.
    The other way is that regulators can passively acquire the reports. From the regulators’
    perspective, the former way has prominent pros such as lower cost and high efficiency,
    but the data might be tampered with as they are second-hand sources. The disadvantages
    of the latter approach are higher costs and inefficiency. However, the data are
    authentic (see Figure 5). Regulators want authentic data, while supervision needs
    to be cost-effective and efficient. To achieve this, the ideal solution would
    be to map real-world production processes onto the web applications with technologies
    such as digital twins [110]. This would allow for real-time monitoring and management,
    which could become as easy as supervision in the financial sector. However, it
    is difficult to achieve this in all industries worldwide at the moment. Nevertheless,
    there are a few options that can be tried to become closer to this goal: IoT-based
    Data Collection: this not only saves labor costs for producers for data collection
    by replacing traditional manual work but also increases the transparency of the
    process. Necessary Data Verification: this measure prevents data fraud risks such
    as IoT devices being damaged or tampered with by humans. It can be achieved by
    introducing AI and ML technologies to assist decision-making after certain algorithms
    are trained [111]. On-site Audit: Activities in the non-financial sectors involve
    fieldwork. A proper on-site audit is necessary, as supervisors can only partially
    rely on online supervision. For example, pesticide spraying is important for the
    cultivation of crops because it is effective against pests and diseases. However,
    excessive pesticide use is a serious threat to human health, and therefore precise
    control of pesticide doses is very important. It is therefore important to check
    records of pesticide purchases and actual use. Real-Time Supervision: Real-time
    monitoring in some critical procedures with automatic reporting to regulators
    can help manufacturers comply with regulations with less labor cost in data collection
    as well as establish a good reputation. Machine learning can help companies eliminate
    potential risks by using daily data to predict their occurrence in advance. On-premises
    real-time monitoring is difficult, as companies would be reluctant to set up such
    infrastructure without any benefit. However, manufacturers can also benefit if
    the IIoT is deployed for both their own production and compliance monitoring.
    While these tools can solve some problems, they can also create new ones. For
    example, the daily collected data are of high volume, and how to safely process,
    share, and store it is a significant issue. The algorithms training for data verification
    takes time and money before they can make precise judgments. The frequent on-site
    audit is expensive for supervisors and a burden for producers. The regulator needs
    to balance the frequency and cost of data verification and its negative impact
    on industrial innovation. Real-time supervision may result in data privacy issues.
    8. Conclusions While the adoption of RegTech in the financial sector is relatively
    mature, its implementation in the non-financial industry is still in its early
    stages. There are already a variety of applications in various sectors that are
    experimenting with these technological tools. However, the non-financial sectors
    are more pragmatic and have more diverse and complex business environments. RegTech
    applications need to consider these industrial features at the initial framework
    stage to meet the industry’s specific needs. The following aspects are identified
    as the most challenging points to be considered for future technological development
    or research: Real-time reporting for agricultural products is not easy due to
    diverse data sources and data collection environments; complete supply-chain traceability
    from raw materials to end products in manufacturing is challenging because of
    the complex value chain processes and the different interests of various stakeholders;
    the high level of privacy protection in the healthcare industry is rather critical
    for patients who are exposed to high risks without proper personal data protection;
    and supply-chain compliance in international trade and business is significantly
    challenged by the ever-changing international regulations, policies, and political
    situations. In addition, humans continue to play a prominent role in the non-financial
    sectors because business operations in many industries are difficult to operate
    without human intervention, thus opening many possibilities for human factors
    to interfere with compliance outcomes. Moreover, RegTech development should consider
    the cost of implementation and the extent of applicability to various businesses
    without adding an extra burden or disrupting existing processes and practices.
    When considering the adoption of compliance solutions, companies should assess
    their private business requirements as well as the compatibility of their existing
    equipment and make sure training and support are available to their employees
    before choosing the most suitable and affordable application. Finally, the development
    of RegTech requires collective efforts from the government, regulators, and industries
    through Research and Development for the benefit of all in the value chains. These
    aspects are worthy of further study by researchers, industrial professionals,
    regulators, and organizations. Funding This research received no external funding.
    Data Availability Statement Not applicable. Conflicts of Interest The authors
    declare no conflict of interest. References Grassi, L.; Lanfranchi, D. RegTech
    in public and private sectors: The nexus between data, technology and regulation.
    J. Ind. Bus. Econ. 2022, 49, 441–479. [Google Scholar] [CrossRef] Firmansyah,
    B.; Arman, A.A. A Systematic Literature Review of RegTech: Technologies, Characteristics,
    and Architectures. In Proceedings of the 2022 International Conference on Information
    Technology Systems and Innovation (ICITSI), Bandung, Indonesia, 8–9 November 2022;
    pp. 310–315. [Google Scholar] Butler, T. Towards a standards-based technology
    architecture for RegTech. J. Financ. Transform. 2017, 45, 49–59. [Google Scholar]
    Gasparri, G. Risks and Opportunities of RegTech and SupTech Developments. Front.
    Artif. Intell. 2019, 2, 14. (In English) [Google Scholar] [CrossRef] [PubMed]
    [Green Version] Dziawgo, T. Supervisory Technology As a New Tool for Banking Sector
    Supervision. J. Bank. Financ. Econ. 2021, 15, 5–13. [Google Scholar] [CrossRef]
    Schueffel, P. Taming the beast: A scientific definition of fintech. J. Innov.
    Manag. 2016, 4, 32–54. [Google Scholar] [CrossRef] Wilkins, C. Financial Stability
    Implications from Fintech: Supervisory and Regulatory Issues that Merit Authorities’
    Attention; Financial Stability Board: Basel, Switzerland, 2017. [Google Scholar]
    SafariCom. SafariCom. Available online: https://www.safaricom.co.ke/personal/m-pesa/getting-started
    (accessed on 15 July 2023). Puschmann, T. Fintech. Bus. Inf. Syst. Eng. 2017,
    59, 69–76. [Google Scholar] [CrossRef] Suryono, R.R.; Budi, I.; Purwandari, B.
    Challenges and Trends of Financial Technology (Fintech): A Systematic Literature
    Review. Information 2020, 11, 590. [Google Scholar] [CrossRef] Call for Input:
    Supporting the Development and Adoption of RegTech. Available online: https://www.fca.org.uk/news/news-stories/call-input-supporting-development-and-adoption-regtech
    (accessed on 8 June 2023). FinTech, R. SupTech: What They Mean for Financial Supervision.
    2017, 20, 20. Available online: https://www.torontocentre.org/videos/FinTech_RegTech_and_SupTech_What_They_Mean_for_Financial_Supervision.pdf
    (accessed on 29 July 2023). Billington, C.; Lee, H.L.; Tang, C.S. Successful strategies
    for product rollovers. MIT Sloan Manag. Rev. 1998, 39, 3. [Google Scholar] Teichmann,
    F.; Boticiu, S.; Sergi, B.S. RegTech–Potential benefits and challenges for businesses.
    Technol. Soc. 2023, 72, 102150. [Google Scholar] [CrossRef] Narang, S. Accelerating
    Financial Innovation Through RegTech: A New Wave of FinTech. In Fostering Innovation
    and Competitiveness with FinTech, RegTech, and SupTech; IGI Global: Hershey, PA,
    USA, 2021; pp. 61–79. [Google Scholar] Johansson, E.; Sutinen, K.; Lassila, J.;
    Lang, V.; Martikainen, M.; Lehner, O.M. Regtech-a necessary tool to keep up with
    compliance and regulatory changes. ACRN J. Financ. Risk Perspect. Spec. Issue
    Digit. Account. 2019, 8, 71–85. [Google Scholar] Yang, D.; Li, M. Evolutionary
    approaches and the construction of technology-driven regulations. Emerg. Mark.
    Financ. Trade 2018, 54, 3256–3271. [Google Scholar] [CrossRef] Umalkar, M. RegTech:
    An untapped opportunity. J. Digit. Bank. 2021, 6, 72–82. [Google Scholar] Turki,
    M.; Hamdan, A.; Cummings, R.T.; Sarea, A.; Karolak, M.; Anasweh, M. The regulatory
    technology “RegTech” and money laundering prevention in Islamic and conventional
    banking industry. Heliyon 2020, 6, e04949. [Google Scholar] [CrossRef] Buckley,
    R.; Arner, D.; Barberis, J. The Emergence of Regtech 2.0: From Know Your Customer
    to Know Your Data. J. Financ. Transform. 2016, 44, 79–86. [Google Scholar] [CrossRef]
    RegTech Companies. Available online: https://www2.deloitte.com/lu/en/pages/technology/articles/regtech-companies-compliance.html
    (accessed on 17 April 2023). “REGTECH100-2023”, in “REGTECH100”, 2023. Available
    online: https://fintech.global/regtech100/wp-content/uploads/2022/12/RegTech100-Report-2023.pdf
    (accessed on 16 July 2023). Butler, T.; O’Brien, L. Understanding RegTech for
    digital regulatory compliance. Disrupting Financ. FinTech Strategy 21st Century
    2019, 85–102. [Google Scholar] Yan, P.; Crane, M.; Brennan, R. GDPR Compliance
    tools: Best practice from RegTech. In Proceedings of the Enterprise Information
    Systems: 22nd International Conference, ICEIS 2020, Virtual Event, 5–7 May 2020;
    Revised Selected Papers. Springer: Berlin/Heidelberg, Germany, 2021; pp. 905–929.
    [Google Scholar] Papantoniou, A.A. Regtech: Steering the regulatory spaceship
    in the right direction? J. Bank. Financ. Technol. 2022, 6, 1–16. [Google Scholar]
    [CrossRef] Ivanoski, J.; Bailey, D.; Walters, M.; Vazirani, J. The transformative
    power of regtech. Front. Financ. Decis.-Mak. Financ. Serv. 2017, 57, 14–17. [Google
    Scholar] Colaert, V. RegTech as a response to regulatory expansion in the financial
    sector. Available at SSRN 2677116 2018. [Google Scholar] Walshe, J.; Cropper,
    T. Should you be banking on RegTech? J. Secur. Oper. Custody 2018, 10, 167–175.
    [Google Scholar] Kurum, E. RegTech solutions and AML compliance: What future for
    financial crime? J. Financ. Crime 2023, 30, 776–794. [Google Scholar] [CrossRef]
    Arner, D.W.; Zetzsche, D.A.; Buckley, R.P.; Weber, R.H. The future of data-driven
    finance and RegTech: Lessons from EU big bang II. Stan. JL Bus. Fin. 2020, 25,
    245. [Google Scholar] Armstrong, P. Developments in RegTech and SupTech; Paris
    Dauphine University: Paris, France, 2018; Available online: https://www.esma.europa.eu/sites/default/files/library/esma71-99-1070_speech_on_regtech.pdf
    (accessed on 22 July 2018). McCarthy, J. The regulation of RegTech and SupTech
    in finance: Ensuring consistency in principle and in practice. J. Financ. Regul.
    Compliance 2023, 31, 186–199. [Google Scholar] [CrossRef] Packin, N.G. RegTech,
    compliance and technology judgment rule. Chi.-Kent L. Rev. 2018, 93, 193. [Google
    Scholar] Ryan, P.; Crane, M.; Brennan, R. Design challenges for GDPR RegTech.
    arXiv 2020, arXiv:2005.12138. [Google Scholar] Bolton, M.; Mintrom, M. RegTech
    and creating public value: Opportunities and challenges. Policy Des. Pract. 2023,
    1–17. [Google Scholar] [CrossRef] Khanzode, K.C.A.; Sarode, R.D. Advantages and
    disadvantages of artificial intelligence and machine learning: A literature review.
    Int. J. Libr. Inf. Sci. (IJLIS) 2020, 9, 3. [Google Scholar] Mahalakshmi, V.;
    Kulkarni, N.; Kumar, K.P.; Kumar, K.S.; Sree, D.N.; Durga, S. The Role of implementing
    Artificial Intelligence and Machine Learning Technologies in the financial services
    Industry for creating Competitive Intelligence. Mater. Today Proc. 2022, 56, 2252–2255.
    [Google Scholar] [CrossRef] Regulation, G.D.P. General data protection regulation
    (GDPR). Intersoft Consult. Accessed Oct. 2018, 24. Available online: https://gdpr-info.eu/art-24-gdpr/
    (accessed on 17 April 2023). Voigt, P.; Von dem Bussche, A. The eu general data
    protection regulation (gdpr). In A Practical Guide, 1st ed.; Springer International
    Publishing: Cham, Switzerland, 2017; Volume 10, p. 10-5555. [Google Scholar] Neovius,
    M.; Karlsson, J.; Westerlund, M.; Pulkkis, G. Providing tamper-resistant audit
    trails for cloud forensics with distributed ledger based solutions. Cloud Comput.
    2018, 2018, 29. [Google Scholar] Ahmad, A.; Saad, M.; Njilla, L.; Kamhoua, C.;
    Bassiouni, M.; Mohaisen, A. Blocktrail: A scalable multichain solution for blockchain-based
    audit trails. In Proceedings of the ICC 2019–2019 IEEE International Conference
    on Communications (ICC), Shanghai, China, 20–24 May 2019; IEEE: Piscataway, NJ,
    USA, 2019; pp. 1–6. [Google Scholar] Ahmad, A.; Saad, M.; Bassiouni, M.; Mohaisen,
    A. Towards blockchain-driven, secure and transparent audit logs. In Proceedings
    of the 15th EAI International Conference on Mobile and Ubiquitous Systems: Computing,
    Networking and Services, New York, NY, USA, 5–7 November 2018; pp. 443–448. [Google
    Scholar] Carrell, D.S.; Cronkite, D.; Palmer, R.E.; Saunders, K.; Gross, D.E.;
    Masters, E.T.; Hylan, T.R.; Von Korff, M. Using natural language processing to
    identify problem usage of prescription opioids. Int. J. Med. Inform. 2015, 84,
    1057–1064. [Google Scholar] [CrossRef] Zetsche, D.A.; Buckley, R.P.; Arner, D.W.;
    Barberis, J.N. From FinTech to TechFin: The regulatory challenges of data-driven
    finance. NYUJL Bus. 2017, 14, 393. [Google Scholar] Aziz, H.; Guled, A. Cloud
    computing and healthcare services. J. Biosens. Bioelectron. 2016, 7, 220. [Google
    Scholar] [CrossRef] [Green Version] Youssef, A.E. Exploring cloud computing services
    and applications. J. Emerg. Trends Comput. Inf. Sci. 2012, 3, 838–847. [Google
    Scholar] Atlam, H.F.; Alenezi, A.; Alharthi, A.; Walters, R.J.; Wills, G.B. Integration
    of cloud computing with internet of things: Challenges and open issues. In Proceedings
    of the 2017 IEEE International Conference on Internet of Things (iThings) and
    IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and
    Social Computing (CPSCom) and IEEE Smart Data (SmartData), Exeter, UK, 21–23 June
    2017; IEEE: Piscataway, NJ, USA, 2017; pp. 670–675. [Google Scholar] Syed, R.;
    Suriadi, S.; Adams, M.; Bandara, W.; Leemans, S.J.; Ouyang, C.; ter Hofstede,
    A.H.; van de Weerd, I.; Wynn, M.T.; Reijers, H.A. Robotic process automation:
    Contemporary themes and challenges. Comput. Ind. 2020, 115, 103162. [Google Scholar]
    [CrossRef] Kumar, K.N.; Balaramachandran, P.R. Robotic process automation-a study
    of the impact on customer experience in retail banking industry. J. Internet Bank.
    Commer. 2018, 23, 1–27. [Google Scholar] Devarajan, Y. A study of robotic process
    automation use cases today for tomorrow’s business. Int. J. Comput. Tech. 2018,
    5, 12–18. [Google Scholar] Nagy, J.; Oláh, J.; Erdei, E.; Máté, D.; Popp, J. The
    role and impact of Industry 4.0 and the internet of things on the business strategy
    of the value chain—The case of Hungary. Sustainability 2018, 10, 3491. [Google
    Scholar] [CrossRef] [Green Version] Zhang, Q.; Huang, T.; Zhu, Y.; Qiu, M. A case
    study of sensor data collection and analysis in smart city: Provenance in smart
    food supply chain. Int. J. Distrib. Sens. Netw. 2013, 9, 382132. [Google Scholar]
    [CrossRef] Pal, K. Internet of things and blockchain technology in apparel manufacturing
    supply chain data management. Procedia Comput. Sci. 2020, 170, 450–457. [Google
    Scholar] [CrossRef] Malhotra, D.; Saini, P.; Singh, A.K. How blockchain can automate
    KYC: Systematic review. Wirel. Pers. Commun. 2022, 122, 1987–2021. [Google Scholar]
    [CrossRef] Parra-Moyano, J.; Thoroddsen, T.; Ross, O. Optimised and dynamic KYC
    system based on blockchain technology. Int. J. Blockchains Cryptocurrencies 2019,
    1, 85–106. [Google Scholar] [CrossRef] Wang, B.; Lin, Z.; Wang, M.; Wang, F.;
    Xiangli, P.; Li, Z. Applying blockchain technology to ensure compliance with sustainability
    standards in the PPE multi-tier supply chain. Int. J. Prod. Res. 2022, 61, 4934–4950.
    [Google Scholar] [CrossRef] Shojaei, A.; Flood, I.; Moud, H.I.; Hatami, M.; Zhang,
    X. An implementation of smart contracts by integrating BIM and blockchain. In
    Proceedings of the Future Technologies Conference (FTC) 2019, San Francisco, CA,
    USA, 14–15 November 2019; Volume 2, pp. 519–527. [Google Scholar] Park, A.; Li,
    H. The effect of blockchain technology on supply chain sustainability performances.
    Sustainability 2021, 13, 1726. [Google Scholar] [CrossRef] Bernal, E.; Spiryagin,
    M.; Cole, C. Onboard condition monitoring sensors, systems and techniques for
    freight railway vehicles: A review. IEEE Sens. J. 2018, 19, 4–24. [Google Scholar]
    [CrossRef] Munirathinam, S. Industry 4.0: Industrial internet of things (IIOT).
    In Advances in computers; Elsevier: Amsterdam, The Netherlands, 2020; Volume 117,
    pp. 129–164. [Google Scholar] Zhou, C.; Damiano, N.; Whisner, B.; Reyes, M. Industrial
    Internet of Things:(IIoT) applications in underground coal mines. Min. Eng. 2017,
    69, 50. [Google Scholar] [CrossRef] [Green Version] Reising, D.; Cancelleri, J.;
    Loveless, T.D.; Kandah, F.; Skjellum, A. Radio identity verification-based IoT
    security using RF-DNA fingerprints and SVM. IEEE Internet Things J. 2020, 8, 8356–8371.
    [Google Scholar] [CrossRef] Sinha, N.; Pujitha, K.E.; Alex, J.S.R. Xively based
    sensing and monitoring system for IoT. In Proceedings of the 2015 International
    Conference on Computer Communication and Informatics (ICCCI), Coimbatore, India,
    8–10 January 2015; pp. 1–6. [Google Scholar] Venkatesan, R.; Tamilvanan, A. A
    sustainable agricultural system using IoT. In Proceedings of the 2017 International
    Conference on Communication and Signal Processing (ICCSP), Chennai, India, 6–8
    April 2017; pp. 0763–0767. [Google Scholar] Shahbazi, Z.; Byun, Y.-C. Integration
    of blockchain, IoT and machine learning for multistage quality control and enhancing
    security in smart manufacturing. Sensors 2021, 21, 1467. [Google Scholar] [CrossRef]
    Tomaschek, K.; Olechowski, A.; Eppinger, S.; Joglekar, N. A survey of technology
    readiness level users. In Proceedings of the INCOSE International Symposium, 18
    July 2016; Wiley Online Library: Hoboken, NJ, USA, 2016; Volume 26, pp. 2101–2117.
    [Google Scholar] What the RegTech Industry Means for the Booming Mortgages Industry
    Right Now. Available online: https://www.planetcompliance.com/what-the-regtech-industry-means-for-the-booming-mortgages-industry-right-now/
    (accessed on 10 June 2023). Waldron, B.R.a.D. Fighting Back against Synthetic
    Identity Fraud. Available online: https://www.mckinsey.com/capabilities/risk-and-resilience/our-insights/fighting-back-against-synthetic-identity-fraud
    (accessed on 6 June 2023). MORTGAGE QC INDUSTRY TRENDS—Q3 2020. Available online:
    https://www.acesquality.com/resources/reports/q3-2020-aces-mortgage-qc-industry-trends
    (accessed on 10 June 2023). Arner, D.W.; Barberis, J.; Buckey, R.P. FinTech, RegTech,
    and the reconceptualization of financial regulation. Nw. J. Int’l L. Bus. 2016,
    37, 371. [Google Scholar] Von Solms, J. Integrating Regulatory Technology (RegTech)
    into the digital transformation of a bank Treasury. J. Bank. Regul. 2021, 22,
    152–168. [Google Scholar] [CrossRef] Singh, C.; Lin, W. Can artificial intelligence,
    RegTech and CharityTech provide effective solutions for anti-money laundering
    and counter-terror financing initiatives in charitable fundraising. J. Money Laund.
    Control 2021, 24, 464–482. [Google Scholar] [CrossRef] Elimelech, O.C.; Ferrante,
    S.; Josman, N.; Meyer, S.; Lunardini, F.; Gómez-Raja, J.; Galán, C.; Cáceres,
    P.; Sciama, P.; Gros, M. Technology use characteristics among older adults during
    the COVID-19 pandemic: A cross-cultural survey. Technol. Soc. 2022, 71, 102080.
    [Google Scholar] [CrossRef] Cowburn, N.; Barnet, P. RegTech Opportunities in a
    Post-4MLD/5MLD World. RegTech Book 2019. [Google Scholar] [CrossRef] Kampan, K.;
    Tsusaka, T.W.; Anal, A.K. Adoption of Blockchain Technology for Enhanced Traceability
    of Livestock-Based Products. Sustainability 2022, 14, 13148. [Google Scholar]
    [CrossRef] Akhter, R.; Sofi, S.A. Precision agriculture using IoT data analytics
    and machine learning. J. King Saud Univ.-Comput. Inf. Sci. 2022, 34, 5602–5618.
    [Google Scholar] [CrossRef] Anidu, A.; Dara, R. A review of data governance challenges
    in smart farming and potential solutions. In Proceedings of the 2021 IEEE International
    Symposium on Technology and Society (ISTAS), Waterloo, ON, Canada, 28–31 October
    2021; IEEE: Piscataway, NJ, USA, 2021; pp. 1–8. [Google Scholar] Virk, A.L.; Noor,
    M.A.; Fiaz, S.; Hussain, S.; Hussain, H.A.; Rehman, M.; Ahsan, M.; Ma, W. Smart
    farming: An overview. Smart Village Technol. Concepts Dev. 2020, 17, 191–201.
    [Google Scholar] Amiri-Zarandi, M.; Hazrati Fard, M.; Yousefinaghani, S.; Kaviani,
    M.; Dara, R. A platform approach to smart farm information processing. Agriculture
    2022, 12, 838. [Google Scholar] [CrossRef] Pivoto, D.; Waquil, P.D.; Talamini,
    E.; Finocchio, C.P.S.; Dalla Corte, V.F.; de Vargas Mores, G. Scientific development
    of smart farming technologies and their application in Brazil. Inf. Process. Agric.
    2018, 5, 21–32. [Google Scholar] [CrossRef] Ada, E.; Sagnak, M.; Uzel, R.A.; Balcıoğlu,
    İ. Analysis of barriers to circularity for agricultural cooperatives in the digitalization
    era. Int. J. Product. Perform. Manag. 2022, 71, 932–951. [Google Scholar] [CrossRef]
    How Regtech Will Help Drive the Manufacturing Industry Forward. Available online:
    https://www.planetcompliance.com/how-regtech-will-help-drive-the-manufacturing-industry-forward/
    (accessed on 12 June 2023). Timmons, J. The Cost of Federal Regulation. Available
    online: https://www.nam.org/the-cost-of-federal-regulation/ (accessed on 20 May
    2023). Hickey, A. Compliance May Cost Companies Millions, but Non-Compliance Costs
    Even More. Available online: https://www.ciodive.com/news/compliance-may-cost-companies-millions-but-non-compliance-costs-even-more/513280/
    (accessed on 12 June 2023). RegTech Transforming the Healthcare Industry. Available
    online: https://www.planetcompliance.com/regtech-transforming-the-healthcare-industry/
    (accessed on 12 June 2023). Treasury, D.o.t., (Ed.) National Money Laundering
    Risk Assessment; 2022; p. 71. Available online: https://home.treasury.gov/system/files/136/2022-National-Money-Laundering-Risk-Assessment.pdf
    (accessed on 12 June 2023). Fadahunsi, A.; Rosa, P. Entrepreneurship and illegality:
    Insights from the Nigerian cross-border trade. J. Bus. Ventur. 2002, 17, 397–429.
    [Google Scholar] [CrossRef] Li, X.H. Blockchain-based cross-border E-business
    payment model. In Proceedings of the 2021 2nd International Conference on E-Commerce
    and Internet Technology (ECIT), Hangzhou, China, 5–7 March 2021; IEEE: Piscataway,
    NJ, USA, 2021; pp. 67–73. [Google Scholar] Amankwah-Amoah, J.; Khan, Z.; Wood,
    G.; Knight, G. COVID-19 and digitalization: The great acceleration. J. Bus. Res.
    2021, 136, 602–611. [Google Scholar] [CrossRef] [PubMed] Gao, S.; Ling, S.; Liu,
    W. The role of social media in promoting information disclosure on environmental
    incidents: An evolutionary game theory perspective. Sustainability 2018, 10, 4372.
    [Google Scholar] [CrossRef] [Green Version] Li, K.; Cheng, L.; Teng, C.-I. Voluntary
    sharing and mandatory provision: Private information disclosure on social networking
    sites. Inf. Process. Manag. 2020, 57, 102128. [Google Scholar] [CrossRef] Tweneboah-Koduah,
    S.; Skouby, K.E.; Tadayoni, R. Cyber security threats to IoT applications and
    service domains. Wirel. Pers. Commun. 2017, 95, 169–185. [Google Scholar] [CrossRef]
    Al Nafea, R.; Almaiah, M.A. Cyber security threats in cloud: Literature review.
    In Proceedings of the 2021 International Conference on Information Technology
    (ICIT), Amman, Jordan, 14–15 July 2021; IEEE: Piscataway, NJ, USA, 2021; pp. 779–786.
    [Google Scholar] Humayun, M.; Niazi, M.; Jhanjhi, N.; Alshayeb, M.; Mahmood, S.
    Cyber security threats and vulnerabilities: A systematic mapping study. Arab.
    J. Sci. Eng. 2020, 45, 3171–3189. [Google Scholar] [CrossRef] Ullah, F.; Naeem,
    H.; Jabbar, S.; Khalid, S.; Latif, M.A.; Al-Turjman, F.; Mostarda, L. Cyber security
    threats detection in internet of things using deep learning approach. IEEE Access
    2019, 7, 124379–124389. [Google Scholar] [CrossRef] Bahga, A.; Madisetti, V.K.
    Blockchain platform for industrial internet of things. J. Softw. Eng. Appl. 2016,
    9, 533–546. [Google Scholar] [CrossRef] [Green Version] Golosova, J.; Romanovs,
    A. The advantages and disadvantages of the blockchain technology. In Proceedings
    of the 2018 IEEE 6th Workshop on Advances in Information, Electronic and Electrical
    Engineering (AIEEE), Vilnius, Lithuania, 8–10 November 2018; IEEE: Piscataway,
    NJ, USA, 2018; pp. 1–6. [Google Scholar] Niranjanamurthy, M.; Nithya, B.; Jagannatha,
    S. Analysis of Blockchain technology: Pros, cons and SWOT. Clust. Comput. 2019,
    22, 14743–14757. [Google Scholar] [CrossRef] Ali, O.; Jaradat, A.; Kulakli, A.;
    Abuhalimeh, A. A comparative study: Blockchain technology utilization benefits,
    challenges and functionalities. IEEE Access 2021, 9, 12730–12749. [Google Scholar]
    Wu, B.; Duan, T. The advantages of blockchain technology in commercial bank operation
    and management. In Proceedings of the 2019 4th International Conference on Machine
    Learning Technologies, Nanchang China, 21–23 June 2019; pp. 83–87. [Google Scholar]
    Ramu, G.; Eswara Reddy, B. Secure architecture to manage EHR’s in cloud using
    SSE and ABE. Health Technol. 2015, 5, 195–205. [Google Scholar] [CrossRef] Mhatre,
    S.; Nimkar, A.V. Secure cloud-based federation for EHR using multi-authority ABE.
    In Proceedings of the Advanced Computing and Intelligent Engineering: Proceedings
    of ICACIE 2017, Central University of Rajasthan, Ajmer, India, 23–25 November
    2017; Springer: Berlin/Heidelberg, Germany; Volume 2, pp. 3–15. [Google Scholar]
    Reedy, B.E.; Ramu, G. A Secure Framework for Ensuring EHR’s Integrity Using Fine-Grained
    Auditing and CP-ABE. In Proceedings of the 2016 IEEE 2nd International Conference
    on Big Data Security on Cloud (BigDataSecurity), IEEE International Conference
    on High Performance and Smart Computing (HPSC), and IEEE International Conference
    on Intelligent Data and Security (IDS), New York, NY, USA, 9–10 April 2016; IEEE:
    Piscataway, NJ, USA, 2016; pp. 85–89. [Google Scholar] Wang, S.; Zhang, Y.; Zhang,
    Y. A blockchain-based framework for data sharing with fine-grained access control
    in decentralized storage systems. IEEE Access 2018, 6, 38437–38450. [Google Scholar]
    [CrossRef] Yang, X.; Maiti, A.; Jiang, J.; Kist, A. Forecasting and Monitoring
    Smart Buildings with the Internet of Things, Digital Twins and Blockchain. In
    Online Engineering and Society 4.0, Cham; Auer, M.E., Bhimavaram, K.R., Yue, X.-G.,
    Eds.; Springer International Publishing: Cham, Switzerland, 2022; pp. 213–224.
    [Google Scholar] Gao, W.; Hatcher, W.G.; Yu, W. A survey of blockchain: Techniques,
    applications, and challenges. In Proceedings of the 2018 27th International Conference
    on Computer Communication and Networks (ICCCN), Hangzhou, China, 30 July–2 August
    2018; IEEE: Piscataway, NJ, USA, 2018; pp. 1–11. [Google Scholar] Steichen, M.;
    Fiz, B.; Norvill, R.; Shbair, W.; State, R. Blockchain-based, decentralized access
    control for IPFS. In Proceedings of the 2018 IEEE International Conference on
    Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom)
    and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData),
    Halifax, NS, Canada, 30 July–3August 2018; IEEE: Piscataway, NJ, USA, 2018; pp.
    1499–1506. [Google Scholar] Huang, H.-S.; Chang, T.-S.; Wu, J.-Y. A secure file
    sharing system based on IPFS and blockchain. In Proceedings of the 2nd International
    Electronics Communication Conference, Singapore, 8–10 July 2020; pp. 96–100. [Google
    Scholar] Sun, J.; Yao, X.; Wang, S.; Wu, Y. Blockchain-based secure storage and
    access scheme for electronic medical records in IPFS. IEEE Access 2020, 8, 59389–59401.
    [Google Scholar] [CrossRef] Jones, D.; Snider, C.; Nassehi, A.; Yon, J.; Hicks,
    B. Characterising the Digital Twin: A systematic literature review. CIRP J. Manuf.
    Sci. Technol. 2020, 29, 36–52. [Google Scholar] [CrossRef] Maiti, A.; Raza, A.;
    Kang, B.H.; Hardy, L. Estimating service quality in industrial internet-of-things
    monitoring applications with blockchain. IEEE Access 2019, 7, 155489–155503. [Google
    Scholar] [CrossRef]       Disclaimer/Publisher’s Note: The statements, opinions
    and data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2023 by
    the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Li, J.; Maiti, A.; Fei, J. Features and Scope of Regulatory
    Technologies: Challenges and Opportunities with Industrial Internet of Things.
    Future Internet 2023, 15, 256. https://doi.org/10.3390/fi15080256 AMA Style Li
    J, Maiti A, Fei J. Features and Scope of Regulatory Technologies: Challenges and
    Opportunities with Industrial Internet of Things. Future Internet. 2023; 15(8):256.
    https://doi.org/10.3390/fi15080256 Chicago/Turabian Style Li, Jinying, Ananda
    Maiti, and Jiangang Fei. 2023. \"Features and Scope of Regulatory Technologies:
    Challenges and Opportunities with Industrial Internet of Things\" Future Internet
    15, no. 8: 256. https://doi.org/10.3390/fi15080256 Note that from the first issue
    of 2016, this journal uses article numbers instead of page numbers. See further
    details here. Article Metrics Citations Crossref   2 Scopus   1 Web of Science   1
    Google Scholar   [click to view] Article Access Statistics Article access statistics
    Article Views 14. Jan 24. Jan 3. Feb 13. Feb 23. Feb 4. Mar 14. Mar 24. Mar 3.
    Apr 0k 1k 2k 3k 4k For more information on the journal statistics, click here.
    Multiple requests from the same IP address are counted as one view.   Future Internet,
    EISSN 1999-5903, Published by MDPI RSS Content Alert Further Information Article
    Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI
    Guidelines For Authors For Reviewers For Editors For Librarians For Publishers
    For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org
    Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Future Internet
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Features and Scope of Regulatory Technologies: Challenges and Opportunities
    with Industrial Internet of Things'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Widaningsih N.
  citation_count: '3'
  description: The purpose of this study was to provide a comprehensive understanding
    of the implementation of technology and information systems to realize sustainable
    livestock development through Precision Livestock Farming (PLF) and the Internet
    of Things (IoT). The literature study method was used in this study to search
    electronic data in order to write a collection of journals, publications, books,
    and websites, then analyze various kinds of literature that combines, among others,
    coding framework, in-depth assessment, and conclusions. We used a phenomenological
    approach, by trying to get the widest possible data, then trying to get a deep
    understanding, so that it becomes a valid and convincing finding. Sources of literature
    information used were various data published from 2005 to 2021 using the Google
    search application to find information using keywords such as Precision Livestock
    Farming (PLF), Internet of Things (IoT), sustainable livestock, creativity, innovation,
    and some which were related to this study. The results of this study indicated
    that digital technologies such as PLF and IoT can develop sustainable agriculture
    and animal husbandry. Management automation in livestock business with the application
    of these technologies can increase the capacity of livestock production systems.
  doi: 10.22124/CJES.2023.6540
  full_citation: '>'
  full_text: '>

    "VISIT DOI.ORG DOI NOT FOUND 10.22124/CJES.2023.6540 This DOI cannot be found
    in the DOI System. Possible reasons are: The DOI is incorrect in your source.
    Search for the item by name, title, or other metadata using a search engine. The
    DOI was copied incorrectly. Check to see that the string includes all the characters
    before and after the slash and no sentence punctuation marks. The DOI has not
    been activated yet. Please try again later, and report the problem if the error
    continues. WHAT CAN I DO NEXT? If you believe this DOI is valid, you may report
    this error to the responsible DOI Registration Agency using the form here. You
    can try to search again from DOI.ORG homepage REPORT AN ERROR DOI: URL of Web
    Page Listing the DOI: Your Email Address: Additional Information About the Error:
    More information on DOI resolution: DOI Resolution Factsheet The DOI Handbook
    Privacy Policy Copyright © 2023 DOI Foundation. The content of this site is licensed
    under a Creative Commons Attribution 4.0 International License. DOI®, DOI.ORG®,
    and shortDOI® are trademarks of the DOI Foundation."'
  inline_citation: '>'
  journal: Caspian Journal of Environmental Sciences
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Implementation of technology and information systems (IOT) to support sustainable
    livestock development: Future challenges and perspectives'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Maulana N.
  - Matheus Edward I.J.
  citation_count: '0'
  description: The Internet of Things (IoT) can potentially change how humans interact
    with the environment. This technology is able to be applied in various fields,
    such as urban management, agriculture, environmental monitoring, health, and transportation.
    Conventional air quality monitoring systems are complex sensing equipment and
    they can measure various parameters of air pollutants. This system requires very
    high costs and maintenance. Therefore, a low-cost air quality measurement system
    is required and is able to measure the surrounding air pollutants. By using wireless
    sensor network technology as the acquisition of environmental monitoring sensor
    data. A system design was created in the form of geographic information capable
    of describing air quality in a particular area. The air parameters used are carbon
    monoxide, dust particulate, light intensity, temperature, and relative humidity.
    The wireless network uses the LoRa module connected to the gateway. The web server
    provides a database and geographic information system interface from the gateway
    through the MQTT broker. Data transmission using a radio frequency of 915 Mhz
    and able to send data sensors from various points. Outdoor testing at many buildings
    is capable of transmitting sensor data with a packet loss of 0% at a distance
    of fewer than 111 meters and the largest packet loss of 51.28% at a distance of
    442 meters.
  doi: 10.1109/ICIMCIS60089.2023.10349082
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2023 International Conference...
    IoT-Enabled LoRa Wireless Sensor Network for Real-Time Air Quality Monitoring
    with Geographic Information System Mapping Publisher: IEEE Cite This PDF Nurhuda
    Maulana; Ian Joseph Matheus Edward All Authors 48 Full Text Views Abstract Document
    Sections I. Introduction II. Development Method III. System Design IV. Implementation
    V. Conclusion Authors Figures References Keywords Metrics Abstract: The Internet
    of Things (IoT) can potentially change how humans interact with the environment.
    This technology is able to be applied in various fields, such as urban management,
    agriculture, environmental monitoring, health, and transportation. Conventional
    air quality monitoring systems are complex sensing equipment and they can measure
    various parameters of air pollutants. This system requires very high costs and
    maintenance. Therefore, a low-cost air quality measurement system is required
    and is able to measure the surrounding air pollutants. By using wireless sensor
    network technology as the acquisition of environmental monitoring sensor data.
    A system design was created in the form of geographic information capable of describing
    air quality in a particular area. The air parameters used are carbon monoxide,
    dust particulate, light intensity, temperature, and relative humidity. The wireless
    network uses the LoRa module connected to the gateway. The web server provides
    a database and geographic information system interface from the gateway through
    the MQTT broker. Data transmission using a radio frequency of 915 Mhz and able
    to send data sensors from various points. Outdoor testing at many buildings is
    capable of transmitting sensor data with a packet loss of 0% at a distance of
    fewer than 111 meters and the largest packet loss of 51.28% at a distance of 442
    meters. Published in: 2023 International Conference on Informatics, Multimedia,
    Cyber and Informations System (ICIMCIS) Date of Conference: 07-08 November 2023
    Date Added to IEEE Xplore: 14 December 2023 ISBN Information: ISSN Information:
    DOI: 10.1109/ICIMCIS60089.2023.10349082 Publisher: IEEE Conference Location: Jakarta
    Selatan, Indonesia SECTION I. Introduction Indonesia is one of the countries in
    Southeast Asia that faces air pollution challenges like other countries in the
    world. Factors that affect the increase in air pollution in Indonesia are fire,
    industrial improvement, and an increase in private motor vehicles [1]. In July
    2019, Jakarta as the capital of Indonesia became the city with the worst pollution
    levels after Lahore in Pakistan, Hanoi in Vietnam, and Dubai in the United Arab
    Emirates. Jakarta requires 13 to 25 air quality monitoring stations at a cost
    of 5 billion for each tool. At the same time, the available tools amount to 5
    monitoring tools. The addition of such a tool is indispensable to have more complete
    data [2]. Conventional air quality monitoring systems include stationary air pollution
    monitoring stations. The system is usually equipped with complex sensing equipment
    and can measure various parameters of air pollutants. However, such a system requires
    very high manufacturing and maintenance costs [3]. Air quality data is very useful
    for various government needs as a public policyholder. Therefore, a low-cost air
    quality measurement system is required and is able to measure the surrounding
    air pollutants. This system functions as reference data that can be used by the
    government in making more precise public policy. With the development of Internet
    of Things (IoT) technology, the problem can be solved. IoT is a technology capable
    of connecting physical devices with the integration of software, electronics,
    actuators, and sensors. IoT allows objects to connect with each other and exchange
    data over the Internet [4]. IoT has the potential to change the way humans interact
    with the surrounding environment. The ability to electronically monitor and manage
    physical objects enables data-driven decision making, optimization of a system''s
    performance, and is able to improve human quality of life [5]. This system uses
    the utilization of IoT technology. There are 3 aspects that support the establishment
    of the system, including the use of environmental monitoring applications, ethernet
    wired networks, and the concept of Wireless Sensor Network (WSN) [6]. The system
    will provide environmental monitoring services by implementing JSN as an intelligent
    sensor capable of acquiring environmental data. The service is able to provide
    more detailed environmental data for each sensor node point. A sensor node consists
    of several different sensors that are interconnected with other sensor nodes.
    Using WSN technology as an intelligent sensor for environmental monitoring, a
    system service can be created in the form of a Geographic Information System (GIS)
    that can describe each sensor node. The objective of this study is to develop
    an air quality monitoring system for an urban area. A comprehensive understanding
    of the optimal environmental conditions, particularly various ambient air parameters,
    is essential to accomplish this objective. This system aims to deliver air quality
    information specific to the urban area, which stakeholders can utilize to inform
    and implement strategic policies promoting a healthier environment. The methodology
    employed in developing this system is outlined as follows. SECTION II. Development
    Method The system in this study aims to produce air quality monitoring systems
    in one urban area. To achieve this goal, it is necessary to understand the ideal
    environmental conditions, especially the various ambient air parameters. This
    system is expected to provide information on air quality in one urban area. This
    information can be used by stakeholders to support strategic policies in a healthier
    environment. The methodology used in the manufacture of this system is as follows.
    Fig 1 Research Methodology Show All Figure 1 shows the methods used in the development
    of this study. The stages of development are: Literature study is the collection
    of various libraries for the needs of science resources. Analysis of system requirements
    is a description of the underlying needs of this study based on literature studies.
    System design is the determination of components and the overall design of the
    system. System implementation and testing is creating a system based on the design
    that has been created and tested the system. Analysis and maintenance of the system
    is an evaluation of testing along with the entire system to make improvements
    to the system. In a study titled \"Wireless Sensor Network System Design Using
    Raspberry Pi and Arduino for Environmental Monitoring Applications,\" the authors
    present a system divided into sensor and gateway nodes utilizing microcontrollers,
    RHT03 sensors, and Xbee Pro S2B modules. Implemented in a parking structure, the
    system successfully provides quantitative temperature and humidity readings on
    a local web server. Another notable work explores a comprehensive Smart City environmental
    monitoring system with diverse sensors for temperature, humidity, light intensity,
    sound pollution, carbon monoxide, and methane. The data is transmitted through
    Bluetooth and WiFi, and results are spatially visualized on a web GIS platform
    [7]. Additionally, a study focuses on an industry-specific monitoring system with
    a microcontroller, GSM module, and sensors for temperature, humidity, gas, water
    level, and fire detection, presenting data on an LCD display and an Android application
    [8]. Another research project explores IoT applications in Smart Cities, leveraging
    LoRa and IEEE 802.15.4 technologies for smart streetlights and building monitoring
    with mesh network topology [9]. Lastly, an investigation introduces a broader-range
    environmental pollution monitoring system using Atmega328 microcontrollers, LoRa
    modules, and various gas sensors, showcasing its efficacy in both indoor and outdoor
    settings with a maximum packet range of 1.1 km from node to gateway [10]. SECTION
    III. System Design Before designing the system, identification is required to
    measure the scope of research. Identification of system needs explains the various
    needs of the system to be developed. These needs are divided into various functions,
    along with solutions to perform those functions. Figure 2 shows the air quality
    monitoring system in the Functional Requirement (FR) chart as the main function
    of the system and the Physical Solution (PS) as the physical form that each function
    needs. Fig 2 System Requirement Show All From these needs, it can be concluded
    that the system is divided into several functions, namely: The system is able
    to measure the surrounding air condition using sensors. Environmental conditions
    are the conditions around the settlement, both indoors and outdoors. Sensor measurement
    parameters are the content of CO gas as a pollutant of motor vehicles, dust particulates
    as an overview of air quality, light intensity as the value of light needs, temperature
    and humidity of the environment as a value of comfort and health. The system is
    able to collect sensor measurement data centrally. The measurement data is stored
    in a centralized database for easy processing of the entire system data. Thus,
    a distributed delivery system is required from each point to the gateway center.
    Collected data can be processed into useful information and easily obtained by
    various stakeholders. So it takes an easy-to-understand information system, which
    is an information system based on the geographic location of each sensor measurement
    point. From the needs of the system, an air quality monitoring system is designed
    in accordance with Figure 3. Fig 3 System Design Show All Based on the needs of
    the system, it needs a variety of hardware, including microcontrollers, sensors,
    and communication modules. The sensor system works to read environmental values.
    So, the selection of sensors is based on reading ability and surrounding environmental
    conditions. Measurement parameters that can be taken by the sensor are carbon
    monoxide (CO) gas content, fine dust particulate matter (PM 2.5), air temperature,
    humidity, and ambient light intensity. Table I Sensor Selection [11] [12] [13]
    [14] To meet the needs of various connected peripherals. Then, the microcontroller
    system must have an ADC interface, digital pin I/O, I2C, and SPI. The microcontroller
    uses 5 volts of power with each pin input/output capable of supplying the needs
    of each sensor. The program code is generated using the Arduino IDE. The program
    generates 24764 bytes of storage and a process of 1498 bytes. Fig 4 Arduino IDE
    Show All From these needs, a microcontroller system is selected that meets the
    desired specifications. The microcontroller system used is an Arduino uno module
    based on ATmega328P with flash memory 32256 Byte, SRAM 2048 Byte, and clock speed
    16 MHz. The Arduino module was chosen because of low development cost, wide development
    environment, opensource, availability of various functions that facilitate programming,
    and has an interface that is able to support each sensor. Figure 5 is a flow chart
    of the sensor system. The reference to number 1 is the sensor reading function.
    Each sensor will be given time to measure its own parameters. So, the reading
    of each sensor is only executed at predetermined time intervals. Reference number
    2 is a function of serial communication as output on the serial monitor. While
    the reference to number 3 is the function of sending sensor data. This function
    will be executed if the data status is of correct value. Fig 5 Flowchart of the
    sensor system Show All The gateway server serves to receive data that has been
    generated by the sensor node to be stored in the database. Fig 6 Server system
    block diagram Show All The sensor measurement data contained in the gateway will
    be forwarded to the server. A program is created that will perform the publish
    function to the MQTT broker. The server system performs the subscribe function
    to the MQTT broker to receive JSON data from the gateway. The data is processed
    by a program on Node-RED containing the database save function. Apache2 is used
    as a web server application and leaflet.js will display the location mapping information
    of each sensor. SECTION IV. Implementation A. System Implementation Hardware implementation
    consists of the entire hardware built on the system. The system uses the ATmega328P
    microcontroller in an Arduino Uno module. The microcontroller is connected to
    the sensor system and data transmission. The system becomes a unit called a sensor
    node. On the other hand, there is a gateway server node in charge of receiving
    data sent by the sensor node and storing it in the database. Fig 7 Sensor Nodes
    Show All The design is made for ease of implementation and maintenance. Thus,
    each sensor will be connected to the header pin via a jumper cable. Fig 8 Gateway
    system Show All Figure 8 is a gateway system using raspberry pi 3 with the addition
    of a LoRa HAT 915Mhz-based module. This module serves to capture the signal sent
    by the sensor node to be stored in the database. Fig 9 Node-RED program Show All
    The server system has the task of subscribing to the MQTT broker, performing database
    storage, and displaying web-based geographic information from sensors. The initial
    function that the system performs is the subscribe function using Node-RED. Figure
    9 shows the Node-RED program for storing sensor data on a database. B. Test Result
    System testing is divided into several things, including testing for each sensor,
    scheduling sensor system readings, sending data, and receiving data on the server.
    Testing of each sensor and scheduling is done by enabling all sensors and displaying
    the reading results in an array of data. The data in order contains sensor node
    numbers, carbon monoxide gas content, PM 2.5 particulates, light intensity, temperature,
    relative humidity, and GPS data in the form of longitude and latitude. After the
    sensor reading is successfully performed, the data will be sent to the gateway
    node as a server system. Data is sent in an array with differentiation between
    parameters in the form of commas. This differentiator serves to separate the received
    array data into new data variables for each sensor parameter. Figure 10 (a) is
    a serial communication that displays sensor reading data. Figure 10 (b) is the
    result of receiving data processed into a new variable to be sent to the MQTT
    broker. Fig 10 Data receiving processing results (a) Monitor serial output (b)
    Gateway program output results. Show All To visualize the data transmitted from
    the sensor nodes, we utilize the serial monitor feature within the Arduino IDE,
    which displays sensor readings. On the gateway node, we employ the VNC viewer
    as a terminal on the Raspbian Operating System. The gateway node is responsible
    for gathering sensor reading data from the sensor nodes and then storing it in
    the database via the MQTT broker. Fig 11 Output of data from MQTT broker Show
    All Figure 11 shows data in JSON format received with the subscribe function from
    the MQTT broker. This data is controlled using Node-RED. Node-RED on the server
    is used to receive data and perform the server database storage function. Fig
    12 Save query function Show All The results of the database query can be shown
    in Figure 12. There is a function that performs database queries according to
    the names of tables and columns. Fig 13 Database server Show All The data stored
    in the database is used by the geographic information system to display the recorded
    sensor reading values. Figure 14 is a web interface that contains sensor geographic
    information. Fig 14 Collected sensor data Show All The web interface contains
    geographic information of each sensor node recorded in a marker. The system is
    capable of displaying sensor readings and database reading locations and recording
    times. Fig 15 Marker information Show All Transmission of sensor data on the system
    using a radio frequency of 915MHz. The sending module uses an Arduino shield with
    Semtech SX1276 chip. While the receiver module uses LoRa HAT v1.4 for Raspberry
    Pi. Table II Data transmission testing Testing is done by placing the server gateway
    in the room. The sensor node system is placed at several coordinate points. Testing
    focuses on the success of each package delivered in the condition of many obstacles
    in the form of buildings and buildings around the site. SECTION V. Conclusion
    In conclusion, the proposed system adeptly monitors various air quality parameters,
    such as carbon monoxide, PM 2.5 particulates, light intensity, temperature, relative
    humidity, and GPS location. Operating on a predetermined schedule, the sensor
    system utilizes a 915 MHz radio frequency for data transmission, exhibiting commendable
    performance with minimal packet loss during outdoor testing. The geographic information
    system on the server efficiently records data using MySQL, presenting a comprehensive
    visualization of sensor readings on a map. Emphasizing the significance of quantitative
    testing results, the system demonstrated the capability to transmit sensor data
    with a minimal packet loss of 0% at distances less than 111 meters and a maximum
    packet loss of 51.28% at a distance of 442 meters during outdoor testing. These
    quantitative findings validate the system''s efficacy in real-world conditions,
    establishing a robust foundation for subsequent development. Looking ahead, there
    are promising avenues for further enhancement. The system holds potential to evolve
    into an integrated sensor network within a Smart City framework, employing an
    integrated mapping approach across all sensor nodes in the urban environment.
    To facilitate this evolution, the system must undergo transformation into a mobile
    sensor system deployable across diverse city locations and on vehicles. This necessitates
    a meticulous design approach, concentrating on power efficiency, innovative low-power
    delivery systems, and an optimized network topology. Additionally, revisiting
    and refining protocol standards and network topology becomes imperative to accommodate
    larger networks, ensuring seamless installation and system maintenance. These
    proposed developments aim to elevate the system''s scalability, coverage, and
    overall effectiveness in dynamic urban landscapes. Authors Figures References
    Keywords Metrics More Like This A 1.2-V 1.35-μW all MOS temperature sensor for
    wireless sensor networks 2015 IEEE International Symposium on Circuits and Systems
    (ISCAS) Published: 2015 Key Technology of Passive Wireless Temperature Measurement
    of Power High-Voltage Switchgear Based on Wireless Sensor Network 2022 IEEE Conference
    on Telecommunications, Optics and Computer Science (TOCS) Published: 2022 Show
    More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2023 International Conference on Informatics, Multimedia, Cyber and Information
    Systems, ICIMCIS 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT-Enabled LoRa Wireless Sensor Network for Real-Time Air Quality Monitoring
    with Geographic Information System Mapping
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Lopez A.F.J.
  - Jimenez-Lopez F.R.
  - Alvarez C.S.L.
  citation_count: '0'
  description: Plagues and disease management in agriculture are essential to increase
    crop yields, decrease production costs and contribute to environmental sustainability.
    New technologies based on Digital Agriculture (DA) allows for contributing to
    integrated pest management. The Internet of Things (IoT) is one of the current
    options for pest management in agriculture. This work shows an intelligent platform
    development for insect counting and mapping in an agricultural crop based on IoT,
    wireless sensor networks, geographic information system and artificial intelligence.
    The paper focuses on the system architecture design, development of image processing
    algorithms for detecting and counting pest insects in an agricultural crop and
    its implementation in a field. The intelligent platform was developed to study
    the behavior of the Fall Armyworm (Spodoptera Frugiperda) in corn crops. The monitoring
    and visualization of the information and predictions of the system will be carried
    out at a base station and through a smartphone, tablet or computer with internet
    access.
  doi: 10.1109/CCAC58200.2023.10333801
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2023 IEEE 6th Colombian Confe...
    Electronic Trap for Field Detection of Fall Armyworm (Spodoptera Frugiperda) in
    Corn Publisher: IEEE Cite This PDF Andrés-F Jiménez López; Fabián-R Jiménez-López;
    Cristian Stiven León Alvarez All Authors 47 Full Text Views Abstract Document
    Sections I. Introduction II. MATERIALS AND METHODS III. Results and Discussion
    Conclusions Authors Figures References Keywords Metrics Footnotes Abstract: Plagues
    and disease management in agriculture are essential to increase crop yields, decrease
    production costs and contribute to environmental sustainability. New technologies
    based on Digital Agriculture (DA) allows for contributing to integrated pest management.
    The Internet of Things (IoT) is one of the current options for pest management
    in agriculture. This work shows an intelligent platform development for insect
    counting and mapping in an agricultural crop based on IoT, wireless sensor networks,
    geographic information system and artificial intelligence. The paper focuses on
    the system architecture design, development of image processing algorithms for
    detecting and counting pest insects in an agricultural crop and its implementation
    in a field. The intelligent platform was developed to study the behavior of the
    Fall Armyworm (Spodoptera Frugiperda) in corn crops. The monitoring and visualization
    of the information and predictions of the system will be carried out at a base
    station and through a smartphone, tablet or computer with internet access. Published
    in: 2023 IEEE 6th Colombian Conference on Automatic Control (CCAC) Date of Conference:
    17-20 October 2023 Date Added to IEEE Xplore: 06 December 2023 ISBN Information:
    ISSN Information: DOI: 10.1109/CCAC58200.2023.10333801 Publisher: IEEE Conference
    Location: Popayan, Colombia Funding Agency: SECTION I. Introduction In 2020, according
    to DANE, the agricultural sector in Colombia grew 6.8% in the first quarter, 0.1%
    in the second, and 1.5% in the third, while the total economy registered growth
    of 1.2% in the first quarter, a decrease of - 15.8% in the second and -9% in the
    third, being this sector the one that registered the highest growth in the year
    [1]. This information clearly shows the importance of the agricultural sector
    in the Colombian economy, the need to optimize production processes and its contribution
    to the gross domestic product [2]. Worldwide, this productive apparatus is highly
    affected by pests and diseases in crops. Insects are the most diverse group of
    animals and represent one of the largest biomasses of terrestrial animals [3].
    Their impacts on ecosystems can be positive as pollinators or negative as vectors
    of infectious diseases [4]. In the Murcia region, Spain, these problems represented
    losses of 120 million EUR in 2020 [5]. Similarly, in June 2020, in the eastern
    plains of Colombia, an alert was issued about the growing plague of native locusts
    that attack rice, corn, and sugarcane crops, causing incalculable losses for ranchers
    and farmers [6]. Damages caused by pests and diseases in agriculture are complex
    to evaluate due to the various agents existing throughout a productive chain [7].
    In Chile, pest control in small-scale agriculture represents a high cost in the
    production of greenhouse crops, also reducing profit margins. For the whitefly
    and the tomato moth control, the value can rise to USD 1759, per hectare, with
    weekly fumigation applications and in a carnation crop, the red spider mites and
    thrips management cost reaches USD 980 per hectare [8]. The data show the urgent
    need to implement pest-insect control methods that make it easier for the farmer
    to protect his crop from the pest and the excess inputs that can affect its quality.
    The construction of an electronic insect trap network distributed intelligently
    on the ground seeks to help maintain the actual proportion of the insect-pest
    population in the area, which allows pest management through digital agriculture
    techniques. Integrated Pest Management (IPM) is an ecological tool for pest management
    in crops that aims to help farmers make decisions for pest management that are
    both economical and environmentally friendly. The purpose of IPM is to reduce
    the frequency and quantity of input applications without affecting crop quality
    [9]. Electronic traps are improved common ones that can wirelessly transmit the
    count or population of captured insects. These devices can provide estimates of
    insects’ presence (detection and initiation of infestation) and population dynamics
    but are also used for evaluating the insecticide treatment efficacy (post-treatment
    measurement) and for control purposes, reducing insecticides. These systems allow
    insect populations to be measured 24 hours a day, thus determining the precise
    start of an infestation. On the other hand, electronic traps acquire data at defined
    time intervals, allowing the tracking of the response of insects to pheromones
    [10]. In the published literature studied in this work, there are two research
    lines on electronic insect traps. The first uses digital cameras and image processing
    [11], [12], [13]. The second line uses optical counters in combination with selective
    lures [14], [15]. The optical counters principle is the fall of the insect through
    the trap funnel and the interruption of the flow of infrared light from the emitter
    to the receiver. The light fluctuation due to the shadow cast on the receiver
    by the falling insect is converted to a voltage variation and finally acquired
    as an insect count [10]. Additionally, it is not just enough to detect and catch
    insects since they occupy geographical areas that can have large extensions. For
    this reason, insect trap networks allow pest detection, delimitation, suppression
    and eradication programs. For example, in the United States alone, the California
    Department of Food and Agriculture (CDFA) operates networks of around 63,000 traps,
    with 30,000 for Ceratitis Capitata detection [16]. IoT systems deploy devices
    in an environment to perform multiple activities, such as sensing, monitoring,
    control, and action. Devices must have interfaces that allow the transmission
    of information with other devices through communication technologies and protocols
    [17]. Software applications enable user interaction with the system, where the
    user can view the information obtained through monitoring and extracted from the
    data once it is processed. In addition, the user can execute the actions that
    he considers appropriate for the situation presented by the data or can be accomplished
    automatically [18]. The agricultural sector in Colombia, in addition to representing
    one of the most influential in the country''s economy, also represents one of
    the populations with the highest labor informality, poverty, and social inequality.
    At the end of 2017, Colombia was the fourth most inequitable country in the world,
    indicating that in recent years the disproportion between the countryside and
    the cities has only decreased by 0.05%, which continues to be very high compared
    to neighboring nations [19]. Therefore, looking for alternatives that allow optimizing
    the resources that the farmer must invest in his crop promotes an improvement
    both in the economic aspect and in the final quality of his product. The fall
    armyworm, Spodoptera Frugiperda [20], is a lepidopteran insect of the family Noctuidae
    (Fig. 1). Its feeding habits make it a polyphagous, migrating, destructive pest
    of crops in the Western Hemisphere [21]. The Spodoptera Frugiperda [20] or Fall
    Armyworm of corn causes damage in the early stages of the crop, the larvae gnaw
    through the epidermis of the underside of the leaf, creating translucent \"windows\".
    Later, in the third instar, they will begin to eat the entire leaf, leaving irregular
    holes in it, and then they will move towards the fruit, where they will begin
    to eat it, causing it to lose an important part of its commercial value [22].
    Fig. 1. Spodoptera frugiperda. Source: [21] Show All This work shows the design
    and implementation of a network of electronic insect traps for the Fall Armyworm
    population density in corn. The purpose is to provide spatial information on the
    behavior of pest-insect infestation sources in corn and thus allow the farmer
    to make more accurate decisions when choosing the areas where the input applications
    are convenient, with variable rate concepts. Current IoT-based systems for integrated
    pest management are mostly theoretically limited in proof-of-concept experiences.
    They are too generic or specific and do not explicitly address the implementation
    of the system to facilitate replicability and expedite the implementation of new
    systems. The proposed system aims to contribute to some challenges of the use
    of IoT for integrated pest management. First, the development of an automated
    application for counting insects-pests with the integration of different technologies
    such as IoT, artificial intelligence, and cloud computing. Secondly, the automatic
    mapping of population density is a decision-making tool in integrated pest management.
    Third, its potential as a preventive biological management tool is applied before
    insects become pests and cause economic damage. SECTION II. MATERIALS AND METHODS
    A. Study Field Description This study is developed in the Libertad Research Center
    of the Colombian Corporation for Agricultural Research – AGROSAVIA, located in
    Villavicencio municipality, kilometer 17 of the road that leads to Puerto López
    – Meta, Colombia. The pilot crop is located at 4°03’31\" North latitude and 73°27’58\"
    West. The average annual rainfall in the region is 2,933 mm, and the average temperature
    of 26 °C [23]. The Libertad Research Center has an extension of 1,332 hectares,
    with agroecological zones of humid alluvial valleys, acid soils of low fertility,
    classified as oxisols for agricultural purposes. Its landscape is made up of high,
    medium and low terraces, typical of the Colombian Piedmont subregion. The crop
    planted in the study area is corn. B. Intelligent system for detection and mapping
    insect-pest population Fig. 2 shows the intelligent system for detecting and mapping
    the density of insect-pest population in crops using machine learning techniques
    and IoT, proposed in this research. Knowing something about the current state
    of the environment is not always enough to decide what to do. The system needs
    some sort of information that describes situations that are desirable, for example,
    apply or not crop inputs. The system can combine this with a decision support
    system to choose actions in the field. Irrespective of the representation form
    employed, it is rarely feasible for the agent to precisely ascertain the present
    condition of a partially observable environment, as in this case a corn field.
    Instead, the \"what the world is like now\" in Fig. 2, embodies the best guess
    or best guesses. Consequently, uncertainty regarding the current state may be
    inescapable, yet the intelligent system must still reach a decision. Fig. 2. Intelligent
    system architecture. Source: Authors. Show All An aspect that may not be immediately
    apparent concerning the internal \"state\" retained by an intelligent system is
    that it need not provide a literal description of \"what the world is like now.\"
    The system keeps tabs on the world''s state and selects an action that will, over
    time, result in the attainment of the most favorable outcomes, using the decision
    support system and its comprehension of the current world situation. The intelligent
    system allows data acquisition from the environment using the perception system.
    The perception system uses an Electronic Traps Array (ETAR) and an Environmental
    Data Subsystem (EDS). The intelligent system can determine the population of insects
    in the crop by receiving data from the perception system, storing it in a database,
    and mapping their spatial distribution in the field. According to the obtaining
    infestation map, agronomists or experts in pest-integrated management decide actions
    or activities. The development system involves the integration of several components.
    This section describes the general structure of the system and the software and
    hardware requirements to achieve its correct operation. First, the hardware requirements
    and specifications are presented for the perception system. Then, the methodological
    aspects of the software development process are discussed. Finally, the underlying
    reasoning algorithms are introduced for detecting and counting insects. C. Electronic
    Traps Array - Design Specifications The ETAR integrates several insect electronic
    trap nodes (ETNO). The hardware design for the perception system ETAR uses low-cost
    electronic devices that enable modularity and reproducibility. A wireless mesh
    network connects sensor nodes and the central station (CS). As shown in Fig. 3,
    each ETNO uses a 12V rechargeable battery and a 10W solar panel, a Raspberry Pi®
    Zero W and communication between nodes uses XBee™ RF modules (Digi International,
    Minnetonka, Minn.) with ZigBee™ protocol. ZigBee™ uses a frequency of 2.4 GHz
    and has 3200 meters of range with an omnidirectional antenna - (high gain - 6
    dB). Each ETNO uses a second-generation Raspberry Pi camera module V2 (RPI-CAM-V2),
    with a fixed focus lens, based on a Sony Exmor IMX219. A sensor capable of a maximum
    of 1080P30 and 8MP Stills in Raspberry Pi® Board and 2A Power Supply (Spectrum
    Technologies, Inc., Aurora, IL, E.U.). The perception system program captures
    data at 12-hour intervals, with reconfiguration options. Fig. 3. Electronic Trap
    Array architecture. Show All D. Central Station - Hardware components The core
    of the Central Station module (CS) is a Raspberry Pi® 3 model B. The CS acquires
    data from sensor nodes and sends it to a web server for mapping and monitoring.
    The CS stores the data in an internal database. The software uses Python™ 3 and
    Qt5. E. Insect detection and counting subsystem. Two strategies were implemented
    for detecting and counting insects. The former uses image processing techniques
    based on acquisition, enhancement, restoration, color processing, morphological
    processing, segmentation, representation, description and object recognition.
    The second strategy uses deep learning strategies for detecting and counting insects.
    This work shows only de first method. The comparison of these strategies will
    be reported in other publications. SECTION III. Results and Discussion This work
    shows the progress of a project that aims to develop an electronic trap for field
    detection of Fall Armyworm (Spodoptera Frugiperda) in corn. Fig. 4 shows the diagram
    with electronic components used trap implemented in the field. Fig. 4. Electronic
    Trap Components. Show All Fig. 5 illustrates the electronic trap implementations
    for data acquisition. As can be seen in Fig. 5.a, the trap components were integrated
    into a single device with environmental protection to rain, moisture, dust and
    temperature. Fig. 5.b shows the trap implementation with the solar supply system.
    The detection and counting algorithms were developed in Python™ 3. OpenCV (Open
    Source Computer Vision Library - CV2) was used for acquisition and image processing.
    CV2 is an open source computer vision and machine learning software library. Fig.
    6 shows Fall Armyworm insects trapped on a sticky paper. The process began with
    capturing images of the insects within the electronic trap. The Raspberry Pi camera
    module V2 (RPI-CAM-V2) is a small, high-quality camera with features that ensure
    clarity and detail in the images. Lighting conditions are crucial to avoid shadows
    and ensure uniform illumination. To prevent detection errors, an LED was added
    to the electronic trap. However, it is important to continue studying light level
    controls to optimize the system''s performance. Fig. 5. Insect Trap implementation.
    Show All Fig. 6. Insect Trapped in the sticky paper. Source: Authors. Show All
    Fig. 7. Illustrates the results of image processing in the detection and counting
    of Fall Armyworms. Fig. 7.a. presents the original image captured by the Raspberry
    Pi® camera. Fig. 7.b. represents to the original grayscale image. Image preprocessing
    techniques were applied to enhance the image quality, which included noise reduction
    and background subtraction to isolate insects from the trap''s surroundings, facilitating
    their detection. Fig 7.c. depicts the histogram of the grayscale image employed
    in the segmentation. This procedure aims to distinguish insects from the background
    and other objects in the image through the utilization of thresholding and contour
    detection. In Fig. 7.d, the image after the threshold procedure is displayed.
    During the segmentation process, certain small objects that do not correspond
    to insects remained, must be removed. To accomplish this, morphological image
    processing techniques such as erosion, dilation and others were used. Feature
    extraction involves identifying unique characteristics of insects that can be
    used for counting them. These may include size and color. Fig. 7.e. displays the
    objects detected through edge detection using a merging algorithm. In this procedure,
    a function was used to compute the convex hull of each contour, followed by the
    grouping of adjacent convex hulls. This process amalgamates nearby contours into
    a single larger contour. Counting is accomplished by tallying the classified insects
    within images. This task is relatively straightforward when insects are well-separated,
    but it becomes more challenging in cases of overlapping or densely populated images.
    Fig. 7.f. shows the results of the recognition and counting of the moths that
    are caught in the trap. Fig. 7. Recognition and counting of moths in the electronic
    trap. (a) original image, (b) grayscale image, (c) histogram of gray levels, (d)
    image after the threshold procedure, (e) small objects removal procedure and (f)
    results of the recognition and counting of insects. Show All After counting, the
    data is transmitted to a server where it is stored in a database for further analysis.
    This data can be leveraged to monitor trends in insect populations over time and
    evaluate the efficacy of pest control measures. With the collected data, statistical
    analysis and data visualization tools can assist researchers and farmers in making
    well-informed decisions regarding pest management strategies. Continuous enhancements
    to algorithms and machine learning models may be required to enhance the detection
    of Spodoptera Frugiperda under varying environmental conditions. In certain applications,
    real-time monitoring is indispensable to provide immediate feedback for pest control
    actions. This necessitates the use of swift image processing algorithms and efficient
    hardware. Furthermore, it is imperative to validate the accuracy of the counting
    system through ground truth data or manual verification to ensure dependable results.
    The system should be adaptable to installation in several traps in the field and
    generate infestation maps. Versatility in adapting to diverse scenarios is fundamental
    for practical implementation. For future research, advanced techniques like watershed
    segmentation can be employed when insects are clustered together. Conversely,
    the study of deep learning algorithms, such as convolutional neural networks (CNNs),
    will be explored for automated feature extraction and classification. In instances
    where insects are not well-separated, advanced algorithms for object detection
    and instance segmentation can aid in accurately counting individual insects, even
    in densely populated conditions. Conclusions Agriculture is immersed in a digital
    revolution. Specifically, there is a huge amount of data sources available that
    are an incredible opportunity to exploit. In addition, the implementation of wireless
    sensor networks, artificial intelligence, machine learning and computer vision
    techniques can reduce human interventions and efforts in pest management, optimizing
    inputs and maximizing crop yields. The use of technology, electronic and software
    knowledge, and data analysis to monitor Fall Armyworm, the use of the automatic
    traps developed in this research, equipped with camera devices and wireless communication
    will allow the implementation of pest management programs, providing precise insect
    identification and updated counts by remote location in corn crops. Processing
    images for counting insects in electronic traps combines various image processing
    and machine learning techniques to provide valuable insights for agriculture and
    pest control. The accuracy, speed, and scalability of these systems play a vital
    role in optimizing pest management strategies and minimizing crop damage. Continuous
    research and development in this field are essential to improve the accuracy and
    efficiency of insect population monitoring. ACKNOWLEDGMENT A.F. Jimenez expresses
    his gratitude to the Department of Boyacá and Minciencias – Colombia for the support
    through the scholarship program No. 733 - 2015 for the Ph.D. at the Universidad
    Nacional de Colombia and to the Universidad de Los Llanos, Villavicencio, Colombia.
    The authors also express their gratitude to Andrés Javier Peña Quiñones and Elsa
    Judith Guevara from La Libertad Research Center Colombian Corporation for de Agricultural
    Research – AGROSAVIA, Villavicencio, Colombia. Authors Figures References Keywords
    Metrics Footnotes More Like This A Machine Learning based Mission Critical Data
    Transmission Protocol in Wireless Sensor Networks 2021 6th International Conference
    on Communication and Electronics Systems (ICCES) Published: 2021 A Machine Learning
    Approach for Detecting Spoofing Attacks in Wireless Sensor Networks 2018 IEEE
    32nd International Conference on Advanced Information Networking and Applications
    (AINA) Published: 2018 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings of the 2023 IEEE 6th Colombian Conference on Automatic Control,
    CCAC 2023
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Electronic Trap for Field Detection of Fall Armyworm (Spodoptera Frugiperda)
    in Corn
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Garg S.
  - Rumjit N.P.
  - Roy S.
  citation_count: '0'
  description: In the recent past, much nanotechnology research has been done in an
    effort to increase agricultural productivity. The Green Revolution led to the
    careless use of pesticides and artificial fertilizers, which reduced soil biodiversity
    and led to the development of disease and insect resistance. This article highlights
    the worldwide development and status of precision agriculture. Precision agriculture
    utilizes technologies and principles to manage spatial and temporal variability
    in agricultural production to improve crop performance and environmental quality.
    In precision agriculture (PA), information technology (IT) is used to make sure
    that crops and soil receive exactly what they require for optimal productivity
    and health. Precision farming includes the use of hardware i.e., a global positioning
    system (GPS) and geographic information system (GIS), different software of GIS,
    and traditional knowledge of agriculture management practices. The benefits of
    precision agriculture can be seen in both the economic and environmental aspects
    of agricultural production. Only nanoparticles or nanochips can transport materials
    to plants in a nanoparticle-mediated manner and create sophisticated biosensors
    for precision farming. Conventional fertilizers, insecticides, and herbicides
    can be nano encapsulated to provide exact doses to plants through a gradual, continuous
    release of nutrients and agrochemicals. The main topics included in this article
    are the variability of natural resources, variability management; administrative
    districts; the impact of precision farming technologies on farm profitability
    and the environment; innovations in sensors, controls, and remote sensing, information
    management; trends in global application and acceptance of precision farming technologies;
    potential and possibilities of technology along with challenges in agricultural
    modernization. Modern equipment and procedures based on nanotechnology have the
    ability to solve many of the issues in conventional agriculture and might transform
    this industry. There are many challenges in the implementation of smart agriculture
    equipment and approaches in the field as this technique uses both hardware and
    software. The cost of labour for managing IoT devices and the cost-of-service
    registration are included in the system operational cost. Additionally, there
    are operating costs related to the use of energy, maintenance, and communication
    between IoT devices, gateways, and cloud servers. In this review, nanotechnology
    is explored as a potential tool in precision agriculture, as well as the advantages
    of nanoparticles in agriculture, such as the use of fertilizers. By using precision
    agriculture, the food production chain can be monitored and quality and quantity
    can be managed effectively.
  doi: 10.1016/j.aac.2023.11.001
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Outline Abstract Keywords
    Abbreviations 1. Introduction 2. Major tools and technologies of precision agriculture
    3. Measurands and engineering innovations used in precision agriculture 4. Application
    of precision agriculture 5. Worldwide application of precision agriculture in
    food security 6. Nanotechnology and smart agriculture 7. Conclusion CRediT authorship
    contribution statement Declaration of competing interest Acknowledgement References
    Show full outline Figures (4) Tables (2) Table 1 Table 2 Advanced Agrochem Available
    online 9 November 2023 In Press, Corrected ProofWhat’s this? Smart agriculture
    and nanotechnology: Technology, challenges, and new perspective Author links open
    overlay panel Shivani Garg a, Nelson Pynadathu Rumjit b, Swapnila Roy c Show more
    Share Cite https://doi.org/10.1016/j.aac.2023.11.001 Get rights and content Under
    a Creative Commons license open access Abstract In the recent past, much nanotechnology
    research has been done in an effort to increase agricultural productivity. The
    Green Revolution led to the careless use of pesticides and artificial fertilizers,
    which reduced soil biodiversity and led to the development of disease and insect
    resistance. This article highlights the worldwide development and status of precision
    agriculture. Precision agriculture utilizes technologies and principles to manage
    spatial and temporal variability in agricultural production to improve crop performance
    and environmental quality. In precision agriculture (PA), information technology
    (IT) is used to make sure that crops and soil receive exactly what they require
    for optimal productivity and health. Precision farming includes the use of hardware
    i.e., a global positioning system (GPS) and geographic information system (GIS),
    different software of GIS, and traditional knowledge of agriculture management
    practices. The benefits of precision agriculture can be seen in both the economic
    and environmental aspects of agricultural production. Only nanoparticles or nanochips
    can transport materials to plants in a nanoparticle-mediated manner and create
    sophisticated biosensors for precision farming. Conventional fertilizers, insecticides,
    and herbicides can be nano encapsulated to provide exact doses to plants through
    a gradual, continuous release of nutrients and agrochemicals. The main topics
    included in this article are the variability of natural resources, variability
    management; administrative districts; the impact of precision farming technologies
    on farm profitability and the environment; innovations in sensors, controls, and
    remote sensing, information management; trends in global application and acceptance
    of precision farming technologies; potential and possibilities of technology along
    with challenges in agricultural modernization. Modern equipment and procedures
    based on nanotechnology have the ability to solve many of the issues in conventional
    agriculture and might transform this industry. There are many challenges in the
    implementation of smart agriculture equipment and approaches in the field as this
    technique uses both hardware and software. The cost of labour for managing IoT
    devices and the cost-of-service registration are included in the system operational
    cost. Additionally, there are operating costs related to the use of energy, maintenance,
    and communication between IoT devices, gateways, and cloud servers. In this review,
    nanotechnology is explored as a potential tool in precision agriculture, as well
    as the advantages of nanoparticles in agriculture, such as the use of fertilizers.
    By using precision agriculture, the food production chain can be monitored and
    quality and quantity can be managed effectively. Keywords Precision agricultureSmart
    agricultureTechnology adoptionInnovation in agricultureBiosensorsFertilisers and
    pesticidesNanotechnology Abbreviations PAPrecision AgricultureGISGeographic Information
    SystemGPSGlobal Positioning SystemNDVINormalized Difference Vegetation IndexVIVegetation
    IndicesRSRemote SensingVRTVariable-rate technologies 1. Introduction New solutions
    and technologies are constantly being proposed and implemented in order to meet
    the global needs of humanity. Numerous scientific disciplines, including physics,
    chemistry, pharmaceutical science, material science, medicine, and agriculture,
    have employed IoT and nanotechnology. With newly available technologies, precision
    agriculture was developed in the 1980s to improve the application of fertilizers
    by varying the rate and blending within fields as necessary. According to the
    Directorate-General for Internal Policies of the European Union, precision agriculture
    is a farming management concept that measures and responds to interfiled and intrafield
    variations in crops to form a decision support system for whole farm management
    and to get the most out of the resources available. Today, this concept has been
    adapted to different practices, cultures, and countries. The main goal of PA is
    to apply just enough resources to sustain or increase productivity.1,2 Around
    the world, it is being gradually introduced and evaluated in different cropping
    systems, regions, and countries.3 PA uses IoT sensors to monitor crop states at
    various growth stages using near and remote sensing techniques. By reducing farming
    inputs and avoiding serious environmental damage, precision agriculture benefits
    the environment.4 Precision farmers should be familiar with technological tools
    such as hardware, and software, and recommended management practices to gather
    and use information effectively.5 Nanoparticles with one or more dimensions of
    100nm or less are included in nanotechnology. Metal oxides, ceramics, magnetic
    materials, semiconductors, quantum dots, lipids, polymers (natural or synthetic),
    dendrimers, and emulsions are just a few examples of the numerous materials that
    may be utilized to create nanoparticles. Different plants respond differently
    to nanoparticles'' influence on growth and metabolic processes. Plant growth and
    germination processes are impacted by nanoparticle concentration. Use of pesticides
    carelessly and haphazardly leads to a rise in disease and insect resistance, lower
    soil biodiversity, the eradication of beneficial soil bacteria, bio-magnification
    of pesticides, a drop in pollinators, and the destruction of farmer allies like
    birds'' natural habitats. The uses and advantages of nanotechnology are countless.
    These include increasing agricultural output by employing fertilizers with nanoparticles
    enclosed for a delayed and sustained release of nutrients and water, insect pest
    control using formulations of herbicides and insecticides based on nanomaterials.6
    Along with the awareness of technologies, farmers should know about the economic
    and environmental benefits of precision farming. Some of the benefits of this
    contemporary nanotechnology include the use of nanoparticles to facilitate gene
    or DNA transfer in plants for the development of insect pest-resistant varieties
    and the use of nanomaterial to prepare various types of biosensors that would
    be useful in remote sensing devices required for precision farming. Traditional
    approaches to pest management, such as integrated pest management, are insufficient
    in agriculture, and the use of chemical pesticides has negative impacts on animals,
    beneficial soil bacteria, and soil fertility. Due to the widespread gene sequencing
    of microorganisms, tools like quantum dots are often and effectively utilized
    in plant pathology for routine monitoring of pathogens and beneficial organisms
    across a wide range of microorganisms and substrates. By preventing dangerous
    compounds from evaporating and seeping into the environment, nanoencapsulation
    is essential for environmental protection. By combining resource application,
    soil properties, agronomic practices, crop requirements, and plant protection
    with a converged approach across different sites, the PA facilitates precision
    land management, which can be obtained using a map-based approach or sensor-based
    information.7 Through the use of a GPS receiver and a data logger, the sequential
    method of the map-based approach receives and records data about soil sample position
    and parameters; ultimately a map is generated and processed with additional layers
    of spatially variable information.8 This article will review information about
    the use of precision farming technologies in agriculture practices and the development
    status along with prospects in future of PA. 2. Major tools and technologies of
    precision agriculture It was very difficult for the researchers to correlate the
    production techniques and crop yields with resource variability. The knowledge
    of precision agriculture components and technologies helps the farmers to better
    plan the farming methods and requirements so that they can execute them in the
    fields with the exact amount of input required. Using location-specific farming
    practices, precision farming maximizes crop production and minimizes input costs
    while reducing environmental and health risks. It involves the use of crop rotation
    and irrigation strategies to maximize crop production and minimize input costs.
    The brief of the precision agriculture working cycle is shown in Fig. 1. The different
    tools and technologies that are part of precision agriculture are listed and described
    below. Download : Download high-res image (192KB) Download : Download full-size
    image Fig. 1. Precision agriculture working cycle. 2.1. Global positioning system
    An accurate three-dimensional location data system (latitude, longitude, and elevation)
    is provided by the US Department of Defence (DoD) through the Global Positioning
    System satellite-based radio navigation system available to the public freely,
    at any time, in any weather condition. GPS navigators allow farmers to accurately
    collect soil samples every year from a specific location in the field. Scientists
    and researchers use data collection devices along with GPS for the positioning
    of pests, weed infestations, and insects.9 Using the same data, Input recommendations
    and management decisions can be based on the location and mapping of crop pest
    problem areas. The same data is used by aircraft sprayers in large fields to enable
    them to accurately swathe fields.10 GPS-equipped crop dusters apply chemicals
    only where needed, minimizing chemical drift and reducing the amount of chemicals
    used, thereby benefitting the environment and improving resource efficiency11
    (See Fig. 2). Download : Download high-res image (346KB) Download : Download full-size
    image Fig. 2. The application of the global positioning system in a precise agriculture
    system. 2.2. Mapping Fields map of crops and soil properties is the most important
    step in PA. These maps help in controlling special variability. To monitor crop
    health and soil moisture, micro or cube satellite constellations can provide daily,
    weekly, or monthly satellite image data. Data collection and precision of location
    coordinates are done with the help of GPS. Data is collected before and during
    crop production. The data is collected through sensors instruments and technologies
    such as electrical conductivity, soil moisture, and humidity probes, yield monitoring,
    crop scouting, etc..12 By using Passive Satellite Microwave Sensing Technology,
    soil water content, vegetation water content, temperature, and biomass information
    can be collected without cloud cover.13 Mapping can be done during field practices
    by remote sensing, GIS, and manually. Agriculture has benefited greatly from the
    ability of GIS to analyze and visualize agricultural workflows.14 2.3. Remote
    sensing This method is used to collect data from a distance with precision without
    coming into contact with the object. Remote sensing technologies have become more
    popular in agricultural contexts due to the widespread availability of satellites
    and unmanned aerial vehicles (UAV) and their high spatial, temporal, and spectral
    resolution.15 RS measures the visible and invisible characteristics of fields,
    converts them into spatial information, and monitors plants and soil conditions
    dynamically.12 The most commonly used instrument for visual observations is geo-referenced
    to the GIS database and digital notepad. Aerial photography and videography are
    used in PA.16 According to Yin et al.,17 RS system components are classified into
    three broad categories: the spatial foundation system, the ground base system,
    and the remote sensing data storage system. A carrier platform, a remote sensor,
    a control system and positioning system, data transmission systems, and pre-processing
    systems are included in the overall system. It has been shown through field studies
    and airborne scanner experiments that vegetation canopy reflectance properties
    are strongly correlated with soil properties and meteorological conditions and
    the same is applied in remote sensing in PA.18 An active or passive sensor measures
    the reflected radiation from vegetation or soil and measures its attributes based
    on the interaction between electromagnetic radiation and the vegetation or soil.19
    Based on geostatistical interpolation, the point data of soil test results may
    be converted into spatial coverage, which provides chemical characteristics of
    the soil, nutrient status, organic matter, salinity, moisture content, etc..16
    The georeferenced and digitalized recorded observations are imported into the
    GIS workspace, and delineations, maps, and management zones are created to enable
    the producer community in making decisions.20 A disaster''s early warning system,
    occurrence, developing risks, damage assessment, the speedy transmission of information
    about the event, and decision support are all made possible by space technology
    combined with satellite RS and communication.21 2.4. Geographic information system
    (GIS) The main technique for integrating spatial data from diverse sources into
    a computer is geographic information systems (GIS). Agricultural GIS software
    provides detailed maps of vegetation, productivity and crop information to assist
    farmers in making informed decisions. GIS is crucial for the handling and storing
    of location-specific data because it can quickly analyze and handle massive amounts
    of data.22 Analysing satellite information system maps and remote sensing data
    for land cover and land management at the same time could save time and money.21
    GIS methods are used to handle spatial data on soil characteristics, farming systems,
    insect infestations, and weather. To create future decision technologies, such
    as process models, expert systems, etc., it is necessary to aggregate the data
    acquired at various points depending on sample regimes in this stage, which is
    largely an intermediate phase. Spatial variability maps can also be used to direct
    agricultural inputs like water by analyzing soil profile water retention, bulk
    density, soil organic carbon value, pesticides, fertilizers, etc..23 GIS would
    be highly helpful for forecasting and monitoring pest infestations, yield prediction,
    and drought monitoring.21 GIS maps are useful for assessing environmental health,
    such as in studies of ambient air pollution.24 2.5. Wireless sensor networks The
    Wireless Sensor Network consists of nodes that communicate data wirelessly to
    a base station or coordinator.25 These networks can be used to collect, monitor,
    and analyze data from agriculture fields.26 WSNs should provide farmers with precise
    field information, reducing the effort and manpower required to retrieve information
    in agricultural settings.27 According to Jawed et al.,25 Signals may be lost or
    weakened in agricultural areas due to topography and the presence of obstructions.
    Since the battery of sensor nodes is their principal limitation, energy efficiency
    or energy harvesting is essential to extend battery life. 2.6. Manual mapping
    during field operations Farmers may also measure soil characteristics during tillage
    and yield recording during field operations. Manual measurements have been done
    for pest infestations, crop problems, and soil samples.28 The most reliable and
    helpful data is typically obtained from these measures because they are taken
    at a predetermined time. To convert physical and biological quantities into electronic
    value, precise and dependable sensors are required.21 3. Measurands and engineering
    innovations used in precision agriculture The measurands to monitor, sensing modalities
    to utilize, and sensor type to do the measurement will all influence the quantification
    of soil quality, environmental variables, and effects on plant phenotypes. The
    following sections provide a summary of the many types of measurements and an
    overview of the sensors used to quantify the measurements. 3.1. Measurement of
    spatial and temporal variables These are those variables that have a direct and
    significant impact on agricultural yield. These are categorized into the following
    groups. 3.1.1. Field variability These variables include slope, terrace, elevation,
    and aspects along with the proximity of field boundary and water resources. There
    is a growing understanding of how little changes in field topography such as slope,
    aspect, and depressions can influence crop growth.29 A digital elevation model
    (DEM) captures the spatial heterogeneity in topography, which may be laboriously
    constructed using traditional survey methods. Phase-smoothed differential GPS
    has been demonstrated to be able to produce DEMs with a 50–100 mm height resolution.30
    It should be feasible to detect crop height variation throughout a field using
    DEM data obtained by GPS and aerial photogrammetry to give an additional information
    layer in decision support. 3.1.2. Soil variability Several soil features must
    be considered to assess soil quality, comprehend the consequences of farm management,
    and analyze the interactions between different components of the soil. • Soil
    Moisture: Soil moisture is important in influencing productivity; hence, soil
    moisture sensors may assist farmers in using water effectively and efficiently.31
    The key indicators of sustainable agroecosystems are soil health and moisture
    retention, which is determined by monitoring soil moisture.32 • Soil Temperature:
    Temperature is the important factor in soil that affect all the processes that
    occur in the soil such as storage of organic carbon, attainment of mineral nutrients
    and water content along with these processes plant physiological characteristics
    like the function of soil microbes and growth and composition of the root are
    also influenced by soil temperature.33 On the other side, many atmospheric characteristics,
    land cover, topography, soil porosity, and bulk density affect the soil temperature.34
    The DS18B20 is a digital thermometer that does not require an external power source.
    Power can be supplied through the control line, which charges an internal capacitor
    that powers the device. The sensor monitors temperatures from 55 °C to 125 °C
    with a precision of 0.5 °C, 0.25 °C, 0.125 °C, or 0.06 °C and is user-configurable.35
    • Soil Nutrients: Soil nutrients such as phosphorous, potassium, and nitrogen
    are responsible for synthesizing metabolic energy, assimilating proteins, and
    generating ATP and their concentration varies across the field. Excess of nutrients
    in the soil leads to leaching into ground and surface water by rainwater and irrigation
    water runoff and deficiency can cause a reduction in plant growth and a change
    in plant structure.36 Nutrients in soil measurements comprise a random grid sampling
    for soil cores which is analysed using different laboratory methods such as dumas
    combustion, Kjeldahl Wet Digestion, gas chromatography, and mass spectrometry.37
    • Soil pH: Nutrient availability and solubility are influenced by soil pH and
    in turn, soil pH is affected by climate, land management practices, organic matter
    decompositions, and ammonium ion fertilizers (McCauley et al., 2009). Soil pH
    can only be measured manually. Many scientific pH probes are available that accurately
    measure the pH at room temperature. • Soil Texture: Soil texture indicates soil
    water-holding capacity and nutrient solubility.38 The profile and texture of soil
    indicate particles and size distributions of rocks, minerals and the chief of
    which are sand, clay, and silt.39 Soil texture can be determined quantitatively
    and qualitatively. The quantitative analysis gives the estimate of soil aggregates
    and qualitative methods give us a precise percentage of soil aggregates such as
    sand, clay, and silt. Soil texture does not change frequently, so the soil texture
    can be determined in the laboratory. 3.1.3. Environment variability The health
    and productivity of crops and trees are significantly impacted by environmental
    factors such as air temperature, humidity, pressure, light intensity, and wind
    speed.40 Temperature variability (low or high) affects plant growth and damages
    crops. Light helps plants in the photosynthesis process to make carbohydrates.
    Production must be stimulated by the proper amount of light, but excessive or
    insufficient lighting can have an impact on humidity, crop transpiration, and
    water balance. These factors cause abiotic stress and loss of productivity.41
    The total energy of incoming light (also known as short wave radiation) and photosynthetically
    active radiation (PAR) are two methods of measuring light. A pyranometer is used
    to measure the solar radiation flux density for short-wave radiation, while quantum
    sensors are used to detect photon irradiance for PAR.42 The amount and time of
    rainfall are some factors that can be measured using a rain gauge. A tipping bucket
    rain gauge is an illustration of this. In this case, rain is gathered and directed
    into a container resembling a lever. As soon as one side is full, it tips over
    to the opposite side, draining all the water it has accumulated and turning on
    a switch.43 Plant evapotranspiration is impacted by wind, which can also lead
    to soil erosion and animal deaths.44 Anemometers such as cup anemometers, hot-wire
    anemometers, and ultrasonic anemometers are commonly used to measure wind.45 3.1.4.
    Crop variability Crop nutrient stress for micro and macronutrient N, P, K, Ca,
    Mg, C, Fe, Mn, Zn, and Cu; crop density; crop height; Crop water stress, crop
    biophysical characteristics/leaf-area index (LAI), absorbed photosynthetically
    active radiation, and biomass; crop leaf chlorophyll concentration; and crop grain
    quality are some factors that are measured in precise agriculture for better productivity.
    Plant phenotypes are visible traits of plants, including height and leaf area,
    determined by their environment, genotype, or genetic background.46 Currently,
    imaging and remote sensing are the primary methods used for plant phenotyping;
    however, recent developments in computer vision and machine learning approaches
    have begun to be used for plant phenotyping.35 3.1.5. Other variability Plant
    diseases, insect and weed infestation, wind damage, etc. are the variability that
    influence the yield and crop growth directly and sometimes destroy the whole field
    crops. 3.2. Sensors used in precision agriculture Sensors are engineering innovations
    for precision agriculture and sustainable development. Low-cost, robust, and real-time
    sensors are needed for farmers to implement PA practices. Table 1 shows some of
    the examples of these sensors and types of factor it will measure during operations.
    This strategy enables them to increase their return on investment by increasing
    their yield per market demands and eliminating unnecessary costs. The different
    types of sensors are discussed below. Table 1. Some examples of measurement of
    soil and environmental sensors. Empty Cell Feature/Characteristics Examples of
    Sensors References Soil Sensors Moisture SEN0193, FC-28, SEN13322 38,90,91 Temperature
    DS18B20 38 Nutrients ISL29125 38 Texture In Laboratory 38 Environmental Sensors
    Humidity DHT11, DHT22 92,93 Light Intensity BH1750FVI 1,2 Temperature Si7021,
    DHT22 38,93 Atmospheric Pressure MPX4115A, BMP180 92,94 Rain Control module 95
    3.2.1. Yield sensors Yield monitoring is considered to be a conventional method
    in precise agriculture. Research is being done to create smart wearables that
    can monitor plant health with a greater resolution than remote sensing.2,47 Wearables
    for plants may assess plant metrics including water potential, tissue strain,
    volatile organic chemicals, and the microclimate.48 One of the measures that these
    wearables may capture is plant growth utilizing strain sensors based on piezoresistive,
    piezoelectric, and capacitive effects.2,49 Chlorophyll content in leaves can also
    give information regarding the health of plants as the higher the chlorophyll
    concentration, the healthier the plant.1,2 For their combined harvesters, the
    majority of significant agricultural equipment manufacturers provide optional
    yield-mapping systems.50 To determine yield during harvest seasons and direct
    VRT for nitrogen fertilizer, an optical sensor detecting spectral radiance in
    the red and NIR wavebands was utilized.51 Crop harvesting vehicles, such as combine
    and corn harvesters, are equipped with Yield Monitoring devices. They give crop
    weight yield based on time, distance, or GPS position, all of which are measured
    and recorded to within 30 cm. 3.2.2. Field sensors ZigBee, Bluetooth, Wi-Fi, GPRS/2G/3G,
    Long Range Radio (LoRa), and SigFox are a few of the wireless protocols and standards
    used in agriculture. Narrowband-IoT, SigFox, and LoRa are examples of low power
    wide area networks (LPWAN), and NB-IoT deployment, is confined to LTE base stations.52
    LoRa is now the best solution for agricultural situations due to its low power
    consumption and great communication range. Most agricultural measures, in general,
    do not require a high data rate since the data does not change frequently. During
    field scouting, Dux et al.53 employed a geo-referenced audio recorder with speech
    recognition to build field maps. While strolling or riding an ATV inside a field,
    users can record visual observations of crop growth, weeds, infections, or other
    abnormalities. An optical weed sensor was developed on the observations of spectral
    characteristics of soil, weeds, and crops.54 The green bug infestation caused
    changes in plants’ temperature sensed by an infrared plant-temperature transducer.55
    3.2.3. Soil sensors To forecast soil organic matter and moisture contents of surface
    and subsurface soils, a near-infrared (NIR) soil sensor monitored soil spectral
    reflectance within the waveband of 1600/2600 nm.56 The two primary types of soil
    moisture sensors are resistive and capacitive sensors. Resistive sensors, such
    as the FC-286 and SEN133227, employ two probes to deliver a current through the
    soil and detect resistance in order to quantify moisture.31 The WATERMARK granular
    matrix sensor is another resistive soil moisture sensor. It employs gypsum wafers
    surrounded by a porous granular filler material with embedded electrodes that
    are buried in the soil.32 Capacitive sensors, such as the EC-59, SEN019310, and
    10HS11, monitor the dielectric permittivity constant of the soil and are constructed
    of a corrosion-resistant substance, making them less prone to corrosion than resistive
    soil moisture sensors. They are also more precise since inputs like fertilizers
    have little effect on their findings.31 Pei et al.57 demonstrated the feasibility
    of estimating soil profile parameters in situ. They employ optical diffuse reflectance
    spectroscopy in the field to evaluate soil parameters such as organic carbon,
    total nitrogen, moisture, soil texture, cation exchange capacity, calcium, magnesium,
    potassium, and pH. Soil hardpan may be measured using a penetrometer in combination
    with a soil EC sensor.58 Different physical concepts, such as time-domain reflectivity
    (TDR) and standing-wave ratio, were used to create soil moisture sensors.59 3.3.
    Control units It is possible to control soil, crop, and pest variability by using
    maps that demonstrate spatial variability. Using maps that illustrate spatial
    variability, soil, crop, and pest variability can be controlled.60 3.3.1. Variable
    rate technology in agrochemical application A herbicides applicator was developed
    by Bennett and Brown61 with a direct nozzle injection system. As part of the feedback
    control of a variable-rate spreader, Swisher et al.62 developed an optical sensor
    for measuring granular fertilizer flow rates in air streams. In PA, variable rate
    technology (VRT) involves the application of inputs precisely in a variable type
    and quantity, according to the present situation and demands.63 An analysis of
    two or more variables affecting crop yield as well as the yield values of the
    crop we are interested in is conducted using VRT, resulting in management zones
    with well-defined management recommendations. Based on farm conditions such as
    crop growth stage, crop condition, and previously collected crop growth data,
    programmable machines attached to sprayers can deliver the correct amount of chemicals
    through variable rate technology (VRT) and VRA (variable rate applications).64
    A study conducted by the Nebraska Extension department in 2015 to survey the adoption
    rate of technology among Nebraska farmers found that 68 % adopted VRT.65 3.3.2.
    Automatic guidance systems A moving vehicle with different types of variable sensors
    can be positioned within 30 cm or less by using Differential GPS. The labour cost
    increases and operators often overlap the same areas in fields for agricultural
    inputs in the traditional agriculture systems. In the automatic guidance system,
    potential improvement in the agriculture input is done. In this system, the operator
    is enabled to do repetitive and hard tasks in a natural or severe environment.66
    Goddard67 suggests it could replace conventional equipment markers for spraying
    or seeding and provide a valuable tool for field scouting. 3.3.3. Robotic harvesters
    Automatic robotic harvesters work on the control unit design of image space. The
    controller is able to guide the harvester on the sloping ground.66 It is already
    commercially possible to harvest tomatoes, cherry tomatoes, cucumbers, strawberries,
    grapes, and watermelons with robots.68 4. Application of precision agriculture
    Precision agriculture is useful and environmentally friendly for farmers. Precision
    agriculture is a controlled and well-planned technique to grow crops so there
    are several benefits to using it by farmers. Fig. 3 shows the benefits of smart
    or precision agriculture over conventional agriculture. • Crop Production Efficiency:
    The key to effective seeding is controlling two variables: the depth at which
    seeds are planted, as well as the spacing between plants to allow them to grow
    as efficiently as possible. A lot of the guesswork in the seeding process is removed
    by combining geo-mapping and sensor data. There are more chances for seeds to
    sprout and grow, resulting in a greater harvest for the overall crop. Crop rotation
    is controlled by yield forecasting, planting dates, yield data, and yield data.
    • Optimization of Fertilizers and Pesticides: Maintain soil health by minimizing
    the usage of chemicals such as fertilizers, pesticides, etc. Precision agriculture
    uses modern technology (sensors) to detect and study the infestation of disease,
    weeds, and deficiencies of minerals in the soil and control and reduce the problem
    before it even starts. Optimizing the soil use preserves its quality, enabling
    a stable food supply. • Real-Time Data Provision: reduce the agricultural dependence
    on climate and weather conditions by artificial methods of providing favourable
    conditions for the growth of the plants. Precision forecast of weather patterns
    assists growers in adjusting to the conditions of the environment and mitigating
    the risks to ensure the increase of crop yield. Farmers can plan agricultural
    operations for a long time and improve food quality. • Green House Gases and Soil
    Erosion Reduction: The widespread adoption of climate-smart agriculture (CSA)
    can significantly reduce agricultural greenhouse gases (GHG) by increasing soil
    organic carbon (SOC) stocks and reducing nitrogen oxide (N2O) emissions. The soil
    GHG reductions associated with adopting CSA practices in maize (Zea mays L.) and
    soybean (Glycine max (L.) Merr.) crop production fields were estimated using a
    process-based biogeochemistry modelling framework coupled with public soils, weather,
    and yield data layers.69 Smart agriculture is a potential method that should be
    promoted in order to avoid traditional tillage techniques and preserve long-term
    food production while avoiding major land degradation, increased food insecurity
    risks, and exacerbated climate change.70 Reduced tillage operations can lower
    both CO2 emissions and fuel usage. CA is an energy-efficient system that can save
    up to 80 % of fossil fuel energy.71 • Water Conservation: Water stress caused
    by inconsistent rainfall and rising temperatures is a severe restraint on agricultural
    output globally.72 Climate-smart agriculture (CSA) strategies have been proposed
    as an effective approach for improving and preserving agriculture productivity
    in rainfed production systems in the face of climate change.73 Mulching, halfmoon
    pits, and permanent planting basins have been employed as climate change adaptation
    and mitigation measures in rainfed maize production systems in the tropics to
    boost soil moisture storage.74 • Operational Cost Reduction: Reduce the cost of
    resources and materials such as water, seeds, fuel, etc. As resources are limited
    and not available to all the growers, precision agriculture helps to manage and
    control the use of the resources in the fields. Water and fertilizer efficiency
    can be increased by employing smart irrigation techniques that save water, and
    fertilization management applications, which are essential strategies to be able
    to increase the yields required to meet the growing food needs of developing populations,
    and to minimize environmental damage as well.75 Download : Download high-res image
    (301KB) Download : Download full-size image Fig. 3. Application of smart/precision
    agriculture over conventional agriculture. All these benefits of precision agriculture
    allow farmers to improve the quality of products significantly and reduce their
    costs. 5. Worldwide application of precision agriculture in food security Global
    warming, land scarcity, population growth, industrialization, low yield, and significant
    postharvest losses present the entire world with countless and unprecedented difficulties.76
    To meet the world''s food needs, scientists from all around the world have proposed
    a number of methods and approaches to increase crop yields, decrease postharvest
    losses, and maintain sustainability.77 Agricultural management based on precision
    is a process of gathering, processing, analyzing, and combining data from individual,
    spatial, and temporal scales, along with other data, to support management decisions
    based on estimated variability in production systems, resulting in improved production
    efficiency, productivity, quality, profitability, and sustainability.2,49 As a
    result of the convergence of trends in traditional agriculture technology (e.g.,
    tractors, equipment, crop genetics, pesticides, fertilizers), and computer technology
    (e.g., global navigation satellite systems (GNSS), sensors, computer processor
    capabilities, variable rate technology [VRT] and telematics), the adoption of
    a PA management system has become increasingly popular. In the 1990s, US and Canada
    adopted the PA for the fields as these countries have large farms, high income,
    and resources such as government and universities organized extension systems,
    the possibility of investment, and the grower''s willingness to adopt technology.78
    The most commonly used PA technology is automatic equipment guidance where the
    operator intercepts signals to operate the equipment vehicles in the fields. It
    is estimated that the global navigation satellite system (GNSS) is used by approximately
    75 % of Australians, 59 % of Canadians, and about half of the British growers.79
    A major area in which PA can make a positive contribution to food security is
    by integrating field-level production information into the supply chain, beyond
    the farm gate, by increasing the food supply chain''s ability to respond to such
    disruptions.80 Recent studies have demonstrated that nanotechnology may benefit
    the agricultural industry by increasing the effectiveness of agricultural inputs
    and offering answers to challenges in the field to raise food security and production.81
    Precision agriculture can be revolutionized by nanotechnology, offering new tools
    and techniques for farmers and growers. Nanotechnology also has the potential
    to enhance agricultural productivity and efficiency while addressing food security,
    environmental sustainability, and socioeconomic issues.82 Plant fibers and seeds
    can also be enhanced by nanotechnology to become more resistant to pests and weathering.83
    As a result of the application of nanotechnology to fertilizers and pesticides,
    the dosage of fertilizers and pesticides used can be reduced even further, thereby
    reducing the environmental impact associated with the excessive applications of
    these chemicals.82 6. Nanotechnology and smart agriculture This significant increase
    in global population and the subsequent rise in food demand pose significant challenges
    for agricultural production.84 To meet the growing demand, the development and
    implementation of innovative strategies are crucial. Nanotechnology is a growing
    and extended area of science that has been used in many fields such as medicine,
    agriculture, chemistry, etc. Modern agriculture is also adopting nanotechnology
    to make the precision agriculture concept true. Nanomaterials have many applications
    in agriculture such as the management of farm practices, nutrition, and plant
    protection from diseases and weeds.85 The nanoparticle concentration affects the
    germination and growth of plants in the fields.86 The use of nanomaterials in
    agriculture includes the production of biosensors, the formulation of nanopesticides,
    and nanofertilizers, and the genetic modification of plants and animals with desirable
    characteristics.87 There are three categories of nanoparticles used in agriculture
    i.e. organic, inorganic and carbon-based. As an innovative method for reducing
    waste generation and maintaining ecosystem sustainability, nanomaterials synthesized
    by biological methods such as plant extracts have emerged.88 For nanoparticle
    synthesis, different types of biological sources are used in precision farming.89
    Some examples of nanoparticles and their uses in precision agriculture are discussed
    below and Table 2 shows the brief of the application these nanoparticles in agriculture.
    Table 2. Nanoproducts and their Applications in Agriculture. Nanoproducts Applications
    References Zinc oxide, Titanium dioxide, and silver nanoparticles Boost growth
    and antioxidant properties in tomatoes, Plant Growth Promotion, 96,97 Zeolite
    and Nanoclays Slow release of agrochemicals and water retention for proper availability
    and absorption by the plants 98 Nano sensors Pesticides detection, plant nutrition
    detection Zhang et al., 2016;99 Nano herbicides Encapsulation of herbicides in
    nanoparticles to eradicate weeds 100 Nano fungicides Antifungal agents against
    pathogenic fungi 101 6.1. Zinc oxide nanoparticles Zinc is an important micronutrient
    that deficiency adversely affects agricultural production in alkaline soil.102
    The pH of the alkaline soil limits the availability and solubility of zinc to
    plants. Some of the commonly used zinc fertilizers are zinc oxide and zinc sulphates.103
    But the non-availability of zinc to plants in alkaline soil limited the use of
    these fertilizers in the fields. The solubility of zinc and its availability in
    soil with calcium carbonate may increase with the use of zinc oxide nanoparticles.
    Because nanoparticles of zinc oxide have a small size of less than 100 nm and
    a high surface-to-volume ratio, they exhibit much better antimicrobial activity
    than large zinc particles.104 Zinc oxide nanoparticles are biosynthesized from
    plant leaf extract with zinc acetate dehydrate or zinc sulphate heptahydrate in
    water and ethanol or methanol.105 Wheat has been shown to be induced by zinc nanoparticles
    to form free radicals, resulting in higher malondialdehyde levels and lower glutathione
    levels and chlorophyll levels.106,107 6.2. Titanium dioxide nanoparticles Titanium
    dioxide is used in the manufacture of pigment and is also used a as popular photo-catalyst.108
    It has been shown that titanium dioxide is capable of degrading pesticides by
    photocatalysis.109 The aqueous leaf extract of Psidium guajava was used to synthesize
    spherical nanoparticles of titanium dioxide with an average size of 32.58 nm.110
    A synthesized TiO2 nanoparticle exhibited improved antibacterial properties compared
    to tetracycline, reducing the chance of bacterial species developing antibiotic
    resistance. A leaf extract of Eclipta prostrata has been successfully synthesized
    into spherical clusters of polydisperse titanium dioxide nanoparticles with a
    diameter range of 36–68 nm.111 In vitro antibacterial tests revealed that 0.01–0.1
    mg mL1 TiO2 NPs had good bioactivity against R. solanacearum at various time intervals
    (6 h, 12 h, and 24 h). As TiO2 NP concentration increased, the degree of damage
    caused by TiO2 NPs increased, causing the membranes to disorganize and weaken.112
    6.3. Silver nanoparticles Silver nanoparticles can be synthesized from different
    sources such as fungi, bacteria, plants, etc., and are used against harmful microorganisms
    in plants. In comparison to bulk silver, silver nanoparticles have a significantly
    greater antibacterial impact due to their large surface area and surface atom
    content.113 The use of silver nanoparticles’ antibacterial properties to combat
    plant diseases is becoming more popular. It has been shown that white radish may
    produce silver nanoparticles with diameters ranging from 6 to 38 nm by biological
    means.114 It has been investigated that silver nanoparticles with a diameter of
    20 nm affect the seeds of fenugreek (Trigonella foenum-graecum).115 The greatest
    seed germination (76.11 %), speed of germination (4.102), root length (76.94 mm),
    root fresh weight (2.783), and root dry weight (1.204) were achieved at a concentration
    of 10 g mL1. According to these results, seedling fresh weight and dry weight
    could be significantly improved by the application of silver nanoparticles, as
    well as seed germination potential and seed germination index.105 6.4. Silica
    nanoparticles Silica nanoparticles are made using surfactants such as cetyltrimethylammonium
    bromide as templates (or structure-directing agents) and silica precursors such
    as tetraethyl orthosilicate or sodium metasilicate (Na2SiO3).116 Silicon nanoparticles
    may also be employed as protein, nucleotide, and other chemical delivery agents
    in plants; nano zeolite and nanosensors integrate Si-NPs and can be used efficiently
    in agriculture for enhancing soil water retention and soil monitoring, respectively.117
    A new kind of Nano silica fungicide has been developed and proven to reduce late
    blight by producing intracellular peroxidation damage to Phytophthora infestans,
    the pathogen linked with potato late blight. Mesoporous silica nanoparticles (MSNs)
    inhibited P. infestans 98.02 % of the time, inducing oxidative stress responses
    and cell structural degradation.118 6.5. Applications of nanotechnology in PA
    Nanotechnology has multiple potential uses in various stages of agriculture, including
    crop growth, production, processing, storage, packaging, and transportation.119
    Nanoparticles with unique features may be easily manufactured from many biological
    sources and used in agriculture. Plant extracts (leaves, flowers, stems, roots)
    from a wide variety of plant species have been effectively used to synthesize
    nanoparticles. In a single step of the green synthesis, biomolecules found in
    plant extracts convert metal ions to nanoparticles. This green synthesis technique
    is environmentally benign, simple to conduct, can be done at room temperature
    without the use of special tools, and can be readily scaled up or adjusted to
    meet the demands. Some important application of nanotechnology is described below
    and Fig. 4 show the pictorial representation of these application in brief. Download
    : Download high-res image (202KB) Download : Download full-size image Fig. 4.
    Application of nanotechnology in precision agriculture. 6.5.1. Insect pest management
    Nanoparticles such as silver nanoparticles, aluminium oxide, zinc oxide, and titanium
    dioxide have been studied for their effectiveness in controlling rice weevils
    (caused by Sitophilus oryzae) and grasserie disease in silkworms (caused by Bombyx
    mori and baculovirus BmNPV).120 Silica nanoparticles were tested against rice
    weevils Sitophilus oryzae and compared with bulk silica (individual particles
    larger than 1.0 mm) for entomotoxicity (Debnath et al., 2011). Because of their
    slow and sustained release, nano-encapsulated pesticides absorb effectively into
    plants, having a long-lasting and persistent effect, unlike conventional pesticides.121
    • Nano Fungicides Pathogenic diseases caused by fungi cause great loss to farmers.
    There are so many chemical fungicides available in the market to treat such fungi
    but they have harmful effects on food crops. Compared to zinc oxide and titanium
    dioxide nanoparticles, silver nanoparticles showed higher antifungal activity
    at lower concentrations.122 In comparison to bulk silica, maize treated with nano-silica
    (20–40 nm) was tested for resistance to phytopathogens Fusarium oxysporum and
    Aspergillus niger. The nano silica-treated plant had larger levels of phenolic
    compounds in leaf extracts (2056 and 743 mg/mL, respectively) and lower levels
    of stress-responsive enzymes against such fungus. As a result, silica nanoparticles
    can be utilized as a strong antifungal agent against phytopathogens.123 • Nano
    Herbicides Weeds are unwanted plants that compete and harm the crop plants in
    the agriculture fields. Removing weeds from field by traditional means is time
    consuming and costly. Certain chemical such as herbicides used to remove weeds
    but they also affect food crops. Nano herbicides can play a critical role in eradicating
    weeds from crops in an environmentally benign manner, leaving no toxic residues
    in the soil or environment.124 Weeds develop resistance to the same herbicide
    when it is used repeatedly over a long period of time. The dechlorination of herbicide
    atrazine (2-chloro-4ethylamino-6-isopropylamino-1,3,5triazine) in soil and water
    has been evaluated using nano zerovalent iron (nano ZVI).125 Herbicide-loaded
    target-specific nanoparticles have been designed for delivery in weed roots. These
    chemicals penetrate weed roots, translocate to cells, block metabolic processes
    such as glycolysis, and cause plant death.126 6.5.2. Nanosensors A wide variety
    of agriculture applications can be sensed using nano biosensors, including fertilizers,
    herbicides, pesticides, insecticides, moisture, and soil pH.2,47 Smart sensors,
    when combined with precision farming, can enhance productivity by improving fertilization
    management, reducing input costs, and protecting the environment. The presence
    of plant viruses, soil nutrients, and crop pathogens can be detected by nano sensors.127
    A precision farming approach based on nano sensors could increase the efficiency
    of natural resources like water, nutrients, and agrochemicals.128 The use of nanosensors
    also enables the rapid detection of bacteria and viruses with precise quantification,
    enhancing food safety for consumers.129 Electrochemically functionalized single-walled
    carbon nanotubes (SWCNTs) based nanosensors with metal/metal oxide nanoparticles
    or nanotubes for gases such as ammonia, nitrogen oxides, hydrogen sulphide, Sulphur
    dioxide, and volatile organics have potential applications in agricultural pollutants
    monitoring and assessment of impacts on the living matter or health, as well as
    a crop productivity enhancement.130 The use of nanosensors has successfully converted
    a spinach plant into an auto-sampler that relays information via infrared, or
    a plant can produce light signals according to its surroundings.131 7. Conclusion
    With the help of geographical and temporal data, precision agriculture has been
    able to provide farmers with the knowledge they need to manage their fields effectively.
    This enables them to use resources effectively without reducing production. However,
    mono-cropping is a major concern for the majority of these methods. There is more
    that can be done to support the expanding population while safeguarding the environment,
    even while cutting back on farm input has a good impact on the environment. This
    can be used in agroforestry and other types of farming to manage the land. Because
    the primary goal of precision agriculture is to maximize yield by optimizing resources
    such as water, pesticides, fertilizers, and so on, prescription maps play an important
    role in enabling farmers to quantify the resources required for healthy crops
    at any given growth stage. Most of the research accomplished in the agriculture
    domain focuses on the remote sensing platforms to collect imagery, which reflects
    only Vegetation Indices (VIs) such as NDVI. The prescription maps cannot be generated
    by only using VIs; instead, multiple other factors need to be considered such
    as soil properties, soil moisture level, meteorological behavior, etc. Precision
    agriculture helps to achieve the food security goals such as availability. assess,
    utilization, and stability of the Food Agriculture Organization. In a single step
    of the green synthesis, biomolecules found in plant extracts convert metal ions
    to nanoparticles. This green synthesis technique is environmentally benign, simple
    to conduct, can be done at room temperature without the use of special equipment,
    and can be readily scaled up or adjusted to meet the demands. A controlled-release
    formulation of nanoparticles based on nanotechnology has demonstrated promising
    results in improving plant disease resistance, plant growth, and nutrition using
    site-specific delivery of fertilizers and other essential nutrients. By enhancing
    penetration and allowing the release of active ingredients slowly and continuously,
    nanoencapsulation is also capable of improving herbicide application. In modern
    agriculture, biotechnological advances and the use of nanomaterials to develop
    rapid and more precise diagnostic tools have a great and promising future. With
    the changes climatic conditions, conservation agriculture along with smart agriculture
    techniques is the best solution to fulfil the need of food of population of world.
    CRediT authorship contribution statement Shivani Garg: Supervision, Writing –
    original draft, Writing – review & editing. Nelson Pynadathu Rumjit: Writing –
    review & editing. Swapnila Roy: Writing – review & editing. Declaration of competing
    interest There is no conflict of interest in this regard. Acknowledgement There
    is no funding available or provided by any agency for framing this review article.
    References 1 A. Zhang, G. Zheng, C.M. Lieber Nanowires: Building Blocks for Nanoscience
    and Nanotechnology (2017) Google Scholar 2 R. Zhang, Z. Ren, J. Sun, W. Tang,
    D. Ning, Y. Qian Method for monitoring the cotton plant vigor based on the WSN
    technology Comput Electron Agric, 133 (2017), pp. 68-79 View PDFView articleGoogle
    Scholar 3 P.C. Robert Precision agriculture: a challenge for crop nutrition management
    Progress in Plant Nutrition: Plenary Lectures of the XIV International Plant Nutrition
    Colloquium, Springer, Dordrecht (2002), pp. 143-149 View in ScopusGoogle Scholar
    4 J. Mateo-Sagasta, S.M. Zadeh, H. Turral, J. Burke Water Pollution from Agriculture:
    A Global Review Executive summary (2017) Google Scholar 5 A. Muller, C. Schader,
    N. El-Hage Scialabba, et al. Strategies for feeding the world more sustainably
    with organic agriculture Nat Commun, 8 (1) (2017), pp. 1-13 View in ScopusGoogle
    Scholar 6 K. Lee, S. Park, D.H. Jo, et al. Self-plugging microneedle (SPM) for
    intravitreal drug delivery (adv. Healthcare mater. 12/2022) Adv Healthcare Mater,
    11 (12) (2022), Article 2270068 Google Scholar 7 H. Auernhammer Precision farming—the
    environmental challenge Comput Electron Agric, 30 (1-3) (2001), pp. 31-43 View
    PDFView articleView in ScopusGoogle Scholar 8 V.I. Adamchuk, J.W. Hummel, M.T.
    Morgan, S.K. Upadhyaya On-the-go soil sensors for precision agriculture Comput
    Electron Agric, 44 (1) (2004), pp. 71-91 View PDFView articleView in ScopusGoogle
    Scholar 9 H. Chhipa Nano fertilizers and nanopesticides for agriculture Environ
    Chem Lett, 15 (1) (2017), pp. 15-22 CrossRefView in ScopusGoogle Scholar 10 E.
    Raj, M. Appadurai, K. Athiappan Precision farming in modern agriculture Smart
    Agriculture Automation Using Advanced Technologies, Springer, Singapore (2021),
    pp. 61-87 CrossRefGoogle Scholar 11 J. Billingsley Global positioning systems
    (GPS) for agriculture: an overview Robot Autom Improv Agric (2019), pp. 101-106
    CrossRefGoogle Scholar 12 R. Heimlich Agric. Outlook (1998), pp. 19-23 April 1998
    Google Scholar 13 J. Byabazaire, G.M. O''Hare, R. Collier, C. Kulatunga, D. Delaney
    A comprehensive approach to assessing yield map quality in smart agriculture:
    void detection and spatial error mapping Agronomy, 13 (7) (2023), p. 1943 CrossRefView
    in ScopusGoogle Scholar 14 M.C.F. Wei, L.F. Maldaner, P.M.N. Ottoni, J.P. Molin
    Carrot yield mapping: a precision agriculture approach based on machine learning
    Ai, 1 (2) (2020), pp. 229-241 CrossRefView in ScopusGoogle Scholar 15 R.P. Sishodia,
    R.L. Ray, S.K. Singh Applications of remote sensing in precision agriculture:
    a review Rem Sens, 12 (19) (2020), p. 3136 CrossRefGoogle Scholar 16 B. Brisco,
    R.J. Brown, T. Hirose, H. McNairn, K. Staenz Precision agriculture and the role
    of remote sensing: a review Can J Rem Sens, 24 (3) (1998), pp. 315-327 CrossRefView
    in ScopusGoogle Scholar 17 N. Yin, R. Liu, B. Zeng, N. Liu A review: UAV-based
    remote sensing IOP Conference Series: Materials Science and Engineering, vol.
    490, IOP Publishing (2019, April), Article 062014 6 CrossRefView in ScopusGoogle
    Scholar 18 S.K. Seelan, S. Laguette, G.M. Casady, G.A. Seielstad Remote sensing
    applications for precision agriculture: a learning community approach Remote Sens
    Environ, 88 (1-2) (2003), pp. 157-169 View PDFView articleView in ScopusGoogle
    Scholar 19 D.J. Mulla Twenty-five years of remote sensing in precision agriculture:
    key advances and remaining knowledge gaps Biosyst Eng, 114 (4) (2013), pp. 358-371
    View PDFView articleView in ScopusGoogle Scholar 20 E. Tayari, A.R. Jamshid, H.R.
    Goodarzi Role of GPS and GIS in precision agriculture J Sci Res Develop, 2 (3)
    (2015), pp. 157-162 Google Scholar 21 D. Mandal, S.K. Ghosh Precision farming–The
    emerging concept of agriculture for today and tomorrow Curr Sci, 79 (12) (2000),
    pp. 1644-1647 Google Scholar 22 B.L. Lee, Y.C. Kim, M.E. Park Interactive web
    interface for GIS applications in Agriculture Kor Agric Inform Technol, 6 (1)
    (1997), pp. 136-139 View in ScopusGoogle Scholar 23 V.K. Singh, V. Govil, S.K.
    Singh, et al. Precision nutrient management strategies using GIS-based mapping
    in Western Uttar Pradesh Better Crops South Asia, 6 (1) (2012), pp. 15-18 CrossRefView
    in ScopusGoogle Scholar 24 W. Du, W. Zhang, H. Hu, M. Zhang, Y. He, Z. Li A GIS-Based
    Spatial Correlation Analysis for Ambient Air Pollution and AECOPD Hospitalizations
    in Jinhua (2020) China Google Scholar 25 H.M. Jawad, R. Nordin, S.K. Gharghan,
    A.M. Jawad, M. Ismail Energy-efficient wireless sensor networks for precision
    agriculture: a review Sensors, 17 (8) (2017), p. 1781 CrossRefView in ScopusGoogle
    Scholar 26 S.A. Kumar, P. Ilango The impact of wireless sensor network in the
    field of precision agriculture: a review Wireless Pers Commun, 98 (1) (2018),
    pp. 685-698 CrossRefView in ScopusGoogle Scholar 27 J. Haule, K. Michael Deployment
    of wireless sensor networks (WSN) in automated irrigation management and scheduling
    systems: a review Proceedings of the 2nd Pan African International Conference
    on Science, Computing and Telecommunications (PACT 2014), IEEE (2014, July), pp.
    86-91 CrossRefView in ScopusGoogle Scholar 28 J.V. Stafford, J.M. Lebars, B. Ambler
    Comput Electron Agric, 14 (1996), pp. 234-247 Google Scholar 29 T.F.A. Bishop,
    A.B. McBratney Interpolation techniques for creating digital elevation models
    Precision Agriculture''99, Part 1 and Part 2. Papers Presented at the 2nd European
    Conference on Precision Agriculture, Odense, Sheffield Academic Press (1999),
    pp. 635-646 Denmark, 11-15 July 1999 Google Scholar 30 D.C. Russell, A.H. Dodson,
    M.J. Smith, M.D. Steven, J.V. Stafford Elevation modeling using GPS for use in
    precision agriculture Proc GIS Brasil’99 (1999) Google Scholar 31 P. Barapatre,
    J.N. Patel Determination of soil moisture using various sensors for irrigation
    water management Int J Innovative Technol Explor Eng, 8 (7) (2019), pp. 576-582
    View in ScopusGoogle Scholar 32 B. Kashyap, R. Kumar Sensing methodologies in
    agriculture for soil moisture and nutrient monitoring IEEE Access, 9 (2021), pp.
    14095-14121 CrossRefView in ScopusGoogle Scholar 33 K.S. Pregitzer, J.S. King
    Effects of soil temperature on nutrient uptake Nutrient Acquisition by Plants,
    Springer, Berlin, Heidelberg (2005), pp. 277-310 CrossRefGoogle Scholar 34 M.
    Lehnert Factors affecting soil temperature as limits of spatial interpretation
    and simulation of soil temperature Acta Univ Palacki Olomuc Gymnica, 45 (1) (2014),
    pp. 5-21 Google Scholar 35 E.S.R. Brick, J. Holland, D.E. Anagnostou, K. Brown,
    M.P. Desmulliez A review of agroforestry, precision agriculture, and precision
    livestock farming—the case for a data-driven agroforestry strategy Front Sensor,
    3 (2022), Article 998928 Google Scholar 36 L. Burton, K. Jayachandran, S. Bhansali
    The “Real-Time” revolution for in situ soil nutrient sensing J Electrochem Soc,
    167 (3) (2020), Article 037569 CrossRefView in ScopusGoogle Scholar 37 R.F. Muñoz-Huerta,
    R.G. Guevara-Gonzalez, L.M. Contreras-Medina, I. Torres-Pacheco, J. Prado-Olivarez,
    R.V. Ocampo-Velazquez A review of methods for sensing the nitrogen status in plants:
    advantages, disadvantages and recent advances Sensors, 13 (8) (2013), pp. 10823-10843
    CrossRefView in ScopusGoogle Scholar 38 V. Grimblatt, G. Ferré, F. Rivet, C. Jego,
    N. Vergara Precision agriculture for small to medium size farmers—an IoT approach
    2019 IEEE International Symposium on Circuits and Systems (ISCAS), IEEE (2019,
    May), pp. 1-5 CrossRefGoogle Scholar 39 A.R. Dexter Soil physical quality: Part
    I. Theory, effects of soil texture, density, and organic matter, and effects on
    root growth Geoderma, 120 (3-4) (2004), pp. 201-214 View PDFView articleView in
    ScopusGoogle Scholar 40 A. Ferrante, L. Mariani Agronomic management for enhancing
    plant tolerance to abiotic stresses: high and low values of temperature, light
    intensity, and relative humidity Horticulturae, 4 (3) (2018), p. 21 CrossRefView
    in ScopusGoogle Scholar 41 L. Mariani, A. Ferrante Agronomic management for enhancing
    plant tolerance to abiotic stresses—drought, salinity, hypoxia, and lodging Horticulturae,
    3 (4) (2017), p. 52 CrossRefView in ScopusGoogle Scholar 42 M.W. Van Iersel, M.
    Chappell, J.D. Lea-Cox Sensors for improved efficiency of irrigation in greenhouse
    and nursery production HortTechnology, 23 (6) (2013), pp. 735-746 CrossRefView
    in ScopusGoogle Scholar 43 M.T. Tabada, M.E. Loretero Application of a low-cost
    water level circuit for an accurate pulse detection of a tipping-bucket rain gauge
    as an alternative method for reed switch sensors Environ Monit Assess (2019) Google
    Scholar 44 M. Perks, M. Khomik, S. Bathgate, et al. Agroforestry in Scotland–potential
    benefits in a changing climate CXC Rep (2018) July Google Scholar 45 S.C. Wu,
    J.C. Tzou, C.Y. Ding A low-cost system for measuring wind speed and direction
    using a thermopile array and artificial neural network Appl Sci, 11 (9) (2021),
    p. 4024 CrossRefView in ScopusGoogle Scholar 46 A. Walter, F. Liebisch, A. Hund
    Plant phenotyping: from bean weighing to image analysis Plant Methods, 11 (1)
    (2015), pp. 1-11 CrossRefView in ScopusGoogle Scholar 47 H. Yin, Y. Cao, B. Marelli,
    X. Zeng, A.J. Mason, C. Cao Soil sensors and plant wearables for smart and precision
    agriculture Adv Mater, 33 (20) (2021), Article 2007764 View in ScopusGoogle Scholar
    48 J.M. Nassar, S.M. Khan, D.R. Villalva, M.M. Nour, A.S. Almuslem, M.M. Hussain
    Compliant plant wearables for localized microclimate and plant growth monitoring
    NPJ Flex Electron, 2 (2018), pp. 1-12 Google Scholar 49 C.L. Lee, R. Strong, K.E.
    Dooley Analyzing precision agriculture adoption across the globe: a systematic
    review of scholarship from 1999–2020 Sustainability, 13 (18) (2021), Article 10295
    CrossRefView in ScopusGoogle Scholar 50 N. Zhang, M. Wang, N. Wang Precision agriculture—a
    worldwide overview Comput Electron Agric, 36 (2-3) (2002), pp. 113-132 View PDFView
    articleView in ScopusGoogle Scholar 51 J.B. Solie, M.L. Stone, D.E. Needham, et
    al. In-season N fertilization using an in-season estimate of potential yield 16-19
    July, 2000 Proceedings of the 5th International Conference on Precision Agriculture,
    American Society of Agronomy, Bloomington, Minnesota, USA (2000), pp. 1-8 Google
    Scholar 52 K. Mekki, E. Bajic, F. Chaxel, F. Meyer A comparative study of lpwan
    technologies for large-scale IoT deployment ICT Express, 5 (2019), pp. 1-7 View
    PDFView articleView in ScopusGoogle Scholar 53 D.L. Dux, R.M. Strickland, D.R.
    Ess Generating Field Maps from Data Collected by Speech Recognition ASEA Paper
    (1999), pp. 99-1099 Google Scholar 54 N. Wang, N. Zhang, D.E. Peterson, F.E. Dowell
    Design of an optical weed sensor using plant spectral characteristics Biological
    Quality and Precision Agriculture II, vol. 4203, SPIE (2000, December), pp. 63-72
    View in ScopusGoogle Scholar 55 G.J. Michels, G. Piccinni, C.M. Rush, D.A. Fritts
    Using infrared transducers to sense greenbug infestation in winter wheat 5th International
    Conference on Precision Agriculture, CD-ROM, American Society of Agronomy, Precision
    Agriculture Center, University of Minnesota, St Paul, MN (2000, July) Google Scholar
    56 J.W. Hummel, K.A. Sudduth, S.E. Hollinger Soil moisture and organic matter
    prediction of surface and subsurface soils using an NIR soil sensor Comput Electron
    Agric, 32 (2) (2001), pp. 149-165 View PDFView articleView in ScopusGoogle Scholar
    57 X. Pei, K.A. Sudduth, K.S. Veum, M. Li Improving in-situ estimation of soil
    profile properties using a multi-sensor probe Sensors, 19 (5) (2019), p. 1011
    CrossRefView in ScopusGoogle Scholar 58 R.L. Clark, F. Chen, D.E. Kissel, W. Adkins
    Mapping soil hardpans with the penetrometer and electrical conductivity 16-19
    July, 2000 Proceedings of the 5th International Conference on Precision Agriculture,
    American Society of Agronomy, Bloomington, Minnesota, USA (2000), pp. 1-12 CrossRefView
    in ScopusGoogle Scholar 59 Y. Sun, M. Wang, N. Zhang Measuring soil water content
    using the principle of standing-wave ratio ASAE 1999 Annual Meeting (1999) Paper
    (No. 997063) Google Scholar 60 J.V. Stafford, P.C.H. Miller P.C. Robert, R.H.
    Rust, W.E. Larson (Eds.), Proceedings of the Third International Conference on
    Precision Agriculture (1996), pp. 757-766 Minneapolis, June 23-26 Google Scholar
    61 K.A. Bennett, R.B. Brown Field Evaluation of a Site-specific Direct Injection
    Herbicide Sprayer American Society of Agricultural Engineers Annual International
    Meeting (1999), pp. 99-1102 Paper CrossRefGoogle Scholar 62 D.W. Swisher, K.A.
    Sudduth, S.C. Borgelt Optical measurement of granular fertilizer flow rates for
    precision agriculture ASAE Proc. Paper (1999), pp. 99-3111 Google Scholar 63 Y.
    Chen, H.E. Ozkan, H. Zhu, R.C. Derksen, C.R. Krause Spray deposition inside tree
    canopies from a newly developed variable-rate air-assisted sprayer Trans ASABE,
    56 (6) (2013), pp. 1263-1272 View in ScopusGoogle Scholar 64 Y. Shen, H. Zhu,
    H. Liu, Y. Chen, E. Ozkan Development of a laser-guided, embedded-computer-controlled,
    air-assisted precision sprayer Trans ASABE, 60 (6) (2017), pp. 1827-1838 CrossRefView
    in ScopusGoogle Scholar 65 I. Igor Digital Technologies in Agriculture: Adoption,
    Value Added and Overview (2018) Google Scholar 66 P. Martinet, P. Bonton, J. Gallice,
    M. Berducat, C. Debain, R. Rouveure Automatic guided vehicles in agricultural
    and green space fields FIR''98-4th French Isralei Symposium on Robotics (1998,
    May), pp. 87-92 Google Scholar 67 T. Goddard What is precision farming? Proceedings:
    Precis Farming Conf, 20 (1997, January) Google Scholar 68 M. Umeda, S. Kubota,
    M. Iida Development of “STORK”, a watermelon-harvesting robot Artif Life Robot,
    3 (1999), pp. 143-147 Google Scholar 69 G. McNunn, D.L. Karlen, W. Salas, et al.
    Climate-smart agriculture opportunities for mitigating soil greenhouse gas emissions
    across the US Corn-Belt J Clean Prod, 268 (2020), Article 122240 View PDFView
    articleView in ScopusGoogle Scholar 70 R. Mrabet Sustainable agriculture for food
    and nutritional security Sustainable Agriculture and the Environment, Academic
    Press (2023), pp. 25-90 View PDFView articleView in ScopusGoogle Scholar 71 M.
    Devkota, Y. Singh, Y.A. Yigezu, I. Bashour, R. Mussadek, R. Mrabet Conservation
    agriculture in the drylands of the Middle East and North Africa (MENA) region:
    past trend, current opportunities, challenges and future outlook Adv Agron, 172
    (2022), pp. 253-305 View PDFView articleView in ScopusGoogle Scholar 72 A. Zizinga,
    J.G.M. Mwanjalolo, B. Tietjen, et al. Climate change and maize productivity in
    Uganda: simulating the impacts and alleviation with climate-smart agriculture
    practices Agric Syst, 199 (2022), Article 103407 View PDFView articleView in ScopusGoogle
    Scholar 73 J.A. Tambo, O.K. Kirui Yield effects of conservation farming practices
    under fall armyworm stress: the case of Zambia Agric Ecosyst Environ, 321 (2021),
    Article 107618 View PDFView articleView in ScopusGoogle Scholar 74 S.T. Partey,
    R.B. Zougmoré, M. Ouédraogo, B.M. Campbell Developing climate-smart agriculture
    to face climate variability in West Africa: challenges and lessons learnt J Clean
    Prod, 187 (2018), pp. 285-295 View PDFView articleView in ScopusGoogle Scholar
    75 M. Karaşahin, Ö. Dündar, A. Samancı The way of yield increasing and cost reducing
    in agriculture: smart irrigation and fertigation Turk J Agric Food Sci Technol,
    6 (10) (2018), pp. 1370-1380 CrossRefGoogle Scholar 76 N. Ndlovu, T. Mayaya, C.
    Muitire, N. Munyengwa Nanotechnology applications in crop production and food
    systems Int J Plant Breed, 7 (1) (2020), pp. 624-634 Google Scholar 77 R. Sivarethinamohan,
    S. Sujatha Unlocking the potentials of using nanotechnology to stabilize agriculture
    and food production AIP Conference Proceedings, vol. 2327, AIP Publishing (2021,
    February) 1 Google Scholar 78 A. Balafoutis, B. Beck, S. Fountas, et al. Precision
    agriculture technologies positively contributing to GHG emissions mitigation,
    farm productivity and economics Sustainability, 9 (8) (2017), p. 1339 CrossRefView
    in ScopusGoogle Scholar 79 J. Lowenberg-DeBoer, B. Erickson Setting the record
    straight on precision agriculture adoption Agron J, 111 (4) (2019), pp. 1552-1569
    CrossRefView in ScopusGoogle Scholar 80 B. Erickson, S.W. Fausti The role of precision
    agriculture in food security Agron J, 113 (6) (2021), pp. 4455-4462 CrossRefView
    in ScopusGoogle Scholar 81 H. Singh, A. Sharma, S.K. Bhardwaj, S.K. Arya, N. Bhardwaj,
    M. Khatri Recent advances in the applications of nano-agrochemicals for sustainable
    agricultural development Environmental Science: Process Impacts, 23 (2) (2021),
    pp. 213-239 CrossRefView in ScopusGoogle Scholar 82 A. Yadav, K. Yadav, R. Ahmad,
    K.A. Abd-Elsalam Emerging frontiers in nanotechnology for precision agriculture:
    advancements, hurdles and prospects Agrochemicals, 2 (2) (2023), pp. 220-256 CrossRefGoogle
    Scholar 83 Y. Shang, M.K. Hasan, G.J. Ahammed, M. Li, H. Yin, J. Zhou Applications
    of nanotechnology in plant growth and crop protection: a review Molecules, 24
    (14) (2019), p. 2558 CrossRefView in ScopusGoogle Scholar 84 M. Usman, M. Farooq,
    A. Wakeel, et al. Nanotechnology in agriculture: current status, challenges and
    future opportunities Sci Total Environ, 721 (2020), Article 137778 View PDFView
    articleView in ScopusGoogle Scholar 85 V. Ghormade, M.V. Deshpande, K.M. Paknikar
    Perspectives for nano-biotechnology enabled protection and nutrition of plants
    Biotechnol Adv, 29 (6) (2011), pp. 792-803 View PDFView articleView in ScopusGoogle
    Scholar 86 L. Zheng, F. Hong, S. Lu, C. Liu Effect of nano-TiO 2 on strength of
    naturally aged seeds and growth of spinach Biol Trace Elem Res, 104 (2005), pp.
    83-91 View in ScopusGoogle Scholar 87 D. Singh, B.R. Gurjar Nanotechnology for
    agricultural applications: facts, issues, knowledge gaps, and challenges in environmental
    risk assessment J Environ Manag, 322 (2022), Article 116033 View PDFView articleView
    in ScopusGoogle Scholar 88 M. Sajid, J. Płotka-Wasylka Nanoparticles: synthesis,
    characteristics, and applications in analytical and other sciences Microchem J,
    154 (2020), Article 104623 View PDFView articleView in ScopusGoogle Scholar 89
    J.S. Duhan, S.K. Gahlawat Biogenesis of nanoparticles: a review Afr J Biotechnol,
    13 (28) (2014) Google Scholar 90 A.T. Abagissa, A. Behura, S.K. Pani IoT-based
    smart agricultural device controlling system 2018 Second International Conference
    on Inventive Communication and Computational Technologies (ICICCT), IEEE (2018,
    April), pp. 26-30 CrossRefView in ScopusGoogle Scholar 91 F. Kiani, A. Seyyedabbasi
    Wireless sensor network and internet of things in precision agriculture Int J
    Adv Comput Sci Appl (2018) Google Scholar 92 P. Sanjeevi, S. Prasanna, B. Siva
    Kumar, G. Gunasekaran, I. Alagiri, R. Vijay Anand Precision agriculture and farming
    using Internet of Things based on wireless sensor network Trans Emerg Telecommun
    Technol, 31 (12) (2020), p. e3978 View in ScopusGoogle Scholar 93 C.N. Cabaccan,
    F.R.G. Cruz, I.C. Agulto Wireless sensor network for agricultural environment
    using raspberry pi based sensor nodes 2017IEEE 9th International Conference on
    Humanoid, Nanotechnology, Information Technology, Communication and Control, Environment
    and Management (HNICEM), IEEE (2017, December), pp. 1-5 CrossRefView in ScopusGoogle
    Scholar 94 N. Fahmi, S. Huda, E. Prayitno, M.U.H. Al Rasyid, M.C. Roziqin, M.U.
    Pamenang A prototype of monitoring precision agriculture system based on WSN 2017
    International Seminar on Intelligent Technology and its Applications (ISITIA),
    IEEE (2017, August), pp. 323-328 View in ScopusGoogle Scholar 95 A.M. Patokar,
    V.V. Gohokar Precision agriculture system design using wireless sensor network
    Information and Communication Technology, Springer, Singapore (2018), pp. 169-177
    CrossRefView in ScopusGoogle Scholar 96 R. Raliya, R. Nair, S. Chavalmane, W.N.
    Wang, P. Biswas Mechanistic evaluation of translocation and physiological impact
    of titanium dioxide and zinc oxide nanoparticles on the tomato (Solanum lycopersicum
    L.) plant Metallomics, 7 (12) (2015), pp. 1584-1594 View in ScopusGoogle Scholar
    97 C. Malarkodi, S. Rajeshkumar, M. Vanaja, K. Paulkumar, G. Gnanajobitha, G.
    Annadurai Eco-friendly synthesis and characterization of gold nanoparticles using
    Klebsiella pneumoniae J Nanostruct Chem, 3 (2013), pp. 1-7 View in ScopusGoogle
    Scholar 98 C. Parisi, M. Vigani, E. Rodríguez-Cerezo Agricultural nanotechnologies:
    what are the current possibilities? Nano Today, 10 (2) (2015), pp. 124-127 View
    PDFView articleView in ScopusGoogle Scholar 99 K.P. Chandrika, R.D. Prasad, V.
    Godbole Development of chitosan-PEG blended films using Trichoderma: enhancement
    of antimicrobial activity and seed quality Int J Biol Macromol, 126 (2019), pp.
    282-290 View PDFView articleView in ScopusGoogle Scholar 100 S. Kumar, G. Bhanjana,
    A. Sharma, M.C. Sidhu, N. Dilbaghi Herbicide loaded carboxymethyl cellulose nanocapsules
    as potential carrier in agrinanotechnology Sci Adv Mater, 7 (6) (2015), pp. 1143-1148
    CrossRefView in ScopusGoogle Scholar 101 S. Mishra, A. Singh, C. Keswani, H.B.
    Singh Nanotechnology: exploring potential application in agriculture and its opportunities
    and constraints Biotech Today, 4 (1) (2014), pp. 9-14 Google Scholar 102 P.N.
    Takkar, C.D. Walker The distribution and correction of zinc deficiency Zinc in
    Soils and Plants: Proceedings of the International Symposium on ‘Zinc in Soils
    and Plants’ Held at the University of Western Australia, Springer Netherlands
    (1993), pp. 151-165 27–28 September 1993 CrossRefGoogle Scholar 103 J.J. Mortvedt
    Crop response to level of water-soluble zinc in granular zinc fertilizers Fert
    Res, 33 (1992), pp. 249-255 View in ScopusGoogle Scholar 104 Y. Xie, Y. He, P.L.
    Irwin, T. Jin, X. Shi Antibacterial activity and mechanism of action of zinc oxide
    nanoparticles against Campylobacter jejuni Appl Environ Microbiol, 77 (7) (2011),
    pp. 2325-2331 View in ScopusGoogle Scholar 105 J.S. Duhan, R. Kumar, N. Kumar,
    P. Kaur, K. Nehra, S. Duhan Nanotechnology: the new perspective in precision agriculture
    Biotechnol Rep, 15 (2017), pp. 11-23 View PDFView articleView in ScopusGoogle
    Scholar 106 S.K. Panda, I. Chaudhury, M.H. Khan Heavy metals induce lipid peroxidation
    and affect antioxidants in wheat leaves Biol Plantarum, 46 (2) (2003), pp. 289-294
    View in ScopusGoogle Scholar 107 P.D. Aarti, R. Tanaka, A. Tanaka Effects of oxidative
    stress on chlorophyll biosynthesis in cucumber (Cucumis sativus) cotyledons Physiol
    Plantarum, 128 (1) (2006), pp. 186-197 CrossRefView in ScopusGoogle Scholar 108
    L. Sang, Y. Zhao, C. Burda TiO2 nanoparticles as functional building blocks Chem
    Rev, 114 (19) (2014), pp. 9283-9318 CrossRefView in ScopusGoogle Scholar 109 M.
    Pelaez, N.T. Nolan, S.C. Pillai, et al. A review on the visible light active titanium
    dioxide photocatalysts for environmental applications Appl Catal B Environ, 125
    (2012), pp. 331-349 View PDFView articleView in ScopusGoogle Scholar 110 T. Santhoshkumar,
    A.A. Rahuman, C. Jayaseelan, et al. Green synthesis of titanium dioxide nanoparticles
    using Psidium guajava extract and its antibacterial and antioxidant properties
    Asian Pac J Tropical Med, 7 (12) (2014), pp. 968-976 View PDFView articleView
    in ScopusGoogle Scholar 111 G. Rajakumar, A.A. Rahuman, B. Priyamvada, V.G. Khanna,
    D.K. Kumar, P.J. Sujin Eclipta prostrata leaf aqueous extract mediated synthesis
    of titanium dioxide nanoparticles Mater Lett, 68 (2012), pp. 115-117 View PDFView
    articleView in ScopusGoogle Scholar 112 X. Pan, D. Nie, X. Guo, et al. Effective
    control of the tomato wilt pathogen using TiO 2 nanoparticles as a green nanopesticide
    Environ Sci Nano, 10 (5) (2023), pp. 1441-1452 CrossRefView in ScopusGoogle Scholar
    113 K.H. Cho, J.E. Park, T. Osaka, S.G. Park The study of antimicrobial activity
    and preservative effects of Nano silver ingredient Electrochim Acta, 51 (5) (2005),
    pp. 956-960 View PDFView articleView in ScopusGoogle Scholar 114 M.S. Ali, M.H.N.
    Yousef, N.A. Nafady The land snail E. vermiculata is an important crop pest causing
    considerable damage in agriculture and the snail used as bioindicator organism
    of environmental pollution J Nanomater (2015) Google Scholar 115 S.S. Hojjat Impact
    of silver nanoparticles on germinated fenugreek seed Intl J Agric Crop Sci, 8
    (4) (2015), pp. 627-630 Google Scholar 116 G. Acharya, A.K. Mitra, K. Cholkar
    Nanosystems for diagnostic imaging, biodetectors, and biosensors Emerging Nanotechnologies
    for Diagnostics, Drug Delivery and Medical Devices, Elsevier (2017), pp. 217-248
    View PDFView articleView in ScopusGoogle Scholar 117 A. Rastogi, D.K. Tripathi,
    S. Yadav, et al. Application of silicon nanoparticles in agriculture 3 Biotech,
    9 (2019), pp. 1-11 CrossRefGoogle Scholar 118 S. Chen, X. Guo, B. Zhang, et al.
    Mesoporous silica nanoparticles induce intracellular peroxidation damage of Phytophthora
    infestans: a new type of green fungicide for late blight control Environ Sci Technol,
    57 (9) (2023), pp. 3980-3989 CrossRefView in ScopusGoogle Scholar 119 H. Joshi,
    P. Choudhary, S.L. Mundra Future prospects of nanotechnology in agriculture Int
    J Chem Stud, 7 (2) (2019), pp. 957-963 Google Scholar 120 A. Goswami, I. Roy,
    S. Sengupta, N. Debnath Novel applications of solid and liquid formulations of
    nanoparticles against insect pests and pathogens Thin Solid Films, 519 (3) (2010),
    pp. 1252-1257 View PDFView articleView in ScopusGoogle Scholar 121 G. Scrinis,
    K. Lyons The emerging nano-corporate paradigm: nanotechnology and the transformation
    of nature, food and agri-food systems Int J Sociol Agric Food, 15 (2) (2007),
    pp. 22-44 Google Scholar 122 K.K. Shyla, N. Natarajan, S. Nakkeeran Antifungal
    activity of zinc oxide, silver and titanium dioxide nanoparticles against Macrophomina
    phaseolina J Mycol Plant Pathol, 44 (3) (2014), pp. 268-273 Google Scholar 123
    R. Suriyaprabha, G. Karunakaran, K. Kavitha, R. Yuvakkumar, V. Rajendran, N. Kannan
    Application of silica nanoparticles in maize to enhance fungal resistance IET
    Nanobiotechnol, 8 (3) (2014), pp. 133-137 CrossRefView in ScopusGoogle Scholar
    124 A. Pérez-de-Luque, D. Rubiales Nanotechnology for parasitic plant control
    Pest Manag Sci: Formerly Pestic Sci, 65 (5) (2009), pp. 540-545 CrossRefGoogle
    Scholar 125 T. Satapanajaru, P. Anurakpongsatorn, P. Pengthamkeerati, H. Boparai
    Remediation of atrazine-contaminated soil and water by nano zerovalent iron Water
    Air Soil Pollut, 192 (2008), pp. 349-359 CrossRefView in ScopusGoogle Scholar
    126 M.A. Ali, I. Rehman, A. Iqbal, et al. Nanotechnology, a new frontier in Agriculture
    Adv Life Sci, 1 (3) (2014), pp. 129-138 CrossRefView in ScopusGoogle Scholar 127
    P.B.C. Jones A Nanotech Revolution in Agriculture and the Food Industry Information
    Systems for Biotechnology, Blacksburg, VA (2014) 2006 Google Scholar 128 V. Rai,
    S. Acharya, N. Dey Implications of nanobiosensors in agriculture J Biomaterials
    Nanobiotechnol, 3 (2012), pp. 315-324 CrossRefView in ScopusGoogle Scholar 129
    S. Otles, B. Yalcin Nano-biosensors as new tool for detection of food quality
    and safety LogForum, 6 (4) (2010), p. 7 Google Scholar 130 B.S. Sekhon Nanotechnology
    in agri-food production: an overview Nanotechnol Sci Appl (2014), pp. 31-53 CrossRefView
    in ScopusGoogle Scholar 131 M.H. Wong, J.P. Giraldo, S.Y. Kwak, et al. Nitroaromatic
    detection and infrared communication from wild-type plants using plant nanobionics
    Nat Mater, 16 (2) (2017), pp. 264-272 CrossRefView in ScopusGoogle Scholar Cited
    by (0) © 2023 The Authors. Publishing services by Elsevier B.V. on behalf of KeAi
    Communications Co. Ltd. Recommended articles Integrating explainable artificial
    intelligence and blockchain to smart agriculture: Research prospects for decision
    making and improved security Smart Agricultural Technology, Volume 6, 2023, Article
    100350 Hsin-Yuan Chen, …, Shamneesh Sharma View PDF Life cycle assessment of four
    different precision agriculture technologies and comparison with a conventional
    scheme Journal of Cleaner Production, Volume 434, 2024, Article 140198 Francisco
    Medel-Jiménez, …, Iris Kral View PDF Technological progress in the function of
    productivity and sustainability of agriculture: The case of innovative countries
    and the Republic of Serbia Journal of Agriculture and Food Research, Volume 14,
    2023, Article 100856 Miloš S. Dimitrijević View PDF Show 3 more articles Article
    Metrics Captures Readers: 35 Mentions References: 1 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Advanced Agrochem
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart agriculture and nanotechnology: Technology, challenges, and new perspective'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Wani S.P.
  citation_count: '0'
  description: Indian agriculture is the backbone of India’s food, nutrition, and
    income security as well as sustainable growth. Indian agriculture is unique with
    20 agro-eco regions, and 80 agro-eco sub-regions growing more than 100 crops in
    1000,000 villages by 145 million farm-holders. India moved from ship to mouth
    situation in the late 1960s to food self-sufficiency and has become Atmanirbhar
    and an exporter of food by producing 316.06 million tonnes in 2020-2021. However,
    rural India needs urgent attention as there is a great divide between the urban
    and rural family incomes, and the primary sector’s contribution to national GDP
    is hovering around 17-18% although the Indian economy is largely agrarian with
    950 million rural population driving the economy. However, there is a large untapped
    potential in Indian agriculture to become the growth engine for the sustainable
    development of India as large yield gaps are existing. However, the challenges
    of growing water scarcity, increasing land degradation, growing population, urbanization,
    and most importantly impacts of climate change. Due to climate change with increasing
    temperatures, aridity is increasing in the country, and rainfall variability with
    a reduced number of rainy days and increasing intensity in different parts is
    a major concern. There is an urgent need to develop and adopt large-scale climate
    resilient management practices at a local level through empowering the small farm-holders
    with strengthened science of delivery using new science tools such as remote sensing
    (RS), global information system (GIS), internet of things (IoT), information technology
    (IT), artificial intelligence (AI), machine learning (ML), etc. Business as usual
    will not work and a new paradigm through building partnerships, enhancing collective
    action, market-led agro-eco regionbased diversification and scaling-up through
    the empowerment of small farm-holders using new science tools is proposed. The
    government of India’s action plan with 11 national missions is in place and all
    stakeholders need to contribute by enabling policies and sincere implementation
    for building resilience against the impacts of climate change.
  doi: 10.54386/jam.v25i1.2011
  full_citation: '>'
  full_text: '>

    "Journal of Agrometeorology Home Current Archives Submissions Announcements Special
    Issue About Editorial Board Contact Search Register Login Home / Archives / Vol.
    25 No. 1 (2023): March (Silver Jubilee Publication) / Invited Articles New paradigm
    for transforming Indian agriculture to climate-resilient and sustainable agriculture
    is a must SUHAS P. WANI Intl. Consultant for Asian Development Bank (ADB), International
    Fund for Development (IFAD), and FAO, Bangkok, Thailand. DOI: https://doi.org/10.54386/jam.v25i1.2011
    Keywords: Climate change, climate-resilient, sustainability, atmanirbhar Bharat,
    agriculture Abstract Indian agriculture is the backbone of India’s food, nutrition,
    and income security as well as sustainable growth. Indian agriculture is unique
    with 20 agro-eco regions, and 80 agro-eco sub-regions growing more than 100 crops
    in 1000,000 villages by 145 million farm-holders. India moved from ship to mouth
    situation in the late 1960s to food self-sufficiency and has become Atmanirbhar
    and an exporter of food by producing 316.06 million tonnes in 2020-2021. However,
    rural India needs urgent attention as there is a great divide between the urban
    and rural family incomes, and the primary sector’s contribution to national GDP
    is hovering around 17-18% although the Indian economy is largely agrarian with
    950 million rural population driving the economy. However, there is a large untapped
    potential in Indian agriculture to become the growth engine for the sustainable
    development of India as large yield gaps are existing. However, the challenges
    of growing water scarcity, increasing land degradation, growing population, urbanization,
    and most importantly impacts of climate change. Due to climate change with increasing
    temperatures, aridity is increasing in the country, and rainfall variability with
    a reduced number of rainy days and increasing intensity in different parts is
    a major concern. There is an urgent need to develop and adopt large-scale climate
    resilient management practices at a local level through empowering the small farm-holders
    with strengthened science of delivery using new science tools such as remote sensing
    (RS), global information system (GIS), internet of things (IoT), information technology
    (IT), artificial intelligence (AI), machine learning (ML), etc. Business as usual
    will not work and a new paradigm through building partnerships, enhancing collective
    action, market-led agro-eco region-based diversification and scaling-up through
    the empowerment of small farm-holders using new science tools is proposed. The
    government of India’s action plan with 11 national missions is in place and all
    stakeholders need to contribute by enabling policies and sincere implementation
    for building resilience against the impacts of climate change. PDF Published 17-02-2023
    How to Cite SUHAS P. WANI. (2023). New paradigm for transforming Indian agriculture
    to climate-resilient and sustainable agriculture is a must. Journal of Agrometeorology,
    25(1), 79–91. https://doi.org/10.54386/jam.v25i1.2011 More Citation Formats Issue
    Vol. 25 No. 1 (2023): March (Silver Jubilee Publication) Section Invited Articles
    License Copyright (c) 2023 SUHAS P. WANI This work is licensed under a Creative
    Commons Attribution-NonCommercial-ShareAlike 4.0 International License. This is
    a human-readable summary of (and not a substitute for) the license. Disclaimer.
    You are free to: Share — copy and redistribute the material in any medium or format
    Adapt — remix, transform, and build upon the material The licensor cannot revoke
    these freedoms as long as you follow the license terms. Under the following terms:
    Attribution — You must give appropriate credit, provide a link to the license,
    and indicate if changes were made. You may do so in any reasonable manner, but
    not in any way that suggests the licensor endorses you or your use. NonCommercial
    — You may not use the material for commercial purposes. ShareAlike — If you remix,
    transform, or build upon the material, you must distribute your contributions
    under the same license as the original. No additional restrictions — You may not
    apply legal terms or technological measures that legally restrict others from
    doing anything the license permits. Notices: You do not have to comply with the
    license for elements of the material in the public domain or where your use is
    permitted by an applicable exception or limitation. No warranties are given. The
    license may not give you all of the permissions necessary for your intended use.
    For example, other rights such as publicity, privacy, or moral rights may limit
    how you use the material. Most read articles by the same author(s) K. BOOMIRAJ,
    SUHAS P. WANI, P. K. AGGARWAL, K. PALANISAMI, Climate change adaptation strategies
    for agro-ecosystem – a review , Journal of Agrometeorology: Vol. 12 No. 2 (2010):
    December A.V.R. KESAVA RAO, SUHAS P. WANI, K.K. SINGH, M. IRSHAD AHMED, K. SRINIVAS,
    SNEHAL D. BAIRAGI `, O. RAMADEVI, Increased arid and semi-arid areas in India
    with associated shifts during 1971-2004 , Journal of Agrometeorology: Vol. 15
    No. 1 (2013): June AVR KESAVA RAO, SUHAS P. WANI, Evapotranspiration paradox at
    a semi-arid location in India , Journal of Agrometeorology: Vol. 13 No. 1 (2011):
    June K. BOOMIRAJ, S. MARIMUTHU, SUHAS P. WANI, S. RAVIKUMAR, MANIKANDAN, S. TANI,
    Vulnerability assessment of kharif rainfed sorghum to climate change in SAT regions
    of India , Journal of Agrometeorology: Vol. 14 No. 1 (2012): June Make a Submission
    Links Open Access Policy Special Issue Publication Ethics Peer Review Process
    Publication Charges Impact Factor and Indexing   Information For Readers For Authors
    For Librarians Current Issue Journal Impact Factors and Indexing DOAJ; SCOPUS
    Cite Score (2022) is 1.2, SJR 0.25, SNIP 0.776;  Scimago Journal & country ranking
    (2022) H-Index = 14, IF=0.709;   SCIJOURNAL.ORG   WOS IF (2021) = 0.557; SCOPUS
    IF (2021) = 0.484;  Bioxbio.com; Academic accelerator ;  Resurchify.com Impact
    Score (2022) = 0.71, H-index=14, Rank=16757;   NAAS  scores (2023) = 6.00; RPRI
    score (2024)=6.93; Google Scholar; Journals Insights Journalsearches;  ABCDindex;  Index
    Copernicus; Researchgate; Listofjournals; journalfind.ir Fatcat.wiki;  Typest.io;  Vu.nl;  Editage;  Ub.edu;
    COBISS Plus; ProQuest;  Researchbite; Oa.mg;   LetPub.com  sciencegate; Exaly.com;
    Ores.su; iikx.com; EBSCO; Semantic Scholar; Scilit.net; CGSpace; Researcher.life;  hjrs.hec.gov.pk;
    narc.gov.np; UGC CARE list group-II; and many more"'
  inline_citation: '>'
  journal: Journal of Agrometeorology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: New paradigm for transforming Indian agriculture to climate-resilient and
    sustainable agriculture is a must
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bulut C.
  - Wu P.F.
  citation_count: '2'
  description: 'Purpose: Agriculture is one sector where the Internet of things (IoT)
    is expected to make a major impact. Yet, its adoption in the sector falls behind
    expectations. The purpose of this paper is to present the state-of-the-art of
    IoT in agriculture and investigate its slow adoption in the sector. Design/methodology/approach:
    The authors have undertaken a systematic review and a synthesis of 1355 relevant
    publications over the last decade. Findings: This literature review reveals that
    the “big three” barriers for the overall sector are cost, skills and standardization.
    The lack of connectivity and data governance are two key reasons why most of the
    proposed IoT solutions are standalone systems of limited scope, while the majority
    of commercial IoT efforts focus on practices in the protected indoor environment.
    Lastly, the analysis of past research along the five layers of the IoT system
    architecture reveals limited attention to barriers and solutions at the business
    layer, which represents a research opportunity for information systems scholars.
    Research limitations/implications: It is possible that some of relevant publications
    were missed in the literature search, although the search queries were kept as
    broad as possible to avoid the exclusion of any relevant work. Any publication
    written in any other language other than English was excluded from the review.
    Given the geographical distribution of the reviewed English publications (see
    section 4.1), it is highly likely that important works written by Chinese and
    European scholars in their native language were overlooked. Practical implications:
    This study provides practical insights into the technical and organisational challenges
    on the ground. It is the hope that this literature review lays the groundwork
    for IS researchers who are well positioned to investigate technology adoption
    challenges in the relatively understudied agriculture sector. Originality/value:
    To the best of the authors’ knowledge, this is the first comprehensive review
    of adoption barriers and solutions across all five layers of the IoT system architecture.'
  doi: 10.1108/INTR-07-2022-0559
  full_citation: '>'
  full_text: '>

    "We are using cookies to give you the best experience on our website, but you
    are free to manage these at any time. To continue with our standard settings click
    \"Accept\". To find out more and manage your cookies, click \"Manage cookies\".
    Accept Manage cookies Access and authentication: Please visit our page. Close
    Welcome University of Nebraska at Lincoln Discover Journals, Books & Case Studies
    Browse our content Publish with us My products Register for a profile Cart Login
    Search SUBMIT Advanced search Home Journals Internet Research More than two decades
    of research on IoT in agriculture: a systematic literature review To read this
    content please select one of the options below: Add to cart $44.00 (excl. tax)
    30 days to view and download Access and purchase options More than two decades
    of research on IoT in agriculture: a systematic literature review Cevdet Bulut,
    Philip Fei Wu Internet Research ISSN: 1066-2243 Article publication date: 2 May
    2023 Permissions DOWNLOADS 386 Abstract Purpose Agriculture is one sector where
    the Internet of things (IoT) is expected to make a major impact. Yet, its adoption
    in the sector falls behind expectations. The purpose of this paper is to present
    the state-of-the-art of IoT in agriculture and investigate its slow adoption in
    the sector. Design/methodology/approach The authors have undertaken a systematic
    review and a synthesis of 1355 relevant publications over the last decade. Findings
    This literature review reveals that the “big three” barriers for the overall sector
    are cost, skills and standardization. The lack of connectivity and data governance
    are two key reasons why most of the proposed IoT solutions are standalone systems
    of limited scope, while the majority of commercial IoT efforts focus on practices
    in the protected indoor environment. Lastly, the analysis of past research along
    the five layers of the IoT system architecture reveals limited attention to barriers
    and solutions at the business layer, which represents a research opportunity for
    information systems scholars. Research limitations/implications It is possible
    that some of relevant publications were missed in the literature search, although
    the search queries were kept as broad as possible to avoid the exclusion of any
    relevant work. Any publication written in any other language other than English
    was excluded from the review. Given the geographical distribution of the reviewed
    English publications (see section 4.1), it is highly likely that important works
    written by Chinese and European scholars in their native language were overlooked.
    Practical implications This study provides practical insights into the technical
    and organisational challenges on the ground. It is the hope that this literature
    review lays the groundwork for IS researchers who are well positioned to investigate
    technology adoption challenges in the relatively understudied agriculture sector.
    Originality/value To the best of the authors’ knowledge, this is the first comprehensive
    review of adoption barriers and solutions across all five layers of the IoT system
    architecture. Keywords Internet of things (IoT) Smart agriculture Technology adoption
    Layered architecture Acknowledgements This manuscript is a revised and expanded
    version of a paper entitled “IoT Adoption in Agriculture: A Systematic Review”
    published at the 28th Americas Conference on Information Systems, 2022. Citation
    Bulut, C. and Wu, P.F. (2023), \"More than two decades of research on IoT in agriculture:
    a systematic literature review\", Internet Research, Vol. ahead-of-print No. ahead-of-print.
    https://doi.org/10.1108/INTR-07-2022-0559 Download as .RIS Publisher: Emerald
    Publishing Limited Copyright © 2023, Emerald Publishing Limited Related articles
    The internet of things in the food supply chain: adoption challenges Ammar Mohamed
    Aamer et al., Bench: An Int Journal, 2021 Bibliometric analysis, scientometrics
    and metasynthesis of Internet of Things (IoT) in smart buildings Bruno Lot Tanko
    et al., Built Envir Proj and Asset Manag, 2023 Fog computing in health management
    processing systems Chao Fu et al., Kybernetes, 2020 Review of agricultural IoT
    technology Jinyuan Xu et al., Artificial Intelligence in Agriculture, 2022 New
    Managerialism: The Educational Executives’ Selection Policies in the Educational
    Administration in Greece Vasilios P. Andrikopoulos et al., Educational Practice
    and Theory, 2022 Medical education in sub‐Saharan Africa: a literature review
    S Ryan Greysen et al., World Studies in Education Powered by Support & Feedback
    Manage cookies © 2024 Emerald Publishing Limited Services Authors Editors Librarians
    Researchers Reviewers About About Emerald Working for Emerald Contact us Publication
    sitemap Policies and information Privacy notice Site policies Modern Slavery Act
    Chair of Trustees governance statement Accessibility"'
  inline_citation: '>'
  journal: Internet Research
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'More than two decades of research on IoT in agriculture: a systematic literature
    review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Altarturi H.H.M.
  - Nor A.R.M.
  - Jaafar N.I.
  - Anuar N.B.
  citation_count: '4'
  description: Given the severe difficulties and challenges being faced during the
    current COVID-19 pandemic, agribusinesses must consider alternative means to market
    and sell agriproducts using e-commerce and advanced technologies. Agricultural
    e-commerce that utilizes advanced technologies can promote sustainable economic
    growth and gender equality and, therefore, helps achieve the Sustainable Development
    Goals. It also allows farmers access to new markets where they can bypass intermediaries,
    leading to higher income, less waste, and fresher produce for customers. The usefulness
    of using agricultural e-commerce depends on the efficiency of addressing the emerging
    challenges from merging perspectives of agricultural and e-commerce fields. Literature
    reviews addressed both fields from different perspectives, however, most literature
    addresses the agriculture and e-commerce fields separately, leading to unclarity
    in understanding the differences between agriproducts and other products. This
    study aims to present a comprehensive and robust roadmap of technological advancements
    and challenges in agricultural e-commerce through a thorough bibliometric and
    content analysis and provide a conceptual architecture for best practices. The
    bibliometric and content analysis sheds light on the agricultural e-commerce categories,
    challenges, and limitations. This study identifies the most influential research
    and topic trends, determines the topical discipline areas, and provides visions
    and directions for future research in the field of agricultural e-commerce. It
    discusses the challenges of agricultural e-commerce and agriproducts and how advanced
    technologies help solve such challenges. This study summarises the best practice
    implementation of agricultural e-commerce by providing strong logistics, implementing
    standardization, including information knowledge of agriproducts, and creating
    a traceability information system. The result of this paper is presented as a
    proposed conceptual architecture for agricultural e-commerce that addresses the
    abovementioned best practice concepts and utilizes the Blockchain and IoT technologies
    to provide innovative solutions for the agricultural e-commerce stakeholders.
    Finally, this study provides prospects for future research on advanced technologies
    in agricultural e-commerce.
  doi: 10.1007/s10660-023-09670-z
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Electronic Commerce Research
    Article A bibliometric and content analysis of technological advancement applications
    in agricultural e-commerce Published: 24 January 2023 (2023) Cite this article
    Download PDF Electronic Commerce Research Aims and scope Submit manuscript Hamza
    H. M. Altarturi, Adibi Rahiman Md Nor, Noor Ismawati Jaafar & Nor Badrul Anuar   4561
    Accesses 4 Citations Explore all metrics Abstract Given the severe difficulties
    and challenges being faced during the current COVID-19 pandemic, agribusinesses
    must consider alternative means to market and sell agriproducts using e-commerce
    and advanced technologies. Agricultural e-commerce that utilizes advanced technologies
    can promote sustainable economic growth and gender equality and, therefore, helps
    achieve the Sustainable Development Goals. It also allows farmers access to new
    markets where they can bypass intermediaries, leading to higher income, less waste,
    and fresher produce for customers. The usefulness of using agricultural e-commerce
    depends on the efficiency of addressing the emerging challenges from merging perspectives
    of agricultural and e-commerce fields. Literature reviews addressed both fields
    from different perspectives, however, most literature addresses the agriculture
    and e-commerce fields separately, leading to unclarity in understanding the differences
    between agriproducts and other products. This study aims to present a comprehensive
    and robust roadmap of technological advancements and challenges in agricultural
    e-commerce through a thorough bibliometric and content analysis and provide a
    conceptual architecture for best practices. The bibliometric and content analysis
    sheds light on the agricultural e-commerce categories, challenges, and limitations.
    This study identifies the most influential research and topic trends, determines
    the topical discipline areas, and provides visions and directions for future research
    in the field of agricultural e-commerce. It discusses the challenges of agricultural
    e-commerce and agriproducts and how advanced technologies help solve such challenges.
    This study summarises the best practice implementation of agricultural e-commerce
    by providing strong logistics, implementing standardization, including information
    knowledge of agriproducts, and creating a traceability information system. The
    result of this paper is presented as a proposed conceptual architecture for agricultural
    e-commerce that addresses the abovementioned best practice concepts and utilizes
    the Blockchain and IoT technologies to provide innovative solutions for the agricultural
    e-commerce stakeholders. Finally, this study provides prospects for future research
    on advanced technologies in agricultural e-commerce. Similar content being viewed
    by others Empowering Agribusiness with Digital Innovation for Emerging Market
    Chapter © 2018 Empowering Rural Revitalization: Unleashing the Potential of E-commerce
    for Sustainable Industrial Integration Article Open access 02 March 2024 ICT-Enabled
    Agri-Food Systems Chapter © 2022 1 Introduction Agriculture is critical to a country’s
    economy, as seen by the sector’s global added value of 3.6 trillion US dollars
    in 2020, which constitutes about 3.5% of the global Gross Domestic Product (GDP)
    [90]. Considering alternative means to market and sell agriproducts using e-commerce
    and advanced technologies is essential. This was clearly shown during the current
    COVID-19 pandemic, where agribusinesses face severe difficulties and challenges.
    Agricultural e-commerce is a multidisciplinary field that aims to facilitate buying
    and selling agricultural products and goods over the Internet, which is an efficient
    alternative to conventional agribusiness practices. The agricultural e-commerce
    platforms allow cultivators and farmers to access their customers directly, increasing
    their profits [42]. By utilizing advanced technologies, agricultural e-commerce
    promotes sustainable economic growth [83] and gender equality. Women play a significant
    role in agriculture through their roles as farmers and entrepreneurs [49]. Compared
    to men, they tend to run smaller farms and agribusinesses [41]. Due to the fact
    that agricultural e-commerce supports small agribusinesses to compete in the market,
    it affords women excellent prospects to start their online agribusiness, thereby
    helping to achieve gender equality in this industry. In fact, 26% of women-led
    startups business in the region of the Middle East and North Africa (MENA) are
    based on e-commerce [35]. In fact, the UN Sustainable Development Goals (SDG)
    comprise 17 goals, 10 of which are able to achieve by agricultural e-commerce,
    particularly goals 1, 2, 3, 4, 5, 8, 10, 12, 13, 17. Goal 9 of the SDG also affects
    the development of agricultural e-commerce [68]. This crucial link between the
    SDGs, agriculture, and e-commerce motivates academia and industry to comprehensively
    study the technological advancement in agricultural e-commerce. Agricultural digital
    marketing generally faces several marketing-related challenges, such as production,
    distribution, and pricing. Other challenges also involve supply chain and information
    asymmetry. The current implementation of agricultural digital marketing is vague
    and lacks standardization. The usefulness of using agricultural e-commerce depends
    on the efficiency of addressing the emerging challenges from merging perspectives
    of agricultural and e-commerce fields. Literature research addresses the agricultural
    products and e-commerce fields separately, leading to unclarity in understanding
    the differences between agriproducts and other products. Few studies address both
    fields from different perspectives, such as the agricultural [14, 34, 92, 97],
    the technological [26, 57, 62, 70, 86], and economic perspectives [44, 101]. Zeng
    et al. present a review limited to only 80 papers related to agri-food e-commerce
    [97]. Fernando et al. limit their study to only 21 papers [32]. Banerjee et al.
    focus on reviewing only the price mechanism challenge of agricultural e-commerce
    [8]. These literature researches exhibit the importance of research in the domain
    of agricultural e-commerce. However, there is a lack of comprehensive studies
    on bibliometric and content analysis report that demonstrates the research trend,
    gaps and challenges, best practices, and possible future research directions in
    agricultural e-commerce. The field of information science uses bibliometrics to
    analyze various publication attributes using statistical methods. The attributes
    are the author’s activities, collaborations between countries, trends in publishing,
    and publication networks. These characteristics help colleagues who wish to do
    field research and look for possible co-researchers and key literature. It also
    demonstrates an overview of how a bibliometric analysis is performed in a field
    that complements traditional approaches to systematic examinations and getting
    fast evidence evaluations. Additionally, the bibliometric analysis also enables
    the identification of research clusters and demonstrates how distinct areas of
    thought may have developed over time based on publication attributes. These research
    clusters also obtain additional insights into the current research trends, gaps,
    and possible future research directions [30]. In summary, by conducting a bibliometric
    study, scholars can (a) estimate and analyse the growing body of knowledge; (b)
    anticipate future research and its major impact on various disciplines; (c) estimate
    and appraise the significance of their research and that of others [4]. This study
    aims to present a comprehensive and robust roadmap of technological advancements
    and challenges in agricultural e-commerce through a thorough bibliometric and
    content analysis and provide a conceptual architecture for best practices. The
    bibliometric and content analysis sheds light on the agricultural e-commerce categories,
    challenges, and limitations. This study conducts a literature search using “agriculture”,
    “e-commerce”, and “technology” as the main keywords. The collected dataset comprises
    1,298 unique documents published between 2003 and 2021 in the Scopus and the Clarivate
    Web of Science databases. These documents are limited to journal papers, review
    papers, book sections, books, patents, and conference papers. The analyses of
    these documents are conducted from four points: descriptive analysis, authors,
    countries, and content analysis. The content analysis is conducted using keywords
    and text data [47, 48]. Finally, this study addresses the challenges and the utilization
    of advanced technologies in the field of agricultural e-commerce. Utilizing these
    advanced technologies has also ushered in new issues, producing more meaningful
    research directions. Consequently, this paper sheds light on several research
    prospects as a means to provide a valuable reference for the research of advanced
    technologies in agricultural e-commerce. The main novelty of this study is creating
    a conceptual framework for best practices in agricultural e-commerce by benefiting
    from the findings of conducting a thorough bibliometric and content analysis.
    The following points highlight the contributions of this study as follows: It
    provides a descriptive analysis to demonstrate the basic statistics and comprehend
    an overview of the agricultural e-commerce literature. It exhibits the most contributed
    and productive authors in the field of agricultural e-commerce by article count,
    citation count, h-index, g-index, and article fractionalization metrics. It analyzes
    the impact and productivity of each country by the number of publications, single
    country publications (SCP), multiple country publications (MCP), MCP Ratio, total
    citation, and average article citations. It also scrutinizes the dynamics of collaboration
    between these countries. It scrutinizes the literature items’ content using the
    help of Natural Language Processing (NLP) using a thematic evaluation map and
    other metrics. It identifies the most influential research and topic trends, determines
    the topical discipline areas, and provides visions and directions for future research
    in the field of agricultural e-commerce. It highlights the challenges of agricultural
    e-commerce based on content analysis and how advanced technologies help solve
    such challenges. It proposes a conceptual architecture for agricultural e-commerce
    which provides innovative solutions for the agricultural e-commerce stakeholders
    by utilizing the Blockchain and the Internet of Things technologies. Finally,
    it provides prospects for future research on advanced technologies in agricultural
    e-commerce. The rest of this paper continues in Sect. 2 with a description of
    the structured methodology employed for the bibliometric analysis in this study.
    Section 3 discusses the findings from this bibliometric analysis. Section 4 discusses
    the background of agricultural e-commerce, its benefits, categories, challenges,
    the utilization of advanced technology, and the proposed conceptual architecture
    for the best practices for agricultural e-commerce development. Section 5 discusses
    the paper and the proposed conceptual architecture for the best practices for
    agricultural e-commerce development and provides the prospects for future research
    on advanced technologies in agricultural e-commerce. The last section concludes
    this paper and highlights future work in this field. 2 Methodology Assessing and
    analyzing the current state of research on a certain topic are the motivations
    for conducting literature review studies. These studies are able to identify research
    questions, possible research limitations, research methodologies, and knowledge
    boundaries of the research field [82]. The adopted approach for bibliometric studies
    includes four phases: designing keywords for search, collecting the research results
    and creating the dataset, outlining the findings, and analyzing the findings.
    These four phases are able to define the relevant research areas, offer insights
    into current research trends, and identify the most compelling studies that give
    a roadmap for further research in the field. This study adopts the bibliometric
    analysis approach, which is demonstrated in Fig. 1. It is worth mentioning that
    the methodology of this study is based on the bibliometric review method, which
    differs from systematic literature review and meta-analysis methods. The authors
    of [24] addressed a comparison of these review methods in detail. The collection
    of the literature starts by accessing the related databases. Only a few databases
    permit searching and accessing indexed journal articles, such as Google Scholar,
    Elsevier’s Scopus, Association for Computing Machinery (ACM), IEEE Explore, Web
    of Science (WoS), ScienceDirect, and Springer. Scopus and WoS are the only databases
    that generate bibliometric data for searching for literature [2, 4]. Compared
    with the Scopus database, WoS boasts that its database is the most comprehensive
    and contains the largest number of high-impact publications [13]. Scopus is the
    world’s largest database of peer-reviewed research literature in many research
    fields, and it covers over 20,000 peer-reviewed journals, including those published
    by Taylor and Francis, Interscience, Elsevier, Informs, Springer, and Emerald
    [30]. It also contains both the Clarivate Web of Science and Scopus-indexed rank
    papers [4]. In view of these considerations, this study uses both the WoS and
    Scopus databases to search for the keywords. Collecting related literature from
    databases requires a query. The query comprises two parts: keywords and Boolean
    operations. Since the study focuses on technologies in agricultural e-commerce,
    “agriculture”, “e-commerce”, and “technology” were the main keywords of the query.
    The operator AND separates these main keywords. Each of these has synonymous keywords
    that authors frequently use in the field. The operator OR is used to separate
    these keywords within each group. The keyword includes agriculture keywords group
    (“agriculture”, “e-agriculture”, and “agri-food”, “agri-product”), the e-commerce
    keyword group (“e-commerce”, “ecommerce”, “electronic commerce”), and the technology
    keywords group (“technology”, “digital”, “ICT”, “online”, “internet”). The Boolean
    operators AND and OR are used to restrict the scope of the resulting topics. This
    study collects all scientific research types, such as journal papers, review papers,
    book sections, books, patents, and conference papers published from 2003 to 2022
    (the past two decades), from both the WoS and Scopus databases. The final collected
    dataset of literature contains a total of 1,298 unique documents. Various tools
    allow scholars to perform a bibliometric study, such as HistCite, Pajek, Gephi,
    Excel, VOSviewer, BibExcel, and the bibliometrix package in R. The HistCite software
    does not support Scopus data [30]. Gephi has the edge over Pajek, Excel, and VOSviewer
    due to its efficiency and versatility. Gephi lacks the functionality necessary
    for data preparation, and therefore, scholars must resort to third-party programmes
    like BibExcel for this task [30]. The BibExcel is a very complex tool in terms
    of its operational environment, which requires high experience to conduct simple
    analyses [30]. For these reasons, we conducted the bibliometric analysis of this
    study using the well-known software for statistical computing, R, with the help
    of the bibliometrix package [6]. This paper uses the Biblioshiny software, a shiny
    app providing a web interface for the bibliometrix package, in which many studies
    from various scientific domains utilized for bibliometric analysis [4, 5]. The
    Biblioshiny facilitates the research by allowing this study to conduct reference
    tracing, reference selection, reference processing, synthesizing, content analysis,
    corpus pre-processing, and the representation of the study’s findings. It also
    allows to merge WoS and Scopus datasets and generates one unique dataset for analysis
    by using the “mergeDbSources” building function of the bibliometrix library. Duplicated
    records will be removed automatically by setting the “remove.duplicated” variable
    as “True”. Fig. 1 Methodology phases Full size image 3 Findings 3.1 Descriptive
    analysis The descriptive analysis section gives basic statistics about the collected
    literature. It is important to demonstrate a holistic picture of such data in
    order to comprehend an overview of the agricultural e-commerce literature. Table
    1 summarizes the major characteristics of the 1298 documents published between
    2003 and 2022. The collected documents were published by 811 sources comprising
    various books, conferences, and journals. Regarding the content analysis, there
    were 3,325 authors’ keywords and 4,120 Keywords Plus. The authors’ keywords are
    the frequently appeared terms from the document itself, while Keywords Plus is
    calculated by the most frequent terms that appear in the titles of a literature’s
    references. Regarding authors’ statistics, the dataset contains 2601 authors.
    Only 7.7% of these authors wrote single-authored literature. The percentage of
    single-authored documents was more than 23%. The proportion of authors and co-authors
    per document was 2 and 2.72, with a collaboration rate of 2.41. The average citation
    for the document is relatively low (4.088 citations per document). The total cited
    references from all the 1,298 documents was 5302. Table 1 Descriptive analysis
    of the literature in the analyzed dataset Full size table Table 2 enumerates more
    descriptions regarding the types of the collected documents. About half of the
    documents on the dataset are articles, which may indicate a high scholarly value
    of the literature in the field of agricultural e-commerce. More than a quarter
    of the dataset comprises conference papers, while the book chapters, books, reviews,
    and conference reviews were less than 10% of the analyzed dataset. Table 2 Types
    of documents and their proportion in the analyzed dataset Full size table 3.2
    Subject area Subject area analysis breaks down the literature fields of the analyzed
    dataset into subject areas within the agricultural e-commerce field. This analysis
    enables the comparisons of each subject area’s performance based on the rates
    of publications and shows the magnitude of the research community in each area.
    This section uses multidisciplinary counting for the documents on each subject
    area. Table 3 enumerates the subject areas of the documents and their percentage
    shares in the analyzed dataset. The computer science subject area, with 518 items,
    has the largest share of the documents in the dataset, followed by the engineering
    and business subject areas, with 339 and 286, respectively. Taking these top three
    together, 88% of the dataset’s documents fit at least one of these disciplines.
    The computer science articles focus on the utilization of Blockchain, big data,
    IoT, data mining, social media, cloud computing, and 5G technology. This subject
    also addresses issues and challenges related to agricultural e-commerce, such
    as supply chain, transparency, traceability, and dynamic pricing. The engineering
    subject aria addresses challenges in agricultural e-commerce, such as agricultural
    robots, cultivation, corps, and cost-effectiveness. The business management and
    accounting field constitutes 22% of the documents and addresses agricultural e-commerce
    from the perspective of business solutions, online sales, rural economy, and electronic
    services. The social science subject area constitutes more than 10% of the documents
    in the field of agricultural e-commerce. Many of these pieces of literature highlighted
    the social impact of e-commerce on the quality of agricultural production and
    distribution, especially in rural areas in developing countries. Agricultural
    e-commerce also impacts the economy and the environmental subject areas. The mathematical
    subject area includes 88 documents, many of which investigate the application
    of machine learning and neural network to enhance the performance of the agricultural
    e-commerce sector. Examples of such items entitled “Framework for agricultural
    e-trading platform adoption using neural networks”, “Lateral inventory share-based
    models for IoT-enabled E-commerce sustainable food supply networks”, and “Enhancing
    Online Store in Aggregator Model for SME in Multi Categories using Django Channels”.
    Finally, the medicine subject area, surprisingly, contributes to the field of
    agricultural e-commerce. These 51 documents address the health risk and food security
    of purchasing agriproducts using online platforms. Examples of recent studies
    of this subject area are: “Research on cold chain logistics risk in e-commerce
    using text mining technology”, “Research on logistics distribution path optimization
    of fresh agricultural products under e-commerce background”, and “Big Data Impacting
    Dynamic Food Safety Risk Management in the Food Chain”. Table 3 Number of documents
    in each subject area and their proportion in the analyzed dataset Full size table
    3.3 The annual growth of publications The annual growth rate metric is calculated
    by taking the average amount of literature published in the defined period (2003–2022).
    The annual growth of the analyzed dataset is 14.83%. Figure 2 shows that the trend
    of agricultural e-commerce research is increasing. The increase in the rate was
    minimal before 2015, with less than 50 publications per year. After 2016, the
    growth rate dramatically increased to its peak in 2021, with more than 220 publications
    per year. In January 2022, the number of publications was only 15, and the growth
    is predicted to continue. This indicates the rise of academia and industry’s interest
    in the challenges and issues in the field of agricultural e-commerce. Scrutinizing
    the growth, Fig. 3 exhibits the cumulative growth of the documents in the top
    7 related sources in the dataset. The publication growth of the ACM International
    Conference Proceeding Series source was the highest among all the sources. It
    is worth mentioning that the growth of this source started the earliest among
    the top 7 sources in 2004, and four of these sources started their publications
    after 2017. The Journal of Advances in Intelligent Systems and Computing recorded
    the second-highest growth, which started publication in 2014 only. Other sources’
    growth rates were very similar. Fig. 2 The annual growth of publications in the
    field of agricultural e-commerce in 10 years Full size image Fig. 3 The cumulative
    growth of the documents in the top 7 sources in the dataset Full size image 3.4
    The top 15 impacting sources There are only a few metrics that measure the impact
    of scientific sources. By utilizing multiple metrics, this section provides a
    complete picture of source impact and productivity in the field of agricultural
    e-commerce. The analyzed dataset contains 811 sources; about half of them (375)
    published only one literature item. The top 15 sources published more than 7%
    of the analyzed dataset. These results indicate that there is more diversity among
    the sources of publications than concentration. Table 4 enumerates the top 15
    scientific sources with their h-index, g-index, number of publications (NP), total
    citations (TC), and publication year started (PYS). The highest number of publications
    was by the Sustainability journal, which published 13 documents in the field of
    agricultural e-commerce. This source also has the highest g-index (13) and the
    second-highest citation number (188). After that, the Journal of Retailing and
    Consumer Services received 280 citations. This indicates the dominance of this
    source in the field of agricultural e-commerce, even though it only started publishing
    in this field in 2018. The British Food Journal recorded the highest h-index (7),
    followed by the Journal of Retailing and Consumer Services (6). The second-highest
    number of publications was the Journal of Retailing and Consumer Services, followed
    by the Science of the British Food Journal. These three sources appear in all
    top 3 based on all metrics indicating their dominance. It is worth mentioning
    that Information and Software Technology journal received the third-highest number
    of citations, even though it has only 1 publication in this field. Table 4 The
    h-index, g-index, NP, TC, and PYS for the top 15 sources publishing literature
    on agricultural e-commerce Full size table 3.5 Top cited literature items This
    section analyzes the citation metric, which is essentially the total citations
    received for a document since its publication. It also calculates the two types
    of citation: local citation (LC) and global citation (GC). The local citation
    is the total citation of an article within the analyzed dataset, whereas the global
    citation is the overall citation from all sources. Table 5 enumerates the top
    20 locally cited publications with global citation scores. The sort of the items
    is based on their local citation score, which does not reflect their global citation
    score. The normalized citation score is the actual count of citing a literature
    item by the expected citation rate for literature items in the same year of publication.
    Some researchers argue that the citation count does not indicate the impact of
    the literature as the normalized citation metric [12]. More than 50% of the documents
    in the analyzed dataset have received no global citation until the time of writing
    this paper. In fact, less than 250 documents received at least the average citation
    per document of the analyzed dataset, which was 4.088. The article with the highest
    citation is entitled “Competitive Factors of the Agro-Food E-Commerce” and has
    received the highest local citation number with 7 citations and only 18 global
    citations. It is worth noting that the article “From Land Consolidation and Food
    Safety to Taobao Villages and Alternative Food Networks: Four Components of China’s
    Dynamic Agri-Rural Innovation System” obtained the highest normalized local citation
    score, even though it has only received 1 local citation and 2 global citations.
    Notably, among the top 2 publications, 16 were published in 5 years, indicating
    the increase in academic interest in agricultural e-commerce. Table 5 The top
    20 local cited articles, their global citation, and their normalized local citation
    scores Full size table 3.6 Top contributing affiliations The publication count
    metric of affiliations measures its academic contribution and impact on the research
    field of agricultural e-commerce. It is merely the count of the number of literature
    outputs by academic authors affiliated with an academic institution. Figure 4
    illustrates the top 15 affiliations and the number of documents published by their
    academic staff. The total number of affiliations in the analyzed dataset was 1,439,
    more than 56% of which contributed to one document only. The Zhejiang University
    from China recorded the highest number of publications, followed by Wuhan Donghu
    University and China Agricultural University, with a noticeable difference from
    other affiliations. In fact, the total number of documents published by these
    top 15 affiliations is about 21%, which is a remarkable contribution considering
    that they constitute only 1% of the total contributed affiliations. Among the
    top 15 contributed affiliations, 11 are in China, 1 is in Greece, Italy, Spain,
    and the USA. This indicates that the focus of developing countries in the field
    of agricultural e-commerce is significantly higher than that of developed countries.
    The following sections analyze the countries’ contributions in detail. Fig. 4
    The top 15 contributing affiliations Full size image 3.7 Authors Various metrics
    measure the scientific production and impact of the authors, such as article count,
    citation count, h-index, g-index, and article fractionalization. This section
    addresses the analysis of these metrics and highlights the topic of 5 contributing
    authors in the field of agricultural e-commerce, as enumerated in. Table 6. The
    article count and citation count are basically the total number of literature
    outputs by each author in the analyzed dataset. Many researchers argued that the
    mere count does not reflect the actual impact of the author because each authored
    or co-authored article gets a score for each literature item, disregarding the
    number of co-authors the article has. For this reason, the article fractionalization
    metric divides the contribution among co-authors. It gives each author or co-author
    a score of 1 divided by the number of authors an article has. This metric has
    been used in several journals and institutions, such as Nature [59]. The other
    two commonly used metrics are the h-index and the g-index. The h-index is “A scientist
    has index h if h of his/her number of papers (Np) have at least h citations each,
    and the other (Np – h) papers have no more than h citations each” [37]. The g-index
    is an improvement of the h-index metric, which is “given a set of articles ranked
    in decreasing order of the number of citations that they received, the g-index
    is the unique largest number such that the top g articles received together at
    least g2 citations“ [28]. By investigating the results of these metrics on the
    analyzed dataset, we noticed a few worth mentioning information. Over 92% of the
    authors have only one publication in the field of agricultural e-commerce, and
    about 96% of the authors have less than 1 article fractionalization. This raises
    the question of whether academic authors published many unique articles or merely
    appeared to do so through co-authoring without an actual increase in their contributions.
    In fact, the lowest article fractionalization in the analyzed dataset was 0.1,
    which means there were 10 co-authors for a single literature item. The author
    Judith Hillen from the Agroscope research institute has the highest article fractionalization
    with 3.5, followed by Luisa Sturiale with 3.17. Alessandro Scuderi and Luisa Sturiale
    scored the highest number of publications from the University of Catania. Each
    Andrew Cimino, Francesco Marcelloni, and Andrea Tomasi received the most citation
    score, with 189. These results indicate that there is no dominant author in the
    field of agricultural e-commerce. Table 6 The top 5 authors based on the publication
    number, with their h-index, g-index, TC, article fractionalization score, and
    PYS Full size table Figure 5 supports the arguments mentioned above of whether
    academic authors published many unique articles or merely appeared to do so with
    the help of Lotka’s law. Lotka’s law is an application of Zipf’s law that describes
    the frequency of published documents by authors and enables us to determine whether
    or not the analysed area is one in which the majority of production is concentrated
    in a small number of authors. The results of the analysed dataset in the field
    of agricultural e-commerce are diverse, with the majority of authors (about 90
    per cent) having only one publication (2341 out of 2601). The distribution demonstrates
    that contributions to scientific publications are not concentrated among a small
    group of authors but rather are dispersed among the total number of authors. Figure
    5 visualizes Lotka’s law results on the analysed dataset and shows that the contribution
    of 90% of the authors was only by one document, while less than 8% of the contribution
    was by authors who contributed two documents. Fig. 5 Frequency distribution of
    publications in the analyzed dataset through Lotka’s law Full size image 3.8 Countries
    3.8.1 Countries’ impact and productivity This section analyzes the impact and
    productivity of each country. The analysis of this section assigns each document
    to the country of its corresponding author only, which means one document is assigned
    only to one country. Assigning articles to a single country allows us to calculate
    both single country publications’ (SCP) and multiple country publications’ (MCP)
    metrics. By applying the MCP ratio, these metrics give us a better understanding
    of the countries’ collaboration ratios. This section also addresses both the citation
    counts and the average citation counts per document metrics for each country,
    as Table 7 enumerates. In order to understand the level of interest in the field
    of agricultural e-commerce in a different group of countries, the countries are
    grouped by their development in the above-mentioned metrics. Table 7 enumerates
    the top 10 contributed developing countries, and Table 8 enumerates the top 10
    developed countries. As a comparison, the contribution differences between developing
    and developed countries are noticeable. The top 10 developing countries produce
    almost 50% of the collected dataset, whereas the top 10 developed countries produce
    less than 17%. China publishes the highest number of documents in the analyzed
    dataset, which are 458 articles, followed by the United States, India, Italy,
    and Indonesia, which published 74, 59, 30, and 26, respectively. China received
    the highest number of citations, with 1,348, followed by the United States, Italy,
    and Malaysia, with 631, 374, and 239, respectively. Among the top 15 countries,
    France, Sweden, and Poland have the highest MCP ratio, with 0.33, 0.28, and 0.25,
    respectively. Italy, Malaysia, Ukraine, Canada, and the Czech Republic recorded
    zero MCP ratio, indicating that these countries’ research works solo in agricultural
    e-commerce. Only 19% of the countries received zero citations. Given these factors,
    there is clearly no dominant country in the field of agricultural e-commerce.
    Table 7 Developing countries’ contribution, SCP, MCP, MCP ratio, total citations,
    and average article citations of the top 10 Full size table Table 8 Developed
    countries’ contribution, SCP, MCP, MCP ratio, total citations, and average article
    citations of the top 10 Full size table 3.8.2 Collaboration between countries
    This section uses two-time frames to scrutinize the dynamics of collaboration
    between countries in the field over time: “2003–2016” and “2016–2022”. This section
    uses the annual publication growth from Sect. 3.1 to define these time frames.
    Figure 6 illustrates both time frames by generating two choropleth maps based
    on the collaborations of the countries. The time frame from 2003 to 2016 shows
    only a few collaborations, mainly related to China, Spain, the United Kingdom,
    and the United States. The highest number of collaborations in this time frame
    was between Spain and the United Kingdom. Many other collaborations emerged on
    the map in the time frame of “2016–2022”. The majority of collaborations were
    related to China, the United Kingdom, Australia, and the United States. Unlike
    the previous time frame, the highest number of collaborations in this time frame
    was between China and the United States. It is also noticeable that Asia Pacific
    collaborations too increased in this time frame. For instance, the collaborations
    between China and India, Turkey and India, and China and Malaysia. The density
    of collaborations between European countries also increased. Russia and the African
    countries tend to have lower collaborations in both time frames. This evaluation
    of the countries’ collaborations suggests that the interest in the topic of agricultural
    e-commerce is growing within and between various countries, especially in China.
    Fig. 6 Dynamic analysis for the countries’ collaboration represented by the choropleth
    map Full size image 3.9 Content analysis 3.9.1 Author’s keywords Analyzing the
    content of the literature items based on the author keywords is essential to identify
    the focus of researchers on a set of research trends in the studies of agricultural
    e-commerce. Table 9 provides an initial overview by listing the top 20 keywords
    provided by the authors in their literature items and their occurrences across
    all the documents of the analyzed dataset. The total number of authors’ keywords
    in the analyzed dataset is 3,325, over 82% of which only occur once in all the
    documents. They may indicate that the authors of this field tend to use uncommon
    keywords. The analyzed dataset most frequently used the keyword “Electronic commerce”
    as it appeared 357 times, followed by the keywords \" Internet”, \" Agricultural
    products”, and “agriculture”, which appeared 68, 58, and 49 times, respectively.
    It is noticeable that few advanced technology terms appear on the list, such as
    “Internet of Things” and “Blockchain”. The following Sect. (4.3) examines these
    technologies in the agricultural e-commerce field in detail based on these results.
    The top author keywords also include a few terms such as: “on-demand delivery”,
    “fresh agricultural products”, “trust”, “last-mile delivery”, “standardization”,
    and “asymmetry”. These terms signify the challenges that this field face. These
    challenges are addressed in the following sections (4.2). Table 9 Top 20 author-keywords
    occurrences Full size table This section further investigates the authors’ keywords
    by applying the thematic evaluation map. This evaluation is inspired by [18].
    In this section, the thematic map visualizes four typologies of themes based on
    the authors’ keywords network analysis and clustering, as illustrated in Fig.
    7. The top-right quadrant theme is the motor theme, representing the high centrality
    and density keywords. “Informatization”, \" agricultural “, “electronic commerce”,
    and “covid-19” are the keywords that tend to be the most developed in the field
    of agricultural e-commerce. Although the research on Covid-19 started in early
    2020, the covid-19 keywords occur in this theme. This indicates the significant
    effect of the pandemic on the agricultural e-commerce field. The Niche theme contains
    a few technology terms such as “artificial intelligence”, “technology adoption”,
    and “technology”. This theme indicates the high centrality and relevancy to the
    field of agricultural e-commerce; however, they are yet to be well developed.
    With reference to the bottom-right theme, terms such as “agricultural products”,
    “agriculture”, “internet”, and “information technology” tend to have a high density
    among researchers, but they are still undeveloped and centralized. Finally, the
    bottom-left quadrant is called the emerging or declining theme. This theme contains
    challenges-related keywords such as “last-mile delivery” and “food security”.
    This may indicate that the challenge of agricultural e-commerce is still emerging
    in the research, but it has irrelevant external links with other keywords. This
    theme also contains the IoT and e-commerce platform terms with a higher density
    and relevance degree. This raises the attention to enhancing the adoption of IoT
    technology in these agricultural e-commerce platforms, especially when it directly
    relates to the last-mile delivery and trust challenges, as the following section
    (4.3.2 illustrates. Fig. 7 Thematic map of author-keywords in the field of agricultural
    e-commerce Full size image 3.9.2 Keywords plus There are other alternatives to
    analyzing literature items’ contents in the analyzed dataset, such as Keywords
    Plus. With the help of Thomson Reuters editorial experts, a special algorithm
    generates the Keywords Plus for each piece of literature based on its content
    and the titles of its references. The algorithm generates a normalized set of
    keywords, emphasizing the content of literature items in depth [22, 99]. This
    section uses two metrics to analyze and visualize the Keywords Plus. The first
    metric is the frequency evaluation of each keyword, which Fig. 8 illustrates using
    the word-cloud visualization. It is clearly shown that “agriculture” is the dominant
    Keywords Plus across the analyzed dataset, which is understandable since it is
    the keyword in the research query. Other keywords are prominent, such as “agricultural
    products”, “online shopping”, “artificial intelligence”, “decision making”, “customer
    satisfaction”, “supply chain”, and “websites”. It seems that both the supply chain
    and the website development fields are very closely related to the field of agricultural
    e-commerce. Also, artificial intelligence and decision-making systems have significant
    attention in this field. This evaluation also shows a few interesting technologies
    that are related to this field, such as “Blockchain”, “internet of things”, “big
    data”, and “data security”. The following Sect. 4.3 investigates the utilization
    of such technologies in the field of agricultural e-commerce. Fig. 8 Word-cloud
    of the most 100 frequent Keywords Plus Full size image The second metric is the
    co-occurrence network analysis, which evaluates the collective relationship between
    the terms based on their paired presence within the Keywords Plus. This section
    adopts the network graph approach to visualize and evaluate this metric. The graph
    clusters the Keywords Plus by colouring the nodes. Each node has its size, representing
    the node’s weight in the graph. Also, each node has several edges with different
    thicknesses based on the bilateral co-occurrence weight with other nodes. The
    depiction of Keywords Plus and their co-occurrences are illustrated in Fig. 9.
    Figure 9 groups the Keywords Plus into five clusters. The red cluster contains
    the highest number of keywords, with the “electronic commerce” and “agriculture”
    keywords dominating this cluster. Other keywords such as “online shopping”, “internet”,
    and “customer satisfaction” have a high weight, and the co-occurrence weight among
    them is high. These results also show the relationship between “customer satisfaction”,
    which consider a challenge for e-commerce agribusiness, and “trust”, “quality”,
    “technology”, and “behaviour”. This relationship highlighted the importance of
    customer satisfaction as a challenge for e-commerce agribusiness and the impact
    of trust, technology, and information to overcome this challenge. Another interesting
    relationship in this cluster is between “online shopping”, “marketing”, “information
    technology”, “information management”, “economic and social affects”, and “big
    data”. The relationship indicates the impact and effect of these terms on online
    shopping. The second cluster is the green one, which contains no dominant keyword.
    This cluster contains supply chain-related terms, such as fresh agricultural products,
    logistics, and costs. It clearly indicates that the freshness of agricultural
    products is bound with the supply chain issue. The third cluster is the blue cluster.
    The co-occurrence of this cluster’s nodes is relatively high. This cluster contains
    terms related to technology adoption in this field, such as artificial intelligence,
    decision-making, and websites. The purple cluster is related to advanced technology
    terms like Blockchain and the Internet of Things. As the cluster illustrates,
    these two terms are bound with the security issue. These two clusters prove the
    correlation between these advanced technologies and agricultural e-commerce. This
    correlation is addressed in detail in the following sections. Finally, the orange
    cluster contains a few keywords related to the challenges of this field, and they
    have low co-occurrences with the other nodes. Fig. 9 Co-occurrence between Keywords
    Plus shown in a network graph Full size image 3.9.3 Abstract contents Article
    abstracts provide a full and comprehensive summary of the literature. They usually
    contain the research problem and the study’s overall aim, a brief methodology
    design, and the literature’s main findings. Analyzing the contents of these abstracts
    gives us a rich and effective understanding of the research trends and defines
    the shortcomings of the agricultural e-commerce field. This section extracts the
    topic trends of the literature items’ abstracts by benefitting from the better
    means of Natural Language Processing (NLP). This analysis uses both the 1-gram
    (unigram) and the tokenization models to preprocess the data of the abstracts.
    Figure 10 depicts the topic trends that have been drawn from the abstracts of
    the literature items. The line represents a topic trend timeline, and the circle
    radius is proportional to the number of documents that follow a topic trend. The
    darker the circle’s colour, the higher the number of citations that a topic trend
    received. The topic two topics each year are represented; however, the topic frequency
    must exceed 25 times to be presented in the graph. The trend started in 2008 only
    with the “Malaysia” and “agents” topics. The trend of topics then evolute to represent
    the related to the Internet of Things (IoT) technology in 2013, which was the
    beginning of the IoT research trend overall. The online shopping and online delivery
    trend started after 2015. In 2018, the freshness of agriproducts seemed to be
    the attention of the research in the agricultural e-commerce field. The Covid-19
    and pandemic trends started in 2020, which is expectable since the pandemic has
    a severe effect on almost every field. Fig. 10 Trend Topics over time for the
    analyzed dataset Full size image 4 Agricultural E-commerce Electronic commerce,
    referred to as e-commerce, includes business activities for both consumers and
    suppliers. E-commerce business activities are more complex than traditional commerce.
    This is due to several service providers’ involvement in finance, infrastructure,
    logistics, marketing, online payment, credit certification, and technology. In
    2020, the e-commerce market share was 4.28 trillion US dollars and was predicted
    to grow to 5.4 trillion US dollars in 2022 [17]. In fact, during the recent COVID-19
    pandemic, the significant impact of e-commerce on all products becomes apparent,
    especially agricultural products [36]. The field of agriculture plays an essential
    role in the national economy, and the enhancement of this field has become a necessary
    responsibility for both developed and developing countries. The market share of
    agriculture was 3.6 trillion US dollars in 2020, and it likely increases in the
    future [39]. Agricultural e-commerce is a multidisciplinary field that aims to
    facilitate the buying and selling agricultural products and goods over the Internet.
    Although the agricultural industry, and many other industries, benefited from
    e-commerce technology, agriproducts have particular complications that general
    e-commerce platforms cannot address. Agricultural products are sophisticated and
    highly perishable, bringing high transportation, storage, and delivery constraints
    [77]. After yielding agriproducts, farmers have a limited amount of time. Furthermore,
    due to the geographical separation between the source of agriproducts and consumers,
    it is challenging for farmers to find their consumers, except with the help of
    intermediate distributors such as e-commerce [11, 50]. There are limited e-commerce
    platforms that support agriproducts. Also, the e-commerce platforms that support
    agriproducts rely on third-party logistics distributors, increasing delivery time.
    This delay negatively affects the freshness and quality of agricultural products.
    All in all, this resulted in dissatisfaction of the consumers about the agriproducts,
    and therefore, a loss for farmers and e-commerce platforms. This unsatisfaction
    makes traditional e-commerce unable to meet the fierce market constraints on agriproducts
    [98]. Agricultural products and services complication requires a special e-commerce,
    agricultural e-commerce. Agricultural e-commerce considers the constraints of
    buying and selling agricultural products and services to provide an efficient
    and suitable platform. Such platforms are essential in order to grow agricultural
    economic development, improve the flow of agricultural information, and expand
    the agricultural market [21, 34]. In fact, agricultural e-commerce has several
    astonishing advantages, which are: (a) greater information exchange; (b) improve
    farming techniques and best practices which enhance the yield and reduce the cost
    of inefficiency [58]; (c) increase productivity and predicting the agriproducts
    supply and demand which to an extent fight against food insecurity and reduce
    wastage [29, 43]; (d) facilitate e-trading of aquatic products, whole grains,
    and fresh commodities [51]; (e) minimizing logistics distribution intermediaries
    and transaction costs; (f) overcoming asymmetric information of agricultural products
    and services [34]. 4.1 Agricultural e-commerce categories Due to the differences
    and the needs of agricultural e-commerce, few business models have emerged the
    common models. Literature research adopts the common models for e-commerce, which
    are Business-to-Business (B2B), Business-to-Consumer (B2C), Consumer-to-Consumer
    (C2C), and Consumer-to-Business (C2B) [60]. Qin et al. address these categories
    in detail [66]. However, these models fail to fulfil the requirements of agricultural
    e-commerce, which raise the need for new models. Examples of such new models that
    previous studies proposed are Farmer to Consumer (F2C), Farmer to Association
    to Business (F2A2B), and Online to Offline (O2O). Figure 11 illustrates the taxonomy
    of e-commerce business models that literature research adopts. The following subsections
    address these emerging business models, benefits, and challenges. The suitability
    of each model regarding the product type, type of buyers, supply chain models,
    and target markets are also addressed. Fig. 11 Taxonomy of E-commerce business
    models Full size image 4.1.1 Farmer to consumer model The Farmer to Consumer (F2C)
    model is developed between the farmer and consumers and refers to the farm’s direct
    supply mode. This model is a unique combination of B2C and C2C business models,
    where Farmer can reach potential consumers without intermediaries. This model
    is suitable for targeting the domestic market, where it faces severe problems
    targeting the export market. The buyers in this model are mostly the consumers
    themselves rather than businesses and associations. The characteristics of this
    model facilitate small agricultural businesses, family farmers, or even a single
    farmer to act as a Farmer in this model [42]. The model is also suitable for fresh,
    organic, and raw material agriproducts, which consider essential points in agricultural
    e-commerce. This model creates a new and helpful channel between farmers and consumers
    by providing direct supply and sales. This channel reduces the circulation costs
    and the gap between agriproducts and consumers and eliminates intermediaries [74].
    It also, to some extent, reduces the need for physical agriproducts markets and
    avoids the situation of regional oversupply [38]. This model, however, raises
    a few challenges, such as legal regulations due to direct marketing, where farmers
    are required to register and license their businesses [89]. This model also created
    challenges regarding farmers’ personal skills, especially the ability to communicate
    with consumers using traditional or technological channels. 4.1.2 Farmer to association
    to business model The Farmer to Association to Business (F2A2B) model has been
    used recently in the Chinese market. It is also referred to as the Peasants to
    Cooperative to Business (P2C2B) model [87]. This model involves agricultural associations
    and professional cooperative organizations. These agrarian associations and cooperatives
    play a paramount role in organizing the production of farmers and peasants by
    applying the agricultural market supply and demand insights. They also provide
    agricultural technical guidance for peasants and establish a traceability system
    for agriproducts to assure their quality. Supporting these peasants enhances the
    fair market competitiveness for those farmers and peasants [42]. This model is
    suitable for targeting both domestic and export markets with the help of associations
    and cooperatives. The buyers in this model are mostly the consumers and can support
    the small agribusiness industry. The characteristics of this model facilitate
    small to large-scale agricultural enterprises with fair market competitiveness.
    The model is more suitable for processed agricultural products rather than fresh
    and organic agriproducts, especially if the target is export market. These agricultural
    associations and cooperatives can also play as a third party in the market on
    behalf of the farmers and peasants [54]. This step allows farmers and peasants
    to focus on their production. At the same time, agricultural associations and
    cooperatives concentrate on marketing, packing, and building a self-logistic service
    based on consumers’ particular needs. These agricultural associations and cooperatives
    act as the third party to assure the interests of farmers and peasants by guiding
    their production and accelerating their pace of agricultural industrialization.
    Despite these benefits, this model faces a few challenges in terms of the ability
    of the agricultural associations and cooperatives to keep pace with the technology
    development [19]. 4.1.3 Online to offline model The Online to Offline model (O2O)
    concept uses online agricultural e-commerce to entice consumers to purchase agriproducts
    using offline methods [42]. O2O model is a unique form of Business to Customer
    (B2C) model to create a simplified and convenient model for consumers to purchase
    agriproducts. In this model, consumers can shop, order, and get information about
    agricultural products and services using agricultural e-commerce, while payments
    and logistics are completed offline. This model results in a convenient, trustworthy,
    and secure consumer experience. Several agricultural industries have adopted this
    model, especially in China [56]. This model is suitable for targeting only the
    domestic market, while it faces severe problems targeting the export market. The
    buyers in this model are mostly the consumers, and the sellers can be small businesses
    and family farmers. The model is also suitable for all agriproducts, however,
    this may vary since this model mainly relies on the used offline delivery method.
    Social media, such as Instagram, LinkedIn, Twitter, WeChat, and Facebook, played
    a significant role in developing the O2O model and became important channels for
    agriproducts [76]. Using the O2O for agriproducts emerges a few challenges, such
    as brand building, whereas sellers on social media require accurate positioning
    of customer groups in order to establish customer awareness of their brand, thus
    reducing the trust risks. This model also raises the delivery and distribution
    challenges of the agriproducts since the O2O model does not include a supply chain.
    This model’s lack of regulation and monitoring may result in an uneven distribution
    of benefits and information asymmetry [88]. These challenges are addressed in
    the following Sect. 4.2. 4.2 Challenges The findings of analyzing the collected
    dataset (Sect. 3.4) highlighted a few challenges that have been addressed in the
    agricultural e-commerce field. E-commerce, in general, faces several challenges
    due to technical, business, logistics, and economic factors. Such challenges include
    pricing mechanisms, privacy and security, and supply and demand prediction [8];
    [31]. Agricultural e-commerce also faces these common challenges, besides a few
    more challenges handling agriproducts. This section sheds light on these special
    challenges regarding agricultural products. The literature on agricultural e-commerce
    addresses several issues and challenges from different perspectives. This study
    addresses the challenges brought up from the consumers’ and farmers’ perspectives,
    and only the ones associated with the marketing and shipment business processes,
    independent of the utilised value chain model. This study synthesis these challenges
    in the following points: 4.2.1 Demanding delivery time This challenge is related
    to the “on-demand delivery” keyword in the top 20 author keywords. Agricultural
    e-commerce requires shortening agricultural product circulation time, especially
    for cold chain transportation systems [50]. Such products include fresh meat,
    fresh berries, and fresh milk. The current solutions focus on increasing the route
    frequency of deliveries, which causes a high operational cost, especially for
    small orders [91]. The delivery time influences consumers’ decisions to purchase
    products [31]. Shortening delivery time is essential to enhance agricultural e-commerce
    platforms, increasing consumer satisfaction and trust. Agricultural e-commerce
    can optimize the delivery route using IoT technology and big data, thus shortening
    the time [10]. They can also provide purchasing agriproducts prior to the harvest
    process by using smart farms, eliminating the waiting time after the harvest process.
    4.2.2 Insecurity and untrustworthiness The other challenges mentioned in this
    section all affect the trust and insecurity of consumers to buy agriproducts from
    agricultural e-commerce. This challenge is related to the “trust” keyword in the
    top 20 author keywords. Although existing e-commerce platforms focus on increasing
    the trustworthiness of their platforms among consumers, consumers often feel insecure
    about purchasing through e-commerce, especially food and agriproducts [53]. For
    instance, given the unpredictable physical look of fresh produce, most consumers
    still choose to purchase agriproducts in person rather than online [43]. Insecure
    and untrustworthy are the most common reasons for customers not purchasing agriproducts
    on agricultural e-commerce. These reasons increase the importance of facing all
    the current challenges to provide a trustworthy marketplace for consumers. Solving
    the challenges mentioned above by using advanced technologies increases the trustworthiness
    of agricultural e-commerce. 4.2.3 Last-mile problem Existing agricultural e-commerce
    platforms use data analysis and data mining to overcome the last-mile challenges.
    The term “last mile” is used in logistics to refer to the final leg of delivery,
    which includes the movement of products between a transportation hub and a consumer
    location. This term occurs as the “last-mile delivery” keyword in the top 20 author-keywords.
    These platforms use many services to improve the solutions to the last-mile challenge,
    such as real-time status updates, proof of delivery, and audit key metrics. However,
    the cost of last-mile delivery is still high and causes severe issues for current
    e-commerce platforms. Although this challenge is common in the e-commerce logistics
    process, agricultural products increase their severity due to the characteristics
    of agriproducts (Joiner & Okeleke, [43, 91 , 98, 100]. Solving this challenge
    is significant for agricultural e-commerce to provide cost-efficiency, and energy
    reduction, thus green manufacturing and clean production [20, 27]. Applying advanced
    technologies such as IoT and big data can notably decrease the cost of last-mile
    delivery, thus increasing these platforms’ profit. United Parcel Service (UPS)
    saved millions of dollars by applying big data and IoT to their system (ORION).
    This system also helps the UPS company save over 39 million gallons of fuel every
    year and reduce engine idle time by 10 million minutes [69]. 4.2.4 Perishability
    and freshness Freshness is a major focus in the research in this field. The findings
    show that the keyword “fresh agricultural products” occurs in the top 20 author-keywords
    and the keywords plus. The current practice of delivering agriproducts begins
    with picking, harvesting, storing, and promoting on e-commerce. After the products
    are ordered, the cultivators then prepare the order for shipping inventory. This
    process may be efficient for long shelf-life agriproducts such as potatoes, onions,
    and peanuts. However, many agriproducts, such as fresh meats and fruits, are perishable
    over a short time. These perishable agriproducts have certain hindrances due to
    the perishability and complexity of such products, which current systems are unable
    to overcome [71, 92]. Also, different agricultural products have other characteristics,
    which add an extra burden to the logistics process [21, 43]. Since the freshness
    of agriproducts is essential for consumers in agricultural e-commerce platforms,
    this constitutes one of their significant challenges. Agricultural e-commerce,
    with the help of advanced technologies, shortens the delivery processes of perishable
    agriproducts. For instance, linking the IoT technology with the agricultural e-commerce
    platform allows cultivators to promote and sell agriproducts before harvesting
    them. This step reduces the period between harvesting the products and receiving
    them by the consumers, thereby delivering more fresh products. 4.2.5 Standardization
    Although standardization attracted the researcher’s attention in the analyzed
    dataset and was one of the top 20 author-keywords, the agricultural products in
    current online marketplaces lack standardization [56, 77]. For instance, fruits
    in e-commerce platforms have variant colours, freshness, shapes, tastes, and nutrition.
    Standardization in agriculture combines agricultural science, technology, and
    managerial techniques with the promotion of agricultural technology, business
    activities, production activities, and standardization management, in line with
    the unified administrative requirements and techniques of agricultural production
    [14]. This lack of standardization is due to the characteristics of agriproducts,
    which are cyclical, regional, and seasonal [52]. Another reason is the lack of
    market concept and market information of small and individual farms, which causes
    a random and uneven quality of agricultural production [40]. Solving this challenge
    is essential for agricultural e-commerce to bring scalability, portability, and
    affordability to their businesses [77]. By using Blockchain technology, agricultural
    e-commerce is able to involve cooperative organizations. These organizations may
    provide the necessary standardization for cultivators and farmers. Cooperative
    organizations can also play a monitoring role in ensuring agriproduct standardization
    and avoiding asymmetry of information. 4.2.6 Information asymmetry The findings
    showed that the keyword “asymmetry” occurs more than 20 times in author-keywords.
    Information asymmetry refers to the study of decisions in transactions where one
    party has more or better information than the other (Aboody & Lev, [1]). In agricultural
    e-commerce, the seller usually has more information about their agriproducts than
    the buyer. Although e-commerce platforms allow sellers to share information about
    their agriproducts’ quality, nutrition, and source, buyers lack information. This
    lack of information is due to several reasons, including sellers being obsessed
    with their interests, irrational buyers, insufficient monitoring regulations by
    e-commerce platforms, and the lack of sellers’ moral and legal understanding [55].
    The influence of moral hazard issues arising from asymmetric information on trust
    in e-commerce may negatively affect the virtual market’s survival [9, 25]. This
    issue has become a fundamental cause of agriproducts’ quality and safety [106].
    Agricultural e-commerce has to effectively share the information from the origin
    farms with the supplier and consumers [98]. This is challenging due to fluctuating
    agricultural product and service information [98]. By benefiting from the immutability
    transparency of Blockchain technologies, cooperative organizations and third-party
    services are able to monitor and supervise agriproducts’ information to avoid
    information asymmetry. Additionally, providing real-time information of products
    in a smart farm is possible with the help of IoT technology, which reduces the
    information asymmetry between sellers and buyers of agricultural e-commerce [96].
    4.3 Utilities of advanced technologies as a solution Agriculture and e-commerce
    fields, in general, benefit from several technologies. These technologies facilitate
    the process, enhance effectiveness, solve challenges, or provide new solutions.
    Such technologies include sensors, GIS, recommendation systems, decision support
    systems, semantic web, data mining and inventory, big data, the Internet of things,
    and Blockchain. Most of these technologies interfere with each process of both
    agriculture and e-commerce fields. This section sheds light on advanced technologies
    that appeared in the analysis of the literature items dataset in the field of
    agricultural e-commerce. Based on the finding of the content analysis (3.4), the
    research focuses on both Blockchain and IoT technologies. This section addresses
    the utilization of both technologies and their benefits in this field. Notice
    that the given solutions of utilizing the advanced technologies are generic as
    a unifying construct for agricultural e-commerce, regardless of the countries,
    actors, type of products, level of processing, and usage. 4.3.1 Blockchain Blockchain
    technology tends to appear in all content analyses of the analyzed dataset. This
    technology is decentralized, innovative, and distributive and maintains the availability,
    transparency, and integrity of all data in the network (Dutta et al., [26]). Agricultural
    e-commerce is one of the beneficial fields of this technology and its applications.
    There are many utilities of Blockchain technologies in agriculture in general
    and the field of agricultural e-commerce in specific. Such general utilities include
    food safety and traceability, improving visibility for the food supply chain,
    and commodity management platforms for agricultural products. Although these applications
    benefited the agriculture industry in general, the utilization of Blockchain in
    the agricultural e-commerce field was outweighed. Blockchain applications in this
    field can improve consumer surplus and social welfare (Dutta et al., [26]). There
    are two main drawbacks of utilizing Blockchain technology; it is still in its
    infancy and does not integrate directly with existing legacy systems [91]. The
    following sub-sections address each utilization and its benefits. 4.3.2 Data storage
    E-commerce customers tend to require trust to purchase products online. Data is
    essential to build successful and trustworthy agricultural products. Trustworthy
    data provides several insightful knowledge to all stakeholders of agricultural
    e-commerce. Examples of such knowledge are sources and nutrition information of
    agriproducts, farm monitoring, product and purchase traceability, market analysis,
    and decision-making. In order to achieve this trustworthiness, the data of agriproducts,
    farms, stakeholders, orders, and consumers must be secured, trusted, and unmodified.
    It is challenging for agricultural e-commerce to provide such data, which raises
    a severe issue [61]. Utilizing distributed ledger technology can provide the required
    secure data. Blockchain technology is a distributed ledger which can act as a
    database to store and retrieve data. By creating distributed and shared databases
    for agricultural e-commerce, users can ensure data validity with the help of data
    encryption. The ledger provides private key encryption, a powerful tool that provides
    authentication requirements [93]. Therefore, it links the data of all aspects
    of planting and harvesting agricultural products safely and unchangeably [91].
    The data will be unaltered and uncorrupted, which makes it immutable. The immutable
    data provided trusted and confirmed data to the consumers by tracking the provenance
    of the purchased agricultural products. 4.3.3 Logistics process Logistics in e-commerce
    is one of the main processes involving several tasks, such as picking, storing,
    and shipping inventory for the online marketplace. Logistics in agricultural e-commerce
    additionally involve the harvesting task. Logistics faces many issues in agricultural
    e-commerce due to the complexity of handling perishable products. The agricultural
    products also increase the severity of the “last-mile” and reverse logistics problems.
    These issues cause massive operating costs for agricultural e-commerce companies,
    and avoiding them is essential [91]. The utilization of Blockchain technology
    shifts the entire logistics process system. Blockchain-based product return management
    helps to enhance the reverse logistic processes by improving the trace of the
    location of the materials and authenticating all stakeholders involved in the
    recycling process [45, 46, 94]. This fosters sustainable reverse logistics and
    closed-loop for recycling, value recovery, and reuse, providing a circular economy,
    green manufacturing, and clean production [20, 27]. By benefiting the recycling,
    value recovery, and reuse process, Blockchain technology also enhances the last
    mile efficiency and affectivity [26]. The author [75] provides an in-depth discussion
    on the usage of Blockchain technology in the logistic process. 4.3.4 Cryptocurrency-based
    online payment system The majority of agricultural e-commerce platforms use e-payment
    systems, which refer to paperless monetary transactions. These platforms use several
    methods of e-payments, such as credit cards, debit cards, e-cheques, and e-wallet
    payments. Although such payment methods are secured and can protect against fraud
    and security threats, security breaches are possible. Examples of such breaches
    are viruses, worms, Trojan, denial-of-service attacks (DoS), phishing and pharming,
    Man-in-the-middle attacks, and spoofing attacks. Being vulnerable to such preaches
    negatively affects agricultural e-commerce platforms, so an alternative payment
    system is required. Blockchain recorded the group of transactions, called blocks,
    as part of its database. These blocks are unaltered and uncorrupted, which makes
    Blockchain technology suitable for cryptocurrencies. Cryptographic currencies
    use complex encryption to provide a transparent money exchange for goods and services
    amongst their users. Cryptocurrencies benefit agricultural e-commerce by speeding
    up and simplifying payments in their platforms, especially cross-border payments
    [26]. Cryptocurrencies also enable automatic payment upon physical delivery of
    agricultural production, making the concept of “cash on delivery” more convenient
    and trustworthy for e-commerce companies [73]. Thiruchelvam et al. proposed an
    example of such agricultural e-commerce [80]. Using the cryptocurrency concept,
    agricultural e-commerce companies can also create complementary currency for their
    consumers’ societies, such as commodity currency [3]. 4.3.5 Transactions through
    Blockchain. Transactions of agricultural e-commerce include selling and purchasing
    agricultural products and services. These transactions occur between all stakeholders,
    such as farmers, consumers, third-party organizations, and governments. E-transactions
    are transactions conducted over the Internet, whether the payment is conducted
    online or offline [84]. Examples of e-transactions are ordering, payment, cancelling,
    and delivering transactions. Agricultural e-commerce platforms are based on e-transactions,
    which are important to be securely stored. Building these e-transactions based
    on secure and immune technology is essential. As aforementioned, Blockchain recorded
    the group of transactions as part of its database. Using transactions based on
    the Blockchain provides agricultural e-commerce to enable digital assets. These
    assets can generate crypto stamp that replaces the physical stamp during circulation.
    Due to the Blockchain features, using such crypto stamps helps keep immutable,
    decentralized, and consensus records of all purchases of agricultural goods and
    services [95], increasing the transaction’s credibility. Using blockchain transactions
    also supports agricultural e-commerce systems in adopting sophisticated fractional
    calculus models [16], which secures the protocols of e-transactions and reduces
    the tracking cost and time of transactions [26, 105]. Such systems include the
    Belt and Road Blockchain Consortium [65] and the AgriDigital platform [81]. Using
    such transaction in agricultural e-commerce eventually motivate users to recycle
    agricultural products and services through transaction-based reward programs such
    as tokens. This also impacts society positively [72]. 4.3.6 Internet of things
    Internet of Things (IoT) is one of the identified trend topics in the analyzed
    dataset of agricultural e-commerce, which has been ranked as the fourth most used
    keyword in the literature items. The IoT generally uses smart monitoring, tracking,
    identification, and positioning. It also helps agricultural production by applying
    innovative farming systems to enhance agriproduct production and distribution
    quality. Applying IoT devices to collect and integrate data is convenient for
    larger farms; however, the expenses are inconvenient for small farms and agribusinesses
    [91]. The following sub-sections address each IoT utilisation in agricultural
    e-commerce and its benefits. 4.3.7 Traceability system Traceability in agricultural
    e-commerce refers to retrieving and tracking each transaction made by any stakeholder
    of the platform. Establishing trust is a significant challenge for agricultural
    e-commerce, which is complex due to the characteristics of the agricultural product,
    and traceability is the key to solving this issue. Traceability in IoT includes
    not only delivery tracing but also commodities and farming tracing [71]. Farms
    powered by IoT provide real-time data of their agricultural products, even before
    crop picking and harvesting. This creates the opportunity for e-commerce to enable
    e-farm in their platform to simulate the ideal way for consumers to get agri-food
    by personally picking them at convenient farms. Since the ideal way is impossible
    for those living in urban areas, the e-farm simulation provides consumers with
    similar experiences. It gives all the necessary data of all agriproducts on the
    farm, enabling consumers to purchase these products before picking them and delivering
    them directly. This increases the satisfaction of the consumers and gains their
    trust [71]. This also significantly reduces the multiple intermediaries between
    farmers and consumers, reducing the expenses of the agriproducts and improving
    their freshness. 4.3.8 Logistics distribution Logistics distribution in agricultural
    e-commerce, as aforementioned, involves harvesting, picking, storing, and shipping
    inventory for the online marketplace. The most critical element of an e-commerce
    logistics chain is its efficiency and simplicity. Besides benefiting from Blockchain
    technology, IoT technology also significantly improves efficiency and reduces
    agricultural e-commerce logistics chain costs. It also optimizes the agriproducts’
    logistics flow and tracks them in real time [79, 96]. Beyond profitability, the
    need to tackle the last mile is vital. Additionally, there are environmental impulses.
    By using RFID technology, consumers can trace the logistics flow of their agriproducts.
    This technology also empowers the IoT to innovate last-mile distribution of agricultural
    e-commerce logistics flow by using sensors to update delivery locations, destinations,
    and potential traffic impacts. 4.4 4.4. Proposed conceptual architecture To elaborate
    on this study’s proposed agricultural e-commerce conceptual architecture, we shed
    light on the current state-of-the-art literature’s solutions and best practices.
    The literature addresses several aspects of the best practice of e-commerce in
    general. Examples of such common aspects are pricing mechanisms, branding, and
    the prediction of supply and demand [15]. Aside from the common aspects, this
    study focuses on agriproducts-related practices and solutions. The following points
    highlight the main aspects that the literature considered in order to build a
    best practice agricultural e-commerce solution. Some literature also addresses
    the other few aspects that may benefit agricultural e-commerce, such as brand
    awareness, payment systems, cash on delivery (Chen, [15]), and Internet talent
    enhancement [40]. 4.4.1 Strength of logistics The current literature acknowledges
    the importance of the logistics process and its effects on agricultural e-commerce
    [14, 42, 103]. Solving this challenge, especially the “last mile” dilemma, will
    be the key factor in developing a successful platform. As aforementioned, advanced
    technologies such as the Blockchain and IoT will expedite and facilitate the logistics
    process, reducing the cost and maintaining the freshness of the purchased agriproducts.
    To some extent, these reduce energy and fuel consumption [78]. 4.4.2 Implementation
    of standardization Standardization is one of the challenges that agricultural
    e-commerce is facing now. The current literature argues that the standards are
    prerequisites for providing consumers with trustworthy agricultural products and
    services [14]; [77]. The significance of standardization makes it an essential
    countermeasure in developing the best practices for agricultural e-commerce [104].
    Cooperative organizations are responsible for generating, regulating, and monitoring
    such standards. Involving these organizations to achieve standardization is essential
    for agricultural e-commerce platforms. 4.4.3 Include information knowledge of
    agriproducts The previous studies ensured the importance of sharing information
    and knowledge among stakeholders in agricultural e-commerce platforms. This information
    is related to both the farmers and the consumers. Farmers and cultivators require
    access to information about various crops, soil conditions, weather, and pesticides.
    Also, daily market information, such as minimum, maximum and modal prices for
    commodities and their varieties, is helpful for them [7]. Providing such information
    increases the awareness of farmers and cultivators and enlightens them to produce
    quality agriproducts and increase their profits. Agricultural e-commerce also
    provides consumers with traceability logistics information, detailed product provenance
    information, nutrition, origin, and authenticity assurances. Such information
    increases the consumers’ satisfaction and trust in agricultural e-commerce and,
    therefore, is a key success factor in creating agricultural e-commerce [106].
    To some extent, this enhances food security for society [29], which helps achieve
    the SDGs. 4.4.4 Traceability e-commerce An essential aspect of best practices
    is the ability of agricultural e-commerce to create a traceability information
    system for the logistics process [77]. With the help of IoT technology, providing
    accurate information on delivery estimation, location, and qualification of the
    purchased agriproducts is applicable [106]. Such information increases the traceability
    quality and, therefore, gains the consumers’ trust. Consumers’ trust is essential
    for successful agricultural e-commerce. 4.4.5 Conceptual architecture The proposed
    conceptual architecture of agricultural e-commerce is inspired by the aforementioned
    best practice aspects and solutions. The findings of the collected dataset indicate
    the important aspects in the field of agricultural e-commerce, which the proposed
    architecture addresses. It also relies on a few previous studies [67, 85, 102].
    Although few previous studies proposed interesting architectures, these architectures
    missed one or more essential components of agricultural e-commerce. For instance,
    the authors of [23] only focus on data integration in blockchain architecture.
    The authors of [64] do not address advanced technologies, cooperatives, and farms
    in their architecture. Both authors of [33, 63] include the essential components
    of agricultural e-commerce, however, they have not addressed the significant role
    of agricultural associations and cooperative organizations. The proposed conceptual
    architecture includes advanced Blockchain and IoT technologies, agricultural associations
    and cooperative organizations, stakeholders, third-party services, and consumers.
    Figure 12 illustrates the proposed agricultural e-commerce conceptual architecture
    of this study, and it includes the following components: 4.4.6 Agricultural e-commerce
    platform The agricultural e-commerce platform is based on a Hyperledger network.
    This network contains User Interface (UI) as a website and a mobile application
    and connects all platform end users using local nodes. Each node maintains transaction
    data, such as block numbers and hash codes. The network helps agricultural e-commerce
    to ensure transparency, reduce risks and fraud agreements between third parties,
    and autogenerate smart contracts for each transaction. The double chain structure
    of the Hyperledger network helps enhance the efficiency and traceability of the
    system. 4.4.7 Agricultural associations and cooperative organizations The role
    of this node in the network is to provide information sharing, standardization,
    and avoiding asymmetry. Agricultural associations and cooperative organizations
    help ensure the interests of farmers and peasants by guiding their production
    and accelerating the pace of agricultural industrialization. In the case of individual
    farmers and family farmers, the role of these cooperative organizations becomes
    essential to help in marketing, packing, and building a self-logistic service
    based on consumers’ particular needs. This role enhances the fair market competitiveness
    for those farmers. As other end users, these cooperative organizations connect
    to the platform through the Hyperledger network. 4.4.8 Stakeholders Stakeholders
    are the sellers, employers, and managers of the platform. Sellers can be individual
    farms, farmers, small agribusinesses, or large enterprises. Each stakeholder is
    represented as a node in the Hyperledger network. The network allows these stakeholders
    to connect with other third-party nodes, cooperative organization nodes, and consumer
    nodes. Moreover, in the case of associating a farm with a farmer in the platform,
    the farmer is able to control and manage the farm remotely with the help of an
    IoT-based farm. 4.4.9 Consumers This node represents all types of customers of
    agricultural e-commerce. These customers use the UI to access the agricultural
    e-commerce platform. 4.4.10 Third-party services Using the blockchain and IoT,
    the proposed architecture facilitates the integration and communication of these
    third-party services with agricultural e-commerce, farmers, customers, and cooperative
    organizations. These services help agricultural e-commerce enhance marketing,
    security, customer support, customer behavioural analysis, payments, and accounting.
    Examples of such services are social media management, advanced technology management,
    product information management, content marketing, delivery system, bookkeeping
    and accounting, and customer help desk. Fig. 12 The conceptual architecture for
    agricultural e-commerce Full size image 5 Discussion The findings of this study
    observe several interesting indications in various aspects of agricultural e-commerce.
    The findings prove the rise of the academia and industry’s interest and the growth
    of interest, however, countries’ collaboration in the field of agricultural e-commerce
    was low. This calls for more collaborations, especially in terms of global marketing
    and supply chain standardisation. The findings also elaborate on the assumptions
    of whether academic authors published many unique articles or merely appeared
    to do so. The results show that the majority of authors (about 90 per cent) have
    contributed to only one publication (2,341 out of 2,601), and the average fractionalization
    of the authors was very low (0.49). The content analysis shed light on the relationship
    between terms and highlighted the challenges and issues that emerged by utilizing
    advanced technologies in agricultural e-commerce. The results show the importance
    of customer satisfaction and its relation to the agriproducts’ quality and freshness.
    It clearly indicates that the freshness of agricultural products is bound to the
    supply chain. It also shows the importance of advanced technologies in online
    shopping. Finally, the findings show that future research should consider the
    development of agricultural e-commerce and truly and accurately reflect the benefits
    and challenges of utilizing advanced technologies. Further investigation is required
    for the utilization of the advanced technologies in term of countries, actors,
    type of products, level of processing, and the usage. This study shed light on
    the ushered challenges resulting from utilizing advanced technology in agricultural
    e-commerce, which has produced more meaningful directions for future research.
    Based on these findings and the current state-of-the-art, this paper sheds light
    on the following research prospects as a means to provide a valuable reference
    for future research of advanced technologies in agricultural e-commerce. Security
    and privacy: How advanced technologies affect agricultural e-commerce platform
    security in terms of network, endpoint, application, and data security? Data sparsity:
    How can big data help to utilize the high heterogeneity of agricultural e-commerce
    data? Distributed and incremental computing: How agricultural e-commerce platform
    addresses the challenges of scalability and real-time processing for their recommendation
    system. Interoperability of systems: How to provide an interoperable Hyperledger
    network that include variety of sub-systems and networks. Transition and integration:
    How does agricultural e-commerce transit and integrate the variety of stakeholders,
    processes and advanced technologies? Lack of talents: How cooperative organizations
    can support the lack of technological culture and limited information technology
    (IT) knowledge among rural farmers and small agribusinesses. Complexity: How to
    reduce the complexity of utilizing advanced technologies to handle a large number
    of stakeholders involved in agricultural e-commerce platforms. 6 Conclusion Certain
    agricultural e-commerce challenges contribute to the emergence of more serious
    issues, such as information asymmetry, non-standardization, agriproduct perishability,
    and food insecurity. These challenges call for agricultural e-commerce research
    to establish a means of providing consumers with a high-quality and efficient
    online shopping experience for agricultural products. The bibliometric analysis
    of agricultural e-commerce research described in this study identifies clusters
    of research and researchers, indicating how distinct areas of thought may have
    emerged over time. Additionally, these clusters provide information on the current
    research interest, research deficit, and future research directions. It may also
    be beneficial for colleagues who intend to conduct field research and are looking
    for key literature and potential research collaborators or informants. This study
    conducted bibliometric analysis from four perspectives: descriptive analysis,
    authors, countries, and contents. The analysis was performed on 1,298 unique literature
    items published in the last decade. The descriptive analysis resulting from the
    findings provides the basic statistics about the analyzed dataset of literature,
    such as the top impacting sources, literature items and affiliations, subject
    areas, and publication growth. The author analysis elucidates the most productive
    authors, and evaluates their impact by using the h index, the g index, total citations,
    and the fractionalization of their articles. The country analysis highlights the
    countries’ impact and productivity using the number of publications, SCP, MCP,
    MCP ratio, total citations, and average article citation metrics. It also addresses
    the collaborations between countries by using a network analysis graph. Finally,
    the content analysis sheds light on the documents using the authors’ keywords,
    Keywords Plus, and abstract contents. After analyzing these characteristics using
    various metrics, this study revealed the differences between agriproducts and
    other products. In addition, it highlighted special agricultural e-commerce business
    models, including the F2C, F2A2B, and O2O models. Following that, this study discusses
    the issues and challenges associated with agricultural e-commerce and the application
    of advanced technologies in this field. As a result of the findings, this study
    points out the best practices and solutions to consider in agricultural e-commerce
    platforms. It proposes a conceptual architecture for agricultural e-commerce which
    utilizes the Blockchain and the Internet of Things technologies. This architecture
    provides innovative solutions for the agricultural e-commerce stakeholders such
    as cultivators, consumers, small and medium agribusinesses, cooperative agricultural
    organizations, and third-party service providers. Finally, this study discusses
    the bibliometric analysis results and provides prospects for future research on
    advanced technologies in agricultural e-commerce. References Aboody, D., & Lev,
    B. (2000). Information asymmetry, R&D, and insider gains. The journal of Finance,
    55(6), 2747–2766. Article   Google Scholar   Abrizah, A., Zainab, A. N., Kiran,
    K., & Raj, R. G. (2012). LIS journals scientific impact and subject categorization:
    a comparison between Web ofScience and Scopus. Scientometrics, 94(2), 721–740.
    https://doi.org/10.1007/s11192-012-0813-7 Article   Google Scholar   Altarturi,
    B. H. M., & Othman, A. H. A. (2021). Behavioral intention of using a complementary
    currency in Palestine. The importance of New Technologies and Entrepreneurship
    in Business Development. In The context of economic diversity in developing countries
    (pp. 1084–1107). The Impact of New Technologies and Entrepreneurship on Business
    Development. Cham: Springer. Altarturi, H., Saadoon, M., & Anuar, N. B. (2020).
    Cyber parental control: a bibliometric study. Children and Youth Services Review.
    https://doi.org/10.1016/j.childyouth.2020.105134 Article   Google Scholar   Arfaoui,
    A., Ibrahimi, K., & Trabelsi, F. (2019). Biochar application to soil under arid
    conditions: a bibliometric study of research status and trends. Arabian Journal
    of Geosciences. https://doi.org/10.1007/s12517-018-4166-2 Article   Google Scholar   Aria,
    M., & Cuccurullo, C. (2017). bibliometrix: an R-tool for comprehensive science
    mapping analysis. Journal of Informetrics, 11(4), 959–975. https://doi.org/10.1016/j.joi.2017.08.007.
    Article   Google Scholar   Balasubramanian, G. K., Balakrishnan, M., Ch, S., &
    Soam, S. (2018). Status and scope of e-commerce in agribusiness in India. International
    Research Journal of Management and Commerce, 5. Banerjee, T., Mishra, M., Debnath,
    N. C., & Choudhury, P. (2019). Implementing E-commerce model for agricultural
    produce: A research roadmap. Periodicals of Engineering and Natural Sciences (PEN),
    7(1), 302–310. Article   Google Scholar   Bao, J. (2011). The analysis and strategy
    of information asymmetry in e-commerce. 2011 International Conference on E-Business
    and E-Government (ICEE) Barenji, A. V., Wang, W., Li, Z., & Guerra-Zubiaga, D.
    A. (2019). Intelligent E-commerce logistics platform using hybrid agent based
    approach. Transportation research part e: Logistics and transportation review,
    126, 15–31. Article   Google Scholar   Bhende, M., Avatade, M. S., Patil, S.,
    Mishra, P., Prasad, P., & Shewalkar, S. (2018). Digital Market: E-Commerce Application
    For Farmers. 2018 Fourth International Conference on Computing Communication Control
    and Automation (ICCUBEA) Bornmann, L., & Haunschild, R. (2016). Citation score
    normalized by cited references (CSNCR): the introduction of a new citation impact
    indicator. Journal of Informetrics, 10(3), 875–887. Article   Google Scholar   Chadegani,
    A. . A., Salehi, H., Yunus, M. . M., Farhadi, H., Fooladi, M., & M, Farhadi. (2013).
    A comparison between two main academic literature collections: web of Science
    and scopus databases. Web of Science and Scopus Databases, 22, 101462. Google
    Scholar   Chen, H. (2017). Challenges and Countermeasures of Hunan Agricultural
    Electronic Commerce from the Angle of Internet: a theoretical review. DEStech
    Transactions on Social Science, Education and Human Science(ssme). Chen, Q. (2016).
    Research on the Agricultural E-Commerce in Consumer’s Perspective. https://doi.org/10.2991/icemet-16.2016.345
    Chen, T., & Wang, D. (2020). Combined application of blockchain technology in
    fractional calculus model of supply chain financial system (131 vol., p. 109461).
    Chaos, Solitons & Fractals. Chevalier, S. (2021). Retail e-commerce sales worldwide
    from 2014 to 2024. statista. Retrieved 17/08/2021 from https://www.statista.com/statistics/379046/worldwide-retail-e-commerce-sales
    Cobo, M. J., López-Herrera, A. G., Herrera-Viedma, E., & Herrera, F. (2011). An
    approach for detecting, quantifying, and visualizing the evolution of a research
    field: a practical application to the fuzzy sets theory field. Journal of Informetrics,
    5(1), 146–166. Article   Google Scholar   Cristobal-Fransi, E., Montegut-Salla,
    Y., Ferrer-Rosell, B., & Daries, N. (2020). Rural cooperatives in the digital
    age: an analysis of the internet presence and degree of maturity of agri-food
    cooperatives’e-commerce. Journal of Rural Studies, 74, 55–66. Article   Google
    Scholar   Das, D., & Dutta, P. (2016). Performance analysis of a closed-loop supply
    chain with incentive-dependent demand and return. The International Journal of
    Advanced Manufacturing Technology, 86(1), 621–639. Article   Google Scholar   Delima,
    R., Budi, H., Andriyanto, N., & Wibowo, A. (2018). Development of purchasing module
    for agriculture e-Commerce using Dynamic System Development Model.Int. J. Adv.
    Comput. Sci. Appl, 9(10). Della Corte, V., Del Gaudio, G., Sepe, F., & Sciarelli,
    F. (2019). Sustainable tourism in the open innovation realm: a bibliometric analysis.
    Sustainability, 11(21), 6114. Article   Google Scholar   Dey, K., & Shekhawat,
    U. (2021). Blockchain for sustainable e-agriculture: literature review, architecture
    for data management, and implications. Journal of Cleaner Production, 316, 128254.
    Article   Google Scholar   Donthu, N., Kumar, S., Mukherjee, D., Pandey, N., &
    Lim, W. M. (2021). How to conduct a bibliometric analysis: an overview and guidelines.
    Journal of Business Research, 133, 285–296. Article   Google Scholar   Durmaz,
    Y., & Kılınç, N. (2007). The effect of asymmetric information on consumer Trust
    in e-commerce and a field work. Development, 48, 53. Google Scholar   Dutta, P.,
    Choi, T. M., Somani, S., & Butala, R. (2020). Blockchain technology in supply
    chain operations: Applications, challenges and research opportunities. Transportation
    research part e: Logistics and transportation review, 142, 102067. Article   Google
    Scholar   Dutta, P., Das, D., Schultmann, F., & Fröhling, M. (2016). Design and
    planning of a closed-loop supply chain with three way recovery and buy-back offer.
    Journal of Cleaner Production, 135, 604–619. Article   Google Scholar   Egghe,
    L. (2006). Theory and practise of the g-index. Scientometrics, 69(1), 131–152.
    https://doi.org/10.1007/s11192-006-0144-7. Article   Google Scholar   Esfahani,
    L. P., & Asadiye, Z. S. (2009). The role of information and communication technology
    in agriculture. 2009 In: First International Conference on Information Science
    and Engineering Fahimnia, B., Sarkis, J., & Davarzani, H. (2015). Green supply
    chain management: a review and bibliometric analysis. International Journal of
    Production Economics, 162, 101–114. https://doi.org/10.1016/j.ijpe.2015.01.003.
    Article   Google Scholar   Fecke, W., Danne, M., & Musshoff, O. (2018). E-commerce
    in agriculture–the case of crop protection product purchases in a discrete choice
    experiment. Computers and electronics in agriculture, 151, 126–135. Article   Google
    Scholar   Fernando, E., Assegaff, S., & Rohayani, A. H. (2016). Trends information
    technology in E-agriculture: A systematic literature review. 2016 3rd International
    Conference on Information Technology, Computer, and Electrical Engineering (ICITACEE)
    Gu, X., Chai, Y., Liu, Y., Shen, J., Huang, Y., & Nan, Y. (2017). A MCIN-based
    architecture of smart agriculture. International Journal of Crowd Science, 1(3),
    237–248. Gupta, R., & Sharma, P. K. (2018). Scope of e-commerce in agri-business
    in India: An overview. International Journal of Advanced Scientific Research and
    Management, Special Issue I. Hallak, J., Burleson, G., Ghattas, H., & Machado,
    M. (2019). Women in Tech: Social Innovation in MENA. In: Engineering for Change
    [online] https://www.engineeringforchange.  Han, H., Xiong, J., & Zhao, K. (2021).
    Digital inclusion in social media marketing adoption: the role of product suitability
    in the agriculture sector. Information Systems and e-Business Management, 20,
    657–683. Hirsch, J. E. (2005). An index to quantify an individual’s scientific
    research output. Proceedings of the National academy of Sciences, 102(46), 16569–16572.
    Article   Google Scholar   Hu, L. (2016). Development strategy of agricultural
    retail e-commerce based on marketing channels. DEStech Transactions on Economics,
    Business and Management(icem), 12(8), 61. Huang, J., & Zhang, L. (2017). The big
    data processing platform for intelligent agriculture. In AIP Conference Proceedings
    (Vol. 1864, No. 1, pp. 020033). AIP Publishing LLC. Huo, Y., & Mu, H. (2017).
    Research on the Development of E-commerce Model of Agricultural Products. MATEC
    Web of Conferences, 100, 40. https://doi.org/10.1051/matecconf/201710002040 Article   Google
    Scholar   Huyer, S. (2016). Closing the gender gap in agriculture (20 vol., pp.
    105–116). SAGE Publications Sage India: New Delhi, India. Jia, H. (2017). Discussion
    on the construction of agricultural e-commerce mode. In 2017 International Conference
    on Economics, Finance and Statistics (ICEFS 2017) (pp. 556–561). Atlantis Press.
    Joiner, J., & Okeleke, K. (2019). E-Commerce in Agriculture: New Business Models
    for Smallholders’ inclusion into the formal economy. In: GSMA, Tech. Rep. Kang,
    P., & Zhang, T. (2019). The review of risk identification of e-commerce supply
    chain under the network economy. In The International Conference on Cyber Security
    Intelligence and Analytics (pp. 706–713). Cham: Springer. Kouhizadeh, M., & Sarkis,
    J. (2018). Blockchain practices, potentials, and perspectives in greening supply
    chains. Sustainability, 10(10), 3652. Article   Google Scholar   Kouhizadeh, M.,
    Sarkis, J., & Zhu, Q. (2019). At the nexus of blockchain technology, the circular
    economy, and product deletion. Applied Sciences, 9(8), 1712. Article   Google
    Scholar   Kumar, R., Rani, S., & Awadh, M. A. (2022). Exploring the application
    sphere of the internet of things in industry 4.0: a review, Bibliometric and Content
    Analysis. Sensors (Basel, Switzerland), 22(11), 4276. Article   Google Scholar   Kumar,
    R., Singh, S., Sidhu, A. S., & Pruncu, C. I. (2021). Bibliometric analysis of
    specific energy consumption (SEC) in machining operations: a sustainable response.
    Sustainability, 13(10), 5617. Article   Google Scholar   Lau, J. D., Kleiber,
    D., Lawless, S., & Cohen, P. J. (2021). Gender equality in climate policy and
    practice hindered by assumptions. Nature climate change, 11(3), 186–192. Article   Google
    Scholar   Lee, Y. L., & Tao, K. C. (2018). The barriers and key breakthrough factors
    for e-commerce implementation for small agriculture firms in Taiwan Rural Areas.
    Proceedings of the 2nd international conference on e-society, e-education and
    E-technology Li, X., Wang, D., & Li, M. (2020). Convenience analysis of sustainable
    E-agriculture based on blockchain technology. Journal of Cleaner Production, 271,
    122503. Article   Google Scholar   Lin, J., Li, L., Luo, X. R., & Benitez, J.
    (2020). How do agribusinesses thrive through complexity? The pivotal role of e-commerce
    capability and business agility. Decision Support Systems, 135, 113342. Article   Google
    Scholar   Lin, J., Shen, Z., Zhang, A., & Chai, Y. (2018). Blockchain and IoT
    based food traceability for smart agriculture. Proceedings of the 3rd International
    Conference on Crowd Science and Engineering Liu, F., Tang, W., Zhang, Y., & Makoto,
    H. (2011). Construction of the agricultural products e-commerce mode linked by
    rural economic cooperation organization—through two Japanese cases study. 2011
    International Conference on Business Management and Electronic Information Liu,
    Z. (2020). Research on Information Asymmetry in C2C E-Commerce: Based on the Case
    of Alibaba. 5th International Conference on Financial Innovation and Economic
    Development (ICFIED 2020) Lv, C. (2019). Current Situation and Countermeasures
    of Agricultural Products E-Commerce Development in Heyuan City. 2019 4th International
    Conference on Financial Innovation and Economic Development (ICFIED 2019) Murugesan,
    A., Ramasamy, K., Aravind, P., Narayanan, V. B., & Raja, J. D. (2021). A Systematic
    Survey of e-Commerce Applications with Blockchain in Agro Sector. 2021 7th International
    Conference on Advanced Computing and Communication Systems (ICACCS) Nadarajan,
    S. V., & Ismail, R. (2011). E-Commerce framework to improve rural agriculture
    sector in Cambodia. International Conference on E-business, management and Economics
    Nature (2018). A guide to the Nature Index. https://www.nature.com/articles/d41586-018-05559-2
    Niranjanamurthy, M., Kavyashree, N., Jagannath, S., & Chahar, D. (2013). Analysis
    of e-commerce and m-commerce: advantages, limitations and security issues. International
    Journal of Advanced Research in Computer and Communication Engineering, 2(6),
    2360–2370. Google Scholar   Oliveira, T., Alhinho, M., Rita, P., & Dhillon, G.
    (2017). Modelling and testing consumer trust dimensions in e-commerce. Computers
    in Human Behavior, 71, 153–164. Article   Google Scholar   Pan, C. L., Liu, Y.,
    Zhou, X., Qiu, J., & Chen, Z. (2020). Exploring the research fronts of e-commerce
    development under big data and Internet technology: scientific econometric analysis
    from a multidisciplinary literature. 2020 International Conference on E-Commerce
    and Internet Technology (ECIT) Patil, A. S., Tama, B. A., Park, Y., & Rhee, K.
    H. (2017). A framework for blockchain based secure smart green house farming.
    Advances in Computer Science and ubiquitous Computing (pp. 1162–1167). Springer.
    Piantari, E., Ashaury, H., Junaeti, E., & Nagalla, V. H. (2020). An architecture
    of e-marketplace platform for agribusiness in Indonesia. In Proceedings of the
    7th Mathematics, Science, and Computer Science Education International Seminar,
    MSCEIS 2019, 12 October 2019, Bandung, West Java, Indonesia. Pournader, M., Shi,
    Y., Seuring, S., & Koh, S. L. (2020). Blockchain applications in supply chains,
    transport and logistics: a systematic review of the literature. International
    Journal of Production Research, 58(7), 2063–2081. Article   Google Scholar   Qin,
    Z., & Qin, Z. (2009). Introduction to E-commerce (Vol. 2009). Heidelberg: Springer.
    Rahman, M. M. R., & Neena, S. B. (2018). The marketing system of agricultural
    products in Bangladesh: A case study from Sylhet district. Bangladesh Journal
    of Public Administration, 26(2), 61–78. Revinova, S. (2021). E-commerce effects
    for the sustainable development goals. In SHS Web of Conferences (Vol. 114, pp.
    01013). EDP Sciences. Rijmenam, M. (2014). Why UPS spends over $ 1 Billion on
    Big Data Annually. datafloq. https://datafloq.com/read/ups-spends-1-billion-big-data-annually/273
    Ruan, J., Jiang, H., Zhu, C., Hu, X., Shi, Y., Liu, T., Rao, W., & Chan, F. T.
    S. (2019). Agriculture IoT: emerging trends, cooperation networks, and outlook.
    IEEE Wireless Communications, 26(6), 56–63. Article   Google Scholar   Ruan, J.,
    & Shi, Y. (2016). Monitoring and assessing fruit freshness in IOT-based e-commerce
    delivery using scenario analysis and interval number approaches. Information Sciences,
    373, 557–570. Article   Google Scholar   Saberi, S., Kouhizadeh, M., Sarkis, J.,
    & Shen, L. (2018). Blockchain technology and its relationships to sustainable
    supply chain management. International Journal of Production Research, 57, 1–19.
    https://doi.org/10.1080/00207543.2018.1533261. Article   Google Scholar   Salah,
    K., Nizamuddin, N., Jayaraman, R., & Omar, M. (2019). Blockchain-based soybean
    traceability in agricultural supply chain. Ieee Access : Practical Innovations,
    Open Solutions, 7, 73295–73305. Article   Google Scholar   Savaliya, N., & Shaikh,
    N. (2020). Direct marketing of agriculture products: A new initiative for Indian
    farmers. agrinenv.com, 113, 1(3). Shamout, M. (2019). Understanding blockchain
    innovation in supply chain and logistics industry. Int J Recent Technol Eng, 7(6),
    616–622. Google Scholar   Shen, C., Chen, M., & Wang, C. (2019). Analyzing the
    trend of O2O commerce by bilingual text mining on social media. Computers in Human
    Behavior, 101, 474–483. Article   Google Scholar   Shu, G., Ren, T., & Wang, M.
    (2007). Technology and infrastructure considerations for e-commerce in chinese
    agriculture. Agricultural sciences in China, 6(1), 1–10. Article   Google Scholar   Siikavirta,
    H., Punakivi, M., Kärkkäinen, M., & Linnanen, L. (2002). Effects of e-commerce
    on greenhouse gas emissions: a case study of grocery home delivery in Finland.
    Journal of industrial ecology, 6(2), 83–97. Article   Google Scholar   Sun, R.,
    Liu, M., & Zhao, L. (2019). Research on logistics distribution path optimization
    based on PSO and IoT. International Journal of Wavelets Multiresolution and Information
    Processing, 17(06), 1950051. Article   Google Scholar   Thiruchelvam, V., Mughisha,
    A. . S., Shahpasand, M., & Bamiah, M. (2018). Blockchain-based technology in the
    coffee supply chain trade: case of Burundi coffee.Journal of Telecommunication.
    Electronic and Computer Engineering (JTEC), 10(3), 121–125. Google Scholar   Tönnissen,
    S., & Teuteberg, F. (2020). Analysing the impact of blockchain-technology for
    operations and supply chain management: an explanatory model drawn from multiple
    case studies. International Journal of Information Management, 52, 101953. Article   Google
    Scholar   Tranfield, D., Denyer, D., & Smart, P. (2003). Towards a methodology
    for developing evidence-informed management knowledge by means of systematic review.
    British Journal of Management, 14(3), 207–222. Article   Google Scholar   Van,
    L. T. H., Guzikova, L., & Nguyen, A. T. (2022). Evaluation of E-commerce Impact
    on Sustainable Economic Growth: The Case of Vietnam. International Scientific
    Conference on Innovations in Digital Economy.  Veijalainen, J. (2009). e-Commerce
    Transactions. In L. Liu & M. T. ÖZsu (Eds.), Encyclopedia of Database Systems
    (pp. 960–961). Springer US. https://doi.org/10.1007/978-0-387-39940-9_730 Vu,
    N. (2021). Business idea: An organic food ecommerce mobile application and website.
    [Master''s thesis, University of Applied Sciences - SeAMK]. https://www.theseus.fi/handle/10024/499162
    Wamba, S. F., & Queiroz, M. M. (2020). Blockchain in the operations and supply
    chain management: benefits, challenges and future research opportunities. In:
    Elsevier. Wang, J., Zhu, X., & Zhang, C. (2016). Models of China’s E-commerce
    in the agricultural sector: an exploratory study. International Journal of u-and
    e-Service Science and Technology, 9(4), 389–400. Article   Google Scholar   Wang,
    X., Zhang, L., & Li, J. (2018). Research on the Risk of O2O Fresh Agricultural
    Supply Chain. 4th International Symposium on Social Science (ISSS 2018) Wille,
    S. C., Barklage, B., Spiller, A., & von Meyer-Höfer, M. (2018). Challenging factors
    of farmer-to-consumer direct marketing. An empirical analysis of German livestock
    owners. World Bank. (2021). Agriculture, fishing, value added (% of GDP). World
    Bank Group Archives, Washington, D.C., United States. Retrieved August 17, 2021,
    from https://data.worldbank.org/indicator/NV.AGR.TOTL.ZS Xiong, H., Dalhaus, T.,
    Wang, P., & Huang, J. (2020). Blockchain technology for agriculture: applications
    and rationale. frontiers in Blockchain, 3, 7. Article   Google Scholar   Xu, J.,
    & Guo, J. (2017). The Current Situation of E-Commerce Development of Agricultural
    Products in Fujian and Its Countermeasures. 2017 International Conference on Education
    Science and Economic Management (ICESEM 2017) Xu, X., Pautasso, C., Zhu, L., Gramoli,
    V., Ponomarev, A., Tran, A. B., & Chen, S. (2016). The blockchain as a software
    connector. 2016 13th Working IEEE/IFIP Conference on Software Architecture (WICSA)
    Xu, X., Rahman, F., Shakya, B., Vassilev, A., Forte, D., & Tehranipoor, M. (2019).
    Electronics supply chain integrity enabled by blockchain. ACM Transactions on
    Design Automation of Electronic Systems (TODAES), 24(3), 1–25. Article   Google
    Scholar   Yanovich, Y., Shiyanov, I., Myaldzin, T., Prokhorov, I., Korepanova,
    D., & Vorobyov, S. (2018).Blockchain-based supply chain for postage stamps. In
    Informatics (Vol. 5, No. 4, pp. 42). MDPI. Yu, H., & Zhang, X. (2017). 21–24 July
    2017). Research on the Application of IoT in E-Commerce. 2017 IEEE International
    Conference on Computational Science and Engineering (CSE) and IEEE International
    Conference on Embedded and Ubiquitous Computing (EUC) Zeng, Y., Jia, F., Wan,
    L., & Guo, H. (2017). E-commerce in agri-food sector: a systematic literature
    review. International Food and Agribusiness Management Review, 20(1030-2017-2164),
    439–459. Article   Google Scholar   Zhang, C., & Rao, W. (2020). Impact of Cloud
    Computing on Agricultural Product E-commerce. IOP Conference Series: Materials
    Science and Engineering Zhang, J., Yu, Q., Zheng, F., Long, C., Lu, Z., & Duan,
    Z. (2016). Comparing keywords plus of WOS and author keywords: a case study of
    patient adherence research. Journal of the Association for Information Science
    and Technology, 67(4), 967–972. Article   Google Scholar   Zhang, Y., & Lu, Y.
    (2018). Research on the problems and strategies of rural E-commerce in the age
    of internet + agriculture. 2018 14th International Conference on Semantics, Knowledge
    and Grids (SKG) Zhang, Y. Y., Zheng, Q., & Wang, H. (2021). Challenges and Opportunities
    facing the Chinese Economy in the New Decade: Epidemics, Food, Labor, E-Commerce,
    and Trade (pp. 1–3). The Chinese Economy. Zhao, Z., & Tian, Y. (2014). Discussion
    about agricultural e-commerce situation and optimization. 2014 International Conference
    on Management Science & Engineering 21th Annual Conference Proceedings Zheng,
    Q., Zheng, M., & Dou, Y. (2020). Research on Mode and Risk Prevention of Agricultural
    Supply. Chain Finance Based on E-commerce. Zhong, X., & Ferrand, C. (2022). Construction
    of agricultural products of e-commerce ecological network system under the background
    of “Internet Plus”. Wireless Communications and Mobile Computing, Special Issue,
    2022. https://doi.org/10.1155/2022/8121193 Zhu, Q., Liu, B., Han, F., & Lee, M.
    (2020). The optimization effect of fuzzy factional-order ordinary differential
    equation in block chain financial cross-border E-commerce payment mode. Alexandria
    Engineering Journal, 59(4), 2839–2847. Article   Google Scholar   Zhu, Z., Bai,
    Y., Dai, W., Liu, D., & Hu, Y. (2021). Quality of e-commerce agricultural products
    and the safety of the ecological environment of the origin based on 5G internet
    of things technology (22 vol., p. 101462). Environmental Technology & Innovation.
    Download references Acknowledgements The work of the authors was supported by
    Impact-oriented Interdisciplinary Research Grant (IIRG) under grant IIRG001C-2020SAH.
    Author information Authors and Affiliations Department of Computer System and
    Technology, Faculty of Computer Science and Information Technology, University
    of Malaya, 50603, Kuala Lumpur, Malaysia Hamza H. M. Altarturi & Nor Badrul Anuar
    Institute for Advanced Studies, University of Malaya, 50603, Kuala Lumpur, Malaysia
    Adibi Rahiman Md Nor Department of Operation and Management Information System,
    Faculty of Business and Accountancy, University of Malaya, 50603, Kuala Lumpur,
    Malaysia Noor Ismawati Jaafar Corresponding author Correspondence to Nor Badrul
    Anuar. Ethics declarations Conflict of interest The authors of this study have
    no affiliations with or involvement in any organization or entity with any financial
    interest or non-financial interest in the subject matter or materials discussed
    in this manuscript. Additional information Publisher’s Note Springer Nature remains
    neutral with regard to jurisdictional claims in published maps and institutional
    affiliations. Rights and permissions Springer Nature or its licensor (e.g. a society
    or other partner) holds exclusive rights to this article under a publishing agreement
    with the author(s) or other rightsholder(s); author self-archiving of the accepted
    manuscript version of this article is solely governed by the terms of such publishing
    agreement and applicable law. Reprints and permissions About this article Cite
    this article Altarturi, H.H.M., Nor, A.R.M., Jaafar, N.I. et al. A bibliometric
    and content analysis of technological advancement applications in agricultural
    e-commerce. Electron Commer Res (2023). https://doi.org/10.1007/s10660-023-09670-z
    Download citation Accepted 02 January 2023 Published 24 January 2023 DOI https://doi.org/10.1007/s10660-023-09670-z
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Agriculture e-commerce Advanced technology Blockchain Internet
    of Things Bibliometric Use our pre-submission checklist Avoid common mistakes
    on your manuscript. Sections Figures References Abstract Introduction Methodology
    Findings Agricultural E-commerce Discussion Conclusion References Acknowledgements
    Author information Ethics declarations Additional information Rights and permissions
    About this article Advertisement Discover content Journals A-Z Books A-Z Publish
    with us Publish your research Open access publishing Products and services Our
    products Librarians Societies Partners and advertisers Our imprints Springer Nature
    Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage cookies Your
    US state privacy rights Accessibility statement Terms and conditions Privacy policy
    Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA) (3000133814)
    - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Electronic Commerce Research
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A bibliometric and content analysis of technological advancement applications
    in agricultural e-commerce
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zhu Y.
  - Wang M.
  - Yin X.
  - Zhang J.
  - Meijering E.
  - Hu J.
  citation_count: '8'
  description: Deep learning has become a predominant method for solving data analysis
    problems in virtually all fields of science and engineering. The increasing complexity
    and the large volume of data collected by diverse sensor systems have spurred
    the development of deep learning methods and have fundamentally transformed the
    way the data are acquired, processed, analyzed, and interpreted. With the rapid
    development of deep learning technology and its ever-increasing range of successful
    applications across diverse sensor systems, there is an urgent need to provide
    a comprehensive investigation of deep learning in this domain from a holistic
    view. This survey paper aims to contribute to this by systematically investigating
    deep learning models/methods and their applications across diverse sensor systems.
    It also provides a comprehensive summary of deep learning implementation tips
    and links to tutorials, open-source codes, and pretrained models, which can serve
    as an excellent self-contained reference for deep learning practitioners and those
    seeking to innovate deep learning in this space. In addition, this paper provides
    insights into research topics in diverse sensor systems where deep learning has
    not yet been well-developed, and highlights challenges and future opportunities.
    This survey serves as a catalyst to accelerate the application and transformation
    of deep learning in diverse sensor systems.
  doi: 10.3390/s23010062
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all     Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 1 10.3390/s23010062 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Yang Yue Subscribe
    SciFeed Recommended Articles Related Info Links More by Authors Links Article
    Views 7771 Citations 8 Table of Contents Abstract Introduction Deep Learning Basics
    Deep Learning Models and Methods Deep Learning in Diverse Intelligent Sensor Based
    Systems Deep Learning Challenges and Future Directions Conclusions Author Contributions
    Funding Institutional Review Board Statement Informed Consent Statement Data Availability
    Statement Conflicts of Interest References Altmetric share Share announcement
    Help format_quote Cite question_answer Discuss in SciProfiles thumb_up Endorse
    textsms Comment first_page settings Order Article Reprints Open AccessReview Deep
    Learning in Diverse Intelligent Sensor Based Systems by Yanming Zhu 1, Min Wang
    2, Xuefei Yin 2, Jue Zhang 2, Erik Meijering 1 and Jiankun Hu 2,* 1 School of
    Computer Science and Engineering, University of New South Wales, Sydney, NSW 2052,
    Australia 2 School of Engineering and Information Technology, University of New
    South Wales, Canberra, ACT 2612, Australia * Author to whom correspondence should
    be addressed. Sensors 2023, 23(1), 62; https://doi.org/10.3390/s23010062 Submission
    received: 2 November 2022 / Revised: 6 December 2022 / Accepted: 14 December 2022
    / Published: 21 December 2022 (This article belongs to the Special Issue Feature
    Papers in Communications Section 2022) Download keyboard_arrow_down     Browse
    Figures Versions Notes Abstract Deep learning has become a predominant method
    for solving data analysis problems in virtually all fields of science and engineering.
    The increasing complexity and the large volume of data collected by diverse sensor
    systems have spurred the development of deep learning methods and have fundamentally
    transformed the way the data are acquired, processed, analyzed, and interpreted.
    With the rapid development of deep learning technology and its ever-increasing
    range of successful applications across diverse sensor systems, there is an urgent
    need to provide a comprehensive investigation of deep learning in this domain
    from a holistic view. This survey paper aims to contribute to this by systematically
    investigating deep learning models/methods and their applications across diverse
    sensor systems. It also provides a comprehensive summary of deep learning implementation
    tips and links to tutorials, open-source codes, and pretrained models, which can
    serve as an excellent self-contained reference for deep learning practitioners
    and those seeking to innovate deep learning in this space. In addition, this paper
    provides insights into research topics in diverse sensor systems where deep learning
    has not yet been well-developed, and highlights challenges and future opportunities.
    This survey serves as a catalyst to accelerate the application and transformation
    of deep learning in diverse sensor systems. Keywords: deep learning; computer
    vision; biomedical imaging; biometrics; remote sensing; cybersecurity; Internet
    of Things; natural language processing; audio and speech processing; control system
    and robotics; information system; food; agriculture; chemistry 1. Introduction
    In recent years, driven by the rapid increase in available data and computational
    resources, deep learning has achieved extraordinary advances and almost become
    the de-facto standard approach in virtually all fields of science and engineering.
    Essentially, deep learning is a part of the field of machine learning, a subfield
    of artificial intelligence (AI) concerned with learning data representations using
    computational methods. In traditional machine learning algorithms, manually choosing
    features and a classifier is needed, while in a deep learning algorithm, the features
    are extracted automatically by the algorithm through learning from its own errors.
    It is this automatic feature extraction that distinguishes deep learning from
    the field of machine learning. Neural networks make up the backbone of deep learning
    algorithms. A neural network aims to learn nonlinear maps between inputs and outputs
    through its elementary computational cells (also called “neurons”). It is the
    number of layers (also called depth) of neural networks that distinguishes a shallow
    network from a Deep Neural Network (DNN). Typically, a network must have more
    than three layers to be considered a DNN. Deep networks learn representations
    of the data in a hierarchical manner to simulate the mechanism of the human brain
    in extracting information from given data. The increasing complexity and the large
    volume of data collected by diverse sensor systems have brought about significant
    developments in deep learning, which have fundamentally transformed the way the
    data are acquired, processed, analyzed, and interpreted. Therefore, in this paper,
    we provide a comprehensive investigation of deep learning in diverse intelligent
    sensor based systems, covering fundamentals of deep learning models and methods,
    deep learning techniques for fundamental tasks in individual sensor systems, insights
    of reformulation of these fundamental tasks for broader applications in diverse
    intelligent sensor based systems, and challenges of breaking through the bottleneck
    of current deep learning approaches in exploring the full potential of deep learning.
    We searched Google Scholar (GS) and Web of Science (WOS) with the keywords deep
    learning (DL) and sensor. This resulted in 16,100 articles from 2020. We further
    selected, based on the top journals and conferences, around 150 most relevant
    papers for careful inspection, and traced some further relevant references from
    there. From these, we observed that existing relevant surveys [1,2,3,4] have one
    or more of the following limitations: (1) touching only a small subset of topics
    in individual domains, (2) lacking an overview of common techniques/algorithms
    from different domains, and (3) lacking a holistic view based on the individual
    domains of diverse intelligent sensor based systems. This survey aims to be a
    catalyst for accelerating the application and transformation of deep learning
    across diverse intelligent sensor based systems. The contributions of this paper
    can be summarized as follows. This is the first paper to provide a comprehensive
    investigation of deep learning in diverse sensor systems from the perspective,
    in a holistic view, of different data modalities across different intelligent
    sensor based systems and application domains. This paper presents the fundamentals
    of deep learning and the most widely used deep learning models and methods in
    a concise and high-level way, which would be very useful for people to get a quick
    start in the field. This paper provides a comprehensive summary of deep learning
    implementation tips and links to tutorials, open-source codes, and pretrained
    models, which can serve as an excellent self-contained reference for deep learning
    practitioners and researchers. This is a unique feature that makes it distinguishable
    from existing literature survey papers. This paper identifies the fundamental
    tasks in individual intelligent sensor based systems and provides insights to
    reformulation of these task for broader applications for those seeking to innovate
    deep learning in diverse sensor systems. This paper provides insights into research
    topics where deep learning has not yet been well-developed, and highlights the
    challenges and future directions of deep learning in diverse intelligent sensor
    based systems. 2. Deep Learning Basics 2.1. History of Deep Neural Networks The
    origin of DNNs can be traced back to 1943, when McCulloch and Pitts proposed the
    first artificial neural network [5]. Since then, deep learning has grown gradually
    and achieved a few significant milestones in its development. One of them worth
    mentioning is Rosenblatt’s “perceptron” introduced in 1958. It demonstrated that
    a perceptron will converge when what they are trying to learn can be represented
    [6]. However, such a model has obvious limitations, and multilayer perceptrons
    are required by complex tasks, but at that time, it was not clear how to train
    these models. Subsequently, deep learning encountered its first winter. Until
    1985, Hinton et al. proposed the back-propagation algorithm, which has greatly
    stimulated the development of this field [7]. At almost the same period, the “neocogitron”
    which inspired the Convolutional Neural Networks (CNNs), the Recurrent Neural
    Networks (RNNs), and the DNNs were proposed [8,9,10]. However, due to the limitation
    of hardware, these models were hard to use for handling large data, and thus the
    development of deep learning was trapped again. By 2006, Hinton and others solved
    the training problem of DNNs by using a layer-wise pretraining framework, which
    greatly revitalized the field [11,12]. At the same time, algorithms for training
    deep AutoEncoders (AEs), and other deep architectures were proposed [13], which
    allowed deep learning to develop at an exponential rate. From then, a variety
    of deep learning methods increasingly emerged, including Deep Belief Networks
    (DBNs), Restricted Boltzmann Machines (RBMs), CNNs, Generative Adversarial Networks
    (GANs), Graph Neural Networks (GNNs), and so on. In recent years, two astounding
    deep learning applications made a global splash and shocked the world. One is
    AlphaGo, which defeated the world champion Go players using deep learning with
    the support of abundant hardware resources (https://www.deepmind.com/research/highlighted-research/alphago
    accessed on 2 November 2022). Another is AlphaFold, which solved the 50-year-old
    challenging protein folding problem. These further stimulated the rapid development
    of deep learning in various domains. Nowadays, with the advancements in Graphics
    Processing Units (GPUs) and High-Performance Computing (HPC), deep learning has
    become one of the most efficient tools with outstanding performance in almost
    every domain. 2.2. Fundamentals of Deep Neural Networks DNNs try to mimic the
    way biological neurons send signals to each other through numerous neurons (also
    called nodes). Generally, the architecture of a DNN consists of multiple neuron
    layers including an input layer, an output layer, and one or many hidden layers
    [14] (Figure 1). Each neuron is connected to another neuron to pass information.
    The input to a DNN can be numbers, characters, audios, images, etc., which are
    broken down into bits of binary data that a computer can process. The output can
    be continuous values, binary values, or categorical values, depending on the tasks.
    A DNN relies on training data to learn and improve its accuracy over time. During
    the learning, if it cannot accurately recognize a particular pattern for a given
    task, an algorithm would adjust its weights until it determines the correct mathematical
    manipulation to fully process the data [13]. Figure 1. Diagram of a DNN. 2.2.1.
    Neuron Perception A neuron multiplies each of its inputs by an associated weight
    and then sums these weighted inputs and adds a predetermined number called the
    bias (Figure 2). The neuron is activated if its output is above a specified threshold
    and will pass its output to the next layer of the DNN. That is, in a DNN, neurons
    in each layer get inputs from the previous layer, learn representations, and then
    pass the information to the next layer. Each successive layer of a DNN uses the
    output of the previous layer for its input. This way, a DNN produces an output
    at the end. Figure 2. Diagram of the perception of a neuron. 2.2.2. Activation
    Functions The activation function is an important aspect of a DNN. It defines
    the output of a node given inputs and is mainly used to generate a nonlinear relationships
    between the input and the output. Currently, there are 10 types of nonlinear activation
    functions (Table 1). Here, we elaborate on four most popular activation functions,
    namely sigmoid, tanh, ReLU, and leaky ReLu, describe their application scenarios,
    and analyze their pros and cons. Table 1. Ten types of nonlinear activation functions.
    The sigmoid activation function is one of the most widely used activation functions.
    It takes an arbitrary value as input and outputs a value between 0 and 1. The
    larger the input, the closer the output value is to 1. This function is differentiable
    and provides a smooth gradient, and is suitable for tasks that require predicting
    probabilities as outputs. Its limitation is that it stops the DNN from learning
    and makes the DNN suffer from the vanishing gradient problem as the gradient value
    approaches zero. The tanh activation function also has an S-shape like the sigmoid
    function, but with the difference in output range of −1 to 1. That is, with tanh,
    the larger the input, the closer the output value is to 1. This function is widely
    used for hidden layers of a DNN, because it can help to center the data and make
    the learning for the next layer easier. However, it also faces the same problem
    of vanishing gradients as the sigmoid function. However, in practice, the tanh
    activation function is more preferred than sigmoid due to its zero-centered nature.
    The ReLU activation function, which stands for Rectified Linear Unit, is another
    most important and popular activation function. Its main feature is that it does
    not activate all the nodes at the same time, and only the nodes with an output
    larger than 0 will be activated. Therefore, this function is computationally efficient,
    compared to the sigmoid and tanh activation functions. In addition, it facilitates
    the convergence of gradient descent towards the global minimum of the loss function.
    Its limitation is that it may cause possible dead nodes due to the negative side
    of the curve making the gradient value zero. Therefore, the leaky ReLU activation
    function, which is an improvement of ReLU, has been proposed to solve the dying
    ReLU problem. It has a small positive slope for the negative side, which enables
    back-propagation for negative inputs. This way, the gradient of the negative side
    of the curve will be a nonzero value, and the problem of dead nodes is solved.
    The limitation of this activation function is that it makes the learning of the
    DNN time-consuming. 2.2.3. Stochastic Gradient Descent (SGD) The SGD is an efficient
    approach for fitting linear classifiers or regressors under convex loss functions,
    especially in high-dimensional optimization. Therefore, it has been widely and
    successfully used as an important optimization method for training a DNN [7,14,15,16].
    It has the advantages of high efficiency and ease of implementation, but also
    the disadvantages of requiring some hyperparameters such as the regularization
    parameter and the number of iterations, and being sensitive to feature scaling.
    2.2.4. Back-Propagation (BP) The BP, which is short for “backward propagation
    of errors”, is the most prominent algorithm to train a DNN. Strictly, it refers
    only to the algorithm for computing the gradient, not how to use the gradient.
    However, loosely and generally, it refers to using the mean squared error and
    the SGD to fine-tune the weights of a DNN. Specifically, it calculates the gradient
    of a loss function with respect to all the weights in the DNN by the chain rule,
    and employs the SGD to decide how to use the gradient to properly tune the weights.
    A DNN’s weights are iteratively tuned until the desired output is achieved. 2.3.
    Learning Scenarios of Deep Learning 2.3.1. Supervised Learning Supervised learning
    is a learning paradigm that uses a set of labeled examples as training data and
    makes predictions for all unseen points [17]. Supervised algorithms are expected
    to learn the mapping between pairs of inputs and output values, also called annotations
    or labels. This scenario includes two types of problem: classification and regression.
    2.3.2. Semi-Supervised Learning Semi-Supervised learning (SSL) aims to learn predictive
    models that make use of both labeled and unlabeled data. SSL provides a feasible
    solution in the setting where unlabeled data are easily accessible, but labels
    are difficult to obtain [18]. By exploring the pattern in additional unlabeled
    data, SSL methods can improve the learning performance. Deep SSL has dominated
    this research area in recent years [19,20,21]. 2.3.3. Unsupervised Learning In
    contrast to supervised learning, unsupervised learning constructs models where
    only unlabeled data are available [22]. The key of unsupervised methods is to
    discover hidden patterns and discriminative feature representations without human
    intervention. Clustering and dimensionality reduction are examples of unsupervised
    learning problems. 2.3.4. Reinforcement Learning Different from supervised learning,
    reinforcement learning refers to the learning scenario where the learner receives
    rewards after a course of actions by interacting with the environment, and then
    determines the optimal actions by maximizing the rewards to achieve the goal [17].
    With different states of the environment, the problem can be divided into two
    settings: The planning problem and learning problem. 2.4. Training Strategy and
    Performance 2.4.1. Learning Rate Learning rate is one of the most important hyperparameters
    when configuring a neural network. It controls how much a model is changed based
    on the estimated error each time the model weights are updated [23]. Choosing
    an appropriate learning rate is very challenging, because a very small value may
    cause the training process to be too long and get stuck, while a very large value
    may result in learning a suboptimal set of weights or with an unstable training
    process. A typical solution to choose the appropriate learning rate is to reduce
    the learning rate during training. Currently, there are three kinds of popular
    ways to achieve this: constant, factored, and exponential decay. 2.4.2. Weight
    Decay Weight decay is a regularization technique applied to the weights of a neural
    network for shrinking the weights during back-propagation. It works by adding
    a penalty term, which is usually the L2 norm of the weights, to the loss function.
    It can help to prevent overfitting and avoid exploding gradient. 2.4.3. Dropout
    Dropout is widely used to prevent overfitting by randomly dropping out neural
    units in a neural network. It is a strong regularization to prevent complex co-adaptations
    on training data [24]. More technically, at each training stage, individual nodes
    are either dropped out of the network with probability 1−𝑝 or kept with probability
    p, leading to a reduced network. Dropout forces a neural network to learn more
    robust features and roughly doubles the number of iterations required to converge,
    but the training time for each epoch is less. 2.4.4. Early Stopping Early stopping
    is a training strategy used to reduce overfitting without compromising on model
    accuracy. The underlying idea behind early stopping is to stop training before
    a model starts to overfit. There are mainly three strategies for early stopping:
    training models on a preset number of epochs, stop when the loss function update
    becomes very small, and observing the changes of training and validation errors
    with the number of epochs. 2.4.5. Batch Normalization Batch normalization is a
    technique to standardize the inputs to a neural network for stabilizing the learning
    process and reducing the number of training epochs required to train deep networks
    [25]. With batch normalization, a network can use higher learning rates, achieve
    better results, and the training can be faster. It also makes activation functions
    viable by regulating the inputs to them, and adds noise which reduces overfitting
    with a regularization effect. 2.4.6. Data Augmentation Data augmentation refers
    to a set of techniques to artificially increase the amount of training data by
    generating new data from existing data. It is a low-cost and effective method
    to improve the performance and accuracy of deep learning models in data-constrained
    environments. For visual data, alterations such as cropping, rotating, scaling,
    flipping, contrast changing, adding noise are effective and popular data augmentation
    methods. For other kinds of data, data augmentation is not as popular as for visual
    data, due to the complexity of the data. Some advanced models such as GANs are
    popular for data augmentation [26,27,28]. 2.5. Deep Learning Platforms and Resources
    2.5.1. Deep Learning Platforms The two currently most renowned end-to-end open
    source platforms for deep learning are TensorFlow [29] and PyTorch [30]. They
    provide comprehensive and flexible ecosystems of tools, libraries, and community
    resources that let engineers and researchers easily build and deploy deep learning
    powered applications. TensorFlow (https://www.tensorflow.org/ accessed on 2 November
    2022) is developed by researchers and engineers at Google and was released in
    2015. It is a symbolic math library and is best suited for data flow programming
    across a wide variety of tasks. It provides multiple abstraction levels for building
    and training a DNN. In addition, it has adopted Keras (https://keras.io/ accessed
    on 2 November 2022), which is a functional API that extends TensorFlow and allows
    users to easily code some high-level functional sections. It provides system-specific
    functionality such as pipelining, estimators, and eager execution, and supports
    various topologies with different combinations of inputs, output, and layers.
    PyTorch (https://pytorch.org/ accessed on 2 November 2022) is based on Torch and
    is relatively new compared to TensorFlow. It is developed by researchers at Facebook
    and was released in 2017. It is well known for its simplicity, ease of use, flexibility,
    efficient memory usage, and dynamic computational graphs. Due to its computation
    power and native programming feeling, PyTorch is emerging as a winner. Furthermore,
    it has a large community of developers and researchers who have built rich and
    powerful tools and libraries to extend PyTorch. Some popular libraries include
    GPyTorch, BoTorch, and Allen NLP. Other frameworks include Caffe [31], Torch [32],
    DL4j (https://deeplearning4j.konduit.ai/ accessed on 2 November 2022, Neon (https://github.com/NervanaSystems/neon
    accessed on 2 November 2022, Theano [33], MXNet [34], and CNTK [35]. The choice
    of which platform is superior has always been controversial, but PyTorch and TensorFlow
    are undoubtedly the two most popular deep learning frameworks today. 2.5.2. Codes
    and Pretrained Models While TensorFlow and PyTorch have provided official tutorials
    on how to use them, topic-specific tutorials for different levels are beneficial
    and complementary. There are many reputable courses online, for example, Practical
    Deep Learning for Coders (https://course.fast.ai/ accessed on 2 November 2022),
    which provides practical programming skills and an easy-to-use code library for
    most important deep learning techniques. Furthermore, it is free and without ads,
    and is designed for learners with various background levels. More useful courses
    can be found at the collection of AI Curriculum from top universities (https://github.com/Machine-Learning-Tokyo/AI_Curriculum
    accessed on 2 November 2022). A comprehensive collection of deep learning books,
    videos, lectures, workshops, datasets, tools, etc., is available on GitHub (https://github.com/ChristosChristofidis/awesome-deep-learning
    accessed on 2 November 2022). Open source code can greatly help to learn deep
    learning and improve the efficiency of the learning. The distinguished Papers
    With Code website https://paperswithcode.com/ (accessed on 2 November 2022) collects
    new research papers and their corresponding open source codes, as well as the
    latest trending directions and state-of-the-art results across many standard benchmarks.
    As we will describe in later sections, utilizing pretrained models is an important
    technique in transfer leaning and can greatly improve the efficiency of deep leaning.
    A collection of pretrained models is available for both TensorFlow (https://github.com/tensorflow/models
    accessed on 2 November 2022) and Pytorch (https://pytorch.org/vision/stable/models.html
    accessed on 2 November 2022). The AI community Hugging Face (https://huggingface.co/accessed
    on 2 November 2022) also provides a huge collection of pretrained models as well
    as the codes to train these models. The website Model Zoo (https://modelzoo.co/
    accessed on 2 November 2022) is also a great place to discover pretrained models
    and open source deep learning codes. 2.5.3. Computing Resources Training deep
    learning models requires relatively high computing resources. Therefore, open
    source web-based development environments that run entirely in the cloud are very
    helpful for average researchers. The two currently popular web applications for
    interactive computing are Jupyter Notebook (https://jupyter.org/ accessed on 2
    November 2022) and Colab (https://colab.research.google.com/ accessed on 2 November
    2022). They are very similar, and both require zero configuration, provide access
    to GPUs free of charge, and support most popular machine learning libraries. They
    are easy to use and to create documents that contain live code, equations, visualizations,
    and text. Furthermore, their flexible interfaces allow users easily to configure,
    arrange, and share workflows for team work. Tracking and visualizing metrics such
    as loss and accuracy during the model training is a vital process of training
    a DNN. A predominant toolkit for this purpose is Tensorboard (https://www.tensorflow.org/tensorboard
    accessed on 2 November 2022), which works for both TensorFlow and Pytorch. In
    addition to the above functions, it can visualize model graphs, views histograms
    of weights, biases, or other tensors as they change over time, project embeddings
    to a lower dimensional space, display images, text, and audio, and so on. 3. Deep
    Learning Models and Methods 3.1. Convolutional Neural Network (CNN) 3.1.1. Introduction
    of CNN The design of convolutional networks was inspired by biological processes
    where the pattern of connections between neurons resembles the organization of
    the human visual cortex: individual cortical neurons respond only to stimuli in
    the receptive fields, which partially overlap to cover the entire field of view
    [36]. A typical CNN consists of several convolutional layers and pooling layers
    followed by fully connected layers at the end (Figure 3). The input of a CNN is
    a tensor arranged in four dimensions ( 𝑁×ℎ×𝑤×𝑐 ), where N denotes the number of
    inputs, h and w are the height and width of the input, and c the depth or number
    of channels of the input ( 𝑐=3 for an RGB image). The convolutional layer convolves
    the input with k kernels/filters of size ( 𝑘 ℎ × 𝑘 𝑤 × 𝑘 𝑐 ), where 𝑘 ℎ <ℎ , 𝑘
    𝑤 <𝑤 , and 𝑘 𝑐 ≤𝑐 , and generates and passes k feature maps to the following layer.
    These kernels share the same parameters and form the base of local connections.
    The convolution operation performs a dot product (usually the Frobenius inner
    product) of the kernel with a small region of the layer’s input matrix each time,
    then an activation function (usually the ReLU function) is applied. As the kernel
    slides along the input matrix, a feature map is generated. The pooling layers
    reduce the dimension of the feature maps by subsampling, thus decreasing the number
    of parameters for training. The pooling operation usually takes the maximum (max
    pooling) or average value (average pooling) of the local cluster of neurons (local
    pooling) or all neurons (global pooling) in the feature map. The last few layers
    of a CNN are fully connected layers, as in a multilayer perception that connect
    every neuron in one layer to every neuron in the following layer. Through these
    layers, the CNN extracts high-level representations from the input data, and its
    final layer outputs the probabilities that the instance belongs to each class.
    Figure 3. A typical CNN architecture. CNNs improve the fully connected networks
    in three major aspects: (1) local connections, (2) weight sharing, and (3) subsampling.
    These mechanisms significantly reduce the number of parameters, speed up convergence,
    and make CNN an outstanding algorithm in the field of deep learning. CNNs are
    particularly popular in computer vision applications since they fully exploit
    the two-dimensional structure of the input image data [37]. Since its first introduction,
    the CNN design has received widespread attention from researchers, and various
    variant models and improvements have been proposed. Next, we introduce several
    representative CNN models and their main contributions. Table 2 summarizes these
    models and following works. Table 2. Summary of popular CNN architectures. 3.1.2.
    AlexNet AlexNet [37] consists of eight layers: five convolutional layers, some
    of which followed by max-pooling layers, concatenated with three fully connected
    layers. It uses the ReLU activation function, which shows improved training performance
    over tanh and sigmoid which are prone to the vanishing gradient problem [53] (e.g.,
    the derivative of sigmoid becomes very small in the saturating region, and therefore,
    the updates to the weights almost vanish). A dropout layer is used after every
    fully connected layer, reducing overfitting. AlexNet was one of the first deep
    neural networks to push ImageNet classification accuracy up by a significant amount
    (a top five accuracy of 80.2%) in comparison to traditional methods. The depth
    of the model was essential for its high performance, and while computationally
    expensive, training was made feasible by the utilization of GPUs. 3.1.3. VGG VGG
    [39] improves over AlexNet by replacing large size kernels (11 and 5 in the first
    and second convolutional layer, respectively) with multiple 3×3 kernels one after
    another. The idea behind this is that with a given receptive field, stacking multiple
    kernels of smaller size is better than using one kernel of larger size. This is
    because multiple nonlinear layers increase the depth of the network, which enables
    it to learn more complex features at a lower cost. In addition, the 3×3 kernels
    help retain finer representations of the input. In VGG-D, blocks with the same
    kernel size are applied multiple times to extract more complex and representative
    features. This concept of blocks or modules became a common theme in the networks
    after VGG. It achieved top five accuracy of 91.2% on ImageNet. 3.1.4. GoogLeNet
    (Inception) GoogLeNet [38] introduces the inception module to form a sparse architecture
    rather than the previous dense connection architecture to reduce the computation
    requirement of training deep networks such as VGG. It builds on the idea that
    most of the activations in a deep network are either unnecessary or redundant
    because of correlations between them. Therefore, the most efficient architecture
    of a deep network will have a sparse connection between the activations, rather
    than a dense connection architecture. Thus, the inception module (Figure 4) approximates
    a sparse CNN with a normal dense construction. Since only a few neurons are effective,
    the width and number of the convolutional filters of a particular kernel size
    is kept small. Convolutions of different sizes are used to capture features at
    varied scales ( 5×5 , 3×3 , 1×1 ). A bottleneck layer ( 1×1 convolutions) is introduced
    for massive reduction of the computational cost. All these changes allow the network
    to have a large width and depth. GoogLeNet is built on top of the inception blocks
    and it replaces the fully-connected layers at the end with a simple global average
    pooling which averages out the channel values across the 2D feature map. This
    drastically reduces the total number of parameters. It achieves 93.3% top five
    accuracy on ImageNet and is much faster to train than VGG. Figure 4. The inception
    module in GoogLeNet. 3.1.5. ResNet ResNet [41] was proposed to solve the vanishing
    gradient problem [54] and degradation problem. The vanishing gradient prevents
    the update of the weights and hinders convergence from the beginning due to the
    increased depth. The degradation problem refers to the phenomenon that as the
    network depth increases, accuracy gets saturated and then degrades rapidly (this
    is not caused by overfitting but adding more layers leads to higher training error)
    [41]. Degradation of training accuracy indicates that not all systems are similarly
    easy to optimize. Hence, the residual learning framework is designed to recast
    the original mapping ℋ(𝑥) into a residual mapping which is easier to optimize
    than the original mapping. The residual module (Figure 5) creates a shortcut connection
    between the input and output to the module, implying an identity mapping, thus
    allowing the stacked nonlinear layers to fit a residual mapping 𝒢(𝑥):=ℋ(𝑥)−𝑥 .
    With these shortcuts, the residual module helps to build deeper neural networks
    as large as a network depth of 152. In addition, ResNet adopts a global average
    pooling followed by the classification layer as in GoogLeNet. It achieves better
    accuracy (95.51% top five accuracy with ResNet-152) than VGGNet and GoogLeNet
    while being computationally more efficient than VGGNet. Figure 5. Illustration
    of a residual learning module. 3.1.6. DenseNet DenseNet [42] is one of the new
    discoveries in neural networks for visual object recognition. DenseNet is quite
    similar to ResNet but with some fundamental differences: ResNet uses an additive
    method to merge the previous layer (identity) with the future layer, whereas DenseNet
    concatenates the output of the previous layer with the future layer. For ResNet,
    the identity shortcut that stabilizes training also limits its representation
    capacity, while DenseNet has a higher capacity with multilayer feature concatenation.
    In DenseNet, each layer obtains additional inputs from all preceding layers and
    passes on its own feature maps to all subsequent layers (Figure 6). With concatenation,
    each layer is receiving collective knowledge from all preceding layers. However,
    the dense concatenation requires higher GPU memory and more training time. Figure
    6. DenseNet block vs. ResNet block. 3.1.7. UNet UNet [43] is an architecture originally
    developed for biomedical image segmentation and is now one of the most popular
    approaches in semantic segmentation tasks. UNet is a U-shaped encoder-decoder
    network architecture consisting of four encoder blocks and four decoder blocks
    that are connected via a bridge (Figure 7). The encoder network (contracting path)
    acts as the feature extractor and learns an abstract representation of the input
    image through a sequence of the encoder blocks. It halves the spatial dimensions
    and doubles the number of filters at each encoder block. The decoder network takes
    the abstract representation and generates a semantic segmentation mask. It doubles
    the spatial dimensions and half the number of feature channels. Figure 7. UNet
    architecture. 3.1.8. Mask R-CNN Mask Region-based CNN (mask R-CNN) [47] is the
    state-of-the-art in terms of image segmentation. It detects objects in an image
    and generates a high-quality segmentation mask for each instance. Mask R-CNN can
    deal with two types of image segmentation: semantic segmentation separates the
    subjects of the image from the background without differentiating object instances;
    and instance segmentation accentuates the subjects by detecting all objects in
    the image while segmenting each instance. The R-CNN is a type of model that utilizes
    bounding boxes across the object regions and then evaluates CNNs independently
    on all the Regions of Interest (RoI) to classify multiple image regions into the
    proposed classes. An improved version of R-CNN is Fast R-CNN [55] which extracts
    features using RoI Pooling from each candidate box and performs classification
    and bounding-box regression. Faster R-CNN [44] was then designed to add the attention
    mechanism with a region proposal network to the Fast R-CNN architecture. Mask
    R-CNN is an extension of Faster R-CNN by adding a branch for predicting an object
    mask in parallel with the existing branch for bounding box recognition (Figure
    8). It outputs a class label, a bounding-box offset, and the object mask, where
    the mask output requires the extraction of a fine spatial layout of an object.
    The key element of Mask R-CNN is the pixel-to-pixel alignment, which is the main
    missing piece of Fast/Faster R-CNN. Mask R-CNN is simple to implement and train
    given the Faster R-CNN framework, which facilitates a wide range of flexible architecture
    designs. Additionally, the mask branch only adds a small computational overhead,
    enabling a fast system and rapid experimentation. Figure 8. Mask R-CNN model.
    3.1.9. YOLO YOLO [46] is a popular model for real-time object detection, which
    concerns what and where objects are inside a given image. The algorithm applies
    a single neural network to the full image, and then divides the image into regions
    and predicts bounding boxes and probabilities for each region. These bounding
    boxes are weighted by the predicted probabilities. YOLO is popular because it
    achieves high accuracy while also being able to run in real-time. The algorithm
    ‘only looks once’ at the image in the sense that it requires only one forward
    propagation pass through the neural network to make predictions. After non-max
    suppression (which makes sure the object detection algorithm only detects each
    object once), it then outputs recognized objects together with the bounding boxes.
    With YOLO, a single CNN simultaneously predicts multiple bounding boxes and class
    probabilities for those boxes. It trains on full images and directly optimizes
    detection performance. 3.2. Recurrent Neural Network (RNN) 3.2.1. Introduction
    of RNN The RNN is a type of artificial neural network that is especially suitable
    for processing sequential information such as natural languages or time series
    data such as videos [56,57]. Applications of RNNs include handwriting recognition
    [58], speech recognition [59], gesture recognition [60], image captioning [61],
    natural language processing [62] and understanding [63], sound event prediction
    [64], tracking and monitoring [65,66,67,68,69], etc. Unlike traditional neural
    networks, the RNN can exploit sequential information by means of a connection
    that acts as feedback to prior layers (Figure 9). The most distinguished characteristic
    of an RNN is that it has memory, taking information from prior inputs to influence
    the current input and output. Because of this unique characteristic, an RNN can
    remember important information of the input, which allows it to predict with great
    precision what will happen next. That is why the RNN is the method of choice for
    processing sequential data. Another salient characteristic of the RNN is that
    it shares the same weight parameters within each layer of the network, whereas
    a normal feed-forward network has different weights on each node. Figure 9. Diagram
    of an RNN. 𝑥,𝑦 represent the input and output, respectively, t is the time, h
    is the memory unit of the network, and 𝑈,𝑉,and 𝑊 are weight matrices. The RNN
    employs the back-propagation through time (BPTT) algorithm to adjust and fit the
    parameters of the model [70,71,72]. BPTT is almost the same as the standard BP,
    except that it sums errors at each time step, while BP does not need to sum errors
    because it does not share parameters between each layer. This also makes the RNN
    have two main issues of vanishing gradients and exploding gradients [73]. In other
    words, gradients may decay or explode exponentially due to the multiplications
    of a large number of small or large gradients during training over time. Therefore,
    the RNN tends to forget the previous inputs as the new inputs come in. One solution
    to these issues is to clip the gradient and scale the gradient. Long Short-Term
    Memory (LSTM) [63] (see below) is proposed to handle this issue by providing memory
    blocks in its recurrent connections. 3.2.2. Bidirectional Recurrent Neural Network
    (BRNN) The BRNN was firstly invented in 1997 by Schuster and Paliwal for increasing
    the amount of input information available to the network [74]. It is a variant
    architecture of the RNN. While the classical RNN can learn only from previous
    layers to predict the current state, the BRNN learns from future data to improve
    its accuracy. This is achieved by a structure of connecting two hidden layers
    of opposite direction to the same output (Figure 10). BRNNs are especially beneficial
    in cases where the context of the input is required. For example, in handwriting
    recognition, performance can be improved by knowing the letters before and after
    the current letter [75]. The BRNN is more common in supervised learning rather
    than semi-supervised or unsupervised learning because it is difficult to compute
    a reliable probabilistic model. Figure 10. Diagram of a BRNN. 𝑥,𝑦 represent the
    input and output, respectively, ℎ, ℎ ′ represent the two bidirectional memory
    units, and t is the time. Solid arrows represent data forward propagation, and
    dashed arrows represent data back propagation. The training of a BRNN is similar
    to the BPTT algorithm. However, since there are forward and backward passes, simultaneously
    updating the weights for the two processes leads to erroneous results. Therefore,
    to update forward and backward passes separately, the forward and backward states
    are firstly processed in the forward pass, and then the output values are passed.
    Subsequently, the reverse takes place for the backward pass; that is, the output
    values are processed first, and then the forward and backward states are processed.
    Finally, the weights are updated after the completion of both forward and backward
    passes. 3.2.3. Long Short-Term Memory (LSTM) The LSTM was proposed by Hochreiter
    and Schmidhuber, and has been widely used for many applications [76]. It is an
    improved version of RNN, with the memory blocks (also called cells) able to let
    new information in, forget information, and give information enough importance
    to affect the output. It uses a mechanism of ‘gates’ for controlling its memory
    process (Figure 11). There are three gates: input gate, output gate, and forget
    gate. The input gate is responsible for accepting new information and information
    from the previous hidden state. The forget gate is responsible for deciding the
    storage or removal of information based on the learned weights. The output gate
    is responsible for determining the value of the next hidden state. This gate mechanism
    regulates the flow of information in the RNN and resolves the short-term memory
    issue, thus enabling an RNN to hold its value for a sufficient amount of time.
    Figure 11. Diagram of a LSTM memory cell. 𝑐,ℎ are the cell state and hidden state,
    respectively, t is the time, and 𝐹 𝑡 , 𝐼 𝑡 , 𝑂 𝑡 are the forget gate, input gate,
    and output gate, respectively. The gates in the LSTM are modeled in the form of
    sigmoid function. To decide which information can pass through and what information
    can be discarded, the short-term memory and input pass through the sigmoid function,
    which transforms the values to be between 0 and 1, where 0 indicates the information
    is unimportant and 1 indicates the information is valuable. The use of the sigmoid
    function also guarantees that the gates can be back-propagated. The LSTM keeps
    the gradients steep enough and thus solves the issue of vanishing gradients in
    RNNs. This also makes its training comparatively short and its accuracy comparatively
    high. 3.2.4. Gated Recurrent Unit (GRU) The GRU, proposed by Cho et al. in 2014
    [56], is also a variant of RNN and is very similar to the LSTM and, in some cases,
    produces equally good results [77]. It has two gates, an update gate and a reset
    gate (Figure 12), rather than three gates as in LSTM. The reset gate is responsible
    for the short-term memory and controls what information goes out or is discarded.
    The update gate is responsible for long-term memory and regulates information
    to be retained from previous memory as well as the new memory to be added. In
    addition, the GRU uses hidden states rather than separate cell states in LSTM
    to regulate the flow of information. Therefore, due to the reduced number of parameters
    and its simpler architecture, GRU is faster to train with high effectiveness and
    accuracy. The GRU is also able to address the short-term memory problem of RNN
    and to effectively hold long-term dependencies in sequential data. Figure 12.
    Diagram of a GRU memory cell. 𝑥 and 𝑦 are the input and output, respectively,
    h is the hidden state, t is the time, and 𝑅 𝑡  and  𝑈 𝑡 are the reset gate and
    update gate. 3.2.5. RNN with Attention Introducing attention to RNNs is probably
    the most significant innovation in sequential models in recent times. Attention
    refers to the ability of a model to focus on specific elements in the data. As
    mentioned, RNNs try to remember the entire input sequence through a hidden unit
    before predicting the output. However, compressing all information into one hidden
    unit may lead to information loss, especially for long sequences. To help the
    RNN focus on the most important elements of the input sequence, the attention
    mechanism assigns different attention weights to each input element. These attention
    weights designate how important or relevant a given input sequence element is
    at a given time step. The first attention mechanism developed for RNNs was proposed
    by Bahdanau et al. [78] in 2014, who used it for language translation. Later,
    several RNN variants with attention mechanism were proposed. Examples include
    the dual state attention based RNN for time series prediction [79], the attention
    based GRU for visual question answering [80], and the outstanding attention-LSTM
    for Google’s neural machine translation system [81]. The success of attention-LSTM
    has inspired more research of neural networks based on attention mechanism, and
    with more and more powerful computing resources becoming available, state-of-the-art
    models now typically use a memory-hungry architectural style called transformers
    (Section 3.7). 3.3. AutoEncoder (AE) 3.3.1. Introduction of AE The AE is a type
    of artificial neural network that can learn data representation in an unsupervised
    manner [13]. It is a specific type of feed-forward neural network where the input
    is the same as the output. Its aim is to learn a low-dimensional representation
    (also called latent-space representation or encoding) of high-dimensional data
    by training the network to capture the most important elements of the inputs,
    usually for dimensionality reduction. By using it as an encoding and decoding
    technique, and combing it with other DNNs such as CNN and RNN, the AE concept
    has been extensively applied for data (images, audio, etc.) denoising [82,83],
    information retrieval [84,85], image inpainting and enhancement [86,87], and anomaly
    detection [88,89]. A classical AE consists of three components named encoder,
    code, and decoder (Figure 13). The encoder maps the input data to the feature
    space and produces the code, while the decoder then reconstructs the data by mapping
    this code back to the data space. The encoder is essentially a fully-connected
    neural network (though other types of networks such as CNNs can also be used),
    and the decoder has a similar mirror network structure as the encoder. The code
    is a compressed representation of the input and is important to prevent the AE
    from memorizing the input and overfitting on the data. Figure 13. Diagram of an
    AE. Since the goal of an AE is to get an output identical to the input, it can
    be trained by minimizing a reconstruction loss formulated as: 𝐿 𝐴 (𝑥, 𝑥 ̂  )=||𝑥−
    𝑥 ̂  || 2 , (1) where x is the input and 𝑥 ̂  is the corresponding reconstruction
    by the AE. It is trained the same way as a DNN via BP, and also has the vanishing
    gradient problem because gradients may become too small as they go back through
    many layers of the AE. 3.3.2. Sparse AE (SAE) The SAE is a regularized AE proposed
    by Ranzato et al. [90] to learn sparse representations. It is used to learn latent
    representations instead of redundant information of the input data, and has been
    shown to improve performance on classification tasks. A SAE selectively activates
    regions of the network, depending on the input data. As a result, it is restrained
    to memorize the input data but can effectively extract features from the data.
    More specifically, a SAE adds a nonlinear sparsity between its encoder and decoder
    to force the code vector into a quasi-binary sparse code. There are two ways to
    impose this sparsity regularization, and both are adding a constraint term to
    the loss function. By adding an L1 regularization as the constraint term, the
    loss function is formulated as: 𝐿 𝑆 (𝑥, 𝑥 ̂  )=𝐿(𝑥, 𝑥 ̂  )+𝛼∑| 𝑎 ℎ |, (2) where
    𝐿(𝑥, 𝑥 ̂  ) is computed using Equation (1), 𝛼 is the parameter to control the
    regularization strength, and a is the activation of the hidden layer h. By adding
    a KL-divergence as the constraint term, the loss function is formulated as: 𝐿
    𝑆 (𝑥, 𝑥 ̂  )=𝐿(𝑥, 𝑥 ̂  )+𝛽KL(𝜌|| 𝜌 ̂  ), (3) where 𝐿(𝑥, 𝑥 ̂  ) is computed using
    Equation (1), 𝛽 is the parameter to control the regularization strength, 𝜌 ̂  is
    the average activation of the code over the input data, 𝜌 is a sparsity hyperparameter,
    and KL(𝜌|| 𝜌 ̂  ) is the KL divergence of (𝜌|| 𝜌 ̂  ) , with minimum at 𝜌 ̂  =𝜌
    . 3.3.3. Contractive AE (CAE) The CAE is another variant of the classical AE,
    which adds a contractive regularization to the code to improve its feature representation
    capability [91]. Its basic principle is that similar inputs should have similar
    encodings and similar latent space representations. To this end, CAE requires
    the derivative of the hidden layer activations to be small with respect to the
    input. Thus, the mapping from the input to the representation will converge with
    higher probability. The loss function of the CAE is defined as: 𝐿 𝐶 (𝑥, 𝑥 ̂  )=𝐿(𝑥,
    𝑥 ̂  )+𝛾||𝐽(𝑥) || 2 𝐹 , (4) where 𝐿(𝑥, 𝑥 ̂  ) is computed using Equation (1),
    𝛾 is the parameter to control the regularization strength, 𝐽(𝑥) represents the
    Jacobian matrix of the encoder, and ||𝐽(𝑥)|| 2 𝐹 is the square of the Frobenius
    norm of the Jacobian matrix. It is worth mentioning that these two terms in the
    CAE loss function contradict each other. While the reconstruction loss 𝐿(𝑥, 𝑥
    ̂  ) aims to distinguish the difference between two inputs and observe changes
    in the data, the regularization ||𝐽(𝑥)|| 2 𝐹 aims to allow the model to ignore
    changes in the input data. However, a loss function with these two terms enables
    the hidden layers of the CAE to capture only the most essential information. 3.3.4.
    Denoising AE (DAE) The DAE was originally proposed by Vincent et al. [92,93] based
    on the AE for removing noise of the input. Now, it has become an important and
    essential tool for feature extraction and selection. Different from the above
    types of AEs, the DAE does not have the input image as its ground truth. Its basic
    idea is to slightly corrupt the input data but still use the uncorrupted data
    as target output. This way, it can force the DAE to recover a noise-free version
    of the input data. Furthermore, a DAE model cannot simply learn a map that memorizes
    the input and overfits the data because the input and target output are no longer
    the same. Essentially, a DAE gets rid of noise with the help of nonlinear dimensionality
    reduction. The loss function used by the DAE is expressed as: 𝐿 𝐷 (𝑥, 𝑥 ′ ^ )=||𝑥−
    𝑥 ′ ^ || 2 , (5) where 𝑥 ′ is the corrupted version of input x, and 𝑥 ′ ^ is the
    reconstruction by the DAE. A DAE can exploit the statistical dependencies inherent
    in the input data and remove the detrimental effects of noisy inputs. 3.3.5. Variational
    AE (VAE) While AEs can learn a representative code from the input data and reconstruct
    the data from this compressed code, the distribution of this compressed code remains
    unknown and cannot be expressed in a probabilistic fashion. The VAE [94] is designed
    to handle this issue and learn to format the code as a probability distribution.
    This way, the learned code can be easily sampled and interpolated to generate
    new unseen data. Therefore, the VAE is a kind of deep generative model. The VAE
    makes the code to be a Gaussian distribution, so that the encoder can be trained
    to return its mean 𝜇 and variance 𝜎 2 . The loss function for VAE training is
    defined as: 𝐿 𝑉 (𝑥, 𝑥 ̂  )=𝐿(𝑥, 𝑥 ̂  )+KL(𝑁(𝜇,𝜎),𝑁(0,1)), (6) where 𝐿(𝑥, 𝑥 ̂  )
    is computed using Equation (1), KL(𝑁(𝜇,𝜎),𝑁(0,1)) is a regularization term on
    the learned code to force the distribution of the extracted code to be close to
    a standard normal distribution. The reason why an input is encoded as a distribution
    with some variance rather than a single point is that it expresses the latent
    space regularization very naturally. Sampling from this latent distribution and
    feeding it to the decoder can lead to new data being generated by the VAE. 3.4.
    Restricted Boltzmann Machine (RBM) The RBM was invented by Hinton in 2007 for
    learning a probability distribution over its set of inputs [95]. It is a generative
    stochastic artificial neural network that has wide applications in different areas
    such as dimensionality reduction [96], classification [97], regression [98], collaborative
    filtering [99], feature learning [100], and topic modeling [101]. A classical
    RBM has two layers, named visible layer and hidden layer (Figure 14). The visible
    layer has input nodes to receive input data, while the hidden layer is formed
    by nodes that extract feature information from the data and output a weighted
    sum of the input data [102]. An important and unique characteristic of the RBM
    is that the output generated by the hidden layer is further processed to become
    a new input to the visible layer. This process is called reconstruction or backward
    pass, and is repeated until the regenerated input is aligned with the original
    input. This way, an RBM is able to learn a probability distribution over the input.
    In an RBM, there is no typical output layer. In addition, every node can be connected
    to every other node, and there are no connections from visible to visible or hidden
    to hidden nodes. Figure 14. Diagram of an RBM. 𝑉,𝐻 , and 𝑊 represent the state
    vector of the visible layer, the state vector of the hidden layer, and the weight
    matrix between hidden and visible layers, respectively. An RBM is also a generative
    model. It represents a probability distribution by the connection weights learned
    from the data. Denote the m visible nodes as 𝑉=( 𝑣 1 , 𝑣 2 ,⋯, 𝑣 𝑚 ) and n hidden
    nodes as 𝐻=( ℎ 1 , ℎ 2 ,⋯, ℎ 𝑛 ) . In a binary RBM, the random variables (𝑉,𝐻)
    take values (𝑣,ℎ)∈ {0,1} 𝑚+𝑛 , and the joint probability distribution is given
    by the Gibbs distribution 𝑝(𝑣,ℎ)=1/𝑍 𝑒 −𝐸(𝑣,ℎ) with the energy function defined
    as [103]: 𝐸(𝑣,ℎ)=− ∑ 𝑖=1 𝑛 ∑ 𝑗=1 𝑚 𝑤 𝑖𝑗 ℎ 𝑖 𝑣 𝑗 − ∑ 𝑖=1 𝑛 𝑏 𝑖 ℎ 𝑖 − ∑ 𝑗=1 𝑚 𝑐
    𝑗 𝑣 𝑗 , (7) where 𝑍= ∑ 𝑣,ℎ 𝑒 −𝐸(𝑣,ℎ) is the normalization factor, 𝑖∈1,2,⋯,𝑛 and
    𝑗∈1,2,⋯,𝑚 , 𝑤 𝑖𝑗 is a weight associated with the edge between nodes 𝑣 𝑗 and ℎ
    𝑖 , and 𝑏 𝑖 and 𝑐 𝑗 are biases associated with the ith visible and the jth hidden
    variable, respectively. The RBM has proven to be capable of achieving highly expressive
    marginal distributions [104]. 3.5. Generative Adversarial Network (GAN) 3.5.1.
    Introduction of GAN The GAN was firstly proposed by Goodfellow et al. [105] and
    has become one of the most popular generative adversarial models. Its purpose
    is to learn the distribution of input data and thus enable the network to generate
    new data from that same distribution. Since the GAN was proposed, it has gained
    much attention in various areas such as synthetic training data [106], image and
    audio style transfer [107], music generation [108], text to image generation [109],
    super-resolution [110], semantic segmentation [111], natural language processing
    [112], and predicting the next frame in a video [113]. A GAN is basically composed
    of two neural networks, named generator and discriminator (Figure 15). The generator
    takes a random vector sampled from a noise distribution as input and generates
    samples. The discriminator takes the generated samples and real samples as input
    and tries to distinguish them as real or fake. These two networks compete with
    each other. The goal of the generator is to generate fake samples that are hard
    for the discriminator to distinguish from real samples. The goal of the discriminator
    is to beat the generator by identifying whether its received samples are fake
    or real. This competition between the generator and discriminator goes on until
    the generator manages to generate fake samples that the discriminator cannot distinguish
    from real ones. Figure 15. Diagram of a GAN. This zero-sum game is modeled as
    an optimization problem by: min 𝐺 max 𝐷 𝐿(𝐷,𝐺), (8) where D and G denote the generator
    and discriminator, respectively, and 𝐿(𝐷,𝐺)= 𝔼 𝑥∼ 𝑝 data (𝑥) [log(𝐷(𝑥))]− 𝔼 𝑥∼
    𝑝 𝑧 (𝑧) [1−log(𝐷(𝐺(𝑧)))], (9) where x is the input data, 𝑝 data (𝑥) is the distribution
    of input data, and z is noise from a distribution 𝑝 𝑧 (𝑧) . The GAN is trained
    in an alternative way of firstly maximizing the discriminator loss and then minimizing
    the generator loss. Both generator and discriminator employ independent back-propagation
    procedures. In this way, GANs have the ability to learn the data distribution
    in an unsupervised manner. 3.5.2. Deep Convolutional GAN (DCGAN) The DCGAN, proposed
    by Radford et al. [114], is a convolution-based GAN. It is one of the most powerful
    and successful types of GAN, and has been widely used in many convolution-based
    generation-based techniques. Compared to GAN, the DCGAN uses convolutional and
    convolutional-transpose layers to implement its generator and discriminator, and
    this is the origin of its name. Another interesting characteristic of DCGAN is
    that, unlike the typical neural networks to map input to a binary output, or a
    regression output, or even a categorical output, the generator of a DCGAN can
    map from random noise to images. For example, the generator of the DCGAN in [114]
    takes in a noise vector of size 100×1 and maps it into an output image of size
    64×64×3 (Figure 16). The DCGAN can be used to generate images as ‘real’ as possible
    from a distribution. Figure 16. Diagram of a DCGAN. 3.5.3. Conditional GAN (cGAN)
    The cGAN (Figure 17) is a type of GAN whose generator and discriminator are conditioned
    on some auxiliary information from other modalities [115]. As a result, it can
    learn multimodal mapping from inputs to outputs by feeding it with different contextual
    information. In other words, a cGAN allows us to guide the generator to generate
    the kind of fake samples we want. The input to the auxiliary layer can be class
    labels or some other properties we expect from the generated data. As the cGAN
    uses some kind of labels for it to work, it is not a strictly unsupervised learning
    algorithm. The advantages of using additional information are (1) the convergence
    will be faster and (2) the generator can generate specific output given a certain
    label. Figure 17. Diagram of a cGAN. 3.5.4. Other Types of GANs Other well-known
    types of GANs include Info GAN (also called iGAN) [116], Auxilary Classifier GAN
    (ACGAN) [117], Stacked GAN [118], Wasserstein GAN [119], Cycle GAN [120], and
    Progressive GAN [121]. (1) The Info GAN is a modified GAN that aims to learn interpretable
    and meaningful representations. To this end, it splits the input of the generator
    into two parts: The typical noise and a new “latent code” which is composed of
    control variables. The code is then made meaningful by maximizing the mutual information
    between the code and the generated output. This way, the generator can be trained
    by using the control variables to affect specific properties of the generated
    outputs. (2) The ACGAN is similar to the cGAN because both their generators take
    noise and labels as input. However, the ACGAN has an auxiliary class label output
    compared to the cGAN. Therefore, the ACGAN can be seen as an extension of the
    cGAN. It has the effect of stabilizing the training process and allowing the generation
    of large, high-quality images, while learning representations in a latent space
    independent of class labels. (3) The Stacked GAN is an extension of the GAN for
    generating images from text by a hierarchical stack of cGANs. Its architecture
    is composed of a set of text-conditional and image-conditional GANs. More specifically,
    the first-level generator is conditioned on text and generates a low-resolution
    image. The second-level generator is conditioned on both the text and the low-resolution
    image and outputs a high-resolution image. (4) The Wasserstein GAN is an advanced
    GAN that aims to better approximate the distribution of data observed in a given
    training dataset. To this end, it uses a critic rather than a discriminator to
    scores the realness or fakeness of a given image. Its underlying idea is to let
    the generator minimize the distance between the distribution of the data in the
    training dataset and the distribution of the generated samples. The advantage
    of Wasserstein GAN is that its training process is more stable and less sensitive
    to model architecture and hyperparameter configurations. (5) The Cycle GAN is
    an advanced GAN proposed for image-to-image translation. Its outstanding characteristic
    is that it learns mapping between inputs and outputs using an unpaired dataset.
    The Cycle GAN simultaneously trains two generators and two discriminators. One
    generator is responsible for generating images for the resource domain learned
    from, and the other is responsible for generating images for the target domain.
    Each generator has a corresponding discriminator. (6) The Progressive GAN is proposed
    for stable training and large-scale high-resolution image generation. Similar
    to a GAN, the Progressive GAN consists of a generator and a discriminator, which
    are symmetrical to each other. Its key feature is to progressively grow the generator
    and discriminator, starting from a low resolution, and then adding new layers
    to increase the model’s fine details as training progresses. As a result, training
    is faster and more stable, producing images of unprecedented quality. 3.6. Graph
    Neural Network (GNN) Graph neural networks are a class of neural networks that
    operate on the graph structure, where data are generated from non-Euclidean domains
    and represented as graphs with complex relationships and interdependencies between
    nodes [122]. Examples of graph data include social networks, citation networks,
    molecular structures, and many other types of data that are organized in a graph
    format. A graph is represented as 𝐺=(𝑉,𝐸) , where V is the set of vertices or
    nodes, and E is the set of edges. Let 𝑣 𝑖 ∈𝑉 denote a node and 𝑒 𝑖𝑗 =( 𝑣 𝑖 , 𝑣
    𝑗 )∈𝐸 denote an edge pointing from 𝑣 𝑖 to 𝑣 𝑗 . The neighborhood of a node v is
    defined as 𝑁(𝑣)={𝑢∈𝑉|(𝑣,𝑢)∈𝐸} . The adjacency matrix 𝑨 is an 𝑛×𝑛 matrix with 𝐴
    𝑖𝑗 =1 if 𝑒 𝑖𝑗 ∈𝐸 and 𝐴 𝑖𝑗 =0 if 𝑒 𝑖𝑗 ∉𝐸 . A graph may have node attributes 𝑿 ,
    where 𝑿∈ ℝ 𝑛×𝑑 is a node feature matrix with 𝒙 𝑣 ∈ ℝ 𝑑 representing the feature
    vector of a node v. Furthermore, a graph may have edge attributes 𝑿 𝑒 , where
    𝑿 𝑒 ∈ ℝ 𝑚×𝑐 is an edge feature matrix with 𝑥 𝑒 𝑣,𝑢 ∈ ℝ 𝑐 representing the feature
    vector of an edge (𝑣,𝑢) . A directed graph is a graph with all edges directed
    from one node to another. An undirected graph is considered as a special case
    of directed graphs, where there is a pair of edges with inverse directions if
    two nodes are connected. A graph is undirected if and only if the adjacency matrix
    is symmetric. A spatial–temporal graph is an attributed graph where the node attributes
    change dynamically over time. The spatial–temporal graph is defined as 𝐺 (𝑡) =(𝑉,𝐸,
    𝑿 (𝑡) ) with 𝑿 (𝑡) ∈ ℝ 𝑛×𝑑 . There are three general types of analytics tasks
    on graphs: graph-level, node-level, and edge-level. In a graph-level task, the
    goal is to predict a single property for an entire graph [123]. This is often
    referred to as a graph classification task, as the entire graph is associated
    with a label. To obtain a compact representation on the graph level, GNNs are
    often combined with pooling and readout operations [124,125,126]. Node-level tasks
    are concerned with predicting the identity or role of each node in a graph [127],
    and therefore, the model outputs relate to node regression and node classification
    tasks. Recurrent GNNs and convolutional GNNs can extract high-level node representations
    by information propagation and graph convolution. With a multiperceptron or a
    softmax layer as the output layer, GNNs are able to perform node-level tasks in
    an end-to-end manner. Similarly, an edge-level task predicts the property or presence
    of edges in a graph, hence the outputs relate to the edge classification and link
    prediction tasks. With two nodes’ hidden representations from GNNs as inputs,
    a similarity function or a neural network can be utilized to predict the label/connection
    strength of an edge. Based on the model architectures, GNNs can be categorized
    into recurrent graph neural networks, convolutional graph neural networks, graph
    autoencoders and generative graph neural networks, and spatial-temporal graph
    neural networks. 3.6.1. Recurrent Graph Neural Network (RecGNN) RecGNNs aim to
    learn node representations with recurrent architectures. A representative model
    in this class is the GNN proposed by Scarselli et al. [128], which updates the
    states of nodes by exchanging neighborhood information recurrently until a stable
    equilibrium is researched, as in the following equation: 𝒉 (𝑡) 𝑣 = ∑ 𝑢∈𝑁(𝑣) 𝑓(
    𝒙 𝑣 , 𝒙 𝑒 (𝑣,𝑢) , 𝒙 𝑢 , 𝒉 (𝑡−1) 𝑢 ), (10) where 𝑓(·) is the parametric function
    and ℎ (0) 𝑣 is the initial state randomly set. Other popular RecGNNs include the
    GraphESN [129] which extends echo state networks to improve the training efficiency
    of GNN, and the Gated GNN [130] which employs a gated recurrent unit as the recurrent
    function that reduces the recurrence to a fixed number of steps. RecGNNs are conceptually
    important and inspired later research on ConvGNNs. In particular, the idea of
    information passing is inherited by spatial-based ConvGNNs. 3.6.2. Convolutional
    Graph Neural Network (ConvGNN) ConvGNNs generalize the operation of convolution
    from grid data to graph data. The main idea is to generate a representation of
    a node v by aggregating its own features 𝑥 𝑣 and neighbors’ features 𝑥 𝑢 , where
    𝑢∈𝑁(𝑣) . Different from RecGNNs, ConvGNNs stack multiple graph convolutional layers
    to extract high-level node representations. ConvGNNs play a central role in building
    up a great deal of other complex GNN models. ConvGNNs can be further divided into
    spectral-based methods and spatial-based methods: The first category defines graph
    convolutions by introducing filters from the perspective of graph signal processing
    [131], and the latter inherits ideas from RecGNNs to define graph convolutions
    by information propagation. Spectral-based methods have a solid mathematical foundation
    in graph signal processing, and they are based on the normalized graph Laplacian
    matrix which is a mathematical representation of an undirected graph, defined
    as 𝑳= 𝑰 𝑛 − 𝑫 −𝟏/𝟐 𝑨 𝑫 −𝟏/𝟐 , where 𝑫 is a diagonal matrix of node degrees. This
    normalized Laplacian matrix can be factored as 𝑳=𝑼𝚲 𝑼 𝑇 , where 𝚲 and 𝑼 denote
    the ordered diagonal matrix of eigenvalues and the corresponding eigenvector matrix,
    respectively. The graph convolution of an input signal 𝑥 with a filter 𝒈∈ ℝ 𝑛
    is then defined as: 𝒙 * 𝐺 𝒈= ℱ −1 (ℱ(𝒙)⊙ℱ(𝒈))=𝑼( 𝑼 𝑇 𝒙⊙ 𝑼 𝑇 𝒈) (11) where ⊙ denotes
    the element-wise product, and ℱ(𝑥) is the graph Fourier transform of the signal
    𝒙 . Let 𝒈 𝜃 =diag( 𝑼 𝑇 𝒈) denote a filter, the spectral graph convolution is simplified
    as: 𝒙 * 𝐺 𝒈 𝜃 =𝑼 𝒈 𝜃 𝑼 𝑇 𝒙. (12) Popular spectral-based GNNs inlcude the Spectral
    CNN [132], ChebNet [125] and GCN [127], where the key difference lies in the design
    of the filter 𝒈 𝜃 . The spatial-based graph convolution is defined on the nodes’
    spatial relations, and it convolves a node’s representation with its neighbors’
    representations to derive the updated representation, inheriting the idea of information
    propagation of RecGNNs. Representative spatial-based GNNs include the Diffusion
    CNN [133], message-passing neural network (MPNN) [134], GraphSage [135], and graph
    attention network (GAT) [136] (which brings in attention mechanisms), mixture
    model network (MoNet) [137], and FastGCN [138]. Since GCN [127] bridged the gap
    between spectral-based approaches and spatial-based approaches, spatial-based
    methods have developed rapidly recently due to their attractive efficiency, flexibility,
    and generality. 3.6.3. Graph Autoencoder (GAE) and Other Generative Graph Neural
    Networks GAEs and generative GNNs are unsupervised learning frameworks that encode
    nodes into a latent vector space and decode graph information from the latent
    representations. GAEs are used to learn network embeddings and graph generative
    distributions. A network embedding is a low-dimensional vector representation
    of a node that preserves a node’s topological information. For network embedding,
    GAEs learn latent node representations through reconstructing graph structural
    information, such as the graph adjacency matrix. Representative GAEs for network
    embedding include the DNGR [123], SDNE [139], GAE [140], Variational GAE [140],
    and GraphSage [135]. These models combine different AEs and other models such
    as ConvGNNs and LSTM. With multiple graphs, GAEs are able to learn the generative
    distribution of graphs by encoding graphs into hidden representations and decoding
    a graph structure given hidden representations. The majority of GAEs for graph
    generation are designed to solve the molecular graph generation problem [141],
    which has a high practical value in drug discovery. These methods either propose
    a new graph sequentially, such as DeepGMG [142] and GraphRNN [143], or in a global
    manner, such as GraphVAE [144]. GNNs are also integrated with the architecture
    and training strategy of GANs, resulting in MolGAN [145] and NetGAN [146]. 3.6.4.
    Spatial–Temporal Graph Neural Network (STGNN) Graphs in many real-world applications
    are dynamic, both in terms of graph structures and graph inputs. STGNNs occupy
    important positions in capturing the dynamics of graphs. The task of STGNNs can
    be forecasting future node values or labels, or predicting spatial–temporal graph
    labels. STGNNs capture spatial and temporal dependencies of a graph simultaneously.
    Current approaches integrate graph convolutions to capture spatial dependence
    with RNNs or CNNs to model temporal dependence. Most RNN-based approaches capture
    spatial–temporal dependencies by filtering inputs and hidden states passed to
    a recurrent unit using graph convolutions [147]. As alternative solutions, CNN-based
    approaches tackle spatial–temporal graphs in a non-recursive manner with the advantages
    of parallel computing, stable gradients, and low memory requirements. CNN-based
    approaches interleave 1-D-CNN layers with graph convolutional layers to learn
    temporal and spatial dependencies, respectively, as in the CGCN [148]. 3.6.5.
    Training of GNNs Given a single network with part of the nodes labeled and others
    unlabeled, ConvGNNs can be trained in a semi-supervised manner to learn a robust
    model that effectively identifies the class labels for the unlabeled nodes [127].
    To this end, an end-to-end framework can be built by stacking a couple of graph
    convolutional layers followed by a softmax layer for multiclass classification.
    In addition, GNNs can be trained in a supervised manner for graph-level classification,
    which is achieved by applying the graph pooling layers and readout layers [123].
    Finally, GNNs can learn graph embedding in a purely unsupervised manner in an
    end-to-end framework (e.g., an AE framework [140]). 3.7. Transformer The transformer
    [149] is a prominent type of deep learning models that has achieved impressive
    advances on various tasks such as computer vision and audio processing. Originally
    proposed for natural language processing, the transformer mainly relies on deep
    neural networks and the self-attention mechanism, emphasizing the global dependencies
    between the input and output, thereby providing strong representation capability
    and state-of-the-art performance. Due to the significant improvement made by the
    transformer model, several variants have been proposed for either improving model
    performance or adapting the model to specific tasks in recent years. 3.7.1. Vanilla
    Transformer The transformer follows the encoder-decoder structure (Figure 18).
    The encoder is composed of a stack of identical blocks with two modules: The multihead
    self-attention layers and the position-wise fully connected feed-forward network
    (FFN). A residual skip connection, followed by a batch normalization layer, is
    applied to each submodule. Besides the two modules in the encoder block, the decoder
    block inserts an additional masked multihead attention layer, which is specially
    modified to avoid positions from attending to subsequent positions. In the following,
    we introduce the two modules in more detail. Figure 18. The model architecture
    of the Transformer. (1) The multihead attention layer adopts the self-attention
    mechanism with the Query-Key-Value (Q-K-V) model. The inputs are first projected
    into three kinds of vectors: The query vector 𝒒 , the key vector 𝒌 with dimension
    𝑑 𝑘 , and the value vector 𝑣 with dimension 𝑑 𝑣 . After packing a set of these
    vectors together into three matrices, namely queries 𝑸∈ ℝ 𝑁× 𝐷 𝑘 , keys 𝑲∈ ℝ 𝑁×
    𝐷 𝑘 , and values 𝑽∈ ℝ 𝑁× 𝐷 𝑣 , the scale dot-product attention can be computed
    as follows: Attention(𝑸,𝑲,𝑽)=softmax( 𝑸· 𝑲 ⊤ 𝑑 𝑘 − − √ )·𝑽=𝑨𝑽. (13) In this process,
    𝑸· 𝑲 ⊤ computes a score between each pair of input vectors and yields the degree
    of attention. The produced scores are divided by 𝑑 𝑘 − − √ to avoid the vanishing
    gradient problem and improve the stability of training. The softmax operator transforms
    the divided scores into probabilities 𝑨 , which is also called the attention matrix.
    After multiplying values 𝑽 with the attention matrix, vectors with higher probabilities
    receive more attention from the subsequent layers. Rather than using a single
    self-attention operation, multihead attention learns h different linear projections
    and transforms the queries, keys, and values into h sets with 𝐷 𝑘 , 𝐷 𝑘 , 𝐷 𝑣
    dimensions. Then, the self-attention operation can be implemented in parallel
    and produce different output values, which are subsequently concatenated and projected
    linearly back to 𝐷 𝑚 -dimension feature. Multihead(𝑸,𝑲,𝑽) where head 𝑖 =concat(
    head 1 ,…, head ℎ ) 𝑾 𝑂 =Attention(𝑸 𝑾 𝑸 𝑖 ,𝑲 𝑾 𝑲 𝑖 ,𝑽 𝑾 𝑽 𝑖 ) (14) where 𝑾 𝑸
    𝑖 ∈ ℝ 𝐷 model × 𝐷 𝑘 , 𝑾 𝑲 𝑖 ∈ ℝ 𝐷 model × 𝐷 𝑘 , 𝑾 𝑽 𝑖 ∈ ℝ 𝐷 model × 𝐷 𝑣 denote
    the parameters for linear projections for the Q, K, V branches, respectively.
    𝑾 𝑶 𝑖 ∈ ℝ ℎ 𝐷 𝑣 × 𝐷 model denote the parameters for linear projections after concatenation.
    In the vanilla transformer, 𝐷 𝑘 = 𝐷 𝑣 = 𝐷 model /ℎ=64 and ℎ=8 . (2) The fully
    connected feed-forward network consists of two linear transformations with a RelU
    activation function in between. FFN(𝑥)=max(0,𝑥 𝑾 1 + 𝑏 1 ) 𝑾 2 + 𝑏 2 (15) 3.7.2.
    Transformer Variants Motivated by the impressive success of the transformer, researchers
    have devoted numerous efforts to make further progress in a variety of tasks.
    Improvements have been achieved from three perspectives: using pretrained models
    (PTM), modifying the vanilla transformer architecture, and adapting to new tasks.
    (1) Using pretrained models: Compared with training a model from scratch, using
    pretrained transformer models has been revealed to be beneficial for building
    up universal feature representations. Powerful PTMs help reduce the need for task-specific
    architectures by simple fine-tuning on the downstream datasets. Bidirectional
    Encoder Representations from Transformers (BERT) [150] is the first fine-tuning
    based model with transformer architecture for natural language understanding and
    pushed the performance frontier of 11 NLP tasks. Generative Pretrained Transformer
    (GPT) series [151,152] show that massive PTMs with large-scale parameters can
    help achieve strong universal representation ability and provide state-of-the-art
    performance on different types of tasks, even without the fine-tuning process.
    Bidirectional and Auto-Regressive Transformers (BART) [153] generalized the pretraining
    scheme and built a denoising auto-encoder model to further boost the capacity
    in language understanding. (2) Modifying the vanilla transformer architecture:
    As self-attention is considered to be the fundamental component of the transformer,
    various architecture modifications have been proposed to address its limitations
    including computational complexity and ignorance of prior knowledge. Representative
    modifications including Low-rank based Sparse attention [154], linearized attention
    [155], improved multihead attention [156], and prior attention [157] have been
    designed to reduce complexity and make the most of the structural prior. Another
    branch of important modifications is adapting the architecture to be lightweight
    in terms of model size and computation, such as Lite Transformer [158], Funnel
    Transformer [159] and DelighT [160]. (3) Adopting to new tasks: Besides NLP, the
    transformer concept has been adapted in various fields, including computer vision
    [161,162,163,164,165,166] and multimodal data processing. For vision tasks, the
    transformer architecture has been extensively explored. ViT [161] is the first
    vanilla transformer architecture applied to image classification tasks without
    any alternation. It directly reshapes the image patches and flattens them into
    a sequence as the input. Experiments on large datasets such as ImageNet and JFT-300M
    show that the transformer has great potential in capturing long-range dependency
    and suits vision tasks well. Researchers also attempted to modify the network
    architecture and make it more feasible to vision tasks. Transformer in Transformer
    (TNT)[165], iGPT [162], and Swin Transformer [166] are representative models in
    this regard. 3.8. Bayesian Neural Network (BNN) While DNNs have been shown to
    achieve great success in different applications, they are unable to deal with
    the uncertainty of a given task due to model uncertainty. This is due to their
    essence of using BP to approximate a minimal cost of point estimates of the network
    parameters, while discarding all other possible parametrizations of the network
    [167]. The BNN is proposed to mitigate this by providing a strict framework to
    train an uncertainty-aware neural network [168,169]. The application domains of
    BNN are very wide, including recommender systems [170], computer vision [171],
    natural language processing [172], speech recognition [173], biomedical applications
    [174], and so on. The BNN is essentially a stochastic neural network trained using
    a Bayesian method [175,176]. A stochastic neural network is a type of DNN involving
    stochastic components into its network. The stochastic component is used to simulate
    multiple possible models with their associated probability distribution. The main
    aim of a stochastic neural network is to obtain a better idea of the uncertainty
    associated with the model. This is achieved by comparing the predictions of multiple
    models obtained by sampling the model parameterization. The uncertainty is low
    if these models generate consistent predictions, otherwise the uncertainty is
    high. This process can be formulated as: 𝑦= Φ 𝜃 (𝑥)+𝜀, (16) where 𝜃=(𝑾,𝒃) are
    the parameters of the neural network which follow the probability distribution
    𝑝(𝜃) , and 𝜀 is the random noise used to ensure the function Φ represented by
    the network is only an approximation. This way, a BNN can be defined as a stochastic
    neural network trained using Bayesian inference [177]. The uncertainty of a neural
    network is a measure of how certain a model is with its prediction. With BNNs,
    there are two kinds of uncertainty: aleatoric uncertainty and epistemic uncertainty.
    The aleatoric uncertainty refers to the noise inherent in the observations, and
    cannot be reduced by collecting more data. The epistemic uncertainty is also known
    as model uncertainty and is caused by the model itself. It can be reduced by collecting
    more data. The BNN usually solves this issue by placing a probability distribution
    on the network weights or by learning a mapping from input to probabilistic outputs
    to derive the estimation of uncertainty. More specifically, the epistemic uncertainty
    is modeled by placing a prior distribution on the network weights and then capturing
    the degree of change of these weights over the data. The aleatoric uncertainty
    is modeled by placing a distribution on the outputs of the model. One problem
    of BNNs is that they are hard to train. In practice, the Bayes by Backprop algorithm
    proposed by Blundell et al. [178] is used for learning a probability distribution
    on the network weights. Another problem of using BNNs is that they rely on prior
    knowledge, and it is challenging to derive insights about plausible parametrization
    for a given model before training. However, BNNs have become promising due to
    the following advantages. Firstly, thanks to its stochastic component, BNNs can
    quantify uncertainty, which means the uncertainty is more consistent with the
    observed errors. Moreover, BNNs are very data-efficient because they can learn
    from a small dataset without overfitting. This is due to the fact that they can
    distinguish the epistemic and aleatoric uncertainty. Finally, BNNs enable the
    analysis of learning methods, which is important for many fields such as traffic
    monitoring and medicine. 3.9. Fuzzy Deep Neural Networks (FDNN) 3.9.1. Introduction
    of FDNN Typical DNNs are trained by minimizing the loss or error given an input
    through gradient descent-based weight update [179]. This is a calculus-based method
    that iteratively computes the minimum of the error function. However, obvious
    disadvantages of this method are that it is computationally intensive and may
    not find the global minimum [180]. To address this issue, multiple FDNNs have
    been proposed, for example, the fuzzy RBM [181] and the Takagi Sugeno fuzzy deep
    network [182]. As an emerging method, FDNNs have been applied in distributed systems
    [183], cloud computing [184], traffic control [185], healthcare [186], image processing
    [187], and various other areas. A FDNN is a hybridization of DNNs and fuzzy logic
    methods, to solve various complex problems involving high-dimensional data. The
    key benefit of a DNN is its ability to learn from data, but it cannot clarify
    how its final output is achieved. Combined with fuzzy logic, a FDNN can interpret
    the results generated by the network [188]. More specifically, a FDNN introduces
    an additional fuzzy inference into a DNN to create an explainable rule-based structure.
    This way, through this rule-based structure, how a decision is made by the network
    is understandable. 3.9.2. Types of FDNN A FDNN can be comprised by a broad category
    of DNNs and fuzzy inference systems in different architectures. Current architectures
    in the literature can be classified into three categories: sequential FDNN, parallel
    FDNN, and cooperative FDNN [189]. A sequential FDNN has a structure that passes
    the data through the DNN and the fuzzy inference system sequentially (Figure 19a).
    It is suitable for solving problems involving high linearity, such as text documents,
    time-series data, video classification, and speech recognition. Figure 19. Diagram
    of three types of FDNN. (a) Sequential FDNN, (b) Parallel FDNN, and (c) Cooperative
    FDNN. A parallel FDNN has a structure that passes the data separately through
    the DNN and the fuzzy inference system, and fuses the results to generate the
    output (Figure 19b). This kind of FDNN has been used for multiple classification
    tasks [190]. A cooperative FDNN has a structure where the input data are firstly
    passed through a fuzzy interface block to generate fuzzy values, which are subsequently
    input to a DNN followed by a defuzzification block to convert the fuzzy values
    into output data (Figure 19c). An example application of the cooperative FDNN
    is fuzzy classification [191]. 3.10. Deep Reinforcement Learning (DRL) A reinforcement
    learning (RL) agent executes a sequence of actions and observes states and rewards,
    with major components being the value function, policy and model. A RL problem
    may be formulated as a prediction, control or planning problem, and solution methods
    may be model-free or model-based, with value function and/or policy [192]. Exploration-exploitation
    is a fundamental trade-off in RL. Knowledge would be critical for RL. DRL, integrating
    deep learning and RL, represents a step forward in building autonomous systems
    with a higher-level understanding. 3.10.1. Deep Q-Network Value function is a
    fundamental concept in reinforcement learning, and temporal difference learning
    [193] and its extension, Q-learning [194], are classic algorithms for learning
    state and action value functions respectively. Q-learning learns the action-value
    function 𝑄(𝑠,𝑎) , i.e., how good it is to take an action a at a particular state
    s, to build a memory table 𝑄[𝑠,𝑎] that stores Q values for all possible combinations
    of s and a. However, if the combinations of states and actions are large, the
    memory and computation requirement for Q is very high. Deep Q-learning addresses
    this problem by generalizing the approximation of the Q-value function rather
    than remembering the solutions. The challenge in RL is that both the input and
    target change constantly during the process, which makes training unstable. Deep
    Q-Network (DQN) [195] ignited the field of DRL, making an important contribution
    in stabilizing the training of action value function approximation with DNNs using
    experience replay. In addition, it designs an end-to-end RL approach, with only
    the pixels and the game score as inputs, so that only minimal domain knowledge
    is required. Important extensions of DQN are the Double DQN [196] which addresses
    the over-estimate issue in Q-learning, and Dueling DQN [197] which uses two separate
    heads to compute the state value function 𝑉(𝑠) and associated advantage function
    𝐴(𝑠,𝑎) (Figure 20). Figure 20. Deep Q-Network and Dueling Deep Q-Network architectures.
    3.10.2. Asynchronous Advantage Actor-Critic (A3C) A3C [198] uses multiple agents
    with each agent having its own network parameters and a copy of the environment.
    These agents interact with their respective environments asynchronously, learning
    with each interaction. Each agent is controlled by a global network. As each agent
    gains more knowledge, it contributes to the total knowledge of the global network.
    The presence of a global network allows each agent to have more diversified training
    data. An actor-critic algorithm predicts both the value function 𝑉(𝑠) and the
    optimal policy function 𝜋(𝑠) . The learning agent uses the value of the value
    function (critic) to update the optimal policy function (actor). It determines
    the conditional probability 𝑃(𝑎|𝑠;𝜃) , the parameterized probability that the
    agent chooses the action a when in state s. Different from most deep learning
    algorithms, asynchronous methods can run on a single multi-core CPU. 3.10.3. Trust
    Region Policy Optimization (TRPO) A policy maps the state to action. Policy optimization
    is to find an optimal mapping from state to action. Policy gradient methods are
    popular in RL. The basic principle uses gradient ascent to follow policies with
    the steepest increase in rewards. However, large policy changes can destroy training,
    and it is not easy to map changes between policy and parameter space and to deal
    with the vanishing or exploding gradient problems and poor sample efficiency.
    The challenge is to have an accurate optimization method to limit the policy changes
    and guarantee any change will lead to improvement in rewards. A more commonly
    used method is to use a trust region, in which optimization steps are restricted
    to lie within a region where the approximation of the true cost function still
    holds. By preventing updated policies from deviating too wildly from previous
    policies, the chance of a catastrophically bad update is lessened, and many algorithms
    that use trust regions guarantee or practically result in monotonic improvement
    in policy performance. The idea of constraining each policy gradient update, as
    measured by the Kullback–Leibler (KL) divergence between the current and proposed
    policy, has a long history in RL [199]. TRPO [200] is an algorithm in this line
    of work that has been shown to be relatively robust and applicable to domains
    with high-dimensional inputs. To achieve this, TRPO optimizes a surrogate objective
    function—specifically, it optimizes an (importance sampled) advantage estimate,
    constrained using a quadratic approximation of the KL divergence. It avoids parameter
    updates that change the policy too much with a KL divergence constraint on the
    size of the policy update at each iteration. The generalized advantage estimation
    (GAE) proposed several more advanced variance reduction baselines [201]. The combination
    of TRPO and GAE remains one of the state-of-the-art RL techniques in continuous
    control. 3.11. Deep Transfer Learning (DTL) Deep learning has a strong dependence
    on massive training data compared to traditional machine learning methods. Having
    sufficient training data is a prerequisite for a deep learning model to understand
    the latent patterns of the data. However, this is quite a challenge itself since
    the collection of data is time consuming and expensive. It is difficult to build
    a large-scale and high-quality annotated dataset in many fields. In addition,
    the training of deep learning models relies on intensive computation, which in
    practice can be challenging due to limited resources (e.g., high performance GPUs)
    and time constraints. Transfer learning is a concept of reusing a pretrained model
    on a new problem, which is an efficient way to tackle the insufficient training
    data problem and reduce the computational resource requirement and training time.
    It is very common in deep learning to use a pretrained model as a feature extractor
    in a new task or fine-tune the pretrained model (or some high-level parts of the
    model) to a new learning task. Let 𝐷 𝑠 and 𝐷 𝑡 denote the source domain and target
    domain, and 𝑇 𝑠 and 𝑇 𝑡 denote two learning tasks ( 𝐷 𝑠 ≠ 𝐷 𝑡 or 𝑇 𝑠 ≠ 𝑇 𝑡 ),
    respectively. Transfer learning can be defined as the process of enhancing the
    learning of the target predictive function 𝑓 𝑇 (·) in 𝐷 𝑡 using knowledge derived
    from 𝐷 𝑠 and 𝑇 𝑠 . It is a deep transfer learning task when 𝑓 𝑇 (·) is a nonlinear
    function that reflects a DNN. There are three forms of transfer learning: inductive
    transfer learning [202], transductive transfer learning [203], and unsupervised
    transfer learning [204]. In the first, 𝑇 𝑠 and 𝑇 𝑡 are different, and some labelled
    data in 𝐷 𝑡 are required to induce 𝑓 𝑇 (·) for use in 𝐷 𝑡 . In the second, we
    have the same 𝑇 𝑠 and 𝑇 𝑡 but different 𝐷 𝑠 and 𝐷 𝑡 , while no labelled data in
    𝐷 𝑡 are available but labelled data in 𝐷 𝑠 are available. Finally, in the last
    setting, 𝑇 𝑡 is different from but related to 𝑇 𝑠 , and there are no labelled
    data in both 𝐷 𝑠 and 𝐷 𝑡 during training. The focus is on solving unsupervised
    learning tasks in 𝐷 𝑡 , such as clustering, dimensionality reduction, and density
    estimation. According to the content to be transferred, transfer learning methods
    can be categorised into four cases: (1) instance-based approaches try to reweight
    the samples in 𝐷 𝑠 for learning in 𝐷 𝑡 [205]; (2) feature-based approaches encode
    knowledge into feature representations which are transferred across domains to
    help improve the performance of 𝑇 𝑡  [202]; (3) parameter-based approaches transfer
    knowledge across tasks through the shared parameters of the 𝐷 𝑠 and 𝐷 𝑡 learning
    models [206]; and (4) relational-based approaches, which transfer the knowledge
    through learning the common relationships between 𝐷 𝑠 and 𝐷 𝑡 . Recently, statistical
    relational learning techniques dominate this context [207]. 3.12. Federated Learning
    (FL) FL is applied in a situation where a group of clients wants to collaboratively
    train a global model without sharing their private local dataset [208]. Compared
    with conventional machine learning methods which require gathering different datasets,
    clients in FL collaboratively train a global model by exchanging local model weights/gradients
    without sharing their local dataset. There are typically two key players in FL:
    (1) the clients holding the local dataset and training the local model, and (2)
    the central server coordinating the training process and updating the global model.
    In general, FL contains three phases [209]: Phase 1: FL initialization. The central
    server initializes the FL training model and sets the hyperparameters, including
    the number of FL training iterations, the total number of participating clients,
    the number of clients selected at each training iteration, and the local batch
    size used in each training iteration. Then, the central server broadcasts the
    global model to the selected clients. Phase 2: Local model training and updating.
    In each FL training iteration, clients first update the local model using the
    shared global model and train the local model using the local dataset. Then, clients
    send the local model weights or gradients to the central server for model aggregation.
    Phase 3: Global model aggregation. The central server aggregates the model weights
    or gradients from the participating clients and shares the aggregated model to
    the clients for the next training iteration. Algorithm 1 shows the pseudocode
    of an FL system proposed in [210]. According to the characteristics of training
    data, FL methods are usually classified into two categories: horizontal FL and
    vertical FL [208,211]. Algorithm 1 FedAvg [210] Input:  𝑁 global : Maximum number
    of global iterations, n: The total number of participating clients, m: The number
    of clients used in each global iteration, 𝑁 local : The number of local epochs,
    and 𝜂 : The local learning rate. Output:  Global model weight 𝑤 𝐺 Processing:
    1: [Central Server] 2: Initialize 𝑤 0 𝐺 3: for each iteration t from 1 to 𝑁 global  do
    4:  ℳ 𝑡 includes m clients randomly selected from the n clients 5:  for each client
    𝑖∈ ℳ 𝑡  in parallel do 6:  𝑤 𝑡 𝑖 , 𝑁 𝑖 ←LocalTraining(𝑖, 𝑤 𝑡 𝐺 ) 7:  end for 8:  𝑤
    𝑡+1 𝐺 = 1 ∑ 𝑚 𝑗=1 𝑁 𝑗 ∑ 𝑚 𝑖=1 𝑁 𝑖 𝑤 𝑡 𝑖 9: end for 10: [Each Participating Client]
    11:  LocalTraining(𝑖,𝑤) : 12:  ℬ 𝑖 is the set of batches for the local dataset
    𝒟 𝑖 13: for each epoch j from 1 to 𝑁 local  do 14:  for each batch 𝑏∈ ℬ 𝑖  do
    15:  𝑤←𝑤−𝜂∇𝐿(𝑤;𝑏) 16:  end for 17: end for 18: return the weights 𝑤 and 𝑁 𝑖 =|
    𝒟 𝑖 | 3.12.1. Horizontal FL (HFL) HFL is used in scenarios where the datasets
    of the clients share the identical feature space but a different sample ID space
    [210,212]. For example, the electricity usage held by different electricity supplier
    companies may have the same feature space but different ID space. The communication
    protocols in FL can be divided into two classes: client-server protocol [210,213]
    and peer-to-peer protocol [212,214,215]. The client-server protocol deploys a
    central server to coordinate the training process, whereas the peer-to-peer protocol
    randomly selects a client as the server for the coordination work in each iteration.
    In the client-server protocol, the clients are assumed honest and the server is
    assumed honest but curious. To avoid private information leakage, the exchanged
    model parameters are usually encrypted or masked by clients. The key steps are
    summarized as follows: Step 1: The central server initializes the model and hyperparameters
    and allocates computation tasks to named clients. Step 2: The participating clients
    train their local models on their local dataset, encrypt the model weights/gradients,
    and transmit them to the central server. Step 3: The server conducts model aggregation,
    for example by averaging. Step 4: The server broadcasts the updated model to all
    clients. Step 5: The clients decrypt the model and update their local models.
    In the peer-to-peer protocol, as there is no central server, two approaches are
    usually adopted to coordinate the training process: (1) Cyclic Setting: All clients
    form a circular chain, denoted by { 𝐶 1 , 𝐶 2 ,…, 𝐶 𝑛 } . Client 𝐶 𝑖 transmits
    its local model to client 𝐶 𝑖+1 . Client 𝐶 𝑖+1 aggregates the received model with
    its local model which is trained on its local dataset and then transmits the updated
    model along the chain to client 𝐶 𝑖+2 . The training process stops once the termination
    condition is met. (2) Random Setting: Client 𝐶 𝑡 randomly picks a client 𝐶 𝑖 from
    all participants with equal chance and sends its model information to another
    client 𝐶 𝑖 . 𝐶 𝑖 aggregates the received model with its local model which is trained
    on its local dataset, then randomly picks another client 𝐶 𝑗 with equal chance
    and sends the updated model to it. The training process stops once the termination
    condition is met. 3.12.2. Vertical FL (VFL) VFL is used in scenarios where datasets
    between participating clients share the identical sample ID space but a different
    feature space. For example, a bank and an online shopping company may have the
    same customers but provide different services. The communication protocols for
    VFL can be divided into two classes: communication with a third-party coordinator
    [216] and communication without a third-party coordinator [217]. Assume that two
    clients, 𝐶 1 and 𝐶 2 , plan to train a global model using their local datasets,
    and that samples from 𝐶 1 are labeled. In addition, 𝐶 1 and 𝐶 2 are assumed honest
    but curious to each other. To protect the private data, the communication protocol
    with a third-party coordinator is designed as follows [216]: Step 1: As the two
    datasets of 𝐶 1 and 𝐶 2 contain samples with different IDs, it is necessary to
    extract the common samples sharing the same IDs [218]. Step 2: The coordinator
    𝐶 3 produces a pair of public and private keys and broadcasts the public key to
    𝐶 1 and 𝐶 2 . Step 3: 𝐶 1 and 𝐶 2 compute encrypted gradients and add a mask.
    In addition, 𝐶 1 computes the encrypted loss. 𝐶 1 and 𝐶 2 then transmit the encrypted
    results to 𝐶 3 . Step 4: 𝐶 3 decrypts the received results and broadcasts them
    back to 𝐶 1 and 𝐶 2 . 𝐶 1 and 𝐶 2 then update their local model using the received
    information. To protect the private data, the communication protocol without a
    third-party coordinator is designed as follows [217]: Step 1: A sample ID alignment
    process [219] is first employed to select the shared IDs between 𝐶 1 and 𝐶 2 .
    Samples sharing the same IDs are confirmed to train a vertical FL model. Step
    2: 𝐶 1 produces an encryption key pair and transmits its public key to 𝐶 2 . Step
    3: The two clients initialize their model weights and compute their partial prediction
    results. 𝐶 2 then transmits its result to 𝐶 1 . Step 4: 𝐶 1 computes the model
    residual, encrypts the residual, and transmits it to 𝐶 2 . Step 5: 𝐶 2 computes
    the encrypted gradient and transmits the masked gradient to 𝐶 1 . Step 6: 𝐶 1
    decrypts the masked gradient and transmits it back to 𝐶 2 . Then, 𝐶 1 and 𝐶 2
    update their model locally. 3.13. Multiple Instance Learning (MIL) 3.13.1. Introduction
    of MIL The concept of multiple instance learning was firstly proposed by Dietterich
    et al. [220] for investigating the problem of drug activity prediction. It is
    a type of weakly supervised learning where the training set is composed of many
    bags and each bag contains many instances, and a label is provided for the entire
    bag rather than each individual instance in it. This problem occurs when dealing
    with a lack of detailed annotation for large quantities of data. For example,
    it emerges when developing computer-aided diagnosis algorithms where medical images
    have only a patient-level diagnosis label rather than costly local labels annotated
    by experts [221]. Furthermore, it naturally occurs in a number of real-world learning
    scenarios, including image and video classification [222], document classification
    [223], and sound classification [224]. Generally, there are two assumptions in
    multiple instance learning: The standard and the collective assumption. The former
    assumes only negative instances are contained in negative bags, while one or more
    positive instances are contained in positive bags. This means that as long as
    there is one positive instance in the bag, the bag is positive. On the contrary,
    the collective assumption refers to cases where more than one positive instance
    is needed to identify a positive bag. These two assumptions are applied to different
    problem domains. For example, the standard assumption works well for drug activity
    prediction, while the collective assumption is more suitable for traffic jam detection.
    3.13.2. Training Mechanism of MIL The MIL problem under the standard assumption
    can be solved through alternate optimization. Specifically, the labels of all
    instances are assumed to be known at first, then a classification model can be
    obtained through supervised learning. Subsequently, this model is used to make
    predictions for each training instance, and the labels of the training instances
    are updated accordingly, and then this classification model can be retrained with
    the updated labels again, and this process repeats until convergence. Thus, the
    optimization process has mainly two parts: supervised learning and label updating.
    When training the supervised learning model, only the predicted “most correct”
    (i.e., the highest classification score) is selected from the positive instance
    bag, and other instances in the positive instance bag are discarded, regardless
    of whether the prediction is positive. This is because, under the standard assumption,
    the MIL can only consider the “most correct” instance in the positive instance
    bag. Therefore, this selection strategy is exactly in line with the problem definition.
    In addition, if there are enough negative instances, only the instance that is
    predicted to be “most correct” in each negative instance bag can be used for training.
    Such a negative instance is also called hard instance or most violated sample.
    In practice, they are most effective for fast model convergence. 3.13.3. Challenges
    of Using MIL The unique challenges of using MIL arise from four aspects: The level
    of prediction, the composition of bags, the ambiguity of instance labels, and
    the distribution of the data [225]. These factors affect the choice and the performance
    of MIL algorithms. (1) The level of prediction refers to whether a network makes
    the prediction on a bag-level or an instance-level. These two kinds of tasks employ
    different loss functions, and thus algorithms designed for bag classification
    are not optimal for instance classification. Cheplygina et al. [226] details how
    to choose algorithms for different problems. (2) The composition of bags refers
    to the ratio of instances from each class or the relation between instances. The
    proportion of positive instances in positive bags is generally defined as witness
    rate (WR). If the WR is very high, which means positive bags contain only a few
    negative instances, the problem can be solved in a regular supervised framework.
    However, if the WR is very low, which means a serious class imbalance problem
    because a few positive instances have a limited effect on training the network,
    many algorithms will have a poor performance. Several MIL algorithms have been
    proposed for this problem [227,228,229]. (3) The ambiguity of instance labels
    refers to label noise or instances not belonging to a class clearly. This is inherent
    to weakly supervised learning. Some MIL algorithms impose strict requirements
    on the correctness of bag labels, such as the DD algorithm [230]. For practical
    problems where positive instances may be found in negative bags, algorithms working
    under the collective assumption are needed [231]. (4) The distributions of positive
    and negative instances also affect MIL algorithms. This has two sides. First,
    the positive instances can either be located in a single cluster in feature space
    or be corresponding to many clusters, which leads to different applicable MIL
    algorithms [230,232]. Second, the distribution of the training data can or cannot
    entirely represent the distribution of negative instances in the test data, which
    also leads to different applicable MIL algorithms [233,234]. 4. Deep Learning
    in Diverse Intelligent Sensor Based Systems 4.1. General Computer Vision Sensor
    Systems A well-known application domain of deep learning is general computer vision,
    where the processed data are images and videos acquired from camera-based sensor
    systems. The research in this domain focuses on enabling computers to gain an
    understanding like that of human vision from images or videos. Deep learning is
    used for a wide range of important tasks in this domain, as described next. 4.1.1.
    Image Classification Conceptually, image classification is one of the simplest
    yet most fundamental problems in computer vision. It refers to the process of
    predicting information classes from an image. CNNs are the most commonly employed
    techniques for solving this problem. Specifically, the CNNs take an image as input
    and aim to output the class of the input image. Since AlexNet [37] achieved remarkable
    classification performance in the ImageNet challenge, many types of CNN models
    have been proposed for image classification, such as VGG [39], ResNet [41], and
    DenseNet [42]. In 2017, Xie et al. proposed ResNeXT [235], which is an extension
    of ResNet and VGG, and achieved the state-of-the-art performance of 3.03% top-five
    errors. Around the same time, the problem of supervised image classification was
    regarded as “solved”, and the ImageNet classification challenge concluded. However,
    in many applications, the tasks cannot be formulated as plain vanilla image classification
    problems. Many object classes may be present in a single image. Therefore, more
    research efforts are being made toward object detection and segmentation. 4.1.2.
    Object Detection Object detection is also a fundamental problem in computer vision.
    Its aim is to identify and localize different objects in an image. Therefore,
    deep learning models for this problem usually consist of two components: The backbone
    component, which is similar to an image classification model, and the region proposal
    component, for predicting bounding boxes. Region-proposal and Region-based CNN
    (R-CNN) is a pioneering work for object detection [236]. However, it requires
    much computing time and memory for training. Therefore, several improved variants
    of R-CNN have been proposed, such as the renowned Fast R-CNN [55] and Faster R-CNN
    [44]. Another kind of models for object detection is represented by YOLO (You
    Only Look Once), which achieved reasonable performance for real-time object detection
    [46]. Other advanced models include Region-based Fully Convolutional Networks
    (R-FCNs) [237], which use ResNet as an object detector and are faster than the
    Faster R-CNN, and the Single-Shot MultiBox Detector (SSD) [238], which is even
    faster than YOLO and has comparable accuracy to Faster R-CNN. Most object detection
    methods mentioned above incur a high computational cost due to their bounding
    box processing. More architectures addressing this issue and achieving higher
    accuracy can be found in recent overview articles [239,240]. 4.1.3. Semantic Segmentation
    Semantic segmentation refers to the process of dividing an image into meaningful
    types of regions. It is a vital step for many image processing and analysis tasks.
    Its aim is to label an image at the pixel level, or more accurately to assign
    each pixel to the class it most likely belongs to. A predominant and outstanding
    architecture particularly for the semantic segmentation problem is U-Net [43].
    Due to the huge success of U-Net, many variants have been proposed to fit specific
    applications and achieved great results [241,242,243,244,245]. U-Net was originally
    proposed for addressing medical image segmentation. Similarly, other domain-oriented
    deep neural networks have been developed, including SegNet [246], PSPNet [247],
    and DeepLab [248]. More detailed discussions of semantic segmentation can be found
    in various surveys [249,250,251]. In a way, semantic segmentation can be seen
    as a rough classification, for example two different dog objects being segmented
    as one entity, but in many applications we need a finer segmentation, where each
    dog is segmented out separately. Hence, instance segmentation methods are important.
    4.1.4. Instance Segmentation Instance segmentation is essential for many real-world
    application scenarios such as autonomous driving, medical imaging, robot vision,
    and so on. It refers to detecting instances of objects and, more challenging,
    demarcating their boundaries. Because instance segmentation involves both the
    detection of different objects and their per-pixel segmentation, networks for
    solving it can be either R-CNN driven or FCN driven. Mask R-CNN [47] is one of
    the representative networks. Its overall structure is the two-stage object detection
    network Faster R-CNN, where the box head is used for detection and the mask head
    for segmentation. Fundamentally, these instance segmentation networks employ object
    detection networks in identifying the object bounding boxes, while an extra component
    mask head is used to further extract the foreground of the bounding boxes. Other
    reputable networks include YOLACT [252] and SOLO [253] inspired by YOLO, and PolarMask
    [254] and AdaptIS [255] inspired by the object detection network FCOS [256]. See
    several recent reviews of instance segmentation for more details [257,258,259].
    4.1.5. Pose Estimation Pose estimation refers to the problem of inferring the
    pose of a person or an object in an image or video. In other words, it concerns
    determining the position and orientation of the camera relative to a given person
    or object of interest. This is typically achieved by identifying, locating, and
    tracking a number of key points of the person or object. This problem is basic
    and important because it occurs in many real-world applications such as object/person
    tracking. Deep learning is often employed to detect and track these key points.
    There are many specific neural network architectures for this purpose, and the
    most robust and reliable ones that make good places to start include Stacked-Hourglass
    networks [260], Mask R-CNN, and PoseNet [261]. Key factors in designing DNNs for
    pose estimation include using dilation convolution, upsampling operations, and
    skip connections. This is because pose estimation requires a higher-resolution
    feature map and is more sensitive to the location of keypoints compared to classification/detection
    tasks. More advanced networks have been described in various reviews [262,263,264].
    4.1.6. Style Transfer Style transfer refers to the computer vision task of blending
    two input images, named content image and style reference image, and producing
    an output image that maintains the core elements of the content image while following
    the style of the style reference image. It can power practical applications such
    as photo and video editing, gaming, virtual reality, and so on. Neural networks
    have become the state-of-the-art method for style transfer. Generally, CNNs are
    the mainstream approaches for this problem, and a style transfer model usually
    consists of two networks, namely a pretrained feature extraction network and a
    transfer network. Significant networks that are good starting points include the
    model proposed by Johnson et al. [265] for single style transfer, the model proposed
    by Dumoulin et al. [266] at Google for multiple style transfer, and the model
    proposed by Huang et al. [267] for arbitrary style transfer. Detailed explorations
    and more advanced architectures can be found in recent surveys [107,268,269].
    4.1.7. Video Analytics Video analytics refers to generating descriptions of the
    content of, or events in the video, which involves tasks of object (persons, cars,
    or other objects) detection, tracking, as well as calculating their appearance
    and movements. It is also an important and essential computer vision technique
    and has significant practical benefits such as monitoring video for security incidents
    helps prevent crime, intelligent traffic systems, and more [270,271]. While its
    tasks overlap beyond image analysis tasks, they are more challenging because they
    involve both spatial and temporal information. The object detection problem in
    video is associated with the object segmentation problem, because an accurate
    object segmentation facilitates object detection, and robust object detection
    in turn facilitates object segmentation. Recent neural networks for this problem
    are based on recurrent convolution neural networks (RCNN). For example, Donahue
    et al. [272] firstly proposed a long-term RCNN, where a set of CNNs is employed
    for visual understanding and then their outputs are fed to a set of RNNs for analyzing
    temporal information. Other representative RCNN based models include the one proposed
    by Ballas et al. [273], MaskRNN [274], and MoNet [275]. For comprehensive discussions
    of video analytics we refer to recent surveys [270,271,276,277]. 4.1.8. Codes,
    Pretrained Models, and Benchmark Datasets Various implementation codes and pretrained
    models of many of the above introduced methods can be found in the references
    provided in Section 2.5.2. Some renowned benchmark datasets that are widely used
    in general computer vision to evaluate different deep learning methods are listed
    as follows. (1) MNIST: http://yann.lecun.com/exdb/mnist/ (accessed on 2 November
    2022). (2) CIFAR-10 and CIFAR-100: https://www.cs.toronto.edu/kriz/cifar.html
    (accessed on 2 November 2022). (3) ImageNet: https://image-net.org/challenges/LSVRC/
    (accessed on 2 November 2022). (4) COCO: https://cocodataset.org/#home (accessed
    on 2 November 2022). (5) PASCAL VOC: http://host.robots.ox.ac.uk/pascal/VOC/ (accessed
    on 2 November 2022). (6) OpenImages: https://storage.googleapis.com/openimages/web/index.html
    (accessed on 2 November 2022). (7) MIT pedestrian: http://cbcl.mit.edu/software-datasets/PedestrianData.html
    (accessed on 2 November 2022). (8) Youtube-8M: https://research.google.com/youtube8m/
    (accessed on 2 November 2022). (9) SVHN: http://ufldl.stanford.edu/housenumbers/
    (accessed on 2 November 2022). (10) Caltech: http://www.vision.caltech.edu/datasets/
    (accessed on 2 November 2022). 4.2. Biomedical Sensor Systems Deep learning has
    fundamentally converted the way we process, analyze, and interpret data, including
    in biology and medicine. We discuss deep learning in biomedical sensor systems
    from the perspective of three different biomedical domains: biomedical imaging,
    omics data analysis, and prognostics and healthcare. 4.2.1. Biomedical Imaging
    Biomedical image analysis is one of the most important and fundamental areas in
    biomedical science and has become a cornerstone of modern healthcare. Automatic
    biomedical image analysis involves a set of basic tasks introduced in Section
    4.1, such as image reconstruction and registration, image or object classification,
    object detection, segmentation, and tracking. According to the different image
    types and their unique characteristics, we further divide biomedical imaging into
    four subareas and discuss the application of deep learning in each, as in [278].
    (1) Medical Imaging. Medical images are typically acquired using devices such
    as X-ray CT (computed tomography), MRI (magnetic resonance imaging), and US (ultrasound).
    With the advancement of medical imaging devices, the quality of medical images
    has improved over the years, but their automated analysis is still a challenging
    task. DNNs can provide powerful solutions to this problem. For example, U-Net
    [43] and UNet++ [279] are two most reputable and popular architectures for medical
    image segmentation. In fact, U-Net has become the de facto standard method in
    medical image segmentation due to its huge success in the field. Various CNN-based
    architectures have achieved top performance for brain tumor analysis [280]. For
    a more in-depth discussion of DNN architectures in medical imaging, we refer to
    recent overview and survey papers [281,282,283]. (2) Pathological Imaging. Pathological
    images are generated from specimen slides by virtual microscopy, also called whole-slide
    imaging. Their visual interpretation is more challenging than for medical images
    due to the large size and high resolution of the images. As in medical imaging,
    deep learning brings great potential in providing reliable image interpretation
    in this subarea. For example, Zhu et al. [284] proposed a DeepConvSurv model based
    on CNN for survival analysis with pathological images. Li et al. [285] proposed
    a DenseNet based solution for pathological image classification. A recent trend
    in pathological image processing is to incorporate multiple instance learning
    to deal with the high resolution and weak labels of pathological images. More
    advanced models can be found in a recent survey paper [286]. (3) Preclinical Imaging.
    Preclinical imaging refers to the visualization of small living animals for conducting
    in-vivo studies for clinical translation. Preclinical images can be obtained by
    micro-US, MRI, and CT for anatomical imaging, or bioluminescence, PET (positron
    emission tomography), and SPECT (single photon emission computed tomography) for
    molecular visualization. Employing deep learning for interpreting these images
    is comparatively under-researched. A few related DNN-based methods are discussed
    in recent works [287,288]. (4) Biological Imaging. Biological images capture various
    aspects of organisms and biological systems that are not visible to the naked
    eye. Automated analysis and interpretation of these images is challenging, as
    they are typically very noisy and highly variable depending on experimental conditions,
    and they can be quite large. DNNs have proven to be very suitable for biological
    image analysis and have empowered biological research [289,290]. Moreover, to
    facilitate the design of DNN architectures for this purpose, neural architecture
    search-based solutions have been proposed for cell segmentation [291,292]. Architectures
    for deep learning-based biological image analysis have been discussed in several
    recent papers [293,294,295]. 4.2.2. Omics Data Analysis Omics data are complex,
    heterogeneous, and high-dimensional, and deep learning methods are specially suitable
    to analyze them. According to the different types of data, we introduce deep learning
    in omics data analysis from the following aspects. (1) Genomics. Deep learning
    methods have been applied to genomics data analysis for several years, and have
    achieved impressive results. For example, CNNs have been employed for single-nucleotide
    polymorphisms and indels detection [296]. SAEs have been successful in predicting
    the effect of genetic variants on gene expression [297]. Both have achieved better
    results than traditional methods. A review of more architectures can be found
    in a recent survey paper [298]. (2) Transcriptomics. Analysis of transcriptomics
    data may yield an estimate of the expression level of each gene or transcript
    across several samples [299]. Therefore, it can be seen as a typical deep learning
    problem. Various deep learning methods have been proposed for addressing this
    problem. For example, a RAN-based solution for detecting long ncRNAs achieved
    a remarkable 99% accuracy [300]. For comprehensive introductions and discussions
    we refer to various survey papers [301,302]. (3) Proteomics. Protein data analysis
    mainly centers around two topics: protein structure prediction (PSP) and protein
    interaction prediction (PIP) [303]. For PSP, deep learning-based methods have
    been used to solve problems such as backbone angles prediction [304], protein
    secondary structure prediction [305], and protein loop modeling and disorder prediction
    [306]. Moreover, due to the success of deep learning in generating higher-level
    representations and ignoring irrelevant input changes, deep learning methods have
    become the technology of choice to help PSP. For PIP, deep learning-based methods
    have been used to analyze protein–protein interactions [307], drug–target interactions
    [308], and compound–protein interactions [309]. A latest trend in PSP is using
    GNNs to better learn complex relationships among protein interaction networks
    for PSP. 4.2.3. Prognostics and Healthcare Clinical data and electronic medical
    records are vital for prognostics and healthcare management. Deep learning to
    handle these kinds of data is also rapidly growing [310,311]. For example, deep
    learning-based methods have been used for detecting cardiac arrhythmia from electrocardiograms
    [312] and for phenotype discovery using clinical data [313]. There are also examples
    of using DNNs and topic modeling techniques to learn effective representations
    from electronic health records [314,315]. A key challenge in this area is the
    efficient utilization of temporal information for achieving high performance [316].
    Hybrid DNNs such as those incorporating RNN and CNN components are promising in
    addressing this challenge. 4.2.4. Codes, Pretrained Models, and Benchmark Datasets
    Various implementation codes and pretrained models of many of the above introduced
    methods can be found in the references provided in Section 2.5.2. In addition,
    the implementation of nnU-net [317], which is a powerful self-adapting neural
    network framework that can automatically configure itself, including selecting
    the optimal preprocessing, architecture, training, and post-processing for any
    new task, is publicly available (https://github.com/MIC-DKFZ/batchgenerators accessed
    on 2 November 2022). Some renowned benchmark datasets that are widely used in
    the biomedical domain to evaluate different deep learning methods are listed as
    follows. (1) Decathlon: http://medicaldecathlon.com/ (accessed on 2 November 2022)
    (2) MedPix: https://medpix.nlm.nih.gov/home (accessed on 2 November 2022) (3)
    NIH Pancreas-CT: https://academictorrents.com/details (accessed on 2 November
    2022) (4) AMRG Cardiac Atlas: http://www.cardiacatlas.org/studies/amrg-cardiac-atlas/
    (accessed on 2 November 2022) (5) Cancer Imaging Archive: https://wiki.cancerimagingarchive.net
    (accessed on 2 November 2022) (6) OASIS Brains: http://www.oasis-brains.org/ (accessed
    on 2 November 2022) (7) ADNI: https://adni.loni.usc.edu/data-samples/access-data/
    (accessed on 2 November 2022) (8) DDSM: http://www.eng.usf.edu/cvprg/ (accessed
    on 2 November 2022) (9) CTC: http://celltrackingchallenge.net/ (accessed on 2
    November 2022) (10) ISIC Archive: https://www.isic-archive.com/#!/onlyHeaderTop/gallery
    (accessed on 2 November 2022) 4.3. Biometric Sensor Systems Biometrics deals with
    recognizing people by using their physical and behavioral characteristics. Biometric
    recognition can be formulated as a verification or identification problem. The
    verification task aims to verify whether a person is who they claim to be by comparing
    the person’s biometric template with the reference template of the claimed identity.
    The identification task compares a person’s biometric template with references
    of all identities in the database to establish the person’s identity. In either
    task, the system needs to collect the biometric data, extract features, and perform
    comparison or classification. Deep learning has a big impact on biometrics in
    terms of feature extraction and classification, which primarily involves supervised
    learning. Recent advances in this field also applied generative models with unsupervised
    learning to enhance the learning of features and improve recognition performance.
    In this section, we review deep learning approaches for biometric applications
    and discuss how the methods can benefit the field of biometrics and the open research
    questions. 4.3.1. Automatic Face Recognition Faces are one of the most commonly
    used biometrics in surveillance, forensics, security, access control applications
    scenarios. Acquisition of face biometrics is based on cameras and the collected
    data are in the format of images or videos. While being noninvasive and convenient,
    face biometrics are subject to imaging conditions and physical factors related
    to illumination, pose, expression, aging, and other appearance changes. Conventional
    methods for automatic face recognition can be categorized into feature-based approaches
    and appearance-based approaches, which extract local features and global representations,
    respectively. With a hierarchical structure, deep learning simultaneously extracts
    local and global representations while handling nuisance factors. Among different
    architectures, CNN-based models show the most significant impact in this field.
    For example, CNNs with different architectures and loss functions [318] were trained
    to learn DeepID features in joint identification-verification tasks. Verification
    essentially deals with the similarity between two faces, and therefore, metric
    learning such as joint Bayesian and triplet loss are adopted. Identification,
    on the other hand, is a multiclass classification problem, hence the cross-entropy
    is usually used in the loss function. Facebook proposed DeepFace [319], which
    is a nine-layer CNN trained on four million Facebook images from four thousand
    subjects. DeepFace addresses the alignment issue and learns effective face representations
    with high transferability. Google proposed FaceNet, a deep CNN with triplet loss
    [320] to learn direct embeddings of images, which are effective in face verification,
    identification and clustering tasks. In addition, various CNN frameworks are proposed
    to handle the pose and illumination variations. For example, the face identity-preserving
    framework [321] integrates feature extraction layers with a reconstruction layer
    to reconstruct face images in a canonical view. An ensemble of pose-aware CNNs
    [322] was proposed for face recognition, where each model is trained for a specific
    pose using pose-specific images generated by 3D rendering. To improve the efficiency
    of training deep neural networks, researchers have proposed different learning
    strategies. For example, a sparse network can be trained iteratively from a denser
    model using correlations between neural activations of consecutive layers [323].
    A face alignment network [324] trained jointly with the face recognition network
    can reduce the number of training samples needed. Furthermore, hybrid discriminative
    and generative models were proposed to learn identity-specific representations
    that are pose-invariant [325]. Generative models such as AEs and GANs are also
    used to generate identity-bearing facial images [326]. In addition, the recognition
    of facial attributes such as age and gender [327] is an important task because
    it helps narrow down candidate matches, which can then facilitate face recognition.
    Hierarchical representations from a CNN or an ensemble of CNNs have been used
    for this purpose via classification [327] or regression [328]. CNN with different
    constructs have been adopted, including the residual network [329]. Training such
    models requires crowdsourcing to get the age and gender labels, which usually
    results in small datasets not sufficient to train deep neural networks. Therefore,
    models such as VGGNet and GoogleNet pretrained on large datasets such as ImageNet
    are often adopted and fined-tuned for age and gender estimation [330]. 4.3.2.
    Periocular Region and Iris The periocular region presents salient traits for face
    and facial attribute recognition, which is helpful when the lower half of a face
    is occluded. Researchers have used CNN and RBM models trained with unsupervised
    learning to learn representations from periocular image patches and transferred
    the representations to recognition tasks [331]. Deep learning models were also
    used with conventional handcrafted methods to enhance performance. For example,
    autoencoders were used to learn latent representations from the texture features
    extracted by handcrafted filters [332], and CNNs were trained on both face images
    and the SIFT features to gain higher recognition accuracy [333]. The iris is a
    highly distinctive biometric trait. However, the acquisition of iris images often
    suffers low user acceptance. Iris recognition relies on random texture information
    in the irises and the quality of the extracted information depends on the preprocessing
    steps, including iris segmentation, off-axis gaze correction and removal of eyelashes.
    Gabor filtering is the classic method widely used in real-world applications for
    capturing iris texture information [334]. Deep learning replaces the Gabor filters
    with neural network modules. For example, CNNs were used to learn source-specific
    filters for iris images from visible and near-infrared sources [335]. Deep CNNs
    integrating inception layers were proposed for iris recognition, providing robust
    performance in terms of segmentation and alignment. Sparse autoencoders were also
    trained for feature extraction in mobile applications where iris images were collected
    by mobile devices [336]. Moreover, representations learned by CNNs were fused
    with handcrafted features to improve recognition accuracy. 4.3.3. Fingerprint
    and Palmprint Fingerprints are one of the most established biometric modalities.
    The acquisition of fingerprints uses cameras and the collected data are images.
    Two types of features are used, one is global features in terms of loop, delta,
    and whorl, and the other is local features in terms of ridge, valley, and minutiae.
    The major challenges of fingerprint recognition are the intra-subject variations
    caused by displacement, distortion, pressure, skin condition, and other noises.
    Applying deep learning to fingerprint recognition aims to extract deep global
    and local representations, as well as enhancing the fingerprint images. CNNs are
    the most popular models in fingerprint biometric applications. With different
    designs in the neural network structures and training strategies, CNNs have been
    used for identification [337], authentication [338], liveness detection [339],
    double-identity detection [340], fingerprint alteration detection [341], spoofing
    detection [341], latent fingerprint recognition [342], cancellable recognition
    systems [343], and fingerprint segmentation [344], enhancement [345], and indexing
    [346]. Recent work also started to explore the use of CNNs for contactless and
    partial 3D fingerprint recognition [347,348,349,350,351]. DBNs are also used for
    fingerprint liveness detection, anti-spoofing, and enhancement [352]. One of the
    biggest challenges for most fingerprint recognition systems is the spoofing attack,
    which tries to circumvent a recognition system using artificial replicas of human
    characteristics similar to the legitimate enrolled trait. Models based on AEs
    such as stacked AEs and sparse AEs [353] were proposed to defend against spoofing
    attacks on fingerprint recognition systems and to perform liveness detection.
    Moreover, generative models based on GANs are widely used to generate fingerprint
    images [354]. The generation of high-quality fingerprints is used for fingerprint
    recovery [355] and presentation attack detection [356]. Furthermore, hybrid deep
    learning models or ensemble DL methods have been proposed to perform multiple
    tasks at once. For example, the Inception, MobileNet, and GAN are integrated in
    one framework [357] for localization and detection of altered fingerprints in
    order to address obfuscation presentation attack. Palmprint and hand geometry
    share similar traits as fingerprints. Classic features include the hand/palm shape,
    principal lines, wrinkles, delta points, and minutiae features. Deep learning
    is used to learn these multiscale features from the palmprint and hand images.
    Various models based on CNN and RBM [358] have been used for palmprint recognition.
    The models are trained with either the whole palmprint images or regions of interest
    [359]. 4.3.4. Voice-Based Speaker Recognition Application scenarios of speaker
    recognition can be classified into speaker verification, speaker identification,
    speaker diarization (which is used for automated speech transcription systems
    where dialogue is generated along with the speaker’s information), and speaker
    recognition in-the-wild (which refers to real-world scenarios where conditions
    are unknown or even corrupted with noise, echo and cross-talk). The in-the-world
    scenario is one of the major challenges targeted by researchers. The general types
    of speaker recognition are text-dependent and text-independent, and their difference
    lies in whether specific phrases are required or not. Deep learning methods are
    currently the state-of-the-art in the above-mentioned application scenarios and
    types. These methods process voice inputs in two patterns: raw sound waves and
    preprocessed data. Although some methods (e.g., the SincNet [360], RawNet [361],
    and AM-MobileNet [48]) are directly trained using raw speech data, most methods
    rely on signal preprocessing, which segments the signal into frames, performs
    normalization, converts signals to the frequency domain, and extracts spectrogram,
    mel-filterbank and mel-frequency cepstral coefficients (MFCC). Based on the learning
    strategies, existing DL methods for speaker recognition can be categorized into
    stage-wise approaches and end-to-end systems. The stage-wise strategy involves
    two stages: speaker-specific feature extraction and classification of speakers.
    The i-vector [362] is a classic method for speaker recognition, consisting of
    a feature extractor based on Gaussian mixture models (GMM) and universal background
    models (UBM) and a classifier based on linear discriminant analysis. Inspired
    by i-vector, DL architectures are proposed to dig deeper representations, resulting
    in DL-based speaker embedding systems, d-vectors [363] (deep vector), x-vectors
    [364] (time-delay), and t-vectors [365] (triplet network). End-to-end systems
    do not require a multistage network. However, pretraining steps such as extraction
    of spectogram, MFCC, and mel-filterbank, or automatic feature learning with AEs,
    are employed to enhance recognition performance. Residual networks are widely
    used in feature extraction and end-to-end speaker recognition systems. Representative
    methods include the DeepSpeaker [192] (which integrates CNN with residual network),
    RawNet [361] (which consists of convolutional layers and gated recurrent unit
    layers with residual block constructs), and AM-MobileNet [48]. Some architectures
    adopted speech specific layers to facilitate speech signal processing. For example,
    the SincNet [360] uses a parameterized Sinc function to perform convolutions,
    which results in a smaller number of parameters and achieves better performance
    and faster convergence than standard CNNs. Autoencoders have also been widely
    used in speaker recognition for data encoding, feature dimension reduction, and
    data denoising [366]. Furthermore, generative models based on GANs are used for
    data augmentation and generation in speaker recognition systems to help extend
    short utterances into long speeches to enhance recognition performance [367].
    An example is the SpeekerGAN [368] which is a variant of conditional GAN trained
    on inadequate speech data. 4.3.5. Behavioral Biometrics Handwritten signature
    is the most popular behavioural biometrics that has been widely used in various
    applications in legal, medical, and banking sectors. Based on how the signature
    is acquired, signature verification can be operated in two scenarios, including
    offline methods that use static signature images as inputs and online methods
    that further take into account the dynamics of the signing process (such as the
    pressure and velocity). Various deep learning models have been proposed to extract
    deep representations from the signature images and the signing process to improve
    verification accuracy for both offline and online applications. Popular models
    include the RNNs [369] (LSTM, gated recurrent unit), CNNs [370], DBN [371], and
    the combination of these models with AEs [372]. Classic methods such as the length
    normalized path signature descriptors [373], direction features, and wavelet features
    [371] are also used as inputs to train deep nets, instead of raw images, to improve
    performance. A Siamese network structure with contrastive loss was used for writer-independent
    verification [374], which measures how likely two given signatures are written
    by the same writer without knowledge of the writer’s identity. Gait and keystrokes
    are two other popular behavioral biometrics which use the shape and motion cues
    of a person’s walking style and the typing patterns respectively for person recognition.
    There are two ways to acquire gait data: one is to use cameras or motion sensors
    to capture image/video [375] during the gait phases and the transition periods
    between phases, the second is to use sensors such as accelerators [376] to capture
    the signal variations of the person during walking. Deep learning methods for
    image/video-based gait recognition share great similarities with those in computer
    vision applications. The major difference lies in the input images, where models
    for gait recognition are usually silhouette shape-based and are trained with gait
    energy images [375] or chrono-gait images [377]. In terms of models, CNNs, LSTM,
    AEs, and their combinations are popular. In particular, 3D CNNs with temporal
    information in gait sequences considered provide a significant improvement in
    performance [378]. 4.3.6. Physiological Signals-Based Biometrics Brain biometrics
    and heart biometrics are the major modalities in this category, which are an emerging
    branch of biometric technology. Brain biometrics are based on EEG (electroencephalogy)
    signals, which are recordings of the electrical pulses of the brain activity collected
    from a person’s scalp using electrodes. Similarly, the heart signals are collected
    from the chest, finger, or arm using electrical, optical, acoustic and mechanical
    sensors. The resultant signals are referred to as ECG (electrocardiography), PPG
    (photoplethysmography), PCG (phonocardiogram), and SCG (seismocardiogram), respectively.
    Other physiological signals used for biometric applications include the EMG (electromyography),
    EDA (electrodermal activity), and EOG (electrooculogram). Deep learning contributes
    to brain, heart, and other physiological signals-based biometrics in two aspects:
    automatic representation learning and classification. Various models based on
    MLPs, LSTM, and CNNs [379] are proposed to directly learn deep representations
    from the physiological signals for biometric recognition for end-to-end systems.
    In addition, since the salient features of these signals are usually in the frequency
    domain, pretraining steps such as Fourier transform and wavelet package decomposition
    were adopted in many works to convert the signal into the frequency or time-frequency
    domain [380]. Other pretraining steps include constructing functional connectivity
    networks using multichannel EEG signals, followed by CNNs [381] or GCNNs [382]
    to learn structural representations from the networks. The acquisition of physiological
    data from human subjects is a difficult and time-consuming task, and therefore,
    the datasets are usually small. To address this issue, generative models based
    on AEs [383,384] and GANs [385] were proposed for data augmentation and incomplete
    data reconstruction. The results show a significant improvement in recognition
    performance with data augmentation. We refer to [386] for a comprehensive survey
    in this area. 4.3.7. Databases Databases commonly used for biometric performance
    evaluation are summarized in Table 3. We separate the databases for different
    biometric modalities. Table 3. Databases for biometric applications. 4.4. Remote
    Sensing Systems In general, remote sensing refers to non-contact and long-distance
    detection technology, which uses remote sensors to capture the radiation and reflection
    characteristics of objects on the earth’s surface [391]. Remote sensors, typically
    mounted on airborne and satellite platforms, are the core component in any remote
    sensing system, and can be classified into two types: passive and active sensors.
    Passive sensors measure energy that is naturally available, and are usually optical
    and camera-based, such as panchromatic and multispectral sensors, providing images
    in the visible range. Different from passive sensors, active sensors such as radar
    sensors receive the reflection of the impulse they emitted and are less influenced
    by the environment. With the availability of remote sensing imagery, DL methods
    have seen a rapid surge of interest from the remote sensing community and made
    a remarkable breakthrough. Deep learning in remote sensing confronts some new
    challenges: (1) Multiple image modalities. Multimodality remotely sensed datasets,
    such as multi- and hyperspectral data, light detection and ranging (LiDAR) data,
    and synthetic aperture radar (SAR) data differ from each other not only in the
    imaging mechanism but also in the imaging geometries and contents. Different data
    modalities are often complementary. The design of deep models is crucial in making
    the most of these data. (2) Growing importance of prior knowledge. Remote sensing
    data presents the real geodetic measurements for the earth surface, with each
    data point containing geophysical or biochemical information. Hence, minimizing
    distortion and improving data quality are especially crucial to remote sensing
    tasks. Pure data-driven models, without any prior knowledge, will lead to possible
    misinterpretation or blind trust. In the following sections, we will investigate
    how deep learning models are modified to cope with these two challenges from the
    perspective of image classification, scene classification, object detection and
    segmentation, and multimodal data fusion. 4.4.1. Image Classification Image classification
    is one of the most active research topics in remote sensing, which aims to assign
    semantic labels to every pixel in the image. Various works used machine learning
    algorithms such as random forest (RF) and support vector machine (SVM) to improve
    the accuracy. The advent of deep learning pushed the boundary even further. Chen
    et al. [392] proposed the first deep learning-based classification model, which
    uses a stacked AE to extract hierarchical spectral information. Soon afterwards,
    DBN [393], and sparse SAEs [394] were introduced to learn stable and effective
    features for hyperspectral data classification. Makantasis et al. [395] proposed
    to use CNNs as feature extractor and a multiLayer perceptron (MLP) responsible
    for the classification task. Santara et al. [396] constructed an end-to-end CNN-based
    framework and generated band specific spectral-spatial features for classification.
    In [397], Li et al. proposed a pixel-pair strategy for CNN-based classification,
    and achieved state-of-the-art performance even with limited training samples.
    Recent improvements can be attributed to (1) specially designed architectures
    such as Siamese CNNs [398], the capsule network [399], and Transformer [400],
    and (2) improved feature representation [401,402]. 4.4.2. Scene Classification
    Scene classification, which aims to automatically classify the image into the
    category it belongs to, has become one of the most active areas of high-resolution
    remote sensing image understanding, and attracted growing attention in the past
    decade [403]. It is a relatively challenging task because even different scenes
    may contain objects with similar features. Such variations make scene classification
    considerably difficult. Compared with traditional approaches based on bag-of-visual-words
    (BoVW), deep models have distinct advantages in learning more abstract and discriminative
    features, thereby providing much better classification accuracy. Hence, most of
    the recent works paid much attention to building a robust and informative scene
    representation. Using PTMs [404,405] is a popular technique in scene classification,
    as it is difficult and time-consuming to train a CNN model from scratch with a
    limited number of training samples. Fine-tuning [406] also helps the PTMs adapt
    to the specific task and learn oriented feature representation for remote sensing
    images. Another family of methods focuses on feature selection [407], features
    aggregation [402,408,409], and fusion [410,411,412]. For example, Lu et al. [409]
    proposed a supervised feature encoding module and a progressive aggregation strategy
    to make full use of intermediate features. To cope with large intra-class variance
    caused by large resolution variance and confusing information, Zhao et al. [412]
    proposed a multigranularity multilevel feature fusion branch to extract structural
    information and fine-grained features. 4.4.3. Object Detection With the rapid
    development of intelligent earth observation, automatic interpretation of remote
    sensing data has become increasingly important. Object detection in remote sensing
    aims to identify ground objects of interest such as vehicles, roads, buildings
    or airports from images and correctly classify them. In recent years, DL-based
    methods have been dominating this research area and made remarkable progress.
    Preliminary work for object detection in remote sensing images [413,414,415] borrows
    the coarse-localization-fine-classification pipeline and CNN models from the computer
    vision community. Zhu et al. [416] introduced AlexNet CNN [37] to extract robust
    features, combined them with an image segmentation method for localization, and
    finally employed an SVM classifier for detection. Chen et al. [413] presented
    a hybrid DNN (HDNN) for vehicle detection, which used a DNN as feature extractor
    and a MLP as classifier. To further adapt CNN models to remote sensing object
    detection, researchers also take the rotation-invariant characteristic and context
    information into consideration. Cheng et al. [417] used and a newly proposed rotation-invariant
    layer to cope with object rotation variations. To cope with performance drop resulting
    from object appearance differences, Zhang et al. [418] proposed to use attention-modulated
    features as well as global and local contexts to detect objects from remote sensing
    images. The advent of two-stage models such as RCNN [236] and faster RCNN [44],
    and one-stage methods such as YOLO series [46,419,420], made another leap in detection
    accuracy. By adapting two-stage models, most work focuses on improving the quality
    of region proposals [421,422,423]. More recently, advanced deep architectures
    such as Transformer[424] have also been introduced to advance the performance.
    4.4.4. Multimodal Data Fusion Data fusion, as a fundamental task in the field
    of remote sensing, has been extensively studied for decades. With the availability
    of multimodal remote sensing data, data fusion techniques are expected to integrate
    complementary information and help boost the performance of downstream tasks.
    We briefly discuss two main topics in this area: (1) pansharpening, and (2) task-specific
    data fusion. The goal of pansharpening is to integrate panchromatic (PAN) images
    and multispectral (MS) images, which are two types of optical remote sensing images
    with inevitable trade-off between spectral diversity and spatial resolution [425].
    In general, PAN images provide high spatial resolution but contain limited spectral
    information, while MS images have much higher spectral resolution with less spatial
    details. The key point in pansharpening is that while ensuring the spatial increment,
    the detail injection implemented should preserve the unified spatial–spectral
    fidelity for fusion products [426]. The first DL-based pansharpening was proposed
    by Huang et al. [427], in which a modified sparse denoising autoencoder (MSDA)
    algorithm was used to learn the relationship between high-resolution (HR) and
    low-resolution (LR) image patches. Masi et al. [428] utilized a shallow CNN to
    upsample the intensity band after the intensity–hue–saturation (IHS) transform.
    As pansharpening aims to maximize the spatial injection and minimize spectral
    distortion, much effort has been devoted to making network architectures good
    at extracting spatial details while preserving spectral information [429,430].
    To this end, Yuan et al. [431] proposed a multiscale and multidepth CNN to better
    fulfill spatial detail extraction and improve the fusion quality. Yang et al.
    [432] designed structural and spectral preservation modules and trained the network
    in the high-pass domain for more effective spatial injection. Zhang et al. [426]
    introduced saliency analysis as a measure to indicate the demand for spectral
    and spatial details, and treated them differently in the CNN based fusion process.
    Unlike pansharpening aiming only at producing high-quality fusion products, task-specific
    data fusion usually leverages feature-level or decision-level fusion with specific
    downstream tasks such as land cover mapping and object detection in a unified
    framework [433]. A simple way of utilizing multimodal data for training a NN-based
    model is to concatenate them into an N-dimensional input. In [434], Lagrange et
    al. found that combining a digital surface model channel with RGB data in the
    training process can help retrieve some specific classes. For the image classification
    task, Hong et al. [433] designed an extraction Network (Ex-Net) and a fusion Network
    (Fu-Net) to learn from two different types of modality. Experiments on HS-LiDAR
    and MS-SAR data reveal the superiority of multimodal data fusion. Irwin et al.
    [435] combined SAR, optical imagery and airborne LiDAR data for surface water
    detection, in which a multilevel decision tree is developed to synthesize the
    results from a single data source. 4.4.5. Codes, Pretrained Models, and Benchmark
    Datasets To fulfill the demand of training deep learning-based models, a number
    of datasets are proposed by research groups in the earth observation community.
    Details of the publicly available datasets are shown in Table 4. Table 4. Databases
    for remote sensing applications. 4.5. Intelligent Sensor Based Cybersecurity Systems
    Cybersecurity is the practice of protecting critical systems and sensitive information
    from digital attacks, such as intrusion attacks and malware attacks. This section
    briefly reviews deep learning applications used in the detection of the four types
    of attacks: intrusion detection, malware detection, phishing detection, and spam
    detection. 4.5.1. Intrusion Detection Intrusion detection has become an essential
    task in the cybersecurity field. The objective of an intrusion detection system
    (IDS) is to distinguish malicious activities in network traffic and protect sensitive
    information. The following is a summary of the common attack types used in intrusion
    attacks. (1) Denial-of-Service (DoS) attacks, such as botnet and smurf, aim to
    crash a machine or network service by flooding it with traffic, rendering it inaccessible
    to its users. (2) Distributed DoS (DDoS) attacks aim to interrupt the regular
    traffic of a targeted network by flooding the target or its surrounding infrastructure
    with huge quantities of network traffic. (3) User-to-Root (U2R) attacks attempt
    to get root access as a normal user by exploiting system weaknesses. (4) Remote-to-Local
    (R2L) attacks are attempts by a remote system to obtain unauthorized access to
    the root. (5) Password-based attacks attempt to obtain access to a system by attempting
    to guess or crack passwords. (6) Injection attacks use well-designed instructions
    or queries to steal sensitive information or obtain unauthorized access to a system.
    Deep learning-based techniques have demonstrated exceptional performance for intrusion
    detection in complicated, large-scale traffic conditions. For example, several
    recent methods [446,447,448] have introduced neural networks based on DBNs to
    achieve improved detection accuracy on the NSL-KDD dataset [449]. However, DBNs-based
    methods have the drawback that they are computationally unfeasible to train in
    an end-to-end supervised manner. AEs are widely used as a preprocessing step in
    intrusion detection, followed by the application of a deep learning classifier.
    For example, Abolhasanzadeh et al. [450] proposed an AE-based model with seven
    layers to extract compact and discriminant representations of the input data,
    and achieved high detection accuracy on the NSL-KDD dataset. In addition, several
    recent methods based on AEs have considered using stacked AEs for intrusion detection
    [451,452,453,454]. Vu et al. [455] proposed combining variational AEs [94] with
    several classifiers, such as naive Bayes, SVM, decision tree, and random forest
    classifiers for intrusion detection, and achieved good results on the NSL-KDD
    and UNSW-NB15 datasets. These AEs-based methods have the drawback of requiring
    an additional model to perform classification in additional to the AEs. To address
    this drawback, recent deep learning-based methods increasingly use CNNs for intrusion
    detection systems [456,457]. Especially, the LSTM networks have proven very useful
    because they have the strong ability to process data in intrusion detection that
    is often structured as sequences of features evolving over time. Several intrusion
    detection methods in the literature are based on LSTM networks [458]. Among these
    methods, the one proposed in [459] adopts a three-layer LSTM network, which achieves
    high detection accuracies on the ADFA-LD and UNM datasets. Similarly, the method
    proposed in [460] adopts a cascade of three LSTM network modules, which achieve
    an impressive intrusion detection accuracy by combining them through a voting
    mechanism. In addition, to take full advantage of LSTMs in processing time series
    data and CNNs in extracting spatial patterns, several recent methods consider
    combinations of LSTMs and CNNs for intrusion detection. For example, the method
    described in [461] uses both a CNN and a hybrid LSTM-CNN to perform the intrusion
    detection. The method developed in [462] uses a hybrid LSTM-CNN model based on
    the LeNet. GANs have been used for intrusion detection because their advantage
    of learning in an unsupervised manner is very suitable for learning the characteristics
    of data distributions in specific situations (e.g., under normal conditions) in
    the IDS context. For example, Schlegl et al. proposed a CNN-based GAN [463] to
    learn the characteristics of data captured under normal conditions, which is then
    used to detect anomalies by computing the distance between freshly captured data
    and normal data. In addition, Zenati et al. [464] proposed to further improve
    the computational efficiency of the GAN in [463] to achieve a faster detection.
    4.5.2. Malware Detection Malware is a malicious software that is disseminated
    to compromise a system’s security, integrity, and functioning. The types of malware
    include viruses, worms, trojans, backdoors, spyware, botnets, and so on. Deep
    learning in this field is mainly concentrated on malware detection and analysis.
    The developed techniques can be generally classified into two categories: PC-based
    and Android-based malware detection. (1) PC-based malware detection. Deep learning
    can be used to learn the language of malware through the executed instructions,
    and thus to help extract resilient features. To achieve this goal, Pascanu et
    al. [465] firstly proposed a method based on the Echo State Network (ESN) and
    RNN to classify malware samples. Later, David et al. [466] proposed a DeepSign
    to automatically generate malware signatures, which does not rely on any specific
    aspect of the malware. This model uses stacked denoising AE (SDAE) and creates
    an invariant compact representation of the general behavior of the malware. In
    2017, Yousefi-Azar et al. [467] proposed a generative feature learning-based method
    for malware classification and achieved a network-based anomaly detection using
    AE. Recently, two GAN-based methods for malware detection have been proposed [468,469].
    Specifically, in [468], Kim et al. adopted a transferred deep convolutional GAN
    (tDCGAN) to generate the fake malware and learn to distinguish it from the real
    one, which achieves robust zero-day malware detection. In [469], latent semantic
    controlling GAN (LSCGAN) is proposed to detect obfuscated malware, where features
    are first extracted using a VAE and then transferred to a generator to generate
    virtual data from a Gaussian distribution. (2) Android-based malware detection.
    Malicious Android apps detection is vital and highly demanded by app markets.
    Deep learning models can automatically learn features without any human interference.
    The first investigation of applying deep learning to Android malware detection
    was Droid-Sec [470], which learns more than 200 features from both the static
    and dynamic analysis of Android apps for malware detection. Later, Hou et al.
    [471] proposed DroidDelver to deal with Android malware threats, which firstly
    categorizes the API calls of the Smali code into a block and then applies a DBN
    for newly unknown Android malware detection. Su et al. [472] proposed the DroidDeep
    for Android malware detection, which is also a DBN-based model. In 2017, CNN was
    firstly applied to Android malware detection context by McLaughlin et al. [473].
    They used CNN to extract raw opcode sequences from disassembled code, with the
    purpose of removing the need to count the vast number of distinct n-grams. Later,
    Nix et al. [474] proposed a CNN-based framework for Android malware classification,
    which gets help from API-call sequences. Specifically, a pseudo-dynamic program
    analyzer is firstly used to generate a sequence of API calls along the program
    execution path. Then, the CNN learns sequential patterns for each location by
    performing convolution alongside the sequence and sliding the convolution window
    down the sequence. Recently, Jan et al. [475] employed a Deep Convolutional GAN
    (DCGAN) for investigating the dynamic behavior of Android applications. 4.5.3.
    Phishing Detection Phishing is a form of fraud in which the attacker tries to
    learn sensitive information such as login credentials or account information by
    sending emails or other communication messages. Therefore, phishing detection
    is a vital task in cybersecurity. Deep learning has also been researched to facilitate
    the solving of this task. For example, Zhang et al. [476] proposed to detect phishing
    email attacks by using a 3-layer FCN which consists of one input layer, one hidden
    layer, and one output layer. In addition, in this network, tanh and sigmoid activation
    functions are used to better fit the data. Mohammad et al. [477] proposed a self-structuring
    neural network for detecting phishing website attacks. It can automate the process
    of structuring the network, which is important for extracting the dynamic phishing-related
    features. Benavides et al. [478] investigated a variety of networks for cyber-attacks
    classification and found that the most regularly utilized are DNN and CNN. Although
    diverse deep learning-based methods have been presented and analyzed, there is
    still a research gap in the application of deep learning in cyber-attacks recognition.
    4.5.4. Spam Detection The research of spam detection can be basically classed
    into text spam detection and multimedia spam detection. (1) Text Spam Detection.
    Text-based spam content generally includes malicious URLs, hashtags, fake reviews/comments,
    posts, SMS, chat messages, etc. Wu et al. [479] developed a deep learning-based
    method to identify spam on Twitter, which employs MLP classifiers to learn the
    syntax of many tweets to perform pre-processing and create high-dimensional vectors.
    It outperforms the traditional feature-based machine learning methods such as
    random forest. Jain et al. [480] proposed a semantic CNN (SCNN) that employs a
    CNN with an additional semantic layer for malicious URL detection, where the semantic
    layer is a Word2Vec network used to map the word. Thejas et al. [481] proposed
    a hybrid deep network for click fraud detection, which involves an ANN and auto-encoders
    (AEs). The ANN is used to gain learning and pass knowledge to the other layers
    in the hybrid neural network, while the AEs are used to acquire the distribution
    of human clicks. The proposed hybrid network achieved high accuracy on a real-time
    dataset of ad-clicks data. Singh et al. [482] proposed using a CNN to classify
    the aggressive behavior on social networks, which achieved significant accuracy.
    Ban et al. [483] proposed using a Bi-LSTM network to extract features from Twitter
    text for spam detection. (2) Multimedia Spam Detection. Deepfake is a currently
    famous technology that synthesizes media to create falsified content by replacing
    or synthesizing faces, speech, and manipulating emotions. It uses deep neural
    networks to learn from large and real samples to simulate human behavior, voices,
    expressions, variations, etc., and thus, its generated content seems genuine [484].
    This technology can be valued in many applications such as movies, games, education,
    etc. However, it can seriously eradicate trust due to giving forged reality [485].
    It also brings many challenges for the spam detection, as its synthetic media
    is generated by deep learning techniques. Therefore, an arms race between Deepfake
    techniques and spam detection algorithms has begun. For example, Hasan et al.
    [485] proposed employing a blockchain-based Ethereum smart contract framework
    to deal with media content authenticity. This system can preserve all historical
    information related to the creator and publisher of the digital media, and then
    it checks the authenticity of video content by tracking whether it is from some
    reliable or trustworthy source or not. Fagni et al. [486] proposed a TweepFake
    to detect deepfake tweets, which involves CNN and bidirectional gate recurrent
    unit (GRU). For more advanced neural networks for multimedia spam detection we
    refer to the survey paper [487]. 4.5.5. Codes, Pretrained Models, and Benchmark
    Datasets Various implementation codes and pretrained models of many of the above
    introduced methods can be found in the references provided in Section 2.5.2. The
    popular benchmark datasets for intrusion detection are summarized in Table 5.
    Table 5. Benchmarks for cybersecurity intrusion detection. 4.6. Internet of Things
    (IoT) Systems With the development of commodity sensors and increasingly powerful
    embedded systems, the research of IoT is rapidly emerging and developing. According
    to the different sensor systems in the IoT, we describe deep learning in this
    domain from four aspects: smart healthcare, smart home, smart transportation,
    and smart industry. 4.6.1. Smart Healthcare Deep learning and IoT in smart healthcare
    systems can be researched in the following two aspects. (1) Health Monitoring.
    Sensor-equipped mobile phones and wearable sensors enable a number of mobile applications
    for health monitoring. In these applications, human activity recognition is used
    to analyze health conditions [493]. However, extracting effective representative
    features from the massive raw health-related data to recognize human activity
    is one of the significant challenges. Deep learning is employed for this purpose
    in these applications. For example, Hammerla et al. [494] proposed to use CNNs
    and LSTM to analyze the movement data and then combine the analysis results to
    make a better freezing gaits prediction for Parkinson disease patients. Zhu et
    al. [495] proposed using a CNN model to predict energy expenditure from triaxial
    accelerometers and heart rate sensors, and achieved promising results to relieve
    chronic diseases. Hannun et al. [496] proposed using a CNN with 34 layers to map
    from a sequence of ECG records obtained by a single-lead wearable monitor to a
    sequence of rhythm classes, and achieved higher performance than that of board
    certified cardiologists in detecting heart arrhythmias. Gao et al. [497] proposed
    a novel recurrent 3D convolutional neural network (R3D), which can extract efficient
    and discriminating spatial-temporal features for action recognition through aggregating
    the R3D entries to serve as an input to the LSTM architecture. Therefore, with
    wearable devices, it can monitor health state and standardize the way of life
    at any time. Deploying deep learning-based methods on low-power wearable devices
    can be very challenging because of the limited resources of the wearable devices.
    Therefore, some research works employing deep learning for health monitoring focus
    on addressing this issue. For example, Ravi et al. [498] utilized a spectral domain
    preprocessing for the data input to the deep learning framework to optimize the
    real-time on-node computation in resource-limited devices. (2) Disease Analysis.
    Using the comparatively cheap and convenient mobile phone-based or wearable sensors
    for disease analysis is increasingly important for healthcare. Deep learning has
    been widely used in assisting this. For example, CNNs have been used to automatically
    segment cartilage and predict the risk of osteoarthritis by inferring hierarchical
    representations of low-field knee magnetic resonance imaging (MRI) scans [499].
    Another work using CNNs is to identify diabetic retinopathy from retinal fundus
    photographs [500], which has achieved both high sensitivity and specificity over
    about 10,000 test images with respect to certified ophthalmologist annotations.
    Other examples of employing deep learning for disease analysis include the work
    of Zeng et al. [501], where a deep learning-based pill image recognition model
    is proposed to identify unknown prescription pills using mobile phones. In addition,
    Lopez et al. [502] proposed a deep learning-based method to classify whether a
    dermotropic image contains a malignant or benign skin lesion. Chen et al. [503]
    proposed a ubiquitous healthcare framework UbeHealth for addressing the challenges
    in terms of network latency, bandwidth, and reliability. Chang et al. [504] proposed
    a deep learning-based intelligent medicine recognition system ST-MedBox, which
    can help chronic patients take multiple medications correctly and avoid taking
    wrong medications. 4.6.2. Smart Home Smart home enables the interconnection of
    smart home devices through home networking for better living. In recent years,
    a variety of systems has been developed with the application of deep learning
    techniques. Two main kinds of smart home applications are indoor localization
    and home robotics, described below. (1) Indoor Localization. With the spread of
    mobile phones, indoor localization has become a critical research topic because
    it is not feasible to employ Global Positioning System (GPS) in an indoor environment.
    Indoor localization covers several tasks such as baby monitoring and intruder
    detection. However, there are a lot of challenges to achieve these task, e.g,
    the multi-path effect, the delay distortion, etc. In addition, high processing
    speed and accuracy are essential for indoor localization systems. Fingerprinting-based
    indoor localization is a powerful strategy to address these challenges. For example,
    Gu et al. [505] proposed a semisupervised deep extreme learning machine (SDELM),
    which takes advantage of semi-supervised learning, deep learning, and extreme
    learning machine, and achieves a satisfactory localization performance while reducing
    the calibration effort. Mohammadi et al. [506] proposed a semisupervised DRL model,
    which uses VAEs as the inference engine to generalize the optimal policies. Wang
    et al. [507] proposed using an RBM with four layers to process the raw CSI data
    to obtain the locations. One challenge of applying deep learning in this field
    is the lack of suitable databases for large indoor structures such as airports,
    shopping malls, and convention centers. In addition, DRL-based fingerprinting
    is another area that has not received much attention. However, DRL is gaining
    enormous momentum and may push the boundaries of performance. (2) Home Robotics.
    Equipped with commodity sensors, home robots can perform a variety of tasks in
    home environments. For example, popular tasks include localization, navigation,
    map building, human–robot interaction, object recognition, and object handling.
    However, case-specific strategies are needed for guiding a mobile robot to any
    desired locations when GPS is not available. In [508], a deep learning-based method
    for autonomous navigation to identify markers or objects from images and videos
    is proposed, which uses pattern recognition and CNNs. Levine et al. [509] proposed
    to train a large CNN to achieve successful grasps of the robot gripper using only
    monocular camera images. This method can predict the probability of the task-space
    motion of the gripper, and is independent of the camera calibration or the current
    robot pose. Therefore, it greatly improves the hand-eye coordination of a robot
    for object handling, and thus improve human–robot interaction. Reinforcement learning
    and unsupervised learning will be promising in this area because it is inefficient
    to manually label data that may change dramatically depending on the user and
    environment in a smart home. 4.6.3. Smart Transportation Nowadays, intelligent
    transportation systems heavily depend on the historical and real-time traffic
    data collected from all kinds of sensors, such as inductive loops, cameras, crowd-sourcing,
    and social media. Deep learning in various smart transportation systems currently
    has the following focuses. (1) Traffic Flow Prediction. Traffic flow prediction
    is a basic and essential problem for transportation modeling and management in
    intelligent transportation systems. Deep learning has been increasingly used in
    this area to exploit the rich amount of traffic data and thus extract highly representative
    features. For example, Huang et al. [510] proposed using a DBN to capture effective
    features from each part of road traffic networks, and then these features from
    related roads and stations are grouped to explore the nature of the whole road
    traffic network to predict traffic flow. Lv et al. [511] proposed a stack of AEs
    model to extract features from historical traffic data to make the prediction.
    In addition, there are a lot of works focused on using deep learning for traffic
    and crowd flow prediction [512,513]. Most current methods to predict traffic flow
    are for short-term prediction while long-term prediction horizons can reduce costs
    and provide better intelligent transportation system management. Research in this
    field is very challenging due to the difficulty of achieving high accuracy of
    long-term prediction. A promising solution is using data-driven methods. (2) Traffic
    Monitoring. Traffic monitoring is one of the most popular research fields in smart
    transportation. Its aim is to both reduce the workload of human operators and
    warn drivers of dangerous situations. Therefore, traffic video analytics is a
    key part of traffic monitoring. One of the key tasks in traffic monitoring is
    object detection, which includes pedestrian detection, on-road vehicle detection,
    unattended object detection, and so on. As in other tasks (Section 4.1), deep
    neural networks for object detection have also played an important role here,
    and have significantly improved the accuracy and speed of traffic monitoring.
    For example, Ren et al. [44] proposed using a region proposal network (RPN), which
    shares full-image convolutional features with the detection network and can achieve
    nearly cost-free region proposals. Redmon et al. [46] proposed to formulate frame
    object detection as a regression problem, which separates the processes of recognizing
    bounding boxes and computing class probabilities. Another important task in traffic
    monitoring is object tracking, which plays a significant role in surveillance
    systems, including tracking suspected people or target vehicles for safety monitoring,
    urban flow management, and autonomous driving. Deep learning has also been widely
    in this area. For example, Vincent et al. [451] proposed building deep networks
    based on stacking layers of denoising AEs for this purpose. Li et al. [514] proposed
    a robust tracking algorithm based on a single CNN to learn effective feature representations
    for the target object. Ondruska et al. [515] proposed an end-to-end object tracking
    approach, which uses RNN to directly map from raw sensor input to object tracks
    in sensor space. (3) Autonomous Driving. Autonomous driving is crucial to city
    automation. Vision-based autonomous driving systems have two main paradigms: mediated
    perception-based and behavior reflex-based. The underlying idea of mediated perception-based
    methods is to recognize multiple driving-relevant objects, such as lanes, traffic
    signs, traffic lights, cars, and pedestrians. However, most of these systems rely
    on highly precise instruments and thus bring unnecessarily high complexity and
    cost. Therefore, current autonomous driving systems focus more on real-time inference
    speed, small model size, and energy efficiency [516]. Deep learning is adopted
    here to learn a map from input images/videos to driving behaviors, or to construct
    a direct map from the sensory input to a driving action. For example, Bojarski
    et al. [517] trained a CNN to map raw pixels from a single front-facing camera
    directly to steering commands. Xu et al. [518] proposed using an end-to-end FCN-LSTM
    network to predict multimodal discrete and continuous driving behaviors. Readers
    interested in finding more deep learning-based methods for this topic are referred
    to the survey paper [519]. Currently, most papers on deep learning for self-driving
    cars focus on perception and end-to-end learning. Although deep learning has made
    great progress in the accuracy of object detection and recognition, the level
    of recognition detail still needs to be improved to perceive and track more objects
    in real time in the autonomous driving scene. In addition, the gap between image-based
    and 3D-based perception needs to be filled. 4.6.4. Smart Industry Smart industry,
    also known as industry 4.0, represents the latest trend of the manufacturing revolution.
    In the era of smart industry, explosive data produced in manufacture can be analyzed
    by deep learning to empower the manipulators with human-like abilities. Deep learning
    in several main research topics are described as follows. (1) Manufacture Inspection.
    Manufacture inspection refers to inspecting and assessing the quality of products.
    Various deep learning-based visual inspection methods have been proposed and become
    a powerful tool to extract representative features and thus to detect product
    defects in large scale production. For example, Li et al. [520] proposed a CNN-based
    classification model to implement a robust inspection system, which significantly
    improves the efficiency. Park et al. [521] proposed a generic CNN-based method
    to extract patch features and predict defect areas through thresholding and segmenting
    for surface integration inspection. Deep learning based methods have achieved
    the best experimental results so far in this domain, with accuracies ranging from
    86.20% up to 99.00%. (2) Fault Assessment. Fault assessment is crucial to building
    smart factories. Specific application tasks include machinery conditions monitoring,
    incipient defects identification, root cause of failures diagnosis, fault detection
    of rotating machines with vibration sensors, bearing diagnosis, tool wear diagnosis,
    and so on. This information can then be incorporated into manufacturing production
    and control. Deep learning has also been used here to solve these tasks. For example,
    Cinar [522] proposed using transfer learning models for equipment condition monitoring.
    Chen et al. [523] investigated the latest deep learning based methods for machinery
    fault diagnostics. Wang et al. [524] proposed a wavelet-based CNN to achieve automatic
    machinery fault diagnosis. Specifically, a wavelet transform is used to transfer
    a one-dimensional vibration signal into a two-dimensional one which is then fed
    into the CNN model. Wang et al. [525] proposed a continuous sparse auto-encoder
    (CSAE), which incorporates a Gaussian stochastic unit into its activation function
    to extract nonlinear features of the input data. Lei et al. [526] proposed a sparse
    filtering based two-layer neural network model, which is used to learn representative
    features from the mechanical vibration signals in an unsupervised manner. Generally,
    AE fits well with high-dimensional data and thus is a good technique of choice
    for fault assessment. (3) Others. Deep learning has also been used in many sectors
    of renewable power systems. For example, Alassery et al. [527] proposed using
    neural networks for solar radiation prophesy models for green energy utilization
    in the energy management system. Another promising application of deep learning
    in the smart industry field is smart agriculture. For example, Khan et al. [528]
    proposed an optimized smart irrigation system for effective energy management,
    which overcomes the problems of transmitting data failure, energy consumption,
    and network lifetime reduction in the field of IoT-based agriculture. DNNs have
    also been applied in waste management. For example, Kshirsagar et al. [529] proposed
    using a customized LeNet model to classify garbage into cartons and plastics.
    4.6.5. Codes, Pretrained Models, and Benchmark Datasets Implementation codes and
    pretrained models of many of the above introduced applications can be found in
    the references provided in Section 2.5.2. In addition, some commonly used datasets
    suitable for building deep learning applications in IoT are listed as follows.
    (1) CGIAR Dataset: http://www.ccafs-climate.org/ (accessed on 2 November 2022)
    (2) Educational Process Mining: https://archive.ics.uci.edu/ml/datasets/mining
    (accessed on 2 November 2022) (3) Commercial Building Energy Dataset: https://combed.github.io/
    (accessed on 2 November 2022) (4) Electric Power Consumption: https://archive.ics.uci.edu/ml/datasets/power
    (accessed on 2 November 2022) (5) AMPds Dataset: http://ampds.org/ (accessed on
    2 November 2022) (6) Uk-dale Dataset: https://jack-kelly.com/data/ (accessed on
    2 November 2022) (7) PhysioBank Databases: https://physionet.org/data/ (accessed
    on 2 November 2022) (8) T-LESS: http://cmp.felk.cvut.cz/t-less/ (accessed on 2
    November 2022) (9) Malaga Datasets: http://datosabiertos.malaga.eu/dataset (accessed
    on 2 November 2022) (10) ARAS Human Activity Datasets: https://www.cmpe.boun.edu.tr/aras/
    (accessed on 2 November 2022) 4.7. Natural Language Processing (NLP) NLP is a
    crucial and widely researched field. It is a subfield of AI that is concerned
    with enabling computers to understand text and spoken language in much the same
    way humans do. Due to the ambiguities of human language, NLP is a very challenging
    problem. Some involved popular tasks include speech recognition, sentiment analysis,
    machine translation, and question answering, introduced in the following. 4.7.1.
    Speech Recognition Speech recognition, also called speech-to-text, refers to the
    task of enabling a computer to translate human speech into text. There are many
    algorithms for speech recognition, but deep learning provides more advanced solutions.
    This is because DNNs can combine several aspects of the voice signals such as
    grammar, syntax, structure, and composition to understand and process human speech.
    The initial success in speech recognition was achieved by Zweig et al. [530] on
    a small-scale dataset with an error rate of 34.8%. After that, more advanced neural
    networks were proposed to improve recognition accuracy such as the representative
    networks Segmental RNN, EdgeRNN, and Quanaum CNN [531,532,533]. Comprehensive
    introductions of architectures for speech recognition can be found in recent survey
    papers [534,535,536]. 4.7.2. Sentiment Analysis Sentiment analysis refers to the
    task of determining the attitude of reviewers, more specifically, the task of
    determining whether data are positive, negative, or neutral. It focuses on the
    polarity of a text but also aims to detect specific feelings and emotions such
    as happy and sad, and intentions such as interested and not interested. Popular
    types of sentiment analysis include graded sentiment analysis, emotion detection,
    and multilingual sentiment analysis. When applying deep learning to sentiment
    analysis, it is usually formulated as a classification problem, where DNN takes
    texts as input and outputs a category representing the sentiment class. For example,
    the Bag-of-Words (BoW) model is one of the most reputable methods for document
    level sentiment classification [537]. The Recursive AE (RAE) network proposed
    by Socher et al. is the first model for sentence level sentiment classification
    [538]. The Adaptive RNN (AdaRNN) is a renowned model for aspect-level sentiment
    classification [539]. More introductions and discussions of DNNs for sentiment
    analysis are given in other review papers [540,541]. 4.7.3. Machine Translation
    Machine translation refers to the process of automatically translating text from
    one language to another without human involvement. This is one of the first applications
    of computing power, starting in the 1950s. Deep learning is well suited for this
    problem because DNNs can consider the whole input sentence at each step for generating
    the output sentence. This way, it can address the limitations of traditional methods
    that need to break an input sentence into words and phrases, and thus provide
    better translation quality. Basically, DNNs for machine translation have an encoder-decoder
    structure, where the encoder learns to extract the important features from its
    input sentence, and the decoder processes the extracted features and outputs the
    target sentence. For example, Kalchbrenner et al. [542] proposed a model with
    a CNN encoder and RNN decoder, which is the most original and classic structure
    of machine translation. More advanced architectures for machine translation are
    discussed in recent survey papers [543,544]. 4.7.4. Question Answering Question
    answering refers to building systems that can answer questions posed in a natural
    language by humans. For this problem, a DNN takes a specific question and a paragraph
    of text as input and aims to output an answer to this question based on the given
    text. Such DNNs need to understand the structure of the language and have a semantic
    understanding of the context and the question, thus, attention-based DNNs are
    needed to handle the complex training. More specifially, attention-based RNNs
    are suitable for this task. One of the most famous networks for question answering
    is R-Net [545], which employs a gated attention-based RNN. Other renowned architectures
    include FusionNet [546] and the recently emerging Transformer. For comprehensive
    introductions and discussions on question answering we refer to recent surveys
    [547,548]. 4.7.5. Codes, Pretrained Models, and Benchmark Datasets In addition
    to the references provided in Section 2.5.2, we refer to a survey of pretrained
    models for NLP [549]. A collection of renowned benchmark datasets that are widely
    used in NLP to evaluate different deep learning methods can be found at https://github.com/niderhoff/nlp-datasets/blob/master/README.md
    accessed on 2 November 2022. In addition, we list the most advanced pretrained
    language models as below. (1) BERT: https://github.com/google-research/bert (accessed
    on 2 November 2022) (2) GPT2: https://github.com/openai/gpt-2 (accessed on 2 November
    2022) (3) XLNet: https://github.com/zihangdai/xlnet (accessed on 2 November 2022)
    (4) RoBERTa: https://github.com/facebookresearch/roberta (accessed on 2 November
    2022) (5) ALBERT: https://github.com/google-research/albert (accessed on 2 November
    2022) (6) T5: https://github.com/google-research/T5 (accessed on 2 November 2022)
    (7) GPT3: https://github.com/openai/gpt-3 (accessed on 2 November 2022) (8) ELECTRA:
    https://github.com/google-research/electra (accessed on 2 November 2022) (9) DeBERTa:
    https://github.com/microsoft/DeBERTa (accessed on 2 November 2022) (10) PaLM:
    https://github.com/lucidrains/PaLM-pytorch (accessed on 2 November 2022) 4.8.
    Audio Signal Processing Audio signal processing was an early application of deep
    learning and is still one of its major application domains. Before deep learning,
    conventional methods for audio signal processing relied on handcrafted feature
    extraction, including the mel frequency cepstral coefficients (MFCCs), discrete
    cosine transform, and mel filter bank. Deep learning improves the processing performance
    by learning hierarchical representations from the audio signal using various models
    such as CNNs, RNNs, and GANs. These models are either trained using raw audio
    signals or classical features extracted from audio signals. This section briefly
    reviews the application of deep learning in the main scenarios of audio signal
    processing, including speech recognition, music and environmental sound analysis,
    localization and tracking, source separation, audio enhancement, and synthesis.
    4.8.1. Speech Recognition Different from the speech recognition in Section 4.7.1,
    here speech recognition refers to converting speech into sequences of words in
    the context, which is the base for any speech-based interaction system. It is
    widely used in virtual assistance systems such as Google Home, Apple Siri, and
    Microsoft Cortana, and speech transcriptions such as the YouTube caption function.
    For a long time, the modeling of speech was dominated by methods based on Gaussian
    mixture models and hidden Markov models due to their mathematical elegance. However,
    deep learning models dramatically reduced the word error rate on various recognition
    tasks, and hence became mainstream [550]. Popular models for speech recognition
    include LSTMs, GRUs [551], and a combination of LSTM layers with convolutional
    layers [552]. RNN blocks (including LSTM and GRU) are widely used to model the
    temporal correlations in speech sequences. Sequence-to-sequence models such as
    CTC (connectionist temporal classification) [553] and LAS (listen, attend and
    spell) [554] were also proposed. Transfer learning also plays an important role
    to enhance systems on low resource language with data from rich resources languages
    [555]. In addition to speech recognition, other applications related to speech
    are voice activity detection, speaker recognition (see Section 4.3.4), speech
    translation, and language detection [556]. 4.8.2. Music and Environmental Sound
    Analysis Music analysis involves low-level tasks such as onset/offset detection,
    fundamental frequency estimation, rhythm analysis, and harmonic analysis, and
    high-level tasks such as instrument detection, separation, transcription, segmentation,
    artist recognition, genre classification, discovery of repeated themes, music
    similarity estimation, and score alignment. These tasks were previously done by
    handcrafted features and conventional classifiers, and are now addressed by deep
    learning algorithms such as LSTMs, CNNs, and RNNs [557]. Modern systems integrate
    temporal modeling [558], applying 2D convolution on spectro-temporal inputs before
    doing 1D convolution to fuse representations across frequencies, followed by GRU
    to capture the sequence dependencies. Environmental sound analysis is often used
    in multimedia indexing and retrieval, acoustic surveillance, and context-aware
    devices. In terms of recognition tasks, deep learning models are mainly used for
    acoustic scene classification [559] (the scene labels can be home and street),
    acoustic event detection [560] (detect the start and end time of an event and
    assign a label to the event) and tagging [561] (predict multiple sound classes
    at the same time). 4.8.3. Source Separation, Enhancement, Localization and Tracking
    Source separation aims to recover one or several source signals from a given mixture
    signal. It is an important task in audio signal processing in real-world environments,
    and is often performed before speech recognition to improve the data quality.
    In single-channel setups (only one microphone is used), deep learning aims to
    model the single-channel spectrum or the separation mask of a target source [562].
    Convolutional and recurrent layers are often used in such models. Furthermore,
    some methods integrate supervised learning and supervised learning for source
    separation. For example, deep clustering [563] performs supervised learning to
    estimate embedding vectors for each time-frequency point, then cluster them in
    an unsupervised manner for separation. In multi-channel setups (e.g., audio data
    are collected from multiple microphones), the separation can be improved by taking
    into account the spatial locations of sources or the mixing process. In this case,
    the input of DNNs contains spatial features as well as spectral features, and
    the DNNs are used to estimate the weights of a multi-channel mask [564]. Audio
    enhancement aims to reduce noise and improve the audio quality. It is a critical
    component for robust systems. Deep learning in audio enhancement is mainly designed
    for reconstructing clean speech [565] or estimating masks [566] from noisy signals.
    To this end, researchers have proposed various models based on GANs [112], denoising
    AEs [567], CNNs [567] and RNNs [568]. For localization and tracking, deep neural
    networks are often trained on the phase spectrum [569], magnitude spectrum [570],
    and cross-correlation between channels [567]. The key is to design an architecture,
    e.g., a CNN, in a way that can learn the inter-channel information while extracting
    within-channel representations. 4.8.4. Sound Synthesis Sound synthesis can be
    used to generate realistic sound samples, speeches [571], music and art [572].
    It is achieved by generative models which learn the characteristics of sound from
    a database and output desired sound samples. When the deep learning model is operated
    to generate fake speeches for a given person, it is often referred to as DeepFake.
    Popular deep learning models used for sound synthesis include VAEs and GANs [573],
    where the sound is synthesized and upsampled from a low-dimensional latent representation.
    Autoregressive approaches such as LSTM and GRU, on the other hand, generate new
    samples iteratively based on previous samples [574]. With multiple stacked layers,
    such methods are able to process sound at different temporal resolutions. The
    WaveNet [575] is a popular model in this regard. It stacks dilated convolutional
    layers, providing context windows of reasonable size to allow the model to learn
    context information (e.g., speaker identity). Furthermore, the problem of autoregressive
    sample prediction is cast into a classification problem. Follow-up models such
    as the parallel WaveNet [576] further improve the computational efficiency during
    the training stage. 4.9. Robotic Systems Applications of deep learning in robotics
    are mainly aimed at addressing the challenges in learning complex and high-dimensional
    dynamics, learning control policies in dynamic environments, advanced motion manipulation,
    object recognition and localization, human action interpretation and prediction,
    sensor fusion, and task planning. In terms of deep learning architectures and
    strategies, existing methods for robotics can be classified into discriminative
    models, generative and unsupervised models, recurrent models, and policy learning
    models trained with reinforcement learning. This section briefly reviews how these
    models are used in different tasks. 4.9.1. Learning Complex Dynamics and Control
    Policies Robots often need to cope with states with high-level uncertainty, which
    requires the system to be able to quickly and autonomously adapt to new dynamics.
    This is important in tasks such as grasping new objects, traveling over surfaces
    with unknown or uncertain properties, managing interactions with a new tool or
    environment, and adapting to system degradation. Discriminative models, such as
    CNNs, were trained to assess the possibility of a specific robot motion for successfully
    grasping common office objects from image data [509]. DeepMPC [577] is a recurrent
    conditional deep predictive dynamics model for robotic food-cutting which is a
    controlling task with complex nonlinear dynamics. Transforming recurrent units
    were adopted to handle the time-dependent dynamics by integrating long-term information
    while allowing transitions in dynamics. Generative models such as AEs and GANs
    were also used to model the nonlinear dynamics of simple physical systems [578]
    and inverse dynamics of a manipulator [579]. Reinforcement learning plays a significant
    role in robotic control tasks. It is useful in learning to operate dynamic systems
    from partial state information. For example, it has been used to learn deep control
    policies for autonomous aerial vehicles control [580]. 4.9.2. Motion Manipulation
    It remains elusive to find robust solutions for robotic motion tasks such as grasping
    deformable or complex geometries, using tools, and actuating in dynamic environments.
    The corresponding challenges approached with deep learning methods are grasp detection,
    path and trajectory planning, and motion control. Deep learning models based on
    recurrent units, CNNs [581,582], and deep spatial AEs [583] have been used for
    learning visuomotor and manipulation action plans. 4.9.3. Scene/Object Recognition
    and Localization Scene and object recognition as well as localization are critical
    tasks for robot systems, since knowing what kind of objects are there in the environment
    and the locations of those objects is a prerequisite for performing other tasks.
    Deep learning methods have shown promising performance in recognizing and classifying
    objects for grasp detection [581,584], including advanced applications such as
    recognizing deformable objects and estimating their state and pose for grasping
    [585], semantic tasks [586], and path specification [587]. 4.9.4. Human Action
    Interpretation and Prediction Effective human–robot interaction requires the robot
    to have social skills, hence, the robot needs to be capable of inferring the intentions
    of humans and giving corresponding responses or actions accordingly. Such skills
    are critical in human–robot collaborative applications such as social robots,
    manufacturing, and autonomous vehicles. Interpreting and predicting human social
    behavior is a complex task, and it is difficult to formulate handcrafted solutions.
    Deep learning methods present great potential in this area. Learning by demonstration
    [581] is one way to solve the problem, where deep learning models are trained
    to learn manipulation action plans by watching unconstrained videos from the World
    Wide Web. In another study, a recurrent model was trained for the robot to learn
    grasping actions from a human collaborator [588]. 4.9.5. Sensor Fusion The use
    of multiple sources of information is necessary in robotic systems, as it provides
    a plethora of rich representations of the environment and brings proper redundancy
    to the system to deal with uncertainties. The challenge is how to construct meaningful
    and useful representations from the various data sources. Due to the hierarchical
    structures, deep learning models naturally support the processing and integration
    of high-level representations learned from different data streams. For example,
    generative models [589] and recurrent models [590] with unsupervised learning
    were proposed for integrating multi-modal sensorimotor data, including video,
    audio, and joint angles, for robotic systems. The level of abstraction depends
    on the application specifics. 4.9.6. Knowledge Adaptation in Robotic Systems Training
    deep learning models can be time-consuming and data demanding. A robotic system
    should be crafted in a way that is easy to adapt to a similar task. Transfer learning
    plays an important role in leveraging the knowledge gained by previous solutions
    of similar problems to solve new problems. To this end, researchers have used
    pretrained models [236] and proposed sim-to-real approaches [591] to facilitate
    the learning process and improve efficiency. For example, AlexNet, GoogleNet,
    and VGG models pretrained on the ImageNet dataset have been used for extracting
    high-level representations from image data for object recognition in robotic systems.
    The sim-to-real approaches offer a way to create the solution in a simulation
    environment and apply it to the real-world problem, which is a safer and more
    economical way than the traditional trial-and-error approaches. Furthermore, some
    works focused on extraction of domain invariant features [592] to transfer knowledge
    across domains. Other works proposed learning by imitation/demonstrations approaches
    to help robots to learn manipulation skills [593]. 4.10. Information Systems Deep
    learning has received increasing attention in information systems. Major applications
    include social network analysis, information retrieval, and recommendation. 4.10.1.
    Social Network Analysis Social network analysis is an important problem in data
    mining. It targets social media networks such as Facebook, Twitter and Instagram
    to analyze their patterns and infer knowledge from them. Network representation
    learning is an important task in social network analysis. It encodes network data
    into low-dimensional representations, namely network embeddings, which effectively
    preserves network topology and other attribute information, facilitating subsequent
    tasks such as classification [594], link prediction [595], semantic evaluation
    [596], anomaly detection [597], and clustering [598]. Semantic evaluation helps
    machines understand the semantic meaning of users’ posts in social networks and
    infer the users’ opinions. Examples of sentiment classification are the SemEval
    [599] and Amazon purchase review [596]. Link prediction is widely used in recommendation
    and social ties prediction applications, where deep learning models are trained
    to learn robust representations to enhance prediction performance and deal with
    the scalability issue [595]. Popular models for link prediction include RBMs,
    DBNs [600], and GNNs [601]. In some studies, transfer learning with pretrained
    models (e.g., RBMs) was applied to improve the training efficiency and address
    the insufficient data issue [600]. Anomaly detection aims at spotting malicious
    activities in social networks, such as spamming and fraud. Such activities can
    be interpreted as outliers that deviate from the majority of normal activities.
    Deep learning approaches based on network embedding techniques are receiving increasing
    attention in this field [597]. Anomaly detection is also related to crisis response
    [602] which focuses on detecting natural and man-made disasters, where deep learning
    models are trained to identify information from the posts and classify them into
    classes such as bushfire and earthquake. It is worth noting that attention mechanisms
    have been widely adopted in sequence-based tasks to allow the deep learning models
    to focus on relevant parts of the input during the learning process. Attention
    layers are also used for aggregating important features from the local neighbors
    of nodes, as in graph attention networks [136]. 4.10.2. Information Retrieval
    Deep learning approaches are also employed in document retrieval and web search
    applications [603]. A representative work is the deep-structured semantic modeling
    (DSSM) [603] which adopts a DNN for latent semantic analysis. A following work
    improved DSSM by applying convolutional layers to integrate representations extracted
    from each word in the sequence in order to generate representations for a subset
    of words [604]. Moreover, deep stacking networks were proposed for general information
    retrieval tasks, where multiple network blocks were stacked on top of each other
    to extract high-level, low-dimensional abstractions in the final feature space.
    4.10.3. Recommendation Systems and Others Recommender systems play an important
    role in online shopping services by helping users discover items of interest from
    a large resource collection. A memory augmented graph neural network (MA-GNN)
    can capture both the long- and short-term user interests. Ma et al. [605] proposed
    memory augmented graph neural networks for sequential recommendation. Specifically,
    a GNN was used to model the item contextual information within a short-term period,
    a shared memory network was designed to capture the long-range dependencies between
    items, and co-occurrence patterns of related items were captured to model the
    user interests. Furthermore, a heterogeneous information network containing different
    types of nodes and links is a powerful information model in this field. Hence,
    researchers have proposed embedding methods to represent the network for recommender
    systems [606]. Other applications include bibliometric analysis such as citation
    prediction [607] and co-authorship network analysis. In such works, deep learning
    models, especially graph neural networks, were proposed to learn patterns from
    the citation networks, co-authorship networks, and heterogeneous bibliometric
    networks [608]. 4.11. Other Applications 4.11.1. Deep Learning in Food Deep learning
    has recently been introduced in food science and engineering and has proved to
    be an advanced technology. The research of deep learning in food mainly focuses
    on the following topics. (1) Food Recognition and Classification. Food analysis
    is important for the health of human beings. As image sensing has become an easy
    and low-cost information acquisition tool, food analysis based on images of food
    has become popular. Food images contain important information of food characteristics,
    which can be used to recognize and classify food to help people record their daily
    diets. Currently, with the great success of CNN in various recognition and classification
    tasks, several CNN variants have been adopted for food recognition and classification
    [609,610,611]. These methods achieve relatively good results, yet there is still
    room for improvement in accuracy and efficiency. (2) Food Calorie Estimation.
    Food calorie estimation is widely adopted in many mobile apps to help people monitor
    and control nutrition intake, lose weight, and improve dietary habits to stay
    healthy. An image-based food calorie estimation method has been proposed and become
    popular [612]. It uses a multitask CNN and outperforms the traditional search-based
    methods. Following this, more CNN-based methods have been proposed for this task
    and proved that CNNs are effective for image-based food calorie estimation [613,614].
    (3) Food Quality Detection. Food quality is vital for the health of human beings.
    Food quality detection can be further divided into subtopics of vegetable quality
    detection, fruit quality detection, and meat and aquatic quality detection. Among
    them, vegetables and fruits quality detection are currently hot and challenging
    topics. Stacked sparse AE and CNN were adopted for detecting vegetable quality
    based on hyperspectral imaging [615], where the diversity of surface defects in
    size and color are problematic for traditional methods based on the average spectrum
    of the whole sample. DNNs coupled with spectral sensing methods have been proposed
    for addressing problems of varieties classification, nutrient content prediction,
    and disease and damage detection in fruit quality detection [616,617]. (4) Food
    Contamination. Food contamination is a serious threat to human health, and thus
    has received great attention from all over the world. Several deep learning based
    methods have been proposed for predicting, monitoring, and identifying food contamination.
    For example, Song et al. [618] proposed using DNNs to predict the morbidity of
    gastrointestinal infections by food contamination. Gorji et al. [619] proposed
    using deep learning to automatically identify fecal contamination on meat carcasses.
    We refer to the survey paper [620] for more works and discussions. Generally,
    CNNs and their variants are still the most widely used and effective methods in
    this field. 4.11.2. Deep Learning in Agriculture Since the concept of precision
    farming was proposed, it has brought new problems and challenges. Deep learning
    has been adopted to develop agricultural intelligent machinery equipment due to
    its strong ability of extracting features from image and structured data. (1)
    Plant Diseases Detection. Detecting diseases of crop is important for improving
    productivity. There are many types of disease species to be inspected. Deep learning
    technologies have been applied to crop disease classification or detection. For
    example, Ha et al. [621] proposed a deep learning based method to detect radish
    disease, where the radish was classified into diseased and healthy through a CNN.
    Ma et al. [622] also proposed using a CNN to recognize the four types of cucumber
    diseases. Lu et al. [623] proposed using CNNs to identify ten types of rice diseases,
    which proved the superiority of CNN-based methods in identifying rice diseases.
    (2) Smart Animal Breeding Environment. Deep learning technologies have been adopted
    for monitoring and improving animal breeding environment. The currently most popular
    research in this domain is face recognition and behavior analysis of pigs and
    cows. For example, Yang et al. [624] proposed using a CNN combined with spatial
    and temporal information to detect nursing behaviors in a pig farm. Qiao et al.
    [625] proposed using a Mask R-CNN to settle cattle contour extraction and instance
    segmentation in a sophisticated feedlot surrounding. These works demonstrated
    the effectiveness of CNNs in automatic recognition of nursing interactions for
    animal farms. In addition, Hansen et al. [626] proposed a CNN-based method to
    recognize pigs. Tian et al. [627] proposed using CNN to count pigs. (3) Land Cover
    Change Detection. Land cover change is vital for the natural basis of human survival,
    the Earth’s biochemical circle, and the energy and material circulation of the
    Earth system. One of the fundamental tasks in land cover change is cover classification.
    Deep learning techniques have been adopted for addressing this task. For example,
    Kussul et al. [628] proposed a multilevel deep learning architecture to classify
    the land cover and crop types using remote sensing data. Gaetano et al. [629]
    proposed a two-branch CNN for land cover classification. In addition, several
    CNN variants and transfer learning are adopted in the literature to validate land
    cover and classify wetland classes. See the survey papers [630,631] for details.
    4.11.3. Deep Learning in Chemistry Deep learning has been actively and widely
    used in computational chemistry in the past few years. Several hot and popular
    research topics are discussed as follows. To build a molecule with a particular
    property would first require developing methods to accurately correlate any given
    structure to the property. These can then be used to intelligently design a molecule
    that maximizes the desired property. The final step is to design an efficient
    synthesis from readily available starting materials. (1) Materials Design. Advanced
    materials are fundamental for many modern technologies such as batteries and renewable
    energy. Deep learning in this field is comparatively new, but there has been a
    rapid growth in the past few years. Xie et al. [632] proposed using a crystal
    CGNN to capture the crystalline structure for accurate and interpretable prediction
    of material properties. In addition, CGNNs and several CGNN variants have been
    proposed to predict the properties of bulk materials [633], optimize polymer properties
    [634], and explore chemical materials space [635]. These works demonstrated great
    potential of deep learning in exploring properties of materials. In addition to
    this, deep learning has been used to optimize synthesis parameters [636] and perform
    defect detection [637]. (2) Drug Design. Drug design is one of the most important
    applications of chemistry. Its aim is to identify molecules that achieve a particular
    biological function with maximum efficacy. Deep learning has been used to optimize
    the properties of molecules to improve potency and specificity, while decrease
    side effects and production costs. Specifically, AEs, GANs, and RNNs have been
    used to generate potent drug molecules [638,639,640]. More deep learning based
    methods are reviewed and discussed in recent papers [641,642,643]. (3) Retrosynthesis.
    The underlying challenge of retrosynthesis is similar to that of board games such
    as Chess and Go [644]. It can be solved by formulating the retrosynthesis as a
    tree search, where the branching factor is how many possible steps can be taken
    from a particular point. Therefore, inspired by AlphaGo, one of the predominant
    retrosynthetic AI was proposed by Segler et al. [645], which adopted the AlphaGo
    methodology of Monte Carlo Tree Search with deep neural network. This method has
    shown great potential. However, assessing synthesis plans is a challenging task.
    Other research has been using RNNs and AE to perform retrosynthetic analysis of
    small molecules [646]. (4) Reaction Prediction. Reaction prediction refers to
    taking a set of known reagents and conditions and predicting the products that
    will form. Deep learning has been used in this field to reduce the high computational
    cost in chemical space exploration. A representative work using DNNs to predict
    which products can be formed is presented by Wei et al. [647]. RNN variants and
    Siamese architectures have also been proposed for reaction prediction [648,649].
    Emphasizing interpretability by using GCNN to predict reaction in a manner similar
    to human intuition is currently a hot research direction in this field [650].
    5. Deep Learning Challenges and Future Directions 5.1. Efficiency One of the growing
    problems of deep learning is computing efficiency. With the increasing volume
    of data and increasing complexity of DNNs, the requirement for computing power
    is increasingly high. This can be solved to some extent by advanced multicore
    GPUs, and tensor processing units (TPUs). However, more efficiency is often needed
    when optimizing deep learning architectures for embedded devices applications.
    This can be achieved through codesigning model architectures, training algorithms,
    software, and hardware to allow multimachine parallelism and scalable distributed
    deep learning [278]. For example, using compression techniques to compress the
    layers and thus optimize the model architecture; trimming the number of parameters
    to achieve a smaller footprint or a more efficient model; designing layers and
    architectures specifically with efficiency to save the number of parameters and
    avoid over-parameterization. Another challenging and promising direction is to
    design programmable computational arrays, bare-hardware implementation, and stochastic
    computation mechanisms [1]. 5.2. Explainability A major problem that affects the
    deployment of deep learning in various areas is the lack of transparency, which
    also called the “black box” problem. Deep learning algorithms learn from data
    to find patterns and correlations that human experts would not normally notice,
    and their decision-making processes often confuse even the engineers who created
    them. This might not be a problem when deep learning is performing a trivial task
    where a wrong result will cause little or no damage. However, when it comes to
    medical diagnosis or financial trades, a mistake can have very serious consequences.
    Therefore, the transparency issue is a potential liability when applying deep
    learning. Various visual analysis tools have been proposed to dissect DNNs and
    reveal what they actually learn, as investigated in the paper [651]. In addition,
    there are some techniques such as LIME [652] and Deep Lift [653] that can be used
    to explain the model using feature importance. However, the transparency issue
    has been well solved now. A promising way is to link neural networks to the existing
    well-known physical or biological phenomena [1]. This will help to develop a metaphysical
    relationship to demystify the DNN’s “brain”. 5.3. Generalizability Generalizability
    is an important concern when applying a trained deep learning model in practice.
    It is challenging to demonstrate a deep learning model’s generalizability before
    implementing the model. To address the problem of model generalizability, many
    researchers try to use as much and as diverse data as possible to train a deep
    learning model. However, this is very challenging for some applications such as
    clinical scenarios where obtaining sufficient training samples with labels is
    extremely expensive and labor-intensive. Some researchers work on optimization
    algorithms that minimize the training error to achieve generalization. For example,
    Neyshabur et al. [654] proposed Path-SGD for better generalization, which is invariant
    to rescaling of weights. Hardt et al. [655] proposed to use stochastic gradient
    descent to ensure uniform stability, and thus to improve generalization for convex
    objectives. However, these are based on the assumption of having a “closed set”
    where the possible conditions in the test data are exactly the same as those in
    the training data. For many practical applications, the scenario is that “incomplete
    knowledge of the world is present at training time, and unknown classes can be
    submitted to an algorithm during testing” [656]. Therefore, a possible and promising
    research direction is using more generalizable or “open set” approaches to develop
    and evaluate deep learning models, such as open-set recognition [657]. 5.4. Ethical
    and Legal Issues Though deep learning has been widely deployed in many fields
    and has gained great success, some ethical and legal issues are emerging. There
    are two prominent issues. The first is the biased learning issue, where the model
    will provide a biased and prejudiced prediction/recommendation. One typical real-life
    example is the COMPAS (Correctional Offender Management Profiling for Alternative
    Sanctions) algorithm, which is used in US court systems to predict the probability
    that a defendant would become a recidivist [658]. This algorithm produced two
    times as many false positives for recidivism for black criminals (45%) than white
    criminals (23%). Another critical issue is the privacy of the deep learning training
    data. For example, social network face images could be used for training the deep
    learning model without the prior consent of the subjects. The lack of relevant
    governing frameworks on the regulation of these ethical and legal issues affects
    the wide application of deep learning in sensitive areas such as healthcare, finance,
    security, and law enforcement. The community is in desperate need of developing
    a relevant code of ethics and legal frameworks for addressing those issues. 5.5.
    Automated Learning Deep learning has achieved great success in automatically learning
    representative features and performing recognition of these learned features.
    Although this has greatly eliminated the cumbersome process of handcrafting features,
    the development of deep learning models is resource-intensive, requiring significant
    domain knowledge and time to produce and compare dozens of models. Various software
    tool kits have been developed for getting production-ready deep learning models
    with great ease and efficiency [659,660]. However, these are not satisfactory
    enough for developing high-level and user-friendly platforms that are easy also
    for non-experts to adopt existing DNNs or to design their own solutions. Automated
    machine learning (AutoML) is a research field for this purpose. For deep learning,
    a variety of neural architecture search (NAS) methods have been proposed to automate
    the network designing process [291,661], which will be a promising way to solve
    the automated learning problem. 5.6. Distributed Learning With the development
    of IoT and smart-world applications, massive numbers of smart mobiles and embedded
    devices are incorporated into the computing, resulting in network congestion and
    latency. Recent research in edge computing and in-device computing has provided
    solutions to this problem by utilizing IoT devices and some novel mechanisms within
    centralized and distributed computing frameworks [662,663]. Despite the achievements,
    several critical issues have yet to be well solved, and significant work still
    needs to be done. For example, the training of deep learning models in IoT devices
    is a problem that needs to be further solved. A possible way is to locally train
    the distributed and partial neural network input in IoT devices through offloading
    pretrained feature output for additional training at higher layers. In addition,
    developing appropriate paradigms to analyze data in a timely manner is another
    challenging problem requiring further research. Possible and promising research
    can be undertaken in the following directions: (1) distributed deep learning at
    the network edge, and more specifically, developing and optimizing parallel simultaneous
    edge network architectures for self-organization and runtime; and (2) in-device
    deep learning, and more specifically, implementing deep networks in IoT devices
    by considering the limited hardware and computational capabilities. 5.7. Privacy-Preserving
    Federated Learning Nowadays, increasing privacy concerns have emerged along with
    the aggregation of distributed computing results. Privacy-preserving federated
    learning has become a solution for privacy-preserving deep learning [208,664].
    By training deep learning models on separate datasets that are distributed across
    different devices or parties, it can preserve the local data privacy to a certain
    extent. However, despite the achievements, the challenge of protecting data privacy
    while maintaining the data utility through deep learning still remains. Potential
    and promising research problems and directions are: (1) how to effectively apply
    the privacy-preserving mechanisms [665,666] to federated learning frameworks for
    better privacy preservation; (2) develop efficient solutions to defend the final
    model against inference attacks extracting sensitive information from it; and
    (3) how to efficiently handle data memorization in federated learning to prevent
    privacy leakage. 5.8. Multimodal Learning With the development of various sensor
    system, increasing numbers of data modalities can be obtained. Different modalities
    are characterized by different statistical properties, and thus it is important
    to discover the relationship between different modalities. Research in many application
    areas needs to be based on data from multiple modalities to achieve a more complete
    picture of the task, for example, biomedical studies typically involve both image
    and “omics” data. Therefore, multimodal learning, which can represent the joint
    representations of different modalities, is required for taking full advantage
    of all available data in such studies. This has been well recognized in several
    works [667,668] but deserves more attention. Potential research problems and directions
    are: (1) designing new learning frameworks with more powerful computing architectures
    to effectively learn feature structures of the multimodal data of increasing volume;
    (2) developing new deep learning models for multimodal data that take semantic
    relationships into consideration to mine the intermodality and crossmodality knowledge;
    and (3) designing online and incremental multimodal deep learning models for data
    fusion to learn new knowledge from new data without much loss of historical knowledge.
    6. Conclusions Deep learning has become a predominant method for solving data
    analysis problems in virtually all fields of science and engineering. The increasing
    complexity and the large volume of data collected by diverse sensor systems have
    brought about a significant development of deep learning, which has also fundamentally
    transformed the way data are acquired, processed, analyzed, and interpreted. In
    this paper we have provided a comprehensive investigation of deep learning in
    diverse sensor systems, starting from the fundamentals of deep learning models
    and methods, to mapping specific deep learning methods with individual suitable
    sensor systems. This paper also provides a comprehensive summary of implementation
    tips and links to tutorials, open-sourced codes, and pretrained models for new
    deep learning practitioners and those seeking to innovate deep learning in diverse
    sensor systems. In addition, this paper provides insights into research topics
    where deep learning has not yet been well-developed, but may have potential, and
    highlights the challenges and future of deep learning in diverse sensor systems.
    We hope this survey will provide an excellent self-contained and comprehensive
    reference for industry practitioners and researchers in the field. Author Contributions
    Conceptualization, Y.Z., M.W., X.Y., J.Z, E.M. and J.H.; methodology, Y.Z., M.W.,
    X.Y., J.Z, E.M. and J.H.; investigation, Y.Z., M.W. and X.Y.; writing—original
    draft preparation, Y.Z., M.W., X.Y. and J.Z; writing—review and editing, Y.Z.,
    M.W., X.Y., J.Z., E.M. and J.H.; visualization, Y.Z., M.W., X.Y., and J.Z.; supervision,
    E.M. and J.H.; project administration, Y.Z. and J.H.; funding acquisition, J.H.
    All authors have read and agreed to the published version of the manuscript. Funding
    This work was supported by the Australian Research Council through the discovery
    grant DP200103207. Institutional Review Board Statement Not applicable. Informed
    Consent Statement Not applicable. Data Availability Statement Not applicable.
    Conflicts of Interest The authors declare no conflict of interest. References
    Pouyanfar, S.; Sadiq, S.; Yan, Y.; Tian, H.; Tao, Y.; Reyes, M.P.; Shyu, M.L.;
    Chen, S.C.; Iyengar, S.S. A survey on deep learning: Algorithms, techniques, and
    applications. ACM Comput. Surv. (CSUR) 2018, 51, 1–36. [Google Scholar] [CrossRef]
    Dong, S.; Wang, P.; Abbas, K. A survey on deep learning and its applications.
    Comput. Sci. Rev. 2021, 40, 100379. [Google Scholar] [CrossRef] Raghu, M.; Schmidt,
    E. A survey of deep learning for scientific discovery. arXiv 2020, arXiv:2003.11755.
    [Google Scholar] Dargan, S.; Kumar, M.; Ayyagari, M.R.; Kumar, G. A survey of
    deep learning and its applications: A new paradigm to machine learning. Arch.
    Comput. Methods Eng. 2020, 27, 1071–1092. [Google Scholar] [CrossRef] McCulloch,
    W.S.; Pitts, W. A logical calculus of the ideas immanent in nervous activity.
    Bull. Math. Biophys. 1943, 5, 115–133. [Google Scholar] [CrossRef] Rosenblatt,
    F. The perceptron: A probabilistic model for information storage and organization
    in the brain. Psychol. Rev. 1958, 65, 386. [Google Scholar] [CrossRef] [Green
    Version] Ackley, D.H.; Hinton, G.E.; Sejnowski, T.J. A learning algorithm for
    Boltzmann machines. Cogn. Sci. 1985, 9, 147–169. [Google Scholar] [CrossRef] Fukushima,
    K.; Miyake, S. Neocognitron: A self-organizing neural network model for a mechanism
    of visual pattern recognition. In Competition and Cooperation in Neural Nets;
    Springer: Berlin/Heidelberg, Germany, 1982; pp. 267–285. [Google Scholar] Jordan,
    M.I. Serial order: A parallel distributed processing approach. In Advances in
    Psychology; Elsevier: Amsterdam, The Netherlands, 1997; Volume 121, pp. 471–495.
    [Google Scholar] LeCun, Y.; Bottou, L.; Bengio, Y.; Haffner, P. Gradient-based
    learning applied to document recognition. Proc. IEEE 1998, 86, 2278–2324. [Google
    Scholar] [CrossRef] [Green Version] Hinton, G.E.; Osindero, S.; Teh, Y.W. A fast
    learning algorithm for deep belief nets. Neural Comput. 2006, 18, 1527–1554. [Google
    Scholar] [CrossRef] Hinton, G.E.; Salakhutdinov, R.R. Reducing the dimensionality
    of data with neural networks. Science 2006, 313, 504–507. [Google Scholar] [CrossRef]
    [Green Version] Bengio, Y. Learning deep architectures for AI. Found. Trends Mach.
    Learn. 2009, 2, 1–127. [Google Scholar] [CrossRef] Schmidhuber, J. Deep learning
    in neural networks: An overview. Neural Netw. 2015, 61, 85–117. [Google Scholar]
    [PubMed] [Green Version] Bengio, Y.; Courville, A.; Vincent, P. Representation
    learning: A review and new perspectives. IEEE Trans. Pattern Anal. Mach. Intell.
    2013, 35, 1798–1828. [Google Scholar] [CrossRef] [PubMed] [Green Version] Bottou,
    L. Stochastic gradient descent tricks. In Neural Networks: Tricks of the Trade;
    Springer: Berlin, Germany, 2012; pp. 421–436. [Google Scholar] Mohri, M.; Rostamizadeh,
    A.; Talwalkar, A. Foundations of Machine Learning; MIT Press: Cambridge, MA, USA,
    2018. [Google Scholar] Yang, X.; Song, Z.; King, I.; Xu, Z. A survey on deep semi-supervised
    learning. arXiv 2021, arXiv:2103.00550. [Google Scholar] [CrossRef] Oliver, A.;
    Odena, A.; Raffel, C.A.; Cubuk, E.D.; Goodfellow, I. Realistic evaluation of deep
    semi-supervised learning algorithms. Adv. Neural Inf. Process. Syst. 2018, 31,
    1–12. [Google Scholar] Sajjadi, M.; Javanmardi, M.; Tasdizen, T. Regularization
    with stochastic transformations and perturbations for deep semi-supervised learning.
    Adv. Neural Inf. Process. Syst. 2016, 29, 1–9. [Google Scholar] Yan, P.; Li, G.;
    Xie, Y.; Li, Z.; Wang, C.; Chen, T.; Lin, L. Semi-supervised video salient object
    detection using pseudo-labels. In Proceedings of the IEEE/CVF International Conference
    on Computer Vision, Seoul, Republic of Korea, 27 October–2 November 2019; pp.
    7284–7293. [Google Scholar] Schmarje, L.; Santarossa, M.; Schröder, S.M.; Koch,
    R. A survey on semi-, self-and unsupervised learning for image classification.
    IEEE Access 2021, 9, 82146–82168. [Google Scholar] [CrossRef] Jacobs, R.A. Increased
    rates of convergence through learning rate adaptation. Neural Netw. 1988, 1, 295–307.
    [Google Scholar] [CrossRef] Srivastava, N.; Hinton, G.; Krizhevsky, A.; Sutskever,
    I.; Salakhutdinov, R. Dropout: A simple way to prevent neural networks from overfitting.
    J. Mach. Learn. Res. 2014, 15, 1929–1958. [Google Scholar] Ioffe, S.; Szegedy,
    C. Batch normalization: Accelerating deep network training by reducing internal
    covariate shift. In Proceedings of the International Conference on Machine Learning,
    Miami, FL, USA, 9–11 December 2015; pp. 448–456. [Google Scholar] Shorten, C.;
    Khoshgoftaar, T.M. A survey on image data augmentation for deep learning. J. Big
    Data 2019, 6, 1–48. [Google Scholar] [CrossRef] Wen, Q.; Sun, L.; Yang, F.; Song,
    X.; Gao, J.; Wang, X.; Xu, H. Time series data augmentation for deep learning:
    A survey. arXiv 2020, arXiv:2002.12478. [Google Scholar] Feng, S.Y.; Gangal, V.;
    Wei, J.; Chandar, S.; Vosoughi, S.; Mitamura, T.; Hovy, E. A survey of data augmentation
    approaches for NLP. arXiv 2021, arXiv:2105.03075. [Google Scholar] Abadi, M.;
    Agarwal, A.; Barham, P.; Brevdo, E.; Chen, Z.; Citro, C.; Corrado, G.S.; Davis,
    A.; Dean, J.; Devin, M.; et al. Tensorflow: Large-scale machine learning on heterogeneous
    distributed systems. arXiv 2016, arXiv:1603.04467. [Google Scholar] Paszke, A.;
    Gross, S.; Massa, F.; Lerer, A.; Bradbury, J.; Chanan, G.; Killeen, T.; Lin, Z.;
    Gimelshein, N.; Antiga, L.; et al. Pytorch: An imperative style, high-performance
    deep learning library. Adv. Neural Inf. Process. Syst. 2019, 32, 1–12. [Google
    Scholar] Jia, Y.; Shelhamer, E.; Donahue, J.; Karayev, S.; Long, J.; Girshick,
    R.; Guadarrama, S.; Darrell, T. Caffe: Convolutional architecture for fast feature
    embedding. In Proceedings of the 22nd ACM International Conference on Multimedia,
    New York, NY, USA, 14 October 2014; pp. 675–678. [Google Scholar] Collobert, R.;
    Bengio, S.; Mariéthoz, J. Torch: A Modular Machine Learning Software Library;
    Technical Report 02-46; Idiap: Lausanne, Switzerland, 2002; pp. 1–9. [Google Scholar]
    Al-Rfou, R.; Alain, G.; Almahairi, A.; Angermueller, C.; Bahdanau, D.; Ballas,
    N.; Bastien, F.; Bayer, J.; Belikov, A.; Belopolsky, A.; et al. Theano: A Python
    framework for fast computation of mathematical expressions. arXiv 2016, arXiv:1605.02688.
    [Google Scholar] Chen, T.; Li, M.; Li, Y.; Lin, M.; Wang, N.; Wang, M.; Xiao,
    T.; Xu, B.; Zhang, C.; Zhang, Z. Mxnet: A flexible and efficient machine learning
    library for heterogeneous distributed systems. arXiv 2015, arXiv:1512.01274. [Google
    Scholar] Yu, D.; Eversole, A.; Seltzer, M.; Yao, K.; Huang, Z.; Guenter, B.; Kuchaiev,
    O.; Zhang, Y.; Seide, F.; Wang, H.; et al. An Introduction to Computational Networks
    and the Computational Network Toolkit; Technical Report MSR-TR-2014-112; Microsoft
    Research: Washington, DC, USA, 2014; pp. 1–150. [Google Scholar] LeCun, Y.; Bengio,
    Y.; Hinton, G. Deep learning. Nature 2015, 521, 436–444. [Google Scholar] [CrossRef]
    Krizhevsky, A.; Sutskever, I.; Hinton, G.E. Imagenet classification with deep
    convolutional neural networks. Commun. ACM 2017, 60, 84–90. [Google Scholar] [CrossRef]
    [Green Version] Szegedy, C.; Liu, W.; Jia, Y.; Sermanet, P.; Reed, S.; Anguelov,
    D.; Erhan, D.; Vanhoucke, V.; Rabinovich, A. Going deeper with convolutions. In
    Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,
    Boston, MA, USA, 7–12 June 2015; pp. 1–9. [Google Scholar] Simonyan, K.; Zisserman,
    A. Very deep convolutional networks for large-scale image recognition. In Proceedings
    of the International Conference on Learning Representations, San Diego, CA, USA,
    7–9 May 2015. [Google Scholar] Zeiler, M.D.; Fergus, R. Visualizing and understanding
    convolutional networks. In Proceedings of the European Conference on Computer
    Vision, Zurich, Switzerland, 6–12 September 2014; pp. 818–833. [Google Scholar]
    He, K.; Zhang, X.; Ren, S.; Sun, J. Deep residual learning for image recognition.
    In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,
    Las Vegas, NV, USA, 27–30 June 2016; pp. 770–778. [Google Scholar] Huang, G.;
    Liu, Z.; Van Der Maaten, L.; Weinberger, K.Q. Densely connected convolutional
    networks. In Proceedings of the IEEE Conference on Computer Vision and Pattern
    Recognition, Honolulu, HI, USA, 21–26 July 2017; pp. 4700–4708. [Google Scholar]
    Ronneberger, O.; Fischer, P.; Brox, T. U-Net: Convolutional networks for biomedical
    image segmentation. In Proceedings of the International Conference on Medical
    Image Computing and Computer-Assisted Intervention, Munich, Germany, 5–9 October
    2015; pp. 234–241. [Google Scholar] Ren, S.; He, K.; Girshick, R.; Sun, J. Faster
    R-CNN: Towards real-time object detection with region proposal networks. Adv.
    Neural Inf. Process. Syst. 2015, 28, 1–9. [Google Scholar] [CrossRef] [Green Version]
    Srivastava, R.K.; Greff, K.; Schmidhuber, J. Highway networks. arXiv 2015, arXiv:1505.00387.
    [Google Scholar] Redmon, J.; Divvala, S.; Girshick, R.; Farhadi, A. You only look
    once: Unified, real-time object detection. In Proceedings of the IEEE Conference
    on Computer Vision and Pattern Recognition, Las Vegas, NV, USA, 27–30 June 2016;
    pp. 779–788. [Google Scholar] He, K.; Gkioxari, G.; Dollár, P.; Girshick, R. Mask
    R-CNN. In Proceedings of the IEEE International Conference on Computer Vision,
    Venice, Italy, 22–29 October 2017; pp. 2961–2969. [Google Scholar] Howard, A.G.;
    Zhu, M.; Chen, B.; Kalenichenko, D.; Wang, W.; Weyand, T.; Andreetto, M.; Adam,
    H. Mobilenets: Efficient convolutional neural networks for mobile vision applications.
    arXiv 2017, arXiv:1704.04861. [Google Scholar] Han, D.; Kim, J.; Kim, J. Deep
    pyramidal residual networks. In Proceedings of the IEEE Conference on Computer
    Vision and Pattern Recognition, Honolulu, HI, USA, 21–26 July 2017; pp. 5927–5935.
    [Google Scholar] Chollet, F. Xception: Deep learning with depthwise separable
    convolutions. In Proceedings of the IEEE Conference on Computer Vision and Pattern
    Recognition, Honolulu, HI, USA, 21–26 July 2017; pp. 1251–1258. [Google Scholar]
    Szegedy, C.; Ioffe, S.; Vanhoucke, V.; Alemi, A.A. Inception-v4, inception-resnet
    and the impact of residual connections on learning. In Proceedings of the AAAI
    Conference on Artificial Intelligence, San Francisco, CA, USA, 4–9 February 2017.
    [Google Scholar] Zhang, X.; Li, Z.; Change Loy, C.; Lin, D. Polynet: A pursuit
    of structural diversity in very deep networks. In Proceedings of the IEEE Conference
    on Computer Vision and Pattern Recognition, Honolulu, HI, USA, 21–26 July 2017;
    pp. 718–726. [Google Scholar] Bengio, Y.; Simard, P.; Frasconi, P. Learning long-term
    dependencies with gradient descent is difficult. IEEE Trans. Neural Netw. 1994,
    5, 157–166. [Google Scholar] [CrossRef] [PubMed] Glorot, X.; Bengio, Y. Understanding
    the difficulty of training deep feedforward neural networks. In Proceedings of
    the Thirteenth International Conference on Artificial Intelligence and Statistics,
    Sardinia, Italy, 3-15 May 2010; pp. 249–256. [Google Scholar] Girshick, R. Fast
    R-CNN. In Proceedings of the IEEE International Conference on Computer Vision,
    Santiago, Chile, 7–13 December 2015; pp. 1440–1448. [Google Scholar] Cho, K.;
    Van Merriënboer, B.; Gulcehre, C.; Bahdanau, D.; Bougares, F.; Schwenk, H.; Bengio,
    Y. Learning phrase representations using RNN encoder-decoder for statistical machine
    translation. arXiv 2014, arXiv:1406.1078. [Google Scholar] Pascanu, R.; Gulcehre,
    C.; Cho, K.; Bengio, Y. How to construct deep recurrent neural networks. arXiv
    2013, arXiv:1312.6026. [Google Scholar] Graves, A.; Liwicki, M.; Fernández, S.;
    Bertolami, R.; Bunke, H.; Schmidhuber, J. A novel connectionist system for unconstrained
    handwriting recognition. IEEE Trans. Pattern Anal. Mach. Intell. 2008, 31, 855–868.
    [Google Scholar] [CrossRef] [Green Version] Graves, A.; Mohamed, A.r.; Hinton,
    G. Speech recognition with deep recurrent neural networks. In Proceedings of the
    2013 IEEE International Conference on Acoustics, Speech and Signal Processing,
    Vancouver, BC, Canada, 26–31 May 2013; pp. 6645–6649. [Google Scholar] Lefebvre,
    G.; Berlemont, S.; Mamalet, F.; Garcia, C. Inertial gesture recognition with BLSTM-RNN.
    In Artificial Neural Networks; Springer: Berlin, Germany, 2015; pp. 393–410. [Google
    Scholar] You, Q.; Jin, H.; Wang, Z.; Fang, C.; Luo, J. Image captioning with semantic
    attention. In Proceedings of the IEEE Conference on Computer Vision and Pattern
    Recognition, Las Vegas, NV, USA, 27–30 June 2016; pp. 4651–4659. [Google Scholar]
    Yao, L.; Guan, Y. An improved LSTM structure for natural language processing.
    In Proceedings of the 2018 IEEE International Conference of Safety Produce Informatization
    (IICSPI), Chongqing, China, 10–12 December 2018; pp. 565–569. [Google Scholar]
    Li, X.; Wu, X. Constructing long short-term memory based deep recurrent neural
    networks for large vocabulary speech recognition. In Proceedings of the 2015 IEEE
    International Conference on Acoustics, Speech and Signal Processing, South Brisbane,
    QSD, Australia, 19–24 April 2015; pp. 4520–4524. [Google Scholar] Chatterjee,
    C.C.; Mulimani, M.; Koolagudi, S.G. Polyphonic sound event detection using transposed
    convolutional recurrent neural network. In Proceedings of the 2020 IEEE International
    Conference on Acoustics, Speech and Signal Processing, Barcelona, Spain, 4–8 May
    2020; pp. 661–665. [Google Scholar] Li, Y.; Yu, R.; Shahabi, C.; Liu, Y. Graph
    convolutional recurrent neural network: Data-driven traffic forecasting. arXiv
    2017, arXiv:1707.01926. [Google Scholar] Azzouni, A.; Pujolle, G. A long short-term
    memory recurrent neural network framework for network traffic matrix prediction.
    arXiv 2017, arXiv:1705.05690. [Google Scholar] Altché, F.; de La Fortelle, A.
    An LSTM network for highway trajectory prediction. In Proceedings of the 2017
    IEEE 20th International Conference on Intelligent Transportation Systems (ITSC),
    Yokohama, Japan, 16–19 October 2017; pp. 353–359. [Google Scholar] Khairdoost,
    N.; Shirpour, M.; Bauer, M.A.; Beauchemin, S.S. Real-time driver maneuver prediction
    using LSTM. IEEE Trans. Intell. Veh. 2020, 5, 714–724. [Google Scholar] [CrossRef]
    Li, L.; Zhao, W.; Xu, C.; Wang, C.; Chen, Q.; Dai, S. Lane-change intention inference
    based on RNN for autonomous driving on highways. IEEE Trans. Veh. Technol. 2021,
    70, 5499–5510. [Google Scholar] [CrossRef] Robinson, A.; Fallside, F. The Utility
    Driven Dynamic Error Propagation Network; University of Cambridge Department of
    Engineering Cambridge: Cambridge, UK, 1987. [Google Scholar] Werbos, P.J. Generalization
    of backpropagation with application to a recurrent gas market model. Neural Netw.
    1988, 1, 339–356. [Google Scholar] [CrossRef] [Green Version] Mozer, M.C. A focused
    backpropagation algorithm for temporal. Backpropag. Theory Archit. Appl. 1995,
    137, 137–170. [Google Scholar] Hochreiter, S.; Bengio, Y.; Frasconi, P.; Schmidhuber,
    J. Gradient flow in recurrent nets: The difficulty of learning long-term dependencies.
    In A Field Guide to Dynamical Recurrent Networks; Wiley-IEEE Press: New York,
    NY, USA, 2001; pp. 237–243. [Google Scholar] Schuster, M.; Paliwal, K.K. Bidirectional
    recurrent neural networks. IEEE Trans. Signal Process. 1997, 45, 2673–2681. [Google
    Scholar] [CrossRef] [Green Version] Liwicki, M.; Graves, A.; Fernàndez, S.; Bunke,
    H.; Schmidhuber, J. A novel approach to on-line handwriting recognition based
    on bidirectional long short-term memory networks. In Proceedings of the 9th International
    Conference on Document Analysis and Recognition, Curitiba, Paraná, Brazil, 23–26
    September 2007. [Google Scholar] Hochreiter, S.; Schmidhuber, J. Long short-term
    memory. Neural Comput. 1997, 9, 1735–1780. [Google Scholar] [CrossRef] [PubMed]
    Karpathy, A.; Fei-Fei, L. Deep visual-semantic alignments for generating image
    descriptions. In Proceedings of the IEEE Conference on Computer Vision and Pattern
    Recognition, Boston, MA, USA, 7–12 June 2015; pp. 3128–3137. [Google Scholar]
    Bahdanau, D.; Cho, K.; Bengio, Y. Neural machine translation by jointly learning
    to align and translate. arXiv 2014, arXiv:1409.0473. [Google Scholar] Qin, Y.;
    Song, D.; Chen, H.; Cheng, W.; Jiang, G.; Cottrell, G. A dual-stage attention-based
    recurrent neural network for time series prediction. arXiv 2017, arXiv:1704.02971.
    [Google Scholar] Lu, J.; Yang, J.; Batra, D.; Parikh, D. Hierarchical question-image
    co-attention for visual question answering. Adv. Neural Inf. Process. Syst. 2016,
    29, 1–9. [Google Scholar] Wu, Y.; Schuster, M.; Chen, Z.; Le, Q.V.; Norouzi, M.;
    Macherey, W.; Krikun, M.; Cao, Y.; Gao, Q.; Macherey, K.; et al. Google’s neural
    machine translation system: Bridging the gap between human and machine translation.
    arXiv 2016, arXiv:1609.08144. [Google Scholar] Lu, X.; Tsao, Y.; Matsuda, S.;
    Hori, C. Speech enhancement based on deep denoising autoencoder. In Proceedings
    of the Interspeech, Lyon, France, 25–29 August 2013; pp. 436–440. [Google Scholar]
    Saad, O.M.; Chen, Y. Deep denoising autoencoder for seismic random noise attenuation.
    Geophysics 2020, 85, V367–V376. [Google Scholar] [CrossRef] Krizhevsky, A.; Hinton,
    G.E. Using very deep autoencoders for content-based image retrieval. In Proceedings
    of the European Symposium on Artificial Neural Networks, Bruges, Belgium, 27–29
    April 2011. [Google Scholar] Feng, F.; Wang, X.; Li, R. Cross-modal retrieval
    with correspondence autoencoder. In Proceedings of the 22nd ACM International
    Conference on Multimedia, Orlando, FL, USA, 3–7 November 2014; pp. 7–16. [Google
    Scholar] Shcherbakov, O.; Batishcheva, V. Image inpainting based on stacked autoencoders.
    J. Phys. Conf. Ser. 2014, 536, 012020. [Google Scholar] [CrossRef] [Green Version]
    Zhu, Y.; Yin, X.; Hu, J. FingerGAN: A Constrained Fingerprint Generation Scheme
    for Latent Fingerprint Enhancement. arXiv 2022, arXiv:2206.12885. [Google Scholar]
    Tagawa, T.; Tadokoro, Y.; Yairi, T. Structured denoising autoencoder for fault
    detection and analysis. In Proceedings of the Asian Conference on Machine Learning,
    Kuala Lumpur, Malaysia, 3–6 November 2015; pp. 96–111. [Google Scholar] Zhou,
    C.; Paffenroth, R.C. Anomaly detection with robust deep autoencoders. In Proceedings
    of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data
    Mining, Halifax, NS, Canada, 13–17 August 2017; pp. 665–674. [Google Scholar]
    Ranzato, M.; Poultney, C.; Chopra, S.; LeCun, Y. Efficient learning of sparse
    representations with an energy-based model. Adv. Neural Inf. Process. Syst. 2007,
    19, 1137. [Google Scholar] Rifai, S.; Vincent, P.; Muller, X.; Glorot, X.; Bengio,
    Y. Contractive auto-encoders: Explicit invariance during feature extraction. In
    Proceedings of the International Conference on Machine Learning, Fort Lauderdale,
    FL, USA, 11–13 April 2011. [Google Scholar] Vincent, P.; Larochelle, H.; Bengio,
    Y.; Manzagol, P.A. Extracting and composing robust features with denoising autoencoders.
    In Proceedings of the 25th International Conference on Machine Learning, Helsinki,
    Finland, 5–9 July 2008; pp. 1096–1103. [Google Scholar] Vincent, P. A connection
    between score matching and denoising autoencoders. Neural Comput. 2011, 23, 1661–1674.
    [Google Scholar] [CrossRef] [PubMed] [Green Version] Kingma, D.P.; Welling, M.
    Auto-encoding variational bayes. In Proceedings of the International Conference
    on Learning Representations, Banff, AB, Canada, 14–16 April 2014; pp. 1–14. [Google
    Scholar] Hinton, G.E. Boltzmann machine. Scholarpedia 2007, 2, 1668. [Google Scholar]
    [CrossRef] Zhang, K.; Liu, J.; Chai, Y.; Qian, K. An optimized dimensionality
    reduction model for high-dimensional data based on restricted Boltzmann machines.
    In Proceedings of the The 27th Chinese Control and Decision Conference, Qingdao,
    China, 23–25 May 2015; pp. 2939–2944. [Google Scholar] Larochelle, H.; Mandel,
    M.; Pascanu, R.; Bengio, Y. Learning algorithms for the classification restricted
    Boltzmann machine. J. Mach. Learn. Res. 2012, 13, 643–669. [Google Scholar] Elaiwat,
    S.; Bennamoun, M.; Boussaïd, F. A spatio-temporal RBM-based model for facial expression
    recognition. Pattern Recognit. 2016, 49, 152–161. [Google Scholar] [CrossRef]
    Salakhutdinov, R.; Mnih, A.; Hinton, G. Restricted Boltzmann machines for collaborative
    filtering. In Proceedings of the 24th International Conference on Machine learning,
    Corvalis, OR, USA, 20–24 June 2007; pp. 791–798. [Google Scholar] Längkvist, M.;
    Karlsson, L.; Loutfi, A. A review of unsupervised feature learning and deep learning
    for time-series modeling. Pattern Recognit. Lett. 2014, 42, 11–24. [Google Scholar]
    [CrossRef] [Green Version] Hinton, G.E.; Salakhutdinov, R.R. Replicated softmax:
    An undirected topic model. Adv. Neural Inf. Process. Syst. 2009, 22, 1–8. [Google
    Scholar] Fischer, A.; Igel, C. An introduction to restricted Boltzmann machines.
    In Proceedings of the Iberoamerican Congress on Pattern Recognition, Havana, Cuba,
    28–31 October 2012; pp. 14–36. [Google Scholar] Fischer, A.; Igel, C. Training
    restricted Boltzmann machines: An introduction. Pattern Recognit. 2014, 47, 25–39.
    [Google Scholar] [CrossRef] Smolensky, P. Information Processing in Dynamical
    Systems: Foundations of Harmony Theory; Technical Report; Colorado University
    at Boulder Department of Computer Science: Boulder, CO, USA, 1986; pp. 1–56. [Google
    Scholar] Goodfellow, I.; Pouget-Abadie, J.; Mirza, M.; Xu, B.; Warde-Farley, D.;
    Ozair, S.; Courville, A.; Bengio, Y. Generative adversarial nets. Adv. Neural
    Inf. Process. Syst. 2014, 27, 2672–2680. [Google Scholar] Bowles, C.; Chen, L.;
    Guerrero, R.; Bentley, P.; Gunn, R.; Hammers, A.; Dickie, D.A.; Hernández, M.V.;
    Wardlaw, J.; Rueckert, D. GAN augmentation: Augmenting training data using generative
    adversarial networks. arXiv 2018, arXiv:1810.10863. [Google Scholar] Jing, Y.;
    Yang, Y.; Feng, Z.; Ye, J.; Yu, Y.; Song, M. Neural style transfer: A review.
    IEEE Trans. Vis. Comput. Graph. 2019, 26, 3365–3385. [Google Scholar] [CrossRef]
    [PubMed] [Green Version] Dong, H.W.; Hsiao, W.Y.; Yang, L.C.; Yang, Y.H. MuseGAN:
    Multi-track sequential generative adversarial networks for symbolic music generation
    and accompaniment. In Proceedings of the AAAI Conference on Artificial Intelligence,
    New Orleans, LA, USA, 2–7 February 2018; pp. 34–41. [Google Scholar] Reed, S.;
    Akata, Z.; Yan, X.; Logeswaran, L.; Schiele, B.; Lee, H. Generative adversarial
    text to image synthesis. In Proceedings of the International Conference on Machine
    Learning, New York, NY, USA, 20–22 June 2016; pp. 1060–1069. [Google Scholar]
    Dahl, R.; Norouzi, M.; Shlens, J. Pixel recursive super resolution. In Proceedings
    of the IEEE International Conference on Computer Vision, Venice, Italy, 22–29
    October 2017; pp. 5439–5448. [Google Scholar] Souly, N.; Spampinato, C.; Shah,
    M. Semi supervised semantic segmentation using generative adversarial network.
    In Proceedings of the IEEE International Conference on Computer Vision, Venice,
    Italy, 22–29 October 2017; pp. 5688–5696. [Google Scholar] Pascual, S.; Bonafonte,
    A.; Serra, J. SEGAN: Speech enhancement generative adversarial network. arXiv
    2017, arXiv:1703.09452. [Google Scholar] Kwon, Y.H.; Park, M.G. Predicting future
    frames using retrospective cycle GAN. In Proceedings of the IEEE/CVF Conference
    on Computer Vision and Pattern Recognition, Long Beach, CA, USA, 15–20 June 2019;
    pp. 1811–1820. [Google Scholar] Radford, A.; Metz, L.; Chintala, S. Unsupervised
    representation learning with deep convolutional generative adversarial networks.
    arXiv 2015, arXiv:1511.06434. [Google Scholar] Dai, B.; Fidler, S.; Urtasun, R.;
    Lin, D. Towards diverse and natural image descriptions via a conditional GAN.
    In Proceedings of the IEEE International Conference on Computer Vision, Venice,
    Italy, 22–29 October 2017; pp. 2970–2979. [Google Scholar] Isola, P.; Zhu, J.Y.;
    Zhou, T.; Efros, A.A. Image-to-image translation with conditional adversarial
    networks. In Proceedings of the IEEE Conference on Computer Vision and Pattern
    Recognition, Venice, Italy, 22–29 October 2017; pp. 1125–1134. [Google Scholar]
    Odena, A.; Olah, C.; Shlens, J. Conditional image synthesis with auxiliary classifier
    GANs. In Proceedings of the International Conference on Machine Learning, Sydney,
    Australia, 6–11 August 2017; pp. 2642–2651. [Google Scholar] Huang, X.; Li, Y.;
    Poursaeed, O.; Hopcroft, J.; Belongie, S. Stacked generative adversarial networks.
    In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,
    Honolulu, HI, USA, 21–26 July 2017; pp. 5077–5086. [Google Scholar] Adler, J.;
    Lunz, S. Banach wasserstein GAN. Adv. Neural Inf. Process. Syst. 2018, 31, 1–10.
    [Google Scholar] Zhu, J.Y.; Park, T.; Isola, P.; Efros, A.A. Unpaired image-to-image
    translation using cycle-consistent adversarial networks. In Proceedings of the
    IEEE International Conference on Computer Vision, Venice, Italy, 22–29 October
    2017; pp. 2223–2232. [Google Scholar] Karras, T.; Aila, T.; Laine, S.; Lehtinen,
    J. Progressive growing of GANs for improved quality, stability, and variation.
    arXiv 2017, arXiv:1710.10196. [Google Scholar] Wu, Z.; Pan, S.; Chen, F.; Long,
    G.; Zhang, C.; Philip, S.Y. A comprehensive survey on graph neural networks. IEEE
    Trans. Neural Networks Learn. Syst. 2020, 32, 4–24. [Google Scholar] [CrossRef]
    [Green Version] Zhang, M.; Cui, Z.; Neumann, M.; Chen, Y. An end-to-end deep learning
    architecture for graph classification. In Proceedings of the AAAI Conference on
    Artificial Intelligence, New Orleans, LA, USA, 2–7 February 2018. [Google Scholar]
    Henaff, M.; Bruna, J.; LeCun, Y. Deep convolutional networks on graph-structured
    data. arXiv 2015, arXiv:1506.05163. [Google Scholar] [CrossRef] Defferrard, M.;
    Bresson, X.; Vandergheynst, P. Convolutional neural networks on graphs with fast
    localized spectral filtering. Adv. Neural Inf. Process. Syst. 2016, 29, 1–9. [Google
    Scholar] Lee, J.; Lee, I.; Kang, J. Self-attention graph pooling. In Proceedings
    of the International Conference on Machine Learning, Long Beach, CA, USA, 9–15
    June 2019; pp. 3734–3743. [Google Scholar] Kipf, T.N.; Welling, M. Semi-supervised
    classification with graph convolutional networks. In Proceedings of the International
    Conference on Learning Representations, Toulon, France, 24–26 April 2017. [Google
    Scholar] Scarselli, F.; Gori, M.; Tsoi, A.C.; Hagenbuchner, M.; Monfardini, G.
    The graph neural network model. IEEE Trans. Neural Networks 2008, 20, 61–80. [Google
    Scholar] [CrossRef] [Green Version] Gallicchio, C.; Micheli, A. Graph echo state
    networks. In Proceedings of the The 2010 International Joint Conference on Neural
    Networks (IJCNN), Barcelona, Spain, 18–23 July 2010; pp. 1–8. [Google Scholar]
    Li, Y.; Tarlow, D.; Brockschmidt, M.; Zemel, R. Gated graph sequence neural networks.
    In Proceedings of the International Conference on Learning Representations, San
    Juan, Puerto Rico, 2–4 May 2016. [Google Scholar] Shuman, D.I.; Narang, S.K.;
    Frossard, P.; Ortega, A.; Vandergheynst, P. The emerging field of signal processing
    on graphs: Extending high-dimensional data analysis to networks and other irregular
    domains. IEEE Signal Process. Mag. 2013, 30, 83–98. [Google Scholar] [CrossRef]
    [Green Version] Bruna, J.; Zaremba, W.; Szlam, A.; LeCun, Y. Spectral networks
    and deep locally connected networks on graphs. In Proceedings of the International
    Conference on Learning Representations, Banff, AB, Canada, 14–16 April 2014. [Google
    Scholar] Atwood, J.; Towsley, D. Diffusion-convolutional neural networks. Adv.
    Neural Inf. Process. Syst. 2016, 29, 1993–2001. [Google Scholar] Gilmer, J.; Schoenholz,
    S.S.; Riley, P.F.; Vinyals, O.; Dahl, G.E. Neural message passing for quantum
    chemistry. In Proceedings of the International Conference on Machine Learning,
    Sydney, Australia, 6–10 August 2017; pp. 1263–1272. [Google Scholar] Hamilton,
    W.; Ying, Z.; Leskovec, J. Inductive representation learning on large graphs.
    Adv. Neural Inf. Process. Syst. 2017, 30, 1024–1034. [Google Scholar] Veličković,
    P.; Cucurull, G.; Casanova, A.; Romero, A.; Lio, P.; Bengio, Y. Graph attention
    networks. In Proceedings of the International Conference on Learning Representations,
    Vancouver, BC, Canada, 30 April–3 May 2018. [Google Scholar] Monti, F.; Boscaini,
    D.; Masci, J.; Rodola, E.; Svoboda, J.; Bronstein, M.M. Geometric deep learning
    on graphs and manifolds using mixture model CNNs. In Proceedings of the IEEE Conference
    on Computer Vision and Pattern Recognition, Honolulu, HI, USA, 21–26 July 2017;
    pp. 5115–5124. [Google Scholar] Chen, J.; Ma, T.; Xiao, C. FastGCN: Fast learning
    with graph convolutional networks via importance sampling. In Proceedings of the
    International Conference on Learning Representations, Vancouver, BC, Canada, 30
    April–3 May 2018. [Google Scholar] Wang, D.; Cui, P.; Zhu, W. Structural deep
    network embedding. In Proceedings of the 22nd ACM SIGKDD International Conference
    on Knowledge Discovery and Data Mining, San Francisco, CA, USA, 13–17 August 2016;
    pp. 1225–1234. [Google Scholar] Kipf, T.N.; Welling, M. Variational graph auto-encoders.
    In Proceedings of the Neural Information Processing Systems Workshop, Barcelona,
    Spain, 5–10 December 2016. [Google Scholar] Gómez-Bombarelli, R.; Wei, J.N.; Duvenaud,
    D.; Hernández-Lobato, J.M.; Sánchez-Lengeling, B.; Sheberla, D.; Aguilera-Iparraguirre,
    J.; Hirzel, T.D.; Adams, R.P.; Aspuru-Guzik, A. Automatic chemical design using
    a data-driven continuous representation of molecules. ACS Cent. Sci. 2018, 4,
    268–276. [Google Scholar] [CrossRef] [PubMed] Li, Y.; Vinyals, O.; Dyer, C.; Pascanu,
    R.; Battaglia, P. Learning deep generative models of graphs. In Proceedings of
    the International Conference on Learning Representations Workshop, Vancouver,
    BC, Canada, 30 April–3 May 2018. [Google Scholar] You, J.; Ying, R.; Ren, X.;
    Hamilton, W.; Leskovec, J. GraphRNN: Generating realistic graphs with deep auto-regressive
    models. In Proceedings of the International Conference on Machine Learning, Stockholm,
    Sweden, 10–15 July 2018; pp. 5708–5717. [Google Scholar] Simonovsky, M.; Komodakis,
    N. Graphvae: Towards generation of small graphs using variational autoencoders.
    In Proceedings of the International Conference on Artificial Neural Networks,
    Rhodes, Greece, 4–7 October 2018; pp. 412–422. [Google Scholar] De Cao, N.; Kipf,
    T. MolGAN: An implicit generative model for small molecular graphs. arXiv 2018,
    arXiv:1805.11973. [Google Scholar] [CrossRef] Bojchevski, A.; Shchur, O.; Zügner,
    D.; Günnemann, S. Netgan: Generating graphs via random walks. In Proceedings of
    the International Conference on Machine Learning, Stockholm, Sweden, 10–15 July
    2018; pp. 610–619. [Google Scholar] Seo, Y.; Defferrard, M.; Vandergheynst, P.;
    Bresson, X. Structured sequence modeling with graph convolutional recurrent networks.
    In Proceedings of the International Conference on Neural Information Processing,
    Siem Reap, Cambodia, 13–16 December 2018; pp. 362–373. [Google Scholar] Yu, B.;
    Yin, H.; Zhu, Z. Spatio-temporal graph convolutional networks: A deep learning
    framework for traffic forecasting. In Proceedings of the 27th International Joint
    Conference on Artificial Intelligence, Stockholm, Sweden, 13–19 July 2018; pp.
    3634–3640. [Google Scholar] Vaswani, A.; Shazeer, N.; Parmar, N.; Uszkoreit, J.;
    Jones, L.; Gomez, A.N.; Kaiser, Ł.; Polosukhin, I. Attention is all you need.
    Adv. Neural Inf. Process. Syst. 2017, 30, 5998–6008. [Google Scholar] Devlin,
    J.; Chang, M.W.; Lee, K.; Toutanova, K. BERT: Pre-training of deep bidirectional
    transformers for language understanding. In Proceedings of the 2019 Conference
    of the North American Chapter of the Association for Computational Linguistics:
    Human Language Technologies, Minneapolis, MN, USA, 2–7 June 2019; pp. 4171–4186.
    [Google Scholar] Rae, J.W.; Potapenko, A.; Jayakumar, S.M.; Lillicrap, T.P. Compressive
    transformers for long-range sequence modelling. In Proceedings of the International
    Conference on Learning Representations, Addis Ababa, Ethiopia, 26–30 April 2020.
    [Google Scholar] Brown, T.; Mann, B.; Ryder, N.; Subbiah, M.; Kaplan, J.D.; Dhariwal,
    P.; Neelakantan, A.; Shyam, P.; Sastry, G.; Askell, A.; et al. Language models
    are few-shot learners. Adv. Neural Inf. Process. Syst. 2020, 33, 1877–1901. [Google
    Scholar] Lewis, M.; Liu, Y.; Goyal, N.; Ghazvininejad, M.; Mohamed, A.; Levy,
    O.; Stoyanov, V.; Zettlemoyer, L. BART: Denoising sequence-to-sequence pre-training
    for natural language generation, translation, and comprehension. In Proceedings
    of the 58th Annual Meeting of the Association for Computational Linguistics, Online,
    5–10 July 2020; pp. 7871–7880. [Google Scholar] Guo, Q.; Qiu, X.; Xue, X.; Zhang,
    Z. Low-rank and locality constrained self-attention for sequence modeling. IEEE/ACM
    Trans. Audio Speech Lang. Process. 2019, 27, 2213–2222. [Google Scholar] [CrossRef]
    Katharopoulos, A.; Vyas, A.; Pappas, N.; Fleuret, F. Transformers are RNNs: Fast
    autoregressive transformers with linear attention. In Proceedings of the International
    Conference on Machine Learning, Virtual Event, 13–18 July 2020; pp. 5156–5165.
    [Google Scholar] Guo, Q.; Qiu, X.; Liu, P.; Xue, X.; Zhang, Z. Multi-scale self-attention
    for text classification. In Proceedings of the AAAI Conference on Artificial Intelligence,
    New York, NY, USA, 7–12 February 2020; pp. 7847–7854. [Google Scholar] Guo, M.;
    Zhang, Y.; Liu, T. Gaussian transformer: A lightweight approach for natural language
    inference. In Proceedings of the AAAI Conference on Artificial Intelligence, HI,
    USA, 27 January–1 February 2019; pp. 6489–6496. [Google Scholar] Wu, Z.; Liu,
    Z.; Lin, J.; Lin, Y.; Han, S. Lite transformer with long-short range attention.
    In Proceedings of the International Conference on Learning Representations, Addis
    Ababa, Ethiopia, 26–30 April 2020. [Google Scholar] Dai, Z.; Lai, G.; Yang, Y.;
    Le, Q. Funnel-transformer: Filtering out sequential redundancy for efficient language
    processing. Adv. Neural Inf. Process. Syst. 2020, 33, 4271–4282. [Google Scholar]
    Mehta, S.; Ghazvininejad, M.; Iyer, S.; Zettlemoyer, L.; Hajishirzi, H. DeLighT:
    Very deep and light-weight transformer. In Proceedings of the International Conference
    on Learning Representations, Vienna, Austria, 3–7 May 2021; pp. 1–19. [Google
    Scholar] Dosovitskiy, A.; Beyer, L.; Kolesnikov, A.; Weissenborn, D.; Zhai, X.;
    Unterthiner, T.; Dehghani, M.; Minderer, M.; Heigold, G.; Gelly, S.; et al. An
    image is worth 16x16 words: Transformers for image recognition at scale. In Proceedings
    of the International Conference on Learning Representations, Addis Ababa, Ethiopia,
    26–30 April 2020. [Google Scholar] Chen, M.; Radford, A.; Child, R.; Wu, J.; Jun,
    H.; Luan, D.; Sutskever, I. Generative pretraining from pixels. In Proceedings
    of the International Conference on Machine Learning, Virtual Event, 13–18 July
    2020; pp. 1691–1703. [Google Scholar] Zeng, Y.; Fu, J.; Chao, H. Learning joint
    spatial-temporal transformations for video inpainting. In Proceedings of the European
    Conference on Computer Vision, Glasgow, UK, 23–28 August 2020; pp. 528–543. [Google
    Scholar] Zhou, L.; Zhou, Y.; Corso, J.J.; Socher, R.; Xiong, C. End-to-end dense
    video captioning with masked transformer. In Proceedings of the IEEE Conference
    on Computer Vision and Pattern Recognition, Salt Lake City, UT, USA, 18–23 June
    2018; pp. 8739–8748. [Google Scholar] Han, K.; Xiao, A.; Wu, E.; Guo, J.; XU,
    C.; Wang, Y. Transformer in transformer. Adv. Neural Inf. Process. Syst. 2021,
    34, 15908–15919. [Google Scholar] Cao, H.; Wang, Y.; Chen, J.; Jiang, D.; Zhang,
    X.; Tian, Q.; Wang, M. Swin-unet: Unet-like pure transformer for medical image
    segmentation. arXiv 2021, arXiv:2105.05537. [Google Scholar] Jospin, L.V.; Laga,
    H.; Boussaid, F.; Buntine, W.; Bennamoun, M. Hands-on Bayesian neural networks—A
    tutorial for deep learning users. IEEE Comput. Intell. Mag. 2022, 17, 29–48. [Google
    Scholar] [CrossRef] Neal, R.M. Bayesian Learning for Neural Networks; Springer
    Science & Business Media: Berlin, Germany, 2012; Volume 118. [Google Scholar]
    Denker, J.; LeCun, Y. Transforming neural-net output levels to probability distributions.
    Adv. Neural Inf. Process. Syst. 1990, 3, 853–859. [Google Scholar] He, J.; Liu,
    R.; Zhuang, F.; Lin, F.; Niu, C.; He, Q. A general cross-domain recommendation
    framework via Bayesian neural network. In Proceedings of the 2018 IEEE International
    Conference on Data Mining (ICDM), Singapore, 17–20 November 2018; pp. 1001–1006.
    [Google Scholar] Nie, S.; Zheng, M.; Ji, Q. The deep regression bayesian network
    and its applications: Probabilistic deep learning for computer vision. IEEE Signal
    Process. Mag. 2018, 35, 101–111. [Google Scholar] [CrossRef] Chien, J.T. Deep
    Bayesian natural language processing. In Proceedings of the 57th Annual Meeting
    of the Association for Computational Linguistics: Tutorial Abstracts, Florence,
    Italy, 28 July–2 August 2019; pp. 25–30. [Google Scholar] Xue, B.; Hu, S.; Xu,
    J.; Geng, M.; Liu, X.; Meng, H. Bayesian Neural Network Language Modeling for
    Speech Recognition. IEEE/ACM Trans. Audio Speech Lang. Process. 2022, 30, 2900–2917.
    [Google Scholar] [CrossRef] Kwon, Y.; Won, J.H.; Kim, B.J.; Paik, M.C. Uncertainty
    quantification using Bayesian neural networks in classification: Application to
    biomedical image segmentation. Comput. Stat. Data Anal. 2020, 142, 106816. [Google
    Scholar] [CrossRef] Lampinen, J.; Vehtari, A. Bayesian approach for neural networks—Review
    and case studies. Neural Netw. 2001, 14, 257–274. [Google Scholar] [CrossRef]
    Titterington, D. Bayesian methods for neural networks and related models. Stat.
    Sci. 2004, 128–139. [Google Scholar] [CrossRef] MacKay, D.J. A practical Bayesian
    framework for backpropagation networks. Neural Comput. 1992, 4, 448–472. [Google
    Scholar] [CrossRef] [Green Version] Blundell, C.; Cornebise, J.; Kavukcuoglu,
    K.; Wierstra, D. Weight uncertainty in neural network. In Proceedings of the International
    Conference on Machine Learning, Lille, France, 6–11 July 2015; pp. 1613–1622.
    [Google Scholar] Mitchell, T.M.; Mitchell, T.M. Machine Learning; McGraw-Hill:
    New York, NY, USA, 1997. [Google Scholar] Ruder, S. An overview of gradient descent
    optimization algorithms. arXiv 2016, arXiv:1609.04747. [Google Scholar] Chen,
    C.P.; Zhang, C.Y.; Chen, L.; Gan, M. Fuzzy restricted Boltzmann machine for the
    enhancement of deep learning. IEEE Trans. Fuzzy Syst. 2015, 23, 2163–2173. [Google
    Scholar] [CrossRef] Rajurkar, S.; Verma, N.K. Developing deep fuzzy network with
    Takagi Sugeno fuzzy inference system. In Proceedings of the 2017 IEEE International
    Conference on Fuzzy Systems (FUZZ-IEEE), Naples, Italy, 9–12 July 2017; pp. 1–6.
    [Google Scholar] Bhatia, V.; Rani, R. Dfuzzy: A deep learning-based fuzzy clustering
    model for large graphs. Knowl. Inf. Syst. 2018, 57, 159–181. [Google Scholar]
    [CrossRef] Chen, D.; Zhang, X.; Wang, L.; Han, Z. Prediction of cloud resources
    demand based on fuzzy deep neural network. In Proceedings of the 2018 IEEE Global
    Communications Conference (GLOBECOM), Abu Dhabi, United Arab Emirates, 9–13 December
    2018; pp. 1–5. [Google Scholar] Hernandez-Potiomkin, Y.; Saifuzzaman, M.; Bert,
    E.; Mena-Yedra, R.; Djukic, T.; Casas, J. Unsupervised incident detection model
    in urban and freeway networks. In Proceedings of the 2018 21st International Conference
    on Intelligent Transportation Systems (ITSC), Maui, HI, USA, 4–7 November 2018;
    pp. 1763–1769. [Google Scholar] Ali, F.; El-Sappagh, S.; Islam, S.R.; Kwak, D.;
    Ali, A.; Imran, M.; Kwak, K.S. A smart healthcare monitoring system for heart
    disease prediction based on ensemble deep learning and feature fusion. Inf. Fusion
    2020, 63, 208–222. [Google Scholar] [CrossRef] Al-Dmour, H.; Al-Ani, A. A clustering
    fusion technique for MR brain tissue segmentation. Neurocomputing 2018, 275, 546–559.
    [Google Scholar] [CrossRef] An, J.; Fu, L.; Hu, M.; Chen, W.; Zhan, J. A novel
    fuzzy-based convolutional neural network method to traffic flow prediction with
    uncertain traffic accident information. IEEE Access 2019, 7, 20708–20722. [Google
    Scholar] [CrossRef] Talpur, N.; Abdulkadir, S.J.; Alhussian, H.; Hasan, M.H.;
    Aziz, N.; Bamhdi, A. Deep Neuro-Fuzzy System application trends, challenges, and
    future perspectives: A systematic survey. Artif. Intell. Rev. 2022, 1–49. [Google
    Scholar] [CrossRef] Chen, D.; Zhang, X.; Wang, L.; Han, Z. Prediction of cloud
    resources demand based on hierarchical pythagorean fuzzy deep neural network.
    IEEE Trans. Serv. Comput. 2019, 14, 1890–1901. [Google Scholar] [CrossRef] Yeganejou,
    M.; Dick, S.; Miller, J. Interpretable deep convolutional fuzzy classifier. IEEE
    Trans. Fuzzy Syst. 2019, 28, 1407–1419. [Google Scholar] [CrossRef] Li, Y. Deep
    reinforcement learning: An overview. arXiv 2017, arXiv:1701.07274. [Google Scholar]
    [CrossRef] Sutton, R.S. Learning to predict by the methods of temporal differences.
    Mach. Learn. 1988, 3, 9–44. [Google Scholar] [CrossRef] Watkins, C.J.; Dayan,
    P. Q-learning. Mach. Learn. 1992, 8, 279–292. [Google Scholar] [CrossRef] Mnih,
    V.; Kavukcuoglu, K.; Silver, D.; Rusu, A.A.; Veness, J.; Bellemare, M.G.; Graves,
    A.; Riedmiller, M.; Fidjeland, A.K.; Ostrovski, G.; et al. Human-level control
    through deep reinforcement learning. Nature 2015, 518, 529–533. [Google Scholar]
    [CrossRef] Van Hasselt, H.; Guez, A.; Silver, D. Deep reinforcement learning with
    double Q-learning. In Proceedings of the AAAI Conference on Artificial Intelligence,
    Phoenix, AZ, USA, 12–17 February 2016; Volume 30. [Google Scholar] Wang, Z.; Schaul,
    T.; Hessel, M.; Hasselt, H.; Lanctot, M.; Freitas, N. Dueling network architectures
    for deep reinforcement learning. In Proceedings of the International Conference
    on Machine Learning, New York, NY, USA, 20–22 June 2016; pp. 1995–2003. [Google
    Scholar] Mnih, V.; Badia, A.P.; Mirza, M.; Graves, A.; Lillicrap, T.; Harley,
    T.; Silver, D.; Kavukcuoglu, K. Asynchronous methods for deep reinforcement learning.
    In Proceedings of the International Conference on Machine Learning, New York,
    NY, USA, 20–22 June 2016; pp. 1928–1937. [Google Scholar] Kakade, S.M. A natural
    policy gradient. Adv. Neural Inf. Process. Syst. 2001, 14, 1531–1538. [Google
    Scholar] Schulman, J.; Levine, S.; Abbeel, P.; Jordan, M.; Moritz, P. Trust region
    policy optimization. In Proceedings of the International Conference on Machine
    Learning, Lille, France, 6–11 July 2015; pp. 1889–1897. [Google Scholar] Schulman,
    J.; Moritz, P.; Levine, S.; Jordan, M.; Abbeel, P. High-dimensional continuous
    control using generalized advantage estimation. arXiv 2015, arXiv:1506.02438.
    [Google Scholar] Raina, R.; Battle, A.; Lee, H.; Packer, B.; Ng, A.Y. Self-taught
    learning: Transfer learning from unlabeled data. In Proceedings of the 24th International
    Conference on Machine Learning, Corvalis, OR, USA, 20–24 June 2007; pp. 759–766.
    [Google Scholar] Daume III, H.; Marcu, D. Domain adaptation for statistical classifiers.
    J. Artif. Intell. Res. 2006, 26, 101–126. [Google Scholar] [CrossRef] Dai, W.;
    Yang, Q.; Xue, G.R.; Yu, Y. Self-taught clustering. In Proceedings of the 25th
    International Conference on Machine Learning, New York, NY, USA, 5–9 July 2008;
    pp. 200–207. [Google Scholar] Yao, Y.; Doretto, G. Boosting for transfer learning
    with multiple sources. In Proceedings of the 2010 IEEE Computer Society Conference
    on Computer Vision and Pattern Recognition, San Francisco, CA, USA, 13–18 June
    2010; pp. 1855–1862. [Google Scholar] Lawrence, N.D.; Platt, J.C. Learning to
    learn with the informative vector machine. In Proceedings of the 21st International
    Conference on Machine Learning, Banff, AB, Canada, 4–8 July 2004; p. 65. [Google
    Scholar] Mihalkova, L.; Mooney, R.J. Transfer learning by mapping with minimal
    target data. In Proceedings of the AAAI Workshop on Transfer Learning for Complex
    Tasks, Chicago, IL, USA, 13–17 July 2008. [Google Scholar] Yin, X.; Zhu, Y.; Hu,
    J. A comprehensive survey of privacy-preserving federated learning: A taxonomy,
    review, and future directions. ACM Comput. Surv. (CSUR) 2021, 54, 1–36. [Google
    Scholar] [CrossRef] Lim, W.Y.B.; Luong, N.C.; Hoang, D.T.; Jiao, Y.; Liang, Y.C.;
    Yang, Q.; Niyato, D.; Miao, C. Federated learning in mobile edge networks: A comprehensive
    survey. IEEE Commun. Surv. Tutor. 2020, 22, 2031–2063. [Google Scholar] [CrossRef]
    [Green Version] McMahan, B.; Moore, E.; Ramage, D.; Hampson, S.; Arcas, B.A. Communication-efficient
    learning of deep networks from decentralized data. In Proceedings of the Artificial
    Intelligence and Statistics, Fort Lauderdale, FL, USA, 20–22 April 2017; pp. 1273–1282.
    [Google Scholar] Zhu, H.; Zhang, H.; Jin, Y. From federated learning to federated
    neural architecture search: A survey. Complex Intell. Syst. 2021, 7, 639–657.
    [Google Scholar] [CrossRef] Zantedeschi, V.; Bellet, A.; Tommasi, M. Fully decentralized
    joint learning of personalized models and collaboration graphs. In Proceedings
    of the International Conference on Artificial Intelligence and Statistics, Online,
    26–28 August 2020; pp. 864–874. [Google Scholar] Charles, Z.; Garrett, Z.; Huo,
    Z.; Shmulyian, S.; Smith, V. On large-cohort training for federated learning.
    Adv. Neural Inf. Process. Syst. 2021, 34, 20461–20475. [Google Scholar] Wang,
    H.; Mu noz-González, L.; Eklund, D.; Raza, S. Non-IID data re-balancing at IoT
    edge with peer-to-peer federated learning for anomaly detection. In Proceedings
    of the 14th ACM Conference on Security and Privacy in Wireless and Mobile Networks,
    Abu Dhabi, United Arab Emirates, 28 June–2 July 2021; pp. 153–163. [Google Scholar]
    Wink, T.; Nochta, Z. An approach for peer-to-peer federated learning. In Proceedings
    of the 2021 51st Annual IEEE/IFIP International Conference on Dependable Systems
    and Networks Workshops (DSN-W), Taipei, Taiwan, 21–24 June 2021; pp. 150–157.
    [Google Scholar] Yang, Q.; Liu, Y.; Chen, T.; Tong, Y. Federated machine learning:
    Concept and applications. ACM Trans. Intell. Syst. Technol. (TIST) 2019, 10, 1–19.
    [Google Scholar] [CrossRef] Yang, S.; Ren, B.; Zhou, X.; Liu, L. Parallel distributed
    logistic regression for vertical federated learning without third-party coordinator.
    In Proceedings of the IJCAI Workshop on Federated Machine Learning for User Privacy
    and Data Confidentiality, Macao, China, 10–16 August 2019. [Google Scholar] Scannapieco,
    M.; Figotin, I.; Bertino, E.; Elmagarmid, A.K. Privacy preserving schema and data
    matching. In Proceedings of the 2007 ACM SIGMOD International Conference on Management
    of Data, Beijing China, 11–14 June 2007; pp. 653–664. [Google Scholar] Liang,
    G.; Chawathe, S.S. Privacy-preserving inter-database operations. In Proceedings
    of the International Conference on Intelligence and Security Informatics, Atlanta,
    GA, USA, 19–20 May 2004; pp. 66–82. [Google Scholar] Dietterich, T.G.; Lathrop,
    R.H.; Lozano-Pérez, T. Solving the multiple instance problem with axis-parallel
    rectangles. Artif. Intell. 1997, 89, 31–71. [Google Scholar] [CrossRef] [Green
    Version] Zhu, W.; Sun, L.; Huang, J.; Han, L.; Zhang, D. Dual attention multi-instance
    deep learning for Alzheimer’s disease diagnosis with structural MRI. IEEE Trans.
    Med Imaging 2021, 40, 2354–2366. [Google Scholar] [CrossRef] Chen, Y.; Bi, J.;
    Wang, J.Z. MILES: Multiple-instance learning via embedded instance selection.
    IEEE Trans. Pattern Anal. Mach. Intell. 2006, 28, 1931–1947. [Google Scholar]
    [CrossRef] Zhou, Z.H.; Sun, Y.Y.; Li, Y.F. Multi-instance learning by treating
    instances as non-iid samples. In Proceedings of the 26th Annual International
    Conference on Machine Learning, Montreal, QC, Canada, 14–18 June 2009; pp. 1249–1256.
    [Google Scholar] Briggs, F.; Fern, X.Z.; Raich, R. Rank-loss support instance
    machines for MIML instance annotation. In Proceedings of the 18th ACM SIGKDD International
    Conference on Knowledge Discovery and Data Mining, Beijing, China, 12–16 August
    2012; pp. 534–542. [Google Scholar] Carbonneau, M.A.; Cheplygina, V.; Granger,
    E.; Gagnon, G. Multiple instance learning: A survey of problem characteristics
    and applications. Pattern Recognit. 2018, 77, 329–353. [Google Scholar] [CrossRef]
    [Green Version] Cheplygina, V.; Tax, D.M.; Loog, M. On classification with bags,
    groups and sets. Pattern Recognit. Lett. 2015, 59, 11–17. [Google Scholar] [CrossRef]
    Bunescu, R.C.; Mooney, R.J. Multiple instance learning for sparse positive bags.
    In Proceedings of the 24th International Conference on Machine Learning, New York,
    NY, USA, 20–24 June 2007; pp. 105–112. [Google Scholar] Gärtner, T.; Flach, P.A.;
    Kowalczyk, A.; Smola, A.J. Multi-instance kernels. In Proceedings of the International
    Conference on Machine Learning, Las Vegas, NV, USA, 24–27 June 2002; Volume 2.
    [Google Scholar] Gehler, P.V.; Chapelle, O. Deterministic annealing for multiple-instance
    learning. In Proceedings of the Artificial Intelligence and Statistics, San Juan,
    Puerto Rico, 21–24 March 2007; pp. 123–130. [Google Scholar] Venkatesan, R.; Chandakkar,
    P.; Li, B. Simpler non-parametric methods provide as good or better results to
    multiple-instance learning. In Proceedings of the IEEE International Conference
    on Computer Vision, Santiago, Chile, 7–13 December 2015; pp. 2605–2613. [Google
    Scholar] Amores, J. Vocabulary-based approaches for multiple-instance data: A
    comparative study. In Proceedings of the 20th International Conference on Pattern
    Recognition, Istanbul, Turkey, 23–26 August 2010; pp. 4246–4250. [Google Scholar]
    Cheplygina, V.; Tax, D.M.; Loog, M. Multiple instance learning with bag dissimilarities.
    Pattern Recognit. 2015, 48, 264–275. [Google Scholar] [CrossRef] [Green Version]
    Wang, Z.; Zhao, Z.; Zhang, C. Learning with only multiple instance positive bags.
    In Proceedings of the 2016 International Joint Conference on Neural Networks (IJCNN),
    Vancouver, BC, Canada. 24–29 July 2016; pp. 334–341. [Google Scholar] Xiao, Y.;
    Liu, B.; Hao, Z. A sphere-description-based approach for multiple-instance learning.
    IEEE Trans. Pattern Anal. Mach. Intell. 2016, 39, 242–257. [Google Scholar] [CrossRef]
    Xie, S.; Girshick, R.; Dollár, P.; Tu, Z.; He, K. Aggregated residual transformations
    for deep neural networks. In Proceedings of the IEEE Conference on Computer Vision
    and Pattern Recognition, Honolulu, HI, USA, 21–26 July 2017; pp. 1492–1500. [Google
    Scholar] Girshick, R.; Donahue, J.; Darrell, T.; Malik, J. Rich feature hierarchies
    for accurate object detection and semantic segmentation. In Proceedings of the
    IEEE Conference on Computer Vision and Pattern Recognition, Columbus, OH, USA,
    23–28 June 2014; pp. 580–587. [Google Scholar] Dai, J.; Li, Y.; He, K.; Sun, J.
    R-FCN: Object detection via region-based fully convolutional networks. Adv. Neural
    Inf. Process. Syst. 2016, 29. [Google Scholar] Liu, W.; Anguelov, D.; Erhan, D.;
    Szegedy, C.; Reed, S.; Fu, C.Y.; Berg, A.C. SSD: Single shot multibox detector.
    In Proceedings of the European Conference on Computer Vision, Amsterdam, The Netherlands,
    11–14 October 2016; pp. 21–37. [Google Scholar] Liu, L.; Ouyang, W.; Wang, X.;
    Fieguth, P.; Chen, J.; Liu, X.; Pietikäinen, M. Deep learning for generic object
    detection: A survey. Int. J. Comput. Vis. 2020, 128, 261–318. [Google Scholar]
    [CrossRef] [Green Version] Zhao, Z.Q.; Zheng, P.; Xu, S.t.; Wu, X. Object detection
    with deep learning: A review. IEEE Trans. Neural Networks Learn. Syst. 2019, 30,
    3212–3232. [Google Scholar] [CrossRef] [Green Version] Oktay, O.; Schlemper, J.;
    Folgoc, L.L.; Lee, M.; Heinrich, M.; Misawa, K.; Mori, K.; McDonagh, S.; Hammerla,
    N.Y.; Kainz, B.; et al. Attention u-net: Learning where to look for the pancreas.
    arXiv 2018, arXiv:1804.03999. [Google Scholar] Punn, N.S.; Agarwal, S. Inception
    u-net architecture for semantic segmentation to identify nuclei in microscopy
    cell images. ACM Trans. Multimed. Comput. Commun. Appl. (TOMM) 2020, 16, 1–15.
    [Google Scholar] [CrossRef] [Green Version] Li, D.; Dharmawan, D.A.; Ng, B.P.;
    Rahardja, S. Residual u-net for retinal vessel segmentation. In Proceedings of
    the IEEE International Conference on Image Processing (ICIP), Taipei, Taiwan,
    22–25 September 2019; pp. 1425–1429. [Google Scholar] Wang, C.; Zhao, Z.; Ren,
    Q.; Xu, Y.; Yu, Y. Dense U-net based on patch-based learning for retinal vessel
    segmentation. Entropy 2019, 21, 168. [Google Scholar] [CrossRef] [Green Version]
    Zhou, Z.; Siddiquee, M.M.R.; Tajbakhsh, N.; Liang, J. Unet++: Redesigning skip
    connections to exploit multiscale features in image segmentation. IEEE Trans.
    Med Imaging 2019, 39, 1856–1867. [Google Scholar] [CrossRef] [Green Version] Badrinarayanan,
    V.; Kendall, A.; Cipolla, R. SegNet: A deep convolutional encoder-decoder architecture
    for image segmentation. IEEE Trans. Pattern Anal. Mach. Intell. 2017, 39, 2481–2495.
    [Google Scholar] [CrossRef] Zhao, H.; Shi, J.; Qi, X.; Wang, X.; Jia, J. Pyramid
    scene parsing network. In Proceedings of the IEEE Conference on Computer Vision
    and Pattern Recognition, Honolulu, HI, USA, 21–26 July 2017; pp. 2881–2890. [Google
    Scholar] Chen, L.C.; Papandreou, G.; Kokkinos, I.; Murphy, K.; Yuille, A.L. Deeplab:
    Semantic image segmentation with deep convolutional nets, atrous convolution,
    and fully connected CRFs. IEEE Trans. Pattern Anal. Mach. Intell. 2017, 40, 834–848.
    [Google Scholar] [CrossRef] [Green Version] Hao, S.; Zhou, Y.; Guo, Y. A brief
    survey on semantic segmentation with deep learning. Neurocomputing 2020, 406,
    302–321. [Google Scholar] [CrossRef] Lateef, F.; Ruichek, Y. Survey on semantic
    segmentation using deep learning techniques. Neurocomputing 2019, 338, 321–348.
    [Google Scholar] [CrossRef] Yu, H.; Yang, Z.; Tan, L.; Wang, Y.; Sun, W.; Sun,
    M.; Tang, Y. Methods and datasets on semantic segmentation: A review. Neurocomputing
    2018, 304, 82–103. [Google Scholar] [CrossRef] Bolya, D.; Zhou, C.; Xiao, F.;
    Lee, Y.J. Yolact: Real-time instance segmentation. In Proceedings of the IEEE/CVF
    International Conference on Computer Vision, Seoul, Republic of Korea, 27 October–2
    November 2019; pp. 9157–9166. [Google Scholar] Wang, X.; Zhang, R.; Shen, C.;
    Kong, T.; Li, L. Solo: A simple framework for instance segmentation. IEEE Trans.
    Pattern Anal. Mach. Intell. 2021, 44, 8587–8601. [Google Scholar] [CrossRef] Xie,
    E.; Sun, P.; Song, X.; Wang, W.; Liu, X.; Liang, D.; Shen, C.; Luo, P. Polarmask:
    Single shot instance segmentation with polar representation. In Proceedings of
    the IEEE/CVF Conference on Computer Vision and Pattern Recognition, Seattle, WA,
    USA, 13–19 June 2020; pp. 12193–12202. [Google Scholar] Sofiiuk, K.; Barinova,
    O.; Konushin, A. Adaptis: Adaptive instance selection network. In Proceedings
    of the IEEE/CVF International Conference on Computer Vision, Seoul, Republic of
    Korea, 27 October–2 November 2019; pp. 7355–7363. [Google Scholar] Tian, Z.; Shen,
    C.; Chen, H.; He, T. Fcos: Fully convolutional one-stage object detection. In
    Proceedings of the IEEE/CVF International Conference on Computer Vision, Seoul,
    Republic of Korea, 27 October–2 November 2019; pp. 9627–9636. [Google Scholar]
    Hafiz, A.M.; Bhat, G.M. A survey on instance segmentation: State of the art. Int.
    J. Multimed. Inf. Retr. 2020, 9, 171–189. [Google Scholar] [CrossRef] Zhang, H.;
    Sun, H.; Ao, W.; Dimirovski, G. A survey on instance segmentation: Recent advances
    and challenges. Int. J. Innov. Comput. Inf. Control 2021, 17, 1041–1053. [Google
    Scholar] Anoob, N.; Ebey, S.J.; Praveen, P.; Prabudhan, P.; Augustine, P. A Comparison
    on Instance Segmentation Models. In Proceedings of the 2021 International Conference
    on Advances in Computing and Communications (ICACC), Kochi, Kakkanad, India, 21–23
    October 2021; pp. 1–5. [Google Scholar] Newell, A.; Yang, K.; Deng, J. Stacked
    hourglass networks for human pose estimation. In Proceedings of the European Conference
    on Computer Vision, Amsterdam, The Netherlands, 11–14 October 2016; pp. 483–499.
    [Google Scholar] Kendall, A.; Grimes, M.; Cipolla, R. Posenet: A convolutional
    network for real-time 6-dof camera relocalization. In Proceedings of the IEEE
    International Conference on Computer Vision, Santiago, Chile, 7–13 December 2015;
    pp. 2938–2946. [Google Scholar] Marchand, E.; Uchiyama, H.; Spindler, F. Pose
    estimation for augmented reality: A hands-on survey. IEEE Trans. Vis. Comput.
    Graph. 2015, 22, 2633–2651. [Google Scholar] [CrossRef] [Green Version] Liu, Z.;
    Zhu, J.; Bu, J.; Chen, C. A survey of human pose estimation: The body parts parsing
    based methods. J. Vis. Commun. Image Represent. 2015, 32, 10–19. [Google Scholar]
    [CrossRef] Sarafianos, N.; Boteanu, B.; Ionescu, B.; Kakadiaris, I.A. 3D human
    pose estimation: A review of the literature and analysis of covariates. Comput.
    Vis. Image Underst. 2016, 152, 1–20. [Google Scholar] [CrossRef] Johnson, J.;
    Alahi, A.; Fei-Fei, L. Perceptual losses for real-time style transfer and super-resolution.
    In Proceedings of the European Conference on Computer Vision, Amsterdam, The Netherlands,
    11–14 October 2016; pp. 694–711. [Google Scholar] Dumoulin, V.; Shlens, J.; Kudlur,
    M. A learned representation for artistic style. arXiv 2016, arXiv:1610.07629.
    [Google Scholar] Huang, X.; Belongie, S. Arbitrary style transfer in real-time
    with adaptive instance normalization. In Proceedings of the IEEE International
    Conference on Computer Vision, Venice, Italy, 22–29 October 2017; pp. 1501–1510.
    [Google Scholar] Jin, D.; Jin, Z.; Hu, Z.; Vechtomova, O.; Mihalcea, R. Deep learning
    for text style transfer: A survey. Comput. Linguist. 2022, 48, 155–205. [Google
    Scholar] [CrossRef] Zhao, C. A survey on image style transfer approaches using
    deep learning. In Proceedings of the Journal of Physics: Conference Series, Xi’an,
    China, 18–19 October 2020; Volume 1453, p. 012129. [Google Scholar] Olatunji,
    I.E.; Cheng, C.H. Video analytics for visual surveillance and applications: An
    overview and survey. Mach. Learn. Paradig. 2019, 475–515. [Google Scholar] Bhuiyan,
    M.R.; Abdullah, J.; Hashim, N.; Al Farid, F. Video analytics using deep learning
    for crowd analysis: A review. Multimed. Tools Appl. 2022, 81, 27895–27922. [Google
    Scholar] [CrossRef] Donahue, J.; Anne Hendricks, L.; Guadarrama, S.; Rohrbach,
    M.; Venugopalan, S.; Saenko, K.; Darrell, T. Long-term recurrent convolutional
    networks for visual recognition and description. In Proceedings of the IEEE Conference
    on Computer Vision and Pattern Recognition, Boston, MA, USA, 7–12 June 2015; pp.
    2625–2634. [Google Scholar] Ballas, N.; Yao, L.; Pal, C.; Courville, A. Delving
    deeper into convolutional networks for learning video representations. arXiv 2015,
    arXiv:1511.06432. [Google Scholar] Hu, Y.T.; Huang, J.B.; Schwing, A. Maskrnn:
    Instance level video object segmentation. Adv. Neural Inf. Process. Syst. 2017,
    30, 325–334. [Google Scholar] Xiao, H.; Feng, J.; Lin, G.; Liu, Y.; Zhang, M.
    Monet: Deep motion exploitation for video object segmentation. In Proceedings
    of the IEEE Conference on Computer Vision and Pattern Recognition, Salt Lake City,
    UT, USA, 18–23 June 2018; pp. 1140–1148. [Google Scholar] Zhang, T.; Aftab, W.;
    Mihaylova, L.; Langran-Wheeler, C.; Rigby, S.; Fletcher, D.; Maddock, S.; Bosworth,
    G. Recent advances in video analytics for rail network surveillance for security,
    trespass and suicide prevention—A survey. Sensors 2022, 22, 4324. [Google Scholar]
    [CrossRef] Sánchez, F.L.; Hupont, I.; Tabik, S.; Herrera, F. Revisiting crowd
    behaviour analysis through deep learning: Taxonomy, anomaly detection, crowd emotions,
    datasets, opportunities and prospects. Inf. Fusion 2020, 64, 318–335. [Google
    Scholar] [CrossRef] Meijering, E. A bird’s-eye view of deep learning in bioimage
    analysis. Comput. Struct. Biotechnol. J. 2020, 18, 2312–2325. [Google Scholar]
    [CrossRef] Zhou, Z.; Rahman Siddiquee, M.M.; Tajbakhsh, N.; Liang, J. Unet++:
    A nested U-Net architecture for medical image segmentation. In Deep learning in
    Medical Image Analysis and Multimodal Learning for Clinical Decision Support;
    Springer: Berlin, Germany, 2018; pp. 3–11. [Google Scholar] Nadeem, M.W.; Ghamdi,
    M.A.A.; Hussain, M.; Khan, M.A.; Khan, K.M.; Almotiri, S.H.; Butt, S.A. Brain
    tumor analysis empowered with deep learning: A review, taxonomy, and future challenges.
    Brain Sci. 2020, 10, 118. [Google Scholar] [CrossRef] [Green Version] Litjens,
    G.; Kooi, T.; Bejnordi, B.E.; Setio, A.A.A.; Ciompi, F.; Ghafoorian, M.; Van Der
    Laak, J.A.; Van Ginneken, B.; Sánchez, C.I. A survey on deep learning in medical
    image analysis. Med Image Anal. 2017, 42, 60–88. [Google Scholar] [CrossRef] [Green
    Version] Haskins, G.; Kruger, U.; Yan, P. Deep learning in medical image registration:
    A survey. Mach. Vis. Appl. 2020, 31, 1–18. [Google Scholar] [CrossRef] [Green
    Version] Liu, X.; Song, L.; Liu, S.; Zhang, Y. A review of deep-learning-based
    medical image segmentation methods. Sustainability 2021, 13, 1224. [Google Scholar]
    [CrossRef] Zhu, X.; Yao, J.; Huang, J. Deep convolutional neural network for survival
    analysis with pathological images. In Proceedings of the 2016 IEEE International
    Conference on Bioinformatics and Biomedicine (BIBM), Shenzhen, China, 15–18 December
    2016; pp. 544–547. [Google Scholar] Li, Y.; Xie, X.; Shen, L.; Liu, S. Reverse
    active learning based atrous DenseNet for pathological image classification. BMC
    Bioinform. 2019, 20, 1–15. [Google Scholar] [CrossRef] Deng, S.; Zhang, X.; Yan,
    W.; Chang, E.I.; Fan, Y.; Lai, M.; Xu, Y. Deep learning in digital pathology image
    analysis: A survey. Front. Med. 2020, 14, 470–487. [Google Scholar] [CrossRef]
    Rogers, M.A.; Aikawa, E. Cardiovascular calcification: Artificial intelligence
    and big data accelerate mechanistic discovery. Nat. Rev. Cardiol. 2019, 16, 261–274.
    [Google Scholar] [CrossRef] Choi, H. Deep learning in nuclear medicine and molecular
    imaging: Current perspectives and future directions. Nucl. Med. Mol. Imaging 2018,
    52, 109–118. [Google Scholar] [CrossRef] [PubMed] Moen, E.; Bannon, D.; Kudo,
    T.; Graf, W.; Covert, M.; Van Valen, D. Deep learning for cellular image analysis.
    Nat. Methods 2019, 16, 1233–1246. [Google Scholar] [CrossRef] [PubMed] Cheng,
    H.J.; Hsu, C.H.; Hung, C.L.; Lin, C.Y. A review for cell and particle tracking
    on microscopy images using algorithms and deep learning technologies. Biomed.
    J. 2021, 21, S2319–S4170. [Google Scholar] [CrossRef] [PubMed] Zhu, Y.; Meijering,
    E. Automatic improvement of deep learning-based cell segmentation in time-lapse
    microscopy by neural architecture search. Bioinformatics 2021, 37, 4844–4850.
    [Google Scholar] [CrossRef] Zhu, Y.; Meijering, E. Neural architecture search
    for microscopy cell segmentation. In Proceedings of the International Workshop
    on Machine Learning in Medical Imaging, Lima, Peru, 4 October 2020; pp. 542–551.
    [Google Scholar] de Haan, K.; Rivenson, Y.; Wu, Y.; Ozcan, A. Deep-learning-based
    image reconstruction and enhancement in optical microscopy. Proc. IEEE 2019, 108,
    30–50. [Google Scholar] [CrossRef] Wu, Y.; Rivenson, Y.; Wang, H.; Luo, Y.; Ben-David,
    E.; Bentolila, L.A.; Pritz, C.; Ozcan, A. Three-dimensional virtual refocusing
    of fluorescence microscopy images using deep learning. Nat. Methods 2019, 16,
    1323–1331. [Google Scholar] [CrossRef] [Green Version] Liu, Z.; Jin, L.; Chen,
    J.; Fang, Q.; Ablameyko, S.; Yin, Z.; Xu, Y. A survey on applications of deep
    learning in microscopy image analysis. Comput. Biol. Med. 2021, 134, 104523. [Google
    Scholar] [CrossRef] Poplin, R.; Chang, P.C.; Alexander, D.; Schwartz, S.; Colthurst,
    T.; Ku, A.; Newburger, D.; Dijamco, J.; Nguyen, N.; Afshar, P.T.; et al. A universal
    SNP and small-indel variant caller using deep neural networks. Nat. Biotechnol.
    2018, 36, 983–987. [Google Scholar] [CrossRef] Xie, R.; Wen, J.; Quitadamo, A.;
    Cheng, J.; Shi, X. A deep auto-encoder model for gene expression prediction. BMC
    Genomics 2017, 18, 39–49. [Google Scholar] [CrossRef] [Green Version] Zou, J.;
    Huss, M.; Abid, A.; Mohammadi, P.; Torkamani, A.; Telenti, A. A primer on deep
    learning in genomics. Nat. Genet. 2019, 51, 12–18. [Google Scholar] [CrossRef]
    Martorell-Marugán, J.; Tabik, S.; Benhammou, Y.; del Val, C.; Zwir, I.; Herrera,
    F.; Carmona-Sáez, P. Deep learning in omics data analysis and precision medicine.
    Exon Publ. 2019, 37–53. [Google Scholar] Tripathi, R.; Patel, S.; Kumari, V.;
    Chakraborty, P.; Varadwaj, P.K. DeepLNC, a long non-coding RNA prediction tool
    using deep neural network. Netw. Model. Anal. Health Inform. Bioinform. 2016,
    5, 1–14. [Google Scholar] [CrossRef] Heydari, A.A.; Sindi, S.S. Deep learning
    in spatial transcriptomics: Learning from the next next-generation sequencing.
    BioRxiv 2022. [Google Scholar] [CrossRef] Zhang, Z.; Zhao, Y.; Liao, X.; Shi,
    W.; Li, K.; Zou, Q.; Peng, S. Deep learning in omics: A survey and guideline.
    Briefings Funct. Genom. 2019, 18, 41–57. [Google Scholar] [CrossRef] Zemouri,
    R.; Zerhouni, N.; Racoceanu, D. Deep learning in the biomedical applications:
    Recent and future status. Appl. Sci. 2019, 9, 1526. [Google Scholar] [CrossRef]
    [Green Version] Gao, Y.; Wang, S.; Deng, M.; Xu, J. RaptorX-Angle: Real-value
    prediction of protein backbone dihedral angles through a hybrid method of clustering
    and deep learning. BMC Bioinform. 2018, 19, 73–84. [Google Scholar] [CrossRef]
    [Green Version] Hu, Y.; Nie, T.; Shen, D.; Yu, G. Sequence translating model using
    deep neural block cascade network: Taking protein secondary structure prediction
    as an example. In Proceedings of the 2018 IEEE International Conference on Big
    Data and Smart Computing (BigComp), Shanghai, China, 15–17 January 2018; pp. 58–65.
    [Google Scholar] Nguyen, S.P.; Li, Z.; Xu, D.; Shang, Y. New deep learning methods
    for protein loop modeling. IEEE/ACM Trans. Comput. Biol. Bioinform. 2017, 16,
    596–606. [Google Scholar] [CrossRef] Lei, H.; Wen, Y.; You, Z.; Elazab, A.; Tan,
    E.L.; Zhao, Y.; Lei, B. Protein–protein interactions prediction via multimodal
    deep polynomial network and regularized extreme learning machine. IEEE J. Biomed.
    Health Informatics 2018, 23, 1290–1303. [Google Scholar] [CrossRef] Bahi, M.;
    Batouche, M. Drug-target interaction prediction in drug repositioning based on
    deep semi-supervised learning. In Proceedings of the IFIP International Conference
    on Computational Intelligence and Its Applications, Oran, Algeria, 8–10 May 2018;
    pp. 302–313. [Google Scholar] Li, S.; Wan, F.; Shu, H.; Jiang, T.; Zhao, D.; Zeng,
    J. MONN: A multi-objective neural network for predicting compound-protein interactions
    and affinities. Cell Syst. 2020, 10, 308–322. [Google Scholar] [CrossRef] Baldi,
    P. Deep learning in biomedical data science. Annu. Rev. Biomed. Data Sci. 2018,
    1, 181–205. [Google Scholar] [CrossRef] Fink, O.; Wang, Q.; Svensen, M.; Dersin,
    P.; Lee, W.J.; Ducoffe, M. Potential, challenges and future directions for deep
    learning in prognostics and health management applications. Eng. Appl. Artif.
    Intell. 2020, 92, 103678. [Google Scholar] [CrossRef] Sahoo, S.; Dash, M.; Behera,
    S.; Sabut, S. Machine learning approach to detect cardiac arrhythmias in ECG signals:
    A survey. Innov. Res. Biomed. Eng. 2020, 41, 185–194. [Google Scholar] [CrossRef]
    Xiao, C.; Choi, E.; Sun, J. Opportunities and challenges in developing deep learning
    models using electronic health records data: A systematic review. J. Am. Med.
    Inform. Assoc. 2018, 25, 1419–1428. [Google Scholar] [CrossRef] [Green Version]
    Miotto, R.; Li, L.; Kidd, B.A.; Dudley, J.T. Deep patient: An unsupervised representation
    to predict the future of patients from the electronic health records. Sci. Rep.
    2016, 6, 1–10. [Google Scholar] [CrossRef] [Green Version] Li, Y.; Rao, S.; Solares,
    J.R.A.; Hassaine, A.; Ramakrishnan, R.; Canoy, D.; Zhu, Y.; Rahimi, K.; Salimi-Khorshidi,
    G. BEHRT: Transformer for electronic health records. Sci. Rep. 2020, 10, 1–12.
    [Google Scholar] [CrossRef] Pham, T.; Tran, T.; Phung, D.; Venkatesh, S. Predicting
    healthcare trajectories from medical records: A deep learning approach. J. Biomed.
    Inform. 2017, 69, 218–229. [Google Scholar] [CrossRef] Isensee, F.; Jaeger, P.F.;
    Kohl, S.A.; Petersen, J.; Maier-Hein, K.H. nnU-Net: A self-configuring method
    for deep learning-based biomedical image segmentation. Nat. Methods 2021, 18,
    203–211. [Google Scholar] [CrossRef] Sun, Y.; Chen, Y.; Wang, X.; Tang, X. Deep
    learning face representation by joint identification-verification. Adv. Neural
    Inf. Process. Syst. 2014, 27, 1988–1996. [Google Scholar] Taigman, Y.; Yang, M.;
    Ranzato, M.; Wolf, L. Web-scale training for face identification. In Proceedings
    of the IEEE Conference on Computer Vision and Pattern Recognition, Boston, MA,
    USA, 7–12 June 2015; pp. 2746–2754. [Google Scholar] Schroff, F.; Kalenichenko,
    D.; Philbin, J. Facenet: A unified embedding for face recognition and clustering.
    In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,
    Boston, MA, USA, 7–12 June 2015; pp. 815–823. [Google Scholar] Zhu, Z.; Luo, P.;
    Wang, X.; Tang, X. Deep learning identity-preserving face space. In Proceedings
    of the IEEE International Conference on Computer Vision, Sydney, Australia, 1–8
    December 2013; pp. 113–120. [Google Scholar] Masi, I.; Rawls, S.; Medioni, G.;
    Natarajan, P. Pose-aware face recognition in the wild. In Proceedings of the IEEE
    Conference on Computer Vision and Pattern Recognition, Las Vegas, NV, USA, 27–30
    June 2016; pp. 4838–4846. [Google Scholar] Sun, Y.; Wang, X.; Tang, X. Sparsifying
    neural network connections for face recognition. In Proceedings of the IEEE Conference
    on Computer Vision and Pattern Recognition, Las Vegas, NV, USA, 27–30 June 2016;
    pp. 4856–4864. [Google Scholar] Peng, X.; Ratha, N.; Pankanti, S. Learning face
    recognition from limited training data using deep neural networks. In Proceedings
    of the 2016 23rd International Conference on Pattern Recognition (ICPR), Cancún,
    Mexico, 4–8 December 2016; pp. 1442–1447. [Google Scholar] Tran, L.; Yin, X.;
    Liu, X. Representation learning by rotating your faces. IEEE Trans. Pattern Anal.
    Mach. Intell. 2018, 41, 3007–3021. [Google Scholar] [CrossRef] [Green Version]
    Yin, W.; Fu, Y.; Sigal, L.; Xue, X. Semi-latent GAN: Learning to generate and
    modify facial images from attributes. arXiv 2017, arXiv:1704.02166. [Google Scholar]
    Huerta, I.; Fernández, C.; Segura, C.; Hernando, J.; Prati, A. A deep analysis
    on age estimation. Pattern Recognit. Lett. 2015, 68, 239–249. [Google Scholar]
    [CrossRef] [Green Version] Wang, X.; Guo, R.; Kambhamettu, C. Deeply-learned feature
    for age estimation. In Proceedings of the 2015 IEEE Winter Conference on Applications
    of Computer Vision, Waikoloa, HI, USA, 5–9 January 2015; pp. 534–541. [Google
    Scholar] Liu, H.; Lu, J.; Feng, J.; Zhou, J. Label-sensitive deep metric learning
    for facial age estimation. IEEE Trans. Inf. Forensics Secur. 2017, 13, 292–305.
    [Google Scholar] [CrossRef] Rothe, R.; Timofte, R.; Van Gool, L. Deep expectation
    of real and apparent age from a single image without facial landmarks. Int. J.
    Comput. Vis. 2018, 126, 144–157. [Google Scholar] [CrossRef] [Green Version] Nie,
    L.; Kumar, A.; Zhan, S. Periocular recognition using unsupervised convolutional
    RBM feature learning. In Proceedings of the 2014 22nd International Conference
    on Pattern Recognition, Stockholm, Sweden, 24–28 August 2014; pp. 399–404. [Google
    Scholar] Raghavendra, R.; Busch, C. Learning deeply coupled autoencoders for smartphone
    based robust periocular verification. In Proceedings of the 2016 IEEE International
    Conference on Image Processing (ICIP), Phoenix, AZ, USA, 25–28 September 2016;
    pp. 325–329. [Google Scholar] Ahuja, K.; Islam, R.; Barbhuiya, F.A.; Dey, K. A
    preliminary study of CNNs for iris and periocular verification in the visible
    spectrum. In Proceedings of the 2016 23rd International Conference on Pattern
    Recognition (ICPR), Cancun, Mexico, 4–8 December 2016; pp. 181–186. [Google Scholar]
    Daugman, J. New methods in iris recognition. IEEE Trans. Syst. Man Cybern. Part
    B (Cybern.) 2007, 37, 1167–1175. [Google Scholar] [CrossRef] Liu, N.; Zhang, M.;
    Li, H.; Sun, Z.; Tan, T. DeepIris: Learning pairwise filter bank for heterogeneous
    iris verification. Pattern Recognit. Lett. 2016, 82, 154–161. [Google Scholar]
    [CrossRef] Raja, K.B.; Raghavendra, R.; Vemuri, V.K.; Busch, C. Smartphone based
    visible iris recognition using deep sparse filtering. Pattern Recognit. Lett.
    2015, 57, 33–42. [Google Scholar] [CrossRef] Minaee, S.; Azimi, E.; Abdolrashidi,
    A. Fingernet: Pushing the limits of fingerprint recognition using convolutional
    neural network. arXiv 2019, arXiv:1907.12956. [Google Scholar] Sajjad, M.; Khan,
    S.; Hussain, T.; Muhammad, K.; Sangaiah, A.K.; Castiglione, A.; Esposito, C.;
    Baik, S.W. CNN-based anti-spoofing two-tier multi-factor authentication system.
    Pattern Recognit. Lett. 2019, 126, 123–131. [Google Scholar] [CrossRef] Nogueira,
    R.F.; de Alencar Lotufo, R.; Machado, R.C. Fingerprint liveness detection using
    convolutional neural networks. IEEE Trans. Inf. Forensics Secur. 2016, 11, 1206–1213.
    [Google Scholar] [CrossRef] Goel, I.; Puhan, N.B.; Mandal, B. Deep convolutional
    neural network for double-identity fingerprint detection. IEEE Sensors Lett. 2020,
    4, 1–4. [Google Scholar] [CrossRef] Chugh, T.; Cao, K.; Jain, A.K. Fingerprint
    spoof buster: Use of minutiae-centered patches. IEEE Trans. Inf. Forensics Secur.
    2018, 13, 2190–2202. [Google Scholar] [CrossRef] Cao, K.; Jain, A.K. Automated
    latent fingerprint recognition. IEEE Trans. Pattern Anal. Mach. Intell. 2018,
    41, 788–800. [Google Scholar] [CrossRef] [PubMed] [Green Version] Abdellatef,
    E.; Omran, E.M.; Soliman, R.F.; Ismail, N.A.; Abd Elrahman, S.E.S.; Ismail, K.N.;
    Rihan, M.; El-Samie, A.; Fathi, E.; Eisa, A.A. Fusion of deep-learned and hand-crafted
    features for cancelable recognition systems. Soft Comput. 2020, 24, 15189–15208.
    [Google Scholar] [CrossRef] Zhu, Y.; Yin, X.; Jia, X.; Hu, J. Latent fingerprint
    segmentation based on convolutional neural networks. In Proceedings of the 2017
    IEEE Workshop on Information Forensics and Security (WIFS), Rennes, France, 4–7
    December 2017; pp. 1–6. [Google Scholar] Liu, M.; Qian, P. Automatic segmentation
    and enhancement of latent fingerprints using deep nested unets. IEEE Trans. Inf.
    Forensics Secur. 2020, 16, 1709–1719. [Google Scholar] [CrossRef] Song, D.; Tang,
    Y.; Feng, J. Aggregating minutia-centred deep convolutional features for fingerprint
    indexing. Pattern Recognit. 2019, 88, 397–408. [Google Scholar] [CrossRef] Yin,
    X.; Hu, J.; Xu, J. Contactless fingerprint enhancement via intrinsic image decomposition
    and guided image filtering. In Proceedings of the 2016 IEEE 11th Conference on
    Industrial Electronics and Applications (ICIEA), Hefei, China, 5–7 June 2016;
    pp. 144–149. [Google Scholar] Yin, X.; Zhu, Y.; Hu, J. A robust contactless fingerprint
    enhancement algorithm. In Proceedings of the International Conference on Mobile
    Networks and Management, Melbourne, VIC, Australia, 13–15 December 2017; pp. 127–136.
    [Google Scholar] Lin, C.; Kumar, A. Contactless and partial 3D fingerprint recognition
    using multi-view deep representation. Pattern Recognit. 2018, 83, 314–327. [Google
    Scholar] [CrossRef] Yin, X.; Zhu, Y.; Hu, J. Contactless fingerprint recognition
    based on global minutia topology and loose genetic algorithm. IEEE Trans. Inf.
    Forensics Secur. 2019, 15, 28–41. [Google Scholar] [CrossRef] Yin, X.; Zhu, Y.;
    Hu, J. A survey on 2D and 3D contactless fingerprint biometrics: A taxonomy, review,
    and future directions. IEEE Open J. Comput. Soc. 2021, 2, 370–381. [Google Scholar]
    [CrossRef] Kim, S.; Park, B.; Song, B.S.; Yang, S. Deep belief network based statistical
    feature learning for fingerprint liveness detection. Pattern Recognit. Lett. 2016,
    77, 58–65. [Google Scholar] [CrossRef] Yuan, C.; Chen, X.; Yu, P.; Meng, R.; Cheng,
    W.; Wu, Q.; Sun, X. Semi-supervised stacked autoencoder-based deep hierarchical
    semantic feature for real-time fingerprint liveness detection. J. Real-Time Image
    Process. 2020, 17, 55–71. [Google Scholar] [CrossRef] Minaee, S.; Abdolrashidi,
    A. Finger-GAN: Generating realistic fingerprint images using connectivity imposed
    GAN. arXiv 2018, arXiv:1812.10482. [Google Scholar] Lee, S.; Jang, S.W.; Kim,
    D.; Hahn, H.; Kim, G.Y. A novel fingerprint recovery scheme using deep neural
    network-based learning. Multimed. Tools Appl. 2021, 80, 34121–34135. [Google Scholar]
    [CrossRef] Kim, H.; Cui, X.; Kim, M.G.; Nguyen, T.H.B. Fingerprint generation
    and presentation attack detection using deep neural networks. In Proceedings of
    the 2019 IEEE Conference on Multimedia Information Processing and Retrieval, San
    Jose, CA, USA, 28–30 March 2019; pp. 375–378. [Google Scholar] Tabassi, E.; Chugh,
    T.; Deb, D.; Jain, A.K. Altered fingerprints: Detection and localization. In Proceedings
    of the 2018 IEEE 9th International Conference on Biometrics Theory, Applications
    and Systems, Redondo Beach, CA, USA, 22–25 October 2018; pp. 1–9. [Google Scholar]
    Jalali, A.; Mallipeddi, R.; Lee, M. Deformation invariant and contactless palmprint
    recognition using convolutional neural network. In Proceedings of the 3rd International
    Conference on Human-agent Interaction, Daegu, Republic of Korea, 21–24 October
    2015; pp. 209–212. [Google Scholar] Svoboda, J.; Masci, J.; Bronstein, M.M. Palmprint
    recognition via discriminative index learning. In Proceedings of the 2016 23rd
    International Conference on Pattern Recognition, Cancun, Mexico, 4–8 December
    2016; pp. 4232–4237. [Google Scholar] Ravanelli, M.; Bengio, Y. Speaker recognition
    from raw waveform with SincNet. In Proceedings of the 2018 IEEE Spoken Language
    Technology Workshop (SLT), Athens, Greece, 18–21 December 2018; pp. 1021–1028.
    [Google Scholar] Jung, J.w.; Heo, H.S.; Kim, J.h.; Shim, H.j.; Yu, H.J. RawNet:
    Advanced end-to-end deep neural network using raw waveforms for text-independent
    speaker verification. arXiv 2019, arXiv:1904.08104. [Google Scholar] Dehak, N.;
    Kenny, P.J.; Dehak, R.; Dumouchel, P.; Ouellet, P. Front-end factor analysis for
    speaker verification. IEEE Trans. Audio, Speech, Lang. Process. 2010, 19, 788–798.
    [Google Scholar] [CrossRef] Variani, E.; Lei, X.; McDermott, E.; Moreno, I.L.;
    Gonzalez-Dominguez, J. Deep neural networks for small footprint text-dependent
    speaker verification. In Proceedings of the 2014 IEEE International Conference
    on Acoustics, Speech and Signal Processing (ICASSP), lorence, Italy, 4–9 May 2014;
    pp. 4052–4056. [Google Scholar] Snyder, D.; Garcia-Romero, D.; Sell, G.; Povey,
    D.; Khudanpur, S. X-vectors: Robust DNN embeddings for speaker recognition. In
    Proceedings of the 2018 IEEE International Conference on Acoustics, Speech and
    Signal Processing (ICASSP), Calgary, AB, Canada, 15–20 April 2018; pp. 5329–5333.
    [Google Scholar] Zhang, C.; Bahmaninezhad, F.; Ranjan, S.; Dubey, H.; Xia, W.;
    Hansen, J.H. UTD-CRSS systems for 2018 NIST speaker recognition evaluation. In
    Proceedings of the 2019 IEEE International Conference on Acoustics, Speech and
    Signal Processing (ICASSP), Brighton, UK, 12–17 May 2019; pp. 5776–5780. [Google
    Scholar] Zhang, Z.; Wang, L.; Kai, A.; Yamada, T.; Li, W.; Iwahashi, M. Deep neural
    network-based bottleneck feature and denoising autoencoder-based dereverberation
    for distant-talking speaker identification. EURASIP J. Audio Speech Music. Process.
    2015, 2015, 1–13. [Google Scholar] [CrossRef] [Green Version] Hu, Z.; Fu, Y.;
    Luo, Y.; Xu, X.; Xia, Z.; Zhang, H. Speaker recognition based on short utterance
    compensation method of generative adversarial networks. Int. J. Speech Technol.
    2020, 23, 443–450. [Google Scholar] [CrossRef] Chen, L.; Liu, Y.; Xiao, W.; Wang,
    Y.; Xie, H. SpeakerGAN: Speaker identification with conditional generative adversarial
    network. Neurocomputing 2020, 418, 211–220. [Google Scholar] [CrossRef] Nathwani,
    C. Online signature verification using bidirectional recurrent neural network.
    In Proceedings of the 2020 4th International Conference on Intelligent Computing
    and Control Systems (ICICCS), Madurai, India, 13–15 May 2020; pp. 1076–1078. [Google
    Scholar] Lai, S.; Jin, L.; Lin, L.; Zhu, Y.; Mao, H. SynSig2Vec: Learning representations
    from synthetic dynamic signatures for real-world verification. In Proceedings
    of the AAAI Conference on Artificial Intelligence, New York, NY, USA, 7–12 February
    2020; Volume 34, pp. 735–742. [Google Scholar] Ribeiro, B.; Gonçalves, I.; Santos,
    S.; Kovacec, A. Deep learning networks for off-line handwritten signature recognition.
    In Proceedings of the Iberoamerican Congress on Pattern Recognition, Havana, Cuba,
    28–31 October 2011; pp. 523–532. [Google Scholar] Ahrabian, K.; BabaAli, B. Usage
    of autoencoders and Siamese networks for online handwritten signature verification.
    Neural Comput. Appl. 2019, 31, 9321–9334. [Google Scholar] [CrossRef] [Green Version]
    Lai, S.; Jin, L.; Yang, W. Online signature verification using recurrent neural
    network and length-normalized path signature descriptor. In Proceedings of the
    2017 14th IAPR International Conference on Document Analysis and Recognition (ICDAR),
    Kyoto, Japan, 9–15 November 2017; Volume 1, pp. 400–405. [Google Scholar] Dey,
    S.; Dutta, A.; Toledo, J.I.; Ghosh, S.K.; Lladós, J.; Pal, U. Signet: Convolutional
    siamese network for writer independent offline signature verification. arXiv 2017,
    arXiv:1707.02131. [Google Scholar] Han, J.; Bhanu, B. Individual recognition using
    gait energy image. IEEE Trans. Pattern Anal. Mach. Intell. 2005, 28, 316–322.
    [Google Scholar] [CrossRef] Zou, Q.; Wang, Y.; Wang, Q.; Zhao, Y.; Li, Q. Deep
    Learning-Based Gait Recognition Using Smartphones in the Wild. IEEE Trans. Inf.
    Forensics Secur. 2020, 15, 3197–3212. [Google Scholar] [CrossRef] [Green Version]
    Wang, C.; Zhang, J.; Pu, J.; Yuan, X.; Wang, L. Chrono-gait image: A novel temporal
    template for gait recognition. In Proceedings of the European Conference on Computer
    Vision, Heraklion, Greece, 5–11 September 2010; pp. 257–270. [Google Scholar]
    Lin, B.; Zhang, S.; Bao, F. Gait recognition with multiple-temporal-scale 3D convolutional
    neural network. In Proceedings of the 28th ACM International Conference on Multimedia,
    New York, NY, USA, 12–16 October 2020; pp. 3054–3062. [Google Scholar] El-Fiqi,
    H.; Wang, M.; Salimi, N.; Kasmarik, K.; Barlow, M.; Abbass, H. Convolution neural
    networks for person identification and verification using steady state visual
    evoked potential. In Proceedings of the 2018 IEEE International Conference on
    Systems, Man, and Cybernetics (SMC), Miyazaki, Japan, 7–10 October 2018; pp. 1062–1069.
    [Google Scholar] Yang, S.; Deravi, F.; Hoque, S. Task sensitivity in EEG biometric
    recognition. Pattern Anal. Appl. 2018, 21, 105–117. [Google Scholar] [CrossRef]
    [Green Version] Wang, M.; Kasmarik, K.; Bezerianos, A.; Tan, K.C.; Abbass, H.
    On the channel density of EEG signals for reliable biometric recognition. Pattern
    Recognit. Lett. 2021, 147, 134–141. [Google Scholar] [CrossRef] Wang, M.; El-Fiqi,
    H.; Hu, J.; Abbass, H.A. Convolutional neural networks using dynamic functional
    connectivity for EEG-based person identification in diverse human states. IEEE
    Trans. Inf. Forensics Secur. 2019, 14, 3259–3272. [Google Scholar] [CrossRef]
    El-Fiqi, H.; Wang, M.; Kasmarik, K.; Bezerianos, A.; Tan, K.C.; Abbass, H.A. Weighted
    gate layer autoencoders. IEEE Trans. Cybern. 2021, 52, 7242–7253. [Google Scholar]
    [CrossRef] Wang, M.; Abdelfattah, S.; Moustafa, N.; Hu, J. Deep gaussian mixture-hidden
    markov model for classification of EEG signals. IEEE Trans. Emerg. Top. Comput.
    Intell. 2018, 2, 278–287. [Google Scholar] [CrossRef] Abdelfattah, S.M.; Abdelrahman,
    G.M.; Wang, M. Augmenting the size of EEG datasets using generative adversarial
    networks. In Proceedings of the 2018 International Joint Conference on Neural
    Networks (IJCNN), Rio de Janeiro, Brazil, 8–13 July 2018; pp. 1–6. [Google Scholar]
    Wang, M.; Yin, X.; Zhu, Y.; Hu, J. Representation Learning and Pattern Recognition
    in Cognitive Biometrics: A Survey. Sensors 2022, 22, 5111. [Google Scholar] [CrossRef]
    Martinez, A.; Benavente, R. The AR Face Database; Technical Report 24; CVC Technical
    Report; Elsevier: Amsterdam, The Netherlands, 1998; p. 8. [Google Scholar] Johnson,
    P.A.; Lopez-Meyer, P.; Sazonova, N.; Hua, F.; Schuckers, S. Quality in face and
    iris research ensemble (Q-FIRE). In Proceedings of the 2010 Fourth IEEE International
    Conference on Biometrics: Theory, Applications and Systems (BTAS), Washington,
    DC, USA, 27–29 September 2010; pp. 1–6. [Google Scholar] Yeung, D.Y.; Chang, H.;
    Xiong, Y.; George, S.; Kashi, R.; Matsumoto, T.; Rigoll, G. SVC2004: First international
    signature verification competition. In Proceedings of the International Conference
    on Biometric Authentication, Hong Kong, China, 15–17 July 2004; pp. 16–22. [Google
    Scholar] Arnau-González, P.; Katsigiannis, S.; Arevalillo-Herráez, M.; Ramzan,
    N. BED: A new data set for EEG-based biometrics. IEEE Internet Things J. 2021,
    8, 12219–12230. [Google Scholar] [CrossRef] Toth, C.; Jóźków, G. Remote sensing
    platforms and sensors: A survey. ISPRS J. Photogramm. Remote. Sens. 2016, 115,
    22–36. [Google Scholar] [CrossRef] Chen, Y.; Lin, Z.; Zhao, X.; Wang, G.; Gu,
    Y. Deep learning-based classification of hyperspectral data. IEEE J. Sel. Top.
    Appl. Earth Obs. Remote. Sens. 2014, 7, 2094–2107. [Google Scholar] [CrossRef]
    Chen, Y.; Zhao, X.; Jia, X. Spectral–spatial classification of hyperspectral data
    based on deep belief network. IEEE J. Sel. Top. Appl. Earth Obs. Remote. Sens.
    2015, 8, 2381–2392. [Google Scholar] [CrossRef] Tao, C.; Pan, H.; Li, Y.; Zou,
    Z. Unsupervised spectral–spatial feature learning with stacked sparse autoencoder
    for hyperspectral imagery classification. IEEE Geosci. Remote. Sens. Lett. 2015,
    12, 2438–2442. [Google Scholar] Makantasis, K.; Karantzalos, K.; Doulamis, A.;
    Doulamis, N. Deep supervised learning for hyperspectral data classification through
    convolutional neural networks. In Proceedings of the 2015 IEEE International Geoscience
    and Remote Sensing Symposium (IGARSS), Milan, Italy, 26–31 July 2015; pp. 4959–4962.
    [Google Scholar] Santara, A.; Mani, K.; Hatwar, P.; Singh, A.; Garg, A.; Padia,
    K.; Mitra, P. BASS net: Band-adaptive spectral-spatial feature learning neural
    network for hyperspectral image classification. IEEE Trans. Geosci. Remote. Sens.
    2017, 55, 5293–5301. [Google Scholar] [CrossRef] [Green Version] Li, W.; Wu, G.;
    Zhang, F.; Du, Q. Hyperspectral image classification using deep pixel-pair features.
    IEEE Trans. Geosci. Remote. Sens. 2017, 55, 844–853. [Google Scholar] [CrossRef]
    Liu, X.; Zhou, Y.; Zhao, J.; Yao, R.; Liu, B.; Zheng, Y. Siamese convolutional
    neural networks for remote sensing scene classification. IEEE Geosci. Remote.
    Sens. Lett. 2019, 16, 1200–1204. [Google Scholar] [CrossRef] Zhang, W.; Tang,
    P.; Zhao, L. Remote sensing image scene classification using CNN-CapsNet. Remote
    Sens. 2019, 11, 494. [Google Scholar] [CrossRef] [Green Version] Bazi, Y.; Bashmal,
    L.; Rahhal, M.M.A.; Dayil, R.A.; Ajlan, N.A. Vision transformers for remote sensing
    image classification. Remote Sens. 2021, 13, 516. [Google Scholar] [CrossRef]
    Zhang, C.; Li, G.; Du, S. Multi-scale dense networks for hyperspectral remote
    sensing image classification. IEEE Trans. Geosci. Remote. Sens. 2019, 57, 9201–9222.
    [Google Scholar] [CrossRef] Sun, H.; Li, S.; Zheng, X.; Lu, X. Remote sensing
    scene classification by gated bidirectional network. IEEE Trans. Geosci. Remote.
    Sens. 2019, 58, 82–96. [Google Scholar] [CrossRef] Cheng, G.; Han, J.; Lu, X.
    Remote sensing image scene classification: Benchmark and state of the art. Proc.
    IEEE 2017, 105, 1865–1883. [Google Scholar] [CrossRef] [Green Version] Othman,
    E.; Bazi, Y.; Alajlan, N.; Alhichri, H.; Melgani, F. Using convolutional features
    and a sparse autoencoder for land-use scene classification. Int. J. Remote. Sens.
    2016, 37, 2149–2167. [Google Scholar] [CrossRef] Penatti, O.A.; Nogueira, K.;
    Dos Santos, J.A. Do deep features generalize from everyday objects to remote sensing
    and aerial scenes domains? In Proceedings of the IEEE Conference on Computer Vision
    and Pattern Recognition Workshops, Boston, MA, USA, 7–12 June 2015; pp. 44–51.
    [Google Scholar] Hu, F.; Xia, G.S.; Hu, J.; Zhang, L. Transferring deep convolutional
    neural networks for the scene classification of high-resolution remote sensing
    imagery. Remote Sens. 2015, 7, 14680–14707. [Google Scholar] [CrossRef] [Green
    Version] Zou, Q.; Ni, L.; Zhang, T.; Wang, Q. Deep learning based feature selection
    for remote sensing scene classification. IEEE Geosci. Remote. Sens. Lett. 2015,
    12, 2321–2325. [Google Scholar] [CrossRef] He, N.; Fang, L.; Li, S.; Plaza, A.;
    Plaza, J. Remote sensing scene classification using multilayer stacked covariance
    pooling. IEEE Trans. Geosci. Remote. Sens. 2018, 56, 6899–6910. [Google Scholar]
    [CrossRef] Lu, X.; Sun, H.; Zheng, X. A feature aggregation convolutional neural
    network for remote sensing scene classification. IEEE Trans. Geosci. Remote. Sens.
    2019, 57, 7894–7906. [Google Scholar] [CrossRef] Li, E.; Xia, J.; Du, P.; Lin,
    C.; Samat, A. Integrating multilayer features of convolutional neural networks
    for remote sensing scene classification. IEEE Trans. Geosci. Remote. Sens. 2017,
    55, 5653–5665. [Google Scholar] [CrossRef] Mei, S.; Yan, K.; Ma, M.; Chen, X.;
    Zhang, S.; Du, Q. Remote sensing scene classification using sparse representation-based
    framework with deep feature fusion. IEEE J. Sel. Top. Appl. Earth Obs. Remote.
    Sens. 2021, 14, 5867–5878. [Google Scholar] [CrossRef] Zhao, Q.; Lyu, S.; Li,
    Y.; Ma, Y.; Chen, L. MGML: Multigranularity multilevel feature ensemble network
    for remote sensing scene classification. IEEE Trans. Neural Networks Learn. Syst.
    2021, 1, 1–15. [Google Scholar] [CrossRef] Chen, X.; Xiang, S.; Liu, C.L.; Pan,
    C.H. Vehicle detection in satellite images by hybrid deep convolutional neural
    networks. IEEE Geosci. Remote. Sens. Lett. 2014, 11, 1797–1801. [Google Scholar]
    [CrossRef] Ševo, I.; Avramović, A. Convolutional neural network based automatic
    object detection on aerial images. IEEE Geosci. Remote. Sens. Lett. 2016, 13,
    740–744. [Google Scholar] [CrossRef] Tang, J.; Deng, C.; Huang, G.B.; Zhao, B.
    Compressed-domain ship detection on spaceborne optical image using deep neural
    network and extreme learning machine. IEEE Trans. Geosci. Remote. Sens. 2014,
    53, 1174–1185. [Google Scholar] [CrossRef] Zhu, H.; Chen, X.; Dai, W.; Fu, K.;
    Ye, Q.; Jiao, J. Orientation robust object detection in aerial images using deep
    convolutional neural network. In Proceedings of the 2015 IEEE International Conference
    on Image Processing (ICIP), Quebec City, QC, Canada, 27–30 September 2015; pp.
    3735–3739. [Google Scholar] Cheng, G.; Zhou, P.; Han, J. Learning rotation-invariant
    convolutional neural networks for object detection in VHR optical remote sensing
    images. IEEE Trans. Geosci. Remote. Sens. 2016, 54, 7405–7415. [Google Scholar]
    [CrossRef] Zhang, G.; Lu, S.; Zhang, W. CAD-Net: A context-aware detection network
    for objects in remote sensing imagery. IEEE Trans. Geosci. Remote. Sens. 2019,
    57, 10015–10024. [Google Scholar] [CrossRef] [Green Version] Xu, D.; Wu, Y. Improved
    YOLO-V3 with DenseNet for multi-scale remote sensing target detection. Sensors
    2020, 20, 4276. [Google Scholar] [CrossRef] Liu, Y.; He, G.; Wang, Z.; Li, W.;
    Huang, H. NRT-YOLO: Improved YOLOv5 based on nested residual transformer for tiny
    remote sensing object detection. Sensors 2022, 22, 4953. [Google Scholar] [CrossRef]
    Zhang, S.; He, G.; Chen, H.B.; Jing, N.; Wang, Q. Scale adaptive proposal network
    for object detection in remote sensing images. IEEE Geosci. Remote. Sens. Lett.
    2019, 16, 864–868. [Google Scholar] [CrossRef] Zhang, Z.; Guo, W.; Zhu, S.; Yu,
    W. Toward arbitrary-oriented ship detection with rotated region proposal and discrimination
    networks. IEEE Geosci. Remote. Sens. Lett. 2018, 15, 1745–1749. [Google Scholar]
    [CrossRef] Feng, X.; Han, J.; Yao, X.; Cheng, G. Progressive contextual instance
    refinement for weakly supervised object detection in remote sensing images. IEEE
    Trans. Geosci. Remote. Sens. 2020, 58, 8002–8012. [Google Scholar] [CrossRef]
    Xu, X.; Feng, Z.; Cao, C.; Li, M.; Wu, J.; Wu, Z.; Shang, Y.; Ye, S. An improved
    swin transformer-based model for remote sensing object detection and instance
    segmentation. Remote Sens. 2021, 13, 4779. [Google Scholar] [CrossRef] Zhang,
    L.; Zhang, J. A new saliency-driven fusion method based on complex wavelet transform
    for remote sensing images. IEEE Geosci. Remote. Sens. Lett. 2017, 14, 2433–2437.
    [Google Scholar] [CrossRef] Zhang, L.; Zhang, J.; Ma, J.; Jia, X. SC-PNN: Saliency
    cascade convolutional neural network for pansharpening. IEEE Trans. Geosci. Remote.
    Sens. 2021, 59, 9697–9715. [Google Scholar] [CrossRef] Huang, W.; Xiao, L.; Wei,
    Z.; Liu, H.; Tang, S. A new pan-sharpening method with deep neural networks. IEEE
    Geosci. Remote. Sens. Lett. 2015, 12, 1037–1041. [Google Scholar] [CrossRef] Masi,
    G.; Cozzolino, D.; Verdoliva, L.; Scarpa, G. Pansharpening by convolutional neural
    networks. Remote Sens. 2016, 8, 594. [Google Scholar] [CrossRef] [Green Version]
    Hu, J.; Hu, P.; Kang, X.; Zhang, H.; Fan, S. Pan-sharpening via multiscale dynamic
    convolutional neural network. IEEE Trans. Geosci. Remote. Sens. 2021, 59, 2231–2244.
    [Google Scholar] [CrossRef] He, L.; Rao, Y.; Li, J.; Chanussot, J.; Plaza, A.;
    Zhu, J.; Li, B. Pansharpening via detail injection based convolutional neural
    networks. IEEE J. Sel. Top. Appl. Earth Obs. Remote. Sens. 2019, 12, 1188–1204.
    [Google Scholar] [CrossRef] [Green Version] Yuan, Q.; Wei, Y.; Meng, X.; Shen,
    H.; Zhang, L. A multiscale and multidepth convolutional neural network for remote
    sensing imagery pan-sharpening. IEEE J. Sel. Top. Appl. Earth Obs. Remote. Sens.
    2018, 11, 978–989. [Google Scholar] [CrossRef] [Green Version] Yang, J.; Fu, X.;
    Hu, Y.; Huang, Y.; Ding, X.; Paisley, J. PanNet: A deep network architecture for
    pan-sharpening. In Proceedings of the IEEE International Conference on Computer
    Vision (ICCV), Venice, Italy, 22–29 October 2017; pp. 1753–1761. [Google Scholar]
    Hong, D.; Gao, L.; Yokoya, N.; Yao, J.; Chanussot, J.; Du, Q.; Zhang, B. More
    diverse means better: Multimodal deep learning meets remote-sensing imagery classification.
    IEEE Trans. Geosci. Remote. Sens. 2021, 59, 4340–4354. [Google Scholar] [CrossRef]
    Lagrange, A.; Le Saux, B.; Beaupère, A.; Boulch, A.; Chan-Hon-Tong, A.; Herbin,
    S.; Randrianarivo, H.; Ferecatu, M. Benchmarking classification of earth-observation
    data: From learning explicit features to convolutional networks. In Proceedings
    of the 2015 IEEE International Geoscience and Remote Sensing Symposium (IGARSS),
    Milan, Italy, 26–31 July 2015; pp. 4173–4176. [Google Scholar] [CrossRef] Irwin,
    K.; Beaulne, D.; Braun, A.; Fotopoulos, G. Fusion of SAR, optical imagery and
    airborne LiDAR for surface water detection. Remote Sens. 2017, 9, 890. [Google
    Scholar] [CrossRef] Yang, Y.; Newsam, S. Bag-of-visual-words and spatial extensions
    for land-use classification. In Proceedings of the 18th SIGSPATIAL International
    Conference on Advances in Geographic Information Systems, San Jose, CA, USA, 2–5
    November 2010; pp. 270–279. [Google Scholar] Zuo, X. Hyperspectral Data. 2022.
    Available online: https://ieee-dataport.org/documents/hyperspectral-data (accessed
    on 2 November 2022). Dai, D.; Yang, W. Satellite image classification via two-layer
    sparse coding with biased image representation. IEEE Geosci. Remote. Sens. Lett.
    2010, 8, 173–176. [Google Scholar] [CrossRef] [Green Version] Xia, G.S.; Hu, J.;
    Hu, F.; Shi, B.; Bai, X.; Zhong, Y.; Zhang, L.; Lu, X. AID: A benchmark data set
    for performance evaluation of aerial scene classification. IEEE Trans. Geosci.
    Remote. Sens. 2017, 55, 3965–3981. [Google Scholar] [CrossRef] [Green Version]
    Zhou, Z.; Li, S.; Wu, W.; Guo, W.; Li, X.; Xia, G.; Zhao, Z. NaSC-TG2: Natural
    scene classification with Tiangong-2 remotely sensed imagery. IEEE J. Sel. Top.
    Appl. Earth Obs. Remote. Sens. 2021, 14, 3228–3242. [Google Scholar] [CrossRef]
    Cheng, G.; Han, J. A survey on object detection in optical remote sensing images.
    ISPRS J. Photogramm. Remote Sens. 2016, 117, 11–28. [Google Scholar] [CrossRef]
    [Green Version] Liu, Z.; Wang, H.; Weng, L.; Yang, Y. Ship rotated bounding box
    space for ship extraction from high-resolution optical satellite images with complex
    backgrounds. IEEE Geosci. Remote. Sens. Lett. 2016, 13, 1074–1078. [Google Scholar]
    [CrossRef] Xia, G.S.; Bai, X.; Ding, J.; Zhu, Z.; Belongie, S.; Luo, J.; Datcu,
    M.; Pelillo, M.; Zhang, L. DOTA: A large-scale dataset for object detection in
    aerial images. In Proceedings of the IEEE Conference on Computer Vision and Pattern
    Recognition, Salt Lake City, UT, USA, 18–22 June 2018; pp. 3974–3983. [Google
    Scholar] Li, K.; Wan, G.; Cheng, G.; Meng, L.; Han, J. Object detection in optical
    remote sensing images: A survey and a new benchmark. ISPRS J. Photogramm. Remote.
    Sens. 2020, 159, 296–307. [Google Scholar] [CrossRef] Wei, S.; Zeng, X.; Qu, Q.;
    Wang, M.; Su, H.; Shi, J. HRSID: A high-resolution SAR images dataset for ship
    detection and instance segmentation. IEEE Access 2020, 8, 120234–120254. [Google
    Scholar] [CrossRef] Gao, N.; Gao, L.; Gao, Q.; Wang, H. An intrusion detection
    model based on deep belief networks. In Proceedings of the 2014 Second International
    Conference on Advanced Cloud and Big Data, Huangshan, China, 20–22 November 2014;
    pp. 247–252. [Google Scholar] Alom, M.Z.; Bontupalli, V.; Taha, T.M. Intrusion
    detection using deep belief networks. In Proceedings of the 2015 National Aerospace
    and Electronics Conference (NAECON), New York, NY, USA, 15–19 June 2015; pp. 339–344.
    [Google Scholar] Alrawashdeh, K.; Purdy, C. Toward an online anomaly intrusion
    detection system based on deep learning. In Proceedings of the 2016 15th IEEE
    international Conference on Machine Learning and Applications (ICMLA), Anaheim,
    CA, USA, 18–20 December 2016; pp. 195–200. [Google Scholar] Tavallaee, M.; Bagheri,
    E.; Lu, W.; Ghorbani, A.A. A detailed analysis of the KDD CUP 99 data set. In
    Proceedings of the 2009 IEEE Symposium on Computational Intelligence for Security
    and Defense Applications, Ottawa, ON, Canada, 8–10 July 2009; pp. 1–6. [Google
    Scholar] Abolhasanzadeh, B. Nonlinear dimensionality reduction for intrusion detection
    using auto-encoder bottleneck features. In Proceedings of the 2015 7th Conference
    on Information and Knowledge Technology (IKT), Urmia, Iran, 26–28 May 2015; pp.
    1–5. [Google Scholar] Vincent, P.; Larochelle, H.; Lajoie, I.; Bengio, Y.; Manzagol,
    P.A.; Bottou, L. Stacked denoising autoencoders: Learning useful representations
    in a deep network with a local denoising criterion. J. Mach. Learn. Res. 2010,
    11. [Google Scholar] Niyaz, Q.; Sun, W.; Javaid, A.Y. A deep learning based DDoS
    detection system in software-defined networking (SDN). EAI Endorsed Trans. Secur.
    Saf. 2017, 4, e2. [Google Scholar] [CrossRef] [Green Version] Shone, N.; Ngoc,
    T.N.; Phai, V.D.; Shi, Q. A deep learning approach to network intrusion detection.
    IEEE Trans. Emerg. Top. Comput. Intell. 2018, 2, 41–50. [Google Scholar] [CrossRef]
    [Green Version] Parker, L.R.; Yoo, P.D.; Asyhari, T.A.; Chermak, L.; Jhi, Y.;
    Taha, K. DEMISe: Interpretable deep extraction and mutual information selection
    techniques for IoT intrusion detection. In Proceedings of the 14th International
    Conference on Availability, Reliability and Security, Canterbury, UK, 26–29 August
    2019; pp. 1–10. [Google Scholar] Vu, L.; Nguyen, Q.U.; Nguyen, D.N.; Hoang, D.T.;
    Dutkiewicz, E. Learning latent distribution for distinguishing network traffic
    in intrusion detection system. In Proceedings of the 2019 IEEE International Conference
    on Communications (ICC), Shanghai, China, 20–24 May 2019; pp. 1–6. [Google Scholar]
    Yin, X.; Zhu, Y.; Hu, J. A subgrid-oriented privacy-preserving microservice framework
    based on deep neural network for false data injection attack detection in smart
    grids. IEEE Trans. Ind. Inform. 2021, 18, 1957–1967. [Google Scholar] [CrossRef]
    Yin, X.; Zhu, Y.; Xie, Y.; Hu, J. PowerFDNet: Deep learning-based stealthy false
    data injection attack detection for AC-model transmission systems. IEEE Open J.
    Comput. Soc. 2022, 3, 149–161. [Google Scholar] [CrossRef] Brown, A.; Tuor, A.;
    Hutchinson, B.; Nichols, N. Recurrent neural network attention mechanisms for
    interpretable system log anomaly detection. In Proceedings of the 1st Workshop
    on Machine Learning for Computing Systems, Tempe, AZ, USA, 12 June 2018; pp. 1–8.
    [Google Scholar] Kim, G.; Yi, H.; Lee, J.; Paek, Y.; Yoon, S. LSTM-based system-call
    language modeling and robust ensemble method for designing host-based intrusion
    detection systems. arXiv 2016, arXiv:1611.01726. [Google Scholar] [CrossRef] Jiang,
    F.; Fu, Y.; Gupta, B.B.; Liang, Y.; Rho, S.; Lou, F.; Meng, F.; Tian, Z. Deep
    learning based multi-channel intelligent attack detection for data security. IEEE
    Trans. Sustain. Comput. 2018, 5, 204–212. [Google Scholar] [CrossRef] Wang, W.;
    Sheng, Y.; Wang, J.; Zeng, X.; Ye, X.; Huang, Y.; Zhu, M. HAST-IDS: Learning hierarchical
    spatial-temporal features using deep neural networks to improve intrusion detection.
    IEEE Access 2017, 6, 1792–1806. [Google Scholar] [CrossRef] Zhang, Y.; Chen, X.;
    Jin, L.; Wang, X.; Guo, D. Network intrusion detection: Based on deep hierarchical
    network and original flow data. IEEE Access 2019, 7, 37004–37016. [Google Scholar]
    [CrossRef] Schlegl, T.; Seeböck, P.; Waldstein, S.M.; Schmidt-Erfurth, U.; Langs,
    G. Unsupervised anomaly detection with generative adversarial networks to guide
    marker discovery. In Proceedings of the International Conference on Information
    Processing in Medical Imaging, Boone, NC, USA, 25–30 June 2017; pp. 146–157. [Google
    Scholar] Zenati, H.; Foo, C.S.; Lecouat, B.; Manek, G.; Chandrasekhar, V.R. Efficient
    GAN-based anomaly detection. In Proceedings of the 20th IEEE International Conference
    on Data Mining, Sorrento, Italy, 17–20 November 2018; pp. 1–11. [Google Scholar]
    Pascanu, R.; Stokes, J.W.; Sanossian, H.; Marinescu, M.; Thomas, A. Malware classification
    with recurrent networks. In Proceedings of the 2015 IEEE International Conference
    on Acoustics, Speech and Signal Processing (ICASSP), South Brisbane, QSD, Australia,
    19–24 April 2015; pp. 1916–1920. [Google Scholar] David, O.E.; Netanyahu, N.S.
    Deepsign: Deep learning for automatic malware signature generation and classification.
    In Proceedings of the 2015 International Joint Conference on Neural Networks (IJCNN),
    Killarney, Ireland, 12–17 July 2015; pp. 1–8. [Google Scholar] Yousefi-Azar, M.;
    Varadharajan, V.; Hamey, L.; Tupakula, U. Autoencoder-based feature learning for
    cyber security applications. In Proceedings of the 2017 International Joint Conference
    on Neural Networks (IJCNN), Anchorage, AK, USA, 14–19 May 2017; pp. 3854–3861.
    [Google Scholar] Kim, J.Y.; Bu, S.J.; Cho, S.B. Zero-day malware detection using
    transferred generative adversarial networks based on deep autoencoders. Inf. Sci.
    2018, 460, 83–102. [Google Scholar] [CrossRef] Kim, J.Y.; Cho, S.B. Detecting
    intrusive malware with a hybrid generative deep learning model. In Proceedings
    of the International Conference on Intelligent Data Engineering and Automated
    Learning, Madrid, Spain, 21–23 November 2018; pp. 499–507. [Google Scholar] Yuan,
    Z.; Lu, Y.; Wang, Z.; Xue, Y. Droid-Sec: Deep learning in Android malware detection.
    In Proceedings of the 2014 ACM Conference on SIGCOMM, Chicago, IL, USA, 17–22
    August 2014; pp. 371–372. [Google Scholar] Hou, S.; Saas, A.; Ye, Y.; Chen, L.
    Droiddelver: An android malware detection system using deep belief network based
    on api call blocks. In Proceedings of the International Conference on Web-Age
    Information Management, Nanchang, China, 3–5 June 2016; pp. 54–66. [Google Scholar]
    Su, X.; Zhang, D.; Li, W.; Zhao, K. A deep learning approach to android malware
    feature learning and detection. In Proceedings of the 2016 IEEE Trustcom/BigDataSE/ISPA,
    Tianjin, China, 23–16 August 2016; pp. 244–251. [Google Scholar] McLaughlin, N.;
    Martinez del Rincon, J.; Kang, B.; Yerima, S.; Miller, P.; Sezer, S.; Safaei,
    Y.; Trickel, E.; Zhao, Z.; Doupé, A.; et al. Deep android malware detection. In
    Proceedings of the 7th ACM on Conference on Data and Application Security and
    Privacy, Scottsdale, AZ, USA, 22–24 March 2017; pp. 301–308. [Google Scholar]
    Nix, R.; Zhang, J. Classification of Android apps and malware using deep neural
    networks. In Proceedings of the 2017 International Joint Conference on Neural
    Networks (IJCNN), Anchorage, AK, USA, 14–19 May 2017; pp. 1871–1878. [Google Scholar]
    Jan, S.; Ali, T.; Alzahrani, A.; Musa, S. Deep convolutional generative adversarial
    networks for intent-based dynamic behavior capture. Int. J. Eng. Technol. 2018,
    7, 101–103. [Google Scholar] Zhang, N.; Yuan, Y. Phishing Detection Using Neural
    Network; CS229 Lecture Notes; Stanford University: Stanford, CA, USA, 2012; pp.
    1–5. [Google Scholar] Mohammad, R.M.; Thabtah, F.; McCluskey, L. Predicting phishing
    websites based on self-structuring neural network. Neural Comput. Appl. 2014,
    25, 443–458. [Google Scholar] [CrossRef] [Green Version] Benavides, E.; Fuertes,
    W.; Sanchez, S.; Sanchez, M. Classification of phishing attack solutions by employing
    deep learning techniques: A systematic literature review. Dev. Adv. Def. Secur.
    2020, 51–64. [Google Scholar] Wu, T.; Liu, S.; Zhang, J.; Xiang, Y. Twitter spam
    detection based on deep learning. In Proceedings of the Australasian Computer
    Science Week Multiconference, Geelong, Australia, 31 January–3 February 2017;
    pp. 1–8. [Google Scholar] Jain, G.; Sharma, M.; Agarwal, B. Spam detection on
    social media using semantic convolutional neural network. Int. J. Knowl. Discov.
    Bioinform. (IJKDB) 2018, 8, 12–26. [Google Scholar] [CrossRef] [Green Version]
    Thejas, G.; Boroojeni, K.G.; Chandna, K.; Bhatia, I.; Iyengar, S.; Sunitha, N.
    Deep learning-based model to fight against ad click fraud. In Proceedings of the
    2019 ACM Southeast Conference, Kennesaw, GA, USA, 18–20 April 2019; pp. 176–181.
    [Google Scholar] Singh, V.; Varshney, A.; Akhtar, S.S.; Vijay, D.; Shrivastava,
    M. Aggression detection on social media text using deep neural networks. In Proceedings
    of the 2nd Workshop on Abusive Language Online (ALW2), Brussels, Belgium, 21 October
    2018; pp. 43–50. [Google Scholar] Ban, X.; Chen, C.; Liu, S.; Wang, Y.; Zhang,
    J. Deep-learnt features for Twitter spam detection. In Proceedings of the 2018
    International Symposium on Security and Privacy in Social Networks and Big Data
    (SocialSec), Santa Clara, CA, USA, 10–12 December 2018; pp. 208–212. [Google Scholar]
    Tolosana, R.; Vera-Rodriguez, R.; Fierrez, J.; Morales, A.; Ortega-Garcia, J.
    Deepfakes and beyond: A survey of face manipulation and fake detection. Inf. Fusion
    2020, 64, 131–148. [Google Scholar] [CrossRef] Hasan, H.R.; Salah, K. Combating
    deepfake videos using blockchain and smart contracts. IEEE Access 2019, 7, 41596–41606.
    [Google Scholar] [CrossRef] Fagni, T.; Falchi, F.; Gambini, M.; Martella, A.;
    Tesconi, M. TweepFake: About detecting deepfake tweets. PLoS ONE 2021, 16, e0251415.
    [Google Scholar] [CrossRef] Verdoliva, L. Media forensics and deepfakes: An overview.
    IEEE J. Sel. Top. Signal Process. 2020, 14, 910–932. [Google Scholar] [CrossRef]
    Chatzoglou, E.; Kambourakis, G.; Kolias, C. Empirical evaluation of attacks against
    IEEE 802.11 enterprise networks: The AWID3 dataset. IEEE Access 2021, 9, 34188–34205.
    [Google Scholar] [CrossRef] Sharafaldin, I.; Lashkari, A.H.; Ghorbani, A.A. Toward
    generating a new intrusion detection dataset and intrusion traffic characterization.
    In Proceedings of the 4th International Conference on Information Systems Security
    and Privacy, Madeira, Portugal, 22–24 January 2018; pp. 108–116. [Google Scholar]
    Kolias, C.; Kambourakis, G.; Stavrou, A.; Gritzalis, S. Intrusion detection in
    802.11 networks: Empirical evaluation of threats and a public dataset. IEEE Commun.
    Surv. Tutorials 2016, 18, 184–208. [Google Scholar] [CrossRef] Moustafa, N.; Slay,
    J. UNSW-NB15: A comprehensive data set for network intrusion detection systems
    (UNSW-NB15 network data set). In Proceedings of the 2015 Military Communications
    and Information Systems Conference (MilCIS), Canberra, Australia, 10–12 November
    2015; pp. 1–6. [Google Scholar] Creech, G.; Hu, J. Generation of a new IDS test
    dataset: Time to retire the KDD collection. In Proceedings of the 2013 IEEE Wireless
    Communications and Networking Conference (WCNC), Shanghai, China, 7–10 April 2013;
    pp. 4487–4492. [Google Scholar] Miotto, R.; Wang, F.; Wang, S.; Jiang, X.; Dudley,
    J.T. Deep learning for healthcare: Review, opportunities and challenges. Briefings
    Bioinform. 2018, 19, 1236–1246. [Google Scholar] [CrossRef] Hammerla, N.Y.; Halloran,
    S.; Plötz, T. Deep, convolutional, and recurrent models for human activity recognition
    using wearables. In Proceedings of the Twenty-Fifth International Joint Conference
    on Artificial Intelligence, New York, NY, USA, 9–15 July 2016; pp. 1533–1540.
    [Google Scholar] Zhu, J.; Pande, A.; Mohapatra, P.; Han, J.J. Using deep learning
    for energy expenditure estimation with wearable sensors. In Proceedings of the
    17th International Conference on E-health Networking, Application & Services (HealthCom),
    Boston, MA, USA, 14–17 October 2015; pp. 501–506. [Google Scholar] Hannun, A.Y.;
    Rajpurkar, P.; Haghpanahi, M.; Tison, G.H.; Bourn, C.; Turakhia, M.P.; Ng, A.Y.
    Cardiologist-level arrhythmia detection and classification in ambulatory electrocardiograms
    using a deep neural network. Nat. Med. 2019, 25, 65–69. [Google Scholar] [CrossRef]
    Gao, Y.; Xiang, X.; Xiong, N.; Huang, B.; Lee, H.J.; Alrifai, R.; Jiang, X.; Fang,
    Z. Human action monitoring for healthcare based on deep learning. IEEE Access
    2018, 6, 52277–52285. [Google Scholar] [CrossRef] Ravi, D.; Wong, C.; Lo, B.;
    Yang, G.Z. A deep learning approach to on-node sensor data analytics for mobile
    or wearable devices. IEEE J. Biomed. Health Inform. 2016, 21, 56–64. [Google Scholar]
    [CrossRef] [Green Version] Prasoon, A.; Petersen, K.; Igel, C.; Lauze, F.; Dam,
    E.; Nielsen, M. Deep feature learning for knee cartilage segmentation using a
    triplanar convolutional neural network. In Proceedings of the International Conference
    on Medical Image Computing and Computer-Assisted Intervention, Nagoya, Japan,
    22–26 September 2013; pp. 246–253. [Google Scholar] Gulshan, V.; Peng, L.; Coram,
    M.; Stumpe, M.C.; Wu, D.; Narayanaswamy, A.; Venugopalan, S.; Widner, K.; Madams,
    T.; Cuadros, J.; et al. Development and validation of a deep learning algorithm
    for detection of diabetic retinopathy in retinal fundus photographs. JAMA 2016,
    316, 2402–2410. [Google Scholar] [CrossRef] Zeng, X.; Cao, K.; Zhang, M. MobileDeepPill:
    A small-footprint mobile deep learning system for recognizing unconstrained pill
    images. In Proceedings of the 15th Annual International Conference on Mobile Systems,
    Applications, and Services, Niagara Falls, NY, USA, 19–23 June 2017; pp. 56–67.
    [Google Scholar] Lopez, A.R.; Giro-i Nieto, X.; Burdick, J.; Marques, O. Skin
    lesion classification from dermoscopic images using deep learning techniques.
    In Proceedings of the 13th IASTED International Conference on Biomedical Engineering
    (BioMed), Innsbruck, Austria, 20–21 February 2017; pp. 49–54. [Google Scholar]
    Chen, M.; Yang, J.; Zhou, J.; Hao, Y.; Zhang, J.; Youn, C.H. 5G-smart diabetes:
    Toward personalized diabetes diagnosis with healthcare big data clouds. IEEE Commun.
    Mag. 2018, 56, 16–23. [Google Scholar] [CrossRef] Chang, W.J.; Chen, L.B.; Hsu,
    C.H.; Lin, C.P.; Yang, T.C. A deep learning-based intelligent medicine recognition
    system for chronic patients. IEEE Access 2019, 7, 44441–44458. [Google Scholar]
    [CrossRef] Gu, Y.; Chen, Y.; Liu, J.; Jiang, X. Semi-supervised deep extreme learning
    machine for Wi-Fi based localization. Neurocomputing 2015, 166, 282–293. [Google
    Scholar] [CrossRef] Mohammadi, M.; Al-Fuqaha, A.; Guizani, M.; Oh, J.S. Semisupervised
    deep reinforcement learning in support of IoT and smart city services. IEEE Internet
    Things J. 2017, 5, 624–635. [Google Scholar] [CrossRef] [Green Version] Wang,
    X.; Gao, L.; Mao, S.; Pandey, S. CSI-based fingerprinting for indoor localization:
    A deep learning approach. IEEE Trans. Veh. Technol. 2016, 66, 763–776. [Google
    Scholar] [CrossRef] [Green Version] Erol, B.A.; Majumdar, A.; Lwowski, J.; Benavidez,
    P.; Rad, P.; Jamshidi, M. Improved deep neural network object tracking system
    for applications in home robotics. In Computational Intelligence for Pattern Recognition;
    Springer: Berlin, Germany, 2018; pp. 369–395. [Google Scholar] Levine, S.; Pastor,
    P.; Krizhevsky, A.; Ibarz, J.; Quillen, D. Learning hand-eye coordination for
    robotic grasping with deep learning and large-scale data collection. Int. J. Robot.
    Res. 2018, 37, 421–436. [Google Scholar] [CrossRef] Huang, W.; Song, G.; Hong,
    H.; Xie, K. Deep architecture for traffic flow prediction: Deep belief networks
    with multitask learning. IEEE Trans. Intell. Transp. Syst. 2014, 15, 2191–2201.
    [Google Scholar] [CrossRef] Lv, Y.; Duan, Y.; Kang, W.; Li, Z.; Wang, F.Y. Traffic
    flow prediction with big data: A deep learning approach. IEEE Trans. Intell. Transp.
    Syst. 2014, 16, 865–873. [Google Scholar] [CrossRef] Zhao, Z.; Chen, W.; Wu, X.;
    Chen, P.C.; Liu, J. LSTM network: A deep learning approach for short-term traffic
    forecast. IET Intell. Transp. Syst. 2017, 11, 68–75. [Google Scholar] [CrossRef]
    [Green Version] Polson, N.G.; Sokolov, V.O. Deep learning for short-term traffic
    flow prediction. Transp. Res. Part C Emerg. Technol. 2017, 79, 1–17. [Google Scholar]
    [CrossRef] [Green Version] Li, H.; Li, Y.; Porikli, F. Deeptrack: Learning discriminative
    feature representations online for robust visual tracking. IEEE Trans. Image Process.
    2015, 25, 1834–1848. [Google Scholar] [CrossRef] Ondrúška, P.; Posner, I. Deep
    tracking: Seeing beyond seeing using recurrent neural networks. In Proceedings
    of the Thirtieth AAAI Conference on Artificial Intelligence, Phoenix, AZ, USA,
    12–17 February 2016; pp. 3361–3367. [Google Scholar] Wu, B.; Iandola, F.; Jin,
    P.H.; Keutzer, K. Squeezedet: Unified, small, low power fully convolutional neural
    networks for real-time object detection for autonomous driving. In Proceedings
    of the IEEE Conference on Computer Vision and Pattern Recognition Workshops, Honolulu,
    HI, USA, 21–26 July 2017; pp. 129–137. [Google Scholar] Bojarski, M.; Del Testa,
    D.; Dworakowski, D.; Firner, B.; Flepp, B.; Goyal, P.; Jackel, L.D.; Monfort,
    M.; Muller, U.; Zhang, J.; et al. End to end learning for self-driving cars. arXiv
    2016, arXiv:1604.07316. [Google Scholar] Xu, H.; Gao, Y.; Yu, F.; Darrell, T.
    End-to-end learning of driving models from large-scale video datasets. In Proceedings
    of the IEEE Conference on Computer Vision and Pattern Recognition, Honolulu, HI,
    USA, 21–26 July 2017; pp. 2174–2182. [Google Scholar] Grigorescu, S.; Trasnea,
    B.; Cocias, T.; Macesanu, G. A survey of deep learning techniques for autonomous
    driving. J. Field Robot. 2020, 37, 362–386. [Google Scholar] [CrossRef] [Green
    Version] Li, L.; Ota, K.; Dong, M. Deep learning for smart industry: Efficient
    manufacture inspection system with fog computing. IEEE Trans. Ind. Inform. 2018,
    14, 4665–4673. [Google Scholar] [CrossRef] [Green Version] Park, J.K.; Kwon, B.K.;
    Park, J.H.; Kang, D.J. Machine learning-based imaging system for surface defect
    inspection. Int. J. Precis. Eng. Manuf. Green Technol. 2016, 3, 303–310. [Google
    Scholar] [CrossRef] Cinar, E. A Sensor Fusion Method Using Transfer Learning Models
    for Equipment Condition Monitoring. Sensors 2022, 22, 6791. [Google Scholar] [CrossRef]
    Chen, H.; Zhong, K.; Ran, G.; Cheng, C. Deep Learning-Based Machinery Fault Diagnostics.
    In Machine; MDPI: Basel, Switzerland, 2022; Volume 10, p. 690. [Google Scholar]
    Wang, J.; Zhuang, J.; Duan, L.; Cheng, W. A multi-scale convolution neural network
    for featureless fault diagnosis. In Proceedings of the 2016 International Symposium
    on Flexible Automation (ISFA), Cleveland, Ohio, 1–3 August 2016; pp. 65–70. [Google
    Scholar] Wang, L.; Zhao, X.; Pei, J.; Tang, G. Transformer fault diagnosis using
    continuous sparse autoencoder. SpringerPlus 2016, 5, 1–13. [Google Scholar] [CrossRef]
    [Green Version] Lei, Y.; Jia, F.; Lin, J.; Xing, S.; Ding, S.X. An intelligent
    fault diagnosis method using unsupervised feature learning towards mechanical
    big data. IEEE Trans. Ind. Electron. 2016, 63, 3137–3147. [Google Scholar] [CrossRef]
    Alassery, F.; Alzahrani, A.; Khan, A.; Irshad, K.; Kshirsagar, S.R. An artificial
    intelligence-based solar radiation prophesy model for green energy utilization
    in energy management system. Sustain. Energy Technol. Assess. 2022, 52, 102060.
    [Google Scholar] [CrossRef] Khan, A.I.; Alsolami, F.; Alqurashi, F.; Abushark,
    Y.B.; Sarker, I.H. Novel energy management scheme in IoT enabled smart irrigation
    system using optimized intelligence methods. Eng. Appl. Artif. Intell. 2022, 114,
    104996. [Google Scholar] [CrossRef] Kshirsagar, P.R.; Kumar, N.; Almulihi, A.H.;
    Alassery, F.; Khan, A.I.; Islam, S.; Rothe, J.P.; Jagannadham, D.; Dekeba, K.
    Artificial Intelligence-Based Robotic Technique for Reusable Waste Materials.
    Comput. Intell. Neurosci. 2022, 2022, 2073482. [Google Scholar] [CrossRef] Zweig,
    G. Classification and recognition with direct segment models. In Proceedings of
    the 2012 IEEE International Conference on Acoustics, Speech and Signal Processing
    (ICASSP), Kyoto, Japan, 25–30 March 2012; pp. 4161–4164. [Google Scholar] Lu,
    L.; Kong, L.; Dyer, C.; Smith, N.A.; Renals, S. Segmental recurrent neural networks
    for end-to-end speech recognition. arXiv 2016, arXiv:1603.00223. [Google Scholar]
    Yang, S.; Gong, Z.; Ye, K.; Wei, Y.; Huang, Z.; Huang, Z. EdgeRNN: A compact speech
    recognition network with spatio-temporal features for edge computing. IEEE Access
    2020, 8, 81468–81478. [Google Scholar] [CrossRef] Yang, C.H.H.; Qi, J.; Chen,
    S.Y.C.; Chen, P.Y.; Siniscalchi, S.M.; Ma, X.; Lee, C.H. Decentralizing feature
    extraction with quantum convolutional neural network for automatic speech recognition.
    In Proceedings of the ICASSP 2021–2021 IEEE International Conference on Acoustics,
    Speech and Signal Processing (ICASSP), Toronto, ON, Canada, 6–11 June 2021; pp.
    6523–6527. [Google Scholar] Bell, P.; Fainberg, J.; Klejch, O.; Li, J.; Renals,
    S.; Swietojanski, P. Adaptation algorithms for neural network-based speech recognition:
    An overview. IEEE Open J. Signal Process. 2020, 2, 33–66. [Google Scholar] [CrossRef]
    Wang, D.; Wang, X.; Lv, S. An overview of end-to-end automatic speech recognition.
    Symmetry 2019, 11, 1018. [Google Scholar] [CrossRef] [Green Version] Malik, M.;
    Malik, M.K.; Mehmood, K.; Makhdoom, I. Automatic speech recognition: A survey.
    Multimed. Tools Appl. 2021, 80, 9411–9457. [Google Scholar] [CrossRef] Moraes,
    R.; Valiati, J.F.; Neto, W.P.G. Document-level sentiment classification: An empirical
    comparison between SVM and ANN. Expert Syst. Appl. 2013, 40, 621–633. [Google
    Scholar] [CrossRef] Socher, R.; Pennington, J.; Huang, E.H.; Ng, A.Y.; Manning,
    C.D. Semi-supervised recursive autoencoders for predicting sentiment distributions.
    In Proceedings of the Conference on Empirical Methods in Natural Language Processing,
    Scotland, UK, 27–31 July 2011; pp. 151–161. [Google Scholar] Dong, L.; Wei, F.;
    Tan, C.; Tang, D.; Zhou, M.; Xu, K. Adaptive recursive neural network for target-dependent
    Twitter sentiment classification. In Proceedings of the 52nd Annual Meeting of
    the Association for Computational Linguistics, Baltimore, MD, USA, 23–24 June
    2014; pp. 49–54. [Google Scholar] Zhang, L.; Wang, S.; Liu, B. Deep learning for
    sentiment analysis: A survey. Wiley Interdiscip. Rev. Data Min. Knowl. Discov.
    2018, 8, e1253. [Google Scholar] [CrossRef] [Green Version] Yadav, A.; Vishwakarma,
    D.K. Sentiment analysis using deep learning architectures: A review. Artif. Intell.
    Rev. 2020, 53, 4335–4385. [Google Scholar] [CrossRef] Kalchbrenner, N.; Blunsom,
    P. Recurrent continuous translation models. In Proceedings of the 2013 Conference
    on Empirical Methods in Natural Language Processing, Seattle, WA, USA, 19–21 October
    2013; pp. 1700–1709. [Google Scholar] Singh, S.P.; Kumar, A.; Darbari, H.; Singh,
    L.; Rastogi, A.; Jain, S. Machine translation using deep learning: An overview.
    In Proceedings of the 2017 International Conference on Computer, Communications
    and Electronics, Jaipur, India, 1–2 July 2017; pp. 162–167. [Google Scholar] Yang,
    S.; Wang, Y.; Chu, X. A survey of deep learning techniques for neural machine
    translation. arXiv 2020, arXiv:2002.07526. [Google Scholar] Natural Language Computing
    Group. R-NET: Machine Reading Comprehension with Self-Matching Networks; Microsoft
    Research Lab-Asia: Beijing, China, 2017; pp. 1–11. [Google Scholar] Huang, H.Y.;
    Zhu, C.; Shen, Y.; Chen, W. Fusionnet: Fusing via fully-aware attention with application
    to machine comprehension. arXiv 2017, arXiv:1711.07341. [Google Scholar] Abbasiantaeb,
    Z.; Momtazi, S. Text-based question answering from information retrieval and deep
    neural network perspectives: A survey. Wiley Interdiscip. Rev. Data Min. Knowl.
    Discov. 2021, 11, e1412. [Google Scholar] [CrossRef] Srivastava, Y.; Murali, V.;
    Dubey, S.R.; Mukherjee, S. Visual question answering using deep learning: A survey
    and performance analysis. In Proceedings of the International Conference on Computer
    Vision and Image Processing, Prayagraj, India, 4–6 December 2020; pp. 75–86. [Google
    Scholar] Qiu, X.; Sun, T.; Xu, Y.; Shao, Y.; Dai, N.; Huang, X. Pre-trained models
    for natural language processing: A survey. Sci. China Technol. Sci. 2020, 63,
    1872–1897. [Google Scholar] [CrossRef] Hinton, G.; Deng, L.; Yu, D.; Dahl, G.E.;
    Mohamed, A.r.; Jaitly, N.; Senior, A.; Vanhoucke, V.; Nguyen, P.; Sainath, T.N.;
    et al. Deep neural networks for acoustic modeling in speech recognition: The shared
    views of four research groups. IEEE Signal Process. Mag. 2012, 29, 82–97. [Google
    Scholar] [CrossRef] Sak, H.; Vinyals, O.; Heigold, G.; Senior, A.; McDermott,
    E.; Monga, R.; Mao, M. Sequence discriminative distributed training of long short-term
    memory recurrent neural networks. In Proceedings of the Interspeech, Singapore,
    14–18 September 2014; pp. 17–18. [Google Scholar] Sainath, T.N.; Vinyals, O.;
    Senior, A.; Sak, H. Convolutional, long short-term memory, fully connected deep
    neural networks. In Proceedings of the 2015 IEEE International Conference on Acoustics,
    Speech and Signal Processing (ICASSP), South Brisbane, QSD, Australia, 19–24 April
    2015; pp. 4580–4584. [Google Scholar] Soltau, H.; Liao, H.; Sak, H. Neural speech
    recognizer: Acoustic-to-word LSTM model for large vocabulary speech recognition.
    arXiv 2016, arXiv:1610.09975. [Google Scholar] Prabhavalkar, R.; Rao, K.; Sainath,
    T.N.; Li, B.; Johnson, L.; Jaitly, N. A Comparison of sequence-to-sequence models
    for speech recognition. In Proceedings of the Interspeech, Stockholm, Sweden,
    20–24 August 2017; pp. 939–943. [Google Scholar] Li, B.; Zhang, Y.; Sainath, T.;
    Wu, Y.; Chan, W. Bytes are all you need: End-to-end multilingual speech recognition
    and synthesis with bytes. In Proceedings of the 2019 IEEE International Conference
    on Acoustics, Speech and Signal Processing (ICASSP), Brighton, UK, 12–17 May 2019;
    pp. 5621–5625. [Google Scholar] Lopez-Moreno, I.; Gonzalez-Dominguez, J.; Plchot,
    O.; Martinez, D.; Gonzalez-Rodriguez, J.; Moreno, P. Automatic language identification
    using deep neural networks. In Proceedings of the 2014 IEEE International Conference
    on Acoustics, Speech and Signal Processing (ICASSP), Florence, Italy, 4–9 May
    2014; pp. 5337–5341. [Google Scholar] Durand, S.; Bello, J.P.; David, B.; Richard,
    G. Robust downbeat tracking using an ensemble of convolutional networks. IEEE/ACM
    Trans. Audio, Speech, Lang. Process. 2016, 25, 76–89. [Google Scholar] [CrossRef]
    McFee, B.; Bello, J.P. Structured training for large-vocabulary chord recognition.
    In Proceedings of the 18th International Society for Music Information Retrieval
    Conference, Suzhou, China, 23–27 October 2017; pp. 188–194. [Google Scholar] Vivek,
    V.; Vidhya, S.; Madhanmohan, P. Acoustic scene classification in hearing aid using
    deep learning. In Proceedings of the 2020 International Conference on Communication
    and Signal Processing (ICCSP), Chennai, India, 28–30 July 2020; pp. 0695–0699.
    [Google Scholar] Mesaros, A.; Heittola, T.; Benetos, E.; Foster, P.; Lagrange,
    M.; Virtanen, T.; Plumbley, M.D. Detection and classification of acoustic scenes
    and events: Outcome of the DCASE 2016 challenge. IEEE/ACM Trans. Audio, Speech,
    Lang. Process. 2017, 26, 379–393. [Google Scholar] [CrossRef] [Green Version]
    Purwins, H.; Li, B.; Virtanen, T.; Schlüter, J.; Chang, S.Y.; Sainath, T. Deep
    learning for audio signal processing. IEEE J. Sel. Top. Signal Process. 2019,
    13, 206–219. [Google Scholar] [CrossRef] [Green Version] Wang, Y.; Narayanan,
    A.; Wang, D. On training targets for supervised speech separation. IEEE/ACM Trans.
    Audio Speech Lang. Process. 2014, 22, 1849–1858. [Google Scholar] [CrossRef] [Green
    Version] Isik, Y.; Roux, J.L.; Chen, Z.; Watanabe, S.; Hershey, J.R. Single-channel
    multi-speaker separation using deep clustering. arXiv 2016, arXiv:1607.02173.
    [Google Scholar] Xiao, X.; Watanabe, S.; Erdogan, H.; Lu, L.; Hershey, J.; Seltzer,
    M.L.; Chen, G.; Zhang, Y.; Mandel, M.; Yu, D. Deep beamforming networks for multi-channel
    speech recognition. In Proceedings of the 2016 IEEE International Conference on
    Acoustics, Speech and Signal Processing (ICASSP), Shanghai, China, 20–25 March
    2016; pp. 5745–5749. [Google Scholar] Feng, X.; Zhang, Y.; Glass, J. Speech feature
    denoising and dereverberation via deep autoencoders for noisy reverberant speech
    recognition. In Proceedings of the 2014 IEEE International Conference on Acoustics,
    Speech and Signal Processing (ICASSP), Florence, Italy, 4–9 May 2014; pp. 1759–1763.
    [Google Scholar] Li, B.; Sim, K.C. A spectral masking approach to noise-robust
    speech recognition using deep neural networks. IEEE/ACM Trans. Audio, Speech,
    Lang. Process. 2014, 22, 1296–1305. [Google Scholar] [CrossRef] Vesperini, F.;
    Vecchiotti, P.; Principi, E.; Squartini, S.; Piazza, F. A neural network based
    algorithm for speaker localization in a multi-room environment. In Proceedings
    of the 2016 IEEE 26th International Workshop on Machine Learning for Signal Processing
    (MLSP), Salerno, Italy, 13–16 September 2016; pp. 1–6. [Google Scholar] Weninger,
    F.; Erdogan, H.; Watanabe, S.; Vincent, E.; Roux, J.L.; Hershey, J.R.; Schuller,
    B. Speech enhancement with LSTM recurrent neural networks and its application
    to noise-robust ASR. In Proceedings of the International Conference on Latent
    Variable Analysis and Signal Separation, Liberec, Czech Republic, 25–28 August
    2015; pp. 91–99. [Google Scholar] Chakrabarty, S.; Habets, E.A. Multi-speaker
    localization using convolutional neural network trained with noise. arXiv 2017,
    arXiv:1712.04276. [Google Scholar] Adavanne, S.; Politis, A.; Virtanen, T. Direction
    of arrival estimation for multiple sound sources using convolutional recurrent
    neural network. In Proceedings of the 2018 26th European Signal Processing Conference
    (EUSIPCO), Roma, Italy, 3–7 September 2018; pp. 1462–1466. [Google Scholar] Jia,
    Y.; Zhang, Y.; Weiss, R.; Wang, Q.; Shen, J.; Ren, F.; Nguyen, P.; Pang, R.; Lopez
    Moreno, I.; Wu, Y.; et al. Transfer learning from speaker verification to multispeaker
    text-to-speech synthesis. Adv. Neural Inf. Process. Syst. 2018, 31, 4485–4495.
    [Google Scholar] Ghose, S.; Prevost, J.J. Autofoley: Artificial synthesis of synchronized
    sound tracks for silent videos with deep learning. IEEE Trans. Multimed. 2020,
    23, 1895–1907. [Google Scholar] [CrossRef] Donahue, C.; McAuley, J.; Puckette,
    M. Adversarial audio synthesis. arXiv 2018, arXiv:1802.04208. [Google Scholar]
    Kalchbrenner, N.; Elsen, E.; Simonyan, K.; Noury, S.; Casagrande, N.; Lockhart,
    E.; Stimberg, F.; Oord, A.; Dieleman, S.; Kavukcuoglu, K. Efficient neural audio
    synthesis. In Proceedings of the International Conference on Machine Learning,
    Stockholm, Sweden, 10–15 July 2018; pp. 2410–2419. [Google Scholar] Oord, A.v.d.;
    Dieleman, S.; Zen, H.; Simonyan, K.; Vinyals, O.; Graves, A.; Kalchbrenner, N.;
    Senior, A.; Kavukcuoglu, K. Wavenet: A generative model for raw audio. arXiv 2016,
    arXiv:1609.03499. [Google Scholar] Oord, A.; Li, Y.; Babuschkin, I.; Simonyan,
    K.; Vinyals, O.; Kavukcuoglu, K.; Driessche, G.; Lockhart, E.; Cobo, L.; Stimberg,
    F.; et al. Parallel wavenet: Fast high-fidelity speech synthesis. In Proceedings
    of the International Conference on Machine Learning, Stockholm, Sweden, 10–15
    July 2018; pp. 3918–3926. [Google Scholar] Lenz, I.; Knepper, R.A.; Saxena, A.
    DeepMPC: Learning deep latent features for model predictive control. In Proceedings
    of the Robotics: Science and Systems, Rome, Italy, 13–17 July 2015; Volume 10,
    pp. 1–9. [Google Scholar] Watter, M.; Springenberg, J.; Boedecker, J.; Riedmiller,
    M. Embed to control: A locally linear latent dynamics model for control from raw
    images. Adv. Neural Inf. Process. Syst. 2015, 28, 2746–2754. [Google Scholar]
    Polydoros, A.S.; Nalpantidis, L.; Krüger, V. Real-time deep learning of robotic
    manipulator inverse dynamics. In Proceedings of the 2015 IEEE/RSJ International
    Conference on Intelligent Robots and Systems (IROS), Hamburg, Germany, 28 September–3
    October 2015; pp. 3442–3448. [Google Scholar] Zhang, T.; Kahn, G.; Levine, S.;
    Abbeel, P. Learning deep control policies for autonomous aerial vehicles with
    MPC-guided policy search. In Proceedings of the 2016 IEEE International Conference
    on Robotics and Automation (ICRA), Stockholm, Sweden, 16–21 May 2016; pp. 528–535.
    [Google Scholar] Yang, Y.; Li, Y.; Fermuller, C.; Aloimonos, Y. Robot learning
    manipulation action plans by “watching” unconstrained videos from the world wide
    web. In Proceedings of the AAAI Conference on Artificial Intelligence, Austin,
    TX, USA, 25–30 January 2015; Volume 29, pp. 3686–3692. [Google Scholar] Levine,
    S.; Finn, C.; Darrell, T.; Abbeel, P. End-to-end training of deep visuomotor policies.
    J. Mach. Learn. Res. 2016, 17, 1334–1373. [Google Scholar] Finn, C.; Tan, X.Y.;
    Duan, Y.; Darrell, T.; Levine, S.; Abbeel, P. Deep spatial autoencoders for visuomotor
    learning. In Proceedings of the 2016 IEEE International Conference on Robotics
    and Automation (ICRA), Stockholm, Sweden, 16–21 May 2016; pp. 512–519. [Google
    Scholar] Redmon, J.; Angelova, A. Real-time grasp detection using convolutional
    neural networks. In Proceedings of the 2015 IEEE International Conference on Robotics
    and Automation (ICRA), Seattle, WA, USA, 26–30 May 2015; pp. 1316–1322. [Google
    Scholar] Mariolis, I.; Peleka, G.; Kargakos, A.; Malassiotis, S. Pose and category
    recognition of highly deformable objects using deep learning. In Proceedings of
    the 2015 International Conference on Advanced Robotics (ICAR), Taipei, Taiwan,
    29-31 May 2015; pp. 655–662. [Google Scholar] Crespo, J.; Barber, R.; Mozos, O.
    Relational model for robotic semantic navigation in indoor environments. J. Intell.
    Robot. Syst. 2017, 86, 617–639. [Google Scholar] [CrossRef] Neverova, N.; Wolf,
    C.; Taylor, G.W.; Nebout, F. Multi-scale deep learning for gesture detection and
    localization. In Proceedings of the European Conference on Computer Vision, Zurich,
    Switzerland, 6–12 September 2014; pp. 474–490. [Google Scholar] Hwang, J.; Jung,
    M.; Madapana, N.; Kim, J.; Choi, M.; Tani, J. Achieving \"synergy\" in cognitive
    behavior of humanoids via deep learning of dynamic visuo-motor-attentional coordination.
    In Proceedings of the 2015 IEEE-RAS 15th International Conference on Humanoid
    Robots (Humanoids), Seoul, Republic of Korea, 3–5 November 2015; pp. 817–824.
    [Google Scholar] Wu, J.; Yildirim, I.; Lim, J.J.; Freeman, B.; Tenenbaum, J. Galileo:
    Perceiving physical object properties by integrating a physics engine with deep
    learning. Adv. Neural Inf. Process. Syst. 2015, 28, 127–135. [Google Scholar]
    Noda, K.; Arie, H.; Suga, Y.; Ogata, T. Multimodal integration learning of robot
    behavior using deep neural networks. Robot. Auton. Syst. 2014, 62, 721–736. [Google
    Scholar] [CrossRef] [Green Version] Peng, X.B.; Andrychowicz, M.; Zaremba, W.;
    Abbeel, P. Sim-to-real transfer of robotic control with dynamics randomization.
    In Proceedings of the 2018 IEEE International Conference on Robotics and Automation
    (ICRA), Brisbane, Australia, 21–25 May 2018; pp. 3803–3810. [Google Scholar] Zhuang,
    F.; Cheng, X.; Luo, P.; Pan, S.J.; He, Q. Supervised representation learning:
    Transfer learning with deep autoencoders. In Proceedings of the Twenty-Fourth
    International Joint Conference on Artificial Intelligence, Buenos Aires, Argentina,
    25–31 July 2015. [Google Scholar] Nair, A.; McGrew, B.; Andrychowicz, M.; Zaremba,
    W.; Abbeel, P. Overcoming exploration in reinforcement learning with demonstrations.
    In Proceedings of the 2018 IEEE International Conference on Robotics and Automation
    (ICRA), Brisbane, Australia, 21–25 May 2018; pp. 6292–6299. [Google Scholar] Liao,
    L.; He, X.; Zhang, H.; Chua, T.S. Attributed social network embedding. IEEE Trans.
    Knowl. Data Eng. 2018, 30, 2257–2270. [Google Scholar] [CrossRef] [Green Version]
    Wang, P.; Xu, B.; Wu, Y.; Zhou, X. Link prediction in social networks: The state-of-the-art.
    Sci. China Inf. Sci. 2015, 58, 1–38. [Google Scholar] [CrossRef] [Green Version]
    Zhang, X.; Zhao, J.; LeCun, Y. Character-level convolutional networks for text
    classification. Adv. Neural Inf. Process. Syst. 2015, 28, 649–657. [Google Scholar]
    Peng, Z.; Luo, M.; Li, J.; Liu, H.; Zheng, Q. ANOMALOUS: A Joint Modeling Approach
    for Anomaly Detection on Attributed Networks. In Proceedings of the 27th International
    Joint Conference on Artificial Intelligence, Stockholm, Sweden, 13–19 July 2018;
    pp. 3513–3519. [Google Scholar] Wang, X.; Cui, P.; Wang, J.; Pei, J.; Zhu, W.;
    Yang, S. Community preserving network embedding. In Proceedings of the Thirty-first
    AAAI Conference on Artificial Intelligence, San Francisco, CA, USA, 4–9 February
    2017; Volume 31, pp. 203–209. [Google Scholar] Rosenthal, S.; Farra, N.; Nakov,
    P. SemEval-2017 task 4: Sentiment analysis in Twitter. arXiv 2019, arXiv:1912.00741.
    [Google Scholar] Liu, F.; Liu, B.; Sun, C.; Liu, M.; Wang, X. Deep belief network-based
    approaches for link prediction in signed social networks. Entropy 2015, 17, 2140–2169.
    [Google Scholar] [CrossRef] Liu, Y.; Zeng, K.; Wang, H.; Song, X.; Zhou, B. Content
    matters: A GNN-based model combined with text semantics for social network cascade
    prediction. In Proceedings of the Pacific-Asia Conference on Knowledge Discovery
    and Data Mining, Virtual Event, 11–14 May 2021; pp. 728–740. [Google Scholar]
    Nguyen, D.T.; Joty, S.; Imran, M.; Sajjad, H.; Mitra, P. Applications of online
    deep learning for crisis response using social media information. arXiv 2016,
    arXiv:1610.01030. [Google Scholar] Huang, P.S.; He, X.; Gao, J.; Deng, L.; Acero,
    A.; Heck, L. Learning deep structured semantic models for web search using clickthrough
    data. In Proceedings of the 22nd ACM International Conference on Information &
    Knowledge Management, San Francisco, CA, USA, 27 October–1 November 2013; pp.
    2333–2338. [Google Scholar] Shen, Y.; He, X.; Gao, J.; Deng, L.; Mesnil, G. Learning
    semantic representations using convolutional neural networks for web search. In
    Proceedings of the 23rd International Conference on World Wide Web, Seoul, Republic
    of Korea, 7–11 April 2014; pp. 373–374. [Google Scholar] Ma, C.; Ma, L.; Zhang,
    Y.; Sun, J.; Liu, X.; Coates, M. Memory augmented graph neural networks for sequential
    recommendation. In Proceedings of the AAAI Conference on Artificial Intelligence,
    New York, NY, USA, 7–12 February 2020; Volume 34, pp. 5045–5052. [Google Scholar]
    Shi, C.; Hu, B.; Zhao, W.X.; Philip, S.Y. Heterogeneous information network embedding
    for recommendation. IEEE Trans. Knowl. Data Eng. 2018, 31, 357–370. [Google Scholar]
    [CrossRef] [Green Version] Holm, A.N.; Plank, B.; Wright, D.; Augenstein, I. Longitudinal
    citation prediction using temporal graph neural networks. arXiv 2020, arXiv:2012.05742.
    [Google Scholar] Lu, H.; Zhu, Y.; Lin, Q.; Wang, T.; Niu, Z.; Herrera-Viedma,
    E. Heterogeneous knowledge learning of predictive academic intelligence in transportation.
    IEEE Trans. Intell. Transp. Syst. 2022, 23, 3737–3755. [Google Scholar] [CrossRef]
    Ciocca, G.; Napoletano, P.; Schettini, R. CNN-based features for retrieval and
    classification of food images. Comput. Vis. Image Underst. 2018, 176, 70–77. [Google
    Scholar] [CrossRef] Zhou, L.; Zhang, C.; Liu, F.; Qiu, Z.; He, Y. Application
    of deep learning in food: A review. Compr. Rev. Food Sci. Food Saf. 2019, 18,
    1793–1811. [Google Scholar] [CrossRef] [Green Version] Kiourt, C.; Pavlidis, G.;
    Markantonatou, S. Deep learning approaches in food recognition. In Machine Learning
    Paradigms; Springer: Berlin, Germany, 2020; pp. 83–108. [Google Scholar] Ege,
    T.; Yanai, K. Image-based food calorie estimation using recipe information. IEICE
    Trans. Inf. Syst. 2018, 101, 1333–1341. [Google Scholar] [CrossRef] [Green Version]
    Yunus, R.; Arif, O.; Afzal, H.; Amjad, M.F.; Abbas, H.; Bokhari, H.N.; Haider,
    S.T.; Zafar, N.; Nawaz, R. A framework to estimate the nutritional value of food
    in real time using deep learning techniques. IEEE Access 2018, 7, 2643–2652. [Google
    Scholar] [CrossRef] Naritomi, S.; Yanai, K. CalorieCaptorGlass: Food calorie estimation
    based on actual size using hololens and deep learning. In Proceedings of the 2020
    IEEE Conference on Virtual Reality and 3D User Interfaces Abstracts and Workshops
    (VRW), Atlanta, GA, USA, 2–26 March 2020; pp. 818–819. [Google Scholar] Liu, C.;
    Cao, Y.; Luo, Y.; Chen, G.; Vokkarane, V.; Yunsheng, M.; Chen, S.; Hou, P. A new
    deep learning-based food recognition system for dietary assessment on an edge
    computing service infrastructure. IEEE Trans. Serv. Comput. 2017, 11, 249–261.
    [Google Scholar] [CrossRef] Rodríguez, F.J.; García, A.; Pardo, P.J.; Chávez,
    F.; Luque-Baena, R.M. Study and classification of plum varieties using image analysis
    and deep learning techniques. Prog. Artif. Intell. 2018, 7, 119–127. [Google Scholar]
    [CrossRef] Koirala, A.; Walsh, K.B.; Wang, Z.; McCarthy, C. Deep learning–Method
    overview and review of use for fruit detection and yield estimation. Comput. Electron.
    Agric. 2019, 162, 219–234. [Google Scholar] [CrossRef] Song, Q.; Zheng, Y.J.;
    Xue, Y.; Sheng, W.G.; Zhao, M.R. An evolutionary deep neural network for predicting
    morbidity of gastrointestinal infections by food contamination. Neurocomputing
    2017, 226, 16–22. [Google Scholar] [CrossRef] Gorji, H.T.; Shahabi, S.M.; Sharma,
    A.; Tande, L.Q.; Husarik, K.; Qin, J.; Chan, D.E.; Baek, I.; Kim, M.S.; MacKinnon,
    N.; et al. Combining deep learning and fluorescence imaging to automatically identify
    fecal contamination on meat carcasses. Sci. Rep. 2022, 12, 2392. [Google Scholar]
    [CrossRef] Song, Q.; Zheng, Y.J.; Yang, J. Effects of food contamination on gastrointestinal
    morbidity: Comparison of different machine-learning methods. Int. J. Environ.
    Res. Public Health 2019, 16, 838. [Google Scholar] [CrossRef] [PubMed] [Green
    Version] Ha, J.G.; Moon, H.; Kwak, J.T.; Hassan, S.I.; Dang, M.; Lee, O.N.; Park,
    H.Y. Deep convolutional neural network for classifying Fusarium wilt of radish
    from unmanned aerial vehicles. J. Appl. Remote. Sens. 2017, 11, 042621. [Google
    Scholar] [CrossRef] Ma, J.; Du, K.; Zheng, F.; Zhang, L.; Gong, Z.; Sun, Z. A
    recognition method for cucumber diseases using leaf symptom images based on deep
    convolutional neural network. Comput. Electron. Agric. 2018, 154, 18–24. [Google
    Scholar] [CrossRef] Lu, Y.; Yi, S.; Zeng, N.; Liu, Y.; Zhang, Y. Identification
    of rice diseases using deep convolutional neural networks. Neurocomputing 2017,
    267, 378–384. [Google Scholar] [CrossRef] Yang, A.; Huang, H.; Zhu, X.; Yang,
    X.; Chen, P.; Li, S.; Xue, Y. Automatic recognition of sow nursing behaviour using
    deep learning-based segmentation and spatial and temporal features. Biosyst. Eng.
    2018, 175, 133–145. [Google Scholar] [CrossRef] Qiao, Y.; Truman, M.; Sukkarieh,
    S. Cattle segmentation and contour extraction based on Mask R-CNN for precision
    livestock farming. Comput. Electron. Agric. 2019, 165, 104958. [Google Scholar]
    [CrossRef] Hansen, M.F.; Smith, M.L.; Smith, L.N.; Salter, M.G.; Baxter, E.M.;
    Farish, M.; Grieve, B. Towards on-farm pig face recognition using convolutional
    neural networks. Comput. Ind. 2018, 98, 145–152. [Google Scholar] [CrossRef] Tian,
    M.; Guo, H.; Chen, H.; Wang, Q.; Long, C.; Ma, Y. Automated pig counting using
    deep learning. Comput. Electron. Agric. 2019, 163, 104840. [Google Scholar] [CrossRef]
    Kussul, N.; Lavreniuk, M.; Skakun, S.; Shelestov, A. Deep learning classification
    of land cover and crop types using remote sensing data. IEEE Geosci. Remote. Sens.
    Lett. 2017, 14, 778–782. [Google Scholar] [CrossRef] Gaetano, R.; Ienco, D.; Ose,
    K.; Cresson, R. A two-branch CNN architecture for land cover classification of
    PAN and MS imagery. Remote Sens. 2018, 10, 1746. [Google Scholar] [CrossRef] [Green
    Version] Ren, C.; Kim, D.K.; Jeong, D. A survey of deep learning in agriculture:
    Techniques and their applications. J. Inf. Process. Syst. 2020, 16, 1015–1033.
    [Google Scholar] Vali, A.; Comai, S.; Matteucci, M. Deep learning for land use
    and land cover classification based on hyperspectral and multispectral earth observation
    data: A review. Remote Sens. 2020, 12, 2495. [Google Scholar] [CrossRef] Xie,
    T.; Grossman, J.C. Crystal graph convolutional neural networks for an accurate
    and interpretable prediction of material properties. Phys. Rev. Lett. 2018, 120,
    145301. [Google Scholar] [CrossRef] [Green Version] Jain, A.; Bligaard, T. Atomic-position
    independent descriptor for machine learning of material properties. Phys. Rev.
    B 2018, 98, 214112. [Google Scholar] [CrossRef] [Green Version] Li, H.; Collins,
    C.R.; Ribelli, T.G.; Matyjaszewski, K.; Gordon, G.J.; Kowalewski, T.; Yaron, D.J.
    Tuning the molecular weight distribution from atom transfer radical polymerization
    using deep reinforcement learning. Mol. Syst. Des. Eng. 2018, 3, 496–508. [Google
    Scholar] [CrossRef] [Green Version] Xie, T.; Grossman, J.C. Hierarchical visualization
    of materials space with graph convolutional neural networks. J. Chem. Phys. 2018,
    149, 174111. [Google Scholar] [CrossRef] [PubMed] Kim, E.; Huang, K.; Jegelka,
    S.; Olivetti, E. Virtual screening of inorganic materials synthesis parameters
    with deep learning. NPJ Comput. Mater. 2017, 3, 1–9. [Google Scholar] [CrossRef]
    [Green Version] Feng, S.; Zhou, H.; Dong, H. Using deep neural network with small
    dataset to predict material defects. Mater. Des. 2019, 162, 300–310. [Google Scholar]
    [CrossRef] Polykovskiy, D.; Zhebrak, A.; Vetrov, D.; Ivanenkov, Y.; Aladinskiy,
    V.; Mamoshina, P.; Bozdaganyan, M.; Aliper, A.; Zhavoronkov, A.; Kadurin, A. Entangled
    conditional adversarial autoencoder for de novo drug discovery. Mol. Pharm. 2018,
    15, 4398–4405. [Google Scholar] [CrossRef] Kadurin, A.; Nikolenko, S.; Khrabrov,
    K.; Aliper, A.; Zhavoronkov, A. druGAN: An advanced generative adversarial autoencoder
    model for de novo generation of new molecules with desired molecular properties
    in silico. Mol. Pharm. 2017, 14, 3098–3104. [Google Scholar] [CrossRef] Segler,
    M.H.; Kogej, T.; Tyrchan, C.; Waller, M.P. Generating focused molecule libraries
    for drug discovery with recurrent neural networks. ACS Cent. Sci. 2018, 4, 120–131.
    [Google Scholar] [CrossRef] [PubMed] [Green Version] Zhang, L.; Tan, J.; Han,
    D.; Zhu, H. From machine learning to deep learning: Progress in machine intelligence
    for rational drug discovery. Drug Discov. Today 2017, 22, 1680–1685. [Google Scholar]
    [CrossRef] [PubMed] Walters, W.P.; Barzilay, R. Applications of deep learning
    in molecule generation and molecular property prediction. Accounts Chem. Res.
    2020, 54, 263–270. [Google Scholar] [CrossRef] [PubMed] Gupta, R.; Srivastava,
    D.; Sahu, M.; Tiwari, S.; Ambasta, R.K.; Kumar, P. Artificial intelligence to
    deep learning: Machine intelligence approach for drug discovery. Mol. Divers.
    2021, 25, 1315–1360. [Google Scholar] [CrossRef] Mater, A.C.; Coote, M.L. Deep
    learning in chemistry. J. Chem. Inf. Model. 2019, 59, 2545–2559. [Google Scholar]
    [CrossRef] Segler, M.H.; Preuss, M.; Waller, M.P. Planning chemical syntheses
    with deep neural networks and symbolic AI. Nature 2018, 555, 604–610. [Google
    Scholar] [CrossRef] [Green Version] Dong, J.; Zhao, M.; Liu, Y.; Su, Y.; Zeng,
    X. Deep learning in retrosynthesis planning: Datasets, models and tools. Briefings
    Bioinform. 2022, 23, bbab391. [Google Scholar] [CrossRef] Wei, J.N.; Duvenaud,
    D.; Aspuru-Guzik, A. Neural networks for the prediction of organic chemistry reactions.
    ACS Cent. Sci. 2016, 2, 725–732. [Google Scholar] [CrossRef] Schwaller, P.; Gaudin,
    T.; Lanyi, D.; Bekas, C.; Laino, T. “Found in Translation”: Predicting outcomes
    of complex organic chemistry reactions using neural sequence-to-sequence models.
    Chem. Sci. 2018, 9, 6091–6098. [Google Scholar] [CrossRef] [Green Version] Fooshee,
    D.; Mood, A.; Gutman, E.; Tavakoli, M.; Urban, G.; Liu, F.; Huynh, N.; Van Vranken,
    D.; Baldi, P. Deep learning for chemical reaction prediction. Mol. Syst. Des.
    Eng. 2018, 3, 442–452. [Google Scholar] [CrossRef] Coley, C.W.; Jin, W.; Rogers,
    L.; Jamison, T.F.; Jaakkola, T.S.; Green, W.H.; Barzilay, R.; Jensen, K.F. A graph-convolutional
    neural network model for the prediction of chemical reactivity. Chem. Sci. 2019,
    10, 370–377. [Google Scholar] [CrossRef] [PubMed] [Green Version] Chatzimparmpas,
    A.; Martins, R.M.; Jusufi, I.; Kerren, A. A survey of surveys on the use of visualization
    for interpreting machine learning models. Inf. Vis. 2020, 19, 207–233. [Google
    Scholar] [CrossRef] [Green Version] Ribeiro, M.T.; Singh, S.; Guestrin, C. “Why
    should i trust you?” Explaining the predictions of any classifier. In Proceedings
    of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data
    Mining, San Francisco, CA, USA, 13–17 August 2016; pp. 1135–1144. [Google Scholar]
    Li, J.; Zhang, C.; Zhou, J.T.; Fu, H.; Xia, S.; Hu, Q. Deep-LIFT: Deep label-specific
    feature learning for image annotation. IEEE Trans. Cybern. 2021, 52, 7732–7741.
    [Google Scholar] [CrossRef] [PubMed] Neyshabur, B.; Salakhutdinov, R.R.; Srebro,
    N. Path-sgd: Path-normalized optimization in deep neural networks. Adv. Neural
    Inf. Process. Syst. 2015, 28, 2422–2430. [Google Scholar] Hardt, M.; Recht, B.;
    Singer, Y. Train faster, generalize better: Stability of stochastic gradient descent.
    In Proceedings of the International Conference on Machine Learning, New York,
    NY, USA, 19–24 June 2016; pp. 1225–1234. [Google Scholar] Scheirer, W.J.; de Rezende
    Rocha, A.; Sapkota, A.; Boult, T.E. Toward open set recognition. IEEE Trans. Pattern
    Anal. Mach. Intell. 2012, 35, 1757–1772. [Google Scholar] [CrossRef] Geng, C.;
    Huang, S.j.; Chen, S. Recent advances in open set recognition: A survey. IEEE
    Trans. Pattern Anal. Mach. Intell. 2020, 43, 3614–3631. [Google Scholar] [CrossRef]
    [Green Version] Skeem, J.; Eno Louden, J. Assessment of Evidence on the Quality
    of the Correctional Offender Management Profiling for Alternative Sanctions (COMPAS).
    Unpublished Report Prepared for the California Department of Corrections and Rehabilitation.
    2007. Available online: https://webfiles.uci.edu/skeem/Downloads.html (accessed
    on 2 November 2022). Erickson, B.J.; Korfiatis, P.; Akkus, Z.; Kline, T.; Philbrick,
    K. Toolkits and libraries for deep learning. J. Digit. Imaging 2017, 30, 400–405.
    [Google Scholar] [CrossRef] [Green Version] Nguyen, G.; Dlugolinsky, S.; Bobák,
    M.; Tran, V.; López García, Á.; Heredia, I.; Malík, P.; Hluchỳ, L. Machine learning
    and deep learning frameworks and libraries for large-scale data mining: A survey.
    Artif. Intell. Rev. 2019, 52, 77–124. [Google Scholar] [CrossRef] [Green Version]
    Elsken, T.; Metzen, J.H.; Hutter, F. Neural architecture search: A survey. J.
    Mach. Learn. Res. 2019, 20, 1997–2017. [Google Scholar] Hatcher, W.G.; Yu, W.
    A survey of deep learning: Platforms, applications and emerging research trends.
    IEEE Access 2018, 6, 24411–24432. [Google Scholar] [CrossRef] Yin, X.; Wang, S.;
    Zhu, Y.; Hu, J. A novel lLength-flexible lightweight cancelable fingerprint template
    for privacy-preserving authentication systems in resource-constrained IoT applications.
    IEEE Internet Things J. 2022. [Google Scholar] [CrossRef] Yin, X.; Wang, S.; Shahzad,
    M.; Hu, J. An IoT-oriented privacy-preserving fingerprint authentication system.
    IEEE Internet Things J. 2022, 9, 11760–11771. [Google Scholar] [CrossRef] Jiang,
    H.; Li, J.; Zhao, P.; Zeng, F.; Xiao, Z.; Iyengar, A. Location privacy-preserving
    mechanisms in location-based services: A comprehensive survey. ACM Comput. Surv.
    2021, 54, 1–36. [Google Scholar] [CrossRef] Cunha, M.; Mendes, R.; Vilela, J.P.
    A survey of privacy-preserving mechanisms for heterogeneous data types. Comput.
    Sci. Rev. 2021, 41, 100403. [Google Scholar] [CrossRef] Guo, W.; Wang, J.; Wang,
    S. Deep multimodal representation learning: A survey. IEEE Access 2019, 7, 63373–63394.
    [Google Scholar] [CrossRef] Gao, J.; Li, P.; Chen, Z.; Zhang, J. A survey on deep
    learning for multimodal data fusion. Neural Comput. 2020, 32, 829–864. [Google
    Scholar] [CrossRef] Disclaimer/Publisher’s Note: The statements, opinions and
    data contained in all publications are solely those of the individual author(s)
    and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s)
    disclaim responsibility for any injury to people or property resulting from any
    ideas, methods, instructions or products referred to in the content.  © 2022 by
    the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
    article distributed under the terms and conditions of the Creative Commons Attribution
    (CC BY) license (https://creativecommons.org/licenses/by/4.0/). Share and Cite
    MDPI and ACS Style Zhu, Y.; Wang, M.; Yin, X.; Zhang, J.; Meijering, E.; Hu, J.
    Deep Learning in Diverse Intelligent Sensor Based Systems. Sensors 2023, 23, 62.
    https://doi.org/10.3390/s23010062 AMA Style Zhu Y, Wang M, Yin X, Zhang J, Meijering
    E, Hu J. Deep Learning in Diverse Intelligent Sensor Based Systems. Sensors. 2023;
    23(1):62. https://doi.org/10.3390/s23010062 Chicago/Turabian Style Zhu, Yanming,
    Min Wang, Xuefei Yin, Jue Zhang, Erik Meijering, and Jiankun Hu. 2023. \"Deep
    Learning in Diverse Intelligent Sensor Based Systems\" Sensors 23, no. 1: 62.
    https://doi.org/10.3390/s23010062 Note that from the first issue of 2016, this
    journal uses article numbers instead of page numbers. See further details here.
    Article Metrics Citations Crossref   7 ads   3 Web of Science   6 Scopus   8 PubMed   1
    PMC   1 Google Scholar   [click to view] Article Access Statistics Article access
    statistics Article Views 14. Jan 24. Jan 3. Feb 13. Feb 23. Feb 4. Mar 14. Mar
    24. Mar 3. Apr 0k 10k 2.5k 5k 7.5k For more information on the journal statistics,
    click here. Multiple requests from the same IP address are counted as one view.   Sensors,
    EISSN 1424-8220, Published by MDPI RSS Content Alert Further Information Article
    Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI
    Guidelines For Authors For Reviewers For Editors For Librarians For Publishers
    For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org
    Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Deep Learning in Diverse Intelligent Sensor Based Systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Postolache S.
  - Sebastião P.
  - Viegas V.
  - Postolache O.
  - Cercas F.
  citation_count: '11'
  description: 'Soil nutrients assessment has great importance in horticulture. Implementation
    of an information system for horticulture faces many challenges: (i) great spatial
    variability within farms (e.g., hilly topography); (ii) different soil properties
    (e.g., different water holding capacity, different content in sand, sit, clay,
    and soil organic matter, different pH, and different permeability) for different
    cultivated plants; (iii) different soil nutrient uptake by different cultivated
    plants; (iv) small size of monoculture; and (v) great variety of farm components,
    agroecological zone, and socio-economic factors. Advances in information and communication
    technologies enable creation of low cost, efficient information systems that would
    improve resources management and increase productivity and sustainability of horticultural
    farms. We present an information system based on different sensing capability,
    Internet of Things, and mobile application for horticultural farms. An overview
    on different techniques and technologies for soil fertility evaluation is also
    presented. The results obtained in a botanical garden that simulates the diversity
    of environment and plant diversity of a horticultural farm are discussed considering
    the challenges identified in the literature and field research. The study provides
    a theoretical basis and technical support for the development of technologies
    that enable horticultural farmers to improve resources management.'
  doi: 10.3390/s23010403
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Sensors All Article Types Advanced   Journals
    Sensors Volume 23 Issue 1 10.3390/s23010403 Submit to this Journal Review for
    this Journal Propose a Special Issue Article Menu Academic Editor Wen-Hao Su Subscribe
    SciFeed Recommended Articles Related Info Links More by Authors Links Article
    Views 4942 Citations 12 Table of Contents Abstract Introduction Techniques and
    Technologies for Soil Fertility Characterization Information System for Soil Nutrients
    Assessment IoT-Based System for Soil Nutrient Assessment Results Discussion Conclusions
    Author Contributions Funding Institutional Review Board Statement Informed Consent
    Statement Data Availability Statement Conflicts of Interest References Altmetric
    share Share announcement Help format_quote Cite question_answer Discuss in SciProfiles
    thumb_up Endorse textsms Comment first_page settings Order Article Reprints Open
    AccessArticle IoT-Based Systems for Soil Nutrients Assessment in Horticulture
    by Stefan Postolache 1, Pedro Sebastião 1, Vitor Viegas 2, Octavian Postolache
    1 and Francisco Cercas 1,* 1 Instituto de Telecomunicações, ISCTE-Instituto Universitário
    de Lisboa, 1649-026 Lisboa, Portugal 2 Instituto de Telecomunicações, Portuguese
    Naval Academy, 2810-001 Almada, Portugal * Author to whom correspondence should
    be addressed. Sensors 2023, 23(1), 403; https://doi.org/10.3390/s23010403 Submission
    received: 21 November 2022 / Revised: 20 December 2022 / Accepted: 24 December
    2022 / Published: 30 December 2022 (This article belongs to the Special Issue
    Advanced Sensing Technologies for Smart Farming and Sustainable Food Production)
    Download keyboard_arrow_down     Browse Figures Review Reports Versions Notes
    Abstract Soil nutrients assessment has great importance in horticulture. Implementation
    of an information system for horticulture faces many challenges: (i) great spatial
    variability within farms (e.g., hilly topography); (ii) different soil properties
    (e.g., different water holding capacity, different content in sand, sit, clay,
    and soil organic matter, different pH, and different permeability) for different
    cultivated plants; (iii) different soil nutrient uptake by different cultivated
    plants; (iv) small size of monoculture; and (v) great variety of farm components,
    agroecological zone, and socio-economic factors. Advances in information and communication
    technologies enable creation of low cost, efficient information systems that would
    improve resources management and increase productivity and sustainability of horticultural
    farms. We present an information system based on different sensing capability,
    Internet of Things, and mobile application for horticultural farms. An overview
    on different techniques and technologies for soil fertility evaluation is also
    presented. The results obtained in a botanical garden that simulates the diversity
    of environment and plant diversity of a horticultural farm are discussed considering
    the challenges identified in the literature and field research. The study provides
    a theoretical basis and technical support for the development of technologies
    that enable horticultural farmers to improve resources management. Keywords: NPK
    sensor; smart sensors; Internet of Things; mobile application; horticulture; soil
    nutrient assessment; precision agriculture 1. Introduction Accelerated progress
    over the past 50 years produced by new technologies in industry, healthcare, or
    tourism have paved the way for transforming the way of producing our food. The
    European Farm to Fork Strategy [1] aims to promote scientific discoveries and
    implementation of new technologies (i.e., new machinery, genetically improved
    plants or animals, and information and communication technologies for efficient
    and sustainable farming), and to increase awareness and demand for sustainable
    food. Many policy makers and farmers are currently aware of potential benefits
    of introducing new technologies that may overcome challenges of contemporary agriculture
    (i.e., technology for efficient and sustainable use of resources; technology for
    better risks and variability management that optimize yields and improve economics).
    For instance, it is well known nowadays that extensive and excessive use of synthetic
    fertilizers, irrigation practices in intensive agriculture, in addition to consequences
    derived from climate changing are associated, in many regions of the world, with
    soil and water depletion [2] and, subsequently, great reduction in crop yields.
    By implementing technologies that optimize the control of irrigation systems,
    it is possible to: (i) grow more crops; (ii) produce higher quality crops; (iii)
    have “insurance” against seasonal variability and drought; (iv) maximise benefits
    of fertilizer applications; and (v) use areas that would otherwise be less productive,
    among others [3]. Horticulture is a branch of agriculture that includes pomiculture
    (cultivation of fruit trees), olericulture (cultivation of vegetables), viticulture
    (cultivation of grapevines), floriculture (growing flowers, some with medicinal
    use), and gardening (the art and craft of laying out and care of a plot of ground
    devoted partially or wholly for growing plants, such as flowers, herbs, or vegetables)
    [4]. Horticultural crops cover vegetables, fruits, mushrooms, and condiments or
    medicinal plants. The importance of horticultural crops is currently underscored
    by progress in nutrition science. It is well understood nowadays that longevity
    of the healthy people, as well as prevention and treatment of diverse human pathology,
    is greatly associated with consumption of a variety of vegetables or fruits. The
    concept of “healthy eating plate” [5] underlines the importance of vegetables
    and fruits for healthy balanced meals. However, the increased need for global
    commercially available vegetables and fruits (associated with change in pattern
    of human food consumption, as well as the growing global population) has been
    raising new challenges in horticulture practices. For instance, the use of water,
    fertilizers, and pesticide in intensive horticulture may have a great impact on
    ground water [6] or may produce soil pollution [7]. Therefore, research is conducted
    to find solutions for better management of water, fertilizers, and pesticide in
    horticulture. As such, determinants for soil nutrients mining or depletion (defined
    as removal of more soil nutrients by crops than added through manure or fertilizers)
    [8] are investigated. Furthermore, many studies were published related to water
    use and technology that may optimize irrigation for diverse crops [9,10,11]. The
    first step that is necessary to implement an efficient water and fertilizer management
    system is field information collection. Various techniques and technologies have
    been developed in the past decades to collect data on crop survival environments
    and growth condition. Interest is growing on technologies based on Internet of
    Things (IoT) that provide means for researchers and farmers to find solutions
    for better management of crop inputs (e.g., reduce quantity and rate of fertilizers
    without sacrificing food production). In the last years, various studies have
    described different IoT-based systems for agriculture. Advances in sensors technologies,
    connectivity and data storage, data analytics, and algorithms for decision making
    and prediction enable nowadays the creation of intelligent management systems
    for water use or irrigation, or for optimal fertilizers or pesticide dispersion.
    However, no large-scale or commercially available systems are currently in use
    for many horticultural crops. Why does this happen? We investigate and we describe
    in this work our finding related to the challenges of implementing an IoT-based
    system in horticulture. The main focus of our research is on a soil nutrients
    management system, as this topic has scarce information, despite its importance
    for crop productivity. In the following sections, we present: an overview of different
    techniques for soil fertility characterization (Section 2); a discussion on different
    challenges for implementation of IoT-based systems for soil nutrient assessment
    (Section 3); a description of the architecture of our developed IoT system for
    soil nutrient characterization (Section 4); a presentation of some results obtained
    by our system that underscore the challenges related to the IoT-based development
    (Section 5); a discussion on the results and potential solutions that can increase
    the effectiveness of the IoT-based system for soil nutrients assessment (Section
    6); and, finally, our conclusions. 2. Techniques and Technologies for Soil Fertility
    Characterization The Food and Agriculture Organization (FAO) defines soil fertility
    as “the capability of soil to sustain growth by providing essential plant nutrients”
    [12], and, throughout the 17th and 18th century, it was believed that this was
    derived by one substance, the “humus”. It was not until the 19th century that
    we started to unveil the relationship between soil nutrients and fertility. The
    maintenance of soil fertility in agricultural systems involves the use of manure
    and other organic materials, inorganic fertilizers, lime, the incorporation of
    legumes into the cropping systems, or a combination of these. For optimal production
    and to preserve the fertility of the soil, application of fertilizers to maintain
    adequate amounts of all necessary nutrients should consider two principles. The
    first one proposed by Justus von Liebig, the law of minimum, states that “the
    growth of the plant is limited by the plant-nutrient element present in the smallest
    quantity, all other being present in adequate amounts” [13]. Excessive fertilization
    may have a great impact on soil properties and decrease growth. The second principle,
    the Mitscherlich law of diminishing yield increment, states that, by increasing
    the quantity of a given nutrient, the increment in crop growth will decrease until
    a point where the maximum yield capacity has been reached, which can be described
    by the following equation [14]: 𝑦=𝐴 (1− 𝑒 −𝐶 𝑥 𝑡 ), (1) where y is the yield,
    xt is the total nutrient quantity, which includes the plant available quantity
    of nutrient in the soil and the added quantity of a nutrient, A is the maximum
    attainable yield, given that xt is present in adequate quantity, and C is the
    efficiency factor. When the total amount of a nutrient in the soil—both naturally
    occurring and added—exceeds the needs of the crop, it starts to limit yield, as
    it either becomes toxic or inhibits the absorption of other essential nutrients.
    In this case, the crop response or the relation between added nutrients and plant
    growth can be described using polynomial equations of type [14]: 𝑦= 𝑎 1 + 𝑏 1
    𝑥+ 𝑐 1 𝑥 2 (2) where y is the yield, a1 is the estimated plant available quantity
    of a nutrient in the soil, x is the added nutrient quantity, and the maximum yield
    (A from Equation (1)) is given by the value of –(b1/2c1). Figure 1 represents
    the crop response when applying equations 1 and 2. Figure 1. Crop response curves
    for Equation (1), nutrients present in adequate amount, and 2, nutrients present
    in excess (based on diagram from [14]). This method has some shortfalls, namely
    it does not take into account spatial variability and the influence that external
    factors, such as water stress, pests, and diseases, have on the nutrient uptake
    and availability, and thus on plant growth [15]. However, it is still an important
    tool for characterizing soil fertility and it is the standard used to benchmark
    other soil fertility evaluation systems. Soil fertility characterization may be
    performed through (i) qualitative techniques (e.g., observation of soil colour,
    hand test for soil texture characterization, observation of abundance, and diversity
    of soil flora and fauna); (ii) quantitative techniques (e.g., quantification of
    macro- and microelements from the soil and quantification of soil water content);
    and (iii) semi-quantitative technique (e.g., questionnaire or data evaluation
    on soil properties, rate, and quantity of fertilizer application). Techniques
    for soil fertility characterization could be grouped also on: (i) biological characterization;
    (ii) plant analysis; and (iii) chemical and physical soil parameter evaluation.
    For biological characterization of soil fertility, the evaluation of changes in
    abundance and diversity of soil fauna and flora, microbial biomass, and enzyme
    activity give important information on the health of soil, on the depletion of
    soil nutrients, or impact of fertilizers on soil. Soil fauna and microbial communities
    play a key part in litter decomposition to inorganic forms that can be absorbed
    by the growing plants. In addition, the activities of soil fauna improve soil
    water infiltration and storage [16]. Qualitative methods (e.g., observation of
    soil sample) are used for biological characterization of soil fertility that requires
    evaluator expertise in soil evaluation. Evaluator fatigue and lower capacity for
    visualization of sample (e.g., lower luminosity in the environment) may introduce
    error in the evaluation. Furthermore, qualitative and semi-quantitative methods
    may be used on plant analysis. Observation of plants can be used to determine
    critical nutrient conditions by the observation of visible symptoms, usually associated
    with nutrient deficiency. Figure 2 shows a healthy tobacco sprout and the characteristic
    decolorated tobacco leaf when nitrogen deficit in soil exists. Figure 2. Tobacco
    plant: (a) Healthy tobacco sprout without nitrogen (N) deficiency; (b) tobacco
    with N deficiency [17]. Recently, plant analysis for soil fertility characterization
    may be conducted using satellite imagining (e.g., using MODIS—moderate-resolution
    imaging spectral radiometer information on normalized difference vegetation index
    and some soil properties) [18] or using drone—unmanned aerial vehicle (UAV) with
    attached camera (i.e., high-resolution RGB camera, hyperspectral camera, or thermal
    camera) [19,20]. Resolution of satellite images is measured in meters, while drone
    image resolution may be in the order of centimeters. A limitation of this plant
    analysis method is that, when indicators of nutrient deficiency are visible, it
    is already too late to correct the decline in fertility. In addition, a quick
    testing of the quantity of a certain nutrient in the plant can be included in
    the analysis. However, plant analysis confers only a semi-quantitative dimension
    on soil fertility because the obtained data depend on the ratio of nutrients inside
    the plant, and nutrient quantity on a plant varies with species, time of sampling,
    physiological maturity, plant part sampled, and incidence of diseases. Chemical
    and physical soil parameter evaluation can be conducted using various techniques
    and technologies. Soil characterization is typically accomplished through the
    analysis of a soil extract, from 20 to 50 samples collected from squared areas
    of 20 acres (approximately 1 ha) from the field at different depths (0 to 20 cm).
    Analysis is performed by combining water, chemical extractants, ion-exchange resin
    and membranes, and electro-ultrafiltration through various laboratory methods,
    such as colorimetry and spectroscopy [21], which are very time-consuming and expensive.
    Moreover, in the majority of cases, soil tests are performed on a gravimetric
    basis, i.e., considering the soil’s mass, instead of volumetric, considering the
    soil’s volume. Soil volume may vary with the bulk density and depth of sampling.
    Moreover, the assessment should consider the great differences in soil chemical
    and physical properties on samples collected from the surface in comparison with
    samples collected from deeper layers. Moreover, in soil sample collection, the
    type of roots of plant on culture should be considered (i.e., for plants with
    taproots, soil sample should be collected from a deeper layer than for plants
    with fibrous roots). Sample depth must remain consistent because many soils are
    stratified, and this may introduce more variability in measurements and inadequate
    interpretation of data. Furthermore, based on the results, corrective measures
    may be applied to the whole area from which the samples were collected in a uniform
    manner. Advances in portable sensors and spectral sensing techniques enable soil
    assessment on site, estimation of nutrients on the go, and analysis of flow on
    soil nutrients for a specific site. Moreover, geographic information systems (GIS)
    can be used to map in real time the measured values of nutrients to specific locations
    or areas, which allows better management of fertilizer application. Table 1 summarizes
    the advantages and disadvantages of each fertility assessment method. Table 1.
    Methods of soil fertility assessment, advantages, and disadvantages. In the next
    subsections, nutrients and factors that reduce plant uptake are explored, as well
    as sensor types and/or systems that are typically used to monitor its magnitude.
    Soil Nutrients Soil is a complex structure which includes various components in
    solid, liquid. And gas form. Out of all the nutrients present in the soil, 19
    nutrients are considered to be important for plant development, which can be categorised
    into essential elements and beneficial elements (Table 2). Essential elements
    are irreplaceable elements involved directly in the metabolism of the plant, without
    which plants cannot complete their lifecycle. Essential organic elements comprise
    carbon (C), hydrogen (H), and oxygen (O). These elements are mostly absorbed by
    the plant from the atmosphere through its leaves. However, a small quantity of
    these nutrients can also be found in the soil as part of the soil organic matter
    (SOM) in the case of C or in the form of water in the case of H and O, which cannot
    be directly consumed by the plant through its roots. Table 2. Nutrients for plant
    growth (adapted from [22]). Inorganic/mineral nutrients are absorbed through the
    roots of the plant and are important constituents of plant tissue. However, some
    nutrients are used in greater quantities, as they are essential parts of plant
    organic compounds(light-green), such as proteins and nucleic acids, or they play
    an important role in regulating the pH and osmotic potential of the cells, called
    macronutrients [23]. Macronutrients (orange cells) can be (i) primary—nitrogen
    (N), phosphorous (P), and potassium (K), who’s absence often limits plant growth;
    or (ii) secondary—calcium (Ca), magnesium (Mg), and S, that rarely limit plant
    growth. Micronutrients (yellow-brown), on the other hand, are required in significantly
    lower quantities (boron (B), chlorine (Cl), copper (Cu), iron (Fe), manganese
    (Mn), molybdenum (Mo), nickel (Ni), and zinc (Zn)), as they are components of
    enzymes (Table 2). The average concentrations that can be found in plants of these
    elements (Table 3) is a good indicator of their importance for plants as well
    and gives us an idea of the ratio of nutrients that should be available in the
    soil. Aside from essential elements, there are also beneficial elements (light-blue)
    (sodium (Na), cobalt (Cb), silicon (Si), and aluminum (Al)), since only a small
    number of plant species have been found to require them [24]. Table 3. Average
    concentrations of mineral elements in plant shoot dry matter sufficient for adequate
    growth [23]. Even if nutrients are available in certain quantities in the soil,
    not all can be consumed by the plant. Nutrient uptake depends on properties of
    the plant, such as species and maturity [14], and external factors, such as soil
    acidity, salinity, temperature [25], moisture, and concentration of other ions.
    For instance, ions with similar physicochemical properties, such as K+ and Na+,
    will compete for entering the root. In addition, factors such as oxygenation,
    air temperature, as well as pests and diseases may impair metabolic processes
    and affect the root system. Components inside the plant, such as carbohydrates
    (sources of energy) and oxygen, are necessary to absorb ions from the soil [15,26].
    For this reason, in order to define the corrective measures (fertilizer quantity)
    that need to be applied to a certain site, it is not enough to determine the current
    soil nutrient content. Other factors need to be related to the historical nutrient
    data in order to identify patterns in nutrient uptake [27]. 3. Information System
    for Soil Nutrients Assessment In recent years, the increasing awareness of the
    impact that intensive agricultural practices have had on the environment and on
    our health, as well as the pressure placed on farmers to increase their production
    to meet the needs of an ever-growing population have led to the necessity to control
    the agricultural production processes more thoroughly. Recently, various studies
    have emphasized the importance of information and communication technologies to
    build information systems for monitoring crops, which support farmers for better
    management of resources, such as optimal use of water and fertilizer in different
    crops at different states of growth and environmental conditions. Information
    system protocols comprise different layers: (i) objects/access layer/edge technology;
    (ii) network layer; (iii) co-ordination layer/service management; and (iv) application
    layer. An important component of the information system is the structure that
    allows data collection. Information on soil nutrients could be obtained by direct
    measurement using specific sensors or by indirect measurements using data from
    different sensors and aggregate data from different sources (e.g., using public
    weather, data introduced in the system by the farmer on date, and quantity and
    type of administered fertilizer). Methods for monitoring soil fertility can be
    grouped into three categories: (i) in situ, (ii) proximity, and (iii) remote sensing.
    In situ sensing uses sensors that are nondestructive and easy to use in different
    terrains and different environmental conditions. Point-based measurements are
    obtained using sensors that are in close contact or at a small distance from sample.
    These techniques are used to measure soil parameters, such as moisture and nutrient
    content, pH, salinity, and temperature. Several techniques for measuring soil
    moisture are already used in agriculture, such as time-domain reflectometry (TDR),
    heat pulse probe, and tensiometric techniques, and many others are at early stages
    of development, such as capacitance, frequency-domain (FDR) reflectometry, neutron
    scattering, electrical resistivity tomography, and near-infrared reflectance technologies
    [28]. Sensing technology for soil macronutrients, nitrogen/nitrate (N), phosphorous
    (P), and potassium (K), also known as NPK content, is in an early stage. A search
    on IEEE Xplore Digital Library in 2022 using keywords “NPK sensor” retrieved 49
    papers, the majority (48) presented in conference. In 24 papers from 49, technology
    is presented that includes NPK sensor. The majority of the works (15 from 24)
    are proof-of-concept papers that do not give information on calibration or results
    on sensitivity or accuracy. Several papers (11) present their results on nutrient
    sensing using laboratory experimentation. Data on field measurements using NPK
    sensor are very scarce (one presents collected data for 1 month in a vineyard
    but does not give information on type of NPK sensor [29]; one presents data on
    six soil samples from no identified field but is not clear if measurements were
    performed in the laboratory or in the field [30]; one presents data from nine
    soil samples from parks and alongside the street, also with no clarity on the
    place where measurements were performed [31]). There are different technologies
    for soil N, P, and K quantification, such as ion-selective membrane (ISM)-based
    electrochemical sensors, enzyme-based biosensors, molecular-imprinted polymers
    (MIP)-based biosensing approaches, electro-reduction of nitrate to ammonium ion
    on copper-based electrodes [32], fluorescence-based sensors, tamer-based sensors,
    on-the-go spectroscopy, and electrophoresis-based methods [22]. Optical or colorimetric
    sensor [31,33,34,35,36,37,38,39,40,41,42,43], conductivity sensors [30,44,45],
    and electrochemical sensor [46,47,48,49] were used for N, P, and K quantification
    as the sensing layer of an information system based on Internet of Things technology.
    The proposed sensing devices for IoT-based information systems for soil nutrients
    assessment have several limitations. Various proposed optical and colorimetric
    sensing devices enable measurements only after soil sample preparation (i.e.,
    dilution, filtration, and addition of different reagents to the sample that enable
    optical detection of the targeted soil element). The procedure is similar as in
    traditional laboratory measurements and requires laboratory conditions, employing
    expensive materials and trained and experienced technicians. Moreover, the proposed
    devices did not consider the progress in spectrophotometry technology (i.e., the
    innovation in this technology increased accuracy of measurement but also improved
    the feasibility and maintenance of the equipment). Proposed miniaturization in
    recent studies that include optical or colorimetric sensors in IoT-based systems
    is made at the expense of the feasibility of the equipment. Furthermore, direct
    measurements are proposed in some work using an optical sensor by putting the
    sensor at a small distance to the soil. A number of variables may influence those
    measurements (e.g., environmental light; soil texture; and chemical composition)
    and, therefore, the inaccuracy of the measurements is expected to be higher than
    in laboratory setting. For easy quantification of a certain substance, different
    electrochemical sensors were developed in recent years. Many of these sensors
    have high sensitivity and good selectivity. However, at least for some years in
    the future, the price of electrochemical sensors will be high, as the production
    of these sensors requires expensive equipment, expensive materials, and high professional
    expertise. Moreover, their durability is generally low, and many electrochemical
    sensors would not withstand long-term burial in soil for in situ measurements.
    The main advantages of conductive sensors for soil nutrients measurement are durability,
    low cost, and easiness of use. However, erroneous measurements in substrates with
    complex composition are a well-known limitation of this type of sensor. Soil parameters,
    such as pH, salinity, permeability, moisture, and chemical composition, may affect
    the estimation of soil N, P, and K using conductive sensors. Our hypothesis is
    that a low-cost measurement system using an NPK conductive sensor could be developed
    if data from the sensor would be aggregated with data from environmental conditions
    to enhance the accuracy of N, P, and K quantification. As such, in the present
    work, we propose a multi-channel sensing device for N, P, and K estimation. Data
    on soil pH are important both because different plants required different soil
    acidity but, also, because pH influences nutrient availability for the plants.
    Current techniques used for the measurement of soil pH are: (i) electro-chemical,
    such as glass electrode, organic modified electrodes (OCPMEs), ion-sensitive field
    effect transistor (ISFET) and pH image sensor; (ii) optical, such as optical fiber
    sensors, fluorometric sensors, holographic sensors, ratiometric pH-dot sensors,
    and camera sensors; (iii) conductimetric; (iv) potentiometric; and acoustic (v),
    such as cantilever and microcantilever sensors and magnetoelastic pH sensors [50].
    In situ observations of soil water and nutrients content can provide more accurate
    data than remote sensing (satellite data acquisition), and these can even serve
    as reference calibrations and improve the accuracy of estimation of soil moisture
    using satellite data [51,52]. Although the data acquired by in situ sensors is
    richer and more accurate than satellite data (satellite radiometers responds to
    soil moisture only within the top 1 to 2 cm of the soil; image resolution measured
    in meters did not give comprehensive information for small size, hilly landform,
    and diverse plant culture), it is not easy to deploy a dense network of in situ
    stations for real-time ground-based soil water and nutrients content measurements.
    Since in situ sensors are used for point-based measurements and it is not viable
    to flood the field with sensor nodes, it is necessary to select strategic locations
    to place the sensors. To determine these locations, one approach would be to apply
    standard soil testing procedures to the soil, i.e., split the field into areas
    of up to 20 acres and collect from 15 to 20 cores of soil from each in a zigzag
    or random fashion, and select the locations from between the samples that present
    higher variability [53]. However, as this process is very costly and time-consuming,
    data from proximal or remote sensing that offer on-demand, large-scale data on
    the crop could be integrated in the information system for optimal positioning
    of in situ sensors or eventually replace these sensors [54]. Remote sensing methods
    are based on satellite technology and have application in many areas of soil monitoring.
    They are useful for regional and global measurements and are based on emitted
    or reflected electromagnetic (EM) energy from the soil surface. These methods
    can be roughly classified in two categories: (i) active methods where the reflected
    or scattered energy is recorded in response to incident energy and (ii) passive
    methods where sensors (such as radiometers) are used to detect the radiation emitted
    by the target, also known as the brightness or the brightness temperature of the
    target [55]. Techniques have been developed for observing soil moisture content
    (SMC) remotely in the following EM spectral ranges: visible, infrared/thermal,
    and microwave, where the soil moisture is determined based on the intensity variations
    of the radiation due to parameters such as dielectric constant, temperature, and
    thermal properties [56]. Secondary parameters, such as vegetation cover, surface
    roughness, and atmospheric effects, also play an important role in remote sensing
    successful soil moisture content retrieval [56]. Vast amounts of remote soil sensing
    data were obtained from various satellites [56,57]. Normalized Difference Vegetation
    Index (NDVI) images available from NASA’s Land [58,59], Atmosphere Near real-time
    Capability for EOS (LANCE) and data from Group on Earth Observation Global Agricultural
    Monitoring (GEOGLAM) [60] provide important data on green vegetation density,
    mapping the regions where plants/crops are thriving and where they are under stress
    (i.e., due to lack of water). Aside from soil moisture, satellite imagery has
    been used in determining other soil parameters, such as carbon content, salinity,
    pH, temperature [56,61,62], detection of pests, diseases, and pollinators [63,64],
    prediction of crop yield and natural disasters, and phenotyping of crops [65,66].
    Although it may seem appealing to use these methods due to the scale of the measurements,
    they have course spatial and temporal resolution and are restricted to shallow
    penetration. Additionally, complex analysis techniques are required to extract
    value from the collected data. Moreover, due to its coarse spatial resolution,
    it is not fit for use in small horticultural land (e.g., park, botanical garden,
    small vegetable farms, etc.) as, usually, they are not large spaces and each species
    occupies a different area. Proximity sensing of soil nutrient is characterized
    by not being in direct contact with the soil or crop it is monitoring and being
    in the proximity of it. These methods can be further sorted into stationary and
    mobile. Stationary methods stay in the same place while collecting data (e.g.,
    weather station), while mobile methods are attached to a moving agricultural vehicle
    or unmanned aerial vehicle (UAV) while collecting data. These methods can be more
    flexible and convenient than in situ sensors, while offering high spatial and
    temporal resolution, and are not restricted to shallow penetration like remote
    sensing methods. In addition, proximity methods can be used in areas that are
    not covered by satellites. Therefore, proximal sensing methods are a promising
    solution for the future. In several research projects that developed electronic
    systems and software technologies for optimal irrigation, data on soil water content
    were combined with climatic data. Climatic/weather data are used in the calculation
    of the evapotranspiration of the crop. Evapotranspiration can be estimated using
    the eddy covariance system (CE) [67], Bowen Station [68], lysimeter [69], scintillometer
    [70], and digital image processing methods, such as leaf area index (LAI) [71,72],
    percentage of plant cover (PGC) [73], and plant effective diameter (PED) [74,75,76].
    Weather stations are in fixed locations and offer very good results over large
    areas. For a horticultural farm, the measurement stations should be positioned
    on strategic locations to give relevant information. Proximity mobile sensing
    was implemented by the attachment of sensors to UAVs or agricultural vehicles,
    such as tractors [77] or minirobot [35]. UAVs have the advantage of being able
    to access places that agricultural vehicles cannot reach, such as swamps, and
    being able to rapidly cover large swaps of land. Nevertheless, the use of UAV
    is regulated, and restrictions differ from country to country [78]. Most governments
    require that UAVs must be operated by certified operators [79,80]; this has a
    significant impact on the frequency, quality, and type of research that can be
    performed. Certain rules may apply only to a specific aircraft type, while others
    may apply to all aircraft operating in specified applications. These regulations
    may be limiting acceptance and adoption level of farmers and research applications.
    There are several types of UAVs, which can be classified according to their design,
    degree of autonomy, size and weight, and power source [80]. UAVs can also be classified
    into fixed-wing, rotary-wing, and hybrids, such as vertical take-off and landing
    (VTOL) [81]. UAVs may have either fixed or rotary wings based on the aerodynamic
    features, which determines their flight characteristics and other parameters [82].
    Rotary-wing UAVs are used more than fixed-wing drones. Although, fixed-wing drones
    cover more ground (battery lasts longer) and faster than a rotary drone, a rotary-wing
    drone has more degrees of freedom (it can fly in all directions) and is easier
    to deploy as it can perform vertical take-off; for this reason, it is more popular
    than fixed-wing [78]. Moreover, hybrids between fixed- and rotary-wing are emerging,
    such as the case of vertical take-off landing (VTOL) UAV. They combine the extended
    range, payload capacity, and speed of fixed-wing UAVs with the capability of vertical
    take-off of the rotary-wing UAV [83]. VTOL UAVs are a relatively new research
    topic and, for this reason, there are no solutions that use this type of UAV in
    measurements. Digital image processing methods are used in combination with UAVs,
    which analyze images from RGB cameras, multispectral cameras, hyperspectral cameras,
    or from light detection and ranging (LiDAR) systems [84]. Most applications use
    RGB and multispectral cameras, and very little research uses hyperspectral or
    LiDAR cameras for their higher cost. However, the most predominantly used are
    RGB cameras due to their low cost, low weight, ease of use, and the simplicity
    of the image processing required. On the other hand, since images from these cameras
    are limited to the visible spectrum, they lack the resolution for phenotypical
    analysis or diagnosis of diseases, although there are some applications of RGB
    cameras in disease detection [85,86,87]. As such, RGB cameras are especially suited
    for the determination of canopy height and lodging, and for extrapolating the
    Digital Terrain Model (DTM) and Digital Surface Model (DSM) for the surveyed region.
    Multispectral cameras are sensitive to more radiation bands than RGB cameras,
    typically four or six, including the visible spectrum, and thus provide images
    with more resolution and have higher cost. Multispectral cameras can be broadband
    or narrowband, according to their bandwidth, with broadband multispectral cameras
    having more spectral range than narrowband [88]. Even so, for their added resolution,
    they are suited to applications related to crop phenotyping [89], detection of
    crop diseases [90,91,92,93], drought and stress detection, determination of growth
    vigor, estimation of nutrients, and yield prediction [94,95]. Hyperspectral cameras
    collect data in the form of a succession of 5 to 10 nm bands, resulting in a higher
    level of spectral and radiometric accuracy than multispectral cameras. These are
    suitable for phenotyping, pest and weed detection, disease detection, and estimation
    of nutrient status [96,97,98]. Another sensor that has been used in combination
    with UAVs is thermographic cameras. Thermographic cameras are used to assess the
    relative surface temperature of objects, such as the soil and water vapor. Thermal
    images from UAV have better spatial and temporal resolution than satellite images
    and, for this reason, are becoming a valuable source of information for agronomic
    applications [99]. Thermal imagery has been used in plant growth and vegetation
    water stress studies [100,101,102]. Although UAVs are very versatile and provide
    a high resolution in measurements, they are not suitable for some horticultural
    land (e.g., botanical garden and park) that cultivate many plant species with
    different heights, which makes it difficult to define a flight distance from the
    soil, which would fit the monitoring of all species. In addition, many horticultural
    entities are the home to rare bird species, which could damage the UAV and be
    harmed by the UAV, or the UAV could frighten the birds, which is not ideal, as
    they are an important part of the ecosystem. 4. IoT-Based System for Soil Nutrient
    Assessment Considering literature research data on soil nutrient sensing, we developed
    an information system that enables in situ measurements of soil moisture, pH,
    and N, P, and K. We developed and IoT-based system that uses a wireless sensor
    network and data could be visualized on a mobile application. Aside for being
    able to measure moisture, pH, and N, P, and K concentration simultaneously, the
    sensors can also be used to measure soil conditions at multiple depths, which
    is useful for plants with deep roots. Additionally, air parameter measurement
    channels are considered, including relative humidity and temperature, to extract
    correlations between soil and air conditions and the plant stress level (e.g.,
    water stress and macronutrient stress). The main goal of our research work is
    the development of an information system that may detect plant stress that may
    improve decision making on irrigation and fertilization in horticulture. The concept
    of stress in plants has evolved in the past decades. Stress of plant means “any
    unfavorable condition or substance that affects or blocs a plant’s metabolism,
    growth, or development” [103]. We focus our work on measuring abiotic stressors
    as heat, drought, flooding, plant inadequate pH, and soil nutrients. The environmental
    factors, when acting as a stressor for a plant, can cause cell disturbances. The
    plant response to different unfavorable conditions is related to an intricate
    network that combines cellular physiological and morphological defenses [104].
    Different sensing devices were described as useful to characterize the stress
    in plants by quantifying stress conditions and stress-induced damage in plants.
    We present here the first prototype that we developed, having as the main objective
    assessment of soil nutrient and air conditions that may be used for future development
    of an information system that would include a decision-making algorithm that may
    consider stress of plant, the Justus von Liebig law of minimum, and the Mitscherlich
    law of diminishing yield increment, when water and fertilizers will be administered.
    The developed prototype for soil nutrients assessment was tested on Lisbon Tropical
    Botanical Garden, a site with many features that may be found in other horticultural
    places (i.e., different slope of terrain; different plant species cultivated in
    small land size; different soil chemical and physical properties required by different
    plant; and complex landscape). The developed system includes a set of smart sensing
    nodes that contain soil and air sensing units. The smart sensing nodes perform
    data acquisition, primary data processing, and data communication using Wi-Fi/LoRa
    communication protocols. The general architecture of the implemented distributed
    smart system is presented in Figure 3. Figure 3. IoT ecosystem architecture for
    plant stress assessment for Tropical Botanical Garden of Lisbon. The developed
    IoT system is characterized by heterogeneous communication protocols; however,
    for the current application, Wi-Fi was the chosen communication protocol, as the
    garden provides a set of hot spots which offer good Internet Wi-Fi coverage to
    mobile phones. Following, a general description of the system is presented, including
    the smart sensing nodes that connect to a Cloud Server used for storage and for
    data analysis and a mobile app for geographic visualization of data. 4.1. Smart
    Sensor Nodes Smart sensor nodes have the responsibility in the system to aggregate
    data from multiple sensing channels and to send them to a processing unit, in
    this case, the Cloud Server. They comprise an ESP32 Wi-Fi/LoRa board, which is
    connected to a multielectrode sensor based on the TDR working principle, for simultaneous
    measurement of temperature, pH, and soil moisture content, conductivity, and N,
    P, and K content. The measured soil parameters and the metrological characteristics
    of the multichannel sensor (JXCT [72]) are presented in Table 4. Table 4. Time
    delay reflectometry integrated soil sensor characteristics. The seven-parameter
    sensor is characterized by RS485 communication protocol that provides a duplex
    communication in which multiple devices on the same bus can communicate in both
    directions. To connect the JXCT seven-parameter sensor to the embedded processing
    unit expressed by ESP32, an RS485 to UART converter based on MAX485 chip was used.
    Some characteristics of the used chip are a low-power and slew-rate-limited transceiver
    that works at a single +5 V power supply and the rated current is 300 μA. In the
    present case, the UART port was configured to 4800 bps. MAX485 transceiver draws
    supply current of between 120 μA and 500 μA under the unloaded or fully loaded
    conditions when the driver is disabled. Considering the JXCT sensor power supply
    of 12 V, a step-up voltage regulator 5 V to 12 V was considered as part of the
    smart sensor module that is connected to a 10 Ah power 5 V power bank. The power
    bank is charged using a portable solar panel associated to the smart sensor node.
    The 27.5 cm × 19 cm solar panel has four cells, which provide 13.2 W input power.
    The smart sensor module block diagram is presented in Figure 4, while the first
    implemented prototype is presented in Figure 5. Figure 4. Soil smart sensing node
    block diagram. Figure 5. Smart sensor node implemented prototype. In Figure 5,
    the ESP32 can be observed with a display OLED 0.96″ that is exclusively used in
    debugging mode, considering that the smart sensing module delivers the data coming
    from the multichannel soil characteristics monitoring (JXCT sensor). Additionally,
    through the one-wire communication port, the ESP32 receives the information regarding
    the air quality conditions based on the usage of DHT22. Air relative humidity
    and temperature are measured and delivered to the ESP32, where the information
    is extracted using DHT MicroPython library. The soil and air data are delivered,
    together with the timestamp of the measurement and localization of the smart sensor
    node, via the Wi-Fi network, to the Cloud Server, which is a virtual private server
    (VPS) hosted by Digital Ocean. Having in consideration the fact that the autonomy
    of the smart sensor unit is very important, configuration information, such as
    localization and Wi-Fi credentials, can be provided from the user’s phone via
    Bluetooth at the installation stage of the unit. 4.2. Embedded Software The ESP32
    embedded software was developed in MicroPython using the Thonny IDE. Several libraries
    related to communication with UART communication with JXCT integrated soil sensor
    were used as an important part of developed firmware. Additionally, the DHT library
    was used to extract the values of air relative humidity and temperature on the
    considered sites. Regarding the data communication for this work the Wi-Fi communication
    protocol was used. Thus, the MicroPython Networking library was used and the WLAN
    functions. The general flowchart of the main embedded software developed in MicroPython
    is presented in Figure 6. Figure 6. Flowchart of microcontroller embedded software.
    Once the controller boots, it first checks if it has any cached configuration,
    which needs to be provided by the user when installing the sensor. In this configuration
    stage, the Wi-Fi credentials, the identifier assigned to the micro-controller,
    and the identifiers and types of the sensors and measurement channels from the
    cloud and measurement intervals, as well as a web token for secure communication
    with the server, are passed to the microcontroller. Next, the microcontroller,
    connects to the Wi-Fi using the passed credentials in the configuration stage
    and updates its clock using Network Time Protocol (NTP). Finally, the microcontroller
    starts reading data from the sensors attached to it and sending it to the cloud
    for centralized storage. It is very simple to extend the responsibilities of a
    sensing node, i.e., what parameters it should measure, as the implemented software
    is made to be modular and scalable. The microcontroller implementation provides
    to the controller all it needs to interact with various types of sensors, namely,
    DHT, capacitive, resistive, and TDR. Hence, if we want to add another sensor to
    the microcontroller, we need only to plug it in to the microcontroller board and
    reboot the controller to force it to update its configuration. 4.3. Mobile App
    The mobile app was implemented using the Kotlin Multiplatform Framework (KMM),
    a framework for building cross-platform applications using the Kotlin language,
    and serves two purposes, to configure sense nodes over low-power Bluetooth and
    to visualize system data. As such, the app has two focus areas: interaction with
    sensors and data analysis. As illustrated in Figure 6, after booting, the sensing
    node tries to find a configuration if it has been flashed; otherwise, it waits
    for the user to provide configuration. To provide a configuration to the controller,
    the user can create one using the mobile application and send it to the node using
    a low-power Bluetooth communication. A configuration contains identifiers for
    controller, sensor, and measurement channels, the current location, and WIFI credentials,
    if necessary, as can be seen in Figure 7. Figure 7. Configuration screens: (a)
    Wi-Fi configuration screen; (b) sensing node configuration screen. The data visualization
    focus area provides data on the latest read quantities and ratio of nutrients
    in the soil and data on soil moisture, temperature, pH, and salinity. The design
    of the app was inspired by the app of the Tropical Botanical Garden of Lisbon
    [105]. It uses a styled map of the garden powered by Mapbox, a cheaper alternative
    to Google maps, which combines data from several geographic databases, such as
    OpenStreetMaps [106]. The map was developed considering the inaccuracy of data
    from Google Map on identifying in that small area the points of interest. On this
    map, the user can select a specific measurement site to obtain data on soil and
    air conditions at that specific site or obtain general information on environmental
    conditions around the garden, as can be seen in Figure 8. Figure 8. Agroemesh
    and Controller screens: (a) Agroemesh Map screen; (b) Soil status screen for selected
    controller localization. Aside from giving information on the specimens, the user
    can also obtain directions towards a certain specimen. These features can be helpful
    for the staff of the garden to easily locate the species and can further include
    the visitors into the management of plants in the garden. 4.4. Experimental Protocol
    Laboratory tests were performed to test sensibility of the sensors. A volume of
    1000 mL soil was weighted and, after this, was put in the oven for 24 h. After
    cooling in an open area at room temperature, the NPK sensor was put in the dried
    sample. Values of temperature and pH were obtained. The other parameters were
    0. After this, 10 mL of water was added incrementally to the soil. Data on soil
    N, P, and K were obtained starting from 5% soil moisture. The experiment was repeated
    3 times. Field tests were performed in Lisbon Botanical Garden. Sensor nodes were
    deployed at 0.3 m from the trunk of 12 trees of the Tropical Botanic Garden of
    Lisbon, selected from the 20 available on the tour “Trees You Must See” provided
    by the Mobile Garden App reported on [105]. Sensor nodes were positioned at 0.3
    m from the trunk of each tree, and measurements of soil moisture, temperature,
    pH, electrical conductivity, and concentrations of N, P, and K, as well as air
    humidity and temperature, were collected from each site. It should be highlighted
    that measurements were collected under two conditions, before and after precipitation,
    with the objective of observing what change the wetness of the soil induced by
    the rain has on the measured values by the soil sensor. In Table 5, the species
    whose soil parameters were monitored are listed. Table 5. Measurement sites and
    species. Furthermore, the selection was based on the location, more specifically,
    the proximity to water bodies and the inclination of the location. The garden
    covers an area that is slightly inclined; its northmost point is located at 40
    m above sea level, while its southmost point is located at only 15 m above sea
    level. Hence, it was assumed that there would be differences in moisture and nutrient
    levels at different heights. The garden has also several lakes and brooks, for
    which, due to evaporation, it was assumed that the moisture would be higher near
    these bodies of water. In addition to air humidity conditions, plants were selected
    in relation to their proximity to bodies of water to determine whether this had
    any influence on the moisture of the soil in the region of these species. An additional
    criterion was the origin of the species, as they come from different continents
    with different weather conditions; some come from dry regions, while others are
    typically found in rainforests. The locations of the sites can be viewed in the
    Tropical Botanical Garden map (Figure 9) from the Garden’s mobile app. Figure
    9. Map measurement sites where the numbers from 1 to 11 represents the labels
    for the measurement sites. 5. Results Analyzing the measurements of air relative
    humidity (RH) (Figure 10), it can be observed that higher values were measured
    near the Beaucarnea recurvata (site 1), which is expected, as it is located near
    the lake, near the Dracaena draco (site 5), and Bauhinia variegata (site 10).
    On the other hand, Afrocarpus mannii (site 6) and Phytolacca dioica (site 11)
    registered the lower humidity values, as they are farther away from the lake.
    Figure 10. Air relative humidity at the measurement sites. Concerning the soil
    moisture measurement results presented in Figure 11, it can be observed that the
    highest levels of moisture were verified for Dracaena draco (site 5) and Phytolacca
    dioica (site 11). Brahea edulis (site 8), Encephalartos lebomboensis (site 3),
    and Metrosideros excelsa (site 12) have registered the lowest values. It can also
    be observed that, in most cases, the values registered after the rain are higher
    than the values before the rain, with significant growth being registered for
    sites 1, 11, and 12. In addition, site 5 is the only one where the moisture before
    precipitation is higher than after. Figure 11. Average soil moisture per measurement
    site before and after rain. Regarding soil electric conductivity (Figure 12),
    an increase can be observed on all sites, which is coherent with the increase
    in soil moisture. We can observe a larger increase for Phytolacca Dioica (site
    11) and Metrosideros excelsa (site 12), which is also coherent with the measurement
    results obtained for soil moisture. Moreover, the conductivity is lower before
    and after the rain for site 5, which is consistent with moisture data. Figure
    12. Average soil conductivity per measurement site before and after rain. Soil
    pH affects various chemical and biological processes. The ideal pH is close to
    neutral, as most nutrients are available within the 6.0 to 7.5 range of pH, which
    is very important for plant growth [76,107]. The very acidic soils generally are
    the result of overapplication of fertilizer and can lead to a decrease in bacteriological
    activity [108]. The soil microbiome (e.g., cyanobacteria, rhizobacteria, and mycorrhizal
    fungus) is an important producer of nutrients and organic nutrient regeneration
    in the soil [109]. However, the preference of some species of plants on slightly
    acidic soil should be considered. In many measurement sites after rain (Figure
    13), the soil pH increases. This condition is favorable for most of the plants,
    as their metabolism and growth are optimal at a neutral value of pH. Figure 13.
    Average pH per measurement site before and after rain. Based on the analysis of
    the measurements obtained for pH before and after the rain (Figure 13), we can
    observe for five sites there was a slight decrease in pH after the rain. It should
    be highlighted that for site 5, for which a decrease in soil moisture was registered,
    an increase in soil pH was observed. Therefore, in those sites, the influence
    of other variables than quantity of fertilizers should be considered. Overall,
    values for pH indicate the soil in the garden is relatively acidic, being possibly
    associated with higher quantity of fertilizers or soil organic matter. In Figure
    14, the average air temperatures per measurement sites are displayed. Overall
    values varied from 21 °C to 30 °C. The highest value was observed for site 7,
    while the lowest value was observed for site 1. The spatial distribution of plants
    in the garden has great importance when interpreting data on soil moisture content
    and availability of the nutrients for the plants. Figure 14. Average air temperature
    per measurement site. When compared with air temperature, soil temperatures (Figure
    15) show less variation and a clear trend can be observed towards 20 °C, which
    remains stable before and after the rain. In addition, in most cases, there was
    a slight temperature drop after rain. The highest temperature values were observed
    for sites 1 and 2 before the rain, and sites 7 and 8 after the rain. Figure 15.
    Average soil temperatures per measurement site before and after rain. Nutrient
    concentrations of N, P, and K are proportional, and this can be observed in the
    graphs of Figure 16. It can be observed that K is found in larger quantities than
    P and N, and the concentration of N, P, and K has increased significantly after
    rain in most cases, especially for site 11 (Phytolacca dioica) and site 12 (Metrosideros
    excelsa). Information on soil texture and soil organic matter should be considered
    in the interpretation of the changes in NPK sensor data after rain, as those variables
    are associated with the distribution of macronutrients with increase in soil moisture.
    The increase in the measured concentrations for N, P, and K is coherent with the
    increase in electric conductivity. It could be observed that, for most cases,
    there was an increase after the rain and, only in sites 5 and 8, the value of
    acquired data on soil N, P, and K decreases. The same pattern could be observed
    for electric conductivity. Figure 16. Average soil N, P, and K data before and
    after rain: (a) N data; (b) P data; and (c) K data. The need for data on other
    soil parameters (e.g., soil texture, foliage cover, slope of landscape, and drainage)
    is underlined by data from the correlation matrix of measured soil parameters
    before and after precipitation (Figure 17 and Figure 18). If, before precipitation,
    there was a strong correlation of data on soil moisture, electric conductivity,
    and concentrations of N, P, and K, after precipitation, this correlation slightly
    weakens. Figure 17. Correlational matrix for soil parameters from values collected
    before precipitation (where the cell colors correspond to the scale presented
    on the right side where negative values correspond to dark green and positive
    values to light green). Figure 18. Correlational matrix for soil parameters from
    values collected after precipitation (where the cell colors correspond to the
    scale presented on the right side where negative values correspond to dark green
    and positive values to light green). 6. Discussion Information on research realized
    for developing an IoT-based information system for soil nutrients characterization
    for small-sized landscape with potential application on horticulture is presented.
    The developed system may help in assessment of soil nutrient changes for better
    management of irrigation and fertilizer administration. The system has capacity
    to acquire data on soil N, P, and K content, soil moisture, temperature, conductivity,
    and pH, as well as data on air temperature and humidity. IoT protocols were considered
    for device connectivity and services. The developed system includes a mobile app
    that enables visualization of sites/datapoints where data were collected, as well
    as graphical visualization of changes in the acquired data. The system prototype
    enables assessment of soil nutrient changes, as well as changes in soil water
    content (moisture data) and changes in soil pH. For comprehensive interpretation
    of data from NPK sensors and detection of potential errors in sensor data acquisition,
    the system also includes data on conductivity, soil moisture, temperature, and
    pH, as well as air temperature and humidity. Tests were realized in the laboratory
    and in Lisbon Botanical Garden. The majority of the requirements for an IoT-based
    information system that may be used in this garden for soil nutrients assessment
    are similar with those for a horticulture farm that may include pomiculture, olericulture,
    or floriculture (e.g., digital maps with better spatial resolution than on Google
    map; low cost but reliable, portable sensor for soil nutrient quantification;
    sensing data on environmental factors that may support interpretation of soil
    nutrient sensor; affordable connectivity of devices; easy to use; and support
    for easy maintenance and upgrade). The system demonstrated good performance in
    the field experiment, as in places located near bodies of water, such as lakes
    and brooks, higher values of air humidity and an overall increase in moisture
    and conductivity after precipitation were registered. An increase in air humidity
    at the measurement sites was also identified. As the soil sensor from the sensing
    nodes is based on time delay reflectometry, it is affected by soil dielectric
    constant and an increase in the water content in the soil resulted in an increase
    in the values for all channels that use this principle besides moisture, namely
    electric conductivity and concentration of macronutrients. It was also observed
    that, although surface air temperature varied between 21 and 30 ºC, soil temperature
    variation was less pronounced and remained stable throughout the measurement sites,
    although a slight decrease was observed in most places after precipitation events.
    For comprehensive interpretation of a slight increase in soil temperature in sites
    7 and 8, data on soil texture and soil foliage should be included, as, in some
    places, enhanced activity of microbiome after rain increases soil temperature.
    Furthermore, the soil at the measurement sites showed to be slightly acidic. An
    inverse correlation was observed between soil pH and moisture. The collected data
    underscore the necessity of including in soil nutrient assessment, using the developed
    information system, the data on soil texture, with special detail on the superficial
    layer (i.e., foliage cover), as this layer may influence soil permeability and
    activity of the microbiome. The data on texture may be included by a user of a
    mobile app after qualitative measurement by visual observation and hand test.
    For larger areas, public data on soil texture may be used for assessing soil texture
    in a mobile app. For instance, Land Use Cover Area frame Surveys (LUCAS) topsoil
    database may be used to extract data on soil texture for an area. The LUCAS database
    is a European database that was made available in 2016 that includes datasets
    on soil physical properties (silt, clay, sand, and coarse fragments) for the European
    Union, together with maps of derived products (bulk density and available water
    capacity) [110]. Our research, as well as data from the literature, indicates
    that exact determination of different soil nutrients’ availability for plants
    requires information on many environmental variables. Optimal information on flow
    of nutrients in soil may be obtained only by considering the dynamic, stochastic,
    complex process of nutrient transformation in soil. Future works are necessary
    to improve accuracy of estimation of soil N, P, and K by using multi-channel sensing.
    Moreover, sensing devices that enable in situ sensing of other macronutrients
    (e.g., calcium) or micronutrients (e.g., iron) should be integrated in an IoT-based
    information system. In addition to their importance for plant physiology, these
    elements may influence availability of N or K for plant roots and, as such, greatly
    influence soil fertility and crop productivity. Future developments will include
    the integration of soil texture for fertilizer administration and a customizable
    application for management of irrigation and fertilizer administration. Maps will
    also be conceived for the representation of physical properties of soil, the slope,
    and drainage pattern of landscape considering the topography of some horticulture
    farms. The affordability of the developed solution should be considered, as well
    as the adoptability. Farmers’ knowledge and perception on new technology, and
    incentive policy may have an important role on adoption of an information system
    for soil nutrient assessment. 7. Conclusions The quality and quantity of plant
    growth depends mainly on the availability of soil nutrients for the plant. Traditional
    laboratory methods provide accurate measurements of soil nutrients but are expensive,
    complex, and time-consuming. Advances in information and communication technology
    enabled the development of electronic devices that may perform faster measurements
    of various soil parameters. We present an overview of new techniques and technologies
    for soil fertility assessment. We described the challenges and work that was done
    for development of an information system based on IoT for soil nutrient estimation.
    A wireless smart sensor architecture is proposed that is characterized by multimodal
    data acquisition capabilities. The system includes data storage and data display
    supported by cloud and mobile computing. A mobile application allows configuration
    of the system, visualization of garden map and places of stations for in situ
    monitoring of the soil and air parameters, and visualization of graphical data.
    Soil characteristics, such as moisture, pH, electrical conductivity, and temperature,
    are measured together with the concentrations of macronutrients using a multi-channel
    time delay reflectometry sensor. The soil data are integrated with data on air
    temperature and relative humidity. The developed system was tested by performing
    measurements at different sites and different periods in the Tropical Botanical
    Garden of Lisbon considering a variety of soils and plants in a relatively reduced
    area. The analyzed experimental data underline the capacity of the system to provide
    relevant data on soil parameter changes. The need for multi-channel acquisition
    of environmental data for better interpretation of data on NPK sensor was underscored
    by various results on system tests. Future developments of the system may include
    data on soil texture and data on fertilizer administration. The system may provide
    important data on flow of soil nutrients in horticultural farms. Information provided
    by the system may contribute to better management of irrigation and fertilizer
    administration in horticulture farms. Author Contributions Conceptualization,
    S.P. and F.C.; methodology, S.P. and O.P.; software, S.P.; validation, S.P. and
    O.P.; formal analysis, S.P. and O.P.; investigation, S.P.; resources, O.P.; data
    curation, S.P. and O.P; writing—original draft preparation, S.P.; writing—review
    and editing, P.S., V.V., O.P. and F.C.; visualization, S.P. and F.C.; supervision,
    P.S., V.V. and F.C. All authors have read and agreed to the published version
    of the manuscript. Funding This research was supported by Instituto de Telecomunicacões
    and the Project Smart Farm 4.0 “Projeto mobilizador nº 46078 POCI-01-0247-FEDER-046078”.
    Institutional Review Board Statement Not applicable. Informed Consent Statement
    Not applicable. Data Availability Statement Not applicable. Conflicts of Interest
    The authors declare no conflict of interest. References Farm to Fork Strategy.
    Available online: https://food.ec.europa.eu/horizontal-topics/farm-fork-strategy_en
    (accessed on 17 December 2022). Liliane, T.N.; Charles, M.S.; Liliane, T.N.; Charles,
    M.S. Factors Affecting Yield of Crops; IntechOpen: London, UK, 2020; ISBN 978-1-83881-223-2.
    [Google Scholar] de Oliveira, R.A.; Ramos, M.M.; de Aquino, L.A. Irrigation Management.
    Sugarcane Agric. Prod. Bioenergy Ethanol 2015, 161–183. [Google Scholar] [CrossRef]
    Horticulture | Definition, Types, Techniques, & Uses | Britannica. Available online:
    https://www.britannica.com/science/horticulture (accessed on 17 December 2022).
    Boston, 677 Huntington Avenue; Ma 02115 +1495-1000 Healthy Eating Plate. Available
    online: https://www.hsph.harvard.edu/nutritionsource/healthy-eating-plate/ (accessed
    on 17 December 2022). Melo, A.; Pinto, E.; Aguiar, A.; Mansilha, C.; Pinho, O.;
    Ferreira, I.M.P.L.V.O. Impact of Intensive Horticulture Practices on Groundwater
    Content of Nitrates, Sodium, Potassium, and Pesticides. Environ. Monit. Assess.
    2012, 184, 4539–4551. [Google Scholar] [CrossRef] [PubMed] [Green Version] Breś,
    W.; Politycka, B.; Breś, W.; Politycka, B. Contamination of Soils and Substrates
    in Horticulture; IntechOpen: London, UK, 2016; ISBN 978-953-51-2816-8. [Google
    Scholar] Sanyal, S.; Majumdar, K.; Singh, V. K Nutrient Management in Indian Agriculture
    with Special Reference to Nutrient Mining—A Relook. J. Indian Soc. Soil Sci. 2014,
    62, 307–325. [Google Scholar] Ghutke, P.; Agrawal, R.; Ghutke, P.; Agrawal, R.
    An IoT-Based Immersive Approach to Sustainable Farming; IntechOpen: London, UK,
    2022; ISBN 978-1-80356-210-0. [Google Scholar] Lu, Y.; Liu, M.; Li, C.; Liu, X.;
    Cao, C.; Li, X.; Kan, Z. Precision Fertilization and Irrigation: Progress and
    Applications. AgriEngineering 2022, 4, 626–655. [Google Scholar] [CrossRef] Fernández,
    J.; Chartzoulakis, K.; Grant, O.; Lemeur, R.; Steppe, K.; Marsal, J.; Xiloyannis,
    C. Water Shortage and Efficient Water Use in Horticulture. Acta Hortic. 2009,
    817, 363–366. [Google Scholar] [CrossRef] Country Guidelines and Technical Specifications
    for Global Soil Nutrient and Nutrient Budget Maps; FAO: Rome, Italy, 2022; ISBN
    978-92-5-136795-7. Liebig’s Law of Minimums—Earthwise Agriculture. Available online:
    https://earthwiseagriculture.net/grower-s-toolbox/law-of-minimums (accessed on
    17 December 2022). Dalal, R.C.; Rao, A.S. Fertility: Evaluation Systems. In Encyclopedia
    of Soil Science (Rattan Lal); CRC Press: Boca Raton, FL, USA, 2017; pp. 890–893.
    [Google Scholar] Huber, D.; Römheld, V.; Weinmann, M. Relationship between Nutrition,
    Plant Diseases and Pests. In Marschner’s Mineral Nutrition of Higher Plants; Academic
    Press: Cambridge, MA, USA, 2012; pp. 283–298. ISBN 978-0-12-384905-2. [Google
    Scholar] Mandal, A.; Dhaliwal, S.S.; Mani, P.K.; Toor, A.S. Chapter 2—Onservation
    Agricultural Practices under Organic Farming. In Advances in Organic Farming;
    Meena, V.S., Meena, S.K., Rakshit, A., Stanley, J., Srinivasarao, C., Eds.; Woodhead
    Publishing: Sawston, UK, 2021; pp. 17–37. ISBN 978-0-12-822358-1. [Google Scholar]
    Tobacco—Nitrogen (N) Deficiency | NC State Extension Publications. Available online:
    https://content.ces.ncsu.edu/tobacco-nitrogen-deficiency (accessed on 17 December
    2022). Hou, S.; Wang, T.; Tang, J. Soil Types Extraction Based on MODIS Image.
    Procedia Environ. Sci. 2011, 10, 2207–2212. [Google Scholar] [CrossRef] [Green
    Version] Din, M.; Zheng, W.; Rashid, M.; Wang, S.; Shi, Z. Evaluating Hyperspectral
    Vegetation Indices for Leaf Area Index Estimation of Oryza Sativa L. at Diverse
    Phenological Stages. Front. Plant Sci. 2017, 8, 820. [Google Scholar] [CrossRef]
    [PubMed] [Green Version] Zhu, W.; Rezaei, E.E.; Nouri, H.; Yang, T.; Li, B.; Gong,
    H.; Lyu, Y.; Peng, J.; Sun, Z. Quick Detection of Field-Scale Soil Comprehensive
    Attributes via the Integration of UAV and Sentinel-2B Remote Sensing Data. Remote
    Sens. 2021, 13, 4716. [Google Scholar] [CrossRef] Soil Testing Methods (Penn State
    College of Agricultural Sciences). Available online: https://agsci.psu.edu/aasl/soil-testing/methods
    (accessed on 19 November 2022). Kashyap, B.; Kumar, R. Sensing Methodologies in
    Agriculture for Soil Moisture and Nutrient Monitoring. IEEE Access 2021, 9, 14095–14121.
    [Google Scholar] [CrossRef] Kirkby, E. Chapter 1—Introduction, Definition and
    Classification of Nutrients. In Marschner’s Mineral Nutrition of Higher Plants,
    3rd ed.; Marschner, P., Ed.; Academic Press: San Diego, CA, USA, 2012; pp. 3–5.
    ISBN 978-0-12-384905-2. [Google Scholar] Pilon-Smits, E.A.H.; Quinn, C.F.; Tapken,
    W.; Malagoli, M.; Schiavon, M. Physiological Functions of Beneficial Elements.
    Curr. Opin. Plant Biol. 2009, 12, 267–274. [Google Scholar] [CrossRef] Nwachuku,
    N.I. Effects of Temperature and Dinitrophenol on the Uptake of Potassium and Sodium
    Ions in Ricinus Communis Roots. Planta 1968, 83, 150–160. [Google Scholar] [CrossRef]
    [PubMed] Neumann, G.; Römheld, V. Chapter 14—Rhizosphere Chemistry in Relation
    to Plant Nutrition. In Marschner’s Mineral Nutrition of Higher Plants, 3rd ed.;
    Marschner, P., Ed.; Academic Press: San Diego, CA, USA, 2012; pp. 347–368. ISBN
    978-0-12-384905-2. [Google Scholar] Chapter 19: 2.5. Factors Affecting Ion Uptake
    by Roots—Marschner’s Mineral Nutrition of Higher Plants. Available online: https://zoboko.com/text/p500w62j/marschners-mineral-nutrition-of-higher-plants/19
    (accessed on 19 November 2022). Jimenez, A.F.; Cardenas, P.F.; Canales, A.; Jimenez,
    F.; Portacio, A. A Survey on Intelligent Agents and Multi-Agents for Irrigation
    Scheduling. Comput. Electron. Agric. 2020, 176, 105474. [Google Scholar] [CrossRef]
    Wahvu, E.P.; Asih, R.R.; Stania, U.R.A.; Novianti, A.E.; Firmaniar, E.; Sarosa,
    M.; Kusumawardani, M. Implementation of Automatic Watering System and Monitoring
    of Nutrients for Grape Cultivation. In Proceedings of the 2022 International Conference
    on Electrical and Information Technology (IEIT), Wuhan, China, 15–16 September
    2022; pp. 59–64. [Google Scholar] Chithra, V.; Jeyashri, R.; Deepashri, R.; Prathibanandhi,
    K.; Priya, C. Smart Sprinkler System Using Raspberry Pi. In Proceedings of the
    2022 International Conference on Communication, Computing and Internet of Things
    (IC3IoT), Chennai, India, 10–11 March 2022; pp. 1–5. [Google Scholar] Fan, W.;
    Kam, K.A.; Zhao, H.; Culligan, P.J.; Kymissis, I. An Optical Soil Sensor for NPK
    Nutrient Detection in Smart Cities. In Proceedings of the 2022 18th International
    Conference on Intelligent Environments (IE), Biarritz, France, 20–23 June 2022;
    pp. 1–4. [Google Scholar] Liang, J.; Zheng, Y.; Liu, Z. Nanowire-Based Cu Electrode
    as Electrochemical Sensor for Detection of Nitrate in Water. Sens. Actuators B
    Chem. 2016, 232, 336–344. [Google Scholar] [CrossRef] Regalado, R.G.; Dela Cruz,
    J.C. Soil PH and Nutrient (Nitrogen, Phosphorus and Potassium) Analyzer Using
    Colorimetry. In Proceedings of the 2016 IEEE Region 10 Conference (TENCON), Singapore,
    22–25 November 2016; pp. 2387–2391. [Google Scholar] Masrie, M.; Rosman, M.S.A.;
    Sam, R.; Janin, Z. Detection of Nitrogen, Phosphorus, and Potassium (NPK) Nutrients
    of Soil Using Optical Transducer. In Proceedings of the 2017 IEEE 4th International
    Conference on Smart Instrumentation, Measurement and Application (ICSIMA), Putrajaya,
    Malaysia, 28–30 November 2017; pp. 1–4. [Google Scholar] Ison, J.L.C.; Pedro,
    J.A.B.S.; Ramizares, J.Z.; Magwili, G.V.; Hortinela, C.C. Precision Agriculture
    Detecting NPK Level Using a Wireless Sensor Network with Mobile Sensor Nodes.
    In Proceedings of the 2021 IEEE 13th International Conference on Humanoid, Nanotechnology,
    Information Technology, Communication and Control, Environment, and Management
    (HNICEM), Manila, Philippines, 28–30 November 2021; pp. 1–6. [Google Scholar]
    Kachor, A.Y.; Ghodinde, K. Design of Microcontroller Based Agribot for Fertigation
    and Plantation. In Proceedings of the 2019 International Conference on Intelligent
    Computing and Control Systems (ICCS), Madurai, India, 15–17 May 2019; pp. 1215–1219.
    [Google Scholar] Kumar, A.K.; Deepika, D.; Ramakrishna, V. Design Of Smart Fertilizer
    Chain System From Factory To Farmer. In Proceedings of the 2022 19th International
    Conference on Electrical Engineering, Computing Science and Automatic Control
    (CCE), Mexico City, Mexico, 9–11 November 2022; pp. 1–5. [Google Scholar] Kukreja,
    G.S.; Bagyaveereswaran, V.; Menon, S.; Agrawal, G. IoT to Inculcate Smart Farming
    and Soil Nutrient Retention. In Proceedings of the 2021 International Conference
    on Innovative Computing, Intelligent Communication and Smart Electrical Systems
    (ICSES), Chennai, India, 24–25 September 2021; pp. 1–9. [Google Scholar] Khairnar,
    H.M.; Kulkarni, S.S. Automated Soil Macro-Nutrient Analyzer Using Embedded Systems.
    In Proceedings of the 2018 Fourth International Conference on Computing Communication
    Control and Automation (ICCUBEA), Pune, India, 16–18 August 2018; pp. 1–3. [Google
    Scholar] Fonacier, A.M.A.; Mañaol, R.C.C.; Parillon, R.C.C.; Villena, M.M.; Tan,
    G.P. Design of a Polychromatic Color Sensor—Based Voltage Comparator Circuit of
    Soil PH and Nutrient Management Device for Fertilizer Recommendation. In Proceedings
    of the 2019 IEEE 11th International Conference on Humanoid, Nanotechnology, Information
    Technology, Communication and Control, Environment, and Management (HNICEM), Laoag,
    Philippines, 29 November–1 December 2019; pp. 1–6. [Google Scholar] Patokar, A.M.;
    Gohokar, V.V. Automatic Investigation of Micronutrients and Fertilizer Dispense
    System Using Microcontroller. In Proceedings of the 2018 International Conference
    on Recent Innovations in Electrical, Electronics & Communication Engineering (ICRIEECE),
    Bhubaneshwar, India, 27–28 July 2018; pp. 1737–1739. [Google Scholar] Kulkarni,
    N.; Thakur, A.; Rajwal, T.; Tornekar, R.; Patil, S. Smart Soil Nutrients Analysis
    and Prediction of the Level of Nutrients Using a Bot. In Proceedings of the 2019
    3rd International Conference on Recent Developments in Control, Automation & Power
    Engineering (RDCAPE), Noida, India, 10–11 October 2019; pp. 663–668. [Google Scholar]
    Mahmud, I.; Nafi, N.A. An Approach of Cost-Effective Automatic Irrigation and
    Soil Testing System. In Proceedings of the 2020 Emerging Technology in Computing,
    Communication and Electronics (ETCCE), Dhaka, Bangladesh, 21–22 December 2020;
    pp. 1–5. [Google Scholar] Sowmya Sundari, L.K.; Rana, M.; Ahmed, S.T.; Anitha,
    K. Real-Time IoT Based Temperature and NPK Monitoring System Sugarcane-Crop Yield
    for Increasing. In Proceedings of the 2021 Innovations in Power and Advanced Computing
    Technologies (i-PACT), Kuala Lumpur, Malaysia, 27–29 November 2021; pp. 1–5. [Google
    Scholar] Manikandan, P.; Ramesh, G.; Sivakumar, P.; Kumar, J.J.; Krishna, R.L.;
    Dinesh, G. Soil Nutrients Monitoring and Analyzing System Using Internet of Things.
    In Proceedings of the 2022 2nd International Conference on Advance Computing and
    Innovative Technologies in Engineering (ICACITE), Greater Noida, India, 28–29
    April 2022; pp. 301–305. [Google Scholar] Nath, S.; Dey, A.; Das, P.; Mohapatra,
    D.; Sing, J.K.; Sarkar, S.K. Application of Soil Sensors for Maximizing Productivity
    Using IoT Framework. In Proceedings of the 2022 IEEE VLSI Device Circuit and System
    (VLSI DCS), Kolkata, India, 26–27 February 2022; pp. 220–224. [Google Scholar]
    Madhura, U.K.; Akshay, P.; Bhattad, A.J.; Nagaraja, G.S. Soil Quality Management
    Using Wireless Sensor Network. In Proceedings of the 2017 2nd International Conference
    on Computational Systems and Information Technology for Sustainable Solution (CSITSS),
    Bengaluru, India, 21–23 December 2017; pp. 1–5. [Google Scholar] Shivaji, K.V.;
    Galande, S.G. Real-Time Video Monitoring and Micro-Parameters Measurement Using
    Sensor Networks for Efficient Farming. In Proceedings of the International Conference
    for Convergence for Technology-2014, Pune, India, 6–8 April 2014; pp. 1–4. [Google
    Scholar] Shylaja, S.N.; Veena, M.B. Real-Time Monitoring of Soil Nutrient Analysis
    Using WSN. In Proceedings of the 2017 International Conference on Energy, Communication,
    Data Analytics and Soft Computing (ICECDS), Chennai, India, 1–2 August 2017; pp.
    3059–3062. [Google Scholar] Khan, M.I.; Mukherjee, K.; Shoukat, R.; Dong, H. A
    Review on PH Sensitive Materials for Sensors and Detection Methods. Microsyst.
    Technol. 2017, 23, 4391–4404. [Google Scholar] [CrossRef] Karthikeyan, L.; Chawla,
    I.; Mishra, A.K. A Review of Remote Sensing Applications in Agriculture for Food
    Security: Crop Growth and Yield, Irrigation, and Crop Losses. J. Hydrol. 2020,
    586, 124905. [Google Scholar] [CrossRef] Weiss, M.; Jacob, F.; Duveiller, G. Remote
    Sensing for Agricultural Applications: A Meta-Review. Remote Sens. Environ. 2020,
    236, 111402. [Google Scholar] [CrossRef] Dimkpa, C.; Bindraban, P.; McLean, J.E.;
    Gatere, L.; Singh, U.; Hellums, D. Methods for Rapid Testing of Plant and Soil
    Nutrients. In Sustainable Agriculture Reviews; Lichtfouse, E., Ed.; Springer International
    Publishing: Cham, Switzerland, 2017; Volume 25, pp. 1–43. [Google Scholar] Blatchford,
    M.L.; Mannaerts, C.M.; Zeng, Y.; Nouri, H.; Karimi, P. Status of Accuracy in Remotely
    Sensed and In-Situ Agricultural Water Productivity Estimates: A Review. Remote
    Sens. Environ. 2019, 234, 111413. [Google Scholar] [CrossRef] GISGeography Passive
    vs Active Sensors in Remote Sensing. Available online: https://gisgeography.com/passive-active-sensors-remote-sensing/
    (accessed on 17 December 2022). Babaeian, E.; Sadeghi, M.; Jones, S.B.; Montzka,
    C.; Vereecken, H.; Tuller, M. Ground, Proximal, and Satellite Remote Sensing of
    Soil Moisture. Rev. Geophys. 2019, 57, 530–616. [Google Scholar] [CrossRef] [Green
    Version] Burgin, M.S.; Colliander, A.; Njoku, E.G.; Chan, S.K.; Cabot, F.; Kerr,
    Y.H.; Bindlish, R.; Jackson, T.J.; Entekhabi, D.; Yueh, S.H. A Comparative Study
    of the SMAP Passive Soil Moisture Product With Existing Satellite-Based Soil Moisture
    Products. IEEE Trans. Geosci. Remote Sens. Publ. IEEE Geosci. Remote Sens. Soc.
    2017, 55, 2959–2971. [Google Scholar] [CrossRef] Nadal, J.L.V.; Franch, B.; Roger,
    J.C.; Skakun, S.; Vermote, E.; Justice, C. Spectrally Adjusted Surface Reflectance
    and Its Dependence with NDVI for Passive Optical Sensors. Int. Geosci. Remote
    Sens. Symp. IGARSS 2018, 2018, 6452–6455. [Google Scholar] [CrossRef] Bhatt, R.;
    Arora, S.; Chew, C.C. Improving Irrigation Water Productivity Using Tensiometers.
    J. Soil Water Conserv. 2016, 15, 120–124. [Google Scholar] GEOGLAM. Available
    online: https://www.earthobservations.org/geoglam.php (accessed on 17 December
    2022). Ghazali, M.F.; Wikantika, K.; Harto, A.B.; Kondoh, A. Generating Soil Salinity,
    Soil Moisture, Soil PH from Satellite Imagery and Its Analysis. Inf. Process.
    Agric. 2020, 7, 294–306. [Google Scholar] [CrossRef] Mukherjee, A.; Misra, S.;
    Raghuwanshi, N.S. A Survey of Unmanned Aerial Sensing Solutions in Precision Agriculture.
    J. Netw. Comput. Appl. 2019, 148, 102461. [Google Scholar] [CrossRef] Marques
    da Silva, J.R.; Damásio, C.V.; Sousa, A.M.O.; Bugalho, L.; Pessanha, L.; Quaresma,
    P. Agriculture Pest and Disease Risk Maps Considering MSG Satellite Data and Land
    Surface Temperature. Int. J. Appl. Earth Obs. Geoinform. 2015, 38, 40–50. [Google
    Scholar] [CrossRef] [Green Version] Adan, M.; Abdel-Rahman, E.M.; Gachoki, S.;
    Muriithi, B.W.; Lattorff, H.M.G.; Kerubo, V.; Landmann, T.; Mohamed, S.A.; Tonnang,
    H.E.Z.; Dubois, T. Use of Earth Observation Satellite Data to Guide the Implementation
    of Integrated Pest and Pollinator Management (IPPM) Technologies in an Avocado
    Production System. Remote Sens. Appl. Soc. Environ. 2021, 23, 100566. [Google
    Scholar] [CrossRef] Onojeghuo, A.O.; Blackburn, G.A.; Huang, J.; Kindred, D.;
    Huang, W. Applications of Satellite ‘Hyper-Sensing’ in Chinese Agriculture: Challenges
    and Opportunities. Int. J. Appl. Earth Obs. Geoinform. 2018, 64, 62–86. [Google
    Scholar] [CrossRef] [Green Version] Nakalembe, C.; Becker-Reshef, I.; Bonifacio,
    R.; Hu, G.; Humber, M.L.; Justice, C.J.; Keniston, J.; Mwangi, K.; Rembold, F.;
    Shukla, S.; et al. A Review of Satellite-Based Global Agricultural Monitoring
    Systems Available for Africa. Glob. Food Secur. 2021, 29, 100543. [Google Scholar]
    [CrossRef] Clulow, A.D.; Everson, C.S.; Mengistu, M.G.; Price, J.S.; Nickless,
    A.; Jewitt, G.P.W. Extending Periodic Eddy Covariance Latent Heat Fluxes through
    Tree Sap-Flow Measurements to Estimate Long-Term Total Evaporation in a Peat Swamp
    Forest. Hydrol. Earth Syst. Sci. 2015, 19, 2513–2534. [Google Scholar] [CrossRef]
    [Green Version] Guedes Bezerra, B.; Renato Cortez Bezerra, J.; Barbosa da Silva,
    B.; Antonio Costa dos Santos, C.; Algodão, E.; Oswaldo Cruz, R. Surface Energy
    Exchange and Evapotranspiration from Cotton Crop under Full Irrigation Conditions
    in the Rio Grande Do Norte State, Brazilian Semi-Arid. Bragantia 2015, 74, 120–128.
    [Google Scholar] [CrossRef] [Green Version] Jiménez-Carvajal, C.; Ruiz-Peñalver,
    L.; Vera-Repullo, J.A.; Jiménez-Buendía, M.; Antolino-Merino, A.; Molina-Martínez,
    J.M. Weighing Lysimetric System for the Determination of the Water Balance during
    Irrigation in Potted Plants. Agric. Water Manag. 2017, 183, 78–85. [Google Scholar]
    [CrossRef] Moorhead, J.E.; Marek, G.W.; Colaizzi, P.D.; Gowda, P.H.; Evett, S.R.;
    Brauer, D.K.; Marek, T.H.; Porter, D.O. Evaluation of Sensible Heat Flux and Evapotranspiration
    Estimates Using a Surface Layer Scintillometer and a Large Weighing Lysimeter.
    Sensors 2017, 17, 2350. [Google Scholar] [CrossRef] [PubMed] [Green Version] Sabzi,
    S.; Abbaspour-Gilandeh, Y.; Javadikia, H. Machine Vision System for the Automatic
    Segmentation of Plants under Different Lighting Conditions. Biosyst. Eng. 2017,
    161, 157–173. [Google Scholar] [CrossRef] Carrasco-Benavides, M.; Mora, M.; Maldonado,
    G.; Olguín-Cáceres, J.; von Bennewitz, E.; Ortega-Farías, S.; Gajardo, J.; Fuentes,
    S. New Zealand Journal of Crop and Horticultural Science Assessment of an Automated
    Digital Method to Estimate Leaf Area Index (LAI) in Cherry Trees. 2016. Available
    online: https://www.tandfonline.com/doi/full/10.1080/01140671.2016.1207670 (accessed
    on 28 November 2022). [CrossRef] Fernández-Pacheco, D.G.; Escarabajal-Henarejos,
    D.; Ruiz-Canales, A.; Conesa, J.; Molina-Martínez, J.M. A Digital Image-Processing-Based
    Method for Determining the Crop Coefficient of Lettuce Crops in the Southeast
    of Spain. Biosyst. Eng. 2014, 117, 23–34. [Google Scholar] [CrossRef] González-Esquiva,
    J.M.; Oates, M.J.; García-Mateos, G.; Moros-Valle, B.; Molina-Martínez, J.M.;
    Ruiz-Canales, A. Development of a Visual Monitoring System for Water Balance Estimation
    of Horticultural Crops Using Low Cost Cameras. Comput. Electron. Agric. 2017,
    141, 15–26. [Google Scholar] [CrossRef] González-Esquiva, J.M.; García-Mateos,
    G.; Escarabajal-Henarejos, D.; Hernández-Hernández, J.L.; Ruiz-Canales, A.; Molina-Martínez,
    J.M. A New Model for Water Balance Estimation on Lettuce Crops Using Effective
    Diameter Obtained with Image Analysis. Agric. Water Manag. 2017, 183, 116–122.
    [Google Scholar] [CrossRef] González-Esquiva, J.M.; García-Mateos, G.; Hernández-Hernández,
    J.L.; Ruiz-Canales, A.; Escarabajal-Henerajos, D.; Molina-Martínez, J.M. Web Application
    for Analysis of Digital Photography in the Estimation of Irrigation Requirements
    for Lettuce Crops. Agric. Water Manag. 2017, 183, 136–145. [Google Scholar] [CrossRef]
    Zhang, K.; Ge, X.; Liu, X.; Zhang, Z.; Liang, Y.; Tian, Y.; Cao, Q.; Cao, W.;
    Zhu, Y.; Liu, X. Evaluation of the Chlorophyll Meter and GreenSeeker for the Assessment
    of Rice Nitrogen Status. Adv. Anim. Biosci. 2017, 8, 359–363. [Google Scholar]
    [CrossRef] Olson, D.; Anderson, J. Review on Unmanned Aerial Vehicles, Remote
    Sensors, Imagery Processing, and Their Applications in Agriculture. Agron. J.
    2021, 113, 971–992. [Google Scholar] [CrossRef] Villa, T.; Gonzalez, F.; Miljevic,
    B.; Ristovski, Z.D.; Morawska, L. An Overview of Small Unmanned Aerial Vehicles
    for Air Quality Measurements: Present Applications and Future Prospectives. Sensors
    2016, 16, 1072. [Google Scholar] [CrossRef] [Green Version] De Rango, F.; Potrino,
    G.; Tropea, M.; Santamaria, A.F.; Palmieri, N. Simulation, Modeling and Technologies
    for Drones Coordination Techniques in Precision Agriculture. Adv. Intell. Syst.
    Comput. 2019, 873, 77–101. [Google Scholar] [CrossRef] Custers, B. Drones Here,
    There and Everywhere Introduction and Overview. In The Future of Drone Use; T.M.C.
    Asser Press: The Hague, Netherlands, 2016; pp. 3–20. [Google Scholar] [CrossRef]
    Delavarpour, N.; Koparan, C.; Nowatzki, J.; Bajwa, S.; Sun, X. A Technical Study
    on UAV Characteristics for Precision Agriculture Applications and Associated Practical
    Challenges. Remote Sens. 2021, 13, 1204. [Google Scholar] [CrossRef] Pircher,
    M.; Geipel, J.; Kusnierek, K.; Korsaeth, A. Development of a Hybrid UAV Sensor
    Platform Suitable for Farm-Scale Applications in Precision Agriculture. Int. Arch.
    Photogramm. Remote Sens. Spat. Inf. Sci.—ISPRS Arch. 2017, 42, 297–302. [Google
    Scholar] [CrossRef] [Green Version] Amarasingam, N.; Ashan Salgadoe, A.S.; Powell,
    K.; Gonzalez, L.F.; Natarajan, S. A Review of UAV Platforms, Sensors, and Applications
    for Monitoring of Sugarcane Crops. Remote Sens. Appl. Soc. Environ. 2022, 26,
    100712. [Google Scholar] [CrossRef] Kerkech, M.; Hafiane, A.; Canals, R. Deep
    Leaning Approach with Colorimetric Spaces and Vegetation Indices for Vine Diseases
    Detection in UAV Images. Comput. Electron. Agric. 2018, 155, 237–243. [Google
    Scholar] [CrossRef] Tetila, E.C.; Machado, B.B.; Menezes, G.K.; Da Silva Oliveira,
    A.; Alvarez, M.; Amorim, W.P.; De Souza Belete, N.A.; Da Silva, G.G.; Pistori,
    H. Automatic Recognition of Soybean Leaf Diseases Using UAV Images and Deep Convolutional
    Neural Networks. IEEE Geosci. Remote Sens. Lett. 2020, 17, 903–907. [Google Scholar]
    [CrossRef] Huang, H.; Deng, J.; Lan, Y.; Yang, A.; Zhang, L.; Wen, S.; Zhang,
    H.; Zhang, Y.; Deng, Y. Detection of Helminthosporium Leaf Blotch Disease Based
    on UAV Imagery. Appl. Sci. 2019, 9, 558. [Google Scholar] [CrossRef] [Green Version]
    Deng, L.; Mao, Z.; Li, X.; Hu, Z.; Duan, F.; Yan, Y. UAV-Based Multispectral Remote
    Sensing for Precision Agriculture: A Comparison between Different Cameras. ISPRS
    J. Photogramm. Remote Sens. 2018, 146, 124–136. [Google Scholar] [CrossRef] Yang,
    W.; Xu, W.; Wu, C.; Zhu, B.; Chen, P.; Zhang, L.; Lan, Y. Cotton Hail Disaster
    Classification Based on Drone Multispectral Images at the Flowering and Boll Stage.
    Comput. Electron. Agric. 2021, 180, 105866. [Google Scholar] [CrossRef] Pourazar,
    H.; Samadzadegan, F.; Dadrass Javan, F. Aerial Multispectral Imagery for Plant
    Disease Detection: Radiometric Calibration Necessity Assessment. Eur. J. Remote
    Sens. 2019, 52, 17–31. [Google Scholar] [CrossRef] [Green Version] Xavier, T.W.F.;
    Souto, R.N.V.; Statella, T.; Galbieri, R.; Santos, E.S.; Suli, G.S.; Zeilhofer,
    P. Identification of Ramularia Leaf Blight Cotton Disease Infection Levels by
    Multispectral, Multiscale UAV Imagery. Drones 2019, 3, 33. [Google Scholar] [CrossRef]
    Chivasa, W.; Mutanga, O.; Burgueño, J. UAV-Based High-Throughput Phenotyping to
    Increase Prediction and Selection Accuracy in Maize Varieties under Artificial
    MSV Inoculation. Comput. Electron. Agric. 2021, 184, 106128. [Google Scholar]
    [CrossRef] Albetis, J.; Duthoit, S.; Guttler, F.; Jacquin, A.; Goulard, M.; Poilvé,
    H.; Féret, J.B.; Dedieu, G. Detection of Flavescence Dorée Grapevine Disease Using
    Unmanned Aerial Vehicle (UAV) Multispectral Imagery. Remote Sens. 2017, 9, 308.
    [Google Scholar] [CrossRef] [Green Version] Paredes, J.A.; Gonzalez, J.; Saito,
    C.; Flores, A. Multispectral Imaging System with UAV Integration Capabilities
    for Crop Analysis. In Proceedings of the 2017 First IEEE International Symposium
    of Geoscience and Remote Sensing (GRSS-CHILE), Valdivia, Chile, 15–16 June 2017.
    [Google Scholar] [CrossRef] Rodríguez, J.; Lizarazo, I.; Prieto, F.; Angulo-Morales,
    V. Assessment of Potato Late Blight from UAV-Based Multispectral Imagery. Comput.
    Electron. Agric. 2021, 184, 106061. [Google Scholar] [CrossRef] Chen, Z.; Wang,
    J.; Wang, T.; Song, Z.; Li, Y.; Huang, Y.; Wang, L.; Jin, J. Automated In-Field
    Leaf-Level Hyperspectral Imaging of Corn Plants Using a Cartesian Robotic Platform.
    Comput. Electron. Agric. 2021, 183, 105996. [Google Scholar] [CrossRef] Liu, T.;
    Xu, T.; Yu, F.; Yuan, Q.; Guo, Z.; Xu, B. A Method Combining ELM and PLSR (ELM-P)
    for Estimating Chlorophyll Content in Rice with Feature Bands Extracted by an
    Improved Ant Colony Optimization Algorithm. Comput. Electron. Agric. 2021, 186,
    106177. [Google Scholar] [CrossRef] Zeng, C.; King, D.J.; Richardson, M.; Shan,
    B. Fusion of Multispectral Imagery and Spectrometer Data in UAV Remote Sensing.
    Remote Sens. 2017, 9, 696. [Google Scholar] [CrossRef] [Green Version] Ribeiro-Gomes,
    K.; Hernández-López, D.; Ortega, J.F.; Ballesteros, R.; Poblete, T.; Moreno, M.A.
    Uncooled Thermal Camera Calibration and Optimization of the Photogrammetry Process
    for UAV Applications in Agriculture. Sensors 2017, 17, 2173. [Google Scholar]
    [CrossRef] Sagan, V.; Maimaitijiang, M.; Sidike, P.; Eblimit, K.; Peterson, K.T.;
    Hartling, S.; Esposito, F.; Khanal, K.; Newcomb, M.; Pauli, D.; et al. UAV-Based
    High Resolution Thermal Imaging for Vegetation Monitoring, and Plant Phenotyping
    Using ICI 8640 P, FLIR Vue Pro R 640, and ThermoMap Cameras. Remote Sens. 2019,
    11, 330. [Google Scholar] [CrossRef] [Green Version] Gago, J.; Douthe, C.; Coopman,
    R.E.; Gallego, P.P.; Ribas-Carbo, M.; Flexas, J.; Escalona, J.; Medrano, H. UAVs
    Challenge to Assess Water Stress for Sustainable Agriculture. Agric. Water Manag.
    2015, 153, 9–19. [Google Scholar] [CrossRef] Zhou, Z.; Majeed, Y.; Diverres Naranjo,
    G.; Gambacorta, E.M.T. Assessment for Crop Water Stress with Infrared Thermal
    Imagery in Precision Agriculture: A Review and Future Prospects for Deep Learning
    Applications. Comput. Electron. Agric. 2021, 182, 106019. [Google Scholar] [CrossRef]
    Lichtenthaler, H.K. The Stress Concept in Plants: An Introduction. Ann. N. Y.
    Acad. Sci. 1998, 851, 187–198. [Google Scholar] [CrossRef] Paes de Melo, B.; Carpinetti,
    P.d.A.; Fraga, O.T.; Rodrigues-Silva, P.L.; Fioresi, V.S.; de Camargos, L.F.;
    Ferreira, M.F. da S. Abiotic Stresses in Plants and Their Markers: A Practice
    View of Plant Stress Responses and Programmed Cell Death Mechanisms. Plants 2022,
    11, 1100. [Google Scholar] [CrossRef] Postolache, S.; Torres, R.; Afonso, A.P.;
    Carmo, M.B.; Cláudio, A.P.; Domingos, D.; Ferreira, A.; Barata, R.; Carvalho,
    P.; Coelho, A.G.; et al. Contributions to the Design of Mobile Applications for
    Visitors of Botanical Gardens. Procedia Comput. Sci. 2022, 196, 389–399. [Google
    Scholar] [CrossRef] Documentation. Available online: https://docs.mapbox.com/
    (accessed on 18 November 2022). Miller, J. Soil PH Affects Nutrient; University
    of Maryland Extension, USA. 2016. Available online: https://drum.lib.umd.edu/bitstream/handle/1903/18519/FS-1054%20Soil%20pH%20and%20Nutrient%20Availbility_Update_12_2021.pdf?sequence=5&isAllowed=y
    (accessed on 18 November 2022). Rousk, J.; Brookes, P.C.; Bååth, E. Contrasting
    Soil PH Effects on Fungal and Bacterial Growth Suggest Functional Redundancy in
    Carbon Mineralization. Appl. Environ. Microbiol. 2009, 75, 1589–1596. [Google
    Scholar] [CrossRef] [Green Version] Pandey, A.; Tripathi, A.; Srivastava, P.;
    Choudhary, K.K.; Dikshit, A. 1—Plant Growth-Promoting Microorganisms in Sustainable
    Agriculture. In Role of Plant Growth Promoting Microorganisms in Sustainable Agriculture
    and Nanotechnology; Kumar, A., Singh, A.K., Choudhary, K.K., Eds.; Woodhead Publishing:
    Sawston, UK, 2019; pp. 1–19. ISBN 978-0-12-817004-5. [Google Scholar] Ballabio,
    C.; Lugato, E.; Fernández-Ugalde, O.; Orgiazzi, A.; Jones, A.; Borrelli, P.; Montanarella,
    L.; Panagos, P. Mapping LUCAS Topsoil Chemical Properties at European Scale Using
    Gaussian Process Regression. Geoderma 2019, 355, 113912. [Google Scholar] [CrossRef]  Disclaimer/Publisher’s
    Note: The statements, opinions and data contained in all publications are solely
    those of the individual author(s) and contributor(s) and not of MDPI and/or the
    editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to
    people or property resulting from any ideas, methods, instructions or products
    referred to in the content.  © 2022 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Postolache, S.; Sebastião, P.; Viegas, V.; Postolache,
    O.; Cercas, F. IoT-Based Systems for Soil Nutrients Assessment in Horticulture.
    Sensors 2023, 23, 403. https://doi.org/10.3390/s23010403 AMA Style Postolache
    S, Sebastião P, Viegas V, Postolache O, Cercas F. IoT-Based Systems for Soil Nutrients
    Assessment in Horticulture. Sensors. 2023; 23(1):403. https://doi.org/10.3390/s23010403
    Chicago/Turabian Style Postolache, Stefan, Pedro Sebastião, Vitor Viegas, Octavian
    Postolache, and Francisco Cercas. 2023. \"IoT-Based Systems for Soil Nutrients
    Assessment in Horticulture\" Sensors 23, no. 1: 403. https://doi.org/10.3390/s23010403
    Note that from the first issue of 2016, this journal uses article numbers instead
    of page numbers. See further details here. Article Metrics Citations ads   5 Crossref   12
    PMC   3 Scopus   11 Web of Science   7 PubMed   3 Google Scholar   [click to view]
    Article Access Statistics Article access statistics Article Views 14. Jan 24.
    Jan 3. Feb 13. Feb 23. Feb 4. Mar 14. Mar 24. Mar 3. Apr 0k 1k 2k 3k 4k 5k 6k
    For more information on the journal statistics, click here. Multiple requests
    from the same IP address are counted as one view.   Sensors, EISSN 1424-8220,
    Published by MDPI RSS Content Alert Further Information Article Processing Charges
    Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI Guidelines For Authors
    For Reviewers For Editors For Librarians For Publishers For Societies For Conference
    Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org Scilit SciProfiles
    Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook Twitter Subscribe
    to receive issue release notifications and newsletters from MDPI journals Select
    options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless otherwise stated
    Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Sensors
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT-Based Systems for Soil Nutrients Assessment in Horticulture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - T. M.
  - Makkithaya K.
  - V.G. N.
  citation_count: '7'
  description: Agricultural risks associated with weather events, soil conditions,
    diseases, and pests have risen in recent years due to climate change. These risks
    have burdened farmers with the shock of financial stress and endangered the region's
    food security. Despite increasing risks, notable risk management tools like agricultural
    insurance have not effectively reached marginal farmers in developing economies.
    This can be attributed to the fact that existing centralized agricultural information
    systems lack trust factors in sharing and accessing agricultural risk data, which
    is accompanied by processing delays in insurance payouts. To this end, the emergence
    of promising technologies like blockchain helps establish trust and automates
    insurance-based payments with smart contracts. This work proposes a framework
    called AgriSSIOracle with two key contributions. The first is to have a trusted
    agricultural Internet of Things (IoT) data sharing that employs blockchain-based
    Self-Sovereign Identity (SSI) and provable credentials. Second is the decentralized
    oracle-based access control mechanism for smart contracts in agricultural insurance.
    A method for privacy-preserved authentication and data provenance for agricultural
    IoT devices is developed with SSI-based Decentralized Identifiers (DIDs) and Verifiable
    Credentials (VCs). Next, the IoT data sharing scheme is illustrated using publish–subscribe
    and request–response communication patterns based on the device data credentials.
    Finally, the decentralized oracle mechanism for smart contracts is built based
    on multiparty computation for risk-related data access. The implementation of
    the framework is realized using a permissioned identity blockchain called Hyperledger
    Indy and Ethereum, which is a public blockchain for smart contracts. The security
    and privacy analysis confirms that the AgriSSIOracle framework ensures trust factors,
    particularly authenticity, privacy, data provenance, data integrity, and access
    control. The framework is evaluated with respect to the transaction throughput,
    latency, credential issue-verify-revoke time, and resource utilization metrics.
    The evaluation results prove that the AgriSSIOracle solution is scalable and efficient
    and meets the requirements of real-time deployment.
  doi: 10.1016/j.compag.2022.107544
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract BetaPowered by GenAIQuestions answered in this article Keywords
    1. Introduction 2. Background 3. Related work 4. Methods 5. Implementation and
    evaluation 6. Conclusion and future work CRediT authorship contribution statement
    Declaration of Competing Interest Data availability References Show full outline
    Cited by (12) Figures (17) Show 11 more figures Tables (6) Table 1 Table 2 Table
    3 Table 4 Table 5 Table 6 Computers and Electronics in Agriculture Volume 204,
    January 2023, 107544 Original papers A trusted IoT data sharing and secure oracle
    based access for agricultural production risk management Author links open overlay
    panel Manoj T., Krishnamoorthi Makkithaya, Narendra V.G. Show more Add to Mendeley
    Share Cite https://doi.org/10.1016/j.compag.2022.107544 Get rights and content
    Abstract Agricultural risks associated with weather events, soil conditions, diseases,
    and pests have risen in recent years due to climate change. These risks have burdened
    farmers with the shock of financial stress and endangered the region’s food security.
    Despite increasing risks, notable risk management tools like agricultural insurance
    have not effectively reached marginal farmers in developing economies. This can
    be attributed to the fact that existing centralized agricultural information systems
    lack trust factors in sharing and accessing agricultural risk data, which is accompanied
    by processing delays in insurance payouts. To this end, the emergence of promising
    technologies like blockchain helps establish trust and automates insurance-based
    payments with smart contracts. This work proposes a framework called AgriSSIOracle
    with two key contributions. The first is to have a trusted agricultural Internet
    of Things (IoT) data sharing that employs blockchain-based Self-Sovereign Identity
    (SSI) and provable credentials. Second is the decentralized oracle-based access
    control mechanism for smart contracts in agricultural insurance. A method for
    privacy-preserved authentication and data provenance for agricultural IoT devices
    is developed with SSI-based Decentralized Identifiers (DIDs) and Verifiable Credentials
    (VCs). Next, the IoT data sharing scheme is illustrated using publish–subscribe
    and request–response communication patterns based on the device data credentials.
    Finally, the decentralized oracle mechanism for smart contracts is built based
    on multiparty computation for risk-related data access. The implementation of
    the framework is realized using a permissioned identity blockchain called Hyperledger
    Indy and Ethereum, which is a public blockchain for smart contracts. The security
    and privacy analysis confirms that the AgriSSIOracle framework ensures trust factors,
    particularly authenticity, privacy, data provenance, data integrity, and access
    control. The framework is evaluated with respect to the transaction throughput,
    latency, credential issue-verify-revoke time, and resource utilization metrics.
    The evaluation results prove that the AgriSSIOracle solution is scalable and efficient
    and meets the requirements of real-time deployment. Previous article in issue
    Next article in issue Questions answered in this article BetaPowered by GenAI
    This is generative AI content and the quality may vary. Learn more. What is the
    mechanism for secure IoT data access using a decentralized oracle? How can blockchain
    aid in achieving trust in agricultural IoT data sharing? What is the purpose of
    the trusted agricultural IoT data sharing scheme? What is the purpose of the secure
    decentralized oracle-based data access for smart contracts? What is the concept
    of integrating SSI with IoT? Keywords Agricultural riskBlockchainInternet of ThingsSelf-Sovereign
    IdentityTrusted data sharing 1. Introduction Agriculture is the primary sector
    in the economy that provides food security and a source of livelihood, while contributing
    to the country’s Gross Domestic Product (GDP). This accounts for 4% of world GDP
    (World Bank, 2018) and its contributions toward economic growth in developing
    countries such as India were around 20.2% in 2021 (Ministry of Agriculture & Farmers
    Welfare, 2021). Recent United Nations (UN) estimates show that nearly 690 million
    or 8.9% of the world’s population are reeling under hunger. The impact of climate
    change on food production would push an additional 135 million people to suffer
    from acute hunger (United Nations Organization, 2019). According to the Food and
    Agricultural Organization (FAO), close to 2.5 billion people are directly dependent
    on agriculture as the source of their livelihood (Food and Agriculture Organization,
    2016). Over the past two to three decades, rapid industrialization and unabated
    global warming have resulted in rising agricultural risks that hamper global food
    production. Multi-faceted agricultural risks can be classified as production,
    market, institutional, financial, and personal risks based on the source of risk
    evolution (Komarek et al., 2020). The production risks are caused primarily by
    extreme weather events, disease, pest infestation, and soil conditions. These
    production risks may cause severe losses in crop yield and lead to marginal farmers’
    financial bankruptcy. In recent years, production risks induced by extreme heat
    waves, drought and terrible flooding in larger parts of Europe, China, India and
    other South Asian countries have exacerbated food crisis and ruined livelihood
    of millions of farmers (World Meteorological Organization, 2022). In particular,
    33.9 million hectares of cropped area in India were damaged between 2015–16 and
    2021–22 due to meteorological calamities (Gupta, 2022). The highest priority is
    given to mitigating production risks as they endanger food security and financial
    need for particular geographies (Anandhi et al., 2016). To effectively understand
    and handle the risk environment, different target groups/stakeholders comprised
    of farmers (farmer community organization), policymakers (government and planners),
    and service providers (insurers, bankers, and input suppliers) must actively participate
    in risk mitigation processes. A holistic risk management strategy is required
    to assess and manage risks by adopting informal techniques at the farm level to
    formal techniques in decision-making (Duong et al., 2019). Agriculture insurance
    is a well-identified and formal risk management strategy that can sustain farmers’
    income and hedge against financial losses due to production risks. However, for
    two reasons, agricultural insurance is not widely adopted in developing countries.
    First, the lack of trusted agricultural data sharing platforms and information
    asymmetries discourage insurers from developing higher-quality insurance schemes.
    Second, smallholder farmers are reluctant to insure their crops due to limited
    awareness, high premium costs, delays, and lack of transparency in the payout
    process. There are different methods in practice to collect weather, soil, and
    crop management data influencing agricultural production risks. In many developing
    countries, manual methods like Crop Cutting Experiments (CCEs) are still prevalent
    to estimate production risks. This is labor and resource intensive and has a prolonged
    data collection time (Soyka et al., 2016). Data tampering and falsification are
    the most common errors in CCE. With the foray of Information and Communication
    Technology (ICT), many countries have agricultural information systems to retrieve
    and share agricultural data. These digitized systems are managed by a single organization
    that uses centralized ledgers to record the collection and sharing of data. The
    centralized information systems suffer from a single point of failure, correlatable
    authentication identity, lack of data provenance, loss of privacy, and unauthorized
    data access (Dey and Shekhawat, 2021). With advances in smart farming practices
    across the globe, there has been a gradual increase in the adoption of Internet
    of Things (IoT) devices for the real-time monitoring and sharing of on-farm data
    for risk assessment and decision-making. Specifically, IoT devices used in farm
    data collection are prone to multiple security and privacy attacks, and the data
    shared may not be reliable for further processing (Ferrag et al., 2020). Regulations
    and guidelines such as the General Data Protection Regulation (GDPR) (GDPR European
    Union, 2018), Findability, Accessibility, Interoperability, Reusability (FAIR)
    (Wilkinson et al., 2016), and the EU code of conduct 2018 (van der Burg et al.,
    2020) have mandated certain trust factors such as authentication, data provenance,
    integrity, privacy, and access control to be met by agricultural data sharing
    systems. Adopting the Distributed Ledger Technology (DLT) is needed to ensure
    trust factors and address the issues of centralized IoT agricultural data sharing.
    Promising and revolutionary DLTs like blockchain aid in achieving trust in agricultural
    IoT data sharing for production risk assessment (Food and Agriculture Organization,
    2019). Blockchain eliminates the need for a centralized authority and remove the
    dependence on trusted third parties. However, having a device-controlled and cryptographically
    verifiable Self-Sovereign Identity (SSI) with a robust credential system leverages
    the effectiveness of blockchain in attaining trust factors. The synergy of SSI-based
    Decentralized Identifiers (DIDs) and Verifiable Credentials (VCs) with blockchain
    helps realize robust authentication, enhanced privacy, data provenance, and integrity
    for trusted agricultural IoT data sharing. The credentials issued for agricultural
    data sharing with cryptographic constructs guarantee data ownership and irrefutable
    distributed trust. The primary application component of blockchain is smart contracts,
    which is self-executing code that triggers an automated payout to farmers on satisfying
    predefined conditions in agricultural risk assessment. The parametric agricultural
    insurance can be flexibly deployed as smart contracts that cover predefined loss
    events related to weather conditions, crop yield, or soil conditions. As blockchain
    is deterministic and closed system, smart contracts cannot acquire real-world
    risk-related data from agricultural IoT devices for decision-making. An interface
    or a data feed called an oracle is required to read data and events from the outside
    world and deliver them to smart contracts for processing (Moudoud et al., 2019).
    A decentralized oracle-based access control mechanism is required to feed DID-VC
    trusted data securely and assess production risks. This mechanism significantly
    speeds up agricultural insurance payout processes, leading to effective risk management
    strategy implementations. 1.1. Motivation Marginal farmers’ resilience to agricultural
    production risks can be increased by digitizing and automating insurance payouts
    with the help of smart contracts. This assists to cover farmers’ financial losses
    in a time-bound manner and reduces income loss while removing human intervention
    and expediting risk assessment processes. However, this requires gathering production
    risk-related data from multiple agricultural IoT devices. Further, data must be
    shared in a trusted manner for risk assessment and decision-making. The key features
    of blockchain technology, such as decentralization, immutability, traceability,
    and transparency, make it a suitable candidate to address the trust challenges
    required for IoT data sharing and its access. Furthermore, integrating blockchain
    with SSI-based DID and VC can realize trustworthiness in data sharing. Besides
    this, automated payouts to farmers using insurance contracts require a decentralized
    oracle to securely access risk data. Therefore, this work proposes an AgriSSIOracle
    framework for trusted agricultural IoT data sharing and decentralized oracle-based
    data access for production risk management. 1.2. Contributions The major contributions
    of this research work are given as follows: • We initially develop a method for
    privacy preserved authentication and data provenance in agricultural IoT devices
    using DID- and VC-based device data credentials. • We demonstrate a trusted agricultural
    IoT data sharing scheme based on device data credentials using publish–subscribe
    and request–response communication patterns. • We develop a secure decentralized
    oracle-based data access for smart contracts to automate agricultural production
    risk management using insurance. • We conduct security and privacy analysis of
    the framework and provide performance evaluation in terms of transaction throughput,
    latency, credential issue-verify-revoke time, and resource utilization. The rest
    of the paper is organized into following sections: Section 2 gives the background
    related to blockchain and SSI, blockchain oracles, IoT data communication patterns
    and cryptographic primitives. Section 3 describes the existing works related to
    trusted IoT data sharing and oracle-based data access. Section 4 gives overview
    of AgriSSIOracle framework. It details processes for DID and VC based trusted
    agricultural IoT data sharing and secure data access using decentralized oracle.
    Section 5 gives the implementation details and shows the results obtained. It
    provides the performance evaluation for the framework along with security and
    privacy analysis. Section 6 offers the conclusion with the potential scope for
    future research. 2. Background 2.1. Blockchain and Self-Sovereign Identity Blockchain
    is peer-to-peer system that records transactions into a distributed ledger that
    is secured, trusted, transparent, disintermediated, and immutable, which can be
    updated only by consensus of peers. The addition of programming capabilities to
    a blockchain enhances its applicability in domains such as agriculture, healthcare,
    governance, finance, education, supply chain, and entertainment. The technical
    features of blockchain have made it suitable to conceive a user-controlled digital
    identity and credential system. Efforts from the Internet Identity Workshop (IIW)
    and other digital identity communities have resulted in the realization of SSI
    based on blockchain (Preukschat and Hardman, 2021). The SSI is the concept where
    user/IoT devices own their identity-related data and decide when and how it has
    to be shared with others in a trusted way. There is no role for centralized systems
    in storing data and transferring it to third parties upon request. With SSI, anyone
    can verify the claims about identity and data shared with cryptographic validity.
    The SSI is mapped onto Internet Protocol (IP) architecture to enable trusted transactions
    between stakeholders. The DIDs and VCs form the basic building blocks of the SSI
    stack. The DID is a unique global identifier that is cryptographically verifiable,
    decentralized, and human-readable. This can be assigned to any person, organization,
    or device (Hughes et al., 2019). The core properties of DIDs comply with the identity
    principles promoted by SSI. The DID format is similar to the Uniform Resource
    Identifier (URI) [either Uniform Resource Locator (URL) or Uniform Resource Name
    (URN)], which points to an entity identified by DID. The DID syntax is made up
    of three components such as schema, DID method, and DID method-specific string
    separated by a colon. For example, did:example:123456789abcdefghijk. Resolving
    a specific DID point to a document that consists of optional elements such as
    an identifier, public keys, authentication proof, holder’s signature, service
    endpoints, and other metadata. The DID methods can be broadly classified as ledger-based/public
    DIDs, ledger-middleware DIDs, peer DIDs, static DIDs, and alternative DIDs. The
    public and peer DIDs are extensively used in recognizing the entity/device. Public
    DIDs are disclosed to everyone and registered in the blockchain ledger. In contrast,
    peer DIDs are private and used to establish one-to-one contextual relationships
    between peers. Verifiable credentials are tamper-proof evidence for claims made
    by the identity owner, which can be cryptographically verified without relying
    on a centralized authority (Sporny et al., 2019). The VC data model is standardized
    by W3C and provides a universally expressible data format that allows any entity
    to create digital attestations about identity owners. The ecosystem of VCs includes
    various components such as the subject (entity whose attributes are listed in
    claims), issuer (entity that issues credentials to the claims made about the subject),
    holder (entity that holds the VC), verifier (entity that receives VCs from holders
    for claims about the subject), and verifiable data registry (universally accessible
    distributed registry required to hold data and metadata required for VC operations).
    For example, a device manufacturer can issue a credential to an IoT device regarding
    its authenticity and provenance to share agricultural data with interested government
    agencies/insurers/bankers. Currently, the three credential formats that are widely
    used include JavaScript Object Notation-Linked Data (JSON-LD), JSON Web Tokens
    (JWTs), and Indy Zero Knowledge Proof (ZKP). 2.2. Blockchain oracles An oracle
    is an intermediary between the blockchain and off-chain real-world data sources
    that query and verify external data and deliver them to smart contracts. Smart
    contracts deployed in diversified domains such as agricultural insurance, supply
    chains, and governance need oracles to read real-world data as blockchain cannot
    access the data directly. The design and characteristics of an oracle vary between
    application domains depending on the type of data source, trust model, design
    of query/response patterns, and type of interaction model (Al-Breiki et al., 2020).
    Data streamed to oracles may come from different sources such as online from the
    internet (software oracle), physically from devices (hardware oracle), or individuals
    possessing specific skillsets (human oracle). The design of an oracle with a centralized
    trust source leads to a single point of failure, which suffers from availability
    and reliability issues. A decentralized trust model achieves trustworthiness by
    sharing the responsibility for the accuracy and validity of data between distributed
    participants. Existing request-response, publish-subscribe, or push-pull models
    are used to design query/response patterns in oracles. Oracles are inbound or
    outbound based on the direction of information flow and interactions with the
    blockchain. Inbound oracles retrieve data from external sources into smart contracts
    in the blockchain, whereas outbound oracles send data from smart contracts back
    to the external world. 2.3. IoT data communication patterns and cryptographic
    primitives The agricultural IoT devices are deployed in remote locations for real-time
    monitoring of physical parameters such as weather, soil conditions, and crop management
    features associated with the farmland. Generally, the IoT devices have different
    protocols embedded in the network stack that allows seamless data transmission
    from edge to cloud. However, specific communication patterns frequently used by
    IoT devices are request-response, publish-subscribe. Request-response is a communication
    pattern where a client (cloud device) requests the data from the server (edge
    device) with the help of GET, PUT, POST, and DELETE operations. The publish-subscribe
    pattern involves a publisher (edge device), broker and subscriber (cloud device)
    in the communication workflow. A publisher is a source of data that publishes
    data on particular topics managed by the broker. Subscribers are the consumers
    of data who subscribe to the topics created by the broker. Cryptographic primitives
    are the basic building blocks for SSI-based blockchain infrastructure to secure
    transactions, maintain data integrity, verify data sources and transactions, and
    prepare privacy-preserving proofs (Zundel and Zouarhi, 2021). In developing a
    trustworthy system, data confidentiality is of utmost importance and is achieved
    through encryption and decryption techniques. Elliptic Curve Cryptosystem (ECC)
    is the preferred choice to attain confidentiality for transactions and messages,
    and the hash function generates a fixed-length unique value that ensures integrity.
    The SHA512 and Keccak512 hashing algorithms are used exhaustively in blockchain
    and SSI environments. Digital signatures create cryptographic trust regarding
    the authenticity of communicating peers. Digital signatures such as Elliptic Curve
    Digital Signature Algorithm (ECDSA) and Edwards-curve Digital Signature Algorithm
    (EdDSA) are used in DID authentication. Specifically, in the VC ecosystem issuers
    use Camenisch-Lysyanskaya(CL) and BBS+ signatures to sign each verifiable credential.
    Cryptographic proofs are used in the SSI ecosystem for privacy-based disclosure
    of computational facts. Proofs are produced with the Zero-Knowledge Proof (ZKP)
    cryptography whose goal is the selective disclosure of messages without revealing
    the value. Here, the prover offers proof to the verifier that a valid signature
    exists for holding the secret value. Download : Download high-res image (673KB)
    Download : Download full-size image Fig. 1. A high level overview of AgriSSIOracle
    framework. 3. Related work Trust is an extensively studied concept in different
    disciplines such as sociology, economics and computer science. Specifically, the
    trust management required for IoT devices has been explored earlier (Yan et al.,
    2014). However, the formalization and quantification of the trust paradigm is
    a complex task in geographically distributed IoT devices. Trust for IoT can be
    analyzed from two perspectives. One is the user/human trust, and the other is
    system trust (Byabazaire et al., 2020). User trust is the subjective expectation
    about the behavior of a particular entity in the future, whereas system trust
    is deeply rooted in technology. System trust is also more quantifiable, expressible,
    and justifiable in an undeniable way. For trust-based IoT data sharing, system
    trust attributes such as identity and authentication, privacy, data provenance
    and integrity, privacy, and access control need to be considered (Kumar and Sharma,
    2021). Many researchers have begun perceiving the concept of decentralization
    through blockchain and investigating its role in leveraging trust factors for
    IoT systems. Khalid et al. (2020) derived a lightweight blockchain-based IoT device
    authentication and access control scheme based on asymmetric cryptography and
    smart contracts. Malik et al. (2019) devised three-layered trustchain architecture
    for authentication and access control in IoT devices based on reputation scores.
    Singh et al. (2021) developed a cross-domain data sharing framework using blockchain
    for industrial IoT domains. This framework focused on data source authentication
    and integrity. Particularly, there is little empirical work available for trust-enabled
    agricultural IoT data sharing using blockchain. The study by Lu et al. (2020)
    focused on describing a decentralized architecture for agricultural IoT data sharing
    and its components without pragmatic implementation. Studies by Rahman et al.
    (2020) and Abraham and Santosh Kumar (2020) illustrated the use of smart contract-based
    secure agricultural data sharing using decentralized file system and blockchain.
    For agricultural data sharing, a blockchain-centered cross-regional big data platform
    was developed by Zhu and Li (2021) for sustainable ecological development. Patel
    and Shrimali (2021) proposed the AgriOnBlock framework to securely share IoT data
    with smart contracts to automate supply chains and insurance processes. However,
    the issue with these decentralized schemes is that they depend on centralized
    identifiers for authentication and lack privacy-preserved data provenance for
    shared data. The SSI community has taken pioneering steps in conceiving the first
    truly decentralized identity that adheres to all identity principles. A white
    paper on SSI and IoT by the Sovrin foundation discussed various opportunities
    to integrate SSI with existing or evolving use cases in IoT ecosystems (The Sovrin
    Foundation, 2020). Kortesniemi et al. (2019) successfully demonstrated the idea
    of integrating DIDs with IoT by delegating device authentication and authorization
    operations to a trusted proxy using the OAuth2 protocol. A lightweight triple-trusting
    architecture comprised of DID authentication, access control and integrity is
    proposed by Shi et al. (2019) for IoT data sharing. Fan et al. (2020) implemented
    decentralized identity and access control framework for a tamper-evident and interoperable
    registry to maintain the life cycle of IoT devices. Samir et al. (2021) showed
    a trust-based SSI identity management services for IoT devices that incorporated
    a secret sharing scheme with smart contracts on the blockchain. The tradechain
    framework (Malik et al., 2021) decoupled the traceability of trade data records
    in supply chain systems from their identity by adopting SSI principles. Diego
    et al. (2021) analyzed and evaluated the feasibility of the IoT-as-a-Service (IoTaaS)
    business model with SSI schemes to enhance the privacy of the identity space.
    For data sharing between untrusted participants in off-grid networks, an SSI-based
    infrastructure is formulated and implemented through the existing Hyperledger
    blockchain framework (Niavis et al., 2020). These SSI-based mechanisms are efficient
    in offering privacy-preserved authentication and data provenance. However, they
    do not ensure secure access of data to smart contracts using oracles. An oracle
    solution has been proposed by various authors and organizations in the form of
    frameworks or standalone applications for trust-based off-chain data access into
    domain-specific on-chain smart contracts. Early efforts to develop oracles began
    with a centralized trust model where authenticity proofs verify third parties
    before feeding data into smart contracts. Kochovski et al. (2019) developed trust
    management architecture for secure access to IoT data for smart contracts using
    centralized trustless oracles. Provable  (Provable, 2019) and TownCrier (Zhang
    et al., 2016) are the instances of a centralized oracle where authenticity proofs
    generated from the Trusted Execution Environment (TEE) guarantee data trust. In
    the decentralized trust model for oracles, various off-chain components agree
    regarding data trustworthiness with the help of different data processing mechanisms.
    Aggregation-based oracles collect data from multiple sources based on a predefined
    logic and aggregate them to provide quality data by removing malicious data. Reputation-based
    oracles associate reputation scores with oracle nodes based on data quality. Chainlink
    (Ellis et al., 2017) is an example of both aggregation-based and reputation-based
    oracles. Decentralized agricultural insurance organizations like Etherisc (Mussenbrock
    et al., 2018) and Arbol (Jha et al., 2018) have developed decentralized weather-indexed
    insurance products using the chainlink oracle network for secure access to risk-related
    data. Al Breiki et al. (2019) developed a trust-based oracle to access IoT data
    depending on the reputation score of devices. Band Protocol (Band Protocol, 2019)
    uses the staking method by pledging a certain amount of assets as a stake to enable
    penalties for malicious activity and validate participants in a decentralized
    oracle network. The ASTREA (Adler et al., 2018) provides data feed from multiple
    oracles based on the outcome of the voting process for data truthfulness. These
    data processing mechanisms for decentralized oracles make data visible to all
    processing oracle nodes. As a result, secure and privacy-preserved data access
    is not facilitated for smart contracts. Zhang et al. (2020) designed and developed
    a Decentralized Oracle (DECO) working model for data provenance of websites accessed
    via Transport Layer Security (TLS) using a three-party handshake, two-party computation,
    and ZKPs. A framework called CLOAK was proposed by Ren et al. (2021) to deploy
    confidential smart contracts by preserving privacy with the help of multiparty
    computation. Table 1 compares existing works in the literature based on trust
    attributes like authentication, identity management, data provenance, privacy,
    and access control. Table 1. Comparison of trust attributes focused by existing
    works in literature. Related work Domain Trust attributes Empty Cell Empty Cell
    Authentication Identity management Data provenance Privacy-preserving Access control
    (Khalid et al., 2020) IoT Devices Asymmetric cryptography Centralized identifiers
    on smart contracts No No No (Zhu and Li, 2021) Agri-data Sharing Asymmetric cryptography
    Centralized identifiers No No No (Patel and Shrimali, 2021) Agri-data sharing
    Asymmetric cryptography Centralized identifiers No No No (Malik et al., 2021)
    Supply chain Asymmetric cryptography Decentralized Identifiers-SSI Zero knowledge
    proof credentials Yes No (Diego et al., 2021) IoT devices Asymmetric cryptography
    Decentralized Identifiers-SSI Verifiable credentials Yes No (Samir et al., 2021)
    IoT devices Asymmetric cryptography Decentralized identifiers-SSI Verifiable credentials
    Yes No (Al Breiki et al., 2019) IoT devices Asymmetric cryptography Centralized
    identifiers on smart contracts Reputation based scheme No Reputation based decentralized
    oracle (Kochovski et al., 2019) Fog Platform [Video Streaming] Asymmetric cryptography
    Centralized identifiers on smart contracts Data authenticity proofs No Authenticity
    proof based centralized oracle (Zhang et al., 2020) Web based systems Asymmetric
    cryptography Centralized identifiers Zero knowledge proofs Yes ZKP based decentralized
    oracle (Ren et al., 2021) General applications Asymmetric cryptography Centralized
    identifiers on smart contracts Zero knowledge proofs Yes Multiparty computation
    based decentralized oracle AgriSSIOracle(Our Work) Agri-data sharing + IoT devices
    Asymmetric cryptography Decentralized identifiers-SSI Zero knowledge proof based
    verifiable credential Yes Multiparty computation based decentralized oracle 4.
    Methods 4.1. AgriSSIOracle framework This section proposes an AgriSSIOracle framework
    to achieve DID- and VC-based trusted agricultural IoT data sharing and provides
    a secure decentralized oracle-based data access for smart contracts in agricultural
    production risk management. Fig. 1 provides a detailed overview of the framework.
    At a high level, the framework can be divided into two planes: data and control.
    The data plane is comprised of different layers, such as the perception layer
    (data sensing), edge layer (local data storage at the farm level), and cloud layer
    (collection of various farm data). The control plane is comprised of the blockchain
    required to enable trust factors in a decentralized way. The framework encompasses
    infrastructural components, such as a permissioned identity blockchain for privacy-preserved
    authentication, data provenance, credential-based data sharing; a public blockchain
    for agricultural production risk assessment with smart contract-based agricultural
    insurance; an IoT edge device for on-farm data sensing and storage; decentralized
    off-chain data storage, and a decentralized oracle. The primary actors involved
    in this framework are the stewards, issuer, holder, verifier, and accessor. In
    a typical agricultural value chain in developing countries, the government authority
    (Department of Agriculture and Farmers Welfare) plays the role of stewards to
    define a governance model for trusted data sharing. The issuer certifies the IoT
    device data authenticity by issuing the required credentials. The issuers are
    authorized and approved by stewards through the onboarding process. A device manufacturer
    or farmer organization can maintain and operate the required information for the
    issuing device data credentials. The holder is the IoT edge device deployed in
    the farm that wants to share its data for risk assessment. The verifier checks
    the correctness of the IoT device data credentials before collecting the data
    and storing it in the cloud agent’s data storage. The government agricultural
    agencies at the district/county level are the verifiers. An accessor is an entity
    willing to securely access IoT agricultural data for risk assessment in smart
    contracts. The primary processes involved in realizing this framework are (i)
    DID connection establishment between communicating agents, (ii) device registration,
    (iii) issuing and revoking credentials, (iv) verifying credentials, (v) data sharing,
    and (vi) secure decentralized oracle-based data access. Download : Download high-res
    image (509KB) Download : Download full-size image Fig. 2. Sequence diagram for
    DID connection, device registration, issuing and revoking device data credentials.
    4.2. DID and VC based trusted agricultural IoT data sharing DIDs and VCs needed
    to realize trusted agricultural IoT data sharing are built around permissioned
    identity blockchain. An identity blockchain defines a decentralized network for
    hierarchically and geographically distributed stakeholders of agricultural IoT
    ecosystem. The IoT devices deployed in farmlands generate data related to weather,
    soil or crop conditions required for assessing and managing agricultural risks.
    These devices are assigned with globally unique and cryptographically verifiable
    DIDs required for privacy-preserved authentication. A distributed ledger hosted
    by identity blockchain is a registry for DIDs and their related public keys along
    with service endpoints for communication. Peer DIDs/Private DIDs are used for
    edge IoT devices to preserve identity privacy during data transactions with other
    agents. Using a same DID repeatedly for all transactions allow adversaries to
    derive a correlation and breach the privacy. However, agents such as device manufacturer/farmer
    organization/govt.agricultural agency establish verifiable public identity with
    the help of public DIDs. The cloud agents with a role of issuer publish schema,
    credential definition and revocation registry to issue and revoke the credentials
    for data sharing. Similarly, a verifier cloud agent uses distributed ledger as
    a source for proof of credential. VCs issued to edge IoT devices can be traced
    back to a verifiable source of issuer with identity blockchain being the root
    of trust. Hence, any edge IoT device can assert data provenance for the data collected
    from sensors to actuators. 4.2.1. DID connection establishment Any two agents(entities)
    identified with DIDs willing to exchange information or credentials must establish
    a secure communication channel through mutual authentication, as shown in the
    upper portion of Fig. 2. The agent such as device manufacturer/farmer organization/govt.
    agricultural agency, which plays a role of an issuer or verifier, establishes
    a robust public identity with the help of public DIDs (AgentpublicDID). These
    public DIDs are written to the identity blockchain ledger. However, for the safe
    and secure connection between two agents, a peer DID or private DID is utilized
    as it keeps the information off the ledger and guarantees the privacy-preserving
    contextual relationship. In most scenarios, IoT edge devices create peer DIDs
    to establish secure connections. Each peer DID will have a pair of signing and
    verifying keys for connection establishment. A mutual authentication for DID connection
    is carried out by exchanging connection information and verifying connecting agents’
    digital signatures. To initiate the process of DID connection establishment, an
    agent with a public DID called as RespondingAgent(RespAgent) publishes connection
    invitation which peer agent called as RequestingAgent(ReqAgent) can use to request
    the connection. The request connection received by the RespAgent will be verified
    with the digital signature of ReqAgent and connection response is sent to ReqAgent.
    On receiving the connection response message, the ReqAgent verifies RespAgent’s
    signature and replies with connection completed message. The detailed process
    of DID connection establishment is described in Algorithm 1 where, RespAgentProvisionalPK
    – Provisional public key of RespondingAgent, RespAgentProvisionalSK - Provisional
    secret key of RespondingAgent, RespAgentPK – Public key of RespondingAgent embedded
    in peer DID document, RespAgentSK – Secret key of RespondingAgent stored in the
    wallet, RespAgentSig, RespAgentVerKey – pair of signature and verifying key associated
    with RespondingAgent, ReqAgentPK – Public key of RequestingAgent embedded in peer
    DID document, ReqAgentSK – Secret key of RequestingAgent stored in the wallet,
    ReqAgentSig,ReqAgentVerKey – pair of signature and verifying key associated with
    RequestingAgent. Download : Download high-res image (873KB) Download : Download
    full-size image 4.2.2. Device registration IoT edge devices required for farm
    monitoring must register with device data credential issuer, i.e., device manufacturer
    or farmer organization. The device registration process involves getting the information
    related to a device deployed, farm, farm holder, farm location and data sharing
    pattern. With the help of a secure DID communication channel, the device registration
    is done, and details are stored in a decentralized data storage system, as shown
    in the middle portion of Fig. 2. The identity blockchain ledger will not store
    personal identity attributes or raw application data associated with IoT edge
    devices. 4.2.3. Issuing and revoking device data credentials The stewards are
    the actors having authority to read and write to the permissioned identity ledger
    and run validator nodes in blockchain. Stewards have the administrative control
    to add other actors into the blockchain network and assign their roles. The stewards
    do the onboarding of the issuer (device manufacturer/farmer organization) by granting
    them the role of endorser. The issuer with the endorser role registers the public
    DID in the blockchain and obtains write permission for transacting with the ledger.
    The device data schema is designed by the issuer that adds requisite attributes
    such as FarmerName, FarmID, DeviceID, ManufacturerID, IPAddress, PublishTopic,
    ResourcePath, FarmLocation and writes it to the ledger. The issuer creates the
    credential definition with the required information like signature type, reference
    and tag from the device data schema and records it to the ledger. To keep track
    of revoked credentials, issuer publishes the revocation registry to the ledger.
    The revocation registry offers the value of cryptographic accumulator for verifying
    the revocation and provides URI and hash of associated tails file. The sequence
    of messages exchanged between IoT edge device and issuer(CloudAgent) during issuing
    and revoking device data credentials is depicted in the lower portion of Fig.
    2. The process of issuing the credentials commences with the credential offer
    made by issuer cloud agent with public DID called as IssuerCloudAgent(ICAgent)
    to IoT edge device called EdgeAgent(EAgent) requesting the credential. Based on
    the credential offer made by ICAgent, the EAgent generates blinded link secret
    and attaches it to request-credential message to prove the holder binding to credential
    to be issued. On receipt of request-credential message, the ICAgent retrieves
    required device attributes and attach it with credential definition to derive
    a device data credential and issue it to EAgent using issue-credential message.
    Now, the EAgent stores the received device data credential in its wallet and sends
    an acknowledgment to ICAgent. The process of issuing device data credential is
    detailed in the Algorithm 2. The steps required to revoke a credential is straightforward.
    Suppose, if any malicious or illegal use of device data credential is reported
    to the issuer, it revokes the credentials by changing the cryptographic accumulator
    value. Download : Download high-res image (693KB) Download : Download full-size
    image 4.2.4. Verifying device data credentials The verifier registers with an
    endorser role by publishing the public DID to the identity ledger. Fig. 3 shows
    a series of messages exchanged for verifying the device data credential. The set
    of attributes in the device data credential to be verified is decided based on
    the verifier’s requirements. A verifier cloud agent called VerifierCloudAgent(VCAgent)
    triggers the credential verification process by requesting the presentation of
    device data credential proof from EdgeAgent(EAgent) using request-sent message.
    On receiving a request, EAgent prepares a device data credential proof and sends
    it with presentation-sent message. The VCAgent verifies the presentation of proof
    with credential definition in blockchain and acknowledges the EAgent with presentation-ack
    message. The details of verifying device data credential is described in the Algorithm
    3. Download : Download high-res image (637KB) Download : Download full-size image
    Download : Download high-res image (368KB) Download : Download full-size image
    Fig. 3. Sequence diagram for verifying device data credentials. Download : Download
    high-res image (426KB) Download : Download full-size image Fig. 4. Sequence diagram
    for device data credential based data sharing. 4.2.5. Device data credential based
    data sharing This section demonstrates the data sharing scheme based on the verifiable
    credential (device data credential). The two most commonly used communication
    patterns in IoT devices, such as publish–subscribe and request–response are considered
    for data sharing. Fig. 5 shows the attributes used for creating the device data
    credential. The sequence diagram in Fig. 4 illustrates the messages exchanged
    when sharing the data from an edge device to a cloud. The mechanism of data sharing
    involves action between a DataProviderAgent(DPAgent) and cloud agent with public
    DID called as DataRequestorCloudAgent(DRCAgent) with identity blockchain and decentralized
    data storage as the underlying infrastructure. Initially, DRCAgent registers into
    a blockchain using a public DID and verifies the device data credential for a
    specific DPAgent using Algorithm 3. DRCAgent and DPAgent generate their respective
    public–private key pairs and mutually exchange their public key. Both the agents
    derive their shared key using the secret key of their own and the public key of
    the other communicating agent. This shared key is used for sensor data encryption.
    In the publish–subscribe pattern, a DPAgent takes the publisher’s role by creating
    a topic with the EdgeMessageBroker hosted within it. DRCAgent acts as a subscriber
    by enrolling in a published topic and connecting to EdgeMessageBroker. With the
    request–response pattern, a DPAgent and DRCAgent establish a request–response
    communication channel with the underlying DIDComm channel. The DRCAgent, as a
    requestor, makes a specific request for data from DPAgent, the responder. Based
    on the type of communication pattern the necessary steps followed for data sharing
    are detailed in the Algorithm 4. Download : Download high-res image (1MB) Download
    : Download full-size image Download : Download high-res image (243KB) Download
    : Download full-size image Fig. 5. Publish-subscribe and request-response attributes
    used for device data credentials. 4.3. Decentralized oracle based data access
    for agricultural production risk management Agricultural insurance is a financial
    instrument to cover farmers’ financial losses due to production risks related
    to weather, crop yield or soil conditions. In practice, most insurers conduct
    a risk assessment based on certain parameters like temperature, rainfall, humidity,
    crop yield and fix the threshold for indemnifying losses incurred by farmers.
    Specifically, smart contract-based insurance automates the claim settlement process
    on the occurrence of predefined events written in the insurance contract. However,
    claim processing requires real-time agricultural data for smart contracts in decision-making
    regarding the claim by a farmer. Hence, this section illustrates the mechanism
    for secure DID-VC verified IoT data access using decentralized oracle for smart
    contract-based production risk management. Fig. 6 depicts the sequence of messages
    exchanged between actors for agricultural production risk assessment. The mechanism
    for secure access of data from VerifiedDataNode(VDNode) involves the action among
    off-chain component named DecentralizedOracle(DEOVDNode), smart contracts called
    Oracle Contract(OracleContract) and RiskAssessmentInsurance Contract(RAIContract)
    respectively. The steps required for secure data access using decentralized oracle
    for a RAIContract is detailed in the Algorithm 5. The decentralized oracle works
    on the principle of secure multiparty computation where a risk parameter value
    read from a VDNode is divided into ‘n’ different secret shares and distributed
    among the peers of the DEOVDNode. OracleContract reconstructs the original value
    of requested parameter with a minimum threshold ‘t’ shares out of ‘n’ secret shares.
    The secret-sharing scheme helps preserve data privacy and security while accessing
    the data using DEOVDNode. Within the decentralized oracle, no peer reveals its
    share of data to others. However, they work together to achieve the goal of reconstructing
    the original data by combining their part of the data. Download : Download high-res
    image (633KB) Download : Download full-size image 5. Implementation and evaluation
    Download : Download high-res image (406KB) Download : Download full-size image
    Fig. 6. Sequence diagram for secure data access using decentralized oracle for
    agricultural production risk management. 5.1. Implementation details and results
    5.1.1. Experimental setup and implementation This section describes the experimental
    setup and implementation details of workflow required to achieve the objectives
    stated earlier. A permissioned identity blockchain named Hyperledger Indy is used
    to realize device data credential-based agricultural IoT data sharing. Using Indy
    blockchain as the base layer, a framework called Hyperledger Aries is used to
    program the algorithms required to establish secure DID channel, issue, revoke
    and verify device data credentials. A workstation is used for implementing the
    issuer and verifier cloud agents, whereas IoT edge agents are implemented with
    the help of Raspberry Pi devices. The decentralized data storage required for
    issuer and verifier cloud agents is implemented on Interplanetary File System
    (IPFS). A detailed description of device setup used in the experimentation is
    shown in Table 2. IoT edge agents are attached with Digital Humidity and Temperature
    11 (DHT 11), NPK, camera sensors to read the values of weather, soil and crop
    management features. The python packages for Message Queue Transport Telemetry
    (MQTT) and Constrained Application Protocol (CoAP) are installed to carry out
    the tasks related to publish–subscribe and request–response communication patterns.
    The decentralized oracle-based data access for agricultural production risk assessment
    is achieved with smart contracts written in Solidity deployed on a public blockchain
    called Ethereum. The off-chain decentralized oracle implementing a multiparty
    computation-based sharing scheme is coded with python scripts. The software frameworks,
    tools, and packages used in experiments are detailed in Table 3. DID channel creation,
    issuing, revoking and verifying device data credentials for authentication and
    data provenance during data sharing is implemented using AgriIoTDataShare workflow.
    Specifically, this workflow comprises an agent called agricultural device manufacturer(agridevcorp)
    issuing the device data credential to IoT edge device(edgedev001) agent verified
    by the government agricultural agency(agrigovtdept) agent before receiving data
    from edgedev001. The edgedev001 after the authentication shares the data with
    agrigovtdept using publish–subscribe(MQTT) or request–response(CoAP) communication
    patterns. The type, format and payload for data shared in production risk management
    during AgriIoTDataShare workflow are described in Table 4. The agricultural production
    risk management using decentralized oracle for data access is demonstrated with
    a smart contract-based insurance accessing the risk parameter values like temperature,
    rainfall, humidity, crop yield from verified data sources provided by agrigovtdept.
    Table 2. Description of device setup. Type of device Role of device Processor
    RAM Operating system Make and Model WorkStation Cloud Agent 64-bit 8 GB Ubuntu
    20.04 Lenovo V310z-All-in-One Raspberry Pi 1 Edge Agent 64-bit 4 GB Raspbian Raspberry
    Pi 4 Raspberry Pi 2 Edge Agent 64-bit 1 GB Raspbian Raspberry Pi 3B Raspberry
    Pi 3 Edge Agent 64-bit 1 GB Raspbian Raspberry Pi 3B Table 3. Details of software
    used in experiments. Software Description Software Description Hyperledger Indy-Von
    network (Governemnt of British Columbia, 2019) An Indy-based permissioned identity
    blockchain network running four validator nodes developed by BCgov is known as
    Von Network. Ethereum Ganache A simulated public blockchain network. Hyperledger
    Aries ACA-Py (Aries Community, 2020) A python-based library built on Aries framework
    for establishing DID- and VC-based peer to peer interactions between agents. MQTT
    Paho A python-based package for lightweight publish–subscribe communication from
    IoT devices. Interplanetary file system A decentralized file system for storing
    and accessing the data. CoAPthon3 (Tanganelli et al., 2015) A python-based package
    for constrained request–response communication from IoT devices. Docker engine
    A platform for deploying docker images and running the containerized applications.
    Solidity Programming language for coding smart contracts. Brownie A python-based
    blockchain development platform Hyperledger Caliper A framework for measuring
    performance of blockchain transactions. Table 4. Different types of data shared.
    Type of data Data format Payload Agricultural Data - Weather, Soil and Crop Management
    Structured[CSV files], Semi-Structured[JSON], Unstructured[Images] Variable payload
    [Depends upon IoT communication protocol] Credential Data Semi-Structured[JSON]
    bytes DID Document Data Semi-Structured[JSON] bytes 5.1.2. Results This section
    presents the results obtained from the AgriIoTDataShare workflow for trusted agricultural
    IoT data sharing and decentralized oracle-based data access for smart contracts
    in production risk assessment. The agridevcorp agent in AgriIoTDataShare workflow
    creates a device data schema and issues the device data credential to edgedev001,
    as shown in Fig. 7(a) and Fig. 7(b), respectively. The device data credential
    consists of attributes such as Label, FarmerName, FarmID, FarmLocation, ManufacturerID,
    DeviceID, PublishTopic, ResourcePath and IPAddress. Here the attributes required
    for publish–subscribe (PublishTopic,IPAddress) and request–response (ResourcePath,IPAddress)
    communication patterns are combined in a single credential. While verifying the
    device data credential, all the attributes are not requested from edgedev001.
    The edgedev001 is requested to produce the proof for holding value for attributes
    such as FarmerName, FarmID, FarmLocation, PublishTopic, ResourcePath and IPAddress.
    The results obtained upon verification of device data credentials by agrigovtdept
    is depicted in Fig. 7(c). In case the agridevcorp revokes the credentials, it
    issues a notification about revocation to edgedev001, as shown in Fig. 7(d). The
    smart contracts implemented for production risk assessment using decentralized
    oracle conducts transactions and calls for adding administrator, adding farmer
    to blockchain network, registering farmer to insurance, farmer generating claim
    request, sending data request to oracle and receiving the response from the oracle,
    processing the claim request. The transaction results obtained for key functionalities
    of risk assessment contract are shown in Fig. 8. Download : Download high-res
    image (1MB) Download : Download full-size image Fig. 7. Experimental results for
    device data credential issue, revoke and verify in AgriIoTDataShare workflow.
    Download : Download high-res image (997KB) Download : Download full-size image
    Fig. 8. Experimental results for smart contract functions performing agricultural
    risk assessment using decentralized oracle. 5.2. Performance evaluation 5.2.1.
    Identity blockchain transactions The Hyperledger Indy maintains three types of
    ledgers: config ledger, pool ledger and domain ledger monitored by audit ledger.
    A config ledger maintains the configuration information pertaining to network
    pool, node updation and authentication. At the same time, a pool ledger takes
    care of adding or deleting nodes in the network pool. Similarly, a domain ledger
    records application- and domain-specific transactions such as generating DIDs,
    rotating keys, publishing schema, credential definition, and revocation registry.
    In particular, for the AgriIoTDataShare workflow, we are interested in key transactions
    specific to domain ledger such as NYM, ATTRIB, SCHEMA, CRED_DEF. The NYM transaction
    generates a new DID and related record for adding a new user to the network with
    specific roles: steward, trustee, endorser or user. The input values, such as
    target DID, user role, and verification key, are required to conduct NYM transactions.
    ATTRIB transaction updates the fields of an existing DID record. The ATTRIB transaction
    expects target DID to be updated and raw or encrypted attributes’ hash value as
    input parameters. SCHEMA transaction defines a new schema with the required attributes
    for issuing the credential. Any party acting as the issuer can define the new
    schema with a schema name, version, and attribute name. The CRED_DEF transaction
    generates the credential definition by writing a primary claim public key (derived
    from ZKP-based signature scheme) to a particular schema. The issuer holding this
    verifiable definition can issue a credential to the required party. The CRED_DEF
    requires schema id, signature type, tag and primary claim public key of all attributes
    to conduct the transaction to the domain ledger. The AgriIoTDataShare workflow
    conducts a frequent NYM, ATTRIB, SCHEMA and CRED_DEF transactions for creating
    DIDs, issuing and verifying of device data credentials. The evaluation of these
    key transactions in indy ledger is done using transaction throughput time(TThroughputTime)
    and request latency(TReqLatency). The TThroughputTime of is defined as no of transaction
    requests processed in a given time period for which commit message has been obtained.
    The TReqLatency provides the time required to order transaction requests and reply
    back to the client. The experiment is conducted by incrementing transaction load
    from 50 to 400 to determine values for TThroughputTime and TReqLatency. The TThroughputTime
    and TReqLatency required for different number of NYM, ATTRIB, SCHEMA and CRED_DEF
    transactions are shown in Figs. 9(a)–9(b) respectively. With the increase in number
    of transactions, both TThroughputTime and TReqLatency for conducting key transactions
    increases linearly. It is observed that TThroughputTime and TReqLatency for CRED_DEF
    transaction is high, as it needs to generate primary claim public keys to sign
    different attributes of credential. The SCHEMA transaction requires low TThroughputTime
    and TReqLatency as it requires to add attribute names to schema. However, TThroughputTime
    and TReqLatency obtained for NYM and ATTRIB transaction falls within range of
    time required for SCHEMA and CRED_DEF. In addition, request latency varying in
    a range of 2.5 s to 3.6 s for a transaction load of 50 to 400, infers that identity
    blockchain transactions are scalable and can be extended to meet higher transaction
    loads. Download : Download high-res image (437KB) Download : Download full-size
    image Fig. 9. Throughput time and request latency for key identity blockchain
    transactions. 5.2.2. Issue-verify-revoke time for device data credentials The
    experiments are conducted to measure the time taken for issuing, verifying and
    revoking credentials to evaluate agents’ performance in AgriIoTDataShare workflow.
    The number of credentials input is varied from 50 to 450 in the incremental steps
    of 50. Fig. 10(a), Fig. 10(b), and Fig. 10(c) respectively depicts the minimum,
    average and maximum time taken for issuing, verifying and revoking device data
    credentials. It is observed that with the incremental credential input load, there
    is slight to moderate increase in the average time taken for issuing, verifying
    and revoking credentials. The average time for issuing device data credentials
    ranges between 0.2 s to 0.6 s per credential. It varies from 99 ms to 160 ms for
    credential verification and 2.9 s to 3.1 s for credential revocation. It is seen
    that the maximum time taken for issuing, verifying and revoking with varying credential
    input load is well within the acceptable limits of computation time. The average
    time taken to verify individual credentials is the lowest, whereas revoking the
    credential is the maximum. The time taken for issuing the credential lies between
    verification and revocation. From these observations, it can be summarized that
    agents deployed in the AgriIoTDataShare workflow are efficient and scalable in
    terms of time taken for issuing, verifying and revoking credentials. In addition,
    Table 5 presents the time taken for connecting two agents, time for public and
    private key generation, time duration for publish–subscribe, and request–response
    data sharing. Download : Download high-res image (560KB) Download : Download full-size
    image Fig. 10. Issue-verify-revoke time for device data credentials in AgriIoTDataShare
    workflow. Table 5. Details of time duration for various operations in AgriIoTDataShare
    workflow. Connect Duration Private/Public key generation time[Workstation] Private/Public
    key generation time[Raspberry Pi] Publish-Subscribe duration Request-Response
    duration 0.97 s 0.3259 ms 0.9593 ms 20.90 ms 7.3079 s 5.2.3. Resource utilization
    The resource utilization by agridevcorp, edgedev001 and agrigovtdept agents during
    AgriIoTDataShare workflow is presented in this section. The multiple metrics consisting
    of CPU utilization, memory consumed, network input, network output are considered
    for evaluation. Fig. 11, Fig. 11 present the results for CPU utilization and memory
    usage of agents during the workflow. The agridevcorp agent shows higher CPU and
    memory usage compared to edgedev001 and agrigovtdept, as it needs to conduct cryptographic
    operations for credential issuance. The credential holder edgedev001 utilizes
    around 3 to 10% of CPU time and consumes memory between 15 MB to 110 MB as part
    of the workflow. Despite edgedev001 being CPU and memory constrained, promising
    results are obtained, which is suitable for real-time deployment in agricultural
    IoT devices. Verifying credentials by agrigovtdept takes half the CPU time compared
    to agridevcorp and utilizes less memory than issuing the credential. The network
    input indicates the total number of bytes received by the agent, whereas network
    output shows the total number of bytes transmitted by the agent. The network input
    and output obtained by the respective agents during workflow is depicted in Fig.
    11, Fig. 11. The network input and output results indicate that the data received
    and transmitted by agridevcorp, edgedev001 and agrigovtdept agents are in the
    range of kilobytes. These results are encouraging and efficient regarding resource
    utilization metrics for AgriIoTDataShare workflow Download : Download high-res
    image (598KB) Download : Download full-size image Fig. 11. Resource utilization
    in AgriIoTDataShare workflow. 5.2.4. Decentralized oracle for agricultural production
    risk management In this section, evaluation is performed for decentralized oracle
    and agriculture insurance smart contract functions deployed on the Ethereum blockchain.
    The performance metrics such as transaction throughput (TThroughput) and average
    transaction latency(TAvgLatency) is considered to determine the scalability of
    the developed decentralized oracle mechanism. TThroughput measures the rate at
    which the system commits valid transactions to the blockchain in a given time
    interval represented as Transactions Per Second(TPS). TAvgLatency is the time
    interval between the transaction being sent and confirmation received for the
    same. The Hyperledger Caliper is used to measure the transaction throughput and
    latency. In Caliper, the smart contract functions namely registerFarmerToInsurance(),
    farmerClaimRequest(), sendRequestToOracle(), receiveRepsonseOracle() that generates
    transactions to blockchain are organized in the form of rounds for testing. The
    evaluation is conducted by varying the number of transactions from 100 to 450
    fixedly with a transaction send rate of 50 in the Ethereum simulation environment
    (Ganache) and the Ethereum testnet (Ropsten). The TAvgLatency and TThroughput
    obtained for the Ganache network are depicted in 12(a) and 12(b), respectively.
    Similarly, the results obtained for the Ropsten network are presented using 12(c)
    and 12(d), respectively. In both Ganache and Ropsten networks, the average latency
    increases with the number of input transactions. The receiveRepsonseOracle() transaction
    shows higher average latency and lower throughput than other transactions in Ganache
    and Ropsten networks. This behavior of higher delay and low throughput in receiveRepsonseOracle()
    transaction is observed due to the off-chain decentralized oracle component involved
    in securely accessing the data to smart contracts. In the Ropsten network, there
    is a slight decrease in TAvgLatency for sendRequestOracle() transaction for some
    instances of higher transaction loads(300,350) compared to lower transaction loads(200,250).
    This behavior is observed due to delays in submitting the transactions to Ropsten
    network due to communication overhead or network delays. The TThroughput for most
    transactions initiated by four smart contract functions falls between 0.5 TPS
    to 1.5 TPS. This justifies that the proposed mechanism for data access using decentralized
    oracle is well suited to be implemented in real-world scenarios. The gas value
    is the computational effort required to perform Ethereum blockchain transactions.
    The gas consumed by the various functions of smart contracts is detailed in Table
    6. Download : Download high-res image (1MB) Download : Download full-size image
    Fig. 12. Average latency and throughput for smart contract functions performing
    agricultural risk assessment using decentralized oracle. Table 6. Gas consumption
    details for smart contract functions performing agricultural risk assessment using
    decentralized oracle. Transaction name Gas consumed Transaction name Gas consumed
    addAdmin() 53368 sendRequestToOracle() 89203 addFarmer() 72490 receiveOracleResponse()
    58922 addUnderWritingDetails() 188093 addOracle() 70146 registerFarmerToInsurance()
    205884 activateOracle() 38887 farmerClaimRequest() 64566 getValueFromOracle()
    23868 5.3. Security and privacy analysis This section analyzes the security and
    privacy of the AgriSSIOracle framework using the properties of the DIDs and VCs.
    The analysis provides insights on how the proposed solution prevents security
    attacks and privacy breaches during agricultural IoT data sharing and its subsequent
    access by smart contracts with oracle. • Correlation Attack: The use of common
    identifiers issued by centralized authorities across multiple systems leads to
    correlation problems. Correlation means associating identity with multiple systems
    without any consent from identity owners. Eventually, the widespread proliferation
    of correlation between various systems leads to privacy loss and a breach of trust.
    As DIDs are decentralized, user-controlled, and transparent, their use in agricultural
    IoT devices avoids unwanted associations with multiple systems. The trust triangle
    of issue-hold-verify created by verifiable credentials for data sharing in agricultural
    IoT devices is non-correlatable. The non-correlating signature used in the credential
    prevents the correlation of the issuer with the holder by the verifier. The signature
    of the issuer is blinded as it is sufficient to share proof of the issuer’s signature
    by the holder to the verifier. These DIDs’ and VCs’ features help prevent correlation-related
    vulnerabilities in data sharing IoT devices. • Data Minimization: Currently, agricultural
    IoT devices provide more device identifiable information than required when sharing
    data. This undesired collection and storage of device information result in a
    privacy violation of agricultural data owners. Data minimization refers to IoT
    devices that share a minimal amount of device identifiable information for a defined
    purpose. The DIDs used in IoT devices only share the information required for
    the context of authentication. Further, when the issuer generates VCs in the form
    of device data credentials, it comes with a choice of no disclosure or the selective
    disclosure of attributes to the verifier. The VCs also provide the option to generate
    predicate proofs or compound proofs from the credential without revealing the
    actual attribute value. Minimum disclosure of a device identity for data provenance
    helps the oracle nodes collect farm data from IoT devices in a verifiable way.
    The presence of multiparty computation-based decentralized oracle for insurance
    contracts preserves privacy by producing final results without revealing the inputs
    to its nodes. • Sybil Attack: The use of common identifiers for agricultural IoT
    devices in a blockchain network allows any malicious actor to create fake identities
    and impersonate the role of others. A malicious device sharing agricultural data
    in the guise of a genuine device has an adverse influence on decision-making.
    However, having DIDs in place for IoT devices makes them Sybil-resistant. Specifically,
    IoT devices use peer DIDs to establish a private contextual connection with public
    data collection entities, which cannot be reused or duplicated by malicious devices.
    Device data credentials are anchored to the specific holder with the help of blinded
    link secrets. So, any malicious actor trying to fake or forge credentials on behalf
    of other identities is completely ruled out. • Message Replay Attack: In message
    replay attacks, adversaries intercept messages exchanged between two agents and
    transmit them to the receiving agent. Only the stewards can write transactions
    into the blockchain ledger when the DIDs and device data credentials are used
    for authentication and data provenance. Hence, any attempt by the attacking adversaries
    to replay transactions into the ledger is thwarted. In addition, all transactions
    have signatures and timestamps, which are difficult for attackers to replicate.
    • Man-in-the-Middle Attack: If the IoT devices communicating with the issuer or
    verifier are not mutually authenticated, then the adversary acting as a middleman
    tries to attack the communicating parties by establishing independent connections
    separately with them. The DID and VC-based solutions for IoT data sharing are
    not vulnerable to man-in-the-middle attacks as both agents involved in message
    exchange are mutually verified using digital signatures. If the attacker tries
    to produce a forged device data credential, it will not be successful as the link
    secret of the holder anchored by the issuer will be missing. • Substitution Attack:
    In substitution attacks, an adversary tries to intercept and manipulate original
    messages intended for the receiver. However, DID and VC-based authentication are
    non-vulnerable to substitution attacks as the hash of the message is generated
    and signed by the sending agent. The receiving agent checks for the message integrity
    with hash values. In addition, all transactions written into the identity blockchain
    ledger are appended with a hash value. 6. Conclusion and future work Trustworthy
    agricultural data sharing and its access for risk assessment are prominent in
    mitigating agrarian risks. This work proposed and realized the implementation
    of the AgriSSIOracle framework to address the trust concerns in data sharing and
    its access. A trusted data sharing method based on the publish-subscribe and request-response
    is developed by integrating SSI-based DIDs with device data credentials. Further,
    the implementation of decentralized oracle-based data access mechanism for smart
    contract-based agricultural insurance increases transparency and speeds up claim
    settlements. Detailed algorithms and sequence diagrams are presented to better
    understand implemented methods. The entire process of issue-hold-verify of device
    data credentials, as demonstrated using the AgriIoTDataShare workflow offers universal
    proof of trust for shared agricultural data. Moreover, the performance evaluation
    shows that the solution implemented through AgriSSIOracle is reliable and can
    be flexibly extended to existing scenarios in agricultural information systems.
    The detailed security and privacy analysis show how the framework leverages the
    essential trust factors. Thus, this work provides a good foundation for the synergy
    of blockchain-based identity and credential systems with IoT for trusted agricultural
    data sharing and access by reducing information asymmetry. For future work, we
    are interested in extending decentralized identity and credentials for numerous
    processes in agricultural supply chains. In addition, the focus will be on adopting
    the JSON-LD credential format for better interoperability. CRediT authorship contribution
    statement Manoj T.: Conceptualization, Formal analysis, Investigation, Methodology,
    Software, Validation, Visualization, Writing – original draft. Krishnamoorthi
    Makkithaya: Investigation, Methodology, Resources, Supervision, Validation, Writing
    – review & editing. Narendra V.G.: Methodology, Resources, Supervision, Validation,
    Writing – review & editing. Declaration of Competing Interest The authors declare
    that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. Data availability
    No data was used for the research described in the article. References Abraham
    and Santosh Kumar, 2020 Abraham A., Santosh Kumar M.B. A study on using private-permissioned
    blockchain for securely sharing farmers data 2020 Advanced Computing and Communication
    Technologies for High Performance Applications, ACCTHPA (2020), pp. 103-106, 10.1109/ACCTHPA49271.2020.9213237
    View in ScopusGoogle Scholar Adler et al., 2018 Adler J., Berryhill R., Veneris
    A., Poulos Z., Veira N., Kastania A. Astraea: A decentralized blockchain oracle
    2018 IEEE International Conference on Internet of Things (IThings) and IEEE Green
    Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing
    (CPSCom) and IEEE Smart Data (SmartData) (2018), pp. 1145-1152, 10.1109/Cybermatics_2018.2018.00207
    View in ScopusGoogle Scholar Al Breiki et al., 2019 Al Breiki H., Al Qassem L.,
    Salah K., Habib Ur Rehman M., Sevtinovic D. Decentralized access control for IoT
    data using blockchain and trusted oracles 2019 IEEE International Conference on
    Industrial Internet, ICII (2019), pp. 248-257, 10.1109/ICII.2019.00051 View in
    ScopusGoogle Scholar Al-Breiki et al., 2020 Al-Breiki H., Rehman M.H.U., Salah
    K., Svetinovic D. Trustworthy blockchain oracles: Review, comparison, and open
    research challenges IEEE Access, 8 (2020), pp. 85675-85685, 10.1109/ACCESS.2020.2992698
    View in ScopusGoogle Scholar Anandhi et al., 2016 Anandhi A., Steiner J.L., Bailey
    N. A system’s approach to assess the exposure of agricultural production to climate
    change and variability Clim. Change, 136 (3) (2016), pp. 647-659, 10.1007/s10584-016-1636-y
    View in ScopusGoogle Scholar Aries Community, 2020 Aries Community A. Hyperledger
    aries CloudAgent Python (2020) URL: https://github.com/hyperledger/aries-cloudagent-python.
    (Accessed 20 April 2022) Google Scholar Band Protocol, 2019 Band Protocol A. BandChain
    Whitepaper (2019) URL: https://docs.bandchain.org/whitepaper/ (accessed:17.03.2022)
    Google Scholar Byabazaire et al., 2020 Byabazaire J., O’Hare G., Delaney D. Data
    quality and trust: Review of challenges and opportunities for data sharing in
    IoT Electronics, 9 (12) (2020), 10.3390/electronics9122083 URL: https://www.mdpi.com/2079-9292/9/12/2083
    Google Scholar Dey and Shekhawat, 2021 Dey K., Shekhawat U. Blockchain for sustainable
    e-agriculture: Literature review, architecture for data management, and implications
    J. Clean. Prod., 316 (2021), Article 128254, 10.1016/j.jclepro.2021.128254 URL:
    https://www.sciencedirect.com/science/article/pii/S0959652621024707 View PDFView
    articleView in ScopusGoogle Scholar Diego et al., 2021 Diego S.d., Regueiro C.,
    Maciá-Fernández G. Enabling identity for the IoT-as-a-service business model IEEE
    Access, 9 (2021), pp. 159965-159975, 10.1109/ACCESS.2021.3131012 Google Scholar
    Duong et al., 2019 Duong T.T., Brewer T., Luck J., Zander K. A global review of
    farmer’s perceptions of agricultural risks and risk management strategies Agriculture,
    9 (2019), 10.3390/agriculture9010010 URL: https://www.mdpi.com/2077-0472/9/1/10#
    Google Scholar Ellis et al., 2017 Ellis S., Nazarov S., Juels A. ChainLink:A decentralized
    oracle network (2017) URL: https://chain.link/whitepaper Google Scholar Fan et
    al., 2020 Fan X., Chai Q., Xu L., Guo D. DIAM-IoT: A decentralized identity and
    access management framework for internet of things BSCI 2020 - Proceedings of
    the 2nd ACM International Symposium on Blockchain and Secure Critical Infrastructure,
    Co-Located with AsiaCCS 2020 (2020), pp. 186-191, 10.1145/3384943.3409436 View
    in ScopusGoogle Scholar Ferrag et al., 2020 Ferrag M.A., Shu L., Yang X., Derhab
    A., Maglaras L. Security and privacy for green IoT-based agriculture: Review,
    blockchain solutions, and challenges IEEE Access, 8 (2020), pp. 32031-32053, 10.1109/ACCESS.2020.2973178
    View in ScopusGoogle Scholar Food and Agriculture Organization, 2016 Food M.A.,
    Agriculture Organization L. Increasing the resilience of agricultural livelihoods
    (2016) URL: http://www.fao.org/3/a-i5615e.pdf Google Scholar Food and Agriculture
    Organization, 2019 Food M.A., Agriculture Organization L. E-agriculture in action:
    Blockchain for argiculture opportunities and challenges (2019) URL: http://www.fao.org/3/CA2906EN/ca2906en.pdf
    Google Scholar GDPR European Union, 2018 GDPR European Union M.A. General data
    protection regulation (2018) URL: https://gdpr-info.eu/. (Accessed 17 March 2022)
    Google Scholar Governemnt of British Columbia, 2019 Governemnt of British Columbia
    M.A. Verifiable organizations network (2019) URL: https://github.com/bcgov/von-network.
    (Accessed 26 March 2022) Google Scholar Gupta, 2022 Gupta V. A year of extreme
    weather events has weighed heavy on India’s agricultural sector (2022) URL: https://india.mongabay.com/2022/11/in-india-climate-impact-on-agriculture-is-already-a-reality-now/.
    (Accessed 11 November 2022) Google Scholar Hughes et al., 2019 Hughes A., Sporny
    M., Reed D. A primer for decentralized identifiers-an introduction to self-administered
    identifiers for curious people.(W3C credentials community group) (2019) URL: https://w3c-ccg.github.io/did-primer/.
    (Accessed 17 March 2022) Google Scholar Jha et al., 2018 Jha S., Andre B., Jha
    O. ARBOL: Smart contract weather risk protection for agriculture (2018) URL: https://www.arbolmarket.com/wp-content/uploads/2019/02/ARBOL_WP-3.pdf
    Google Scholar Khalid et al., 2020 Khalid U., Asim M., Baker T., Hung P., Tariq
    M., Rafferty L. A decentralized lightweight blockchain-based authentication mechanism
    for IoT systems Cluster Comput., 23 (3) (2020), pp. 2067-2087, 10.1007/s10586-020-03058-6
    View in ScopusGoogle Scholar Kochovski et al., 2019 Kochovski P., Gec S., Stankovski
    V., Bajec M., Drobintsev P. Trust management in a blockchain based fog computing
    platform with trustless smart oracles Future Gener. Comput. Syst., 101 (2019),
    pp. 747-759, 10.1016/j.future.2019.07.030 View PDFView articleView in ScopusGoogle
    Scholar Komarek et al., 2020 Komarek A.M., De Pinto A., Smith V.H. A review of
    types of risks in agriculture: What we know and what we need to know Agric. Syst.,
    178 (2020), Article 102738, 10.1016/j.agsy.2019.102738 View PDFView articleView
    in ScopusGoogle Scholar Kortesniemi et al., 2019 Kortesniemi Y., Lagutin D., Elo
    T., Fotiou N. Improving the privacy of IoT with decentralised identifiers (DIDs)
    J. Comput. Netw. Commun., 2019 (2019), pp. 8706760:1-8706760:10, 10.1155/2019/8706760
    Google Scholar Kumar and Sharma, 2021 Kumar R., Sharma R. Leveraging blockchain
    for ensuring trust in IoT: A survey J. King Saud Univ. Comput. Inform. Sci. (2021),
    10.1016/j.jksuci.2021.09.004 Google Scholar Lu et al., 2020 Lu S., Wang X., Zheng
    J. Research on agricultural internet of things data sharing system based on blockchain
    2020 35th Youth Academic Annual Conference of Chinese Association of Automation,
    YAC (2020), pp. 221-225, 10.1109/YAC51587.2020.9337608 View in ScopusGoogle Scholar
    Malik et al., 2019 Malik S., Dedeoglu V., Kanhere S.S., Jurdak R. TrustChain:
    Trust management in blockchain and IoT supported supply chains 2019 IEEE International
    Conference on Blockchain, Blockchain (2019), pp. 184-193, 10.1109/Blockchain.2019.00032
    View in ScopusGoogle Scholar Malik et al., 2021 Malik S., Gupta N., Dedeoglu V.,
    Kanhere S.S., Jurdak R. Tradechain: Decoupling traceability and identity inblockchain
    enabled supply chains (2021) arXiv preprint arXiv:2105.11217. http://dx.doi.org/10.48550/arXiv.2105.11217
    Google Scholar Ministry of Agriculture & Farmers Welfare, 2021 Ministry of Agriculture
    & Farmers Welfare S. Contribution of agriculture sector towards GDP (2021) URL:
    https://www.pib.gov.in/PressReleasePage.aspx?PRID=1741942. (Accessed 17 March
    2022) Google Scholar Moudoud et al., 2019 Moudoud H., Cherkaoui S., Khoukhi L.
    An IoT blockchain architecture using oracles and smart contracts: the use-case
    of a food supply chain 2019 IEEE 30th Annual International Symposium on Personal,
    Indoor and Mobile Radio Communications, PIMRC (2019), pp. 1-6, 10.1109/PIMRC.2019.8904404
    Google Scholar Mussenbrock et al., 2018 Mussenbrock C., Karpischek S., Khasanshyn
    R. Etherisc decentralized insurance (2018) URL: https://uploads-ssl.webflow.com/6243075ff83d08a79dc7b307/624edb8ad39af33432e9c472_what_is_etherisc_1.0_en.pdf.
    (Accessed 25 March 2022) Google Scholar Niavis et al., 2020 Niavis H., Papadis
    N., Reddy V., Rao H., Tassiulas L. A blockchain-based decentralized data sharing
    infrastructure for off-grid networking 2020 IEEE International Conference on Blockchain
    and Cryptocurrency, ICBC (2020), pp. 1-5, 10.1109/ICBC48266.2020.9169441 Google
    Scholar Patel and Shrimali, 2021 Patel H., Shrimali B. AgriOnBlock: Secured data
    harvesting for agriculture sector using blockchain technology ICT Express (2021),
    10.1016/j.icte.2021.07.003 URL: https://www.sciencedirect.com/science/article/pii/S2405959521000862
    Google Scholar Preukschat and Hardman, 2021 Preukschat A., Hardman D. Why the
    internet is missing an identity layer—and why SSI can finally provide one Self-Sovereign
    Identity : Decentralized Digital Identity and Verifiable Credentials, Manning
    Publications (2021), pp. 3-20 Google Scholar Provable, 2019 Provable A. Provable
    documentation (2019) URL: https://docs.provable.xyz/. (Accessed 17 March 2022)
    Google Scholar Rahman et al., 2020 Rahman M.U., Baiardi F., Ricci L. Blockchain
    smart contract for scalable data sharing in IoT: A case study of smart agriculture
    2020 IEEE Global Conference on Artificial Intelligence and Internet of Things,
    GCAIoT (2020), pp. 1-7, 10.1109/GCAIoT51063.2020.9345874 View in ScopusGoogle
    Scholar Ren et al., 2021 Ren Q., Liu H., Li Y., Lei H., Wang L., Chen B. CLOAK:
    towards practical development and deployment of confidential smart contracts (2021)
    CoRR. arXiv:2106.13926 Google Scholar Samir et al., 2021 Samir E., Wu H., Azab
    M., Xin C., Zhang Q. DT-SSIM: A decentralized trustworthy self-sovereign identity
    management framework IEEE Internet Things J. (2021), 10.1109/JIOT.2021.3112537
    Google Scholar Shi et al., 2019 Shi P., Wang H., Yang S., Chen C., Yang W. Blockchain-based
    trusted data sharing among trusted stakeholders in IoT Softw. - Pract. Exp. (2019),
    10.1002/spe.2739 Google Scholar Singh et al., 2021 Singh P., Masud M., Hossain
    M.S., Kaur A. Cross-domain secure data sharing using blockchain for industrial
    IoT J. Parallel Distrib. Comput., 156 (2021), pp. 176-184, 10.1016/j.jpdc.2021.05.007
    View PDFView articleView in ScopusGoogle Scholar Soyka et al., 2016 Soyka D.M.,
    Liang F.Y., Patankar M.N., Van S. Big data approaches to crop insurance in Asia
    (2016) URL: https://agroinsurance.com/wp-content/uploads/2019/08/Risk_Dialogue_Series_Agro.pdf
    Google Scholar Sporny et al., 2019 Sporny M., Longley D., Chadwick D. Verifiable
    credentials data model 1.0: Expressing verifiable information on the web (2019)
    URL: https://www.w3.org/TR/vc-data-model/#what-is-a-verifiable-credential. (Accessed
    17 March 2022) Google Scholar Tanganelli et al., 2015 Tanganelli G., Vallati C.,
    Mingozzi E. CoAPthon: Easy development of CoAP-based IoT applications with Python
    2015 IEEE 2nd World Forum on Internet of Things, WF-IoT (2015), pp. 63-68, 10.1109/WF-IoT.2015.7389028
    View in ScopusGoogle Scholar The Sovrin Foundation, 2020 The Sovrin Foundation
    G. Self-sovereign identity and IoT (2020) URL: https://sovrin.org/wp-content/uploads/SSI-in-IoT-whitepaper_Sovrin-design.pdf.
    (Accessed 24 March 2022) Google Scholar United Nations Organization, 2019 United
    Nations Organization G. UN sustainable development goals (2019) URL: https://www.un.org/sustainabledevelopment/hunger/.
    (Accessed 17 March 2022) Google Scholar van der Burg et al., 2020 van der Burg
    S., Wiseman L., Krkeljas J. Trust in farm data sharing: reflections on the EU
    code of conduct for agricultural data sharing Ethics Inf. Technol. (2020), 10.1007/s10676-020-09543-1
    Google Scholar Wilkinson et al., 2016 Wilkinson M., Dumontier M., Aalbersberg
    I., Appleton G., Axton M., Baak A. Comment: The FAIR guiding principles for scientific
    data management and stewardship Sci. Data, 3 (2016), 10.1038/sdata.2016.18 Google
    Scholar World Bank, 2018 World Bank M. Agriculture and food (2018) URL: https://www.worldbank.org/en/topic/agriculture/overview#.
    (Accessed 17 March 2022) Google Scholar World Meteorological Organization, 2022
    World Meteorological Organization M. Eight warmest years on record witness upsurge
    in climate change impacts (2022) URL: https://public.wmo.int/en/media/press-release/eight-warmest-years-record-witness-upsurge-climate-change-impacts.
    (Accessed 11 November 2022) Google Scholar Yan et al., 2014 Yan Z., Zhang P.,
    Vasilakos A.V. A survey on trust management for internet of things J. Netw. Comput.
    Appl., 42 (2014), pp. 120-134, 10.1016/j.jnca.2014.01.014 URL: https://www.sciencedirect.com/science/article/pii/S1084804514000575
    View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2016 Zhang F.,
    Cecchetti E., Croman K., Juels A., Shi E. Town crier: An authenticated data feed
    for smart contracts Proceedings of the ACM Conference on Computer and Communications
    Security, Association for Computing Machinery (2016), pp. 270-282, 10.1145/2976749.2978326
    View in ScopusGoogle Scholar Zhang et al., 2020 Zhang F., Maram D., Malvai H.,
    Goldfeder S., Juels A. DECO: Liberating web data using decentralized oracles for
    TLS Proceedings of the ACM Conference on Computer and Communications Security,
    Association for Computing Machinery (2020), pp. 1919-1938, 10.1145/3372297.3417239
    View in ScopusGoogle Scholar Zhu and Li, 2021 Zhu L., Li F. Agricultural data
    sharing and sustainable development of ecosystem based on block chain J. Clean.
    Prod., 315 (2021), Article 127869, 10.1016/j.jclepro.2021.127869 View PDFView
    articleView in ScopusGoogle Scholar Zundel and Zouarhi, 2021 Zundel B., Zouarhi
    S. Basic cryptography techniques for SSI Self-Sovereign Identity : Decentralized
    Digital Identity and Verifiable Credentials, Manning Publications (2021), pp.
    111-125 Google Scholar Cited by (12) A Survey on Decentralized Identifiers and
    Verifiable Credentials 2024, arXiv Persona preserving reputation protocol (P2RP)
    for enhanced security, privacy, and trust in blockchain oracles 2024, Cluster
    Computing A Systematic Literature Review of Blockchain Technology: Applications
    Fields, Platforms, and Consensus Protocols 2023, ACM International Conference
    Proceeding Series LEI: Livestock Event Information Schema for Enabling Data Sharing
    2023, SSRN A Trustworthy and Consistent Blockchain Oracle Scheme for Industrial
    Internet of Things 2023, arXiv A Distributed Efficient Blockchain Oracle Scheme
    for Internet of Things 2023, arXiv View all citing articles on Scopus View Abstract
    © 2022 Elsevier B.V. All rights reserved. Recommended articles A double-blockchain
    solution for agricultural sampled data security in Internet of Things network
    Future Generation Computer Systems, Volume 117, 2021, pp. 453-461 Wei Ren, …,
    Pengcheng Gan View PDF uBaaS: A unified blockchain as a service platform Future
    Generation Computer Systems, Volume 101, 2019, pp. 564-575 Qinghua Lu, …, Weishan
    Zhang View PDF Reliability analysis for blockchain oracles Computers & Electrical
    Engineering, Volume 83, 2020, Article 106582 Sin Kuang Lo, …, Lina Yao View PDF
    Show 3 more articles Article Metrics Citations Citation Indexes: 6 Captures Readers:
    79 Social Media Shares, Likes & Comments: 64 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A trusted IoT data sharing and secure oracle based access for agricultural
    production risk management
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Tosida E.T.
  - Herdiyeni Y.
  - 'Marimin '
  - Suprehatin S.
  citation_count: '2'
  description: 'Smart villages have become a concern for governments, private sectors
    and Non-Governmental Organizations (NGOs) in various countries as a solution in
    overcoming poverty. This research is focus on strengthening the Information and
    Communication Technology (ICT) level, especially the concept of agriculture big
    data analytic (ABDA)-based smart villages. Systematic Literature Review (SLR)
    of ABDA-based smart villages is carried out through descriptive analysis (single
    and cross attributes as well as a hierarchy of attributes and research domains)
    and cluster analysis (word frequency analysis) using NVivo 12 Plus software. SLR
    is not only carried out on smart village papers but including the cluster analysis
    integrated with documents related to citizen science. Most of the previous authors
    applied model or concept construction method, but there is lack of implementation
    and comprehensive analysis of the smart village system. The previous articles
    were dominated by automation and big data analytic (BDA) for Climate Smart Agriculture
    (CSA), but lack of application about ABDA post-harvest activities. The contribution
    of this research showed the confirmation of the structure of the smart village
    success variables (technology, community, resources, and services/sustainability)
    and seven future research agendas of smart village based on ABDA. The seven smart
    village future research agendas are: Decision Support System-Geographic Information
    System (DSS-GIS) based smart governance; ABDA-based smart economy; BDA-based smart
    mobility; BDA-based smart environment; smart people based on non-formal e-learning
    education, simulation, Augmented Reality (AR), Virtual Reality (VR) and Mix Reality
    (MR); DSS-GIS-IoT based smart living and DSS-GIS-based smart tourism.'
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: International Journal of Agricultural and Statistical Sciences
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'SMART VILLAGE BASED ON AGRICULTURE BIG DATA ANALYTIC: REVIEW AND FUTURE
    RESEARCH AGENDA'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kantsedal N.
  - Ponomarenko O.
  citation_count: '0'
  description: Institutional nature of using digital techniques in modern agrarian
    production was studied in this article. As a result, the approach illustrating
    the synergy of economic, ecological, and social effectiveness as a progressive
    direction of global economic system's development was worked out. The general
    model of a new informational paradigm of agricultural activities' organization
    based on the agility of knowledge and analytical data transferring into value
    information was determined. The model of institutional interaction of information
    agents in agricultural production was constructed. The model's aim is based on
    the principle "lose less and feed more" and presupposes multiagent interaction
    of primary information sources (agricultural enterprises) with data bases of public
    unions (their activi ties are directed at solving the problems of agriculture
    and the environment) and government bodies, which make strategic managerial decisions
    based on macro economic indicators. At the empirical stage, the design of the
    process of solving individual account ing problems or their complexes can be used
    in multiagent information systems (artificial intelligence and the Internet of
    Things) to obtain relevant information about specific objects of agricultural
    production. In particular, the accounting tasks of GMO objects were decided on
    the basis of open data, design documents and standard design solutions, which
    can be the basis for further development of functional application packages.
  doi: 10.1002/9781119823469.ch13
  full_citation: '>'
  full_text: '>

    "UNCL: University Of Nebraska - Linc Acquisitions Accounting Search within Login
    / Register The Digital Agricultural Revolution: Innovations and Challenges in
    Agriculture through Technology Disruptions Chapter 13 Full Access Institutional
    Model of Integrating Agricultural Production Technologies with Accounting and
    Information Systems Nataliya Kantsedal,  Oksana Ponomarenko Book Editor(s):Roheet
    Bhatnagar,  Nitin Kumar Tripathi,  Nitu Bhatnagar,  Chandan Kumar Panda First
    published: 13 May 2022 https://doi.org/10.1002/9781119823469.ch13 PDF TOOLS SHARE
    Summary Institutional nature of using digital techniques in modern agrarian production
    was studied in this article. As a result, the approach illustrating the synergy
    of economic, ecological, and social effectiveness as a progressive direction of
    global economic system''s development was worked out. The general model of a new
    informational paradigm of agricultural activities’ organization based on the agility
    of knowledge and analytical data transferring into value information was determined.
    The model of institutional interaction of information agents in agricultural production
    was constructed. The model''s aim is based on the principle “lose less and feed
    more” and presupposes multiagent interaction of primary information sources (agricultural
    enterprises) with data bases of public unions (their activities are directed at
    solving the problems of agriculture and the environment) and government bodies,
    which make strategic managerial decisions based on macroeconomic indicators. At
    the empirical stage, the design of the process of solving individual accounting
    problems or their complexes can be used in multiagent information systems (artificial
    intelligence and the Internet of Things) to obtain relevant information about
    specific objects of agricultural production. In particular, the accounting tasks
    of GMO objects were decided on the basis of open data, design documents and standard
    design solutions, which can be the basis for further development of functional
    application packages. References The Digital Agricultural Revolution: Innovations
    and Challenges in Agriculture through Technology Disruptions References Related
    Information Recommended Accounting for Leases GAAP for Governments 2014: Interpretation
    and Application of GENERALLY ACCEPTED ACCOUNTING PRINCIPLES for State and Local
    Governments, [1] BASIC REAL ESTATE ACCOUNTING Real Estate Accounting Made Easy,
    [1] Accounting for Pensions and Other Postemployment Benefits Governmental Accounting
    Made Easy, [1] Scope and Recent Trends of Artificial Intelligence in Indian Agriculture
    X. Anitha Mary,  Vladimir Popov,  Kumudha Raimond,  I. Johnson,  S.J. Vijay The
    Digital Agricultural Revolution: Innovations and Challenges in Agriculture through
    Technology Disruptions, [1] Interactions Between Farm Managers and Information
    Systems with Respect to Yield Mapping G. Larscheid,  B.S. Blackmore Proceedings
    of the Third International Conference on Precision Agriculture, [1] Additional
    links ABOUT WILEY ONLINE LIBRARY Privacy Policy Terms of Use About Cookies Manage
    Cookies Accessibility Wiley Research DE&I Statement and Publishing Policies Developing
    World Access HELP & SUPPORT Contact Us Training and Support DMCA & Reporting Piracy
    OPPORTUNITIES Subscription Agents Advertisers & Corporate Partners CONNECT WITH
    WILEY The Wiley Network Wiley Press Room Copyright © 1999-2024 John Wiley & Sons,
    Inc or related companies. All rights reserved, including rights for text and data
    mining and training of artificial technologies or similar technologies."'
  inline_citation: '>'
  journal: 'The Digital Agricultural Revolution: Innovations and Challenges in Agriculture
    through Technology Disruptions'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Institutional model of integrating agricultural production technologies with
    accounting and information systems
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Charibaldi N.
  - Saidi D.
  - Kodong F.R.
  citation_count: '2'
  description: 'The utilization of information and communication technology, especially
    the Internet of Things (IoT) can use sensors (along with the application interface).
    Sensors are able to measure features in the soil at any time such as pH, humidity
    and nutrients. Measurements can be made at any time, meaning the sensor is also
    able to monitor changes in the value of these features. This study aims to implement
    an Internet of Things (IoT) Information System to measure and monitor humidity,
    pH, and NPK levels in Regosol soil planted with mustard greens with capillary
    irrigation and liquid organic fertilizer. This study used a completely randomized
    design with two factors, namely the type of liquid organic fertilizer and the
    number of capillary irrigation wicks. The first factor consists of 4 levels: P0:
    No liquid organic fertilizer, P1: 5 liters/ha Liquid organic fertilizer from household
    waste, P2: 5 liters/ha Liquid organic fertilizer from Biduri leaves, P3 : 300
    kg/ha NPK fertilizer. The second factor consists of 3 levels: I0: No capillary
    irrigation, I1: Capillary irrigation with 1 wick, I2: Capillary irrigation with
    2 wicks. The results showed that the soil moisture during the growth of mustard
    greens was 16.59% to 23.48%, the more capillary wick, the higher the soil moisture,
    the average water requirement for mustard plant growth was 3.16 liters. The application
    of liquid organic fertilizer has a significant effect on soil pH and soil NPK
    levels. Capillary irrigation had a significant effect on soil pH, but had no significant
    effect on soil NPK levels.'
  doi: 10.1088/1755-1315/1018/1/012006
  full_citation: '>'
  full_text: '>

    "We value your privacy Clicking the \"Accept All\" button means you are accepting
    analytics and third-party cookies. We use cookies to optimise site functionality
    and give you the best possible experience. To control which cookies are set, click
    \"Customize\". Privacy and Cookies policy Customize Accept All Skip to content
    IOP Science home Accessibility Help Search Journals Books Publishing Support Login
    IOP Conference Series: Earth and Environmental Science PAPER • THE FOLLOWING ARTICLE
    IS OPEN ACCESS Precision Agriculture Using Internet Of Thingsin Regosol Soil N
    Charibaldi1, D Saidi2 and F R Kodong1 Published under licence by IOP Publishing
    Ltd IOP Conference Series: Earth and Environmental Science, Volume 1018, 1st International
    Conference on Agriculture, Food, and Environment 2021 21/10/2021 - 21/10/2021
    Online Citation N Charibaldi et al 2022 IOP Conf. Ser.: Earth Environ. Sci. 1018
    012006 DOI 10.1088/1755-1315/1018/1/012006 Download Article PDF References Article
    metrics 229 Total downloads 2 Share this article Article and author information
    Abstract The utilization of information and communication technology, especially
    the Internet of Things (IoT) can use sensors (along with the application interface).
    Sensors are able to measure features in the soil at any time such as pH, humidity
    and nutrients. Measurements can be made at any time, meaning the sensor is also
    able to monitor changes in the value of these features. This study aims to implement
    an Internet of Things (IoT) Information System to measure and monitor humidity,
    pH, and NPK levels in Regosol soil planted with mustard greens with capillary
    irrigation and liquid organic fertilizer. This study used a completely randomized
    design with two factors, namely the type of liquid organic fertilizer and the
    number of capillary irrigation wicks. The first factor consists of 4 levels: P0:
    No liquid organic fertilizer, P1: 5 liters/ha Liquid organic fertilizer from household
    waste, P2: 5 liters/ha Liquid organic fertilizer from Biduri leaves, P3 : 300
    kg/ha NPK fertilizer. The second factor consists of 3 levels: I0: No capillary
    irrigation, I1: Capillary irrigation with 1 wick, I2: Capillary irrigation with
    2 wicks. The results showed that the soil moisture during the growth of mustard
    greens was 16.59% to 23.48%, the more capillary wick, the higher the soil moisture,
    the average water requirement for mustard plant growth was 3.16 liters. The application
    of liquid organic fertilizer has a significant effect on soil pH and soil NPK
    levels. Capillary irrigation had a significant effect on soil pH, but had no significant
    effect on soil NPK levels. Export citation and abstract BibTeX RIS Previous article
    in issue Next article in issue Content from this work may be used under the terms
    of the Creative Commons Attribution 3.0 licence. Any further distribution of this
    work must maintain attribution to the author(s) and the title of the work, journal
    citation and DOI. Show References Abstract References You may also like JOURNAL
    ARTICLES Rice (Oryza sativa L.) response with the Application of Manure and Liquid
    Organic Fertilizer Utilization of liquid organic fertilizers from banana stems
    and coconut husk to increase potassium (K) in alfisols and corn Characterization
    of Sugar Plant Seeds (Arenga pinnata Merr.) from Several Locations in Banten Province
    and Their Growth Response to the Provision of Liquid Organic Fertilizers Liquid
    organic fertilizer and types of organic mulch toward photosynthesis translocation
    of green beans (Phaseolus vulgaris L.) The early heading growth stage of rice
    plants in using the SRI method by giving liquid organic fertilizer of coconut
    husk and banana stems Application of liquid organic and inorganic fertilizer on
    growth and production of hybrid maize Senior & Principal Criticality Safety Assessors
    AWE Science Program Officer, Heising-Simons Foundation Heising-Simons Foundation
    Postdoctoral position: Impacts of terrestrial climate change on the lunar orbit,
    Univ of Michigan University of Michigan: Earth and Environmental Sciences More
    jobs Post a job IOPSCIENCE Journals Books IOP Conference Series About IOPscience
    Contact Us Developing countries access IOP Publishing open access policy Accessibility
    IOP PUBLISHING Copyright 2024 IOP Publishing Terms and Conditions Disclaimer Privacy
    and Cookie Policy PUBLISHING SUPPORT Authors Reviewers Conference Organisers This
    site uses cookies. By continuing to use this site you agree to our use of cookies.
    IOP Publishing Twitter page IOP Publishing Facebook page IOP Publishing LinkedIn
    page IOP Publishing Youtube page IOP Publishing WeChat QR code IOP Publishing
    Weibo page"'
  inline_citation: '>'
  journal: 'IOP Conference Series: Earth and Environmental Science'
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Precision Agriculture Using Internet Of Thingsin Regosol Soil
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sebastian A.
  - Jayadi R.
  citation_count: '0'
  description: Food security is one biggest challenge, especially in a big city. Price
    of fruits and vegetables are relatively higher than other surround cities. That
    happens because capabilities to produce fruits and vegetables decrease along with
    the increasing rate of urbanization. Therefore, households in big cities have
    to be able to produce their own fruits and vegetables. With Internet of Things
    concept (IoT), we can make farming process easier. In order to increase user interest,
    we can use gamification principle along with information system to collect and
    process data. Gamification has been utilized to increase user's interest or loyalty.
    In this paper, researchers described a concept of gamification and IoT combination
    in agriculture. Researchers explain how it can be used for increasing user's farming
    interest, especially urban community which have limited open fields.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Journal of Theoretical and Applied Information Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: INTERNET OF THINGS CONCEPT IMPLEMENTATION FOR MICROGREEN FARMING AUTOMATION
    WITH GAMIFICATION PRINCIPLES
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Krishnan S.
  - Rose J.B.R.
  - Rajalakshmi N.R.
  - Prasanth N.
  citation_count: '2'
  description: 'Agriculture plays a vital role in a country''s growth. Modern-day
    technologies drive every domain toward smart systems. The use of traditional agricultural
    procedures to satisfy modern-day requirements is a challenging task. Cloud IoT
    Systems for Smart Agricultural Engineering provides substantial coverage of various
    challenges of the agriculture domain through modern technologies such as the Internet
    of Things (IoT), cloud computing, and many more. This book offers various state-of-the-art
    procedures to be deployed in a wide range of agricultural activities. The concepts
    are discussed with the necessary implementations and clear examples. Necessary
    illustrations are depicted in the chapters to ensure the effective delivery of
    the proposed concepts. It presents the rapid advancement of the technologies in
    the existing agricultural model by applying the cloud IoT techniques. A wide variety
    of novel architectural solutions are discussed in various chapters of this book.
    This book provides comprehensive coverage of the most essential topics, including:
    New approaches on urban and vertical farming. Smart crop management for Indian
    farmers. Smart livestock management. Precision agriculture using geographical
    information systems. Machine learning techniques combined with IoT for smart agriculture.
    Effective use of drones in smart agriculture. This book provides solutions for
    the diverse domain of problems in agricultural engineering. It can be used at
    the basic and intermediary levels for agricultural science and engineering graduate
    students, researchers, and practitioners.'
  doi: 10.1201/9781003185413
  full_citation: '>'
  full_text: '>

    "Access Provided By:University of Nebraska-Lincoln T&F eBooks ‍ Advanced Search
    Login About Us Subjects Browse Products Request a trial Librarian Resources What''s
    New!! HomeEnvironment & AgricultureAgriculture & Environmental SciencesAgricultureCloud
    IoT Systems for Smart Agricultural Engineering Book Cloud IoT Systems for Smart
    Agricultural Engineering Edited BySaravanan Krishnan, J Bruce Ralphin Rose, N
    R Rajalakshmi, Narayanan Prasanth Edition 1st Edition First Published 2022 eBook
    Published 13 February 2022 Pub. Location New York Imprint Chapman and Hall/CRC
    DOI https://doi.org/10.1201/9781003185413 Pages 280 eBook ISBN 9781003185413 Subjects
    Computer Science, Engineering & Technology, Environment & Agriculture Share Citation
    ABSTRACT Agriculture plays a vital role in a country’s growth. Modern-day technologies
    drive every domain toward smart systems. The use of traditional agricultural procedures
    to satisfy modern-day requirements is a challenging task. Cloud IoT Systems for
    Smart Agricultural Engineering provides substantial coverage of various challenges
    of the agriculture domain through modern technologies such as the Internet of
    Things (IoT), cloud computing, and many more. This book offers various state-of-the-art
    procedures to be deployed in a wide range of agricultural activities. The concepts
    are discussed with the necessary implementations and clear examples. Necessary
    illustrations are depicted in the chapters to ensure the effective delivery of
    the proposed concepts. It presents the rapid advancement of the technologies in
    the existing agricultural model by applying the cloud IoT techniques. A wide variety
    of novel architectural solutions are discussed in various chapters of this book.
    This book provides comprehensive coverage of the most essential topics, including:
    New approaches on urban and vertical farming Smart crop management for Indian
    farmers Smart livestock management Precision agriculture using geographical information
    systems Machine learning techniques combined with IoT for smart agriculture Effective
    use of drones in smart agriculture This book provides solutions for the diverse
    domain of problems in agricultural engineering. It can be used at the basic and
    intermediary levels for agricultural science and engineering graduate students,
    researchers, and practitioners. TABLE OF CONTENTS Chapter 1|16 pages Cloud IoT
    Applications in Agricultural Engineering ByM. Raj Kumar, P. B. Ahir, D. Mrinmoy,
    K. Utkarsh Abstract Chapter 2|26 pages Urban and Vertical Farming Using Agro-IoT
    Systems The Ingredient Revolution – A Sustainable Production System for Urban
    Population ByK. R. Gokul Anand, S. Boopathy, T. Poornima, A. Sharmila, E. L. Dhivya
    Priya Abstract Chapter 3|12 pages Sustainable Smart Crop Management for Indian
    Farms Using Artificial Intelligence ByS. Murugan, M. G. Sumithra, V. Chandran
    Abstract Chapter 4|20 pages Smart Livestock Management Using Cloud IoT ByT. Vigneswari,
    N. Vijaya Abstract Chapter 5|14 pages GIS Systems for Precision Agriculture and
    Site-Specific Farming ByM. Kavitha, R. Srinivasan, R. Kavitha Abstract Chapter
    6|20 pages Machine Learning Approaches for Agro-IoT Systems ByS. A. Jadhav, A.
    Lal Abstract Chapter 7|12 pages A Survey on Internet of Things (IoT)-Based Precision
    Agriculture Aspects and Technologies ByR. Srinivasan, M. Kavitha, R. Kavitha,
    K. Saravanan Abstract Chapter 8|12 pages Novel Semantic Agro-Intelligent IoT System
    Using Machine Learning ByC. S. Saravana Kumar, S. Vinoth Kumar Abstract Chapter
    9|14 pages Yield Prediction Based on Soil Content Analysis through Intelligent
    IoT System for Precision Agriculture ByK. Selvakumar, P. J. A. Alphonse, L. SaiRamesh
    Abstract Chapter 10|16 pages Fuzzy-Based Intelligent Crop Prediction over Climate
    Fluctuation Using IoT ByS. Subramani, C. Chandru Vignesh, J. Alfred Daniel, C.
    B. Sivaparthipan, Balaanand Muthu, N. Suganthi Abstract Chapter 11|24 pages Application
    of Drones with Variable Area Nozzles for Effective Smart Farming Activities ByJ.
    Bruce Ralphin Rose, V. Saravana Kumar, V.T. Gopinathan Abstract Chapter 12|22
    pages Standards and Protocols for Agro-IoT ByS. Mythili, K. Nithya, M. Krishnamoorthi,
    M. Kalamani Abstract Chapter 13|14 pages Research Issues and Solutions in Agro-IoT
    ByN. Vijaya, T. Vigneswari Abstract Chapter 14|20 pages Renewable Energy Sources
    for Modern Agricultural Trends ByS. Arulvel, T. Joshva Devadas, D. Dsilva Winfred
    Rufuss, M. Amutha Prabakar Abstract Chapter 15|20 pages SPLARE A Smart Plant Healthcare
    System ByS. Lodha, H. Malani, N. Prasanth, K. Saravanan Abstract Your institution
    has not purchased this content. Please get in touch with your librarian to recommend
    this. PREVIEW PDF  To purchase a print version of this book for personal use or
    request an inspection copy  GO TO ROUTLEDGE.COM  METRICS 2 Citations Policies
    Privacy Policy Terms & Conditions Cookie Policy Journals Taylor & Francis Online
    Corporate Taylor & Francis Group Help & Contact Students/Researchers Librarians/Institutions
    Connect with us Registered in England & Wales No. 3099067 5 Howick Place | London
    | SW1P 1WG © 2024 Informa UK Limited"'
  inline_citation: '>'
  journal: Cloud IoT Systems for Smart Agricultural Engineering
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Cloud IoT systems for smart agricultural engineering
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Hua C.
  - Shu S.
  - Zhou X.
  - Wang L.
  citation_count: '0'
  description: This project designs and develops the virtual agricultural Internet
    of things experimental platform system, which is embodied in the form of website.
    This project carries out the learning and application of Internet of things technology
    in the form of virtual experiment, which can enable students to deeply understand
    the technical links involved in the application of Internet of things, and deepen
    students' understanding of how to apply modern Internet of things technology to
    solve agricultural problems. At the same time, it can help traditional agriculture
    solve the difficulties in moving towards informatization and provide technical
    support for the Agricultural Internet of things. This paper introduces the implementation
    process of the system in detail from the modules of demand analysis, system outline
    design, system detailed design, system implementation and system test. The system
    is developed with Python programming language, Django as the framework and MySQL
    as the database. The system mainly realizes the functions of agricultural information
    import and early warning, information visualization and index analysis. The system
    has simple and beautiful interface, reasonable architecture and coordinated color
    matching. The test shows that the system runs stably and can run compatible on
    several mainstream browsers.
  doi: 10.1109/ICNISC57059.2022.00111
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2022 8th Annual International...
    Design and Implementation of Virtual Agricultural Internet of Things Experimental
    Platform Publisher: IEEE Cite This PDF Chunze Hua; Senxin Shu; Xuanyu Zhou; Liwei
    Wang All Authors 27 Full Text Views Abstract Document Sections I. Research Background
    and Significance II. Requirement Analysis III. Overall Architecture of Experimental
    Platform IV. Detailed Design of Experimental Platform V. Function Realization
    of Experimental Platform Show Full Outline Authors Figures References Keywords
    Metrics Abstract: This project designs and develops the virtual agricultural Internet
    of things experimental platform system, which is embodied in the form of website.
    This project carries out the learning and application of Internet of things technology
    in the form of virtual experiment, which can enable students to deeply understand
    the technical links involved in the application of Internet of things, and deepen
    students'' understanding of how to apply modern Internet of things technology
    to solve agricultural problems. At the same time, it can help traditional agriculture
    solve the difficulties in moving towards informatization and provide technical
    support for the Agricultural Internet of things. This paper introduces the implementation
    process of the system in detail from the modules of demand analysis, system outline
    design, system detailed design, system implementation and system test. The system
    is developed with Python programming language, Django as the framework and MySQL
    as the database. The system mainly realizes the functions of agricultural information
    import and early warning, information visualization and index analysis. The system
    has simple and beautiful interface, reasonable architecture and coordinated color
    matching. The test shows that the system runs stably and can run compatible on
    several mainstream browsers. Published in: 2022 8th Annual International Conference
    on Network and Information Systems for Computers (ICNISC) Date of Conference:
    16-19 September 2022 Date Added to IEEE Xplore: 22 February 2023 ISBN Information:
    DOI: 10.1109/ICNISC57059.2022.00111 Publisher: IEEE Conference Location: Hangzhou,
    China SECTION I. Research Background and Significance The emergence of the Internet
    of things makes it possible for the connection between things to develop in an
    intelligent direction, which will greatly increase the convenience of people''s
    life and improve people''s quality of life. Real time monitoring and operation
    can not only improve people''s living standards, but also improve people''s own
    quality and promote social harmony. The Internet of things may also have a positive
    impact on family life, communication and entertainment, human health and other
    fields in the future. People pay more and more attention to their own health.
    The Internet of things technology will make it possible to monitor each organ
    of the human body in real time and dynamically, and find some lesions in time
    [1]. With the improvement of related technologies, it is imperative for the Internet
    of things to be popularized and used on a large scale. In the future, with the
    improvement of its performance, the application cost will be significantly reduced,
    the service will be more humanized, the real communication between things will
    be realized, and the intelligent and all-round management of people''s life will
    be carried out [2]. As the most important branch of the new generation of information
    technology industry, the development of the Internet of things industry has great
    strategic significance. The above research background and significance of the
    Internet of things all highlight the importance of the Internet of things experiment
    to contemporary electronic learners. As a country with a large population, traditional
    agriculture dominated by small-scale extensive labor is still the main production
    and management mode of agriculture in China. Due to the small scale and low degree
    of organization of traditional agricultural production, China''s agricultural
    labor productivity is low. As a developed country that has achieved agricultural
    modernization, the cultivated land area borne by the per capita labor force of
    the United States, France and Germany is 145 times, 55 times and 45 times that
    of China respectively. At the same time, with the aging of agricultural labor
    force, the labor cost has increased significantly, and the labor cost of agricultural
    products is as high as 70%, resulting in the overall price of agricultural products
    in China exceeding the international level. The low resource utilization efficiency
    of traditional agriculture has further exacerbated the deterioration of ecological
    environment and the shortage of agricultural resources per capita, which has brought
    more serious problems of agricultural product quality and safety. Developing efficient,
    accurate and environmental friendly modern agricultural production and management
    model is the main way to solve many problems in China''s agriculture. In response
    to the call of the school of electronic information of Southwest University for
    Nationalities to develop the discipline construction of Internet of things in
    the new era of Internet, by combining traditional agricultural simulation examples
    with Internet of things simulation, students can deepen their understanding of
    Internet of things technology and try to transform traditional agriculture with
    Internet of things technology. The school running pattern of “three campuses and
    one base” is laid out by Southwest University for nationalities. The Qinghai Tibet
    Plateau Research Institute of Southwest University for Nationalities makes full
    use of the original ecological conservation of the Qinghai Tibet Plateau and the
    high-tech research of animal husbandry, which provides favorable agricultural
    conditions and experimental simulation environment for the project, avoiding the
    problems of large time span of experiments in the actual agricultural scene, certain
    dangers of experiments in the actual agricultural scene and high cost of constructing
    the actual experimental scene, Meet the needs of agricultural modernization through
    the construction of Agricultural Internet of things. The combination of Internet
    of things and agriculture is an inevitable choice to accelerate the construction
    of smart agriculture and promote agricultural modernization. Using agricultural
    simulation learning can also improve students'' interest in learning the Internet
    of things and combine teaching with fun. SECTION II. Requirement Analysis At the
    beginning of program design, the first step to analyze the needs of the experimental
    platform is to determine the needs of users. The key to the functional requirements
    of the experimental platform is to determine the overall functional structure
    of the system. Non functional requirements, security, etc. System feasibility
    is to determine whether the system development is really feasible from different
    angles such as economic credibility, technical feasibility and use feasibility.
    Functional requirements analysis of experimental platform The functional requirements
    are the functional module design of the virtual agricultural Internet of things
    experimental platform system in this paper. The most important analysis is to
    carry out the design according to the requirements brought by the actual operation
    of users. According to the system described in the article, carry out the actual
    investigation of the demand information analysis website. The main functional
    requirements include making a comprehensive virtual agricultural Internet of things
    experimental platform system. According to the actual needs of different users,
    the functional units under these functional modules will be specially designed
    and implemented to meet the specific requirements of different users and the flexibility
    and scalability requirements of the software system. The basic requirements of
    software system are the functional requirements that must be agreed with customers
    before the next design and development. Internet of things experiment, as a part
    of enriching college experimental courses, is very important. Experimental course
    is a course closely combined with practice. Practical course can not only enable
    students to more systematically and comprehensively explore unknown scientific
    knowledge and optimize system knowledge, but also an extremely important ability
    training process related to students'' future development and students'' interests.
    As an important way to cultivate students'' quality and improve practical innovation
    ability, professional experiment is an important link in the professional talent
    training system. Through experimental teaching, students can intuitively grasp
    professional information. Such experimental teaching can not only help students
    increase their understanding of professional concepts and improve their ability
    of organization and coordination, logical thinking and other aspects, but also
    attract students'' research interest with its unique teaching charm. At the same
    time, it can also help students form the habit of using more hands and brains.
    Therefore, experimental teaching is the best way to cultivate students'' ability
    and improve students'' quality. The Agricultural Internet of things experimental
    platform is a system to connect and manage all kinds of Internet of things equipment
    in agricultural greenhouses, and analyze, store, warn and analyze the data uploaded
    by the equipment. The overall goal of the system is to realize the Agricultural
    Internet of things experimental platform, so as to realize large-scale equipment
    connection and a large number of equipment data storage functions. In the experimental
    platform of Agricultural Internet of things, we should be able to use legal information
    to log in to the platform. After successful login, we can add, modify and delete
    existing data. The platform shall display the successfully added data in a list
    and display the status information. The platform shall be able to obtain the latest
    early warning data in real time and display the early warning data. Above all,
    the design and implementation of the virtual agricultural Internet of things experimental
    platform makes the experimental teaching have its unique teaching methods and
    cultivate more and better high-quality talents for the country and society. Through
    the reform of experimental teaching methods in Colleges and universities, students
    have broadened their horizons and increased their knowledge. At the same time,
    the quality of experimental teaching and learning has been improved. Analysis
    of non functional requirements of experimental platform For the demand analysis
    of the system, in addition to the analysis of the system functions, it is also
    necessary to analyze the non functions of the system. It is necessary to consider
    the basic environment in which the system can operate normally, the system fault
    tolerance, scalability, user experience and other issues, so as to ensure that
    the user experience and practicability of the system are good, and cover as many
    user groups as possible. Ease of use: the first thing to consider in developing
    a system is the users of the system. The users of the virtual agricultural Internet
    of things experimental platform system designed in this paper are all over all
    walks of life. Therefore, when designing the page structure and business logic
    of the virtual agricultural Internet of things experimental platform system, we
    should ensure that the interface introduction is generous, the function is complete
    and the operation is simple. Security: the security of a system is directly related
    to whether users really rely on the system. There are a lot of users'' personal
    privacy in the shopping system. If these data are leaked, it will have a lot of
    impact on users. Therefore, when designing this system, we should strengthen the
    design of system security, such as anti SQL injection attack, page authority authentication
    and so on. Scalability: as the number of users of the system increases, the system
    needs to be upgraded continuously. Therefore, at the beginning of designing the
    system, we should consider the subsequent upgrading of the system, reserve modules,
    and write some key codes according to the requirements of scalability, rather
    than write some simple functions directly for rapid development. System log: the
    system log is coordinated with the system security. The system should store the
    log information in the whole operation process and back up regularly. In addition,
    the system administrator should deal with the risk content in time. High response:
    in order to give users using the system a better experience, all page jumps of
    the system should be less than 500ms, which requires asynchronous refresh, multithreading,
    etc. to be considered when developing the system. A. Feasibility Analysis of Experimental
    Platform 1) Economic Feasibility Analysis In order to ensure that the development
    of the system will not be suspended or terminated due to capital problems, I first
    analyzed the economic feasibility of developing the whole system. The software
    used in this system is open source software. The system is deployed on the local
    windows host in the development stage and on the cloud server after the system
    is really online. Therefore, the whole project is economically feasible. Technical
    feasibility analysis The system development language of the virtual agricultural
    Internet of things experimental platform is python, the framework is Django, and
    the database is mysql. The knowledge involved from programming language to database
    is usually learned. In addition, these are the mainstream and commonly used development
    technologies, and the online tutorial resources are very rich. Python has rich
    open source library resources, which can be used only by installing python. Django
    framework has complete functions and provides various built-in functions convenient
    for developers to develop, such as built-in paging, ORM, etc. Django framework
    with Django admin can automatically generate a set of background logic of adding,
    deleting, modifying and querying according to the model file. As a lightweight
    relational database, MySQL is very simple to use, and can build tables and views
    with the help of visualization tools such as Navicat. To sum up, the technology
    selection of virtual agricultural Internet of things experimental platform system
    is feasible. 2) Use Feasibility Analysis The page structure of the virtual agricultural
    Internet of things experimental platform system is generous, the business logic
    is clear, the function is complete and the operation is simple. Whether you are
    proficient in computer or not, users can quickly start the system. In addition,
    the system is also equipped with operation instructions. Therefore, the system
    is feasible in use. 3) Management Feasibility Analysis Virtual agricultural Internet
    of things experimental platform system is a web application system designed and
    developed by our team, which has good practical significance. The virtual agricultural
    Internet of things experimental platform system will be managed by the administrator
    in the background, including user management and website management. The system
    has simple and beautiful interface, reasonable composition, coordinated color
    matching, stable operation and good effect, which meets the basic design requirements.
    SECTION III. Overall Architecture of Experimental Platform The system architecture
    is based on B / S architecture. The whole system is divided into interaction layer,
    business logic layer and data access layer from upper layer to lower layer. The
    system front-end uses technologies such as HTML and bootstrap, and the front-end
    interacts with the system business layer through Ajax. The business layer of the
    system mainly includes modules such as registration and login, agricultural information,
    visualization, index analysis and user management. The database adopts MySQL database,
    and the main tables include user table, agricultural information table, announcement
    table, etc. The relevant technologies used in the system are as follows: A. Python
    Technology Python was designed by Guido van Rossum of the National Academy of
    statistics in the Netherlands in the late 1980s. It has the same characteristics
    as Perl, and the python source code also follows the GPL protocol. Guido van Rossum
    plays an indispensable role in it and guides the progress of Python as a whole.
    Python2. 7 is the last version of Python 2, and it was officially announced to
    stop the maintenance of Python 2 in early 2020. Therefore, at present, most projects
    adopt Python 3. B. Python Language Has the Following Advantages Easy to learn:
    Python has fewer keywords than those commonly used object-oriented languages such
    as Java and C++. The engineering structure is also simpler, so it is faster for
    novices to learn python. Easy to maintain: Python is becoming more and more popular
    with developers and widely used because its source code is easy to maintain. Extensibility:
    it can be written in C or C++, a low-level and efficient programming language,
    and then called in Python programs. Rich library resources: Python has rich open
    source library resources, which can be used only when Python is installed in the
    system, such as pandas for data processing, flash and Django for web development,
    sklearn for machine learning, etc. B / S structure According to the architecture,
    the current application system can generally be divided into B / S structure and
    C / S structure. B / S structure is browser server structure, and C / S structure
    is client browser structure. C / S structure appeared earlier, which is also a
    more traditional development mode. With the continuous improvement and development
    of software technology, B / S structure is more and more favored by people. B
    / S structure discards the disadvantages of C / S structure, such as high cost,
    low efficiency and poor adaptation to client system. The system developed based
    on B / s uses the browser as the data interface of the client, and the server
    completes the data exchange and transaction logic with the client. Users using
    B / S structure programs can experience the whole application by installing a
    browser on their own terminal device without installing other applications. Moreover,
    whether the client is Linux, windows or MacOS, they can directly use the same
    set of applications, which brings great convenience to users and developers. C.
    Django Framework Currently, as a lightweight framework of python, Django is widely
    used by the developers of the enterprise. Django is designed based on MTV architecture.
    M stands for model, which is the database model, t stands for template, which
    is the HTML file, and V is the view, which mainly writes various classes and functions.
    Django has the following advantages: As a heavyweight web framework, it has complete
    functions and provides various built-in functions convenient for developers to
    develop, such as paging, ORM, etc. Django framework with Django admin can automatically
    generate a set of logic for adding, deleting, modifying and querying the background
    according to the model file. For some web projects with less functional requirements,
    the development time can be greatly reduced. However, due to some limitations
    of the built-in admin in the framework, DIY development is still needed for projects
    with high requirements for background logic. Django framework comes with its own
    database management app and has strong support of the third library. It is extremely
    easy for novices to get started. Django framework is mature, stable and efficient.
    It is equivalent to Python''s flask framework. It is more closed and more suitable
    for enterprise level website development. D. Ajax Ajax, called asynchronous JavaScript
    and XML, is a new technology proposed to express a different method from the past
    using the current technology set, including HTML, CSS, JavaScript, etc., and the
    most important XMLHttpRequest. After AJAX is developed, it is continuously upgraded
    and used more widely. It is a technology that enables the system background service
    to refresh asynchronously with the foreground web service. It does not need to
    refresh the whole page, and makes the page complete data refresh through a small
    amount of data exchange, so as to bring users a better interactive experience.
    The technology of page data refresh through simple data exchange makes the program
    respond faster according to the user''s operation. Ajax technical features: It
    can protect data without refreshing the whole page, and there is no need to install
    browser plug-ins. After Ajax sends the request, one side of the server only needs
    to provide the required data information to the client, which improves the program
    running efficiency and brings a better experience to users. E. Mysql MySQL is
    a kind of relational database. The way MySQL saves data is to use the basic format
    of relational database. MySQL has the advantages of low cost, fast speed and small
    memory. And MySQL has a large number of visualization tools, such as Navicat,
    heidis SQL, phpadmin, etc. For functions associated with MySQL database, you must
    first log in to MySQL. On the command line, do the following, with each command
    ending in a half letter. Skill: if you forget to add half a letter after pressing
    enter, you don''t have to type the command again. Just type the letter and press
    enter. In other words, you can divide the entire command into multiple lines and
    use half width letters as the last received characters. Basic command: the database
    is displayed in the database list; Select the library name to access the database;
    List of display tables; Display the structure of the data table and explain the
    name of the table; Create database, create database; Create a table with the library
    name; Create a table name (field adjustment list) from the table; Cancel the database
    and delete the database name from the database listed in the table; Deselect the
    table from the table name; To display records in the table, select * in the table
    name; Transfer the text data to the database and load the local data into the
    file name file with the table name. Navicat for MySQL is currently the most widely
    used visual operation tool for MySQL database in China. It has the characteristics
    of open source, free and simple operation. It is loved by programmers. Navicat
    series above version 12 can support the connection of Oracle, mysql, SQL server
    and other types of databases. The Navicat 12 version used in this system can only
    specifically connect to MySQL database. The creation of database, table and other
    operations of the system are completed through the software. Figure 1. Show All
    SECTION IV. Detailed Design of Experimental Platform A. Login Registration In
    order to ensure the security of system data, users using the system need to register
    and log in before they can carry out business operations. After the user fills
    in the form, the system view receives the request for URL. The program uses the
    model layer to interact with the database and return a user object. The control
    layer checks whether the user name and password are empty. If the verification
    passes, the page will jump to the home page, otherwise it will continue on the
    login page. B. User Management The administrator can manage all users of the system
    after logging in to the system, and ordinary users can modify their personal information
    after logging in. After the administrator logs in to the system, select user management,
    and select add, modify and delete buttons to manage user information; after logging
    in the system, users can click personal information to modify their personal information
    on the personal information page. After modification, click Save to complete data
    update. Information management After logging in to the system, the system administrator
    or the user assigned management permission by the administrator can add, modify
    and delete the background information. First select information management, the
    system will query the database and display all the information, then select the
    operation to be performed, and the system will render the corresponding operation
    page. After the form data on the operation page or modifying the data, click finish.
    If it meets the system regulations, the data will be updated to the database and
    returned to the superior page, otherwise the database update operation will not
    be performed. C. Information Retrieval By using the information retrieval function
    of the system, users can complete the rapid retrieval of information. The user
    opens the query page, enters the information to be retrieved in the search box,
    and clicks query. The system will query the corresponding results and render them
    to the list page. D. Database Design Database design is a very important stage
    in the system design stage. Whether the database design is reasonable or not will
    directly affect the final implementation effect and operation efficiency of the
    program. If program development is compared to building a house, the database
    is the stage of laying the foundation. Unreasonable database design will have
    disastrous consequences for the system. Moreover, modifying the database in the
    development process will cost a very high price. Therefore, in the design and
    development stage, we must carefully design the database. The author strictly
    follows the requirements of the first paradigm, the second paradigm and the third
    paradigm, Design the database table structure. SECTION V. Function Realization
    of Experimental Platform Guided by the teaching plan of the school of electronic
    information, the platform effectively cooperates with the school teaching plan,
    combines teaching theory with virtual experiment, guides students from entry to
    major, and guides students'' career employment. The teaching is mainly based on
    virtual simulation experiment, which covers the practical teaching part of curriculum
    design. The platform fully meets all the needs of the school for relevant curriculum
    experiments of the school of electronic information. According to the idea of
    school curriculum design, it is integrated into modular teaching from the theoretical
    knowledge system and the virtual simulation experiment of the Internet of things.
    Create a three-dimensional and interactive teaching mode from the horizontal theory
    combined with the vertical virtual experiment, so as to make the orientation of
    students'' learning development clear. A. Login Registration The system performs
    verification and comparison according to the student number, password, confirmation
    password and other information entered by the user, such as judging whether the
    user name has been registered by other users, whether the two passwords are the
    same, and whether the entered student number meets twelve digits. If both verification
    pass, the registration will be completed, otherwise the registration will fail
    and the user will be prompted with wrong information. Figure 2. Show All The user
    enters the student number and password. The system judges whether the student
    number and password are correct. If the verification passes, the login succeeds
    and jumps to the system home page. Otherwise, the login fails and prompts the
    user with error information. Figure 3. Show All After logging into the system,
    you can see the home page of the system. The home page of the system is the rotation
    chart information and the announcement information of the website. Figure 4. Show
    All B. Agricultural Information Click agricultural information to display the
    page of importing data. Select the form and click Import to import the file. When
    the parameter value exceeds the set threshold, the system will send an alarm email
    to the set mailbox. Figure 5. Show All C. Visualization In the visualization module,
    we can analyze the change curve of light intensity, temperature and humidity,
    as well as the distribution of pH. Figure 6. Show All Figure 7. Show All D. State
    Analysis In the condition analysis module, it includes the analysis of light intensity,
    temperature, humidity and pH. Figure 8. Show All E. User Management The system
    administrator opens the user management to display the user''s student number,
    user password and other information. Click any user to modify and delete the foreground
    user. Click add on the list page to add user information. Enter the student number
    on the list page to conduct fuzzy search according to the user name information.
    Figure 9. Show All SECTION VI. System Test and Conclusion Testing is the last
    process in the development stage. Through testing, the problems existing in the
    system will be found and repaired. In the development process, the system is tested
    in three stages: module testing, unit testing and integration testing. In each
    stage, two test methods of white box testing and black box testing are used to
    test the system, and finally repair all bugs found, so as to ensure the normal
    operation of the program. Black box test, also known as function test, is usually
    used for some tests on the program interface. Generally, when the program is running,
    input some test data for some functions and usage methods to detect whether the
    output is correct. White box test is usually called structural test. White box
    test is a general method of testing the system, such as whether all if and else
    are covered, whether there is an dead loop in the for loop, etc. In the comprehensive
    test of the virtual agricultural Internet of things experimental platform system,
    it is not difficult to find that there is no obvious logical error in the function
    of the program. When the user operates this function, the program can jump according
    to the user''s operation. After the user''s operation is wrong, the system can
    give clear prompt information. In the repeated tests, the program is strictly
    tested, and then ensure that there will be no problems in the use of the system.
    In this process, reasonable and standardized actual operations were carried out
    for each link, and various situations were simulated. There were no problems during
    this period. Therefore, the structure and function of the system are reasonable
    and correct. At the same time, it also shows that there are no problems in the
    preliminary preparation of the team. From the results, the software passed the
    test. After the system is tested, no obvious bug is found in each functional module
    of the system, and the system can ensure normal operation. After the completion
    of system development, we sorted and wrote according to the working process, and
    finally completed this paper. This design has completed all requirements, but
    the program needs to be further optimized in the future. We will continue to study
    and correct carefully, complete the user experience return visit in the later
    stage, and modify the project according to the user feedback. Authors Figures
    References Keywords Metrics More Like This Cloud Databases for Internet-of-Things
    Data 2014 IEEE International Conference on Internet of Things (iThings), and IEEE
    Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social
    Computing (CPSCom) Published: 2014 Improved Secure Internet of Things System using
    Web Services and Low Power Single-board Computers 2020 International Conference
    on e-Health and Bioengineering (EHB) Published: 2020 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: Proceedings - 2022 8th Annual International Conference on Network and Information
    Systems for Computers, ICNISC 2022
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Design and Implementation of Virtual Agricultural Internet of Things Experimental
    Platform
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Murali E.
  - Anouncia S.M.
  citation_count: '3'
  description: Precision agriculture is a modern agriculture implementation technique
    in which analysis of numerous source data takes place for decision-making and
    operation in the management of crop production. The data for precision agriculture
    are collected through robots, sensors, satellites, and drones. The two approaches
    of precision agriculture are the predictive approach which is used for representing
    the static indicator during the crop cycle whereas the control approach is an
    updating of information Ontology is a demonstration of concepts and their shared
    association. It can be used in a wide range of contexts, including the classification
    of agricultural information and the development of knowledge bases. The basic
    steps involved in precision farming are assessing variation, managing variability,
    and evaluation. The various tools used in precision farming are the internet of
    things (IoT), a global positioning system (GPS), geographic information system
    (GPS), remote sensor, proximate sensor technology, grid sampling, etc. With the
    increase in information technology in the field of agriculture. Consequently,
    data mining become much essential for decision-making. This paper attempts to
    emphasize the coherence of data mining approaches toward helping precision agriculture
    as a valuable venture.
  doi: 10.1109/ICOSEC54921.2022.9951960
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2022 3rd International Confer...
    A Survey on Computational Aptitudes towards Precision Agriculture using Data Mining
    Publisher: IEEE Cite This PDF E. Murali; S.Margret Anouncia All Authors 2 Cites
    in Papers 162 Full Text Views Abstract Document Sections I. Introduction II. Precision
    Agriculture and Data Mining Approach III. Precision Agriculture Data and Data
    Acquisition Method IV. Using Data Mining For Agriculture Data Processing V. Ontology-Based
    Knowledge Mining Model For Precision Agriculture Show Full Outline Authors Figures
    References Citations Keywords Metrics Abstract: Precision agriculture is a modern
    agriculture implementation technique in which analysis of numerous source data
    takes place for decision-making and operation in the management of crop production.
    The data for precision agriculture are collected through robots, sensors, satellites,
    and drones. The two approaches of precision agriculture are the predictive approach
    which is used for representing the static indicator during the crop cycle whereas
    the control approach is an updating of information Ontology is a demonstration
    of concepts and their shared association. It can be used in a wide range of contexts,
    including the classification of agricultural information and the development of
    knowledge bases. The basic steps involved in precision farming are assessing variation,
    managing variability, and evaluation. The various tools used in precision farming
    are the internet of things (IoT), a global positioning system (GPS), geographic
    information system (GPS), remote sensor, proximate sensor technology, grid sampling,
    etc. With the increase in information technology in the field of agriculture.
    Consequently, data mining become much essential for decision-making. This paper
    attempts to emphasize the coherence of data mining approaches toward helping precision
    agriculture as a valuable venture. Published in: 2022 3rd International Conference
    on Smart Electronics and Communication (ICOSEC) Date of Conference: 20-22 October
    2022 Date Added to IEEE Xplore: 22 November 2022 ISBN Information: DOI: 10.1109/ICOSEC54921.2022.9951960
    Publisher: IEEE Conference Location: Trichy, India SECTION I. Introduction Precision
    agriculture is the application of modern techniques for the analysis of data for
    decision-making and crop management. The different new technologies used in precision
    agriculture are automated steering systems, Geomapping, remote sensing, satellite
    positioning system, and variable rate technology. Ultimately precision agriculture
    aims to introduce automation in the field of agriculture. However, these technologies
    are not much used by farmers as there is not much awareness about the technologies.
    In some cases, these technologies are cost too high which farmers are not able
    to afford. There is a need for farmers to get updated with technology. Despite
    all these issues, the farmers must get updated with the latest technologies which
    will make ease the agricultural process. Growth in the computation approach has
    paved a way for the introduction of data mining principles. Hence, this paper
    will help in finding the advantages and disadvantages in the right direction to
    improve the agriculture process. SECTION II. Precision Agriculture and Data Mining
    Approach In general precision agriculture helps in improving crop productivity
    with the help of information technology. Many approaches are discussed in the
    following section for improving the crop yield of precision agriculture. Some
    of the approaches that have developed in recent times are highlighted. A. Vandana
    B[1] et al(2018) developed a novel strategy with big data analytics to increase
    crop productivity. The information is gathered from a real-time setting. Data
    analyses employ classification and prediction techniques. As a result, big data
    analytics is used to implement an efficient decision-making system for increased
    crop productivity. B. A modular approach for crop health examination, and recognition
    of weeds, and insects was proposed by Akhil Kumar donka[3] et. al(2020). The input
    data are collected through an unmanned aerial vehicle. TensorFlow is used to construct
    a deep learning model for weed and insect detection. Finally, a prediction accuracy
    of 89.5% is attained. C. A computer vision approach for evaluating red beet plant
    count was proposed by A. Hassanzadeh[2] et al. (2021). Input data is collected
    through a multispectral sensor which is mounted on a DJI matrices 600 pro. Vegetation
    detection, feature generation, and feature selection are part of preprocessing.
    The plant count could be predicted using partial least square regression, which
    showed promising results. D. In order to anticipate rainfall, J. S. A. N. W. Premachandra[4]
    et al. (2021) have suggested a machine learning-based method. The input dataset
    is collected from the metrological department of the central environmental authority.
    The collected dataset is preprocessed for data consolidation, data reduction,
    data cleaning, and data discretization which the same has been fed into four machine
    learning algorithms such as Multiple Linear Regression, Support Vector Machine,
    K Nearest Neighbors, and Random Forest. As a result, it is observed that random
    forest has a high accuracy of 89.16%. E. EL HACHIMI chouaib[5] et. al(2021) have
    proposed a machine learning approach for crop suggestion and weather estimation.
    Input data is segregated from an online dataset which consists of 2200 instances.
    Machine learning models like K-nearest neighbor, decision tree, random forest,
    Naïve Bayes, and logistic regression are used for performance evaluation. Finally,
    random forest performs best in terms of precision, accuracy, and recall. SECTION
    III. Precision Agriculture Data and Data Acquisition Method Precision agriculture
    is an approach used for getting high yields than the traditional technique. Data
    plays a main role in precision agriculture. The various tools used to collect
    data in precision agriculture are sensors, the Internet of Things, variable rate
    technology, automated steering systems, global positioning systems, and geographic
    information systems. Each of the above tools processes a variety of data such
    as crop yields, weeds, soil types, weather conditions, different harvesting operations,
    soil moisture content, and amount of fertilizer used. The different data acquisition
    is shown in fig 1. The following table highlights the data and data acquisition
    for the last 6 years Table I Data Acquisition and Purpose SECTION IV. Using Data
    Mining For Agriculture Data Processing Different data processing methods that
    are used in precision agriculture in data mining are highlighted in this section.
    A. A study has been conducted by Kristoffer O. Flores[19] et. al(2016) to observe
    the agriculture field. The input data are collected through low-cost sensors such
    as humidity, temperature, moisture, luminosity, electrical conductivity, and pH
    are used. All sensors are linked to a single Arduino microcontroller board with
    an Xbee shield for wireless communication. The sensor node is divided into three
    parts (i)sensor, (ii)microcontroller, (iii)RF transmitter. Finally, each sensor
    collects the data at the base station. The main server displays the data in a
    visualized form to a farmer about the status of the environment through a GUI(Graphical
    user interface) and soil condition which in turn helps for better productivity.
    B. A study has been conducted by E.Murali[20] et. al(2018) to emphasize the data
    mining approaches for precision agriculture. The data are collected through variable
    rate technology, unmanned aerial vehicles, global positioning system, mapping
    technology, and guidance technology. Different data mining algorithms are studied
    which helps the farmers for an effective decision model. Finally, the study highlighted
    soil database maintenance, pest control, rainfall prediction, and crop recommendation.
    C. Grigore Stamatescu[21] et. al (2019) proposed a data analysis and processing
    approach to crop and soil monitoring for precision agriculture. The system architecture
    consists of a field layer, fog computing layer, cloud computing layer, and data
    presentation layer. The data are collected through sensors. To compute the performance
    evaluation methods like the common linear interpolant and two closely related
    interpolants, cubic spline and shape-preserving Piecewise Cubic Hermite Interpolating
    Polynomial are used. Finally, an extensive assessment of online decision-making
    by domain experts is obtained. D. A prototype IoT-based smart farming for soil
    moisture monitoring and analysis has been proposed by Supachai Puengsungwan[22]
    et. al(2020). The IoT device consists of cloud technology, user interface, and
    data analytics. The input data are real-time data. The data are fed into MATLAB
    for evaluation. As a result, soil moisture analysis and monitoring have been implemented
    using real-time data. E. A data processing for sentinel-1 SAR data and crop type
    classification with visualization has been proposed by Jacob Haxbroe Jeppesen[23]
    et. al(2020). The input data are collected from sentinel-1A and sentinel-1B satellites.
    Data visualization is done for three different crop types such as forestry, maize,
    and rapeseed are discussed. Six machine learning classifiers, including decision
    tree, random forest, logistic regression, linear SVM, RBF SVM, and neural network
    classifiers, are used to evaluate the data. Finally, RBF SVM performs better concerning
    individual crops with an overall accuracy of 94.02%. F. To determine the stage
    of a cotton leaf, Zekai Feng[24] et al. (2021) suggested an object detection technique
    based on a faster RCNN. The data used as input are taken from a public dataset.
    The convolutional layer, pooling layer, activation layer, fully connected layer,
    and output layer make up the system architecture. The convolutional neural network,
    candidate layer extraction, and detecting object identification make up the algorithm.
    Finally, 80% of the cotton leaf stage can be recognized by the system. SECTION
    V. Ontology-Based Knowledge Mining Model For Precision Agriculture Ontology-based
    Knowledge mining model for precision agriculture that provides a recommendation
    system, soil mineral classifications, ontology-based prototype model, and plant
    domain knowledge model are highlighted in this section. A. FAN Jing[25] et al(2008)
    suggested an ontology-based plant domain knowledge model. Plant knowledge and
    environment knowledge were separated from the plant domain knowledge ontology.
    Finally, an effective approach to knowledge modeling that makes use of ontologies
    was shown. B. A farmer helping system was proposed by Shyamaladevi[26] et. al(2012)
    which integrates web services such as soil information, crop disease information,
    plant information, pesticides, and fungicides information. The input data is semantically
    annotated data collected by the sensor. The architecture consists of sensor ontology
    to form a system ontology for knowledge representation. For determining which
    soil is better for crop planting and describing the pesticides and fungicides
    of a specific disease, a rule-based engine is developed. As a result, application
    enterprises and communities share and reuse data. C. Ontology-based knowledge
    management framework was proposed by Patrizia Ribino[27] et. al(2009). Two ontology
    domain model is represented which is based on structure and modeling the concept
    of project development. Finally, the Knowledge management system prototype makes
    a rule-based system that can adapt its result to the possible change in system
    ontology and document management system to improve document searching, sharing,
    and discovery. D. A knowledge management approach for e-agriculture has been proposed
    by Muhammad Ahsan[28] et. al(2014). The data are collected through interviews,
    questionnaires, observations, expert advice, observed data, image documents, and
    reports. A prototype model is built to demonstrate the result. As a result, ontology-based
    knowledge management has more benefits than traditional knowledge management techniques.
    E. Ontology-based data access and integration for farming in Nepal are proposed
    by Suresh Pokharel[29] et. al(2014). The input data are agriculture production
    statistics, weather information, crop growing days information, soil information,
    and administration data of Nepal. An ontology-based vocabulary is created from
    the dataset to integrate data. As a result, AgriNepaldata is linked to an additional
    dataset that provides one structured dataset for agricultural information. F.
    An ontology-based knowledge management system for soil mineral classification
    and crop recommendation has been proposed by E. Murali[30] et al. (2021). An online
    database is used to gather the input data. The framework comprises knowledge gathering
    and validation, the development of an agricultural knowledge model, the design
    of agricultural rules, and knowledge visualization. A mechanism for recommending
    crops has finally been created. G. E.Murali[31] et. al(2021) have proposed multiple
    ontology-based knowledge mining models for agriculture. The framework consists
    of different ontologies like soil, crop, location, and season ontology. Soil ontology
    provides soil type as output, crop ontology provides crop type as output, location
    ontology provides a different location in which crop can be grown, and season
    ontology provides season in which crop can be grown. As a result, a multiple ontology-based
    ontology model for agriculture has been developed. Fig.1 Contributions of computational
    toward agriculture to make precision agriculture Show All SECTION VI. Conclusion
    This study highlighted the different data mining approaches, data processing,
    data acquisition, and ontology-based knowledge management model discussed. It
    is observed study focuses on pest management, rainfall prediction, crop recommendation,
    crop, and field monitoring system, soil moisture detection, and crop health monitoring.
    Technology integration with agriculture help in the success of precision agriculture
    with the possibility of extending the technology of further computerization. Existing
    research has focused solely on a single type of vegetation, which is considered
    a limitation. As a future scope, multiple vegetation can be focused on. Authors
    Figures References Citations Keywords Metrics More Like This Smart Agriculture
    Wireless Sensor Routing Protocol and Node Location Algorithm Based on Internet
    of Things Technology IEEE Sensors Journal Published: 2021 Precision Agriculture
    Using Internet of Things and Wireless Sensor Networks 2023 International Conference
    on Disruptive Technologies (ICDT) Published: 2023 Show More IEEE Personal Account
    CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS
    Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL
    INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT
    & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility | Terms
    of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy
    Policy A not-for-profit organization, IEEE is the world''s largest technical professional
    organization dedicated to advancing technology for the benefit of humanity. ©
    Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 3rd International Conference on Smart Electronics and Communication, ICOSEC
    2022 - Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A Survey on Computational Aptitudes towards Precision Agriculture using Data
    Mining
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Peddi P.
  - Dasgupta A.
  - Gaidhane V.H.
  citation_count: '2'
  description: Smart farming is an evolving concept in the field of information and
    communications technology. In this, the IoT sensors and image processing is used
    to establish transparent mechanisms of feedback about the growth and productivity
    of crops and the environmental surrounding conditions. In this paper, the solution
    of the aforementioned problem statement in the form of an accountable live information
    system of the cultivated crops to yield efficiency has been presented. The feedback
    mechanism consists of monitoring parameters like temperature, humidity, weather,
    soil and crop moisture, crop health, etc. It provides the information between
    the planting phase and the harvesting phase to facilitate soil management and
    climate forecasting in real time. The proposed paper suggests the use of an open
    data platform, namely Adafruit IO, for visualizing and analyzing real-Time in
    the IoT integrated system. Further, image processing approach has been used for
    crop remotely health monitoring for 2 widespread diseases namely, Glomeralla Cingulata
    and Phaeoisariopsis Bataticola. Owing to the economical nature and the ergonomic
    design of the proposed system, it has the feasibility of being implemented on
    a large scale in water scarce economies aiming to build a sustainable smart farming
    infrastructure by automating existing irrigation systems.
  doi: 10.1109/IEMTRONICS55184.2022.9795747
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2022 IEEE International IOT, ...
    Smart Irrigation Systems: Soil Monitoring and Disease Detection for Precision
    Agriculture Publisher: IEEE Cite This PDF Premsai Peddi; Anuragh Dasgupta; Vilas
    H. Gaidhane All Authors 2 Cites in Papers 184 Full Text Views Abstract Document
    Sections I. Introduction II. Methodology III. Proposed System Design IV. Experimental
    Results and Analysis V. Conclusion Authors Figures References Citations Keywords
    Metrics Abstract: Smart farming is an evolving concept in the field of information
    and communications technology. In this, the IoT sensors and image processing is
    used to establish transparent mechanisms of feedback about the growth and productivity
    of crops and the environmental surrounding conditions. In this paper, the solution
    of the aforementioned problem statement in the form of an accountable live information
    system of the cultivated crops to yield efficiency has been presented. The feedback
    mechanism consists of monitoring parameters like temperature, humidity, weather,
    soil and crop moisture, crop health, etc. It provides the information between
    the planting phase and the harvesting phase to facilitate soil management and
    climate forecasting in real time. The proposed paper suggests the use of an open
    data platform, namely Adafruit IO, for visualizing and analyzing real-time in
    the IoT integrated system. Further, image processing approach has been used for
    crop remotely health monitoring for 2 widespread diseases namely, Glomeralla Cingulata
    and Phaeoisariopsis Bataticola. Owing to the economical nature and the ergonomic
    design of the proposed system, it has the feasibility of being implemented on
    a large scale in water scarce economies aiming to build a sustainable smart farming
    infrastructure by automating existing irrigation systems. Published in: 2022 IEEE
    International IOT, Electronics and Mechatronics Conference (IEMTRONICS) Date of
    Conference: 01-04 June 2022 Date Added to IEEE Xplore: 20 June 2022 ISBN Information:
    DOI: 10.1109/IEMTRONICS55184.2022.9795747 Publisher: IEEE Conference Location:
    Toronto, ON, Canada SECTION I. Introduction The internet of things (IoT) comprises
    of all the physical electronic devices that are connected to the internet, all
    of which are actively collecting and sharing information. These devices are likely
    to be found embedded with sensors, software, and processors that enable them to
    connect with other devices and systems over numerous communication networks. IoT
    has been considered a misnomer, given that no device needs to be connected to
    the public accessed internet. Today’s smart computing is mostly based on the Internet
    of Things and over the 46% of the world population is using this technology. It
    plays a vital role in transforming conventional forms of technology into next
    generation technology. IoT has already gained a critical role in areas of research
    globally and specifically in the area of advanced wireless communication technology.
    It has seen exponential growth in usage in a very short period of time. In the
    view of a normal user, IoT has laid the foundation for products that uses wireless
    technology extensively. For example, it is being used in products like smart living,
    smart education, automation, and process controls [1]-[3]. Commercially, it is
    being used in manufacturing, transportation, agriculture, and business management
    as well [4]-[7]. The future of agricultural technology is precision agriculture.
    The data that is being generated from multiple sensors on the field can be used
    for data analytics. Therefore, assisting farmers in improving crop yield. The
    aim of this paper is to design a working product which will enable farmers to
    access real time soil, crop, and environmental data. The anticipated advantages
    of smart farming include remote monitoring for farmers, handling water supply
    and natural resource conservation. Real time data allows for necessary manipulations
    of variables that can be handled by man. Integrating an image processing mechanism
    guarantees information about crop diseases as well. This would allow the farmer
    to take quick action and stop the disease from spreading to other crops in the
    field. Some disadvantages of smart farming are the requirements. Full– time availability
    of the internet is is a major challenge in the rural areas. Unfortunately, most
    of the farming in India happens in rural areas. However, there has been a lot
    of improvement in last few years. Multiple segments of Indian states have been
    getting access to the public internet. The smart farming-based equipment require
    farmers to understand and learn the use of technology. A mobile application with
    a sophisticated user interface however might enable farmers to understand how
    this concept works. Integration of image processing and computer vision enhances
    the potential of this system. With computer vision, the agricultural industry
    greatly benefits by further productivity along with lower capital costs surrounding
    production capacities [8]. This is done via the detection and analysis of objects
    and presenting valid hypotheses based on meaningful interpretations out of a sequence
    of images. Computer vision AI models have immeasurable uses in the fields of planting,
    harvesting, analysis of weather, weeding and crop health detection and real time
    feedback for monitoring [9]. This paper presented an agricultural system with
    an IOT environment which requires adequate manpower. It employs IOT and cloud
    computing globally to remove the inadequacy and lack of management, which are
    considered to be the key factors responsible for the decline in quality agriculture.
    SECTION II. Methodology Varying crops require different levels of water levels
    for cultivation between the plantation and the harvesting phase depending upon
    the week of harvest. Based on the standardized template of the sample crops, information
    about the minimum threshold and maximum capacity of water required along with
    live feed of additional parameters like pesticides, seed monitoring, sunshine
    and humidity on the proposed automated irrigation network would be fed into the
    system. The water supply from the submersible water pump would be released at
    regular intervals based on the inputs from the sensors in the soil. Moreover,
    the quantity and the type of pesticides can be decided using the concepts of image
    processing approaches. The image processing techniques such as morphology, binarization
    and segmentation can be used for the identification of anomalies over a crop area
    to estimate and monitor plant growth. SECTION III. Proposed System Design The
    proposed system for smart irrigation is shown in Fig. 1. It consists of Sensors,
    Node MCU, LDR and camera. The principal framework comprises of a Wi-Fi Module,
    specifically, an ESP8266 Node MCU configured with numerous sensors such as the
    DHT11 humidity sensor, DS18B20 temperature sensor probe, soil moisture sensor,
    a light dependant resistor (LDR) and a water pump as shown in Fig. 1. The descriptions
    of each sensor implemented in this design are given below. Fig. 1. Hardware Diagram
    Show All A. NodeMCU ESP8266 The ESP8266 is a low-cost Wi-Fi microchip, with built-in
    TCP/IP networking software, and microcontroller capability. This Wi-Fi module
    is used in the design to connect all the sensors to an online IO, Adafruit to
    share, collect and analyse the data. Fig. 2. NodeMCU Module Show All B. Soil Moisture
    Sensor Soil moisture sensors are globally used to estimate the content of water
    in the soil. The moisture sensor used in this system is a capacitive sensor. It
    calculates the change in capacitance caused due to the dielectric. It cannot measure
    moisture directly as pure water does not conduct electricity. Some advantages
    of using a capacitive sensor are that corrosion is avoided and gives an accurate
    reading of the moisture content in the soil. Fig. 3. Capacitive Moisture Sensor
    Show All C. DHT11 Humidity Sensor The DHT11 Sensor is the most frequently used
    temperature and humidity sensors in the field of IoT, owing to its extremely low
    price. It uses a capacitive humidity sensor and a thermistor to measure the air
    temperature. It also directly produces a digital signal without the need of an
    ADC. Fig. 4. DHT11 Sensor Show All D. Light Dependent Resistor(LDR) LDRs are also
    called photoresistors since the resistance produced is dependent on the amount
    of light. Hence, this module is used in our system to monitor the amount of sunlight
    during the day. The resistance of this LDR is indirectly proportional to the intensity
    of light, hence, when the light intensity increases, the resistance offered by
    the LDR decreases. Fig. 5. Light Dependent Resistor Show All E. Water Pump The
    mini water pump that is used in this model is a 3-5V DC Pump. It is programmed
    to turn on when the moisture content in the soil is lower than the configured
    value. Fig. 6. Mini Water Pump Show All This model also employs an open-source
    Input/Output (I/O) cloud service, namely, Adafruit I/O. It is a platform that
    permits aggregation, visualisation, and analyzation of live information on the
    cloud. Adafruit I/O also enables motor controls and reading data via sensors.
    The cloud service has multiple feeds that are used to monitor various data being
    captured by the sensors. A minima and maxima are predefined during configuration,
    below or over which the farmer is notified for corrective measure. The ESP8266
    NodeMCU governs the communication between the sensors on the board and behaves
    as the IOT Gateway to the cloud. All the sensors detect the physical parameters
    and convert the analogue value into a digital value. This is achieved using an
    in-built Analog-Digital-Converter (ADC) in the sensor modules. The humidity sensor,
    DHT11, is used to compute the environmental humidity. The temperature sensor probe
    and the OpenWeatherAPI is used to monitor the soil temperature and get live environmental
    temperature, respectively. The soil moisture sensor is a capacitive sensor which
    estimates the amount of water in the soil. It works on the principle of open and
    short circuit. In simpler words, it acts as a switch with an ON/OFF mechanism
    [11]. Whether the output is high or low indicated by the inbuilt LED. When the
    soil is dry, the current is not conducted, hence, acting as an open circuit, with
    the output being high. When the soil is wet, the current flows from one terminal
    to the other and the circuit is shorted. Consequently, the output is low. Therefore,
    when the moisture sensed is below threshold, the water pump turns on and provides
    continuous water flow till the threshold value is met [10]. The cloud service,
    Adafruit I/O, deployed in this system will provide a dashboard of multiple feeds
    depending on the parameters that have to be analysed. In this case, a total of
    8-9 feeds are set up which include all the data acquired from the installed sensors.
    This will also comprise of a system which will alert the farmer or the user when
    the environmental factors are extreme. For example, whenever the temperature measured
    is above the set point, an output from a decision logic notifies the farmer. A
    model Adafruit I/O dashboard from an run is shown in Fig. 7. Fig. 7. Adafruit
    Dashboard Show All The IoT based system is implemented by using Arduino IDE. The
    sensing phase is concerned with the estimates of all the physical parameters which
    comprise of humidity, moisture, temperature, and light. Although the ESP8266 module
    acts as the IoT gateway, Arduino is used to program the sensors to it. The basic
    flow of the program is as follows: F. Image Processing The following parameters
    can be broadly classified as the major criteria involved surrounding the productivity
    of crops and plants in 4 respective areas: Identifying Plant/Crop diseases Monitoring
    the growth of crop/plant Monitoring the health aspects of crop/plant throughout
    its plantation timeline The following flowchart in Fig. 8. lays down the foundations
    of the steps involved ranging from acquiring our image to the final classification
    of the disease detected: Fig. 8. Basic Steps of Image Processing in Leaf Disease
    Detection Show All The Images of the target plants during their harvesting phase
    are captured via a webcam. The images are preprocessed in order to eliminate any
    distortions or impurities and noise which might be present in the images extracted
    and are prepared for the upcoming processing methods like extraction of features
    required in the later stages. Segmentation is primarily done to separate the respective
    area of interest by filtering out from the image captured. The basic purpose of
    segmentation is to create a collection of segments that are combined overall to
    represent the entire image into a set of contours which are obtained from the
    captured image. Feature Extraction is mainly used to extract features from the
    processed image after which we use the respective features for classification
    purposes. Its main use is to reduce dimensions in the image and compress the data
    which is to be processed in order to target the specific features which help us
    in disease classification. This is done in order to filter out the input data
    and eliminate redundant data. Classification is done on the basis of spectral
    features in the features created. And classification aids in the process of dividing
    the feature target space into various classes according to the input decision
    rule. Initially after high resolution images of plants/crops are captured via
    a webcam, image pre-processing and processing techniques are implemented in order
    to get features which would be needed for analysis at a later time. The image,
    which is in the form of Red, Green and Blue (RGB) is converted to a Hue, Intensity,
    Saturation (HIS) model for increasing luminance of every frame of the image [11].
    Further for the purpose of smoothening and filtering out noise. This is done by
    enhancing contrast in the image for increasing the accuracy of output and better
    implementation of segmentation on the image. Furthermore, Image segmentation is
    carried out using thresholding which is an efficient method in order to separate
    the background from the foreground and also masking pixels which are green indicative
    of healthy parts of a leaf or crop [12]. Segmentation is done using means clustering,
    with standard Euclidean distance as the measuring parameter for calculating extent
    of similarity, which is an unsupervised machine learning algorithm where denotes
    the number of centroids (which represents the center of the cluster) that are
    present in our dataset. For our respective algorithm, a structure was created
    for color transformation which is based on the model proposed by Oo and Htun[13]
    in his research. This is done mainly to mask the green pixels of the leaf image
    which is to separate out parts of the image. Our proposed algorithm creates =
    3 clusters in no particular order- One cluster for separating out the leaf from
    the background, one cluster to segment out the healthy part of the leaf and the
    final cluster dedicated to segment out the infected and diseased part of the leaf,
    if there is any. Since is small, the computational speed of the algorithm increases
    exponentially than hierarchal clustering. The Infected cluster is converted to
    HSI from the RGB format. In this work, the SVM (Support Vector Machine) classification
    method is used because it is much easier due to less processing time [14]-[17].
    SECTION IV. Experimental Results and Analysis A. Irrigation System The various
    reading has been taken from the design system to facilitate and validate the proposed
    system. It has been observed that the water pump starts automatically at the particular
    soil conditions. A prototype for monitoring the soil condition is shown in Fig.
    9. The setup acquires the values of moisture, humidity and temperature and transmits
    it to the cloud via the NodeMCU Module. Fig. 9 Physical Setup Show All Table 1
    shows the status of the pump corresponding to the threshold value that has been
    set, along with other measured data. A tulsi plant was used for the purpose of
    testing and threshold range coded for moisture content used was between 60 to
    63, i.e below 60% moisture, the motor is on and above 63%, the motor is turned
    off, between 60 and 63, there is no change in the motor status. However, the threshold
    values for light and moisture can be changed in the program according to the needs
    during field implementations. Fig. 10 to Fig. 13, the variation of soil Moisture,
    Soil Temperature, Environment Humidity, Environment Temperature, respectively.
    TABLE 1. Sensor measured data distributed Fig 10. Soil Temperature sensed over
    a period of 8 hours Show All Fig 11. Environmental Humidity sensed over a period
    of 8 hours Show All Fig 12. Soil Moisture data of over 8 hours Show All Fig 13.
    Environment Temperature sensed over 8 hours Show All The graphs attached above
    were obtained for a testing period of 8 hours. All the data was also published
    on the online service Adafruit. This has been shown in the Fig. 14 below. Fig
    14. Published data on Adafruit IO Show All B. Disease Detection using Image Processing
    The presented model has been validated using the available dataset [18]. The images
    are initially pre-processed using the filter to remove the noise. After pre-processing
    edge extraction is carried out using canny edge detection approach to preserve
    main features and remove the remaining features as shown in Fig. 15. It is observed
    that Canny edge detection method performs better as compared Sobel approach. The
    feature extraction on the region of interest gives information whether the plant
    or crop is healthy or unhealthy. This work has been carried out for two widespread
    diseases – Glomeralla Cingulate and Phaeoisariopsis Bataticola. The various feature
    metrics then calculated and used as an input parameter for further classification.
    The various average values of parameters are shown in Table I. TABLE 2. Extracted
    Features Parameters The leaf disease detection GUI is also shown in the figure
    below. The images captured have vertical resolution and horizontal resolution
    of 96 dpi with bit depth equal to 24. The dimensions of the captured image is
    resized in MATLAB for processing. The webcam to capture query images to test our
    model has the following specifications: Lenovo 300 FHD Flexible Mount Webcam FHD
    1080P 2.1 Megapixel CMOS Camera. Fig. 15. (a) leaf with anthracnose, (b) contrasted
    image, (c) segmented image, (d, e, f) edge detected using Canny method for feature
    extraction, (g, h, i) edge detected using Sobel method for feature extraction
    Show All Fig. 16. Sample output of classification from a query image specifying
    affected region and accuracy of output which does 500 iterations Show All SECTION
    V. Conclusion This paper proposes and implements the smart farming- soil monitoring
    and disease detection system. The presented may be useful for automatic irrigation
    system which increases the efficiency of the harvesting process by tracking real
    time plant/crop growth. It enables the farmers at all times requiring his intervention
    in the process only in the case of any anomalies. The plant disease classifier
    classifies two diseases: Glomeralla Cingulate and Phaeoisariopsis Bataticola.
    The design can further be improved by increasing and training the dataset on new
    diseases and real time images. The proposed system reduces human labor and workload
    of the farmers. The process is economical owing to its low budget and highly feasible
    considering the processing of low-resolution images captured via webcam which
    implies its suitability for farmers’ uses. Authors Figures References Citations
    Keywords Metrics More Like This Soil Macro-Nutrients Detection, Crop and Fertilizer
    Recommendation with Irrigation System 2023 International Conference on Advances
    in Electronics, Communication, Computing and Intelligent Information Systems (ICAECIS)
    Published: 2023 An IOT-Based Soil Moisture Management System for Precision Agriculture:
    Real-Time Monitoring and Automated Irrigation Control 2023 4th International Conference
    on Smart Electronics and Communication (ICOSEC) Published: 2023 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: 2022 IEEE International IOT, Electronics and Mechatronics Conference, IEMTRONICS
    2022
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Smart Irrigation Systems: Soil Monitoring and Disease Detection for Precision
    Agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Narasimhan V.L.
  citation_count: '0'
  description: Agriculture is still dominated by conventional plough and bull, while
    richer farmers employ tractors to plough both deep and wide. With the advent of
    the Internet of Things (IoTs) along with cheap sensors, one can engage in precision
    agriculture, wherein water and nutrients can be controlled over the field using
    drip water irrigation. This paper details the design of a Precision Agricultural
    Information Management Systems (PAMIS). The sensor network obtains dynamic information
    about soil and the use of Digital Elevation Models (DEMs) and emulation of Glasshouse
    can significantly aid precision agriculture. Cloud Computing services and long-term
    analysis and synthesis of large/Big datasets also facilitate precision agriculture.
    However, there are issues relating to privacy, security and legal, because of
    the use of Information Systems for precision agriculture. Further, readiness for
    entomological preventive studies can also be attempted, besides predicting harvest
    potentials within 3–4 weeks of seedling growth. The performance of the PAMIS Cloud
    has been evaluated using parametric modelling technique and the results indicate
    that PAMIS Cloud system can successfully enhance the performance of the scientists
    and technical people involved in this field; the details are also provided in
    this paper.
  doi: 10.1007/978-3-030-94507-7_16
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Internet of Things and Connected
    Technologies Conference paper Precision Agricultural Management Information Systems
    (PAMIS) Conference paper First Online: 19 January 2022 pp 162–174 Cite this conference
    paper Access provided by University of Nebraska-Lincoln Download book PDF Download
    book EPUB Internet of Things and Connected Technologies (ICIoTCT 2021) V. Lakshmi
    Narasimhan  Part of the book series: Lecture Notes in Networks and Systems ((LNNS,volume
    340)) Included in the following conference series: International Conference on
    Internet of Things and Connected Technologies 528 Accesses Abstract Agriculture
    is still dominated by conventional plough and bull, while richer farmers employ
    tractors to plough both deep and wide. With the advent of the Internet of Things
    (IoTs) along with cheap sensors, one can engage in precision agriculture, wherein
    water and nutrients can be controlled over the field using drip water irrigation.
    This paper details the design of a Precision Agricultural Information Management
    Systems (PAMIS). The sensor network obtains dynamic information about soil and
    the use of Digital Elevation Models (DEMs) and emulation of Glasshouse can significantly
    aid precision agriculture. Cloud Computing services and long-term analysis and
    synthesis of large/Big datasets also facilitate precision agriculture. However,
    there are issues relating to privacy, security and legal, because of the use of
    Information Systems for precision agriculture. Further, readiness for entomological
    preventive studies can also be attempted, besides predicting harvest potentials
    within 3–4 weeks of seedling growth. The performance of the PAMIS Cloud has been
    evaluated using parametric modelling technique and the results indicate that PAMIS
    Cloud system can successfully enhance the performance of the scientists and technical
    people involved in this field; the details are also provided in this paper. Access
    provided by University of Nebraska-Lincoln. Download conference paper PDF Similar
    content being viewed by others QuinuaSmartApp: A Real-Time Agriculture Precision
    IoT Cloud Platform to Crops Monitoring Chapter © 2024 Information Technology for
    Sustainable Agriculture Chapter © 2019 Globally Scalable and Locally Adaptable
    Solutions for Agriculture Chapter © 2023 Keywords Precision agriculture Cloud
    computing Internet of Things (IoT) Sensor Networks and Precision Agricultural
    Management Information Systems (PAMIS) Parametric performance modelling 1 Introduction
    Long time ago, agriculture was dominated by conventional plough and bull and then
    came Tractors which can plough both deep and wide. Both the effectiveness and
    efficiency of agricultural operations were enhanced by these kinds of automation,
    which include other techniques such as automatic seedling planters. Later, drip
    water irrigation considerably optimized water and nutrients usage. Various types
    of timers encouraged Just-In-Time usage of various devices, thus enhancing overall
    agricultural production. Some kind of shading through implanted large trees and
    tarpaulins have also been used to climate control the fields in a limited fashion.
    The idea of intervening crop/plants along with the main crop in order to improve
    soil nutrition has always been employed. Precision Agriculture relates to the
    use of Information and Communication Technology (ICT) for all agricultural related
    activities [1]. The advent of Internet of Things (IoT) has made a quantum leap
    in ICT in many areas including medical, health, agriculture, aged-care and telemedicine,
    to name a few [2]. Simply put, IoTs have storage, processing power, sensing and
    communication power [11]. IoTs can also cooperate to work together, thereby creating
    a Cooperative Intelligent Agent system. Therefore they can sense, monitor and
    control various aspects of a given field, thereby seeding and solving issues in
    precision agriculture. However, precision agriculture does involve upfront investment
    for automating the agricultural field using IoT and related communications technology
    [3]. This paper details the design of a Precision Agricultural Information Management
    Systems (PAMIS). The rest of the paper is organized as follows: Sect. 2 introduces
    Precision Agriculture followed by Internet of Things (IoT) in Sect. 3 and the
    use of IoTs for Precision Agriculture using a network of IoTs and use of sensor
    network for obtaining dynamic information about soil in Sect. 4. Sections 5 and
    6 respectively detail the use of Digital Elevation Models (DEMs) and points to
    ponder in the deployment of such systems. Section 7 presents a list of practical
    issues in field farming, while Sect. 8 explains the means to exploiting long-term
    analysis and synthesis of large/Big datasets. Section 9 outlines the issues relating
    to privacy, security and legal, because of the use of Information Systems for
    precision agriculture, while Sect. 10 indicates the readiness for entomological
    preventive studies. Section 11 provides the way by which one can predict harvest
    potentials within 3–4 weeks of seedling growth, followed by the description of
    the design of the PAMIS information architecture in Sect. 12. Section 13 details
    the parametric modeling technique used for the performance evaluation of PAMIS,
    while the Conclusions summarizes the paper and provides pointers for further work
    in this arena. 2 What is Precision Agriculture The term Precision Agriculture
    relates to the large-scale deployment of sensors and communication devices over
    several inter-connected and cooperating Internet of Things (IoT) so that information
    about the soil, plants and the atmosphere can be collected and used for better
    agriculture production. Several types of datasets can be collected on a periodic
    basis from the IoTs using a multitude of sensors and the data collected can be
    analyzed using a variety of algorithms in order to predict a variety of factors,
    such as even output per acre of agricultural field in a given area [4]. However,
    IoTs need to be deployed properly and the data coming out of them can be affected
    by a variety of environmental factors, including dust, dirt, insects and others.
    Smart agriculture calls for systematic identification of all issues and usages
    and, ways and means to handle the datasets in context. 2.1 Relevance to Botswana
    Botswana is not necessarily an agrarian economy, as 85% of Botswana is part of
    the Kalahari Desert. Botswana’s agriculture is limited to the Okavango Peninsula,
    which is rich, but few farmers there follow principles of precision agriculture.
    Further, the nature of produces differs from one part to another and hence precision
    agriculture must be carefully introduced in this area. However, if Precision Agriculture
    principles are followed, productivity can increase manifold. 3 Internet of Things
    (IoT) The Internet of Things (IoT) is nothing but a computer system (embedded
    and/or non-embedded) which can also be a distributed heterogeneous system. It
    can also be a real-time system, which can be Internet Enabled with Wired and/or
    Wireless communication. Further, an IoT can communicate bi-directionally and Geo-Aware.
    In addition, IoTs can take decisions on their own and/or as a team/network of
    IoTs. As a consequence, the set of IoT devices placed at strategic places can
    become a powerful monitoring system. Figure 1 captures a possible classification
    of IoT based systems; examples of IoT systems include (see Fig. 2) Heart Pacemakers
    and Household products, such as Microwave oven, Washer, Dryer. Fig. 1. Classification
    of IoT based systems Full size image Fig. 2. Examples of IoT based systems Full
    size image 4 IoT for Precision Agriculture IoTs for agriculture usually have several
    sensors that measure a variety of parameters such as: Temperature, pH, Moisture
    level, saturated vapor pressure, degree of Trace minerals (e.g., Phosphate, Potassium,
    Nitrogen, Oxygen, etc.). In addition, Agricultural IoTs can contain in-plant sensors
    that measure some the parameters (e.g., level of nutrients inside a plant) and
    Pressure sensors which can measure the flow of nutrients inside a plant. One can
    now create a sensor network which collects dynamic information about a given soil
    and also about a given plant type. Typical IoTs can communicate with each other
    and contain multiple sensors 1. The sensors can form independent and autonomous
    units which can form dynamic networks of their own. As a consequence, dynamic
    information about the soil condition around the entire agricultural field can
    be obtained at the control station through several statistical algorithmic processes
    (e.g., averaging and normalization). 5 Using Digital Elevation Models (DEMs) A
    3-Dimensional Digital Elevation Model (DEM) [5] provides a better perspective
    of the landscape, particularly when the agricultural field is undulated as shown
    in Fig. 3. The DEM model also provide better understanding of the underlying hydrological
    considerations in the field. The DEM model will lead to the identification of
    areas where water or nutrients are logging and where they are in short supply,
    thereby resulting in better accuracy in soil sampling and soil classification.
    In addition, this will also lead to better cultivation planning and better crop
    siting. An understanding of the DEM model will also lead to better location of
    agricultural surveillance towers. There are software tools that can generate DEM
    model for a given field [5] and such software can be compared considering four
    aspects: i) price, ii) accuracy, iii) sampling density and, iv) pre-processing
    requirements. 6 Practical Points to Ponder Points to ponder on IoT deployments
    in agricultural fields include, but not limited to, the following: I. What are
    the best placements of IoT devices over a given field? II. What are the vulnerabilities
    of IoTs in an agricultural environment? III. How does one simplify generation
    of DEMs, given the technological/knowledge limitations of typical remote farmers?
    IV. How would one employ Cloud Computing services for Precision Agriculture? V.
    How would one go about exploiting long-term analysis and synthesis of large/Big
    datasets? How can one learn the long-term perspectives of Botswana’s agricultural
    sector? VI. How can the individual farmers’ agricultural datasets be protected
    for the points of view of privacy, security and legal? VII. What are the possibilities
    of hacking the datasets and, the creation of wrong and misleading datasets – particularly
    given the marketing forecast potentials of agricultural produces? (see Fig. 4
    on the vast nature of datasets that can be collected) VIII. To what extent the
    IoT-enabled field be readied for entomological preventive studies [6]? IX. Can
    the harvest potentials of a given crop be predicted within 3–4 weeks of seedling
    growth? X. What would be the overall information architecture underlying protocols
    for communication and data exchange between devices and sub-systems? A possible
    information architecture for this application is provided in Fig. 6. XI. What
    would be the kind of Big Data algorithms and their applications to precision agriculture?
    XII. How does one enhance the overall performance of the PAMIS system [12]? Fig.
    3. IoTed agricultural field (adapted from [23]) Full size image Fig. 4. Effecting
    improvements in crop yield (adapted from [23]) Full size image 7 Practical Issues
    in Field Farming IoT deployments in agricultural fields are fraught with practical
    difficulties which include, but not limited to, the following: Mud building over
    sensors and other parts of IoT thereby rusting them out. Animals, humans and equipment
    stomping over sensors and IoTs. Insects and birds building nests over sensors,
    thereby affecting the accuracy and resolution of sensors. Agricultural chemicals
    affecting various parts of IoT, particularly sensors and IoTs. Environmental decay
    of various parts of IoT, particularly sensors. 8 Exploiting Long-Term Analysis
    and Synthesis of Big Datasets Long term analysis of datasets include, but not
    limited to, the following: Average nutrient level in the ground for a given crop
    type. Average moisture content in the ground. Crop inbreeding options and opportunities.
    Long-term In-plant sensor parameters that indicate average fluid flow inside plants
    in a given terrain. Predictive, Prescriptive and Pre-emptive analytics on various
    issues of agriculture – e.g., performance, pricing, etc. 9 Privacy, Security and
    Legal Issues Issues relating to privacy, security and legal are many [8, 15],
    but the critical ones that affect farmers include the following: Privacy Issues
    Would individual farmer’s datasets be protected from “Agricultural Vulture Capitalist?”
    Would pricing of crop & their insurance values become vulnerable? Security Issues
    What kind of access controls may be needed for storing, retrieving and protecting
    big datasets? Who or what will control data granularity and data Provenance? Legal
    Issues Can Financial Institutions and Insurance companies demand such short-term
    and long-term datasets for their analyses? Are these datasets be demanded by the
    court of law? 10 Readying for Entomological Preventive Studies It is well-known
    that insects typically follow wind patterns – actually most insects go against
    them as pollen is brought in by wind, while some insects help in pollination –
    but others can be pests. Advanced pest management is possible by combining wind
    patterns with agricultural data sets for both preventative and pollination studies.
    This approach calls for new and novel ways of acquiring data sets so that flowering
    and fruiting of plants along with wind patterns can be analyzed for entomologically
    active preventive programs [6]. 11 Predicting Harvest Potentials Within 3–4 Weeks
    of Seedling Growth The availability of agricultural big datasets along with crop
    models 2 can lead to predicting the amount of harvest ahead of time. “Can the
    degree of harvest be predicted within 3–4 weeks of seedling growth?” would be
    an excellent question to analyze, as this can relate to average price per quintal
    at harvest time and could potentially decide the time of planting and harvesting.
    12 Cloud Based Information Architectural Confluence of PAMIS The architecture
    of PAMIS is mobile Cloud based [9, 18] with several services (see Fig. 5): i)
    Data as a Service (DaaS) [16] providing services for variety of Sensor data handling,
    IoT handling, Sensor life-cycle handling and Sensor provenance handling, ii) Software
    as a Service (SaaS) [17, 21] providing services for Feature location and extraction,
    DEM generation, Entomological data analysis, Data comparison, sub-image extraction,
    Image query processing, Historical analysis and Life-cycle analyses, iii) Portability
    & Interoperability as a Service (P-IaaS) [19, 22] providing services for Format
    conversion, Metadata Management, Data dictionaries, Glossary management, Data
    and information exporting and Interoperability Standards management, iv) Human
    Computing Interface as a Service (HCaaS) providing services for Decision support,
    Knowledge query management and HCI management, and, v) Generic Services providing
    services for Research data analytics, (generic) decision support, Cloud security
    management, Performance tuning, Office Services and Cloud help line. The architecture
    employs a confluence of technologies and communication protocols. The details
    of the architecture, along with its stage-wise optimizer will be covered in a
    later paper. 13 Parametric Performance Evaluation of the PAMIS Cloud A parametric
    model based evaluation of the EDAM Cloud system has been carried out. Tables 1
    and Table 2 provides typical parameters used for the evaluation of the EDAM Cloud,
    which have been obtained after discussions with several experts. Table 3 provides
    a list of performance indicators and their values, wherein the values are calculated
    using Relative Cost Unit (RCU) so that depending on the actual cost of individual
    companies a suitable multiplier can be employed to calculate the corrected values
    of various performance indices. It is hoped that these indicators will provide
    the way forward for the advancement of such systems in various marine sensor network
    R&D centers around the world. Table 1. Parameters for evaluating PAMIS-cloud information
    systems architecture Full size table Table 2. Parameters for evaluating PAMIS-cloud
    information systems architecture Full size table Table 3. PAMIS--precision agriculture
    cloud performance indicators Full size table 14 Conclusions Precision Agriculture
    is now the future and it can be cost-effective even in Botswana. The Internet
    of Things (IoT) is useful for precision agriculture. The underlying sensor networks
    can collect dynamic information about soil and store them. In addition, Digital
    Elevation Models (DEMs) & Glasshouse based DEMs & Emulation are useful for Precision
    Agriculture, besides the fact that Cloud Computing services are a must for Precision
    Agriculture. Exploiting long-term analysis and synthesis of large/Big datasets
    would be useful for Precision Agriculture – including readying agricultural field
    for entomological preventive studies. Privacy, security and legal issues are important
    issues to consider in Precision Agriculture. Furthermore, predicting harvest potentials
    within 3–4 weeks of seedling growth is now possible so that price per quintal
    can be predicted (and hence the profits thereof); appropriate storage mechanism
    and related constraints therein can also devised. Global optimization of various
    parameters is also now possible, leading to better overall agricultural management,
    performance and profit margins. Future research in this arena include: i) preventing
    sensor degradation or computationally compensating thereof, ii) protecting field
    IoTs, iii) developing newer data analytics/algorithms for better precision agriculture
    and iv) enhancing entomological studies, particularly for horticulture applications.
    The performance of the PAMIS Cloud has been evaluated using parametric modelling
    technique and the results indicate that PAMIS Cloud system can successfully enhance
    the performance of the scientists and technical people involved in this field;
    the details are also provided in this paper. Notes 1. A very interesting medical
    application with multiple sensors collecting information over a cloud environment
    is described in [10]. 2. Crop models along with soil models can provide a good
    prediction of the growth of a given crop – regarding rate of growth, flowering
    and fruiting timings, level of yield, etc. References Precision Agriculture: https://whatis.techtarget.com/definition/precision-agriculture-precision-farming.
    Accessed 15 Sept 2019 Internet of Things (IoT): https://en.wikipedia.org/wiki/Internet_of_things.
    Accessed 15 Sept 2019 Benefits and Costs of Entry Level Precision Agriculture:
    https://nydairyadmin.cce.cornell.edu/uploads/doc_410.pdf. Accessed 15 Sept 2019
    Jones JW et al (2003) The DSSAT cropping system model. Eur J Agron 18(3–4):235–265
    Article   Google Scholar   NASA World Wind: Opensource GIS for Mission Operations
    (DEM Model Development): https://ieeexplore.ieee.org/abstract/document/4161692.
    Accessed 15 Sept 2019 Imms AD (2012) Recent advances in entomology. London Google
    Scholar   NIST Definition of Cloud Computing. https://csrc.nist.gov/publications/detail/sp/800-145/final.
    Accessed 14 Sept 2019 NIST Cloud Computing Security Reference Architecture. https://csrc.nist.gov/publications/detail/book/2016/cloud-computing-security-essentials-and-architecture.
    Accessed 14 Sept 2019 De D (2016) Mobile cloud computing: architectures, algorithms
    and applications. CRC Press, Boca Raton Google Scholar   Lakshmi Narasimhan V
    (2019) Botswana’s lab-ın-A-briefcase – a position paper. In: ACM press proceedings
    of the Australasian computer science week (ACSW 2019), Sydney, Australia, pp 29–31,
    January 2019 Google Scholar   Arduino. https://www.arduino.cc/. Accessed 14 Sept
    2019 Lakshmi Narasimhan V, Jithin VS (2018) Time-cost effective algorithms for
    cloud workflow scheduling - extension of an earlier work. In: Proceedings of IST
    Africa ınternational conference Gaborone, Botswana, 9–11 May 2018. IEEE Xplore
    Google Scholar   India’s Department of Electronics and Information Technology
    (DeitY). www.deity.gov.in. Accessed 14 Sept 2019 India’s Ministry of Electronics
    and Information Technology Initiative (MeitY). www.meity.gov.in. Accessed 14 Sept
    2019 Lakshmi Narasimhan V (2013) Research issues and challenges in cloud computing-
    a critical perspective. In: National seminar on computational ıntelligence (NSCI
    2013), SRM University, Kattangalattur, India, 21–22, January 2013 Google Scholar   Data
    as a service: https://searchdatamanagement.techtarget.com/definition/data-as-a-service.
    Accessed 5 June 2019 Software as a service: https://searchcloudcomputing.techtarget.com/definition/Software-as-a-Service
    Accessed 5 June 2019 Intel Cloud Computing: Transform IT for a Hyper Connected
    World – Intel Cloud Computing. https://www.intel.com/content/www/us/en/cloud-computing/overview.html.
    Accessed 17 Sept 2019 Infrastructure as a Service – Tech Target Infrastructure
    as a Service – Tech Target. https://searchcloudcomputing.techtarget.com/definition/Infrastructure-as-a-Service-IaaS.
    Accessed 17 Sept 2019 Benefits of Cloud Computing in Business. https://www.eukhost.com/blog/webhosting/10-benefits-of-cloud-computing-for-businesses/.
    Accessed 17 Sept 2019 Software as a Service – Tech Target. https://searchcloudcomputing.techtarget.com/definition/Software-as-a-Service.
    Accessed 17 Sept 2019 IaaS vs DaaS vs PaaS vs SaaS – Which should you choose?
    – ESDS Blog. https://www.esds.co.in/blog/iaas-vs-daas-vs-paas-vs-saas-which-should-you-choose/.
    Accessed 17 Sept 2019 Le TD, Tan TH (2015) Design and deploy a wireless sensor
    network for precision agriculture. In: 2nd national foundation for science and
    technology development conference on ınformation and computer science (NICS),
    https://doi.org/10.1109/nics.2015.7302210 Upscaling of greenhouse vegetable production:
    https://www.cbs.nl/en-gb/news/2018/16/upscaling-of-greenhouse-vegetable-production.
    Accessed 17 Sept 2019 Download references Author information Authors and Affiliations
    Department of Computer Science, University of Botswana, Gaborone, Botswana V.
    Lakshmi Narasimhan Corresponding author Correspondence to V. Lakshmi Narasimhan
    . Editor information Editors and Affiliations Department of Computer Science and
    Engineering, Indian Institute of Technology, Patna, Bihar, India Rajiv Misra Department
    of Computer Science, Central University of Rajasthan, Jaipur, Rajasthan, India
    Nishtha Kesswani City University of London, London, UK Muttukrishnan Rajarajan
    Department of Electrical and Computer Engineering, National University of Singapore,
    Singapore, Singapore Bharadwaj Veeravalli Department of Computer Science, Florida
    Polytechnic University, Lakeland, FL, USA Ashok Patel Rights and permissions Reprints
    and permissions Copyright information © 2022 The Author(s), under exclusive license
    to Springer Nature Switzerland AG About this paper Cite this paper Narasimhan,
    V.L. (2022). Precision Agricultural Management Information Systems (PAMIS). In:
    Misra, R., Kesswani, N., Rajarajan, M., Veeravalli, B., Patel, A. (eds) Internet
    of Things and Connected Technologies. ICIoTCT 2021. Lecture Notes in Networks
    and Systems, vol 340. Springer, Cham. https://doi.org/10.1007/978-3-030-94507-7_16
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-030-94507-7_16
    Published 19 January 2022 Publisher Name Springer, Cham Print ISBN 978-3-030-94506-0
    Online ISBN 978-3-030-94507-7 eBook Packages Engineering Engineering (R0) Share
    this paper Anyone you share the following link with will be able to read this
    content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Publish with us Policies and ethics Sections Figures References Abstract
    Introduction What is Precision Agriculture Internet of Things (IoT) IoT for Precision
    Agriculture Using Digital Elevation Models (DEMs) Practical Points to Ponder Practical
    Issues in Field Farming Exploiting Long-Term Analysis and Synthesis of Big Datasets
    Privacy, Security and Legal Issues Readying for Entomological Preventive Studies
    Predicting Harvest Potentials Within 3–4 Weeks of Seedling Growth Cloud Based
    Information Architectural Confluence of PAMIS Parametric Performance Evaluation
    of the PAMIS Cloud Conclusions Notes References Author information Editor information
    Rights and permissions Copyright information About this paper Publish with us
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Lecture Notes in Networks and Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Precision Agricultural Management Information Systems (PAMIS)
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
