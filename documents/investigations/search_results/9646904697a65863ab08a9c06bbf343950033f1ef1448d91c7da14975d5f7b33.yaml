- DOI: https://doi.org/10.1109/icc.2011.5963502
  analysis: '>'
  authors:
  - Yi Fei Tan
  - Kai Hong
  - Shamik Sengupta
  - K. P. Subbalakshmi
  citation_count: 11
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2011 IEEE International Confe...
    Spectrum Stealing via Sybil Attacks in DSA Networks: Implementation and Defense
    Publisher: IEEE Cite This PDF Yi Tan; Kai Hong; Shamik Sengupta; K. P. Subbalakshmi
    All Authors 7 Cites in Papers 205 Full Text Views Abstract Document Sections I.
    Introduction II. System Model III. Implementation of Sybil Attacks in CR Testbed
    IV. Defense Against Sybil Attacks V. Conclusions Authors Figures References Citations
    Keywords Metrics Footnotes Abstract: In this paper, we investigate Sybil attacks
    on spectrum allocation in distributed dynamic spectrum access (DSA) networks.
    Using IEEE 802.11 devices as secondary nodes, we demonstrate the feasibility of
    mounting Sybil attacks in the cognitive radio testbed, in which the malicious
    node poses as multiple normal secondary nodes with different identities in order
    to steal more spectrum bands. We also show the impact of the attack through an
    example and simulation results. A defense strategy using the statistics of beacon
    intervals is also proposed. Through experimental results, we show the effectiveness
    of this defense mechanism when there is no interference from external sources
    as well as in the presence of interference. Published in: 2011 IEEE International
    Conference on Communications (ICC) Date of Conference: 05-09 June 2011 Date Added
    to IEEE Xplore: 28 July 2011 ISBN Information: ISSN Information: DOI: 10.1109/icc.2011.5963502
    Publisher: IEEE Conference Location: Kyoto, Japan SECTION I. Introduction The
    conventional spectrum management policy, which results in over-utilization in
    some bands and under-utilization in others, has been demonstrated to be inefficient.
    This observation has led the Federal Communication Commission (FCC) to initiate
    the recent spectrum policy reform [1]. The new dynamic spectrum access (DSA) paradigm
    allows unlicensed secondary nodes to opportunistically use free licensed spectrum
    frequencies as long as causing no interference to the licensed primary users [2].
    Cognitive radio (CR) [3] is expected to make DSA a reality. Unlike conventional
    radios, CRs can adjust transmission/reception parameters based on interaction
    with the environment, find the best available spectrum bands and vacate promptly
    upon sensing the return of primary users. While other aspects of DSA/CR networks
    have received significant attention in recent years, research in the area of DSA
    network security is still emerging [4], [5]. Due to the lack of comprehensive
    security standards and specific attack prevention protocols, DSA networks are
    highly vulnerable to various malicious threats, e.g., denial-of-service (DoS)
    attacks. Particularly, due to the open paradigm, interoperability and dynamic
    nature of CR devices, the environment of DSA networks is continuously varying
    and thus, the identity authentication becomes a challenge. Hence, DSA networks
    are highly susceptible to identity attacks like the Sybil attack. In a Sybil attack,
    originally introduced by Douceur in the context of peer-to-peer network [6], a
    physical malicious node takes on multiple identities and behaves as multiple distinct
    nodes (called Sybil nodes) in the system. In the worst case, one physical malicious
    node may generate an arbitrary number of additional identities. Sybil attacks
    in the context of sensor networks were systematically analyzed in [7], where several
    forms of Sybil attacks to perturb or compromise sensor network protocols were
    discussed and some potential defense strategies were proposed. One strategy to
    defend against Sybil attacks is based on localization [8], [9], where received
    signal strengths are used to verify the transmitting nodes'' positions. However,
    CR secondary nodes are dynamically changing locations and thus such defense is
    infeasible in DSA networks. The concepts and techniques from social networks have
    also been applied to distinguish honest and Sybil nodes [10], [11]. However, these
    methods requires every node to establish a trust system for all other nodes, which
    leads to much overhead in computation and communication for CR devices. To the
    best of our knowledge, this work is the first attempt to understand Sybil attacks
    in DSA networks. Since there are lots of new functionalities exclusively developed
    for CR devices [2], investigating Sybil attack in terms of both its feasibility
    and impact is critical. In this paper, we study the impact of Sybil attacks on
    distributed spectrum allocation and propose some defense mechanisms against it.
    We implement the Sybil attack using IEEE 802.11 devices in our CR testbed, SpiderRadio
    [12]. In our implementation, one malicious node registers itself as multiple nodes
    by sending beacon frames embedded with different identity information to its neighboring
    nodes within interference range. Through an illustrated example and sim-ulation,
    we show the degradation in fairness of bandwidth allocation caused by the Sybil
    attack. In order to mitigate the Sybil attack, a defense strategy is proposed
    using anomalies in beacon transmissions of Sybil nodes. We explore the statistics
    of beacon intervals on the receiver''s side to differentiate between the beacon
    frames sent from the Sybil nodes and nodes. Both hardware and software based methods
    for generating beacons frames with multiple identities are considered. The testbed
    experiments are conducted under no interference from external sources as well
    as in the presence of interference. Results show that the beacon frames sent from
    Sybil nodes can be identified with high detection probability for both the software
    and hardware based methods. The rest of the paper is organized as follows. The
    system model is discussed in Section II. In Section III, we demonstrate the implementation
    feasibility of the Sybil attack and present an illustrative example as well as
    simulation results to show the impact of the attack. In Section IV, a defense
    strategy is proposed and demonstrated effective through experimental results.
    The conclusions are drawn in the last section. SECTION II. System Model A. Sybil
    Attacks in DSA networks Providing the security support for distributed DSA networks
    is particularly challenging for several reasons: (a) Distributed DSA networks
    are susceptible to attacks ranging from passive eavesdropping to active interfering,
    frequent break-ins by adversaries due to their open, ubiquitous and interoperable
    nature; (b) They are highly “mobile” in frequency and location [13]; (c) Due to
    the open source nature of DSA networks, it is practically impossible to establish
    a standard database to record the identity information for every CR node [4].
    Thus, in a distributed DSA network without a trusted central entity, it is difficult
    for independent secondary nodes to verify the authenticity of identities of their
    neighboring nodes and so, Sybil attack is a serious security threat. Sybil identities
    can be used in different types of attacks. For example, if sufficient number of
    Sybil identities are created in a system, they can easily “out vote” good secondary
    users in major decision making processes. Sybil nodes can be used to mount a Byzantine
    attack against collaborative spectrum sensing protocols. Sybil nodes can also
    be used to capture unfair spectrum shares. We study this aspect in greater details.
    B. Problem Formulation We consider a distributed overlay DSA network within a
    geographical region where N secondary nodes are competing for limited available
    spectrum bands. We follow a simple interference model wherein the transmissions
    between neighboring secondary nodes fail if they are within certain distance of
    each other and use the same frequency band or overlapping frequency bands. Thus,
    the spectrum allocation can be modeled as a distributed graph coloring problem.
    We define an undirected graph G = {V, E, G}. V represents the set of vertices
    denoting all secondary nodes in the network. E is the set of all undirected edges
    and every edge denotes the interference constraint among two adjacent nodes, i.e.,
    if any two distinct vertices have an edge in between them, they are at risk of
    interfering each other if using the same frequency band for transmission. G represents
    the total number of colors filling the entire graph. The optimal graph coloring
    problem is known to be NP-hard in searching and NP-complete in decision. Without
    loss of generality, we apply the multi-coloring algorithm proposed in [14], which
    provides both efficient spectrum utilization and good fairness . Furthermore,
    we assume that there exists one or more malicious nodes that want to acquire spectrum
    bands unfairly. These malicious nodes generate some virtual Sybil nodes, each
    associated with an unique counterfeit identity and capable of behaving as a normal
    secondary node from the perspective of other nodes. To maximize the individual
    spectrum occupancy, the malicious node tries to capture as much spectrum as possible
    using Sybil nodes. In the next section, we will discuss how the malicious node
    launches Sybil attacks and implement it in our CR testbed. SECTION III. Implementation
    of Sybil Attacks in CR Testbed A. System Setup We use Soekris Net-5501 board,
    shown in Fig. 1, as the motherboard in our testbed, which is equipped with AMD
    Geode LX CPU with X86 architecture and running Linux 2.6 operating system. We
    also apply a patch in the kernel to implement the watchdog protocol, which makes
    the system work regularly. The wireless network interface cards (WNICs) equipped
    with Atheros chipset are provided by Ubiquiti Network Inc. The device driver for
    this chipset is Madwifi which we modify to generate Sybil attacks. We set this
    board as a CR secondary node equipped with two separated WNICs. One is used for
    broadcasting its own service set identifiers (SSID). The other is used as a “monitor”,
    in which we modify the Madwifi to capture all the beacon frames from the air,
    and also record both the timestamps from these beacon frames and local hardware
    timestamps in the receiver''s wireless chipset. Fig. 1. The Soekris Net-5501 board.
    Show All B. Implementation of Sybil Nodes In the experiment, we consider that
    the secondary node sends beacon frames to its neighboring nodes within the interference
    range to claim the interference constraint. For example, if node X receives a
    beacon frame from node Y, X and Y are connected by an edge in the graph topology.
    The standard 802.11 frame is composed by components tuple {Preamble, PLCP header,
    MAC data with CRC} [15]. In Madwifi, beacon frames transmission can be done either
    by hardware or by software. Both methods can be applied to create multiple SSIDs
    in our testbed. Our chipsets from Atheros support up to 64 SSIDs for one physical
    device. In our experiment, we implemented both hardware based and software based
    techniques for the malicious nodes to generate beacon frames with different SSIDs.
    In general, there are two stages to maintain a SSID, i.e., beacon frame generation
    stage and beacon frame transmission stage. The beacon frame generation is the
    same in both hardware and software based methods. To generate a beacon frame,
    the control field in the MAC header for the malicious node should be set properly
    (e.g., type field: 00; subtype field: 1000). Moreover, we set a distinct MAC address,
    SSID field and beacon interval field in each frame body. These fields must contain
    information that will be verified valid by the receiver. A set of acceptable values
    for these fields can be obtained by capturing SSID information from the air in
    other places using Wispy DBxs . Then, each beacon frame is sent to the neighboring
    normal secondary nodes within the hearing range. At this point, the malicious
    node successfully generates several Sybil nodes with multiple identities. The
    differences between software based and hardware based methods mainly are in the
    beacon frame transmission stage. In the hardware based method, three timers are
    used in a chipset, i.e., the target beacon transmission time (TBTT), software
    beacon alert (SWBA) and direct memory access (DMA) beacon alert (DBA). SWBA fires
    first, which generates an interrupt to notify the host to generate the beacon
    frame, and set this frame in pre-mapped DMA memory. DBA is fired next, which initiates
    the transmission of the prepared beacon frame from the host''s DMA memory to chipset''s
    hardware memory. Finally, TBTT is fired and the frame is transmitted into the
    air at the exact time following 802.11 timing protocol. Managed by this policy,
    beacon frames could be transmitted with highly accurate timing. However, not every
    chipset supports this policy. Hence, we also implement software based method in
    Madwifi, in which only one timer is used in the operating system. Every time the
    timer is fired, a beacon frame is attached to the queue for transmission. Hence,
    software based solution cannot guarantee accurate timing of transmission. In the
    next section, we will propose a defense mechanism via timing detection method
    to classify the SSIDs from normal nodes and Sybil nodes for both hardware and
    software based attacks. If the transmission powers of the beacon frames from all
    Sybil identities are the same, it is possible for the receivers to suspect the
    source of these beacon frames. Hence, we apply per-packet transmission power control
    to send beacon frames with different power levels. This can be done in two steps.
    Firstly, we attach the flag “haltpc” when we load Madwifi into memory. This flag
    is used to enable/disable (set to 1/0) the transmission power control function.
    Then, we set a different transmission power for each frame. Particularly, for
    Atheros chipset, a separated tx descriptor in Madwifi is assigned for every frame
    and related parameters (i.e., transmission power and modulation mode) for this
    transmission are set up in this descriptor. Hence, we just need to setup power
    level in it and the frame will be sent with the soecified Power. As a result,
    the neighboring secondary nodes will receive many beacon frames with different
    identity information and received signal strengths and erroneously think that
    they are from different physical nodes, whereas in reality some of these are from
    virtual Sybil identities. C. Illustrative Example and Simulations As an example,
    we set up 4 physical CR nodes in our testbed and assume that they share a certain
    size of spectrum bandwidth. As shown in Fig. 2, each color indicates an allocated
    spectrum for a particular CR node and the number of sub-bands is determined by
    the total number of colors used in the graph coloring process. Firstly, we consider
    the case without Sybil attacks. Based on the experiment setup, the topology and
    graph coloring result are shown in the left hand side (LHS) figure in Fig. 2.
    There are totally three different colors in Fig. 2. Nodes A, C and D are assigned
    one color and node B is assigned two colors, which indicates that A, C and D get
    1/3 of the entire spectrum bands and node B gets 2/3 of the entire spectrum bands.
    Then, we consider node A as a malicious node which generates two Sybil nodes A1
    and A2 following the steps described in the previous subsection. In order to maximize
    the spectrum occupancy, the malicious node controls nodes A1 and A2 to claim interference
    constraints to all other normal secondary nodes within its interference range.
    Thus, the topology and graph coloring result changes as shown in the right hand
    side (RHS) of Fig. 2. As illustrated, there are five different colors in the graph,
    in which the malicious node A (together with two Sybil nodes) is assigned three
    colors and can obtain 3/5 of the entire spectrum bands. Therefore, by launching
    Sybil attacks, the malicious nodes can acquire more spectrum bands than other
    nodes, which will result in inefficient and unfair spectrum allocation. Fig. 2.
    The graph topology and coloring for all the secondary nodes. RHS represents a
    scenario with Sybil nodes and LHS represents a scenario without Sybil nodes. Show
    All To evaluate the degradation in fairness caused by Sybil attacks, we use Jain''s
    fairness index [16] to measure the fairness of the spectrum allocation. For this
    problem, the fairness decreases from 0.89 without Sybil attack to 0.81 with Sybil
    attak. D. Simulation Results We further conduct simulations in the MS Visual Studio
    environment to investigate the impact of Sybil attacks on graph coloring based
    spectrum allocation in DSA networks. In the simulation, we consider 50 physical
    secondary nodes sharing a total of 750 MHz available spectrum bands within a 1
    km radius region. We set the interference range as 400 m for two adjacent secondary
    nodes. Meanwhile, we assume that there exists one physical malicious node launching
    Sybil attack. To achieve a fair comparison, we use the same initial network topology
    without Sybil nodes, i.e., the graph containing 50 vertices and 197 edges. The
    simulation results are averaged over 100,000 Monte Carlo simulations. Fig. 3 shows
    the impact of Sybil attack on spectrum allocation with respect to the number of
    Sybil nodes. It is observed from Fig. 3(a) that the malicious nodes can obtain
    more spectrum by generating more Sybil nodes (e.g., approximately 85% if generating
    20 Sybil nodes). Moreover, as illustrated in Fig. 3(b), the fairness of the spectrum
    allocation will greatly degrade with the increase in the number of Sybil nodes
    existing in the network. Fig. 3. The impact of Sybil attack on spectrum allocation
    with respect to the number of Sybil nodes. (a) The total spectrum the malicious
    node acquire; (b) The Jain''s fairness for the network. Show All SECTION IV. Defense
    Against Sybil Attacks In this section, we propose a defense strategy against Sybil
    attacks by exploring the differences between good and Sybil nodes, in statistics
    of time intervals between two consistent beacon frames (beacon intervals), on
    the receiver''s side. In practice, a normal 802.11 device uses hardware based
    method to send beacon frames because this achieves better accordance and accuracy
    with the 802.11 standard requirements than the software solution, especially in
    high-load cases. Hence, we adopt the hardware based method for good secondary
    nodes in our experiments. However, not all devices support the functionality of
    creating multiple different SSIDs based on the hardware solution. Hence, we consider
    both hardware and software techniques for the malicious node to generate different
    SSIDs for Sybil nodes. In the experiment, we assume that both the good secondary
    node and malicious node send the beacon frame to the same target receiver using
    burst transmission mechanism [17]. In the experiment setup, we set the beacon
    intervals on the sender''s side as 100ms for both software and hardware based
    methods. As soon as the beacon frame arrives at the receiver''s WNIC, a microsecond-accurate
    timestamp is generated based on the receiver''s hardware clock. It is noted that
    this timestamp is generated by the WNIC, not the operating system and thus the
    delay between the beacon receiving and operating response could be neglected.
    The interference signal used in the experiment is an unlimited data rate FTP transmission
    between two other nodes in the communicating band with the throughput as 27Mbps.
    A. Defense against Software Based Sybil Attack In this case, we consider that
    the malicious node adopts the software based method to generate beacon frames
    with different SSIDs, whereas the good node uses the hardware based method. Thus,
    if we can distinguish the beacon frames generated based on software technique,
    the Sybil nodes will be identified. On the receiver''s side, all beacon frames
    are collected for 15 minutes and the beacon intervals for every source are calculated.
    Then, we apply a sliding window containing 10 consistent beacon intervals to compute
    the standard deviation for each window. Fig. 4. The comparison of the standard
    deviation of beacon intervals in one window between the hardware and software
    based methods. (a) Without interference; (b) With interference. Show All Fig.
    4 shows the histogram of the standard deviation of beacon intervals in one window
    on the receiver''s side. As illustrated in Fig. 4(a), the standard deviation values
    for the hardware based method are small and concentrated, whereas those for the
    software based method are large and scattered. Thus, if there is no interference,
    we can easily differentiate the hardware and software techniques based on the
    statistics of beacon intervals. On the other hand, when we add some interference
    signals, as shown in Fig. 4(b), standard deviation values for these two techniques
    are closer and even overlap a bit. However, we can still differentiate them with
    high probability. For instance, if we set the threshold as 1600ms, the false alarm
    probability is 1.17%, the misdetection probability is 0.055%. If the threshold
    is set to be 1800ms, the false alarm probability is 0.61%, the misdetection probability
    is 0.14%. Therefore, if the malicious node adopts the software based method to
    send beacon frames with multiple SSIDs to neigh-bors, it is easy for the receiver
    to detect beacon frames from Sybil nodes based on the observation on beacon intervals.
    B. Defense against Hardware Based Sybil Attack In this case, we assume that the
    malicious node is able to generate multiple SSIDs for beacons frames via hardware
    based method. Without loss of generality, we consider a simple scenario in our
    experiment: one malicious node creating two different SSIDs and two good nodes
    each using its own SSID send beacon frames to the same receiver. Thus, on the
    receiver''s side, it will receive the beacon frames associated with four different
    SSIDs. For the purpose of analysis, we classify this scenario into two cases:
    Case 1: Two SSIDs from two different physical nodes. Case 2: Two SSIDs from the
    same physical node. We define the time interval between two consistent beacon
    frames with different SSIDs as the inter SSID interval (lSI). In order to minimize
    the experimental errors due to the packet loss, we record the beacon intervals
    with different SSIDs and less than half of the prescribed beacon interval(100ms),
    into the lSI data set. Similarly, the sliding window is also used to calculate
    the distribution of lSI data. Fig. 5. The comparison of the lSI values in one
    window between Case 1 and Case 2 without interference. (a) Standard deviation;
    (b) Mean. Show All Fig. 6. The comparison of the lSI values in one window between
    Case 1 and Case 2 with interference. (a) Standard deviation; (b) Mean. Show All
    Fig. 5 shows (a) standard deviations and (b) means of lSI values in one window
    for both cases. It is observed that the lSI values for the Case 2 have much smaller
    standard deviations and means than Case 1, which can be considered as the criterion
    to differentiate the beacon frames sent by Sybil nodes. Results of the same experiment
    under interference are shown in Fig. 6. From Fig. 6(a), we can see that the standard
    deviations of lSI values of these two cases overlap often because of interference.
    However, we can still identify the beacon frames sent by Sybil nodes based on
    the big difference in the means of the lSI values, as shown in Fig. 6(b). Thus,
    if the malicious node launch Sybil attacks using the hardware based method to
    send beacon frames with different SSIDs, we also can detect the Sybil nodes through
    exploring the differences in the statistics of beacon intervals between the Sybil
    nodes and good nodes. SECTION V. Conclusions In this paper, we studied the Sybil
    attack in DSA networks. To understand the impact of this attack, we looked into
    a specific distributed graph coloring based spectrum allocation problem. We demonstrated
    that Sybil attacks are possible in DSA networks through the testbed implementation.
    We also showed that the fairness of spectrum allocation can deteriorate significantly,
    e.g., with 20 Sybil nodes in a 50 good secondary nodes system, the fairness will
    drop over 60%. In order to mitigate this attack, we proposed a defense strategy
    built on the testbed by investigating the discrepancies in statistics of beacon
    intervals on the receiver''s side between the good nodes and Sybil nodes. The
    experiment results, corroborating our analysis, demonstrated the effectiveness
    of the proposed defense strategy. ACKNOWLEDGEMENT This research is partially funded
    by NIJ # 2009–92667-NJIJ, NSF # 0916180 and PSC-CUNY Award # 60079–40 41. Authors
    Figures References Citations Keywords Metrics Footnotes More Like This An efficient
    technique for video content managing in Peer - to- Peer computing using multilevel
    cache and bandwidth based cluster 2014 International Conference on Signal Propagation
    and Computer Technology (ICSPCT 2014) Published: 2014 Software and Hardware Stand
    Development Using Modern Virtualization Tools for Studying Computer Networks of
    the IEEE 802.11 Standard 2022 Dynamics of Systems, Mechanisms and Machines (Dynamics)
    Published: 2022 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2011
  relevance_score1: 0
  relevance_score2: 0
  title: 'Spectrum Stealing via Sybil Attacks in DSA Networks: Implementation and
    Defense'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/icc.2010.5502025
  analysis: '>'
  authors:
  - Kai Hong
  - Shamik Sengupta
  - R. Chandramouli
  citation_count: 6
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2010 IEEE International Confe...
    SpiderRadio: An Incumbent Sensing Implementation for Cognitive Radio Networking
    Using IEEE 802.11 Devices Publisher: IEEE Cite This PDF K. Hong; S. Sengupta;
    R. Chandramouli All Authors 6 Cites in Papers 151 Full Text Views Abstract Document
    Sections I. Introduction II. Related Work III. Sensing/detection of primary incumbents
    IV. Testbed Setup and Experimental Results V. Conclusions Authors Figures References
    Citations Keywords Metrics Abstract: Spectrum sensing is one of the critical features
    in cognitive radio based dynamic spectrum access networking. In this paper, we
    discuss a new spectrum sensing technique for primary incumbent detection. The
    proposed method is based on observing the PHY errors, received signal strength
    and n-moving window averaging of the observed measurement. The sensing parameters
    are dynamically optimized based on the operating radio environment. This sensing
    method is implemented in SpiderRadio, a cognitive radio testbed based on off-the-shelf
    IEEE 802.11 devices. Experimental results show that the proposed technique results
    in very low sensing delay and failure probability. Published in: 2010 IEEE International
    Conference on Communications Date of Conference: 23-27 May 2010 Date Added to
    IEEE Xplore: 01 July 2010 ISBN Information: ISSN Information: DOI: 10.1109/ICC.2010.5502025
    Publisher: IEEE Conference Location: Cape Town, South Africa SECTION I. Introduction
    With spectrum usage being both space and time dependent, it is shown through various
    experimental studies that a fixed, static allocation often leads to over utilization
    in some bands and under utilization in others [1]. In order to eliminate the risk
    of such artificial spectrum scarcity, spectrum owners in most countries passed
    new amendments to define provisions for dynamic spectrum access (DSA). In DSA,
    provisions are being made to allow unlicensed (secondary) users to operate in
    the unused or under-utilized licensed bands (primary bands) opportunistically.
    The success of this policy depends on the ability of secondary users to dynamically
    identify and access unused spectrum bands, detect the return of primary users
    and switch to a different band promptly upon sensing the primary user. The recently
    coined cognitive radio paradigm [2] is anticipated to make dynamic spectrum access
    (DSA) a reality. Cognitive radios (CR) can be viewed as an electromagnetic spectrum
    detector, which can find an unoccupied band and adapt the carrier to that band.
    The layer functionalities of CRs can be separated into physical and medium access
    control layers. The physical layer includes sensing (scanning the frequency spectrum
    and process signal), cognition (detecting the signal through energy detector or
    any other means), and adaptation (optimizing the frequency spectrum usage such
    as power, band and modulation). The medium access layer cooperate with the sensing
    measurement and coordinate in accessing spectrum. In the CRiDSA networks, primary
    incumbent sensing and detection is one of the major critical goals, the purpose
    of which is to abide by the spectrum etiquette proposed by FCC and protect the
    licensed incumbents from secondary user interference. In the recent time, a lot
    of CR research focus on spectrum sensing (refer to [3]–[6] and references therein)
    most of which falls into three categories: Matched filter detection, Cyclostationary
    feature detection and Energy detection. While matched filter detection and feature
    detection provide better accuracy than energy detection, the fact remains that
    both the mechanisms incur tremendous computation complexity with additional energy
    consumption and perform much slower than the anticipated requirement [7], [8].
    Energy detection although can perform faster, however, can not distinguish between
    secondary transmission from primary transmission. As a result, for energy detection
    to be successful, it is necessary to forcefully quiet down all the secondary transmissions
    periodically which degrades the secondary network performance. In contrast to
    the aforementioned works, in this paper, we present a novel dynamic sensing methodology
    and implementation guidelines based on observed PHY errors for primary incumbents
    detection. The proposed incumbent sensing is adaptive in nature and driven by
    three parameters: observed PHY errors, received energy strengths and n-moving
    window sensing. More detailed discussion about each of these above terms will
    be presented later. Based on the guidelines, we implement a software driven programmable
    cognitive radio prototype system (SpiderRadio) that can configure itself automatically
    to sense and operate at any allowable unused frequency band. The prototype is
    built using atheros chipsets enabled off-the-shelf IEEE 802.11a/b/g wireless card.
    We emulate the Wi-Fi spectrum bands (900MHz, 2.4GHz and 5.1GHz) as primary bands
    in the testbed experimental setup. For setting up the primary licensee, four cordless
    phones as well as Agilent signal generators are configured, which can work in
    the Wi-Fi spectrum bands and act as primary devices. The proposed CR prototype
    (based on IEEE 802.11a/b/g wireless card) is configured to be the secondary device
    for the implementation and testing purpose (i.e., upon sensing and detecting the
    emulated primary incumbents in a particular frequency channel, the CR prototype
    must vacate that channel and move to another unused channel). This helps us in
    developing and testing our prototype without having to buy and manage several
    licensed spectrum bands. The experimental results clearly demonstrate significant
    performance improvement based on the proposed sensing mechanism. The rest of the
    paper is organized as follows. We discuss the existing literature that relates
    to this research in Section II. In Section III, we present our proposed sensing/detection
    model and methodology. The testbed setup and the experimental results are demonstrated
    in section IV. Conclusions are drawn in the last section. SECTION II. Related
    Work There are several ongoing research that deal with the idea of cognitive radio
    (refer to [9]–[12] and the references therein). However, the above-mentioned works
    mostly investigate the multi-channel MAC protocols for dynamic spectrum access
    without providing much attention to the spectrum sensing and incumbent detection.
    The IEEE 802.22 working group is also currently investigating a new standard,
    Wireless Regional Area Networking (“WRAN”) [7] based on cognitive radios. The
    present literature on spectrum sensing is still in its emergence. Among several
    of the recently proposed incumbent detection techniques, cyclostationary feature
    detection is one method for detecting primary incumbents by exploiting the cyclostationary
    feature of the signal [13]. However, the biggest disadvantages in this method
    are the increased computational overhead, consistent bandwidth loss and high time-consumption
    [8]. Moreover, some knowledge of primary users'' signal is necessary in this approach
    which may not be available in the first place. Also, with cognitive radio envisioned
    to be integral part of future first responders'' networks in public safety bands
    and other under-utilized bands, such additional complexity and larger energy consumption
    proves to be severely inefficient. Alternative to the cyclostationary detection,
    energy detector based approach is another common way of spectrum sensing because
    of its low computational overhead and implementation complexities [14]. Energy
    detection is more generic (compared to cyclostationary method) as receivers do
    not need any knowledge on the primary users signal. The primary incumbents can
    be detected by comparing the output of the energy detector with a threshold which
    depends on the noise floor. However, the biggest challenge with energy detection
    is that it can not distinguish between secondary transmission from primary transmission.
    As a result, for energy detection to be successful, it is necessary to forcefully
    quiet down all the secondary transmissions periodically which degrades the secondary
    network performance. Other alternative spectrum sensing methods include multi-taper
    spectral estimation [15] and wavelet transform based estimation. Multi-taper spectral
    estimation is a heuristic approximation to maximum likelihood PSD estimator. While
    the method is fairly applicable for wide-band sensing, it is still computationally
    demanding. Though most of these above-mentioned works focus on cognitive radio
    and spectrum sensing, the investigation is mostly through analytical studies and
    there are very fewer attempts to implement a cognitive radio prototype with incumbent
    detection capability compliant with the FCC''s incumbent-avoidance policy. In
    [16], a FPGA driven cognitive radio prototype is developed which is able to sense
    spectrum in the UHF band based on waveform analysis. However, as high as 6.1 and
    6.9 seconds are needed for the actual sensing time for W-CDMA and WLAN, respectively
    in this research. A feature detector design for TV bands, with emphasis on the
    physical (PHY) layer is presented in [17]. While most of the above approaches
    follow a variant of waveform analysis or energy detection, a novel approach is
    introduced in [18], where incumbent detection method is based on PHY/CRC error
    counts. Though the research in [18] shows how the PHY/CRC error counts can be
    an indicator of existence of incumbents by conducting various experiments, it
    relies on static threshold and lacks the definitive and adaptive incumbent detection
    model. SECTION III. Sensing/detection of primary incumbents Incumbent detection
    is probably the most important feature of cognitive radio MAC and the entire secondary
    communication based on dynamic spectrum access is dependent on this as spectrum
    is shared with licensed devices. However, as mere energy, noise and interference
    detection is not sufficient to distinguish a primary incumbent communication from
    other cognitive radio (secondary) communications, thus it is important to develop
    a modified approach for accurate sensing/detection. Note that, the preamble of
    the packets transmitted by primary incumbents will always be different than that
    of the cognitive radio nodes thus building the basis for sensing/detection in
    our methodology. A PHY error is reported from the wireless physical layer interface
    to the upper layers if packets/signal without the intended 802.11 PHY preamble
    is observed by the physical layer interface [18]. Thus whenever the primary incumbents
    are present and transmitting, cognitive radios present in that channel will observe
    packets with different packet preamble or corrupted packet preamble (known as
    observed PHY errors). The biggest advantage of such PHY error-based methodology
    is that unlike energy detection, the CRs need not forcefully quiet down periodically.
    However, there are several major challenges in the abovementioned PHY error-based
    sensing approach. Firstly, the number of observed PHY errors are not fixed due
    to the unreliable nature of wireless medium. Secondly, even for a stable wireless
    channel quality, the number of observed PHY errors vary drastically based on the
    received energy strength. Thirdly, depending on the duration of sensing (sensing
    window), the observed PHY errors also vary. Lastly, and probably the most important,
    in our cognitive radio framework, we no longer assume the notion of periodic sensing
    by forcefully making all the radio nodes quiet because of the degraded throughput
    outcome. Rather, the CR nodes are allowed to carry out communications even at
    the time of sensing; however, the challenge with such approach is that the number
    of observed PHY errors may actually be suppressed. Clearly, a simple static threshold
    of observed PHY error thus is not sufficient to sense/detect incumbents. If the
    threshold is set too low, the cognitive radio will incur high number of false
    alarms (assuming the existence of primary incumbent while the primary incumbent
    is actually not present). On the other hand, if the threshold is set too high,
    there will be a high probability of mis-detection (concluding there is no primary
    incumbent while the primary incumbent is actually present). Thus a methodology
    is needed to understand the distribution of PRY errors with received energy strength
    and other factors and a dynamic threshold study is necessary to accurately sense/detect
    the primary incumbents. We study the distribution of observed PRY errors both
    in the presence and absence of primary incumbents (cordless phones and Agilent
    spectrum signal generator are configured and used as primary devices for the experiment
    purpose) and under different received energy strengths. We setup the primary devices
    with different transmitting powers and at various distances from the SpiderRadio
    nodes such that the received energy strength at the SpiderRadio varies from –82
    dBm to –102 dBm. The reason behind choosing such low received energy for the experiment
    is the maximum uncertainty in the number of observed PHY errors at such low received
    energy. With the received energy strength from the primary incumbents being higher
    than the order of –80 dBm, the number of PHY errors is distinctly observed to
    be much greater than the scenario when primary incumbent is not present, making
    the detection decision very easy. Thus in this research, we focus solely on the
    low received energy strength from the primary incumbents for its complex uncertain
    nature. For sensing purpose, we consider our basic sensing window duration as
    20 ms during which the number of observed PHY errors are reported to the upper
    layers. Note that, any other sensing duration could also be chosen as a basic
    sensing window as long as the PHY errors can be accurately reported through interrupt
    signaling from the wireless card physical layer to the upper layer. In figure
    1(a) and 1(b), we present the cumulative distribution function (CDF) and complementary
    cumulative distribution function (1-CDF) of the observed PHY errors with primary
    incumbent present and the primary incumbent not present respectively from the
    experimentally observed data at different received energy strengths. The sensing
    duration is assumed as 20 ms, i.e., 1-sensing window. Note that, CDF of the observed
    PHY errors with primary incumbent present is actually the representation of the
    probability of mis-detection given a certain PHY error threshold. Similarly, (1-CDF)
    of the observed PHY errors with primary incumbent NOT present is actually the
    representation of the probability of false alarm given a certain PHY error threshold.
    From the figure 1(a) and 1(b), it is clear that low threshold will reduce the
    misdetection probability, however will increase the false alarm probability. On
    the other hand, high threshold will increase the mis-detection probability while
    reduce the false alarm case. Thus, if we need to minimize both false alarm and
    misdetection probabilities simultaneously with equal weightage, the intersection
    of the two curves gives the optimal minimized probability of error. The corresponding
    x-axis value will be the optimized threshold. Note that, with 1-sensing window
    sensing, the simultaneous minimization of both the probabilities give us the optimal
    threshold; however, as the figure 1(a) and 1(b) indicate, the minimized error
    probability is around 0.11 when received energy strength is −82dBm and around
    0.25 with worse received energy strength of −87dBm. This clearly indicates that
    with diminishing received energy strength, the performance of 1-sensing window
    also degrades steadily. Therefore, in this work, we introduce an n-moving sensing
    window methodology, i.e., PHY errors are observed over n-sensing window durations
    and moved continuously. Note that, n can take any value of 2, 3, 4 and so on.
    For illustration purpose, we present the experimentally observed results over
    5-moving window in figure 2(a) and 2(b). Note that, with 5-moving window sensing
    strategy, the simultaneous minimization of both the probabilities give us the
    optimal threshold and as the figure 2(a) and 2(b) indicate the minimized error
    probability is now around 0.01 for −82dBm and 0.12 for −87dBm. Fig. 1. CDF and
    (1-CDF) of PHY errors for 1-sensing window at received signal strength a) −82
    dBm, and b) −87 dBm Show All Fig. 2. CDF and (1-CDF) of PHY errors for 5 window
    case at received signal strength a) −82 dBm, and b) −87 dBm Show All Given the
    experimentally observed results of mis-detection and false alarm, we now investigate
    the analytical model of mis-detection and false alarm probability distribution.
    For finding the correct model of the distributions, we follow the multi-variate
    regression analysis with curve fitting. Denoting P m as the mis-detection probability,
    it can be expressed as, P m = 1 1+ e α(β−r) (1) View Source where, r is the normalized
    observed PHY errors. The parameters, α and β are functions of number of moving
    window strategy and received energy strength and are given by, α= λ 1 + λ 2 S+
    λ 3 e −n + λ 4 S 2 + λ 5 ( e −n ) 2 + λ 6 S e −n (2) View Source where, n denotes
    the number of moving window strategy, S denotes the received energy strength and
    λ i ''s are the regression variables. For example, the values of λ i ''s as derived:
    λ 1 =55.1; λ 2 =−40.7; λ 3 =405; λ 4 =9.23;  λ 5 =−342; λ 6 =−59.4; (3) View Source
    Similarly, the function of β can then be given by β= μ 1 + μ 2 n+ μ 3 e S + μ
    4 ( e S ) 2 + μ 5 n e S (4) View Source where, μ i ''s are the regression variables
    and derived as: μ 1 =−0.0717; μ 2 =0.0197; μ 3 =0.0432;  μ 4 =−0.00171; μ 5 =0.00225;
    (5) View Source Similar to the mis-detection probability expression, the false
    alarm probability can be expressed as, P f  =  1 1+ e − α ′ ( β ′ −r) , where
    α ′ and β ′ are also the functions of number of moving window strategy and received
    signal strength and can be derived in the exact similar manner as mentioned above.
    Note that, at any stage of the sensing, when a cognitive radio makes a wrong decision
    about a primary incumbent (sensing failure), it faces one of two possible costs
    in terms of time units. If the wrong decision results in mis-detection, the cost
    (penalty) on the cognitive radio will be primary network policy specific and the
    cognitive radio will be blocked from spectrum access for a certain time. Note
    that, throughout this paper, we assume the cost as time units consumed. We assume
    this cost as C 1 . On the other hand, if the wrong decision results in false alarm,
    the cognitive radio chooses to switch to some other clear band and it faces a
    cost of finding a clear spectrum band in the game. We assume this cost to be C
    2 . Once the probabilities of mis-detection and false alarm probabilities are
    calculated depending on observed PHY errors, n-moving window strategy and received
    signal strength, the aim is to find out the dynamically optimized threshold such
    that the penalty due to mis-detection and false alarm is minimized. The optimization
    problem now becomes minimization of the total expected cost as given by E(C)=
    C 1 × P m + C 2 × P f . Expanding E(C) , it can be written as E(C)= C 1 1+ e α(β−r)
    + C 2 1+ e − α ′ ( β ′ −r) (6) View Source To find out the dynamically optimized
    threshold, r , the first derivative of (6) with respect to r is equated to 0,
    as given in C 1 α e α(β−r) [1+ e α(β−r) ] 2 − C 2 α ′ e − α ′ ( β ′ −r) [1+ e
    − α ′ ( β ′ −r) ] 2 =0. (7) View Source Solving mathematical derivatives, we find
    the optimal threshold, r= r ∗ , such that it is satisfied by, cosh( α(β− r ∗ )
    2 ) cosh( α ′ ( β ′ − r ∗ ) 2 ) = ( √ α C 1 α ′ C 2 ). (8) View Source The second
    order differentiation, d 2 E(C) d r 2 , can be shown to be positive (with simple
    derivations), proving the function E(C) to be convex with respect to r . This
    also proves that the optimal value of r= r ∗ is the desired minimizer for the
    total expected cost E(C) and thus the dynamically optimized threshold in this
    scenario. SECTION IV. Testbed Setup and Experimental Results We setup our CR networks
    (consisting of laptops and soekris boards at a distance of 5–20 meters from each
    other) communicating with TCP data stream and are enabled with proposed incumbent
    sensing methodology and dynamic channel switching policy. To conduct extensive
    testing under different channel congestion environments, we carry out experiments
    under different network traffic scenarios in both indoor and outdoor environment.
    Each laptop running Linux 2.6 operating system is equipped with Orinoco 802.11
    a/b/g PCMCIA wireless card. These Orinoco devices are equipped with Atheros 5212
    (802.11 a/b/g) chipsets. The TX powers of these wireless devices were set to 100mW.
    In this test bed, cordless phones and Agilent signal generators are configured
    such that they can operate in the Wi-Fi spectrum bands and act as primary device
    of the bands. If any primary transmission is detected, the CR node(s) trigger
    the dynamic synchronization and channel switching to vacate the current frequency
    channel. A. Experimental Results To evaluate the effectiveness of the proposed
    primary sensing/detection methodology, figure 3 shows the probability of sensing
    failure with 1-sensing window and compares the dynamic threshold scheme with other
    static threshold schemes. As evident from the figure, the proposed dynamic threshold
    clearly produces better results in terms of reduced number of wrong decisions;
    probability of sensing failure is as low as 0.018. Figure 4 shows similar results
    with 5-sensing window with probability of sensing failure even more reduced (0.01376)
    thus clearly demonstrating the effectiveness of proposed n-moving window sensing
    in accurately sensing the primary incumbents. Fig. 3. Probability of sensing failure
    with 1-sensing window mechanism Show All Fig. 4. Probability of sensing failure
    with 5-sensing window mechanism Show All The average penalty (cost in terms of
    time units) induced due to the wrong decisions (either mis-detection or false
    alarm) made by the CR nodes are presented in figure 5(a) and 6(a). Note that,
    at any stage of the sensing, when a CR node makes a wrong decision about a primary
    incumbent (sensing failure), it faces one of two possible costs in terms of time
    units (spectrum access denial penalty for time C 1 in case of mis-detection or
    unnecessary switching cost penalty of time C 2 in case of false alarm). In our
    experiments, we assume, C 1 =100ms ., while the value of C 2 is the actual time
    taken to switch and mostly varies in between 5 and 20 ms. It is seen from the
    figures that dynamic threshold based on received energy and n-moving window sensing
    clearly outperforms the static threshold mechanisms in inducing minimized penalty.
    For comprehensive purpose, we also demonstrate the corresponding dynamic threshold
    values from a snapshot of the experiment in figure 5(b) and 6(b). Fig. 5. a) Average
    penalty induced due to sensing failure; b) a snapshot of the corresponding dynamic
    thresholds as adapted by SpiderRadio based on received energy strength and 1-sensing
    window mechanism Show All Fig. 6. a) Average penalty induced due to sensing failure;
    b) a snapshot of the corresponding dynamic thresholds as adapted by SpiderRadio
    based on received energy strength and 5-sensing window mechanism Show All SECTION
    V. Conclusions A new spectrum sensing methodology based on observed PHY errors,
    received signal strengths and n-moving window sensing is proposed in this paper.
    An empirical data driven theoretical model that can be effectively applied to
    detect primary incumbents even at very low received signal strength and with very
    low sensing duration is also developed. The proposed model is tested in the cognitive
    radio prototype (SpiderRadio) based on IEEE 802.11 MAC air-interface. Experimental
    results clearly demonstrate that SpiderRadio implementing the proposed sensing
    technique can detect primary incumbents very fast with almost negligible sensing
    failure probability (as low as 0.01376). ACKNOWLEDGMENT This research was partially
    funded by NSF CNS #0917008, NSF CCF #0916180 and NIJ #2009–92667-NJ-IJ. Authors
    Figures References Citations Keywords Metrics More Like This Modified criterion
    of hypothesis testing for signal sensing in cognitive radio 2009 4th International
    Conference on Cognitive Radio Oriented Wireless Networks and Communications Published:
    2009 Signal detection for cognitive radio using multiple antennas 2008 IEEE International
    Symposium on Wireless Communication Systems Published: 2008 Show More IEEE Personal
    Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW PURCHASED
    DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION
    TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732
    981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help | Accessibility
    | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap |
    IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s largest
    technical professional organization dedicated to advancing technology for the
    benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2010
  relevance_score1: 0
  relevance_score2: 0
  title: 'SpiderRadio: An Incumbent Sensing Implementation for Cognitive Radio Networking
    Using IEEE 802.11 Devices'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/tnsm.2017.2730201
  analysis: '>'
  authors:
  - Danda B. Rawat
  - Chandra Bajracharya
  - Sean Grant
  citation_count: 22
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Transactions on Network
    ... >Volume: 14 Issue: 3 nROAR: Near Real-Time Opportunistic Spectrum Access and
    Management in Cloud-Based Database-Driven Cognitive Radio Networks Publisher:
    IEEE Cite This PDF Danda B. Rawat; Chandra Bajracharya; Sean Grant All Authors
    20 Cites in Papers 542 Full Text Views Abstract Document Sections I. Introduction
    II. Related Work III. The Proposed nROAR System Architecture IV. RF Spectrum Sensing
    and Reporting V. Cloud Computing for Spectrum Processing and Heat Map Show Full
    Outline Authors Figures References Citations Keywords Metrics Footnotes Abstract:
    Cognitive radio network with spectrum sensing to find idle channels and access
    them opportunistically is regarded as an emerging technology to deal with spectrum
    scarcity caused by exclusive licensing to primary systems. Simulation-based studies
    loose practical relevance due to assumptions and usage of simple models for defining
    transmission regions, multi-path propagation, and traffic intensity. In this paper,
    we present an experimental study for near real-time spectrum sensing and opportunistic
    spectrum access in database-driven cognitive radio networks (nROAR) using national
    instrument USRP devices in wide-band regime. We present numerical results for
    evaluating spectrum sensing using adaptive threshold-based joint energy and bandwidth
    detection. Furthermore, we evaluate the dynamic spectrum access using database-driven
    quorum-based rendezvous for opportunistic access for admitted unlicensed secondary
    users in diverse wireless bands. The proposed nROAR architecture addresses challenges
    related to providing spectrum access which require fast processing of a large
    number of spectrum-sensing measurements across diverse wireless bands, geography,
    and time. Published in: IEEE Transactions on Network and Service Management (
    Volume: 14, Issue: 3, September 2017) Page(s): 745 - 755 Date of Publication:
    21 July 2017 ISSN Information: DOI: 10.1109/TNSM.2017.2730201 Publisher: IEEE
    Funding Agency: SECTION I. Introduction Over the last several decades, the world
    has adopted Information and Communication Technologies (ICT) at an unprecedented
    rate. Wireless networks have become ubiquitous and less expensive leading to increased
    demand for new wireless services and applications. The exponential growth in the
    availability of lightweight hand-held devices to access wireless networks is one
    of the primary contributors to the increase in wireless traffic, which leads to
    severe spectrum shortage for wireless service providers. Furthermore, spectrum
    resources remain a significant problem as licensing bodies allocate RF spectrum
    statically to service providers for exclusive use for long period of time and
    over vast geographic area. Recent studies show that many spectrum allocated to
    be used by various wireless devices remain under-utilized [1] while a few bands
    heavily used leading to intermittent connection and packet loss. To avoid spectrum
    scarcity, spectrum sensing and opportunistic spectrum access using cognitive radios
    are regarded as emerging solutions. Note that in cognitive radio network (CRN),
    unlicensed secondary users (SUs) are not allowed to create any harmful interference
    to licensed primary users (PUs) while using idle channels. In this paper, we present
    near Real-time spectrum sensing and Opportunistic spectrum Access in cognitive
    Radio networks (nROAR, for short) using NI USRP devices and LabVIEW programming.
    For spectrum sensing we design, implement and evaluate joint energy and bandwidth
    detection approach to find idle channels and process huge data using near real-time
    distributed cloud computing platform (Storm and Cassandra [2]). Dynamic spectrum
    access and opportunistic communication for admitted/active SUs are evaluated using
    quorum based rendezvous method. Note that cognitive radio research methodologies
    have been implemented and evaluated in experimental settings [3]–[7] as well as
    in simulation settings [1], [8]. Simulation-based studies lose practical relevance
    due to assumptions which diminish problem complexity and fidelity, and usage of
    simple models for defining transmission regions, multipath propagation and traffic
    intensity [9]–[11]. On the other hand, experimentation-based studies can advance
    theoretical design and effective analysis of algorithms and protocols if the complexity
    of setup and validation is minimized. There have been several efforts to develop
    experimental testbeds (IRIS [12], LOG-a-TEC [6], w-iLab.t [13], VT-CORNET [3],
    and ORBIT [7]) to design practical CRN. Furthermore, the integrated cloud spectrum
    management system was proposed in [14] and [15] to share RF spectrum between primary
    and SUs through spectrum auction/trading mechanism. Cloud computing for cognitive
    radios was proposed in [16] to enhance sensing performance in CRNs. Cooperative
    spectrum sensing by integrating Map reducing model and SQL Azure in [17] to develop
    a mobile system management [18] and using “Apache Hadoop” platform [19]. A terrestrial
    digital video broadcasting (DVB-T) system was proposed in [20] for PSME (Program
    Making and Special Events) booking platform. These experimental studies cover
    either Wi-Fi (2.4GHz or 5GHz ISM) or a single network. The testbeds differ in
    the type of devices used, scale, accessibility, communication system and amount
    of heterogeneity. Although these testbeds address design and evaluation issues
    with practical CRN, they are not feasible for evaluating real-time, distributed
    and heterogeneous CRNs. The remainder of this paper is organized as follows. In
    Section II, we present the related work followed by the proposed nROAR architecture
    in Section III. We present spectrum sensing using joint energy and width of the
    spectrum in Section IV. Then we present the dynamic spectrum access in Section
    VI using nROAR architecture for the admissible users. Finally, conclusions are
    presented in Section VII. SECTION II. Related Work Cognitive radio networking
    technology research has existed for about 2 decades now. To fully exploit this
    technology in practice there have been several efforts [21], [22] to develop experimental
    testbeds (IRIS [12], LOG-a-TEC [6], w-iLab.t [13], VT-CORNET [3], and ORBIT [7]).
    The IRIS testbed [12] focuses on runtime reconfiguration in all layers of the
    network stack with goals of sensing for idle channels and use available idle channels
    for communications. However, this testbed focuses on individual device configuration
    where spectrum sensing is carried out before using the channels which limits the
    scalability of the cognitive radio networks envisioned for diverse channels in
    wide-band regime. The LOG-a-TEC cognitive radio testbed [6] focuses on spectrum
    sensing in TV whitespaces and uses available idle TV channels for low power wireless
    sensor networks. Similarly, the w-iLab.t testbed [13] considers Wi-Fi (IEEE 802.11a/b/g)
    network and sensor network (IEEE 802.15.x) infrastructures, and corresponding
    RF channels. In these testbeds, individual devices participate in sensing processes
    which limits scalability in wide-band RF regime. The Cognitive Radio Network Testbed
    (CORNET) [3] focuses on a centralized software based signal processing for spectrum
    sensing and dynamic spectrum access. The ORBIT (Open-Access Research Testbed for
    Next-Generation Wireless Networks) testbed [7] is generic wireless network testbed
    that focuses on different aspects of wireless networks including cognitive radio
    networks. To enhance the sensing performance in cognitive radio networks, cloud
    based cooperative computing has been proposed in [16], a Map reducing model and
    SQL Azure based approach has been proposed in [17], the “Apache Hadoop” based
    platform has been proposed in [19] and a DVB-T system has been proposed in [20].
    As noted these experimental testbeds/studies cover either Wi-Fi (2.4GHz or 5GHz
    ISM or a single network channels such as TV channels or propose a framework without
    implementing in the testbed. None of these testbeds consider evaluating real-time
    and heterogeneous CRNs using distributed cloud computing with CASSANDRA and Storm
    systems [2]. Note that the CASSANDRA and Storm systems have proven robustness,
    real-time performance and commercial adoption by Twitter. SECTION III. The Proposed
    nROAR System Architecture Fig. 1 illustrates various components in the nROAR architecture
    which contribute to the implementation of the spectrum sensing (Algorithm 1) and
    dynamic spectrum access (Algorithm 2) in a cloud-based cognitive wireless networks.
    The nROAR architecture is build up on the ROAR architecture discussed in [9] where
    a ROAR framework is presented with very limited numerical results obtained from
    experiments/testbeds. RF spectrum sensors collect the status of the spectrum occupancy
    information including geolocation (longitude, latitude and altitude), time stamp,
    etc. and report that information to the spectrum server in the cloud. The cloud
    server uses the Storm programming model [23] to process huge amount of data in
    a distributed manner to populate the idle band information in the cloud based
    spectrum database (e.g., CASSANDRA [24]). Fig. 1. The nROAR Architecture for Cloud-based
    Database-driven Wireless Networking Testbed. Show All Algorithm 1: Spectrum Sensing
    and Heat-Map Show All Algorithm 2: Dynamic Spectrum Access Show All Details about
    spectrum sensing is presented in Section IV. The near real-time status report
    for wide-band regimes necessitates the availability of stream processing and continuous
    computation. SU devices may not be able to conduct the processing and computations
    since their performance is considerably constrained by their limited power, memory
    and computational capacity for wideband regime (e.g., 50 MHz - 6 GHz). Furthermore,
    creation of a spectrum heat map helps to visualize the spectrum usage. Details
    about cloud computing and idle spectrum heat map is presented in Section V. SUs
    equipped with software defined radios (SDRs) send their spectrum search-requests
    along with geographical locations, as mandated by the U.S. FCC [25], and other
    demands such as data rate to a spectrum server. If an admissibility criterion
    is met, the SU is allowed to use spectrum and transmit its information using peer-to-peer
    or infrastructure based communications. Details about SU communication is presented
    in Section VI. In the nROAR architecture, the FCC regulations are enforced to
    SUs through spectrum repository where SUs query for spectrum opportunities, SDR
    device and its interfacing software. Upon admission of SUs, they must comply enforced
    regulations through specified constraints. SECTION IV. RF Spectrum Sensing and
    Reporting The nROAR architecture prepares a geolocation database of idle channels
    for given location and time using spectrum occupancy information obtained from
    RF spectrum sensors deployed in a distributed manner. A typical RF spectrum sensor
    developed for nROAR is shown in Fig. 2. Spectrum occupancy information can also
    be obtained from infrastructures of primary networks which is out of the scope
    and is not covered in this paper. Distribution of sensors across the geographic
    location and integration of sensing results are performed using Markov Decision
    Process which is not covered in this paper because of space limitation (for further
    details, please refer to [26]). Fig. 2. Typical RF spectrum sensor developed for
    nROAR testbed using NI USRP devices (USRP 2920/2921/2932 programmed by using LabVIEW)
    to cover (50 MHz to 6 GHz) by connecting them together through a MIMO cable and
    GPS unit (external GPS for USRP 2920 and 2921, and 2932 with an internal GPS).
    Typical sensor configuration has IQ sampling rate as 10000, acquisition duration
    50 μ seconds, lower frequency (e.g., 50 MHz) and upper frequency (e.g., 6 GHz).
    Show All A. Spectrum Sensing by Using Combined Energy and Bandwidth Detection
    Spectrum sensors use energy and spectrum width detection method to determine idle
    channels and report that to the database. The received signal s r (t) at a given
    RF sensor can be just noise or signal from PU plus the noise that corrupts the
    received signal. Thus, for spectrum sensing, received signal at RF sensor can
    be detected using two possible hypotheses as s r (t)={ n(t), gs(t)+n(t),  if  H
    0  if  H 1 , (1) View Source where s(t) is the signal from PU, g is the channel
    gain between given PU and SU, n(t) is the additive white Gaussian noise, and hypotheses
    H 0 and H 1 , respectively, represent that the PU signal is absent or present
    in the received signal s r (t) in (1). The energy of a signal (1) that is used
    to test statistics in discrete form (after sampling and quantization) for distinguishing
    between two hypotheses using energy detection is given as R E = 1 W ∑ j=0 W−1
    | s r (j)| 2 (2) View Source where W is the sensing window length. We assume that
    the PU activities are represented with off rate α and on rate β . From the PU
    activity model, we can estimate a posteriori probabilities p p and p a as follows
    p p = α α+β ,  p a = β α+β . (3) View Source Based on the activity of primary
    networks, we use probability of identifying channels based on a given time t .
    Let P S0 represents that the primary channel would be idle after t seconds where
    S∈{0,1} with S=0 if the channel is idle and S=1 if the channel is used by the
    primary network. Then, the probability P S0 can be expressed as P S0 ={ p a +
    p p ⋅ e −(α+β)t  p a − p a ⋅ e −(α+β)t  for S=0 for S=1. (4) View Source Similarly,
    the probability P S1 for S∈{0,1} that the channel would be used by PUs after time
    t second is given as P S1 ={ p p − p p ⋅ e −(α+β)t p p + p a ⋅ e −(α+β)t for S=0
    for S=1. (5) View Source For energy detection approach, the detection probability
    P d , false alarm probability P f and misdetection probability P m can be expressed,
    respectively, as P d ( λ E )= P f ( λ E )= P m ( λ E )= P[ R E > λ E | H 1 ] P
    S1 P[ R E > λ E | H 0 ] P S0 P[ R E < λ E | H 1 ] P S1 . (6) (7) (8) View Source
    where λ E is the pre-defined energy threshold and we consider absolute value when
    it is complex number. The threshold value can be adapted by using the mean and
    variance for a signal’s FFT R(n) as λ E = μ i +α σ i (9) View Source where μ i
    = 1 2N ∑ n=1 N R(n) (10) View Source and σ i = 1 2N ∑ n=1 N [R(n)− μ i ] 2 − −
    − − − − − − − − − − − − − −  ⎷   . (11) View Source Note that the peak energy
    detection approach results in false alarm (as noise peak which has significantly
    low bandwidth compared to signal bandwidth could be detected as primary signal).
    Thus, we have proposed joint energy and bandwidth detection using adaptive threshold.
    The bandwidth threshold can be chosen as λ B =(B±c%×B) (12) View Source The ±c%×B
    indicates that the width of the signal spectrum should be within the certain percentage
    (say c=1% ) of the bandwidth B depending on the actual bandwidth and applications.
    Note that this percentage value should be chosen by considering tradeoff between
    false alarm and misdetection of the idle channels. For instance, width of the
    Wi-Fi signal is B=20 MHz that could result in received signal bandwidth, b s =18
    MHz to 22MHz. Then, the joint energy and bandwidth detection can be performed
    as R E > λ E  AND  b s > λ B = R E > λ E  AND  b s > λ B = 0 if  H 0 1 if  H 1
    . (13) View Source Next, the detection probability P d , false alarm probability
    P f and misdetection probability P m can be expressed, respectively, as P d (
    λ E , λ B )= P f ( λ E , λ B )= P m ( λ E , λ B )= P[ R E > λ E  AND  b s > λ
    B | H 1 ] P S1 P[ R E > λ E  AND  b s > λ B | H 0 ] P S0 P[ R E < λ E  OR  b s
    < λ B | H 1 ] P S1 . (14) (15) (16) View Source Occupancy status of each channel
    with its geolocation is reported to the server in the cloud periodically since
    the availability of idle RF spectrum is a function of time and geolocation in
    nROAR. Note that the information about idle bands provided by the sensors is not
    useful if their positions are not known. With the help of GPS (attached with the
    spectrum sensor as in Fig 2), spectrum sensors can get location (longitude, latitude,
    altitude) of idle channels, velocity (speed and direction) of the sensor and sensed
    time stamp. This information is reported to the spectrum database so that SUs
    can query the database for opportunistic communications. Sensed information by
    sensors is processed using Storm model [23] as shown in Fig. 1. B. How Often the
    RF Spectrum for a Given Location Should Be Sensed and Reported? Spectrum sensors
    report the spectrum occupancy information periodically. For near real-time spectrum
    sensing, we consider that the age of the idle channel should not exceed the threshold
    which is set for specific bands. In this section, we consider that there are distributed
    sensors deployed for spectrum sensing and reporting to the Storm model (Fig. 1).
    Proposition 1:The maximum time τ that the idle channel is valid for given location
    and time is estimated as τ= D 0 +δ×(E[WT]+ E[ W 2 ] 2 )≤ τ th (17) View Source
    where D 0 is the duration lapsed after previous sensing, E[.] is the expectation
    operator, W and T are random variables that correspond to spectrum sensing time
    and data propagation time from sensor to the database, respectively. τ th is the
    time threshold. Proof:The status of the spectrum occupancy is reported at t 1
    , followed by at t 2 , t 3 ,…, t n ,… Age of the spectrum increases linearly in
    the absence of any update and is reset to smaller upon update. The sensing start
    time is t i and the status information is received at the database at t ′ i .
    Then monitoring time value is reset to T i = t ′ i − t i . The time T i is the
    sum of sensing and propagation time. Thus the age function A(t) follows the sawtooth
    pattern as shown in Fig. 3. Fig. 3. Change in age for spectrum with spectrum sensor.
    Show All Over the interval [0,T] , the average age is τ= = A T = D 0 + ∫ T 0 A(t)dt
    D 0 + A 1 + T 2 n /2+ ∑ N(T) n=2 A n T (18) View Source where N(T)=max{n| t n
    ≤T} denoting the number of sensing by time T . From Fig. 3, we can see that W
    n = t n − t n−1 to be the elapsed time between two sensing times t n−1 and t n
    . The area A n can be calculated as the difference between the area of the isosceles
    triangle of side W n and T n as shown in Fig. 3, that is, A n = 1 2 ( T n + W
    n ) 2 − 1 2 T 2 n = W n T n + W 2 n 2 (19) View Source Substituting (19) in (18),
    after few mathematical steps, we get A T = D 0 + A 1 + T 2 n /2 T + N(T) T 1 N(T)
    ∑ n=2 N(T) [ W n T n + W 2 n 2 ] (20) View Source The A 1 + T 2 n /2 T represents
    the boundary effect and is finite with probability one. This term vanishes to
    zero when T→∞ . Let δ= lim T→∞ N(T) T be the steady state at which the spectrum
    sensing is performed. Moreover, as N(T)→∞ , the remaining summation term in (20)
    is sample average which converse to stochastic average. Note that the estimated
    time should not exceed the specified threshold τ th for a given wireless application.
    This mathematical arrangement gives us (17) which proves the Proposition 1. C.
    Performance Evaluation In order to corroborate our analysis presented above, we
    performed several experiments using nROAR testbed as well as extensive simulations.
    In both experiment and simulation, several RF sensors (at least 10 sensors configured
    as in Fig. 2) were deployed uniformly to cover area of 1 mile (1609 meter) radius.
    Those RF sensors were reporting sensing results (for 50 MHz to 6 GHz) to the cloud
    as shown in Fig. 1 periodically. We deployed 4 NI USRP devices pretend to be PU
    transmitters to cover entire 1 mile radius area. These PU were configured to be
    active and idle randomly in any channel (50 MHz to 6 GHz) to see the sensing performance
    of the spectrum sensors. Typical sensor results for different wireless bands are
    shown in Fig. 4. Fig. 4(a), Fig. 4(b) and Fig. 4(c) show the spectrum sensing
    results for different RF channels in 50MHz to 1 GHz, Wi-Fi 2.4 GHz channels (11
    channels) and Wi-Fi 5 GHz channels (72 channels) respectively. Each plot represents
    the power (z-axis) in given channels (x-axis) for given times (y-axis). When there
    is no spike for a given channel, the channel either is idle or had very low signal
    strength. Fig. 4. Scanned results for RF spectrum occupancy to report the geolocation
    of idle channels to cloud database for different wireless bands. Spike (z-axis)
    for a given frequency and time implies that the channel is active during sensing
    for a given location and time, and no spike means no signal (just noise) during
    sensing for given time and location. Show All First, we plotted the probability
    of detection vs. the distance between PU and RF spectrum sensor as shown in Fig.
    5. The probability of detection decreases when distance between PU and sensor
    increases for both simulation and experimental results as shown in Fig. 5 because
    of path loss, shadowing, multipath, etc. As expected, experimental results have
    more fluctuation than the simulation ones as shown in Fig. 5. Fig. 5. Probability
    of detecting signal vs. distance from PU transmitter. Show All Next, we plotted
    the probability of misdetection and false alarm vs. the threshold using experimental
    as well as simulation data as shown in Fig. 6. We observed that when threshold
    value increases, the false alarm decreases (or vice versa) whereas misdetection
    probability increases when threshold increases as shown in Fig. 6. This plot helps
    to choose the suitable threshold to get minimum of both probability of miss detection
    and false alarm in spectrum sensing. From Fig. 6 one can see that the threshold
    value could be between −80dBm to −70dBm depending on transmit and receive gains
    to have minimum of probability of false alarm and misdetection as shown in Fig.
    6. Fig. 6. Results obtained from nROAR testbed/experiments and simulations for
    probability of misdetection and false alarm vs the threshold. Show All Finally,
    we plotted the distances (100% message reception and outer boundary after which
    there was no signal at all from the transmitter) vs the transmitter gain as shown
    in Fig. 7(a). We also plotted time needed vs the speed to find sensing interval
    for given velocity/speed and distance. Higher the speed of the spectrum sensor,
    faster the reporting needs to be done for a given transmit distance or vice versa
    as shown in Fig. 7(b). Fig. 7. Boundaries for a given transmission range and speed.
    Show All Once idle channels (with their geolocations) are available in the database,
    SUs can query the database to access idle channels for opportunistic communication.
    Note that the database of geolocations of idle bands can be used to generate spectrum
    heat-map as shown in Fig. 1. SECTION V. Cloud Computing for Spectrum Processing
    and Heat Map In order to process huge amount of data about spectrum occupancy
    obtained from spectrum sensors or infrastructures of primary networks for different
    channels, there is a need for cloud computing and storage resources for the purpose
    of distributed storage and distributed computation. In nROAR framework, we propose
    to implement algorithms in the Storm system, a real-time processing system, which
    is also currently used by Twitter to process trending topics. We use Cassandra
    [24] database due to its proven robustness, real-time performance and commercial
    adoption by Twitter. Storm and Cassandra [2] are integrated by provided generic
    and configurable backtype.storm.Bolt implementation that writes Storm Tuple objects
    to a Cassandra Column Family for having separate bolts for processing massive
    data for different bands such as TV, DSRC and Wi-Fi as shown in Fig. 1. Cloud
    computing for processing and creating spectrum map is out of the scope of this
    paper and interested readers are referred to [15] for further details. SECTION
    VI. Opportunistic Spectrum Access for SUs In nROAR architecture, when an SU wants
    to access idle spectrum, it sends its requests along with its geolocation to the
    spectrum server. Server with the help of cloud computing processes the request
    using Storm programming as shown in Fig. 1. First step of the spectrum server
    is to check whether the SU is admissible or not (which is discussed in the following
    section). Once the SUs are admitted, they find common channel for communications.
    During entire communication, SUs’ location should be within the contour of the
    idle bands. Analysis for how often an SU should query the spectrum database for
    updated idle channels is similar to sensing analysis in Section IV-B and we omitted
    the proof and analysis in this section. We have performed comparison of expected
    time needed for finding idle channel by searching the channel in nROAR architecture,
    by sensing the channels to find idle channels by SUs individually and by cooperative
    sensing (majority voting based approach) to find idle channels by SUs as shown
    in Fig. 8. We used energy based approach for spectrum sensing because of its simplicity
    in terms of implementation. We found that individual sensing approach takes more
    time (when there are large number of channels to be scanned) than the time needed
    to search idle channels in nROAR framework as shown in Fig. 8. Similarly, individual
    sensing approach takes more time than the cooperative sensing approach since (some
    of) the channels are already sensed/identified by the SUs who are participated
    in the cooperative sensing process. Note that when there are few channels as in
    Fig. 8, idle channel finding times in all three approaches are comparable. Furthermore,
    Fig. 8 shows that the cloud based database searching for finding idle channels
    takes the least time and almost constant time regardless of number of channels
    in the database. This time is the time needed for query the database in nROAR.
    Thus, referring to Fig. 8, nROAR framework provides almost real-time interactions
    compared to both individual sensing approach and cooperative sensing approach.
    Fig. 8. Comparison of expected time needed for finding an idle channel by searching
    the channels in nROAR architecture, by sensing the channels by SUs individually
    and by using cooperative sensing. When there are few channels, times in all three
    approaches are comparable. Show All The NI USRP (2920, 2921 and 2932) devices
    were configured using LabVIEW as shown in Fig. 9 as SU transceivers for nROAR
    architecture. MIMO cable is used to connect different USRPs to cover frequency
    range from 50 MHz to 6 GHz. GPS unit (external GPS for USRP 2920 and 2921) and
    2932 with an internal GPS are used to get geolocation (longitude, latitude and
    altitude), speed, etc. information of the SUs. A typical NI USRP 292x transceiver
    configuration for 2.4GHz and 5GHz ISM bands is given in Table I. Note that we
    have evaluated the nROAR architecture for 50 MHz to 6 GHz channels but have not
    listed all configurations because of the limited space. TABLE I NI USRP 292x Transceiver
    Configuration for 2.4GHz and 5GHz ISM Bands Fig. 9. SUs (i.e., transceivers) for
    nROAR architecture using NI USRP (2920, 2921 and 2932 that are programmed using
    LabVIEW) devices to cover wide frequency range (50 MHz to 6 GHz) by connecting
    them together through a MIMO cable and GPS unit (external GPS for USRP 2920 and
    2921, and 2932 with an internal GPS). Show All A. Admission Control for SUs As
    discussed, availability of frequency is a function of geolocation and time. Geolocation
    of the SU who is requesting idle channels is used to match with the geolocation
    of idle channels stored in the spectrum database. In other words, the SU is admissible
    only when the distance calculated using geolocation of SUs and geolocation of
    idle bands is within the tolerable limit. The distance between two longitude and
    latitude points, i.e., ( ϕ 1 , ψ 1 ) and ( ϕ 2 , ψ 2 ) can be calculated using
    Haversine distance as [27] D H =2R sin −1 sin 2 ( ϕ D ) 2 +cos( ϕ 1 )cos( ϕ 2
    ) sin 2 ( ψ D ) 2 − − − − − − − − − − − − − − − − − − − − − − − − − − − − − √
    (21) View Source where R is Earth’s radius (mean radius =6 ,371km), ϕ D = ϕ 1
    − ϕ 2 and ψ D = ψ 1 − ψ 2 . For a tolerance value ϵ , if D H ≤ϵ , the SU is admissible
    and gets idle channels for the given location to choose from. B. SU Rendezvous
    for Communications When SU wireless devices receive a list of available channels,
    the question is how transmitter and receiver find common channel to communicate?
    We have conducted experiments in controlled environment with two scenarios where
    receiver was following the transmitter. In Scenario 1, SUs were within the contour
    of idle channels and were getting a list of idle channels whereas in Scenario
    2, SUs were outside the contour of the idle channels and were not getting any
    channels as shown in Fig 10. We observed that SU transmitter (SU-Tx) started getting
    a list of channels (as shown in upper diagram of Fig 10) as it moved into the
    contour of idle locations whereas SU-Rx was behind the transmitter and got into
    the contour later, thus having a list of channel 0 in the first step (as in lower
    diagram of Fig 10). Similarly, when SU-Tx went outside the contour before SU-Rx
    and thus SU-Tx has no channel in the last step. Fig. 10. Number of available channels
    to SUs (transmitter and receiver) for given location and time for two scenarios.
    Note that when SU is admissible, it gets a list of channels available for given
    location and time. Show All Next, we consider two rendezvous methods for SUs:
    rendezvous using dedicated common control channel approach and rendezvous (without
    using a common-control channel) using channel hopping approach. We briefly discuss
    about how these approaches were implemented in the testbed. 1) Common Control
    Channel Approach: The simplest way to solve the rendezvous problem in wireless
    networks is to use a predefined common-control channel. In this approach, one
    of the available channels is assigned as the common-control channel for finding
    a common communication channel and other parameters between transmitter and receiver.
    In this approach, when a SU wants to initiate communication, it finds a common
    channel for communication using common-control channel and transmits its actual
    information via other available channels aka data channels. This approach guarantees
    the rendezvous; however it has multitude of security threats [28]. 2) Quorum-Based
    Frequency Hopping Approach: In this approach, after a list of channels is obtained,
    the SUs apply quorum-based common communication channel selection scheme. Quorum
    allows quicker access to the users to establish connection for them to be able
    to communicate. In this process, the user lists all available channels acquired
    from the database in a matrix form (e.g., as shown in Fig. 11). Then, they apply
    selective frequency hopping technique to communicate. For instance, in Fig. 11,
    SU-Tx starts with the first column and row, whereas SU-Rx starts with the second
    column and row. The common channel slots between them are 2 and 5 as shown in
    Fig. 11. If there is no common element, transmitter and receiver must change the
    columns and rows of the matrix randomly. The SU-Rx hops to different frequencies
    aiming to meet the transmitter on common channel as in “blind-date.” The term
    “blind-date” here refers to the phenomenon where the receiver is unknown of the
    frequency the transmitter is transmitting and is hoping to meet it by following
    certain quorum based approach. Fig. 11. Example scenario for a Quorum-based Frequency
    Hopping Approach. Show All Next, we have plotted the time variation vs. the channel
    index to compare sequential searching and quorum based searching for transmitter
    and receiver rendezvous as shown in Fig. 12. As expected, we observed that time
    needed for transmitter and receiver rendezvous is higher in sequential searching
    than that in quorum based searching for given samples as in Fig. 12. Fig. 12.
    Comparison of sequential searching/scanning and quorum-based searching/scanning
    for 100k samples and 10k samples in the nROAR architecture. Show All In nROAR
    framework, we implemented Quorum matrix with random frequency placement. That
    is, instead of placing the channel number in ascending order as shown in Fig.
    11, we propagate actual frequencies obtained from the database in random orders.
    The randomness provides relatively higher security towards jamming attacks. Note
    that if matrix is not full, we append zeros (indicating no idle channel). For
    instance, there are 7 channels in a list and SU form a 3×3 matrix, two elements
    of this matrix will have zero values. Once they find common communication channel,
    SUs try to maximize their rates by satisfying imposed constraints which is discussed
    in the following section. C. Rate Maximization for Active SUs Considering a received
    signal to be i.i.d. with zero mean and σ 2 s variance, and the Additive White
    Gaussian Noise (AWGN) with variance of σ 2 n , the SINR γ k of SU k can be expressed
    as γ k = σ 2 s / σ 2 n . Then the problem of achievable rate maximization for
    a given bandwidth w in heterogeneous dynamic spectrum access for cognitive radio
    users can be modeled as the following optimization problem maximize γ k ,∀k subject
    to u k = ∑ ∀k w log 2 (1+ γ k ) Co1: ∑ ℓ=1 K γ ¯ ¯ ¯ k 1+ γ ¯ ¯ ¯ k ≤β Co2:  γ
    k ≥ γ ¯ ¯ ¯ k ,k=1,2,…,K Co3:  c k R k ≤ B k ,k=1,…,K Co4:  D H k ≤ϵ,k=1,…,K Co5:  p
    k ≤ p ¯ ¯ ¯ k ,k=1,…,K (22) View Source where Co1 is the spectral feasibility
    condition that indicates whether the SUs with γ ¯ ¯ ¯ k are admissible or not
    in a given channel for a processing gain β in code division multiple access based
    wireless system [29], Co2 is the QoS constraints in terms of minimum SINR γ ¯
    ¯ ¯ k , Co3 is the budget constraint with per-unit cost c k for a rate R k 1 and
    budget B k , Co4 is the geolocation constraint, and Co5 is the power constraint
    with maximum allowed power level p ¯ ¯ ¯ k . When a SUs transmits with its power
    p k =min{ p ¯ ¯ ¯ k , γ ¯ ¯ ¯ k σ 2 n } , the power constraint p k ≤ p ¯ ¯ ¯ k
    in (22) can be relaxed. Furthermore, D H k ≤ϵ is the admissibility constraint
    that is based on geolocation of SUs. When we consider only admitted/active users,
    this constraint can be relaxed. Then, we can write problem (22) as maximize γ
    k ,∀k subject to u k = ∑ ∀k w log 2 (1+ γ k ) ∑ ℓ=1 K γ ¯ ¯ ¯ k 1+ γ ¯ ¯ ¯ k ≤β
    γ k ≥ γ ¯ ¯ ¯ k ,k=1,2,…,K c k R k ≤ B k ,k=1,2,…,K (23) View Source In this scenario,
    when γ k = γ ¯ ¯ ¯ k , the user will have reliable communication however it will
    have low data rate compared to γ k > γ ¯ ¯ ¯ k case. γ k = γ ¯ ¯ ¯ k scenario
    can represent voice communication system since increase in SINR may not enhance
    the QoS for voice communications if desired minimum SINR is already met. However,
    for data communication networks, the higher the γ k than γ ¯ ¯ ¯ k , the higher
    the data rate one can get and this case is best suited for users of data communication
    networks. Problems (22) and (23) are solved using NI LabVIEW Optimization Toolbox
    while implementing in NI USRP devices. D. Performance Evaluation We have plotted
    the SINR of six SUs with their minimum required SINRs as shown in Fig. 13(a) and
    achievable rate (i.e., utility) u k as shown in Fig. 13(b). SUs start with random
    arbitrary transmit powers and increase their powers without violating their maximum
    allowed power level. In the beginning the instantaneous SINRs of all SUs are lower
    but after some time, all SUs are getting higher SINRs than their required minimum
    SINRs as shown in Fig. 13(a). Similarly, achievable rate u k of each SU is increasing
    and getting settled to its maximum achievable value as shown in Fig. 13(b). Fig.
    13. Experimental results for variations of six active users’ instantaneous SINR
    ( γ k ) with minimum SINRs ( γ ¯ ¯ ¯ k ) and achievable rate, i.e., utility (
    u k ) vs time when users are moving towards their transmitters. Show All SECTION
    VII. Conclusion In this paper, we have presented an experimental study for near
    real-time spectrum sensing and opportunistic spectrum access in wideband regime
    using NI USRP devices programmed with LabVIEW. Numerical results obtained from
    experiments as well as simulations are presented for performance evaluation for
    spectrum sensing using adaptive threshold based joint energy and bandwidth detection.
    Real-time distributed cloud computing platform has been used to process sensed
    data and store geolocation of idle channels. Furthermore, the proposed architecture
    has been evaluated for dynamic spectrum access using quorum based rendezvous for
    opportunistic communications for admitted SUs in diverse wireless bands. We also
    investigated how often a given spectrum band should be sensed and reported it
    for a given location and how often a spectrum should be queried by SUs to get
    a list of updated idle channels. The proposed nROAR architecture addresses challenges
    related to providing spectrum access which require fast processing of a large
    number of spectrum-sensing measurements across diverse wireless bands, geography
    and time. Our future research includes developing and evaluating the light-weight
    security schemes for nROAR framework. We also plan to extend the nROAR framework
    and evaluate it for the cloud assisted wireless communications for Internet-of-Things
    and cyber-physical systems applications. Furthermore, our future work for nROAR
    includes making it available to the wider research community and users who can
    benefit from it. ACKNOWLEDGMENT Any opinions, findings, and conclusions or recommendations
    expressed in this material are those of the authors and do not necessarily reflect
    the views of the National Science Foundation. The authors would like to thank
    I. Cushman, Y. Younis, R. Grodi, N. Sharma, S. Reddy and S. Shetty who participated
    in data collection process and early stage discussions. The authors would like
    to thank the anonymous reviewers for their constructive comments on this paper.
    Authors Figures References Citations Keywords Metrics Footnotes More Like This
    Research on Wireless Sensor Network Localization Method for Real-Time System 2023
    China Automation Congress (CAC) Published: 2023 Real-time system for monitoring
    activity among the elderly using an RF SoC device with triaxial accelerometer
    data over a wireless sensor network 2014 IEEE MTT-S International Microwave Workshop
    Series on RF and Wireless Technologies for Biomedical and Healthcare Applications
    (IMWS-Bio2014) Published: 2014 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE eTransactions on network and service management
  limitations: '>'
  pdf_link: null
  publication_year: 2017
  relevance_score1: 0
  relevance_score2: 0
  title: 'nROAR: Near Real-Time Opportunistic Spectrum Access and Management in Cloud-Based
    Database-Driven Cognitive Radio Networks'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/dyspan.2010.5457835
  analysis: '>'
  authors:
  - Linda Doyle
  - Paul D. Sutton
  - Keith Nolan
  - Jörg Lotze
  - Barış Özgül
  - Thomas W. Rondeau
  - Suhaib A. Fahmy
  - Hicham Lahlou
  - Luiz A. DaSilva
  citation_count: 11
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2010 IEEE Symposium on New Fr...
    Experiences from the Iris Testbed in Dynamic Spectrum Access and Cognitive Radio
    Experimentation Publisher: IEEE Cite This PDF Linda E. Doyle; Paul D. Sutton;
    Keith E. Nolan; Jorg Lotze; Baris Ozgul; Thomas W. Rondeau; Suhaib A. Fahmy; Hicham
    Lahlou; Luiz A. DaSilva All Authors 8 Cites in Papers 253 Full Text Views Abstract
    Document Sections I. Introduction II. Early History III. Iris Advancements IV.
    Iris Building Blocks for Dynamic Spectrum Access V. Experimentation Show Full
    Outline Authors Figures References Citations Keywords Metrics Footnotes Abstract:
    The focus of this paper is an experimentation platform known as Iris that has
    a runtime reconfigurable software radio at its core. We have employed this platform
    to enable a wide variety of tests and experimentation in the fields of dynamic
    spectrum access and cognitive radio. The paper charts the progress of the Iris
    system since its inception as well as details of some of the experiments and trials
    conducted using this platform. We also discuss the challenges involved in the
    development and deployment of a software radio platform that supports runtime
    reconfigurability and provide recommendations for future improvements. Published
    in: 2010 IEEE Symposium on New Frontiers in Dynamic Spectrum (DySPAN) Date of
    Conference: 06-09 April 2010 Date Added to IEEE Xplore: 03 May 2010 ISBN Information:
    DOI: 10.1109/DYSPAN.2010.5457835 Publisher: IEEE Conference Location: Singapore
    SECTION I. Introduction To significantly advance research in the field of dynamic
    spectrum access and cognitive networking, it is essential that ideas be translated
    from paper to working prototype. This is a challenging and more often than not
    slow process. Some of the bold ideas of new spectrum usage regimes are met with
    skepticism by some regulators, broadcasters, and wireless industry, making the
    prototyping process all the more important. While the field has grown and matured,
    it is not yet obvious that we have found a real home for cognitive radio beyond
    the much discussed TV white spaces and there are many who still doubt the potential
    of cognitive radio and its role in the future. The purpose of this paper is to
    discuss our ongoing effort focusing on cognitive radio experimentation and reconfigurability.
    This effort centres around the use of the Iris runtime reconfigurable software
    radio platform, a platform designed in CTVR in Trinity College Dublin. Iris is
    introduced in Section II. The basic system has grown and advanced over the years
    and these advances are described in Section III. An Iris radio consists of a chain
    of components and some typical Iris components for dynamic spectrum access experimentation
    are presented in Section IV. Section V is a key section and summarises the major
    demonstrations which were based on Iris and highlights three examples in particular.
    Section VI gives some brief details of an innovative test and trial scheme run
    by the Irish regulator Comreg, that aids experimentation. Section VII shows how
    Iris has commercial potential and section VIII introduces two European research
    projects that feature Iris. Section IX discusses both the specific issues relating
    to experimentation with Iris as well as the broader challenges of experimentation
    in general. Section X concludes. SECTION II. Early History Iris was created as
    a runtime reconfigurable software radio for general-purpose processors (GPP) using
    a Windows operating environment [1]. It was inspired by the SpectrumWare work
    at MIT [2]. Iris is a component-based system. Discrete signal processing functions
    such as a digital filter or modulator are implemented as components with generic
    interfaces for lifecycle control, data passing and reconfiguration. These components
    are linked together to build radio transmit and receive chains. an XML file is
    used to describe the structure of the components. Both the Iris runtime system
    and the Iris components are implemented completely in portable C++. In contrast
    with software architectures such as GNU Radio and the Software Communication Architecture
    (SCA), Iris was designed specifically to support maximum reconfigurability while
    the radio is running. Iris nodes can therefore carry out reconfigurations seamlessly
    in response to observed changes in the operating environment. Reconfigurability
    is realised through a number of different mechanisms. When implementing an Iris
    component, the radio designer can choose to expose a number of parameters. While
    the radio is running, these parameters can be dynamically reconfigured to adjust
    the operation of the component. Alternatively, individual components can be changed
    at runtime, as can whole configurations of components. The emphasis from the beginning
    was on ''ease of design for developers, the ability to rapidly prototype and tailor
    a transceiver implementation, and a GUI that provided a suite of software radio
    components and control entities for use in a design. It had always been intended
    that Iris connect to a RF frontend that had minimum functionality, i.e. that the
    bulk of the processing take place in Iris. However, initially identifying an appropriate
    RF frontend proved extremely difficult. The WaveRunner Plus 253 PMC transceiver
    model from Red Rapids, a 70MHz IF radio module, was used and much of its unnecessary
    functionality (from our perspective) was bypassed. The emergence of the Universal
    Software Radio Peripheral (USRP) from Ettus Research LLC (http://www.ettus.com)
    was a welcome devolpment. This RF frontend had a large impact on the Iris platform.
    The on-board functionality of the USRP is minimal, limited to interpolation, decimation,
    up/down conversion and power amplification. The USRP therefore provides developers
    with the freedom to transmit and receive bespoke (custom-made) signal waveforms.
    In the USRP 1.0 case, a USB 2.0 interface is used. The second generation of the
    USRP uses GigE technology and can handle up to 25MHz signal bandwidth. The USRP
    provided the ideal frontend for Iris. It contained the necessary level of functionality.
    It enabled a degree of frequency agility that had not been available in previous
    platforms and it was affordable. Hence the Iris experimental platform really began
    its life as a Windows-based software radio plus USRP. In the early days it was
    challenging to get a realtime FM radio operating on Iris (i.e., on the general
    purpose processor) but advances in processing capabilities have meant that sophisticated
    radio configurations are ever more possible. A wide range of Iris components have
    been built to take advantage of this. Iris today is particularly focused on multicarrier
    communication systems and has many OFDM and MC-CDMA components. Iris can contain
    Matlab components as a special wrapper and has been designed to cater for this.
    In this case, realtime operation is not possible but the ability to include Matlab
    components is a useful feature for testing ideas before committing to C++ implementations.
    While the USRP remains the main RF frontend used with Iris, it is possible to
    use any RF frontend by simply creating Iris components that write to and read
    from the hardware in question. For example Iris has been used with the Maynooth
    Adaptable Radio System from the National University of Ireland, Maynooth [3].
    SECTION III. Iris Advancements Though Iris started out life as a Windows-based
    general purpose processor entity, it was extended to use different operating systems
    as well as run on different platforms. The experiences of using Iris in its basic
    form and on other platforms subsequently gave rise to a rewrite of the system
    and the creation of a new version of Iris. The following sections detail these
    advances. A. Platform and Operating System Advances In 2007 a joint project with
    Xilinx Research Labs in Ireland provided the motivation to create an FPGA-based
    cognitive radio platform and hence Iris was reconstituted for an FPGA platform
    [4], [5]. In very basic terms the FPGA-based system can be described as follows.
    The Iris runtime engine sits on the PowerPC. Iris components can be implemented
    BOTH in hardware and software. Hence it is possible, for example, to have components
    which involve significant processing (e.g. turbo coding) on the FPGA logic and
    other components in pure software. The runtime system manages access to the components
    at an abstracted level and therefore can combine software and hardware components
    together with ease. Here again the radio configuration is described in an XML
    file. As mentioned already, a designer can chose to implement an Iris component
    on the FPGA logic. This of course requires specialised hardware knowledge. However
    once a hardware components exists, other designers can seamlessy incorprate this
    component into their radio design. Compile-time tools partition and prepare the
    necessary FPGA configurations for use by the runtime system. In parallel with
    the FPGA-based work Iris was also ported to the CellBE. The CellBE approach is
    similar in nature to the FPGA approach in that the Iris runtime engine sits on
    a PowerPC while the different Iris components are implemented on the specialised
    signal processing elements of the CellBE. Both the use of the FPGA and the CellBE
    reflected the growing need to include systems that were capable of parallel processing.
    As a result of working on the PowerPC the basic general purpose processor version
    of Iris was ported to Linux. All Iris code is written in portable C++ and can
    be compiled for the Windows, Linux, and Mac as X operating systems. Supported
    and tested CPU architectures include x86 (32- and 64-bit), PowerPC, and ARM, and
    other architectures are likely to work as well. B. Design Advances The experience
    of developing a number of demonstration systems and the use of a range of different
    platforms led to many insights regarding the design of the Iris system. In particular,
    we identified three key challenges: Dynamic memory allocation; Parallelism support;
    and Modular design for heterogeneous platforms. 1) Dynamic memory allocation While
    the intention of Iris was always to maximise the runtime reconfiguration possibilities,
    one drawback of the original system design was the use of static memory allocation
    to support data passing between components. At load time, the quantity of data
    produced by each component in a single execution cycle is calculated. On the basis
    of this calculation, memory buffers are allocated and remain in place for the
    lifecycle of the radio. This approach provides a high level of efficiency. However,
    in highly reconfigurable radio designs, the amount of data produced by a component
    during a given execution cycle can vary according to the configuration of that
    component. One example of such a component would be a reconfigurable Quadrature
    Amplitude Modulation (QAM) symbol mapper. When configured to perform 16-QAM symbol
    mapping, such a component produces a single symbol for every 4 bits of input data.
    However, upon reconfiguration to perform 64-QAM symbol mapping, the same component
    produces a symbol for every 6 bits of input data. Designing such a component with
    the original Iris system required mechanisms to trigger a reallocation of memory
    throughout the radio each time a reconfiguration occurred. 2) Parallelism support
    A second motivation to advance the design of the Iris system was the emergence
    of multi-core GPPs. As processor manufacturers attempt to improve GPP performance
    by increasing the operating frequency of individual cores, gains are diminished
    by a number of factors. These include an increasing gap between the speeds of
    the processor and memory, exponentially increasing power consumption, and increased
    difficulty in finding enough parallelism in a single instruction stream to fully
    utilize a high performance processor core. Thus, rather than increasing operating
    frequencies, manufacturers have instead turned to processing systems comprising
    multiple cores. In order to leverage such multi-core processors, a software radio
    system requires powerful mechanisms to capture parallelism within a executing
    radio. The original Iris system provided support for parallel execution of two
    or more signal chains. However, capturing parallelism inherent in a single chain
    was not possible. 3) Modular design for heterogeneous platforms A third challenge
    associated with the original Iris system design concerned the use of heterogeneous
    platforms. The approach taken to support non-GPP processing platforms such as
    FPGAs and CellBE SPEs was to use a software wrapper component [5]. This wrapper
    encapsulated all code executing upon the platform and presented a generic interface
    to the Iris system. While this approach was successful, it led to the use of monolithic
    code design for these platforms, limiting reusability. As our use of these platforms
    increased, the need for a modular design approach became more pressing. 4) Addressing
    the issues To address these challenges, a major redesign of the Iris system was
    undertaken in 2008. A central feature of this redesign was the introduction of
    the Iris Engine. An Iris Engine encapsulates one or more components of the overall
    dataflow graph of a radio and defines the data-passing, execution and reconfiguration
    semantics for those components. Engines present a generic interface to the overall
    Iris system and a radio may comprise one or more of these engines. The ability
    to create different engines with different properties provides a powerful solution
    to each of the challenges outlined above. To address the challenge of dynamic
    memory allocation, a flexible PHY engine (fPHY) was designed. The fPHY engine
    supports transparent reallocation of memory buffers between components, enabling
    a high level of reconfigurability. While a number of components in a radio design
    may require this level of reconfigurability, many may not. For example, the overhead
    associated with such reconfigurability is not required for a digital filter component
    with fixed taps. To reduce this overhead and maximise performance for more static
    components, we designed a scheduled PHY engine (sPHY). The sPHY engine makes use
    of a static schedule, calculated at load-time, to minimise overhead and increase
    data throughput. Thus, by using a mixture of fPHY and sPHY engines, a radio designer
    can choose an appropriate tradeoff between reconfigurability and performance.
    Iris Engines also provide a powerful mechanism for capturing parallelism within
    a software radio design. A single engine encapsulates a single thread of execution
    and is responsible for the execution of one or more components. Thus, a radio
    design comprising three components may execute using one, two or three engines.
    In this way, between one and three parallel threads of execution can be employed.
    The third challenge of modular design for heterogeneous platforms can also be
    overcome through the use of Iris Engines. An engine completely defines the data-passing,
    execution and reconfiguration semantics for one or more components. Thus, an engine
    is well-suited to encapsulate a system of components executing upon a particular
    processing platform. For example, an FPGA engine could support the use of FPGA
    components, each comprising a section of VHDL code. At load-time, the engine could
    combine the specified components into a single FPGA configuration and load it
    into the FPGA fabric. At run-time, the engine could manage all communication with
    the FPGA hardware and could also reconfigure it when required. In this way, the
    engine enables the use of modular code design for an FPGA platform. SECTION IV.
    Iris Building Blocks for Dynamic Spectrum Access The paper thus far has focused
    on the general details of Iris, the platforms on which it operates and advances
    that have been made over the years. In this section we look in more detail at
    some of the Iris components and concentrate in particular on components that are
    relevant to dynamic spectrum access experimentation. There are a variety of challenges
    in dynamic spectrum access system design. Three key challenges are (1) the reliable
    identification of unoccupied spectrum, (2) the creation and transmission of an
    appropriate waveform that makes best use of the unoccupied spectrum while not
    interfering with primary users and (3) the enabling of rendezvous between transmitted
    and receiver whenever the spectrum band in use changes. Iris components have been
    designed for these purposes and a significant amount of Iris experimentation has
    been based around these three challenges. A. Sensing There are many different
    ways to sense the existence of a primary user and Iris contains a range of components
    for this purpose. Like most systems, it supports simple energy detectors. Additionally,
    Iris contains components based on cyclostationary feature detection, as well as
    components that use filterbank approaches. The sensing components have been designed
    to target different application areas. For example, a component exists for the
    detection of DVB- T and DVB- T2 signals for TV white space applications. Another
    components exists for detection of LTE signals for next generation femtocell systems
    [6]. B. Shaping OFDM has tended to be the preferred technology for dynamic spectrum
    access and cognitive radio systems. The ability to manipulate the signal bandwidth
    and throughput through changing numbers of subcarriers and modulation techniques,
    for example, provides a flexible means for fitting a signal into unoccupied spectrum.
    However, OFDM waveforms tend to have high sidelobes, which can cause unacceptable
    levels of interference to systems on adjacent channels. Therefore there is broad
    interest in signal processing techniques which reduce the strength of the sidelobes.
    Iris provides a range components for shaping OFDM signals. These components use
    different windowing techniques. C. Rendezvous Frequency rendezvous is the process
    by which two radios meet on a given frequency and begin the communication process.
    In a dynamic spectrum access environment, spectrum is opportunistically available
    and hence a cognitive radio must somehow inform the cognitive radio with which
    it wants to communicate the frequency on which it will operate. One such mechanism
    for doing this is to use some kind of control channel. A control channel can be
    problematic in a dynamic spectrum access scenario, as it is not an easy task to
    ‘set aside’ spectrum for this function. Iris has components for managing frequency
    rendezvous without the use of a control channel. These components make use of
    what is known as cyclostationary signatures. Full details of these are given in
    [7] and [8]. In short these signatures are intentionally embedded features in
    an OFDM signal that give rise to strong and easily detectable cyclostationary
    features (as opposed to naturally occurring features that arise as a byproduct
    of normal processing of the signal, such as modulation). The trick is that the
    embedded signature also provides information about the frequency of operation.
    Hence a cognitive radio can follow the varying transmissions of another cognitive
    radio simply by scanning for the embedded signatures. SECTION V. Experimentation
    The components described in the previous section have allowed us to carry out
    a variety of experiments relating to dynamic spectrum access. Table V summarises
    the experiments that have been presented to wider audiences at international conferences
    such as DySPAN, which have afforded great opportunities for disseminating experimental
    work conducted using Iris. Next, we describe three example experiments conducted
    using the Iris platform. A. Example 1: Sensing for Femtocells Figure 1 gives an
    overview of the setup for an experiment and demo based on the sensing of LTE femtocells.
    The scenario under test is one in which a LTE femtocell is operating and two others
    subsequently come on the scene and avoid the bands that are already used by the
    existing femtocell. The femtocell network underlays an existing macrocell network.
    For example, it is likely that LTE femtocells might coexist with a GSM macrocell.
    The sensing technique in use is described in [6] and it is possible to detect
    weak signals with this technique, to guarantee interference-free operation. TABLE
    I DEMONSTRATION SYSTEMS BUILT USING THE IRIS ARCHITECTURE Conference Demonstration
    System DySPAN 2007 Cyclostationary signatures for detection, identification and
    carrier frequency estimation of OFDM-based waveforms. DySPAN 2007 Coexistence
    of non-contiguous OFDM-based waveforms with co-channel single-carrier wave-forms.
    DySPAN 2008 A reconfigurable FPGA-based system using a single carrier waveform,
    employing sensing for carrier-frequency estimation. DySPAN 2008 A DSA network
    using a bandwidth-adaptive OFDM waveform with embedded cyclostationary ary signatures
    for blind bandwidth estimation and network coordination. DySPAN 2008 A real-time
    cyclostationary analyzer using the Cell Broadband Engine. FCCM 2009 A reconfigurable
    FPGA-based system using a single-carrier waveform with adaptive coding. SIGCOMM
    2009 A reconfigurable FPGA-based system employing sensing for carrier-frequency
    estimation and adaptive coding. DySPAN 2010 A DSA network using reconfigurable
    pulse-shaped shaped waveforms to control out-of-band (OOB) emissions. There is
    one key point worth noting here. Iris is running on more than one platform. It
    is running on the PC (i.e. a GPP) AND on an FPGA platform, namely the Xilinx ML507
    development board [9], which hosts a Xilinx Virtex-5 XC5VFX70 FPGA. Though not
    mentioned before in this paper, Iris does not need to be confined to any one platform
    and a number of platforms can be strung together to create a ‘distributed’ implementation.
    Fig. 1. LTE sensing for femotcell autoconfiguration Show All The demonstration
    consists of three radio nodes as illustrated in Figure 1. The first broadcasts
    the pre-recorded LTE-like signal and acts as the interfering femtocell (1). The
    second node is the transmitter, which searches the spectrum to find spare channels
    (2), then begins to transmit streaming video using coded DQPSK modulation (3).
    The final node is the receiver, which attempts to receive on each of the available
    channels, locks onto the transmission, and decodes the video (4). The playback
    of the video happens on the PC while the sensing and decoding of the signals occurs
    in hardware on the FPGA platform. Fig. 2. A frequency and bandwidth adaptive system
    based on cyclostaionary signatures Show All B. Example 2: bandwidth-adaptive OFDM
    A second example is one that uses rendezvous components but does so to not alone
    achieve frequency rendezvous but also to signal the amount of bandwidth in use.
    The scenario under test here is one in which a cognitive basestation gets access
    to different frequency bands of different bandwidths over time. Rather than signalling
    this to the cognitive radios in its range through a control channel, the basestation
    employs cyclostationary signatures for this purpose. The signatures are embedded
    by correlating data on subcarriers. A bandwidth unit has been defined and the
    signatures are repeated for each bandwidth unit. The receiver determines the frequency
    of operation using the signatures and determines the bandwidth through counting
    the number of signatures. Figure 2 shows how the signatures are created through
    intentionally correlating data in selected subcarriers. The particular subcarriers
    chosen reflect the frequency of operation. An indepth description of the experiment
    is given in [10]. The work was demonstrated at DySPAN 2008. The great strength
    of this demonstration lay in its ability to substantiate a theoretical idea that
    had up to that point merely been investigated in Matlab. The interference from
    other systems in the room in which the demonstration took place did not affect
    the system and further illustrated its robustness. C. Example 3: Shaping for Coexistence
    The final example in this paper focuses on a demonstration that is taking place
    at DySPAN 2010 and hence provides an opportunity for interested parties to see
    Iris in action. In this demonstration we present a dynamic spectrum access network
    which employs a reconfigurable orthogonal frequency-division multiplexing (OFDM)
    based waveform. In order to avoid the creation of harmful interference, the out-of-band
    (OOB) emissions of the waveform are dynamically tailored to the properties of
    spectrum neighbours through the use of OFDM pulse shaping. Fig. 3. The effect
    of shaping on a signal Show All In this experiment two neighbouring systems will
    exist peacefully when shaping is turned on but have problems when it is not. Figure
    3 illustrates the effect of shaping on the OFDM signal. The demonstration is therefore
    all about coexistence. SECTION VI. Comreg Test & Trial Licenses-an Enabler The
    experimentation described in the previous section has taken place in many different
    venues. When at home in Ireland we have the advantage of making use of various
    different frequency bands for experimentation, thanks to a Test & Trial scheme,
    driven by the national regulator authority. The Irish spectrum regulator, Comreg,
    enables cognitive radio and dynamic spectrum access activities to take place under
    a wireless test and trial licensing scheme. The regulators promise that licence
    applications will be turned around as soon as possible, typically within 10 days
    after receipt of a completed application. And more importantly they state that
    all available radio frequency bands will be considered for a test or trial licence,
    including the UHF band; radio spectrum''s ‘sweetspot’. We have availed ourselves
    of this favourable spectrum licensing regime in Ireland to conduct tests and trials
    of Iris-based cognitive radio and dynamic spectrum access systems outside of the
    lab and across Ireland. In 2007, the first multi-party collaborative trial of
    DSA and cognitive radio technologies was carried out during the IEEE DySPAN symposium
    in Dublin, using a wireless trial licence. This event enabled a mix of industrial
    and academic groups to attempt to communicate, co-exist, and interfere with one
    another to gain insight into the practical real-world issues following years of
    research largely limited to theoretical and simulation-based activities. The concept
    was proven; multiple heterogeneous DSA networks could co-exist in the same spectrum
    segments. However, the event also demonstrated that the state of the art was limited
    to infrastructure development e.g. RF hardware, processing platforms, sensing
    and decision-making, and not yet at the communications applications level. SECTION
    VII. Towards Commercial Opportunities In addition to being an enabler for research,
    Iris is being used under licence for real-world proof of concept prototypes and
    to develop commercial applications. In 2008, the European Microsoft Innovation
    Centre in Germany used Iris to rapidly develop new prototype wireless communications
    systems. In 2009, a trial was conducted in Limerick, Ireland by a prespin out
    group called reconfigr (reconfigr.com) using Iris in a UHF-band whitespaces scenario.
    This trial demonstrated how secondary opportunistic users could establish a network
    and co-exist with a digital terrestrial television (DTT) incumbent. The interference
    potential to subscriber receivers was minimised using spectrum sensing. This work
    helped validate claims that secondary opportunistic usage of whitespaces in real-world
    scenarios is feasible, even with strong adjacent-channel incumbents, and that
    spectrum sensing combined with frequency agility is a solution. SECTION VIII.
    Iris and FP7 Framework Research Iris is also playing a role in two EU-funded activities.
    The first has just started and the second is expected to begin in September. As
    each will bring a new dimension to test and experimentation in cognitive radios,
    they are both worth mentioning briefly. A. COGEU The first project is entitled
    ‘Cognitive Radio Systems for Efficient Sharing of TV White Spaces in the European
    Context’ (COGEU) and is funded under the European Union''s Framework Programme
    7 (FP7). The project began in January 2010, and it looks into the variety of regulatory
    opinions on TV white space usage across the European regulatory landscape. It
    also aims to create working prototypes of systems for these bands and, in doing,
    so explore different service/application scenarios. COGEU will not just consider
    unlicensed modes of operation but also look at schemes based on exclusive usage
    rights. The consortium consists of the Instituto de Telecomunicacoes (Portugal),
    CTVR, Trinity College Dublin (Ireland), Thales Communications (France), Rohde
    & Schwarz (Germany), Portugal Telecom Inovacao (Portugal), a wireless provider,
    Sigint Solutions (Cyprus), Poznan University of Technology (Poland), University
    of the Aegean (Greece), and the Institut fuer Rundfunktechnik (Germany), a research
    centre that focuses on public broadcasting. The Iris platform will be featured
    in a number of the working prototypes created in this project. We will conduct
    experiments in IMS bands as well as in licensed bands, using Ireland''s Wireless
    Test & Trial Licensing Programme. One of the members of the COGEU consortium,
    Rohde & Schwarz (R&S), manufactures device, infrastructure, protocol, and compliance
    testers for wireless systems. They will set up a coexistence testbed to evaluate
    the coexistence between DVB-T and cognitive radio devices in several different
    scenarios, such as the extension of WiFi and WiMax using TV white spaces. A system
    supported by Iris and USRP hardware will provide some of the nodes for this testbed.
    Fig. 4. The CREW federated testbed Show All B. CREW The second project is called
    Cognitive Radio Experimental World (CREW) and is again a FP7 funded project. The
    aim of CREW is to create a federated cognitive radio testbed in Europe that enables
    meaningful cognitive radio research The consortium consists of IBBT (Belgium),
    IMEC (Belgium), CTVR, Trinity College of Dublin (Ireland), Technical University
    of Berlin (Germany), Technical University of Dresden (Germany), EADS (Germany),
    and Thales Communications (France). Figure 4 is a schematic of the testbeds involved
    in CREW; the Iris based tesbed is in the bottom left hand corner. The concept
    of federation can be a challenging concept in wireless testbeds. The notion of
    federation tends to be more readily understood in the context of optical networking,
    for example. To address this challenge we have defined three possible modes of
    interaction with the testbeds. Mode 1 involves the use of any one single CREW
    testbed. The federation activities that will support this mode include the creation
    of a CREW portal with clear and uniform information about access and usage of
    each testbed and suggested usage scenarios. In Mode 2 the user will have access
    to any single testbed again but the testbed will contain nodes made from elements
    of other testbeds and hence be highly heterogeneous in composition. Hence the
    federation activities will consist of hosting of nodes from one testbed in another
    and the creation of new nodes from combinations of CREW hardware/software components.
    Mode 3 is the most important. This will involve multiple sequential CREW testbed
    usage. Here the federation activities will involve the enabling of the capturing
    of data/behaviours from one CREW testbed and replay for emulation or post-processing
    purposes on a second CREW testbed through the definition of common data collection
    and storage mechanisms, data access mechanisms and through the provision of subcomponent
    or subsystem access in each testbed. This project will offer the potential for
    experimentation on a more extensive basis. The CREW project will organize two
    open calls to extend the use of the federated testbed to external researchers
    or research groups. The first call is envisaged for the second half of 2011, one
    year after the start of the project. SECTION IX. Lessons Learned & Insights Gained
    The extensive use of the Iris platform has contributed to building a great deal
    of experience in dynamic spectrum access experimentation. There are many lessons
    to be learned. Some relate to the Iris platform explicitly, while others are more
    general and have to do with experimentation in networks of cognitive radios. A.
    Experimentation with Iris The Iris platform has brought with it a number of distinctive
    advantages, including the following: The ability to take an idea from concept
    to realisation on Iris has contributed to the impact of the work that we have
    undertaken in the field of dynamic spectrum access. In particular with new ideas,
    such as the use of cyclostationary signatures, it has proven an invaluable means
    of proving that the concept works. Experimentation, particularly on both a GPP
    and an FPGA platform has led to improved understanding of the challenges of reconfiguration
    and the extent to which, dynamic reconfiguration is required in real-world applications.
    The more recent developments in the Iris platform, and especially of Iris 2.0,
    have led to a much more usable and accessible system, and a system that is highly
    targeted to runtime reconfiguration. The engine concept has been a significant
    enabler of the kind of dynamic reconfigurations in which we are interested, as
    well as being a means of more easily running Iris on different platforms. The
    use of the Iris platform has led to strong insight into the impact of real hardware
    on the different signal processing algorithms we design. For example the efforts
    to reduce the sidelobes of an OFDM signal with sophisticated shaping techniques,
    can in certain circumstances be undone by the ability of the USRP to deal with
    them. There are of course many outstanding challenges for the Iris platform including
    the following: Due to the nature of the funding for the original development of
    Iris, the platform is not open-source. This has been an obstacle to its use by
    some of our research collaborators. At this time, we are exploring contractual
    instruments to facilitate the dissemination of Iris beyond our lab. Though Iris
    2.0 has been built to handle a full stack (e.g. there is special network engine),
    the experimentation to date has not had a strong network flavour. In [11] we enumerate
    some points that highlight the need for a full protocol stack. This aspect of
    Iris needs to be more significantly exploited. (This has been a prevailing issue
    with cognitive radio experimentation in general.) The ‘decision engine’ in most
    of the experimental work has been simple and has not pushed the boundaries of
    what ‘might be’ in a decision or cognitive engine of a future communication system.
    However, all the necessary functionality exists to support a decision/cognitive
    engine in that there are multiple ways to reconfigure the system on the basis
    of outputs from a such an entity. While the USRP has been true enabler of the
    many experiments we have carried out, it also presents challenges. The limited
    power has a number of impacts. It affects range and hence networking possibilities.
    The dynamic range of the devices means that OFDM waves will be clipped beyond
    certin power levels. This has an impact for example on the shaping experiments
    mentioned earlier. The value of the some of the shaping techniques is clearer
    at higher powers which may not be an option of the USRP given its dynamic range.
    B. Experimentation in General Carrying out experimental work also has its more
    general advantages, including: Experimentation has proven to be a strong mechanism
    for attracting industry collaboration. One of the reasons for this is that tangible
    benefits of reconfigurable radio and dynamic spectrum access can be showcased
    in the experimentation scenarios. The experimental work has opened up many opportunities
    for dialogue with our regulators on issues relating to dynamic spectrum access
    and cognitive radio. Dynamic spectrum access and cognitive radio depend heavily
    on the right policies and regulations being put in place. The importance of taking
    opportunities to influence the thinking in these fields and lead by example cannot
    be over-emphasised. Experimentation offers the opportunity to feed realworld insights
    back into theory. The general insights gained through working with the reality
    of the wireless world can be used to define more appropriate assumptions for theoretical
    work, to more appropriately set parameters in simulations and to build models
    of the environment which may prove useful. However, it is true to say that experimentation
    has many open and varied challenges: From an academic perspective, it still remains
    difficult to get credit for experimental results, in particular in traditional
    archival publications. Much of the experimental work, including some of our own,
    is hard for others to repeat. Repeatability is an important part of the scientific
    process. Methods for better describing an experimental setup and capturing the
    experimental conditions need to be established to aid in this process. (We also
    note that the same should be done for simulation-based work.) Whether in the theoretical,
    simulated or experimental domain, there is a pressing need for some way to benchmark
    the progress of the work in dynamic spectrum access and cognitive radio. In other
    words, there needs to be a more scientific method for claiming that, ''my system
    is better than yours''. We believe that it is true to say that many comparisons
    made are between apples and oranges. It should be possible to take the lead in
    benchmarking in the experimental world and then reflect these insights back into
    the theoretical and simulation domains. Mechanisms need to be found for presenting
    negative results, In other words, we should be able to report both what works
    and what does not work. The field can only truly advance if we find a systematic
    and scientific way for doing this. Current cognitive radio platforms are still
    limited in their support of network experimentation. Among the missing pieces,
    we cite the lack of support for distributed sensing and classification, the practical
    difficulties of implementing medium access control protocols tailored to dynamic
    spectrum access in current experimental software defined radio platforms, the
    lack of a network knowledge representation language, and the lack of a cognitive
    specification language. Though some databases exist, there continues to be a need
    for collecting measurements from experimental setups and making these measurements
    widely available. A common spectrum database format and repository pool is required
    to combine spectrum information from multiple experimental and sensor sources
    around the world. SECTION X. Conclusions The Iris platform has enabled a wide
    range of experimentation that is pertinent in the dynamic spectrum access and
    cognitive radio fields. Its key characteristic is its ability to carry out runtime
    reconfiguration at a parametric, component and structural level. Moreover, Iris
    can function on a number of different platforms, or indeed be distributed over
    a number of platforms. The benefits of experimentation are many though the challenges
    are many more. The experimental space is ripe to be taken to the next level and
    put on a stronger scientific footing. This material is based upon work supported
    by Science Foundation Ireland under Grant No. 03/CE3/1405 as part of CTVR, The
    Telecommunications Research Centre at University of Dublin, Trinity College, Ireland.
    Authors Figures References Citations Keywords Metrics Footnotes More Like This
    Analysis of SAR Instrument Response in transceiver network and TRM prototype tests
    2009 19th International Crimean Conference Microwave & Telecommunication Technology
    Published: 2009 Correlation of radio frequency interference tests with low dropout
    voltage regulators 2006 IEEE International Symposium on Electromagnetic Compatibility,
    2006. EMC 2006. Published: 2006 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2010
  relevance_score1: 0
  relevance_score2: 0
  title: Experiences from the Iris Testbed in Dynamic Spectrum Access and Cognitive
    Radio Experimentation
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1145/2030718.2030733
  analysis: '>'
  authors:
  - Danny Finn
  - Justin Tallon
  - Luiz A. DaSilva
  - Peter Van Wesemael
  - Sofie Pollin
  - Wei Liu
  - Stefan Bouckaert
  - Jono Vanhie-Van Gerwen
  - Nicola Michailow
  - Jan Hauer
  - Daniel Willkomm
  - Christoph Heller
  citation_count: 8
  full_citation: '>'
  full_text: '>

    This website uses cookies We occasionally run membership recruitment campaigns
    on social media channels and use cookies to track post-clicks. We also share information
    about your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Use the check boxes below to
    choose the types of cookies you consent to have stored on your device. Use necessary
    cookies only Allow selected cookies Allow all cookies Necessary Preferences Statistics
    Marketing Show details       skip to main content University of Nebraska Lincoln
    Browse About Sign in Register Journals Magazines Proceedings Books SIGs Conferences
    People Search ACM Digital Library Advanced Search Conference Proceedings Upcoming
    Events Authors Affiliations Award Winners HomeConferencesMOBICOMProceedingsWiNTECH
    ''11Experimental assessment of tradeoffs among spectrumsensing platforms RESEARCH-ARTICLE
    SHARE ON Experimental assessment of tradeoffs among spectrumsensing platforms
    Authors: Danny Finn , Justin C. Tallon , Luiz A. DaSilva , + 9 Authors Info &
    Claims WiNTECH ''11: Proceedings of the 6th ACM international workshop on Wireless
    network testbeds, experimental evaluation and characterizationSeptember 2011Pages
    67–74https://doi.org/10.1145/2030718.2030733 Published:19 September 2011Publication
    History 7 citation 162 Downloads eReaderPDF WiNTECH ''11: Proceedings of the 6th
    ACM international workshop on Wireless network testbeds, experimental evaluation
    and characterization Experimental assessment of tradeoffs among spectrumsensing
    platforms Pages 67–74 Previous Next ABSTRACT References Cited By Index Terms Recommendations
    Comments ABSTRACT This paper reports experimental results comparing the performance
    of four platforms employed in spectrum sensing and dynamic spectrum access research:
    a sensing engine developed at imec and built around a prototype RFIC; the Universal
    Software Radio Peripheral (USRP) with the Iris software defined radio (SDR) solution;
    the TelosB sensor network platform; and the Wi-Spy low cost spectrum sensor solution
    targeted at the ISM band. We use experimental data to derive the receiver operating
    characteristics (ROC) of each of the four platforms. We observe that for low signal
    powers, narrow bandwidth signals, high shadowing, or stringent probability of
    false alarm (PFA) requirements tradeoffs among the platforms tested are most pronounced,
    whereas for high signal powers, large bandwidths, stable environments, and more
    flexible PFA requirements less expensive, commercial-off-the-shelf equipment performs
    sufficiently well. References K. Amiri et al. WARP, a Modular Testbed for Configurable
    Wireless Network Research at Rice. IEEE SWRIF, 2007. A.Sanchez et al. Testbed
    Federation: An Approach for Experimentation-driven Research in Cognitive Radios
    and Cognitive Networking. In Future Network and Mobile Summit, 2011. Ettus Research.
    USRP Datasheets. http://www.ettus.com/downloads/. Show All References Cited By
    View all Obite F, Usman A and Okafor E. (2021). An overview of deep reinforcement
    learning for spectrum sensing in cognitive radio networks. Digital Signal Processing.
    10.1016/j.dsp.2021.103014. (103014). Online publication date: 1-Mar-2021. https://linkinghub.elsevier.com/retrieve/pii/S1051200421000531
    Cardoso L, Oubejja O, Villemaud G, Risset T and Gorce J. (2018). Reliable and
    Reproducible Radio Experiments in FIT/CorteXlab SDR Testbed: Initial Findings.
    Cognitive Radio Oriented Wireless Networks. 10.1007/978-3-319-76207-4_19. (225-236).
    https://link.springer.com/10.1007/978-3-319-76207-4_19 Cheema A and Salous S.
    (2016). Digital FMCW for ultrawideband spectrum sensing. Radio Science. 10.1002/2016RS006083.
    51:8. (1413-1420). Online publication date: 1-Aug-2016. https://agupubs.onlinelibrary.wiley.com/doi/10.1002/2016RS006083
    Show All Cited By Index Terms Experimental assessment of tradeoffs among spectrumsensing
    platforms Computer systems organization Dependable and fault-tolerant systems
    and networks General and reference Cross-computing tools and techniques Performance
    Hardware Communication hardware, interfaces and storage Networks Network performance
    evaluation Recommendations Optimal multiband joint detection for spectrum sensing
    in cognitive radio networks Spectrum sensing is an essential functionality that
    enables cognitive radios to detect spectral holes and to opportunistically use
    under-utilized frequency bands without causing harmful interference to legacy
    (primary) networks. In this paper, a novel ... Read More Group-based management
    for cooperative spectrum sensing in cognitive radio networks ICACT''10: Proceedings
    of the 12th international conference on Advanced communication technology In cognitive
    radio networks, secondary users can opportunistically utilize the unused spectrum
    holes that are originally licensed to primary users. Therefore, spectrum sensing
    for seeking unutilized spectrum is a key element to establish cognitive radio
    ... Read More An Adaptive Sensing Time Based on SNR for Spectrum Utilization Enhancement
    in Cognitive Radio Cognitive radio is considered as the most intelligent solution
    to enable flexible use of the frequency spectrum. It allows the secondary user
    to use the band in which the primary user is idle. Spectrum sensing is a major
    task in cognitive radio systems. ... Read More Comments 14 References View Table
    Of Contents Footer Categories Journals Magazines Books Proceedings SIGs Conferences
    Collections People About About ACM Digital Library ACM Digital Library Board Subscription
    Information Author Guidelines Using ACM Digital Library All Holdings within the
    ACM Digital Library ACM Computing Classification System Digital Library Accessibility
    Join Join ACM Join SIGs Subscribe to Publications Institutions and Libraries Connect
    Contact Facebook Twitter Linkedin Feedback Bug Report The ACM Digital Library
    is published by the Association for Computing Machinery. Copyright © 2024 ACM,
    Inc. Terms of Usage Privacy Policy Code of Ethics'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2011
  relevance_score1: 0
  relevance_score2: 0
  title: Experimental assessment of tradeoffs among spectrumsensing platforms
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/iccw.2008.99
  analysis: '>'
  authors:
  - C. Sokolowski
  - Marina Petrova
  - A. de Baynast
  - Petri Mähönen
  citation_count: 11
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >ICC Workshops - 2008 IEEE Int...
    Cognitive Radio Testbed: Exploiting Limited Feedback in Tomorrow''s Wireless Communication
    Networks Publisher: IEEE Cite This PDF C. Sokolowski; M. Petrova; A. de Baynast;
    P. Mahonen All Authors 8 Cites in Papers 210 Full Text Views Abstract Document
    Sections I. Introduction II. Closed-loop GA-based CR Transceiver III. CR implementation
    on GNU Radio platform IV. Cognitive Radio testbed results V. Conclusions Authors
    Figures References Citations Keywords Metrics Abstract: The next generation of
    wireless communication devices should support advanced features such as high spectral
    efficiency, broad bandwidth, diverse quality of service (QoS) requirements, and
    adaptivity. The cognitive radio (CR) is a new paradigm which has a high potential
    to become a basis for the future wireless systems. This paper is a first step
    towards the implementation of such a system. Our CR testbed is based on a GNU
    Radio platform which enables flexibility and reconfigurability of transmission
    parameters. As machine learning component, we invoke genetic algorithm (GA) to
    optimize the transmission parameters such as transmission power, modulation order
    and frequency channel based on the current spectrum conditions. Unlike other CR
    implementations, our approach requires very limited feedback information at the
    transmitter (ap 8 bits/packet duration). No transmission model nor additional
    network state information (NSI)is needed at the transmitter side. Experimentations
    show that our CR is capable to find free channels within 4-5 iterations even in
    a highly occupied spectrum scenario. It also offers the optimal trade-off between
    throughput, reliability, and power consumption depending on the user''s QoS requirements.
    Published in: ICC Workshops - 2008 IEEE International Conference on Communications
    Workshops Date of Conference: 19-23 May 2008 Date Added to IEEE Xplore: 30 May
    2008 CD:978-1-4244-2052-0 Print ISSN: 2164-7038 DOI: 10.1109/ICCW.2008.99 Publisher:
    IEEE Conference Location: Beijing, China SECTION I. Introduction The Cognitive
    Radio paradigm introduced by Mitola III and Maguire [1] has created new opportunities
    for building reconfigurable and optimized wireless systems. So far the main focus
    of exploiting the potential of the CRs has been in the field of dynamic spectrum
    access (DSA). However, the CR paradigm gives excellent possibilities for cross-layer
    optimization and achieving optimal system performance using machine learning and
    reasoning techniques. Recently different research groups have proposed concepts
    and frameworks for CR using machine learning based optimization techniques for
    the decision making process. An early approach was introduced by Rieser et al.
    [2] at Virginia Tech., known as Cognitive Engine. It is a simple genetic algorithm
    based engine for cognitive radios which can change the transmission parameters
    of the radio based on a set of predefined objectives. Petrova et al. [3], [4]
    extended their approach towards a cross-layer paradigm for Cognitive Radios considering
    all OSI layers, and proposed a framework called Cognitive Resource Manager (CRM).
    Similar work has also been started by Sutton et al. [5] at Trinity College Dublin
    in Ireland. Recently Newman et al. [6] from Kansas University derived both single
    carrier and multiple carrier fitness functions for a genetic algorithm driven
    CR engine. All these approaches require perfect knowledge of the transmission
    model at the transmitter side and therefore induce a large overhead. In a time-varying
    radio environment, it is not clear if such schemes will increase the overall throughput.
    In this paper we propose a new implementation of CR on a GNU Radio hardware platform
    [7], which requires very little information. We employ a genetic algorithm (GA)
    to optimize the transmission parameters in a dynamic wireless radio environment.
    As feedback information we only use the error rate estimate of the transmission,
    so that no additional network state information (NSI) estimation is needed. For
    example, NSI may consists of the channel SNR, number of users, interference level,
    transmission range, channel impulse response, etc. The NSI estimation introduces
    large overhead especially in time-varying environment, which decreases the overall
    throughput of the system. Our implementation requires very limited feedback information
    at the transmitter ( ≈ 8 bits/packet duration) and is still optimal for slow to
    moderate fading environment. Throughout the paper, we focus on the optimization
    of the parameters at the physical layer. However, our approach can be extended
    to support additional parameters. The CR is able to dynamically adapt the transmission
    parameters to a changing spectrum environment and meet the users'' current needs,
    e.g., jump to a “free” channel and offer the optimal trade-off between throughput,
    reliability, and power consumption depending on the user''s QoS requirements.
    Our system operates in the unlicensed 433 MHz ISM band, but can be extended to
    other bands by switching the front-end board. The remainder of the paper is structured
    as follows: in Section II we propose a new transmission scheme with limited feedback
    in which the resources are optimized according to the user''s requirements. Section
    III gives an overview of our implementation based on GNU Radio. In Section IV
    we present the experimental results of two test cases: 1) rate adaptation and
    power control and 2) dynamic spectrum access in time-varying spectrum scenario.
    Finally we conclude the paper in Section V. SECTION II. Closed-loop GA-based CR
    Transceiver Let us assume a closed-loop system as in Figure 1. For the transmission
    of the first packet, a random set of transmission parameters is used. The radio
    parameters that we consider in this paper are the transmit power (16 different
    power levels), the order of Phase Shift Keying (PSK) modulation (1 to 4) and the
    carrier frequency within 428 MHz-459 MHz range (32 channels). The receiver attempts
    to detect the packet, estimates the number of errors within the packet and sends
    this value back to the transmitter via the control channel. Assuming that the
    transmission channel is constant over several packet durations, the number of
    errors is a measure of the reliability of the transmission for the current set
    of transmission parameters. Based on this number, the transmitter estimates the
    probability of transmission errors P e for each packet sent. These probabilities
    will be used by the GA to optimize and time-tune the transmission parameters.
    In general, there are several objectives that radio systems may want to achieve
    such as minimizing the bit error rate (BER), maximizing spectral efficiency, minimizing
    power consumption, providing interference avoidance, maximizing data rate, minimizing
    network latency, etc. In this work we consider three objectives that represent
    common wireless communication goals: Minimizing the bit/packet error rate increases
    the reliability of the radio transmission. This objective can formulated as f
    mi n − BER :=1−(1− P e ) N , (1) View Source where N is the packet length and
    P e is probability of transmission errors. Maximizing the throughput is also an
    important objective and it is given by fma x − tp:= k k max , (2) View Source
    where k is the number of bits per symbol and k max the maximum order. In our implementation,
    we choose k max =4 . Minimizing the transmission power aims to minimize power
    consumption and interference with other transmissions. In the case of portable
    devices with limited battery power this issue is very important. Additionally,
    transmission power has to be also set low in order to limit the interference with
    the other transmissions. The objective function can be stated as f mi n − power
    :=1− P T x P T x −max , (3) View Source where P Tx is the transmission power and
    P T x −max is the maximum available transmission power. Determining the optimal
    set of decision variables for a single objective, e.g., minimizing power, often
    results in a nonoptimal set with respect to the other objectives. Consequently,
    if we take all of the aforementioned objectives as inputs to a multiobjective
    optimization, they need to be ranked with regard to the transmission requirements.
    In our work we use a weighted, aggregate sum approach where each objective is
    weighted according to its importance. This approach has been presented in [8]
    as an attempt to maximize the sum of the positively normalized, weighted single
    objective fitness scores for each parameter set. In [9] Rondeau et al. use also
    this approach to autonomously adapt a cognitive radio. Aggregating our three fitness
    objectives, the scalar fitness function holds: f= w 1 f mi n − BER + w 2 f ma
    x − tp + w 3 f mi n − power (4) View Source This method suits the Cognitive Radio
    scenario well [6] since any solution with respect to the user''s QoS requirements
    can be reached simply by changing the weights in (4). After L consecutive packets
    have been transmitted, the objectives in (1), (2) and (3) are evaluated for the
    L corresponding sets of transmission parameters. GA generates L new sets of transmission
    parameters with better average scores with respect to the overall fitness function
    in (4). Throughout the paper, L will denote the population size of GA. For more
    details on the basic operations of GA (selection, crossover, mutation), the reader
    is refereed to [10]. The transmission of the next L packets proceeds with these
    new sets of parameters, which will be evaluated in turn at the transmitter. This
    iterative optimization process repeats for several iterations until (4) is maximized.
    SECTION III. CR implementation on GNU Radio platform The Cognitive Radio setup
    used in our experiments is shown in Fig. 1. The setup comprises two USRP motherboards
    from Ettus Research that are equipped with RFX 400 daughter boards (RF front-end).
    One daughterboard is used for transmitting the data and the other one is used
    as a receiver. All components required for the RF/baseband conversion are implemented
    on the FPGA of the daughterboard. Baseband operations are executed in the GNU
    Radio software environment which is running on the host computer. The USRP hardware
    is connected to the host computer via a USB connection. This interface is utilized
    for programming the hardware and for carrying the data stream between the GNU
    Radio flow graphs and the USRP boards. Throughout the paper we use the same structure
    for all packets, which consists in the concatenation of three parts: 1) a preamble
    for synchronization, 2) the payload length, 3) and the payload itself. The preamble
    is used by the receiver to detect the beginning of a packet. It consists of a
    64-bits pseudo-noise sequence [11] which was proven to be efficient even in the
    presence of frequency selective channels. Our implementation supports variable
    length packets ranging from 1 byte to 4096 bytes. The packet length is duplicated
    in order to mitigate the channel impairments that may occur during the transmission.
    The payload constitutes the third part of the packet. The modulation order k ,
    used for the current packet is transmitted to the receiver before the packet transmission
    through a wired TCP control channel. The receiver sends the feedback information
    to the transmitter through the control channel. Our feedback information is relayed
    through errorfree perfect channel. This is done without losing generality, and
    the purpose of this is to find out the maximum gain that can be achieved for the
    data communications. Fig. 1. Testing setup of a Cognitive Radio Show All A. Transmitter
    flow graph Assume that the current solution of the genetic algorithm consists
    of the following set of parameters: k (modulation order), P Tx (transmission power),
    and i (carrier frequency). The packet to be transmitted is modulated with k-PSK
    first. The differential PSK (DPSK) modulated signal is obtained by encoding only
    the phase changes of two consecutive symbols. Since a DPSK modulated signal considers
    the phase changes only, the receiver is insensitive to a phase offset. This significantly
    reduces its implementation complexity [12]. Additionally, the differential schemes
    might yield a better bit-error rate over wireless transmission than the non differential
    schemes in the presence of residual phase offset. The digital signal is then interpolated
    and filtered using a root-raised cosine finite impulse response (FIR) filter.
    Before the signal is fed to the USRP board, the digital gain of the signal is
    set to P Tx . B. Receiver flow graph The receiver structure for the GNU Radio
    is shown in Fig. 2, where all the elementary processing blocks of the implemented
    receiver are depicted. Fig. 2. Flow graph of the receiver Show All First, the
    received data are scaled with an automatic gain control unit in order to mitigate
    the channel fading that may occur during the wireless propagation. For the phase
    recovery, we use a Costas Loop-based phase detector [13] with parameters α = 0.001
    and β= α 2 /4 as suggested by [14]. The signal is then convolved with the matched
    root-raised cosine FIR filter to remove the high frequency transitions of the
    signal. In the next block, a Mueller & Muller discrete-time error-tracking synchronizer
    [15] performs the clock recovery. The signal then is demodulated. In our packet
    synchronization implementation, all demodulated and detected symbols are continuously
    stored in a First-In-First-Out (FIFO) buffer of the length of the preamble (64
    bits). At the end of each symbol period, the current buffer sequence is shifted
    to the left by one bit; we then calculate the bit-wise correlation between this
    sequence and the preamble, which is known by the receiver. If this coefficient
    is larger than a threshold τ , we declare the synchronization successful. In our
    implementation, we found that τ=2k offers the best performance. Once the beginning
    of a packet is detected, the payload length ( N ) is detected. If the payload
    length does not match its counterpart or if the length is out of range, the packet
    is declared lost, the system switches back to its initial state and searches for
    the next preamble. Otherwise, the receiver start to detect the payload symbols
    until the packet length is reached. The transmission errors for this packet are
    estimated and this number is fed back to the transmitter. This number is the sole
    environmental input used in our GA implementation for iteratively optimizing the
    transmission parameters through GA. SECTION IV. Cognitive Radio testbed results
    The performance of GA is experimentally analyzed in two cases that are essential
    towards practical implementation of a cognitive radio: Optimal power control and
    transmission rate adaptation in time-varying environment for fixed channel assignment:
    In this study, we use 16 transmission power levels P Tx ranging from 100 to 15000
    and four modulation orders k = 1,2,3,4 but our approach can readily be extended
    to arbitrary modulations. This gives a total search space of 64. Although it might
    not be necessary to use GA for solving such a problem, our goal is to demonstrate
    that GA is a generic algorithm for optimizing the wireless transmission parameters
    and therefore is a strong candidate for managing the resources in CR network.
    For example, we are currently extending this approach to more sophisticated transmission
    systems like OFDM and CSMA/CA. In that case, since GA is a generic optimization
    tool, our implementation needs only minor modifications. Dynamic spectrum access
    in a time-varying jammed spectrum environment: In this case, 32 channels of 40
    kHz bandwidth are possible candidates for the optimal choice of the GA. The channels
    are between 428 MHz and 459 MHz, the center frequencies separated by 1 MHz guard
    intervals. The goal of CR is to quickly adapt the transmission parameters in (4)
    for a given set of weights according to the current propagation environment. The
    main criterion for a fast but still reliable optimization process is the convergence
    speed of GA. The convergence speed factor can be expressed as the product of the
    population size and the number of iterations. We choose the population size and
    the number of iterations that offer the best tradeoff between the convergence
    speed and the performance. Table I summarizes the set of internal parameters that
    we use for GA in all our tests. TABLE I Internal parameters used in our genetic
    algorithm implementation. population size 18 (Section IV-A) or 16 (Section IV-B)
    number of iterations 15 (Section IV-A) or 11 (Section IV-B) selection method tournament
    elitism rate 10% mutation rate μ 1− 18 −1 /L [16] crossover rate 90% A. GA-based
    rate adaptation and power control A ideal system should be able to use the minimum
    transmission power for a target throughput and a target BER. In order to adapt
    the transmission parameters in time-varying environment, this strategy requires
    two features: power control and rate adaptation. For converging to a specific
    set of transmission parameters that satisfy the QoS requirements of the application,
    the weights of GA in (4) have to be modified accordingly. If the goal is to maximize
    the throughput for any target BER ranging from 10 −3 to 0.3, we found that the
    weight for (2) should be increased approximately linearly with respect to the
    signal-to-noise ratio (SNR). If the weight for (3) remains constant, the weight
    for (1) should decrease accordingly. Specifically, the optimal weight for the
    throughput is equal to 0.01 for SNR = 8 decibels and rises up to 0.4 for SNR =
    18 decibels. A system supporting rate adaptation maximizes the transmission rate
    with respect to the SNR of the channel. For example, in IEEE 802.11n standard,
    modulation schemes ranging from binary PSK (BPSK) to 64-QAM are supported [17].
    From this point of view, the system will be optimal. However, it requires the
    estimates of the SNR of all subcarriers and induces large overhead, which significantly
    reduces the overall throughput. In order to overcome this shortcoming, our GA-based
    implementation iteratively optimizes the rate and the transmission power based
    on the estimation of the probability of transmission errors only. The throughput
    achieved by GA after several iterations is depicted in Fig. 3. Each solution is
    averaged over 100 experiments. As aforementioned, we modify the weights in (4)
    with respect to the transmission SNR such that the throughput is maximized while
    satisfying a target BER ≈ 0.1 (before forward-error coding). We compare our GA-based
    results with the theoretical performance of PSK modulation. Below a certain SNR
    threshold depending on the modulation order, it is not possible to transmit data
    such that the number of transmission errors is equal to or less than target BER.
    For example, transmission SNR for quaternary DPSK (DQPSK) signaling has to be
    equal to or greater than 6 decibels in order to meet a target BER of 0.1 [12].
    Although GA may not find the optimal solution, the results in Fig. 3 show that
    GA performs very well and the solution after convergence is near-optimal for a
    large SNR range. Fig. 3. Weight determination as a function of the transmission
    SNR in order to achieve optimal rate Show All B. Dynamical spectrum access in
    time-varying jammed spectrum scenario In a CR setup which supports dynamic spectrum
    access, some of the available channels might spontaneously be jammed during the
    transmission. In this section, we investigate the capability of GA to select transmission
    channels with lower interference level. In our experiments, no channel is initially
    jammed; all channels have approximately the same background noise and GA iteratively
    optimizes the transmission parameters. After 48 packet transmissions (which exactly
    corresponds to 3 full GA iterations), a subset of the available channels is suddenly
    jammed. For simulating jamming, we set a high resolution signal generator to transmit
    random signal with very high power (8 dBm) in the band of interest such that no
    transmission is possible. Indeed, the power spectral density in the jammed spectrum
    is approximately 40 decibels higher than the noise power in the “free” channels.
    In our experiments, we vary the ratio between the number of jammed channels and
    the number of “free” channels. This ratio is referred as the occupancy level of
    the system. Specifically, we consider 32 channels of bandwidth 40 kHz as possible
    candidates for GA. Our analysis includes occupancy levels of 10%, 30%, 50%, 70%,
    and 90%. The last case, in which 90% of the channels are jammed is the most challenging
    optimization problem because only 3 out of 32 channels ensure a reliable transmission.
    In order to steer the GA population to the solutions that correspond to free channels,
    we stress the transmission reliability at the expense of the transmit power and
    the throughput by setting the weights to w min −BER=0.8 and w mi n −power = w
    ma x −tp =0.1 . The single fitness f mi n −BER is the only objective which is
    in function of the channel conditions. We thus assure with high probability that
    the fitness score (4) of the chromosomes that correspond to a high throughput
    or to a low transmit power level but to a jammed channel is lower than the score
    of the chromosomes that correspond to free channels. For sake of simplicity, we
    only use DBPSK and DQPSK modulation for transmission. Additionally, we consider
    32 channels between 428.0 MHz and 431.1 MHz with carrier frequencies separated
    by 100 kHz. The transmission power can take 16 levels ranging from 100 to 15000.
    Fig. 4. Channel adaptation for several spectrum occupancy levels. Convergence
    behavior of f mi n − BER (1) as a function of the number of iterations Show All
    In order to analyze the convergence behavior of GA when the spectrum is partially
    jammed, the average fitness value f mi n − BER in (1) is evaluated over all chromosomes.
    The goal of our GA-based implementation is that all chromosomes in the GA population
    correspond to some free channels for two reasons. First, all packets that are
    transmitted over jammed channels are lost and require retransmission which might
    significantly reduce the throughput. Second, transmitting over jammed channels
    interferes with signals of the other users. It is essential that all elements
    in the GA population that correspond to jammed channels are removed in very few
    iterations. Note that this strategy might not be sufficient if transmission within
    licensed bands is considered but is acceptable in an unlicensed band scenario.
    The convergence behavior of the GA algorithm is illustrated in Fig. 4. Since f
    mi n −BER is the main indicator of the transmission reliability, the average fitness
    score of f mi n −BER is plotted as a function of the number of iterations. We
    average the scores over 6 runs for each occupancy level. A fitness score of 0.98
    is observed before jamming part of the spectrum. During this period, transmission
    is reliable over all 32 channels because all of them are free. Since the ambient
    noise is similar for the 32 channels in our experiments, GA optimizes the rate
    and the transmission power and transmits over an arbitrary channel which changes
    from one packet to another. The optimization difficulty rises after iteration
    3 when some of the 32 channels remain “free”. In order to limit the interference
    with potential primary users and to guarantee reliable transmission, population
    of GA has to quickly evolve to free channels. In Fig. 4, f mi n − BER drops approximatively
    to one minus the occupancy level at iteration four. Since the transmission SNRs
    are similar over all channels, GA population is spread approximatively uniformly
    over them at iteration 3. Right after jamming a certain ratio of the 32 channels,
    all packets in the jammed channels are lost and most of the packets in the free
    channels are successfully transmitted. For example, in the scenario in which 50%
    of the channels are jammed, the average fitness score drops from 0.9803 down to
    0.4546. A similar behavior is observed for the other occupancy cases. In most
    cases, the average fitness score of f mi n −BER reaches its initial value (before
    the jammer) within next few iterations, 3 or 4 in our cases. When a very large
    number of channels are jammed (90% occupancy level) GA converges very slowly to
    the free channels. Before jamming, the channel indices of the whole GA population
    are concentrated onto a few frequencies instead of being randomly distributed
    for some runs. Once a good channel is generated, this solution will spread out
    to the next population with high probability. However, if all channels used at
    iteration 3 are jammed by our signal generator, chromosomes that correspond to
    free channels can only be introduced through crossover and mutation operations.
    The probability for this occurrence is rather low with the settings in Table I.
    Instead of considering constant GA internal parameters in all scenarios, a more
    sophisticated solution would consist in adapting the internal parameters based
    on the current occupancy level. However, we used constant rates in this study
    in order to keep our GA implementation as generic as we could. In Fig. 5, we illustrate
    this behavior for two extreme runs as well as the average behavior for several
    runs for the case when 90% of the channels are jammed. In the first case, the
    population at iteration 4 contains some chromosomes corresponding to free channels.
    Most of the solutions correspond to jammed channels, which caused sharp drop from
    0.98 to 0.1 as the fitness score at iteration 4. However, the chromosomes corresponding
    to free channels will quickly propagate during the next iterations due to their
    high scores. Fig. 5. Convergence analysis for the scenario where 90% of the channels
    are jammed Show All In the second case, the population at iteration 3 does not
    contain any chromosome including free channels. Therefore, the average fitness
    f mi n −BER of the population drops to nearly zero at iteration 4. There is no
    significant improvement until iteration 9. Performance even worsen from iteration
    4 to iteration 5. The possibility to generate a chromosome corresponding to a
    free channel can only occur throughout mutation or crossover operation (and not
    throughout selection). Up to this occurrence, all packets are lost because their
    transmission occurs in jammed channels for any chromosome of the GA population.
    Either mutation or crossover introduced a chromosome corresponding to a free channel
    at iteration 9. The fitness score improves from 0 in iteration eight to 0.058
    after iteration 9. This good solution quickly propagates through the new populations
    within the next iterations. Ultimately, all solutions that correspond to jammed
    channels will be removed. Finally, the third curve in Fig. 5 represents the average
    fitness score over six runs and includes both aforementioned cases. Globally,
    GA is suitable for efficient dynamic spectrum access. For some extreme cases such
    as for 90% of the channels jammed, GA may converge slowly to free channels. In
    that case, one solution consists in increasing the mutation rate of GA. Introducing
    an adaptive mutation rate may overcome this problem. For implementation complexity
    reasons, we only considered a constant mutation rate in this paper. It is clear
    that the channel allocation against jamming based on GA approach may not be always
    optimal. Energy detectors or feature–detectors [18] combined with simple avoidance
    algorithms may perform better. The real benefit in CR context is that the jamming
    avoidance is combined with GA which is performing also other optimizations at
    the same time. SECTION V. Conclusions In this paper we have reported on our CR
    implementation on GNU radio platform that optimizes the transmission parameters
    including the transmission power, the modulation scheme and the transmission frequency.
    Since the optimization problem is nonlinear, we have proposed a GA as general
    optimization tool for CRs. Unlike the other CR implementations that have been
    proposed so far, our approach requires only a limited feedback information at
    the transmitter. No additional NSI nor transmission/propagation model is needed
    at the transmitter. The experimental results show that our CR is able to find
    very quickly free channels using GA, even in highly occupied channel scenarios.
    Based on our experiments and the implementation we believe that GA based optimization
    for CR, especially when combined with the limited feedback, is a promising approach
    which warrants further research and development work. ACKNOWLEDGMENT The authors
    would like to thank Matthias Wellens for the fruitful discussions and the insights
    during the implementation work, and Luis Simões for help on earlier implementation
    work, especially with the TCP feedback channel. A part of this work is done for
    the fulfillment of M.sc. thesis of one of us (CS). This work has been in part
    financed by DFG, RWTH Aachen University through UMIC, and European Commission
    (ARAGORN project). Authors Figures References Citations Keywords Metrics More
    Like This Effective Capacity Analysis of Cognitive Radio Channels for Quality
    of Service Provisioning IEEE Transactions on Wireless Communications Published:
    2010 Providing statistical quality-of-service guarantees in cognitive radio networks
    with cooperation 2009 Second International Workshop on Cognitive Radio and Advanced
    Spectrum Management Published: 2009 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2008
  relevance_score1: 0
  relevance_score2: 0
  title: 'Cognitive Radio Testbed: Exploiting Limited Feedback in Tomorrow''s Wireless
    Communication Networks'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/dyspan.2008.49
  analysis: '>'
  authors:
  - Luiz A. DaSilva
  - Allen B. MacKenzie
  - C. da Silva
  - Ryan W. Thomas
  citation_count: 9
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2008 3rd IEEE Symposium on Ne...
    Requirements of an Open Platform for Cognitive Networks Experiments Publisher:
    IEEE Cite This PDF Luiz A. DaSilva; Allen B. MacKenzie; Claudio R. C. M. da Silva;
    Ryan W. Thomas All Authors 5 Cites in Papers 5 Cites in Patents 179 Full Text
    Views Abstract Document Sections I. MOTIVATION II. COGNITIVE RADIOS AND COGNITIVE
    NETWORKS III. DISTRIBUTED SPECTRUM SENSING IV. MEDIUM ACCESS CONTROL FOR DYNAMIC
    SPECTRUM ACCESS V. INTERFACE LANGUAGES FOR COGNITIVE RADIOS Show Full Outline
    Authors Figures References Citations Keywords Metrics Abstract: Experimental research
    on networks of cognitive radios has been hindered by the lack of open, affordable
    cognitive radios and associated software that are capable of operating with the
    full network protocol stack. In this paper, we describe our vision of the building
    blocks needed to create an open platform for cognitive network experimentation
    and prototyping. These include mechanisms for distributed spectrum sensing, a
    MAC protocol tailored to dynamic spectrum access, and interface languages for
    cognitive networks. Published in: 2008 3rd IEEE Symposium on New Frontiers in
    Dynamic Spectrum Access Networks Date of Conference: 14-17 October 2008 Date Added
    to IEEE Xplore: 24 October 2008 ISBN Information: DOI: 10.1109/DYSPAN.2008.49
    Publisher: IEEE Conference Location: Chicago, IL, USA SECTION I. MOTIVATION Cognitive
    radios enable the opportunistic use of underutilized spectrum and real-time modulation
    and waveform adaptation to better fit the current wireless environment. Research
    on cognitive radios has exploded in the past few years, propelled in part by newly-available
    spectrum created by the move to digital television and by the promise of technical
    innovation in a more dynamic spectrum allocation regime. Experimental research
    on networks of cognitive radios, however, has been hindered by the lack of mature,
    affordable cognitive radios that are able to operate with the full network protocol
    stack. This article outlines the requirements of a cognitive radio platform that
    is flexible enough for fundamental research on cognitive radios and cognitive
    networks and that is widely available to the entire research community. The leading
    candidate for an open cognitive network platform is the Universal Software Radio
    Peripheral (USRP), with software support provided by GNU Radio, due to its availability
    to the research community, flexibility in operating with a wide variety of frequencies
    and waveforms, low cost, and reasonably broad use to date in physical layer communications
    research. It is worth noting that GNU Radio can work with other hardware platforms,
    just as the USRP can use other software platforms; we believe the use of both
    in tandem currently offers the best solution for an open cognitive platform. While
    this platform has been successfully employed by several research groups (including
    ours) for research into spectrum sensing and modulation classification (e.g.,
    [1]), it is still limited in its ability to operate in large, multi-hop wireless
    network testbeds. We describe the current limitations of the platform and our
    ideas of what would be required to make it more broadly useful for cognitive networks
    research. Four aspects are of particular importance: Support for distributed signal
    detection and modulation classification algorithms to allow the assessment of
    the effectiveness and requirements of distributed methods in detecting the presence
    of incumbent users and utilizing white spaces; Support for a medium access control
    (MAC) protocol tailored to the requirements of dynamic spectrum access and in
    particular one that supports random access; Development and implementation of
    a Network Knowledge Representation Language (NKRL) to store and communicate information
    regarding network state to cognitive elements; and Development and implementation
    of a cognitive specification language (CSL) that describes the interface between
    policies and objectives and the cognitive engine. The first two aspects address
    usability of an open cognitive radio platform in a wireless network, while the
    last two speak to the reusability of cognitive engines. We discuss each of these
    in later sections and present our vision for how they should be developed. We
    start with a brief discussion of the current state of the art in cognitive radio
    platforms and cognitive networks. SECTION II. COGNITIVE RADIOS AND COGNITIVE NETWORKS
    Cognitive radios promise seamless adaptation, opportunistic use of under-utilized
    spectrum, and selection of the modulation and waveform that best fit the current
    wireless environment. A simplified block diagram for a cognitive radio is shown
    in Fig. 1. The cognitive engine is the “brain” of the radio, responsible for reasoning
    and learning; it strives to optimize an objective function, while constrained
    by a predefined set of policies. It does so by considering information it can
    sense regarding the wireless environment and the state of the network (the “dials”
    in the figure) and adapting its operating parameters, such as frequency channel
    or type of modulation (the “knobs” in the figure). The information available to
    the cognitive engine may consist of factors the radio can sense directly, such
    as channel occupancy in its vicinity, as well as factors that are reported by
    other radios, such as congestion conditions elsewhere in the network. User requirements,
    as well as more general radio and network objectives such as spectral and energy
    efficiency, are reflected in the objective function. For more discussion of cognitive
    radio concepts, as well as of its most common application, dynamic spectrum access
    (DSA), [2] and [3] are among some of the good tutorial papers that appear in the
    literature. Despite the clear potential for efficiency gains from this type of
    adaptation, such intelligent radios, when placed in a network, may bring about
    unexpected and even undesirable results (e.g., adaptation cycles, local optimizations
    that do not translate into end-to-end performance improvements, or unreasonable
    power, bandwidth, and computing requirements for certain distributed operations
    such as collaborative spectrum sensing) unless network considerations are carefully
    explored. This has catalyzed recent interest in cognitive networks. In [4], we
    outline the features, objectives and challenges of a cognitive network, which
    we define as a network with a process that can perceive current network conditions,
    and then plan, decide, and act on those conditions. The network can learn from
    these adaptations and use them to make future decisions, all while taking into
    account end-to-end goals. The End-to-End Reconfigurability Project II ( E 2 RII)
    [5], m@ANGEL platform [6], CTVR at Trinity College [7], and the Institute for
    Wireless Networks at RWTH Aachen University [8] have also proposed architectures
    at various degrees of maturity for end-to-end oriented, autonomous networks of
    cognitive and/or adaptive radios. While analytical and simulation research on
    cognitive networks has made great strides over the past few years, experimental
    work on self-organizing networks of cognitive radios has lagged, due primarily
    to the lack of mature cognitive radio hardware and software platforms that are
    capable of supporting a realistic network protocol stack. It is of note that DARPA
    has been funding experimental work on the development of spectrum agile radios
    [9] and of large-scale adaptive networks, through the NeXt Generation (XG) and
    Wireless Network after Next (WNaN) programs, respectively. However, these radio
    platforms are not available for experimentation by academic researchers outside
    the scope of military communications. There seems to be interest in developing
    a non-military version of the WNaN radio to be available to researchers worldwide,
    but it is still early to determine how likely this is or how long it will take.
    Figure 1. Simplified block diagram of a cognitive radio. Show All Development
    of adaptive radios and cognitive radio testbeds has also progressed in academia,
    with the Kansas University Agile Radio (KUAR) [10] and the Berkeley Emulation
    Engine 2 (BEE2) at the University of California at Berkeley [11] examples of particular
    note. These efforts, however, have not as yet focused on producing hardware and
    software platforms that would enable widespread experimentation in networks of
    cognitive radios by the research community. Rice University''s Wireless open-Access
    Research Platform (WARP) [12] is an FPGA-based platform that supports implementation
    and testing at the physical and network layers. It is now being commercialized
    and starting to gain traction in the research community, although price and availability
    are still obstacles to large-scale network experimentation. Similarly, industry
    is engaged in the development of spectrum agile radios for specific application
    scenarios, such as the opportunistic use of vacant TV spectrum envisioned by the
    IEEE 802.22 working group, but is unlikely to produce open platforms that can
    be used for general experimental research. There is critical need for an inexpensive,
    widely available, and flexible platform that supports real-time adaptation of
    communication parameters and that is able to operate with a full network protocol
    stack. Next, we discuss each of the four aspects outlined in Section I, needed
    to achieve such an open platform for cognitive network experimentation. SECTION
    III. DISTRIBUTED SPECTRUM SENSING A cognitive radio''s ability to reliably and
    quickly perform spectrum sensing, whether independently or collaboratively, is
    an important aspect of opportunistic spectrum usage. If the spectrum state estimate
    is unreliable, outdated, or biased, cognitive radio networks may lead to harmful
    interference. Although significant progress has been made in the development of
    sensing algorithms (see among others [13]–[15]), research and experimental results
    on the implementation of such algorithms in radio platforms is still relatively
    scarce [10], [16]–[20]. Additionally, work in this area typically relies either
    on the use of platforms developed “in-house,” such as BEE2 and KUAR, and/or on
    the use of expensive spectrum analyzers for signal processing. To enable broader
    and faster development of cognitive systems, open-source “spectrum sensing blocks”
    that use publicly available hardware and software platforms are needed. As previously
    mentioned, the USRP + GNU Radio combination is a proven and viable candidate for
    research on the physical layer (and higher layers) of cognitive radio systems.
    This platform has been used for spectrum sensing research at Rutgers, Trinity
    College Dublin, and the US Department of Defense, for example [17]–[19]. However,
    the design and implementation of efficient signal detection and modulation classification
    algorithms on this platform is still an open problem. The design of low-complexity
    and robust (to RF/analog circuit impairments, for example) sensing algorithms
    is critical for the development of an experimental cognitive radio network. In
    addition, these algorithms must be able to reliably detect and classify signals
    with little or no a priori knowledge of the channel conditions and of the received
    signal (e.g., timing parameters, bandwidth). In this context, cyclic feature-based
    detectors and classifiers have been widely considered for cognitive systems [14],
    [16]–[17], [19]–[22]. In particular for modulation classification, typical cyclic
    feature-based methods involve three steps: the estimation of the cyclic spectrum
    of the received signal; the extraction of features of the cyclic spectrum (which
    provide unique modulation specific characteristics); and the processing of these
    features by a pattern matching algorithm. However, the time and computational
    cost of estimating the received signal''s cyclic spectrum may become prohibitive
    for practical applications and scenarios (e.g., interference-limited environments
    or a large number of hypotheses). A possible solution to this problem was presented
    in [16] for signal detection. This solution states that if the set of signals
    of interest are known, only certain points (or regions) of the cyclic spectrum
    need to be estimated (as opposed to the complete spectrum). These points can be
    chosen in such a way as to provide characteristics that are unique to a given
    modulation scheme. Signal detection and modulation classification methods based
    on the use of wavelets are also receiving a great deal of interest for cognitive
    radio applications [15], [23]. Of note is the development of a wavelet-based spectrum
    sensing algorithm in CMOS chips at Georgia Tech [23]. Due to the spatial variability
    of radio signals, it is only natural to perform spectrum sensing in a distributed
    manner (by the joint work of geographically dispersed radios). Distributed sensing
    methods have the potential to greatly increase the spectrum estimation reliability,
    reduce the detection time, and ultimately decrease the probability of interference
    of cognitive networks to other systems [18], [21]–[22], [24]–[26]. For example,
    Fig. 2 shows the receiver operating characteristics of the distributed detection
    of a known signal as a function of the number of participating radios. In Table
    I, distributed modulation classification results are compared with the case in
    which modulation classification is performed by a single radio. For example, from
    this table, it can be seen that the average probability of classification error
    in the single radio case is approximately 5.16% but drops to approximately 0.21%
    when spectrum sensing is performed collaboratively by four radios. The significant
    improvement in performance obtained by using a distributed approach seen in both
    Fig. 2 and Table I is noteworthy. By using an experimental cognitive network,
    different aspects that impact distributed spectrum sensing can be analyzed. These
    include the scheduling of sensing intervals (when, and by what radios, should
    sensing information be obtained), and the design of low-complexity fusion rules
    and sensing network architectures (cognitive radio clustering, information overload,
    and power/bandwidth requirements). The analysis of timing aspects of distributed
    spectrum sensing is important, as the sensing stage must be able to rapidly detect
    changes in the spectrum utilization. The performance degradation (e.g., lower
    probability of signal detection for a given probability of false alarm) due to
    the use of dated sensing information by the spectrum access protocol can be significant,
    as shown in [22]. Such experimental analyses have the potential to allow for the
    characterization of realistic spectrum sensing limits, and ultimately determine
    the viability of “spectrum sharing” cognitive radio systems. Figure 2. Distributed
    detection of a known signal in AWGN (coherent detector). Show All TABLE I. PROBABILITY
    OF CORRECT CLASSIFICATION FOR THE: (A) SINGLE RADIO CASE; (B) DISTRIBUTED CASE
    (4 COLLABORATIVE RADIOS) USING A CYCLIC FEATURE CLASSIFIER. E N 0 =−2dB . [20]
    Let us now move up the protocol stack to identify the needs for medium access
    control mechanisms in an open cognitive radio platform. SECTION IV. MEDIUM ACCESS
    CONTROL FOR DYNAMIC SPECTRUM ACCESS Creating a medium access control protocol
    for a cognitive network is a difficult problem due to excessive latency involved
    in baseband signal processing by many software defined radio (SDR) platforms and
    the need to support dynamic access to multiple channels. We discuss both of these
    challenges in this section. A. SDR Framework Latency Most of the cognitive networks
    that have been envisioned utilize cognitive radios as network nodes. These cognitive
    radios, in turn, are almost always built using SDR platforms. A radio transceiver
    on an SDR platform usually consists of several signal processing units that are
    connected together in a structure, commonly called a flowgraph, which generates
    and/or demodulates the desired waveform. Fig. 3 shows an example of a flowgraph
    for a transceiver implemented for GNU Radio architecture. In many such platforms,
    particularly those enabling real-time radio reconfiguration, some, if not all,
    of the baseband signal processing may be performed on general purpose processors
    (GPPs); in GNU Radio, all baseband signal processing is performed on a GPP. This
    design choice reflects the fact that GPPs provide maximal flexibility, ease of
    programming, and availability of tools for reconfiguration. Even if the signal
    processing blocks themselves are implemented in custom or reconfigurable logic
    (e.g. ASICs or FPGAs), the middleware used to wire the blocks together may require
    a GPP; this is the case with the Software Communications Architecture (SCA) (and
    hence in Joint Tactical Radio System radios) which requires a particularly heavyweight
    middleware (CORBA) to connect components together. Typically, these signal processing
    block interconnections are buffered to provide processing efficiencies and to
    allow the GPP some scheduling flexibility. Unfortunately, the reliance on a GPP
    for signal processing and/or buffered signal processing block interconnection
    introduces significant latency to the modulation and demodulation process. Due
    to the bursty nature of data traffic, most general-purpose data networking standards
    (e.g. the entire IEEE 802 family of standards) rely heavily on random access MAC
    protocols. Specifically, the MAC protocol chosen is usually a derivative of carrier-sense
    multiple access (CSMA) because this random access protocol typically provides
    high efficiency. Fig. 4 shows the theoretical efficiency of the CSMA MAC protocol
    as a function of β , the ratio of the sensing time to the average packet time.
    As one might expect, the performance is heavily influenced by this receive-transmit
    turnaround time. Namely, CSMA performance falls abruptly if too much time elapses
    between the time when one stops sensing the channel and the time that one begins
    transmitting because the probability of a collision grows quite large. Figure
    3. Flowgraph for a transceiver implemented for the GNU Radio platform. Show All
    Figure 4. CSMA efficiency versus β , the ratio of sensing time to average packet
    time. Show All Unfortunately, the long latencies introduced by the SDR frameworks
    make it nearly impossible to achieve good MAC efficiency at reasonably high data
    rates (higher data rates decrease the denominator of β ). We interpret recent
    work in [26] to suggest that the GNU Radio framework will require a turnaround
    time of at least 1 ms. With packet sizes of 1000 kB and a data rate of 1 Mbps,
    this leads to a theoretical maximum efficiency of the CSMA MAC of 59%. (While
    data rates of 1 Mbps are unobtainable with the current USRP, we expect them to
    be easily obtainable with the soon-to-be-released USRP 2. Moreover, this is a
    reasonable minimal data rate for broadband wireless communications.) B. Dynamic
    Spectrum Access Opportunistic spectrum access introduces additional complexity
    to the MAC problem. Although there has been significant work on signal detection
    and classification, the rendezvous problem (the ability of two or more radios
    to meet and establish a communication link on a common channel) is challenging
    in and of itself. Even once nodes have located each other and established communications,
    several challenges remain: First, how can a set of nodes with disparate views
    of spectral availability efficiently exploit the available spectrum to maximize
    network throughput? It is critical that the MAC protocol perform efficiently no
    matter how much or how little bandwidth is available (i.e. the protocol must work
    efficiently even if there is only enough bandwidth for a single, shared, low data
    rate channel). Second, how can a MAC protocol cope with different node capabilities?
    Much of the early work on multi-channel MAC has assumed that nodes have multiple
    transceivers, but a good MAC for dynamic spectrum access should also be able to
    accommodate nodes with a single transceiver. Table II summarizes some of the requirements
    of a MAC that supports DSA and which of those characteristics multichannel MAC
    protocols proposed in the literature currently meet. Neighbor discovery and rendezvous
    are made more complex by two facts: (i) the set of potential neighbors may occupy
    several among multiple available channels; and (ii) secondary nodes may have to
    vacate a channel due to the appearance of an incumbent user and reconvene in a
    different channel. In other words, the set of channels available to a node changes
    dynamically. Also, the MAC may need to interact with the spectrum sensing module
    to participate in distributed sensing schemes such as discussed in the previous
    section. A MAC protocol that supports random access and addresses the additional
    requirements brought about by DSA is needed for the USRP + GNU Radio to operate
    in a cognitive network. Our vision for this is outlined next. Using distributed
    spectrum sensing, nodes may be able to identify available portions of the spectrum
    and detect and rendezvous with other detected cognitive nodes. The rendezvous
    process, including bootstrapping from common control channels and/or blind rendezvous
    in one of the currently available channels, should be part of the MAC design.
    To overcome the SDR framework latency problem while preserving the benefits of
    random access medium access control, the MAC protocol may rely on a hybrid of
    random and scheduled access. Namely, nodes can transmit short, random access frames
    in order to attempt to claim future channel resources for actual data transmission.
    It is impractical to rely on tight frame synchronization, which would be difficult
    to achieve, to delineate random and scheduled access periods. Instead, all non-reserved
    channel time can be used for random access reservations, while data transmission
    times can be scheduled relative to the time of the reservation request. We anticipate
    a process similar to the IEEE 802.11 four-way handshake: when a node detects no
    current or pending reservations on the channel, it transmits an RTS frame indicating
    a desire to send a packet to a specific neighbor. Upon successful receipt of an
    RTS, the intended destination replies with a CTS frame, which reserves the channel
    for a data transmission to start imminently (after a predetermined interval).
    In order to address the dynamic spectrum access problem, RTS and CTS frames can
    be transmitted on mutually agreed control channels. (The process of dynamically
    agreeing on a control channel is also part of the proposed rendezvous process.)
    RTS frames may include a selection of possible channels and modulation schemes
    for data transmission, while CTS frames would identify a chosen set of transmission
    parameters. The MAC must also have appropriate logic for managing multiple transceivers
    and a variety of channel conditions. Although a CSMA implementation for GNU Radio
    currently exists (and is distributed with the GNU Radio software), it is neither
    robust nor extensible. The current implementation is not robust because it provides
    no MAC-layer acknowledgements. As a result, the transport layer retransmits any
    lost packets, incorrectly interprets these losses as reflecting network congestion,
    and responds by needlessly throttling the connection. The current implementation
    is not extensible, because it is tightly integrated into a single transceiver
    flowgraph that implements a single modulation scheme. For modularity and reusability,
    the MAC control must be separate from the primary transmit and receive flowgraphs,
    thereby making it possible to use the implemented MAC protocols with any transceiver
    flowgraph that implements appropriate control interfaces. TABLE II. DSA MAC REQUIREMENTS
    AND SUMMARY OF MULTI-CHANNEL MAC PROTOCOLS IN THE LITERATURE Neighbor discovery
    Rendezvous Random Access Channel Vacate Coordinated Sensing No. Control Channels
    Dynamic Set Channels Multi-channel MAC (McMAC) [28] Blind, Accidental Hop and
    RTS/CTS Yes No No 0 No Cognitive MAC (C-MAC) [29] Blind Scheduled NAV No Yes Yes
    1 Yes Dedicated Control Channel [30] Assumed RTS/CTS Yes No No 1 No Common Hopping
    (CHMA [31], HRMA [32], RICHDP [33]) Assumed RTS/CTS on current hop Yes No No 0
    No Slotted Seeded Channel Hopping (SSCH) [34] Assumed Wait for hop No No No 0
    No Split Phase (MAP) [35] Assumed Schedule NAV Yes No No 1 No On Demand Channel
    Switching [36] Mildly assumed RTS/CTS (multi-channel) Yes No No 0 No SECTION V.
    INTERFACE LANGUAGES FOR COGNITIVE RADIOS The MAC layer and distributed spectrum
    sensing elements described earlier provide the foundation for the cognitive network.
    Beyond these physical requirements to sense the RF environment and arbitrate access
    to shared spectrum, cognitive networks require the ability to share knowledge
    and interpret end-to-end objectives. These two functions are accomplished via
    two interfaces: an interface to the other cognitive elements in the network, and
    an interface to the sources of the network''s end-to-end objectives. These interfaces
    require languages to pass messages between the cognitive elements and these entities
    – messages from other cognitive elements and messages from applications, users
    and processes requiring end-to-end support. In this section we discuss the languages
    used to communicate and represent information at each interface. In particular,
    the Network Knowledge Representation Language (NKRL) stores and communicates knowledge
    between cognitive elements and the Cognitive Specification Language (CSL) bridges
    the interface between the end-to-end goals and the cognitive elements. These interfaces
    and the role of the languages in them are illustrated in Fig. 5. The topic of
    storing and exchanging knowledge has been examined in the cognitive radio framework,
    with Mitola describing a knowledge language called Radio Knowledge Representation
    Language (RKRL) [37]. RKRL is an instantiation of Knowledge Query Markup Language
    (KQML), an interaction language developed for communication between software agents
    [38]. KQML itself is based on Standard Generalized Markup Language (SGML) and
    is designed to express and exchange information between intelligent agents and
    other entities, such as applications or other agents. In addition to exchanging
    information, KQML is designed to make and respond to requests for information,
    as well as locate qualified agents. Figure 5. Interfaces between the various cognitive
    elements and the end-to-end objectives. Show All RKRL, according to [37], consists
    of: mappings between the real world and the various models formed by the cognitive
    process; a syntax defining the statements of the language; models of time, space,
    entities and communications among entities such as people, places, and things;
    an initial set of knowledge including initial representation sets, definitions,
    conceptual models, and radio domain models; and mechanisms for modifying and extending
    RKRL. KQML, and by association, RKRL, make some demanding assumptions as to the
    availability and reliability of communication channels. In particular, it is assumed
    that there are distinguishable connections between all agents and that the connections
    are reliable and preserve the order of messages [39]. These assumptions are appropriate
    for the local, point-to-point scope that the cognitive radio operates with, but
    are limiting for a dynamic, complex network of connections. To attempt to address
    a language for higher level goals, [40] suggests extending RKRL to encompass the
    high-level goals of the users of the network. Such an extension is called a Network
    Knowledge Representation Language (NKRL). It is reasonable to take the NKRL suggestion
    as a starting point for the goal of creating an open, extensible language for
    representing and transacting knowledge in a cognitive network. The requirement
    here is to develop the framework for a NKRL that captures the same core components
    as RKRL, but extends them to handle the complexities of the entire network environment.
    NKRL must support the greater uncertainty and collaborative potential of the network
    environment. Whereas RKRL focuses on modeling the knowledge that a radio has,
    NKRL must be capable of representing the knowledge that a network node does not
    have, including uncertain, missing and indeterminate information. To this end,
    NKRL should be able to represent “compressed” versions of the knowledge, to avoid
    flooding other cognitive elements with too much information, including information
    that is either superfluous or repetitive. A NKRL can be evaluated according to
    how effectively it synchronizes, validates, and updates knowledge in dynamic and
    lossy network environments. At the other side of the cognitive process, an interface
    is needed to connect the end-to-end objectives of the network into the cognitive
    process. In a cognitive network, this role should be performed by a Cognitive
    Specification Language (CSL), providing behavioral guidance to the cognitive elements
    by describing, in a formal manner, the end-end goals for eventual use as cognitive
    element objectives. A CSL can be thought of as the architectural “blueprints”
    of the network behaviors. The CSL represents the end-to-end goals of the network
    in a standard, abstract fashion that various cognitive elements can interpret
    and act on. This is similar to how different construction contractors can use
    the same set of blueprints to determine their specific tasks, from correctly framing
    the building to running the venting system. The CSL is not used to represent the
    observed network environment, as would be found in the NKRL. Instead, it is more
    analogous in scope and intention to a Quality of Service (QoS) specification language.
    These languages are used to represent QoS requirements to the various mechanisms
    that the network offers to support them. There are already several different QoS
    specification paradigms in existence and the concept of these languages – mapping
    requirements to underlying mechanisms – is the same here, except that the mechanisms
    are adaptive to the network capabilities as opposed to a fixed set of QoS capabilities.
    In establishing criteria for a successful CSL, we adapt the criteria for a good
    QoS specification language, as described in [41]. The following criteria represent
    design objectives for an effective CSL. A language that does not meet any or all
    of these requirements may still perform the role of a CSL, albeit less effectively.
    • Expressiveness A CSL must be able to specify a wide variety of end-to-end goals.
    It should be able to express constraints, goals, priorities and behaviors to the
    cognitive elements that make up the process. It should be able to express new
    goals without requiring a revision in the language. • Cognitive process independence
    The cognitive process architecture and functionality should not dictate the CSL.
    Instead, the CSL should abstract away as much of the cognitive process as possible
    to the application, user, or resource. This allows a goal to be used with different
    cognitive processes with little modification and promotes re-usability. • Interface
    independence Whether the cognitive process is distributed or centralized in operation,
    autonomous or aggregated in architecture, the user should be presented as abstract
    an interface as possible. Like the previous criteria, this abstraction promotes
    reusability by allowing the re-use of goals over many different cognitive processes
    with little effort from the top layer. • Extensibility The CSL should be extensible
    enough to adapt to new network elements, applications and goals, some of which
    may not even be imagined yet. The effectiveness of an open CSL that accomplishes
    the design requirements above is determined by selecting several basic end-to-end
    objectives and cognitive processes (with differing interfaces and functionality),
    and then having the CSL represent these objectives to the process. SECTION VI.
    CONCLUSIONS In this paper, we described our vision of the building blocks needed
    to create an open platform for cognitive radios that is capable of operating with
    the full protocol stack. These include mechanisms for distributed spectrum sensing,
    a MAC protocol tailored to dynamic spectrum access, and interface languages for
    cognitive networks. The availability of such a platform will ultimately accelerate
    the deployment of cognitive networks through experimental work and proof-of-concept
    demonstrations. We argued that the USRP + GNU Radio is currently the leading candidate
    for an open platform for cognitive network experimentation. However, other approaches
    are fast coming to maturity. One such approach, using FPGAs to realize custom
    signal processing pipelines, is presented in [42]. In this approach, the signal
    processing structures are synthesized in advance and dynamically assembled at
    run-time. A widely-available hardware platform based on this idea is yet to emerge,
    but it would address many of the current limitations in processing power and latency
    exhibited by existing ones. The rapid availability and commercialization of Rice''s
    WARP also positions it well to potentially become a de facto standard platform
    for cognitive network research. ACKNOWLEDGMENTS We gratefully acknowledge the
    contributions of our graduate students William C. Headley, Jesse D. Reed, and
    Ryan E. Irwin to some of the results reported here. Headley and Reed conducted
    the experiments that produced the results reported in Table I, while Irwin tabulated
    the comparison of MAC protocols presented in Table II. Authors Figures References
    Citations Keywords Metrics More Like This Likelihood function-based modulation
    classification in bandwidth-constrained sensor networks 2010 International Conference
    on Networking, Sensing and Control (ICNSC) Published: 2010 Cognitive radio DAB
    MAC protocol performance using a CR specific simulator and Software Defined Radio
    2017 IEEE AFRICON Published: 2017 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2008
  relevance_score1: 0
  relevance_score2: 0
  title: Requirements of an Open Platform for Cognitive Networks Experiments
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/glocom.2011.6134059
  analysis: '>'
  authors:
  - Yi Fei Tan
  - Kai Hong
  - Shamik Sengupta
  - K. P. Subbalakshmi
  citation_count: 9
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2011 IEEE Global Telecommunic...
    Using Sybil Identities for Primary User Emulation and Byzantine Attacks in DSA
    Networks Publisher: IEEE Cite This PDF Yi Tan; Kai Hong; Shamik Sengupta; K. P.
    Subbalakshmi All Authors 7 Cites in Papers 262 Full Text Views Abstract Document
    Sections I. Introduction II. The Sybil-enabled Pue Attack III. Analysis of Optimal
    Attack Strategy IV. Numerical and Simulation Results V. Conclusions Authors Figures
    References Citations Keywords Metrics Footnotes Abstract: In this paper, we investigate
    a new type of denialof- service attack in dynamic spectrum access networks - Sybilenabled
    attack. In this attack, the attacker not only launches the primary user emulation
    (PUE) attacks but also creates and infiltrates multiple Sybil identities to compromise
    the decision making process of the secondary network via Byzantine attacks. We
    implement this attack in our cognitive radio testbed to show its feasibility and
    attack impact. We further analyze the optimal attack strategy from the perspective
    of the malicious attacker, i.e., the optimal allocation of Sybil interfaces for
    different attacks, to maximize the impact on the secondary network. The attack
    models are analyzed under two different scenarios: with and without a reputation
    system in the network fusion center. Numerical analysis and simulations are conducted
    to solve the optimal attack strategy and demonstrate the impact of attacks on
    the secondary network. Published in: 2011 IEEE Global Telecommunications Conference
    - GLOBECOM 2011 Date of Conference: 05-09 December 2011 Date Added to IEEE Xplore:
    19 January 2012 ISBN Information: ISSN Information: DOI: 10.1109/GLOCOM.2011.6134059
    Publisher: IEEE Conference Location: Houston, TX, USA SECTION I. Introduction
    Dynamic spectrum access (DSA) provisions are being made to allow unlicensed secondary
    users to opportunistically transmit in unused licensed bands. The success of this
    policy depends on the ability of secondary users to dynamically identify and access
    unused spectrum bands, detect the return of the primary user (PU) and evacuate
    promptly upon sensing the PU. Cognitive radios (CRs) that can intelligently adjust
    transmission/reception parameters based on interaction with the environment [1],
    are anticipated to make the DSA a reality. Providing security supports for DSA
    networks is challenging due to the lack of comprehensive security protocols for
    DSA [2]. Particularly, due to the open paradigm, interop-erability and dynamic
    nature of CR devices, authenticating individual CR nodes is extremely difficult.
    Hence, DSA networks are highly susceptible to identity spoofing threats such as
    the Sybil attack. In the Sybil attack, one physical malicious attacker (MA) is
    able to create multiple identities and behaves as multiple distinct nodes (Sybil
    nodes) in the system [3]. The MA can generate multiple Sybil identities (SIs)
    via MAC address spoofing [4], which is difficult to identify in both distributed
    and centralized DSA networks. In this paper, we investigate the vulnerability
    of DSA networks through the implementation and study of a novel Sybil-enabled
    DoS attack. Here, the MA is capable of creating multiple SIs to achieve different
    classes of attacks on the secondary network (SN). More concretely, the MA uses
    several SIs pretending to be the normal CR secondary nodes to launch Byzantine
    attacks [5], and at the same time, launches primary user emulation (PUE) attacks
    [6], [7] in multiple candidate channels to prevent the SN from transmitting there.
    To show the practicality of the attack, we implement it in our CR testbed, SpiderRadio
    [8]. Moreover, we analyze the optimal attack strategy of the MA, i.e., the allocation
    of Sybil interfaces for different attacks, in order to maximize the attack impact
    under two scenarios, with and without a reputation mechanism built in the SN.
    We derive the false alarm probability and expected switching cost for the SN in
    these two scenarios respectively. Through numerical analysis and simulations,
    we present the optimal attack strategies for the MA and demonstrate how the impact
    of the attack changes in different network circumstances. The rest of the paper
    is organized as follows. Section II describes the Sybil-enabled attack model and
    demonstrates the implementation. In Section III, we derive the optimal attack
    strategies for the MA to cause maximum expected cost on the SN. Section IV shows
    the numerical and simulation results and conclusions are drawn in the last section.
    SECTION II. The Sybil-enabled Pue Attack A. System Model We consider one typical
    SN consisting of multiple good CR nodes. Every node performs spectrum sensing
    periodically and reports the result to the fusion center that makes the final
    decision on whether a given spectrum channel is available for use or not [9].
    We also consider that there are a number of candidate spectrum channels the SN
    can use. We consider one MA that is capable of generating multiple SIs for different
    classes of attacks. Note that, since all CR devices can monitor open spectrum
    channels, we assume that the MA can also have the information of candidate channels.
    In this attack, the MA aims to prevent the SN from using these spectrum channels
    and creates two classes of attack interfaces: Sybil saboteur (SybS): The MA will
    use these identities to launch Byzantine attacks, i.e., pretending to be good
    secondary devices to infiltrate the SN and send false sensing reports to the fusion
    center to spuriously claim primary transmission in case of PUE attacks. The goal
    of these saboteur identities is to influence the decision making process of the
    SN. Sybil attacker (SybA): The MA will use these identities to launch PUE attacks
    in the candidate channels to prevent the SN from communicating in these channels.
    Fig. 1. The Sybil-enabled DoS attack system model Show All Fig. 1 shows an example
    of the attack model where SybS and SybA perform different attacks both inside
    the SN and on candidate channels. By launching the Sybil-enabled attack, the MA
    can effectively make the SN erroneously think that the PU is active in the current
    channel as well as in other candidate channels. This may cause the SN to switch
    frequently and abruptly to find available spectrum channels, and in the worst
    case even terminate the opportunistic spectrum access operations because of the
    unavailability of candidate channels. B. Feasibility Demonstration For illustrative
    purposes, we consider a pair of transmitter and receiver of secondary users and
    an attacker in the experiment. We use Soekris Net-5501 board as the secondary
    user running Linux 2.6 operating system. The wireless network interface cards
    (WNICs) for the board are equipped with Atheros chipset with Madwifi device driver.
    The SUs adopt energy based spectrum sensing to detect the primary signal. We use
    a USRP2 board with XCVR2450 daughter-board3.as the MA which transmits an OFDM
    modulated 25MHz bandwidth signal. The distance between the MA and SUs is set to
    be 5–20 meters. We use Wi-Spy DBX adapter to monitor and display the transmitted
    signals. Moreover, we choose three non-overlapping standard 802.11 spectrum channels
    as candidate channels, i.e., Channel 1, 6 and 11 with center frequencies at 2.412GHz,
    2.437GHz and 2.462GHz respectively and the bandwidth of 20MHz. The transmitted
    signals are shown in Fig. 2, where the horizontal axis represents the frequency
    and the vertical axis represents time. To start with, we implement the “traditional”
    PUE attack where the MA only attacks one spectrum channel where the secondary
    transmissions are on-going. As shown in Part (i) in Fig. 2(a), the secondary transmitter
    begins to transmit in Channel l. Then, the MA generates a PUE attack signal in
    Channel l, as shown in Part (ii) in the figure. Both secondary transmitter and
    receiver then detect the signal and vacate from the current channel. However,
    they can bypass the attack through switching to another clear spectrum channel,
    i.e., Channel 6, to continue their communications, as shown in Part (iii) in Fig.
    2(a). Fig. 2. The performance of CR devices under (a) traditional PUE attack and
    (b) proposed Sybil-enabled PUE attack. In (a), Part (i): initial secondary transmission
    signal in Channel l; Part (ii): attack signal in Channel l; Part (iii): subsequent
    secondary transmission signal in Channel 6. In (b), Part (i): initial secondary
    transmission signal in Channel l; Part (ii), (iii) and (iv) represent the attack
    signals in Channel l, 6 and 11. Show All Next, we implement the Sybil-enabled
    attack where the MA attacks multiple candidate channels simultaneously. Three
    interfaces with distinct MAC addresses and service set identifiers (SSIDs) are
    generated, compatible with Channel l, 6 and 11 respectively. We also modify the
    USRP2 library code of the GNU Radio [10] to make the attacking device switch among
    three channels via time division (TD) mechanism. More specifically, the MA generates
    an attack signal in every channel for 250ms with one interface and then quickly
    switches to another channel with approximately 200μs delay using a different interface.
    As illustrated in Fig. 2(b), Parts (ii), (iii) and (iv) represent the signal spectra
    of all three channels generated by the MA using three identities. In our example
    shown in Part (i) of Fig. 2(b), the secondary users are unable to find a clear
    spectrum channel to use and thus, have to shut down the communication. Meanwhile,
    the MA also generates SybS interfaces to launch Byzantine attacks by sending beacons
    containing false reports to secondary users to compromise the spectrum sensing.
    For implementation, we use FTW IEEE 802.11a/g/b OFDM Frame Encoder and GNU Radio
    to generate 802.11g beacon frames with different MAC addresses and SSIDs. The
    details of generating procedures are described in [4]. Although the experiment
    is conducted using Wi-Fi bands (solely for the purpose of developing and testing
    our prototype without the complexity of buying and managing several licensed spectrum
    bands), the concept is not just limited to Wi-Fi radios. The proposed techniques
    are equally applicable to any CR radios in any type of bands. From the experimental
    results, it is clear that by launching the Sybil-enabled attack, the MA can cause
    more severe damage, even completely break down the DSA. In the next section, we
    look into the analysis of attack strategies. SECTION III. Analysis of Optimal
    Attack Strategy We consider n physical CR nodes in a SN and M candidate channels.
    We also assume that the resource constraint on the MA allows it to generate at
    most L SIs for different attacks. The tradeoff for the MA is that if it uses more
    SIs to launch Byzantine attacks, the number of identities for PUE attacks will
    be fewer, and vice versa. Hence, it is important for the MA to derive the optimal
    attack strategy to allocate SIs for each attack to maximize the overall attack
    impact. We assume L<M , which indicates that the MA is not powerful enough to
    attack all candidate spectrum channels simultaneously. Let l s represent the number
    of SybS identities used for Byzantine attacks and L− l s be the number of SybA
    identities used for PUE attacks. The MA''s attack plan is described as follows:
    use l s SybS identities to launch Byzantine attacks to compromise the decision
    making process, use one SybA identity to launch PUE attack in the channel in which
    the SN is currently communicating, and the rest, L− l s −1 , SybA identities to
    attack L− l s −1 out of M−1 candidate channels via PUE attacks. We define false
    alarm as the event that the SN thinks that the PU has returned, where as in reality
    a PUE attack is in progress. Thus, the objective of the attack is to cause false
    alarms. We assume that all good nodes perform spectrum sensing independently and
    send their individual results to the fusion center. Note that the Sybil nodes
    can also register multiple identities, which cannot be simply identified. Also,
    the fusion center only handles decision making and has no authentication functionality
    to identify Sybil nodes. Let q be the individual false alarm probability for the
    good node, we study the problem under two situations: (a) the fusion center does
    not incorporate a reputation mechanism and (b) the fusion center applies a reputation
    mechanism. A. SN without a Reputation Mechanism In this case without a reputation
    mechanism in the SN, the fusion center treats all nodes equally regardless of
    the correctness of their sensing reports in the past. As an instance, we use the
    majority rule in decision making: if more than half of the individual decisions
    say that there is a PU, then the final decision declares that the PU is active.
    Note that this model also applies for other decision making rules, e.g., OR rule
    and AND rule [9]. Hence, if ⌈ n+ l s 2 ⌉ or more local sensing reports say that
    the PU is present, the fusion center will conclude so and all nodes have to switch
    out. In this case, since there is no memory in the system, the MA makes all l
    s SybS identities report false results to maximize the false alarm probability
    for the entire SN. Thus, according to the majority rule, if ⌈ n+ l s 2 ⌉− l s
    or more good nodes report false alarm, the fusion center will wrongly conclude
    the PU is active. Hence, the false alarm probability for the entire SN, P f ,
    can be calculated as: P f = ∑ i=0 ⌊ n+ l s 2 ⌋ ( n ⌊ n+ l s 2 ⌋− l s +i ) q ⌊
    n+ l s 2 ⌋− l s +i (1−q ) ⌊ n+ l s 2 ⌋ (1) View Source where ⌊ n+ l s 2 ⌋=n+ l
    s −⌈ n+ l s 2 ⌉ . Once the false alarm occurs, the SN has to vacate from the current
    channel. Therefore, the switching probability for the SN is equal to P f . For
    simplicity, we assume that the SN will randomly choose one of the other candidate
    channels when it switches. However, some of these candidate channels are still
    under attack by the MA using SybA identities. Hence, there will be two outcomes
    for the SN in this case: it switches to the spectrum channel under attack; it
    switches to clear channel where no attack is in progress. If (i) happens, the
    SN may continue to switch because the false alarm happens again due to the PUE
    attack. On the other hand, if (ii) happens, the SN will stay in that channel to
    communicate. Every time the SN chooses to switch, it will face one of the two
    situations. Thus, we can calculate the probability for the number of switches
    for the SN as follows: Probability of switching once: p(1)= P f ⋅ M−L+ l s M−1
    , (2) View Source where M−L+ l s M−1 is the probability for the SN to switch to
    a clear spectrum channel. Note that the SN will never switch back to the channel
    it vacated because it has already detected some energy there. Thus, we have: Probability
    of switching twice: p(2) = P f ⋅ L− l s −1 M−1 ⋅ P f ⋅ M−L+ l s M−2 = P 2 f ⋅
    (L− l s −1)(M−L+ l s ) (M−1)(M−2) . (3) View Source Probability of switching three
    times: p(3) = P f ⋅ L− l s −1 M−1 ⋅ P f ⋅ L− l s −2 M−2 P f ⋅ M−L+ l s M−3 = P
    3 f ⋅ (L− l s −1)(L− l s −2)(M−L+ l s ) (M−1)(M−2)(M−3) . (4) View Source It can
    be shown that the probability of switching k times is given by: p(k)= P k f ⋅
    ∏ k−1 j=1 (L− l s −j)(M−L+ l s ) ∏ k j=1 (M−j) , 1≤k≤L− l s . (5) View Source
    In practice, there exists an overhead associated with switching for the SN. Let
    c represent the cost incurred per switch for the SN. The expected switching cost,
    E(c), for the SN is calculated as: E(c)=c⋅ ∑ k=1 L− l s k⋅p(k). (6) View Source
    To maximize the expected cost of the SN, the optimal attack strategy for the MA,
    l ∗ s , is derived as: l ∗ s =arg max l s ∈[0,L−1] E(c). (7) View Source B. SN
    with a Reputation Mechanism In this case, the fusion center uses a reputation
    mechanism that weighs the decisions from each node. It is possible for the fusion
    center to judge the correctness of reports for each node in the past based on
    non-real time data obtained from some policy nodes which will periodically monitor
    spectrum activity across spectrum channels. Let r i be the reputation factor for
    node i , which is set to be 1 at the beginning and updated according to the following
    relations: r i ={ r i +d, r i ,  sensing report is correct  sensing report is
    wrong (8) View Source where d is the pre-determined quantum of increase in reputation
    for each correct report. To incorporate the reputation factor of each node into
    the decision making process, we associate a weight, w i , for node i , which is
    calculated by normalizing its reputation value as: w i = r i ∑ j r j . Obviously,
    ∑ i w i =1 . It is clear that the weight for a node will increase with each correct
    and decrease with each incorrect sensing result. A weighted majority rule is used
    for the fusion center in the decision making process: if the sum of weights of
    individual nodes declaring PU activity is equal or greater than 0.5, then the
    fusion center declares that the PU is active. To avoid low reputation scores in
    this case, the SybS nodes may occasionally report true results. Let the probability
    that they report true results be α . Also, we denote F to be the set of good nodes
    who make errors due to the PUE attack and S to be the set for SybS nodes who report
    false results. Thus, the false alarm probability for the entire SN, P ′ f , in
    this case is derived as: P ′ f =Pr( ∑ i∈F w i + ∑ j∈S w j ≥0.5). (9) View Source
    Note, since the reputation value and weight for each node are updated, the false
    alarm probability calculated from Equation (9) is also dynamically changing in
    every sensing period. Based on Equation (5), we derive the probability of switching
    k times for the SN in this case as: p ′ (k)= ∏ i=1 k P ′ f (i)⋅ ∏ k−1 j=1 (L−
    l s −j)(M−L+ l s ) ∏ k j=1 (M−j) , 1≤k≤L− l s , (10) View Source where P ′ f (i)
    represents the false alarm probability for the entire SN in i th sensing period
    and P ′ f (1) ≠  P ′ f (2)≠ ⋯ ≠ P ′ f (k) . Following the same logic as the previous
    case, we derive the expected cost for the SN and the optimal attack strategy for
    the MA in this case as: E ′ (c)=c⋅ ∑ k=1 L− l s k⋅ p ′ (k). l ′∗ s =arg max l
    s ∈[0,L−1] E ′ (c). (11) (12) View Source SECTION IV. Numerical and Simulation
    Results In this section, we conduct numerical analysis and simulations to demonstrate
    the attack impact and optimal attack strategies for the MA under different network
    circumstances. We set L=30, M=35, c=10 and vary number of good nodes, n and the
    individual false alarm, q . A. Without Reputation Mechanism In this case, we can
    obtain the optimal l ∗ s from Equation (7) numerically. Fig. 3 shows the expected
    cost for the SN with respect to varying numbers of SybS, l s , and different values
    of q . As illustrated, there is a maximum in each case, corresponding to a unique
    optimal number of SybS identities, l ∗ s , for the MA. Another important insight
    is that as q increases, the expected cost for the SN also increases. This is because,
    if the individual false alarm is large, the MA can use fewer SybS to compromise
    spectrum sensing and generate more SybA identities to attack more candidate channels.
    Fig. 3. The expected cost for the SN with respect to varying number of SybS identities
    and different individual probabilities of false alarm: (a) q=0.35 ; (b) q=0.4
    ; (c) q=0.45 ; (d) q=0.5 . Note that n=35 . Show All Fig. 4 shows the expected
    cost with respect to the number of SybS for different number of good nodes in
    the SN with a certain value of q . It is observed that the expected cost for the
    SN increases with the decrease in the number of good nodes. This is because the
    MA can save some SybS with fewer good nodes and convert them to SybA to attack
    more candidate channels, thereby forcing more switching actions for the SN. B.
    With Reputation Mechanism In this scenario, since reputation values are dynamically
    updated, we track the weight for each node. Fig. 5 presents the comparison of
    the attack impact on the SN between the cases with and without the reputation
    system. It is observed that incorporating the reputation updating mechanism can
    significantly decrease the expected cost for the SN. Moveover, with the increase
    in the quantum d , the expected cost for the SN decreases. This is because the
    greater quantum indicates more emphasis on the correctness of sensing reports
    for every individual node, thereby reducing the weights of SybS identities that
    frequently send false reports. Fig. 4. The expected cost for the SN with respect
    to different numbers of physical nodes in the network, n(q=0.35) . Show All Fig.
    5. Comparison of expected cost for the SN with and without reputation mechanism
    (q=0.45, n=35, α=0) . Show All Fig. 6. The expected cost for the SN with different
    values of α and quantum of increase. (a) d=1 ; (b) d=2 ; (c) d=3 ( q=0.45 and
    n=35 ). Show All To investigate the effect of the reputation updating process,
    we change the probability, α , for SybS nodes in simulations. Fig. 6 shows how
    the expected cost for the SN changes with different values of α and d respectively.
    From Fig. 6(a) and (b), we can see that the MA achieves the maximum attack impact
    by making SybS nodes send false report always, i.e., α=0 . However, as the quantum
    of increase, d , increases from 1 to 2, the distances between cases when α=0 and
    α≠0 get smaller. Furthermore, in Fig. 6(c) when d=3 , the expected cost for the
    SN with α=0.1 becomes the greatest, which indicates that the MA cannot always
    maximize the impact with α=0 . The is because: for relatively small quantum, the
    weights for SybS nodes do not drop fast enough, the MA can set α=0 to increase
    the false alarm probability, P ′ f (Equation (9)). However, when the quantum increases,
    the weights for SybS nodes degrade drastically. Under this situation, maximizing
    |S| may not result in the largest P ′ f because of the quick decrease in w j ,j∈S
    . This observation implies that with a reputation mechanism, reporting only false
    results indefinitely, will result in a point of no returns for the MA. Hence,
    it is important for the MA to consider the tradeoff between maximizing cardinality
    |S| and slowing down the decreasing rate in weights and properly adjust the value
    of α based on specific circumstances. SECTION V. Conclusions In this paper, we
    studied a new Sybil-enabled DoS attack in DSA networks, in which the MA is capable
    of creating multiple SIs for different attack purposes. To prove the feasibility
    of this attack, we implemented this attack in the CR testbed. We also analytically
    derived the optimal attack strategies in two scenarios, with and without a reputation
    mechanism. The numerical analysis and simulations were conducted to demonstrate
    the optimal attack strategy for the MA as well as the attack impact. ACKNOWLEDGEMENT
    This work is partially supported by NSF Trustworthy Computing 0917008, NIJ 2009–92667-NJ-IJ
    and PSC-CUNY Award# 64738–00 42. Authors Figures References Citations Keywords
    Metrics Footnotes More Like This P2PCompute: A Peer-to-peer computing system 2007
    International Symposium on Collaborative Technologies and Systems Published: 2007
    Ad hoc Grid: An Adaptive and Self-Organizing Peer-to-Peer Computing Grid 2010
    10th IEEE International Conference on Computer and Information Technology Published:
    2010 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2011
  relevance_score1: 0
  relevance_score2: 0
  title: Using Sybil Identities for Primary User Emulation and Byzantine Attacks in
    DSA Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/iwcmc.2014.6906349
  analysis: '>'
  authors:
  - Anna Wiśniewska
  - Bilal Khan
  citation_count: 11
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >2014 International Wireless C...
    Contention-sensing and dynamic spectrum co-use in secondary user Cognitive Radio
    societies Publisher: IEEE Cite This PDF Anna Wisniewska; Bilal Khan All Authors
    12 Cites in Papers 171 Full Text Views Abstract Document Sections I. Introduction
    II. Mathematical Model III. Previous Approaches IV. The Forage-Consume Model V.
    Evaluating the FC Model Show Full Outline Authors Figures References Citations
    Keywords Metrics Abstract: Emerging standards in Cognitive Radio seek to alleviate
    the problem of spectrum scarcity by leveraging spectrum under-utilization through
    dynamic spectrum access (DSA). Unlicensed users (“secondary”) may opportunistically
    make use of channels during times when the licensed (“primary”) user is absent.
    The “open access” paradigm proposed by FCC mandates the study of primary-secondary
    dynamics, as well as secondary-secondary dynamics to better understand the implications
    of uncoordinated competition for limited number of resources between secondary
    users. In this paper, we consider long term etiquette between secondary users
    engaged in spectrum co-use. In order to maximize throughput, by avoiding over-crowded
    channels, we propose a novel approach wherein secondary users have the ability
    to “sense” very approximate contention levels at a single spectrum band at each
    point in time. System performance under the contention-sensing paradigm is compared
    to two schemes: first, a previously defined non-cooperative game model; second,
    a new model which allows for spectrum foraging, but without providing secondary
    users the ability to sense contention in a band. Through simulation experiments,
    we show that the contention-sensing paradigm results in significantly better co-use
    of spectrum resources. Additionally, our experiments demonstrate that the proposed
    contention-sensing paradigm continues to outperform when the ratio of secondary
    users to spectrum bands is increased. Thus, the new schemes described here may
    be of critical importance in a future where we expect the number of secondary
    users to grow exponentially and thus require a scalable mechanism for opportunistic
    scavenging of unused spectrum. Published in: 2014 International Wireless Communications
    and Mobile Computing Conference (IWCMC) Date of Conference: 04-08 August 2014
    Date Added to IEEE Xplore: 25 September 2014 ISBN Information: ISSN Information:
    DOI: 10.1109/IWCMC.2014.6906349 Publisher: IEEE Conference Location: Nicosia,
    Cyprus SECTION I. Introduction Cognitive Radio [4] has emerged as a promising
    technology for dynamic spectrum access (DSA) networks. The significant increase
    in wireless service demands has resulted in spectrum scarcity [11], and yet although
    few segments of spectrum remain for new services, the licensed spectrum appears
    to be underutilized. Specifically, the Federal Communication Commission (FCC)
    reports that licensed, or “primary”, users are leaving their bands idle for a
    significant fraction of time [6]. During periods when a band is unused by its
    primary user (PU) - referred to as a “spectrum hole” [2]- the band may be legally
    used in an opportunistic manner by one or more unlicensed “secondary” users (SU),
    provided the SUs relinquish the band when the PU returns. Because FCC regulations
    mandate that secondary users not interfere with primary user transmission, most
    prior research has focused on the interaction of primary users with secondary
    users. Since there are multiple secondary users, each secondary user decision
    to transmit in a band potentially impacts other secondary users, since channel
    bandwidth degrades as greater numbers of SUs share a channel. Relatively few researchers
    have looked at the implications and issues surrounding SU-SU interactions [9],
    [7], [17]. In [10] Tan et. al. consider secondary coexistence in 802.22 networks
    as a non-cooperative mixed-strategy game; in [9], they consider minority game
    variations. Evolutionary game theoretic formulations of spectrum sharing have
    also been recently considered [7]. Indeed, non-cooperative game theory has been
    used extensively in prior work, to model the competition between secondary users
    over a limited amount of resources [8], [9]. Unfortunately (see Xu et. al [13]
    and others), a frequent limitation of these approaches is that the game is repeatedly
    played for just one step. In contrast, here we advance the performance of non-cooperative
    mixed-strategy approaches [10] when applied to dense CR societies of secondary
    users that play the game continuously over long time intervals. Achieving this
    requires the development of new behavioral models of SU spectrum co-use etiquette,
    outlined below, and subsequently analyzed in Sections II, IV, and VI, below. To
    capture the transmission state of primary users, a two state Markov Chain with
    on and off states has often been used [12]. We use a similar Markov Chain approach
    in this work to represent the historical trajectory of a secondary user across
    spectrum bands. In our model SUs can either be transmitting in a spectrum band
    (i.e. in the consume state) or seeking a spectrum band with less contention (i.e.
    in the forage state). When an SU is transmitting, it receives a utility mitigated
    by channel interference due to the contention with other SUs also opportunistically
    using the same band. Every time an SU switches bands, transmitter reconfiguration
    necessitates an associated cost. We show that allowing secondary users to forage
    for spectrum (even without precise sensing of contention levels), yields significantly
    better utilization of spectrum resources. Then, we extend our model by allowing
    SUs to sense contention levels in a spectrum band prior to making independent
    decentralized decisions on transmission frequency. The model which incorporates
    this augmented set of SU capabilities is shown to exhibit dramatic improvement
    in the mean SU utility achieved over time. Applications The use-case for our investigation
    is the LTE deployments of radio spectrum at picocell (200 m) through microcell
    (2 km) scales [15]. The communication architecture considered is one in which
    SUs seek to transmit opportunistically via a base station controller. While most
    prior work on SU-SU dynamics considers relatively low ratios of SUs to bands (upto
    6:1), in anticipation of future device-rich environments, we present means for
    efficient spectrum co-use in scenarios where the ratio is much higher (upto 40:1).
    For simplicity, pairwise communication between SUs is assumed uniformly random,
    and since SUs communicate through a base station that operates a software defined
    radio across multiple frequencies simultaneously, coordinating channel selection
    between pairs of communicating SUs is not required. This article is organized
    as follows: In Section II we present the mathematical model. In Section III, we
    describe the model of SU behavior put forth by Tan et. al [10], which is the starting
    point of this work. Section IV, presents a novel model of foraging/consuming SUs,
    its benefits shown in Section V. Then, in Section VI, contention-sensing capabilities
    are added, and evaluated in Section VII. In most of the paper, simulations use
    settings identical to Tan et. al [10] to facilitate comparison. In Section VIII,
    we lift this restriction and consider the performance of our approach across a
    wide range of settings. SECTION II. Mathematical Model We consider a discrete
    time stochastic system of n secondary users S={ s 1 , s 2 ,…, s n } and m orthogonal
    spectrum bands B={ b 1 , b 2 ,…, b m } . At each discrete time step t , each s∈S
    commits to precisely one of the m spectrum bands α t (s)∈B , implicitly defining
    an infinite family of maps α t :S→B , indexed by discrete time, which assign SUs
    to bands. By choosing band α t (s) , the secondary user s enjoys a communication
    rate or “reward” at time t of R(k) = def B⋅lo g 2 (1+ G s P s ∑ k i=1 G i P i
    +ω ) (1) View Source where k = def |{ s ′ ∈S| α t ( s ′ )= α t (s)}| is the number
    of SUs sharing the band with s. This definition of reward (1) is drawn from information
    theoretic considerations, and is consistent with a significant body of prior work
    on spectrum sharing [5]. In expression (1), the transmission power for SU s (resp.
    i ) are denoted P s (resp. P i ); B is the channel bandwidth; G s represents the
    channel gain for the transmissions by s , and ω is the power level of the ambient
    white Gaussian noise. Assumptions To isolate the impact of the proposed paradigm,
    we do not consider path losses, we assume a homogeneous network wherein all SUs
    send (to the base station) at the same power P and experience the same channel
    gain G . System-wide performance metrics are defined as the total reward obtained
    by all SUs at time t : W t = def ∑ i=1 m k t ( b i )R( k t ( b i )) (2) View Source
    where k t ( b i ) = def | α −1 t ( b i )| is the occupancy in band b i at time
    t . Following previous research [1], [3], we assume a fixed cost c is incurred
    by an SU switching transmission bands. We denote the set of SUs that switched
    transmission band at t⩾2 as M t = def {s∈S| α t (s)≠ α t−1 (s)}, (3) View Source
    so the total switching cost incurred is C t = def c| M t | , from which we deduce
    that the average instantaneous utility (per SU) obtained at time step t is I t
    = def 1 n ( W t − C t ). (4) View Source The average utility (per SU per unit
    time) up to time T is U T = def 1 T ∑ t=1 T I t . (5) View Source In what follows,
    we consider various novel parametrized models of secondary user etiquette; we
    will use the above defined U T to (experimentally) determine optimal parameter
    settings, as well as to evaluate relative merits of the proposed models as schemes
    for SU spectrum co-use. SECTION III. Previous Approaches Our work takes as a point
    of departure the model of secondary-secondary dynamics developed by Tan, Sengupta,
    and Subbalakshmi [10]. In what follows, we will refer to this as the “TSS” model,
    a natural formulation of SU strategy in response to PU departure, within the framing
    context of SU-SU dynamics. A distributed DSA network is assumed where multiple
    homogeneous SUs can share the same spectrum band. In addition, it is assumed that
    all SUs are in the same range considering the same bands. In the model, at time
    1, all secondary users s∈S start in the same spectrum band α 1 (s)= b 1 . Tan
    et. al. then consider the situation where at time t=2 , the primary users of bands
    b 2 through b m all simultaneously stop transmitting, leaving these m−1 bands
    free to be used by secondary users S , who are assumed to be playing a mixed strategy
    game. At time step 2, each SU chooses with probability p to switch to a different
    spectrum band b i ≠ b 1 (chosen at random), or with probability (1−p) decides
    to stay in band b 1 . Once each SU has made its stochastic choice, the utility
    U 2 can be computed, as defined in (5). Of particular interest is the strategically
    optimal p ∗ that maximizes the expected utility for the SUs at time t=2 : p ∗
    = argmax p∈[0,1] (E[ U TSS 2 ]). (6) View Source We know by elementary probability
    that p ∗ ∼ 1 m =0.20 . Tan et. al. go on to explore the impact of “parochialism”
    local deviation from the homogeneous adoption of game-theoretically optimal strategies.
    In their simulation experiments, they consider concrete scenarios in which n=30
    SUs compete over m=5 spectrum bands, each having bandwidth B=20MHz . The transmission
    power P=4W , Gaussian noise ω=0.05W and switching cost c=0.3⋅B . The channel gain
    was obtained through simulation of a 10 transmitter and 10 receiver wireless system.
    Although we will not be considering parochialism or non-cooperative games here,
    our experiments will use the parameter settings of Tan et. al. [10] above to facilitate
    comparison with TSS and elucidate trade offs. Later, in Section VIII, we will
    evaluate the universality of the conclusions drawn in earlier sections, by varying
    the number of secondary users n , channel bandwidth B , and the cost of switching
    transmission bands c over a broad range of settings. Fig. 1. Finite state machine
    Show All SECTION IV. The Forage-Consume Model In our forage-consume (FC) model,
    each SU operates via the probabilistic finite state machine (FSM) shown in Figure
    1; this FSM has two states Q={ q c , q f } and one state variable, the band of
    interest (BoI). In state q c (called “consume”), the SU has committed to transmitting
    in its BoI, which is one of the m spectrum bands b∈B . By doing so, it receives
    a reward R(k) as defined in (1). In state q f (called “forage”), an SU is merely
    “observing” some BoI b∈B as a precursor to making a commitment consume (by moving
    to the consume state q c ). An SU receives a reward of 0 while in state q f since
    s is not able to transmit. Each SU''s decision to move from state q to state q
    ′ is governed by an independent Markov process with the transition matrix P q
    q ′ where q, q ′ ∈Q and ∑ q ′ P q q ′ =1 . To keep track of instantaneous state,
    in addition to the function α t : S→B described in Section II, we introduce time
    indexed functions γ t :S→{ q f , q c } (7) View Source where γ t (s) indicates
    the state of SU s at time t . We can now describe precisely the choices that each
    SU s faces at time t . Note that because we assume the secondary users are following
    a homogeneous strategy, the same logic applies to all SUs. If γ t (s)= q c and
    α t (s)= b i , then s makes one of the following two choices at time (t+1) : C
    0 : With probability P cc ,s can stay in q c , using band b i , i.e. γ t+1 (s)=
    γ t (s) and α t+1 (s)= α t (s) . C x : With probability P cf ,s moves to q f ,
    i.e. γ t+1 (s)= q f and α t+1 (s)= b j  (j≠i) chosen uniformly from B . If γ t
    (s)= q f and α t (s)= b i , then s makes one of the following two choices at time
    (t+1) : F 0 : With probability P ff ,s stays in q f , i.e. γ t+1 (s)= γ t (s)
    and α t+1 (s)= b j (j≠i) chosen uniformly from B . F x : With probability P fc
    ,s commits to band b i by moving to q c , i.e. γ t+1 (s)= q c and α t+1 (s)= b
    i . At each time step t an s is associated with some band b , i.e. α t (s)=b ,
    regardless of its state γ t (s)∈Q . However, since the reward R(k) is only obtained
    when s is in the consume state q c , we must revise the utility function U T by
    modifying k t to only include SUs in the consume state q c k ′ t (i)=| α −1 t
    (i)∩ γ −1 t ( q c )| . The reward at t for all SU is W ′ t = ∑ i=1 m k ′ t (i)R(
    k ′ t (i)). (8) View Source When an SU switches transmission bands on entering
    (or re-entering) q c , transmitter reconfiguration is required. We assume this
    to be an expensive operation compared to the receiver reconfigurations required
    upon entering (or re-entering) q f . To capture this, our model charges each SU
    a fixed cost c whenever it switches transmission bands by moving from the forage
    state q f to the consume state q c . Function M t captures the number of SUs charged
    for switching at time t M ′ t ={s∈S∣ γ t−1 (s)= q f ∧ γ t (s)= q c } (9) View
    Source so the switching cost of the system at time t is C ′ t =c| M ′ t | and
    the instantaneous average utility (per SU) at time t is I ′ t = 1 n ( W ′ t −
    C ′ t ) (10) View Source and the average utility (per SU per unit time) up to
    time T is U ′ T = 1 T ∑ t=1 T I ′ t . (11) View Source Note that even though the
    SUs that are in the forage state are excluded from W ′ , the utility function
    implicitly incorporates a zero reward for each SU in the forage state since in
    (10), the quantity ( W ′ − C ′ ) is divided by n , the total number of SUs in
    the system. Interpreting TSS Within FC It is easy to see that setting P fc =1
    in the FC model yields behavior that is equivalent to the TSS model. When P fc
    =1 , SUs pass through the forage state but are not able to remain there, and are
    thus effectively forced to immediately switch and commit to a new randomly chosen
    band, as is the case in the TSS model. We will refer to this formal rendering
    of the TSS model as a special case of the FC model, as TSS*. Experimental Evaluation
    of Tss* We ran 10 simulations with T= 10 5 . To facilitate comparison, we use
    the original parameters used by Tan et. al. [10], presented also here at the end
    of Section III, for the reward function R(k) , the number of SU n , the number
    of bands m , and the probability P cf = p ∗ =0.20 as presented in (6). We observed
    the average utility (per SU per unit time) in TSS* to be U ′ T =6.58 . This number
    is the baseline against which we evaluate the performance of our new approaches,
    below. Fig. 2. Average utility as a function of probability to transition to consume.
    Show All Fig. 3. Frequency of channel occupancy level Show All SECTION V. Evaluating
    the FC Model In this section we lift the restriction P fc =1 (which renders the
    TSS model as a degenerate case of the FC model), and allow ourselves to consider
    the entire range of possibilities 0⩽ P fc ⩽1 . In order to have a controlled experiment,
    we fix the same parameters settings as in Section III for the reward function
    R(k) , the number of SUs n , the number of bands m , simulation time T , and probability
    P cf . Then, through simulation, we find optimal P fc ∈[0,1] that maximizes U
    ′ T : P fc = argmax p∈[0,1] (E[ U ′ T (FC)]). (12) View Source Figure 2 presents
    the intermediate results of this optimization process, by showing how U ′ T varies
    for different choices of P fc . We see immediately that the utility is not maximized
    at P fc =1 , but rather when P fc =0.12 . At this setting the utility U T ′ (FC)
    reaches its peak at 7.66, a 16% increase over the 6.58 achieved by TSS* (where
    P fc =1 ). Table I A comparison of tss*, FC and FC+S Table I compares various
    metrics of TSS*and FC. To understand the difference in utility U ′ achieved in
    TSS* and FC we first consider U c , the utility that each SU receives (on average)
    when in the consume state q c . We can see that in TSS*, utility U c =7.9 while
    in FC, utility U c =21.3 , an increase of 270%. Also from Table I, we observe
    that in TSS*(where P fc =1 ) an SU spends 83% of the time in q c , while in FC
    (where P fc =0.12 ) it spends only 36% of its time consuming. The lower “duty
    cycle” of FC ensures that SUs obtain higher utility when consuming, and take turns
    (stochastically) transmitting data. Thus, the notable difference in utility between
    TSS* and FC rests upon the steep falloff in the utility curve R(k) as k≫0 . Since
    SUs stay in the forage state 17% of the time in TSS* but 64% of the time in FC,
    there is less contention among consumers in the latter model. This is confirmed
    in the histogram depicted in Figure 3, which shows the fraction of time that an
    SU experiences contention between 0 − 10 other SUs in each of the two schemes,
    TSS*and FC; note that the histogram does not include the time spent in forage.
    The histogram is skewed to the left for FC (mean 1.8) relative to TSS* (mean 4.8),
    confirming that in the FC model, each SU experiences less contention while consuming
    resources. SECTION VI. Adding Sensing Capabilities FC+s In the FC model of the
    previous section, each SU is said to “observe” a random sequence of bands while
    it is in the forage state q f , but the model renders the SU powerless to acquire
    any useful information about the current transmission characteristics of the band.
    Here we extend the FC model to support contention-sensing; that is, we allow each
    SU s while both foraging ( γ t (s)= q f ) and consuming ( γ t (s)= q c ) some
    band of interest α t (s) , to additionally “sense” the approximate number of SUs
    consuming the band. Rather than requiring exact measurement, we simply permit
    the SU to make a 1-bit measurement-that is, to determine whether the band has
    “low” occupancy: ( k t ′ ( α t (s))⩽τ) , or “high” occupancy: ( k t ′ ( α t (s))>τ)
    for a fixed system-wide integer contention threshold parameter τ . This knowledge
    can be obtained in distributed manner or through a centralized entity. There are
    a number of existing strategies to implement this sensing capability [7], [14],
    [16], [17], beyond the scope of this paper. Contention-sensing capabilities described
    above augment the forage-consume (FC) model by modifying the transition probabilities
    in the FSM of Figure 1. This augmented model is referred to as FC+S to indicate
    the inclusion of contention-sensing. FSM probabilities are altered as follows.
    When an SU is in state q c and consuming band α t (s)=b : C − x : The probability
    of moving from q c to q f is lowered to ( P cf −ϵ) if the occupancy of band b
    is low ( k ′ t (b)⩽τ) , C + x : The probability of moving from q c to q f is raised
    to ( P cf +ϵ) if the occupancy of band b is high ( k ′ t (b)>τ) . When an SU is
    in state q f and observing band α t (s)=b F − x : The probability of moving from
    q f to q c is raised to ( P fc +ϵ) if the occupancy of b is low ( k ′ t (b)⩽τ)
    , F + x : The probability of moving from q f to q c is lowered to ( P fc −ϵ) if
    the occupancy of b is high ( k ′ t (b)>τ) . Clearly, the choice of the contention
    bias parameter ϵ must satisfy 0⩽ϵ⩽min( P cf , F fc ) , and serves to control how
    sensitive or apathetic the secondary users are towards the possibility of contention
    with other SUs at spectrum holes. If ϵ is high or τ is low, the SUs will be more
    selective and spend more time scanning for low occupancy bands; they will also
    be equally reluctant to leave low occupancy bands. The values of τ and ϵ must
    be chosen carefully in order to obtain maximized utility. This selection process
    is the subject of the experiments described in the next section. SECTION VII.
    Evaluating FC+s In Table I, we compare the utility U ′ for all three models TSS*,
    FC and FC+S . In considering FC+S we take ϵ=0.05 and τ=0 , indicating that an
    SU will increase (or decrease) its probabilities of moving to forage (or consume)
    state by 5% based on whether there are other users in the current band. We can
    see that in FC+S the utility U ′ =8.49 , an 11% improvement over FC (where U ′
    =7.66 ) and a 30% improvement over TSS* (where U ′ =6.58 ). Thus, we observe that
    even with a relatively small τ and ϵ , there is a significant increase in average
    utility per SU. Although the time spent in the consume state has decreased to
    26% in FC+S , the amount of time spent in consume is heavily influenced by the
    threshold τ . Table II (rows 2−5) reports on the differences in utility U ′ and
    duty cycle for different values of τ . As is apparent, taking τ=0 maximizes mean
    system utility (per user per unit time). The histogram in Figure 3 also shows
    that FC+S (with ϵ=0.05 and τ=0 ) exhibits a distribution of occupancy numbers
    that is further shifted to the left (mean 1.1) from FC (mean 1.8). Hence, the
    performance improvement from contention-sensing is explained by lower mean congestion
    over resources while consuming, and this in turn is made possible by contention-sensing
    because SUs are able to be ϵ -biased against transmitting in bands that are have
    occupancy exceeding τ , and be ϵ -biased in favor of transmitting in bands that
    are have occupancy τ or lower. In other words, at any given point in time the
    number of active transmitters is lower for FC+S compared to the previously defined
    models. SECTION VIII. Scalability of Experimental Results In previous sections,
    our experiments have used identical parameter settings to those used by Tan et.
    al. [10] in order to facilitate comparison. Here, we lift this assumption, and
    determine the extent to which conclusions drawn in earlier sections continue to
    hold in settings with different numbers of secondary users n , channel bandwidth
    B , and switching cost c . We continue throughout to assume a fixed m=5 spectrum
    bands, transmission power, channel gain and Gaussian noise. Table II Varying contention
    threshold parameter τ To begin, in Figure 4, we look at ∂U/∂n on a log-linear
    graph. For these experiments, B=20MHz and c=0.3⋅B . When the ratio of users to
    bands is less than 4 SUs per band, both FC and FC+S under perform, providing users
    with only 44% and 64% of the utility enjoyed by TSS*. As the ratio of SUs to bands
    exceeds 4:1 both FC and FC+S outperform TSS*. When the ratio of SUs to bands is
    40:1, i.e. 200 SUs are competing over 30 bands, FC+S( U ′ T =0.77) leads, providing
    1724% of the mean utility of TSS* ( U ′ T =0.045) and 122% what is achieved by
    FC ( U ′ T =0.636) . Even with the increase of the SUs to channel ratio, the occupancy
    level at each channel is governed by τ . Varying the bandwidth B results in a
    linear growth of the expected utility for all three schemes where FC+S outperforms
    both FC and TSS*. For these experiments, c=6 and there are n=30 secondary users.
    The slope of the three lines is close, but FC+S is able to harness additional
    bandwidth slightly more efficiently (slope 0.44) compared to FC (slope 0.40) and
    TSS*(slope 0.38). Finally, we investigate how expected utility is affected by
    increases in switching cost. In these experiments, bandwidth B=20MHz and there
    are n=30 secondary users. Here again, we get a linear dependency, indicating that
    as switching cost increases, expected utility is proportionately decreased-but
    the proportionality constants differ considerably across the three models. Even
    with 0 switching cost, the FC+S model outperforms FC by 10% and TSS*by 20%. Where
    the FC+S (resp FC) model continues to deliver positive utility until switching
    cost c=7.2⋅B (resp. 5.3. B ), the TSS* model fails to provide positive utility
    once the switching cost c goes above 2.2⋅B . By switching less frequently, and
    by favoring bands which are “low” occupancy, the FC+S scheme is less vulnerable
    to performance losses when the switching cost is increased. The utility obtained
    by FC+S is governed as U ′ T =−0.06⋅c+8.9 while for TSS* it is given by U ′ T
    =−0.17⋅c+7.6 The difference between the two expressions is 0.11⋅c+1.3 . This residual
    surplus utility is available to be allocated to the cost of contention-sensing
    if needed (by comparison, in this paper we assumed that contention-sensing costs
    were negligible). It follows that the maximum channel contention-sensing cost
    c s for FC+S to maintain a performance advantage over TSS* is c s ⩽0.11⋅c+1.3
    . This means that asymptotically, channel contention-sensing costs must remain
    below 11% of the channel switching cost c -which is to say less than 3% of channel
    bandwidth B -in order for FC+S to continue to be a justifiable SU etiquette. This
    3% bound is on the actual cost of making 1-bit measurements of band contention
    levels, not on the “opportunity cost” of not transmitting while in forage state,
    since the latter is already fully accounted for in (10), which assigns SUs who
    are in foraging state a 0 reward in the computation of mean SU utility. Fig. 4.
    Varying the number of secondary users n Show All SECTION IX. Conclusion and Future
    Work We have presented a paradigm for secondary spectrum co-use in DSA networks
    that is built on an extended SU capability of “sensing” channel occupancy levels.
    Through simulation, we demonstrate that the new FC+S contention-sensing model
    frequently provides a significant (up to 1724%) higher average (per user per unit
    time) utility when compared to earlier models of SU etiquette such as TSS*, and
    a noticeable improvement (122%) over foraging schemes without contention-sensing.
    This performance advantage is present as long as the ratio of SUs to bands exceeds
    4, and continues to be exhibited as ever greater numbers of SUs fight for a fixed
    number of resources. Although our experiments have assuming zero cost for contention-sensing,
    the FC+S continues to provide better utility and be a better SU etiquette even
    with non-zero contention-sensing costs, as long as instantaneous contention-sensing
    cost remains below 3% of total channel bandwidth. Future extensions of this work
    presently underway include: Validate these simulation results in a hardware testbed
    implementation: We hope to implement the FC+S model within a cognitive radio testbed
    consisting of laptops with Orinoco 802.11 PCMCIA cards based on the Atheros 5212
    (802.11 a/b/g) chipset. Choosing τ and ∊dynamically by estimating the number of
    secondary users n . At present, it is assumed that all secondary users know the
    value of n , the static constant number of SUs, and so can set optimal values
    of FSM transition probabilities, τ and ϵ . In practice this is unlikely to be
    the case. For these types of scenarios, it will be necessary for SUs to run a
    parallel process which estimates the current value of n , on the basis of which
    they each independently set their behavioral parameters vis-a-vis FSM transition
    probabilities, τ and ϵ . Validating robustness of the scheme by varying simulation
    parameters and incorporating SU diversity. ACKNOWLEDGMENTS The authors would like
    to thank Shamik Sengupta and Kirk Dombrowski for many helpful discussions. Authors
    Figures References Citations Keywords Metrics More Like This An Analysis on the
    Impact of Utility Functions on the Performance of Game Theory Based Channel Allocation
    in Cognitive Radio Wireless Sensor Network 2020 IEEE International Conference
    on Advanced Networks and Telecommunications Systems (ANTS) Published: 2020 Bandwidth-Efficient
    Frequency Hopping based Anti-Jamming Game for Cognitive Radio assisted Wireless
    Sensor Networks 2021 IEEE 93rd Vehicular Technology Conference (VTC2021-Spring)
    Published: 2021 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase
    Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS
    PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA:
    +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE
    Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2014
  relevance_score1: 0
  relevance_score2: 0
  title: Contention-sensing and dynamic spectrum co-use in secondary user Cognitive
    Radio societies
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/tmc.2012.116
  analysis: '>'
  authors:
  - Alexander W. Min
  - Kang G. Shin
  citation_count: 19
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Transactions on Mobile
    C... >Volume: 12 Issue: 8 Joint Optimal Sensor Selection and Scheduling in Dynamic
    Spectrum Access Networks Publisher: IEEE Cite This PDF Alexander W. Min; Kang
    G. Shin All Authors 18 Cites in Papers 1062 Full Text Views Abstract Document
    Sections 1 Introduction 2 Related Work 3 System Model 4 Data-Fusion Rule Based
    on Spatial RSS Profile 5 Joint Optimal Design of Cooperative Sensing and Sensing
    Scheduling Show Full Outline Authors Figures References Citations Keywords Metrics
    Footnotes Abstract: Spectrum sensing is key to the realization of dynamic spectrum
    access. To protect primary users'' communications from the interference caused
    by secondary users, spectrum sensing must meet the strict detectability requirements
    set by regulatory bodies, such as the FCC. Such strict detection requirements,
    however, can hardly be achieved using PHY-layer sensing techniques alone with
    one-time sensing by only a single sensor. In this paper, we jointly exploit two
    MAC-layer sensing methods-cooperative sensing and sensing scheduling- to improve
    spectrum sensing performance, while incurring minimum sensing overhead. While
    these sensing methods have been studied individually, little has been done on
    their combinations and the resulting benefits. Specifically, we propose to construct
    a profile of the primary signal''s RSSs and design a simple, yet near-optimal,
    incumbent detection rule. Based on this constructed RSS profile, we develop an
    algorithm to find 1) an optimal set of sensors; 2) an optimal point at which to
    stop scheduling additional sensing; and 3) an optimal sensing duration for one-time
    sensing, so as to make a tradeoff between detection performance and sensing overhead.
    Our evaluation results show that the proposed sensing algorithms reduce the sensing
    overhead by up to 65 percent, while meeting the requirements of both false-alarm
    and misdetection probabilities of less than 0.01. Published in: IEEE Transactions
    on Mobile Computing ( Volume: 12, Issue: 8, August 2013) Page(s): 1532 - 1545
    Date of Publication: 15 May 2012 ISSN Information: DOI: 10.1109/TMC.2012.116 Publisher:
    IEEE SECTION 1 Introduction Dynamic spectrum access (DSA) is a promising technology
    that can help alleviate the impending spectrum-scarcity problem, thus promoting
    the introduction of new wireless services and meeting growing user demands. In
    DSA networks, (license-exempt) secondary users (SUs) identify temporarily unused
    licensed spectrum bands, and opportunistically access them as long as SUs do not
    interfere with legacy primary users'' (PUs'') communications. Recent measurement
    studies [1], [2] have indicated that a significant portion of licensed spectrum
    bands are highly underutilized, thus making DSA an attractive means to greatly
    improve spectrum efficiency. To realize such potential benefits of DSA, it is
    of the utmost importance to efficiently and reliably detect spectrum opportunities
    or white spaces. In DSA networks, there are various ways to discover spectrum
    opportunities, such as spectrum sensing [3], [4], beacon protocol [5], [6], or
    geolocation database [7], [8], [9]. Spectrum sensors detect the presence or absence
    of a primary signal in a target spectrum band. To protect PUs'' communications,
    spectrum sensing must meet strict requirements set by regulatory bodies, such
    as the Federal Communications Commission (FCC). For example, in the IEEE 802.22
    Wireless Regional Area Networks (WRANs) [10], [11], a primary signal as weak as
    −20 dB must be detected with high accuracy, i.e., both false-alarm and mis-detection
    probabilities must be less than 10 percent [12]. Unfortunately, this stringent
    requirement cannot be met using one-time sensing 1 with a single sensor, regardless
    of the underlying PHY-layer sensing schemes, e.g., energy/feature detection [13],
    [14], [15]. A second method for detecting a primary signal, called the beacon
    protocol, has also been proposed to detect the presence of a primary signal more
    efficiently. However, the beacon protocol requires legacy devices to be equipped
    with an external beacon device, which may not be feasible for already widely deployed
    legacy systems because of the high cost involved. Moreover, such modifications
    violate the basic premise of DSA—opportunistic spectrum access should require
    no modification to legacy systems. Thus, the beacon protocol cannot obviate the
    need for spectrum sensing. Alternatively, a geolocation database can be used to
    identify spectrum availability at a given time and location [16]. Such a database
    can be constructed and maintained by regulatory bodies, such as the FCC in the
    US or Ofcom in the United Kingdom, or by a trusted third party. A database can
    be used for spectrum bands on which PU activities are predictable, e.g., DTV signals
    with long ON/OFF periods. Moreover, it can reduce the cost of large-scale sensor
    deployment. In fact, the FCC recently mandated the use of a geolocation database
    for accessing TV band white spaces [17]. Algorithms and frameworks for implementing
    geolocation databases for TV spectrum bands are currently under development [7],
    [9]. However, construction of a database with a complete spectrum map either via
    measurement or propagation modeling, may require a considerable amount of time.
    Examining the database to check spectrum availability also consumes system resources.
    Moreover, spectrum sensing may still lead to better spectrum utilization compared
    to the use of a geolocation database. In this paper, we focus on improving spectrum-sensing
    performance via joint design of two MAC-layer sensing methods, namely cooperative
    sensing and sensing scheduling. This joint design allows SUs not only to overcome
    the performance deficiency of PHY-layer sensing, but also to make the tradeoff
    between performance gain and sensing overhead. In cooperative sensing, a fusion
    center (base station) directs multiple sensors at different locations to perform
    spectrum sensing simultaneously during each sensing (quiet) period, thus exploiting
    sensor location diversity [3], [18], [19], [20], [21], [22], [23], [24]. Scheduling
    sensing also aims to improve detection performance by having SUs perform spectrum
    sensing at various time intervals, thereby exploiting temporal variations in received
    signal strengths (RSSs) at each sensor [4], [25]. However, all SUs (sensors) 2
    must remain silent during sensing periods so that SU signals are not misinterpreted
    as primary signals [26]. These periods of silence waste precious resources, such
    as energy and time, and ultimately degrade the quality-of-service (QoS) of SU
    communications. Therefore, the fusion center must carefully select a set of cooperative
    sensors and optimally schedule sensing periods so as to minimize sensing-induced
    interruptions, while guaranteeing the required detection performance, even for
    weak primary signals. To address this practical challenge, we propose an efficient
    spectrum-sensing framework that exploits both spatial and temporal variations
    in sensing reports (i.e., received primary signal strengths) to minimize the sensing
    overhead subject to the detectability requirements. In particular, we focus on
    large-scale PU detection in infrastructure-based secondary networks (e.g., IEEE
    802.22 WRANs) and address the following three key issues in MAC-layer spectrum
    sensing: 1) which sensors to use for cooperative sensing; 2) how to incorporate
    their heterogeneous sensitivities in data fusion; and 3) how to minimally schedule
    spectrum sensing. To answer these questions, we first introduce a new concept
    of spatial RSS profiling for the incumbent signal on a given spectrum band. Because
    the fusion center collects sensing results from sensors at different locations,
    it can construct a unique RSS profile for an incumbent signal. We show that such
    RSS profiles can be approximated as multivariate Gaussian when the primary signal
    is very weak. This Gaussian approximation allows the fusion center to develop
    a simple, yet near-optimal linear data-fusion rule via a linear discriminant analysis
    (LDA). We then characterize the network condition under which scheduling the sensing
    multiple times is required. We also demonstrate that there is no correlation in
    the sensing results even among neighboring sensors in stationary DSA networks
    using a software-defined radio testbed. Finally, we present algorithms that minimize
    sensing overhead via: 1) an optimal selection of sensors for cooperative sensing;
    2) optimal sensing duration; and 3) the optimal time to stop scheduling additional
    sensing periods. The remainder of this paper is organized as follows: Section
    2 reviews related work on spectrum sensing in DSA networks. Section 3 introduces
    a DSA network model and the energy-detection technique, followed by our approach
    to exploiting spatiotemporal variations in sensing reports for spectrum sensing.
    Section 4 presents our RSS-profile-based detection scheme for one-time sensing
    and its theoretical performance. Section 5 first shows that there is no temporal
    correlation in sensing reports among stationary sensors, and then it introduces
    our cooperative sensing algorithms designed to select an optimal set of sensors
    and to find an optimal time to stop sensing. Section 6 evaluates the performance
    of the proposed algorithms, and Section 7 concludes the paper. SECTION 2 Related
    Work Various aspects of cooperative sensing have been studied, such as cooperation
    gain [3], [19], sensor selection [27], security [28], [29], [30], and performance-overhead
    tradeoffs [31], [32], [33]. The benefits of sensor collaboration have been reported
    to diminish as the degree of shadowing correlation among sensors increases [3],
    [19], [21], [34]. To minimize this detrimental effect of shadowing correlation
    on cooperative sensing, several sensor-selection algorithms have been introduced.
    For example, Selén et al. [27] proposed heuristic algorithms for selecting an
    uncorrelated set of sensors, given different levels of information about sensor
    locations. In a similar vein, Kim and Shin [4] suggested selecting sensors based
    on their geographical separation, so as to make the sensors uncorrelated with
    each other. While these approaches seek to avoid shadow fading correlation among
    sensors, we show that when sensors are stationary, there is virtually no temporal
    correlation in sensing reports (see Section 5). An extensive survey of cooperative
    sensing in DSA networks can be found in [35]. Sensing scheduling has also been
    studied as an efficient way of improving incumbent detection performance [36],
    [37], [38], [39], [40]. For example, Hoang and Liang [36] developed an adaptive
    sensing scheduling mechanism that takes into account both time-varying channel
    and traffic conditions. In the IEEE 802.22 WRAN standard draft, a two-stage sensing
    mechanism has been proposed to provide flexible scheduling of quiet periods [41].
    Recently, a sequential hypothesis testing framework has been proposed as an attractive
    way to minimize the sensing delay for given detection requirements (in terms of
    false-alarm and misdetection probabilities). Lai et al. [37] presented sequential
    detection of primary signals using the cumulative sum (CUSUM) algorithm. Similar
    to our work, Zou et al. [40] proposed a sensing scheduling scheme based on the
    framework of sequential probability ratio testing (SPRT) under the assumption
    of unknown primary signal characteristics. However, the interactions between cooperative
    sensing and sensing scheduling have not been considered, whereas we jointly optimize
    them to minimize the overall sensing overhead. Despite all these efforts, an important
    but unexplored issue is the joint exploitation of sensor selection and sensing
    scheduling in MAC-layer spectrum sensing to synergistically improve detection
    performance. We argue that investigating the interplay between the two MAC-layer
    sensing methods is key in devising optimal and efficient sensing schemes in DSA
    networks. SECTION 3 System Model In this section, we introduce the DSA network
    model, PHY- and MAC-layer spectrum sensing for incumbent detection, and assumptions
    that we use throughout the paper. 3.1 DSA Network Model We consider a DSA network
    in which primary and secondary systems coexist in the same geographical area,
    as shown in Fig. 1. We assume a large-scale stationary primary system, such as
    DTV users in TV spectrum bands. A secondary system is an infrastructure-based
    network, e.g., IEEE 802.22 WRAN, where each cell consists of a single base station
    (or fusion center) and multiple stationary sensors. 3 The fusion center selects
    a (sub)set of sensors and directs them to perform sensing by scheduling (one or
    more) sensing (quiet) periods. At the end of each sensing period, sensors report
    their measurement results to the fusion center sequentially. Based on the sensing
    reports collected from the sensors, the fusion center will make a final decision
    on the presence or absence of a primary signal and will announce the decision
    to the SUs in the cell. We assume the existence of a separate control channel,
    which provides reliable communication between the fusion center and sensors. Fig.
    1. DSA network model. A (sub)set of SUs (sensors) perform spectrum sensing simultaneously
    during each sensing period and report their measurement results to the fusion
    center. Show All 3.2 Spectrum Sensing Model 3.2.1 PHY-Layer Spectrum Sensing Spectrum
    sensing consists of PHY- and MAC-layer mechanisms. For PHY-layer sensing, we assume
    the use of energy detection instead of other sensing techniques, such as matched-filter
    detection [42], cyclostationary feature detection [43] and compressed sensing
    [44]. The energy detection is one of the most widely used sensing techniques because
    of its simple design and low complexity; it simply measures signal power on a
    target frequency band and does not require a priori knowledge of primary-signal-specific
    features. Regarding the existence of a primary signal on a given channel, there
    are two hypotheses, i.e., y i (n)={ w i (n) s i (n)+ w i (n) H 0 (noprimarysignal)
    H 1 (primarysignalexists), View Source where y i (n) is the signal received by
    a sensor, s i (n) is the primary signal, and w i (n) is an independent and identically
    distributed (i.i.d.) additive white Gaussian noise (AWGN) at sensor i in the n
    th time slot within the sensing duration. The test statistic of the energy detector
    is an estimate of average RSS [13]: T i = B M ∑ n=1 M y i (n)∗ y i (n), (1) View
    Source where B is the channel bandwidth, and M is the number of signal samples
    during a sensing period. The measurement study in [13] indicates that the test
    statistic in (1) can be approximated as a Gaussian distribution using the central
    limit theorem (CLT) because the signal sample size, M , is sufficiently large,
    even with a short sensing duration (e.g., 1 ms). For example, assuming that the
    signal is sampled at the Nyquist rate, a sensor can obtain M=6× 10 3 samples for
    a 6-MHz TV channel within 1 ms [45]. Then, the probability density function (p.d.f.)
    of the test statistic T i at sensor i can be accurately approximated as [13]:
    T i ∼ ⎧ ⎩ ⎨ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ N(NB, (NB ) 2 M ) N( P i +NB, ( P i +NB ) 2 M ) H
    0 H 1 , (2) View Source where P i is the received primary signal strength and
    N is the noise spectral density. Note that this Gaussian approximation is valid
    even in very low-SNR environments. We make two additional assumptions as follows:
    A1. Separation between the primary transmitter and sensors is relatively larger
    than the separation between sensors, which is reasonable in large-scale networks
    such as the IEEE 802.22 WRANs [46]. 4 A2. The impact of multipath fading on spectrum
    sensing is negligible due to a wide channel bandwidth (e.g., larger than the coherent
    bandwidth) as in DTV signal detection in IEEE 802.22 WRANs [13]. 5 Based on the
    above assumptions, the received primary signal strength at sensor i can be expressed
    as P i = P R ⋅ e Y i , where P R is the average RSS within a cell, and e Y i is
    the shadowing gain between the primary transmitter and sensor i . Shadow fading
    can be characterized by the shadowing dB-spread, σ dB , and it has the relationship
    σ=0.1ln(10) σ dB . 6 Remark. It is important to note that in stationary secondary
    systems, where sensors do not move, the shadowing gain Y i is a specific realization
    of a normal random variable Y∼N(0, σ 2 ) . Thus, the channel gain is also (pseudo)
    time invariant and determined based on sensor locations. We will elaborate further
    on temporal correlation in sensing reports among station sensors in Section 5.1.
    3.2.2 MAC-Layer Spectrum Sensing The performance of energy detection is highly
    susceptible to signal-to-noise ratio (SNR), thus limiting its ability to meet
    the FCC''s detection requirements. Moreover, noise uncertainty [48] at sensors
    also prevents the applicability of energy detection to such a weak primary signal.
    As a result, one-time sensing with a single sensor cannot guarantee the detection
    requirements imposed by regulatory bodies such as the FCC. To overcome these challenges,
    we design efficient MAC-layer spectrum sensing algorithms—i.e., sensor selection
    and sensing scheduling—by exploiting both spatial diversity and temporal variations
    in sensing reports (i.e., RSS) to improve the incumbent detection performance.
    Most previous work studies these two MAC-layer sensing methods separately; therefore,
    the analysis of their interplay is still an open problem. Once the fusion center
    collects sensing reports (i.e., measured RSSs) from sensors, it will perform data
    fusion to make a decision. As we discuss next, we propose to build an RSS profile
    for data fusion. SECTION 4 Data-Fusion Rule Based on Spatial RSS Profile In this
    section, we discuss the design rationale behind our approach, present the construction
    of a spatial RSS profile, and formulate the problem of incumbent detection based
    on one-time sensing as a binary classification problem via LDA. We then analyze
    its detection performance and further characterize the wireless network conditions,
    under which more sensing is needed to meet desired detection requirements. 4.1
    Design Rationale As mentioned earlier, in DSA networks with stationary sensor
    deployment, the measured RSS at each sensor is (pseudo) time invariant. This allows
    the fusion center to learn the RSS distributions at sensors and construct their
    spatial RSS profile. The fusion center can construct a unique profile of RSS distributions
    for a given set of sensors and sensing time. For RSS profiling, we assume a large
    enough training period (including both ON/OFF periods of the primary transmitter)
    for accurate estimation of RSS distributions. In practice, the RSS profile can
    be constructed at the time of system/sensor deployment. Upon collecting the sensing
    results during each scheduled sensing period, the fusion center compares the observed
    RSS values with the RSS profile. A similarity between the RSS distribution and
    the primary signal can be interpreted as an indication of the presence of a primary
    signal, and vice versa. Using the RSS profile, the fusion center can adopt the
    sequential hypothesis testing framework for sensing scheduling, and minimally
    schedule sensing periods only until it accumulates a sufficient number of observations
    to determine whether or not a primary signal exists within a certain performance
    bound. The RSS-profile-based data fusion offers two main benefits: 1) near-optimal
    detection performance, and 2) high robustness (fault tolerance) against attacks
    (malfunctioning sensors). We will demonstrate the above benefits of the proposed
    RSS-profile-based spectrum sensing in Section 6. 4.2 Construction of a Spatial
    RSS Profile We propose to build a spatial profile of RSSs at multiple sensor locations,
    which will be used as a main reference for incumbent detection. To build a RSS
    profile, it is important to understand the spatial and temporal characteristics
    of sensing reports. The spatial RSS diversity is due mainly to the different sensors''
    locations (thus different channel gains from the primary transmitter), whereas
    the temporal RSS variations are due mainly to the measurement error of the energy
    detector. The intensity of temporal variations depends on the sensing time (i.e.,
    M in (1)); the shorter the sensing time, the larger the temporal RSS variation
    due to the increase of measurement error. Note that the measurement study from
    the IEEE 802.22 Working Group indicated that the distribution of test statistic,
    T (equivalent to the estimated RSS), of the energy detector can be approximated
    as Gaussian (see (2)) using the CLT in both ON and OFF periods. Thus, the RSS
    profile of n s stationary sensors is an n s -dimensional Gaussian distribution,
    the parameters of which can be easily estimated using well-known techniques, such
    as maximum-likelihood estimation (MLE). Since the RSS distributions at each sensor
    location are (pseudo) time invariant due to the static deployment of SUs, the
    RSS profile can be used reliably without frequent updating. 4.3 Detection with
    One-Time Sensing Based on LDA We now present a detection rule using an RSS profile
    given a one-time sensing measurement. Let x=[ T 1 ,…, T n s ] T denote the vector
    of test statistics of the energy detector measured by n s cooperating sensors.
    Then, the incumbent detection problem can be cast into a binary Gaussian classification
    problem, where the observed test statistic x∈ IR n s ×1 belongs to one of two
    classes, H 0 or H 1 , where H 0 :x∼N( μ 0 , Σ 0 )(noprimarysignal) H 1 :x∼N( μ
    1 , Σ 1 )(primarysignalexists), View Source where μ k ∈ IR n s ×1 and Σ k ∈ IR
    n s × n s are the estimated mean vector and the covariance matrix of RSS distributions
    under H k , respectively. Note that Σ 0 = σ 2 n I , where I is an n s × n s identity
    matrix and σ 2 n =(NB ) 2 /M . Under the general assumption of unequal covariance
    matrices, i.e., Σ 0 ≠ Σ 1 , the optimal decision rule for our detection problem
    can be found via quadratic discriminant analysis (QDA) [49]. Although QDA provides
    optimal detection performance for a general multivariate Gaussian with unequal
    covariance matrices, its quadratic decision boundaries do not yield a closed-form
    expression for detection performance [50]. In our problem, the quadratic decision
    rule can actually be linearized using a LDA on the basis of the following two
    important observations, i.e., the covariance matrix under H 1 , Σ 1 , can be:
    O1) assumed as an identity matrix with fixed sensor locations, and then, O2) approximated
    as Σ 1 ≈ Σ 0 = σ 2 n I in a very low SNR environment. Regarding the first observation,
    the covariance matrix Σ 1 may not appear to be an identity matrix because of the
    existence of shadow correlation in primary signal strengths [51]. However, as
    mentioned earlier, when sensor locations are fixed, their RSSs are also (pseudo)
    time invariant and the randomness in the test statistics comes only from the noise
    processes (i.e., measurement errors), which are independent of each other. Thus,
    the correlation of RSSs between any pair of sensors does not exist, so we can
    assume that Σ 1 is also an identity matrix as Σ 0 (see Section 5.1). Regarding
    the second observation, the received primary signal strength may be significantly
    lower than that of the noise power for a very weak primary signal. For example,
    the FCC requires the detection of a DTV signal as weak as −20 dB, assuming the
    typical noise level NB=−95.2 dBm [14]. Therefore, it is reasonable to assume that
    P i +NB≈ NB∀i , and thus, Σ 1 ≈ Σ 0 = σ 2 n I . Fig. 2 justifies these assumptions
    by showing that the error performances of QDA and LDA are almost the same in very
    low SNR environments. Lemma 1. With spatial RSS profile, we have a simple distance-based
    decision rule for incumbent detection: ∥ ∥ ∥ ∥ x− μ 0 ∥ ∥ ∥ ∥ H 1 > < H 0 ∥ ∥
    ∥ ∥ x− μ 1 ∥ ∥ ∥ ∥ , (3) View Source where x is the measured RSS vector, and μ
    k is the estimated mean vector of the RSS at sensors under H k . Proof. Based
    on the observations O1) and O2), we compute the log likelihood of the two hypotheses
    H 0 and H 1 as: log( Pr( H 1 |x) Pr( H 0 |x) ) =log g 1 (x) g 0 (x) +log π 1 π
    0 =log π 1 π 0 − 1 2 ( μ 1 + μ 0 ) T Σ −1 ( μ 1 − μ 0 ) + x T Σ −1 ( μ 1 − μ 0
    ), View Source where g k (x) is the estimated Gaussian distribution of the sensing
    reports, x , under H k and Σ is the common covariance matrix. π k is a priori
    probabilities of hypotheses H k . Then, in our two-class problem, the fusion center
    will assume H 1 if the following condition holds: x T Σ −1 ( μ ^ 1 − μ ^ 0 )>
    1 2 μ ^ T 1 Σ ^ −1 μ ^ 1 − 1 2 μ ^ T 0 Σ ^ −1 μ ^ 0 +log π 0 π 1 . View Source
    Otherwise, the fusion center will assume H 0 . Assuming that the fusion center
    may not have an accurate estimation of a priori probability of a primary signal,
    the fusion center can set π 0 = π 1 =0.5 . Then, (3) follows. □ Equation (3) indicates
    that, under both hypotheses, the decision is made based solely on the distance
    between the observed RSS vector, x , and the mean vectors of the RSS profile,
    μ k . Although (3) is optimal in minimizing detection error performance (i.e.,
    the sum of false alarm and misdetection probabilities), the detection requirements
    are often expressed in terms of misdetection probability for a fixed false-alarm
    probability. In what follows, we analyze the performance of the proposed RSS-profile-based
    spectrum sensing. Fig. 2. Error performances of QDA versus LDA. The performance
    difference is insignificant, even in a very low SNR environment. These are the
    results of a Monte Carlo simulation with 10 7 runs. Show All 4.4 Performance Analysis
    4.4.1 Incumbent Detection Performance Let T(x) = △ w T x denote the test statistic
    for incumbent detection, which is calculated based on the observed RSS vector
    x , where w = △ ( μ 1 − μ 0 )∈ IR n s ×1 . Note that ∥w∥ is the euclidean distance
    between the centroids of two Gaussian distributions under both hypotheses, where
    the centroids are the vectors of average RSSs at sensor locations. It can be easily
    shown that the test statistic T(x) follows a Gaussian distribution, i.e., T(x)∼N(
    w T μ k , σ 2 n ∥w ∥ 2 )under H k . Then, the probability of false alarm under
    our LDA-based decision rule with the decision threshold η∈IR is given as: P LDA
    FA = △ Prob(T(x)>η| H 0 )=Q( η− w T μ 0 σ n ∥w∥ ), (4) View Source where Q(⋅)
    is the Q-function. Using (4), the decision threshold η can be derived for the
    desired P LDA FA as: η= σ n ⋅∥w∥⋅ Q −1 ( P LDA FA )+ w T μ 0 . (5) View Source
    Then, based on (4) and (5), the probability of misdetection, P LDA MD , is given
    as: P LDA MD = △ Prob(T(x)<η| H 1 ) =1−Q( Q −1 ( P LDA FA )− ∥w∥ σ n ). (6) View
    Source Equation (6) indicates that, when the desired false-alarm probability,
    P LDA FA , is given, the achievable misdetection, P LDA MD , depends on the noise
    variance σ 2 n = (NB ) 2 M in energy detection and the distance ∥w∥ . That is,
    P LDA MD decreases as the sensing duration (thus, the number M of sensing samples)
    increases because a large number of samples would make the decision more accurate
    due to the reduced noise variance (measurement error). 4.4.2 Impact of Shadow
    Fading Recall that w is defined as the difference in RSSs under both hypotheses,
    i.e., w = △ ( μ 1 − μ 0 )=[ P 1 ,…, P n s ] T . Therefore, ∥w∥ under shadow fading
    is given as: ∥w∥=[ ∑ i=1 n s P 2 i ] 1/2 = P R ⋅[ ∑ i=1 n s ( e Y i ) 2 ] 1/2
    , (7) View Source where P R is the average RSS in the secondary cell due to path
    loss and Y i is a location-dependent realization of a random variable Y∼N(0, σ
    2 ) where σ=0.1ln(10) σ dB . To understand the impact of shadow fading on detection
    performance (in terms of P LDA MD given a fixed P LDA FA ), we study the distribution
    of ∥w∥ in (7). Although there is no closed-form expression available for the power
    sum of log-normal random variables in (7) [52], the power sum can be approximated
    accurately by rendering the sum itself as another log-normal random variable [53].
    Let e Z ′ ∼ e 2 Y 1 + e 2 Y 2 +⋯+ e 2 Y n s . Then, by following the result in
    [53], the sum can be approximated by matching its mean and variance with e Z ′
    . The first two moments of e Z ′ are IE[ e Z ′ ]= e μ Z ′ + σ 2 Z ′ /2 and IE[
    e 2 Z ′ ]= e 2 μ Z ′ +2 σ 2 Z ′ . Our final goal is to approximate the square
    root of the power sum, i.e., e Z =( e Z ′ ) 1/2 , which is still a log-normal
    random variable. Thus, by equating the first two moments of e Z ′ and the power
    sum, ∑ n s i=1 ( e Y i ) 2 , and then taking e Z =( e Z ′ ) 1/2 , we have ∥w∥≈
    P R ⋅ e Z with the random variable e Z ∼Log−N( μ Z , σ 2 Z ) where: σ 2 Z = 1
    4 log[ ( e 4 σ 2 −1) n s +1], (8) View Source and μ Z = 1 2 log( n s )+ σ 2 −
    σ 2 Z 4 . (9) View Source Then, we can derive the average misdetection probability
    as: P ¯ ¯ ¯ ¯ LDA MD = ∫ ∞ −∞ [1−Q( Q −1 ( P LDA FA )− P R ⋅ e z σ n )]⋅ f z ⋅dz,
    View Source where f z = 1 σ Z 2π − − √ exp[− (z− μ Z ) 2 2 σ 2 Z ],−∞<z<∞. View
    Source Fig. 3 shows examples of RSS distributions under various wireless environments.
    The figure shows that the centroids of the two Gaussian distributions will have
    a larger separation, ∥w∥ , with a higher average primary signal strength P R ,
    or a longer sensing time T S . As indicated in (6), a larger separation between
    the two RSS distributions improves the incumbent detection performance. Fig. 3.
    Distribution of the measured RSS vector from three cooperating sensors under various
    wireless environments. The yellow (blue) dots indicate the vector of measured
    test statistics under H 0 ( H 1 ). The simulation parameters are set NB=−95.2
    dBm and σ dB =5.5 dB. Show All Fig. 4 plots misdetection probabilities, P MD ,
    for a given false-alarm probability. The figure shows that the misdetection probability
    increases as the average primary signal strength decreases. It shows that spectrum
    sensing with a single sensor may not be sufficient to protect primary communications.
    To further improve the detection performance while introducing minimal sensing
    overhead, in what follows, we jointly optimize sensor selection, sensing time,
    and sensing scheduling. Fig. 4. Detection performance of RSS-profile-based cooperative
    spectrum sensing for various primary signal strengths. Show All 4.5 The Necessity
    of Sensing Scheduling We now characterize the network conditions under which the
    fusion center must schedule spectrum sensing multiple times to meet a given detectability
    requirement. As we observed in previous sections, performance of one-time spectrum
    sensing depends on various network parameters, such as average primary signal
    strength, P R , number of sensors for sensing collaboration n s , and detection
    requirements, P FA and P MD . The fusion center may avoid scheduling sensing multiple
    times by employing a larger number of sensors for cooperative sensing. We define
    the minimum number of sensors, n ∗ s , to meet a given detection requirement as:
    n ∗ s = △ arg min n s { n s : P ¯ ¯ ¯ ¯ FA , P ¯ ¯ ¯ ¯ MD ≤ξ}. (10) View Source
    Fig. 5 plots the minimum number of sensors required to achieve the desired level
    of detection probability, ξ . This figure shows that the required number of sensors
    increases exponentially as the average primary signal strength, P R , decreases.
    The number of sensors also increases as the detection requirement becomes stricter,
    i.e., smaller ξ . For example, when P R =−116 dBm, more than 70 sensors are required
    to achieve P FA , P MD ≤0.01 . In practice, it may be difficult to find such a
    large number of sensors within a cell, and more importantly, having such a large
    number of sensors may incur significant overhead. Therefore, in a low SNR environment
    with strict detection requirements, the fusion center must schedule sensing multiple
    times to make the best tradeoff between performance and overhead. Fig. 5. Minimum
    number of sensors required to achieve a desired detection performance with one-time
    sensing. Show All SECTION 5 Joint Optimal Design of Cooperative Sensing and Sensing
    Scheduling In this section, we first investigate temporal correlation in sensing
    reports among stationary sensors. We then propose adaptive online algorithms that
    find: 1) an optimal stopping time for scheduling sensing periods; 2) an optimal
    set of sensors; and 3) an optimal sensing duration that minimizes the average
    sensing-time overhead. 5.1 Temporal Correlation in Sensing Reports Before presenting
    an optimal sensing scheduling algorithm, we would like to show that there is no
    correlation in RSSs among stationary sensors. As we discussed in Section 4.3,
    the randomness in sensing results (i.e., the output of the energy detector) comes
    only from the measurement noise, which is independent for each sensor. To illustrate
    this, we measure the Pearson''s correlation coefficient between a pair of sensors.
    The Pearson''s correlation coefficient of sensing reports from the sensors i and
    j can be calculated as: ρ ^ i,j =Corr(i,j)= ∑ n i=1 ( T i −IE[ T i ])( T j −IE[
    T j ]) (n−1) σ ^ i σ ^ j , (11) View Source where σ ^ i and σ ^ j are the sample
    standard deviation of test statistics T i and T j , i.e., σ ^ i = △ ( 1 n−1 ∑
    i=1 n ( T i −IE[ T i ] ) 2 ) 1 2 . (12) View Source It is well known that shadow
    fading is correlated with the spatial domain [51], as shown in Fig. 6a. As a result,
    sensors located close to each other (e.g., within shadowing decorrelation distance)
    are highly likely to exhibit similar sensing reports. However, Fig. 6b indicates
    that even when sensors are located close to each other (and thus they have similar
    average RSS values), their sensing reports are not correlated with the temporal
    domain. Fig. 6. Spatial versus temporal correlation in shadow fading: (a) the
    spatial shadowing correlation decreases with increasing separation between sensors
    where d corr =150 m, whereas (b) the temporal correlation in sensing reports is
    virtually zero regardless of the difference in average RSS at sensors. Show All
    5.2 Experimental Results To examine the temporal correlation in RSS in a realistic
    network environment, we measured RSS at four different locations in our GNUradio/USRP2
    [54] testbed deployed on the fourth floor of the Computer Science and Engineering
    (CSE) Building at the University of Michigan. We placed five USRP2 nodes (one
    transmitter and four receivers) at different locations (i.e., corridors and offices)
    shown in Fig. 7. We emulate the DSA network by considering the transmitter and
    the receivers as the primary transmitter and the spectrum sensors, respectively.
    We equipped the nodes with the VERT2450 (dual Band 2,400-2,480 MHz and 4.9-5.9-GHz
    omnidirectional antenna) on a XCVR2450 board (2.4-2.5 and 4.9-5.85-GHz dual-band
    daughterboard). Fig. 7. GNURadio testbed on the fourth floor of the CSE building
    at the University of Michigan. It consists of one transmitter (denoted as T) and
    four receivers (1-4) working as spectrum sensors. Show All We measured the SNR
    at the receivers (thus emulating the energy detector) for 1-min periods, as shown
    in Fig. 8a. The SNR was found to be very stable during the measurement periods,
    except for the measurement noise. Fig. 8b shows the correlation coefficient in
    the measured time series of SNRs at six receiver pairs. The results show that
    the correlation coefficients are negligible for the receiver pairs, indicating
    that there is virtually no correlation with the measured SNR when the sensors
    are stationary. Fig. 8. Temporal correlation in measured RSS among stationary
    sensors. (a) The measured SNR is stable at different locations, and (b) the correlation
    among the measured SNR is negligible (i.e., ρ<0.1 ). Show All The measurement
    results imply that when the fusion center can obtain the information of average
    primary signal strength at each sensor (via estimation or learning), then the
    physical separation between cooperating sensors may not greatly affect detection
    performance. 7 These uncorrelated sensing reports in the temporal domain allow
    us to use the sequential hypothesis testing framework to find the optimal time
    to stop the scheduling of sensing as we discuss next. Moreover, the results also
    indicate that the measured signal strengths (or sensing results) can be approximated
    well as a Gaussian distribution, as shown in Fig. 9, corroborating our assumption
    in Section 3. Fig. 9. The measured SNR can be approximated as a Gaussian distribution.
    Show All 5.3 Optimal Stopping Rule for Sensing Scheduling The fusion center can
    schedule sensing multiple times before making a final decision, and thus, it receives
    a sequence of sensing reports from the sensors, which are independent of each
    other. This makes sequential detection suitable for our problem. In particular,
    among the various sequential detection schemes, we adopt Wald''s SPRT [55] because
    it is optimal in the sense of minimizing the average number of observations, given
    bounded probabilities of false alarm and misdetection. Let t n = △ σ −1 n ⋅∥w
    ∥ −1 ⋅T( x n ) denote the normalized test statistic based on the observed RSS
    vector x n in the n th sensing period. The decision statistic Λ N is the log-likelihood
    ratio based on N sequential observations (i.e., test statistics) t 1 ,…, t N as:
    Λ N = △ λ( t 1 ,…, t N )=ln f 1 ( t 1 ,…, t N ) f 0 ( t 1 ,…, t N ) , (13) View
    Source where f k ( t 1 ,…, t N ) is the joint p.d.f. of the sequence of observations
    under hypotheses H k ∀k . Recall that { t n } N n=1 are Gaussian, and they are
    independent, as we observed in Section 5.1. Then, (13) becomes: Λ N = ∑ n=1 N
    λ n = ∑ n=1 N ln f 1 ( t n ) f 0 ( t n ) , (14) View Source where f k ( t n )
    is N( θ k ,1) with θ k = △ IE[ t n | H k ]= w T μ k σ n ∥w∥ ∀k . Then, we have:
    λ n =ln f 1 ( t n ) f 0 ( t n ) =( θ 1 − θ 0 ) t n + 1 2 ( θ 2 0 − θ 2 1 ). (15)
    View Source Based on (14) and (15), the decision statistic Λ N can be expressed
    as: Λ N =( θ 1 − θ 0 ) ∑ n=1 N t n + N 2 ( θ 2 0 − θ 2 1 ). (16) View Source Then,
    in SPRT, a decision is made based on the observed sequence of test statistics,
    { t n } N n=1 , using the following rule: Λ N ≥ Γ u Λ N < Γ l Γ l ≤ Λ N < Γ u
    ⇒accept H 1 (primarysignalexists), ⇒accept H 0 (noprimarysignal), ⇒takeanotherobservation,
    View Source where Γ l and Γ u ( 0< Γ l < Γ u <∞ ) are the detection thresholds
    that depend on the desired values of P FA and P MD . Let α ∗ and β ∗ denote the
    desired values of false-alarm and misdetection probabilities, respectively. Then,
    the decision boundaries are given by Wald [55]: Γ l =ln β ∗ 1− α ∗ and Γ u =ln
    1− β ∗ α ∗ . (17) View Source 5.4 Sensing Delay Analysis Recall that our goal
    is to minimize the number of times the spectrum needs to be sensed, with the decision
    thresholds derived from the target detection probabilities as shown in (17). We,
    therefore, consider the number of sensing periods scheduled until a decision is
    made (i.e., either the boundary Γ l or Γ u is reached) as our main performance
    metric. The average number of sensing periods, IE[N] , required for decision making
    can be computed as: IE[ Λ N ]=IE[N]×IE[λ| H k ]. (18) View Source First, using
    (15), the average value of λ under H k can be derived as: IE[λ| H k ]=( θ 1 −
    θ 0 ) θ k + 1 2 ( θ 2 0 − θ 2 1 ). (19) View Source The average of Λ N can then
    be found as follows: Suppose H 0 holds, then Λ N will reach Γ u (i.e., false alarm)
    with the desired false-alarm probability α ∗ ; otherwise, it will reach Γ l .
    Thus, using (17), we have: IE[ Λ N | H 0 ]= α ∗ ln 1− β ∗ α ∗ +(1− α ∗ )ln β ∗
    1− α ∗ . (20) View Source Based on (18), (19), and (20), we can derive the average
    required number of sensing periods for decision making as: IE[N| H 0 ]= α ∗ ln
    1− β ∗ α ∗ +(1− α ∗ )ln β ∗ 1− α ∗ ( θ 1 − θ 0 ) θ 0 + 1 2 ( θ 2 0 − θ 2 1 ) .
    (21) View Source Similarly, we can derive: IE[N| H 1 ]= (1− β ∗ )ln 1− β ∗ α ∗
    + β ∗ ln β ∗ 1− α ∗ ( θ 1 − θ 0 ) θ 1 + 1 2 ( θ 2 0 − θ 2 1 ) . (22) View Source
    Based on (13)-(22), Algorithm 1 describes our online algorithm for scheduling
    sensing periods that finds the optimal stopping time for sensing. Algorithm 1.
    Online sensing scheduling. The fusion center does the following 1: while each
    round n∈[1, N max ] of sensing period do 2: Receive results of energy detector
    (i.e., RSS) x n from sensors 3: t n ← σ −1 n ⋅∥w ∥ −1 ⋅T( x n ) // Calculate test
    statistic 4: Λ N ← Λ N +( θ 1 − θ 0 ) t n + 1 2 ( θ 2 0 − θ 2 1 ) 5: if Λ N ≥
    Γ u then 6: A primary exists and we schedule fine-sensing (or initiate the channel
    vacation procedure) 7: else if Λ N < Γ l then 8: A primary does not exist 9: else
    if n== N max then 10: Schedule fine-sensing for in-depth measurement 11: else
    12: Schedule another sensing period and wait for the observation 13: end if 14:
    end while 5.5 Tradeoff in Sensing Overhead: Energy Detection versus Feature Detection
    In practice, the number of sensing periods that can be scheduled before the fusion
    center makes a final decision can be upper bounded by N max due to several factors,
    such as the detection delay requirement, intersensing interval, initial sensing
    delay, and sensing time [56]. For example, in the 802.22 WRAN standard draft,
    the SUs must be able to detect the return of a PU within 2 seconds [12]. Otherwise,
    the fusion center must schedule a fine-sensing (i.e., feature detection) period
    at the end of the current sensing interval to perform expensive feature detection.
    Therefore, we set a threshold P th —a design parameter—such that the fusion center
    must reach a conclusion within N max sensing periods with a probability greater
    than or equal to P th . Let N opt denote the optimal stopping time of sensing
    under Algorithm 1. Then, we want to derive the probability of satisfying N opt
    ≤ N max , which should be no less than P th . Although an approximate expression
    for the distribution of N opt can be derived, we instead derive a lower bound
    of the probability for computational efficiency [55]. Suppose Λ N max ≥ Γ u .
    Then, we have N opt ≤ N max , so the following inequality holds: Prob( N opt ≤
    N max )≥Prob( Λ N max ≥ Γ u ). (23) View Source Since N max is sufficiently large
    in practice, we can use the CLT, and the inequality Λ N max ≥ Γ u can then be
    written as: Λ N max − N max IE[λ| H 1 ] N max − − − − √ σ 1 (λ) ≥ B− N max IE[λ|
    H 1 ] N max − − − − √ σ 1 (λ) , (24) View Source where σ 1 (λ) is the standard
    deviation of λ under H 1 , which can be derived as σ k (λ)=( θ 1 − θ 0 )∀k from
    (15). Then, the left-hand side of (24) is normally distributed with zero mean
    and unit variance when H 1 is true. Therefore, based on (23) and (24), we have
    the following lower bound of the probability that the fusion center makes a decision
    within N max observations: Prob( N opt ≤ N max )≥ Π – – = Q( B− N max IE[λ| H
    1 ] N max − − − − √ σ 1 (λ) )                        
           thispartshouldbe≥ P th . (25) View Source This lower bound will
    be considered in our algorithm to select an optimal set of sensors, i.e., the
    right-hand side of (25) must be greater than the threshold probability P th to
    avoid scheduling a longer sensing period for feature detection (see line 17 in
    Algorithm 2). Algorithm 2. Joint optimization of sensor selection and sensing
    time. Initialize the desired detection parameters P FA , P MD , P th 2: Initialize
    the set of available sensors Φ={ χ 1 ,…, χ n s } Initialize the optimal set of
    sensors Ω ∗ ←∅ 4: Initialize the set of sensing time TT S ∈[1,2,3,4,5] ms Initialize
    the sensing overhead O ∗ ←∞ 6: while Φ≠∅ do χ ∗ ←arg max χ i ∈Φ { P i } // P i
    = P R ⋅ e Y i 8: Φ←Φ∖{ χ ∗ } Ω← Ω ∗ ∪{ χ ∗ } 10: for each T S ∈ TT S do T D (Ω,
    T S )← T S +|Ω|× T R 12: N ∗ ←min{max{IE[N(Ω, P FA , P MD , T S )],1}, N max }
    O E (Ω, T S )← N ∗ × T D (Ω, T S ) 14: end for T ∗ S ←arg min T S ∈ T T S { O
    E (Ω, T S )} 16: O min ← O E (Ω, T ∗ S ) if O min > O ∗ andPr( N opt ≤ N max )≥
    P th then 18: return ( Ω ∗ , T ∗ S ) else 20: Ω ∗ ←Ω O ∗ ← O min 22: end if end
    while 5.5.1 Finding the Optimal Threshold P ∗ th Without reaching one of the thresholds,
    Γ u and Γ l , the fusion center must schedule a fine-sensing period. Thus, for
    a given threshold value of P th , the total expected sensing overhead to meet
    the detection requirements can be expressed as: O total = O E ( P th )+(1− P th
    )⋅ O F , (26) View Source where O E ( P th ) is the sensing overhead of energy
    detection with cooperative sensing and sensing scheduling, subject to the constraint
    P th ; a higher P th incurs a larger overhead. On the other hand, O F is the sensing
    overhead of feature detection, which is assumed to be a constant, e.g., feature
    detection takes up to 26 ms for DTV signal detection. The first and second terms
    in (26) are monotonically increasing and decreasing functions of P th . Therefore,
    there exists an optimal P ∗ th that minimizes the total sensing overhead. We will
    study the impact of P th on the sensing overhead in Section 6. 5.6 Algorithm for
    Joint Optimization of Sensor Selection and Sensing Time We now turn to the problem
    of finding an optimal set of sensors, as well as an optimal sensing time, that
    together minimize the average sensing overhead. Let Φ denote the total set of
    sensors in the network available for cooperative sensing with estimated RSS distributions
    via training. The key idea is to utilize a subset Ω⊆Φ of sensors with relatively
    high-average RSS values, and also select the sensing time T S , thus minimizing
    both the number of cooperating sensors and the number of sensing periods in incumbent
    detection, while guaranteeing the detectability requirements. Given a subset of
    sensors, Ω , and sensing time T S , the total expected sensing overhead before
    the fusion center accumulates enough sensing samples can be expressed as: O E
    (Ω, T S )=min{max{IE[N(Ω)],1}, N max }× T D (Ω, T S ), (27) View Source where
    IE[N(Ω)] is the expected number of sensing periods necessary to meet the detection
    requirement with a set Ω of sensors. T D (Ω, T S ) is the total time duration
    for a single sensing, which consists of a sensing period and a measurement reporting
    period: T D (Ω, T S )= T S +|Ω|× T R , (28) View Source where T S is the sensing
    duration and T R is the duration of a time slot for reporting the sensing result
    to the fusion center. Then, based on (25), (27), and (28), our problem of finding
    an optimal set of sensors and optimal sensing time can be formally stated as:
    Find subjectto ( Ω ∗ , T ∗ S )=arg min Ω⊆Φ, T S ∈ T T S O E (Ω, T S ) Prob( N
    opt ≤ N max )≥ P th , P FA ≤α, P MD ≤β, View Source where α and β are the desired
    false-alarm and misdetection probabilities. Unfortunately, there is no analytical
    solution to this problem, and finding an optimal solution is computationally prohibitive
    as it requires an exhaustive combinatorial search. For this, we propose a simple
    algorithm as described in Algorithm 2. The idea is that we sort the sensors in
    descending order of average RSS and then add sensors to Ω from the top of the
    list until the total sensing overhead increases by adding another sensor, and
    the detection constraint (i.e., P th ) is satisfied (line 17). The algorithm provides
    an optimal solution with a low computational overhead, i.e., O(|Φ|⋅| TT S |) ,
    where |Φ| and | TT S | are the total number of available sensors and sensing times,
    respectively. On the other hand, the exhaustive search requires O( 2 |Φ|⋅| T T
    S | −1) . The algorithm is shown to reduce the sensing overhead significantly
    (see Section 6.3), while guaranteeing the desired level of detection performance.
    SECTION 6 Performance Evaluation This section comparatively evaluates the proposed
    algorithms using MATLAB-based simulation under realistic wireless environments.
    6.1 Simulation Setup We consider a DSA network with a large-scale primary transmitter
    (e.g., a TV transmitter) and multiple SUs (or sensors). To demonstrate the efficacy
    of the proposed schemes in realistic wireless environments, we consider the network
    parameters, which are used widely in IEEE 802.22 WRANs. We assume that the noise
    power is N B i =−95.2± Δ i dBm, which is commonly used in IEEE 802.22 WRANs [14],
    where Δ i is the noise uncertainty (in dB) at sensor i and B is the channel bandwidth.
    The channel bandwidth is set to B=6 MHz as in TV channels. We consider shadow
    fading with dB-spread σ dB =5.5 (dB), which is also typical in rural area networks
    such as 802.22 WRANs [46]. Throughout the simulation, we assume that the time
    slot duration for reporting a RSS measurement ( T R ) is fixed at 0.2 ms, and
    assume n s =10 cooperating sensors, unless specified otherwise. For RSS profiling,
    10 4 samples for estimating the RSS distributions. This consumes only a total
    sensing time of 10 seconds, assuming the sensing time of T S =1 ms. We fix the
    desired false-alarm probability P FA =0.01 throughout the evaluation. To demonstrate
    the benefits of the proposed sensing algorithms, we evaluate the performance of
    the following decision- and data-fusion rules: OR-rule, Equal Gain Combining (EGC),
    Maximal Ratio Combining (MRC), and RSS-profile-based sensing. The OR-rule is a
    simple decision fusion rule, in which the fusion center concludes that there exists
    a primary signal if at least one sensor reports the existence of a primary signal.
    The other two data-fusion rules, EGC and MRC, are different in that EGC does not
    require any channel state information at the sensors, whereas MRC requires channel
    state information. EGC and MRC are known to be near-optimal in high and low SNR
    regions, respectively [57], serving as the performance benchmark. 6.2 Performance
    of RSS-Profile-Based Detection for One-Time Sensing We first evaluate the performance
    of the proposed LDA-based detection scheme for one-time sensing, assuming that
    the sensors are randomly selected. 6.2.1 Performance Comparison Fig. 10 compares
    the performance of the testing schemes for different average RSS values. As expected,
    misdetection probability, P MD , increases as average primary signal strength,
    P R , decreases for all the tested schemes. The figure also indicates that the
    OR-rule 8 performs worst because it does not fully utilize the sensing results.
    Fig. 10. Performance of detection schemes for one-time sensing with 10 sensors.
    RSS-profile-based cooperative sensing (denoted as LDA) shows near-optimal performance
    even in a very low SNR environment. Show All Among the data-fusion rules, MRC
    outperforms EGC because MRC exploits the SNR information at the sensors, whereas
    EGC does not require channel estimation. It also shows that our RSS-profile-based
    detection (denoted as LDA) significantly outperforms the OR-rule and EGC, thanks
    to its ability to set the near-optimal detection threshold (i.e., an ( n s −1)
    -dimensional hyperplane) based on the spatial RSS profile, which incurs only a
    minimal training overhead at the time of sensor deployment. More importantly,
    the performance of the RSS-profile-based scheme is close to MRC, demonstrating
    its near-optimal detection performance despite its simple detection rule. In practice,
    sensors can be compromised by attackers or malfunctioning due to hardware or software
    defects. Fig. 11 compares the incumbent detection performance (for P FA fixed
    at 0.01) under different attack scenarios. In the figure, sensing reports are
    negatively biased by a certain magnitude (in dBm) (denoted as attack strength)
    to emulate collaborative attack scenarios (or erroneous sensors) [29]. The figure
    shows that the proposed RSS-profile-based spectrum sensing keeps the misdetection
    probability low for reasonably strong attack strengths (i.e., <5 dB), demonstrating
    its high robustness. In practice, when the attack strength grows beyond a certain
    limit, the fusion center can detect such deviations very easily, thus preserving
    the detection performance. Fig. 11. Effect of attacks on incumbent detection performance.
    RSS-profile-based spectrum sensing tolerates sensing-targeted attacks well thanks
    to its ability to exploit spatial diversity in spectrum sensing. Show All 6.2.2
    Effects of Noise Uncertainty Noise uncertainty is one of the main obstacles in
    using energy detection in a very low SNR environment such as 802.22 WRANs [48].
    Noise uncertainty creates a performance barrier called SN R wall , below which
    signal detection is infeasible irrespective of the sensing time or the number
    of cooperative sensors. SN R wall , in fact, depends solely on noise uncertainty
    as [48], specifically, SN R wall = ρ 2 −1 ρ , where ρ= 10 Δ/10 and Δ (in dB) is
    the noise uncertainty. We assume that the noise uncertainty is bounded by 1 dB
    for all sensors,9 with the corresponding SN R wall of −98.5 dBm. Fig. 12 shows
    that, when the OR-rule is employed, the detector completely fails to detect the
    signals below SN R wall under the AWGN channel. However, under a practical assumption
    that noise uncertainty is independent at the sensors, the RSS-profile-based detection
    works well for signals below SN R wall , even with a one-time sensing, thanks
    to its ability to exploit spatial RSS diversity. The detection performance improves
    further under the shadow fading, i.e., σ dB =5.5 dB, as the shadow fading increases
    the spatial RSS diversity. Fig. 12. Effect of noise uncertainty for AWGN and shadow
    fading environments. RSS-profile-based spectrum sensing works well even when the
    average RSS is below SN R wall , thus overcoming noise uncertainty. Show All 6.2.3
    Effects of Sensing Time Fig. 13 plots the misdetection performance for various
    sensing time durations, T S ∈[1,20] ms. As we observed in (6), the detection performance
    depends not only on the average primary signal strength, P R , but also on the
    sensing time. The figure shows that, as the sensing time increases, the misdetection
    rate decreases for all tested values of P R . This is because the more samples
    the detector is provided with, the more accurate the sensing results, thus eliminating
    ambiguity regarding the existence of a primary signal. As described in Algorithm
    2, the fusion center finds a combination of an optimal set of sensors and an optimal
    sensing time T ∗ S that minimizes the average sensing overhead. Fig. 13. Impact
    of sensing time on detection performance. The amount of time a sensor spends on
    sensing for one-time sensing affects the detection performance. Show All 6.3 Performance
    of Online Sensing Scheduling with Optimal Sensor Selection We now evaluate the
    performance of the proposed online sensing scheduling by jointly optimizing the
    selection of sensors and sensing time. 6.3.1 Impact on Incumbent Detection Delay
    Fig. 14 shows the average number of sensing periods that needs to be scheduled
    to meet the detection requirements. The figure shows that our SPRT-based online
    sensing scheduling algorithm significantly reduces the average number of sensing
    periods compared to the OR-rule-based scheduling scheme, thanks to its ability
    to fully utilize the sensing results via RSS profiles. As a result, our algorithm
    expands the feasible region of the energy detector significantly. On the other
    hand, the OR-rule benefits relatively less from scheduling sensing periods because
    RSSs do not change over time (except the measurement errors) at fixed sensor locations.
    Fig. 14. Average number of sensing periods scheduled to meet the detectability
    requirement of P MD , P FA ≤0.01 . The proposed algorithm significantly reduces
    the sensing overhead. Show All 6.3.2 Impact on Sensing Overhead We now demonstrate
    the performance of our optimal sensor-selection algorithm in terms of the reduction
    of sensing overhead. The sensing overhead is defined as the average fraction of
    time (in percent) spent on fast sensing (i.e., energy detection) within a 2-second
    interval, which is the channel detection time (CDT) period (see (27)). Here, we
    set the threshold P th =0.95 . Fig. 15 shows the sensing time overhead for various
    sensing durations T S ∈[1,3,5] ms. The figure shows that a larger sensing time,
    i.e., T S =5 ms, is favored in relatively low SNR environments (i.e., P R <−126
    dBm), whereas a smaller sensing time, i.e., T S =1 ms, is desirable in relatively
    high SNR environments, in which sensing scheduling may not be needed to achieve
    the detection requirements. This is because in a low SNR environment, a larger
    sensing duration can reduce the number of sensing periods necessary to meet the
    detection requirement. On the other hand, in a high SNR environment, even one-time
    sensing might suffice to meet the requirement, so a short sensing duration is
    more beneficial in minimizing the average overhead. Fig. 15. Impact of sensing
    time on sensing overhead. A longer sensing time becomes more desirable as the
    average primary signal strength decreases, and vice versa. Show All Fig. 16 compares
    the average sensing-time overhead, i.e., the fraction of time spent on spectrum
    sensing and reporting the sensing results within a sensing interval, with the
    optimal selection of sensors and sensing time against the one without sensor selection.
    A sensing interval is assumed to be 2 s, which is equivalent to CDT in IEEE 802.22
    WRANs. The figure shows that our algorithm minimizes average sensing overhead
    by up to 94 percent because it selects only a subset of sensors with high average
    RSSs, thus minimizing both the number of sensing rounds and the sensing result
    reporting time. Fig. 16. Performance of the optimal sensor selection algorithm.
    Our proposed sensor selection algorithm (a) reduces the sensing overhead significantly
    over the algorithm without sensor selection, and (b) utilizes only a small subset
    of the sensors (i.e., <15 percent). The simulation parameters are set to P th
    =0.95 and T S =5 ms. Show All 6.3.3 Impact of P ∗ th on Sensing Overhead We now
    evaluate the impact of the threshold P th on the sensing overhead. Fig. 17 plots
    the sensing-time overhead and the number of cooperative sensors used in our optimal
    sensor selection algorithm, for the cases in which the total number of sensors
    in the secondary networks is n s =20 and n s =50 , respectively. Here, we assume
    that the sensing-time overhead of feature detection is O F =20 ms. The sensing
    overhead is calculated using (26) in Section 5. A small P th means that the fusion
    center relies more on feature detection, and vice versa; the fusion center may
    need to employ more sensors and schedule more sensing periods for energy detection
    as P th increases. When n s =20 , the number of sensors and the total sensing
    overhead for energy detection, O E , increases with P th . On the other hand,
    the sensing overhead for feature detection, i.e., (1− P th )⋅ O F , decreases
    linearly with P th , resulting in Fig. 17a. Fig. 17. Impact of P th on sensing
    overhead performance for a given detection requirement. (a)-(b): With a small
    number of sensors, the fusion center must use both energy and feature detection
    by adapting P th based on the network environment. (c)-(d): On the other hand,
    with a large number of sensors, the fusion center must exploit high-performing
    sensors for energy detection, to minimize the overall sensing overhead. The simulation
    parameters are set to T S =5 ms and P R =−130 dBm. Show All When n s =50 , the
    fusion center can meet the detection requirement with only a small number of sensors
    selected by the proposed sensor selection algorithm. Thus, the number of sensors
    is stable over the entire range of P th , as shown in Fig. 17d. Due to the high
    detection performance of the selected sensors, the number of sensing periods required
    to meet the detection requirement does not increases with P th . On the other
    hand, the overhead of feature detection only decreases with P th , resulting in
    a monotonically decreasing sensing overhead, as shown in Fig. 17c. In summary,
    when there is a sufficiently large number of sensors in the secondary network,
    the fusion center may prefer to rely on energy detection, and vice versa, to minimize
    the overall sensing overhead. SECTION 7 Conclusion In this paper, we proposed
    to jointly optimize cooperative sensing and sensing scheduling, to minimize the
    average sensing overhead, while guaranteeing the desired level of detection requirement.
    Our spectrum sensing framework exploits the spatiotemporal variations in received
    primary signal strength by constructing a spatial RSS profile for an incumbent
    signal. We showed that the RSS distribution of a primary signal can be accurately
    approximated as a Gaussian distribution in low SNR environments and analyzed the
    detection performance of the RSS-profile-based detection scheme. We have also
    shown that there is virtually no correlation between sensing reports from stationary
    sensors, regardless of their physical locations. Based on these observations,
    we formulated the problem of sensing scheduling as a sequential hypothesis test,
    which finds an optimal time to stop scheduling sensing subject to given detection
    requirements. We also proposed an optimal algorithm that minimizes the average
    sensing overhead via optimal selection of sensors and sensing duration, by balancing
    the tradeoff between detection performance and sensing overhead. Our evaluation
    results have shown that the proposed sensing algorithms reduce sensing overhead
    by up to 65 percent in practical scenarios. Authors Figures References Citations
    Keywords Metrics Footnotes More Like This Multi-sensor quickest detection by exploiting
    radio correlation 21st European Signal Processing Conference (EUSIPCO 2013) Published:
    2013 Signal Correlation Modeling in Acoustic Vector Sensor Arrays IEEE Transactions
    on Signal Processing Published: 2009 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD
    Purchase Details PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information
    COMMUNICATIONS PREFERENCES PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help?
    US & CANADA: +1 800 678 4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow
    About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination
    Policy | IEEE Ethics Reporting | Sitemap | IEEE Privacy Policy A not-for-profit
    organization, IEEE is the world''s largest technical professional organization
    dedicated to advancing technology for the benefit of humanity. © Copyright 2024
    IEEE - All rights reserved.'
  inline_citation: '>'
  journal: IEEE transactions on mobile computing
  limitations: '>'
  pdf_link: null
  publication_year: 2013
  relevance_score1: 0
  relevance_score2: 0
  title: Joint Optimal Sensor Selection and Scheduling in Dynamic Spectrum Access
    Networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1016/j.jnca.2017.11.003
  analysis: '>'
  authors:
  - A. M. Koushik
  - Elizabeth Serena Bentley
  - Fei Hu
  - Sunil Kumar
  citation_count: 8
  full_citation: '>'
  full_text: '>

    Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related work 3. Reinforcement learning
    for spectrum handoff 4. Transfer learning for spectrum handoff 5. Testbed implementation
    6. Expertimental results 7. Conclusion Acknowledgements and disclaimer References
    Show full outline Cited by (10) Figures (18) Show 12 more figures Tables (3) Table
    1 Table 2 Table 3 Journal of Network and Computer Applications Volume 106, 15
    March 2018, Pages 68-77 A hardware testbed for learning-based spectrum handoff
    in cognitive radio networks Author links open overlay panel Koushik A.M. a, Elizabeth
    Bentley b, Fei Hu a, Sunil Kumar c Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.jnca.2017.11.003
    Get rights and content Abstract A real-time cognitive radio network (CRN) testbed
    is implemented by using the universal software radio peripheral (USRP) and GNU
    Radio to demonstrate the use of reinforcement learning and transfer learning schemes
    for spectrum handoff decisions. By considering the channel status (idle or occupied)
    and channel condition (in terms of packet error rate), the sender node performs
    the learning-based spectrum handoff. In reinforcement learning, the number of
    network observations required to achieve the optimal decisions is often prohibitively
    high, due to the complex CRN environment. When a node experiences new channel
    conditions, the learning process is restarted from scratch even when the similar
    channel condition has been experienced before. To alleviate this issue, a transfer
    learning based spectrum handoff scheme is implemented, which enables a node to
    learn from its neighboring node(s) to improve its performance. In transfer learning,
    the node searches for an expert node in the network. If an expert node is found,
    the node requests the Q-table from the expert node for making its spectrum handoff
    decisions. If an expert node cannot be found, the node learns the spectrum handoff
    strategy on its own by using the reinforcement learning. Our experimental results
    demonstrate that the machine learning based spectrum handoff performs better in
    the long term and effectively utilizes the available spectrum. In addition, the
    transfer learning requires less number of packet transmissions to achieve an optimal
    solution, compared to the reinforcement learning.1 Previous article in issue Next
    article in issue Keywords Spectrum handoffTransfer learningReinforcement learningQ
    learningCognitive Radio Network (CRN)GNU radioUSRPTestbed 1. Introduction The
    cognitive radio network (CRN) is considered as a promising solution to address
    the issue of spectrum scarcity and effective spectrum utilization. In CRN, the
    secondary users (SU) are allowed to occupy the spectrum when it is not used by
    the primary users (PU), which is known as the dynamic spectrum access (DSA) (Crohas,
    2008). However, the frequent interruptions from PUs in CRN force the SUs to perform
    handoff to other idle channels. The spectrum handoff can also occur due to node
    mobility (Wang and Wang, 2008, Song and Xie, 2011, Kumar et al., 2016). Thus,
    it is very important for SUs to keep monitoring the link status (due to temporal
    mobility) and link quality (spatial mobility). In this paper, we implement the
    spectrum handoff process in a CRN testbed using the universal software radio peripheral
    (USRP) boards and GNU Radio. Our main goal is to enable each SU node to learn
    the spectrum handoff based on its past observations. Since CRN is able to learn
    and reason the radio environment through a cognitive engine, the use of machine
    learning algorithms can enhance the learning and reasoning of the spectrum handoff
    process. Here, a learning model represents the process of acquiring the knowledge
    by interacting with the environment, to improve the future decisions. In recent
    years, the machine learning algorithms have been widely used in CRN (Hossain et
    al., 2014, Bkassiny et al., 2013). In this paper, we implement the reinforcement
    learning (RL) and transfer learning (TL) based spectrum handoff schemes in CRN,
    by using the GNU Radio programming environment (Ke-Yu and Chen, 2006) for multimedia
    transmissions (such as real-time video). Note that a myopic spectrum handoff scheme
    may not achieve the best performance in the long-term, since it tends to select
    the channels which maximize the short-term reward. When an SU learns about the
    spectrum handoff decisions on its own by using the RL algorithm (Wu et al., 2014),
    it typically needs more time to converge to the optimal solution, which is undesirable
    for real-time data transmission. Instead, a new node can seek help from other
    nodes in the network, which are termed as the ‘expert nodes’ (Galindo-Serrano
    et al., 2010, Giupponi et al., 2010, Dohler et al., 2010). Specifically, when
    a new (or learning) node joins the network, it searches for an expert node in
    the network by using the control channel. If an expert node is found, it shares
    its optimal strategy with the new node to help with the spectrum handoff decisions.
    This is termed as the ‘transfer learning’ (TL). When the communication tasks are
    similar between the learning and expert nodes, the knowledge transferred from
    the expert node enables the learning node to start communications from the optimal
    condition without taking much time to acquire knowledge about the RF environment,
    which significantly enhances its performance. If there is no expert node in the
    network, the new node learns about the environment on its own and builds the optimal
    strategy by using RL. We address the following issues in building a hardware testbed
    for intelligent spectrum handoff. (i) How often should the node sense the channel?
    (ii) How often should the learning algorithm be updated? (iii) How long should
    the learning node wait for the response from the expert node? Since the GNU Radio
    software does not have any pre-defined machine learning functions, all the modules
    need to be built from the scratch. The main contributions of this paper are twofold:
    (1) Real-time CRN Testbed: The USRP and GNU Radio based testbed, which uses the
    directional antennas, is built for multimedia data transmissions. Using USRP 210
    series we have implemented spectrum sensing, spectrum handoff and other CRN functions.
    All the communication modules are built using Python and C ++ in the GNU Radio
    environment. In addition, we have implemented the machine learning modules using
    Python on the host level of GNU Radio. Thus our CRN testbed serves as a platform
    for implementing the advanced CRN protocols and machine learning algorithms. (2)
    TL-based spectrum handoff: RL is used when the node is new to the network and
    cannot find an expert node. In our testbed, we use the Q-learning as the RL scheme
    to perform spectrum handoff due to its ability to explore and exploit the best
    actions for each state. To enhance the process of adaptation to the radio environment
    and to achieve optimal condition faster, we have implemented TL algorithm. There
    are several TL approaches, such as the inverse RL, apprenticeship learning, etc.
    We have used a typical Docitive learning model, where the optimal Q-table is transferred
    from the expert node to the learning node. The rest of this paper is organized
    as follows: The related work is summarized in Section II. The RL and TL based
    spectrum handoff schemes are explained in Sections III and IV, respectively. The
    CRN testbed set up and design challenges are described in Section V. The experimental
    results are presented in Section VI, followed by the conclusions in Section VII.
    2. Related work Several CRN testbeds using USRP and GNU Radio, with spectrum sensing,
    dynamic spectrum access and interference management functions, have been discussed
    in (Crohas, 2008, Patcha, 2011, Aftab and Mufti, 2011). A CRN testbed with spectrum
    sensing function was implemented in (Ke-Yu and Chen, 2006). The authors also extended
    their work to observe the burst errors in OFDM using Markov traffic models, and
    implemented a 4-node CRN network to observe the effect of interference on the
    delay performance. A comparative study of different spectrum sensing techniques
    using the USRP and GNU Radio was performed in (Galindo-Serrano et al., 2010).
    Researchers at UC Berkeley (Mishra et al., 2005) designed a CRN testbed by using
    BEE2 and a multi-FPGA emulation engine, to verify different sensing processes
    at the physical layer in real-time system. They developed two CRN testbeds with
    8 WARP nodes and 11 USRP nodes. A large-scale CRN testbed with distributed spectrum
    sensing was developed in (Qiu et al., 2012). The researchers at Virginia Tech
    (Newman et al., 2009) developed the VT-CORNET testbed, for the development, testing
    and evaluation of several cognitive radio applications. However, only a few testbeds
    have used the machine learning algorithms in CRN. Authors in (Anil et al., 2014)
    developed machine learning plugins (i.e., linear logistic regression classifiers),
    by using the GNU Radio companion and Python coding. A Q-learning based interference
    management in cognitive femtocell networks was developed in (Elsayed and Mohamed,
    2015) using the USRP and GNU Radio. A practical signal detection and classification
    scheme in GNU Radio was developed in (O’shea et al., 2007) by using the artificial
    neural networks (ANN). The fusion of signal detection and classification algorithms.
    A Q-learning based channel allocation platform was proposed in (Hosey et al.,
    2009) for a 4-node CRN, where each node acts individually without collaborating
    with other nodes, to avoid the overhead introduced in cooperative spectrum access.
    In (Ren et al., 2010), a Q-learning based spectrum management system for a Markovian
    modeled, large-scale multi-agent network was implemented, and the success rate
    of packet transmission was improved. Most of the existing testbeds have used the
    RL based models. Ours is the first testbed to implement a transfer learning algorithm
    to enhance the learning speed of the network, which can tune its strategy to the
    dynamic variations of the channel. 3. Reinforcement learning for spectrum handoff
    The RL (Sutton and Barto, 1998) is a prominent unsupervised learning schemes,
    which can enable a node to learn autonomously in CRN environment (Bkassiny et
    al., 2013, Sunderland, 2010). The RL is a special case of the Markov decision
    process (MDP), which can be stated as a tuple (S, A, T, R). Here S corresponds
    to the finite set of states for the node; A is the finite set of actions available
    for a node in each state; T defines the transition probability, (sj|si, a), from
    state si to state sj, as a result of action a ∈ A; R denotes the reward, R(s,
    a), observed when action, a ∈ A is performed while in state, s ∈ S. After a series
    of actions, a ∈ A for state, s ∈ S, the system reaches an optimal condition by
    building an optimal policy π(s,a), which defines the probability of taking an
    action a in state s. In our testbed, the tuple (S, A, T, R) is defined as follows:
    States, S: When occupying a channel at iteration t, the node observes the state
    as . Here, denotes the channel condition (in terms PER) and denotes the channel
    status (idle or busy). Action, A: The actions considered for spectrum handoff
    are: (1) Stay and transmit in the same channel; (2) Perform spectrum handoff to
    another vacant channel upon interruption from PU, or when channel condition deteriorates.
    Reward, R is defined as the immediate reward incurred for the multimedia transmission.
    When the channel condition is good and the action taken is transmission ( ), we
    assign the reward of 10. When channel condition is bad and action taken is spectrum
    handoff ( ), the reward is 5. For any other combination of state and action the
    reward is −5, which indicates that the action was not desired in the observed
    state. Transition probability, T cannot be determined since the radio environment
    is dynamic. We have adopted the Q-learning based reinforcement learning. The Q-learning
    algorithm estimates the Q-values, , for the joint state-action pairs . The Q-table
    determines how good it is for a given agent to perform a certain action under
    a given state. The one-step Q-table update equation is defined as, (1) where are
    the state, action, and reward, respectively, at the iteration of the learning
    process. Here, is the discount factor that maximizes the total expected rewards
    by controlling the influence of previous reward on current action; is the learning
    rate defining how much of the newly acquired information can be used for strengthening
    the Q-value so that it attains the optimal value, . All the state-action pairs
    need to be updated continuously to achieve the optimal condition, by using the
    –greedy algorithm or soft-max policy, which can lead to the optimal policy, .
    Fig. 1 shows a typical diagram of Q-learning based RL in spectrum handoff control
    of CRN testbed. Download : Download high-res image (212KB) Download : Download
    full-size image Fig. 1. Q-learning based spectrum handoff in CRN. 4. Transfer
    learning for spectrum handoff The TL (Galindo-Serrano et al., 2010, Giupponi et
    al., 2010, Dohler et al., 2010) is analogous to multi-agent learning where an
    existing node in the network serves as a teacher to the newly joined nodes. Initially,
    RL is used which needs no knowledge about its environment. Thus, the node learns
    about its environment by itself and builds the acquired knowledge. To achieve
    this, the node experiments with each available action, a ∈ A, in every encountered
    state, and records the reward, R(t). This phase is called "exploration". After
    exploring all the state-action pairs, the node starts to strengthen the set of
    state-action pairs which are given the highest reward compared to other state-action
    pairs. This is called the “exploitation” phase. In CRN, an SU uses the available
    idle spectrum and cannot afford to spend lot of time in understanding the radio
    environment. So the node should curb the exploration phase to effectively utilize
    the available idle duration of the channel. Therefore, we implement the TL in
    our testbed, where a new node in the network (called learning node) learns the
    spectrum handoff strategy from an existing node (called the expert node). Fig.
    2 shows the typical structure of TL, where the node first learns the optimal policy
    through its experience and actions (by using RL), and in the second stage it shares
    its handoff strategy with the new node in the network. To accept the handoff knowledge
    transferred from the expert node, the new node must have similar requirements
    (such as QoS) and face similar RF environment as the expert node. However, in
    dynamic channel conditions, the expert node cannot match exactly with the learning
    node. In order to keep track of the dynamic channel conditions, the learning model,
    therefore, needs to be updated, either by the node itself or by taking help of
    expert nodes, to increase the spectrum efficiency. More importantly, the learning
    node should be able to fine tune the expert knowledge according to its own channel
    conditions. The red dashed line in Fig. 2 represents the process where the expert
    node continuously helps the new node to solve new tasks. Download : Download high-res
    image (274KB) Download : Download full-size image Fig. 2. Transfer learning based
    handoff in cognitive radio environment. We consider spectrum handoff as a Markov
    decision process (MDP) with tuple (S, A, T, R) and share the same action space
    S ×R. KsL represents the knowledge collected from the L node’s spectrum handoff
    schemes and Kt represents the knowledge which the expert node may acquire (if
    any) when continuously helping the learning node. Hence the transfer phase is
    defined as (Universal software radio peripheral USRP, 2008), (2) where, Ktransfer
    is the final knowledge acquired by the expert node, and Kt is zero in our case
    since the expert’s knowledge is received only once and no further updates are
    given based on future RF conditions that the new node encounters. The learning
    algorithm of the new node can be defined as: (3) Typically, every expert node
    is a learning node in the beginning. A node becomes an expert node either by learning
    on its own or from another expert node in the network. During the learning phase,
    the node visits each state-action pair. For all s ∈ S and a ∈ A, the learning
    rate {α(st,at)} is defined such that [27] (4) The node eventually becomes an expert
    node when the Q-learning algorithm converges with probability of 1. Taking the
    advice from the expert, the learning node adopts the Q-learning algorithm, and
    each state-action pair is visited for some time. The expert node shares the optimal
    strategy with the learner node by means of ’Q-table’ exchange. The learner node
    adds the optimal Q-table to its initialized Q-table as follows, (5) Above method
    is also called "early advising" [26] since the expert node shares its knowledge
    with the learning node at the beginning of the connection, but stops guiding it
    down the course of its connection. In our testbed implementation, when the new
    node joins the network, it broadcasts a "Hello message" to all the nodes in the
    network to search the expert node, and requests for optimized Q-value, Q∗. The
    expert node in the network, upon receiving the "Hello message", shares its currently
    updated and optimized Q-value with the new node. The new node can directly use
    the received Q-value in its transmission and update its Q-values according to
    the channel conditions it experiences. Eventually the new node changes its role
    from a learning node to an expert node and can share its learned Q-values with
    another new node(s). 5. Testbed implementation 5.1. Testbed environment GNU radio
    (Blossom and Radio, 2004) is an open source programming platform for implementing
    the communication and signal processing applications in software defined radio
    (SDR). The GNU radio applications are mainly written and developed in Python,
    which is an object-oriented high-level language. It provides a user-friendly front
    end platform. The core applications are written in C++ and Python from the backend
    by using simplified wrapper and interface grabber (SWIG). The advantage of using
    Python at the front end is that it need not be compiled every time it executes
    the code, thereby reducing the delay introduced due to compilation. In addition,
    Python can easily run the C codes as the natively compiled codes by using SWIG.
    In the USRP board, very high speed hardware description language (VHDL) is used,
    in the front end of the field programmable array (FPGA). The basic GNU radio architecture
    is shown in Fig. 3. Download : Download high-res image (201KB) Download : Download
    full-size image Fig. 3. GNU Radio Architecture. The USRP (Universal software radio
    peripheral USRP, 2008) (Ettus Research N210) has a small motherboard containing
    up to four 14-bit 128 M sample/sec DACs and 12-bit 64 M sample/sec ADCs. The motherboard
    supports four daughter boards, two for transmission and two for reception, as
    shown in Fig. 4. Download : Download high-res image (178KB) Download : Download
    full-size image Fig. 4. Architecture of N210 USRP module (Universal software radio
    peripheral USRP, 2008). 5.2. Network setup Our network setup is shown in Fig.
    5. It can be easily extended to a larger network. We have used three channels
    (one control and two data channels), CH-C, CH1 and, CH2, and a real-time video
    transmission with a data rate of 720kbps encoded by H.264 AVC encoder. The control
    channel, CH-C is used by (1) the receiver node to send ACK to the sender node;
    (2) the learning node to request the optimal strategy from the expert node using
    ’Hello Message’; and (3) the expert node to share its optimal strategy with the
    learning node. The data channel is used to transmit the multimedia video. Table
    1 shows the network parameters used in our testbed, which can be adjusted based
    on the user’s network conditions. Download : Download high-res image (408KB) Download
    : Download full-size image Fig. 5. The network setup. Table 1. Network parameters
    for CRN testbed. Parameters Values Number of SUs 4 Number of PUs 1 Common control
    channel 2.4 GHz,1.2 GHz Available data channels 2.425 GHz, 2.475 GHz, 1.25 GHz,1.26 GHz
    Modulation GMSK Data rate 720 Kbps Packet size 1500 bytes ACK 1 NACK 0 or ‘P′
    Hello-Message ‘Q′ Type of data H.264 encoded real time video 5.3. Implementation
    of reinforcement learning scheme Fig. 6 shows the experimental setup for implementing
    RL, which is based on Q learning algorithm. We define and set up the following
    parameters - State (S) is defined based on two parameters explained in Section
    III: (1) Channel condition (s0) is based on the PER value of the link sent by
    the receiver during the communications. A value of 0 (1) represents poor (good)
    channel, where a poor channel condition implies a possible interruption from other
    SUs; (2) Channel status (s1) is based on PU traffic patterns, with a value of
    0 (channel is busy), or 1 (channel is idle). The action set (A) represents one
    of two actions: (1) Spectrum handoff (a0): When the channel is busy or experiencing
    strong interruption from other nodes, the node changes the channel from channel
    CH1 to channel CH2; (2) Transmit (a1): When the channel is idle, the node transmits
    data. For all the state-action pairs, the Q-table is shown in Table 2. Download
    : Download high-res image (176KB) Download : Download full-size image Fig. 6.
    The reinforcement learning setup for CRN testbed. Table 2. Q-Table description
    and rewards for each state-action pair. States Channel condition Reward (Best
    action) Reward (for wrong action) [0,0] 1 Very Poor 5 (Spectrum Handoff) 1 (Transmit)
    [0,1] 2 Poor 5 (Spectrum Handoff) 1 (Transmit) [1,0] 3 Poor 5 (Spectrum Handoff)
    1 (Transmit) [1,1] 4 Very Good 10 (Transmit) −5 (Handoff) In addition to the above
    parameters, the few more parameters are set up, namely, the discount factor (
    ), the learning rate ( ), and temperature ( ). The value of represents the impact
    of future reward in achieving the optimal solution. It was shown in (Kumar et
    al., 2016) that does not help in reducing the number of iterations that the node
    would take to reach the optimal solution. In our application, a smaller value
    of (close to 0) also did not help in achieving an optimal solution because it
    considers only the current rewards. Therefore, we have selected a value of 0.1
    for Regardless of the initial value of , the node achieves the optimal condition
    as long as a robust value of is selected (Kumar et al., 2016). Finally, temperature
    ( is set to ), where is the number of iterations of the learning algorithm. As
    ‘k′ increases, the value of decreases thereby increasing the probability of choosing
    the action that can provide the highest reward. Initially, the new node selects
    the channel CH1 and senses its status. If the channel is idle, the node starts
    transmitting; Otherwise, it switches to a new channel CH2. If an expert node cannot
    be found, the new node learns the channel characteristics on its own, and sets
    the Q-table matrix to zero. The node transmits only one packet in each iteration
    until it achieves the optimal condition. After reaching the optimal condition,
    the node transmits multiple packets per iteration. For every iteration, the sending
    node senses the channel and determines the channel status. For every 500 packets,
    the receiver node sends the feedback to the sender indicating the condition of
    the channel. In each iteration, the node encounters a state, s ∈ S, takes action
    a ∈ A, and gets a reward, R. The Q-table is updated with a new reward value in
    each iteration, which strengthens an action for a particular state. The sender
    node detects the PU node(s) by sensing the channel. If there is an interruption
    from other SU nodes and high PER, the receiver node sends NACK with a sequence
    of 0 s indicating that there is an interruption. Once the sender node receives
    NACK or detects the presence of a PU, it performs spectrum handoff to another
    idle channel. If the receiver node sends ACK with a sequence of 1 s, the sender
    node continues its transmission. 5.4. Implementation of transfer learning scheme
    In TL-based scheme, an expert node in the network shares its optimal Q-table with
    the new node. In the beginning, a new node uses a control channel to send the
    ‘Hello’ message containing a sequence of character ’Q’, and waits for 5 s. If
    an expert node receives the ‘Hello’ message, it sends the Q-table to the new node,
    with the packet header containing the character ’Q’ that indicates it is different
    from every other packet (data packet, ACK, or NACK). If the Q-table is not received
    within 5 s, the new node assumes that no expert node is available and shifts to
    the RL mode. Upon receiving the Q-table from the expert node, the new node selects
    the channel, CH1 and senses its status. If CH1 is occupied, it takes action a0
    to perform spectrum handoff to CH2. Eventually, the new node builds up its own
    Q-table. Fig. 7 shows the CRN testbed setup with TL scheme. Download : Download
    high-res image (255KB) Download : Download full-size image Fig. 7. Transfer learning
    setup for CRN testbed. 5.5. Design challenges Our implementation addresses the
    following issues: (1) How often the node should sense the channel: This is a crucial
    part of our testbed implementation. If the channel is sensed too frequently, the
    packet dropping rate (PDR) is increased and the network performance goes down.
    On the other hand, if the channel sensing interval is too long, the node will
    not be able to detect the interference or the presence of the PU in the network,
    which can reduce the performance and also cause interference to other nodes. Therefore,
    in our testbed implementation, the node changes from transmit mode to receive
    mode and senses the channel to determine the presence of PU after transmitting
    500 packets. In addition, the node changes its frequency to the common control
    channel (CCC) to receive the value of current PER from the receiver node. Upon
    detecting a PU, the node immediately performs handoff; Otherwise, it waits for
    the feedback from the receiver node about the channel condition. If there is no
    response or the feedback is 1, the node continues its transmission; Otherwise,
    if the feedback is 0 which indicates the presence of an interruption, it performs
    spectrum handoff to an idle channel. (2) How often the learning algorithm should
    be updated: Updating the learning algorithm frequently helps the algorithm to
    converge quickly at the cost of decreased performance as each packet experiences
    more delay. On the other hand, a larger update interval prevents the learning
    algorithm from converging quickly, and the performance of the node keeps varying
    until the node converges to a stable status. To achieve a tradeoff between these
    two cases, we update the learning algorithm for each packet transmission until
    it converges. Once it converges, the update interval is increased to 500 packets
    so that the packets do not suffer more delay and, at the same time, the node does
    not take wrong actions. When the algorithm is being updated per packet transmission,
    a few packets may be dropped until the node reaches a stable status. (3) How long
    the learning node should wait for the response from the expert node: Waiting for
    too long can keep the packet waiting in the queue beyond its time to live (TTL)
    duration, whereas waiting for a short period of time may result in missing the
    expert’s response. Thus, we choose almost half of the RL time as the waiting time
    to receive the expert’s response. Note that the USRP 210 boards have limited processing
    capacity to support high speed calculations. Also, they do not support the modification
    of the modules at the FPGA level. Therefore, the complex and advanced machine
    learning function modules have been implemented at the host level of GNU Radio
    so that it is easy to modify them according to the application requirements. 6.
    Expertimental results 6.1. Channel sensing Fig. 8 shows the result of channel
    sensing at around 2.45 GHz frequency. A high peak (of amplitude 18) is observed
    which indicates the presence of a PU or SU node. Since our channel selection is
    based on the energy detection scheme, we consider the channel as idle when the
    noise amplitude is below 5. Download : Download high-res image (166KB) Download
    : Download full-size image Fig. 8. Channel sensing result at center frequency
    2.45 GHz. 6.2. Reinforcement learning performance In the beginning, we set {State,
    Action} = {0,0} to initiate the process of occupying a new idle channel. The sender
    senses the channel for each packet transmission to enhance the speed of learning
    in the beginning. After the optimal condition is achieved, the sender senses the
    channel after every 500 packet transmissions and waits for the feedback from receiver.
    The PER value received as part of the feedback helps in determining the channel
    condition. Based on the channel sensing result and the receiver feedback, the
    node performs spectrum handoff. Fig. 9 shows the achieved average reward for the
    number of packets sent. On average, the RL algorithm takes about 15-packet transmission
    time to achieve the optimal condition. Fig. 9a shows some variations in the reward
    during the transmission of first 15 packets, indicating that the node has not
    found the best action for the state of the channel, although the channel was found
    to be idle. After achieving the optimal reward, the node chooses the action, a1-Transmit,
    which gives the highest reward to the node (see Fig. 9b). Download : Download
    high-res image (429KB) Download : Download full-size image Fig. 9. The performance
    of RL scheme in terms of the expected reward for the number of packets sent. Fig.
    10 shows the performance of RL scheme when there is an interruption from a PU
    or other SUs. When PU is present (at 20,000 packets) or an interruption from other
    SUs is encountered (around 40,000 packets), the spectrum handoff is performed,
    and the performance drops as a reward of 5 is assigned for spectrum handoff. The
    figure also illustrates that the right action (viz. spectrum handoff) is being
    performed during the interruption, otherwise the performance would have reached
    zero at the interruption points. The node quickly recovers from the dip in the
    performance and achieves optimal transmission. Download : Download high-res image
    (301KB) Download : Download full-size image Fig. 10. Performance variation due
    to arrival of PU (after around 20,000 packets) and interruption from another SU
    node (after around 40,000 packets). Fig. 11 shows the Q-value bar graph for each
    state-action pair. When the channel is good and idle, the best action is ‘transmit’
    and the higher Q-value is achieved as more packets are transmitted. The yellow
    bar has negative values because a wrong action (i.e., handoff (H-F)) was taken
    when the channel was good and received a reward of −5, during the early stages
    of learning process when the node was in the exploration phase. On the other hand,
    the blue bar shows the positive value for spectrum handoff when the channel is
    not good, due to which the node received reward of +5. The blue bar is much smaller
    compared to the rest of the bars because we did not introduce frequent interruptions
    during our transmissions, and therefore the machine learning algorithm didn’t
    encounter that state more than once. Importantly, multiple black lines on each
    bar line (e.g., below 0 value in the red bar) indicate that during the course
    of transmission the node went through the exploration phase and learnt the strategy
    on its own. Download : Download high-res image (168KB) Download : Download full-size
    image Fig. 11. Q-table variation during transmission. X-axis defines the state-action
    pair as explained in the table Q- table (Table 2). H-F : Handoff, Tx- Transmission.
    Channel States: Occupied, idle, Bad, Good. We observe that the node immediately
    performs spectrum handoff when it senses a bad channel as seen from the drop in
    rewards and quick improvement in it (shown in Fig. 10). The spectrum handoff would
    take at the most 500 packet transmission time if channel condition is bad because
    the channel is sensed after 500 packet transmissions. 6.3. Transfer learning performance
    As shown in Fig. 12, when the expert node receives the ‘Hello’ message from a
    new (learner) node, a window pops up at the expert node showing that a learner
    node is searching for the expert node and requesting the Q-table. Upon receiving
    the ‘Hello’ message, the expert node shares its Q-table with the learner node.
    If the learner node receives the Q-table within its waiting time, it displays
    a window message as shown in Fig. 13 (left). If no expert node is found or if
    the Q-table is not received, a window message pops up at the learner node indicating
    that no expert is found as shown in Fig. 13(right). Download : Download high-res
    image (242KB) Download : Download full-size image Fig. 12. ’Hello’ message received
    by the expert node. Download : Download high-res image (213KB) Download : Download
    full-size image Fig. 13. (Left) "Q-table received" message at the learner node
    after Q-table is received from the expert node; (Right) Message shown at the learner
    node when no expert node is found. Fig. 14a illustrates the learning performance
    of TL algorithm. Fig. 14a shows that TL, unlike RL, requires only 3 packet transmissions
    to reach the optimal (stable) condition because the new node need not go through
    the exploration phase. In Fig. 14b, the node is continuously choosing action,
    a1-transmit, which is giving the highest reward. Download : Download high-res
    image (398KB) Download : Download full-size image Fig. 14. The transfer learning
    performance in terms of the expected reward for the number of packets sent. Fig.
    15 shows the performance of the TL-based handoff during the interruptions from
    PU or other SUs. When a PU arrives (at 20,000 packets) or an interruption occurs
    from another SU, the spectrum handoff is performed, resulting in the performance
    drop, since the spectrum handoff is assigned a reward of 5. In addition, the figure
    also illustrates that the right action (viz. spectrum handoff) is performed during
    the interruption, otherwise the performance would have reached zero at the interruption
    points. Download : Download high-res image (293KB) Download : Download full-size
    image Fig. 15. Performance variations in transfer learning scheme due to the arrival
    of PU (at around 20,000 packets) and interruption from another SU (at around 180,000
    packets). In Fig. 16, the Q-table values are shown in bar graph. It is evident
    that, the TL continues to strengthen the Q-table after it was received from the
    expert node. Notably, there are no multiple black lines (unlike in Fig. 11) on
    each bar line (below 0 value in red bar), which indicates that the node did not
    go through the exploration phase. Download : Download high-res image (194KB) Download
    : Download full-size image Fig. 16. Q-table variation during transmission at the
    learner node. 6.4. Video transmission performance The performance of our spectrum
    handoff scheme using the RL scheme is shown in Fig. 17. It clearly shows that
    when an interference signal is detected, the video quality becomes unacceptable.
    After performing the spectrum handoff, the video quality recovers with zero error
    rate. The same performance is observed for the arrival of PU. Download : Download
    high-res image (975KB) Download : Download full-size image Fig. 17. The impact
    of interference and spectrum handoff on video quality. 6.5. Comparison between
    reinforcement and transfer learning schemes Since we consider each packet transmission
    as an iteration until the node achieves the optimal condition, approximately 1.5 s
    are required to transmit a packet in each iteration since the device must sense
    the channel for a second and change its mode of operations (transmit and receive).
    An additional duration of 5 s is needed to receive the Q-table from expert node
    in TL since the machine learning algorithm is written at the host level, which
    makes the system slow to respond to the commands. In RL scheme, an average of
    20-packet transmission time is required to achieve the optimal condition, whereas
    only 3-packet transmission is required to achieve the optimal condition in TL
    scheme. Based on these observations, the total time required to achieve the optimal
    condition in both the learning schemes is shown in Table 3. It is observed that
    RL takes approximately twice the time taken by TL to achieve the optimal condition.
    Table 3. Comparison between the reinforcement and transfer learning. Algorithms
    # of Packet transmissions to achieve optimality Q-Table receive time Total time
    to achieve optimal condition RL 20 packet transmissions, 20*1.5 = 30 s 0 30 s
    TL 3 packet transmissions, 3*1.5 ≈ 4 s ≈ 12 s 16 s In Fig. 18, we compare the
    performance of the RL and TL schemes with greedy learning. When a node experiences
    a new CRN environment, the RL takes long time to adjust its learning parameters
    to achieve the optimal condition. TL outperforms both the RL and greedy learning
    schemes as it receives the knowledge of the channel conditions (in terms of Q-table)
    from an expert node. The greedy algorithm takes fewer iterations than RL to achieve
    optimal solution since we have used simple channel conditions. In (Wu et al.,
    2014), we showed that the RL based spectrum decision outperforms the greedy learning
    for the complex channel condition and network set up. Download : Download high-res
    image (291KB) Download : Download full-size image Fig. 18. Comparison between
    the performance of RL, TL, and greedy algorithms for first 30 packets transmissions.
    7. Conclusion In this paper, we implemented a CRN testbed with intelligent spectrum
    handoff by using GNU Radio and USRP. The spectrum handoff was performed by considering
    the ‘transmit’ and ‘spectrum handoff’ as the actions and the channel condition/status
    as the parameters of the states of the learning scheme. It was shown that RL takes
    a long time to achieve the optimal condition. The TL was used to enhance and expedite
    the process, where the new (or learner) node receives the optimal strategy (Q-table)
    from the expert node to perform the spectrum handoff. The TL scheme took less
    time to achieve the optimal actions. Acknowledgements and disclaimer The authors
    acknowledge support from the Air Force Research Laboratory. The views and conclusions
    contained herein are those of the authors and should not be interpreted as necessarily
    representing the official policies or endorsements, either expressed or implied,
    of the Air Force Research Laboratory or the U.S Government. References Aftab and
    Mufti, 2011 Aftab, A., Mufti, M.N., 2011. Spectrum Sensing through Implementation
    of usrp2,. Weblink:’ https://www.researchgate.net/publication/228785141_Spectrum_Sensing_Through_Implementation_of_USRP2′.
    Google Scholar Anil et al., 2014 Anil, R., Danymol, R., Gawande, H., Gandhiraj,
    R., 2014. Machine learning plugins for GNU Radio companion. In: IEEE International
    Conference Green Computing Communication and Electrical Engineering (ICGCCEE),,
    pp. 1–5. Google Scholar Bkassiny et al., 2013 M. Bkassiny, Y. Li, S.K. Jayaweera
    A survey on machine-learning techniques in cognitive radios IEEE Commun. Surv.
    Tutor., 15 (3) (2013), pp. 1136-1159 View in ScopusGoogle Scholar Blossom and
    Radio, 2004 E. Blossom, G.N.U. Radio Tools for exploring the radio frequency spectrum
    Linux J., 2004 (122) (2004), p. 4 Google Scholar Crohas, 2008 A. Crohas Practical
    implementation of a cognitive radio system for dynamic spectrum access, Ph.D.
    Dissertation University of Notre Dame (2008) Google Scholar Dohler et al., 2010
    M. Dohler, L. Giupponi, A. Galindo-Serrano, P. Blasco Docitive networks: a novel
    framework beyond cognition IEEE Multimdia Commun. TC E-Lett., 5 (1) (2010), pp.
    1-3 CrossRefGoogle Scholar Elsayed and Mohamed, 2015 Elsayed, M.H., Mohamed, A.,
    2015. Distributed interference management using Q-learning in cognitive femtocell
    networks: New USRP-based implementation. In: Proceedings of the 7th IEEE International
    Conference New Technologies, Mobility and Security (NTMS),, pp. 1–5. Google Scholar
    Galindo-Serrano et al., 2010 Galindo-Serrano, A., Giupponi, L., Blasco, P., Dohler,
    M., 2010. Learning from experts in cognitive radio networks: The docitive paradigm.
    In: IEEE Cognitive Radio Oriented Wireless Networks&Communications Conference
    (CROWNCOM),, pp. 1–6. Google Scholar Giupponi et al., 2010 L. Giupponi, A. Galindo-Serrano,
    P. Blasco, M. Dohler Docitive networks: an emerging paradigm for dynamic spectrum
    management [dynamic spectrum management] IEEE Wirel. Commun., 17 (4) (2010) Google
    Scholar Hosey et al., 2009 Hosey, N., Bergin, S., Macaluso, I., O’Donoghue, D.P.,
    2009. Q-learning for cognitive radios. In: Proceedings China-Ireland Information
    and Communications Technology Conference (CIICT 2009), ISBN 9780901519672, National
    University of Ireland Maynooth. Google Scholar Hossain et al., 2014 Hossain, P.,
    Komisarczuk, A., Pawetczak, G., Van Dijk, S., Axelsen, I., 2014. Machine learning
    techniques in cognitive radio networks, arXiv Preprint arXiv:1410.3145. Google
    Scholar Ke-Yu and Chen, 2006 C. Ke-Yu, Z.-F. Chen GNU Radio Department of Electrical
    Computer Engineering, University of Florida, Gainesville, Florida (2006) Google
    Scholar Kumar et al., 2016 K. Kumar, A. Prakash, R. Tripathi Spectrum handoff
    in cognitive radio networks: a classification and comprehensive survey J. Netw.
    Comput. Appl., 61 (2016), pp. 161-188 View PDFView articleView in ScopusGoogle
    Scholar Mishra and Cabric, 2005 Mishra, S.M., Cabric, D.. et al., 2005. A real
    time cognitive radio testbed for physical and link layer experiments. In: IEEE
    New Frontiers in Dynamic Spectrum Access Networks (DySPAN), pp. 562–567. Google
    Scholar Newman et al., 2009 Newman, T.R., He, A., Gaeddert, J., Hilburn, B., Bose,
    T., Reed, J.H., 2009. Virginia Tech cognitive radio network testbed and open source
    cognitive radio framework. In: Proceedings of the 5th IEEE International Conference
    Testbeds and Research Infrastructures for Development of Networks&Communities
    and Workshops (TridentCom), pp. 1–3. Google Scholar Patcha, 2011 Patcha, V., 2011.
    Experimental Study Of Cognitive Radio Test-bed using USRP,. Weblink: 〈https://digitalcommons.lsu.edu/gradschool_theses/481/〉.
    Google Scholar Qiu et al., 2012 R.C. Qiu, C. Zhang, Z. Hu, M.C. Wicks Towards
    a large-scale cognitive radio network testbed: spectrum sensing, system architecture,
    and distributed sensing J. Commun., 7 (7) (2012), pp. 552-566 View in ScopusGoogle
    Scholar Ren et al., 2010 Ren, Y., Dmochowski, P., Komisarczuk, P., 2010. Analysis
    and implementation of reinforcement learning on a GNR Radio cognitive radio platform.
    In: 5th IEEE International Conference Cognitive Radio Oriented Wireless Networks&Communications
    (CROWNCOM),, pp. 1–6. Google Scholar Song and Xie, 2011 Y. Song, J. Xie On the
    spectrum handoff for cognitive radio ad hoc networks without common control channel
    Springe. Cogn. Radio Mob. Ad Hoc Netw. (2011), pp. 37-74 CrossRefGoogle Scholar
    Sunderland, 2010 Sunderland, M.D., 2010. Software-defined radio interoperability
    with frequency hopping waveforms,. Weblink: 〈https://etda.libraries.psu.edu/catalog/10635〉.
    Google Scholar Sutton and Barto, 1998 R.S. Sutton, A.G. Barto Reinforcement Learning:
    An Introduction, 1, MIT Press, Cambridge (1998) T. J. O’shea et al., 2007 T. J.
    O’shea, T.C. Clancy, Ebeid, H.J., 2007. Practical signal detection and classification
    in GNR Radio. In: SDR Forum Technical Conference, p. 143. Google Scholar “Universal
    software radio peripheral (USRP)”, 2008 Universal software radio peripheral (USRP),
    2008. Ettus Research LLC. Google Scholar Wang and Wang, 2008 L.-C. Wang, C.-W.
    Wang Spectrum handoff for cognitive radio networks: reactive-sensing or proactive-sensing?
    IEEE Int. Perform. Comput. Commun. Conf. (2008), pp. 343-348 CrossRefGoogle Scholar
    Wu et al., 2014 Y. Wu, F. Hu, S. Kumar, Y. Zhu, A. Talari, N. Rahnavard, J.D.
    Matyjas A learning-based QoE-driven spectrum handoff scheme for multimedia transmissions
    over cognitive radio networks IEEE J. Sel. Areas Commun., 32 (11) (2014), pp.
    2134-2148 View in ScopusGoogle Scholar Cited by (10) Spectrum sensing in cognitive
    radio networks and metacognition for dynamic spectrum sharing between radar and
    communication system: A review 2022, Physical Communication Citation Excerpt :
    By incorporating the benefits of spatial and multi-user diversity, cooperative
    spectrum sensing (CoSS) optimizes detection accuracy and accomplishes high throughput
    in CRNs. To implement DSA, spectrum sensing, spectrum handoff, and interference
    management functions, various CRNs testbeds using SDR [11], GNU Radio [12], and
    Universal software radio peripheral (USRP) [13] have been proposed in [14–18].
    The advancement in sensing technology through radar increases the bandwidth requirement
    of communication system, thereby generating demand for extra radio spectrum. Show
    abstract ScaleDRL: A Scalable Deep Reinforcement Learning Approach for Traffic
    Engineering in SDN with Pinning Control 2021, Computer Networks Citation Excerpt
    : Therefore, DRL has gained much attention from the researchers in networking.
    For example, DeepConf [48] uses DRL to adjust the topology in Data Center Networks
    (DCNs); Pensieve [49] employs DRL to adjust the video streaming for better QoS;
    Sadeghi et al. [50] apply DRL in the caching regulation of Content Delivery Networks
    (CDNs); Decima [51] uses DRL to schedule the flows of cluster computing in DCN;
    Xiao et al. [47] propose to use DRL for the Service Function Chain (SFC) deployment;
    Koushik et al. [52] also applies reinforcement learning in cognitive radio networks.
    In this paper, we propose ScaleDRL, a DRL-based solution for TE. Show abstract
    A novel three-phase target channel allocation scheme for multi-user Cognitive
    Radio Networks 2020, Computer Communications Citation Excerpt : Mostly these works
    focus on spectrum sensing [67–70] with primary attention on PU classification
    [71,72] using supervised and deep learning methods. On the contrary, only few
    studies [73,74] have explored spectrum management and mobility issues in CRN [41–43].
    Specifically, [41] has devised supervised learning method to assist in handoff
    using Particle Swarm Optimization technique. Show abstract Cooperative spectrum
    sensing based hybrid machine learning technique for prediction of secondary user
    in cognitive radio networks 2023, Journal of Intelligent and Fuzzy Systems OPTIMIZATION-BASED
    SPECTRUM SENSING IN CRN FOR EFFECTIVE UTILIZATION OF AVAILABLE CHANNEL 2022, International
    Journal on Technical and Physical Problems of Engineering A comprehensive survey
    on machine learning approaches for dynamic spectrum access in cognitive radio
    networks 2022, Journal of Experimental and Theoretical Artificial Intelligence
    View all citing articles on Scopus 1 DISTRIBUTION STATEMENT A: Approved for Public
    Release; distribution unlimited 88ABW-2017–6274; 13 Dec 2017. View Abstract ©
    2018 Elsevier Ltd. All rights reserved. Recommended articles Empirical analysis
    of search based algorithms to identify change prone classes of open source software
    Computer Languages, Systems & Structures, Volume 47, Part 2, 2017, pp. 211-231
    Ankita Bansal View PDF Triolein reduces MMP-1 upregulation in dermal fibroblasts
    generated by ROS production in UVB-irradiated keratinocytes Journal of Dermatological
    Science, Volume 85, Issue 2, 2017, pp. 124-130 Gustavo J. Leirós, …, Karin Hagelin
    View PDF Dosimetric and Monte Carlo verification of jaws-only IMRT plans calculated
    by the Collapsed Cone Convolution algorithm for head and neck cancers Reports
    of Practical Oncology & Radiotherapy, Volume 24, Issue 1, 2019, pp. 105-114 Duong
    Thanh Tai, …, James C.L. Chow View PDF Show 3 more articles Article Metrics Citations
    Citation Indexes: 10 Captures Readers: 21 View details About ScienceDirect Remote
    access Shopping cart Advertise Contact and support Terms and conditions Privacy
    policy Cookies are used by this site. Cookie settings | Your Privacy Choices All
    content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply.'
  inline_citation: '>'
  journal: Journal of network and computer applications
  limitations: '>'
  pdf_link: null
  publication_year: 2018
  relevance_score1: 0
  relevance_score2: 0
  title: A hardware testbed for learning-based spectrum handoff in cognitive radio
    networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1007/978-3-642-25462-8_59
  analysis: '>'
  authors:
  - Mohd Adib Sarijari
  - Rozeha A. Rashid
  - Norsheila Fisal
  - Muddasir Rahim
  - Sharifah Kamilah Syed Yusof
  - Nur Hija Mahalin
  citation_count: 3
  full_citation: '>'
  full_text: '>

    Your privacy, your choice We use essential cookies to make sure the site can function.
    We also use optional cookies for advertising, personalisation of content, usage
    analysis, and social media. By accepting optional cookies, you consent to the
    processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart International Conference on Informatics
    Engineering and Information Science ICIEIS 2011: Informatics Engineering and Information
    Science pp 666–677Cite as Home Informatics Engineering and Information Science
    Conference paper Experimental Study of Sensing Performance Metrics for Cognitive
    Radio Network Using Software Defined Radio Platform M. Adib Sarijari, Rozeha A.
    Rashid, N. Fisal, M. Rozaini A. Rahim, S. K. S. Yusof & N. Hija Mahalin  Conference
    paper 1292 Accesses 3 Citations Part of the book series: Communications in Computer
    and Information Science ((CCIS,volume 253)) Abstract Cognitive Radio (CR) is a
    promising technology in wireless communication for an enhanced utilization of
    limited spectral resources. It allows unlicensed or cognitive users (CUs) to sense
    the spectral environment and access a channel exhibiting negligible activity of
    licensed or primary users (PUs). Hence, spectrum sensing is a crucial task for
    a CU to perform in an opportunistic spectrum access (OSA) based CR network to
    avoid harmful interference to PU. Two main performances metrics that are crucial
    in the design of spectrum sensing are the probability of false alarm (P fa ) and
    the probability of detection (P d ). These metrics are used to define the CR system
    quality of service (QoS). The threshold to decide on the presence of PU and the
    sensing time needed for the CR system are also determined based on these metrics.
    This paper presents the design of measurement methods to experimentally acquire
    the P fa and P d curves based on locally captured data to determine the value
    of the threshold and sensing time. The implementation, experimentation and measurement
    are done using GNU Radio and universal software defined radio peripheral (USRP)
    software defined radio (SDR) platform as the cognitive radio testbed. Spectrum
    sensing was done based on energy detection. Each of the energy based detection
    measurement is repeated 1000 times to obtain an accurate estimation of P fa and
    P d . The findings show that the target Quality of Sevice (QoS) of P fa of 5%
    and P d of 90% can be derived from the estimated sensing threshold of -39 dB and
    achieves a sensing time of 31.59 ms. Access provided by University of Nebraska-Lincoln.
    Download to read the full chapter text Chapter PDF References Akyildiz, I.F.,
    Lee, W.-Y., Vuran, M.C., Mohanty, S.: Next Generation/Dynamic Spectrum Access/Cognitive
    Radio Wireless Networks: A Survey. The International Journal of Computer and Telecommunications
    Networking 50, 2127–2159 (2006) MATH   Google Scholar   Mitola, J.: Software radios-survey,
    critical evaluation and future directions. In: IEEE National Telesystems Conference,
    May 19-20, pp. 13/15–13/23 (1992) Google Scholar   Cabric, D., Tkachenko, A.,
    Brodersen, R.W.: Experimental Study of Spectrum Sensing based on Energy Detection
    and Network Cooperation. In: The First International Workshop on Technology and
    Policy for Accessing Spectrum. ACM International Conference Proceeding Series,
    vol. 222(12) (2006) Google Scholar   Cabric, D., Tkachenko, A., Brodersen, R.W.:
    Spectrum Sensing Measurements of Pilot, Energy, and Collaborative Detection. In:
    IEEE Military Communications Conference (MILCOM 2006), Washington, DC, pp. 1–7
    (October 2006) Google Scholar   Cabric, D., Mishra, S.M., Brodersen, R.W.: Implementation
    Issues in Spectrum Sensing for Cognitive Radios. In: Asilomar Conference on Signals,
    Systems, and Computers, vol. 1, pp. 772–776 (November 2004) Google Scholar   Manicka,
    N.: GNU Radio Testbed, Thesis for Master of Science in Computer Science, University
    of Delaware (Spring 2007) Google Scholar   GNU Radio project, http://gnuradio.org/redmine/wiki/gnuradio
    Matt Ettus, Universal software radio peripheral, http://www.ettus.com Budiarjo,
    I., Lakshmanan, M.K., Nikookar, H.: Cognitive Radio Dynamic Access Technique.
    Wireless Pers Commun. 45, 293–324 (2008) Article   Google Scholar   Rashid, R.A.,
    et al.: Sensing Period Considerations in Fading Environment for Multimedia Delivery
    in Cognitive Ultra Wideband. In: International Conference on Signal and Image
    Processing Applications (ICSIPA 2009), Kuala Lumpur, November 18-19 (2009) Google
    Scholar   Poor, H.V.: An Introduction to signal detection and estimation, 2nd
    edn. Springer, New York (1994) Book   MATH   Google Scholar   Rashid, R.A., Sarijari,
    M.A., Fisal, N., Lo, A.C.C., et al.: Spectrum Sensing Measurement using GNU Radio
    and USRP Software Defined Radio Platform. In: ICWMC 2011, Luxembourgh, Germany,
    June 19-24 (2011) Google Scholar   Download references Author information Authors
    and Affiliations Faculty of Electrical Engineering, Universiti Teknologi Malaysia,
    Johor, Malaysia M. Adib Sarijari, Rozeha A. Rashid, N. Fisal, M. Rozaini A. Rahim,
    S. K. S. Yusof & N. Hija Mahalin Editor information Editors and Affiliations Advanced
    Informatics School (UTM AIS), UTM International Campus, 54100, Kuala Lumpur, Malaysia
    Azizah Abd Manaf , Shamsul Sahibuddin , Rabiah Ahmad  & Salwani Mohd Daud , ,  &  Information
    Systems Department, King Saud University, Riyadh, Saudi Arabia Eyas El-Qawasmeh
    Rights and permissions Reprints and permissions Copyright information © 2011 Springer-Verlag
    Berlin Heidelberg About this paper Cite this paper Sarijari, M.A., Rashid, R.A.,
    Fisal, N., A. Rahim, M.R., Yusof, S.K.S., Mahalin, N.H. (2011). Experimental Study
    of Sensing Performance Metrics for Cognitive Radio Network Using Software Defined
    Radio Platform. In: Abd Manaf, A., Sahibuddin, S., Ahmad, R., Mohd Daud, S., El-Qawasmeh,
    E. (eds) Informatics Engineering and Information Science. ICIEIS 2011. Communications
    in Computer and Information Science, vol 253. Springer, Berlin, Heidelberg. https://doi.org/10.1007/978-3-642-25462-8_59
    Download citation .RIS.ENW.BIB DOI https://doi.org/10.1007/978-3-642-25462-8_59
    Publisher Name Springer, Berlin, Heidelberg Print ISBN 978-3-642-25461-1 Online
    ISBN 978-3-642-25462-8 eBook Packages Computer Science Computer Science (R0) Share
    this paper Anyone you share the following link with will be able to read this
    content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Publish with us Policies and ethics Download book PDF Sections References
    Abstract Chapter PDF References Author information Editor information Rights and
    permissions Copyright information About this paper Publish with us Discover content
    Journals A-Z Books A-Z Publish with us Publish your research Open access publishing
    Products and services Our products Librarians Societies Partners and advertisers
    Our imprints Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy
    choices/Manage cookies Your US state privacy rights Accessibility statement Terms
    and conditions Privacy policy Help and support 129.93.161.219 Big Ten Academic
    Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024
    Springer Nature'
  inline_citation: '>'
  journal: Communications in computer and information science
  limitations: '>'
  pdf_link: null
  publication_year: 2011
  relevance_score1: 0
  relevance_score2: 0
  title: Experimental Study of Sensing Performance Metrics for Cognitive Radio Network
    Using Software Defined Radio Platform
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.32657/10356/46306
  analysis: '>'
  authors:
  - Vivek Ashok Bohara
  citation_count: 1
  full_citation: '>'
  full_text: '>

    Skip navigation  DR-NTU (Digital Repository of NTU)  COMMUNITIES & COLLECTIONS
    RESEARCH PAPERS THESES FYPS ACADEMIC PROFILE GUIDELINES Login Show simple item
    record Show full item record Export item record Please use this identifier to
    cite or link to this item: https://hdl.handle.net/10356/46306 Title:  Design and
    measurement results for cooperative spectrum sharing Authors:  Vivek Ashok Bohara
    Keywords:  DRNTU::Engineering::Electrical and electronic engineering::Wireless
    communication systems Issue Date:  2011 Source:  Vivek, A. B. (2011). Design and
    measurement results for cooperative spectrum sharing. Doctoral thesis, Nanyang
    Technological University, Singapore. Abstract:  Scarcity of radio spectrum and
    inherent inefficiency of current spectrum allocation policies have spurred much
    research for alternative spectrum access techniques giving birth to the notion
    of cognitive radios. Recently, cooperative spectrum sharing (CSS) where two wireless
    systems operate over the same spectrum band albeit with different priorities has
    been proposed as a viable framework for cognitive radio. However, most of the
    proposed CSS protocols are interference limited and the performance of the systems
    are limited by the amount of interference from one system to another. Furthermore,
    most of the work on CSS can not be validated due to lack of measurement results.
    In this thesis, we try to resolve the above issues by proposing an interference-free
    CSS protocol known as orthogonal spectrum sharing scheme (OSSS) and as a proof-of-concept
    implement a CSS protocol on a RF testbed. The performance of the testbed has been
    validated by obtaining both quantitative as well as qualitative results. Quantitative
    results are obtained by measuring the packet error rates for both primary and
    secondary systems whereas qualitative results are shown by utilizing a CSS protocol
    to successfully transmit two different images from PT to PR and ST to SR respectively.
    URI:  https://hdl.handle.net/10356/46306 DOI:  10.32657/10356/46306 Schools:  School
    of Electrical and Electronic Engineering  Research Centres:  Positioning and Wireless
    Technology Centre  Fulltext Permission:  open Fulltext Availability:  With Fulltext
    Appears in Collections: EEE Theses  Files in This Item: File Description Size
    Format   TeG0600704B.pdf 3.44 MB Adobe PDF View/Open Page view(s) 50 520 Updated
    on Apr 11, 2024 Download(s) 20 284 Updated on Apr 11, 2024 Google ScholarTM Check   Plumx
    Items in DR-NTU are protected by copyright, with all rights reserved, unless otherwise
    indicated. CONTACT US NTU Library Office of Information, Knowledge and Library
    Services Email: library@ntu.edu.sg  Copyright • Disclaimer • Data Protection and
    Privacy © 2019 Nanyang Technological University Assessed by:'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: https://dr.ntu.edu.sg/bitstream/10356/46306/1/TeG0600704B.pdf
  publication_year: 2019
  relevance_score1: 0
  relevance_score2: 0
  title: Design and measurement results for cooperative spectrum sharing
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/crowncom.2013.6636817
  analysis: '>'
  authors:
  - Lai-Huei Wang
  - Shuvra S. Bhattacharyya
  - Aida Vosoughi
  - Joseph R. Cavallaro
  - Markku Juntti
  - Jani Boutellier
  - Olli Silvén
  - Mikko Valkama
  citation_count: 1
  full_citation: '>'
  full_text: '>

    IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Conferences >8th International Conference ...
    Dataflow modeling and design for cognitive radio networks Publisher: IEEE Cite
    This PDF Lai-Huei Wang; Shuvra S. Bhattacharyya; Aida Vosoughi; Joseph R. Cavallaro;
    Markku Juntti; Jani Boutellier; Olli Silven; Mikko Valkama All Authors 2 Cites
    in Papers 1 Cites in Patent 175 Full Text Views Abstract Document Sections I.
    Introduction II. Parameterized Dataflow Modeling For Cognitive Radio Systems III.
    Cognitive Radio Realization, Synthesis And Performance Evaluations IV. Summary
    Authors Figures References Citations Keywords Metrics Abstract: Cognitive radio
    networks present challenges at many levels of design including configuration,
    control, and cross-layer optimization. In this paper, we focus primarily on dataflow
    representations to enable flexibility and reconfigurability in many of the baseband
    algorithms. Dataflow modeling will be important to provide a layer of abstraction
    and will be applied to generate flexible baseband representations for cognitive
    radio testbeds, including the Rice WARP platform. As RF frequency agility and
    reconfiguration for carrier aggregation are important goals for 4G LTE Advanced
    systems, we also focus on dataflow analysis for digital predistortion algorithms.
    A new design method called parameterized multidimensional design hierarchy mapping
    (PMDHM) is presented, along with initial speedup results from applying PMDHM in
    the mapping of channel estimation onto a GPU architecture. Published in: 8th International
    Conference on Cognitive Radio Oriented Wireless Networks Date of Conference: 08-10
    July 2013 Date Added to IEEE Xplore: 21 October 2013 Electronic ISBN:978-1-4799-2120-1
    ISSN Information: DOI: 10.1109/CROWNCom.2013.6636817 Publisher: IEEE Conference
    Location: Washington, DC, USA SECTION I. Introduction Efficient and cognitive
    use of frequency spectrum has been recognized as a key technology to enhance the
    efficiency of wireless systems. Both the NSF and Tekes have identified these research
    challenges and needs in several recent workshops on Future Wireless Networks [1],
    Enhancing Access to the Radio Spectrum (EARS) [2], and the TRIAL Cognitive Environments
    and Testbeds [3]. This WiFiUS (Wireless Innovation between Finland and U.S.) project
    seeks to address these challenges from the RF circuit level to efficient baseband
    processor architectures through a multi-disciplinary collaboration among the four
    universities which specialize in RF, algorithms, design modeling and testbeds.
    Concurrent use of a plurality of network and radio technologies is a fact which
    will remain. All this requires flexibility and configurability from the transceivers
    regardless of the fact of how the spectrum sharing itself is realized. Increasing
    bandwidths and data rates pose more and more challenges to the whole baseband
    (BB) processing chain and also the radio frequency (RF) processing. The major
    challenge comes from the fact that the variety of nodes will increase. At the
    same time, flexibility and configurability of the implementation at the RF, baseband,
    and MAC layers, with cross-layer modeling and control, will be important to realize
    the efficiency potential of spectrum sharing. The flexible use of RF spectrum
    over a multitude of different frequencies requires advanced configurable radio
    devices. Receiver configuration based on programmable paradigms has received attention
    in recent years but practical solutions are still lacking, especially for the
    radio frequency (RF) components. We plan to build upon our related work on compensation
    of nonlinear distortion [4]. At the same time, programmable baseband computation
    and related design chains have significantly developed. This enables more efficient
    control of computational resources and hardware. The software based adaptive configuration
    of radio frequency chains is still in its infancy, but it is a key ingredient
    of the frequency agile radios needed for cognitive devices and flexible RF spectrum
    use. A major gap which we are seeking to address in this project is the lack of
    models, structured design methods, and comprehensive understanding of realistic
    configurable RF chains and radio modules. In this paper, we focus on the dataflow
    modeling and design aspects and show how these can be applied to physical layer
    algorithms that are used in cognitive radio networks. Dataflow methodologies are
    a promising candidate for the modeling, analysis and verification of cognitive
    radio systems [5], [6]. Dataflow also offers an excellent basis for building automated
    synthesis tools that generate actual system implementations out of models. As
    dataflow models are abstract and platform independent, the same model can be used
    to generate implementations for very different devices and implementation constraints
    from low-power sensor nodes to high-end mobile terminals. SECTION II. Parameterized
    Dataflow Modeling For Cognitive Radio Systems A. Background 1) Parameterized Synchronous
    Dataflow Dataflow modeling techniques are widely used in the design and implementation
    of communication systems (e.g., see [7]), and major commercial tools, such as
    Agilent SystemVue and National Instruments LabView, provide dataflow-based design
    capabilities for communication system design. Parameterized dataflow is a meta-modeling
    technique that can significantly improve the expressive power of an arbitrary
    dataflow model that possesses a well-defined concept of a graph iteration [8].
    Parameterized dataflow provides a method to systematically integrate dynamic parameter
    reconfiguration into such models of computation, while preserving many of the
    properties and intuitive characteristics of the original models. The integration
    of the parameterized dataflow meta-model with synchronous dataflow (SDF) provides
    the model of computation referred to as parameterized synchronous dataflow (PSDF).
    PSDF offers valuable properties in terms of modeling systems with dynamic parameters,
    supporting efficient scheduling techniques, and natural integration with popular
    SDF modeling techniques [9]. 2) Multidimensional Design Hierarchy Mapping The
    Multidimensional Design Hierarchy (MDH) mapping method is a design method that
    builds on the multidimensional synchronous dataflow (MSDF) [10] model of computation,
    and facilitates hierarchical exploitation of parallelism in multidimensional signal
    processing applications [11]. This approach allows designers to explore alternative
    implementations in a manner that separates platform-specific parallel processing
    optimization from behavioral specifications, thereby enhancing portability and
    trade-off exploration. More specifically, the multidimensional design hierarchy
    model provides an intermediate model that offers a formal linkage between hierarchical
    layers of parallelism in the target platform and corresponding subsystems of the
    application that will be mapped onto these layers. In the MDH approach, graph
    clustering and MDSDF dataflow analysis are applied to map applications to target
    platforms that employ parallelism at multiple levels [11]. In this paper, we integrate
    the PSDF model for dynamic parameter reconfiguration and the systematic mapping
    method of MDH to offer a novel design framework for dynamically structured signal
    processing systems that require significant amounts of run-time flexibility in
    reconfiguring operations, subsystems, and system parameters. We refer to our proposed
    framework as Parameterized Multidimensional Design Hierarchy Mapping (PMDHM).
    B. PMDHM Framework In this section, we present our proposed PMDHM framework for
    dataflow-based design, which is targeted to the flexible, multi-level reconfigurability,
    and intensive real-time processing requirements of emerging wireless communication
    systems. A PSDF specification is composed of three cooperating PSDF graphs, which
    are referred to as the init, subinit, and body graphs of the specification. Actors
    and edges in PSDF graphs can be annotated with arbitrary parameters, which can
    be changed at runtime. Such actors and edges correspond, respectively, to functional
    components and intra-component connections in signal processing flowgraphs (e.g.,
    see [7]). Parameters of actors and edges in a PSDF graph can only change between
    iterations of the enclosing dataflow graph. The init graph executes once during
    each iteration and is allowed to configure the associated subinit and body graphs.
    The subinit graph executes once during each execution of the corresponding PSDF
    subsystem. During such an execution, the subinit graph executes; new parameter
    values computed at outputs of the subinit graph are propagated to corresponding
    parameters in the body graph; and then the body graph executes based on the updated
    set of parameters. Parameter changes that are computed by the subinit graph cannot
    modify the consumption and production rates of the enclosing PSDF actor. For selected
    subsystems in a PSDF-based system design, a new design transformation called the
    parameterized multilevel hierarchical transformation (PMHT) can be employed to
    efficiently map the subsystem to a given target platform that employs parallelism
    at multiple levels (e.g., instruction-level, accelerator-level, and inter-core
    parallelism). Designers can thus select subsystems that have critical constraints
    (e.g., on performance, energy efficiency or resource utilization) for application
    of the PMHT. For each alternative body graph that results from different sets
    of parameter configurations (e.g., application or subsystem modes) in the init
    graph, the PMHT approach transforms an application graph with parameterized production
    and consumption rates (i.e., dataflow rates that are represented as functions
    of system parameters) into a hierarchical organization of graphs such that the
    structure of the hierarchy helps the designer to map the design onto the hierarchical
    parallel structures in the target platform. When applying the PMHT, actor clustering
    is first performed to combine one or more connected actors into units that are
    viewed as “supernodes” from the previous hierarchical level. We refer to these
    units as mapping clusters. In each mapping cluster, special interface actors,
    called intin and intout actors, are inserted to represent the injection of data
    into and out of the associated supernode. The standalone dataflow graphs representing
    the internal functionality of the mapping clusters, called intermediate representation
    (IR) graphs, can be utilized for further implementation analysis at each level.
    Presently, this clustering process and the associated transformation process is
    carried out by the designer, through systematic guidance by our proposed PMDHM
    methodology. Automating these processes of clustering and transformation are useful
    directions for further investigation, which we are actively exploring in our ongoing
    work. The supernodes constructed using this process are used for efficient mapping
    of flowgraph structures into architectures that employ multi-level parallelism.
    Such architectures, such as programmable digital signal processors and graphics
    processing units (GPUs), are becoming increasingly important in the realization
    of cognitive radio systems. Given a target platform T , we let n(T) denote the
    number of levels of parallelism (e.g., instruction-level or intra-core parallelism,
    as described above) in the platform that we explicitly consider in the mapping
    process, and associated with each level of parallelism, we assign a unique index
    k(1≤k≤n(T)) . Given a mapping cluster C and an actor α within C , we define the
    hierarchical firing vector H(α) for α to be a vector that represents, at each
    level of target platform parallelism, how many simultaneous (parallel) executions
    of α can be supported based on the flowgraph structure associated with that level.
    H(α) is a vector that has n(T) elements, each of which is a positive integer.
    H(α)[i]=j means that at level i of the target platform T , up to j executions
    (firings) of α can execute in parallel. The vector H(α) thus provides in a concise
    and precise form the parallel processing potential of a given signal processing
    flowgraph component relative to a given target platform. For application to PSDF-based
    design and implementation, we extend the concept of the hierarchical firing vector
    H so that the vector elements can be positive-integer-valued parameterized expressions
    in actor, subsystem, and system-level parameters. The resulting parameterized
    hierarchical firing vector P therefore captures variations in parallel processing
    potential in terms of relevant application parameters. Such variations can then
    be analyzed to provide efficient methods for reconfiguring processing structures
    as different application modes (e.g., different communication standards or operational
    constraints) are encountered at run-time. As an example, an expression of the
    form P(α)[i]=f( p 1 , p 2 ) can be used to represent (in terms of a given function
    f ) the relationship at platform level i between parallel processing potential
    and a pair of parameters ( p 1 and p 2 ). Fig. 1 Illustration of our proposed
    PMDHM-based design methodology for cognitive radio system design. Show All Figure
    1 summarizes the developments of this section with an illustration of our proposed
    PMDHM-based design methodology for cognitive radio system design. In Section II-C,
    we demonstrate the application of this design methodology to a practical communication
    system example. C. PMDHM Design Example In this section, we develop a case study,
    which demonstrates our proposed new PMDHM design methodology on the GPU-based
    implementation of channel estimation for wireless communication systems. Through
    this concrete example, we demonstrate how PMDHM can be applied to efficiently
    and systematically explore implementation trade-offs across various design configurations
    for the targeted channel estimation system. Orthogonal frequency division multiplexing
    (OFDM) is applied extensively to high-speed wireless communication systems because
    of its spectral efficiency, robustness in terms of multipath propagation, and
    high bandwidth efficiency [12]. Channel estimation (CE) is an important issue
    in many wireless OFDM systems for demodulation and decoding. The fading channels
    of OFDM systems, in general, can be modeled as two-dimensional (2D) signals in
    terms of time and frequency. Pilot-assisted channel estimation is one of the most
    popular schemes for estimating channel response in OFDM systems. This scheme operates
    by transmitting a pilot signal that is known at both the transmitter and receiver
    sides. At the receiver side, after computing the channel responses on pilot subcarriers,
    a 2D interpolation method is used to estimate the channel responses on data subcarriers.
    In this case study, we apply the technique of 2D minimum mean square error (MMSE)
    filters [13] for the interpolation. The channel response on data i can be found
    by h i = w i r , where r is the vector of channel responses on pilot subcarriers,
    and w i is the coefficient vector of the MMSE estimator for data i . This coefficient
    vector can be computed as w i =(R+ N 0 I ) −1 d i , where R is the auto-correlation
    matrix of the responses on pilots, d i is the cross-correlation vector between
    responses on data i and pilots, N 0 is the noise variance, and I denotes the identity
    matrix. Fig. 2 Dataflow graph for channel estimation. Show All Using the PMDHM
    framework, we model the targeted 2D channel estimator as shown in Figure 2 (top).
    Here, m and n are two parameters that represent the numbers of pilots and data
    samples, respectively, in a 2D resource block (i.e., the basic unit for 2D channel
    estimation). Since the parameters m and n both affect the production and consumption
    rates (dataflow rates) of PSDF actors in the system, they can only be configured
    in the init graph. This is a restriction imposed by the PSDF model to enhance
    predictability and the potential for deriving efficient implementations. Actor
    T generates a token that encapsulates the the pilot pattern that is to be applied.
    In the subinit graph, actor G reads this pilot pattern token, and correspondingly
    configures the parameters related to the pilot pattern in the actors of the body
    graph. The source actor P produces tokens associated with the responses on the
    pilot subcarriers, which are read in the body graph. The body graph contains three
    actors, I,W , and H . Based on the parameters set in the init and subinit graphs,
    the source actor I generates locations for the data subcarriers, which are consumed
    by actor W to compute the corresponding coefficients of the 2D MMSE filter. Actor
    H reads filter coefficients from W and pilot channel responses from P to interpolate
    and output the resulting responses on the data subcarriers. Finally, the sink
    actor Z reads and stores tokens that encapsulate the responses. In our experiments,
    we apply GPU acceleration to actor W to enhance performance when implementing
    our dataflow model of the channel estimation system. The regular computational
    structure of this actor makes it well suited to GPU mapping. The PMHT method is
    applied to W in conjunction with optimized vectorization (i.e., application of
    block processing to improve throughput and pipeline utilization) to exploit the
    multiple levels of parallelism in the targeted GPU. The IR graph for the first
    level is shown in the body graph of Figure 2. Similarly, the second-level IR graph
    is illustrated in Figure 2 (bottom), where actors D and C compute the cross-correlation
    d and the filter coefficients, respectively, for the input data subcarriers. Fig.
    3 Experimental results for PMDHM-based implementation of channel estimation. Show
    All Using the PMDHM approach, the parameterized hierarchical firing vector for
    W is found to be P=(1,m) . By applying vectorization with a parameterized vectorization
    factor (degree of block processing), denoted by β , we can implement actor W on
    the GPU with the parameterized hierarchical firing vector Q=(β,m) . In this form
    of vectorization, β resource blocks are required for each input block on which
    actor W operates. In our experiments, an NVIDIA GTX260 GPU and an Intel Xeon 3GHz
    CPU are used. We compare the performance between (1) the CPU implementation (all
    actors mapped to the CPU), and (2) a heterogeneous implementation with W mapped
    to the GPU and all other actors mapped to the CPU. We carry out these experiments
    for the two sets of parameter configurations (m,n)=(80,4) and (m,n)=(102,6) ,
    which are used in the LTE and WiMAX standards, respectively. Figure 3(a) shows
    our experimental results in terms of the speedup gain of the heterogeneous implementation
    compared to the CPU implementation. From the experimental results, we see that
    the heterogeneous implementation outperforms the CPU implementation for sufficiently
    large β(β>6 and β>16 for WiMAX and LTE, respectively). This is because optimized
    performance on the GPU requires effective utilization across a large number of
    threads [14]. Figure 3(b) illustrates the processing time per resource block for
    the GPU kernel (GPU-targeted functional component) associated with actor W . This
    measurement includes the time for memory transfer between the CPU and GPU. From
    the results, the processing times for both cases are high when the numbers of
    threads are small (i.e., for small values of β ). As β increases, the processing
    times decrease rapidly (since increasing numbers of threads are executed in parallel),
    and this performance improvement starts to saturate at approximately β=30 and
    β=40 , respectively, for the WiMAX and LTE settings. As shown in Figure 3(a),
    a large block processing (vectorization) factor can provide significant speedup
    on the heterogeneous platform - e.g., 200% and 155% speedup gain with β=100 for
    the WiMAX and LTE settings, respectively. However, such performance improvement
    leads to an increase in system latency since more resource blocks must be available
    to satisfy the vectorization requirements. In summary, the channel estimation
    case study presented in this section demonstrates the flexibility and potential
    for systematic design trade-off exploration offered by our proposed PMDHM framework.
    The agility of our design methodology is demonstrated in this case study by the
    application to heterogeneous platforms (GPU and CPU devices), communication standards
    (WiMAX and LTE), and system-level parameter configurations through a unified framework
    for modeling and analysis. Our PMDHM-based design methodology therefore provides
    a promising foundation for cognitive radio system design, where diversity in processing
    resources and functionality must be managed strategically and reliably at run-time
    under stringent operational constraints. SECTION III. Cognitive Radio Realization,
    Synthesis And Performance Evaluations In this section, we look at the the complexities
    in cognitive radio realization and non-contiguous channel aggregation in particular.
    As an example for required baseband processing algorithms in cognitive radio architectures,
    we focus on digital pre-distortion and show how dataflow modeling can help achieving
    a flexible design. Dynamic spectrum access [15] and cognitive radio systems have
    attracted a lot of interest recently as they facilitate a more efficient use of
    RF spectrum. A cognitive radio framework enables an unlicensed (secondary) user
    to utilize a licensed spectrum band as long as it conforms to the rights of the
    licensed (primary) users of the band. One approach to realizing dynamic spectrum
    access is allowing a secondary user to communicate across several non-contiguous
    frequency bands while it avoids interfering with primary user transmissions. As
    a result, the secondary user can benefit from an aggregation of channels which
    sum up to a sufficiently high overall transmission bandwidth. For example, non-contiguous
    orthogonal frequency division multiplexing (NC-OFDM) is an efficient method for
    the above-mentioned non-contiguous channel aggregation approach [16]. NC-OFDM
    advantages from the capabilities of OFDM transmission and provides a suitably
    configurable data transmission solution for cognitive radio systems by activating
    and deactivating sub-carriers based on dynamic spectrum sensing measurements [17].
    One drawback of the above-mentioned technique is that the RF front-end components
    impairments become more apparent because the secondary user operates across multiple
    non-continuous frequency bands and over a potentially large dynamic range. For
    example, the power amplifier (PA) is one of the important components in RF front-end
    which is known for its non-linear behavior in wide bands. For high peak-to-average
    power ratio (PAPR) of multi-carrier transmissions, PA''s non-linearity generates
    out-of-band spectral leakage that may interfere with transmissions on the neighboring
    channels. As a result, PA''s non-linear distortion can result in unreliability
    in cognitive radio systems. Digital pre-distortion, which is a well-studied technique
    to compensate for the non-linearity of PA, facilitates reliable spectrum sharing
    of primary and secondary users [18], [19]. Advanced cellular communication standards
    have considered the scarcity of RF spectrum and the benefits of spectrum sharing
    techniques. To achieve high data rates, carrier or channel aggregation (CA) has
    been contained within the specification of 4G LTE Advanced [20]. LTE-A carrier
    aggregation increases the overall transmission bandwidth by utilizing multiple
    intra-band contiguous or non-contiguous channels, but the challenge is to ensure
    that the performance is not degraded as a result of operation on a wider bandwidth.
    Furthermore, due to high levels of spectrum fragmentation, in many cases only
    small bands may be available and therefore carrier aggregation over more than
    one band (inter-band aggregation) is also considered in LTE-Advanced standard
    specification. Power amplifier spectral regrowth (inter-modulation) problem becomes
    even more complex in inter-band aggregation. Therefore, implementing the physical
    layer of cognitive radio systems is challenging; the physical layer design must
    be flexible and reconfigurable as the medium characteristics are dynamically changing.
    For example, the digital pre-distortion filter that mitigates the power amplifier
    non-linearity over non-contiguous channels must be adapted and reconfigured based
    on the channel characteristics. One approach is to make the pre-distortion processing
    parametrized. However, unfortunately the current physical layer design methodologies
    do not consider flexibility and reconfigurability as much as it is needed. A major
    complexity in the physical layer design which takes a lot of design effort is
    to make the parallel paths of sub-blocks in the system properly synchronized.
    In these designs, even a small change in a sub-block may result in a need for
    a complete re-timing of the design. In a graphical digital signal processing (DSP)
    design environment like Xilinx System Generator, re-timing may require inserting
    delay elements in data-paths and when the DSP hardware is modeled using a hardware
    modeling language like Verilog, retiming requires rethinking the size of the intermediate
    buffers and modifying the control unit finite state machine. The inflexible nature
    of the physical layer design makes design modifications hard. For the same reason,
    the on-the-fly reconfiguration of the physical layer is very challenging. In order
    to have a reconfigurable data-path, a dataflow modeling design methodology is
    very promising. Dataflow modeling makes the system timing easier as the system
    can be implemented as synchronous sub-blocks that are connected together with
    asynchronous buffers. However, while dataflow modeling facilitates the dynamic
    reconfiguration of a system and it allows systematic design optimizations, it
    requires inserting buffers on the communication links between subblocks (actors).
    Since memory is expensive and limited on platforms like FPGA, buffer minimization
    must be considered in dataflow modeling of cognitive radio physical layer. In
    order to understand the interactions and design space exploration among RF, baseband
    algorithms, and hardware architectures, we need to prototype our proposed cognitive
    radio solutions on a testbed. Implementing these solutions on a testbed allows
    us to perform a cross-layer analysis of the achieved spectrum and energy efficiency,
    as well as the design and implementation complexities. In addition, we develop
    advanced RF architectures to model the performance and operation of wireless terminals
    with realistic computational platforms. We analyze the overall complexity of the
    systems that are developed and synthesized based on parametrized and dynamic dataflow
    modeling approach. This enables making qualitative conclusions about the feasibility
    and economic viability of the developed concepts, system and transceiver algorithms,
    RF architectures and design processes for the future cognitive radio architectures.
    We use system level performance evaluation tools and framework to evaluate the
    system level performance and related spectrum and energy efficiency. Such evaluation
    will also provide a systematic approach for characterizing the operational trade-offs
    - including trade-offs among data rate, energy consumption, circuit area (cost),
    and communication reliability - across the cross-layer, cognitive radio design
    space. Such trade-offs will provide a mapping into estimates for key implementation
    metrics as a function of different combinations of design parameters. Such parameters,
    such as sample rate, bit precision, filter configurations, and system-and transceiver-level
    algorithm selection, will then be adapted systematically - in response to time
    varying application requirements and operational constraints - through the control
    of parameterized dataflow models (e.g., see [8], [21]). For hardware demonstrations
    and over-the-air experiments, we leverage WARP (Wireless open Access Research
    Plat-form) [22], [23]. WARP is an open platform that is designed to enable fast
    prototyping of physical layer algorithms. WARP v3 has a Virtex-6 FPGA as the main
    processing unit and two integrated radio 2.4/5GHz transceivers. In addition, WARP
    can be extended with more advanced RF modules through an FMC (FPGA Mezzanine Card)
    connection. See Figure 4 for a picture of WARP v3 and an independent radio transceiver
    board that can be connected to WARP via FMC. We use and extend WARP project''s
    open-source real-time OFDM reference design to implement digital pre-distortion
    and filter modules to study proof of concept in RF reconfiguration for cognitive
    radio systems. We evaluate the adaptability of the proposed cognitive radio architectures
    by systematic over-the-air tests using both real-time OFDM reference design on
    WARP and the accelerated simulations through WARPLab [24] operation mode. The
    measurements and experiments are currently being designed and in progress. Fig.
    4 WARP v3 testbed. Show All SECTION IV. Summary In this paper, we have outlined
    the four main focus areas of our WiFiUS collaboration: cognitive radio systems
    and algorithms, flexible radio architectures, design tools and hardware platforms,
    and realization, synthesis and performance evaluations. In particular, we have
    presented work-in-progress in the dataflow-based modeling and synthesis, and realization
    areas. This includes initial results in dataflow modeling of modules in an OFDM
    baseband reference design and performance speedup analysis on a GPU. Additionally,
    initial research in pre-distortion algorithms and the interface with the Rice
    WARP testbed are described. Future work will focus on the integration and adaptation
    of the proposed new parameterized multidimensional design hierarchy mapping methodology
    to RF testheds. ACKNOWLEDGEMENTS This work was supported in part by the US National
    Science Foundation under grants CNS-1265332 and CNS-1264486 as well as by Tekes
    - the Finnish Funding Agency for Technology and Innovation - through the WiFiUS
    program and the TRIAL programme under the project “Cross-Layer Modeling and Design
    of Energy-Aware Cognitive Radio Networks (CREAM)”. This work is a collaborative
    project with the research groups of Joseph Cavallaro at Rice Univ.; Shuvra Bhattacharyya
    at the Univ. of Maryland; Markku Juntti, Jani Boutellier and Olli Silvén at the
    Univ. of Oulu; and Mikko Valkama at the Tampere Univ. of Technology. Authors Figures
    References Citations Keywords Metrics More Like This Support vector machines for
    robust channel estimation in OFDM IEEE Signal Processing Letters Published: 2006
    A channel estimation method for NC-OFDM systems in cognitive radio context 2008
    11th IEEE Singapore International Conference on Communication Systems Published:
    2008 Show More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details
    PAYMENT OPTIONS VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES
    PROFESSION AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678
    4333 WORLDWIDE: +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact
    Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics
    Reporting | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE
    is the world''s largest technical professional organization dedicated to advancing
    technology for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2013
  relevance_score1: 0
  relevance_score2: 0
  title: Dataflow modeling and design for cognitive radio networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.7763/jacn.2015.v3.133
  analysis: '>'
  authors:
  - Mardeni Roslee
  - K. Anuar
  - M. Y. Alias
  - H. Mohamad
  - N. Ramli
  - K. Ismail
  citation_count: 0
  full_citation: '>'
  full_text: ">\n \nAbstract—We develop a new algorithm and performed a \nmeasurement\
    \ for spectrum mobility in cognitive radio network. \nThe operating frequency\
    \ range is 2.4GHz to 2.5 GHz. An \nalgorithm for spectrum handoff developed is\
    \ able to make the \ncognitive user to produce efficient decision to return the\
    \ \nspectrum to demanded licensed user. By using our proposed \nscheme, the cognitive\
    \ user able to adjust its transmission power \nwith sufficient protection to licensed\
    \ user instead of carrying \nout spectrum handoff and it is found working nicely.\
    \ In this \nproject, measurement and simulation were implemented and \nprovide\
    \ agreement around 89% to 92%. The purpose is to \nanalyze a new architecture\
    \ for spectrum mobility and handoff \nwith a sufficient level of Quality of Service\
    \ guarantee by \nInternet \nSystem \nProvider \nfor \nmore \nenergy \nefficient\
    \ \ncommunications. Energy-efficiency of mobile networks not \nonly reduces environmental\
    \ impact, it also cuts network costs \nand helps to make communication more affordable\
    \ for \neveryone. \n \nIndex Term—Spectrum mobility, handoff, cognitive radio.\
    \ \n \nI. INTRODUCTION \nCognitive radio devices able to sense their environment,\
    \ \nadapt to different conditions, and incorporate long term \nlearning. Integrating\
    \ situational awareness of the wireless \nspectrum, power grid usage, and the\
    \ needs of the systems \nusers with the power control of base station devices\
    \ opens \nup a new world of cognitive power control. In this project, it \nis\
    \ expected that the contributions is towards the cognitive \nradio and dynamic\
    \ spectrum access, and application-\noriented contributions dealing with new technology\
    \ of \nsystem designs. Finding new efficient-energy solutions for \nspectrum mobility\
    \ and handoff decision also helps spread \naccess to communications by opening\
    \ up more options for \nthe sitting of radio sites in a sustainable, low-impact\
    \ way, \nand reducing overall total cost of ownership. \n \nII. LITERATURE REVIEW\
    \ \nCurrently, inefficient use of spectrum data volume \nincreases approximately\
    \ by a factor of 10 every 5 years, \n \nresearch is fully sponsored under government\
    \ grant, science fund, ministry \nof science and technology (01-02-01-SF0191).\
    \  \nMardeni Roslee, K. Anuar, K. Ismail, and M. Y. Alias are with the \nFaculty\
    \ of Engineering, University of Multimedia, Jalan Multimedia, 63100 \nCyberjaya,\
    \ Selangor, Malaysia (e-mail: mardeni.roslee@mmu.edu.my, \nkhairil@mmu.edu.my,\
    \ \nkhairunissa.ismail@gmail.com, \nyusoff@mmu.edu.my).  \nH. Mohamad and N. Ramli\
    \ are with the Wireless Communications, \nMIMOS \nBerhad, \nKuala \nLumpur, \n\
    Malaysia \n(e-mail: \nhafizal.mohamad@mimos.my, nordin.ramli@mimos.my). \n \n\
    In current spectrum technology, there has been a growing \ninterest in cognitive\
    \ radio oriented network where the \ntechnology that promises to overcome the\
    \ problem of \nspectrum mobility resulting from the current approach of \nfixed\
    \ spectrum allocation. At the device level, each \ncognitive radio is able to\
    \ learn/understand the radio \nenvironment and to dynamically adapt its operating\
    \ \nparameters to make best use of the available spectrum. This \nis achieved\
    \ by equipping radio devices with enabling \ncapabilities such as spectrum sensing,\
    \ adaptive transmission, \nand software reconfigurability. At the system level,\
    \ \ncognitive radio networks, formed by cognitive radio devices, \nis to make\
    \ better usage of available spectrum to achieve \nhigher end-to-end quality of\
    \ service, e.g., in throughput \nand/or delay performance [2]. However, developing\
    \ an \nalgorithm and scheme of fully-functioning cognitive radio \nnetwork can\
    \ be challenging. \nIn the traditional management of licensed spectrum, users\
    \ \nusually pay and have the exclusive access of spectrum with \na minimum level\
    \ of Quality of Service (QoS) guarantee. On \none hand, the spectrum is getting\
    \ more and more crowded as \nthe number of wireless devices increases drastically.\
    \ \nHowever, on the other hand, the utilization of spectrum at \nany given time\
    \ is low. It can be seen that a lot of spectrum \nbands are not fully utilized.\
    \ Therefore, it would be efficient \nto allow unlicensed users to share spectrum\
    \ with licensed \nusers by using a unoccupied frequency band [2].  \nCognitive\
    \ Radio technology is developed to utilize these \nwhite spaces intelligently.\
    \ FCC Spectrum Policy Task Force \npublished a new spectrum management policy,\
    \ open access \nor license exempted model to allow unlicensed user or \nsecondary\
    \ user to use the unoccupied spectrum, known as \nopportunistic spectrum [3].\
    \ Seen as the secondary user, the \ncognitive radio (CR) must avoid interfering\
    \ with primary \nuser (PU), that is, licensed user, while sharing the licensed\
    \ \nband with the PU. Therefore, cognitive radio needs to sense \nthe spectrum\
    \ to detect the existence of PU, identify the \nwhite spaces of spectrum, and\
    \ adapt its transmission to one \nof the white spaces to avoid interfering with\
    \ PU [4], [5]. \nThere would be are more vacant channels available that can \n\
    causes a world-wide energy waste.  \nDetecting the vacant bands of the spectrum\
    \ is the crucial \ninitial step but very crucial in Cognitive Radio technology.\
    \ \nAlgorithm and Scheme for Spectrum Mobility in \nCognitive Radio Oriented Wireless\
    \ Network \nMardeni Roslee, Senior Member, IACSIT, K. Anuar, M. Y. Alias, H. Mohamad,\
    \ N. Ramli, and K. \nIsmail \nwhich corresponds to an increase of the associated\
    \ energy \nconsumption by approximately 16-20% per year. There are \n3% \nof \n\
    the \nworld-wide \nenergy \nis \nconsumed \nby \ntelecommunication system infrastructure\
    \ that causes about \n2% of the world-wide CO2 emissions, which is comparable\
    \ \nto the world-wide CO2 emissions by airplanes or one quarter \nof the world-wide\
    \ CO2 emissions by cars [1].\n7\nJournal of Advances in Computer Networks, Vol.\
    \ 3, No. 1, March 2015\nDOI: 10.7763/JACN.2015.V3.133\nManuscript received May\
    \ 4, 2014; revised September 15, 2014. The \nThere are three major cognitive radio\
    \ network techniques \nthat could be used to detect the existence of PU which\
    \ are \nmatched filtering, energy detection, and cyclostationary \nfeature detection\
    \ [6]. Among those, energy detector has been \nused widely due to its simplicity\
    \ and easy implementation. \nHowever as a radio device, a single CR may suffer\
    \ severe \nshadowing or multipath fading with respect to primary \ntransmitter\
    \ so that it cannot detect the existence of PU even \nin its vicinities. In addition,\
    \ there exists a hidden-node \nproblem, in which a CR may be too far from the\
    \ PU to \ndetect the existence, but close to the primary receiver to \ninterfere\
    \ with the reception if transmited [7]-[9]. Due to \nthese challenges, an efficient\
    \ algorithm and scheme are \nrequired in cognitive radio oriented wireless network\
    \ for \ncertain level of Quality of Service (QoS). A multiple \ncognitive radios\
    \ cooperate to reach an optimal global \ndecision by exchanging and combining\
    \ individual local \nsensing results. Allowing multiple users to cooperate, \n\
    cooperative sensing can increase the detection probability, \nreduce the detection\
    \ time, and achieve the diversity gain. \n \nIII. METHODOLOGY \nThe project objective\
    \ is divided into 2 paths which are \nalgorithm development and experimental design.\
    \ The \noperating frequency range is 2.4 to 2.5 GHz.  \nA. Proposed Spectrum Handoff\
    \ Algorithm \nIn algorithm development, this paper focuses on spectrum \nhandoff\
    \ where cognitive user can returns the spectrum to \ndemanded licensed user. Besides,\
    \ the cognitive user can \nchooses to adjust its transmission power with sufficient\
    \ \nprotection to licensed user instead of carry out spectrum \nhandoff. Using\
    \ our proposed scheme, cognitive user \nswitches between the bands if and only\
    \ if it is unable to \nmodify its transmission power within the tolerable limits.\
    \ \nTherefore, this paper aims to clearly describe the concepts of \ncognitive\
    \ radio and fuzzy logic, and the implementation of \nproposed algorithm. MATLAB\
    \ software simulations were \ncarried out and the results show the promising benefit\
    \ of \nusing our scheme in optimizing the power consumption and \nspectrum handoff\
    \ rate of cognitive radio. \nIn this work, spectrum handoff algorithm is proposed\
    \ and \nillustrated in the form of a flow chart as shown Fig. 1 below. \nOur spectrum\
    \ handoff algorithm focuses on the idea instead \nof returning the frequency band\
    \ back to reclaim primary \nuser (PU) and transferring to other idle bands, secondary\
    \ \nuser (SU) should try to adjust its transmission power. \nAs illustrated in\
    \ Fig. 1, when the time the algorithm is \nactivated, the aspect of SU needs to\
    \ compare values of the \npower transmitted from the PU and the power it can receives\
    \ \nfrom PU transmission. This comparison will act as the \nreference to measure\
    \ the distance between the users, and \ncalculate the power at which SU should\
    \ transmit. SU \nchanges its power transmitted accordingly to ensure no \ninterference\
    \ causing to neighbor PUs. It is worth to mention \nthat sometimes the power transmitted\
    \ by SU can be reduced \nto avoid redundant spectrum handoff. However, the \n\
    Shannon-Hartley theorem mentioned that if the power \ntransmitted of SU becomes\
    \ very low, the rate of \ntransmission will drop as (1).  \n \n)\n1(\nlog\n0\n\
    2\nN\nP\nB\nR\nSU\nC\nSU\n\n\n                        (1) \n \nwhere RSU is\
    \ the SU transmission rate, BC is the channel \nbandwidth, PSU is SU transmit\
    \ power and N0 is the thermal \nnoise. In other words, QoS becomes terrible and\
    \ the \nspectrum handoff will be the only option here. Therefore, \nour algorithm\
    \ is designed to reduce the interference as low \nas possible, and relying on\
    \ QoS parameter, system will \ndecide whether the spectrum handoff should take\
    \ place. \n \n \nFig. 1. Spectrum handoff algorithm. \n \nB. Implementation of\
    \ Proposed Algorithm \nThe spectrum handoff algorithm is implemented in a \nhierarchical\
    \ model where two Fuzzy Logic Controller, FLCs \nare used as shown in Fig. 2.\
    \ The first FLC is in charge of \nmeasuring the distance between users, and controls\
    \ SU \ntransmit power, Psu; while the second FLC is in charge of \nmaking decision\
    \ if handoffs to another frequency band is \nrequired or not. The second controller\
    \ consists of two \noutputs which are handoff power, Phandoff and power \nmodification\
    \ decision, MODPsu. The first output also defined \nas Phandoff indicates whether\
    \ a spectrum handoff is needed to \ncarry out. The second output also defined\
    \ as MODPsu \nindicates whether the power transmitted by SU is needed to \nadjust.\
    \ The actual actions of FLCs are explained in detail at \nthe following sections.\
    \  \n \n \nFig. 2. Block diagram of the spectrum handoff algorithm. \nC. Type\
    \ 1 Simulation Results \nFig. 3 to Fig. 5 illustrate the graph of SU’s transmission\
    \ \n8\nJournal of Advances in Computer Networks, Vol. 3, No. 1, March 2015\npower,\
    \ spectrum handoff decision and power modification \ndecision versus power received\
    \ by SU from PU. The graphs \nin the Fig. 3 to Fig. 5 consist of three different\
    \ colours and \npattern of lines, where each of them represents as a user with\
    \ \na value within the range of the Tpower: The red colour line \nrepresents Tpower=\
    \ -14 dBm (low power scale); green colour \nline represents Tpower= 0 dBm (medium\
    \ power scale); blue \ncolour line represents Tpower= 14 dBm (high power scale).\
    \ \nBoth of graphs in the figures illustrate that the distance \nbetween SU to\
    \ PU is change from far to near when the Rpower \nis increased. \n \n-80\n-75\n\
    -70\n-65\n-60\n-55\n-50\n-45\n-40\n-35\n-30\n2\n4\n6\n8\n10\n12\n14\n16\n18\n\
    SU Tx Power versus Power Received by SU from PU\nRpower,dBm\nPsu,dBm\n \n \nTpower=\
    \ -20 dBm\nTpower=   0 dBm\nTpower=  20 dBm\n \nFig. 3. Graph of PSU vs. Rpower.\
    \ \n \n-80\n-75\n-70\n-65\n-60\n-55\n-50\n-45\n-40\n-35\n-30\n0\n10\n20\n30\n\
    40\n50\n60\n70\n80\n90\n100\nSpectrum Handoff Decision versus Power Received by\
    \ SU from PU\nRpower,dBm\nSpectrum Handoff Decision\n \n \nTpower= -20 dBm\nTpower=\
    \   0 dBm\nTpower=  20 dBm\n \nFig. 4. Graph of Phandoff vs. Rpower. \n \n-80\n\
    -75\n-70\n-65\n-60\n-55\n-50\n-45\n-40\n-35\n-30\n15\n20\n25\n30\n35\n40\n45\n\
    50\n55\nSU Tx Power Modification Decision versus Power Received by SU from PU\n\
    Rpower,dBm\nMOD Decision\n \n \nTpower= -20 dBm\nTpower=   0 dBm\nTpower=  20\
    \ dBm\n \nFig. 5. Graph of MODPsu vs. Rpower \n \nFig. 3 represents the graph\
    \ of subscriber user power \nagainst received power. It can be investigated that\
    \ when the \nvalue of Rpower is increasing, the value of PSU is decreasing \n\
    because perception of SU moving closer to PU. Thus, SU \nshould reduce its transmission\
    \ power to avoid interference \nto PU. The value of PSU of the blue line in Fig.\
    \ 3 shows \nhighest, followed by green and red lines because the blue \nline is\
    \ far to the PU when compared to green and red lines. \nIn other words, the interference\
    \ caused by the blue line to \nthe PU is less possible. \nFig. 4 represents the\
    \ graph of handoff power against \nreceived power. It found that when the value\
    \ of the Rpower is \nincreasing, the value of Phandoff is increasing. This is\
    \ due to \nthe perception of SU moving closer to PU. Therefore, SU is \nrequired\
    \ to perform a spectrum handoff when the value of \nPhandoff exceeds certain limit.\
    \ The red line in Fig. 4 shows \nhighest chance to perform handoff, followed by\
    \ green and \nblue lines because it is near to the PU when compared to \ngreen\
    \ and blue lines. It also shows that the results are within \nthe acceptable range\
    \ [3]-[4]. The graph in Fig. 5 represents \nthe power modification decision against\
    \ received power. \nWhen the value of the Rpower is increasing, the value of \n\
    MODPsu is decreasing because perception of SU moving \ncloser to PU. SU is recommended\
    \ by the system on reducing \nits transmission power, PSU. The power reducing\
    \ method \ngives the chance for SU to avoid a spectrum handoff when \nthe condition\
    \ is met. It means the QoS of SU transmission is \nacceptable. The work has been\
    \ extended into experimental \ndesign in order to analyze more the received power\
    \ in \nspectrum. \nD. Experimental in the Lab  \nIn measurement path, the mobile\
    \ testbed architecture is \nshown in Fig. 6. One Universal Software Radio Peripheral,\
    \ \nUSRP has been configured to be the primary users and other \nto be the secondary\
    \ users. They transmit packets of random \ncontent at fixed carrier frequencies.\
    \ Like primary users, the \nUSRPs do not transmit data all the time and are \n\
    programmed to transmit data at random intervals and for \nrandom lengths of time.\
    \ The actual measurement setup is \nshown in Fig. 7. \nThe secondary users are\
    \ associated with an ID number \nwhich helps them uniquely identify each other.\
    \ Since they \nhave no licensed spectrum, they opportunistically use any \nvacant\
    \ frequency bands. The secondary users are configured \nto perform the following\
    \ tasks: 1) Decide if a given \nfrequency band is currently occupied or not; 2)\
    \ Change the \ntransmitting and receiving parameters at any given time; and \n\
    3) Make sure that its operation does not interfere with \nprimary users. Thus,\
    \ the USRPs acting like secondary users \nare programmed such that their structures\
    \ and parameters \nchange according to the channel conditions. There is also a\
    \ \nlaptop are used which acts as a monitor, providing the \nground truth of the\
    \ state of spectrum utilization. \nUSRPs are software defined radios which are\
    \ connected \nto a computer terminal or laptop via a USB cable. To gain \nall\
    \ the functionalities of a software defined radio, the USRPs \nwork on the GNU\
    \ radio platform. GNU radio software is an \nopen source toolkit which allows\
    \ the construction of radios \nwhere all hardware related problems like designing\
    \ and \nbuilding the required circuits are converted to software \nissues. The\
    \ laptop is used to view the state of spectrum \nutilization. \nAll the USRPs\
    \ are connected to laptop where LINUX is \nrunning to host the GNU radio software.\
    \ The GNU radio \nsoftware comes with programs which can be used for packet \n\
    transmission and reception and has many reconfigurable \noptions like carrier\
    \ frequency modulation type, data rate, \npacket length etc. To emulate a cognitive\
    \ radio network, the \nUSRPs are configured to take different roles. In this section,\
    \ \n9\nJournal of Advances in Computer Networks, Vol. 3, No. 1, March 2015\n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nprovide the algorithms and\
    \ software configuration \ndetails that achieve these roles on the USRPs.\nFig.\
    \ 6. Measurement block diagram\nFig. 7. Measurement setup\nIV.\nEXPERIMENTAL RESULTS\n\
    In this section we evaluate the performance of our testbed\nusing two main criterias.\
    \ The first one is the ability to sense a\npiece of spectrum and decide the unoccupied\
    \ channels, i.e.,\nspectrum sensing and second is to check the ability of the\
    \ \nwhole system demonstrating dynamic spectrum access. \nVarious operating parameters\
    \ of the cognitive radio network\nare provided.\nAs mentioned in previous section,\
    \ the USRP are used in\nour system have the capability to operate on both 2.4\
    \ GHz \nand 2.5 GHz range. The 2.4 GHz spectrum is chosen to avoid \ninterference\
    \ from the Wi-Fi network of the university faculty\noperating in range. To make\
    \ the primary user signals \ndifferent from the secondary users, the primary users\
    \ \ntransmit different modulated packets compared with the \nsecondary users.\n\
    This experiment was conducted in order to observe the \nspectrum utilization of\
    \ the proposed range as well as to \ncompare with the proposed algorithm. By using\
    \ the \nusrp_spectrum_sense.py, Fig. 8-Fig. 13 spectrums are \nobtained.\nFig.\
    \ 8. Spectrum for range 2.4-2.43 GHz.\nFig. 9. Spectrum for range 2.43-2.46 GHz.\n\
    Fig. 10. Snapshot of the spectrum using USRP for range 2.4-2.5 GHz.\nFig. 11.\
    \ Spectrum range for 2.4 – 2.43 GHz.\nUSRP\n10\nJournal of Advances in Computer\
    \ Networks, Vol. 3, No. 1, March 2015\n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \nFig. 12. Spectrum range for 2.43 – 2.46 GHz\n\
    Fig. 13. Snapshot of the spectrum using USRP for range 2.4 – 2.5 GHz.\nThe experiment\
    \ was done at different hours of the day to \nanalyse the spectrum utilization.\
    \ The results of measurement \nin the first phase can be seen in Fig. 8-Fig. 10\
    \ whereas data \nobtained in the second phase can be seen in Fig. 11-Fig. 13.\
    \ \nThe noise level in Fig. 8-Fig.10 is around 5 W/Hz. \nAssuming the spikes in\
    \ the spectrum are signals, it is found \nthat some spectrum range are underutilized\
    \ or holes are \nexisted [10]. Figure 8 shows the spectrum collected for \nrange\
    \ 2.4 - 2.43 GHz while Fig. 9 shows the spectrum \ncollected for range 2.43 -\
    \ 2.46 GHz. Fig. 10 is a \ncombination of the first two spectrums. The x-axis\
    \ \nrepresents the frequency with unit Hertz, while the y-axis \nrepresents the\
    \ received power in W/Hz. The noise level in \nFig. 11-Fig. 13 appears to be around\
    \ 3 W/Hz which is lower \nthan the measurement conducted in the morning. It is\
    \ found \nthat the spectrum range is fairly utilized or moderately used \n[11],\
    \ which is different from findings presented in Fig. 8-Fig.\n10. Through this\
    \ measurement, we are able to get power \nspectral densities of the existing signals.\
    \ Thus, we can \ndeduce many features of a spectrum like how good a\nchannel is\
    \ in terms of noise, the average power in a channel,\nthe peak power observed,\
    \ etc.\nFrom these experimental results, it then compared with\nthe proposed algorithm\
    \ results as described before for\nverification. The observation is implemented\
    \ for SU’s\ntransmission power within the range of low power scale, -\n20dBm,\
    \ medium power scale, 0dBm and high power scale,\n20dBm. From the experiment,\
    \ it shows that the distance\nbetween SU to PU, as in Fig. 6, is change from far\
    \ to near\nwhen the received power is increased. Another finding is\nwhen the\
    \ value of received power is increasing, the value of\nsecondary user power is\
    \ decreasing because perception of \nSU moving closer to PU. The mean error for\
    \ each point of\nsecondary user power is calculated using equation (2) in \norder\
    \ to observe the agreement between measurement and\nsimulation. The percentage\
    \ of agreement between the\nmeasurement and simulation are 92%, 91% and 89% for\
    \ low\npower scale, medium power scale, and high power scale,\nrespectively. From\
    \ this result, it able to verify the spectrum\nhandoff decision and power modification\
    \ decision as well.\nBesides, it also found that different sensing algorithms\
    \ are\nrealized on the testbed to demonstrate their effectiveness in\nidentifying\
    \ spectrum holes. The system is extended to\nincorporate collaborative spectrum\
    \ sensing amongst the\nsecondary users. Experimental results show that the\nreconfigurability\
    \ of the secondary users allows them to adapt\nto the channel occupancy states.\
    \ Although, the current \ntestbed is focused on spectrum mobility and dynamic\
    \ \nspectrum access, it has the ability to carry out extensive \nresearch in all\
    \ fields of the cognitive radio. Seen as the \nsecondary user, the\ncognitive\
    \ radio (CR) must avoid \ninterfering with primary user (PU), that is, licensed\
    \ user, \nwhile sharing the licensed band with the PU. Therefore, \ncognitive\
    \ radio needs to sense the spectrum to detect the \nexistence of PU, identify\
    \ the holes of spectrum, and adapt its \ntransmission to one of the white spaces\
    \ to avoid interfering \nwith PU.\nV. CONCLUSION\nIn this work, new algorithm\
    \ has been proposed and the\nsimulation results are performed by using MATLAB\
    \ \nsoftware. The performance comparison has been made \nbetween\nmeasurement\
    \ \nand \nsimulation \nand \nprovides \nagreement around 89% to 92%. From the\
    \ observation, it is \nfound that the average SU transmission power of our \n\
    designed algorithm is consumed more than the other \nalgorithm when the distance\
    \ between PU and SU is \nconstantly far over certain periods. As a result, its\
    \ signaling \ncost is higher than other algorithm. On other hand, the \nprocessing\
    \ cost of our designed algorithm is lower than other \nalgorithms because it still\
    \ guarantees a low spectrum handoff \nrate, where it is sufficient to convince\
    \ that the spectrum \nmobility function is performed efficiently. The work has\
    \ \nbeen extended to the experimental in the lab to verify the \nproposed algorithm,\
    \ where a cognitive radio testbed built on \nUSRPs. By configuring the USRPs to\
    \ play different roles, \nwe are successful in implementing a basic wireless\n\
    communication network with cognitive abilities where\ndifferent sensing algorithms\
    \ are realized on the testbed to\n11\nJournal of Advances in Computer Networks,\
    \ Vol. 3, No. 1, March 2015\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \nREFERENCES\n \n[1]\n \nB. Le,\n \nT. W. Rondeau, and C. W. Bostian,\
    \ “Cognitive radio realities,”\n \nWireless Communications and Mobile\n \nComputing,\
    \ vol. 7, 2007. \n \n[2]\n \nH. Zhang, “Cognitive radio for green communications\
    \ and green \nspectrum,”\n \nChinacom, Hangzhou,\n \nChina,\n \n2008.\n \n[3]\n\
    \ \nD. Niyato, E. Hossain, and Z. Han, “Dynamics of multiple-seller and \nmultiple-buyer\
    \ spectrum trading in\n \ncognitive radio networks: A game \ntheoretic modeling\
    \ approach,”\n \nIEEE Transactions on Mobile \nComputing, vol.\n \n8, no. 8, pp.\
    \ 1009-1022, August 2009\n \n[4]\n \nM. A. Sturza and F. Ghazvinian, “White spaces\
    \ engineering study: \nCan cognitive radio technology\n \noperating in the TV\
    \ white spaces \ncompletely protect licensed TV broadcasting?” New America \n\
    Foundation\n \nWireless Future Program, Working Paper no.\n \n16, January \n2007.\
    \ \n \n[5]\n \nK. Watanabe, K. Ishibashi, and R. Kohno, “Performance of cognitive\
    \ \nradio technologies in the presence of\n \nprimary radio systems,” in Proc.\n\
    \ \nthe 18th Annual IEEE International Symposium on Personal, Indoor\n \nand Mobile\
    \ Radio Communications, September 2007.\n  \n[6]\n \nD. Niyato, E. Hossain, and\
    \ Z. Han, “Dynamic spectrum access in \nIEEE 802.22-based cognitive wireless\n\
    \ \nnetworks: A game theoretic \nmodel for competitive spectrum bidding and pricing,”\n\
    \ \nIEEE Wireless\n \nCommunications, vol. 16, no. 2, pp. 16-23, April 2009.\n\
    \ \n[7]\n \nE. C.\n \nY. Peh, Y.-C. Liang, and Y. L. Guan, “Optimization of \n\
    cooperative sensing in cognitive radio networks:\n \na sensing-throughput \ntradeoff\
    \ view,” in Proc.\n \nthe IEEE International Conference on \nCommunications, June\
    \ 2009, pp. 1–5. \n \n[8]\n \nG. Ganesan and Y. Li, “Cooperative spectrum sensing\
    \ in cognitive \nradio networks,” in Proc.\n \nthe\n \n1st IEEE International\
    \ Symposium on \nNew Frontiers in Dynamic Spectrum Access Networks, November \n\
    2007, pp. 137–143.\n \n[9]\n \nL. Duan, J. Huang, and B. Shou, “Competition with\n\
    \ \ndynamic \nspectrum leasing,” IEEE DySPAN, April 2010.\n \n[10]\n \nH.\n \n\
    Stark and J.\n \nW. Woods,\n \nProbability And Random Processes with \nApplication\
    \ to Signal Processing Third Edition, Prentice Hall,\n \n2002, \npp. 66-75.\n\
    \ \n[11]\n \nR. Rao, Q. Cheng, A. Kelkar,\n \nand D. Chaudhari, “Cooperative \n\
    cognitive radio network testbed,” ICaST, June 2011.\n \n \nMardeni Roslee\n \n\
    received his bachelor degree in \nelectronic (Hons) from UKM, and master’s\n \n\
    degree in \ntelecommunication \nand \nPhD\n \ndegree\n \nin \ncommunication network\
    \ engineering from UPM, \nrespectively. He is a chartered engineer awarded \n\
    from UK. He has been\n \na faculty member at the \nMultimedia University, Malaysia\
    \ from 2008 until \nnow. He is a senior member of IACSIT, Member of \nIEEE and\
    \ IET. His current research interests are wireless and mobile \ncommunication\
    \ with radar system.\n \nHe has published over 40 international \njournal and\
    \ conference papers. He has been involved in organizing a \nnumber of conferences\
    \ including APWBF09, AFICT09, PIERS12, ISTT12 \nand MICC13. He has won some research\
    \ competitions including ITEX05, \nITEX13 and PRPI09. He has 12 graduated postgraduate\
    \ students in Masters \nand PhD. He has research grant amounting USD\n \n273,\
    \ 000.\n \n \nMohamad Yusoff Alias\n \nreceived his B.Sc.Eng. \n(E.E.) degree\
    \ from Michigan, USA and PhD\n \ndegree\n \nfrom Southampton,\n \nUK. He has been\
    \ a faculty \nmember at Multimedia\n \nUniversity, Malaysia from \n1998 and as\
    \ an associate professor since 2010. He is a \nsenior member of IEEE. His current\
    \ research interests \n \ndeputy\n \ndean of Institute of Postgraduate Studies\
    \ and \nMultimedia University. He was \nan\n \nhonorary \nacademic visitor\n \n\
    to\n \nUniversity of Manchester in year 2011.\n \n \n \n \n \n \n \n \n \nNordin\
    \ Ramli\n \nobtained his B.Eng,\n \nM.Eng and PhD\n \ndegrees\n \nfrom University\
    \ of Electro-Communications, \nunder Board of Engineer Malaysia (BEM) and senior\
    \ \nteaching \nassistant \nat \nUniversity \nof \nElectro-\nCommunications, Japan\
    \ at was a lecturer\n \nat \nMultimedia University, Malaysia in year 2008. He\
    \ \nwas a visiting senior lecturer at University Malaysia \nPerlis, Malaysia and\
    \ adjunct lecturer at Open University Malaysia. Now, he \nis working as staff\
    \ researcher at MIMOS Berhad, Malaysia. He has lead \nmany research grants and\
    \ has published more indexed international \njournals and conferences. He was\
    \ the chair of Chapter of IEEE Comsoc and \nVehicular Technology, Malaysia in\
    \ year 2013.\n \n \nKhairil Anuar\n \nreceived his B.Eng. (Hons) degree in \n\
    electrical and electronic engineering from University \nof Salford and masters\
    \ of science degree in \ntelecommunication from\n \ntechnical \nmanager at Biztari\
    \ Technocraft Sdn Bhd in year \n2004-2005 and working as a lecturer at Multimedia\
    \ \nUniversity since 2005. His current research interests \nare wireless mobile\
    \ communication\n \nand data \nnetworking. He has won some research competitions\
    \ \nincluding ITEX12\n \nand ITEX13. He is a graduate engineer of Board of \n\
    \ \n \n \n \n \ndemonstrate their effectiveness in identifying spectrum \nholes.\n\
    are OFDM, femtocell and Hetnet. He  serves  as \nJapan. He is a  professional\
    \ engineer registered \nmember of IEEE. He was a  research assistant and \nUKM.\
    \ He was a \nKhairunissa Ismail received the B.Eng. degree in \nelectronic from\
    \ Multimedia University in 2013. She \nis working as a research assistant at Multimedia\
    \ \nUniversity on cognitive radio networking and further \nstudies in masters\
    \ of science in Multimedia \nUniversity. Currently she is working on the algorithm\
    \ \nand scheme for spectrum mobility in cognitive radio \noriented wireless network\
    \ sponsored by Science \nFund, \nMinistry \nof \nScience \nand \nTechnology, \n\
    Malaysia.\nHafizal Mohamad received the B.Eng. degree with \nfirst class honors\
    \ and Ph.D. degree in electronic \nengineering from University of Southampton,\
    \ UK in \n1998 and 2003, respectively. He has been a faculty \nmember at the Multimedia\
    \ University, Malaysia from \n1998 until 2008. He was a visiting fellow at National\
    \ \nInstitute \nof \nInformation \nand \nCommunication \nTechnology (NICT), Yokosuka,\
    \ Japan in February-\nMarch, 2005. Since May 2007, he is a senior staff \nresearcher\
    \ at Wireless Communications Cluster, \nMIMOS Berhad. His current research interests\
    \ are cognitive radio and \nmesh network. He has published over 35 journal and\
    \ conference papers. He \nhas 18 patents pending at World Intellectual Property\
    \ Organization (WIPO) \nand Intellectual Property Corporation of Malaysia (MyIPO).\n\
    Author’s formal \nphoto\nEngineer Malaysia and member of IEEE.\n12\nJournal of\
    \ Advances in Computer Networks, Vol. 3, No. 1, March 2015\n"
  inline_citation: '>'
  journal: Journal of advances in computer networks
  limitations: '>'
  pdf_link: http://www.jacn.net/vol3/133-W003.pdf
  publication_year: 2015
  relevance_score1: 0
  relevance_score2: 0
  title: Algorithm and Scheme for Spectrum Mobility in Cognitive Radio Oriented Wireless
    Network
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- DOI: https://doi.org/10.1109/ntms.2012.6208756
  analysis: '>'
  authors:
  - Ramachandra Budihal
  - H. S. Jamadagni
  citation_count: 0
  full_citation: '>'
  full_text: '>

    This website utilizes technologies such as cookies to enable essential site functionality,
    as well as for analytics, personalization, and targeted advertising purposes.
    To learn more, view the following link: Privacy Policy IEEE.org IEEE Xplore IEEE
    SA IEEE Spectrum More Sites Donate Cart Create Account Personal Sign In Browse
    My Settings Help Access provided by: University of Nebraska - Lincoln Sign Out
    All Books Conferences Courses Journals & Magazines Standards Authors Citations
    ADVANCED SEARCH Conferences >2012 5th International Confer... Implementation and
    Benchmarking of CUSUM Algorithm for Spectrum Sensing under Low SNR Regimes on
    ANRC Cognitive Radio Testbed Publisher: IEEE Cite This PDF Ramachandra Budihal;
    H. S. Jamadagni All Authors 265 Full Text Views Abstract Document Sections I.
    Introduction II. System model Analysis and Implementation background III. Implementation
    IV. Experiment and results V. CONCLUSIONS Authors Figures References Keywords
    Metrics Abstract: Most of the research in dynamic spectrum access and cognitive
    radio network is directed towards the formulation of methods for spectrum access,
    management etc., that too, mostly in form of theoretical models with some simulated
    results to back their work. Many algorithms though novel in approach are designed
    with certain assumptions which are sometimes very hard to realize in practical
    scenarios. Therefore implementation of certain class of algorithms on platforms
    with real world environments is even more challenging, which perhaps is very important
    to test the hypothesis on which the results are presented by the designer/s of
    these algorithms. In this paper we discuss on the practical implementation of
    a sequential change detection algorithm - CUSUM (Cumulative Summation). We have
    implemented and characterized one of the several versions of CUSUM for single
    node sensor as the first step for benchmarking and also to unearth the complexities
    involved in its implementation on a hardware platform. We have used the ANRC''s
    hybrid Cognitive Radio testbed for the implementation, measurement and characterization
    of the same. We have found that the sequential change detector based algorithm
    is more robust detector than Snapshot ED under very low SNR regimes and through
    measurement and analysis we conclude that the online version of the same can avoid
    the SNR wall problem altogether. Published in: 2012 5th International Conference
    on New Technologies, Mobility and Security (NTMS) Date of Conference: 07-10 May
    2012 Date Added to IEEE Xplore: 31 May 2012 ISBN Information: ISSN Information:
    DOI: 10.1109/NTMS.2012.6208756 Publisher: IEEE Conference Location: Istanbul,
    Turkey SECTION I. Introduction A. Background FCC''s Spectrum policy task force
    (in 2002) reports [1] on spectrum usage in US that some parts of the spectrum
    is heavily occupied most of the times, while some parts of spectrum is unoccupied
    most of the time, besides some bands partially occupied in terms of time and space.
    This uneven occupancy distribution creates an opportunity to exploit the spectrum
    access by ‘opportunistic’ access of ‘spectrum holes’ both in temporal and spatial
    terms. Cognitive Radios(CR) have emerged as a new class of technology in wireless
    a system that has a potential solution to solve the problems related to scarcity
    of spectrum. To intelligently access spectrum without disrupting the primary licensee,
    spectrum sensing and subsequent spectrum decision system is identified as critical
    functionality of a CR. CR leads to maximum utilization of the spectrum without
    interfering with primary, subject to constraint on false alarm probability[2]
    [3]. However, the key challenge of spectrum sensing is the detection of the weak
    signals in noisy channels with a small probability of miss detection. This requires
    better understanding of very low SNR signals and its characterization in an actual
    test bed for testing and benchmarking the given spectrum sensing method. The expected
    behavior of CRs is not completely characterized in real-time environments, thereby
    causing a serious concern for the regulators and primary licensed users. Although
    there are ample amount of solutions/algorithms to prove the point; however, the
    concern cannot be fully solved in a theoretical framework. Their concerns can
    be addressed only through practical demonstrations, measurements in the real life
    use case scenarios. Also for cognitive users the appearance of primary users shouldn''t
    deteriorate its performance or assured QoS of the overall network. Most common
    feature seen in the classical approaches such as Snapshot based(ED)[4] are block
    based and memory-less i.e., it takes blocks of data, computes the decision statistic
    of current time slot and compares that with certain threshold that is statically
    or dynamically set. Most important issue with these approaches is modeling the
    dynamic behavior of the network such as Expectation, noise variance, SNR wall
    phenomenon[5] i.e., if the SNR of the received signal is below the set Threshold,
    detection will not be happen. Another key issue with the block based detection
    algorithms is that of latency to enter a band or exit the band is dependent on
    the block size, so this may typically cause interference to primary if latency
    is high and also cognitive radios cannot exploit the short transmission opportunities
    in a very busy network. In this paper, we concentrate on the above key issues
    and try to overcome this by implementing CUSUM detector to solve the problem of
    agility-how quickly the spectrum hole is detected and utilized, how effectively
    the detection can happen under very low SNR regimes. So as discussed in [6] [7],
    performance metric called EDD - Expected detection delay will be one of the key
    parameters that will help characterize the - Sequence change detection CUSUM algorithms
    vis-à-vis with Snapshot ED detector [4]. Our goal is to not only to analyze the
    statistical framework dealt in many previous works [8] [9] [10] but also to formulate
    an implementation methodology, besides, providing an optimal scheme for practical
    usage after implementation. Conventionally, typical characterization is done on
    a small test bed, which is best suited for limited performance measurement under
    certain limitations/assumptions, but these results cannot be directly used unless
    it is validated with large scale network characterization which is perhaps close
    to reality. In order to increase the usefulness of the typical characterization,
    we have used our ANRC''s Hybrid Cognitive Radio testbed[11] to verify and validate
    the performance characterization with process called co-simulation along with
    hardware in loop tests and measurements. B. Design and Implementation goals In
    this paper we provide the detailed procedure to benchmark ‘CUSUM based Spectrum
    sensing for Single node sensor’, its performance characterization by plotting
    its False Alarm Probability ( P fa ) Vs Threshold γ under null hypothesis and
    Expected Detection Delay (EDD) vs. Threshold γ under alternate hypothesis. The
    implementation/experiment setup is split into following: MATLAB (theoretical)
    implementation of theory as discussed in the system model in section II. Implementation
    of ‘Platform’ model in Python and ‘C’ using GNU Radio blocks, SciPy library and
    deployment on USRP/USRP2 hardware in loop in emulator part of the test bed. The
    same code when used with Signal and noise generators will serve as simulators
    too in the testbed. More is discussed in section III and IV. We verify that there
    is agreement between MATLAB/theoretical model, Simulation and Platform models
    of the GNU/C/Python The first part of experimentation will focus on benchmarking
    under Null hypothesis H0. Where both primary and cognitive transmitters are shut
    and the setting of the initial Threshold γ for a required False Alarm probability,
    SNR constraints. By running the detector online we find out the Probability of
    false alarm P fa for given Threshold and then to the plot P fa vs. Threshold.
    The second part experiment will focus on benchmarking under Alternate hypothesis
    H1 where primary transmitter is switched on to transmit then the EDD is calculated
    for a given Threshold under various SNR levels to give a EDD vs. Threshold plot
    for various SNR levels. SECTION II. System model Analysis and Implementation background
    A. Basic hypothesis and system model analysis Spectrum presence is the testing
    of the following two hypotheses: H0:Y[n]=W[n] spectrum not occupied H1:Y[n]=X[n]+W[n]
    spectrum is occupied n=1,2,…,N where N is the observation interval The noise W[n]
    is generalized to AWGN (details in sec. III.B) with zero mean and fixed variance
    σ 2 w to simplify the theoretical calculations and making implementation on a
    platform viable[4]. When the signal is present, X[n]=gS[n] is zero mean Gaussian
    with variance σ 2 x where g is the time invariant channel gain between primary
    and sensor and S[n] is the faded primary user signal received by the sensor. Traditionally,
    modelling involved the classical hypothesis testing problem, in this we will formulate
    using the sequential change detection framework as defined in [6]. To make implementation
    viable, we assume that both σ 2 w and σ 2 x are known initially. We assume that
    the primary is absent and at some unknown time τ the primary becomes active. Thus
    bringing change in the distribution of the observations from N(0, σ 2 w ) to N(0,
    σ 2 w + σ 2 x ) at unknown time τ . The focus of CUSUM algorithm modeling is to
    quickly detect this change for a given constraint of P fa . Let us define a time
    T such that if T>τ then the detection delay is δ=T−τ , if T<τ , a false alarm
    has occurred with the mean time between false alarm (MTBF) being T f = E 0 [T]
    , where E 0 is the mean before the change. As described in [12] [13] the Non-Bayesian
    approach minimizes the worse case detection delay while maintaining the MTBF larger
    than certain Threshold, T f ≥γ . Second approach is to use the EDD (Mean detection
    delay), which is asymptotically equivalent to worst case delay [10]. Our goal
    is to mitigate interference to primary, which converges to minimization of Detection
    delay T d this is based on the CUSUM algorithm defined by Page [12] henceforth
    increasing the efficiency of the CUSUM. Currently, our interest is to implement
    and demonstrate a single user detection problem using CUSUM W n+1 as given below
    for OFF to ON W n+1 = [ W n +ln f 1 ( Y n ) f 0 ( Y n ) ] + (1) View Source for
    ON to OFF W n+1 = [ W n +ln f 0 ( Y n ) f 1 ( Y n ) ] + (2) View Source where
    (x ) + =sup(0,x), f 0 ( Y n ) and f 1 ( Y n ) are the distributions of ( Y n )
    before and after the change respectively. the cumulative function (1), (2) can
    be recursively calculated for n≥1 where the algorithm stops at first n for which
    W n ≥λ>0 and by setting W 0 =0 . So the detection time is given as follows τ=inf{n:
    W n >λ} (3) View Source where τ is the time taken for the signal to cross λ .
    In the following, we use the results of [15] to characterize the relationships
    among the threshold, MTBF and worst case detection delay. Let''s denote γ as the
    threshold and it is known that the CUSUM minimizes EDD, E[τ] when τ≥γ , therefore
    from results of [13] we can get simple bounds when γ is large to be represented
    asymptotically as follows: τ varies exponentially with parameter γ , i.e., the
    CUSUM is approximated as   E 0 [T]∼ e γ EDD=γ/E[τ] (4) (5) View Source hence we
    can conclude that for any pre-designed EDD to false alarm, we can compute the
    corresponding threshold γ by using (4),(5). B. Implementation background While
    the CUSUM [14] [16] requires exact knowledge of the real time channel statistic
    such as gain and noise power (mean and variance) for each sensing node, the other
    variant called GLR-CUSUM, doesn''t assume the exact knowledge of channel gain
    and noise power the third variant Non-Parametric CUSUM algorithm functions without
    any apriori knowledge of channel statistics. The complexity in implementing these
    algorithms also increases in respective order, Hence, we have used the intuitive
    process in implementing a psuedo on-line algorithm which calculates in-band channel
    statistics and feeds to the detection algorithm simultaneously while it continues
    to gather information on channel, however, the initial statistic gathering will
    be taking more time for a desired P fa and SNR, after which the calculation will
    become almost online with a minimum delay of one slot. Till it completes the initial
    threshold calculation (details in sec III.B) using the CUSUM based estimator,
    it will not enable the CUSUM based online detector block. We consider a slotted
    system model for implementation simplicity, when primary is inactive, in the beginning
    of each slot, the sensing node will sense the channel and make observations, they
    detect the changes and appropriately act based on spectrum decision. We present
    here some final simplified equations that are used to implement our algorithm.
    Mean μ (same as E[τ] ) is used to calculate the EDD and is given by For H1 : μ=
    E H 1 [ln f 1 ( Y n ) f 0 ( Y n ) ],for OFF−ON case (6) View Source For H0 : μ=
    E H 0 [ln f 0 ( Y n ) f 1 ( Y n ) ],for ON−OFF case (7) View Source Therefore
    EDD≈γ/μ (8) View Source and since f 0 ( Y n ) and f 1 ( Y n ) are the pdf of OFF
    and ON states respectively, simplifying (6), (7) by using the definitions of pdf
    and then substituting the same in (1) and (2) we get final CUSUM equations as:
    for OFF to ON W n+1 = [ W n −( N 4 σ 4 ( σ 4 x +2 σ 2 m σ 2 x −2x σ 2 x ))] +
    (9) View Source for ON to OFF W n+1 = [ W n +( N 4 σ 4 ( σ 4 x +2 σ 2 m σ 2 x
    −2x σ 2 x ))] + (10) View Source C. Performance The performance is measured and
    characterized by a resulting pair of mean detection delay (EDD) and false alarm
    probabilities ( EDD, P fa ) for H1 and H0 respectively. These are associated with
    the particular SNR and threshold that tests the decision statistic. A decision
    statistic for energy detector is given by: T=∑ A i /N for i=1 to N (11) View Source
    Samples data set has to be large for low SNR signals. so if N>>>1 using the central
    limit theorem we can approximate the X 2 (k) test statistic as Gaussian random
    variable X 2 (k)≈N(k,2k) for large N [17], we have taken N= NFFT ∗ Nbin ∗ Nblk=
    128 ∗ 128 ∗ 250 T∼N( σ 2 w ,2 σ 4 w /N) for noise T∼N( σ 2 w + σ 2 x ,2( σ 2 w
    + σ 2 x )2/N) for Signal and Noise, Where, σ 2 w is the noise variance σ 2 x is
    the signal variance N is the number of samples used for averaging We have used
    the SNR dB (SNRwall) to be at −20dB for our testing and it translates to a very
    low SNR (0.0316 - transmitted power to noise power) where ( σ 2 w + σ 2 x ) 2
    ≈ σ 4 w (12) View Source D. Emulation part of the (Hardware-in-loop) Testbed We
    are using USRP/USRP2s (Universal Software Radio Peripheral) which works in conjunction
    with GNU Radio; a free-software framework for the creation of Software defined
    Radio (SDR)[18] [19]. More details on ANRC hybrid testbed are in [11]. Various
    plug-on daughter-boards allow the USRP and USRP2 to be used on different Radio
    Frequency Bands. Daughter-boards are available from DC to 5.9 GHz. GNU Radio is
    a free software development toolkit that provides the signal processing runtime
    and processing blocks to implement software radios using readily-available, low-cost
    external RF hardware and commodity processors. SECTION III. Implementation As
    mentioned in sec I.B, we have implemented the reference in MATLAB for making it
    close to theoretical framework. Results of this serve as reference benchmark for
    other implementations. We have used GNU Radio, SciPy libraries along with ‘C’
    and Python codes to bind the libraries and implement the complete algorithm which
    runs on USRP2 platforms of ANRC CR Testbed. A. Module description The algorithm
    implementation block diagram is given in fig 3.1 and is as explained in sec II.B
    a. Power estimator - This module calculates the power received by the sensor based
    on the concepts of Periodogram explained in sec II C [17]. Channel Statistic extractor
    - This module estimates the mean and variance Threshold Estimator - This module
    takes the input parameters Designed SNR, Desired P fa , Mean μ , variance ξ (same
    as σ 2 ) and delivers the modelled P fa and threshold γ based on the DSNR and
    DPfa parameters. Delay element - this is one slot queue for delaying the data
    stream arrival to the Change detector Change detector - This is the CUSUM implementation
    module that takes the input data stream which is live from Rx Buffer and the Threshold
    γ , Modelled P fa is used to deliver the decision statistic indicating the change
    occurrence. Figure 3.1: CUSUM Implementation block diagram of modules Show All
    B. Algorithm operation The output of the USRP source block is a stream of complex
    floats, which is arranged into a vector for computing the FFT of the received
    signal. The FFT length is chosen as per the frequency resolution requirements.
    The squared magnitude of the frequency domain values is computed next, whose output
    is a GNU Radio vector of floats. The averaging block is decomposed into an adder
    block followed by a multiplier block. The adder block in the GNU Radio libraries
    can only compute the sum of streams of data. Since the output of the squared magnitude
    block is of the vector form, it is first converted to a stream which is then decomposed
    into streams. The resulting sum of the adder block is scaled using the multiplier
    block which will yield a measure of the power of the signal. This output is saved
    in GNU Radio vector sink. The contents of the streams block exhibit the characteristics
    of a chi-square random variable because of the virtue of squared magnitude operation
    which has been approximated to Gaussian by averaging over large number of blocks
    and stored in Vector sink of GNU Radio library. The GNU Scientific Library for
    Python SciPy libraries Wrappers being used to compute the mean and standard Deviation
    by assigning the Vector Sink to a NumPy Array which is the Base class of the Scipy
    Array. The central limit theorem states that the mean of large number of chi-square
    random variables tend to follow the Gaussian distribution. So using SciPy libraries
    the mean of a large number of data in vector sink is computed. In the implementation
    the Averaging of the Chi-Square distribution is done over 10–100 Blocks to make
    Gaussian Approximation. Thus the Decision Statistic of the AWGN channel is obtained
    from the Channel statistic extractor. The Threshold estimator is actually an offline
    CUSUM algorithm implementation which takes the real time channel statistic and
    computes the threshold γ and P fa for a given input constraint of SNR and desired
    P fa , however, we have put this module into another thread parallel to the Change
    detector module so as to give a live update which is one slot ahead of the detector.
    This module is pronominal to the CUSUM algorithm as it is based on the modeling
    of the system using the statistical characteristic of the channel which is not
    deterministic in nature. Also, there is no closed form expression in the CUSUM
    as in case of Snapshot ED Algorithm[4]. The estimator takes the mean ( μ 0 ) and
    variance ( σ 2 0 ) of Noisy channel under hypothesis H0 to compute the Log likelihood
    Ratio (LLR) until a false alarm is Generated which there in gives the mean time
    between False Alarm(MTBF). The mean ( μ 1 ) and variance ( σ 2 1 ) of Noisy channel
    along with the Signal under hypothesis H0 is designed based on the SNR upon which
    the system is modeled. Decision statistic is computed by using the Random Gaussian
    Generator from GNU scientific Library. The P fa obtained from the MTBF is compared
    to the desired P fa to determine the Threshold γ for the model. This P fa is used
    further in the implementation for the spectrum sensing of the Primary. This method
    of computation of P fa is moving averaged over a large number of iterations to
    minimize the error in the desired P fa and modeled P fa . Hence the final P fa
    and the threshold (γ) for the CUSUM from the estimator is the intelligent way
    of implementing the CUSUM which needs a priori knowledge about the channel. This
    module has one caveat though, i.e., the initial estimation takes a longer time
    to generate threshold γ , so the change detector is blocked till the initial computation
    is done by a control message ‘Blk En’ (Block Enable). C. Implementation issues/Hardware
    limitations There are some implementation related issues pertaining to limitations
    in the hardware we have used as a part of testbed, it is worth a mention here
    but detailed analysis is beyond the scope of this paper. Here are few of them:
    Switching time from sensing to transmission and vice versa is significant due
    to various latencies in the systems both hardware, OS and device driver pipelines
    Under-run and overrun errors of USRP due to mismatch of operating speeds of host
    system and the radio creates major havoc and the algorithms have to be restarted
    if there is not error trap mechanisms built in the code Frequency offsets in both
    the convertors also has significant issues pertaining to mismatch in timing between
    transmitter and receiver blocks. So one has to take care of calibration during
    the self test RF boards frequency gains various between different boards and also
    at times - careful RF calibration is mandatory to ensure that a flat response/gain
    is achieved both at transmitter and receiver before any measurement happens. SECTION
    IV. Experiment and results A. Experimental setup The calibration setup is as in
    fig. 4.1b and the larger ANRC Testbed (emulation, co-simulation) setup is as fig.
    4.1a more details on this is in [11]. Initially we calibrated the radio transmitter
    using a spectrum analyzer so as to analyze the RF power with respect to variation
    in frequency. This is done to ensure that the power we intend to transmit is same
    as what we indicate in the software as the power that actually gets transmitted
    for various bands of frequencies varies in reality depending upon the RF characteristics
    of transmitter. Through this process we characterized the transmitter behavior
    for various amplitudes and frequencies so that we have normalized power reception
    at the receiver to rule out any error on transmitter side. Figure 4.1b ANRC''s
    Hybrid Cognitive Radio Testbed setup Show All B. Experimental results Each of
    the cases below has the Platform results under two conditions which in-turn has
    three variations (for brevity, we have not shown plots of reference implementation
    for all cases. Data used for emulation is actual RF data received by receiver
    from transmitter after RF calibration). Figure 4.1b Experimental setup for calibration
    Show All 1) Result under presense of noise and absense of signal We have multiple
    levels of verification of our implementation on platform. Firstly, we verify the
    consistency of P fa between the theoretical implementation and the simulations
    using GNU Radio library implemented in ‘C’, simulations using the SciPy libraries
    implemented in Python. We keep the same mean and variance for noise only as input,
    but we vary the threshold γ for each of the trails. Figure 4.2 P fa vs. threshold
    γ plot for Simulation in C, Python and MATLAB theoretical models Show All Figure
    4.3 P fa vs. threshold γ plot for Simulation in C, GNU Radio platform and MATLAB
    theoretical models Show All The second level verification is between actual implementation
    running on the test bed platform and between the simulation in MATLAB to test
    the consistency between platform realtime measurements and the simulated offline
    calculations. We captured the realtime data from the Rxbuffer and provided the
    pipes to GNU Radio implementation which is part of the platform emulation and
    the other to ‘C’ code in the testbed to run a co-simulation, the third was basically
    the offline calculation in MATLAB, where the file was written from the captured
    data and verified offline (fig 4.2, 4.3). 2) Result under presense of noise and
    signal Under this condition, it would be of interest to characterize and performance
    measure the EDD (mean detection delay) w.r.t. various SNR regimes (fig 4.4, 4.5).
    Here is the process of measuring the EDD: Switch on the primary transmitter to
    transmit at a particular power level able the noise floor (-50 db) Run the simulator
    algorithm offline using the realtime data till it crosses the threshold. An observation
    counter keep tracks of the observation till it crosses threshold, accumulate the
    observation counter and reset the observation counter, CUSUM algorithm i.e., set
    W 0 =0 Repeat step b for about 1500 detections the value of accumulator divided
    by total detections give the EDD value in simulator and then use this EDD and
    repeat measurements for various new Design SNR, which is given as input to the
    system In case of Platform code, after the preset count of detections, the ‘Block
    enable’ message from the Threshold Estimator module enables the CUSUM Change Detector
    module to become online, this is the caveat that was mentioned earlier, which
    makes the detector to have a delayed start to overcome the CUSUM limitation of
    apriori knowledge about the realtime channel statistic such as noise and variance.
    Figure 4.4 Plot of EDD vs. Threshold for SNR 0.0106 Show All Figure 4.5 Plot of
    EDD vs. Threshold for SNR 0.0246 Show All Table 4.1 Snapshot ED vs. CUSUM under
    H0 (Practical FAR) Table 4.2 Snapshot ED vs. CUSUM under H1 (EDD) SECTION V. CONCLUSIONS
    We have analyzed the system model and reduced implementation complexity of CUSUM
    based change detection algorithm and characterized its performance under both
    the hypothesis H 0 , H 1 on co-simulation platform. Both the cases (simulation,
    h/w) have full agreement with the theoretical models even under very low SNR dB
    (−20dB), also the comparison tables (4.1), (4.2) shows that CUSUM outperforms
    Snapshot ED, that fails to detect under SNR wall. ACKNOWLEDGMENTS We thank Prof.
    Chandra Murthy, Prof. Neelesh Mehta and Prof. Vinod Sharma for helping us understand
    the perspective behind the theoretical frameworks that greatly helped in implementation,
    our colleagues, Dr. Swarna Babu for reviewing the manuscript, Umesh, and Bharadwaj,
    who helped in implementation and testing Authors Figures References Keywords Metrics
    More Like This Signal to Noise Ratio of APD-Based Monolithic Scintillator Detectors
    for High Resolution PET IEEE Transactions on Nuclear Science Published: 2008 Signal
    to Noise Ratio of Monolithic Scintillator Detectors for High Resolution PET 2006
    IEEE Nuclear Science Symposium Conference Record Published: 2006 Show More IEEE
    Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS VIEW
    PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved.'
  inline_citation: '>'
  journal: ''
  limitations: '>'
  pdf_link: null
  publication_year: 2012
  relevance_score1: 0
  relevance_score2: 0
  title: Implementation and Benchmarking of CUSUM Algorithm for Spectrum Sensing under
    Low SNR Regimes on ANRC Cognitive Radio Testbed
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
