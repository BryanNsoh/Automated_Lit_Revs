- analysis: '>'
  authors:
  - Fiondella L.
  - Hogewood L.
  - Ligo A.
  - Linkov I.
  citation_count: '0'
  description: The resilience of energy and water systems is central to the well-being
    and livelihood of communities. These systems are also of critical importance to
    military installations, which must be able to sustain operations despite disruptions
    and targeted attacks. Recently, edge computing has emerged as a technical enabler
    of improved resilience through enhanced coordination and control despite such
    disturbances. However, the complex and computational nature of edge computing
    also comes with risks that may degrade resilience. To properly understand the
    benefits and disadvantages of incorporating edge computing into energy and water
    systems, this paper surveys studies at the intersection of edge computing, resilience,
    and energy systems, identifying tradeoffs, opportunities, and technical gaps.
    Subsequently, recommendations are made to realize resilience by design of energy
    systems incorporating edge computing
  doi: 10.1109/EMR.2023.3320876
  full_citation: '>'
  full_text: '>

    "IEEE.org IEEE Xplore IEEE SA IEEE Spectrum More Sites Donate Cart Create Account
    Personal Sign In Browse My Settings Help Access provided by: University of Nebraska
    - Lincoln Sign Out All Books Conferences Courses Journals & Magazines Standards
    Authors Citations ADVANCED SEARCH Journals & Magazines >IEEE Engineering Management
    R... >Early Access Edge Computing as an Enabler of Energy and Water System Resilience
    Publisher: IEEE Cite This PDF Lance Fiondella; Luke Hogewood; Alexandre Ligo;
    Igor Linkov All Authors 41 Full Text Views Abstract Authors Keywords Metrics Abstract:
    The resilience of energy and water systems is central to the well-being and livelihood
    of communities. These systems are also of critical importance to military installations,
    which must be able to sustain operations despite disruptions and targeted attacks.
    Recently, edge computing has emerged as a technical enabler of improved resilience
    through enhanced coordination and control despite such disturbances. However,
    the complex and computational nature of edge computing also comes with risks that
    may degrade resilience. To properly understand the benefits and disadvantages
    of incorporating edge computing into energy and water systems, this paper surveys
    studies at the intersection of edge computing, resilience, and energy systems,
    identifying tradeoffs, opportunities, and technical gaps. Subsequently, recommendations
    are made to realize resilience by design of energy systems incorporating edge
    computing Published in: IEEE Engineering Management Review ( Early Access ) Page(s):
    1 - 10 Date of Publication: 29 September 2023 ISSN Information: DOI: 10.1109/EMR.2023.3320876
    Publisher: IEEE Authors Keywords Metrics More Like This Automatic Generation of
    Hierarchical Contracts for Resilience in Cyber-Physical Systems 2019 IEEE 25th
    International Conference on Embedded and Real-Time Computing Systems and Applications
    (RTCSA) Published: 2019 Resilience of Cyber-Physical Systems: Role of AI, Digital
    Twins, and Edge Computing IEEE Engineering Management Review Published: 2022 Show
    More IEEE Personal Account CHANGE USERNAME/PASSWORD Purchase Details PAYMENT OPTIONS
    VIEW PURCHASED DOCUMENTS Profile Information COMMUNICATIONS PREFERENCES PROFESSION
    AND EDUCATION TECHNICAL INTERESTS Need Help? US & CANADA: +1 800 678 4333 WORLDWIDE:
    +1 732 981 0060 CONTACT & SUPPORT Follow About IEEE Xplore | Contact Us | Help
    | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting
    | Sitemap | IEEE Privacy Policy A not-for-profit organization, IEEE is the world''s
    largest technical professional organization dedicated to advancing technology
    for the benefit of humanity. © Copyright 2024 IEEE - All rights reserved."'
  inline_citation: '>'
  journal: IEEE Engineering Management Review
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Edge Computing as an Enabler of Energy and Water System Resilience
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Li C.S.
  - Darema F.
  - Chang V.
  citation_count: '33'
  description: The introduction of pervasive and ubiquitous instrumentation within
    Internet of Things (IoT) leads to unprecedented real-time visibility (instrumentation),
    optimization and fault-tolerance of the power grid, traffic, transportation, water,
    oil & gas, to give some examples. Interconnecting those distinct physical, people,
    and business worlds through ubiquitous instrumentation, even though still in its
    embryonic stage, has the potential to create intelligent IoT solutions that are
    much greener, more efficient, comfortable, and safer. An essential new direction
    to materialize this potential is to develop comprehensive models of such systems
    dynamically interacting with the instrumentation in a feed-back control loop.
    We describe here opportunities in applying cognitive computing on interconnected
    and instrumented worlds (Cognitive Internet of Things–CIoT) and call out the system-of-systems
    trend among distinct but interdependent worlds, and Dynamic Data-Driven Application
    System (DDDAS)-based methods for advanced understanding, analysis, and real-time
    decision support capabilities with the accuracy of full-scale models.
  doi: 10.1080/17517575.2017.1355984
  full_citation: '>'
  full_text: '>

    "Access provided by University of Nebraska, Lincoln Log in  |  Register Cart Home
    All Journals Enterprise Information Systems List of Issues Volume 12, Issue 4
    Distributed behavior model orchestration .... Search in:                                        This
    Journal                                                                                Anywhere                                                                  Advanced
    search Enterprise Information Systems Volume 12, 2018 - Issue 4: Fog Computing
    and Internet of Everything for Emerging Enterprise Information Systems Submit
    an article Journal homepage Full access 495 Views 31 CrossRef citations to date
    0 Altmetric Listen Original Articles Distributed behavior model orchestration
    in cognitive internet of things solution Chung-Sheng Li , Frederica Darema & Victor
    Chang Pages 414-434 | Received 04 Oct 2016, Accepted 12 Jul 2017, Published online:
    26 Jul 2017 Cite this article https://doi.org/10.1080/17517575.2017.1355984 In
    this article ABSTRACT 1. Introduction 2. Cognitive IoT solution architecture 3.
    Models 4. Case studies 5. System implications for fog computing deployment 6.
    Outcome based distributed orchestration 7. Conclusions Acknowledgements Disclosure
    statement Footnotes References Full Article Figures & data References Citations
    Metrics Reprints & Permissions View PDF ABSTRACT The introduction of pervasive
    and ubiquitous instrumentation within Internet of Things (IoT) leads to unprecedented
    real-time visibility (instrumentation), optimization and fault-tolerance of the
    power grid, traffic, transportation, water, oil & gas, to give some examples.
    Interconnecting those distinct physical, people, and business worlds through ubiquitous
    instrumentation, even though still in its embryonic stage, has the potential to
    create intelligent IoT solutions that are much greener, more efficient, comfortable,
    and safer. An essential new direction to materialize this potential is to develop
    comprehensive models of such systems dynamically interacting with the instrumentation
    in a feed-back control loop. We describe here opportunities in applying cognitive
    computing on interconnected and instrumented worlds (Cognitive Internet of Things–CIoT)
    and call out the system-of-systems trend among distinct but interdependent worlds,
    and Dynamic Data-Driven Application System (DDDAS)-based methods for advanced
    understanding, analysis, and real-time decision support capabilities with the
    accuracy of full-scale models. KEYWORDS: Internet of thingsCIoTsmarter planetbehavior
    modelscognitive computingworld modelssmart gridfog computingedge computingprogressive
    representationDDDASdynamic data driven applications systemsinfosymbiotic systemsautonomy
    View correction statement: Corrigendum 1. Introduction The rapid adoption of Internet
    of Things (IoT) together with unprecedented bandwidths and computational power
    in instrumentation devices have already produced ground-breaking real-time or
    near real-time visibility and analysis across a broad spectrum of system environments
    (Atzori, Iera, and Morabito 2010; Chang 2017a; Granados et al. 2014; Gubbi et
    al. 2013; Karagiannis et al. 2015; Riggins and Wamba 2015; Shang et al. 2016).
    These capabilities enable instant access and transfer of information about a system
    or device in both natural and engineered systems as well as in consumer and industrial
    environemnts (Zhou and Chao 2011; Welbourne et al. 2009; Zhai et al. 2017). A
    few examples include: personal environment (wearable devices and smart phones),
    surrounding environment (bodycam), home environment (home security devices, appliances)
    power grid (eMeters, Power Management Units (PMUs), other sensor and actuator
    in the power distribution systems) traffic and transportation (traffic sensors
    on cars, busses, trains, roads, traffic lights, railroads, aerial/Unmanned Aerial
    Vehicles (UAVs), and congestion control devices) structural health monitoring
    (bridges, buildings, vehicles, aerial platforms) water systems (distribution grids,
    asset management and preventive maintenance; ambient environments) oil & gas (intelligent
    oil field) Interconnecting these distinct natural, engineered, people, and business
    worlds (as shown in Figure 1) through ubiquitous instrumentation, even though
    still in its embryonic stage, has the potential to create an environment that
    can be greener, safer, more efficient, and more comfortable. However, just a compedium
    and deluge of instrumentation data is insufficient in achieving the ultimate objectives
    of a much better outcome for the system of interest and its environment (Li 2005).
    Cognitive representations (a.k.a. models) of these distinct natural, engineered,
    people, and business worlds are essential in understanding the complexity of these
    systems-of-systems, predicting their trajectory and controlling their actual evolution.
    Furthermore, cognitive representation for our emerging service and analytics can
    create accurate decision support capabilities when maneuvering through uncertain
    environments whose conditions are not known a priori. IoT combined with modeling
    is referred to as Cognitive IoT (CIoT) (Wu et al. 2014; Zaidi et al. 2014). Figure
    1. CIoT solutions will require interconnected and interdependent models representing
    the natural and engineered (physical) environment, business & IT, and individuals
    & communities. Display full size Rich multi-fidelity and multimodal modeling and
    instrumentation have become keys for enabling the above referenced capabiltiues
    for physical world systems (natural, engineered) and human systems. Beyond present
    notions of CIoT (Wu et al. 2014; Zaidi et al. 2014), new capabilties derived through
    Dynamic Data Driven Applications Systems (DDDAS)-based methods, whereby modeling
    is dynamically and synergistically integrated with instrumentation in a feedback
    control loop, are emerging (Darema 2000, 2005c; Allaire et al. 2014; Bazilevs
    et al. 2012; Celik et al. 2010). The trend towards higher fidelity and (semi-)autonomy
    with humans in the loop is accelerating. Related methods and opportunities include
    fusing multiple world models can be used to extract insights and capturing dynamic
    intelligent interactions in order to augment and enrich these in a CIoT environment
    as the connectivity and bandwidth could be severely challenged at times. This
    framework is validated through use cases such as load redistribution and disaster
    recovery for smart grid and structural health monitoring for intelligent aerial
    platforms (as for example discussed in Darema 2000, 2005; Allaire et al. 2014;
    Bazilevs et al. 2012, 2012; Celik et al. 2010). interdependent world models. In
    addition, resilient IT infrastructures are essential for supporting the CIoT capabilities
    discussed above. In this paper, we present a distributed framework for orchestrating
    both information and control flows within the instrumented environment based on
    interconnected cognitive models of these environments in order to achieve optimal
    outcome. The primary contribution of this paper is the proposed outcome-driven
    orchestration framework for complex CIoT systems and solutions. In contrast to
    the traditional orchestration approach where a detailed script is provided, the
    proposed approach specifies the desired outcome and orchestrates the information
    and control flows, using the behavior model of the CIoT system. The behavior model
    is incrementally refined based on the continuous learning on the actual outcome
    with respect to the desired outcome. Furthermore, the orchestration is executed
    based on progressive data representation and operations using a distributed model,
    which is essential The rest of the paper is organized as follows: Section 2 describes
    the overall architecture for a cognitive IoT solution. A comprehensive landscape
    of cognitive models is described in Section 3. Section 4 discussed a number of
    use cases to illustrate the orchestration framework. The system and system software
    implications for designing a distributed orchestration framework are discussed
    in Section 5. Section 6 outlines the outcome-based distributed orchestration framework.
    A summary and potential future work is given in Section 7. 2. Cognitive IoT solution
    architecture A Cognitive Internet of Things (CIoT) solution is a system with feedback
    control loop (or system of systems, since each individual component within this
    system could be a system by itself). Figure 2 shows the system view of such a
    closed-loop CIoT solution: Modeling & Orchestration Platform Data & Measurement
    Platform Control Platform Figure 2. Interconnected platforms provide data dynamic
    capture & integration into models, orchestration of behavioral models, and control
    for closed-loop prediction & response. Display full size A CIoT solution inlcudes
    the real world itself – whether it is a smart grid, a smart building, a smart
    supply chain, or a smart water system. The data and measurement platform provides
    mechanisms to capture, comprehend, and learn from the real world (of varying levels
    of fidelity) to form the observed world. The observed world can be described by
    a set of world models. Within the modeling and orchestration platform, cognitive
    representations (or models) integrating data captured from the instrumented real
    world enable interpolation or extrapolation to those areas of the phase-space
    1 of the system, where there are no modeling data or where the instrumentation
    data could be noisy, unavailable, or corrupted. And in other cases, these models
    allow generation of the most plausible hypotheses to explain the available information
    through deduction, induction, or abduction reasoning. From these models, the possible
    outcomes are generated through simulation and/or predictive analysis. Based on
    the what-if analysis conducted by the models, a course of actions is then chosen
    to optimize the potential outcome. This decision is then implemented through the
    control platform to actuate the real world. The consequence in the real world,
    or the outcome, will be monitored through the data and measurement platform, and
    may result in more targeted data acquisition for more intelligent probing of the
    observed world, as well as adjustment on the course of actions. This cognitive
    IoT solution in reality is an instance of the closed-loop control system and is
    similar to the MAPE 2 loop of an autonomic system, with the exception that the
    role, influence and effects from human (individually or as a community) need to
    be included in the system. A CIoT solution requires optimal or near optimal orchestration
    of the control flow and information flow. (The music notes of the orchestration
    really came from the behavior models, which dynamically integrate real-world information,
    conduct what-if analysis, and choose the course of actions that is likely to optimize
    the business outcome). Consequently, developing models at the behavior levels,
    is necessary in order to enable optimal orchestration of both information and
    control flows (Bates, 1995). The behavioral models are continuously updated by
    the dynamic data inputs, either to speed-up the execution (through substituting
    parts of the computation in the model with the actual data) or to impart additional
    information into the model, (as it is quite often that the model does not accurately
    or fully captures the system). The output of the behavior model controls the instrumentation
    in order to either refine data acquisition to improve the model accuracy or actuates
    the controllers to effect an action (on the system or by the system) guided by
    a comprehensive model of the system. This category of systems was referred to
    as the Dynamic Data-Driven Application Systems (DDDAS), which are based on the
    Infosymbiotics 3 paradigm (Darema 2000, 2005c, 2006, 2010). The kinds of models
    of interest span numeric and non-numeric, agent- based and graph models, as well
    as statistical models. Examples will be given in the next section. 3. Models Cognitive
    representation (a.k.a. models) of the real world is the glue among data and measurement
    platform, modeling and orchestration platform, and the control platform. There
    are multiple abstraction levels of models of the real world. The most abstract
    level is at the conceptual (theory or functional) level. Conceptual level models
    can be represented in the form of ontology, rules, or knowledge graph. Additional
    details are available at the structural level, which often captures the topological
    or spatial characteristics of the real world. Behavioral level models, which often
    describes the temporal or spatiotemporal evolution of a system, capture the most
    comprehensive aspects of the real world. Multiple levels of fidelity may be used
    in describing the system at hand at both the structural and the behavioral level.
    The evolution of the abstraction levels of the model typically starts at the conceptual
    and/or functional levels. The evolution from conceptual/functional models to behavior
    models in almost every domain in the past has improved outcomes (e.g. in business)
    while maintaining manageable complexity and uncertainty, as shown in Figure 3.
    Figure 3. Examples of multiple abstraction levels of models of the world. Display
    full size During the development of Boeing 777, a dynamic behavior model of the
    aircraft was developed in addition to the traditional functional specification
    (at the function level) and 3D mechanical drawing (at the structural level). The
    dynamic behavior of the aircraft was evaluated within a simulation environment
    rather than going through numerous wind-tunnel testing (Abarbanel and McNeely
    1996). In a later section, we discuss new and more powerful methods (DDDAS-based)
    that not only allow optimal design of aircraft, but also use new modeling methods
    to enable optimized operational capabilities under dynamic conditions. Additional
    examples include the development of the IBM z10 chip. The z10 development effort
    started with the functional specifications and the design of the instruction set
    architecture (ISA) – both at the functional level. Based on the functional specification,
    the VHDL specification (VHSIC Hardware Description Language) for the overall design
    was created. The circuit layout, which is a structural representation of the z10
    chip, is then synthesized from the VHDL specification. Alternative structural
    representation, in the form of circuit schematic and netlist, is also synthesized
    from the VHDL specification. These VHDL and netlist representations of the z10
    chip enable both logical and analog behavior of the z10 chip to be fully simulated
    within the simulation environment. The ability of fully capturing the IBM z10
    system at the behavior level enabled the system to be entirely operational on
    the first tape-out of the chip (Krygowski et al. 2009). Similarly, the enterprise
    supply chain can be specified at the functional (supply chain scope), structural
    (supply chain configuration), and behavioral (process elements and performance
    attributes) levels. The ability to perform process design and optimization of
    a supply chain at the behavior levels saves multi-billion dollars annually for
    some of the enterprises (Min and Zhou 2002; Celik et al. 2010). In general, the
    entire CIoT spectrum really includes natural and engineered worlds, business and
    IT worlds, and the human worlds, and can be further divided into at least six
    domains: natural and engineered (compute intensive), embedded (SCADA related),
    cyber, enterprise, community, and individuals. During the past few decades, cognitive
    models in each of these silos are evolving from functional to structural and now
    to behavioral level. In the foreseeable future, capturing and modeling the CIoT
    will happen at multiple levels of abstraction, multiple levels of fidelity, and
    from multiple vantage points. In the enterprise domain, CBM (component business
    model) (Chesbrough 2010) and industry framework captures the functional aspect
    of a business. Industry models (including data models, ontology models, knowledge
    graph models, process models, and service models) capture the structural levels
    of the business. Customer and workforce logistics and the enterprise risk models
    capture the behavioral levels of the business. In the cyber area, ITIL (Cannon
    2011) can be viewed as belonging to the functional level while IT configuration
    model belong to the structural level and workload and network traffic belong to
    the behavior level. In human communities, social networks (including Google+,
    LinkedIn and Facebook) capture the structural level of human relationships. Many
    of them evolve into capturing social or community behavior in real time during
    the recent past. From the individual (personal) side, individual profile belongs
    to the functional level while the purchase history belongs to the behavior level.
    The embedded systems domain includes examples such as instrumentation in the electric
    grid, transportation, dam, traffic lights, and manufacturing, where Supervisory
    Control And Data Acquisition (SCADA) systems (Boyer 2009) are often deployed.
    This area is transforming itself at an extremely fast pace as increasingly more
    of such systems are connected to each other as well as to the internet, and through
    DDDAS-based models. This is also supporting a similar concept from Cheng et al.
    ( 2016) to allow intelligent manufacturing enabled by IoT (Zaslavsky, Perera and
    Georgakopoulos 2013). New insight is established when analyzing the existing and
    future CIoT solutions in the context of an end-to-end ecosystem as opposed to
    a single domain, as shown in Figure 4. Many of the existing CIoT solutions fall
    into the category of single domain, and leveraging only structural models for
    static analysis. Emerging opportunities – whether they are in the smart grid (power
    grid) or smart cities – often require integrating behavior models from two or
    more interdependent domains. New capabilities have been continuously demonstrated
    along these directions (to be shown in the next section), and are likely ready
    for industry deployment during the next 2–5 years. Figure 4. Future CIoT solutions
    will require interconnected and orchestrated measurements and models across multiple
    domains. Display full size 4. Case studies In this section, we will use a number
    of examples such as the smart grid and smart structures to illustrate the behavior-model-based
    orchestration in DDDAS-based CIoT solutions. The examples included here are only
    a subset of the capabilities that have been demonstrated in the recent past. 4.1.
    Energy related applications In a smart grid solution, intelligent utility networks
    (IUN) provide capabilities for real-time prediction of the onset of brown-outs
    or black-outs, and also provide optimized dynamic load management (as shown in
    Figure 5). The real-time instrumentation capability, often referred to as automatic
    meter reading (AMR) or automatic meter infrastructure (AMI), is based on measurements
    made by voltage amplitude phasor measurement unit (PMU) and other IoT sensors
    dynamically integrated with statistical and agent-based models (McCalley et al.
    2007; Hoffman et al. 2007) . Dynamic load management within a Smart Grid solution
    activates mitigating actions prior to the onset of a brown-out or black-out to
    ensure differentiated support for critical and high-priority customers from multiple
    energy-sources, including renewables – such as wind, solar, and hydro, and energy
    storage which acts as a generation source (Celik, Thanos and Saenz 2013, Shi,
    Damgacioglu and Celik 2015). This is the improvement based on enterprise storage
    solution from Chen, Huang, and Huang ( 2016). Figure 5. Smart grid solutions continuously
    optimize the expected outcome dynamic data driven behavior models. Display full
    size Other scenarios include incorporating weather data and weather prediction
    models in dynamic data driven behavior models of the power-grid to provide continual
    optimization of load redistribution during peak demand period (such as during
    summer) or restoration of the grid infrastructure after a weather induced failure
    (integrated outage management). Emerging scenarios for supporting electric vehicles
    already present a new demand class and potentially a generation source (through
    the use of the batteries of these vehicles). Furthermore, demand-response management
    can mitigate demand during peak hours through incentives such as dynamic pricing
    plan. With such capabilities, the utility companies will be able to provide much
    better assurance of the business outcome for their customers. The bottom line
    is to leverage the real-time visibility (instrumentation) and use DDDAS-based
    methods in order to build real-time behavioral models so that the business can
    optimize the expected outcome continuously. Other Smart Grid related areas such
    as wind farms pose new challenges and require new CIoT capabilities (Korobenko
    et al. 2013). These CIoT capabilities enable optimized operation to mitigate effects
    of the wake across stacked turbines (Perez et al. 2015). They can also reduce
    the wear and tear of turbine rotors and provide an adaptive maintenance schedule
    rather than conducting maintenance on all turbines on the same regular schedule
    (Ding et al. 2007). This has a similar concept to Wang and Wang ( 2017), which
    has Cloud-based production system with the fusion with IoT. Together with the
    fusion model, it blends Waste Electrical and Electronic Equipment to maximize
    outputs. Accurate high resolution weather forecasts are central to predicting
    potential storm severity and its path. IBM Research’s Deep Thunder (Gallagher
    2012) can provide high resolution forecasts for a 48-hour horizon for areas (in
    a given county) that are most likely to have outage events (and quantify the uncertainty
    level for the event to occur). Other examples are cited in Section 4.4 below,
    while additional capabilities for adverse weather prediction are discussed in
    Section 4.3. The ability to estimate the likelihood and severity of damage in
    different regions allows for predictive planning in stationing crews for early
    repairs. Such predictions can provide a basis for planning the deployment of repair
    crews and trucks in an anticipatory mode. Optimizing work orders and repair crews
    scheduling enables maximizing the business outcome in terms of the number of customers
    that are brought back online at the earliest possible opportunity. In addition,
    such capabilities allow optimized emergency response for any ensuing harm and
    damage to humans, buildings, and other infrastructure. 4.2. Structural health
    monitoring, energy efficiencies, and decision support Aerial platforms (both civilian
    and military, human-operated and UAVs, aerial and space-based) during flight are
    subject to dynamic stresses accentuated by turbulence-induced forces. Such stresses
    as well as the aging of materials can result in structural damage, manifested
    as cracks, disbonding, delamination, or waviness. All these conditions can cause
    disastrous results (such as airplane crashing, as indeed happened in the past,
    in a case of aileron detachment). Additional sensor malfunction situations (such
    as pitot-tubes freezing) also result in catastrophic failures. DDDAS-based modeling
    have shown advanced capabilities: (1) detection of the onset of damage (crack
    creation) (Prudencio et al. 2013; Bazilevs et al. 2012), (2) predicting the propagation
    of the damage and potential impact (Allaire et al. 2014), (3) application of component-
    or system-level models for time dependent control through coordination of multiple
    actuators to mitigate the propagation of the damage (Bazilevs et al. 2012), (4)
    wing-level and aerial structure-wide structural health assessment, (5) multi-fidelity
    models dynamically driven by multiple levels of sensors (e.g. piezoelectric, optical,
    IR, ultrasonic) to assess platform health conditions in real-time (Bazilevs et
    al. 2012; Allaire et al. 2014), and (6) cognizant of environment (such as winds
    and wind-induced turbulence) to plan or re-plan in real-time to optimize the flight
    path and necessary maneuver to fulfill the mission. Such a decision support system
    leverages the accuracy of full-scale models during the optimization (Allaire et
    al. 2014). It was demonstrated in (Wei, Blake and Madey 2013; Varela 2014) that
    DDDAS-based methods enable detection and compensation for sensor failures; in
    this case, the output from a continually executing model of flight conditions
    is compared against the actual measurements from the pitot sensor. The model can
    take over in case of abrupt discrepancy with the measurement to allow time to
    readjust and switch over to other sensor modalities. 4.3. Atmospheric contaminant
    dispersion monitoring Adverse atmospheric contaminant conditions, either naturally
    induced such as volcanic eruptions or man-made harmful chemical emissions (accidental,
    or intentional – such as in terrorist attacks), can have significantly disruptive
    effects. The impact of such events is further exacerbated due to the lack of comprehensive
    models for accurately attributing the origin and predicting the subsequent dispersion
    pattern of the contaminant. The consequence includes severe limitation on the
    effectiveness of the mitigating actions for evacuating humans (and animals) from
    affected areas, plan for decontamination, and any other needed emergency response
    actions. As an example, the April 2010 Eyafjallajokull volcanic eruption caused
    a 7-day shutdown of much of northern Europe’s air transportation system and affected
    many millions of passengers with an estimated cost between 1.5 and 2.5 billion
    of euro (Seifert et al. 2011). The traditional volcanic ash transport models over-predicted
    the ash spread in some areas and missed other areas where ash was actually dispersed,
    resulting in engine damages for aircraft flew over those regions. DDDAS-based
    modeling (Patra et al. 2013; Stefanescu  2014), which also considered prevalent
    winds and dynamic incorporation of targeted satellite data (in this case used
    in a play-back fashion, as the referenced scientific work happened sometime after
    the actual event), showed improved accuracy in predicting the volcanic ash dispersion.
    The DDDAS-based modeling also demonstrated that ash presence in certain regions
    was missed due to misinterpretation of satellite images as it was difficult to
    distinguish between the reflections from ash particles and those from water vapor.
    Other DDDAS-based work (Peng, Silic, and Mohseni 2015; Peng and Mohseni 2016)
    also provides improved contaminant plume tracking in an urban environment (the
    Manhattan cityscape) under air turbulence conditions from prevalent terrain-induced
    winds. DDDAS-based methods were used to control where to send aerial mobile sensors,
    to regions of high-value data sampling (for example higher concentration of contaminant),
    while measuring winds and turbulence at the same time. Similar work on pollution
    transport was conducted by (Akcelik et al. 2004, 2006) in open environments, and
    by (Carmichael et al. 2003; Wang et al. 2014) on atmospheric pollution over the
    Pacific Ocean. 4.4. Adverse atmospheric weather and space weather Adverse weather
    such as tornadic activity affects safety of humans and property. In the United
    States, tornadoes cause multimillion dollar damage and loss of human lives each
    year. As an example, US Storm Prediction Center (SPC) reported a total of 1285
    tornado events during 2015 with 36 fatalities. Accurate and timely prediction
    of the onset of tornadic activity and of the path and extent of the tornado is
    of paramount importance to mitigate danger to human and animal lives as well as
    to improve preparedness and effective emergency response after tornadic events.
    Traditional modeling methods have now been replaced with DDDAS-based modeling
    and instrumentation methods (Brotzge et al. 2004; Plale et al. 2005). These new
    methods are able to predict tornadic activity indicators (such as the tornadic
    ‘hook’ which often forecasts the onset of tornado) with much improved accuracy
    (Chang 2017b). In the outer space, space-weather affects the drag on satellites
    and impacts the accuracy of GPS. However, accurate modeling of the interdependency
    among various space weather phenomena in the ionotroposphere layer is very difficult
    as some aspects of the physics of these phenomena are not fully and accurately
    modeled yet. Factors in understanding space-weather include the chemistry, the
    turbulence, and the thermal conductivity in the ionotroposphere. Among these three
    components, the thermal conductivity is most difficult to model accurately. DDDAS-based
    methods improved the model accuracy by leveraging the actual data to compensate
    for the model’s deficiency (Ali et al. 2015). This resulted in more accurate modeling
    of the thermal conductivity component in the ionotropospheric layer, as manifested
    by the more accurate prediction of NO (nitrous oxide), neutral density, photoelectron
    heating efficiency, and the eddy diffusion coefficient. 4.5. Software cybersecurity
    Opportunities for cyberattacks are increasing during the IoT era as wirelessly
    interconnected computing platforms and devices are proliferating. End-to-end encryption,
    due to its increased communication bandwidth and power consumption requirements,
    may be practically less applicable in some of the IoT environments. Randomization
    approaches such as instruction randomization, data randomization, and memory randomization
    also incur high overheads. DDDAS-based methods minimize the overhead by conducting
    the randomization adaptively at the application programming and execution environments
    levels. Through continuous monitoring and detection of increased vulnerability,
    randomized variations of sections or components of the software are created –
    including changing the programming language, changing the OS and middleware services,
    and changing the hardware resources. It was shown in (Hariri et al. 2015) that
    4-way randomization guarantees zero probability of successful attack even for
    components with high probability (90% in the test case) of attack. 4.6. Intelligent
    oil field The petroleum industry has consistently driven the adoption of advanced
    modeling and instrumentation methods to optimize both upstream (oil/gas exploration)
    and downstream (oil/gas extraction) operations. To develop comprehensive oil/gas
    reservoir models, it is often required to interpolate low spatial resolution (but
    wide spatial coverage) seismic/sonic measurements with high resolution (but small
    spatial coverage) electrical conductivity (FMI) and radiation (gamma-ray, neutron,
    and proton) measurements and related models. Starting in early 2000s, DDDAS-based
    methods are used to enhance the modeling and instrumentation approaches discussed
    earlier to achieve improved efficiency in oil/gas discovery and recovery (Parashar
    et al. 2005, 2006). Similar approaches have also been pursued for intelligent
    fracking methods for exploration and recovery of oil & gas. 4.7. Public health
    surveillance Syndromic surveillance using inpatient and ambulatory clinical care
    electronic health record (EHR) data as well as other non-traditional data sources
    is a relatively new practice in public health (Richardson et al. 2004). As an
    example, the Epi-SPIRE system (Li 2005) monitored the behavioral changes of a
    population (IBM T. J. Watson Research Center, which consists two sites during
    2003 – Yorktown and Hawthorne, located in the Westchester County, New York) caused
    by the earliest stages of flu outbreak. Examples of such behavior changes include
    Increased number of people reporting (on a daily basis) that they are not feeling
    well among 400 volunteers increased absenteeism captured in the badge data for
    employee reporting to work, increased inquiries for medical information captured
    by the firewall web log, increased phone calls to make doctor appointments captured
    by the phone log, changes in eating/drinking habits captured by the cafeteria
    transaction data, increased coughing sound captured by the seminar recordings,
    increased traffic for leaving the building early captured by the video surveillance,
    and increased sewage generation as monitored by the facility. The alerts generated
    from these data sources are compared to the insurance claims (as ground truth)
    from the Westchester County. It was demonstrated that the early warnings generated
    by some of the data sources (survey and phone in particular) provides leading
    indicators (up to three days) as compared to those derived from the clinical data
    sources, in a statistical significant way. 5. System implications for fog computing
    deployment CIoT solutions often pose dynamic requirements for processing and analyzing
    data from sensors, derive decisions, and apply control through actuators. Figure
    6 shows the value (potential business outcome) of the data for a CIoT solution
    as a function of time. The value of data is highest when real-time or near real-time
    decisions and proactive responses are possible. When multiple data sources are
    used as dynamic inputs into the behavior models, the value could be even higher
    as additional data can help to make the model more accurate, speed-up the model,
    reduce the uncertainty and contribute to improved accuracy for predicting future
    condition and evolution of the system. The value of these data may monotonically
    decline after the initial interval such as for example in the cases where data
    are mostly used for metering, billing, auditing, and long term trend analysis.
    Many applications do leverage ‘historical’/archival data in conjunction with those
    data acquired in real-time. As a result, system architectures optimized for CIoT
    solutions need to accommodate latency requirements and prioritize computation
    and communication resources in order to maximize the value that can be derived
    from the sensor data as well as the long term archival requirements to facilitate
    long term trend analysis (Gazis et al. 2012). Figure 6. Providing aggregation,
    cleansing and fusion of sensor data closer to the data sources facilitates early
    response to critical events. Display full size Figure 7 shows the requirements
    coming from CIoT solutions in terms of throughput and latency. Video surveillance
    is at the forefront of these requirements in terms of throughput (3.2–26GB/day/stream).
    SCADA systems and health monitoring systems have very stringent latency requirements
    (on the order of microseconds to milliseconds). High throughput and/or low latency
    requirements often mandate moving some cognitive capabilities (e.g. some of the
    computation) to the edge (the sensors or controllers, or collections thereof)
    of the CIoT solution even though the primary analytic functions are still carried
    out in more powerful platforms, such as computing- and data-center(s), or other
    local or remote mid-range platforms. This trend suggests that deployment of CIoT
    solutions in traditional cloud (centralized) models is no longer adequate and
    necessitates the use of the nacent fog (or ‘edge’) computing models (Rui and Danpeng
    2015; Akhbar and Ovatman 2015). Figure 7. Latency and throughput requirements
    often drive the need for pushing intelligence to the edge. Display full size Fog
    computing (Bonomi et al. 2012; Babaoglu, Marzolla and Tamburini 2012; Ubeda Garcia
    et al. 2014) is an architecture that uses end-user clients or near-user edge of
    the network devices to carry out a substantial amount of storage, communication,
    control, configuration, measurement and management. Additional literature on fog
    computing addresses challenges to support such objectives (Cisco Fog Computing
    2015; Zaidi et al. 2014; Stojmenovic and Wen 2014; Cheng and Dang 2014). Compared
    to the initial notions of cloud computing, fog computing emphasizes proximity
    to end-users and client objectives, dense geographical distribution and local
    resource pooling, latency reduction for quality of service (QoS) and edge analytics/stream
    mining. Fog computing seeks to provide superior user experience and overall system
    redundancy in case of failure. It emphasizes the notions of information processing
    to generate the knowledge nearer the entity that needs it, regardless whether
    the entity is a human or an engineered device (or collections thereof). A CIoT
    solution, when either latency or throughput is critical (as indicated in the upper
    left, upper right, and lower right quadrants of Figure 7), could substantially
    benefit from exploiting fog computing concepts. It should be noted however that
    while the term fog computing concept was introduced in 2012, the concepts of distributed
    computing and distributed resource management – across a range of platforms, including
    computing at the edges (e.g. mobile devices, personal portable devices, sensors,
    etc) were ideas articulated many years before that (Darema 1998, 2005a, 2005b),
    and will be discussed more in the next section. Also, to note that in the mid-
    to late-90s, Grid computing concepts (Foster and Kesselma 1999) provided the impetus
    for moving from client-server computing to more general distributed computing
    (or metacomputing – a term coined in 1987 by Larry Smarr [Smarr 1987]). Grid computing
    emphasized the coordination of multiple distributed computation, storage and communication
    resources. It has successfully demonstrated interoperability across multiple computational
    platforms used to support the runtime of a given application, as well as multiple
    applications executing concurrently. It should also be noted that the notion of
    virtualization, emphasized in cloud computing, was never precluded in the Grid
    concept. And, cloud computing has evolved over the years from a homogeneous centralized
    services concept to a more (geographically and otherwise) distributed and heterogeneous
    collections of platforms, with concomitant challenges of interoperability as were
    present in Grid computing. It is likely that Fog computing (or edge computing)
    may also evolve towards a hybrid and heterogeneous environment similar to cloud
    computing. In summary, the fusion of the fog computing based deployment of the
    CIoT systems and solutions is likely to be heavily dependent on the latency and
    bandwidth requirement of the systems and solutions, and most likely be a hybrid
    and heterogeneous environment. Those system components (data acquisition, comprehension,
    and control actuation) residing outside of the lower left quadrants of Figure
    7 will likely leverage the low latency and high bandwidth offered by the fog computing.
    Those system components require the access of large amount of historical data
    and large amount of computation power (model construction, training and planning)
    is likely to stay in the cloud computing center, resulting a heterogeneous and
    hybrid environment. 5.1. Systems software and cyber infrastructure: support and
    tools There is a rapid convergence between the computational and instrumentation
    platforms for various CIoT solutions. Such integrated platforms are necessary
    to support DDDAS environments (Darema 1998, 2000, 2005c, 2007), resulting in new
    systems software and cyberinfrastructure requirements, such as: Application programming
    models that support both high-end and real-time components of the application;
    Runtime support, which includes embedding the compiler into the runtime, allows
    mapping (and remapping) application components onto heterogeneous computing resources
    in optimized ways based on the architecture and capacity of the underlying computation,
    memory, communication and I/O resources. This support should span both high-end
    and the real-time environments, and be able to discover and match resources depending
    on the changing workload requirements of the executing application, such as in
    DDDAS-based application models. The software defined computing concept that originated
    from enabling simultaneous agility and optimal resource utilization in cloud computing
    could potentially play an increasingly important role for the runtime support.
    Software Defined Environments (Li et al. 2014), which include software defined
    networking, storage, and compute, decouple the control and management planes of
    these resources from the data planes so that they are no longer vertically integrated
    as in traditional compute, storage or switch systems and can be deployed anywhere
    within a computing environment. Application composition at runtime that supports
    dynamic selection of models based on (1) data streamed into the executing application,
    (2) application model interfaces, and (3) application knowledge based systems.
    Application data interfaces, which includes application-measurement interfaces
    and data models (Wang et al. 2010). Dynamic application execution support environments:
    System software is required to dynamically select application components and embody
    algorithms suitable for the specific solution approaches, cognizant of the varying
    underlying resources and application requirements. Dynamic computing and resource
    requirements: CIoT solutions require employing heterogeneous platform environments
    for data-collection, distributed high-performance simulations, and pre/post processing
    of data. Such environments require dynamic discovery of computational resources
    by system software to ensure fault tolerance and Quality of Service (QoS) in spite
    of changing workload conditions. 6. Outcome based distributed orchestration Outcome-based
    delivery model (Ng, Ding, and Yip 2013), in contrast to the input-based or output-based
    service delivery models, has generated substantial interests and adoption in multiple
    industries during the past decade, and is playing an increasingly important role
    in CIoT solutions. In a service delivery model, the producers consume the input
    to produce output and result in outcome for the consumer: Inputs: Include all
    of the resources (time and materials) used to produce and deliver the required
    output product or services. Examples of inputs include available full-time equivalents
    (FTEs), funds, time, equipment, raw materials, etc. Output: Include all of the
    products and services produced from the input. This could also involve business
    outputs, such as healthcare policy quote generation or enrollment processing,
    and IT outputs, such as test case creation and execution. Outcome: Measurable
    impacts delivered by providers of products or services that can be assessed objectively
    by services buyers. This could include business outcomes, such as improvement
    in the enrollment rate of a healthcare plan, or IT outcomes, such as reduced spending
    on quality assurance as a percentage of the IT budget. Ideally, full provenance
    should be established so that all required inputs can be traced through the outputs
    and the outcomes. Business models in terms of how to price the products or services
    rendered have evolved based on input, output, outcome, or combinations of the
    above: Input-based delivery model: The producer charges the consumers based on
    the time and materials (and margin) needed to produce the products or services.
    The consumer often needs to assume most of the risk for the potential variation
    of the product or services received. Output-based delivery model: The producer
    charges the consumer based on the output products or services rendered. In this
    case, the producer assumes some amount of the risk arising from the variation
    of time and materials needed to develop the product and services, while the consumer
    also assumes certain amount of risk arising from the variation of the consequence
    resulting from the product or services. Outcome-based delivery model: The consumer
    is charged based on the actual business outcome from the products or services
    received. The producer needs to assume most or the entire risk for producing the
    desired outcome at the consumer. There are multiple examples of such evolution.
    In the internet advertisement industry, there is a gradual evolution from pay
    per impression (prior to 2000), to pay per click (around 2000), to pay per action
    (around 2001), to revenue sharing (from 2001 onwards), and eventually to profit
    sharing (since 2010 in certain circumstances). In the healthcare industry, there
    is also a significant trend in recent years that the healthcare providers are
    being compensated from procedure based to patient health outcome based. Outcome
    based delivery model has been considered as the most promising delivery model
    to integrate CIoT solutions into various industries. Model-based orchestration
    in CIoT solutions enables these solutions to continuously deliver the desired
    outcome. The outcome-based concept can be illustrated using those case studies
    in Section 4: Smart Grid solution: the business outcome for CIoT-based smart grid
    solutions refers to the cost saving for the customers; reduced maintenance cost
    for the operators; reduced or eliminated brown-out and black-out events; or reduced
    mean time to restore after a major weather event. Intelligent oil field solution:
    the business outcome refers to the reduced maintenance cost; or improved oil production
    throughput due to reduced down time. Intelligent traffic system: the business
    outcome refers to the reduced congestion, injuries and deaths due to accidents,
    and improved traffic flow. Software cybersecurity: the business outcome refers
    to the reduced or eliminated cyber perimeter penetration or data loss events.
    Cognitive syndromic surveillance: the business outcome refers to the reduced mortality
    and healthcare cost due to various infectious diseases. Outcome-based orchestration
    of a CIoT solution shown in Figure 2 requires orchestrating information and control
    flows through interconnected platforms. The fundamental challenge for a scalable
    CIoT solution is to address the centralized nature of orchestration. An outcome-based
    distributed orchestration framework, as shown in Figure 8, is described in this
    section using outbreak risk prediction for Hantavirus Pulmonary Syndrome (HPS)
    (Glass et al. 2002) as an example. HPS is a potentially fatal respiratory disease
    caused by infection with a rodent-born hantavirus. First reported in 1993, the
    case fatality rate was 50%+ initially and has come down during recent years. The
    risk prediction model used the combination of remotely sensed data from satellite
    and elevation map on the ground to assess the likely population change of the
    rodents due to global vegetation change resulting from global climate change (e.g.
    El Niño followed by La Niña). Within this outcome-based framework, the orchestration
    is based on distributed observation, evaluation, and actuation of the real world.
    The key pillars that enable outcome-based orchestration are progressively represented
    data and models, as described in the following two subsections. Figure 8. Distributed
    outcome-based orchestration framework for CIoT solution using HPS outbreak risk
    prediction as an example. Display full size 6.1. Progressive data representations
    Progressive 4 data representation is critical to progressive data acquisition,
    progressive transmission, and distributed model orchestration. Progressive representations
    enable the underlying phenomenon to be represented at multiple levels of abstraction
    (raw data, features, concepts), and multiple levels of fidelities, with trade-offs
    exist between fidelity (or accuracy) and data volume at each level. Two orthogonal
    dimensions – fidelity and abstraction – exist for generating progressive data
    representations. Multi-resolution representations, such as those based on discrete
    wavelet transformation (DWT), can be used to provide rough approximations of information
    at low resolutions (low data volumes), with more detailed views at higher resolutions.
    Most of the existing multi-resolution representation usually starts with the data
    already captured at its full resolution with homogeneous spatial and temporal
    sampling. In this paper, we propose to generalize such representations to include
    non-uniform acquisition, as it may be quite useful to selectively acquire higher
    resolutions only in selected ‘areas of interest’. In contrast, multiple abstraction
    level representations relying on the fact that raw information can be processed
    into alternate formulations such as features and semantics that require lower
    data volumes at the expense of possible lower fidelity. For example, contours
    can be computed from a data array, allowing for very rapid identification of areas
    with low or high parameter values, but with a loss of accuracy. 6.2. Progressive
    models Progressive models are designed to enable real-time distributed orchestration
    of the models. Each instance of model executions in this distributed environment
    provides an estimate of the overall model predictions to be generated. In the
    case of data and measurement platforms, the distributed execution of the progressive
    models enables data acquisition density to be higher for regions of higher interests,
    and transmitted down sooner. Consequently, progressive model executions provide
    distributed prediction of optimal acquisition and transmission schedule within
    the data and measurement platforms. Progressive models usually involve the generation
    of coarse representations of the same model. Using the HPS risk prediction as
    an example (Glass et al. 2002), the linear regression model for predicting the
    risk of disease occurring at location (x,y) and time t is (1) where xi(x,y,t)
    is the reading from the ith remote sensing instrument at location (x,y) and time
    t. If |a1,a2| ≫ |a3, a4| then, a coarser representation of the model for R (x,y,t)
    will be (2) In general, the generation of progressively coarser representation
    of a model can be accomplished by analysing the relative contribution of each
    parameter to the overall model. This is similar to query planning issues in cost-based
    query optimization for object-relational databases. However, query planning usually
    rearrange the execution order so that operations achieving maximal filtering will
    be executed earlier. In contrast, outcome-based execution of progressive models
    will select operations that are most relevant to the final results (outcome) to
    be executed first. 6.3. Outcome-based orchestration Within the data and measurement
    platforms, the information will be progressively and proactively captured, processed
    and then transmitted to the modeling and orchestration platforms. The orchestration
    aims at achieving highest model prediction quality and business outcome by the
    modelling and orchestration platform at any given time, hence takes into account
    of the progressive data representation and model execution. This implies that
    the end results need to be superior at any time to all of the other possible data
    acquisition alternatives. The value of progressive data acquisition lies in the
    identification of interested regions through progressive model processing, which
    can be executed anywhere, including the data and measurement platforms or the
    control platforms. Distributed processing at the edge of the network is necessary
    since it provides real-time feedback and control of the instruments, which is
    infeasible from a remote datacenter due to potentially long round-trip delay and
    transmission-processing lag. Associated with the issue of prediction accuracy
    is the optimal balance of two-types of errors. The first type of errors is often
    referred to as ‘false alarms’ or ‘false positives’ when the low-risk areas are
    incorrectly identified as high-risk areas. The second type of errors is referred
    as ‘misses’ or ‘false negatives’ when the high-risk areas are identified as low-risk
    areas. In most cases, misses and false alarms cannot be simultaneously reduced
    (Daubie, Levecq, and Meskens 2002; Leonard, Graham, and Bonacum 2004; Chang 2014,
    2015). Depending on the application requirements, an optimal allocation of misses
    and false alarms may be derived from model predictions to generate a progressive
    acquisition schedule. The concept of progressive transmission may be formally
    defined as an optimization problem. Suppose u(t) is the utility function of the
    received data until time t. This utility function is a measure of the sum of the
    outbreak likelihood of received image regions until time t, with additional weighting
    factors taking into account population density, age distribution, environmental
    readiness, etc. Progressive transmission should order the regions in such a way
    that u(t) is maximized for any t. This implies small regions with the most contribution
    to the utility will be transmitted first. The intuition is that high-utility areas
    shall receive attention from decision functions as early as possible. Low-utility
    areas yield in the schedule because those areas may have less impact for the decision
    functions. In the simplest case with only one model parameter to acquire, a greedy
    scheme that orders the most valued to the least valued region generates the best
    schedule based upon the above criterion. While discussions thus far only involve
    simple examples of single parameter acquisition, multiple parameters and more
    than one models with shared parameters may be constantly monitored by the CIoT
    solution. For example, mosquito-born diseases in public health surveillance solutions
    are often characterized by environmental factors like temperature and moisture.
    Depending on particular species of mosquitoes, temperature and moisture thresholds
    may vary. A satellite may be given several approximate models that share some
    parameters. In such case, progressive data acquisition and transmission scheduling
    become a sophisticated multi-parametric optimization problem. A parameter with
    strong influence on model prediction precision may be shared by three models while
    another parameter with weak influence on prediction precision is shared by five
    models. Both parameters’ data acquisition compete for instruments, processing,
    storage, transmission capacity as well as other resources. However, their relative
    priority is not strict and is likely to vary depending on the acquired region.
    It should be noted that specific behavior models are often difficult to be generalized
    as they are often tightly coupled with the data specific analytic environment.
    More general levels of abstraction of data and models are addressed through DDDAS/Infosymbiotics
    paradigm which provides a clear methodology of the value of dynamic integration
    of models and data in a feedback control loop. 7. Conclusions The introduction
    of pervasive and ubiquitous instrumentation leads to unprecedented real-time visibility
    in many application areas such as the power grid, traffic, transportation, water,
    and oil & gas areas. Interconnecting and harnessing those distinct natural, engineered,
    people, and business worlds through ubiquitous instrumentation, even though still
    in its embryonic stage, is rapidly progressing and has started demonstrating the
    potential to engender capabilities for an environment that is greener, efficient,
    safer, and more comfortable (Vermesan, Friess and Friess 2011; Subashini and Kavitha
    2011; Ning et al. 2015; Muñoz et al. 2014). In this paper, we presented an outcome-based
    framework for orchestrating both information and control flows within CIoT systems
    and solutions based on interconnected cognitive models of these environments.
    In contrast to the traditional prescriptive orchestration approach where a detailed
    script is provided, the proposed approach specifies the desired outcome and orchestrates
    information and control flows, using the behavior model of the CIoT system. The
    orchestration is executed based on progressive data (dynamic data) acquisition
    and representation, and schedules the operations for the CIoT systems and solutions
    progressively using a distributed model. This framework is validated through use
    cases such as load shedding and disaster recovery for smart grid, structural health
    monitoring for intelligent aerial platforms, public health surveillance, and cybersecurity.
    It has become increasingly crucial that cognitive representations of these distinct
    worlds (a.k.a. models, dynamically integrated with instrumentation, such as in
    DDDAS-based methods) need to be created as a pre-requisite for assessing and intelligently
    managing the complexity, maneuvering through uncertain environments and eventually
    achieving the optimized outcomes (Rao and Sandu 2014). We expect the proposed
    outcome-based framework will contribute to the development of emerging services
    and analytics for Cognitive Internet of Things (CIoT) based solutions, as well
    as serving as the foundation for enterprises using outcome-based business models
    for their products and services. The primary challenges in the next few years
    are likely to closely track the progress made in the cognitive computing area
    in terms of encoding domain specific knowledge in specific knowledge representations,
    automatic knowledge-based construction (AKBC), integrating knowledge driven and
    data driven approaches together on common behavior level models. Most importantly,
    the focus is likely to be centered on the linkage between the business outcome
    and the outcome accomplished by the CIoT systems and solutions. Acknowledgement
    This work was conducted while C.-S. Li was with IBM T. J. Watson Research Center.
    The authors would like to acknowledge the discussions with Kevin McAuliffe, Art
    Ciccolo, Nagui Halim, Josyula R. Rao, John R. Smith, Brenda Dietrich, Anant Jhingran
    and Charles Lickel during the development of the original concept. The authors
    also like to acknowledge Ms. Annie An Dongmei for proofreading the manuscript.
    Disclosure statement No potential conflict of interest was reported by the authors.
    Notes 1. Phase space of a dynamical system is a space in which all possible states
    of a system are represented, with each possible state corresponding to one unique
    point in the phase space. 2. MAPE (Monitoring-Analysis-Planning-Execution). 3.
    The terms InfoSymbiotics or InfoSymbiotic Systems are used to denote DDDAS-based
    methods and capabilities. 4. The term ‘progressive’ is introduced here to denote
    time-dependent adaptivity in data and models, represented at multiple levels of
    abstraction, multiple levels of fidelity, and multiple modalities. References
    Abarbanel, B., and W. McNeely. 1996. “Flythru the Boeing 777.” In ACM SIGGRAPH
    96 Visual Proceedings: The Art and Interdisciplinary Programs of SIGGRAPH’96.
    New York, NY: ACM.  Google Scholar Akcelik, V., G. Biros, A. Draganescu, O. Ghattas,
    J. Hill, and B. Van Bloemen Waanders. 2006. “Inversion of Airborne Contaminants
    in a Regional Model.” In Computational Science ICCS 2006: 6th International Conference,
    Reading, UK, May 28–31.  Google Scholar Akcelik, V., J. Bielak, G. Biros, I. Epanomeritakis,
    O. Ghattas, L. F. Kallivokas, and E. J. Kim. 2004. “A Framework for Online Inversion-Based
    3D Site Characterization.” In Computational Science – ICCS 2004: 4th International
    Conference, Krakow, Poland, June 6–9.  Google Scholar Akhbar, F., and T. Ovatman.
    2015. “Quality of Service Trade-Offs between Central Data Centers and Nano Data
    Centers.” In The 5th International Conference on Cloud Computing and Services
    Science, Lisbon, Portugal.  Google Scholar Ali, A. A., A. Goel, A. J. Ridley,
    and D. S. Bernstein. 2015. “Retrospective-Cost-Based Adaptive Input and State
    Estimation for the Ionosphere–Thermosphere.” Journal of Aerospace Information
    Systems 12: 1–17.  Google Scholar Allaire, D., D. Kordonowy, M. Lecerf, L. Mainini,
    and K. Willcox. 2014. “Multifidelity DDDAS Methods with Application to a Self-Aware
    Aerospace Vehicle.” Procedia Computer Science 29: 1182–1192. doi:10.1016/j.procs.2014.05.106.  Google
    Scholar Atzori, L., A. Iera, and G. Morabito. 2010. “The Internet of Things: A
    Survey.” Computer Networks 54 (15): 2787–2805. doi:10.1016/j.comnet.2010.05.010.  Web
    of Science ®Google Scholar Babaoglu, O., M. Marzolla, and M. Tamburini. 2012.
    “Design and Implementation of a P2P Cloud System.” In ACM Proceedings of the 27th
    Annual ACM Symposium on Applied Computing, March, Riva (Trento), Italy, 412–417.  Google
    Scholar Bates, P. C. 1995. “Debugging Heterogeneous Distributed Systems Using
    Event-Based Models of Behavior.” ACM Transactions on Computer Systems (TOCS) 13
    (1): 1–31. doi:10.1145/200912.200913.  Web of Science ®Google Scholar Bazilevs,
    Y., A. L. Marsden, F. L. Di Scalea, A. Majumdar, and M. Tatineni. 2012. “Toward
    a Computational Steering Framework for Large-Scale Composite Structures Based
    on Continually and Dynamically Injected Sensor Data.” Procedia Computer Science
    9: 1149–1158. doi:10.1016/j.procs.2012.04.124.  Google Scholar Bonomi, F., R.
    Milito, J. Zhu, and S. Addepalli. 2012. “Fog Computing and Its Role in the Internet
    of Things.” In ACM Proceedings of the First Edition of the MCC Workshop on Mobile
    Cloud Computing, Helsinki, Finland, August, 13–16.  Google Scholar Boyer, S. A.
    2009. SCADA: Supervisory Control and Data Acquisition (). International Society
    of Automation.  Google Scholar Brotzge, J., V. Chandresakar, K. Droegemeier, J.
    Kurose, D. McLaughlin, B. Philips, M. Preston, and S. Sekelsky. 2004. “Distributed
    Collaborative Adaptive Sensing for Hazardous Weather Detection, Tracking, and
    Predicting.” In ICCS05Proceedings, Kraków, Poland, 670–677.  Google Scholar Cannon,
    D. 2011. ITIL Service Strategy 2011 Edition. Stationery Office.  Google Scholar
    Carmichael, G. R., D. N. Daescu, A. Sandu, and T. Chai. 2003. “Computational Aspects
    of Chemical Data Assimilation into Atmospheric Models.” In Computational Science—ICCS
    2003, St. Petersburg, Russia, 269–278. Berlin Heidelberg: Springer.  Google Scholar
    Celik, N., S. Lee, K. Vasudevan, and Y.-J. Son. 2010. “DDDAAS-Based Multi-fidelity
    Simulation Framework for Supply Chain Systems.” IIE Transactions 42 (5): 325–341.
    doi:10.1080/07408170903394306.  Web of Science ®Google Scholar Celik, N., A.E.
    Thanos, and J.P. Saenz. 2013. “DDDAMS-based Dispatch Control in Power Networks.”
    Procedia Computer Science 18: 1899-1908. doi:10.1016/j.procs.2013.05.359.  Google
    Scholar Chang, V. 2014. “The Business Intelligence as a Service in the Cloud.”
    Future Generation Computer Systems 37: 512–534. doi:10.1016/j.future.2013.12.028.  Web
    of Science ®Google Scholar Chang, V. 2015. A Proposed Cloud Computing Business
    Framework. New York, NY: Nova Science Publisher.  Google Scholar Chang, V. 2017a.
    “A Cybernetics Social Cloud.” Journal of Systems and Software 124: 195–211. doi:10.1016/j.jss.2015.12.031.  Web
    of Science ®Google Scholar Chang, V. 2017b. “Towards Data Analysis for Weather
    Cloud Computing.” Knowledge-Based Systems 127: 29–45. doi:10.1016/j.knosys.2017.03.003.  Web
    of Science ®Google Scholar Chen, W. S. E., C. F. Huang, and M. J. Huang. 2016.
    “iSDS: A Self-Configurable Software-Defined Storage System for Enterprise.” Enterprise
    Information Systems 1–22. Advance online publication. doi:10.1080/17517575.2016.1218055  Web
    of Science ®Google Scholar Cheng, X., and G. Dang. 2014. “The P2P Communication
    Technology Research Based on Internet of Things.” In 2014 IEEE Workshop on Advanced
    Research and Technology in Industry Applications (WARTIA). IEEE, 178-180.  Google
    Scholar Cheng, Y., F. Tao, L. Xu, and D. Zhao. 2016. “Advanced Manufacturing Systems:
    Supply–Demand Matching of Manufacturing Resource Based on Complex Networks and
    Internet of Things.” Enterprise Information Systems 1–18. doi:10.1080/17517575.2016.1183263.  Web
    of Science ®Google Scholar Chesbrough, H. 2010. “Business Model Innovation: Opportunities
    and Barriers.” Long Range Planning 43 (2–3): 354–363. doi:10.1016/j.lrp.2009.07.010.  Web
    of Science ®Google Scholar Cisco Fog Computing. 2015. http://www.cisco.com/c/dam/en_us/solutions/trends/iot/docs/computing-solutions.pdf  Google
    Scholar Darema, F. 1998. The Next Generation Program. http://www.nsf.gov/pubs/1999/nsf998/nsf998.htm  Google
    Scholar Darema, F. 2000. New software architecture for complex applications development
    and runtime support. In Int. J. High-Perform. Comput.(Special Issue on Programming
    Environments, Clusters, and Computational Grids for Scientific Computing) (Vol.
    14, No. 3).  Google Scholar Darema, F. 2005a. “The Next Generation Software Program.”
    International Journal of Parallel Programming 33 (2–3, Jun.): 73–79. doi:10.1007/s10766-005-4785-6.  Web
    of Science ®Google Scholar Darema, F. 2005b. “Grid Computing and Beyond: The Context
    of Dynamic Data Driven Applications Systems.” Proceedings of the IEEE, 93 (3):692-697.  Google
    Scholar Darema, F. 2005c. “Dynamic Data Driven Applications Systems (DDDAS).”
    In NSF Workshop 2000, and 2006 and 2010 Workshopes (Www.1dddas.Org); Dynamic Data
    Driven Applications Systems (DDDAS): New Capabilities for Application Simulations
    and Measurements; ICCS05Proceedings. Www.1dddas.Org  Google Scholar Darema, F.
    2007. “The Next Generation Software Workshop – IPDPS’07.” In Parallel and Distributed
    Processing Symposium, 2007, IPDPS 2007. IEEE International. IEEE, 1-4.  Google
    Scholar Darema, F. 2010. “Cyberinfrastructures of Cyber-applications-systems.”
    Procedia Computer Science 1 (1): 1287-1296. doi:10.1016/j.procs.2010.04.143.  Google
    Scholar Darema, F., and M. Rotea. 2006. “Dynamic data-driven applications systems.”
    In SC ''06  Proceedings of the 2006 ACM/IEEE conference on Supercomputing, Article
    No. 2, Tampa, FL, November 11–17. New York, NY: ACM. doi:10.1145/1188455.1188458.  Google
    Scholar Daubie, M., P. Levecq, and N. Meskens. 2002. “A Comparison of the Rough
    Sets and Recursive Partitioning Induction Approaches: An Application to Commercial
    Loans.” International Transactions in Operational Research 9 (5): 681–694. doi:10.1111/itor.2002.9.issue-5.  Google
    Scholar Ding, Y., E. Byon, C. Park, J. Tang, Y. Lu, and X. Wang. 2007. “Dynamic
    Data-Driven Fault Diagnosis of Wind Turbine Systems.” In Computational Science–ICCS
    2007, 1197–1204. Berlin Heidelberg: Springer.  Google Scholar Foster, I., and
    C. N. Kesselma. 1999. The Grid: Blueprint for a New Computing Infrastructure.
    San Francisco, CA: Morgan Kaufmann Publishers. ISBN 1-55860-475-8.  Google Scholar
    Gallagher, S. How IBM’s Deep Thunder Delivers Hyper-Local Forecasts 3-1/2 Days
    Out. Ars Technica (March 14, 2012).  Google Scholar Gazis, V., K. Sasloglou, N.
    Frangiadakis, and P. Kikiras. 2012, October. “Wireless Sensor Networking, Automation
    Technologies and Machine to Machine Developments on the Path to the Internet of
    Things.” In 2012 16th Panhellenic Conference on Informatics (PCI), Piraeus, Greece.
    IEEE, 276-282.  Google Scholar Glass, G. E., T. L. Yates, J. B. Fine, T. M. Shields,
    J. B. Kendall, A. G. Hope, C. A. Parmenter, et al. 2002. “Satellite Imagery Characterizes
    Local Animal Reservoir Populations of Sin Nombre Virus in the Southwestern United
    States.” Proceedings of the National Academy of Sciences 99 (26): 16817–16822.
    doi:10.1073/pnas.252617999.  PubMed Web of Science ®Google Scholar Granados, J.,
    A. M. Rahmani, P. Nikander, P. Liljeberg, and H. Tenhunen. 2014. “Towards Energy-Efficient
    HealthCare: An Internet-of-Things Architecture Using Intelligent Gateways.” In
    2014 EAI 4th International Conference on Wireless Mobile Communication and Healthcare
    (Mobihealth). IEEE, 279-282.  Google Scholar Gubbi, J., R. Buyya, S. Marusic,
    and M. Palaniswami. 2013. “Internet of Things (Iot): A Vision, Architectural Elements,
    and Future Directions.” Future Generation Computer Systems 29 (7): 1645–1660.
    doi:10.1016/j.future.2013.01.010.  Web of Science ®Google Scholar Hariri, S.,
    C. Tunc, P. Satam, F. Al-Moualem, and E. Blasch. 2015. “DDDAS-based Resilient
    Cyber Battle Management Services (D-RCBMS).” In Proceedings of the 2015 IEEE 22nd
    International Conference on High Performance Computing Workshops (HiPCW). IEEE
    Computer Society, 65–65.  Google Scholar Hoffmann, C., E. Swain, Y. Xu, T. Downar,
    L. Tsoukalas, P. Top, M. Senel, M. Bell, E. Coyle, B. Loop, and D. Aliprantis.
    2007. “DDDAS For Autonomic Interconnected Systems: The National Energy Infrastructure.”  Google
    Scholar Karagiannis, V., P. Chatzimisios, F. Vazquez-Gallego, and J. Alonso-Zarate.
    2015. “A Survey on Application Layer Protocols for the Internet of Things.” Transaction
    on IoT and Cloud Computing 3 (1): 11–17.  Google Scholar Korobenko, A., M.-C.
    Hsu, I. Akkerman, J. Tippmann, and Y. Bazilevs. 2013. “Structural Mechanics Modeling
    and FSI Simulation of Wind Turbines.” Mathematical Models and Methods in Applied
    Sciences 23 (2): 249–272. doi:10.1142/S0218202513400034.  Web of Science ®Google
    Scholar Krygowski, C. A., D. G. Bair, R. M. Gott, M. H. Decker, A. V. Giri, C.
    Habermann, ... H. Mallar.  2009. “Functional Verification of the IBM System Z10
    Processor Chipset.” IBM Journal of Research and Development 53 (1): 1.  Google
    Scholar Leonard, M., S. Graham, and D. Bonacum. 2004. “The Human Factor: The Critical
    Importance of Effective Teamwork and Communication in Providing Safe Care.” Quality
    and Safety in Health Care 13 (suppl 1): i85–i90. doi:10.1136/qshc.2004.010033.  PubMed
    Web of Science ®Google Scholar Li, C. S. 2005. “Real-Time Event Driven Architecture
    for Activity Monitoring and Early Warning.” In Emerging Information Technology
    Conference, 2005. IEEE, pp. 4.  Google Scholar Li, C.-S., B. L. Brech, S. Crowder,
    D. M. Dias, H. Franke, M. Hogstrom, D. Lindquist, et al. 2014. “Software Defined
    Environments: An Introduction.” IBM Journal of Research and Development 58 (2/3,
    March/May): 1–11. doi:10.1147/JRD.2014.2298134.  Web of Science ®Google Scholar
    McCalley, J., V. Honavar, S. Ryan, W. Meeker, D. Qiao, R. Roberts, Y. Li, J. Pathak,
    M. Ye, and Y. Hong. 2007. “Integrated Decision Algorithms for Auto-Steered Electric
    Transmission System Asset Management.” In Computational Science–ICCS 2007, 1066–1073.
    Berlin Heidelberg: Springer.  Google Scholar Min, H., and G. Zhou. 2002. “Supply
    Chain Modeling: Past, Present and Future.” Computers & Industrial Engineering
    43 (1–2): 231–249. doi:10.1016/S0360-8352(02)00066-9.  Web of Science ®Google
    Scholar Muñoz, V. M., A. C. Ramo, R. G. Diaz, and A. Tsaregorodtsev.  2014. “Powering
    Distributed Applications with DIRAC Engine.” In The International Symposium on
    Grids and Clouds (ISGC) (Vol. 2014).  Google Scholar Ng, I. C. L., D. X. Ding,
    and N. Yip. 2013. “Outcome-Based Contracts as New Business Model: The Role of
    Partnership and Value-Driven Relational Assets.” Industrial Marketing Management
    42 (5): 730–743. doi:10.1016/j.indmarman.2013.05.009.  Web of Science ®Google
    Scholar Ning, H., D. G. Belanger, Y. Xia, V. Piuri, and A. Y. Zomaya. 2015. “Guest
    Editorial Special Issue on Big Data Analytics and Management in Internet of Things.”
    IEEE Internet of Things Journal 2 (4): 265–267. doi:10.1109/JIOT.2015.2459291.  Web
    of Science ®Google Scholar Parashar, M., V. Matossian, H. Klie, S. Thomas, M.
    F. B. Wheeler, T. Kurc, J. Saltz, and R. Versteeg. 2006. “Towards Dynamic Data-Driven
    Management of the Ruby Gulch Waste Repository.” In International Conference on
    Computational Science, 384–392. Berlin, Heidelberg: Springer.  Google Scholar
    Parashar, M., V. Matossian, W. Bangerth, H. Klie, B. Rutt, T. Kurc, U. Catalyurek,
    J. Saltz, and M. F. Wheeler. 2005. “Towards Dynamic Data-Driven Optimization of
    Oil Well Placement.” In International Conference on Computational Science, 656–663.
    Springer Berlin Heidelberg.  Google Scholar Patra, A. K., M. Bursik, J. Dehn,
    M. Jones, R. Madankan, D. Morton, M. Pavolonis, et al. 2013. “Challenges in Developing
    DDDAS Based Methodology for Volcanic Ash Hazard Analysis–Effect of Numerical Weather
    Prediction Variability and Parameter Estimation.” Procedia Computer Science 18:
    1871–1880. doi:10.1016/j.procs.2013.05.356.  Google Scholar Peng, L., and K. Mohseni.
    2016. “Symplectic Model Reduction of Hamiltonian Systems.” SIAM Journal on Scientific
    Computing 38 (1): A1–A27. doi:10.1137/140978922.  Web of Science ®Google Scholar
    Peng, L., M. Silic, and K. Mohseni. 2015. “A DDDAS Plume Monitoring System with
    Reduced Kalman Filter.” Procedia Computer Science 51: 2533–2542. doi:10.1016/j.procs.2015.05.361.  Google
    Scholar Perez, J., D. Gonzalez, S. Trujillo, and T. Trapman. 2015, June. A safety
    concept for an IEC-61508 compliant fail-safe wind power mixed-criticality system
    based on multicore and partitioning. In Ada-Europe International Conference on
    Reliable Software Technologies, 3–17. Cham: Springer.  Google Scholar Plale, B.,
    D. Gannon, D. Reed, S. Graves, K. Droegemeier, B. Wilhelmson, and M. Ramamurthy.
    2005. “Towards Dynamically Adaptive Weather Analysis and Forecasting in LEAD.”
    In International Conference on Computational Science, May, 624–631. Berlin, Heidelberg:
    Springer.  Google Scholar Prudencio, E. E., P. T. Bauman, S. V. Williams, D. Faghihi,
    K. Ravi-Chandar, and J. T. Oden. 2013. “A Dynamic Data Driven Application System
    for Real-Time Monitoring of Stochastic Damage.” In ICCS05Proceedings,Procedia
    Computer Science 18: 2056–2065.  Google Scholar Rao, V., and A. Sandu. 2014. “A
    Posteriori Error Estimates for DDDAS Inference Problems.” Procedia Computer Science
    29: 1256–1265. doi:10.1016/j.procs.2014.05.113.  Google Scholar Richardson, S.,
    A. Thomson, N. Best, and P. Elliott. 2004. “Interpreting Posterior Relative Risk
    Estimates in Disease-Mapping Studies.” Environmental Health Perspectives 112:
    1016–1025. doi:10.1289/ehp.6740.  PubMed Web of Science ®Google Scholar Riggins,
    F. J., and S. F. Wamba. 2015. “Research Directions on the Adoption, Usage, and
    Impact of the Internet of Things through the Use of Big Data Analytics.” In 2015
    48th Hawaii International Conference on System Sciences (HICSS), January, Hawaii,
    USA, 1531–1540. IEEE.  Google Scholar Rui, J. and S. Danpeng. 2015. “Architecture
    Design of the Internet of Things Based on Cloud Computing.” In 2015 Seventh International
    Conference on Measuring Technology and Mechatronics Automation (ICMTMA). IEEE,
    206–209.  Google Scholar Seifert, P., A. Ansmann, S. Gross, V. Freudenthaler,
    B. Heinold, A. Hiebsch, I. Mattis, J. Schmidt, F. Schnell, M. Tesche, and U. Wandinger.
    2011. “Ice Formation in Ash‐influenced Clouds After the Eruption of the Eyjafjallajökull
    Volcano in April 2010.” Journal of Geophysical Research Atmospheres 116(D20).  Google
    Scholar Shang, X., R. Zhang, X. Zhu, and Q. Zhou. 2016. “Design Theory, Modelling
    and the Application for the Internet of Things Service.” Enterprise Information
    Systems 10 (3): 249–267. doi:10.1080/17517575.2015.1075592.  Web of Science ®Google
    Scholar Shi, X., H. Damgacioglu, and N. Celik. 2015. “A Dynamic Data-driven Approach
    for Operation Planning of Microgrids.” Procedia Computer Science 51: 2543-2552.
    doi:10.1016/j.procs.2015.05.362.  Google Scholar Stefanescu, E. R., A. K. Patra,
    M. Bursik, M. Jones, R. Madankan, E. B. Pitman, S. Pouget, T. Singh, P. Singla,
    P. Webley, and D. Morton. 2014. “Fast Construction of Surrogates for UQ Central
    to DDDAS–Application to Volcanic Ash Transport1.” Procedia Computer Science 29:
    1227-1235. doi:10.1016/j.procs.2014.05.110.  Google Scholar Stojmenovic, I., and
    S. Wen. 2014. “The Fog Computing Paradigm: Scenarios and Security Issues.” In
    Proceedings of the 2014 Federated Conference on Computer Science and Information
    Systems, ACSIS, Warsaw, Poland, 1–8. Vol. 2.  Google Scholar Subashini, S., and
    V. Kavitha. 2011. “A Survey on Security Issues in Service Delivery Models of Cloud
    Computing.” Journal of Network and Computer Applications 34 (1): 1–11. doi:10.1016/j.jnca.2010.07.006.  Web
    of Science ®Google Scholar Vermesan, O., P. Friess, and P. Friess. 2011. Internet
    of Things: Global Technological and Societal Trends. Aalborg: River Publishers,
    9–52.  Google Scholar Ubeda Garcia, M., V.M. Muñoz, F. Stagni, B. Cabarrou, N.
    Rauschmayr, P. Charpentier, and J. Closier. 2014. “Integration of Cloud Resources
    in the LHCb Distributed Computing.” 513.  Google Scholar Varela, C.A. 2014. Stochastic
    Quantitative Reasoning for Autonomous Mission Planning. Troy, NY: Rensselaer Polytechnic
    Institute.  Google Scholar Wang, C., Q. Wang, K. Ren, and W. Lou. 2010. “Privacy-Preserving
    Public Auditing for Data Storage Security in Cloud Computing.” In IEEE INFOCOM,
    2010 Proceedings IEEE, March, 1–9.  Google Scholar Wang, W-N., J. Soulis, Y. J.
    Yang, and P. Biswas. 2014. “Comparison Of Co2 Photoreduction Systems: A Review.”
    Aerosol And Air Quality Research 14 (2): 533–549. doi:10.4209/aaqr.2013.09.0283.  Web
    of Science ®Google Scholar Wang, X. V., and L. Wang. 2017. “A Cloud-Based Production
    System for Information and Service Integration: An Internet of Things Case Study
    on Waste Electronics.” Enterprise Information Systems 11 (7): 952-968.  Web of
    Science ®Google Scholar Wei, Y., M. B. Blake, and G. R. Madey. 2013. “An Operation-time
    Simulation Framework for UAV Swarm Configuration and Mission Planning.” Procedia
    Computer Science 18: 1949-1958. doi:10.1016/j.procs.2013.05.364.  Google Scholar
    Welbourne, E., L. Battle, G. Cole, K. Gould, K. Rector, S. Raymer, M. Balazinska,
    and G. Borriello. 2009. “Building the Internet of Things Using RFID: The RFID
    Ecosystem Experience.” IEEE Internet Computing 13 (3): 48–55. doi:10.1109/MIC.2009.52.  Web
    of Science ®Google Scholar Wu, Q., G. Ding, Y. Xu, S. Feng, Z. Du, J. Wang, and
    K. Long. 2014. “Cognitive Internet of Things: A New Paradigm beyond Connection.”
    IEEE Internet of Things Journal 1 (2): 129–143. doi:10.1109/JIOT.2014.2311513.  Web
    of Science ®Google Scholar Zaidi, S. A. R., M. Z. Shakir, M. A. Imran, M. Ghogho,
    A. Vasilakos, K. Qaraqe, and D. McLernon. 2014. “Cognitive Internet of Things:
    A Unified Perspective.” In International Internet of Things Summit,October, 201–210.
    Cham: Springer.  Google Scholar Zaslavsky, A., C. Perera, and D. Georgakopoulos
    (2013). Sensing as a Service and Big Data. arXiv preprint arXiv:1301.0159.  Google
    Scholar Zhai, C., Z. Zou, Q. Zhou, J. Mao, Q. Chen, H. Tenhunen, L. Zheng, and
    L. Xu. 2017. “A 2.4-Ghz ISM RF and UWB Hybrid RFID Real-Time Locating System for
    Industrial Enterprise Internet of Things.” Enterprise Information Systems 11 (6):
    909–926. doi:10.1080/17517575.2016.1152401.  Web of Science ®Google Scholar Zhou,
    L., and H.-C. Chao. 2011. “Multimedia Traffic Security Architecture for the Internet
    of Things.” IEEE Network 25 (3): 35–40. doi:10.1109/MNET.2011.5772059.  Web of
    Science ®Google Scholar Download PDF X Facebook LinkedIn Email Share Related research  People
    also read Recommended articles Cited by 31 High-performance work systems, dual
    stressors and ‘new generation’ employee in China Yufang Huang et al. Asia Pacific
    Business Review Published online: 26 Mar 2018 Information for Authors R&D professionals
    Editors Librarians Societies Open access Overview Open journals Open Select Dove
    Medical Press F1000Research Opportunities Reprints and e-prints Advertising solutions
    Accelerated publication Corporate access solutions Help and information Help and
    contact Newsroom All journals Books Keep up to date Register to receive personalised
    research and resources by email Sign me up Copyright © 2024Informa UK Limited
    Privacy policy Cookies Terms & conditions Accessibility Registered in England
    & Wales No. 3099067 5 Howick Place | London | SW1P 1WG     Cookies Button About
    Cookies On This Site We and our partners use cookies to enhance your website experience,
    learn how our site is used, offer personalised features, measure the effectiveness
    of our services, and tailor content and ads to your interests while you navigate
    on the web or interact with us across devices. By clicking \"Continue\" or continuing
    to browse our site you are agreeing to our and our partners use of cookies. For
    more information seePrivacy Policy CONTINUE"'
  inline_citation: '>'
  journal: Enterprise Information Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Distributed behavior model orchestration in cognitive internet of things
    solution
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
