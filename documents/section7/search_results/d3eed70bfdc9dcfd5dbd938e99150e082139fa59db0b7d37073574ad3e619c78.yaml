- analysis: '>'
  authors:
  - He Q.
  - Zhao H.
  - Feng Y.
  - Wang Z.
  - Ning Z.
  - Luo T.
  citation_count: '0'
  description: Powered by data-driven technologies, precision agriculture offers immense
    productivity and sustainability benefits. However, fragmentation across farmlands
    necessitates distributed transparent automation. We developed an edge computing
    framework complemented by auction mechanisms and fuzzy optimizers that connect
    various supply chain stages. Specifically, edge computing offers powerful capabilities
    that enable real-time monitoring and data-driven decision-making in smart agriculture.
    We propose an edge computing framework tailored to agricultural needs to ensure
    sustainability through a renewable solar energy supply. Although the edge computing
    framework manages real-time crop monitoring and data collection, market-based
    mechanisms, such as auctions and fuzzy optimization models, support decision-making
    for smooth agricultural supply chain operations. We formulated invisible auction
    mechanisms that hide actual bid values and regulate information flows, combined
    with machine learning techniques for robust predictive analytics. While rule-based
    fuzzy systems encode domain expertise in agricultural decision-making, adaptable
    training algorithms help optimize model parameters from the data. A two-phase
    hybrid learning approach is formulated. Fuzzy optimization models were formulated
    using domain expertise for three key supply chain decision problems. Auction markets
    discover optimal crop demand–supply balancing and pricing signals. Fuzzy systems
    incorporate domain knowledge into interpretable crop-advisory models. An integrated
    evaluation of 50 farms over five crop cycles demonstrated the high performance
    of the proposed edge computing-oriented auction-based fuzzy neural network model
    compared with benchmarks.
  doi: 10.1186/s13677-024-00626-8
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Search Get published
    Explore Journals Books About Login Journal of Cloud Computing Advances, Systems
    and Applications About Articles Submission Guidelines Submit manuscript Research
    Open access Published: 21 March 2024 Edge computing-oriented smart agricultural
    supply chain mechanism with auction and fuzzy neural networks Qing He, Hua Zhao,
    Yu Feng, Zehao Wang, Zhaofeng Ning & Tingwei Luo  Journal of Cloud Computing  13,
    Article number: 66 (2024) Cite this article 293 Accesses Metrics Abstract Powered
    by data-driven technologies, precision agriculture offers immense productivity
    and sustainability benefits. However, fragmentation across farmlands necessitates
    distributed transparent automation. We developed an edge computing framework complemented
    by auction mechanisms and fuzzy optimizers that connect various supply chain stages.
    Specifically, edge computing offers powerful capabilities that enable real-time
    monitoring and data-driven decision-making in smart agriculture. We propose an
    edge computing framework tailored to agricultural needs to ensure sustainability
    through a renewable solar energy supply. Although the edge computing framework
    manages real-time crop monitoring and data collection, market-based mechanisms,
    such as auctions and fuzzy optimization models, support decision-making for smooth
    agricultural supply chain operations. We formulated invisible auction mechanisms
    that hide actual bid values and regulate information flows, combined with machine
    learning techniques for robust predictive analytics. While rule-based fuzzy systems
    encode domain expertise in agricultural decision-making, adaptable training algorithms
    help optimize model parameters from the data. A two-phase hybrid learning approach
    is formulated. Fuzzy optimization models were formulated using domain expertise
    for three key supply chain decision problems. Auction markets discover optimal
    crop demand–supply balancing and pricing signals. Fuzzy systems incorporate domain
    knowledge into interpretable crop-advisory models. An integrated evaluation of
    50 farms over five crop cycles demonstrated the high performance of the proposed
    edge computing-oriented auction-based fuzzy neural network model compared with
    benchmarks. Introduction Modern agriculture faces unprecedented stresses, such
    as rising food requirements from global population growth and declining arable
    land and water resources [1]. However, farm yields have plateaued, making bridging
    the supply–demand gap impossible. These macro trends necessitate urgent improvements
    in agricultural efficiency to boost productivity by up to 70% with shrinking buffers.
    Climate change pressures like extreme weather events, soil degradation, biodiversity
    losses, and rising carbon emissions threaten ecological sustainability. Agriculture
    accounts for over 25% of greenhouse gas emissions, highlighting the sizable decarbonization
    potential. However, the sector needs to catch up to manufacturing and transport,
    among other sectors, in sustainability initiatives [2, 3]. Enhancing agriculture''s
    environmental footprint requires data-driven transparency in the operational decisions
    that guide targeted interventions [4]. At the execution level, the sector exhibits
    deeply fragmented value chains, with numerous small-hold farmers and intermediary
    aggregators connected to processors and distributors. The high variability and
    ambiguity in biological crop cultivation processes also introduce decision complexity
    for stakeholders. Managing the complexity of agricultural workflow is currently
    manual-intensive, opaque, and localized. These macro and micro challenges create
    a burning platform for transforming traditional agriculture through emerging technologies.
    The promise of precision agriculture powered by data-driven automation offers
    step-change boosts in productivity, quality, sustainability, and resilience [5,6,7,8].
    Recent advancements in sensors, communication networks, edge computing, blockchain,
    machine learning, and artificial intelligence can be harvested to uplift agriculture.
    However, myriad barriers to adoption persist, limiting the technology-upgrade
    cycles. Hyperlocalization, characterized by the high spatial variability of farm
    ecology, including factors such as soil nutrition, moisture patterns, and disease
    risks, requires hyperlocal insights [9]. Centralized systems must capture these
    microclimatic nuances. In addition, decision ambiguity arises from biological
    uncertainties, weather volatility, and market variability, thus introducing ambiguities
    that require more structured solutions. Rigid automation often leads to suboptimal
    results or overcorrections that require stability. Furthermore, ecosystem opacity
    within the fragmented, multi-stakeholder agricultural network contributes to the
    need for more transparency regarding peer practices, supply–demand patterns, and
    fair pricing, inducing informality. While data-driven precision agriculture promises
    potential benefits, farmer data privacy requires thoughtful consideration. For
    instance, privacy-aware schemes for point-of-interest recommendations that are
    also relevant in agriculture for sensitive farm-specific plans [10, 11]. Lastly,
    inadequate infrastructure, particularly in terms of telecom, power, and public
    cloud infrastructure, remains a significant challenge for large-scale smart upgrades,
    especially in emerging rural regions with connectivity gaps [12, 13]. Decentralized
    architectures have demonstrated their robustness in addressing infrastructure
    limitations. Smart agricultural systems apply modern information and communication
    technologies to enhance productivity, profitability, sustainability, and traceability
    across the agricultural value chain, including cultivation, postharvest handling
    and processing, logistics, and marketing [14]. Edge computing refers to the paradigm
    of decentralized data processing, whereby computation and analytics are embedded
    in the data source rather than relying on a distant, centralized cloud infrastructure.
    In agriculture, intelligent edge devices can be embedded in farm equipment, storage
    warehouses, processing plants, and retail outlets [15]. Key-edge computing capabilities
    include real-time insight generation, decision autonomy, data filtering, and operational
    visibility. The edge-processing topology also enhances scalability, reliability,
    and sustainability. Hosting decentralized intelligence close to dispersed agricultural
    endpoints facilitates hyperlocal and instantaneous data-to-decision, even in remote
    terrain. Auction markets refer to transparent bidding mechanisms that facilitate
    efficient price discovery and clearing of trade volumes between multiple buyers
    and sellers. Continuous double auctions allow participants to place ask or bid
    quotes that dynamically match compatible offers concurrently [16]. However, real-world
    bidder psychology requires governance to ensure stability. Computational techniques
    such as reinforcement learning can model optimized bidding tactics. Overall, auctions
    simplify bilateral negotiations and enable liquidity on a global scale. While
    neural networks offer adaptable nonlinear function approximations, fuzzy logic
    facilitates interpretable reasoning that supports agricultural decision-making.
    Fuzzy systems can also generate natural language advisories for irrigation, fertilization,
    harvest timing, etc., customized for highly divergent individual farm microclimates,
    soil health, and crop varieties. Unlike black-box methods, the ability to handle
    ambiguity and provide explanations builds trust [17]. Fuzziness reflects the underlying
    continuity of biological processes. While prior works have studied aspects of
    edge computing architectures, auction mechanisms, and fuzzy optimization models
    individually for agriculture, an integrated approach synergizing these promising
    directions still needs to be developed. Specifically, existing edge computing
    proposals need to tailor generic paradigms to address unique agriculture sector
    needs arising from operational scale, decision complexity, and value chain fragmentation.
    Similarly, agricultural auction designs focus on pricing efficiency rather than
    holistic supply chain coordination, covering planning, matching, and sustainability.
    Finally, fuzzy techniques largely encode scientific principles lacking adaptable
    learning for personalized needs spanning diverse regional and crop-specific considerations.
    Our unified edge computing, auction, and fuzzy neural network approach is uniquely
    positioned to overcome these limitations through a context-aware, transparent,
    and data-driven smart agriculture automation solution connecting the fragmented
    production-consumption lifecycle. The integrated architecture can capture localized
    variations, balance supply–demand stability, resolve decision uncertainty, and
    enable traceability for next-generation precision agriculture needs at a global
    scale. By combining the complementary strengths across emerging technologies,
    the transformation of agricultural supply chains toward data-driven precision
    approaches is accelerated, ushering in the future of farming. Accordingly, the
    main contributions of this study are as follows: 1) We propose an edge computing
    framework tailored to agricultural requirements. The edge computing framework
    addresses several challenges by providing dense sensing coverage through various
    sensors, enabling preprocessing and model evaluation capabilities at the edge
    nodes, facilitating single-hop data transfer to cluster heads, implementing adaptive
    sensing to activate only the relevant nodes, and ensuring sustainability through
    a renewable solar energy supply. 2) We formulated invisible auction mechanisms
    that hide actual bid values and regulate information flows, combined with machine
    learning techniques for robust predictive analytics. 3) Rule-based fuzzy systems
    encode domain expertise in agricultural decision-making, and adaptable training
    algorithms help optimize model parameters from data. A two-phase hybrid learning
    approach is formulated. Fuzzy optimization models were formulated using domain
    expertise for three key supply chain decision problems. The remainder of this
    paper is organized as follows. Related work section  reviews related studies.
    Edge computing in agriculture section  introduces edge computing-oriented smart
    agriculture. The integration of auction mechanisms and fuzzy neural networks is
    discussed in Auction mechanism for agriculture section ,  Fuzzy and neural models
    section outlines the experiments conducted, and Edge computing-oriented smart
    agriculture section presents the conclusions. Related work Edge computing in agriculture
    Edge computing has emerged as a promising paradigm for addressing the challenges
    of data processing and decision-making in agriculture. By bringing computations
    closer to the data sources, edge computing enables the real-time processing and
    analysis of agricultural data, thereby reducing latency and improving responsiveness.
    Several studies have explored the applications of edge computing in agriculture,
    including precision agriculture, smart irrigation, and livestock monitoring [18,19,20].
    In [21], the authors introduced a two-tier genetic algorithm methodology aimed
    at optimizing a data analysis artificial intelligence system designed to monitor
    the conditions of agricultural vehicles. The cost-effective approach can be deployed
    on smartphones using integrated microphones rather than relying on expensive IoT
    sensors. By conducting an in-depth examination of the functioning of rural economies
    facilitated by the Internet, the authors thoroughly investigated the benefits
    of the Internet platform introduced in the operation of rural economies [22].
    Auction mechanisms for agriculture Auction mechanisms are widely used in agriculture
    to facilitate the trading of agricultural products. These mechanisms provide a
    decentralized and efficient way for farmers to sell their products and for buyers
    to obtain the desired products. Various agricultural auction mechanisms have been
    proposed, including open, sealed bid, and Dutch auctions [23]. To address the
    challenges related to low computational efficiency and restricted benefit distribution
    in the auction process, in [24], the authors introduced a novel deep learning-based
    iterative bilateral auction algorithm. This innovative approach represents an
    improvement over existing methods by harnessing deep learning capabilities to
    enhance the auction process. In [25], the authors evaluated the pricing efficiency
    of a livestock auction market using a two-tier stochastic frontier model. In [26],
    the authors devised a novel method to separate valuations from observed and unobserved
    variations using professional land appraisals. Fuzzy and neural models Fuzzy and
    neural models have been extensively employed in agriculture to model and predict
    complex systems. Fuzzy models can capture the uncertainty and imprecision inherent
    in agricultural data, whereas neural models can learn from the data and make accurate
    predictions. These models have been applied to various agricultural problems,
    such as crop yield prediction, disease detection, and pest management [27,28,29,30].
    Remya and Sasikala developed a neuro-fuzzy prediction model to simulate the behavior
    of international trade analysis in the agriculture industry [31]. Remya explored
    various neural network topologies and investigated methods for optimizing and
    analyzing these networks with agricultural data [27]. Ramana et al. used a convolutional
    neural network to classify and detect leaf disease [32]. Bhojani and Bhatt developed
    an amended multilayer perceptron neural network with a new activation function.
    They revised random weights and bias values for crop yield estimation using different
    weather parameter datasets [33]. Zhang et al. presented a radar echo prediction
    method representing disastrous weather based on convolutional neural networks
    and long short-term memory networks [34]. In summary, emerging computational paradigms
    demonstrate significant potential in helping realize the vision of smart agriculture
    but require synthesis considering problem constraints. Our work aims to address
    this research gap through an integrated edge intelligence, market coordination,
    and decision optimization approach purpose-built for the sector. Edge computing-oriented
    smart agriculture System model This study presents an edge computing framework
    complemented by auction mechanisms and fuzzy optimizers that connect various supply
    chain stages, as shown in Fig. 1. Fig. 1 Overall framework Full size image Edge
    computing offers powerful capabilities that enable real-time monitoring and data-driven
    decision-making in smart agriculture. We propose an edge computing framework tailored
    to agricultural needs, as shown in Fig. 2. Fig. 2 Proposed edge computing framework
    for smart agriculture Full size image The framework comprises three sections:
    the sensing layer, the edge computing layer, and the growth data model. Sensing
    layer The sensing layer consists of heterogeneous sensing devices deployed across
    agricultural fields to collect various crop and environmental parameters. Sensor
    nodes can be categorized as follows. Crop-monitoring nodes: Sense key parameters
    related to crop growth, health, and yield, including leaf area, canopy size, stem
    thickness, leaf color, crop height, and root size. Environmental monitoring nodes:
    Sense climatic parameters such as humidity, temperature, soil moisture, and soil
    nutrients. Sensor nodes include sensors, microcontrollers, wireless radios, power
    units, and other supporting circuits. Different wireless communication standards
    include WiFi, Bluetooth, LoRaWAN, NB-IoT, and legacy protocols like Zigbee. LoRaWAN
    provides long-range connectivity that is particularly suitable for sparse farm
    deployment, whereas Wi-Fi and NB-IoT offer higher bandwidths [35]. Bluetooth is
    appropriate for short-range communications between proximal nodes. Let the heterogeneous
    sensor node set in the field be represented as follows: (1) where is the total
    number of deployed nodes, and we assume that each sensor node is aware of its
    location ( ) via either GPS or landmark-based localization. Nodes with overlapping
    sensing zones can collaborate to reduce redundancy. The sensor node set is divided
    into clusters based on the spatial proximity: (2) Clustering exploits locality
    to enable energy-efficient data routing. Each cluster has a cluster head elected
    dynamically that aggregates and relays data to the edge layer. Edge computing
    layer The edge computing layer comprises edge servers with significant computing
    power, storage, and analytics capabilities. We propose a heterogeneous edge computing
    architecture consisting of the following: Static edge nodes: Deployed at base
    stations in the field. Mobile edge nodes: Mounted on autonomous ground robots
    or UAVs. It provides blanket coverage through fixed nodes and targeted data collection
    through mobile nodes. The edge nodes are outfitted with solar panels, batteries,
    and wireless antennae to ensure sustainable off-grid operations. Key capabilities
    offered by the edge computing layer include (i) Cluster data aggregation: Combine
    sensor data from nodes within clusters; (ii) Preprocessing and storage: Filter
    noise, detect outliers and temporally store data; (iii) Growth stage identification:
    Classify current growth phase based on crop parameters; (iv) Analytics: Environmental
    and yield predictions via ML models; (v) Control policies: Adaptive sensing frequencies,
    irrigation levels etc. These edge-centric functions distribute computations closer
    to the sensors, avoid cluttering the cloud, and support real-time agriculture.
    Next, we formulated mathematical models for crop and environmental sensing data.  Growth
    data model We divide the crop lifecycle into phenological growth stages denoted
    by (3) The fuzzy cluster algorithm can determine from historical crop data. Let
    represent the crop parameter vector sensed across nodes at time ; denotes the
    th parameter, such as leaf area and plant height. We define a weighted crop indicator
    aggregating all parameters as follows: (4) where represents the relative importance
    of parameter . The growth stage at time can be estimated based on using a TSK
    fuzzy neural network. For example, if representing leaf area and plant height,
    and , then . 0.7 and 0.3 are the weights, while 0.6 and 0.8 are the parameter
    values. The weights scale the parameter values before summing. Edge computing
    framework Traditional wireless sensor network deployments for agricultural monitoring
    often suffer from several deficiencies, including manual measurements of parameters
    leading to sparse data, a lack of computational capabilities on nodes, long multi-hop
    routes causing delays and congestion, redundant sensing from overlapping nodes,
    and limited power availability restricting the system lifetime [36]. Collectively,
    these issues limit the efficiency and reliability of traditional WSNs in agricultural
    monitoring wireless sensor networks. Our proposed edge computing framework addresses
    several of these challenges by providing dense sensing coverage through a variety
    of sensors, enabling preprocessing and model evaluation capabilities at edge nodes,
    facilitating single-hop data transfer to cluster heads, implementing adaptive
    sensing to activate only relevant nodes, and ensuring sustainability through a
    renewable solar energy supply. This comprehensive approach aims to significantly
    enhance the efficiency and effectiveness of agriculture monitoring wireless sensor
    networks. Consequently, the framework can collect high-resolution spatiotemporal
    data to better capture crop dynamics. Furthermore, optimized sensing and computing
    policies reduce resource waste and data redundancy. For quantitative comparison,
    we evaluate key performance metrics in the experiment section. The decentralized
    architecture also enhances scalability for large farm acreages. Next, we detail
    the computational techniques implemented on the edge layer. The first functionality
    is accurately identifying phenological crop growth phases, allowing stage-specific
    sensing and interventions for precision agriculture. We formulate a fuzzy clustering
    approach using the Gath-Geva algorithm that minimizes within-cluster variance.
    Let historical crop data over time slots be represented as where is the parameter
    vector at slot . The crop cycle is divided into stages ( ) denoted by fuzzy partition
    matrix . Element defines the membership of slot in stage . The cluster centers
    are . We define classification coefficient and average fuzzy entropy as (5) The
    iterative fuzzy clustering algorithm tries to maximize and minimize . The steps
    are summarized as follows: Step 1. Initialize: Partition matrix , clusters , iterations
    , weight . Step 2. Compute cluster centers using membership . Step 3. Determine
    cluster covariance and prior probability. Step 4. Calculate fuzzy maximum likelihood
    distance measure. Step 5. Update partition matrix . Step 6. Repeat steps 2–5 until
    . Step 7. Choose optimal based on best and β . The defined method effectively
    divides the crop cycle into phenological growth phases, , matching the field duration.
    Next, we predicted the current stage based on the sensed indicators. To determine
    the growth phase, we designed a Takagi–Sugeno (TS) fuzzy neural network model
    comprising five layers: input, fuzzification, rule, aggregation, and output. The
    first layer accepts an input vector containing current measurements of crop parameters.
    The fuzzification layer converts the inputs into a fuzzy set with Gaussian membership
    functions: (6) where and are the center and width of the th MF for th input, respectively.
    The first-order TS rule base comprises rules of the form (7) where is a consequent
    parameter. The net output is computed as where firing strength . For training,
    we used an extreme learning machine to randomly initialize the input layer weights
    and optimize the output layer weights analytically using the Moore–Penrose inverse.
    For sequential online adaptation, a recursive least-squares estimate was employed.
    The integrated TS fuzzy neural network model can accurately estimate crop growth
    stage at any instant based on the sensed crop indicators . Stage-specific control
    policies are then enacted. Next, we present the optimization of environmental
    sensing parameters. Correlations exist between external environmental factors
    and internal crop development processes. For example, high humidity and soil moisture
    are vital for plant emergence and flowering. However, continuously measuring all
    the parameters is energy-intensive. We propose an optimization technique driven
    by gray relational analysis to select the relevant attributes. Let represent the
    crop indicator sample sequence and denote the th environmental parameter sequence
    over slots. The gray relational coefficient between and is defined as follows:
    (8) where is the resolution coefficient. The degree of gray correlation (DGC)
    over all slots is (9) A higher DGC implies greater relevance of that attribute.
    However, crop indicators have different priority levels depending on their growth
    stage. Let represent the weight of indicator determined by the variance at each
    stage. The weighted correlation measure is (10) Gray relational analysis ranks
    all parameters in order of relevance to the current growth stage. The top-ranked
    attributes that satisfy the sensing time constraint are selected for measurement
    by the nodes. This method minimizes the infeasible measurements that are invalid
    for that phase. We designed an adaptive distributed sensing mechanism for crop
    growth data collection that activates relevant nodes based on spatial coverage
    constraints. Let represent a set of selected sensor nodes. The centroid of the
    active nodes is derived as follows: (11) The Euclidean distance of candidate sensor
    to centroid is (12) Node having maximum distance measure is incrementally added
    to if the effective coverage area meets the threshold where (13) This distributed
    algorithm allows only the appropriate sensors to be selected, thereby avoiding
    redundant measurements. The pseudocode is presented in Algorithm 1. Algorithm
    1. Adaptive crop growth sensor selection This method allows the activation of
    only a subset of nodes, thus saving energy and minimizing data redundancy. Subsequently,
    we evaluated the overall system performance against traditional approaches. Integration
    of auction mechanisms and fuzzy neural networks While the edge computing framework
    manages real-time crop monitoring and data collection, market-based mechanisms,
    such as auctions and fuzzy optimization models, support decision-making for smooth
    agricultural supply chain operations. Auction mechanisms for agricultural markets
    Auction mechanisms have become essential tools for achieving efficient price discovery
    and facilitating the exchange of goods between multiple buyers and sellers. They
    have gained significant prominence in commodity markets, particularly agriculture.
    These include automated matching, where continuous double auctions automatically
    pair compatible ask and bid orders, thereby saving manual effort and ensuring
    suitable trades; price discovery, as the ongoing interaction of agents leads to
    the emergence of market-clearing equilibrium prices that reflect fair valuation;
    allocation efficiency, where auction-clearing algorithms allocate goods to buyers
    willing to pay the highest price, promoting allocative efficiency; and transparency
    provided by centralized order books, offering insight into current prices and
    market depth, unlike in opaque bilateral negotiations. In addition, auctions offer
    anonymity to buyers and sellers, thereby reducing information leaks. At the same
    time, electronic trading significantly lowers the overhead transaction fees associated
    with intermediaries and paper-based processes, making auctions more cost-effective.
    Furthermore, the convenience of online accessibility ensures geography-independent,
    round-the-clock market access and liquidity. Although auctions possess characteristics
    that make them suitable for facilitating large-scale agricultural trade between
    numerous fragmented producers and consumers, several critical limitations must
    be addressed. First, information asymmetry between buyers and sellers stemming
    from differing private cost functions can enable fraudulent practices through
    unfair arbitrage. Additionally, the influence of visible market positions on expectations
    can result in frequent trading of speculative forward contracts that do not align
    with the underlying agricultural assets, potentially causing market distortions.
    Finally, agricultural markets are highly susceptible to external shocks, such
    as weather damage and policy changes, leading to volatile reactions that must
    be managed effectively to function as auctions in this context. To address these
    issues, we formulated invisible auction mechanisms that hide actual bid values
    and regulate information flows, combined with machine learning techniques for
    robust predictive analytics. We propose an invisible auction framework for agricultural
    commodity markets with the following components: Bid encryption: The participant
    bid values are encrypted using homomorphic public-key cryptography instead of
    visible quotes. (14) where is the actual valuation, is the public key, and is
    the published bid. Order matching: The auctioneer matches encrypted bids and asks
    by checking: (15) where denotes decryption via secret key . Transaction logging:
    An immutable distributed ledger chain transparently records all historically successful
    transactions with associated encrypted bid values. Predictive analytics: Long
    short-term memory neural networks are trained on aggregated transaction data flows
    to forecast future price dynamics and crop yields. This framework enhances transaction
    transparency without compromising privacy. Long-term trends can be forecasted
    through data analytics, whereas real-time irrational biases are moderated by cryptography.
    Violations, if any, get automatically flagged through audits promoting accountability.
    Therefore, an invisible auction architecture insulates agricultural markets from
    volatility and manipulation. Notably, invisible auctions preserve the desirable
    properties of traditional continuous double auctions, such as dynamic matching,
    efficient allocation, fairness, transparency, and anonymity. Only the price discovery
    process is indirectly influenced by analytics instead of directly visible bid-ask
    quotes. Regulatory oversight further nullifies the possibility of fraudulent behavior.
    This combination of cryptographic protection, machine intelligence, and accountable
    regulation stabilizes the agricultural commodity markets. Executing trade contracts
    through self-enforcing smart contracts over blockchain networks fosters seamless
    supply chain coordination. Smart contracts encode business rules governing supply
    chain interactions like procurement planning, financing payoffs, quality checks,
    and logistics flows. Input data are fed from trusted gateways, such as IoT sensors,
    with logic execution automatically managing the workflows. Integrated exception
    handling, such as penalties, improves accountability. Such blockchain-managed
    smart contracts promote coordination, transparency, and automation across agricultural
    value chain entities in a decentralized manner. The synthesis of auctions and
    distributed automation holistically connects disparate supply chain stages into
    a coherent system. Fuzzy neural network formulation Fuzzy logic and neural networks
    provide complementary modeling capabilities. While neural networks offer adaptable
    training for arbitrary complex mappings, fuzzy systems facilitate their interpretability.
    We formulate an integrated 5-layer architecture, as shown in Fig. 3, tailored
    to agricultural decision scenarios dealing with ambiguous and incomplete knowledge.
    Fig. 3 Fuzzy neural network schematic Full size image The input layer represents
    the problem domain parameters. For the agricultural application, input variables
    span crop attributes, weather forecasts, soil conditions, and market rates derived
    from field sensors, satellites, and domain expertise. Let vector denote the input
    variables. The normalization modules transform the features into comparable numerical
    ranges using min–max normalization. (16) This preprocessing enhances the training
    stability. The input layer feeds the normalized variables into the fuzzification
    layer for linguistic modeling. Membership functions convert real-valued inputs
    into fuzzy sets, mapping them to a normalized interval. Commonly adopted forms
    include triangular, trapezoidal, Gaussian, and bell curves with tunable parameters.
    We utilize Gaussian membership functions for smoothness and concise representation
    as follows: (17) where is Gaussian center and denotes width. The membership functions
    transform agricultural inputs into overlapping fuzzy variables, such as LOW, MEDIUM,
    and HIGH temperature, and DRY, MODERATE, or WET soil moisture—granular discretization
    of the problem space results. The inference logic is encoded in the fuzzy rule
    base, aggregating input variable fuzzy sets to form output decisions. Popular
    compositional schemes include AND, OR, and NOT operators applied to antecedent
    clauses. We used conjunctive fuzzy rules, with each clause joined by an AND. (18)
    where denotes the fuzzy set of variable in rule and is the crisp rule output.
    For example, an example irrigation advisory rule may be (19) Domain experts formulate
    such fuzzy rules linking inputs to outputs using intuitive language. Automated
    methods also assist rulebase generation from data. The firing strength of the
    fuzzy rules indicates the degree of match with the inputs found by the fuzzy AND
    operator, which is typically implemented as (20) The firing strengths across the
    rule bases were aggregated using weighted average defuzzification for crisp decisions.
    (21) This generates robust aggregate outputs by combining recommendations from
    multiple rules applicable to the current agricultural situation. We applied a
    hybrid learning approach with gradient descent for parameter tuning from the data
    by adapting the output layer weights and the least mean square estimate to update
    the antecedent membership function parameters. Composite backpropagation regulates
    the model performance on yield prediction and disease diagnosis tasks while retaining
    transparency. The fuzzy neural network provides an accurate yet interpretable
    agricultural decision-making framework. Fuzzy model training algorithms While
    rule-based fuzzy systems encode domain expertise in agricultural decision-making,
    adaptable training algorithms help optimize model parameters from the data. A
    two-phase hybrid learning approach is formulated. In the first phase, domain experts
    or clustering methods initialize the membership function parameters and rule bases.
    For example, the fuzzy variable MOISTURE can be defined as. (22) The membership
    functions translate the input moisture percentages into degrees of association
    with the fuzzified sets, LOW, MEDIUM, and HIGH. Typical fuzzy rules then link
    the soil moisture status to irrigation amounts; for instance, (23) In the first
    phase, primitive fuzzy relationships are established between the inputs and outputs
    based on the principles of agricultural science. However, this initial model exhibits
    several drawbacks, including arbitrary membership function bounds, insufficient
    coverage of the rule base, inconsistent consequent actions, and a lack of consideration
    of relative rule importance. These limitations must be addressed to enhance the
    effectiveness and reliability of this model. Refining the primitive fuzzy system
    using data-driven adaptation alleviates these limitations and enhances performance.
    In the second phase, the model parameters were tuned based on streaming field
    observations of moisture levels, actual irrigation amounts, and crop yields. We
    formulated a two-step least-squares estimate (LSE) algorithm that minimizes the
    squared error loss between the fuzzy model outputs and the measured ground truth
    labels: (24) where represents fuzzy model output, is true label at time and denotes
    parameters. The hybrid LSE method decomposes into: (25) where maps inputs to rule
    firing levels dependent on antecedent parameters . The function aggregates rule
    outputs based on consequent weights . The two-step gradient descent iterate then
    becomes: (26) First, the membership function bounds were tuned to better match
    the field data associations. The second step rectifies the consequent actions,
    such as adjusting the irrigation amounts. Batch model retraining or sequential
    stochastic gradient descent helps automate the parameter learning. Therefore,
    the hybrid approach aligns the model variables and rules with the ground realities.
    For nondifferentiable aspects, evolutionary heuristics also assist in adaptation.
    The integrated data-driven training methodology optimizes fuzzy systems for reliable
    and context-aware agricultural decision-making support. Practical implementations
    have demonstrated order-of-magnitude improvements in prediction accuracy and rule-based
    optimization over nearly 3,000 crop cycles. The tailored fuzzy modeling paradigm
    offers transparent yet robust tools for precision agriculture. Fuzzy optimization
    of agricultural decisions Fuzzy systems offer efficient mechanisms for translating
    ambiguous input data into transparent agricultural decision-making policies. We
    use domain expertise to formulate fuzzy optimization models for three key supply
    chain decision problems. Precision agriculture requires the optimal dynamic allocation
    of resources such as water, fertilizers, and pesticides based on crop stages,
    weather patterns, and soil conditions. We encode this as a multi-objective optimization
    problem. (27) The objectives are to maximize crop yield and minimize resource
    consumption costs and environmental impacts, subject to resource availability
    constraints. We designed a Mamdani-type fuzzy inference system with a rulebase:
    (28) where linguistic variables, such as LOW and MEDIUM, model soil moisture and
    resource application levels, respectively. Defuzzification converts fuzzy outputs
    into actionable irrigation and fertilization rates [37, 38]. Common strategies
    include the centroid, mean-max, and maximum criteria. The weighted aggregate response
    resolves multi-objective optimization tradeoffs for personalized crop requirements.
    Agricultural scientists formulated approximate fuzzy relationships using field
    studies. Adaptive tuning then calibrates the recommendations to local conditions
    for precision farming. Crop planning involves annual decision-making regarding
    portfolio mixes across produce, acreage allocation, and planting schedules. The
    Mamdani fuzzy scheme for long-term planning is as follows: (29) Linguistic variables
    guide area expansion, reduction, or the status quo for different crops, contingent
    on historical profits and forecast outputs. Fuzzy crop planners offer interpretable
    data-to-decision modeling that complements predictive analytics. Tuning replenishment
    quantities and frequencies for seeds, fertilizers, equipment, etc. minimizes warehousing
    costs. The Mamdani fuzzy policy relating inventory levels to supply variability
    is [39]: (30) Strategic rules minimize stock-out risks and wastage induced by
    agricultural demand uncertainties for efficient operation. Fuzzy inventory controllers
    allow the embedding of domain insights and adaptive calibration. Integrated fuzzy
    optimization paradigms enable automated and interpretable agricultural decision-making
    by translating data into actions while balancing the supply chain KPIs. Extensions
    using neural learning and evolutionary heuristics can further enhance predictive
    accuracy and adaptation capabilities. Quantitative evaluation metrics Rigorously
    benchmarking the performance of fuzzy modeling and optimization methods requires
    quantitative accuracy metrics calculated from agricultural data. We utilized regression-based
    measures for prediction tasks and an economic cost–benefit analysis for the decision
    optimization results. Prediction problems in agriculture deal with forecasting
    time-varying phenomena such as crop yields, prices, and demand. The following
    accuracy measures were adopted: Mean absolute error (31) where is the actual observation
    and is the model-predicted value at time . Root mean-squared error (32) Mean absolute-percentage
    error (33) Coefficient of determination (34) Lower MAE, RMSE, and MAPE values,
    along with higher values, indicate superior predictive accuracy. Time-series metrics
    facilitate the comparison of performance improvements from fuzzy models over statistical
    baselines through field trials. For agricultural decision support scenarios, fuzzy
    systems optimize complex multidimensional objectives and balance relevant domain
    tradeoffs. Quantifying the realized business value requires a cost–benefit analysis.
    Net present value (35) where NPV calculates net economic gain over a lifetime,
    accounting for the time value of money. Return on investment (36) Payback period
    (37) These financial indicators estimate the sustainability of optimized fuzzy
    decision-making policies for precision agricultural management. Comprehensive
    evaluation is facilitated in conjunction with domain performance metrics such
    as crop quality and soil ecology. Fuzzy model interpretability Unlike black-box
    AI techniques, fuzzy systems enable the interpretation of knowledge encoded within
    models of transparency and trust. We analyzed rule-based insight extraction along
    three axes: Fuzzy rules employ natural language acting as intuitive decision policies:
    (38) The keywords HIGH and LOW map raw inputs into representative categories based
    on the underlying membership functions, allowing cognitive unpacking of the model
    logic linking various agricultural variables. Domain experts can validate whether
    the recommendations match the expected crop patterns in that context. This contrasts
    with the inscrutable weights in deep neural networks. Furthermore, the fuzzy model
    adapts its linguistic knowledge bank when novel unseen data patterns emerge and
    updates the rules with new terms. Variable relevance heat maps help identify key
    agricultural drivers based on the frequency of appearance in the fuzzy rule antecedents.
    (39) Higher weight parameters were prioritized for data collection using appropriate
    field sensors. The domain significance was also uncovered, such as the dominant
    weather influence on soil nutrition. Heatmaps improve model transparency in a
    manner similar to a sensitivity analysis. The firing strength of the fuzzy rules
    on the new data samples indicates the usage frequency, allowing the calculation
    of the rule influence: (40) where is the number of rules, and rules with higher
    influence drive aggregated model decisions more critically and distinguish between
    redundant niche policies. Such analysis enhances user trust and model debugging.
    The integrated interpretation toolkit, consisting of intuitive fuzzy rules, diagnostic
    heatmaps, and influence metrics, boosts model transparency, which is crucial for
    credibility and adoption—the agriculture-specific explanations bridge skill gaps
    preventing black-box automation. Experiment and results analysis Results under
    edge computing-oriented smart agriculture We evaluated the edge-based smart agriculture
    framework on 50 prototype farms and compared the performance with that of traditional
    sensing architectures. The key metrics analyzed were the crop cycle duration error,
    growth stage prediction accuracy, energy consumption, and sensed data redundancy.
    The farms spanned a geographical area of 250 acres and was divided into 100 sensing
    cells with a cluster of 20 sensor nodes randomly distributed per cell. The nodes
    possessed temperature, humidity, CO2, and lighting sensors with LoRa communication
    links. A solar-powered edge server was present in each cell, with a computing
    capacity of 2 GHz clock and 8 GB of RAM. The edge nodes also had a cellular 4G
    hookup for cloud analytics. The key capabilities deployed were fuzzy growth phase
    classification, adaptive neural growth forecasting, gray relational parameter
    selection, and distributed cell selection policies. Specifically, time-series
    data collected from 50 farms over five crop cycles of 90 days each, totaling over
    22,500 h of data, has the characteristics: multivariate data encompassing crop
    yields, market auction prices, soil moisture content, temperature, humidity, nutrition,
    and rainfall. The data was aggregated from IoT sensors like soil probes and weather
    stations deployed across the 50 farms to measure crop and environment conditions
    online agriculture commodity trading platforms recording market prices. These
    edge intelligence modules guide dynamic sensor scheduling and data routing, subject
    to lifetime and coverage constraints. The integrated edge-fog cloud architecture
    provides flexibility to distribute analytics across devices, cells, and the global
    scope [40]. We cultivated cabbage over three 90-day crop cycles, with sensor measurements
    gathered at hourly intervals. Table 1 compares the performance of our edge computing
    framework with that of conventional cloud-based sensor networks in terms of key
    metrics. Table 1 System deployment results Full size table It can be observed
    that the integrated edge computing architecture demonstrates superior crop modeling
    capabilities with halved season estimation errors and 23% improved classification
    accuracy over legacy networks. Strategic sensor-scheduling policies based on growth
    phases minimize redundant data collection and overlaps. Furthermore, analytics
    co-location with data sources avoids expensive cloud transmissions and reduces
    energy requirements by over 20%. Streamlined data pipelines facilitate deeper
    field insights into the exact operational costs. Next, we analyze the detailed
    sensitivity toward the prediction and selectivity mechanisms underlying these
    agriculture 4.0 productivity gains. The results are shown in Table 2. Table 2
    Cabbage growth phase accuracy Full size table Fuzziness captures intermediately
    transitioning states better than rigid discrete models. Furthermore, Table 3 shows
    that the classification approach is computationally efficient, requiring only
    14 mJ of energy and delivering 77% of the lifetime gains. Hence, edge computing
    enables advanced analytics by using frugal models on tight mobile platforms. Table
    3 Energy consumption comparison Full size table The context-aware parameter selection
    scheme dynamically detects relevant attributes over the cabbage crop cycle using
    gray relational analysis, with the Pearson coefficient as a similarity metric.
    Table 4 shows the nutrient requirements, which varied across the seeding, vegetation,
    and pre-maturity stages. Our model automatically activated the corresponding sensors,
    MOISTURE during growth and NPK during flowering. Table 4 Representative parameters
    across cabbage phenology Full size table Such automated tuning of pertinent factors
    enhances efficiency; on average, only 21% of the available sensors are triggered
    per phase. Domain knowledge fusion achieves sparsity without compromising coverage.
    Edge analytics extract contextual execution policies that are challenging to infer
    as centralized. The decentralized sensor coordination protocol dynamically partitions
    cells into active sensing zones and candidate regions iteratively minimizing the
    (41) The distance metric ensures that dispersed sensors are selected, thereby
    capturing wider samples. Furthermore, the effective coverage area is (42) Thresholds
    prevent overlap. Unlike centralized controllers, distributed policies respond
    faster to local moisture fluctuations. Table 5 shows evidence that decentralized
    coordination minimizes the number of active nodes and saves intranet routing overhead
    for fog computing gains. Table 5 Distributed optimization savings Full size table
    The integrated edge intelligence pillars achieved significant analytical enhancements
    while minimizing costs and demonstrating system-wide data-to-decision transformations.
    Field trials have validated that technology synergies unlock considerable efficiencies.
    In addition to productivity, environmental sustainability is enhanced through
    optimized resource usage. Evaluation under integration of auction mechanisms and
    fuzzy neural networks We evaluated the performance of the developed agricultural
    supply chain architecture by integrating edge computing, auction markets, and
    fuzzy optimization models across multiple metrics: crop price and yield forecasting
    accuracy, supply chain cost reduction, carbon footprint minimization, revenue
    and profit enhancements, and operational efficiency improvements. The field trial
    involved a consortium of 50 farmers producing corn and wheat varieties and selling
    them to 75 consumers via online auction platforms throughout five crop cycles.
    Transaction data flowed into analytical models that predicted seasonal averages
    for crop prices, production yields, and demand levels. These are fed into planning
    modules that encode domain constraints and business rules to issue quantity and
    portfolio recommendations in response to emerging dynamics. For prediction accuracy,
    the proposed edge computing-oriented auction-based fuzzy neural network (EC-aFNN)
    should be compared with the four benchmarks: (i) BMAE-Net [41]: data-driven weather
    prediction network, (ii) Bayesian neural network (BNN) [42]: corn yield prediction
    based on remotely sensed variables, (iii) random forest regression (RFR) [43]:
    yield and quality prediction of winter rapeseed (iv) dingo-optimized sand piper
    (DOSP) [44]: automatic crop yield prediction framework designed with two-stage
    classifiers, as shown in Fig. 4. Fig. 4 Forecasting performance comparison Full
    size image Superior accuracy metrics directly and positively affect various aspects
    of smart agricultural supply chain operations. Enhanced crop planning enabled
    by more precise yield and price forecasting allows farmers to develop data-driven
    sowing plans for the next season by considering soil conditions, water availability,
    and risk reduction. This accuracy also supports effective procurement optimization
    as it helps suppliers adjust inventories through calibrated stochastic ordering
    policies, thus minimizing waste. Additionally, efficient logistics coordination
    becomes possible by zonally matching the expected supply and consumption through
    granular forecasts, thereby facilitating right-sized transportation planning.
    Moreover, the stability of market dynamics improved significantly. The deep visibility
    of long-term trends through fuzzy models moderates speculative volatility and
    reduces irrational panic buying and selling. Furthermore, personalized recommendations
    can be tailored to individual farms based on hyperlocal crop-choice suggestions
    and cultivation advisories derived from precise geospatial predictions. Automation
    plays a crucial role, with smart contracts encoding decision rules around procurement
    quantities, shipping sizes, etc. These contracts automatically execute transfers
    based on reliable forecasts. In summary, integrated edge computing, auction markets,
    and fuzzy neural network architectures deliver accuracy improvements that drive
    data-driven, transparent automation, harmonize supply and demand, and lead to
    quantifiable enhancements in sustainability, profitability, and resilience throughout
    the agricultural value chain. Optimized production and delivery coordination minimizes
    waste across agricultural value chain stages, as shown in Fig. 5. Total food loss
    was reduced by 29%, thus lowering operational costs. Fig. 5 Food wastage reduction
    across supply chain Full size image Across all stages, the EC-aFNN architecture
    provides superior food waste reduction compared with state-of-the-art benchmark
    food supply chain models, leading to enhanced sustainability. Supply chain transparency
    and coordination eliminate excess resource usage, as shown in Fig. 6. Fig. 6 Agricultural
    sustainability enhancements Full size image It can be observed that the integrated
    edge computing, auction markets, and fuzzy optimization framework provide 31–55%
    superior sustainability improvements along with energy, water, fertilizer, and
    pesticide reduction over the BNN, which highlights the strengths of our approach.
    Transparent price discovery boosted per-acre incomes for individual farmers, as
    shown in Fig. 7. Speculation risks declined through auction regulations, enhancing
    stability. Fig. 7 Increase in farmer profits per acre of land Full size image
    It can be observed that EC-aFNN architecture provides 37% superior profitability
    improvements per acre over the best benchmark BNN. Enhanced forecasting accuracy
    directly boosted incomes by eliminating wastage. The integrated edge computing,
    auction markets, and fuzzy optimization framework deliver accuracy improvements
    that drive data-driven, transparent automation, harmonize supply and demand, and,
    in turn, lead to quantifiable enhancements in sustainability, profitability, and
    resilience throughout the agricultural value chain. This study attributes the
    per-acre profitability gains to a combination of factors. These include enhanced
    price discovery and stability via auction market regulations, which, coupled with
    improved forecasting accuracy that reduced waste, led to increased incomes. Additionally,
    the data-driven and transparent automation enabled by the integrated framework
    played a crucial role in these gains. Moreover, the synergistic fusion of edge
    computing, auctions, and fuzzy techniques contributed significantly to the overall
    improvements in profitability. Figure 8 shows the improvements in operational
    key performance metrics. Fig. 8 Improvements in operational key performance metrics
    Full size image It can be observed that the integrated EC-aFNN architecture provides
    up to 43% superior improvements in asset utilization and service levels compared
    to the best benchmark model, BNN. Transparent information exchange and collaborative
    planning enabled right-sizing capacities to balance demand fluctuations. Therefore,
    the integrated architecture realizes quantifiable enhancements across key supply
    chain indices. A detailed comparative analysis substantiates the synergistic fusion
    of emerging technologies that transform traditional fragmented agriculture through
    informed automation. Conclusion Precision agriculture promises immense benefits
    but is hindered by fragmentation, opacity, and decision complexity. In this study,
    an integrated edge computing, auction, and fuzzy optimization approach was developed
    to address these barriers. The decentralized edge paradigm hosts localized crop
    analytics and provides real-time advisories. Apart from transparent price signals,
    auction mechanisms balance supply and demand. Fuzzy techniques allow domain knowledge
    to be encoded into interpretable crop-recommendation models. The integrated evaluation
    of a 50-farm consortium substantiates its outperformance over conventional approaches:
    31% supply chain cost reduction through lowered waste, 37% per acre profit increase
    via auction efficiency, 55% carbon emissions decrease using sustainability analytics,
    and 43% raised asset utilization from the sharing economy. A streamlined data-to-action
    architecture provides a robust, transparent, and efficient solution tailored to
    diverse agricultural requirements. While the integrated edge computing and auction-based
    fuzzy agriculture framework provide significant enhancements, certain limitations
    must be addressed in the future. Microclimate spatial variability, even within
    farms, necessitates adaptable recommendations by incorporating aerial/satellite
    imagery analysis to achieve localized precision. Additionally, resilience to unexpected
    severe weather events via climate ensemble simulations will make the system robust
    despite disruptions to harvest cycles. Simultaneously, expansions can enrich structured
    knowledge through formal agriculture ontology and semantics, elucidating soil,
    climate, and crop interrelationships. Optimized water conservation based on moisture
    patterns, supplemental controlled irrigation, and permissible stress thresholds
    present another sustainment opportunity. Furthermore, significant renewable energy
    potential exists at farms for solar, wind, and biofuels to attain carbon–neutral
    operations. Incorporating these limitations and proposed future enhancements centered
    on robust, adaptable models, geospatial intelligence, sustainability, and structured
    decision formalization will accentuate practical impact while opening longer-term
    possibilities. Availability of data and materials No datasets were generated or
    analysed during the current study. References Sawkar RH, Hiregoudar LG, Bharadwaj
    S (2020) Aquaponics: a modern agriculture technology to overcome water scarcity
    and drought. J Geol Soc India 95:108–109 Article   Google Scholar   Utamima A,
    Reiners T, Ansaripoor AH (2022) Evolutionary neighborhood discovery algorithm
    for agricultural routing planning in multiple fields. Ann Oper Res 316:955–977
    Article   Google Scholar   Nyam YS, Kotir JH, Jordaan AJ et al (2021) Developing
    a conceptual model for sustainable water resource management and agricultural
    development: the case of the Breede River Catchment Area, South Africa. Environ
    Manage 67:632–647 Article   CAS   PubMed   Google Scholar   Ding Y, Sun C (2022)
    Does agricultural insurance promote primary industry production? Evidence from
    a quasi-experiment in China, Geneva. Pap Risk Insur Issues Pract 47:434–459 Google
    Scholar   Misara R, Verma D, Mishra N et al (2022) Twenty-two years of precision
    agriculture: a bibliometric review. Precision Agric 23:2135–2158 Article   Google
    Scholar   Nowak B (2021) Precision agriculture: where do we stand? A review of
    the adoption of precision agriculture technologies on field crops farms in developed
    countries. Agric Res 10:515–522 Article   Google Scholar   Duncan E, Glaros A,
    Ross DZ et al (2021) New but for whom? Discourses of innovation in precision agriculture.
    Agric Hum Values 38:1181–1199 Article   Google Scholar   Shaikh TA, Mir WA, Rasool
    T et al (2022) Machine learning for smart agriculture and precision farming: towards
    making the fields talk. Arch Computat Methods Eng 29:4557–4597 Article   Google
    Scholar   Lu HL, Chang YH, Wu BY (2020) The compare organic farm and conventional
    farm to improve sustainable agriculture, ecosystems, and environment. Org Agr
    10:409–418 Article   Google Scholar   Qi LY, Liu YW, Zhang YL et al (2022) Privacy-aware
    point-of-interest category recommendation in internet of things. IEEE Internet
    Things J 9:21398–31408 Article   Google Scholar   Liu YW, Zhou XK, Kou HZ et al.
    Privacy-preserving point-of-interest recommendation based on simplified graph
    convolutional network for geological traveling. ACM Trans Intell Syst Technol.
    2023. Hsu CH, Lin HH, Jhang SW et al (2021) Does environmental engineering help
    rural industry development? Discussion on the impact of Taiwan’s “special act
    for forward-looking infrastructure” on rural industry development. Environ Sci
    Pollut Res 28:40137–40150 Article   Google Scholar   Pearsall H, Gutierrez-Velez
    VH, Gilbert MR et al (2021) Advancing equitable health and well-being across urban–rural
    sustainable infrastructure systems. npj Urban Sustain. 1:26 Article   Google Scholar   Kumar
    CS, Anand RV (2023) A review of energy-efficient secured routing algorithm for
    IoT-Enabled smart agricultural systems. J Biosyst Eng 48:339–354 Article   Google
    Scholar   Shi H, Li Q (2022) Edge computing and the internet of things on agricultural
    green productivity. J Supercomput 78:14448–14470 Article   Google Scholar   Mittelmann
    M, Bouveret S, Perrussel L (2022) Representing and reasoning about auctions. Auton
    Agent Multi-Agent Syst 36:20 Article   Google Scholar   Zhang K, Hao WN, Yu XH
    et al (2023) Research on a kind of multi-objective evolutionary fuzzy system with
    a flowing data pool and a rule pool for interpreting neural networks. Int J Fuzzy
    Syst 25:575–600 Article   Google Scholar   Oteyo IN, Marra M, Kimani S et al (2021)
    A survey on mobile applications for smart agriculture. SN Comput Sci 2:293 Article   Google
    Scholar   Wang X, Ni D (2023) Internet based rural economic entrepreneurship based
    on mobile edge computing and resource allocation. Soft Comput. https://doi.org/10.1007/s00500-023-08620-z
    Article   PubMed   PubMed Central   Google Scholar   Zhang YA, Sun Z, Zhang C
    et al (2021) Body weight estimation of yak based on cloud edge computing. J Wireless
    Com Netw 2021:6 Article   Google Scholar   Gupta N, Khosravy M, Patel N et al
    (2020) Economic data analytic AI technique on IoT edge devices for health monitoring
    of agriculture machines. Appl Intell 50:3990–4016 Article   Google Scholar   Li
    C, Sha Z, Sun T (2023) Rural households’ internet use on common prosperity: evidence
    from the Chinese social survey. Soc Indic Res 170:797–823 Article   Google Scholar   Liu
    P (2021) Balancing cost effectiveness and incentive properties in conservation
    auctions: experimental evidence from three multi-award reverse auction mechanisms.
    Environ Resource Econ 78:417–451 Article   Google Scholar   Feng Y, Mei D, Zhao
    H (2023) Auction-based deep learning-driven smart agricultural supply chain mechanism.
    Appl Soft Comput 149:111009 Article   Google Scholar   Chiu LJV, Taure LW, Groh
    YT (2022) Pricing efficiency in livestock auction markets: a two-tier frontier
    approach. Agric Econ 53:139–151 Article   Google Scholar   Seifert S, Huettel
    S (2023) Is there a risk of a winner’s curse in farmland auctions? Eur Rev Agric
    Econ 50:1140–1177 Article   Google Scholar   Remya S (2022) An adaptive neuro-fuzzy
    inference system to monitor and manage the soil quality to improve sustainable
    farming in agriculture. Soft Comput 26:13119–13132 Article   Google Scholar   Acharjya
    DP, Rathi R (2022) An integrated fuzzy rough set and real coded genetic algorithm
    approach for crop identification in smart agriculture. Multimed Tools Appl 81:35117–35142
    Article   Google Scholar   MohebbiTafreshi G, Nakhaei M, Lak R (2020) A GIS-based
    comparative study of hybrid fuzzy-gene expression programming and hybrid fuzzy-artificial
    neural network for land subsidence susceptibility modeling. Stoch Environ Res
    Risk Assess 34:1059–1087 Article   Google Scholar   Kaya NS, Pacci S, DemiragTuran
    I et al (2023) Comparing geographic information systems-based fuzzy-analytic hierarchical
    process approach and artificial neural network to characterize soil erosion risk
    indexes. Rend Fis Acc Lincei 34:1089–1104 Article   Google Scholar   Remya S,
    Sasikala R (2020) Performance evaluation of optimized and adaptive neuro fuzzy
    inference system for predictive modeling in agriculture. Comput Electr Eng 86:106718
    Article   Google Scholar   Ramana K, Aluvala R, Kumar MR et al (2022) Leaf disease
    classification in smart agriculture using deep neural network architecture and
    IoT. J Circuits Syst Comput 31:2240004 Article   Google Scholar   Bhojani SH,
    Bhatt N (2020) Wheat crop yield prediction using new activation functions in neural
    network. Neural Comput Appl 32:13941–13951 Article   Google Scholar   Zhang L,
    Huang ZY, Liu W et al (2021) Weather radar echo prediction method based on convolution
    neural network and Long Short-Term memory networks for sustainable e-agriculture.
    J Clean Prod 298:126776 Article   Google Scholar   Wang J (2022) Analysis of wireless
    communication networks under edge computing scenarios. Wireless Netw 28:3665–3676
    Article   Google Scholar   Dhillon SK, Madhu C, Kaur D et al (2020) A review on
    precision agriculture using wireless sensor networks incorporating energy forecast
    techniques. Wireless Pers Commun 113:2569–2585 Article   Google Scholar   Shepelev
    GI (2022) Effects of Defuzzification methods on the results of comparing fuzzy
    alternatives. Sci Tech Inf Proc 49:364–370 Article   Google Scholar   Vassiliev
    AE, Vegner AV, Golubeva DE et al (2023) Increasing the quality indicators of the
    functioning of fuzzy solvers at the Defuzzification stage. J Commun Technol Electron
    68:810–818 Article   Google Scholar   Wang G, Wang H, Long Z (2021) Norm approximation
    of mamdani fuzzy system to a class of integrable functions. Int J Fuzzy Syst 23:833–848
    Article   Google Scholar   Oprea SV, Bâra A (2023) An Edge-Fog-Cloud computing
    architecture for IoT and smart metering data. Peer-to-Peer Netw Appl 16:818–845
    Article   Google Scholar   Kong JL, Fan XM, Jin XB et al (2023) BMAE-Net: a data-driven
    weather prediction network for smart agriculture. Agronomy-Basel 13:625 Article   Google
    Scholar   Ma YC, Zhang Z, Kang YH et al (2021) Corn yield prediction and uncertainty
    analysis based on remotely sensed variables using a Bayesian neural network approach.
    Remote Sens Environ 259:112408 Article   Google Scholar   Rajkovic D, Jeromela
    AM, Pezo L et al (2022) Yield and quality prediction of winter rapeseed-artificial
    neural network and random forest models. Agronomy-Basel 12:58 Article   Google
    Scholar   Kolipaka VRR, Namburu A. An automatic crop yield prediction framework
    designed with two-stage classifiers: a meta-heuristic approach. Multimed Tools
    Appl. 2023. Download references Funding This paper was supported by General Projects
    of Zhengzhou Soft Science Research Program in 2023 (Granted No. 8), Annual Program
    of Philosophy and Social Science Planning of Henan Province (Grant No. 2023CJJ113),
    and Chongqing Transportation Science and Technology Project (Granted No.s CQJT-2023CZ28-1
    and CQJT-2023CZ16-1). Author information Authors and Affiliations School of Economics
    and Business Administration, Chongqing University, Chongqing, 400044, China Qing
    He, Hua Zhao & Yu Feng School of Economic and Management, Chongqing Normal University,
    Chongqing, 401331, China Qing He & Zhaofeng Ning School of Social Development,
    East China Normal University, Shanghai, 200241, China Zehao Wang School of Management,
    Lanzhou University, Lanzhou, 73000, China Tingwei Luo Contributions Q.H. contributed
    to conception and writing; H.Z. and Y.F. contributed to methodology; Z.W. contributed
    to data analysis; Z.N. contributed to software; T.L. contributed to polishing.
    Corresponding author Correspondence to Yu Feng. Ethics declarations Ethics approval
    and consent to participate This declaration is “not applicable”. Competing interests
    The authors declare no competing interests. Additional information Publisher’s
    Note Springer Nature remains neutral with regard to jurisdictional claims in published
    maps and institutional affiliations. Rights and permissions Open Access This article
    is licensed under a Creative Commons Attribution 4.0 International License, which
    permits use, sharing, adaptation, distribution and reproduction in any medium
    or format, as long as you give appropriate credit to the original author(s) and
    the source, provide a link to the Creative Commons licence, and indicate if changes
    were made. The images or other third party material in this article are included
    in the article''s Creative Commons licence, unless indicated otherwise in a credit
    line to the material. If material is not included in the article''s Creative Commons
    licence and your intended use is not permitted by statutory regulation or exceeds
    the permitted use, you will need to obtain permission directly from the copyright
    holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.
    Reprints and permissions About this article Cite this article He, Q., Zhao, H.,
    Feng, Y. et al. Edge computing-oriented smart agricultural supply chain mechanism
    with auction and fuzzy neural networks. J Cloud Comp 13, 66 (2024). https://doi.org/10.1186/s13677-024-00626-8
    Download citation Received 08 January 2024 Accepted 07 March 2024 Published 21
    March 2024 DOI https://doi.org/10.1186/s13677-024-00626-8 Share this article Anyone
    you share the following link with will be able to read this content: Get shareable
    link Provided by the Springer Nature SharedIt content-sharing initiative Keywords
    Edge computing Smart agricultural supply chain Auction Fuzzy neural networks Download
    PDF Collection Mobile Edge Computing Meets AI Sections Figures References Abstract
    Introduction Related work Edge computing-oriented smart agriculture Integration
    of auction mechanisms and fuzzy neural networks Conclusion Availability of data
    and materials References Funding Author information Ethics declarations Additional
    information Rights and permissions About this article Advertisement Support and
    Contact Jobs Language editing for authors Scientific editing for authors Leave
    feedback Terms and conditions Privacy statement Accessibility Cookies Follow SpringerOpen
    By using this website, you agree to our Terms and Conditions, Your US state privacy
    rights, Privacy statement and Cookies policy. Your privacy choices/Manage cookies
    we use in the preference centre. © 2024 BioMed Central Ltd unless otherwise stated.
    Part of Springer Nature."'
  inline_citation: '>'
  journal: Journal of Cloud Computing
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Edge computing-oriented smart agricultural supply chain mechanism with auction
    and fuzzy neural networks
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kim H.N.
  - Park J.H.
  citation_count: '1'
  description: Smart farms and precision agriculture require automatic monitoring
    and supply of water and nutrients for crops, but sensors to monitor plant available
    nutrients in soil are not available. Soil electrical conductivity (EC) is related
    to nutrients in soil solution, which can be affected by soil organic matter, soil
    texture, temperature, and water content. Therefore, the objective of this study
    is to evaluate factors influencing soil EC sensor values by monitoring EC under
    different soil organic matter and water contents. Ten soil samples with various
    sand and clay contents, EC, pH, and organic matter contents were selected and
    saturated with water. Volumetric water content and EC of the soil were monitored
    while drying the soil. Humic acid and manure were added to soils in order to evaluate
    the effect of organic matter on soil EC. Soil EC values linearly increased with
    increasing water content at 10–25% which is favorable water content for plant
    growth. The EC increased when organic matter was added to soils, which was related
    to ions released from the organic matter. Soil EC calibration factor for soil
    water content increased when EC of the soil was high and organic matter was added.
    The sensor EC values in sandy loam and loam soils was related to the ion contents
    in pore water, and exchangeable ions in soil, respectively. Sensor EC values were
    highly correlated with organic matter and K contents in soil and can be used as
    an indicator for plant available nutrients in soil. Therefore, the sensor EC at
    optimal soil water content for plant growth can be used to monitor changes in
    plant available nutrients in soil.
  doi: 10.1186/s13765-023-00849-4
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Search Get published
    Explore Journals Books About Login Applied Biological Chemistry About Articles
    Submission Guidelines Editorial Board Details Submit manuscript Article Open access
    Published: 03 January 2024 Monitoring of soil EC for the prediction of soil nutrient
    regime under different soil water and organic matter contents Han Na Kim & Jin
    Hee Park   Applied Biological Chemistry  67, Article number: 1 (2024) Cite this
    article 752 Accesses 1 Citations Metrics Abstract Smart farms and precision agriculture
    require automatic monitoring and supply of water and nutrients for crops, but
    sensors to monitor plant available nutrients in soil are not available. Soil electrical
    conductivity (EC) is related to nutrients in soil solution, which can be affected
    by soil organic matter, soil texture, temperature, and water content. Therefore,
    the objective of this study is to evaluate factors influencing soil EC sensor
    values by monitoring EC under different soil organic matter and water contents.
    Ten soil samples with various sand and clay contents, EC, pH, and organic matter
    contents were selected and saturated with water. Volumetric water content and
    EC of the soil were monitored while drying the soil. Humic acid and manure were
    added to soils in order to evaluate the effect of organic matter on soil EC. Soil
    EC values linearly increased with increasing water content at 10–25% which is
    favorable water content for plant growth. The EC increased when organic matter
    was added to soils, which was related to ions released from the organic matter.
    Soil EC calibration factor for soil water content increased when EC of the soil
    was high and organic matter was added. The sensor EC values in sandy loam and
    loam soils was related to the ion contents in pore water, and exchangeable ions
    in soil, respectively. Sensor EC values were highly correlated with organic matter
    and K contents in soil and can be used as an indicator for plant available nutrients
    in soil. Therefore, the sensor EC at optimal soil water content for plant growth
    can be used to monitor changes in plant available nutrients in soil. Introduction
    Precision supply of essential water and nutrients is important for crops because
    excess nutrients can reduce crop yields and residual nutrients can positively
    or negatively affect yields in the following year [53]. Importance of effectively
    managing soil nutrients and water to sustain and optimize agricultural productivity
    in changing environmental conditions is emerging due to imbalances in nutrients
    and water caused by recent climate changes [31]. Therefore, soil nutrient and
    water management are important to maintain the sustainability of agricultural
    land. Smart farms reduce costs and improve crop productivity by monitoring and
    controlling the agricultural environment through integration of automation technologies
    such as networks and mobile devices [37]. Automatic soil water management system
    using information and communications technology (ICT) helps in saving water by
    supplying desired amount of water required by the crops [1]. In addition, the
    ICT-based water management system contributes to the improvement of crop productivity
    and quality [16]. Especially, in outdoor smart farms, it is necessary to control
    the supply of nutrients according to crop growth while monitoring nutrients in
    real time using sensors [50]. Although there are various sensors for monitoring
    agricultural environment such as CO2, light intensity, temperature, humidity,
    and soil water content, sensors for monitoring nutrient availability in soil are
    still not fully developed [5]. Therefore, it is difficult to supply nutrients
    while monitoring soil nutrient levels, which is obstacle to precision agriculture
    in open field. Soil EC is affected by soil salinity, clay and water content, and
    adding nutrients to the soil increases the soil EC [17, 26]. Heiniger et al. [27]
    found that EC measurements of soil extracts could be used to predict soil nutrient
    content and are highly correlated with soil properties such as water content,
    cation exchange capacity (CEC), and soluble salts (R2 ranging from 0.51 to 0.75).
    In addition, nutrients such as N and K directly affect the EC of extracted soil
    solutions [40]. Therefore, nutrient content can be predicted by monitoring soil
    EC, but soil EC is highly influenced by soil water, soil texture, and organic
    matter [29]. In particular, the water content has significant effects on soil
    EC [22]. Increasing soil water content increased soil EC [14]. When the water
    content in soil was high, the soil EC increased as a result of the increased solubility
    of ions in soil [4]. Organic matter is important for plant growth along with nutrients
    in the soil because it is decomposed into smaller molecules and mineralized elements
    are absorbed by plants [41]. Organic matter can increase the soil EC due to the
    nutrients and salts included in organic matter [24]. However, the effect of soil
    organic matter on EC was not fully understood. To predict soil nutrients through
    soil EC monitoring using sensor, various soil characteristics including soil texture
    and organic matter affecting EC should be considered. In this study, we hypothesized
    that organic matter increases EC of the soil by releasing nutrients and affects
    EC by adsorption of ions. Conducting correlation analyses between EC and organic
    matter can offer insights into setting nutrient supply corresponding to EC values
    monitored by sensors for soils with different characteristics [46, 51]. Based
    on the relationship of soil organic matter and EC, the sensor EC values should
    be calibrated. Calibration of EC based on these correlations can enhance the accuracy
    of nutrient supply recommendations and improve the efficiency of soil management
    practices [39, 51]. Therefore, the objectives of this study were to monitor nutrients
    using EC sensors in soils with different clay and sand composition, water content
    and organic matter content and evaluate the effect of water content and organic
    matter on soil EC in different soils. Materials and methods Soil characterization
    Soils with different characteristics were collected from different agricultural
    lands in Korea, dried at room temperature, and sieved to a particle size of less
    than 2 mm using a stainless-steel sieve. The sand, silt and clay content of the
    soil was determined by Stoke’s law [23]. Soil pH and EC were measured using pH
    and EC meter after extracting 5 g of soil with 25 mL of deionized water for 30
    min. The Walkley–Black method was used to determine the amount of soil organic
    matter [52]. Two grams of soil and 20 mL of 1 M NH4CH3COOH solution at pH 7 were
    shaken for 30 min and filtered through 0.45 μm syringe filter. Filtered solution
    was acidified and elements were analyzed using inductively coupled plasma optical
    emission spectroscopy (ICP-OES, Perkin Elmer, Avio 500). The soil CEC was calculated
    with Ca, Mg, K, and Na [47]. Ammonium (NH4+) and nitrate (NO3−) in the soil were
    measured using the indophenol-blue method and the vanadium (III) reduction method,
    respectively, after extracting 5 g soil with 25 mL of 2 M KCl solution [19, 20].
    For NH4+ analysis, 0.125 mL EDTA, 2 mL phenol/nitroprusside (PNP), and 1 mL NaOH/hypochlorite
    were mixed with 1 mL of the extract. The mixture was incubated at 37 °C for 20
    min and absorbance of the solution was measured at 630 nm using a UV–VIS spectrometer
    (Orion AquaMate 7000, Thermo-Fisher Scientific, USA) [20]. For NO3− analysis,
    20 µL of soil extract was mixed with 1 mL of the reagent prepared by dissolving
    0.4 g of VCl3 in 50 mL of 1 M HCl and mixing with 0.2 g of sulfanilamide and 0.01
    g of N-(1-Naphthyl)-ethylendiamine-dihydrochloride (NEDD) in 400 mL of de-ionized
    water. Absorbance of the solution was measured at 540 nm using a UV–VIS spectrometer
    after 18 h at 25 °C to determine soil NO3− concentration [19]. Table 1 shows the
    physicochemical properties of soils used. Table 1 Physicochemical properties of
    soil samples used for EC monitoring Full size table Soil EC and water content
    monitoring Air dried soil (1.5 L) was packed in a 2.2 L square container. For
    organic matter treatment, 40 g of compost manure were added to silty clay loam
    soil, 30 g of humic acid were added to loam soil, and 50 g of compost manure were
    added to sandy loam soil. Soils after adding organic matter were also characterized
    to evaluate effect of organic matter on sensor EC (Table 1). To monitor EC and
    water content, an EC sensor (Teros 12, METER Group, USA) was placed in soil to
    a depth of about 10 cm in an incubator at 20 °C. The Teros 12 sensor measures
    EC, volumetric water content, and temperature in soil at the same time. Water
    (900 mL) was added to the soil for saturation and the EC and water content were
    monitored until the soil water content evaporated to be less than 10% (v/v). Soil
    EC sensors were connected to ZL6 logger (METER Group, USA) and soil bulk EC (mS/cm),
    temperature (°C) and volumetric soil water content (m3/m3) were recorded every
    15 min. Soils with added organic matter (manure and humic acid) were also monitored
    for soil EC and water content in the same manner. Analysis of ion contents in
    soil pore water Rhizon sampler (Rhizosphere Research Products, Netherlands) was
    inserted into the soil to a depth of about 10 cm and pressure was applied to collect
    pore water in the soil at 25% water content. The pH and EC of the pore water were
    measured and element contents in the pore water were analyzed using ICP-OES after
    filtration using 0.45 μm syringe filter. Ammonium and NO3− contents of the pore
    water were also analyzed using the indophenol-blue method and the vanadium (III)
    reduction method, respectively. Soil samples were taken after monitoring EC, dried,
    and mixed with 1 M NH4CH3COOH solution (pH 7) at a soil to solution ratio of 1:10
    for 30 min. The solution was filtered through 0.45 μm syringe filter and exchangeable
    ion concentrations in the soil were analyzed using ICP-OES. Soluble NH4+ and NO3−
    in the soil before drying were extracted with de-ionized water and analyzed using
    a UV–vis spectrometer following the indophenol-blue method and the vanadium (III)
    reduction method, respectively. Statistical analysis Analyses were conducted in
    triplicate and presented as mean and standard deviation. The correlation among
    sensor EC, soil organic matter (SOM), EC calibration factor for water content,
    soil clay and sand contents, pH, and exchangeable elements was analyzed using
    Xlstat (Addinsoft). Principal component analysis (PCA) was conducted to evaluate
    relationship among the parameters including sensor EC values and SOM contents
    (Xlstat, Addinsoft). For PCA, soil sensor EC values were selected at water content
    of 30.9%, 22.5% and 17.0% v/v for silt clay loam, loam and sandy loam soils, respectively.
    Results and discussion Response of soil EC sensor in relation to soil water content
    Soil EC showed a linear correlation with water content at water content of 10–25%
    for loam and sandy loam soils and at water content of 10–40% for silty clay loam
    soil (Table 2). The water content range having linear relationship with EC was
    suitable water content for plant growth [11]. The linear correlation between soil
    water content and EC in the range of soil water content appropriate for plant
    growth indicates that soil EC can be used for nutrient monitoring regardless of
    soil moisture content by calibrating EC values for soil water content. Soil EC
    can be calibrated for desired water content because it is linearly proportional
    to water content. Other studies also reported that soil EC linearly increased
    with soil water content [14, 25, 54]. Sensor EC value decreased with decreasing
    water content in soil because the mobile fractions of ions decreased [18, 55].
    In addition, water containing ions is a conductor of electricity and water content
    was closely related to EC [33]. Sudduth et al. [48] also reported that EC could
    be explained by water content and bulk density of soil. However, at higher water
    content, the relationship between EC and water content was not linear, which was
    also reported by Rusydi [44]. When soil water is more than optimum water content,
    the relationship becomes nonlinear, wherein further increase of water content
    does not linearly raise EC due to saturation and mobility constraints [44]. Table
    2 Calibration factor of soil EC for soil water content without and with added
    organic matter Full size table Soil EC is related to soil texture, water content,
    organic matter, etc., and varies with soil properties [30]. Therefore, it is necessary
    to calculate the calibration factor considering the soil properties and apply
    it to calibrate the EC sensor value against soil water content. Sensor EC values
    were plotted against soil water contents and the slope of linear regression was
    defined as calibration factor. Higher calibration factor indicates that EC changes
    more with water content variation. Calibration factor derived from the slope of
    the linear relationship between soil EC and water content serves as a valuable
    metric [39]. This coefficient aids in predicting soil EC based on water content
    variations, which in turn can offer insights into nutrient contents and other
    essential soil properties [21]. Calibration factor for each soil was calculated
    in the range of available water content of each soil and the correlation coefficient
    was to be higher than 0.97 (Table 2). In comparison to the soil without organic
    matter, the calibration factor was higher when organic matter was added to the
    soil (Table 2). The increased calibration factor is because of adding organic
    matter to the soil and increases in exchangeable ions and nutrients (Table 3).
    Soil organic matter increased nutrient contents and finally increased soil EC
    [2, 28, 49]. When the ion contents of the soil are high, more dispersal occurs
    with the higher water content, which might be attributed to higher calibration
    factor with organic matter [42]. In addition, since sensitivity of the EC sensor
    increases as the water content increases, the calibration factor can be higher
    when organic matter and water are added to the soil [12]. Therefore, higher the
    soil nutrient content, the greater increase in soil EC by water content. Table
    3 Exchangeable ion contents in soil without and with added organic matter Full
    size table Changes in soil ion contents by addition of organic matter The concentration
    of exchangeable ions such as K, and Ca in the soil increased when organic matter
    was added in the soil because of dissolution of minerals containing K and exchangeable
    Ca by organic acids (Table 3). Initially manure compost was added as organic matter,
    but it increased EC and humic acid was added as organic matter for loam soil to
    avoid effect of salts released from added organic matter. However, both organic
    matters increased available nutrient concentrations increasing soil EC. Adding
    organic matter to the soil increased the content of N, C and S etc., which were
    included in manure compost and humic acid [3, 15, 38]. In addition, Bader et al.
    [7] reported that K concentration was significantly increased by the amount of
    organic matter. This is because some soil minerals that contain K are dissolved
    by organic acids (humic and fulvic) as a result of the decomposition of organic
    fertilizer [6]. Exchangeable Ca content was also related to soil organic carbon
    because Ca protects soil organic carbon from microbial degradation [45]. As a
    result, while monitoring soil EC with sensors, it is important to consider organic
    matter which influence the ion contents in the soil. The sensor EC value of sandy
    loam soil was highly correlated with the ion content in pore water, and the sensor
    EC value of loam soil was highly correlated with exchangeable ions (Fig. 1). Generally,
    loam soil has a higher adsorption capacity than sandy soil because it has a higher
    clay content than sandy loam [35]. Since sandy loam has a low water and ion holding
    capacity, the sensor EC value was highly correlated with ion content of the pore
    water (Fig. 1a, [10]). In addition, loam soil has a higher ion holding capacity
    than sandy loam, so the sensor EC value showed significant correlation with NO3−
    and Na which are soluble in water and with exchangeable cations that are relatively
    less soluble in water (Fig. 1b, [56]). Fig. 1 Correlation of sensor EC with soil
    properties and ion contents of sandy loam (a) and loam (b) (PW. pore water, W.
    water soluble ion, Ex. exchangeable ion) Full size image The pH of the pore water
    and the sensor EC value were negatively correlated (Fig. 1a). Luce et al. [36]
    explained that the negative correlation between soil EC and pH was associated
    with microbial mineralization and nitrification processes in the soil. Fig. 2
    Biplots of PC1 and PC2 for sensor EC monitoring values by soil characteristics
    and ion content and organic matter treatment (OM. organic matter added soil, PW.
    pore water, Ex. exchangeable ion) Full size image Relationship between sensor
    EC values and soil properties PCA was performed to evaluate the relationship between
    sensor EC values and soil properties with soil samples before and after adding
    organic matter. PCA is used to identify the variables that are related to associations
    among samples [13]. The PC1, PC2, PC3 and PC4 accounted for 28.3%, 23.2%, 15.5%
    and 11.3% of the total variation, respectively (Table 4). The four PCs explained
    more than 78% of cumulative variance. The first PC showed positive correlations
    with sand content, pore water pH, and exchangeable Ca and P. The second PC was
    correlated with sensor EC, soil EC, CEC, pore water Ca, K, and P, and exchangeable
    Na, P and S, which were parameters contributing EC. The third PC was correlated
    with clay, CEC and exchangeable Mg, which were related to adsorption of cations.
    Table 4 Factor loadings based on correlations matrix and total variance explained
    by the principal components (OM.: added organic matter, PW.: pore water, Ex.:
    exchangeable ion) Full size table The sensor EC monitoring values showed a high
    correlation with the contents of NO3−, K, S and Ca in the pore water (Fig. 2).
    Since pore water exists between soil particles, ion content in pore water reflects
    plant available nutrients which increases EC [9, 43]. Nitrate is water soluble
    and increasing the mobility of ions increased the EC [8]. In addition, increased
    mobility of adsorbed K increased EC [34]. Since soil nutrients such as N and K
    are closely related to EC, which can be monitored using soil EC sensor. The close
    correlation between sensor EC and SOM was found because increased organic matter
    in the soil increased the ion contents and finally increased the soil EC (Fig.
    2). In particular, samples with additional organic matter were clearly separated
    from samples without added organic matter. Samples with added organic matter were
    distributed along soluble and exchangeable nutrients on PC1 and PC2 (Fig. 2).
    Soils with different texture were also well differentiated indicating that texture
    and organic matter affect available nutrients and sensor EC. Since the soil sensor
    EC values are related to the soluble ion contents in sandy loam and the exchangeable
    ion contents in loam soil, soil texture should be considered in the interpretation
    of sensor EC for the prediction of nutrient levels in soil. In addition, soil
    sensor EC values are highly correlated with N, K and SOM, which are important
    for plant growth. Therefore, when monitoring nutrient levels in soil using EC
    sensor, organic matter and soil texture need to be considered. If organic matter
    and water content are considered, the sensor EC can be used as an indicator of
    the nutrients available to plants in the soil. Conclusively, at optimal soil water
    content for plant growth, EC can be used to monitor changes in plant-available
    nutrients in the soil. Availability of data and materials The data that support
    the findings of this study are available from the corresponding author, [J.H.
    Park], upon reasonable request. References Abd Rahman MKI, Abidin MSZ, Buyamin
    S, Mahmud MSA (2018) Enhanced fertigation control system towards higher water
    saving irrigation. Indonesian J Electr Eng Comp Sci 10(3):859–866 Article   Google
    Scholar   Adak T, Singha A, Kumar K, Shukla SK, Singh A, Kumar Singh V (2014)
    Soil organic carbon, dehydrogenase activity, nutrient availability and leaf nutrient
    content as affected by organic and inorganic source of nutrient in mango orchard
    soil. J Soil Sci Plant Nutr 14(2):394–406 Google Scholar   Adegoke TO, Moon TI,
    Ku HH (2022) Ammonia emission from sandy loam soil amended with manure compost
    and urea. Appl Biol Chem 65(1):83 Article   CAS   Google Scholar   Adviento-Borbe
    MAA, Doran JW, Drijber RA, Dobermann A (2006) Soil electrical conductivity and
    water content affect nitrous oxide and carbon dioxide emissions in intensively
    managed soils. J Environ Qual 35(6):1999–2010 Article   PubMed   CAS   Google
    Scholar   Ali MA, Dong L, Dhau J, Khosla A, Kaushik A (2020) Perspective—electrochemical
    sensors for soil quality assessment. J Electrochem Soc 167(3):037550 Article   CAS   Google
    Scholar   Al-Jabori JSJ, Al-Obaed BSO, Al-Amiri AHF (2011) Effect of soil gypsum
    content and kind of organic matter on status and behavior of potassium. Tikrit
    J Agric Sci 11(4):299–310 Google Scholar   Bader BR, Taban SK, Fahmi AH, Abood
    MA, Hamdi GJ (2021) Potassium availability in soil amended with organic matter
    and phosphorous fertiliser under water stress during maize (Zea mays L) growth.
    J Saudi Soc Agric Sci 20(6):390–394 Google Scholar   Baldi E, Quartieri M, Muzzi
    E, Noferini M, Toselli M (2020) Use of in situ soil solution electric conductivity
    to evaluate mineral N in commercial orchards: preliminary results. Horticulturae
    6(3):39 Article   Google Scholar   Baligar VC, Fageria NK, He ZL (2001) Nutrient
    use efficiency in plants. Commun Soil Sci Plant Anal 32(7–8):921–950 Article   CAS   Google
    Scholar   Banedjschafie S, Durner W (2015) Water retention properties of a sandy
    soil with superabsorbent polymers as affected by aging and water quality. J Plant
    Nutr Soil Sci 178(5):798–806 Article   CAS   Google Scholar   Bessembinder JJE,
    Leffelaar PA, Dhindwal AS, Ponsioen TC (2005) Which crop and which drop, and the
    scope for improvement of water productivity. Agric Water Manag 73(2):113–130 Article   Google
    Scholar   Bogena HR, Huisman JA, Oberdörster C, Vereecken H (2007) Evaluation
    of a low-cost soil water content sensor for wireless network applications. J Hydrol
    344(1–2):32–42 Article   Google Scholar   Brereton RG (2015) Pattern recognition
    in chemometrics. Chemom Intell Lab Syst 149:90–96 Article   CAS   Google Scholar   Brevik
    EC, Fenton TE, Lazari A (2006) Soil electrical conductivity as a function of soil
    water content and implications for soil mapping. Precision Agric 7:393–404 Article   Google
    Scholar   Britannica, The Editors of Encyclopaedia. “humic acid”. Encyclopedia
    Britannica, 10 Sep. 2020, https://www.britannica.com/science/humic-acid. Accessed
    19 Dec 2022 Bunyamin Z, Andayani NN, Fahdiana T, Azrai M (2020) Application of
    ICT tools in food crops monitoring in Indonesia. IOP Conf Series Earth Environ
    Sci 484(1):012060 Article   Google Scholar   Cheng H, Zhang D, Huang B, Song Z,
    Ren L, Hao B, Cao A (2020) Organic fertilizer improves soil fertility and restores
    the bacterial community after 1, 3-dichloropropene fumigation. Sci Total Environ
    738:140345 Article   PubMed   CAS   Google Scholar   Chowdhury N, Marschner P,
    Burns RG (2011) Soil microbial activity and community composition: impact of changes
    in matric and osmotic potential. Soil Biol Biochem 43(6):1229–1236 Article   CAS   Google
    Scholar   Doane TA, Horwáth WR (2003) Spectrophotometric determination of nitrate
    with a single reagent. Anal Lett 36(12):2713–2722 Article   CAS   Google Scholar   Dorich
    RA, Nelson DW (1983) Direct colorimetric measurement of ammonium in potassium
    chloride extracts of soils. Soil Sci Soc Am J 47(4):833–836 Article   CAS   Google
    Scholar   Dwevedi A, Kumar P, Kumar P, Kumar Y, Sharma YK, Kayastha AM. (2017).
    Soil sensors: detailed insight into research updates, significance, and future
    prospects. In New pesticides and soil sensors (pp. 561–594). Academic press Friedman
    SP (2005) Soil properties influencing apparent electrical conductivity: a review.
    Comput Electron Agric 46(1–3):45–70 Article   Google Scholar   Gee GW, Or D. (2002).
    2.4 Particle‐size analysis. Methods of soil analysis: Part 4 physical methods,
    5, 255–293 Gondek M, Weindorf DC, Thiel C, Kleinheinz G (2020) Soluble salts in
    compost and their effects on soil and plants: a review. Compost Sci Utiliz 28(2):59–75
    Article   CAS   Google Scholar   Hanson BR, Kaita K (1997) Response of electromagnetic
    conductivity meter to soil salinity and soil-water content. J Irrig Drain Eng
    123(2):141–143 Article   Google Scholar   Hardie M, Doyle R (2012) Measuring soil
    salinity. Plant salt tolerance. Humana Press, Totowa, NJ, pp 415–425 Book   Google
    Scholar   Heiniger RW, McBride RG, Clay DE (2003) Using soil electrical conductivity
    to improve nutrient management. Agron J 95(3):508–519 Article   CAS   Google Scholar   Hossain
    MZ, Bahar MM, Sarkar B, Donne SW, Ok YS, Palansooriya KN, Bolan N (2020) Biochar
    and its importance on nutrient dynamics in soil and plant. Biochar 2(4):379–420
    Article   Google Scholar   Juhos K, Czigány S, Madarász B, Ladányi M (2019) Interpretation
    of soil quality indicators for land suitability assessment–A multivariate approach
    for Central European arable soils. Ecol Ind 99:261–272 Article   CAS   Google
    Scholar   Kekane SS, Chavan RP, Shinde DN, Patil CL, Sagar SS (2015) A review
    on physico-chemical properties of soil. Int J Chem Stud 3(4):29–32 Google Scholar   Kim
    HN, Park JH (2021) Research trends using soil sensors for precise nutrient and
    water management in soil for smart farm. Korean J Soil Sci Fert 54(3):366–382
    Article   CAS   Google Scholar   Kim HN, Seok YJ, Park GM, Vyavahare G, Park JH
    (2023) Monitoring of plant-induced electrical signal of pepper plants (Capsicum
    annuum L) according to urea fertilizer application. Scient Rep 13(1):291 Article   CAS   Google
    Scholar   Korsaeth A (2005) Soil apparent electrical conductivity (EC a) as a
    means of monitoring changesin soil inorganic N on heterogeneous morainic soils
    in SE Norway during two growing seasons. Nutr Cycl Agroecosyst 72:213–227 Article   CAS   Google
    Scholar   Kundu MC, Hazra GC, Biswas PK, Mondal S, Ghosh GK (2014) Forms and distribution
    of potassium in some soils of Hooghly district of West Bengal. Crucible 2(4):4
    Google Scholar   Libohova Z, Seybold C, Wysocki D, Wills S, Schoeneberger P, Williams
    C, Owens PR (2018) Reevaluating the effects of soil organic matter and other properties
    on available water-holding capacity using the National Cooperative Soil Survey
    Characterization Database. J Soil Water Conserv 73(4):411–421 Article   Google
    Scholar   Luce MS, Whalen JK, Ziadi N, Zebarth BJ (2011) Nitrogen dynamics and
    indices to predict soil nitrogen supply in humid temperate soils. Adv Agron 112:55–102
    Article   Google Scholar   Muangprathub J, Boonnam N, Kajornkasirat S, Lekbangpong
    N, Wanichsombat A, Nillaor P (2019) IoT and agriculture data analysis for smart
    farm. Comput Electron Agric 156:467–474 Article   Google Scholar   Możdżer E,
    Jałoszyński S (2019) Effect of fertilizer granulates on ionic and weight relations
    among macronutrients in spring rape seeds. J Ecol Eng. https://doi.org/10.12911/22998993/105330
    Article   Google Scholar   Nawar S, Corstanje R, Halcro G, Mulla D, Mouazen AM
    (2017) Delineation of soil management zones for variable-rate fertilization: a
    review. Adv Agron 143:175–245 Article   Google Scholar   Ouyang D, MacKenzie AF,
    Fan M (1998) Phytotoxicity of banded urea amended with triple superphosphate and
    potassium chloride. Agron J 90(6):734–739 Article   Google Scholar   Ozlu E, Kumar
    S (2018) Response of soil organic carbon, pH, electrical conductivity, and water
    stable aggregates to long-term annual manure and inorganic fertilizer. Soil Sci
    Soc Am J 82(5):1243–1251 Article   CAS   Google Scholar   Robinson DA, Jones SB,
    Wraith JM, Or D, Friedman SP (2003) A review of advances in dielectric and electrical
    conductivity measurement in soils using time domain reflectometry. Vadose zone
    journal 2(4):444–475 Article   CAS   Google Scholar   Roose T, Fowler AC, Darrah
    PR (2001) A mathematical model of plant nutrient uptake. J Math Biol 42(4):347–360
    Article   PubMed   CAS   Google Scholar   Rusydi AF (2018) Correlation between
    conductivity and total dissolved solid in various type of water: a review. In
    IOP Conf Series Earth Environ Sci 118(1):012019 Article   Google Scholar   Saby
    NPA, Arrouays D, Antoni V, Lemercier B, Follain S, Walter C, Schvartz C (2008)
    Changes in soil organic carbon in a mountainous French region, 1990–2004. Soil
    Use Manag 24(3):254–262 Article   Google Scholar   Saxton KE, Rawls WJ (2006)
    Soil water characteristic estimates by texture and organic matter for hydrologic
    solutions. Soil Sci Soc Am J 70(5):1569–1578 Article   CAS   Google Scholar   Skinner
    MF, Zabowski D, Harrison R, Lowe A, Xue D (2001) Measuring the cation exchange
    capacity of forest soils. Commun Soil Sci Plant Anal 32(11–12):1751–1764 Article   CAS   Google
    Scholar   Sudduth KA, Drummond ST, Kitchen NR (2001) Accuracy issues in electromagnetic
    induction sensing of soil electrical conductivity for precision agriculture. Computers
    Electr Agric 31(3):239–264 Article   Google Scholar   Sung J, Kim W, Oh TK, So
    YS (2023) Nitrogen (N) use efficiency and yield in rice under varying types and
    rates of N source: chemical fertilizer, livestock manure compost and food waste-livestock
    manure compost. Appl Biol Chem 66(1):4 Article   CAS   Google Scholar   Vadalia
    D, Vaity M, Tawate K, Kapse D, Sem SV (2017) Real Time soil fertility analyzer
    and crop prediction. Int Res J Eng Technol 4(3):3–5 Google Scholar   Vyavahare
    G, Lee Y, Seok YJ, Kim H, Sung J, Park JH. (2023). Monitoring of soil nutrient
    levels by an EC sensor during spring onion (Allium fistulosum) cultivation under
    different fertilizer treatment Walkley A, Black IA (1934) An examination of the
    Degtjareff method for determining soil organic matter, and a proposed modification
    of the chromic acid titration method. Soil Sci 37(1):29–38 Article   CAS   Google
    Scholar   Wang D, Xu Z, Zhao J, Wang Y, Yu Z (2011) Excessive nitrogen application
    decreases grain yield and increases nitrogen loss in a wheat–soil system. Acta
    Agric Scandinavica Sect B-Soil Plant Sci 61(8):681–692 Google Scholar   Wyseure
    GCL, Mojid MA, Malik MA (1997) Measurement of volumetric water content by TDR
    in saline soils. Eur J Soil Sci 48(2):347–354 Article   Google Scholar   Tanji
    KK (2002) Salinity in the soil environment. Salinity: environment-plants-molecules.
    Springer, Dordrecht, pp 21–51 Google Scholar   Xing X, Ma X (2017) Differences
    in loam water retention and shrinkage behavior: effects of various types and concentrations
    of salt ions. Soil Tillage Res 167:61–72 Article   Google Scholar   Download references
    Acknowledgements This work was carried out with the support of \"Cooperative Research
    Program for Agriculture Science & Technology Development (Project No. PJ015635)\"
    Rural Development Administration, Republic of Korea. Funding This work was carried
    out with the support of \"Cooperative Research Program for Agriculture Science
    & Technology Development (Project No. PJ015635)\" Rural Development Administration,
    Republic of Korea. Author information Authors and Affiliations Department of Environmental
    and Biological Chemistry, Chungbuk National University, 1 Chungdae-Ro, Seowon-Gu,
    Cheongju, 28644, Chungbuk, Republic of Korea Han Na Kim & Jin Hee Park Contributions
    JHP contributed to the study conception and design. Material preparation, data
    collection and analysis were performed by HNK and JHP. The first draft of the
    manuscript was written by HNK and JHP commented on previous versions of the manuscript.
    All authors read and approved the final manuscript. Corresponding author Correspondence
    to Jin Hee Park. Ethics declarations Ethics approval and consent to participate
    The manuscript does not have potential conflicts of interest. The research does
    not involve human participants or animals. Competing interests The authors have
    no relevant financial or non-financial interests to disclose. Additional information
    Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Open Access This article is licensed under a Creative Commons Attribution 4.0
    International License, which permits use, sharing, adaptation, distribution and
    reproduction in any medium or format, as long as you give appropriate credit to
    the original author(s) and the source, provide a link to the Creative Commons
    licence, and indicate if changes were made. The images or other third party material
    in this article are included in the article''s Creative Commons licence, unless
    indicated otherwise in a credit line to the material. If material is not included
    in the article''s Creative Commons licence and your intended use is not permitted
    by statutory regulation or exceeds the permitted use, you will need to obtain
    permission directly from the copyright holder. To view a copy of this licence,
    visit http://creativecommons.org/licenses/by/4.0/. Reprints and permissions About
    this article Cite this article Kim, H.N., Park, J.H. Monitoring of soil EC for
    the prediction of soil nutrient regime under different soil water and organic
    matter contents. Appl Biol Chem 67, 1 (2024). https://doi.org/10.1186/s13765-023-00849-4
    Download citation Received 06 October 2023 Accepted 11 December 2023 Published
    03 January 2024 DOI https://doi.org/10.1186/s13765-023-00849-4 Share this article
    Anyone you share the following link with will be able to read this content: Get
    shareable link Provided by the Springer Nature SharedIt content-sharing initiative
    Keywords Precision agriculture Humic acid Soil texture Sensor Nutrients Download
    PDF Sections Figures References Abstract Introduction Materials and methods Results
    and discussion Availability of data and materials References Acknowledgements
    Funding Author information Ethics declarations Additional information Rights and
    permissions About this article Advertisement Support and Contact Jobs Language
    editing for authors Scientific editing for authors Leave feedback Terms and conditions
    Privacy statement Accessibility Cookies Follow SpringerOpen By using this website,
    you agree to our Terms and Conditions, Your US state privacy rights, Privacy statement
    and Cookies policy. Your privacy choices/Manage cookies we use in the preference
    centre. © 2024 BioMed Central Ltd unless otherwise stated. Part of Springer Nature."'
  inline_citation: '>'
  journal: Applied Biological Chemistry
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Monitoring of soil EC for the prediction of soil nutrient regime under different
    soil water and organic matter contents
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Sajak A.A.B.
  - Ahmad M.N.I.
  - Dao H.
  citation_count: '0'
  description: Wireless Sensor Networks (WSNs) are a key component of Green IoT, as
    they play a critical role in many applications. However, a major challenge faced
    by WSNs is their limited energy capacity, which can impede their effectiveness.
    To address this issue, energy harvesting techniques are used to harness ambient
    energy and power the nodes, eliminating the need for frequent battery replacements
    or recharging. This study proposes a solar energy harvesting technique to prolong
    the lifespan of each wireless sensor node in a network. The aim of the research
    is to assess the impact of energy harvesting on wireless sensor networks with
    a focus on solar ambient light energy, as it is a critical component of achieving
    a Green Internet of Things (IoT). The study is adapted to the tropical weather
    of Malaysia and its forecasted conditions. Through the use of NetSim simulations,
    the energy efficiency and reliability of the network are evaluated using solar
    energy harvesting. The recharge rate for energy harvesting in a wireless sensor
    network is calculated to be 2.34W per day using a 55x70mm solar photovoltaic panel
    based on Malaysia weather forecasts and sun hours. This proposed method is successfully
    executed using NetSim, which utilizes real device parameters for a WSN in a simulated
    agriculture environment. The results show an overall improvement of 22.4 percent
    in performance parameters in all areas, including energy consumption, network
    layer, routing performance, and IEEE 802.15.4 metrics, representing a significant
    improvement. With the implementation of solar energy harvesting, traditional energy
    of WSNs can benefit from developing smart agricultural monitoring systems. This
    efficient method and calculation for solar energy harvesting can help to sustain
    the infinite lifetime of WSN by optimizing the operational time to 18% of the
    duty cycle. Results demonstrate that the proposed method can effectively increase
    the energy efficiency and reliability of the network, making it a promising solution
    for WSNs operating in tropical regions. This research contributes to the development
    of sustainable and energy-efficient WSNs, promoting the Green IoT concept.
  doi: 10.37934/araset.40.1.3544
  full_citation: '>'
  full_text: '>

    "HOME VIEW ARTICLES ONLINE FIRST ARTICLES GUIDE FOR AUTHORS SUBMISSIONS SEARCH
    Register Login HOME / ARCHIVES / VOL. 40 NO. 1: OCTOBER (2024) / Articles Green
    IoT Based on Tropical Weather: The Impact of Energy Harvesting in Wireless Sensor
    Network Aznida Abu Bakar Sajak Computer Engineering Technology, Universiti Kuala
    Lumpur - Malaysian Institute of Information Technology, 50250, Kuala Lumpur, Malaysia
    Mohd Nabil Iqbal Ahmad Computer Engineering Technology, Universiti Kuala Lumpur
    - Malaysian Institute of Information Technology, 50250, Kuala Lumpur, Malaysia
    Hassan Dao Department of Computer Engineering, Faculty of Engineering, Princess
    of Naradhiwas University, 96000, Thailand DOI: https://doi.org/10.37934/araset.40.1.3544
    Keywords: Green IoT, energy harvesting, wireless sensor network ABSTRACT Wireless
    Sensor Networks (WSNs) are a key component of Green IoT, as they play a critical
    role in many applications. However, a major challenge faced by WSNs is their limited
    energy capacity, which can impede their effectiveness. To address this issue,
    energy harvesting techniques are used to harness ambient energy and power the
    nodes, eliminating the need for frequent battery replacements or recharging. This
    study proposes a solar energy harvesting technique to prolong the lifespan of
    each wireless sensor node in a network. The aim of the research is to assess the
    impact of energy harvesting on wireless sensor networks with a focus on solar
    ambient light energy, as it is a critical component of achieving a Green Internet
    of Things (IoT). The study is adapted to the tropical weather of Malaysia and
    its forecasted conditions. Through the use of NetSim simulations, the energy efficiency
    and reliability of the network are evaluated using solar energy harvesting. The
    recharge rate for energy harvesting in a wireless sensor network is calculated
    to be 2.34W per day using a 55x70mm solar photovoltaic panel based on Malaysia
    weather forecasts and sun hours. This proposed method is successfully executed
    using NetSim, which utilizes real device parameters for a WSN in a simulated agriculture
    environment. The results show an overall improvement of 22.4 percent in performance
    parameters in all areas, including energy consumption, network layer, routing
    performance, and IEEE 802.15.4 metrics, representing a significant improvement.
    With the implementation of solar energy harvesting, traditional energy of WSNs
    can benefit from developing smart agricultural monitoring systems. This efficient
    method and calculation for solar energy harvesting can help to sustain the infinite
    lifetime of WSN by optimizing the operational time to 18% of the duty cycle. Results
    demonstrate that the proposed method can effectively increase the energy efficiency
    and reliability of the network, making it a promising solution for WSNs operating
    in tropical regions. This research contributes to the development of sustainable
    and energy-efficient WSNs, promoting the Green IoT concept. AUTHOR BIOGRAPHIES
    Aznida Abu Bakar Sajak, Computer Engineering Technology, Universiti Kuala Lumpur
    - Malaysian Institute of Information Technology, 50250, Kuala Lumpur, Malaysia
    aznida@unikl.edu.my Mohd Nabil Iqbal Ahmad, Computer Engineering Technology, Universiti
    Kuala Lumpur - Malaysian Institute of Information Technology, 50250, Kuala Lumpur,
    Malaysia nabil.ahmad01@s.unikl.edu.my Hassan Dao, Department of Computer Engineering,
    Faculty of Engineering, Princess of Naradhiwas University, 96000, Thailand hassan@pnu.ac.th;
    hassan.dao20@gmail.com PDF PUBLISHED 2024-02-19 HOW TO CITE Aznida Abu Bakar Sajak,
    Mohd Nabil Iqbal Ahmad, & Hassan Dao. (2024). Green IoT Based on Tropical Weather:
    The Impact of Energy Harvesting in Wireless Sensor Network. Journal of Advanced
    Research in Applied Sciences and Engineering Technology, 40(1), 35–44. https://doi.org/10.37934/araset.40.1.3544
    More Citation Formats ISSUE Vol. 40 No. 1: October (2024) SECTION Articles PREPARATION
    OF MANUSCRIPT SUBMIT YOUR ARTICLE OUR EDITORIAL       TEAM ETHICS AND MALPRACTICE
    STATEMENTCONTACT                     US THE PUBLISHER \"SHARE YOUR KNOWLEDGE FOR
    A BETTER TOMORROW\" Knowledge has power, but it''s much more powerful when it
    is shared MAKE A SUBMISSION Indexing  Beginning 2021, Journal of Advanced Research
    in Applied Sciences and Engineering Technology is licensed under a Creative Commons
    Attribution-NonCommercial 4.0 International License. Distribution of authors RELATED
    PUBLICATIONS INFORMATION For Readers For Authors For Librarians Journal of Advanced
    Research in Applied Sciences and Engineering Technology ISSN (Online): 2462 -
    1943 Published by: Semarak Ilmu Publishing Indexing • SCOPUS • CROSSREF • GOOGLE
    SCHOLAR • MY JURNAL Publishing Frequency Monthly Publishing Model Open access
    Article Processing Charge (APC) All articles published in this journal are open
    access and freely available online, free to download, share and re-use. To cover
    the cost of providing open access, Semarak Ilmu charges an Article Processing
    Charge (APC) once an article is accepted for publication. There are no charges
    for rejected articles, no submission charges, and no surcharges based on the length
    of an article, tables, figures or supplementary data. The APC charged for accepted
    articles: USD400 (International Corresponding Author) or RM1500 (Malaysian Corresponding
    Author)."'
  inline_citation: '>'
  journal: Journal of Advanced Research in Applied Sciences and Engineering Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Green IoT Based on Tropical Weather: The Impact of Energy Harvesting in
    Wireless Sensor Network'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Akilan T.
  - Baalamurugan K.M.
  citation_count: '0'
  description: India's agricultural sector is dwindling, which has an impact on ecosystem
    output. Smart farming increases crop productivity by reducing waste and making
    effective use of fertiliser. Various Machine Learning techniques together with
    IoT enabled are developed for precision agriculture. However, the existing techniques
    face difficulties in forecasting weather and predicting disease accurately. In
    this work, a system is developed to automate weather forecasting and field monitoring
    using sensors. Wireless transmission is used to transfer sensor data to a web
    server database. In the first step, the collected data is pre-processed using
    normalization and mean based missing value imputation to convert the raw data
    into meaningful data. Pre-processed data is then fed into Gated Recurrent Unit
    (GRU) for forecasting the weather condition. In the second step, crop images acquired
    from sensors for disease prediction are pre-processed using Adaptive Gaussian
    Filter for noise removal and Dynamic Histogram Equalization for contrast enhancement
    of image. Pre-processed images are then fed into ResNet50 for feature extraction
    and classification. Using these predicted data, in case of any horrible weather
    conditions and soil conditions, remedial action will be automatically taken by
    the systems. On the other hand, regarding the information about horrible conditions
    and in presence of pests and diseases, an alert message will be sent to the farmers.
    The proposed method is tested with several metrics which attain better performance
    like 94% accuracy for weather forecasting and 98% accuracy for field monitoring.
    Thus the proposed IoT and deep learning based model can support farmers to achieve
    a high quantity of crop production in lesser time.
  doi: 10.1016/j.eswa.2024.123468
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Literature review 3. Proposed
    methodology 4. Result and discussion 5. Conclusion 6. Compliance with ethical
    standards CRediT authorship contribution statement Declaration of competing interest
    Data availability References Show full outline Figures (24) Show 18 more figures
    Tables (6) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Expert Systems with
    Applications Volume 249, Part A, 1 September 2024, 123468 Automated weather forecasting
    and field monitoring using GRU-CNN model along with IoT to support precision agriculture
    Author links open overlay panel T. Akilan, K.M. Baalamurugan Show more Add to
    Mendeley Share Cite https://doi.org/10.1016/j.eswa.2024.123468 Get rights and
    content Highlights • India''s agricultural sector is dwindling, which has an impact
    on ecosystem output. • Pre-processed images are fed into ResNet50 for feature
    extraction & classification. • Pre-processed data is fed into GRU for forecasting
    the weather condition. • Adaptive Gaussian Filter is used for noise removal. •
    Dynamic Histogram Equalization is used for contrast enhancement of image. Abstract
    India''s agricultural sector is dwindling, which has an impact on ecosystem output.
    Smart farming increases crop productivity by reducing waste and making effective
    use of fertiliser. Various Machine Learning techniques together with IoT enabled
    are developed for precision agriculture. However, the existing techniques face
    difficulties in forecasting weather and predicting disease accurately. In this
    work, a system is developed to automate weather forecasting and field monitoring
    using sensors. Wireless transmission is used to transfer sensor data to a web
    server database. In the first step, the collected data is pre-processed using
    normalization and mean based missing value imputation to convert the raw data
    into meaningful data. Pre-processed data is then fed into Gated Recurrent Unit
    (GRU) for forecasting the weather condition. In the second step, crop images acquired
    from sensors for disease prediction are pre-processed using Adaptive Gaussian
    Filter for noise removal and Dynamic Histogram Equalization for contrast enhancement
    of image. Pre-processed images are then fed into ResNet50 for feature extraction
    and classification. Using these predicted data, in case of any horrible weather
    conditions and soil conditions, remedial action will be automatically taken by
    the systems. On the other hand, regarding the information about horrible conditions
    and in presence of pests and diseases, an alert message will be sent to the farmers.
    The proposed method is tested with several metrics which attain better performance
    like 94% accuracy for weather forecasting and 98% accuracy for field monitoring.
    Thus the proposed IoT and deep learning based model can support farmers to achieve
    a high quantity of crop production in lesser time. Previous article in issue Next
    article in issue Keywords Internet of Things (IoT)Smart AgricultureWeather forecastingField
    monitoringGated Recurrent Unit (GRU) 1. Introduction India has agriculture as
    its primary occupation. IBEF (Indian Brand Enquiry Foundation) estimates that
    58 % of Indians who live in rural areas depend on agriculture. Not only in underdeveloped
    countries but also in many industrialised countries, farming and agriculture make
    up a significant component of GDP (Gross Domestic Product) (Karthick et al., 2018).
    As a result, it is urgent that existing farming methods be improved upon. It will
    help handle global catastrophes like climate change and epidemics like draught
    in addition to fostering the flourishing sustainable development of people, flora,
    and fauna (Lavanya et al., 2020). Farmers still use traditional methods such as
    manual field monitoring, which involves often watering crops and applying pesticides
    to manage pests, whether or not they are aware of the appropriate dosage. These
    old methods include disadvantages such as water logging in fields, excessive use
    of pesticides and fungicides, lack of knowledge about the kind of crops that need
    to be cultivated for a certain type of soil fertility, and lower yields than anticipated
    from the agricultural area (AshifuddinMondal & Rehena, 2018). Many farmers continue
    to cultivate using traditional techniques, which leads to low crop yields (Sushanth
    & Sujatha, 2018). Better technology will increase yield, hence reducing the likelihood
    of famine and malnutrition. The technology should be inexpensive enough that it
    can have an influence on billions of people worldwide (Ogunti, 2019; Karthick
    & Muthukumaran, 2023). Monitoring of the soil, plants, moisture, and temperature,
    as well as the management of the infrastructure and control systems, are all necessary
    for agricultural production. IoT is essential in the sector of agriculture (Thakur
    et al., 2020). Since they are utilised to offer information about agricultural
    areas, all Internet of Things sensors is quite effective. A smart agriculture
    stick advertises the novel smart agriculture programme based on IoT that enables
    farmers to have access to real-time data to track how the environment is operating,
    enabling them to engage in smart farming, increase their final yield, and ensure
    that their product meets quality standards (Phasinam et al., 2022). A wireless
    sensor network is used by this advanced agricultural monitoring system to gather
    data from a number of sensors placed at various junctions. A great amount of data
    can be analysed using such technology in precision farming after being collected
    by WSN (Khanna & Kaur, 2019). It enables farmers to boost yields while using fewer
    resources. In industrialised countries, smart framing is being carried out on
    a wide scale combining IoT, AI, and agriculture data analysis (Goel et al., 2021).
    The Internet of Things (IoT)-based smart agriculture system demonstrated that
    distant sensors are used to monitor inside settings and that micro-scale controllers
    are utilised to control and operate indoor and remote sensing systems, including
    those that take pictures and videos and even use cameras (Panda & Bhatnagar, 2020).
    Farmers may monitor and manage the microclimate in the greenhouse, as well as
    illnesses and pests that impact the plants, with the aid of precision farming
    (Arora et al., 2021). The status of the plants can be impacted by a variety of
    external elements and microclimatic interior occurrences (Gunjan et al., 2022).
    Plant development and the spread of some diseases are both impacted by temperature
    and relative humidity (Daya Sagar et al., 2023). In terms of the effectiveness
    of greenhouses, it is one of the most detrimental agricultural production illnesses
    (Cambra et al., 2018). When ambient and micro-indoor conditions are favourable,
    controlling the irrigation of water quality is easier. When growing crops in greenhouses,
    it is essential to apply the appropriate fertiliser treatments or drip system
    cleanser at the appropriate time and location (Siddiquee et al., 2022). Understanding
    the stage of the production cycle at which specific nutrient solutions should
    be used is essential (Sai Surya Teja et al., 2023). The purpose of this paper
    is to make automated and continuous field monitoring for smart agriculture using
    IoT and deep learning technologies (Karthick & Muthukumaran, 2023). The main contribution
    of the proposed work is given below: • Automated and efficient field monitoring
    model is designed through combining IoT and deep learning technology to support
    farmers in achieving higher crop production. • Sensors are assembled in an agricultural
    field to acquire data regarding agricultural factors and transmit it to cloud
    server for further analysis purposes. • Normalization and missing value imputation
    are used as data pre-processing techniques and GRU is used to forecast weather
    and soil conditions based on the acquired data. • Adaptive Gaussian filter and
    dynamic histogram equalization are used as image pre-processing techniques and
    CNN is used to detect the presence of disease using pre-processed crop image.
    • Alert SMS are sent to farmers regarding the horrible weather condition and diseases
    to render control action. Rest of the paper contains: Section 2 presents the literature
    review related to automated field monitoring. In Section 3 proposed methodology
    and architecture of the proposed methodology are given. Result and discussion
    part of the proposed methodology is given in Section 4. At last, Section 5 contains
    the conclusion part. 2. Literature review Several techniques for automatic forecasting
    of weather and field monitoring had been developed. The following section examines
    some of the current approaches utilized for weather forecasting and crop disease
    prediction in smart agriculture. (a) Weather and irrigation monitoring system
    An IoT-based smart irrigation management system combining machine learning and
    open source technology has been proposed by Goap et al. (2018). The proposed system''s
    intelligence is based on a smart algorithm that considers sensory data as well
    as elements of the short-term weather forecast, such as precipitation, air temperature,
    humidity, and UV. But the system cost of this suggested approach is high. Velmurugan
    (2020) have suggested a smart system that uses open-source technologies to forecast
    how much irrigation is needed for a given field. The entire system has been created
    and is currently being tested on a small-scale pilot project. Web-based information
    visualisation and decision support systems are used to wirelessly gather sensor
    node data via the cloud, and they deliver real-time information insights based
    on the analysis of sensor and weather forecast data. Singh et al. (2019) have
    suggested In an IoT-driven smart irrigation framework, machine learning techniques
    are used to maximise the irrigation water use by forecasting the future soil moisture
    of a field. The performance of various ML techniques is tested for predicting
    future soil moisture, and the GBRT outcomes are quite encouraging. Rani et al.
    (2020) have suggested a machine learning and neural networks-based flood monitoring
    system using IoT. This research outlines an efficient and adaptable technique
    for flood and system-altering system identification. The most cutting-edge technologies,
    including machine learning (ML), have a large positive impact on technology and
    are particularly effective at detecting both normal and pathological behaviour
    in any system. The most common, extensively used, and effective method for forecasting
    rainfall is neural networks. Real-time agricultural field monitoring utilising
    IoT-based sensors and unmanned aerial vehicles has been developed by Quach et
    al. (2021). A sensor network for gathering information on the ground is also incorporated,
    in addition to an unmanned aerial vehicle system for remote sensing. Numerous
    sensor nodes are used in the sensor network to measure various environmental and
    plant factors, including temperature, humidity, and nitrogen content. The sensor
    network transmits data using LoRa, a low-power wide-area network modulation method
    that enables a single receiver to receive signals from sensor nodes up to 450
    m away. (b) Crop disease prediction In order to predict apple disease in Kashmir
    Valley apple orchards, Akhter and Sofi (2022) suggested using data analytics and
    machine learning in an IoT system. This study reaches a pinnacle in demonstrating
    the power and promise of computing tools like the internet of things, wireless
    sensor networks, data analytics, and machine learning in agriculture. A local
    poll was also conducted to find out from the farmers how the most recent technological
    advancements affect precision farming. Khamparia et al. (2020) developed a hybrid
    deep learning model merging autoencoder with Convolutional neural network for
    crop leaf disease prediction. Obtained dataset contained 900 image samples of
    three different crops and five types of disease. From total samples 600 images
    were considered for training process and remaining 300 was considered for testing
    process. Different convolution filter size of and was used in this developed approach
    achieving 97.5 % accuracy. Krishnamoorthy et al. (2021) developed deep learning
    model along with transfer learning for prediction of disease in rice leaf. In
    traditional farming, farmers spend lot of resources as well as time consuming
    due to visualizing through naked eye and it results in unhealthy farming. Object
    segmentation and classification was achieved using InceptionResNetV2 for recognizing
    disease in rice leaf image. Kaur et al. (2022) developed hybrid CNN model for
    detection of leaf disease through utilizing feature extraction and feature reduction
    approach. Using this developed approach four different types of diseases such
    as black measles, stable, black rot and leaf blight present in grapevines was
    recognized. Plant village dataset was collected and processed using EfficientNet
    B7 deep model using transfer learning. After extracting features it was further
    reduced by applying logistic regression. According to the literature, numerous
    systems are designed for automatic field monitoring with IoT. Based on the above
    mentioned articles several significant challenges arise in automatic weather forecasting
    and field monitoring approaches. High system cost (Goap et al., 2018), alerting
    system not available (Rani et al., 2020), and only considering a single parameter
    (Akhter and Sofi, 2022) are some of the issues in the existing algorithms. Thus
    effective field monitoring is not achieved using the existing research. So, the
    current research focuses on utilizing IoT and deep learning approach for automated
    and continuous field monitoring. 3. Proposed methodology In India, one of the
    most important economic sectors is agriculture. India''s increased agricultural
    activity can be attributed to the country''s abundant irrigation-supporting water
    supplies and highly productive soil. However, a number of circumstances stop the
    production of the projected yield from occurring. To overcome these aforementioned
    issues and to support farmers with better quality and quantity crops an improved
    automated and computer based technology is designed in this current research.
    Fig. 1 illustrates the architecture of the proposed IoT based system. Download
    : Download high-res image (592KB) Download : Download full-size image Fig. 1.
    Architecture of the Proposed IoT Based System for Improved Precision Agriculture.
    The agricultural area is equipped with several IoT-based sensor nodes to gather
    real-time data. The nodes that have been assembled gather data on the state of
    the soil, moisture content of the soil, presence of humidity, presence of pests,
    diseases, and insects, as well as photographs of plants and other things. The
    information is then either sent to a cloud server based on IoT or stored locally
    in a nearby fog node. The collected data is pre-processed using normalization
    and mean based missing value imputation to convert the raw data into meaningful
    data which is required for classification. Pre-processed data is then given as
    input for Gated Recurrent Unit (GRU) for forecasting the weather condition. Then,
    in the second step, the images of the crop are acquired to predict the presence
    of disease and pests. The acquired crop images are pre-processed using an Adaptive
    Gaussian filter for noise removal and Dynamic Histogram Equalization (DHE) for
    contrast enhancement of the image. Pre-processed image is then fed to ResNet50
    for feature extraction and classification. Using these predicted data, in case
    of any horrible weather conditions and soil conditions, remedial action will be
    automatically taken by the system. On the other hand, the information regarding
    the horrible conditions and in presence of pests and diseases, an alert message
    will be sent to the farmers. The proposed IoT and deep learning based model can
    support the farmers to achieve quantity and quality crop production in lesser
    time. 3.1. IoT based network for data acquisition The first step in putting together
    a weather forecasting and field monitoring system is setting up a wireless sensor
    network field where each node is linked by a Wi-Fi module as well as lays data
    over a server computer, form where an automated Python script can keep polling
    the information and then transmits alert/start messages for the required procedure.
    Below Fig. 2 shows the diagrammatic representation of distributed WSN. Download
    : Download high-res image (175KB) Download : Download full-size image Fig. 2.
    Distributed WSN. Data collection using numerous sensors placed around the field
    or garden is the first stage in creating an automatic weather forecasting and
    field monitoring system. The gateway node, or Raspberry Pi 3 B+, will handle all
    communication with the other sensor nodes. Advanced soil moisture sensors, GSM
    and Bluetooth modules, temperature and humidity sensors, MQ2 gas sensors, pH sensors,
    water level indicators, alarm and clock modules, batteries, and relay modules
    are all included in each Arduino mega unit. Ultrasonic sensor for rodents and
    significant intruder detection. Each node will send information to the raspberry
    pi3, which functions as both the base station and the gateway node. The data storage
    on the raspberry pi will be handled by a python script, from which it might be
    displayed to the user via an application layer. The intranet can also accomplish
    what it was designed to do for data transmission from the raspberry pi to the
    server, enabling its use of it in places with limited to no internet access. The
    basic principles of receiver, transmitter, ground, and positive are the basis
    for connecting various sensors to the microcontroller. The majority of connections
    need to be made in this way, because the Arduino Mega board includes a lot of
    digital pins, RXD, analogue pins and TXD in addition to a lot of Vcc and Gnd pins.
    After building the network topology and collecting the data, the first phase of
    the proposed applications is finished. Data processing begins with the initial
    phase of data collection using various sensors. 3.1.1. Node’s structural details
    Each node is made up of a micro-controller, which in this case is advised to be
    an Arduino mega because it most closely matches the scope of the solution. Each
    node has a soil moisture sensor, a Wi-Fi module, a temperature sensor, a DHT11
    sensor, a light intensity sensor, also a battery module linked to it. Fig. 3 below
    contains each node''s block diagram. Download : Download high-res image (161KB)
    Download : Download full-size image Fig. 3. Configuration of each sensor node.
    In order to transmit further signals to the actuators and inform the end user
    in the event that manual intrusion is required, all of the data collected by the
    sensors must be processed and analysed. 3.2. Data analysis The data kept on a
    cloud server is also taken into account for analytical purposes, whereby an AI
    system is used to predict the weather, the characteristics of the soil, irrigation,
    and illness. To automate the forecast of various agricultural aspects and take
    corrective action to increase crop output, AI systems are being considered. However
    in the data analysis process initially the information regarding temperature,
    humidity, moisture and soil condition are considered. 3.2.1. Weather monitoring
    (a) Data pre-processing The sensors'' entire collection of data has to be evaluated
    and handled. The given input datasets such as temperature, humidity moisture and
    soil properties contains some missing values. Normalization and mean based missing
    value imputation are used in the proposed method to convert the raw data into
    meaningful data which is required for classification. (b) Normalization Normally,
    attributes from the raw data are high variables and not present in a specified
    range. To accomplish a better outcome, the attributes from the data are kept in
    a uniform range of [A, B]. So here, min–max normalization method is used to normalize
    the attribute ranges. A mathematical formulation of min–max normalization is given
    in Eq. (1). (1) where represents the original value, denotes the maximum value
    of and indicates the minimum value of . (c) Mean based Missing value Imputation
    Imputation using mean values, also known as rough imputation, is a quick and simple
    imputation method that employs the mean value of all the data on the variable
    to be improved. Imputation of numerical variables is done using the mean. This
    rough imputation not only ignores the amount of variance but also the connection
    between variables, resulting in inaccurate estimations. The rough imputation approach
    should only be used when just a few missing data are present, and it is not designed
    for broad usage and is given in Eq. (2). (2) where represents the sample mean,
    and the total of each value in the sample is represented by , while the number
    of values in the population is represented by . 3.2.2. Classification A classifier
    is an algorithm that organises data into labelled informational classes or categories.
    In this designed model, GRU is used to forecast the weather. (a) Gated Recurrent
    Unit (GRU) A GRU can be viewed as a simplification and improvement of LSTM and
    is comparable in performance to LSTM. Introduce LSTM before giving a comprehensive
    description of a GRU. The hidden state is the most crucial portion of an RNN because
    it is in charge of remembering or forgetting certain information (Li et al., 2020).
    From top to bottom, GRU has a total of three layers. The 10 node input layer is
    in charge of feeding information into the hidden layer. The output unit, which
    contains two nodes and one layer, is in charge of classifying and producing the
    data processed from the hidden layer using the SoftMax classifier. 32 nodes and
    one layer make up the hidden layer. The hidden layer''s output processed data
    is handled using one-hot encoding, a real output that is gained following the
    decoding procedure. GRU consists of two gates a reset gate and an update gate
    . The two gates cooperate to regulate the flow of data into and out of the memory
    cell. Although they both use the input and the preceding concealed state to calculate
    them, their functions are distinct. A GRU makes some reductions in complexity
    compared to LSTM. Fig. 4 is a diagram of the GRU''s organisational structure.
    Eq. (3) provides the link relationship seen in Fig. 4. (3) Download : Download
    high-res image (200KB) Download : Download full-size image Fig. 4. Structure of
    the GRU. In Eq. (3), candidate’s output is represented by , output vector is indicated
    using and represents the input vector. The reset gate of the GRU is designated
    by the letter , and the output gate by the letter (Xu et al., 2018). This GRU
    network is used in proposed approach to forecasting the weather in the agriculture
    area. 3.2.3. Disease prediction (a) Image pre-processing The sensors'' entire
    collection of data has to be evaluated and handled. From the information collected
    from the nodes, the Python programmes running on the Raspberry Pi will check for
    certain criteria. The input crop image dataset is pre-processed in order to convert
    the raw image into a meaningful image. Adaptive Gaussian filter and dynamic histogram
    equalization technique to remove noise and to improve the quality of the image
    for achieving accurate prediction. (b) Adaptive Gaussian filter When using a conventional
    Canny edge detector operator, the Gaussian filter is employed to smooth out the
    image and minimise the parasitic effect that sampling quantization has on the
    image. Due to the fact that both the edge and the noise are high frequency signals,
    the filter operator smoothes the image''s edges while suppressing the noise, which
    affects how accurately the edges are identified. An updated Gaussian filtering
    algorithm is put forth to address this issue; it decides whether to apply a Gaussian
    filter based on the disparity between the pixel''s grey value and the grey mean
    in the surrounding area. If the noise interferes with the image, it can be written
    as in Eq. (4): (4) where is the noise signal. When there is noise, the difference
    between the noise-affected pixel''s grey value also its neighbouring pixels is
    described as in Eq. (5). (5) Due to the approximate zero interference free D,
    the mean value difference between the point grey value of the noise-affected image
    pixel and its neighbouring pixels, called , is roughly equal to , which is the
    degree of noise hopping. (c) Dynamic histogram equalization The cropped image''s
    total number of pixels is used as the basis for the spanning function used by
    the equalisation method to perform equalisation (Dhal et al., 2018). Histogram
    equalisation and mapping the image pixels to a dynamic range are the two stages
    of the process. (d) Mapping image pixels to dynamic range The dynamic range for
    the output sub-histograms can be obtained from as Eqs. (5), (6). (6) (7) The exceptions
    are present at the two extremities, where (e) Equalizing each sub-histogram Similar
    to how a global histogram is equalised, each image''s histogram is equalised using
    the same process. The remapped values for the ith sub-histogram are derived as
    in Eq. (8). (8) where is the new intensity level corresponding to the intensity
    level on the original image, is the histogram value at the intensity level on
    the fuzzy histogram and is the total population count in the partition of the
    fuzzy histogram. 3.2.4. Classification A classifier is an algorithm that organises
    data into clearly defined categories or classes. In this designed model, ResNet50
    a kind of CNN model is used to predict plant diseases. (a) Residual Neural Network
    (ResNet50) The goal of CNN''s back propagation method is to automatically discover
    the spatial hierarchies of feature classes. Convolution, pooling, and fully connected
    (FC) units are common building components utilized in the creation of CNNs. The
    process of repeatedly running the input image through the selected filter is the
    foundation of the convolutional layer''s operation. The filter can be 3 × 3, 5
    × 5 or 7 × 7 pixels in size. As a result, the image with the filter applied to
    it becomes the input of the following layer (m2 × m3). Activation maps are created
    as a result of this convolution process. Local unique elements can be seen on
    activation maps. A filter (m1) exists for each convolutional layer (Toğaçar et
    al., 2020). The output of layer l is made up of feature maps with dimension The
    ith subset of features, displayed as , is calculated utilizing Eq. (9). The matrix
    bias is indicated by and denotes size of the filter. (9) The pooling units preserves
    image characteristics while reducing image size also expenses while maintaining
    image information. This structure reduces the number of parameters, the filter''s
    spatial dimension, and the step. It takes information in the following sizes as
    input: , and again outcomes Eqs. (10), (11), (12) demonstrates, in brief how the
    pooling layer functions. (10) (11) (12) The characteristics from the preceding
    stage are flattened before being assigned to the FC layers, which update the weights
    also provide the final values for each label. An actual multi-layered sensor for
    mapping is a convolutional network with fully interlinked units. In Eq. (13),
    the FC layer''s processing stages are displayed. (13) In the proposed method CNN
    model such as ResNet 50 is used for the training of plant disease image dataset.
    Fig. 5 illustrates a building block for residual learning. A remarkable architecture
    made up of residual layers is called ResNet. Furthermore, ResNet is distinct in
    that it substitutes a collection of global average pooling layers for the more
    customary set of fully linked layers at the network’s conclusion. ResNet50 is
    a type of residual network with 50 layers. Each group of identical layers in the
    ResNet50 design is unique. ResNet calculates data from one layer to the next that
    must occur in order to arrive at the final forecast. ResNet helps to mitigate
    the problem of vanishing gradients by offering an alternative shortcut route for
    gradient to flow through. The model can skip a CNN weight layer if the current
    layer is not necessary thanks to the ResNet identity mapping algorithm (Theckedath
    & Sedamkar, 2020). This assists in preventing the over-fitting issue with the
    training set. This ResNet50 classifier used in the proposed method classifies
    the plant diseases in agricultural land. Predicted data using deep learning approach
    is further used for the purpose of monitoring the agriculture field. Download
    : Download high-res image (99KB) Download : Download full-size image Fig. 5. Building
    Block for ResNet50. 3.3. Field monitoring The temperature, humidity, irrigation,
    fertilisers and illness in the agricultural field will all be checked when the
    smart agricultural monitoring system is turned on. The water pump will automatically
    start if the temperature is really high. Then if the soil moisture is going down
    then the water pump will start automatically. Nutrient levels of the soils are
    then checked. If nutrient deficiencies occurred then an automatic fertilization
    machine is turned on to spray the fertilizer on the agricultural land. If the
    plants are affected by a particular disease means the automatic pesticide sprayer
    will start automatically. The smart agriculture monitoring system uses a GSM module
    to communicate with mobile devices and establish SMS alerts on the mobile device
    about the levels. 4. Result and discussion Agriculture and farming contribute
    significantly to the GDP of many affluent countries as well as emerging countries.
    As a result, it is urgent that existing farming methods be improved upon. A critical
    matter that requires the highest appropriateness to be addressed is the necessity
    for agricultural maintenance and the rising water issues. To build an automated
    and continuous field monitoring, the proposed research focus on IoT and deep learning
    approach. The proposed GRU and ResNet50 are tested on MATLAB 2021a with intel
    core i5 and 8 GB RAM. Simulation parameters for GRU and ResNet50 are given in
    Table 1, Table 2. Table 1. Simulation parameter for GRU. Parameter Values Max
    Epochs 1000 Gradient moving 0.9 Batch Size 200 Initial Learn Rate 0.005 Dropout
    rate 0.2 Gradient threshold 1 Table 2. Simulation parameter for ResNet50. Optimizer
    sgdm Max Epochs 1000 Initial Learn Rate 0.001 Validation Frequency 50 Momentum
    0.9 Squared Gradient Decay Factor 0.99 Learn Rate Drop Factor 0.1 Learn Rate Drop
    Period 10 The installation of a wireless sensor network is the first step in the
    implementation of weather forecasting and field monitoring. In order to gather
    real-time data, several IoT-based sensor nodes are set up in the agricultural
    field. The assembled nodes capture information regarding the environmental conditions,
    soil condition, moisture condition, presence of humidity fertility of the soil,
    and presence of the pest, diseases, and insects also capture images of plants
    and so. The collected information’s either stored locally in the nearby fog node
    or transmitted to the cloud server based on IoT. The agricultural node with sensor
    nodes and sensor node deployment used for this proposed approach is illustrated
    in Fig. 6, Fig. 7. Download : Download high-res image (302KB) Download : Download
    full-size image Fig. 6. Agricultural field with sensor nodes. Download : Download
    high-res image (115KB) Download : Download full-size image Fig. 7. Sensor node
    deployment. The information stored in cloud server is further considered for analysis
    purposes in which the prediction of weather, soil properties, irrigation and disease
    is achieved by means of AI system. The reason for considering AI systems is to
    achieve automated prediction of varying agricultural factors and take remedial
    action for higher crop yield. 4.1. Dataset description Different sensors are placed
    in the agricultural field for monitoring purpose to support smart in order to
    perform healthy farming. The collected sensor data is processed using AI system
    to predict weather, crop disease, soil nutrition and irrigation support. Four
    different datasets collected from publicly available is taken for analysis. Description
    regarding different dataset is given below. Dataset 1: This data contains details
    regarding district wise crop area, season, temperature different types of crops,
    production in hectares and yield. The statistics is collected from 1997 to 2021
    and it is obtained from Ministry of Agriculture and Farmers Welfare of India.
    Data is acquired from 35 states and union territory. Dataset 2: For the purpose
    of monitoring and controlling an irrigation system in real-time, data is gathered
    using a wireless sensor network. This method prevents water waste while providing
    the farm and garden with uniform and necessary water levels. This method aims
    to provide an automated irrigation mechanism that activates and deactivates the
    pumping motor in response to the amount of moisture in the ground. In this system,
    the soil moisture sensor, dht11 sensor, and NodeMCU are all used to interface
    with the Arduino board. Using these sensors, the data is collected. Dataset 3:
    Data related to soil nutrients is collected from department of agriculture and
    farmers welfare. Different types of nutrients are essential to be present in the
    soil for plant growth. Various soil nutrients includes pH, Electrical Conductivity
    (EC), Iron (Fe), Organic Carbon (OC), Nitrogen (N), Manganese (Mn), Phosphorus
    (P), Potassium (K), Sulfur (S), Boron (B), Copper (Cu), and Zinc (zn). Dataset
    4: This dataset contains both unhealthy as well as healthy leaves image. Total
    number of image samples present in the dataset is 3600 images of RGB. It contains
    healthy apple leave and diseased apple leaves such as scab, black rot and cedar.
    4.2. Weather monitoring The collected data such as temperature (Dataset 1), soil
    moisture (Dataset 2) and nutrients (Dataset 3) are pre-processed using normalization
    and mean based missing value imputation to convert the raw data into meaningful
    data which is required for classification. GRU is utilized as a classifier for
    predicting weather condition. This proposed GRU classifier is compared with existing
    classifiers like Deep Neural Network (DNN), Long Short-Term Memory (LSTM), K-Nearest
    Neighbour (KNN) and Recurrent Neural Network (RNN). The performance metrics used
    for comparison between proposed and existing classifiers are accuracy, precision,
    recall, error, specificity, F1_Score, NPV, FNR and FPR. AUC plot and ROC plot
    of the proposed approach is depicted in Fig. 8. To validate or show the effectiveness
    of a multi-class categorization problem, the AUC (Area Under the Curve) and ROC
    (Receiver Operating Characteristics) curves are used. The degree or amount of
    separability is represented by AUC. In the proposed method, AUC plot is close
    to 1, so it has a high level of separability. The ROC curve is a probability curve
    that demonstrates how effective the model can discriminate across classes. Table
    3 illustrates the comparison study between proposed and existing model. Download
    : Download high-res image (114KB) Download : Download full-size image Fig. 8.
    AUC and ROC plot for proposed GRU approach. Table 3. Comparison between proposed
    and existing model. Metrics LSTM RNN DNN GRU Accuracy 89 86 82 94 Precision 91
    88 85 94 Recall 84 88 86 93 Error 11 14 18 6 specificity 89 87 84 93 F1 score
    92 90 88 94 NPV 92 89 87 94 FNR 12 14 16 6 FPR 11 13 16 6 Accuracy metrics comparison
    of suggested GRU and current classifiers is illustrated in Fig. 9(a). The accuracy
    achieved by the proposed GRU classifier for weather forecasting is 94 %. But the
    existing classifiers has accuracy value of 89 %, 86 %, 82 % and 78 % for LSTM,
    RNN, DNN and KNN respectively. When compared to current classifiers, the suggested
    classifier''s accuracy is determined to be greater. Fig. 9(b) illustrates the
    precision metrics comparison of suggested and current techniques. The precision
    value observed by the proposed GRU is 94 %. Prior classifiers like LSTM, RNN,
    DNN and KNN are 91 %, 88 %, 85 % and 81 % respectively. Based on these analyses
    it is found that the proposed GRU technique performs well compared with existing
    techniques. Download : Download high-res image (211KB) Download : Download full-size
    image Fig. 9. Comparison of (a) Accuracy (b) precision metrics for proposed and
    existing approaches. A comparison of suggested and current techniques based on
    recall metrics is represented in Fig. 10(a). GRU techniques achieved a recall
    value of 93 % and it is determined to be higher when compared to existing techniques.
    But the existing classifiers like LSTM, RNN, DNN and KNN achieved recall values
    of 88 %, 86 % 84 % and 82 % respectively. Error metrics comparison of proposed
    and existing classifiers is given in Fig. 10(b). Error values produced by existing
    classifiers are 11 %, 14 %, 18 % and 22 % for LSTM, RNN, DNN and KNN respectively.
    But the error value generated by the proposed GRU classifier is 6 %. A comparison
    of recall and error metrics demonstrates the superiority of the suggested strategy
    over the existing approaches. Download : Download high-res image (195KB) Download
    : Download full-size image Fig. 10. (a) Recall (b) Error metrics comparison for
    proposed and existing classifiers. Fig. 11(a) illustrates the specificity metrics
    comparison of proposed and existing classifiers. GRU used in the proposed approach
    reaches a 94 % specificity value. But the LSTM, RNN, DNN and KNN existing classifiers
    have a specificity value of 89 %, 87 %, 84 % and 82 % respectively. F1_Score metrics
    comparison of proposed and existing classifiers is shown in Fig. 11(b). The F1_Score
    obtained by the suggested GRU classifier is 94 %. But the existing classifiers
    have an F1_Score value of 92 %, 90 %, 88 % and 86 % for LSTM, RNN, DNN and KNN
    respectively. It demonstrates that proposed classifier outperforms existing techniques
    with respect to specificity and F1_Score. Download : Download high-res image (212KB)
    Download : Download full-size image Fig. 11. Proposed and existing techniques
    comparison using (a) Specificity. A negative Predictive Value (NPV) comparison
    for proposed and existing techniques is depicted in Fig. 12(a). NPV achieved by
    the proposed GRU is 94 %. But the existing classifiers like LSTM, RNN, DNN and
    KNN have an NPV value of 92 %, 89 %, 87 % and 83 % respectively. Fig. 12(b) represents
    the False Negative Rate (FNR) metrics comparison of proposed and existing techniques.
    FNR values observed by prior classifiers like LSTM, RNN, DNN and KNN are 12 %,
    14 %, 16 % and 18 % respectively. The proposed GRU generate 6 % of FNR value.
    It demonstrates that in terms of NPV and FNR, the proposed classifier is superior
    to those already in use. Download : Download high-res image (242KB) Download :
    Download full-size image Fig. 12. Comparison of (a) NPV (B) FNR metrics. A comparison
    of False Positive Rate (FPR) FPR metrics for proposed and existing techniques
    is illustrated in Fig. 13(a). FPR values produced by existing classifiers like
    LSTM, RNN, DNN and KNN are 11 %, 13 %, 16 % and 18 % respectively. But the FPR
    generated by the proposed GRU is 6 %. It is low when compared to the existing
    technique. Fig. 13(b) represents the Mathew Correlation Coefficient comparison
    for proposed and existing classifiers. The proposed GRU classifiers have an MCC
    value of 80 %. Existing classifiers have an MCC value of 76 % for LSTM, 71 % for
    RNN, 68 % for DNN and 65 % for KNN. It is seen that the proposed classifier has
    high MCC value than existing classifiers. The FPR and MCC results demonstrate
    that the suggested classifier performs better than the current classifier. Table
    4 illustrates the comparison of proposed weather, soil and irrigation monitoring
    system with existing state of the art methods. Download : Download high-res image
    (247KB) Download : Download full-size image Fig. 13. (a) FPR (b) MCC metrics comparison.
    Table 4. Comparison of proposed field monitoring system with existing state of
    art method. Parameter SVR + K-means (Goap et al.) ANN (Velmurugan et al.) LR +
    SVM + ANN (Rani et al.) Proposed (GRU) Accuracy 92 88 85 94 Precision 86 83 87
    93 Recall 86 83.5 87 94 F1 score 84 86 84 94 Existing state of the art method
    is simulated in our proposed designed environment and its performance is validated
    through calculating some of the metrics such as accuracy, precision recall and
    F1 score. Techniques used for comparison includes Support Vector Regression (SVR)
    + K-means clustering, Artificial Neural Network (ANN), Linear Regression + Support
    Vector Machine + Artificial Neural Network (LR + SVM + ANN). Based on this comparison
    with existing state of art methods, it is revealed that proposed model performs
    better in weather, soil and irrigation monitoring when compared to other models.
    4.3. Disease prediction Crop images (Dataset 4) acquired from sensor nodes are
    used to predict the presence of diseases and pests. The crop diseases dataset
    contains a total of 3995 images, in that 1987 images are disease affected and
    the remaining 2008 images are disease non-affected. Of these total images, 80
    % are used for training and 20 % are used for testing. The acquired crop images
    are pre-processed using Adaptive Gaussian Filter and Dynamic Histogram Equalization.
    The pre-processed image is then fed into ReNet50 for feature extraction and classification.
    Fig. 14 shows the pre-processing steps involved in the disease prediction process.
    The acquired crop image is taken as input for this step. This image is initially
    fed into adaptive median filter for removing noise present in the input image.
    The dynamic histogram equalization is carried out to enhance the contrast of image.
    The pre-processed images are then fed into the ResNet50 classifier for classification
    purposes. Download : Download high-res image (309KB) Download : Download full-size
    image Download : Download high-res image (703KB) Download : Download full-size
    image Fig. 14. Pre-processing steps used in disease prediction. The proposed disease
    prediction model''s AUC and ROC plots are shown in Fig. 15. The AUC (Area Under
    the Curve) and ROC (Receiver Operating Characteristics) curves are used to validate
    or demonstrate the effectiveness of a multi-class classification problem. The
    degree or amount of separability is represented by the AUC. In the figure, AUC
    is close to 1, so the proposed approach has a high level of separability. The
    ROC curve is a probability curve that demonstrates how effectively the model can
    be discriminated across classes. Download : Download high-res image (101KB) Download
    : Download full-size image Fig. 15. AUC and ROC plot for proposed ResNet50 approach.
    The confusion matrix plot for the proposed ResNet50 is illustrated in Fig. 16.
    It is typical to use a table called a confusion matrix to describe the performance
    of a classification model on a set of test data for which the real values are
    known. It contains two different classes like disease affected and non-affected.
    Through this plot, it is found that only fewer samples from each class are wrongly
    predicted, so the error is found to be minimal and better accuracy is achieved
    using the proposed ResNet50 classifier. Download : Download high-res image (41KB)
    Download : Download full-size image Fig. 16. Confusion matrix plot for proposed
    ResNet50. The proposed ResNet50 is compared with some existing classifiers like
    VGG19, VGG16, VGG11 and AlexNet. Performance attained using these existing techniques
    is compared with proposed ResNet50 approach. The performance metrics used to make
    a comparison between proposed and existing classifiers are accuracy, precision,
    recall, error, specificity, F1_Score, NPV, FNR and FPR. Table 5 illustrates the
    comparison between proposed and existing model. Table 5. Comparison between proposed
    and existing model. Metrics VGG19 VGG16 VGG11 ResNet 50 Accuracy 95 89 86 98 Precision
    94 88 84 98 Recall 96 90 87 98 Error 5 11 14 2 specificity 95 90 88 98 F1 score
    96 92 90 97 NPV 94 89 86 97 FNR 5 10 12 1.7 FPR 4 10 13 1.7 Accuracy metrics comparison
    of proposed ResNet50 and existing classifiers is illustrated in Fig. 17(a). The
    accuracy achieved by the proposed ResNet50 classifier for weather forecasting
    is 98 %. But the existing classifiers has accuracy value of 95 %, 89 %, 86 % and
    82 % for VGG19, VGG16, VGG11 and AlexNet respectively. When compared to current
    classifiers, the suggested classifier''s accuracy is determined to be greater.
    Precision metrics comparison of the suggested and current classifiers is shown
    in Fig. 17(b). The precision value observed by the proposed ResNet50 is 98 %.
    Prior classifiers like VGG19, VGG16, VGG11 and AlexNet are 94 %, 88 %, 84 % and
    80 % respectively. Based on this analysis, it is found that proposed ResNet50
    technique performs well compared with existing techniques. Download : Download
    high-res image (232KB) Download : Download full-size image Fig. 17. (a) Accuracy
    and (b) Precision metrics comparison. A comparison of proposed and existing techniques
    based on recall metrics is represented in Fig. 18(a). ResNet50 techniques achieved
    a recall value of 98 % and it is determined to be higher when compared to existing
    techniques. But the existing classifiers like VGG19, VGG16, VGG11 and AlexNet
    achieved recall values of 96 %, 90 % 87 % and 85 % respectively. Error metrics
    comparison of proposed and existing classifiers is given in Fig. 18(b). Error
    values produced by existing classifiers are 5 %, 11 %, 14 % and 18 % for VGG19,
    VGG16, VGG11 and AlexNet respectively. But the error value generated by proposed
    ResNet50 classifier is 2 %. A comparison of recall and error metrics demonstrates
    the superiority of the suggested strategy over the previous techniques. Download
    : Download high-res image (236KB) Download : Download full-size image Fig. 18.
    Comparison of (a) Recall (b) Error metrics. Fig. 19(a) illustrates the specificity
    metrics comparison of proposed and existing classifiers. ResNet50 used in the
    proposed approach reaches a 98 % specificity value. But the VGG19, VGG16, VGG11
    and AlexNet existing classifiers have a specificity value of 95 %, 90 %, 88 %
    and 86 % respectively. F1_Score metrics comparison of proposed and existing classifiers
    is shown in Fig. 19(b). The suggested ResNet50 classifier''s F1_Score result was
    98 %. But the current classifiers have an F1_Score value of 96 %, 92 %, 90 % and
    88 % for VGG19, VGG16, VGG11 and AlexNet respectively. It demonstrates that proposed
    classifier outperforms existing techniques with respect to specificity and F1_Score.
    Download : Download high-res image (237KB) Download : Download full-size image
    Fig. 19. (a) Specificity (b) F1_Score metrics comparison. A negative Predictive
    Value (NPV) comparison for proposed and existing techniques is depicted in Fig.
    20(a). NPV achieved by the proposed ResNet50 is 97 %. But the existing classifiers
    like VGG19, VGG16, VGG11 and AlexNet have an NPV value of 94 %, 89 %, 86 % and
    82 % respectively. Fig. 20(b) represents the False Negative Rate (FNR) metrics
    comparison of proposed and existing techniques. FNR values observed by prior classifiers
    like VGG19, VGG16, VGG11 and AlexNet are 5 %, 10 %, 12 % and 14 % respectively.
    Proposed ResNet50 generates 1 % of FNR value. It demonstrates that in terms of
    NPV and FNR, the proposed classifier is superior to those already in use. Download
    : Download high-res image (244KB) Download : Download full-size image Fig. 20.
    Comparison of (a) NPV (b) FNR metrics. A comparison of False Positive Rate (FPR)
    FPR metrics for proposed and existing techniques is illustrated in Fig. 21(a).
    FPR values produced by existing classifiers like VGG19, VGG16, VGG11 and AlexNet
    are 4 %, 10 %, 13 % and 15 % respectively. But the FPR generated by the proposed
    ResNet50 is 1 %. It is low when compared to the existing technique. According
    to this, the suggested classifier works better than the current classifier in
    terms of FPR. Mathew Correlation Coefficient (MCC) metrics comparison of proposed
    and existing classifiers is depicted in Fig. 21(b). 98 % is the MCC value obtained
    by the proposed GRU classifier. Existing classifiers such as VGG19, VGG16, VGG11
    and AlexNet has MCC value of 94 %, 90 %, 86 % and 82 % respectively. These comparison
    metrics clearly show that the proposed method is superior to existing methods.
    Download : Download high-res image (236KB) Download : Download full-size image
    Fig. 21. (a) FPR (b) MCC metrics comparison. Accuracy metrics comparison by varying
    sample sizes for proposed and existing techniques is represented in Fig. 22(a).
    The accuracy value get increases when the number sample size increases for both
    proposed and existing classifiers. But the accuracy achieved by the proposed classifier
    is high when compared to existing classifiers. Similarly, Fig. 22(b) illustrates
    the error metrics comparison for proposed and existing classifiers using different
    numbers of samples. Error value gets decreased when the number of samples increases
    for both proposed and existing classifiers. But it is shown that the error value
    generated by the proposed approach is low compared to existing classifiers. Through
    this analysis, it is suggested that the proposed approach is better than existing
    techniques. Download : Download high-res image (330KB) Download : Download full-size
    image Fig. 22. Comparison of (a) accuracy (b) error metrics by varying sample
    size. Temperature forecasting for periods of years is given in Fig. 23. Temperature
    for previous years such as 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
    2019, 2020 and 2021 is collected and the temperature for two years such as 2022
    and 2023 is forecasted. Temperature for 2022 is 24 °C and 2023 is 22 °C. Fig.
    24 illustrates forecasting of moisture content in soil based on previous year
    details. Moisture content forecasted for 2022 and 2023 is 650 Pa and 700 Pa. Through
    forecasting temperature and soil moisture content, weather forecasting for upcoming
    years can be performed effectively. Comparison between proposed crop disease prediction
    with existing state of the art method is given in Table 6. Download : Download
    high-res image (157KB) Download : Download full-size image Fig. 23. Temperature
    Forecasting based on Previous Data. Download : Download high-res image (165KB)
    Download : Download full-size image Fig. 24. Moisture Forecasting based on Previous
    Data. Table 6. Comparison between proposed and existing crop disease prediction.
    Parameter Autoencoder CNN (Aditya Khamparia et al.) DeepCNN (Krishnamoorthy et
    al.) EfficientNet B7 (Prabhjot Kaur et al.) Proposed (ResNet50) Accuracy 97.5
    95.6 95 98 Precision 83 96.5 97 98 Recall 81 96.5 92 98 F1 score 81 96 94 97 For
    this comparison study the value of the existing model is taken from the articles
    reported in literature review section and the proposed model is simulated in the
    designed environment. Through this study it is revealed that proposed model predicts
    crop leaf disease effectively when compared to existing. 4.4. Field monitoring
    The agricultural area’s temperature is first checked using a temperature sensor.
    When abnormal conditions occur like a high temperature greater than or equal to
    35 degree centigrade then the controller sends message to the owner using 19:19:19
    to spray on the leaves of small crops for 15 min to protect the crop from sun''s
    effect. Because of the sun''s heat and high temperature crop growth decrease so
    to avoid it use that fertilizer. The temperature always monitored and displayed
    on LCD which is detected by temperature sensor. When detected high moisture in
    the soil it causes root rot in crops, then this system detects moisture conditions
    and sends that information to owner to protect crop from root rot using copper
    oxychloride 3gmsspltr use at root zone of plants. When a farmer wants to switch
    on motor manually by sending message from his mobile to system with a message
    as “#M ON*” and to switch off motor when he wants then send message as “#M OFF*”.
    Again he wants a change in auto mode he sends a message from his mobile to system
    as “#AUTO*”. When the system detects that disease affected on crops and sends
    that information to the owner to protect crop from diseases by spraying fertilizer
    named as a pyrethroid. The agrobot carries the sprinkler motor which sprays the
    pesticide. It is in ON state till it moves at the end of agricultural land. 5.
    Conclusion Automated weather forecasting and field monitoring using AI based deep
    learning approach is focused in this current research. Traditional farming results
    in unhealthy crops because of poor weather and soil condition, crops affected
    through diseases and pest. To overcome these issue automated weather forecasting
    and field monitoring is essential to support farmers to produce healthy crops
    with higher yield quantity. In this current research initially, sensors are assembled
    in an agricultural field to acquire data regarding agricultural factors and transmit
    it to cloud server for further analysis purposes. The assembled nodes capture
    information regarding the temperature, soil moisture, soil nutrient and capture
    images of plants and so. In first phase, the previous collected data for weather
    forecasting was pre-processed using normalization and mean based missing value
    imputation to convert the raw data into meaningful data. Pre-processed data was
    then fed into Gated Recurrent Unit (GRU) for forecasting the temperature and soil
    moisture content for upcoming years. In the second phase, the crop images acquired
    from sensors to predict the presence of disease are pre-processed using Adaptive
    Gaussian Filter for noise removal and Dynamic Histogram Equalization to improve
    the image''s brightness. The pre-processed image was then fed to ResNet50 for
    feature extraction and classification. In the third phase, in case of any horrible
    weather conditions and soil conditions observed by these predicted data, remedial
    action will be automatically taken by the system. On the other hand, the information
    regarding the horrible conditions and in presence of pests and diseases, an alert
    message will be sent to farmers. Graphical representation proves that the proposed
    approach results are significantly better than those of existing approaches. Accuracy,
    precision, recall and specificity obtained for weather forecasting is 94 %, 94
    %, 93 % and 93 %. Following that Accuracy, precision, recall and specificity reached
    for crop disease prediction is 98 %,98 %, 98 % and 98 %. Thus, the deep learning
    techniques used in proposed approach are the best choice for automated weather
    forecasting and field monitoring to support precision agriculture. In future,
    by utilizing AI and surveillance, the field area may be kept free of intruders.
    6. Compliance with ethical standards This article is a completely original work
    of its authors; it has not been published before and will not be sent to other
    publications until the journal’s editorial board decides not to accept it for
    publication. CRediT authorship contribution statement T. Akilan: Conceptualization,
    Methodology, Writing. K.M. Baalamurugan: Review & editing, Supervision. Declaration
    of competing interest The authors declare that they have no known competing financial
    interests or personal relationships that could have appeared to influence the
    work reported in this paper. Data availability No data was used for the research
    described in the article. References Akhter and Sofi, 2022 R. Akhter, S.A. Sofi
    Precision agriculture using IoT data analytics and machine learning Journal of
    King Saud University-Computer and Information Sciences, 34 (8) (2022), pp. 5602-5618
    View PDFView articleView in ScopusGoogle Scholar Arora et al., 2021 R. Arora,
    Y. Gupta, C. Jain Automated system for monitoring smart farms International Journal
    for Modern Trends in Science and technology, 7 (5) (2021), p. 32 Google Scholar
    AshifuddinMondal and Rehena, 2018 AshifuddinMondal, M., & Rehena, Z. (2018, January).
    Iot based intelligent agriculture field monitoring system. In 2018 8th International
    Conference on Cloud Computing, Data Science & Engineering (Confluence) (pp. 625–629).
    IEEE. Google Scholar Cambra et al., 2018 C. Cambra, S. Sendra, J. Lloret, R. Lacuesta
    Smart system for bicarbonate control in irrigation for hydroponic precision farming
    Sensors, 18 (5) (2018), p. 1333 CrossRefView in ScopusGoogle Scholar Dataset 3,
    xxxx Dataset 3. https://www.soilhealth.dac.gov.in/NewHomePage/NutriReport. Google
    Scholar Dataset 4, xxxx Dataset 4. https://www.kaggle.com/datasets/vipoooool/new-plant-diseases-dataset.
    Google Scholar Dataset 1, xxxx Dataset 1. https://www.kaggle.com/datasets/pyatakov/india-agriculture-crop-production.
    Google Scholar Dataset 2, xxxx Dataset 2. https://www.kaggle.com/datasets/harshilpatel355/autoirrigationdata?select=data.csv.
    Google Scholar Daya Sagar et al., 2023 K.V. Daya Sagar, J.L. Sai, S. Sadiq, M.K.
    Prasad Smart Agricultural Solutions Through Machine Learning Embracing machines
    and humanity through cognitive computing and IoT, Springer Nature Singapore, Singapore
    (2023), pp. 41-55 CrossRefGoogle Scholar Dhal et al., 2018 K.G. Dhal, A. Das,
    N. Ghoshal, S. Das Variance based brightness preserved dynamic histogram equalization
    for image contrast enhancement Pattern Recognition and Image Analysis, 28 (2018),
    pp. 747-757 CrossRefView in ScopusGoogle Scholar Goap et al., 2018 A. Goap, D.
    Sharma, A.K. Shukla, C.R. Krishna An IoT based smart irrigation management system
    using Machine learning and open source technologies Computers and Electronics
    in Agriculture, 155 (2018), pp. 41-49 View PDFView articleView in ScopusGoogle
    Scholar Goel et al., 2021 R.K. Goel, C.S. Yadav, S. Vishnoi, R. Rastogi Smart
    agriculture–Urgent need of the day in developing countries Sustainable Computing:
    Informatics and Systems, 30 (2021), Article 100512 View PDFView articleView in
    ScopusGoogle Scholar Gunjan et al., 2022 Gunjan, V. K., Kumar, S., Ansari, M.
    D., & Vijayalata, Y. (2022). Prediction of agriculture yields using machine learning
    algorithms. In Proceedings of the 2nd international conference on recent trends
    in machine learning, IoT, smart cities and applications: ICMISC 2021 (pp. 17–26).
    Springer Singapore. Google Scholar Khanna and Kaur, 2019 A. Khanna, S. Kaur Evolution
    of Internet of Things (IoT) and its significant impact in the field of Precision
    Agriculture Computers and electronics in agriculture, 157 (2019), pp. 218-231
    View PDFView articleView in ScopusGoogle Scholar Khamparia et al., 2020 A. Khamparia,
    G. Saini, D. Gupta, A. Khanna, S. Tiwari, V.H.C. de Albuquerque Seasonal crops
    disease prediction and classification using deep convolutional encoder network
    Circuits, Systems, and Signal Processing, 39 (2020), pp. 818-836 CrossRefView
    in ScopusGoogle Scholar Krishnamoorthy et al., 2021 N. Krishnamoorthy, L.N. Prasad,
    C.P. Kumar, B. Subedi, H.B. Abraha, V.E. Sathishkumar Rice leaf diseases prediction
    using deep neural networks with transfer learning Environmental Research, 198
    (2021), Article 111275 Google Scholar Karthick & Muthukumaran, 2023 S. Karthick,
    N. Muthukumaran Deep regression network for single-image super-resolution based
    on down-and upsampling with RCA blocks National Academy Science Letters (2023),
    pp. 1-5, 10.1007/s40009-023-01353-5 Google Scholar Karthick & Muthukumaran, 2023
    S. Karthick, N. Muthukumaran October). Deep regression network for the single
    image super resolution of multimedia text image 2023 IEEE 5th international conference
    on cybernetics, cognition and machine learning applications (ICCCMLA), IEEE (2023),
    pp. 394-399 CrossRefView in ScopusGoogle Scholar Karthick, Sankar, & Prathab,
    2018 S. Karthick, S.P. Sankar, T.R. Prathab July). An approach for image encryption/decryption
    based on quaternion Fourier transform International Conference on Emerging Trends
    and Innovations In Engineering And Technological Research (ICETIETR), IEEE (2018),
    pp. 1-7 CrossRefGoogle Scholar Kaur et al., 2022 P. Kaur, S. Harnal, R. Tiwari,
    S. Upadhyay, S. Bhatia, A. Mashat, A.M. Alabdali Recognition of leaf disease using
    hybrid convolutional neural network by applying feature reduction Sensors, 22
    (2) (2022), p. 575 CrossRefView in ScopusGoogle Scholar Lavanya et al., 2020 G.
    Lavanya, C. Rani, P. GaneshKumar An automated low cost IoT based Fertilizer Intimation
    System for smart agriculture Sustainable Computing: Informatics and Systems, 28
    (2020), Article 100300 Google Scholar Li et al., 2020 F. Li, Z. Gui, Z. Zhang,
    D. Peng, S. Tian, K. Yuan, Y. Lei A hierarchical temporal attention-based LSTM
    encoder-decoder model for individual mobility prediction Neurocomputing, 403 (2020),
    pp. 153-166 View PDFView articleView in ScopusGoogle Scholar Ogunti, 2019 E. Ogunti
    IoT based crop field monitoring and irrigation automation system IJISET-International
    Journal of Innovative Science, Engineering & Technology, 6 (3) (2019), pp. 124-129
    Google Scholar Panda and Bhatnagar, 2020 C.K. Panda, R. Bhatnagar Social internet
    of things in agriculture: An overview and future scope Toward Social Internet
    of Things (SIoT): Enabling Technologies, Architectures and Applications: Emerging
    Technologies for Connected and Smart Social Objects (2020), pp. 317-334 CrossRefView
    in ScopusGoogle Scholar Phasinam et al., 2022 K. Phasinam, T. Kassanuk, P.P. Shinde,
    C.M. Thakar, D.K. Sharma, M.K. Mohiddin, A.W. Rahmani Application of IoT and cloud
    computing in automation of agriculture irrigation Journal of Food Quality, 2022
    (2022), pp. 1-8 CrossRefGoogle Scholar Quach et al., 2021 Quach, C. H., Pham,
    M. T., Nguyen, T. S., & Phung, M. D. (2021). Real-time agriculture field monitoring
    using IoT-based sensors and unmanned aerial vehicles. In 2021 8th NAFOSTED conference
    on information and computer science (NICS) (pp. 492–497). IEEE. Google Scholar
    Rani et al., 2020 Rani, D. S., Jayalakshmi, G. N., & Baligar, V. P. (2020). Low
    cost IoT based flood monitoring system using machine learning and neural networks:
    flood alerting and rainfall prediction. In 2020 2nd international conference on
    innovative mechanisms for industry applications (ICIMIA) (pp. 261–267). IEEE.
    Google Scholar Sai Surya Teja et al., 2023 T. Sai Surya Teja, G. Venkata Hari
    Prasad, I. Meghana, T. Manikanta Publishing temperature and humidity sensor data
    to ThingSpeak Embracing machines and humanity through cognitive computing and
    IoT, Springer Nature Singapore, Singapore (2023), pp. 1-9 CrossRefGoogle Scholar
    Siddiquee et al., 2022 K.N.E.A. Siddiquee, M.S. Islam, N. Singh, V.K. Gunjan,
    W.H. Yong, M.N. Huda, D.B. Naik Development of algorithms for an IOT-based smart
    agriculture monitoring system Wireless Communications and Mobile Computing, 2022
    (2022), pp. 1-16 CrossRefGoogle Scholar Singh et al., 2019 Singh, G., Sharma,
    D., Goap, A., Sehgal, S., Shukla, A. K., & Kumar, S. (2019). Machine Learning
    based soil moisture prediction for Internet of Things based Smart Irrigation System.
    In 2019 5th international conference on signal processing, computing and control
    (ISPCC) (pp. 175–180). IEEE. Google Scholar Sushanth and Sujatha, 2018 Sushanth,
    G., & Sujatha, S. (2018). IOT based smart agriculture system. In 2018 International
    conference on wireless communications, signal processing and networking (WiSPNET)
    (pp. 1–4). IEEE. Google Scholar Thakur et al., 2020 D. Thakur, Y. Kumar, S. Vijendra
    Smart irrigation and intrusions detection in agricultural fields using IoT Procedia
    Computer Science, 167 (2020), pp. 154-162 View PDFView articleView in ScopusGoogle
    Scholar Theckedath and Sedamkar, 2020 D. Theckedath, R.R. Sedamkar Detecting affect
    states using VGG16, ResNet50 and SE-ResNet50 networks SN Computer S (2020) Google
    Scholar Toğaçar et al., 2020 M. Toğaçar, B. Ergen, Z. Cömert, F. Özyurt A deep
    feature learning model for pneumonia detection applying a combination of mRMR
    feature selection and machine learning models Irbm, 41 (4) (2020), pp. 212-222
    View PDFView articleView in ScopusGoogle Scholar Velmurugan, 2020 Velmurugan,
    S. (2020). An IOT based smart irrigation system using soil moisture and weather
    prediction. Google Scholar Xu et al., 2018 C. Xu, J. Shen, X. Du, F. Zhang An
    intrusion detection system using a deep neural network with gated recurrent units
    IEEE Access, 6 (2018), pp. 48697-48707 CrossRefView in ScopusGoogle Scholar Cited
    by (0) View Abstract © 2024 Elsevier Ltd. All rights reserved. Recommended articles
    Exploring explainable artificial intelligence techniques for evaluating cervical
    intraepithelial neoplasia (CIN) diagnosis using colposcopy images Expert Systems
    with Applications, Volume 249, Part A, 2024, Article 123579 Elima Hussain, …,
    Saswati S. Choudhury View PDF Nonparametric estimation and forecasting of interval-valued
    time series regression models with constraints Expert Systems with Applications,
    Volume 249, Part A, 2024, Article 123385 Yuying Sun, …, Shouyang Wang View PDF
    Freight rate index forecasting with Prophet model based on multi-dimensional significant
    events Expert Systems with Applications, Volume 249, Part A, 2024, Article 123451
    Wenyang Wang, …, Peng Jia View PDF Show 3 more articles Article Metrics Captures
    Readers: 8 View details About ScienceDirect Remote access Shopping cart Advertise
    Contact and support Terms and conditions Privacy policy Cookies are used by this
    site. Cookie settings | Your Privacy Choices All content on this site: Copyright
    © 2024 Elsevier B.V., its licensors, and contributors. All rights are reserved,
    including those for text and data mining, AI training, and similar technologies.
    For all open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Expert Systems with Applications
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Automated weather forecasting and field monitoring using GRU-CNN model along
    with IoT to support precision agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Elewi A.
  - Hajhamed A.
  - Khankan R.
  - Duman S.
  - Souag A.
  - Ahmed A.
  citation_count: '0'
  description: 'Mushrooms are a nutritious food source, which can play a crucial role
    in providing affordable sources of proteins, vitamins and minerals for people
    worldwide, but their cultivation requires extensive training and considerable
    relevant expertise in order to fine-tune multiple environmental parameters. Internally
    displaced people in the Northern regions of Syria rely on very small-scale traditional
    oyster mushroom production, which cannot meet their local demand. Many international
    and local non-governmental organizations (NGOs) working for Syrian refugees, work
    on mushroom cultivation projects. They have reported significant difficulties
    and challenges in mushroom cultivation amongst the targeted beneficiaries. Therefore,
    the two main questions driving this research are: (1) How can organic mushroom
    cultivation be promoted using a robust and affordable intelligent mushroom farming
    system? (2) How can organic mushroom farming practices be simplified to support
    internally displaced and refugee Syrians? This research evaluates the process
    of automating mushroom cultivation by designing and implementing a smart oyster
    (Pleurotus ostreatus) mushroom farming system to remotely monitor and manage environmental
    parameters, such as temperature, humidity, air quality and illumination, inside
    the farm. Furthermore, ready and dedicated user-friendly web interfaces were also
    implemented to enable farmers to remotely monitor and manage their farms through
    the Internet. As a result, a dependable and cost-effective intelligent oyster
    mushroom cultivation system was designed and implemented in this work. The system
    includes remote monitoring and management via user-friendly interfaces. This simplifies
    mushroom cultivation for not only refugees and displaced communities, but also
    for mushroom farmers in low-income countries. This work can contribute to the
    eradication of poverty and hunger, in line with the United Nations Sustainable
    Development Goals one and two.'
  doi: 10.1016/j.atech.2024.100439
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods
    3. Results analysis and discussion 4. Conclusion Ethics statement Funding CRediT
    authorship contribution statement Declaration of competing interest Acknowledgement
    Appendix. Supplementary materials Data availability References Show full outline
    Figures (23) Show 17 more figures Tables (1) Table 1 Extras (1) Supplement Smart
    Agricultural Technology Volume 8, August 2024, 100439 Design and implementation
    of a cost-aware and smart oyster mushroom cultivation system Author links open
    overlay panel Abdullah Elewi a, Abdulsalam Hajhamed b, Rasheed Khankan c, Sonay
    Duman a, Amina Souag d, Asma Ahmed e Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.atech.2024.100439
    Get rights and content Under a Creative Commons license open access Highlights
    • Development of an affordable intelligent oyster mushroom cultivation system.
    • Simplification of mushroom cultivation by remote monitoring and management.
    • Support for vulnerable farmers with a sustainable source of income and good
    nutrition. • Consideration of different system varieties with affordable cost
    ranges. • Utilization of user-friendly interfaces for remote monitoring and management.
    Abstract Mushrooms are a nutritious food source, which can play a crucial role
    in providing affordable sources of proteins, vitamins and minerals for people
    worldwide, but their cultivation requires extensive training and considerable
    relevant expertise in order to fine-tune multiple environmental parameters. Internally
    displaced people in the Northern regions of Syria rely on very small-scale traditional
    oyster mushroom production, which cannot meet their local demand. Many international
    and local non-governmental organizations (NGOs) working for Syrian refugees, work
    on mushroom cultivation projects. They have reported significant difficulties
    and challenges in mushroom cultivation amongst the targeted beneficiaries. Therefore,
    the two main questions driving this research are: (1) How can organic mushroom
    cultivation be promoted using a robust and affordable intelligent mushroom farming
    system? (2) How can organic mushroom farming practices be simplified to support
    internally displaced and refugee Syrians? This research evaluates the process
    of automating mushroom cultivation by designing and implementing a smart oyster
    (Pleurotus ostreatus) mushroom farming system to remotely monitor and manage environmental
    parameters, such as temperature, humidity, air quality and illumination, inside
    the farm. Furthermore, ready and dedicated user-friendly web interfaces were also
    implemented to enable farmers to remotely monitor and manage their farms through
    the Internet. As a result, a dependable and cost-effective intelligent oyster
    mushroom cultivation system was designed and implemented in this work. The system
    includes remote monitoring and management via user-friendly interfaces. This simplifies
    mushroom cultivation for not only refugees and displaced communities, but also
    for mushroom farmers in low-income countries. This work can contribute to the
    eradication of poverty and hunger, in line with the United Nations Sustainable
    Development Goals one and two. Previous article in issue Next article in issue
    Keywords Mushroom cultivationSmart farmingSmart agricultureRemote monitoring and
    management (RMM)Internet of Things (IoT)ThingSpeak™ 1. Introduction Mushrooms
    are a valuable food source, rich in proteins, fibre, antioxidants, and a variety
    of vitamins and minerals. However, their cultivation requires extensive training
    and considerable relevant expertise in order to fine-tune multiple environmental
    parameters [8]. These parameters are heat, humidity, illumination, and ventilation,
    and they should be controlled precisely for successful mushroom cultivation. Otherwise,
    the mushroom yield will be adversely affected or contaminated. The tragic conflict
    in Syria during the last decade caused the migration of many skilled farmers and
    a great loss of cultivated territories. Furthermore, the COVID-19 pandemic and
    its resulting international economic crises, such as supply chain crisis, have
    exacerbated these bad situations, threatening food security and adequate nutrition
    sources. Many Syrian refugees in neighbouring countries are working in agriculture
    and are involved in small/medium-scale mushroom production industry. For example,
    a large number of mushroom farms are operated by Syrian refugees in Turkey, where
    the total Turkish mushroom production was 55,455 tons in 2020 [19]. An 85 m2 mushroom
    oyster farm/greenhouse with a capacity of 1000×10-kg bags in Turkey can produce
    about 2700–3000 kg of mushroom every cycle. On the other hand, internally displaced
    Syrians in the Northern regions of Syria rely on very small-scale traditional
    mushroom production, which cannot meet their local demand. For example, a 3 ×
    4 m2 conventional oyster mushroom farm in these regions can produce about 300–400
    kg every cycle. Moreover, imported mushrooms are not readily available and would
    be unaffordable. To the best of our knowledge, no accurate statistics are available
    for the Syrian mushroom industry. Many international and local Non-Governmental
    Organizations (NGOs), such as the International Agricultural Cooperation Organization
    (IACO) and Shafak, working for Syrian refugees, have mushroom cultivation projects.
    They have reported significant difficulties and challenges in mushroom cultivation
    amongst the targeted beneficiaries, mostly housewives, even after providing them
    with materials and preliminary training, due to the complexities of controlling
    the environment [5]. These difficulties and challenges result in high failure
    rates amongst insufficiently experienced growers when trying to handle the multiple
    interfering environmental factors affecting and contaminating mushrooms. These
    reasons were the motivation behind this study to design and implement a smart,
    affordable mushroom cultivation system, which simplifies the mushroom production
    process for organic mushroom farmers, especially for internally displaced and
    refugee Syrians. Smart farming generally utilizes various information and communication
    technologies (ICT) [21] for sustainable agriculture to save resources and improve
    the efficiency and the yield of the farm through remote monitoring and management
    [22]. Many recent surveys [1,6,7] have reviewed smart agriculture techniques,
    opportunities and challenges for various types of agriculture and crops. For mushroom
    cultivation, traditional methods have been used for a long time, but incorporating
    state-of-the-art technologies for monitoring and controlling the cultivation process
    has been recently investigated. Smart technologies were introduced to mushroom
    cultivation quite recently, especially for small and medium-scale mushroom production.
    Angral and Thakur [2] classified current mushroom-growing systems into Programmable
    Logic Controller- (PLC)-based, microcontroller-based and IoT-based systems. However,
    this paper did not illustrate either the IoT platform or the data acquisition
    tools used for this work. Thong-un and Wongsaroj [17] used smart wireless industrial
    PLC for wireless monitoring, controlling, and propagating information to a database
    in order to enhance oyster mushroom productivity in Thailand. The wireless PLC
    node reads the different environmental parameters, such as temperature and humidity,
    through sensors to control spraying, water sprinkles and cooling fans. Onsite
    and remote monitoring and control of the mushroom farming system were available
    through onsite human-machine interface (HMI) screens or web applications. The
    system architecture, components, and working method are well explained and illustrated,
    but the effect of carbon dioxide (CO2) and air quality inside the mushroom farm
    was not discussed in this work. Another similar system was developed in Malaysia
    by Ten et al. [16] for an automated controlled environment mushroom house (CEMH)
    using remote terminal unite, ADAM-3600, internet of things (IoT) technologies
    and different sensors for temperature, humidity, light and CO2. These two systems
    have proven to be dependable industrial systems, but their cost is relatively
    high. Similar industrial systems for automating a one-room mushroom farm could
    cost about $1500-$2000 in Turkey, excluding the set-up and online software costs
    of the system. Other cost-efficient solutions using inexpensive microcontrollers
    and sensors are also available. Some of these systems [10,11,14,15] were only
    used for monitoring the mushroom farm, while others [8,12] provided remote monitoring
    in addition to management and control of the farm. Inexpensive off-the-shelf sensors
    were utilized for humidity, temperature, CO2 and light, such as DHT11, DHT22,
    LM35, MQ135 and BH1750 sensors. The NodeMCU (ESP8266) was mostly used for connecting
    to the internet, while Arduino platforms were mostly utilized as controllers.
    Existing software products, such as Blynk and ThingSpeak, were mostly used for
    remote access and monitoring. The main problem with such inexpensive systems,
    which could cost about $100-$150, is related to dependability as most of these
    proposed systems were not tested in real environments. Conversely, He et al. [4]
    constructed not only the remote monitoring and management (RMM) system but also
    the whole mushroom cultivation farm in a dedicated container with 3 m x 3 m x
    9 m dimensions. They built a Controlled Environment Agriculture (CEA) system to
    provide fresh crops in urban areas, but they did not take the cost and yield of
    such container farms into account. Recently, emerging technologies of computer
    vision (CV) and machine learning (ML) have been used in mushroom cultivation for
    different purposes, such as the classification of mushroom spawn quality [18]
    and mushroom caps measurement [9]. Yin et al. [20] have surveyed different computer
    vision and machine learning technologies used in the mushroom industry reviewing
    related papers between 1991 and 2021. Recent related research [12] has implemented
    a mushroom automation system using a sensing module (BME260) for humidity and
    temperature, ESP8266 for wireless connection and ESP32 SoC as a controller, which
    gets the environmental parameters from the sensing module to control the mushroom
    farm automation. They also utilized a camera module with machine learning algorithms
    implemented on Raspberry Pi for classifying toxic mushrooms. Thus, the existing
    mushroom cultivation systems are either expensive industrial systems or unreliable
    inexpensive ones. Additionally, CV and ML technologies have shown promise in smart
    mushroom cultivation and could provide extra functionalities, such as disease
    detection, yield prediction, growth analysis and cost/power efficiency, if edge
    computing (EC) and digital twinning were included to provide an affordable dependable
    mushroom cultivation system with full remote access and monitoring [20]. Against
    this backdrop, the goal of this study was to deploy state-of-the-art emerging
    technologies, such as the Internet of Things (IoT) and Artificial Intelligence
    (AI) techniques, for acquiring and analysing data from different sensors and cameras
    to remotely monitor and control the environmental conditions inside the mushroom
    farm, and for future research on growth analysis and disease detection problems.
    The main contributions of this paper include designing and implementing three
    different sensing nodes with different costs, in addition to two different control
    nodes to be affordable for various mushroom farmers. Furthermore, simple web and
    desktop user-friendly interfaces were implemented to facilitate the remote monitoring
    and management of the farm. Finally, an analysis of sensing node readings and
    obtained results has been made. 2. Materials and methods The proposed mushroom
    cultivation system can generally be divided into three main layers shown in Fig.
    1: The first layer is the monitoring/controlling physical layer, which is composed
    of sensors for environmental data acquisition, such as temperature, humidity,
    soil/composite temperature, composite moisture, air quality, CO2, illuminance,
    and cameras. Besides the sensors, there are actuators for controlling the different
    devices of the farm, such as air conditioners, humidifiers, sprinklers, extractor
    fans, and circulating fans. The second layer is composed of the edge boards, which
    regulate the data acquisition process and perform the required processing for
    precise and efficient controlling of the farm actuators. At the same time, they
    provide a connection to the cloud which constitutes the third layer of the proposed
    system, where different types of data ultimately exist. Download : Download high-res
    image (399KB) Download : Download full-size image Fig. 1. General architecture
    of smart mushroom cultivation system. The system is designed on the assumption
    that the farm is equipped with the necessary devices and infrastructure for oyster
    mushroom cultivation. Additionally, an electrical power source and internet access
    were available at the farm. In a situation where this may not be the case, alternative
    power and internet solutions will be required for the system to be implemented.
    For example, in off-grid rural areas, alternative power sources such as solar
    energy systems can be used to provide electricity, as is commonly done in off-grid
    areas in Northern Syria nowadays. To access the internet, mobile and satellite
    internet connections can be used. Fig. 2 shows a more specific block diagram of
    the proposed system, which is composed of sensors, actuators, and microcontrollers
    connected to an IoT platform. The sensors are used for monitoring the main environmental
    parameters, such as temperature, relative humidity, composite temperature, composite
    moisture, air quality, CO2, and illuminance. Besides, different cameras are utilized
    for monitoring the farm and capturing images to be used in future research for
    growth analysis using AI and ML techniques. Actuators manage and control the farm
    devices, such as air conditioners, humidifiers, and fans. Furthermore, the system
    utilizes ThingSpeak as an IoT platform for remote monitoring and management. Download
    : Download high-res image (356KB) Download : Download full-size image Fig. 2.
    Mushroom cultivation system block diagram. The proposed system was implemented
    and tested in a local oyster mushroom farm in Mersin, on Turkey''s Mediterranean
    coast. Generally, the climate is mild and wet in winter, with temperatures ranging
    between 8 and 15 °Celsius, and it becomes hot and humid in summer, with temperatures
    around 30 °Celsius. The farm has 14×7 m2 area and a maximum capacity of 1000 of
    10-kg mushroom bags, on its 4-storey shelves. Different types of sensing nodes
    were implemented and tested in the farm. The experiments were conducted for two
    cultivation cycles starting from late December 2022 until late April 2023. Different
    free IoT platforms, such as Blynk, Arduino IoT and ThingSpeak, were trialled.
    Blynk and Arduino IoT platforms offer user-friendly platforms with very limited
    capabilities for the free version. However, a free account on the ThingSpeak platform
    provides higher capabilities and allows 10 million messages a year with 3 years
    of data storage. ThingSpeak permits instant visualizations of data posted by the
    farm sensors, such as temperature, relative humidity, and soil moisture data,
    which can be remotely monitored. Additionally, it shows the On/Off status of remotely
    controlled devices, and can perform data analysis and processing with all MATLAB™
    capabilities. Thus, it can present an efficient IoT system for the mushroom farm
    without the need to set up servers or develop dedicated web software. All of these
    made ThingSpeak more preferable for the system addressed here. 2.1. Sensing nodes
    To provide remote monitoring of the farm, various types of sensors with different
    prices and capabilities were trialled. Two different temperature/humidity sensors
    were utilized: DHT21 and SHT20, which measure the relative humidity and temperature
    of the farm. The DS18B20 was the most suitable choice for measuring the composite
    temperature inside mushroom bags because of its thermocouple principle and well
    insulation. For composite moisture, the two tested types are capacitive and resistive
    moisture sensors. For air quality and CO2 measuring, three different types of
    sensors, SGP30, CCS811, and MH-Z19, were trialled. Finally, the BH1750 was used
    as an illuminance sensor. Another important component for these sensors to work
    is the microcontroller boards which regulate the data acquisition process from
    sensors, and perform the required calculations for precise controlling of the
    actuators. Since one of the main targets was the design and implementation of
    an affordable monitoring/control system, the most appropriate microcontrollers
    were ESP8266 and ESP32 due to their affordable price and available capabilities,
    such as Bluetooth, Wi-Fi and I2C. The cost of the proposed system was a critical
    consideration in the project due to targeted users, refugees and displaced communities.
    Therefore, three different sensing nodes with low, medium and high costs were
    designed and implemented (Fig. 3, Fig. 4, Fig. 5) in order to compare their performance
    to choose the most appropriate product at an affordable cost. Every sensing node
    was associated with a ThingSpeak channel to monitor the sensor readings instantly
    in addition to saving historical sensor data to be analysed later. The prices
    of all utilized components in this study are offered in Table 1 according to 2023
    prices in Turkey, including 20 % value-added tax. Download : Download high-res
    image (284KB) Download : Download full-size image Fig. 3. Lowest-cost sensing
    node. Table 1. Utilized component prices. Component Price ($) NodeMCU ESP 8266
    board 4.90 ESP32 WROOM 32D board 7.22 DHT21 Temperature/humidity sensor 3.87 SHT20
    Temperature/humidity sensor 33.51 DS18B20 Composite temperature sensor 1.29 Capacitive
    moisture sensor 1.03 HD38 Resistive moisture sensor 7.09 SGP30 Air quality sensor
    11.86 CSS811 Air quality sensor 34.89 BH1750 Light sensor 1.37 LM2596 DC-to-DC
    converter 0.89 4-channel AC dimmer module 29.06 4-channel relay module 2.45 Solid
    state relay (SSR) 2.76 AMS1117 3.3 V voltage regulator module 0.49 AC-DC voltage
    adaptor 4.28 Plastic container 0.4 The lowest-cost sensing node consists of a
    microcontroller board and three sensors shown in Fig. 3. This node contains the
    NodeMCU ESP8266 development board, which is the cheapest amongst the family of
    microcontrollers that can connect to the Internet. It also contains the minimum
    number of general input/output pins (GPIOs) that can operate the sensors necessary
    to read environmental parameters. It contains one analogue input which enables
    us to read the analogue value of the capacitive soil moisture sensor. Also, we
    can easily connect the composite temperature sensor DS18B20 which works on 1-wire
    protocol and the DHT21 temperature/humidity sensor which works also on 1-wire
    protocol. We utilized a DC-to-DC converter (LM2596) to provide more accurate voltage
    values for sensors from a voltage adaptor. The node worked well with a margin
    of inaccuracy, especially with high humidity values. Fig. 3 shows the detailed
    schematic diagram that shows how these three sensors are connected, and to which
    pins, for the lowest-cost sensing node. Furthermore, all source code files and
    an instructional document are also provided as supplementary material. The medium-cost
    node, illustrated in Fig. 4, consists of ESP32 WROOM 32D as a development board,
    DHT21 as a temperature/humidity sensor, DS18B20 as a soil temperature sensor,
    capacitive soil moisture sensor, BH1750 ambient light sensor, and the SGP30 CO2
    sensor. The ESP32 WROOM 32D has more GPIOs than the ESP8266 development board,
    especially analogue inputs. Furthermore, this development board contains GPIOs
    pins for I2C protocol that deal with the I2C sensors easily, such as the ambient
    light sensor BH1750. The CO2 sensor, SGP30, has a moderate accuracy of about 15
    %, but it is acceptable as an indicator of CO2 level for the mushroom farm. Fig.
    4 shows the detailed schematic diagram of this sensing node, where a DC-to-DC
    converter (LM2596) has also been used to provide more accurate supply voltage
    values for the sensors. Download : Download high-res image (627KB) Download :
    Download full-size image Fig. 4. Medium-cost sensing node. Finally, the highest-cost
    sensing node shown in Fig. 5 consists of ESP WROOM 32 as a development board,
    voltage regulator, SHT20 as a trustworthy temperature/humidity sensor that uses
    I2C protocol, DS18B20, HD-38 resistive soil moisture, and CSS811 for estimating
    CO2 (eCO2) and Total Volatile Organic Compounds (tVOC). The SHT20 has high quality
    and it is water-proof and works on I2C protocol. The CO2 sensor CSS811 is also
    of high quality and works on I2C protocol. The schematic diagram of the highest-cost
    sensing node with detailed pin numbers is shown in Fig. 5. Download : Download
    high-res image (629KB) Download : Download full-size image Fig. 5. Highest-cost
    sensing node. The previous three varieties for sensing nodes were designed and
    implemented to offer different choices for mushroom farmers of different scales
    starting from very small-scale refugee farmers up to medium- and high-scale farmers.
    Lowest, medium and highest-cost sensing nodes cost about $17, $33 and $90, respectively
    (Fig. 6), according to 2023 prices in Turkey where the experiments were conducted.
    All provided costs include also the cost of a voltage adaptor for every node.
    Download : Download high-res image (54KB) Download : Download full-size image
    Fig. 6. Costs of sensing nodes. 2.2. Control nodes For the control and management
    section of the farm, two different control nodes were designed and implemented,
    and a ThingSpeak channel was assigned for every control node. Fig. 7 shows the
    basic control node, which meets the minimum needs of a simple mushroom farm at
    an affordable price. Fig. 8 shows the more advanced one for a mushroom farm with
    high specifications that can control up to seven DC and AC devices. Download :
    Download high-res image (351KB) Download : Download full-size image Fig. 7. Basic
    control node. Download : Download high-res image (507KB) Download : Download full-size
    image Fig. 8. Advanced control node. Starting with the first basic control circuit,
    which controls three devices necessary for a mushroom farm: a humidifier, an air
    circulation fan, and an extractor fan. As shown in Fig. 7, an ESP8266 microcontroller,
    a 4-channel relay module and voltage regulators were utilized. The advanced control
    node can control more devices that could exist in a larger mushroom farm, which
    includes: an air conditioner, a humidifier, lights, two air circulation fans,
    and two extractor fans as shown in Fig. 8. The most reliable electric control
    elements for the air conditioner, humidifier, and light are solid-state relays
    (SSRs) because they provide complete isolation between the output of the microcontroller
    and the input of the high- current/voltage devices. For the four air fans, the
    solid-state relays can also be used, but to control the speed of the fans a 4-channel
    alternating current (AC) dimmer module was added to respond better to the operation
    of other devices, such as air conditioner and humidifier. Five different speeds,
    in addition to the Off state, were supported as follows: 0, 20, 40, 60, 80, and
    100 % of the maximum speed for each fan. Finally, a cost comparison was made between
    the basic control node (about $14) and the advanced control node (about $49) as
    illustrated in Fig. 9. With simple technical help, the farmers can choose the
    most suitable nodes to implement in their farms with costs starting from about
    $30 for the two simplest sensing and control nodes. Also, it is worth mentioning
    that suitable packaging for the nodes is necessary to prevent high humidity from
    adversely affecting the boards. This can be done simply using affordable plastic
    food storage containers with secure closures. Download : Download high-res image
    (49KB) Download : Download full-size image Fig. 9. Control nodes costs. 2.3. Application
    user interface Every sensing or control node has been associated with a ThingSpeak
    channel for saving the node data. For control nodes, a web page that can be accessed
    using any smartphone, tablet, or any personal computer, was developed to allow
    farmers to control the mushroom farm devices in a convenient way. Additionally,
    a MATLAB application was also developed for controlling farm devices for professional
    users. The user interface is simple and user-friendly, where the farmer can select
    any device to turn it On or Off with simple indicators and history of the control
    commands for the MATLAB application. Fig. 10 shows the web page (a) and MATLAB
    application (b) of the basic control node. Two successive control commands should
    be separated by at least 15 s to ensure proper update and operation of the ThingSpeak
    channel. The user interfaces can also be integrated with ThingSpeak to save and
    monitor current and historical data related to the state of the controlled device.
    Download : Download high-res image (277KB) Download : Download full-size image
    Fig. 10. Basic control node user interfaces (a) Web page (b) MATLAB application.
    The same is true for the advanced control circuit that also has user interfaces
    as a web page and a MATLAB application, as shown in Fig. 11(a) and (b), respectively.
    Download : Download high-res image (380KB) Download : Download full-size image
    Fig. 11. Advanced control node user interfaces (a) Web page (b) MATLAB application.
    Fig. 12 illustrates that the MATLAB application also support reading the data
    of the sensing nodes, Fig. 12(a), and controlling the devices using the control
    node. It can read the current status of all connected devices to the control node,
    such as air conditioner, humidifier, luminance, the two air circulation fans,
    and the two extractor fans, Fig. 12(b). It has been taken into account that the
    control panel is as simple as possible and contains all the necessary tabs in
    order to control all devices in the mushroom farm, in addition to monitoring sensor
    data. Download : Download high-res image (294KB) Download : Download full-size
    image Fig. 12. MATLAB application user interfaces (a) sensor data reading (b)
    control data reading. 2.4. Cloud and IoT platform The last part of our proposed
    system is the utilized cloud or IoT platform. Many IoT platforms have been trialled
    to adopt ThingSpeak, Fig. 13, as an IoT platform to aggregate, visualize and analyse
    live data streams in the cloud. The main advantage of the usage of the ThingSpeak
    platform is providing instant visualizations of data posted by sensors and devices
    in addition to historical data storage. Additionally, ThingSpeak supports all
    analysis and visualization capabilities of MATLAB, and it can be integrated with
    other websites easily. For example, a dedicated website was designed to provide
    a user interface for farmers to read the sensor values and control the devices
    on the farm. The farmer can access the farm dashboard through ThingSpeak directly
    or through a registered account on the website, connected with ThingSpeak, using
    a username and password to assure privacy and guarantee security. Fig. 14 shows
    the farm dashboard accessed remotely and securely. Also, the website interfaces
    have been designed to support different devices such as smartphones, tablets and
    personal computers. Download : Download high-res image (127KB) Download : Download
    full-size image Fig. 13. ThingSpeak IoT platform. Download : Download high-res
    image (426KB) Download : Download full-size image Fig. 14. Website interface with
    farmer dashboard. 3. Results analysis and discussion Sensor data in addition to
    camera images were collected and saved successfully. Data related to relative
    humidity, temperature, the composite temperature inside the mushroom bag, moisture
    inside the bag and CO2 were collected successfully for two cultivation cycles.
    In the second cycle, the number of parameters were increased and most of the technical
    issues faced in the first cycle were overcome. More than 66,000 one-minute measurements
    were collected and saved for the second cycle. For both cycles, the number exceeds
    3,90,000 for 20-second measurements. Furthermore, a data set containing more than
    700 farm images and 500 videos, was also built successfully. Fig. 15 shows the
    Arduino IoT platform with the instant values of four monitored variables: temperature,
    relative humidity, temperature inside bag, and moisture, with only one-day data
    storage and visualization in the first agricultural cycle. Arduino IoT platform
    supports different computing devices from PCs, tablets and smartphones, but for
    free accounts only two things/nodes with a maximum of four variables for each
    can be connected and one-day data storage and visualization are available. On
    the other hand, a ThingSpeak free account supports four channels/nodes with much
    more storage, analysis and visualization capabilities. Each channel supports up
    to eight different fields/variables of data. Fig. 16 shows two fields of a ThingSpeak
    channel that show the instant and hourly monitored temperature and relative humidity
    values of an SHT20 sensor connected to a sensing node, which is associated with
    this channel and reads sensor values every minute. The hourly graphs clearly illustrate
    fluctuations of the sensor values due to the working pattern of the extractor
    fans, which were adjusted by the farmer to work when the temperature exceeds 19
    °Celsius and stop when under 19 °C to keep the farm temperature around 19 °C.
    Download : Download high-res image (296KB) Download : Download full-size image
    Fig. 15. Arduino IoT platform interface (23 Jan 2023). Download : Download high-res
    image (390KB) Download : Download full-size image Fig. 16. ThingSpeak IoT platform
    interface of SHT sensor (25 Mar 2023). Similar fluctuations caused by the working
    pattern of the extractor fans can also be seen for the CSS811 air-quality sensor,
    which measures estimated CO2, eCO2, and tVOC as shown in Fig. 17. Download : Download
    high-res image (374KB) Download : Download full-size image Fig. 17. ThingSpeak
    IoT platform interface of CSS sensor (25 Mar 2023). The lower-cost DHT21 sensor
    (Fig. 18), showed similar fluctuations with temperature values (18.5 °C - 18.7
    °C) and relative humidity values (75.2 % - 76.7 %) compared to the temperature
    values (18.8 °C −19.05 °C) and relative humidity values (69.2 % - 70.7 %) of the
    higher-cost dependable SHT20 sensor. Larger differences in relative humidity values
    between the two sensors were observed with higher humidity values. Download :
    Download high-res image (393KB) Download : Download full-size image Fig. 18. ThingSpeak
    IoT platform interface of DHT21 sensor (25 Mar 2023). Regarding the lower-cost
    air-quality SGP30 sensor, Fig. 19, similar fluctuations due to the working style
    of extractor fans were also noted but with higher differences in values when compared
    to the higher-cost CSS811 sensor. Download : Download high-res image (389KB) Download
    : Download full-size image Fig. 19. ThingSpeak IoT platform interface of SGP30
    sensor (25 Mar 2023). Furthermore, ThingSpeak offers more powerful data analysis
    tools, as MATLAB scripts, visualizations, and applications are supported by ThingSpeak
    platform. Fig. 20 shows daily and weekly data visualizations, where the differences
    between day and night, especially for relative humidity values, are very clear.
    These differences are related to working style of the extractor fans at this period,
    where they were working on timer in day and constantly in night to keep the temperature
    of the farm around 19°. Download : Download high-res image (233KB) Download :
    Download full-size image Fig. 20. Data graphs showing temperature and relative
    humidity (a) daily and (b) weekly values. Temperature data from different sensing
    nodes were also compared in Fig. 21 in the farm and inside mushroom bags. The
    temperature values inside mushroom bags were substantially higher in one bag due
    to mycelium colonization inside that bag. The working pattern of the circulation
    fans was changed by the farmer on 20 March afternoon (13:00 local time), which
    was reflected in the temperature values depending on their distance from the fans.
    Also, temperatures spiked on 20 March morning due to a power cut (07:53–08:43
    local time), which caused an increase in temperature values of about two degrees.
    Then, temperatures were restored in less than ten minutes when the power came
    back and the fans began working again. Download : Download high-res image (290KB)
    Download : Download full-size image Fig. 21. Data graphs showing comparisons of
    temperature values (a) in farm and (b) inside bags. Power cuts were occasionally
    experienced, usually lasting no more than an hour. However, there was a prolonged
    internet outage due to a technical issue with the service provider. In response,
    a mobile internet connection was used to restore the required internet service
    for remote monitoring and management of the farm. Of course, it is essential to
    take precautions and have alternatives in place to overcome such unexpected outage
    problems. Various types of mobile power generators and internet connections can
    be utilized for such situations. Fig. 22(a) shows comparisons of relative humidity
    for three different sensing nodes. The differences between day and night were
    clear and a prominent spike value in humidity was also seen due to the farmer''s
    intervention by launching the humidifier manually for ten minutes. Fig. 22(b)
    shows eCO2 values measured by SGP30 and CSS811 sensors, where the differences
    between the sensor values were large, but generally, they behaved in a similar
    way such that any of them can be utilized as an affordable indicator for the CO2
    level in the farm. Download : Download high-res image (338KB) Download : Download
    full-size image Fig. 22. Data graphs showing comparisons of (a) relative humidity
    and (b) air quality data. Fig. 23 shows images from the farm in two different
    cultivation cycles, where the extractor and circulation fans can be seen in the
    background. These images were captured by the cameras inside the farm. Furthermore,
    a dataset of mushroom images has been built for using in further work using CV,
    AI and ML applications. Download : Download high-res image (540KB) Download :
    Download full-size image Fig. 23. Images from the farm. Another noticeable result
    was that the farmer who was enforced to commute to the farm twice a day to check
    the mushrooms, was able to monitor and manage the farm remotely when using the
    proposed system, reducing fuel and time costs. Ultimately, the technical design
    and implementation files, source codes, and instruction manual of all varieties
    of sensing and control nodes of the proposed oyster mushroom cultivation system
    will be made available under the CC BY license. Thus, the system can be configured
    and reproduced not only by NGOs and authorities working for refugee and displaced
    communities but also by any group that chooses to implement it. The system was
    implemented for oyster (Pleurotus ostreatus) mushroom cultivation in a greenhouse
    environment with temperature values ranging from 5 °C to 25 °C and relative humidity
    values at 60–95 %. However, the system can be adapted for different mushroom types,
    as well as for other crops, which are cultivated in greenhouse farming systems
    by configuring it to operate under the desired values of temperature and relative
    humidity at different cultivation phases depending on the species [3,13]. For
    example, the number of sensing nodes can be increased according to the size of
    the farm/greenhouse, and the sensors themselves can be replaced with more appropriate
    sensors for the cultivated mushroom or crop. The same can also be said for control
    nodes, where various farm necessary devices can be controlled and managed by these
    nodes using the same architecture and user interfaces. 4. Conclusion This research
    clearly shows that it is possible to design and implement an efficient and affordable
    remote monitoring and controlling system for organic oyster mushroom farming with
    costs starting from about $30. The deployment of this system drew promising insights
    represented by reducing labour efforts and production costs in addition to increasing
    the crop production time thanks to the remotely controlled and monitored process.
    This simplifies the mushroom cultivation process so that it can be operated by
    lay people with a modest amount of training, especially for internally displaced
    and refugee Syrians. Furthermore, it can support them with an extra income and
    an additional source of good nutrition. The implemented varieties of the oyster
    mushroom cultivation system in this study can be adapted for other mushroom types
    as well as for crops cultivated in greenhouse farming systems, as most of such
    systems rely on monitoring the greenhouse environment and managing the various
    relevant devices for controlling the internal greenhouse conditions. The project
    outputs can be shared not only with NGOs and authorities working on agriculture
    projects for internally displaced and refugee Syrians, but also with other agriculturalists
    in low-income countries for example. The operation and use of the system can be
    incorporated into mushroom cultivation training courses and workshops offered
    by these stakeholders. The proposed system can be produced on a larger scale for
    organizations working for refugees, where some UN agencies and international or
    local NGOs support such activities as a part of livelihood and local economic
    recovery programs. Ethics statement Not applicable: This manuscript does not include
    human or animal research. Funding This work was supported by the Council for At-Risk
    Academics (Cara) [Apr22URN15 grant]. CRediT authorship contribution statement
    Abdullah Elewi: Writing – original draft, Validation, Resources, Project administration,
    Methodology, Conceptualization. Abdulsalam Hajhamed: Writing – original draft,
    Validation, Resources, Conceptualization. Rasheed Khankan: Writing – original
    draft, Software, Investigation. Sonay Duman: Software, Data curation. Amina Souag:
    Writing – review & editing, Validation, Supervision. Asma Ahmed: Writing – review
    & editing, Supervision, Conceptualization. Declaration of competing interest The
    authors declare that they have no known competing financial interests or personal
    relationships that could have appeared to influence the work reported in this
    paper. Acknowledgement The authors would also like to thank Dr. Denise De Pauw
    from University of Leeds for providing language support during the writing of
    this paper. Appendix. Supplementary materials Download : Download zip file (2MB)
    Data availability No datasets were analysed in this work. Source code files and
    an instructional document are provided as supplementary material. References [1]
    R. Abbasi, P. Martinez, R. Ahmad The Digitization of Agricultural Industry – a
    Systematic Literature Review On Agriculture 4.0. Smart Agricultural Technology
    Elsevier B.V (2022), 10.1016/j.atech.2022.100042 Google Scholar [2] P.K. Angral,
    R. Thakur Different automatic monitoring and controlling technique for mushrooms
    Turk. J. Comput. Math. Educ., 12 (11) (2021), pp. 3363-3369 Google Scholar [3]
    M.B. Bellettini, F.A. Fiorda, H.A. Maieves, G.L. Teixeira, S. Ávila, P.S. Hornung,
    …, R.H. Ribani Factors affecting mushroom Pleurotus spp Saudi. J. Biol. Sci.,
    26 (4) (2019), pp. 633-646, 10.1016/j.sjbs.2016.12.005 View PDFView articleView
    in ScopusGoogle Scholar [4] L. He, L. Fu, W. Fang, X. Sun, R. Suo, G. Li, …, R.
    Li IoT-based urban agriculture container farm design and implementation for localized
    produce supply Comput. Electron. Agric., 203 (2022), 10.1016/j.compag.2022.107445
    Google Scholar [5] International Agricultural Cooperation Organization I.A.C.O.
    (2020), Manual of agricultural mushroom production in Syria, http://iaco-sy.org/?p=988.
    Google Scholar [6] Y. Jararweh, S. Fatima, M. Jarrah, S. AlZu''bi Smart and sustainable
    agriculture: fundamentals, enabling technologies, and future directions Comput.
    Electr. Eng., 110 (2023), 10.1016/j.compeleceng.2023.108799 Google Scholar [7]
    E.M.B.M. Karunathilake, A.T. Le, S. Heo, Y.S. Chung, S. Mansoor The path to smart
    farming: innovations and opportunities in precision agriculture Agriculture, 13
    (2023), p. 1593, 10.3390/agriculture13081593 2023 View in ScopusGoogle Scholar
    [8] M.R.M. Kassim, I. Mat, I.M. Yusoff Applications of internet of things in mushroom
    farm management Proceedings of the International Conference on Sensing Technology,
    ICST, 2019-December, IEEE Computer Society (2019), 10.1109/ICST46873.2019.9047702
    Google Scholar [9] C.P. Lu, J.J. Liaw A novel image measurement algorithm for
    common mushroom caps based on convolutional neural network Comput. Electron. Agric.,
    171 (2020), 10.1016/j.compag.2020.105336 Google Scholar [10] M.S.A. Mahmud, S.
    Buyamin, M.M. Mokji, M.S.Z. Abidin Internet of things based smart environmental
    monitoring for mushroom cultivation Indones. J. Electr. Eng. Comput. Sci., 10
    (3) (2018), pp. 847-852, 10.11591/ijeecs.v10.i3.pp847-852 View in ScopusGoogle
    Scholar [11] M.F. Mohammed, A. Azmi, Z. Zakaria, M.F.N. Tajuddin, Z.M. Isa, S.A.
    Azmi IoT based monitoring and environment control system for indoor cultivation
    of oyster mushroom Proceedings of the Journal of Physics: Conference Series, 1019,
    Institute of Physics Publishing (2018), 10.1088/1742-6596/1019/1/012053 Google
    Scholar [12] H. Rahman, M.O. Faruq, T.B. Abdul Hai, W. Rahman, M.M. Hossain, M.
    Hasan, M.M Azad IoT enabled mushroom farm automation with Machine Learning to
    classify toxic mushrooms in Bangladesh J. Agric. Food Res., 7 (2022), 10.1016/j.jafr.2021.100267
    Google Scholar [13] J. Raman, K.Y. Jang, Y.L. Oh, M. Oh, J.H. Im, H. Lakshmanan,
    V. Sabaratnam Cultivation and nutritional value of prominent pleurotus Spp.: an
    overview Mycobiology, 49 (1) (2021), pp. 1-14, 10.1080/12298093.2020.1835142 Google
    Scholar [14] A. Subedi, A. Luitel, M. Baskota, T.D. Acharya IoT Based Monitoring
    System for White Button Mushroom Farming MDPI AG (2020), p. 46, 10.3390/ecsa-6-06545
    Google Scholar [15] Y.D. Surige, W.S.M. Perera, P.K.N. Gunarathna, K.P.W. Ariyarathna,
    N. Gamage, D. Nawinna IoT-based monitoring system for oyster mushroom farming
    Proceedings of the ICAC 2021 - 3rd International Conference on Advancements in
    Computing, Proceedings (2021), pp. 79-84, 10.1109/ICAC54203.2021.9671112 View
    in ScopusGoogle Scholar [16] S.T. Ten, G. Krishnen, K.A. Khulidin, M.A. Mohamad
    Tahir, M.H. Hashim, S. Khairudin Automated controlled environment mushroom house
    Adv. Agric. Food Res. J. (2021), 10.36877/aafrj.a0000230 Google Scholar [17] N.
    Thong-un, W. Wongsaroj Productivity enhancement using low-cost smart wireless
    programmable logic controllers: a case study of an oyster mushroom farm Comput.
    Electron. Agric., 195 (2022), 10.1016/j.compag.2022.106798 Google Scholar [18]
    P. Tongcham, P. Supa, P. Pornwongthong, P. Prasitmeeboon Mushroom spawn quality
    classification with machine learning Comput. Electron. Agric., 179 (2020), 10.1016/j.compag.2020.105865
    Google Scholar [19] UN Data, A world of information (2020). http://data.un.org/Data.aspx?d=FAO&f=itemCode%3A449.
    Google Scholar [20] H. Yin, W. Yi, D. Hu Computer vision and machine learning
    applied in the mushroom industry: a critical review Comput. Electron. Agric. (2022),
    10.1016/j.compag.2022.107015 Google Scholar [21] A. Walter, R. Finger, R. Huber,
    N. Buchmann Opinion: smart farming is key to developing sustainable agriculture
    Proc. Natl. Acad. Sci. U. S. A., 114 (2017), pp. 6148-6150, 10.1073/pnas.1707462114
    2017 View in ScopusGoogle Scholar [22] M. Zhu, J. Shang Remote monitoring and
    management system of intelligent agriculture under the internet of things and
    deep learning Wirel. Commun. Mob. Comput., 2022 (2022), 10.1155/2022/1206677 Google
    Scholar Cited by (0) © 2024 Published by Elsevier B.V. Recommended articles Energy-efficient
    scheduling of real-time tasks with shared resources Future Generation Computer
    Systems, Volume 56, 2016, pp. 179-191 Jun Wu View PDF In reply to Cassidy and
    Amdur Practical Radiation Oncology, Volume 12, Issue 5, 2022, pp. e460-e462 Roman
    O. Kowalchuk, …, Kenneth W. Merrell View PDF Response to Letter to the Editor
    on “Effectiveness of a Web-Based Direct-to-User Transfer Training Program” Archives
    of Physical Medicine and Rehabilitation, Volume 103, Issue 10, 2022, pp. 2063-2064
    Stephanie K. Rigot, …, Lynn A. Worobey View PDF Show 3 more articles About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Smart Agricultural Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Design and implementation of a cost-aware and smart oyster mushroom cultivation
    system
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Gupta S.
  - Tripathi A.K.
  citation_count: '0'
  description: Fruits and vegetables are major sources of nutrients for the majority
    of the population across the globe. With the rapid increase in population, the
    objectives of the future agro-industry are to reduce product loss while increasing
    product quality and productivity considerably. Consequently, farmers need to be
    assisted with cutting-edge technologies for sustainable, eco-friendly, and efficient
    farming. Smart farming for early disease recognition and control is the current
    hot-spot research objective in the fruitage domain. The precision agriculture
    era has been revolutionized by federating cutting-edge technologies like machine
    learning, deep learning, and, the Internet-of-Things. However, the existing studies
    focused on the impact of individual technology on single or multiple cultivars
    of edible fruits or vegetables. Limited areas of the fruitage disease remain explored,
    necessitating further investigation into the research gaps and challenges identified
    for implementing the smart practices in real-field farmlands. In this paper, a
    comprehensive survey of recent advancements in fruit and vegetable disease identification
    and classification is presented. The technology-wise state-of-the-art findings,
    gaps, challenges, and future opportunities for fruitage disease recognition have
    been presented, covering 99 research articles. Moreover, the corpus of publicly
    available fruit and vegetable datasets has been investigated, with the existing
    gaps, improvements, and future requirements. The research paper concludes with
    challenges and a future outlook that promises to be a very significant and valuable
    resource for researchers working in the area of agronomic disease monitoring.
  doi: 10.1016/j.engappai.2024.108260
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Research background and motivation
    3. Research methodology 4. Machine learning 5. Deep learning 6. Internet-of-things
    and Cyberphysical System 7. Data sets 8. Research gaps, challenges, and future
    opportunities 9. Summary and discussion 10. Conclusion Declaration of competing
    interest Data availability References Show full outline Figures (6) Tables (9)
    Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Engineering Applications
    of Artificial Intelligence Volume 133, Part C, July 2024, 108260 Survey paper
    Fruit and vegetable disease detection and classification: Recent trends, challenges,
    and future opportunities Author links open overlay panel Sachin Gupta, Ashish
    Kumar Tripathi Show more Share Cite https://doi.org/10.1016/j.engappai.2024.108260
    Get rights and content Abstract Fruits and vegetables are major sources of nutrients
    for the majority of the population across the globe. With the rapid increase in
    population, the objectives of the future agro-industry are to reduce product loss
    while increasing product quality and productivity considerably. Consequently,
    farmers need to be assisted with cutting-edge technologies for sustainable, eco-friendly,
    and efficient farming. Smart farming for early disease recognition and control
    is the current hot-spot research objective in the fruitage domain. The precision
    agriculture era has been revolutionized by federating cutting-edge technologies
    like machine learning, deep learning, and, the Internet-of-Things. However, the
    existing studies focused on the impact of individual technology on single or multiple
    cultivars of edible fruits or vegetables. Limited areas of the fruitage disease
    remain explored, necessitating further investigation into the research gaps and
    challenges identified for implementing the smart practices in real-field farmlands.
    In this paper, a comprehensive survey of recent advancements in fruit and vegetable
    disease identification and classification is presented. The technology-wise state-of-the-art
    findings, gaps, challenges, and future opportunities for fruitage disease recognition
    have been presented, covering 99 research articles. Moreover, the corpus of publicly
    available fruit and vegetable datasets has been investigated, with the existing
    gaps, improvements, and future requirements. The research paper concludes with
    challenges and a future outlook that promises to be a very significant and valuable
    resource for researchers working in the area of agronomic disease monitoring.
    Previous article in issue Next article in issue Keywords Machine learningDeep
    learningInternet-of-ThingsFruit and vegetable datasets 1. Introduction Agriculture
    and horticulture are the largest economic contributors in India. Approximately
    58% of the Indian population still depends on agriculture for their livelihood
    (IBEF, 2023). About 20.19% Gross Domestic Product (GDP) of the Indian economy
    is contributed by the agricultural sector (GDP, 2022). As per the reports of the
    Food and Agriculture Organization (FAO), India is the second largest global producer
    of fresh fruits and vegetables, yielding 12% of overall production (ICAR, 2022).
    National Horticulture Board Statistics (NHBS) recorded that India has produced
    a cumulative of 102.48 and 200.45 million metric tons of fruits and vegetables,
    respectively, in the year 2020–21 (APEDA, 2022). Fruit cultivation covers nearly
    9.6 million hectares of land, while vegetable farming covers 10.86 million hectares
    of land. Fig. 1 shows the distribution of primary fruits and vegetables across
    different zonal regions of the country. Moreover, the FAO of the United Nations
    claimed that food security demands would be the world’s prime concern in the upcoming
    years due to the rapid expansion of the world population. The Ministry of Food
    Processing Industries (MFPI) of India reported that approximately million metric
    tons of fruit and vegetable costing 10.6 billion USD deteriorates annually due
    to lack of proper management and technology. The objective of the United Nations’
    sustainable development is to achieve “Zero Hunger by 2030” across the world.
    However, the COVID-19 pandemic made it harder to overcome the global nutrition
    crisis and showed the significance of technological support to confront hunger,
    malnutrition, and non-communicable diseases linked to diet (FAO, 2022b). India
    ranked 107 among 121 countries in the Global Hunger Index-2022 (GHI, 2022). The
    National Family Health Survey (2019–21) reported that around 200 million Indian
    children under five years were undernourished (Survey, 2022). Fruit and vegetable
    demand is jeopardized by the proliferation of disease, insects, pests, nutritional
    deficiencies, and fertilizer deficits, causing considerable production losses.
    The disease diagnosis at an early stage is the primary requirement for crop protection
    and epidemic control. The conventional methods employ visual inspection and knowledgeable
    human experts for early disease detection, which are sometimes less available,
    especially for small-scale farmers in developing nations (Lee et al., 2020). Additionally,
    less experienced farmers are not able to make smart decisions regarding pest identification,
    resulting in a dwindling agriculture economy and efficacy. Moreover, ingesting
    microbially contaminated vegetables and fruits may pose a grave risk to human
    health. World Health Organization (WHO) reported that nearly 600 million individuals
    become ill annually due to food contamination (WHO, 2022). Consequently, this
    crucial problem necessitates incorporating innovative and practicable technical
    solutions to ensure the mechanism for the fruit disease detecting system. Additionally,
    it will be fruitful in packaging, quick transportation, valuation, dietary guidance,
    and consumer health. Agriculture 4.0 has revolutionized the agriculture industry
    with the alliance of several intelligent and innovative techniques, thus helping
    agrarians in improving the quantity, fertility, and quality of fruits and vegetable
    crops (Sharma et al., 2022). With the continuous development of precision farming
    techniques, agriculture, and other allied sectors have compensated for the production
    loss by implementing autonomous disease detection techniques using Computation
    Intelligence (CI), real-time sensors, computer vision, Unmanned Aerial Vehicles
    (UAV), and Neural Networks (NN) to overcome the issue of the fruit production
    scarcity, time lacking, high cost and requirement of extensive skilled and experienced
    labors. In a nutshell, precision farming plays a crucial role in acquiring timely
    and precious information about disease prediction, thus providing effective methods
    for aiding decision-making and intelligent management in several fruit and vegetable
    domains such as autonomous harvesting robots, grading and sorting, category identification,
    real-time fruit disease classification and prediction, and quality evaluation.
    Recently, a number of machine learning, deep learning, and Internet-of-Things-based
    techniques have been introduced by several researchers for early prediction of
    fruit and vegetable disease. Intelligent technological support for early disease
    identification is the need of the hour for sustainable agricultural development.
    Moreover, finding the current research trends, future opportunities, and optimal
    models based on the parameters, datasets, experimental scenarios, and multiple
    hardware configurations is still a challenging task for the researchers (Dhaka
    et al., 2021). As an effective data-driven framework, machine learning models
    and other imaging techniques offer precise, generalized methods for complex relationships
    between massive ranges of variables (Sharma et al., 2020). Deep learning methods,
    especially Convolution Neural Networks (CNN) and their derivatives, have recently
    gained substantial attention and offered practical approaches to complex real-world
    agricultural problems. CNN trains using image features and automatically extracts
    contextual information and global descriptors, which significantly reduces errors
    and offers several benefits over conventional image processing techniques. Deep
    Transfer Learning (DTL) has also been significantly used to develop reliable models
    on customized datasets (Jin et al., 2020, Hasan et al., 2023). The sensor-generated
    data collected and communicated through the Internet-of-Things, and cyber-agriculture
    methods may be used by agrarians to monitor their fruit and vegetable crops remotely.
    As a result, the combination of contemporary UAV camera sensor technology and
    deep learning algorithms might be a viable approach for early fruit disease identification
    (Quy et al., 2022). Thus, an exhaustive literature survey is necessary to consolidate
    the recent technological advancements and challenges in smart agriculture for
    the fruit and vegetable industry. The overall contribution of the study is detailed
    as follows. Download : Download high-res image (442KB) Download : Download full-size
    image Fig. 1. Zonewise distribution of primary fruits and vegetables across different
    Indian States. • A systematic survey covering the recent advancements in machine
    learning, deep learning, and Internet-of-Things for automatic fruit and vegetable
    disease detection using image processing and computer vision-based methods has
    been presented. • The current research challenges, literature gaps, and future
    opportunities have also been investigated. Additionally, the pros, cons, results,
    and applications of the different state-of-the-art frameworks targeting the classification
    and identification of fruit and vegetable diseases using real-time and collected
    images. • Moreover, the publicly available datasets for the fruit and vegetable
    disease classification have also been tabulated for the ease of the research community
    working in the field of smart horticulture. • This study may serve as a powerful
    tool for researchers and agronomists in the development of innovative agriculture
    models for predicting fruit and vegetable diseases. The organization of the literature
    survey is structured as follows: Section 2 presents the research background followed
    by the introduction in Section 1, whereas selection & inclusion criteria of the
    research articles have been detailed in Section 3. Section 4 discusses past surveys
    on fruitage disease classification using machine learning. Section 5 details previous
    studies in the deep learning domain that have been utilized for fruit & vegetable
    disease classification & identification. Section 6 thoroughly reviews different
    fruitage disease detection & classification approaches using remote sensing technologies
    and Internet-of-Things applications. Section 7 defines the characteristics of
    different publicly available fruit & vegetable datasets from the previous research
    works. Section 8 discusses the open challenges and future opportunities in their
    respective fields. Section 9 summarizes the classification performance of the
    state-of-the-art methods. Finally, the paper is concluded in Section 10. Table
    1. Studies close to the current literature review. References Fruit species Target
    application Technology focused Benchmark dataset Empty Cell Single (✓) Multi (✓✓)
    Grading Classification ML MCV DL IoT Empty Cell Zhang et al. (2018) ✓✓ ✓ ✓ ✓ Iqbal
    et al. (2018) ✓ ✓ ✓ ✓ Razmjooy et al. (2019) ✓ ✓ ✓ ✓ Chandrasekaran et al. (2019)
    ✓✓ ✓ ✓ ✓ Kalia et al. (2019) ✓✓ ✓ ✓ Kantale and Thakare (2020) ✓ ✓ ✓ ✓ Alam Siddiquee
    et al. (2020) ✓ ✓ ✓ ✓ ✓ Naranjo-Torres et al. (2020) ✓✓ ✓ ✓ ✓ ✓ Nabi et al. (2020)
    ✓ ✓ ✓ ✓ Bhargava and Bansal (2020c) ✓ ✓ ✓ ✓ Behera et al. (2020) ✓✓ ✓ ✓ ✓ Antony
    and Kumar (2021) ✓✓ ✓ ✓ ✓ ✓ Patil et al. (2021a) ✓ ✓ ✓ ✓ ✓ ✓ Saranya et al. (2021)
    ✓ ✓ ✓ ✓ ✓ Patil et al. (2021b) ✓ ✓ ✓ ✓ Dhiman et al. (2022b) ✓✓ ✓ ✓ ✓ ✓ Ukwuoma
    et al. (2022) ✓✓ ✓ ✓ ✓ ✓ Shruthi et al. (2022) ✓ ✓ ✓ ✓ ✓ Singh et al. (2022) ✓✓
    ✓ ✓ ✓ ✓ ✓ Sivaranjani et al. (2022) ✓✓ ✓ ✓ ✓ ✓ Palei et al. (2023) ✓ ✓ ✓ ✓ ✓ Rizzo
    et al. (2023) ✓✓ ✓ ✓ ✓ ✓ ✓ Current survey ✓✓ ✓ ✓ ✓ ✓ ✓ ✓ ✓ ML Machine Learning,
    MCV Machine Computer Vision, DL Deep Learning, IoT Internet-of-Things. 2. Research
    background and motivation The economic growth rate of developing countries is
    closely tied to agriculture. Fruits and vegetables encompass a broad spectrum
    of plant foods that differ substantially in calorie and nutritional density. Fruits
    and vegetables are a great source of fiber, which has been linked to a reduced
    risk of cardiovascular disease and obesity. As per the reports from the FAO, about
    30%–40% of the fruits and vegetables are lost due to pest attacks globally (FAO,
    2022a). Moreover, the Food Corporation of India (FCI) has estimated a 10%–15%
    loss of overall production in the upcoming years. Therefore, accurate and timely
    estimation of disease severity, defects incidence, and negative consequences of
    disorders on the fruits and vegetables is crucial for improving pesticide efficacy,
    fruit & vegetable breeding, and productivity. The traditional disease identification
    method includes studying visual pathogen symptoms (rots, blight, anthracnose)
    using fruit phenotype by trained subject experts, which is labor-intensive and
    tedious. Nevertheless, visible symptoms are subject to human bias and temporal
    variation, causing inaccurate and varied outcomes. Therefore, autonomous early
    disease recognition and detection have been identified as an emerging field in
    intensive plant research, which can aid in stopping disease spread in other parts
    of the fruits and vegetables like roots and leaves. To transform the conventional
    agriculture system to ecological agriculture 4.0, different disruptive intelligent
    technologies such as machine learning, deep learning, Internet-of-Things, drones,
    and wireless sensor networks are used to mitigate the risks associated with fruitage
    diseases (da Silveira et al., 2021) as picturized in Fig. 2. Ecological informatics
    bridges the gap between ecosystem and informatics by combining ecological values,
    leading-edge technologies, and massive environmental factors to better fruit and
    vegetable disease detection and pest control. Moreover, fruit pathogens thrive
    in an environment with ecological factors like high humidity and wetness, overwatering,
    and soil contamination, which causes the spread of bacteria, viruses, and fungus
    (Caleb et al., 2013). Fruit and vegetable diseases lower yield estimation and
    cause quality and quantity degradation, resulting in loss of commercial production.
    To remedy this, insecticides and pesticides are used, which may increase the toxic
    content in food products. Therefore, it is necessary to detect the disease early
    to minimize pesticide consumption. Table 1 presents literature studies performed
    in the last six years to automatically detect and classify fruit and vegetable
    disease, aggregating 22 available studies. Different researchers examine the impact
    of solely smart techniques for single and multiple cultivars of fruits and vegetables.
    Iqbal et al. (2018) highlighted the impact of computer vision & machine learning
    algorithms for early disease detection in citrus species. Chandrasekaran et al.
    (2019) suggested a comprehensive survey about near-infrared and hyperspectral
    spectroscopy on multiple agro-products using computer vision imaging systems.
    Naranjo-Torres et al. (2020) urged the impact of CNN and image processing in the
    field of the fruit and vegetable domain. Bhargava and Bansal (2020c) introduced
    an exhaustive survey on the disease severity estimation of multiple apple cultivars
    using spectral imaging techniques. Behera et al. (2020) addressed the fruit grading
    and disease classification problem using computer vision and machine learning
    methods. Patil et al. (2021a) examined the grading and sorting of dragon fruit
    based on their maturity level in the computational intelligence field. Dhiman
    et al. (2022b) summarized the survey on the quality evaluation and future opportunities
    of the multiple cultivars based on the disease severity levels using machine and
    deep learning algorithms. Sivaranjani et al. (2022) presented an overview of the
    disease classification for varied agro-products. Rizzo et al. (2023) explored
    the different non-destructive methods for ripeness categorization in the fruit
    & vegetable industry. The problems of disease detection in fruit images persist
    due to considerable variations in natural surface color in different fruits and
    their species, color, and texture. However, no study in the literature has been
    performed, which includes an extensive survey covering state-of-the-art technologies
    for the automated disease detection of fruits and vegetables. Additionally, researchers
    find it hard to choose an effective model based on the parameters, datasets, experimental
    scenarios, and multiple hardware configurations due to the availability of a multitude
    of research works in implementing innovative agriculture models for predicting
    fruit and vegetable diseases (Dhaka et al., 2021). Thus, there is a need for an
    exhaustive literature survey from the existing research work that can help the
    researchers in identifying a suitable innovative model as per pre-processing techniques,
    forecasting, and classification of different diseases in multiple cultivars of
    fruits and vegetables. Thus, a Systematic Literature Survey (SLR) plays a tremendously
    significant role in understanding the controlling factors to avoid similar agro-product
    losses in the future. The primary contribution of the survey is to analyze the
    current fruitage industry scenario at the empirical and qualitative levels and
    disseminate information regarding the progress of Agriculture 4.0 at the global
    level. Download : Download high-res image (798KB) Download : Download full-size
    image Fig. 2. Paradigms of different smart technologies utilized in precision
    agriculture. 3. Research methodology The current review paper aims to investigate
    and present the survey of existing machine learning, deep learning, and Internet-of-Things-based
    methods for disease detection and monitoring in multiple cultivars of fruits &
    vegetables. The current research survey follows the standard methodology pattern
    to make the study work transparent and impartial regarding information selection
    and result representation (Keele et al., 2007). The study starts with research
    questions and their motivation and ends with the final selection of qualified
    research papers. Study Selection Process: The selection of the research papers
    has been carried out using Preferred Reporting Items for Systematic reviews and
    Meta-analysis (PRISM) technique (Liberati et al., 2009) which contains (1) Initial
    identification; (2) Screening or introductory filtering; (3) Secondary filtering;
    and (4) Exclusion and inclusion. Table 2 addresses the research objectives and
    their respective motivation in the field of precision farming. It helps to design
    the present review paper’s complete research framework, which can help to provide
    concise and relevant research information in the fruit & vegetable disease classification
    domain. The next phase of the study is to search for significant existing research
    papers on the relevant topic for the custom year range from 2018 to 2023. A pilot
    search using specific keywords has been performed through multiple digital repositories
    and search engines like Web of Science and Google Scholar to collect related information
    about the fruitage disease framework. The repository list chosen for review work
    includes Elsevier, Springer, ACM, MDPI, IEEE Xplore, etc. The research papers
    were obtained using all possible combinations of auxiliary keywords that were
    screened to get the best source for the answers to the defined research objectives.
    Table 3 depicts the different search strings used to identify the pertinent research
    work. Table 2. Research objectives. Research objectives Research questions Motivation
    Outcomes RO1 What are the fundamental & reputed publication means for the current
    technologies in agro-products domain It helps to identify the ethical publication
    sources for smart agriculture research work Publication selection RO2 What are
    the main focus areas in precision farming It helps to explore the various keywords
    and application domains in agriculture like disease monitoring Area & technology
    selection RO3 How were the research work carried out filtered on year, country
    and author, journal It helps to get knowledge about the current trends in the
    fruit disease recognition sector Latest research categorization RO4 What mathematical
    approaches and simulations are pre-existed to solve the fruitage disease classification
    issues It helps to get insights into the different state-of-the-art architectures,
    reviews, platforms, and their implementations Study of the selected papers RO5
    What are different datasets having multiple cultivars of fruits and vegetables
    available that are most frequently used It focuses on data acquisition with multiple
    dimensional features Study of publicly available datasets RO6 What are the different
    performance criteria used in the evaluation of the intelligent models in the recent
    research It helps to get insight knowledge about the comparative study of the
    past research Result analysis RO7 What are the potential conclusions and challenges
    of the relevant papers It helps to study the opportunities, technical glitches,
    and their future gaps in the pre-qualified surveys Epilogue and technical advancements
    After collecting the research papers, screening was performed to get the current
    trends in the fruit or vegetable disease recognition system as the standards suggested
    by Dybå and Dingsøyr (2008). The overall statistical flow of review papers selection
    is depicted in Fig. 3. The preliminary screening step includes the papers that
    match and satisfy the pre-defined research objectives and titles. The secondary
    screening is performed after reading the abstract of the papers collected during
    the primary phase. The abstract gives a brief idea about the proposed research
    methodology, datasets, and result comparison, thus, helping to make a notable
    repository. Initially, more than 200 papers were included from the aforementioned
    digital library based on the current technologies. The research papers having
    duplicate and irrelevant titles were eliminated to design an optimized library.
    The screening process has been employed to include the papers in the context of
    smart agriculture, satisfying research questions, search criteria, abstract, publishing
    year, and full article, resulting in 123 papers. For instance, most research papers
    were excluded due to plant leaf disease identification instead of edible fruit
    or vegetable itself. Therefore, the outcome of the study is 99 primary studies
    which will become the foundation of the review work. Table 3. Search strings.
    Digital library Search criteria Sub domain Domain Empty Cell Techniques Objective
    Year Empty Cell Empty Cell Elsevier, Springer, ACM, MDPI, IEEE Xplore, ProQuest,
    Google Scholar Web of Science, IGI Global, Mendeley, Kaggle, Github, Frontier
    in Plant Science, IEEE Data Port and ArXiv Deep Learning, Machine Learning, Computer
    Vision, UAV, Cyber-Physical System and Internet-of-Things (Disease OR Defects
    OR Infection OR Disorder OR Pathogen) AND (Classification OR Detection OR Identification
    OR Monitoring OR Severity) 2018–2023 Fruits and Vegetables Smart Farming, Precision
    Agriculture, E-Agriculture, IoAT, Digital Farming, Agriculture 4.0 Finally, the
    papers are segregated technology-wise. The following sections present the technology-wise
    findings of the research performed for fruit and vegetable disease identification.
    Download : Download high-res image (737KB) Download : Download full-size image
    Fig. 3. Different steps involved in Systematic Literature Review. 4. Machine learning
    Machine learning (ML) is a subdomain of computer intelligence that emphasizes
    useful knowledge-driven algorithms and self-learning of machines for good prediction
    and classification. These algorithms have the extrinsic capability for self-learning
    the various field applications affecting agriculture, such as disease detection,
    yield prediction, maturity level, evapotranspiration or water management, stress
    prediction, and fruit grading. Food defects are identified as abnormal changes
    that may hamper the functional growth of the plant, which can be caused by some
    viruses, fungi, or bacteria. Early prediction of such pathological disorders could
    reduce food pre and post-harvest losses. However, farmers must ensure significant
    enhancement in food production by adopting leading-edge ML technologies in intelligent
    or precision farming. Decision tree (Dai et al., 2016), -nearest neighbors (KNN)
    (Singh and Kaur, 2018), random forest (Chaudhary et al., 2016), and Support Vector
    Machine (SVM) (Yu et al., 2018), Principal Component Analysis (PCA) (Dhiman et
    al., 2021), Linear Discriminant Analysis (LDA) (Jahanbakhshi and Kheiralipour,
    2020), Scale-Invariant Feature Transform (SIFT) (Langford et al., 2019), Histogram
    of Oriented Gradient (HOG) (Roy et al., 2021b), K-means (Bhargava and Bansal,
    2020b), etc. are some of the classical exemplars of ML algorithm used for the
    fruit disease detection. Table 4 depicts the basic ML formulations used in the
    disease classification for the fruit & vegetable domains. Table 4. Machine learning
    techniques. Ml Ref Models Description Application Variants Formulation Supervised
    learning Quinlan (1996) Decision Tree It performs the attribute selection, determining
    the splitting and stopping criteria, carrying the pruning methods, & labeling
    terminal nodes. Classification ID3  C 4.5  CART CHAID QUEST Goldstein et al. (2017)
    Regression It is a continuous-valued predictive model for finding the association
    between the dependent variable and set of independent feature vectors. Regression
    Linear Logistic Polynomial Lasso Ridge Zhu et al. (2017) Ensemble A generalized
    meta method for optimal performance by combining several standard models. Classification
    Random Forest AdaBoost XGBoost Bishop and Nasrabadi (2006) Naive Bayes It is Bayes
    theorem probabilistic classifier given with a “naive” hypothesis of conditional
    independence between each predictor feature. Classification Gaussian NB Multinomial
    NB Bernoulli NB Categorical NB Garg and Mago (2021) SVM It optimizes the linearly
    separable hyperplane as decision boundary with maximum margin in n dimension.
    Classification Linear Multiquadric Radial Basis Polynomial Li and Wang (2014)
    LDA It maximizes the ratio of between & within class variance while retaining
    the class discrimination. Dimension reduction Fisher LDA Null LDA Garg and Mago
    (2021) KNN It is instance-based learning where the maximal class likelihood is
    determined by predetermined ‘k’ nearest points. Classification Hamming Euclidean
    Manhattan Un supervised learning Hotelling (1933) PCA It reduces the dimensions
    with a maximum variance while retaining the original data. Dimension reduction
    Linear Gaussian Kernel Memarsadeghi and O’Leary (2003) Clustering It groups the
    whole data points into the number of clusters having identical data. Segmentation
    K-Means Fuzzy C-Means Reynolds (2009) GMM It is parametric modeling for weighted
    addition of Gaussian probability densities. Clustering Maximum Likelihood Variational
    bayesian Saha and Manickavasagan (2021) ICA It decomposes multivariate data to
    distinct & independent non-gaussian form Blind source separation Naive Alahmed
    et al. (2020) SVD It is a matrix factorization method decomposing any matrix into
    three matrices by Singular value Dimension reduction Naive Semi supervised learning
    Van Engelen and Hoos (2020) Inductive It trains the model by labeling the unseen
    unlabeled data points. It generalize to unobserved samples Classification Self
    training and Co training Trans- ductive It trains the model by labeling the already
    seen unlabeled data points. It does not generalize to unobserved samples Classification
    TSVM Graph Learning Reinforce ment learning Bellet (2006) MDP It decide the agent
    action in the partially controlled and partially random environment using optimized
    policy Prediction Novel MDP Ergodic MDP ɛ SARSA (2022) Q learning It assesses
    the Q-value of the next action state from the previous set of actions based on
    greedy approach OFF policy prediction Novel Q Deep Q Double Q SARSA It assesses
    the Q-value of the next action state from the current set of actions & target
    policy ON Policy Prediction Base approach 4.1. Fruit & vegetable disease detection
    using ML techniques The manual fruitage disease inspection and grading are tedious
    as they suffer from poor accuracy due to unskilled human efforts. Recently, a
    number of ML-based methods have been introduced for the automated detection of
    fruit and vegetable diseases. Table 5 presents an overview of the recent studies
    related to fruit/vegetable disease identification, classification, grading, and
    sorting using machine learning-based methods. Habib et al. (2020) developed an
    exploratory online architecture for autonomous disease classification in jackfruit
    tissue using a ML approach. K-Means grouping-based segmentation method was exploited
    to segregate the infected region from the non-infected part of the jackfruit image.
    A linear kernel-based SVM outperformed the other state-of-the-art, achieving a
    recognition accuracy of 88.67%. Similarly, ML algorithms can be integrated with
    optimization algorithms for best feature selection. The optimization algorithms
    adjust the model hyperparameters and optimize the mean square error between the
    actual and predicted output. A whale-optimized Artificial Neural Network (ANN)
    model for tomato disease identification was introduced by Kumar et al. (2020b).
    The Firefly algorithm was used for efficient morphological-driven color image
    segmentation, which was further processed by Gray Level Co-Occurrence Matrix (GLCM).
    El-Dosuky et al. (2020) developed a Cockroach Swam Optimization (CSO) optimized
    SVM method for apple disease classification. The image features were extracted
    using the K-means algorithm, which was further classified by CSO optimized SVM
    method. CSO fine-tuned three attributes ( representing non–linear hyperplanes,
    P representing error penalty, and D representing hyperplane splitting the data),
    thus generating 140 different SVM model variants. Ji et al. (2018) proposed an
    apple grading method utilizing the color and surface defects using PSO-optimized
    SVM. The fruit segmentation from the background noise with color feature extraction
    was carried out by Otsu’s segmentation method for proper H values. Additionally,
    the external defects boundary of the fruit was identified using the hysteresis
    threshold canny edge detection method for appropriate I values and segmented utilizing
    a morphological approach. SVM and their predecessors play a crucial role in the
    classification network. Bhargava and Bansal (2020a) presented an SVM-based fruit
    classification and defect prediction method. The quality of food was ranked into
    three classes, namely, 1,2, and defective based on the disease severity levels.
    The experiments revealed that the SVM-based classification outperformed other
    considered methods showing 98.48% fruit disease classification accuracy. Similarly,
    Mojumdar and Chakraborty (2021) acknowledged a multi-class SVM for orange tissues
    disease classification. The image partitioning was performed using K-means clustering,
    whereas the GLCM method was used for feature extraction. Likewise, Doh et al.
    (2019) developed an SVM-based method for citrus disease detection. The infected
    citrus region was segmented using the K-Means algorithm based on four phenotypic
    attributes, namely, color, structure hole, texture, and physical appearance. The
    author experimented that SVM out-competed ANN-based methods by showing a mean
    accuracy of 93.12%. On the same footprints, Bhargava and Bansal (2020b) introduced
    an autonomous fruit grading framework to detect the defect of the ‘Golden Delicious’
    apple. Images were segmented using Otsu’s and K-means clustering followed by best
    geometric, statistical & textural feature vector extraction, which were then fed
    to SVM. Almadhor et al. (2021) developed a framework for disease classification
    and detection in guava species. The paper experimented with different classifiers
    (Cubic SVM, Fine KNN, Bagged Tree, Complex Tree, Boosted Tree) for disease level
    and image level classification. It was concluded that the bagged tree classification
    method achieved 99.00% accuracy against the healthy guava fruit. El-aziz et al.
    (2020) implemented a computer vision-based apple disease detection and classification
    system using SVM and KNN. The proposed system extracted the textual features,
    whereas, the K-means algorithm was used for segmenting the extracted features.
    Furthermore, a low-cost inline tomato grading system was developed by Ireri et
    al. (2019) using computer vision and machine learning methods. The ROI images
    were segmented using the average value of the Calyx and Stalk Scar (CS) areas.
    The paper evaluated the performance of the proposed method and was validated on
    four state-of-the-art SVM methods, namely, various SVM likewise cubic-SVM (C-SVM),
    quadratic-SVM (Q-SVM), linear-SVM (L-SVM), and radial basis function-SVM (RBF-SVM),
    decision tree, ANN, and random forest for different gradings based on the severity.
    The hybridized RBF-SVM method outperformed other hybrid models by achieving 97.09%
    accuracy. Yu et al. (2018) fused computer vision and spectral imaging to identify
    the physical deformation of Nanguo pears. The conventional GLCM method was employed
    for homogeneity, energy, contrast, entropy, and correlation discriminative texture
    feature vectors, which were tested against SVM and backpropagation networks. Additionally,
    the segmentation technique helps to partition the images into meaningful ROI,
    where each region represents a distinct object. Dubey et al. (2020) implemented
    a fast and effective disease recognition framework using SVM. The resized grayscale
    images were carried out for infected area segmentation using canny edge detection
    to classify fruitage in defective and non-defective binary and first, second &
    final defect multi-classification. Additionally, unsupervised learning methods
    can be utilized for assembling the defective area. The research paper showed that
    the Gaussian Mixer Model (GMM) segmentation method overshadows the other image
    processing-based segmentation method by showing a silhouette score of 0.63 (Roy
    et al., 2021b). Clustering, an unsupervised learning method, divides the data
    into clusters where data points are more similar to one another than to those
    in other clusters. Kumari et al. (2021) presented a backpropagation-based mango
    grading method. The Extended Fuzzy K-Means grouping algorithm was employed for
    detecting infected segmented areas, which experimentally performed better than
    Fuzzy C-Means and traditional K-Means clustering. The color, texture, and geometric
    features were optimally extracted using Maximally Correlated Principal Component
    Analysis (MCPCA). Lastly, severely infected regions were classified by the Backpropagation
    Based Discriminant Classifier (BBDC) into three categories (good, average, and
    bad) Analogously, James and Sujatha (2021) implemented a web-based Hybrid Neural
    clustering method that exploited the feed-forward neural network and K-Means clustering
    approach for training and testing the apple disease classification. The proposed
    algorithm segmented the diseased part using the Maximum Likelihood Pixel Fusion
    method and feature extraction using the Essential Factor Investigator (EFI) method.
    Kumar et al. (2020a) devised a dual classification system using cascading of two
    SVM models for tomato disease classification. In the first stage, binary classification
    was performed to determine tomato and non-tomato species using species feature
    vectors designed from the captured images. The color features were used to classify
    the tomato quality based on the infectious level. The infected area was then segmented
    through the Gabor wavelet transform for good or bad binary classification, which
    was then cascaded to SVM for classifying the disease category. In a similar manner,
    an SVM-based method for mango and apple disease identification was introduced
    by Hemamalini et al. (2022). The -means-based segmentation was performed to detect
    the infectious area using color and texture features. The experimental results
    affirmed that the developed SVM-based method outperformed other considered methods
    by achieving 98.00% accuracy. Table 5. Machine learning fruit & vegetable disease
    detection techniques. Author Research methodology Species (Approx) Application
    or type of disease Classification accuracy Findings Habib et al. (2020) K-Means
    and Linear SVM 360 jackfruits Classification of bad and good quality tissues 88.67%
    (Accuracy), 71.67% (Precision & Recall), 92.92% (Specificity) The lightweight
    real-time model with more testing samples should be considered. Kumar et al. (2020b)
    Firefly algorithm, Whale Optimization based ANN 900 tomatoes Disease (ripe, unripe,
    blotchy ripe and sour rot) and healthy 94.11% (accuracy), 96.75% (sensitivity)
    Deep learning approaches should be combined with optimization methods to sustain
    the better results El-Dosuky et al. (2020) K-means, CSO with SVM classification
    320 apples Rot, scab, and blotch 94.65% Noisy data with large samples should be
    further added for better performance. Bhargava and Bansal (2020a) Sparse representative,
    SVM, ANN, KNN 4359 apples, 918 avocados, 3805 bananas, 3050 oranges Binary Classification
    (fresh and rotten) 98.48% (Accuracy), 95.72% (Defected maximum accuracy) Future
    approaches include more significant segmentation features. Also, deep belief network
    can be combined with meta-heuristics optimization methods Mojumdar and Chakraborty
    (2021) K-means, GLCM, SVM 517 many fruitage variants Binary classification(healthy
    & unhealthy) 82.30% Clustering outlier data should be emphasized Doh et al. (2019)
    K-means, ANN, SVM 120 citrus Scab, greening, melanose, canker, black spot, anthracnose
    93.12% Future research include data augmentation to develop dataset diversity
    Bhargava and Bansal (2020b) Otsu’s, K-means, SVM 212 apples Detection of healthy
    and defected datasets 96.81% and 93.00% with given two datasets Other SVM variants
    and their hybridization should be focussed Almadhor et al. (2021) Cubic SVM, Fine
    KNN, Bagged Tree, Complex Tree, Boosted Tree 393 guava species Rust, canker, dot
    and mummification, and healthy guava 99.00% The local minima of the SVM and their
    variants can lead to future research hotspot El-aziz et al. (2020) K-means, SVM,
    KNN 320 apples binary (healthy/rotten apple)multi-level (blotch, rot, scab) 97.90%
    Augmentation techniques & weight optimization should be explored for data divergence
    Ireri et al. (2019) Calyr and stalk scar detection, SVM, decision tree, ANN, RF
    8000 tomatoes Healthy and defected tomatoes of various grading 97.09% The performance
    degrades as the number of grading class increase, leads for future work Yu et
    al. (2018) Backpropagation, SVM 300 nanguo pears External deformation with four
    classification normal (90.00), rotten(100.00), deformed(80.00), insects infected(100.00),
    rust infected(90.00) The future work can emphasize on the internal defects of
    the agro-products Ji et al. (2018) Otsu’s, canny edge detection, Particle Swarm
    optimized SVM 200 apples Identification of multiple grading of apple 91.00% More
    complex high dimensional data can be further explored Dubey et al. (2020) Canny
    edge detection, SVM 500 apples, 500 pears, 500 pomegranates Healthy, and defected
    images which are further categorized to first, second and third infection level
    SVM model shows 98.50% over GoogleNet(79.40%) and KNN(89.40%) More feature selection
    may lead to increase in accuracy rate Kumari et al. (2021) Fuzzy K-means, GLCM,
    PCA, backpropagation 4500 mangoes ripe,unripe, & defected 98.40%, 98.20%, 97.20%
    for ripe, unripe & defect classes Principal components can be explored for high
    dimension data. James and Sujatha (2021) Combination of K-Means and feed forward
    back propagation neural network. 500 apples 10 different diseases 98.10% Generative
    adversarial network should be considered for increasing the false detection rate
    Roy et al. (2021b) Histogram, random walker and gaussian mixer 5031 apples, 4716
    bananas Two species with sub-classes rotten and fresh 0.63(silhouette score) More
    features may overfit the GMM model, should be reviewed Kumar et al. (2020a) Cascade
    of two SVM along with Gabor wavelet transfer 1250 tomatoes Tomato or no tomato
    with defective or non-defective class & its disease type 97.74% (Accuracy), 99.38%
    (Specificity), 96.55% (Sensitivity), 98.24% (Precision) The feature extraction
    for other defects like anthracnose, mold, rot should be analyzed Hemamalini et
    al. (2022) K-means, different classifiers(SVM, KNN, C 4,5) 113 apples, 137 mangoes
    Determination of fresh and rotten class 98.00% (accuracy), 91.00% (sensitivity),
    99.00% (specificity) Best classifier can be incorporated with robots for fresh
    fruitage selection Al-Sanabani et al. (2019) PLS regression and SVM regression
    80 mangoes Identification of freshness levels of different mangoes types coefficient
    of determination 0.96(training) and 0.95 (testing) The result may sensitive to
    the initial data points, may be examined Sugiarti et al. (2021) K-means, GLCM,
    Naïve Bayes 391 apples rot, scab and blotch 96.43% The zero-frequency problem
    can be further investigated Ghodke et al. (2022) LSVR, FFC 300 four different
    fruitage tissues Binary classification 87.00% (sensitivity) Various variant of
    SVM can be further investigated Mohammed et al. (2023) LR, DFR, Azure MI studio
    100 dates with Khalas and Barhee Date Palm Mite (meteorological), (physicochemical),
    (hybridization) Real-field application deployment for other mite genres should
    be focussed for research work. Dubey and Rocha (2023) Two-class jungle decision
    method, SVM, naive bayes, decision tree, LR, NN 1000 pears Calcium deficit and
    non-deficit pears 98.00% The model can be further extended for multi-class nutrient
    deficit labels for multiple fruits Tripathi and Maktedar (2023) Patch-based PCA
    for dimension reduction and ensemble classifier(RF, SVM, ANN, KNN) 540 mangoes
    Three grade qualities (healthy ripe, unripe & disease) 93.33% The model hyperparameters
    can be further reduced for real-time applications Furthermore, the regression
    algorithms allow the ML models to map input variables to continuous output for
    fruit disease detection. Al-Sanabani et al. (2019) identified the freshness level
    of multiple cultivars of mangoes by comparing the Partial Least Square (PLS) &
    SVM regression models. The collected Near Infrared (NIR) images were calibrated
    using extended multiplicative signal correction and the Gaussian method for noise
    removal, which were further processed using an MA871 optical machine (Refractometers,
    2022) for refractive index measurement to determine the Brix sugar concentration.
    Similarly, the Logistic Support Vector Regression (LSVR) based sorting method
    for six fruits and vegetables, namely, bananas, apples, lime, orange, pomegranate,
    and guava was implemented by Ghodke et al. (2022). The shape features were extracted
    using the Fast Fourier Convert (FFC) method, which became fed to the LSVR classifier
    into low and high-quality fruits for binary disease classification. Sugiarti et
    al. (2021) investigated an image processing-driven solution for disease recognition
    in apple fruits. The image samples were segmented to identify the ROI containing
    the infected part using the -means grouping method, which was further fed to the
    GLCM technique to obtain homogeneity, energy, contrast, and correlation discriminative
    texture feature vectors. The experimental results witnessed that the developed
    naive-bayes classifier surpassed other considered methods by achieving the disease
    classification accuracy of 96.43%. Mohammed et al. (2023) designed the autonomous
    palm mite detection in two cultivars, namely Khalas and Barhee, of the date fruits.
    Decision Forest Regression (DFR) and Linear Regression (LR) models were used to
    extract the meteorological and physicochemical features. The experiments showed
    the developed DFR model showed better accuracy with . Furthermore, a non-destructive
    nutrient detection for pears was proposed using a two-class decision jungle network
    (Dubey and Rocha, 2023). The geometrical features, namely, area, perimeter, eccentricity,
    diameter, major and minor axis, and orientation, were retrieved from the dataset
    and classified into calcium-deficient and healthy pears. The proposed method achieved
    98.00% accuracy. Tripathi and Maktedar (2023) introduced an ensemble classifier
    that utilized random forest, SVM, KNN, and Lion-Binary crossover mask base Whale
    Optimized (LBWO) ANN for automatic mango grading. The RGB images were denoised
    using the adaptive Gaussian method. Gray Level Run-Length Matrix (GLRM), NIR,
    and GLCM features were extracted from the processed dataset. The extracted feature
    vectors were reduced to the principal vectors using the PCA method, which was
    then fed to the ensembled network for disease classification. 5. Deep learning
    The study of infectious and non-infectious pathogenic agent traits is the foundation
    for agro-product disease prognosis and epidemiology. The factors affecting fruit
    and vegetable symptoms may be in the context of environmental conditions, climate
    conditions, accessibility of pathogens, and many more. The extensive methodology
    for disease diagnosis is to identify the fruitage lesion followed by pre-processing
    and detection (Moore et al., 2001). Classical machine learning and deep learning
    are two mainstream methods in precision agriculture. Recently, Deep Learning (DL)
    techniques have been significantly used by researchers for the early identification
    of fruit & vegetable diseases due to automatic feature extraction. The DL techniques
    have been revolutionized and recognized after winning the 2012 ImageNet Large
    Scale Visual Recognition Challenge (ILSVRC) (ImageNet, 2023) by AlexNet architecture
    (Krizhevsky et al., 2012) over traditional SVM (Cortes and Vapnik, 1995). The
    winning architectures in the successive years are ZFNet, GoogLeNet(InceptionV1),
    VGGNet, ResNet, ResNeXt, SENet, and PNASNet-5, respectively. The top-5 error rate
    has been reduced from 15.3% to 3.8%, which proves the direct correlation between
    classification accuracy and model depth (He et al., 2015). 5.1. Fruit & vegetable
    disease detection using DL techniques The nutritional content of fruits and vegetables
    has boosted the researchers to mine the precision agriculture methods by appending
    more depth to the pre-trained deep models. In the last decade, DL models have
    received significant attention from researchers and agronomists due to their ability
    to automate feature extraction and classification of images with minute regions
    of interest. Table 6 outlines the recent research work carried out in the fruitage
    domain exploiting DL methods. Janarthan et al. (2020) designed a region-based
    lightweight deep model for classifying citrus diseases. The proposed model consisted
    of three major components: deep siamese embedding, clustering module, and neural
    architecture. The deep embedding module calculated the patch embeddings of all
    eligible patches using Euclidean distance, which were grouped using the -means
    clustering. Dhiman et al. (2022a) proposed the classification model to detect
    the low, medium, high, and healthy severity levels of citrus. The images were
    segmented by the felzenszwalb graph method, whereas the Local Binary Pattern (LBP)
    method was used to cluster similar regions. The highest similarity index regions
    were merged to determine the Intersection over Union (IoU) regions which became
    an input to the Adam-optimized VGGNet model. The optimization methods can be incorporated
    with deep belief networks to optimize the hyperparameters. Rehman et al. (2022)
    presented a WAO and MobileNetV2 & DenseNet201 hybrid model for citrus disease
    detection. The image dataset was expanded using geometric augmentation, followed
    by an average-based threshold contrast stretching for image quality enhancement.
    The classification was performed using five classifiers namely, three state-of-the-art
    SVM classifiers, ensemble subspace discriminant, and LDA. Likewise, Tian et al.
    (2021) utilized the different network depths to better classify apple disease.
    The optimized InceptionV4 and Inception-ResNetV2 models were concatenated with
    the multi-scale framework (Szegedy et al., 2015). An improved You Only Look Once
    (YOLO) model was leveraged for identifying and computing the number of olive fruit
    flies (Mamdouh and Khattab, 2021). The author exploited the negative training
    sample images by appending original Dacus Image Recognition Toolkit (DIRT) images
    with Leeds butterfly datasets (LEEDS, 2022). The images were normalized using
    the yellow average color method to unify the trap background color. An improved
    U-Net architecture was presented by Roy et al. (2021a). It enhanced the U-Net
    architecture by incorporating a convolution2D, max pooling 2D, and convolution
    transpose 2D layer between the encoder and decoder. The depth level in the suggested
    En-UNet architecture was increased from 128 to 512, resulting in increased disease
    classification accuracy. Yasmeen et al. (2021) introduced the InceptionV3 and
    ResNet-18 models for citrus feature extraction, which are optimized by an Improved
    Genetic Algorithm (ImGA). The disease identification was performed using ten state-of-the-art
    methods. Experimental results demonstrated that the F-KNN method surpassed the
    other remaining considered methods in terms of accuracy and F-measure. Yao et
    al. (2022) presented a mask-scoring R-CNN model where the loss function of the
    original R-CNN model was replaced with the focal loss to reduce classification
    error and class imbalance problems. An improved instance segmentation method was
    used to identify, locate, and segment the lesion for prominent regions from the
    21 classes of the peach. Table 6. Deep learning fruit & vegetable disease detection
    techniques. Author Research methodology Species (Approx) Application/Type of disease
    Classification accuracy Findings Janarthan et al. (2020) Model-128 & Model-112
    CNN & K-Means 609 citrus tissues Canker, black spot, scab,melanose and greening
    95.04% Model with less memory utilization can be chosen for parameter tuning Dhiman
    et al. (2022a) Improved VGGNet-16 with transfer learning 3309 citrus Severity
    levels (low, medium, high, and healthy) 99.00%, 97.00%, 98.00%, 96.00% The model
    may be deployed on real-time citrus images with complex background Rehman et al.
    (2022) Whale optimized MobileNetv2 & DenseNet201 & 5 classifiers 3023 citrus tissues
    Canker, black spot, anthracnose, scab, melanose, greening, and healthy 95.70%
    Data replication in DenseNet should be focused with other improved feature selection
    methods. Roy et al. (2021a) Enhanced Unet(En-Unet) with semantic segmentation
    4035 apples Rotten and fresh apple 97.54% Improvise the model to perform the multi-class
    classification Yasmeen et al. (2021) GA optimized ResNet18 & Inceptionv3 & SVM
    7500 citrus tissues Canker, black spot, anthracnose, scab, melanose, greening
    and healthy 97.70% (Fruit), 94.00% (Leaves), 99.50% (Hybrid) Discussion on premature
    convergence issue should be taken into account. Tian et al. (2021) CycleGAN augmented
    multiscale dense Inceptionv4 & ResNetv2 5801 apple tissues Recognition of 11 categories
    of various forms of anthracnose, scab, rust, and ring rot disease 94.31% (Inceptionv4),
    94.74% (Inceptionv2) Cross-domain image translation for image expansion led to
    future work Mamdouh and Khattab (2021) Modified YOLOV4 1680 olive fruit flies
    Detection and counting of olive fruit flies 84.00%, F1-Score (0.90), mAP (96.68%)
    Design of multi-class classifier (male or female Olive flies) & augmenting the
    negative training samples that mimic the original olive fly Yao et al. (2022)
    Mask R-CNN and Scoring R-CNN 1560 peach tissues Brown rot, anthracnose, bacterial
    shot hole, powdery mildew, gummosis,scap, and curl 0.46 (Segment ation Accuracy)
    The model can be extended for video data for temporal information Li et al. (2022)
    YOLO-JD architecture with SPPM, DSCFEM, and SCFEM feature extraction 4418 jute
    Soft rot, dieback, jute chlorosis, jute mosaic, anthracnose, stem rot, top blight,
    black band and two pests (Comophila sabulifers & Hairy Caterpillar) 96.63% (mAP)
    and 95.83% (F1-Score) Improved YOLO-JD should be deployed on handheld devices
    Oppenheim et al. (2019) Pre-trained CNN Architectures 2465 potatoes Common scab,
    black scurf, silver scurf, black dot, and disease free patches 96.00% for 90:10
    dataset Improvise the models with diversity and variability of the data da Costa
    et al. (2020) ResNet50 with L2 regularization 43 843 tomatoes Detection of normal
    and abnormal Tomato 94.60% Model can be further extended by considering high variance
    for bias Vasumathi and Kamarasan (2021) CNN, LSTM 6519 pomegranates Healthy and
    unhealthy pomegranate 98.17% Diseases like heart rot, bacterial blight, and cercospora
    can be further identified Selvaraj et al. (2019) MobileNetv1 with transfer learning
    12 600 banana tissues Fusarium Wilt of Banana, Banana Bunchy Top Disease, Black
    Sigatoka, Xanthomonas Xilt of Banana, Yellow Sigatoka, and Banana Corm Weevil
    99.72% Handheld application for disease detection may be future work Wang et al.
    (2019) Study of VGG16, ResNet-50, ResNet-101, MobileNet with Faster R-CNN and
    Mask R-CNN 286 tomatoes Malformed, anthracnose, blotchy ripening, ulcer, puffy,
    gray mold, dehiscent, virus,blossom-end rot, sunscald 99.64% (Mask R-CNN), 88.53%
    (Faster R-CNN) The model can be investigated on low-resolution images and other
    variety of crops Tian et al. (2019) CycleGAN augmented DenseNet YOLOV3 640 apples
    Detection of anthracnose disease 0.81 F1-Score, & 0.032 s detection time Future
    direction can lead to consider those affected regions which are not visible by
    naked eyes or extremely unclear Meshram et al. (2021) Model FC_Inceptionv3 & MFC_Inceptionv3
    using Inceptionv3 1200(apples, bananas, guavas, limes, oranges, pomegranates)
    Detection of Binary classification either Good or Bad 99.92% Future direction
    can focus on the large computation power and training time of Inceptionv3 network
    Han et al. (2021) Improved Mask R-CNN 74 apples Detection and localization of
    anthracnose disease 72.26% (mAP) Future study should be followed for extensive
    edge segmentation. Thangaraj et al. (2020) Adam optimized mobileNet model 9000
    avocado images Anthracnose, sun bloch, cercospora, stem end rot, phytophthora,
    seed moth, rat bite, scab 96.82% Slow convergence rate of the Adam optimizer needs
    to be focused Kizilboga et al. (2020) AlexNet 600 apples and quinces Black spot,
    powdery mildew, worm, alternaria and quince diseases like blue mold rot and brown
    rot 83.30% Dataset can be expanded to include the real-time images to sustain
    the reliability of the model Khan et al. (2018) GA optimized Caffe-Alexnet network
    and SVM 2700(apples and banana tissues) Scab, rot and banana disease like diamond
    spot, cordial, deightoniella, and sigotka 98.60% Feature extraction and segmentation
    domain can be further explored to get better accuracy Saini et al. (2021) Study
    of VGG16, Resnet-50, InceptionV3, and VGG19 using transfer learning 705 citrus
    Canker, black spot, anthracnose, scab, melanosis, greening, powdery mildew and
    healthy 99.89% Augment the dataset by merging the real-time images to preserve
    the reliability of the model Buyukarikan and Ulker (2022) VGG16 with SVM, RF,
    KNN, XGBoost 1080 apples Shriveling, superficial scald and bitter pit in granny
    smith, golden delicious images 96.11% (data-1), 96.09% (data-2) The training time
    and parameters needs to be reduced for future work Turkoglu et al. (2019) GoogleNet,
    AlexNet, DenseNet201 and LSTM 1192 apples Monilinia laxa, aphis pomi deg, venturia
    inequalis and eriosoma lanigerum 99.20% Multifruit disease classification led
    to the future research work Khattak et al. (2021) Conv layer-1, Maxpool-1, Conv-layer2,
    Maxpool-2, Flatten layer 1067 citrus tissues canker, black spot, melanosis, greening
    and scab 95.65% Hybridization of CNN, RNN, LSTM, and Bi-LSTM should be reviewed
    Dhiman et al. (2021) CLAHE, Canny edge detection, PCA & RNN 4000 multiple fruit
    varieties Bad and good quality 98.47% (Accuracy), 98.93% (Precision), 1.53% (MSE)
    New deep learning model on a multi-fruit system with dynamic feature extraction
    should be enlightened Chaturvedi et al. (2023) ResNet50, EffcientNetB4, VGG19,
    Inceptionv3, and DenseNet201 using transfer learning 43 843 tomatoes Aberrations,
    rotten, bruises, and cuts 97.97% (EffcientNetB4) The pre-trained models are susceptible
    to data complexity and compatibility issues Dhiman et al. (2023) Fusion of CNN
    & LSTM, magnitude-based pruning and nonpruning 2950 citrus canker, black spot,Melanose,
    greening and scab 97.18% & 98.25% The model size can be further decreased using
    post-quantization method Hu et al. (2023) YOLOV5 pre-trained model with attention
    block, DIoU as modified loss function 845 citrus Binary classification (Defect1,
    Defect2) 95.50% (mAP), 94.00% (Precision), 95.10% (Recall) Spectral imaging techniques
    can be further deployed to study the internal defects Consequently, an improved
    YOLO-JD architecture was suggested for real-time disease detection in jute (Li
    et al., 2022). The Spatial Pyramid Pooling Module (SPPM), Deep Sand Clock Feature
    Extraction Module (DSCFEM), and Sand Clock Feature Extraction Module (SCFEM) were
    used for high-quality feature extraction. Lastly, the final detection module,
    in combination with the Non-Max Suppression (NMS) method, was used to select the
    final anchor box. Oppenheim et al. (2019) addressed the disease identification
    problem in potato tubers using deeply improved CNN architecture. The resized images
    were classified using a deep CNN model with eight tunable layers, which includes
    five convolution2D with max pool layers, three fully connected layers, and one
    softmax activation layer. A grading and sorting method was developed by da Costa
    et al. (2020). The method utilized the fomesa machine to capture 1500 tomato images.
    Vasumathi and Kamarasan (2021) classified the pomegranate fruit into infected
    or non-infected classes utilizing the deep convolution network pipelined with
    long short-term memory for detection. Selvaraj et al. (2019) collected 12,600
    balanced real-world banana images at different growing phases with different resolutions,
    illumination conditions, and varying environmental conditions to avoid underfitting,
    overfitting, and generalization errors. The author performed the analytical study
    of Faster R-CNN InceptionV2, Faster R-CNN ResNet50, and SSD MobileNetV1 networks.
    The experiments were conducted to detect disease and pest symptoms and classify
    the whole plant, fruit bunch, pseudo-stem, and cut fruit. Meshram et al. (2021)
    compared the misclassification rate of two proposed models FC_InceptionV3 (Fruit
    Classification InceptionV3) and MFC_InceptionV3 (Merged Fruit Classification InceptionV3)
    by utilizing the “Divide and Conquer” concept (The design, 2022). FC_InceptionV3
    architecture implemented the pre-trained model InceptionV3 while MFC_Inception
    V3 architecture was developed using a novel Merged Net (MNet) framework. The first
    FC_InceptionV3 architecture dealt with multiple fruit recognition, while the second
    FC_Inception V3 architecture dealt with fruit quality bad or good binary classification
    simultaneously, which were merged together into a single pertinent classification
    class. Although some researchers reviewed the state-of-the-art models for automatic
    disease detection, Thangaraj et al. (2020) worked on the state-of-the-art Adam-optimized
    MobileNet model using transfer learning for automatic disease recognition in avocados.
    The transfer learning method replaces the final classification layer with a fine-tuned
    layer with eight disease classes. Kizilboga et al. (2020) manifested AlexNet and
    improved CNN deep neural networks to classify the disease in the apple and quince
    datasets. Consequently, Saini et al. (2021) studied the pre-trained architectures,
    namely, VGG16, ResNet-50, InceptionV3, and VGG19, using the transfer learning
    method for identifying and classifying the diseases in citrus. The author experimentally
    showed that the VGG19 prototype outperformed the rest state-of-the-art models
    with a classification accuracy of 99.89%. A novel Correlation Coefficient & Deep
    Features (CCDF) method was adopted for disease detection in multiple fruits &
    vegetables (Khan et al., 2018). The first stage performed a contrast stretch operation
    for better infected area visualization. The second stage exploited the Caffe AlexNet
    and VGG16 state-of-the-art models for feature extraction, which were fused together
    to aggregate the features. The Genetic Algorithm (GA) selected the most critical
    features from the maximum feature vectors, which became the input to the multi-class
    SVM classifier. Buyukarikan and Ulker (2022) compared the amalgam of VGG16 and
    VGG19 for 4096 feature extraction, ResNet50, ResNet152, and ResNet101 for 2048
    feature extraction, and LR, SVM, XGBoost, and RF models with fivefold cross-validation
    approach for disease classification against original (1080) and augmented (4320)
    apple data images. Furthermore, Turkoglu et al. (2019) applied three tier Long
    Short Term Memory (LSTM) model as an aggregated majority voting classifier for
    multi-class disease classification in the apples. DenseNet201, GoogleNet, and
    AlexNet extracted the feature vectors of dimensions 1000, 1024, and 4096, respectively,
    which were then taken as an input to three LSTM layers followed by the combination
    of an FC, softmax, and a classification layer. Khattak et al. (2021) addressed
    the automatic citrus species disease classification problem by integrating manifold
    CNN layers. The proposed model exploited the first convolution and max pooling
    layers for feature extraction and dimension reduction, respectively. On the other
    hand, the second convolution and max pooling layers were used for high-level feature
    mapping and image downsampling. Finally, the flatten layer is followed by the
    classification layer for disease detection. An autonomous multi-fruit sorting
    system was designed by Dhiman et al. (2021). The grayscale image quality was enhanced
    using contrast enhancement and CLAHE edge operator for light balancing and object
    boundary detection. Using the PCA method, the author proposed a recurrent neural
    network for binary classification after extracting good-quality and bad-quality
    feature vectors. Moreover, Chaturvedi et al. (2023) presented autonomous external
    lesion detection in tomatoes. The paper compared the five state-of-the-art architectures.
    The experimental results witnessed that EfficientNetB4 surpassed the other models
    by achieving the recognition accuracy of 97.97%. A CNN-LSTM-based model was used
    for early disease classification of the citrus (Dhiman et al., 2023). The images
    were segmented using canny edge detection and the -Means clustering. The model
    was trained and tested with pruning and quantization methods for five-class classification.
    Moreover, an improved YOLOV5 method was proposed for two defect detection, namely
    black spots and surface damage in citrus (Hu et al., 2023). The Convolution Block
    Attention Module (CBAM) was integrated into the YOLOV5 model, whereas the loss
    function was optimized using Distance Intersection over Union (DIoU). The performance
    was evaluated using Generalised Intersection over Union (GIoU), Complete Intersection
    over Union (CIoU), and Efficient Intersection over Union (EIoU) loss functions.
    6. Internet-of-things and Cyberphysical System Recently, Internet-of-Things (IoT)
    and Cyberphysical Systems (CPS) have emerged as innovative and promising edge-cutting
    technologies, offering trustworthy and effective solutions for smart agriculture.
    IoT comprises heterogeneously connected physical entities, empowering them with
    new autonomous computation power. Moreover, IoT offers new capabilities, connecting
    virtual and physical devices, where Machine-to-Machine (M2M) interaction makes
    the interconnection between things and cloud applications. The Internet Architecture
    Board (IAB) defines IoT as a collection of embedded network devices utilizing
    communication internet protocols. In 1999, Kevin Ashton first referred to IoT
    as distinctly identifiable, coherent, interconnected entities with Radio Frequency
    Identification (RFID) technology to track and count goods in supply chains (Floerkemeier
    and Lampe, 2005). The Indian government has launched the “Digital India” flagship
    program intending to incorporate digitalization into every aspect of society.
    Different research organizations have predicted a wide span of projections concerning
    the significant impact of IoT on the future internet and their global economy.
    For instance, Cisco (CISCO, 2022) expects its global economy of almost $24 billion
    in IoT connections. On the other side, Huawei (Huawei, 2022) projects $100 billion
    in network-connected devices, and McKinsey Global Institute (Manyika et al., 2015)
    forecasts their IoT global economy from $3.9 to $11.1 trillion by 2025. Thus,
    internet traffic will exponentially grow as connected IoT devices increase. Cisco
    (CISCO, 2022) expects the volume of internet traffic from non-PC devices will
    rise from 40% to 70%. The volume of “Machine to Machine” (M2M) interconnections
    in all IoT verticals, including farming, healthcare, industrial, smart city, automotive,
    transportation, home, unmanned aerial vehicles, and others, will rise from 24%
    to 43% in the coming future. As per the global precision agriculture market trends
    (Agriculture, 2022), it is expected to touch 15.34 billion by the end of 2025.
    Download : Download high-res image (625KB) Download : Download full-size image
    Fig. 4. Flowchart of IoT enabled E-Agriculture . Table 7. IoT development board.
    Architecture Microcontroller Memory Clock speed (MHz) I/O Arduino Nano ATmega328P
    32 KB 16 14 (Digital), 6 (Analog) Arduino Uno ATmega328 256 KB 16 14 (Digital),
    6 (Analog) Arduino Mega ATmega1280, ATmega2560 256 KB 16 54 (Digital), 16 (Analog)
    ARM LPC2148 32-512 KB 60 32 I/O ESP2866 RISC 4 MB 80 16 (Digital), 1 (Analog)
    Raspberry Pi Broadcom BCM2387 chipset 1 GB 1.2 GHz 16 GPIO (PI 1), 40 GPIO (PI2&
    3) 6.1. Iot enabled E-Agriculture IoT-based precision farming comprises multiple
    physical components (sensors, actuators, microcontrollers), data gathering from
    IoT-based sensors, data processing, and data analytics. A sensor (transducer)
    is a physical device that senses the abrupt change in the environment and converts
    the data from physical phenomena (like humidity, pressure, temperature, light,
    and motion) to another form of energy. Conversely, an actuator is a physical device
    that performs in the counter direction of the sensor. Whereas, microcontroller
    devices (ATMEGA series, Arduino, Raspberry Pi) control the functionality of device
    identification and service discovery in the network through network-connected
    remote devices. To facilitate the transceiving of agriculture data, different
    application layer messaging protocols like WebSocket, Message Queue Telemetry
    Transport (MQTT), Secure MQTT (SMQTT), Extensible Messaging and Presence Protocol
    (XMPP), Advanced Message Queuing Protocol (AMQP), Representational State Transfer
    (REST), Data Distribution Service (DDS), and Java Message Service (JMS) and communication
    protocols like Zigbee, IPv6 over Low Power Personal Area Networks (6LoWPANs),
    Low Power Wide Area Network (LPWAN), Bluetooth Low Energy (BLE), Z-Wave, IEEE
    802.15.4, SigFox, Wireless HART are employed to provide homogeneous and standard
    communication from different embedded devices. IoT edge or ubiquitous fog computing
    can be analyzed in various domains of precision agriculture like soil monitoring,
    weather prediction, livestock management, field monitoring, greenhouse monitoring,
    and pest monitoring fields. Moreover, Agriculture robots (agribots) can be used
    to maximize crop yields and resource utilization using innovative advanced Information
    and Communication Technology (ICTs) (Gollakota and Srinivas, 2011). E-agriculture
    involves gathering real-time data from the IoT sensors, monitoring the fruitage
    environmental attributes, routing the data from the farmlands to the control center
    for processing the collected information, and presenting the result visualizations
    to the agrarians. The basic flowchart of the IoT-enabled E-Agriculture has been
    depicted in Fig. 4, which has been layerwise discussed below: • Data Acquisition:
    The initial layer is the data sensing layer, which comprises various smart sensors
    to gather real-time information from the farmlands. For instance, optical sensors
    collect the reflectance data and measure soil attributes like moisture, and pH.
    These smart sensors are mounted at a specific height from the farmland’s surface
    to observe and regulate diverse physiological indicators related to the soil,
    fruitage crops, and environment, which are either directly or indirectly crucial
    to disease identification in the fruitage domain. Additionally, UAVs equipped
    with thermal cameras, IoT cameras, and agribots are employed in the agriculture
    fields to measure the ecological factors for disease classification, displaying
    the findings through images. • Network Communication: The layer focuses on the
    connectivity between the sensory nodes and data routing technologies. Wireless
    Sensor Networks (WSNs) enable real-time monitoring & enhancement of fruit production
    quality, alongside the capability for extensive monitoring with a high density
    of data points. It can ensure the optimal conditions for the highest fruit yield
    by continuously tracking the complex interaction between the IoT sensor nodes
    distributed across the field using communication protocols. For instance, Long
    Range (LoRa) communication protocol facilitates long-range transmission with minimal
    power consumption, ideally suited for battery-powered wireless IoT devices. It
    employs the Decision Support System (DSS) to analyze the aggregated data using
    micro-controllers like Arduino, Raspberry Pi, and ESP8266, as shown in Table 7.
    • User Interface: This layer integrates the smart prediction models to deliver
    visualization insights concerning disease identification in fruits and vegetables.
    It presents the informative decisions collected from different IoT devices in
    an understandable format. It guarantees that both informational and control features
    about the farms are readily available on diverse smart devices, such as smartphones,
    tablets, computers, and specific interfaces. This accessibility allows farmers
    to engage with the IoT system at their convenience from any location. The end-user
    agrarians can take immediate action based on the IoT system’s response for higher
    production yield. 6.2. Fruit & vegetable disease detection using IoT In the last
    decade, IoT has significantly placed in fruit disease classification and prediction
    by employing deep learning, machine learning, and computer vision techniques.
    Table 8 contextualizes the study of existing IoT-integrated approaches for autonomous
    visual disease detection systems of real-time fruits and vegetables. Zhang et
    al. (2022) integrated the IoT ecosystem with multi-scale dual-channel CNN (DMCNN)
    to identify apple diseases. The IoT architecture consisted of Jetson Xavier Nx
    and TensorRT accelerator. The method extracted relevant texture information using
    twin-factor weight optimization in the attention algorithm. The extracted features
    were fused using the cross-fusing method to construct DMCNN. Mishra et al. (2019)
    analyzed the heat index value to differentiate the ripened stage of lime, lemon,
    guava, orange, plum, green peas, potato, carrot, cucumber, and carrot. The IoT
    architecture was developed using an optical sensor integrated with an infrared
    camera for real-time infrared image acquisition, an Arduino processor for heat
    index, and a Wi-Fi module for communication over the network. The ripe, unripe,
    and rotten species were investigated based on the heat signature parameter. The
    validation of the proposed architecture can be further tested against multiple
    large-scale varieties of fruits and vegetables. Also, further research can be
    carried out to emphasize additional parameters of fruits other than the heat index.
    Table 8. Internet-of-things fruit & vegetable disease detection techniques. Author
    Research methodology Species (Approx) Application/Type of disease Classification
    accuracy Findings Zhang et al. (2022) 8 GB Jetson Xavier NX edge node with 5.00
    MP CSI camera & TensorRT accelerator, DMCNN network 2330 apples Ring rot, anthracnose
    and healthy 98.50% Further invention can be done to reduce the parameters for
    feature fusion to speed up the rate Mishra et al. (2019) An infrared camera, Arduino
    processor, a wifi module, and mobile device. 5 fruitage types Ripening or unripened
    100.00% Dataset can be augmented to sustain the reliability of the model Zhou
    et al. (2021) UAV and near ground digital images acquisition, images normalization
    using calibrated reflectance panel and gray card and YOLOV3 architecture 5843
    strawberries 7 maturity stage for near ground images and 3 maturity classes for
    UAV images 93.00% (for UAV images), 94.00% ( near ground images) High-resolution
    UAV images can be further explored to classify more classes of strawberry Akhter
    and Sofi (2021) Six sensors comprising of IRIS incorporated with an MTS 420 sensor
    board and MIB 520 gateway as wireless sensor/IoT nodes and LR model 265 770 apples
    Scab Error of 9.30, 0.13, 0.17 for Intercept, temperature & wetting duration Further
    research can be investigated on the interoperability, security, scalability, and
    configuration of network Jawade et al. (2020) Atmega microcontroller board, humidity
    and temperature sensors from on-field IOT kit, Thingspeak cloud storage platform,
    RF classifier mangoes Forecasting of disease on Alphonso mangoes Least mean absolute
    error of 0.046 Forecasting result can be further improved by incorporating deep
    belief convolution network Ismail and Malik (2022) 2 Raspberry Pi module (Google
    AIY Vision Kit and module having touchscreen) and study of the performance of
    various models like EfficientNet, MobileNetV2, ResNet, NASNet and DenseNet. 9091
    (apples, bananas) healthy (ripe) and unhealthy(overripe) of apple(banana) 93.80%
    (Banana), 96.70% (Apple) The model can be further enhanced by mitigating image
    pre-processing and segmentation approaches Arya and Gangwar (2021) Sensors for
    various environmental parameters, internet, gateways, wi-fi for communication,
    OBRB for feature extraction and RANSAC for feature mapping 13 599 (apples, bananas,
    and oranges) Fruit freshness level 97.50% The upper time bound of the algorithm
    can be further limited with optimal solutions. Aasha Nandhini et al. (2018) Raspberry
    Pi 3 as the sensor platform and Thingspeak platform, GLCM feature extraction,
    compressed and uncompressed with CS and OMP, and SVM classifier Multiple fruitage
    cultivars Anthracnose, blight, spot, alternaria 98.51% The accuracy of the proposed
    algorithm can be further validated by stable convergence rate of the basis pursuit
    Bhole et al. (2020) GLCM feature extraction, KNN and RF classifiers for thermal
    images Multiple fruits & vegetables Binary class( non-infected & infected) 97.37%
    (RGB), 84.97% (Thermal) Thermal images fail to identify images with erratic temperature
    Gawas et al. (2021) The microcontrollers (MQ3 & MQ4 sensors) for ethanol and methane
    concentration, three cameras, nodeMCU8266, and advanced InceptionV3 model 13 599
    (apples, bananas, and oranges) Binary classification(fresh and rotten) 99.17%
    Future possibility is real-time images that are more disease prone Pawara et al.
    (2018) Humidity sensor(AM2302), temperature (DHT22), Arduino Uno microcontroller,
    ThinkSpeak cloud, SIM800 Quad band GSM/GPRS, Hidden Markov Model Pomegranate Bacterial
    blight 75.00% Further work can be done in implementing ML algorithm for pre-processing
    and enhancement Microsoft (2022) Raspberry Pi3, Thingspeak, PSO optimized CNN
    800 citrus Canker, scab, black spot, greening, anthracnose, and melanose 96.08%
    Local exploration can be avoided with other meta heuristics optimization algorithms
    Khattab et al. (2019) Sensors, ATmega2560 microcontroller having Arduino bootloader,
    SIM900 GSM transceiver, Grounded Layered Architecture with IR agent for forecasting
    100(Tomatoes and potatoes) Late blight, early blight, powdery mildew 0–5 (Disease
    Severity Index) Research can be further investigated in automated fertilizer and
    precision irrigation application Abdulridha et al. (2019) Pika L 2.4 camera with
    SpectrononPro control software, DJI Matrice 600 multi-rotor UAV equipped with
    Pika L 2.4 camera, two classifiers (KNN and RBF) 160 citrus tissues Growth stage
    of citrus canker (late, early and asymptomatic) 92.00% Vegetable indices can be
    further explored to determine the other harmful diseases Pavel et al. (2019) Three
    sensors with camera, Arduino Mega 8560 microcontroller, Raspberry Pi 3, Multiclass
    SVM for classification 150 (cucumber, tomato and eggplant) Anthracnose, bacterial
    blight, alternaria, dislocation rosae, and cercospora spot 97.33% The classifer
    models fail to achieve the reasonable accuracy for large datasets. Deep Belief
    network led to future work Xiao et al. (2022) UAV (DJI Matrice 200 multi-rotor)
    equipped with the MicaSense RedEdge-M multispectral camera and RF, SVM and decision
    tree classifiers 165 apple trees Apple fire blight disease 94.00% Model can be
    slow down for multi-disease classification Schoofs et al. (2020) UAV (an Altura
    X8 octocopter) incorporated with COSI hyperspectral camera and fixed-wing SenseFly
    eBee platform with S.O.D.A camera, tree-based model 47 pear orchards Pear fire
    blight disease 85.00% Further improvements can be done by focusing operational
    tracking of fire blight with UAV-equipped spectral sensors Moriya et al. (2021)
    Rikola hyperspectral camera integrated with UAV-UX4 model, UV/NIR ASD spectrometer
    (for radiometric correction), SAM classifier 7127 citrus trees Citrus gummosis
    disease caused by fungus Phytophthora spp Multispectral: 79.00% (Accuracy), 0.55
    (F-Score) Hyperspectral: 94.00% (Accuracy), 0.85 (F-Score) The accuracy of the
    Multispectral data can be further improved by choosing specific bands that are
    more susceptible to citrus gummosis disease Devi et al. (2020) IOT sensors (Temperature,
    pH, Gas and Moisture), Arduino UNO as a microcontroller, ThinkSpeak cloud server
    and GoogLeNet architecture Multiple fruitage varieties Determination of the pesticide
    amount in various fruits & vegetables 99.90% Generalization of the model in detecting
    of other harmful diseases with same accuracy can lead to the base of the future
    work Dairath et al. (2023) Four channel relay modules (LED, Roller pump, Gear
    motor, Roller pump), four servo motors as a robotic arm Multiple species Binary
    classification (Good or Bad) 15.00 s (Detection time) Improvise the model by implementing
    roller conveying module to visualize the 3D view of species Vanitha et al. (2023)
    Color frequency IR sensor, conveyer moving belt, servo motor, LED, Arduino UNO(IDE),
    Rectifiers Tomatoes Ripe or unripe 20.00 s (mean count time) Model can be transformed
    with more parameters like recognizing the defective & disease type Zhu et al.
    (2023) Knowledge graph, Raspberry Pi camera module, Neo4j storage, Hanlp toolkit,
    VGG16 classifier Lychee & Longan Sooty blotch disease entity, hypitima longanae
    pest entity, & colletotrichum spp bacteria entity 94.90% Large parameter size
    of the pre-trained model can be further replaced with other CNN models to extend
    the accuracy Furthermore, the YOLOV3 object detection model for autonomous maturity
    level detection of the strawberry was analyzed by Zhou et al. (2021). The proposed
    method collected three datasets from UAV at 2 and 3 meters height using DJI Phantom
    4 Pro equipped with RGB cameras that were further normalized using an adjusted
    reflectance instrument. Similarly, near-ground digital images were captured using
    a Canon EOS 5D Mark III camera at a height of 0.5 m. Thereafter, a pre-trained
    YOLOV3 model was used to detect the seven different maturity stages (from flower
    to rotten) for RGB images, whereas, three different maturity stages (flower, mature,
    immature) were analyzed for the UAV images. Akhter and Sofi (2021) incorporated
    IoT-based wireless sensor networks to identify apple scab disease using ML algorithms.
    Real-time data acquisition was performed using six DHT22 IoT sensors (S1 to S6)
    with an MIB 520 embedded IRIS 2.4 GHz module and Zigbee protocol to record temperature
    and humidity. Likewise, Jawade et al. (2020) introduced a random forest and IoT-based
    model for early disease prediction in Alphonso mangoes using ATMEGA microcontroller.
    Mango disease prediction was made by experimenting with a random forest classifier
    against real and past data of 20 years from the meteorology office of Vengurla,
    Sindhudurga. Moreover, IoT-based prototypes can be used for fruit sorting purposes.
    Ismail and Malik (2022) developed a prototype consisting of two Raspberry Pi components
    for inspecting the grading of apples and bananas based on the disease severity
    levels. The training and testing images were segmented using shift and watershed
    methods respectively (Cheng, 1995, Vincent and Soille, 1991). The classification
    performance was tested against five state-of-the-art models, namely, EfficientNet,
    MobileNetV2, ResNet, NASNet, and DenseNet. The experimental results illustrated
    that the EfficientNet model outperformed four other methods by achieving an accuracy
    of 93.80% and 96.70% for bananas and apples, respectively. Furthermore, Arya and
    Gangwar (2021) investigated the ripeness severity of the apple, banana, and orange.
    Different real-time sensors were used to collect the parameters like pH level,
    temperature, time, and ripeness. On the same footprint, a novel Raspberry Pi-3-enabled
    Compressed Sensing Web-Enabled Disease Detection System (CS-WEDDS) was addressed
    for the disease detection problem (Aasha Nandhini et al., 2018). The diseased
    images were segmented using a Mean-based Threshold Strategy (MTS), which was further
    processed using the DCT algorithm to generate sparse matrices (Indumathi et al.,
    2017). Further, the storage overhead was mitigated by employing the hybrid measurement
    matrix method (Nandhini et al., 2015). Finally, texture features were extracted
    using the GLCM, which was passed to a linear kernel-based SVM classifier. Likewise,
    a smart IoT system was designed to capture images using an RGB and thermal camera-SEEK
    with a thermal sensor (Bhole et al., 2020). During data acquisition, 11 different
    agro-products were revolved on the tray fixed at the top of a stepper motor to
    capture 3D video frames. The stepper motor was controlled by an Arduino Uno-microcontroller
    attached to ICA4988. Eleven outer texture features were collected using GLCM,
    which were further classified into infected and non-infected classes by random
    forest and KNN. The experiments concluded that the random forest classifier overshadowed
    the KNN algorithm for texture features of both RGB and thermal images. Gawas et
    al. (2021) suggested an intelligent farming system for monitoring the freshness
    level of apples, bananas, and oranges. The architecture consisted of a conveyor
    belt that was integrated with a motor, sensors, three cameras, and nodeMCU8266.
    MQ3 and MQ4 sensors determined the species’s ethanol (C2H6O) and methane gas (CH4)
    concentrations. Transfer learning with the inception V3 model was leveraged for
    recognition and disease classification. Similarly, An IoT-cloud-based method was
    developed for early disease detection in pomegranate tissues (Pawara et al., 2018).
    Digital temperature sensor (DHT22) and humidity sensor (AM2302) were used to collect
    the real-time temperature and humidity values, which were processed by Arduino
    Uno microcontroller. The processed images were sent to the ThinkSpeak cloud. The
    framework then fed the captured cloud dataset to the Hidden Markov Model (HMM)
    using a base station to predict the bacterial blight disease based on probability
    distribution. Recently, swarm-optimized IoT models have received significant attention
    from researchers for the parameter optimization of IoT-based smart systems in
    agriculture. Microsoft (2022) implemented a PSO-optimized CNN with IoT modules
    for multiple disease detection in citrus tissues. Real-time citrus images were
    collected using camera sensors and transferred to the ThinkSpeak cloud via the
    Raspberry Pi3 IoT interface. The Adam-optimized cross-entropy loss function was
    evaluated as a fitness function for the CNN network. During the velocity computation
    phase, the variation of pooling layer parameters from the fully connected layer
    is determined by decision factor C . If r then variation from the pooling layer
    (gBest) to the current layer is chosen; otherwise, the variation from the fully
    connected layer (pBest) to the current is chosen where r [0,1]. If the current
    layer parameters have comparable layer types to gBest and pBest, the velocity
    computation is applied. The developed method outperformed other considered methods
    by achieving an accuracy of 96.08%. An agro-weather system was developed for automatic
    disease detection of potato and tomato vegetables (Khattab et al., 2019). The
    proposed system acquired eleven real-time attributes relevant to the tomato vegetables.
    ATmega2560 microchip integrated with an open-source Arduino bootloader was used
    to send the sensor’s information (ATmega, 2022). The back-end layer implemented
    a software-based expert system for disease prediction. The software module exploited
    the GLAIR AI agent (Grounded Layered Architecture with Integrated Reasoning) for
    forecasting the results (Shapiro and Bona, 2010). Abdulridha et al. (2019) utilized
    ML-enabled smart UAVs for estimating late, early, and asymptomatic symptoms of
    canker disease in citrus tissues. Indoor hyperspectral images were collected using
    an imaging setup consisting of a two-dimensional Pika-L-2.4 camera and SpectrononPro
    control software. Similarly, Outdoors hyperspectral images were collected using
    a two-dimensional Pika-L-2.4 camera and UAV with DJI Matrice 200 multi-rotor and
    Pro Hexacopter. The captured hyperspectral images were calibrated to radiance
    images using an Imager Calibration Pack (ICP) installed with Spectronon Radiance
    Conversion (SRC) plugins. Pavel et al. (2019) utilized IoT-based sensors for real-time
    image acquisition of tomato, cucumber, and eggplant tissues using the camera interfaced
    with the Arduino Mega 8560 microcontroller. The resized RGB images were further
    transformed to the L a b color subspace. Finally, the images were segmented to
    identify the disease-infected regions using the -means clustering algorithm. Xiao
    et al. (2022) introduced a smart UAV with a DJI-Matrice 200 multi-rotor and the
    MicaSense RedEdge-M camera for multispectral image acquisition. The images were
    calibrated using Pix4DMapper software for radiometric and geometric calibration
    to generate the orthophotos and digital surface model. The top three Vegetation
    Index (VI) features, namely, Triangular Vegetation Index (TVI), Anthocyanin Reflectance
    Index (ARI), and Ratio Vegetation Index (RVI), and their optimal correlation were
    determined using the minimum Redundancy Maximum Relevance (mRMR) method. Additionally,
    iForest (isolation Forest) algorithm was used to identify the fire blight disease
    in the apple (Liu et al., 2008). On the same footprints, a SAM and GNSS-based
    model was introduced by Moriya et al. (2021). The hyperspectral images with twenty-five
    sensor bands and multispectral images with three sensor bands were acquired from
    Rikola DT-0014 camera integrated with the UAV-UX4 model (HSI, 2022) to generate
    hyperspectral cubes. The radiometric calibration and ortho-calibration of hyperspectral
    cubes were performed by UV/NIR ASD spectrometer (Honkavaara et al., 2013). The
    processed images were passed to investigate the health level of the citrus trees.
    Furthermore, Devi et al. (2020) delineated the IoT system in which real-time fruitage
    parameters (MQ135 sensor for atmospheric gas, DHT11 sensor for temperature and
    humidity, pH sensor) were collected, which were pre-processed using Arduino Uno
    microcontroller. The processed features were saved on the ThinkSpeak cloud via
    the ESP8266 wireless communication module. The result showed that GoogLeNet architecture
    performed superior as compared to the other considered methods. A novel robot
    prototype was introduced to pluck agro-products based on disease severity level
    (Dairath et al., 2023). However, the tissue defect percentage was calculated to
    select the threshold value. The grading result was further transmitted to the
    robotic arm via Arduino Uno microcontroller. Moreover, autonomous defect detection
    of tomatoes was categorized into ripe(red) and unripe(green) based on the color
    vision and IoT system (Vanitha et al., 2023). The servo motor moves the tomato
    to the conveyor’s right side. The IR Sensor counted the number of ripe and unripe
    tomatoes, whereas the color was decided based on the frequency of the radiation.
    A recent IoT-based system was developed for the pest identification of longans
    and lychees using Raspberry Pi and VGG16 network (Zhu et al., 2023). The important
    features were extracted using the Hanlp toolkit, whereas the sooty blotch as a
    disease entity, hypitima longanae as a pest entity, and colletotrichum spp as
    a bacteria entity were used to develop the knowledge graph. The cosine similarity
    score was used for knowledge fusion which was further stored using the Neo4j database.
    7. Data sets Fruits and vegetables are prone to disease as human beings. Accurate
    and rapid fruitage disease categorization and early disease recognition as per
    their physical appearance (color, shape, and size), index, and quality parameters
    are the unfulfilled demands of Agriculture 4.0. With life-long shifts in the environmental
    scenarios, ecologically adaptable agro-product cultivars are becoming crucial
    in agriculture. Thus, it is necessary to assess the features at every growth phase
    to select potential species that can be utilized in recent technologies for multiple-dimensional
    areas. This section aims to develop the metadata of existing fruit and vegetable
    datasets with considerable disease categories, which may help the domain researchers
    to get consolidated one-place information for the study. Table 9 presents some
    of the names, properties, acquisition methods, and URLs of the benchmark fruitage
    dataset. Table 9. Fruit & Vegetable benchmark datasets. Researcher Species or
    Datasets Total Dataset properties Dataset collection Dataset URL Rajbongshi et
    al. (2022) Guava fruits and leaves 681 114 Phytophthora, 94 Styler end rot, 106
    Scab, 87 Red rust, 126 Healthy leaves and 154 Healthy fruits Nikon DSLR D3200
    camera with 1.5 time focal length and 23.2 × 15.4 mm resolution https://data.mendeley.com/datasets/x84p2g3k6z/1
    Rauf et al. (2019) Citrus fruit and leaves 759 15 Scab, 241 Canker, 220 Greening,
    190 Black spot, 13 Melanose and 80 Healthy images Canon DSLR EOS 1300D camera
    with 14.9 × 22.3 mm sensor size and 5202 × 3465 resolution https://data.mendeley.com/datasets/3f83gxmv57/2
    Meshram and Patil (2022) Multiple fruits varieties 19 526 High-quality images
    of six categories having three variants i.e. Good, Bad and Mixed quality High-resolution
    iPhone6(Apple), Realme(5 Pro) and ZUK(Z2 Plus) https://data.mendeley.com/datasets/b6fftwbr2v/1
    Kumar et al. (2021) Pomegranate 90 Three-grade value of three different quality
    of fruit individually. Logitech C905 720 pixel webcam with 2 MP sensor having
    1600 × 1200 resolution https://www.kaggle.com/kumararun37/pomegranate-fruit-dataset
    Medhi and Deb (2022) Multiple categories of Banana 8000+ 2343 leaf images, 102
    Stem images and 216 fruit images for different variants of banana Samsung SM-G610F
    with 9.6 MP and Nikon SX 70 with 18.3 MP https://data.mendeley.com/datasets/4wyymrcpyz/1
    Sara et al. (2022) Cauliflower 656 177 Downy mildew, 173 Bacterial spot rot, and
    100 Black rot, and 206 Healthy images Sony Cyber-Shot-W-530 model with 14 MP and
    500 × 500 pixels resolution https://data.mendeley.com/datasets/t5sssfgn2v/3. Tariq
    et al. (2022) Fruitfly species 2000 Dataset contains 2000 images of Bactocera
    dorsalis and Bactocera zonata Oppo F11 smartphone with 48 MP camera and Raspberry
    Pi camera with 8 MP http://dx.doi.org/10.17632/hgz2n5jxhp.1 Kaufmane et al. (2022)
    Japanese quince 1515 Raw Japanese quince of 650 ripe and 889 unripe images Samsung
    Galaxy A8 mobile phone having 3456 × 3456 pixels resolution https://zenodo.org/record/6402251
    Alencastre-Miranda et al. (2018) Sugarcane 786 six class like Two buds(green),
    One bud(orange), No buds(yellow), Cracked(red), Crushed(blue) and No damage(no
    marking) Stereovision camera (ZED from Stereo Labs), CCD camera (Blackfly S from
    Point Grey Research) & a scanning laser rangefinder (Hokuyo) https://github.com/The77Lab/SugarcaneBilletsDataset
    Kaggle (2022) Apple, Orange, and Banana 13 599 2088 (fresh apple), 1962(fresh
    banana), 1854(fresh orange), 2943 (rotten apple), 2754 (rotten banana), 1998 (rotten
    orange) Public dataset https://www.kaggle.com/datasets/sriramr/fruits-fresh-and-rotten-for-classification
    Fenu and Malloci (2021) Pear 3505 3006 leaves images and 499 fruit images with
    different severity level Canon DSLR EOS 60D camera with 3456 × 5184 pixels resolution
    and Honor 6X mobile with 2976 × 3968 pixels resolution https://zenodo.org/record/5557313#.YtEgQ3ZBy5d
    Das et al. (2020) Tomato 6470 6470 tomato images of 10 classes. Tomatoes are graded
    from 1 to 10 class where 1 represents fresh and 10 represents rotten Public dataset
    https://github.com/skarifahmed/FGrade Rauf and Lali (2021) Guava fruits and Leaves
    306 70 Rust, 77 Canker, 83 Mummification, and 76 Dot guava images Images are acquired
    with the mobile phone having 300 dpi resolution and 6000 × 4000 size https://data.mendeley.com/datasets/s8x6jn5cvr/1
    Munasingha et al. (2019) Papaya 214 55 Anthracnose, 24 Black spot, 43 Phytophthora,
    42 Powdery mildew, and 50 Ringspot Public dataset https://data.mendeley.com/datasets/7dxg9n2t6w/1
    Mendeley (2022) Eight types of fruits 3200 3200 fruit images of fresh and rotten
    category Public dataset https://data.mendeley.com/datasets/bdd69gyhv8/1 Meshram
    et al. (2020) Six types of fruit 12 000 1000 images of each fruit (Good/Bad Quality)
    having 256 × 256 size adding up 12 000 images Public dataset https://ieee-dataport.org/open-access/fruitsgb-top-indian-fruits-quality
    Altaheri et al. (2019) Date 8231 First dataset contains 8079 images from immature
    to mature states. The second dataset contains 152 Barhi date packs belonging to
    13 palms Three high-quality cameras: Canon EOS-1100D, Canon EOS-600D and Sony
    HDR-CX405 with different illuminance conditions. https://ieee-dataport.org/open-access/date-fruit-dataset-automated-harvesting-and-visual-yield-estimation
    Oltean (2021) Multiple varieties of fruits 90 483 67 692 images and 22 688 images
    for training and testing purposes Image acquisition was performed using Logitech
    C920 camera having 3 rpm shaft speed and 100 × 100 pixels resolution. https://data.mendeley.com/datasets/rp73yg93n8/1
    https://www.kaggle.com/datasets/moltean/fruits Gené-Mola et al. (2021) Apple 640
    615 real-time Fuji apples and 25 more apple images under laboratory conditions.
    Canon EOS 60 DSLR camera having 18 MP CMOS APS-C sensor https://dataverse.csuc.cat/dataset.xhtml?persistentId=doi:10.34810/data141
    Tian et al. (2021) Apple 5801 Total of 2720 healthy apple fruits and 3081 images
    infected from various diseases Public Dataset https://gitee.com/cheng_xiao_yuan/AI-Challenger-Plant-Disease-Recognition
    Mamdouh and Khattab (2021) Olive Fruit Fly 1680 DIRT dataset consists of 848 olive
    fruit fly images and Leeds contains 832 butterfly images in PNG Format DIRT Olive
    Fruit Fly DataSet and Leeds butterfly dataset http://lefkimi.ionio.gr/~avlon/dirt-dacus-image-recognition-toolkit/
    http://www.josiahwang.com/dataset/leedsbutterfly/ Li et al. (2022) Jute 4418 3862
    images and 556 images for training and testing purposes Central Research Institute
    for Jute and Allied Fibres https://crijaf.icar.gov.in/ Vasumathi and Kamarasan
    (2021) Pomegranate 6519 2813 Healthy and 3706 Unhealthy Pomegranate images iPhone
    and DSLR Camera http://www.cofilab.com/portfolio/image-database-pomegranate https://www.kaggle.com/datasets/kumararun37/pomegranate-fruit-dataset
    Han et al. (2021) Apple 74 Each image contains a bunch of apples provided at least
    one apple must be infected with Anthracnose disease. The dimension of disease
    symptoms varies from 50 × 50 to 2000 × 1400, and the dimension of apple images
    varies from 500 × 700 to 3000 × 2000. https://github.com/QuIIL/Dataset-Region-Aggregated-Attention-CNN-for-Disease-Detection-in-Fruit-Images/tree/main/Images
    IFW (2022) Apple fruit and Leaves 8632 5244 Infected and 3388 Uninfected apple
    images CASC-IFW datasets https://engineering.purdue.edu/RVL/Database/IFW/index.html
    7.1. Fruit and vegetable datasets The Guava tissue dataset was prepared by Rajbongshi
    et al. (2022) for real-time disease classification. The dataset contained resized
    images having four categories of fruit (Healthy, Scab, Phytophthora, and Styler
    end rot) and two classes of leaves (Healthy and Red rust). The dataset consists
    of 681 images divided into five disease classes, namely, Scab (106), Phytophthora
    (114), Styler end rot (94), Red rust (87), and Healthy (280). Rauf et al. (2019)
    introduced a novel citrus plant dataset for fruit, stem, and leaves. The researcher
    collected 759 images of citrus tissues (fruits and leaves) following Healthy (22
    & 58), Canker (78 & 163), Black spot (19 & 171), Greening (16 & 204), Scab infected
    fruits (15), and Melanose infected leaves (13). The FruitNet dataset consisting
    of 19 526 images was developed by Meshram and Patil (2022). The dataset contained
    images of six different species, namely, banana, lime, apple, orange, pomegranate,
    and guava. The images were categorized into Good, Bad, and Mixed classes, with
    11 664, 6778, and 1074 images, respectively. Further, grading is a similar term
    used to inspect the quality of fruits and vegetables. Kumar et al. (2021) created
    a pomegranate dataset of ruby cultivars. The dataset was divided in three gradings
    (G1, G2, & G3) and four qualities classes (Q1, Q2, Q3, and Q4). The grades were
    decided based on the tissue’s color, size, weight, and physical appearance, where
    G1, G2, and G3 signified the superior and good appearance with complete ripeness.
    The database comprised 30 sample images from each grade making up 90 pomegranate
    images. Das et al. (2020) introduced a tomato grading dataset. A total of 6470
    tomato images were collected for 90 days and graded from labels 1 to 10. The classification
    accuracy of the benchmark dataset was also compared against different state-of-the-art
    models. Some datasets cover the different parts or cultivars of plants infected
    by the pathogens instead of the edible part of the fruit and vegetable. PFSD (Medhi
    and Deb, 2022) dataset consisted of different banana parts (stems, leaves, flowers,
    and fruits). The images infected from Scarring beetle (150), Panama disease (102),
    Pseudo-Stem Weevil (2736), Bacterial soft rot (1078), Yellow Sigatoka (264), Aphids
    (366), and Black Sigatoka (474) were acquired under natural light. Moreover, 102
    stem images, 2343 leaf images, and 216 fruit images of four banana varieties (Jahaji,
    Bhimkol, Malbhog, and Kachkol) were collected. Moreover, Altaheri et al. (2019)
    acquired a date palm dataset using three cameras under natural sunlight from June
    to September for yield detection, disease classification, and robotic farming.
    The first dataset covered 8079 images belonging to different variants (Sullaj,
    Khalas, Meneifi, Barhi, and Naboot Saif) with varying stages of maturity (Tamar,
    Rutab, Khalal, and Immature). The second dataset contained 152 Barhi dates with
    13 palms at different ages and heights. VegNet cauliflower dataset was introduced
    by Sara et al. (2022). The dataset was divided into four classes, namely, Downy
    mildew (177), Bacterial spot rot (173), Black rot (100), and Healthy (206), which
    was increased to 1770, 1730, 1800, and 2060 respectively, by applying the data
    augmentation method. Similarly, Tariq et al. (2022) developed a fruit fly dataset
    containing 2000 images of Bactrocera dorsalis, and Zonato species. The resized
    images of 416 416 pixels were collected through Raspberry Pi cameras equipped
    with an intelligent trap tool. The YOLOV5 model was used for species detection
    and annotation with a mean accuracy of 85.00%. Kaufmane et al. (2022) designed
    the “QuinceSet” Japanese quinces dataset containing 1515 RGB images that were
    labeled as class 0 (ripe) and class 1 (unripe) for phenotyping and detection.
    The dataset contained raw images derived from ripe (650) and unripe (889), which
    were annotated to 17 171 using state-of-the-art YOLO architecture. The quality
    and productivity of the fruitage crops are also affected due to physiological
    disorders. The sugarcane billets dataset was developed by Alencastre-Miranda et
    al. (2018). The dataset consisted of 120 sample images, categorized into six classes,
    namely Healthy, Cracked, Crushed, Two buds, One bud, and No bud. The labeling
    was performed based on no visual marking, red marking, blue marking, green marking,
    orange marking, and yellow marking, respectively. DiaMOS (Fenu and Malloci, 2021)
    dataset contains 3505 pear images (3006 leaves and 499 fruits) from Septoria Piricola
    species. The images were collected during the entire planting season from February
    to July 2022. The fruit images were categorized into four classes: ripening, nut
    fruit, fruit set, and fruit growth. At the same time, leaves were classified into
    Healthy, Unhealthy, Spot, and Curl classes. The image annotation was carried out
    through the YOLO model. Rauf and Lali (2021) developed an image gallery of 306
    guava images. The dataset was classified into four disease class labels, namely
    Rust (70), Canker (77), Dot (76), and Mummification (83). Furthermore, a digital
    library of papaya tissue datasets containing 214 images was developed by Munasingha
    et al. (2019). The dataset was augmented into five defect classes: Black spot,
    Powdery mildew, Phytophthora, Ringspot, and Anthracnose disease. The CNN model
    was employed for papaya disease multi-classification with nearly 92.00%, which
    outperformed the SVM architecture. The powdery mildew class took the maximum time
    for classification, whereas the black spot disease recorded the minimum time.
    Similarly,multi-fruit datasets were also developed to build a robust disease classification
    system. Kaggle (2022) created a banana, apple, and orange dataset of 13 599 images
    for binary classification (rotten or fresh). The dataset can be summarized as
    fresh images (2088 apple, 1962 banana, and 1854 orange) and rotten images (2943
    apple, 2754 banana, and 1998 orange). Mendeley (2022) designed an extensive database
    with eight varieties of fruits (apple, orange, strawberry, banana, guava, grape,
    pomegranate, and jujube). The dataset was labeled into fresh and rotten classes
    for binary classification. The dataset had 3200 original images, which were increased
    to 12 335 images with basic augmentation methods such as rotate, scale, translate,
    and blurring. Meshram et al. (2020) generated the “FruitGB” dataset of six popular
    agro-products: apple, orange, lime, banana, guava, and pomegranate. The dataset
    contained 6000 multi-fruit images divided into good and bad classes. Han et al.
    (2021) collected 74 apple images to analyze the binary fruit defect classification
    (Anthracnose or Non-anthracnose) with an improved Mask R-CNN network. The images
    were annotated using 1 to 9 rounded boundary regions per image. IFW (2022) developed
    a CASC-IFW database of 8632 for autonomous disease detection in multiple variants
    of apple fruits (Golden Delicious, Red Delicious, York, and Fuji). Oltean (2021)
    processed the images using a flood fill algorithm for background noise removal.
    The proposed dataset can be used for multiple dimensions: ripeness determination,
    clustering, defects, edible (binary classification), and maturity detection, seed
    quantity, growth stage, hardness level, and fruitage type (multiclass classification).
    A total of 131 classes from different fruits, seeds, and vegetables, summing up
    to 90 483 images, were incorporated into the database. Gené-Mola et al. (2021)
    developed PFuji images with 3D data points during the growth phase and annotated
    them. The dataset was designed using 303 apple trees (2018) and 312 apple trees
    (2020), thus making up 615 real-time images. The dataset was divided into four
    phases first phase (raw images), the second phase (data points from the east and
    west side), the third phase (merging and segmentation of 3D points), and the fourth
    phase (Apple tree information and location). Similarly, the apple dataset was
    developed by Tian et al. (2021). The dataset comprised leaf images (Healthy (1354),
    General scab (1205), Severe scab (1026), General cedar (972), Serious cedar (460),
    and Spot (488)), and fruit images (Healthy green (1360), Healthy red (1360), Ring
    rot (93), General anthracnose (78), and Severe anthracnose (87)). Mamdouh and
    Khattab (2021) designed an olive fruit fly species detection framework utilizing
    YOLOV4 for object detection and localization with a mean accuracy of 96.68%. The
    DIRT image dataset with 848 images (positive samples) was collected from liquid
    aromatic McPhail traps. The Leeds butterfly image dataset containing 832 images
    (negative samples) of Danaus plexippus species was acquired from the internet.
    A jute dataset infected for multiple diseases and pest detection using YOLO-JD
    architecture was introduced by Li et al. (2022). A total of six fungal diseases
    (Black band, Dieback, Tip blight, Soft rot, Anthracnose, and Stem rot), two viral
    diseases (Chlorosis and Mosaic), and two pests (Comophila sabulifers and Hairy
    caterpillar) were appended to the database, which was pre-processed (filtering
    and illumination correction) for better accuracy. Vasumathi and Kamarasan (2021)
    created a novel pomegranate dataset that combined real-time and existing datasets
    for binary disease classification (normal and abnormal) using deep CNN and LSTM
    models. The dataset combined 328 images from the Cofilab dataset and 90 images
    from the Kaggle dataset, while the rest of 6101 pomegranate images were acquired
    under real-time environmental conditions. 8. Research gaps, challenges, and future
    opportunities The survey comprehends the significance of smart techniques to identify
    complex problems in the fruitage disease identification domain. The state-of-the-art
    algorithms have shown remarkable outputs by minimizing produce losses in farming.
    Agriculture productivity is enormously increasing while utilizing such techniques,
    but the benefits come with its cost. A few of such challenges with their viable
    solutions are mentioned below: 8.1. Machine learning research gaps and future
    directions in fruitage domain • Data Pre-processing: Fruitage data is one of the
    key components for the success of any machine model. Several public digital repositories
    for fruits and vegetables are available for the use of researchers. Generally,
    the real field fruitage data is acquired using UAV, satellite, or mobile camera
    in different seasons. Thus, these fruitage datasets are present with several limitations,
    such as improper data formatting, poor quality, incompatibility, imbalanced or
    noisy data, redundant features, hazed, low resolution, and unknown data values.
    Thus, exquisite and robust pre-processing techniques are required to incorporate
    the eligible data for testing, validation, and training of the models, which is
    time-consuming and error-prone. The literature witnessed the challenges of fruitage
    data pre-processing, like spatial loss information, color distortion, and over-enhancement
    for disease classification model (Habib et al., 2020). The majority of research
    work studied the impact of extracting the best statistical and texture feature
    maps of the dataset for better classification (Bhargava and Bansal, 2020a, Mojumdar
    and Chakraborty, 2021, Almadhor et al., 2021). Different methods like Gaussian
    filtering, color histogram equalization, segmentation, and color space conversion
    help to perform the data preprocessing for precise fruitage defect detection model
    convergence (El-aziz et al., 2020, Roy et al., 2021b, Ghodke et al., 2022, Bhargava
    and Bansal, 2020a). Such techniques can also exaggerate the background noise,
    giving the fruitage image a noisy appearance in the region of interest. Also,
    multi-modal data is another room for improving the statistical and data interpretation
    methods to understand the food domain better such as fruitage waste production,
    crop harvest prediction, and fruit nutrient determination. The fruitage images
    acquired in extreme weather conditions such as rain, fog, and night is another
    major challenge that may affect the model’s performance. To mitigate this, image
    dehazing and thermal imaging methods may be introduced as effective data pre-processing
    techniques (Yu et al., 2018). Sequential Pre-processing Through Orthogonalization
    (SPORT) method may be future direction for effective data-processing that hybridizes
    the multiple pre-processing methods to ensure high disease classification accuracy
    (Mishra et al., 2020). • Bias & Dynamic Problems: Generally, ML models trained
    on fruitage datasets suffer from the label bias problem as the majority of the
    real field datasets are imbalanced. Thus, the testing performance of the models
    does not meet the standards of the training performance. The improper selection
    of training and testing data samples may lead to model instability resulting in
    poor performance of the model in real-time scenarios. The research studies witnessed
    that the feature engineering methods are useful to reduce bias by incorporating
    the relevant and important features and removing irrelevant or discriminatory
    features (Bhargava and Bansal, 2020b, Kumari et al., 2021). Careful feature engineering
    can greatly enhance a model’s ability for generalization and prediction accuracy
    (Shafiq et al., 2020b, Shafiq et al., 2020c). The fruit and vegetable feature
    maps can be extracted using the delta E ( ) method (Cugmas and Štruc, 2020, Almadhor
    et al., 2021). The study extracted homogeneity, energy, contrast, and correlation
    discriminative texture features using GLCM while other relevant fruitage factors
    like area, perimeter, eccentricity, diameter, major and minor axis, and orientation
    were extracted during the feature engineering process (Dubey and Rocha, 2023,
    Sugiarti et al., 2021). Similarly, meteorological and ecological factors like
    environmental temperature and soil moisture are dynamic, making it difficult to
    provide an accurate prediction. The meteorological & ecological features affecting
    the fruitage growth like wind speed, relative humidity, solar radiation, and temperature,
    and the physicochemical features such as firmness, weight, soluble solids, sugar,
    moisture content, and tannin content may be extracted for disease detection (Mohammed
    et al., 2023). The literature survey deduced that disease categories present in
    the fruitage domain generally suffer from maturity bias, seasonal bias, and label
    bias. Such data bias-ness problems may be handled using continual or incremental
    machine learning methods (Li and Chao, 2020). Additionally, fair machine learning
    algorithms for re-sampling or re-weighting feature maps, demographic parity, or
    equal opportunity algorithms can be employed for bias mitigation. A few statistical
    techniques, such as KL divergence or Kolmogorov–Smirnov test and distribution
    or domain adaptation can be introduced to detect shifts in data distribution that
    help to handle the dynamic issues in the fruitage disease detection (Hien and
    Gillis, 2021). Semi-supervised machine learning methods like Expectation–Maximization
    (EM), Self-Training, Co-Training, and Multi-View Learning leverage the unlabeled
    data to improve model performance (Zhu, 2005). • Limited Fruitage Data: Machine
    learning models’ training and validation process requires massive fruit data to
    assess models’ performance before deploying in a real-world environment. Moreover,
    the effective training process requires high-performance hardware resources, large
    storage devices, and testing tools. Under-training and over-training are the open
    issues in the fruit industry that must be addressed while training the model.
    For instance, the unripe banana shows different color features than the ripe banana.
    Limited model generalization may result from a dataset lacking these variances,
    which can be controlled using regularization methods (Wang and Ni, 2019). Regularization
    techniques (L1 & L2), fold validation, early stopping, decision tree pruning,
    and ensemble methods can be exploited to address such issues. It is also recorded
    from the literature that the availability of a robust fruitage dataset is a major
    challenge for the effective training of the model. To overcome this, traditional
    image augmentation methods may be used to handle the complexity of model overfitting
    and bias-ness towards the specific class. Rotation, flipping, shearing, and random
    erasing are the few instances to expand the fruitage images. Synthetic data generation
    methods like Synthetic Minority Over-sampling Technique (SMOTE) and Deep Synthetic
    Minority Oversampling Technique (DeepSMOTE) can also be used to handle class imbalance
    issues (Alzubaidi et al., 2023). However, recent machine learning methods such
    as self-supervised learning, reinforcement learning, and active learning open
    up the likelihood of handling smaller labeled datasets. Collaborative learning,
    time-lapse image acquisition, cross-domain adaptation, and multi-task learning
    are the open solutions to be addressed in fruit and vegetable disease detection.
    • Optimal Model Deployment: A large number of ML models are available for classification
    and prediction tasks. Thus, selecting an optimal model for the specific fruit
    or vegetable is still challenging. The naïve approach is to select a model randomly
    with different attributes using a trial and error approach, which takes a long
    time to conclude the result. The literature survey revealed that different ML
    models show varied performance with different problem domains like disease classification,
    grading, and disease segmentation in the fruitage dataset. The lightweight classifiers
    such as Cubic SVM, Fine KNN, Bagged Tree, Complex Tree, and Boosted Tree can be
    employed for fruitage disease identification which can be trained on less number
    of image samples with reasonable performance (Almadhor et al., 2021). Similarly,
    different SVM variants like cubic-SVM (C-SVM), quadratic-SVM (Q-SVM), linear-SVM
    (L-SVM), and radial basis function-SVM (RBF-SVM), decision tree, ANN, and RF may
    be deployed for fruitage grading purpose (Ireri et al., 2019). The study utilized
    a self-clustered method by using the likelihood of nearest neighbor and extended
    Gaussian kernel approach to identify the lesions in the real-field farms (Hasan
    et al., 2023). The fruitage disease classification requires the segmenting of
    every fruit or vegetable, classifying the pixel-by-pixel disease severity, and
    then predicting the disease category. It is an inherently difficult task to segment
    individual real-time fruits due to their overlapping or occlusion. Different segmentation
    methods such as Histogram, random walker, entropy-based segmentation, and GMM
    can be applied for rotten area identification in fruits and vegetables (Roy et
    al., 2021b). Whereas, Watershed Transform, Fuzzy C-means clustering, and Conditional
    Random Fields (CRF) may be the future directions to be explored for better fruitage
    disease segmentation. Neural Architecture Search (NAS), a co-domain of the AutoML,
    automates the network’s topology with limited computational resources to obtain
    the best disease classification network (Zhang et al., 2021). Pruning, quantization,
    factorization, and knowledge distillation methods may be exploited to compress
    the model parameters which reduces memory utilization without compromising the
    disease classification accuracy. • Model Complexity: The computational complexity
    of the machine learning models is also a prime concern for agricultural applications.
    Linear machine learning algorithms predict the output as the linear combination
    of the input feature maps. They are easy to implement but do not capture the complex
    defect patterns in fruits and vegetables. For instance, the LR model may be exploited
    for disease detection in the fruits where each disease class has balanced weights
    or sampling and has distinct spectral or visual symptoms (Mohammed et al., 2023).
    On the same note, non-linear machine learning algorithms have multiple layers
    and can include activation functions to introduce non-linearity, but these techniques
    are computationally expensive with respect to hardware, software, storage devices,
    and data availability. An improved non-linear SVM and backpropagation model may
    be implemented for disease identification where high-dimensional data shows large
    variation towards feature diversity (Yu et al., 2018). Thus the tradeoff between
    the model complexity and disease classification accuracy is another room for improvement
    in the fruitage domain. Dimension reduction techniques like PCA, LDA, t-distributed
    Stochastic Neighbor Embedding (t-SNE), and Independent Component Analysis (ICA)
    can be utilized to minimize the number of feature maps while retaining model variance.
    Also, analyzing the multi-class disease problem into multiple instances of binary
    disease classification problems can help to ease the network’s decision-making
    process. Evolutionary algorithms such as Ant Colony Optimization, GA, Artificial
    Bee Colony Algorithm, and Hybrid and Multi-objective Evolutionary Algorithms are
    another dimension to optimize the network parameters (Drugan, 2019). • Ecological
    Fruitage Diversity: Increasing demand for high-quality fruits & vegetables requires
    a better understanding of pathogens that are indirectly affected by ecological
    factors. The fundamental knowledge of the ecological process is essential for
    the development cycle of the fruit species. For instance, climate conditions not
    only impact the physiology and phenology of fruits and vegetables but also affect
    the biotic and abiotic agents during the pollination of the crops (Tasnim et al.,
    2021). The ecological datasets are complex, high-dimensional, and non-linear in
    nature. Traditional linear statistical approaches like generic linear models are
    poor in identifying the complex patterns and relationships underlying ecological
    datasets (De’ath and Fabricius, 2000). Machine learning, on the other hand, can
    simulate non-linear associations in ecological data without requiring the limiting
    assumptions associated with parametric techniques. The survey witnessed that Classification
    and regression trees (CARTs) can be utilized in handling the ecological datasets
    (Al-Sanabani et al., 2019). Also, there are certain diseases like brown rot, blister
    rust, and cavity spots which are unusually available on fruits and vegetable surfaces.
    One-shot and Zero-shot learning helps to develop the model to classify new disease
    categories while dealing with rare fruitage datasets. They can be applied to the
    remotely sensed data to detect ecological indicators related to the vegetation
    health, for instance, particular plant tissues that flourish under certain conditions.
    Also, they can train the model to identify the fruiting or flowering stages to
    track the ecological phenology. 8.2. Deep learning research gaps and future directions
    in fruitage domain • Fruitage size and Computational resources: The fruit and
    vegetable data sample size is one of the prime challenges for deep learning models.
    For the effective training of the deep models, large training data samples are
    required. However, the collection of labeled fruitage datasets is a challenging
    task due to several dependencies such as weather, season, and pathogen attacks.
    Generally, the field-collected datasets are imbalanced and limited in size. As
    noted in the literature, the diseased classes are the minority ones in most of
    the repositories so it is difficult to get diseased fruitage as per the requirements
    in the limited tie domain. The fruitage dataset expansion may be carried out using
    conventional image augmentation methods, which include geometric and photometric
    transformation (Khalifa et al., 2022). Also, the color jittering might augment
    the fruit datasets by adjusting contrast, saturation, and brightness in the different
    color sub-spaces. However, these traditional augmentation methods fail to capture
    the feature diversity while balancing the fruitage dataset. On a similar note,
    Generative Adversarial Networks (GANs) have drawn remarkable attention in expanding
    the fruit and vegetable dataset using deep learning techniques. Vanilla GAN, Conditional
    GAN, Wasserstein GAN, Cycle GAN, and StarGAN are a few instances used to generate
    synthetic fruitage images. A novel image augmentation method known as Random Image
    Cropping And Patches (RICAP) may also be used to expand the training dataset from
    four randomly selected fruitage images (Noguchi et al., 2020). Also, the mask
    scoring R-CNN model can be deployed in the same direction to overcome the limited
    fruitage dataset problem (Yao et al., 2022). The mode collapse problem might cause
    the GAN neural network to generate only a subset of fruits and vegetables, disregarding
    the dataset’s diversity. Deep learning techniques like diversity-promoting losses
    or progressive growing, mini-batch discrimination techniques may be used to handle
    mode collapse problems. The deep models are computationally complex which requires
    high-performance TPUs and GPUs with large storage capacity to handle enormous
    datasets. However, for agricultural applications, lightweight models need to be
    developed to meet the current demands. In the future, advanced and lightweight
    hybrid models may be developed to mitigate the current challenges of deep learning-based
    models. A lightweight CNN model having 101,000 numbers of network parameters has
    been developed for disease classification in banana, mango, and guava species
    (Hari and Singh, 2023). On the contrary, the lightweight CNN fails to capture
    the complex structural irregularities in the fruitage dataset. Dilated convolution
    is another approach to increase the receptive field without increasing the trainable
    and non-trainable parameters, thus helpful to develop the lightweight CNN network.
    ShuffleNet, SqueezeNet, EfficientNet, and MobileNets are considered as lightweight
    CNN models (Rangarajan et al., 2022). The adversarial noises, Progressive GANs,
    SRGANs, and superscaled image resolution may be deployed for better image representation.
    • Limited Fruitage Annotations: Fruitage image annotation is an integral process
    during the pre-processing stage, which helps to categorize and label unknown samples
    using volunteers or subject-experts (which might be hard to participate). Such
    experts might be prone to make errors while annotating the samples, especially
    in identifying types of diseases in the different parts of the plants. To remedy
    this, the majority voting of experts may be used for labeling the images in the
    agricultural domain (Gené-Mola et al., 2021). However, the availability of domain
    experts is also one of the challenges. Thus, advanced data labeling methods may
    be developed in the future to annotate the data automatically. However, automated
    annotations may result in degenerated labeling due to missing boundary regions,
    redundant datasets, and outliers. The research study witnessed the image annotation
    by visualizing boundary box coordinates to identify the severe areas in vegetables
    and fruits (Dhiman et al., 2022a). Deep learning methods such as YOLO, CenterNet,
    Faster R-CNN, and SSD (Single Shot MultiBox Detector) can be employed for real-time
    fruitage disease detection at multiple aspect ratios and scales. Also, image segmentation
    is crucial in data annotation that facilitates the disease classification process
    by identifying the IoU regions. It segregates the infected fruitage image into
    multiple segments, where each segment represents the particular pixel-level disease
    symptoms. Segmentation techniques like UNet, DeepLab, NDVI masking, and Mask-CNN
    can be exploited for multi-scale contextual information for precise pixel-level
    segmentation. Keypoint annotation offers detailed information about object characteristics
    that conventional semantic labels or bounding boxes are unable to capture (Naik
    et al., 2023). Comprehensive work can be done in the direction of utilizing the
    autoencoders and self-supervised learning methods to make efficient use of unlabeled
    fruit and vegetable data. Also, a novel semi-automated segmentation method may
    be employed to label the real-field farms to overcome the manual annotation problem
    (Hasan et al., 2022). • Hyperparameter Tuning: Most of the DL models trained on
    real-field collected images require a high number of hyperparameters for effective
    training. The number of convolution layers and filters for a particular problem
    remains the pertinent issue which is solved using the naïve hit & trial method.
    Thus, optimal parameter selection is still an open problem, which can be ameliorated
    using pre-trained architectures with transfer learning and multi-layer extreme
    learning mechanism (Park and Yang, 2019). Several performance parameters like
    input bias, learning rate, and output bias, which reduced the complexity of updating
    the layers’ weight, have shown remarkable breakthroughs for fruit disease classification
    (Vasumathi and Kamarasan, 2021). The transfer learning techniques might be utilized
    to extract optimal features to ensure multi-task learning like grading or maturity
    detection, fruit disease, and their severity level detection (da Costa et al.,
    2020). However, classifying diseases in fruits or vegetables with different backgrounds
    (e.g. farmland or grocery store) may further require extra fine-tuning to address
    such issues. Hyperparameter selection or tuning is still an iterative method that
    requires hit and hit-and-trial approach to finding robust models. Grid search
    optimizes the hyperparameters where model performance is validated using fold
    validation by searching all possible permutations of the hyperparameters, whereas
    random search optimizes the hyperparameters using random values within the valid
    range of each hyperparameter. In the future, Gradient-Based and Bayesian optimization
    methods may be explored for determining the optimal values of the hyperparameters
    used in the networks. • Complex Fruitage Data: Generally, the deep models are
    not able to produce significant results in detecting images containing occluded
    or tiny fruitage objects. The pooling layer of the deep models reduces the feature
    vector twice in each iteration, causing the model to forget the features of past
    layers. Thus, the deep model performance degrades as the fruitage data complexity
    increases, thus limiting the utilization of the pre-trained object detection deep
    models in real-world circumstances. RNNs and LSTM networks are designed to handle
    sequential and temporal data about the fruit defects to capture data dependencies
    and temporal trends (Vasumathi and Kamarasan, 2021, Dhiman et al., 2023, Khattak
    et al., 2021). These models can utilize time series data to monitor the health
    and disease outbreaks in the fruitage industry. The fruitage datasets have tiny
    regions, which play important roles in decoding the output label. Thus, attention-based
    networks need to be designed in coordination with the passage blocks to remember
    the important features of the successive layers, which give more attention to
    the region of interest. The SE (Squeeze and Excitation) module might be deployed
    for readjusting the aggregated feature maps via the attention technique for the
    best feature map representation (Han et al., 2021). Further work can be carried
    out to design models implementing transformer models with its core self-attention
    and multi-head attention blocks (Rahman et al., 2018). They assign different attention
    weights to the various fruit defects based on the severity, thus, enabling the
    classification model to concentrate on important long-range dependency information.
    Sliding window mechanism, patching, hierarchical representations, self-attention
    mechanism, and positional encoding help in identifying the tiny lesions in fruits
    & vegetables. The complex background of the real-time fruit and vegetable images
    may result in the low disease recognition accuracy which can be further improved
    by hybridized CNN-transformer models for multi-scale local and global feature
    extraction. • Model Complexity: The complexity of the deep learning models encompasses
    various factors, including the number of CNN layers, the number of neurons or
    activation units in each layer, and the overall architecture’s width and depth.
    Stabilizing model complexity is crucial in deep learning. The literature survey
    concluded that simple deep learning models suffer from the underfitting problem,
    while complex deep learning models may overfit the dataset. Vegetables and fruits
    are vulnerable to a wide variety of diseases. Thus, complex techniques are required
    to control defects while lowering the use of pesticides. Building models with
    the right complexity requires the best model selection, drop-out, early stopping,
    hyperparameter tuning, and regularization as per the problem domain. The convolutional
    neural network might be regularized with ridge loss to overcome the gradient penalty
    loss for better disease detection (da Costa et al., 2020). An EfficientNet deep
    learning model could scale the model in all dimensions by utilizing the compound
    coefficient ( ) while preserving the model complexity (Tan and Le, 2019). Pointwise
    convolutions having 1 × 1 kernel size preserve spatial dimensions while lowering
    the number of channels, thus minimizing computation time. Also, conditional convolutions
    reduce processing time by adapting the number of convolutional filters based on
    the properties of the fruitage dataset. Deep learning models that can efficiently
    incorporate information from several modalities like images, videos, and text
    might open up novel avenues for tasks such as multimodal learning and reasoning.
    • Model Transparency: The intrinsic complexity of the DL models often leads to
    the lack of transparency about the fruits, thus making it tough to understand
    the decisions made by the models. The agrarians fail to understand the reasons
    behind the ambiguous model’s prediction of a particular disease in fruits or vegetables.
    Thus, it is challenging to take preventive actions or confirm the disease classification
    accuracy without expert knowledge. It hinders the ability to identify the model
    bias, like overfitting to specify visual cues that might be caused by the background
    rather than fruit defective features. Also, the model’s trustworthiness is crucial
    for the adoption of smart techniques in agriculture (Albahri et al., 2023). The
    farmers may face skepticism in automated fruitage disease classification systems
    due to a lack of trust in the black-box deep models. The Explainable AI (XAI)
    algorithms integrated with DL methods have been used to overcome these issues.
    Local interpretable model-agnostic explanations (LIME) (Hamilton et al., 2022),
    Shapley additive explanations (SHAP) (Chen et al., 2022), and t-SNE (Van der Maaten
    and Hinton, 2008) are few instances for the visualization of interpretable DL
    methods. The LIME visualization explains the predictions for each disease category
    by locally approximating it with an interpretable DL model, whereas SHAP visualization
    quantifies the importance of each lesion feature to the classification based on
    the Shapley values obtained from cooperative game theory. The dimension reduction
    technique (t-SNE) transforms the high-dimensional space into a low-dimensional
    space (two or three dimensions) by optimizing the K-L divergence between them.
    8.3. Internet-of-things research gaps and future directions in fruitage domain
    • Data Monitoring: IoT applications use different real-time sensors to generate
    huge fruitage datasets. Monitoring intelligent sensors simultaneously in arable
    farming is a challenging task. Significant research has been performed to implement
    different remote sensor systems in acquiring the disease symptoms (such as scabs,
    ring rot, anthracnose), physiological indicators (such as pigment and water content),
    and structural deformations caused by fruitage pests. It is clearly visible in
    the survey that fruitage disease classification is an important step for diagnosing
    nutrient deficiencies, projecting fruit & vegetable production, and providing
    a decision-making foundation for agricultural crop policy formulation. It may
    be addressed by deploying a multitemporal model for comparing fruits and vegetables
    at different phenological growth stages to measure multiple traits like pH, ripeness
    level, water stress, and nutrient level. Sensors onboard UAVs that utilize hyperspectral/multispectral/infrared
    imaging techniques may provide an excellent solution for fruitage image acquisition.
    Such non-destructive spectral technology may be further explored to detect multi-disease
    classification in the agriculture farmlands (Moriya et al., 2021). IoT device
    deployment indicates that the performance of the installed transceiver is overemphasized
    by environmental factors like wind and humidity where the wired node wants to
    interface. Digital temperature sensors like DHT22 and humidity sensors, namely
    AM2302, had been utilized to collect the in-situ information of the agriculture
    fields (Pawara et al., 2018). Different real-field attributes of vegetable or
    fruit species, namely, soil and air temperature, air moisture level, soil electric
    conductivity, wind direction, water level, leaf wetness, and solar radiation play
    crucial roles in disease detection (Khattab et al., 2019). IoT sensors (Biological
    air sensor DHT22 for air dampness and temperature, Gravity simple pH sensor, and
    Grove dampness sensor for soil dampness) can be further explored to acquire real-time
    fields information (Pavel et al., 2019). Various IoT components, like temperature
    sensors (LM35), moisture sensors (LM358), humidity sensors (DHT11), light intensity
    sensors (BH1750), and water flow sensors (YF-S201) are commonly used sensors to
    build a robust disease recognition system (Nagasubramanian et al., 2021). Also,
    soil NPK sensors can also to utilized to determine the real-time nutrient content
    of fruits. Designing energy-efficient IoT sensors by using low-energy microprocessors
    and power-saving modes may be considered particularly in remote areas. TinyML
    allows the ML models to run on low-power IoT devices without relying on powerful
    cloud servers and high computing hardware or software devices to address the high
    energy consumption issue. • Standardization or Interoperability: Since billions
    and trillions of heterogeneous smart devices are connected to the physical world.
    Thus, standard communication protocols are one of the prime concerns for the researchers
    developing intelligent IoT frameworks for fruitage disease monitoring. Different
    IoT sensors might have distinct data formats, varying data modalities, and different
    dataset acquisition frames, resulting in misalignment and misclassification of
    diseases. It is crucial to synchronize the fruitage data from different sensors
    to produce coherent data. Thus, an appropriate identity management mechanism is
    required for providing effective addressing to global devices, thus making all
    the connected nodes “similar” in terms of protocols and encodings. Some efforts
    have been carried out to transform the heterogeneity of the fruitage data into
    homogeneity formats for arable farming such as ISO 11783 (ISOBUS) standards designed
    by Agricultural Industry Electronics Foundation (AEF) (Fountas et al., 2015).
    Additionally, the usage of middleware applications like SmartFarmNet or FIWARE,
    HYDRA, and SMEPP can lessen the data heterogeneity problem in the fruitage industry
    to ensure standardization (Kour and Arora, 2020). Some reference models like Industrial
    Internet Reference Architecture (IIRA), Reference Architecture Model Industries
    (RAMI 4.0), and the European Research Cluster on IoT (IERC) are working in this
    direction to make IoT a global technology. Also, protected agriculture requires
    remote monitoring and standard IP (Ingress Protection) ratings for the proper
    functioning of the sensors in arable farming (Baranwal et al., 2020). International
    standards (IEC 60529) define the IP ratings for the life span of the IoT sensors.
    • Cyber security Challenges: With increasing network devices, the probability
    of digital attacks and vulnerability increases (Shafiq et al., 2020d). The real-time
    sensors and wireless network employed for fruitage disease classification are
    deployed in unsupervised and open farmland scenarios. Technically, the following
    open challenges need to be addressed: (1) trust mechanism; (2) communication and
    user data privacy and security; (3) services and application security. Such IoT
    management is susceptible to interference from outside sources and unauthorized
    users. Thus, multiple data privacy mechanisms such as encryption & decryption,
    identity authorization mechanism, and anonymity mechanism are required for protected
    agriculture (Shafiq et al., 2020a). Agriculture 4.0 has adopted cloud-based smart
    applications, opening up new potential for adversaries to oscillate cyberattacks.
    Typically, conventional end-to-end encryption and decryption techniques are used
    to secure the data. However, IoT devices require energy-efficient and least computational
    power encryption algorithms as the sensors constantly collect real-time fruitage
    data for a long time using battery power. Also, data integrity, authorization,
    and authentication mechanisms are the major concerns for secure communication
    between devices. The literature survey concluded that the real-time fruitage information
    has been stored on the PostgreSQL database and Neo4j database, which are vulnerable
    to SQL injection attacks (Zhu et al., 2023, Akhter and Sofi, 2021). On the same
    note, the database access management methods should be reinforced by restricting
    the database usage on the basis of the security level. Also, the fruitage images
    have been compressed and uncompressed using the DCT algorithm, hybrid measurement
    matrix method, and OMP method (Orthogonal matching pursuit) (Nandhini et al.,
    2015). • Resource Optimization: As trillions of nodes are connected to generate
    and store massive fruitage data using real-time sensors. Thus, efficient routing
    strategies are required to optimize the allocation of sensor nodes to the gateway
    nodes at low communication costs and energy consumption. The literature survey
    witnessed the Sunflower EarthWorm (S-EWA) method to optimize the routing path
    between the sensor nodes for data propagation in the rice agriculture farmlands
    (Vimala et al., 2021). The optimized IoT system must ensure load balancing, traffic
    management, and minimum Service Level Agreement (SLA) violations. The IoT system
    consisting of Jetson Xavier Nx and TensorRT accelerator for edge computing has
    further increased the recognition and validation accuracy of the disease recognition
    model (Zhang et al., 2022). The Thinkspeak IoT cloud services have been addressed
    to store enormous fruitage data because of open source and data scalable features
    (Pawara et al., 2018, Microsoft, 2022). ThingSpeak also offers incorporation with
    IoT services, platforms, and applications using its RESTful API. Cutting-edge
    technologies like cloud-based services, fog-edge-based computing and federated
    learning algorithms can be utilized to store information in the cloud. Furthermore,
    the Thinkspeak cloud via SIM800 Quad-band GSM/GPRS modem with SMA (SubMiniature
    Version A) connector has been exploited to store the temperature and humidity
    data on the cloud. Despite this, there are several open challenges to be addressed;
    (1) data collection, (2) data decentralization, and (3) lack of decision support
    infrastructure. Non-destructive swarm robotics utilizes the self-organizing, decentralized
    algorithms that may be employed for disease detection in arable farming (Albiero
    et al., 2022). These techniques might be equipped with multi-sensors, including
    the hyperspectral, and NIR cameras for fruit & vegetable image acquisition, and
    effectively gather information about the disease categories of vegetables and
    fruits. 8.4. Fruitage dataset research gaps and future directions • Unavailability
    of real-time benchmark fruitage dataset: Despite the availability of extremely
    complicated models, fine-tuning the architectures on fruitage images under in-field
    scenarios is necessary for their proper deployment in a real-time environment.
    The literature survey acknowledged that the scarcity of fruitage diversity regarding
    image features, shape, size, disease, and multiple species would result in poor
    performance of the model deployment. Significant efforts may be required to foster
    collaboration and consensus among multiple research teams in the collection and
    sharing of fruitage datasets, which can enhance both the quantity and quality
    of these valuable fruitage datasets. Generally, most in-field datasets emphasize
    a single fruit or vegetable, leading to the future direction for developing benchmark
    datasets for multiple cultivars with in-field scenarios. Most of the recent studies
    witnessed the dataset containing single fruit or vegetable cultivars known as
    single-fruitage dataset (Sara et al., 2022, Kaufmane et al., 2022, Alencastre-Miranda
    et al., 2018). Still, a few research works also focussed on the multi-fruitage
    dataset to build the robust disease recognition system (Meshram and Patil, 2022,
    Medhi and Deb, 2022). The captured dataset size is very small, which makes the
    deep learning model hard to train (Rajbongshi et al., 2022, Rauf et al., 2019,
    Kumar et al., 2021). Furthermore, the banana and date palm images have been collected
    under natural light, respectively, to witness the real-field data acquisition
    (Medhi and Deb, 2022, Altaheri et al., 2019). Additionally, some research studies
    utilized non-public or internet images of infected fruits or vegetables; thus,
    result replication is a challenging task due to the inaccessibility of fruitage
    dataset (Zhu et al., 2023, Oraño et al., 2019). Thus, there is a need for a robust
    real-field dataset that contains mostly consumed fruits and vegetables from different
    cultivars with different growing stages (flowering to maturation). Also, it is
    recorded that computer vision-based video datasets are rarely available to train
    the models. In the future, developing video fruitage datasets may be a demanding
    asset for the researcher’s community working in the area. Moreover, the fruitage
    dataset developed from the satellite images could play a vital role in predicting
    the disease maps under different environmental conditions. • Diverse and complex
    background: Real-time fruitage disease detection is a challenging task due to
    environmental factors like cloudy weather, lightning conditions, and changeable
    backdrops. Moreover, identifying diseases with a moving camera, such as UAV or
    satellite imaging, is more difficult than static images due to shifting background
    conditions. Thus, robust foreground and background separation and segmentation
    techniques must be explored for better results. Also, most of the recent research
    has been concentrated on datasets collected under controllable laboratory circumstances,
    which becomes the foundation for future work. The fruitage images should be gathered
    in the real-field arable farmlands to enhance the generalization ability of the
    robust disease classification model. The survey witnessed that the fruitage image
    acquisition has been carried out using digital cameras, Raspberry Pi cameras,
    and thermal cameras under a controlled environment to enhance the disease recognition
    accuracy (Tariq et al., 2022, Meshram and Patil, 2022, Alencastre-Miranda et al.,
    2018). Thus, the resultant dataset contains processed images without complex backgrounds,
    fixed backgrounds, or white backgrounds. Thus, intelligent models find it hard
    to predict disease in fruits or vegetables during real-time scenarios. To overcome
    this challenge, novel methods may be developed for automatic background noise
    removal from the multiple fruit images (Oltean, 2021). Graph-based segmentation
    methods can be employed that utilize graph cut techniques to segregate the foreground
    images from the complex background. GAN-based dehazing methods may be further
    explored to mitigate the disease classification problem under extreme weather
    conditions. • Close-distance Fruitage images: The majority of the publicly accessible
    datasets contain mobile camera-captured images taken from a close distance. Also,
    disease-prone areas comprise a sizeable portion of an image, irrespective of size.
    However, for the real-time performance of the models, smart, innovative models
    are required, which are trained on datasets containing proximity images from the
    camera. Moreover, the datasets captured from mobile devices do not cover the image
    information from different angles, which may leave important feature information
    for disease classification. The literature survey has emphasized the in-situ fruitage
    dataset collection with an appropriate angle to exaggerate the detailed spatial
    information (Rajbongshi et al., 2022, Kumar et al., 2021). It is recommended to
    utilize digital twin, binocular stereo vision, and 3D depth sensors to create
    the virtual visualization of fruits and vegetables, thus enabling the detailed
    disease information (Tang et al., 2023, Shoji et al., 2022). The study also concludes
    that the UAV-captured datasets will be the future demands for developing robust
    agricultural applications. Spraying Agri-robots is the future dimension to identify
    diseases on the fruit or vegetables and then spray targeted pesticide treatment
    to affected species. Furthermore, these robots can be employed for other tasks,
    such as crop harvesting and lifting. They can be controlled using remote sensors
    via smartphones for continuous fruit disease monitoring. • Sample size symptoms
    (SSS) recognition: Diagnosing the symptoms early is still a challenge for the
    researchers due to minute symptoms. Tiny lesions in fruits & vegetables can cumulatively
    degrade their quality and shelf life, thus raising concerns about food safety.
    Therefore, models should be robust enough to catch the tiniest symptoms for effective
    classification. Deep reinforcement learning methods like Trust Region Policy Optimization
    (TRPO), Proximal Policy Optimization (PPO), and Deep Q-Networks (DQN) may be deployed
    to identify the tiny infected regions present on the outer surface of the fruits
    and vegetables. Similarly, non-destructive techniques such as Computed Tomography
    (CT), and NIR spectroscopy may be employed for identifying the internal lesions
    in fruits & vegetables. Gas sensors are an indirect IoT approach in identifying
    internal fruit defects by finding the variation in gases emitted by fruits or
    vegetables as they ripen or develop defects (Alam et al., 2021). These can be
    integrated with spectroscopy techniques to develop Gas Chromatography and Mass
    Spectrometry (GC–MS) to determine the internal tiny defects in the fruits or vegetables.
    A few IoT instances, such as RFID tags, ultrasonic transducers, piezoelectric
    sensors, and acoustic sensors, may be deployed to further explore the attributes
    of the fruit in real-field farmlands (Mukhopadhyay et al., 2021). • Image Resolution
    Diversity: Fruitage image diversity plays a crucial role in enhancing both the
    spatial and spectral resolutions of a dataset. The literature survey witnessed
    that the RGB cameras are the most commonly used sensors, capable of capturing
    high spatial resolution images in the visible spectrum (Altaheri et al., 2019,
    Oltean, 2021, Gené-Mola et al., 2021). They excel in providing rich details related
    to color, and texture features, thus invaluable for multiple disease classification.
    On the contrary side, RGB images are highly susceptible to lighting conditions
    and can only capture information within the visible spectrum. Recently, hyperspectral,
    multispectral and thermal imagery have gained prominence attention in fruitage
    sensing due to their ability to reveal information in the invisible spectrum,
    which proves invaluable for early disease detection in the fruit or vegetables
    (Maimaitijiang et al., 2020, Steinbrener et al., 2019). Additionally, satellite-based
    Synthetic Aperture Radar (SAR) and optical images have shown notable presence
    in large-scale farmland mapping. Thus, future datasets should be curated by combining
    data from multiple camera sensors. This approach helps to offset the resolution
    limitations inherent in individual sensor types, ensuring a more comprehensive
    and informative dataset for disease identification applications. Spectral Disease
    Indices (SDI), Plant Disease Index (PDI), and Vegetation Indices (VI) are the
    important parameters used to increase the classification accuracy of disease identification
    and differentiation under real-world scenarios (Al-Saddik et al., 2017). 9. Summary
    and discussion This paper summarizes the current contributions and state-of-the-art
    development in machine learning, deep learning, and the Internet-of-Things, for
    fruit and vegetable disease identification, sorting, and grading. Fruit and vegetable
    safety, hygiene, and nutritional value are critical considerations in reducing
    food waste. The excellent quality of the fruitage must be monitored, and it must
    also be protected from deterioration and decay caused by climate variables such
    as humidity, temperature, and illumination. In this study, comparable fruit and
    vegetable disease classification tools using smart techniques have been discussed.
    It has covered ecological aspects such as temperature, moisture, alcohol web content,
    and light exposure for fruits and vegetables. Most of the smart technologies coupled
    with visualization methods achieve a classification accuracy of more than 90%
    in the disease classification domain for multiple cultivars of fruits and vegetables.
    Fig. 5 depicts the accuracy achieved using different intelligent models for the
    disease identification of fruits and vegetables. It is evident from the figure
    that fused technology has outperformed conventional methods to attain maximum
    accuracy. Concisely, SVM and clustering algorithms in the machine learning domain,
    pre-trained CNN using DTL and their variants in the deep learning domain, and
    UAV and microcontrollers (Arduino and Raspberry PI) in the IoT become the hotspot
    for fruit and vegetable disease detection and classification. Moreover, the consolidated
    report of the studied models has also been presented in Fig. 6 regarding classification
    accuracy, precision, sensitivity, and specificity as the performance attributes.
    The -axis represents the contribution percentage (the number of studies in which
    the fruit is covered divided by the total number of studies) of a particular species,
    while the -axis denotes the percentage of studies in which a particular parameter
    has been considered for evaluation. For instance, as depicted in the figure, apple
    tissues have been used in 25.2% of the total considered studies. Whereas, 72.7%
    apple papers calculated the accuracy as the performance parameter. As shown in
    the figure, the apple is the most researched topic for disease classification
    in agriculture. At the same time, researchers have shown the least interest in
    fruits and vegetables like jackfruit, guava, potato, jute, pear, and strawberry
    in the miscellaneous section. It is clear from the figure that accuracy and Kappa’s
    coefficient are considered the most and least important evaluation criteria for
    disease classification, respectively. Some of the other performance measures for
    fruit and vegetable disease detection are False Positive Rate (FPR), False Negative
    Rate (FNR), Matthews Correlation Coefficient (MCC), ROC curve, number of parameters,
    silhouette score, and segmentation accuracy. It is investigated from the study
    that several methods have used hand-crafted feature extraction approaches for
    extracting shape, color, size, and texture information from an image (Shafiq et
    al., 2020c). Recently, deep learning-based models have received significant attention
    from researchers for feature extraction due to their ability to extract features
    automatically without human interference, giving crucial information. It is important
    to note that the number of layers in the deep models varies depending on the dataset’s
    dimensions. For the high-dimensional dataset, a large number of layers and filters
    are required to extract the important features. During the image acquisition phase,
    several studies have collected high-resolution images using UAV, near-ground techniques,
    hyperspectral imaging, near-infrared imaging, multispectral imaging, RGB cameras,
    and other imaging techniques to obtain high disease classification accuracy. However,
    satellite technologies are restricted in their spatial/temporal resolutions and
    limited viewing capabilities in harsh weather conditions. Similarly, near-ground
    techniques have limited area coverage and need considerable effort to cover broad
    landscapes. Therefore, UAVs paired with sophisticated sensing technologies might
    be a cost-effective method for detecting fruit and vegetable diseases in small,
    medium, and large agricultural areas, enabling farmers to apply the correct treatment
    at the proper place, in the appropriate quantity, and at the right time. Download
    : Download high-res image (673KB) Download : Download full-size image Fig. 5.
    Accuracy comparison chart for primary fruits. Download : Download high-res image
    (721KB) Download : Download full-size image Fig. 6. Analysis of different performance
    metrics for fruits and vegetables covered in SLR. Furthermore, the privacy of
    real-field data is one of the primary concerns for agrarians. A huge amount of
    data is required to train and test the models. Sometimes, farmers do not want
    to share the data due to privacy reasons, or the data source is heterogeneous.
    To overcome such issues, the federated learning concept has been introduced to
    ensure data privacy, partitioning, and system heterogeneity. Moreover, deep learning
    models require high computation resources and storage devices for effective disease
    prediction. Also, the majority of the farmers from developing nations do not have
    the advanced skills to become technology-friendly. Thus, providing cost-effective
    and user-friendly solutions to farmers is the future step for researchers in academia
    and industries. Li and Chao (2020) suggested that the regular convolution network
    performs poorly on the real-field data due to the forgetting issue, which can
    be mitigated using continual or incremental learning for effective disease classification.
    Moreover, regular neural network methods act as black-box machines focusing on
    the input and output without knowing the output interpretation. XAI algorithms
    may be integrated with deep learning models to enhance the comprehension and transparency
    of the disease classification models (Bhandari et al., 2023). Also, it is noted
    that the autonomous disease classification system requires a hardware and software
    prototype. The hardware module can be structured using IoT devices for real-time
    image acquisition, such as humidity, pressure, temperature, and nutrition index
    in fruits and vegetables. Similarly, the software framework can be integrated
    with deep learning algorithms for feature extraction and disease prediction. 10.
    Conclusion The primary objective of “Agri-Food 4.0” is not limited to growing
    fruitage crops. It gives way to a new “smart” context in the vegetative phase
    by introducing ICT technologies to monitor the crops and predict the loss. As
    a result, farms can shift away from the conventional supply-oriented, expensive,
    unidentified approach toward a valuation, information-driven process in which
    availability and demand are constantly matched. As a result, farms and food supply
    chains could develop into self-adaptive ecosystems where intelligent, self-reliant
    objects could operate, make decisions, and even adapt without human interaction.
    This study highlights the recent advancements in machine learning, deep learning,
    and IoT for fruitage disease recognition and classification, detecting internal
    and external lesions to fruits, and their level of maturity. Ninety-nine peer-reviewed
    articles from the last six years are covered in the study to unfold major research
    questions, challenges, and opportunities. The study presents a detailed assessment
    of work on mutually acceptable frameworks through a range of research objectives.
    Moreover, the study covers the technology-wise research, challenges, opportunities,
    gaps, and future directions for fruitage disease detection and monitoring. Moreover,
    the publicly available fruit and vegetable datasets, their limitations, and future
    opportunities are also detailed. The study finds that several high-performance
    design models are tested for early disease detection on publicly available datasets,
    primarily taken in controlled laboratory environmental scenarios. However, the
    in-field implementation of such systems is still limited due to high computational
    costs and scarcity of resources, especially in developing countries. It is also
    recorded that technical attributes (resolution, illumination), dataset collection
    scenarios (laboratory, in-field), and feature attributes (texture, energy, size)
    have a significant impact on spectral reflectance. Additional reflectance analysis
    based on crop vegetation indices is an additional future space during crop growth
    at all stages of the disease. It is noted that the fusion of different sensible
    techniques leads to an efficient disease classification framework, which may vary
    by author perception, working environment, and datasets. Generally, fusion methods
    involve image acquisition from multi-sensors, satellites, camera modules, UAVs,
    robotics, image pre-processing using computer vision techniques, and disease classification
    and prediction using DL and ML models. Besides, it is tough to deduce the superiority
    of one approach over the other. It is noted that every piece of cropland is crucial
    to maximize the yield and minimize the loss. This study may serve as a tool for
    the researchers working in the area to get consolidated in place information about
    recent advancements, limitations, and future opportunities in the field of the
    agri-fruit industry. Declaration of competing interest The authors certify that
    they have no known competing financial interests or personal relationships that
    could have appeared to influence the work reported in this paper. Data availability
    Data will be made available on request. References Aasha Nandhini et al., 2018
    Aasha Nandhini S., Hemalatha R., Radha S., Indumathi K. Web enabled plant disease
    detection system for agricultural applications using WMSN Wirel. Pers. Commun.
    (2018) Google Scholar Abdulridha et al., 2019 Abdulridha J., Batuman O., Ampatzidis
    Y. UAV-based remote sensing technique to detect citrus canker disease utilizing
    hyperspectral imaging and machine learning Remote Sens. (2019) Google Scholar
    Agriculture, 2022 Agriculture S. Smart agriculture market report share, size,
    penetration forecast 2028 (2022) https://www.zionmarketresearch.com/report/smart-agriculture-market,
    (Accessed on 08/12/2022) Google Scholar Akhter and Sofi, 2021 Akhter R., Sofi
    S.A. Precision agriculture using IoT data analytics and machine learning J. King
    Saud Univ. Comput. Inf. Sci. (2021) Google Scholar Al-Saddik et al., 2017 Al-Saddik
    H., Simon J.-C., Cointault F. Development of spectral disease indices for ‘flavescence
    dorée’ grapevine disease identification Sensors (2017) Google Scholar Al-Sanabani
    et al., 2019 Al-Sanabani D.G.A., Solihin M.I., Pui L.P., Astuti W., Ang C.K.,
    Hong L.W. Development of non-destructive mango assessment using handheld spectroscopy
    and machine learning regression Journal of Physics: Conference Series, IOP Publishing
    (2019) Google Scholar Alahmed et al., 2020 Alahmed A., Alrasheedi A., Alharbi
    M., Alrebdi N., Aleasa M., Moulahi T. Machine learning for real-time data reduction
    in cloud of things 2020 2nd International Conference on Computer and Information
    Sciences, ICCIS, IEEE (2020) Google Scholar Alam et al., 2021 Alam A.U., Rathi
    P., Beshai H., Sarabha G.K., Deen M.J. Fruit quality monitoring with smart packaging
    Sensors (2021) Google Scholar Alam Siddiquee et al., 2020 Alam Siddiquee K.N.E.,
    Islam M.S., Dowla M.Y.U., Rezaul K.M., Grout V. Detection, quantification and
    classification of ripened tomatoes: a comparative analysis of image processing
    and machine learning IET Image Process. (2020) Google Scholar Albahri et al.,
    2023 Albahri A., Duhaim A.M., Fadhel M.A., Alnoor A., Baqer N.S., Alzubaidi L.,
    Albahri O., Alamoodi A., Bai J., Salhi A., et al. A systematic review of trustworthy
    and explainable artificial intelligence in healthcare: Assessment of quality,
    bias risk, and data fusion Inf. Fusion (2023) Google Scholar Albiero et al., 2022
    Albiero D., Garcia A.P., Umezu C.K., de Paulo R.L. Swarm robots in mechanized
    agricultural operations: A review about challenges for research Comput. Electron.
    Agric. (2022) Google Scholar Alencastre-Miranda et al., 2018 Alencastre-Miranda
    M., Davidson J.R., Johnson R.M., Waguespack H., Krebs H.I. Robotics for sugarcane
    cultivation: Analysis of billet quality using computer vision IEEE Robot. Autom.
    Lett. (2018) Google Scholar Almadhor et al., 2021 Almadhor A., Rauf H.T., Lali
    M.I.U., Damaševičius R., Alouffi B., Alharbi A. AI-driven framework for recognition
    of guava plant diseases through machine learning from DSLR camera sensor based
    high resolution imagery Sensors (2021) Google Scholar Altaheri et al., 2019 Altaheri,
    H., Alsulaiman, M., Faisal, M., Muhammed, G., 2019. Date fruit dataset for automated
    harvesting and visual yield estimation. In: Proc. IEEE DataPort. Google Scholar
    Alzubaidi et al., 2023 Alzubaidi L., Bai J., Al-Sabaawi A., Santamaría J., Albahri
    A., Al-dabbagh B.S.N., Fadhel M.A., Manoufali M., Zhang J., Al-Timemy A.H., et
    al. A survey on deep learning tools dealing with data scarcity: definitions, challenges,
    solutions, tips, and applications J. Big Data (2023) Google Scholar Antony and
    Kumar, 2021 Antony M.A., Kumar R.S. A comparative study on predicting food quality
    using machine learning techniques 2021 7th International Conference on Advanced
    Computing and Communication Systems, ICACCS, IEEE (2021) Google Scholar APEDA,
    2022 APEDA M.A. Fresh fruits and vegetables (2022) https://apeda.gov.in/apedawebsite/six_head_product/FFV.htm,
    (Accessed on 10/19/2022) Google Scholar Arya and Gangwar, 2021 Arya P.S., Gangwar
    M. A proposed architecture: Detecting freshness of vegetables using internet of
    things (IoT) & deep learning prediction algorithm 2021 3rd International Conference
    on Advances in Computing, Communication Control and Networking, ICAC3N, IEEE (2021)
    Google Scholar ATmega, 2022 ATmega P.S. Atmega2560 — microchip technology (2022)
    https://www.microchip.com/en-us/product/ATmega2560, (Accessed on 08/19/2022) Google
    Scholar Baranwal et al., 2020 Baranwal G., Singh M., Vidyarthi D.P. A framework
    for IoT service selection J. Supercomput. (2020) Google Scholar Behera et al.,
    2020 Behera S.K., Rath A.K., Mahapatra A., Sethy P.K. Identification, classification
    & grading of fruits using machine learning & computer intelligence: a review J.
    Ambient Intell. Humaniz. Comput. (2020) Google Scholar Bellet, 2006 Bellet L.R.
    Ergodic properties of Markov processes Open Quantum Systems II, Springer (2006)
    Google Scholar Bhandari et al., 2023 Bhandari M., Shahi T.B., Neupane A., Walsh
    K.B. Botanicx-AI: Identification of tomato leaf diseases using an explanation-driven
    deep-learning model J. Imaging (2023) Google Scholar Bhargava and Bansal, 2020a
    Bhargava A., Bansal A. Automatic detection and grading of multiple fruits by machine
    learning Food Anal. Methods (2020) Google Scholar Bhargava and Bansal, 2020b Bhargava
    A., Bansal A. Machine learning based quality evaluation of mono-colored apples
    Multimedia Tools Appl. (2020) Google Scholar Bhargava and Bansal, 2020c Bhargava
    A., Bansal A. Quality evaluation of mono & bi-colored apples with computer vision
    and multispectral imaging Multimedia Tools Appl. (2020) Google Scholar Bhole et
    al., 2020 Bhole V., Kumar A., Bhatnagar D. A texture-based analysis and classification
    of fruits using digital and thermal images ICT Analysis and Applications, Springer
    (2020) Google Scholar Bishop and Nasrabadi, 2006 Bishop C.M., Nasrabadi N.M. Pattern
    Recognition and Machine Learning, Springer (2006), pp. 4-23 Google Scholar Buyukarikan
    and Ulker, 2022 Buyukarikan B., Ulker E. Classification of physiological disorders
    in apples fruit using a hybrid model based on convolutional neural network and
    machine learning methods Neural Comput. Appl. (2022) Google Scholar Caleb et al.,
    2013 Caleb O.J., Mahajan P.V., Al-Said F.A.-J., Opara U.L. Modified atmosphere
    packaging technology of fresh and fresh-cut produce and the microbial consequences—a
    review Food Bioprocess Technol. (2013) Google Scholar Chandrasekaran et al., 2019
    Chandrasekaran I., Panigrahi S.S., Ravikanth L., Singh C.B. Potential of near-infrared
    (NIR) spectroscopy and hyperspectral imaging for quality and safety assessment
    of fruits: An overview Food Anal. Methods (2019) Google Scholar Chaturvedi et
    al., 2023 Chaturvedi A., Sharma S., Janghel R.R. Detection of external defects
    in tomatoes using deep learning J. Ambient Intell. Humaniz. Comput. (2023) Google
    Scholar Chaudhary et al., 2016 Chaudhary A., Kolhe S., Kamal R. An improved random
    forest classifier for multi-class classification Inf. Process. Agric. (2016) Google
    Scholar Chen et al., 2022 Chen H., Lundberg S.M., Lee S.-I. Explaining a series
    of models by propagating Shapley values Nat. Commun. (2022) Google Scholar Cheng,
    1995 Cheng Y. Mean shift, mode seeking, and clustering IEEE Trans. Pattern Anal.
    Mach. Intell. (1995) Google Scholar CISCO, 2022 CISCO Y. Cisco annual internet
    report - cisco (2022) https://www.cisco.com/c/en/us/solutions/executive-perspectives/annual-internet-report/index.html,
    (Accessed on 08/12/2022) Google Scholar Cortes and Vapnik, 1995 Cortes C., Vapnik
    V. Support-vector networks Mach. Learn. (1995) Google Scholar da Costa et al.,
    2020 da Costa A.Z., Figueroa H.E., Fracarolli J.A. Computer vision based detection
    of external defects on tomatoes using deep learning Biosyst. Eng. (2020) Google
    Scholar Cugmas and Štruc, 2020 Cugmas B., Štruc E. Accuracy of an affordable smartphone-based
    teledermoscopy system for color measurements in canine skin Sensors (2020) Google
    Scholar da Silveira et al., 2021 da Silveira F., Lermen F.H., Amaral F.G. An overview
    of agriculture 4.0 development: Systematic review of descriptions, technologies,
    barriers, advantages, and disadvantages Comput. Electron. Agric. (2021) Google
    Scholar Dai et al., 2016 Dai Q.-y., Zhang C.-p., Wu H. Research of decision tree
    classification algorithm in data mining Int. J. Database Theory Appl. (2016) Google
    Scholar Dairath et al., 2023 Dairath M.H., Akram M.W., Mehmood M.A., Sarwar H.U.,
    Akram M.Z., Omar M.M., Faheem M. Computer vision-based prototype robotic picking
    cum grading system for fruits Smart Agric. Technol. (2023) Google Scholar Das
    et al., 2020 Das S., Kar S., Sekh A.A. Fgrade: A large volume dataset for grading
    tomato freshness quality International Conference on Computer Vision and Image
    Processing, Springer (2020) Google Scholar De’ath and Fabricius, 2000 De’ath G.,
    Fabricius K.E. Classification and regression trees: a powerful yet simple technique
    for ecological data analysis Ecology (2000) Google Scholar Devi et al., 2020 Devi
    D., Anand A., Sophia S., Karpagam M., Maheswari S. IoT-deep learning based prediction
    of amount of pesticides and diseases in fruits 2020 International Conference on
    Smart Electronics and Communication, ICOSEC, IEEE (2020) Google Scholar Dhaka
    et al., 2021 Dhaka V.S., Meena S.V., Rani G., Sinwar D., Ijaz M.F., Woźniak M.
    A survey of deep convolutional neural networks applied for prediction of plant
    leaf diseases Sensors (2021) Google Scholar Dhiman et al., 2023 Dhiman P., Kaur
    A., Hamid Y., Alabdulkreem E., Elmannai H., Ababneh N. Smart disease detection
    system for citrus fruits using deep learning with edge computing Sustainability
    (2023) Google Scholar Dhiman et al., 2022a Dhiman P., Kukreja V., Manoharan P.,
    Kaur A., Kamruzzaman M., Dhaou I.B., Iwendi C. A novel deep learning model for
    detection of severity level of the disease in citrus fruits Electronics (2022)
    Google Scholar Dhiman et al., 2021 Dhiman B., Kumar Y., Hu Y.-C. A general purpose
    multi-fruit system for assessing the quality of fruits with the application of
    recurrent neural network Soft Comput. (2021) Google Scholar Dhiman et al., 2022b
    Dhiman B., Kumar Y., Kumar M. Fruit quality evaluation using machine learning
    techniques: review, motivation and future perspectives Multimedia Tools Appl.
    (2022) Google Scholar Doh et al., 2019 Doh B., Zhang D., Shen Y., Hussain F.,
    Doh R.F., Ayepah K. Automatic citrus fruit disease detection by phenotyping using
    machine learning 2019 25th International Conference on Automation and Computing,
    ICAC, IEEE (2019) Google Scholar Drugan, 2019 Drugan M.M. Reinforcement learning
    versus evolutionary computation: A survey on hybrid algorithms Swarm Evol. Comput.
    (2019) Google Scholar Dubey et al., 2020 Dubey A.K., Ratan R., Rocha A., et al.
    Computer vision based analysis and detection of defects in fruits causes due to
    nutrients deficiency Cluster Comput. (2020) Google Scholar Dubey and Rocha, 2023
    Dubey A.K., Rocha A. A non-invasive approach for calcium deficiency detection
    in pears using machine learning Neural Comput. Appl. (2023) Google Scholar Dybå
    and Dingsøyr, 2008 Dybå T., Dingsøyr T. Empirical studies of agile software development:
    A systematic review Inf. Softw. Technol. (2008) Google Scholar El-aziz et al.,
    2020 El-aziz A., Atrab A., Darwish A., Oliva D., Hassanien A.E. Machine learning
    for apple fruit diseases classification system The International Conference on
    Artificial Intelligence and Computer Vision, Springer (2020) Google Scholar El-Dosuky
    et al., 2020 El-Dosuky M.A., Oliva D., Hassanien A.E. An artificial intelligence
    system for apple fruit disease classification based on support vector machine
    and cockroach swarm optimization The International Conference on Artificial Intelligence
    and Computer Vision, Springer (2020) Google Scholar FAO, 2022a FAO M.A. At least
    40% global crops lost to pests every year: FAO (2022) https://www.downtoearth.org.in/news/agriculture/at-least-40-global-crops-lost-to-pests-every-year-fao-77252,
    (Accessed on 09/15/2022) Google Scholar FAO, 2022b FAO M.A. SDG 2. Zero hunger
    sustainable development goals food and agriculture organization of the united
    nations (2022) https://www.fao.org/sustainable-development-goals/goals/goal-2/en/,
    (Accessed on 10/19/2022) Google Scholar Fenu and Malloci, 2021 Fenu G., Malloci
    F.M. DiaMOS plant: A dataset for diagnosis and monitoring plant disease Agronomy
    (2021) Google Scholar Floerkemeier and Lampe, 2005 Floerkemeier, C., Lampe, M.,
    2005. RFID middleware design: addressing application requirements and RFID constraints.
    In: Proceedings of the 2005 Joint Conference on Smart Objects and Ambient Intelligence:
    Innovative Context-Aware Services: Usages and Technologies. Google Scholar Fountas
    et al., 2015 Fountas S., Sorensen C.G., Tsiropoulos Z., Cavalaris C., Liakos V.,
    Gemtos T. Farm machinery management information system Comput. Electron. Agric.
    (2015) Google Scholar Garg and Mago, 2021 Garg A., Mago V. Role of machine learning
    in medical research: A survey Comp. Sci. Rev. (2021) Google Scholar Gawas et al.,
    2021 Gawas A., Tolia K., Gaikwad S., Deshpande K., Upadhyaya K., Jain S. E-fresh:
    Computer vision and IOT framework for fruit freshness detection 2021 International
    Conference on Advances in Computing, Communication, and Control, ICAC3, IEEE (2021)
    Google Scholar GDP, 2022 GDP I. India GDP sector-wise StatisticsTimes.com (2022)
    https://statisticstimes.com/economy/country/india-gdp-sectorwise.php, (Accessed
    on 10/19/2022) Google Scholar Gené-Mola et al., 2021 Gené-Mola J., Sanz-Cortiella
    R., Rosell-Polo J.R., Escolà A., Gregorio E. Pfuji-size dataset: A collection
    of images and photogrammetry-derived 3D point clouds with ground truth annotations
    for fuji apple detection and size estimation in field conditions Data Brief (2021)
    Google Scholar GHI, 2022 GHI J. India - global hunger index (GHI) - peer-reviewed
    annual publication designed to comprehensively measure and track hunger at the
    global, regional, and country levels (2022) https://www.globalhungerindex.org/india.html,
    (Accessed on 10/17/2022) Google Scholar Ghodke et al., 2022 Ghodke V., Pungaiah
    S.S., Shamout M.D., Sundarraj A.A., Judder M.I., Vijayprasath S. Machine learning
    for auto segregation of fruits classification based logistic support vector regression
    2022 2nd International Conference on Technological Advancements in Computational
    Sciences, ICTACS, IEEE (2022) Google Scholar Goldstein et al., 2017 Goldstein
    B.A., Navar A.M., Carter R.E. Moving beyond regression techniques in cardiovascular
    risk prediction: applying machine learning to address analytic challenges Eur.
    Heart J. (2017) Google Scholar Gollakota and Srinivas, 2011 Gollakota A., Srinivas
    M. Agribot—A multipurpose agricultural robot 2011 Annual IEEE India Conference,
    IEEE (2011) Google Scholar Habib et al., 2020 Habib M., Mia M., Uddin M.S., Ahmed
    F., et al. A computer vision approach for jackfruit disease recognition Proceedings
    of International Joint Conference on Computational Intelligence, Springer (2020)
    Google Scholar Hamilton et al., 2022 Hamilton N., Webb A., Wilder M., Hendrickson
    B., Blanck M., Nelson E., Roemer W., Havens T.C. Enhancing visualization and explainability
    of computer vision models with local interpretable model-agnostic explanations
    (LIME) 2022 IEEE Symposium Series on Computational Intelligence, SSCI, IEEE (2022)
    Google Scholar Han et al., 2021 Han C.H., Kim E., Doan T.N.N., Han D., Yoo S.J.,
    Kwak J.T. Region-aggregated attention CNN for disease detection in fruit images
    PLoS One (2021) Google Scholar Hari and Singh, 2023 Hari P., Singh M.P. A lightweight
    convolutional neural network for disease detection of fruit leaves Neural Comput.
    Appl. (2023) Google Scholar Hasan et al., 2023 Hasan R.I., Yusuf S.M., Mohd Rahim
    M.S., Alzubaidi L. Automatic clustering and classification of coffee leaf diseases
    based on an extended kernel density estimation approach Plants (2023) Google Scholar
    Hasan et al., 2022 Hasan R.I., Yusuf S.M., Rahim M.S.M., Alzubaidi L. Automated
    masks generation for coffee and apple leaf infected with single or multiple diseases-based
    color analysis approaches Inform. Med. Unlocked (2022) Google Scholar He et al.,
    2015 He, K., Zhang, X., Ren, S., Sun, J., 2015. Delving deep into rectifiers:
    Surpassing human-level performance on imagenet classification. In: Proceedings
    of the IEEE International Conference on Computer Vision. Google Scholar Hemamalini
    et al., 2022 Hemamalini V., Rajarajeswari S., Nachiyappan S., Sambath M., Devi
    T., Singh B.K., Raghuvanshi A. Food quality inspection and grading using efficient
    image segmentation and machine learning-based system J. Food Qual. (2022) Google
    Scholar Hien and Gillis, 2021 Hien L.T.K., Gillis N. Algorithms for nonnegative
    matrix factorization with the Kullback–Leibler divergence J. Sci. Comput. (2021)
    Google Scholar Honkavaara et al., 2013 Honkavaara E., Saari H., Kaivosoja J.,
    Pölönen I., Hakala T., Litkey P., Mäkynen J., Pesonen L. Processing and assessment
    of spectrometric, stereoscopic imagery collected using a lightweight UAV spectral
    camera for precision agriculture Remote Sens. (2013) Google Scholar Hotelling,
    1933 Hotelling H. Analysis of a complex of statistical variables into principal
    components J. Educ. Psychol. (1933) Google Scholar HSI, 2022 HSI H. Hyperspectral
    imaging — high-performance devices - senop (2022) https://senop.fi/industry-research/hyperspectral-imaging/,
    (Accessed on 08/20/2022) Google Scholar Hu et al., 2023 Hu W., Xiong J., Liang
    J., Xie Z., Liu Z., Huang Q., Yang Z. A method of citrus epidermis defects detection
    based on an improved YOLOv5 Biosyst. Eng. (2023) Google Scholar Huawei, 2022 Huawei
    W. 2020 Global connectivity index (2022) https://www.huawei.com/minisite/gci/en/index.html,
    (Accessed on 08/12/2022) Google Scholar IBEF, 2023 IBEF W. Agriculture in India:
    Industry overview, market size, role in development.— IBEF (2023) https://www.ibef.org/industry/agriculture-india,
    (Accessed on 01/30/2023) Google Scholar ICAR, 2022 ICAR W. IH-sep-oct 2021.pdf
    (2022) https://icar.org.in/sites/default/files/IH-Sep-Oct, (Accessed on 10/19/2022)
    Google Scholar IFW, 2022 IFW C. The casc ifw database (2022) https://engineering.purdue.edu/RVL/Database/IFW/index.html,
    (Accessed on 09/02/2022) Google Scholar ImageNet, 2023 ImageNet C. ImageNet challenges,
    LSVRC (2023) https://image-net.org/challenges/LSVRC/2013/index.php, (Accessed
    on 01/06/2023) Google Scholar Indumathi et al., 2017 Indumathi K., Hemalatha R.,
    Nandhini S.A., Radha S. Intelligent plant disease detection system using wireless
    multimedia sensor networks 2017 International Conference on Wireless Communications,
    Signal Processing and Networking, WiSPNET, IEEE (2017) Google Scholar Iqbal et
    al., 2018 Iqbal Z., Khan M.A., Sharif M., Shah J.H., ur Rehman M.H., Javed K.
    An automated detection and classification of citrus plant diseases using image
    processing techniques: A review Comput. Electron. Agric. (2018) Google Scholar
    Ireri et al., 2019 Ireri D., Belal E., Okinda C., Makange N., Ji C. A computer
    vision system for defect discrimination and grading in tomatoes using machine
    learning and image processing Artif. Intell. Agric. (2019) Google Scholar Ismail
    and Malik, 2022 Ismail N., Malik O.A. Real-time visual inspection system for grading
    fruits using computer vision and deep learning techniques Inf. Process. Agric.
    (2022) Google Scholar Jahanbakhshi and Kheiralipour, 2020 Jahanbakhshi A., Kheiralipour
    K. Evaluation of image processing technique and discriminant analysis methods
    in postharvest processing of carrot fruit Food Sci. Nutr. (2020) Google Scholar
    James and Sujatha, 2021 James G.M., Sujatha S. Categorising apple fruit diseases
    employing hybrid neural clustering classifier Mater. Today: Proc. (2021) Google
    Scholar Janarthan et al., 2020 Janarthan S., Thuseethan S., Rajasegarar S., Lyu
    Q., Zheng Y., Yearwood J. Deep metric learning based citrus disease classification
    with sparse data IEEE Access (2020) Google Scholar Jawade et al., 2020 Jawade
    P., Chaugule D., Patil D., Shinde H. Disease prediction of mango crop using machine
    learning and IoT Advances in Decision Sciences, Image Processing, Security and
    Computer Vision, Springer (2020) Google Scholar Ji et al., 2018 Ji Y., Zhao Q.,
    Bi S., Shen T. Apple grading method based on features of color and defect 2018
    37th Chinese Control Conference, CCC, IEEE (2018) Google Scholar Jin et al., 2020
    Jin X.-B., Yu X.-H., Wang X.-Y., Bai Y.-T., Su T.-L., Kong J.-L. Deep learning
    predictor for sustainable precision agriculture based on internet of things system
    Sustainability (2020) Google Scholar Kaggle, 2022 Kaggle X.-B. Fruits fresh and
    rotten for classification — kaggle (2022) https://www.kaggle.com/datasets/sriramr/fruits-fresh-and-rotten-for-classification,
    (Accessed on 07/22/2022) Google Scholar Kalia et al., 2019 Kalia P., Garg A.,
    Kumar A., et al. Fruit quality evaluation using machine learning: A review 2019
    2nd International Conference on Intelligent Computing, Instrumentation and Control
    Technologies, ICICICT, IEEE (2019) Google Scholar Kantale and Thakare, 2020 Kantale
    P., Thakare S. A review on pomegranate disease classification using machine learning
    and image segmentation techniques 2020 4th International Conference on Intelligent
    Computing and Control Systems, ICICCS, IEEE (2020) Google Scholar Kaufmane et
    al., 2022 Kaufmane E., Sudars K., Namatēvs I., Kalniņa I., Judvaitis J., Balašs
    R., Strautiņa S. QuinceSet: Dataset of annotated Japanese quince images for object
    detection Data Brief (2022) Google Scholar Keele et al., 2007 Keele, S., et al.,
    2007. Guidelines for Performing Systematic Literature Reviews in Software Engineering.
    Tech. Rep.. Google Scholar Khalifa et al., 2022 Khalifa N.E., Loey M., Mirjalili
    S. A comprehensive survey of recent trends in deep learning for digital images
    augmentation Artif. Intell. Rev. (2022) Google Scholar Khan et al., 2018 Khan
    M.A., Akram T., Sharif M., Awais M., Javed K., Ali H., Saba T. CCDF: Automatic
    system for segmentation and recognition of fruit crops diseases based on correlation
    coefficient and deep CNN features Comput. Electron. Agric. (2018) Google Scholar
    Khattab et al., 2019 Khattab A., Habib S.E., Ismail H., Zayan S., Fahmy Y., Khairy
    M.M. An IoT-based cognitive monitoring system for early plant disease forecast
    Comput. Electron. Agric. (2019) Google Scholar Khattak et al., 2021 Khattak A.,
    Asghar M.U., Batool U., Asghar M.Z., Ullah H., Al-Rakhami M., Gumaei A. Automatic
    detection of citrus fruit and leaves diseases using deep neural network model
    IEEE Access (2021) Google Scholar Kizilboga et al., 2020 Kizilboga A.Y., Ergüzen
    A., Erdal E. Determination of various diseases in two most consumed fruits using
    artificial neural networks and deep learning techniques (2020) Google Scholar
    Kour and Arora, 2020 Kour V.P., Arora S. Recent developments of the internet of
    things in agriculture: a survey IEEE Access (2020) Google Scholar Krizhevsky et
    al., 2012 Krizhevsky A., Sutskever I., Hinton G.E. Imagenet classification with
    deep convolutional neural networks Adv. Neural Inf. Process. Syst. (2012) Google
    Scholar Kumar et al., 2020a Kumar S.D., Esakkirajan S., Bama S., Keerthiveena
    B. A microcontroller based machine vision approach for tomato grading and sorting
    using SVM classifier Microprocess. Microsyst. (2020) Google Scholar Kumar et al.,
    2020b Kumar S.D., Esakkirajan S., Vimalraj C., Veena B.K. Design of disease prediction
    method based on whale optimization employed artificial neural network in tomato
    fruits Mater. Today: Proc. (2020) Google Scholar Kumar et al., 2021 Kumar A.,
    Rajpurohit V.S., Gaikwad N.N. Image dataset of pomegranate fruits (Punica granatum)
    for various machine vision applications Data Brief (2021) Google Scholar Kumari
    et al., 2021 Kumari N., Belwal R., et al. Hybridized approach of image segmentation
    in classification of fruit mango using BPNN and discriminant analyzer Multimedia
    Tools Appl. (2021) Google Scholar Langford et al., 2019 Langford V.S., Padayachee
    D., McEwan M.J., Barringer S.A. Comprehensive odorant analysis for on-line applications
    using selected ion flow tube mass spectrometry (SIFT-MS) Flavour Fragr. J. (2019)
    Google Scholar Lee et al., 2020 Lee S.H., Goëau H., Bonnet P., Joly A. New perspectives
    on plant disease characterization based on deep learning Comput. Electron. Agric.
    (2020) Google Scholar LEEDS, 2022 LEEDS S.H. Dataset :: Leeds butterfly dataset
    (2022) http://www.josiahwang.com/dataset/leedsbutterfly/, (Accessed on 08/23/2022)
    Google Scholar Li et al., 2022 Li D., Ahmed F., Wu N., Sethi A.I. YOLO-JD: A deep
    learning network for jute diseases and pests detection from images Plants (2022)
    Google Scholar Li and Chao, 2020 Li Y., Chao X. ANN-based continual classification
    in agriculture Agriculture (2020) Google Scholar Li and Wang, 2014 Li C., Wang
    B. Fisher linear discriminant analysis CCIS Northeastern University (2014) Google
    Scholar Liberati et al., 2009 Liberati A., Altman D.G., Tetzlaff J., Mulrow C.,
    Gøtzsche P.C., Ioannidis J.P., Clarke M., Devereaux P.J., Kleijnen J., Moher D.
    The PRISMA statement for reporting systematic reviews and meta-analyses of studies
    that evaluate health care interventions: explanation and elaboration J. Clin.
    Epidemiol. (2009) Google Scholar Liu et al., 2008 Liu F.T., Ting K.M., Zhou Z.-H.
    Isolation forest 2008 Eighth IEEE International Conference on Data Mining, IEEE
    (2008) Google Scholar Van der Maaten and Hinton, 2008 Van der Maaten L., Hinton
    G. Visualizing data using t-SNE J. Mach. Learn. Res. (2008) Google Scholar Maimaitijiang
    et al., 2020 Maimaitijiang M., Sagan V., Sidike P., Hartling S., Esposito F.,
    Fritschi F.B. Soybean yield prediction from UAV using multimodal data fusion and
    deep learning Remote Sens. Environ. (2020) Google Scholar Mamdouh and Khattab,
    2021 Mamdouh N., Khattab A. YOLO-based deep learning framework for olive fruit
    fly detection and counting IEEE Access (2021) Google Scholar Manyika et al., 2015
    Manyika J., Chui M., Bisson P., Woetzel J., Dobbs R., Bughin J., D. A. The Internet
    of Things Mapping the Value Beyond the Hype Mckinsey & Company (2015) Google Scholar
    Medhi and Deb, 2022 Medhi E., Deb N. PSFD-musa: A dataset of banana plant, stem,
    fruit, leaf, and disease Data Brief (2022) Google Scholar Memarsadeghi and O’Leary,
    2003 Memarsadeghi N., O’Leary D.P. Classified information: the data clustering
    problem Comput. Sci. Eng. (2003) Google Scholar Mendeley, 2022 Mendeley N. Fresh
    and rotten fruits dataset for machine-based evaluation of fruit quality - mendeley
    data (2022) https://data.mendeley.com/datasets/bdd69gyhv8/1, (Accessed on 07/22/2022)
    Google Scholar Meshram and Patil, 2022 Meshram V., Patil K. FruitNet: Indian fruits
    image dataset with quality for machine learning applications Data Brief (2022)
    Google Scholar Meshram et al., 2021 Meshram V.A., Patil K., Ramteke S.D. MNet:
    A framework to reduce fruit image misclassification. Ingén. Syst. Inf. (2021)
    Google Scholar Meshram et al., 2020 Meshram V., Thanomliang K., Ruangkan S., Chumchu
    P., Patil K. Fruitsgb: top Indian fruits with quality (2020) Google Scholar Microsoft,
    2022 Microsoft V. Microsoft word - 9 IOT with cloud based smart farming for citrus
    fruit disease classification using optimized convolutional neu (2022) https://researchtrend.net/ijet/pdf/IOT,
    (Accessed on 07/22/2022) Google Scholar Mishra et al., 2019 Mishra S., Khatri
    S.K., Johri P. IOT based automated quality assessment for fruits and vegetables
    using infrared 2019 4th International Conference on Information Systems and Computer
    Networks, ISCON, IEEE (2019) Google Scholar Mishra et al., 2020 Mishra P., Roger
    J.M., Rutledge D.N., Woltering E. SPORT pre-processing can improve near-infrared
    quality prediction models for fresh fruits and agro-materials Postharvest Biol.
    Technol. (2020) Google Scholar Mohammed et al., 2023 Mohammed M., El-Shafie H.,
    Munir M. Development and validation of innovative machine learning models for
    predicting date palm mite infestation on fruits Agronomy (2023) Google Scholar
    Mojumdar and Chakraborty, 2021 Mojumdar M.U., Chakraborty N.R. Orange & orange
    leaves diseases detection using computerized techniques 2021 12th International
    Conference on Computing Communication and Networking Technologies, ICCCNT, IEEE
    (2021) Google Scholar Moore et al., 2001 Moore D., Nauta M.M., Evans S.E., Rotheroe
    M. Fungal Conservation: Issues and Solutions Cambridge University Press (2001)
    Google Scholar Moriya et al., 2021 Moriya É.A.S., Imai N.N., Tommaselli A.M.G.,
    Berveglieri A., Santos G.H., Soares M.A., Marino M., Reis T.T. Detection and mapping
    of trees infected with citrus gummosis using UAV hyperspectral data Comput. Electron.
    Agric. (2021) Google Scholar Mukhopadhyay et al., 2021 Mukhopadhyay S.C., Tyagi
    S.K.S., Suryadevara N.K., Piuri V., Scotti F., Zeadally S. Artificial intelligence-based
    sensors for next generation IoT applications: A review IEEE Sens. J. (2021) Google
    Scholar Munasingha et al., 2019 Munasingha L., Gunasinghe H., Dhanapala W. Identification
    of papaya fruit diseases using deep learning approach 4th International Conference
    on Advances in Computing and Technology, ICACT (2019) Google Scholar Nabi et al.,
    2020 Nabi F., Jamwal S., Padmanbh K. Wireless sensor network in precision farming
    for forecasting and monitoring of apple disease: a survey Int. J. Inf. Technol.
    (2020) Google Scholar Nagasubramanian et al., 2021 Nagasubramanian G., Sakthivel
    R.K., Patan R., Sankayya M., Daneshmand M., Gandomi A.H. Ensemble classification
    and IoT-based pattern recognition for crop disease monitoring system IEEE Internet
    Things J. (2021) Google Scholar Naik et al., 2023 Naik B.N., Ramanathan M., Ponnusamy
    P. Refined single-stage object detection deep-learning technique for chilli leaf
    disease detection J. Electron. Imaging (2023) Google Scholar Nandhini et al.,
    2015 Nandhini S.A., Sankararajan R., Rajendiran K. Video compressed sensing framework
    for wireless multimedia sensor networks using a combination of multiple matrices
    Comput. Electr. Eng. (2015) Google Scholar Naranjo-Torres et al., 2020 Naranjo-Torres
    J., Mora M., Hernández-García R., Barrientos R.J., Fredes C., Valenzuela A. A
    review of convolutional neural network applied to fruit image processing Appl.
    Sci. (2020) Google Scholar Noguchi et al., 2020 Noguchi S., Nishio M., Yakami
    M., Nakagomi K., Togashi K. Bone segmentation on whole-body CT using convolutional
    neural network with novel data augmentation techniques Comput. Biol. Med. (2020)
    Google Scholar Oltean, 2021 Oltean M. Fruits 360 dataset: new research directions
    (2021) Google Scholar Oppenheim et al., 2019 Oppenheim D., Shani G., Erlich O.,
    Tsror L. Using deep learning for image-based potato tuber disease detection Phytopathology
    (2019) Google Scholar Oraño et al., 2019 Oraño J.F.V., Maravillas E.A., Aliac
    C.J.G. Jackfruit fruit damage classification using convolutional neural network
    2019 IEEE 11th International Conference on Humanoid, Nanotechnology, Information
    Technology, Communication and Control, Environment, and Management, HNICEM, IEEE
    (2019) Google Scholar Palei et al., 2023 Palei S., Behera S.K., Sethy P.K. A systematic
    review of citrus disease perceptions and fruit grading using machine vision Procedia
    Comput. Sci. (2023) Google Scholar Park and Yang, 2019 Park Y., Yang H.S. Convolutional
    neural network based on an extreme learning machine for image classification Neurocomputing
    (2019) Google Scholar Patil et al., 2021a Patil P.U., Lande S.B., Nagalkar V.J.,
    Nikam S.B., Wakchaure G. Grading and sorting technique of dragon fruits using
    machine learning algorithms J. Agric. Food Res. (2021) Google Scholar Patil et
    al., 2021b Patil J., et al. Pomegranate fruit diseases detection using image processing
    techniques: A review Inf. Technol. Ind. (2021) Google Scholar Pavel et al., 2019
    Pavel M.I., Kamruzzaman S.M., Hasan S.S., Sabuj S.R. An IoT based plant health
    monitoring system implementing image processing 2019 IEEE 4th International Conference
    on Computer and Communication Systems, ICCCS, IEEE (2019) Google Scholar Pawara
    et al., 2018 Pawara S., Nawale D., Patil K., Mahajan R. Early detection of pomegranate
    disease using machine learning and internet of things 2018 3rd International Conference
    for Convergence in Technology, I2CT, IEEE (2018) Google Scholar Quinlan, 1996
    Quinlan J.R. Learning decision tree classifiers ACM Comput. Surv. (1996) Google
    Scholar Quy et al., 2022 Quy V.K., Hau N.V., Anh D.V., Quy N.M., Ban N.T., Lanza
    S., Randazzo G., Muzirafuti A. IoT-enabled smart agriculture: Architecture, applications,
    and challenges Appl. Sci. (2022) Google Scholar Rahman et al., 2018 Rahman S.,
    Khan S., Porikli F. A unified approach for conventional zero-shot, generalized
    zero-shot, and few-shot learning IEEE Trans. Image Process. (2018) Google Scholar
    Rajbongshi et al., 2022 Rajbongshi A., Sazzad S., Shakil R., Akter B., Sara U.
    A comprehensive guava leaves and fruits dataset for guava disease recognition
    Data Brief (2022) Google Scholar Rangarajan et al., 2022 Rangarajan A.K., Whetton
    R.L., Mouazen A.M. Detection of fusarium head blight in wheat using hyperspectral
    data and deep learning Expert Syst. Appl. (2022) Google Scholar Rauf and Lali,
    2021 Rauf H.T., Lali M.I.U. A guava fruits and leaves dataset for detection and
    classification of guava diseases through machine learning Mendeley Data (2021)
    Google Scholar Rauf et al., 2019 Rauf H.T., Saleem B.A., Lali M.I.U., Khan M.A.,
    Sharif M., Bukhari S.A.C. A citrus fruits and leaves dataset for detection and
    classification of citrus diseases through machine learning Data Brief (2019) Google
    Scholar Razmjooy et al., 2019 Razmjooy N., Estrela V.V., Loschi H.J. A survey
    of potatoes image segmentation based on machine vision Applications of Image Processing
    and Soft Computing Systems in Agriculture, IGI Global (2019) Google Scholar Refractometers,
    2022 Refractometers D. Digital refractometers: MA884 (2022) https://www.milwaukeeinst.com/web/products/our-products/refractometer/ma884-detail?tmpl=component&format=pdf,
    (Accessed on 08/29/2022) Google Scholar Rehman et al., 2022 Rehman M.Z.U., Ahmed
    F., Khan M.A., Tariq U., Jamal S.S., Ahmad J., Hussain I. Classification of citrus
    plant diseases using deep transfer learning Comput. Mater. Contin. (2022) Google
    Scholar Reynolds, 2009 Reynolds D.A. Gaussian mixture models. Encycl. Biom. (2009)
    Google Scholar Rizzo et al., 2023 Rizzo M., Marcuzzo M., Zangari A., Gasparetto
    A., Albarelli A. Fruit ripeness classification: A survey Artif. Intell. Agric.
    (2023) Google Scholar Roy et al., 2021a Roy K., Chaudhuri S.S., Pramanik S. Deep
    learning based real-time industrial framework for rotten and fresh fruit detection
    using semantic segmentation Microsyst. Technol. (2021) Google Scholar Roy et al.,
    2021b Roy K., Pramanik S., Chaudhuri S.S. Unsupervised machine learning algorithm
    based rotten fruit segmentation Advances in Smart Communication Technology and
    Information Processing, Springer (2021) Google Scholar Saha and Manickavasagan,
    2021 Saha D., Manickavasagan A. Machine learning techniques for analysis of hyperspectral
    images to determine quality of food products: A review Curr. Res. Food Sci. (2021)
    Google Scholar Saini et al., 2021 Saini, A.K., Bhatnagar, R., Srivastava, D.K.,
    2021. Citrus Fruits Diseases Detection and Classification Using Transfer Learning.
    In: Proceedings of the International Conference on Data Science, Machine Learning
    and Artificial Intelligence. Google Scholar Sara et al., 2022 Sara U., Rajbongshi
    A., Shakil R., Akter B., Uddin M.S. VegNet: An organized dataset of cauliflower
    disease for a sustainable agro-based automation system Data Brief (2022) Google
    Scholar Saranya et al., 2021 Saranya S.M., Rajalaxmi R., Prabavathi R., Suganya
    T., Mohanapriya S., Tamilselvi T. Deep learning techniques in tomato plant–a review
    Journal of Physics: Conference Series, IOP Publishing (2021) Google Scholar SARSA,
    2022 SARSA S.M. SARSA reinforcement learning - GeeksforGeeks (2022) https://www.geeksforgeeks.org/sarsa-reinforcement-learning/,
    (Accessed on 09/06/2022) Google Scholar Schoofs et al., 2020 Schoofs H., Delalieux
    S., Deckers T., Bylemans D. Fire blight monitoring in pear orchards by unmanned
    airborne vehicles (UAV) systems carrying spectral sensors Agronomy (2020) Google
    Scholar Selvaraj et al., 2019 Selvaraj M.G., Vergara A., Ruiz H., Safari N., Elayabalan
    S., Ocimati W., Blomme G. AI-powered banana diseases and pest detection Plant
    Methods (2019) Google Scholar Shafiq et al., 2020a Shafiq M., Tian Z., Bashir
    A., Du X., Guizani M. CorrAUC: a malicious bot-IoT traffic detection method in
    IoT network using machine learning techniques IEEE Internet Things J. (2020) Google
    Scholar Shafiq et al., 2020b Shafiq M., Tian Z., Bashir A., Du X., Guizani M.
    IoT malicious traffic identification using wrapper-based feature selection mechanisms
    Comput. Secur. (2020) Google Scholar Shafiq et al., 2020c Shafiq M., Tian Z.,
    Bashir A., Jolfaei A. Data mining and machine learning methods for sustainable
    smart cities traffic classification: A survey Sustainable Cities Soc. (2020) Google
    Scholar Shafiq et al., 2020d Shafiq M., Tian Z., Sun Y., Du X., Guizani M. Selection
    of effective machine learning algorithm and bot-IoT attacks traffic identification
    for internet of things in smart city Future Gener. Comput. Syst. (2020) Google
    Scholar Shapiro and Bona, 2010 Shapiro S.C., Bona J.P. The GLAIR cognitive architecture
    Int. J. Mach. Conscious. (2010) Google Scholar Sharma et al., 2020 Sharma A.,
    Jain A., Gupta P., Chowdary V. Machine learning applications for precision agriculture:
    A comprehensive review IEEE Access (2020) Google Scholar Sharma et al., 2022 Sharma
    V., Tripathi A.K., Mittal H. Technological revolutions in smart farming: Current
    trends, challenges & future directions Comput. Electron. Agric. (2022) Google
    Scholar Shoji et al., 2022 Shoji K., Schudel S., Onwude D., Shrivastava C., Defraeye
    T. Mapping the postharvest life of imported fruits from packhouse to retail stores
    using physics-based digital twins Resour. Conserv. Recy. (2022) Google Scholar
    Shruthi et al., 2022 Shruthi U., Nagaveni V., Arvind C., Sunil G. Tomato plant
    disease classification using deep learning architectures: A review Proceedings
    of Second International Conference on Advances in Computer Engineering and Communication
    Systems, Springer (2022) Google Scholar Singh and Kaur, 2018 Singh J., Kaur H.
    Plant disease detection based on region-based segmentation and KNN classifier
    International Conference on ISMAC in Computational Vision and Bio-Engineering,
    Springer (2018) Google Scholar Singh et al., 2022 Singh A., Vaidya G., Jagota
    V., Darko D.A., Agarwal R.K., Debnath S., Potrich E. Recent advancement in postharvest
    loss mitigation and quality management of fruits and vegetables using machine
    learning frameworks J. Food Qual. (2022) Google Scholar Sivaranjani et al., 2022
    Sivaranjani A., Senthilrani S., Ashok Kumar B., Senthil Murugan A. An overview
    of various computer vision-based grading system for various agricultural products
    J. Horticult. Sci. Biotechnol. (2022) Google Scholar Steinbrener et al., 2019
    Steinbrener J., Posch K., Leitner R. Hyperspectral fruit and vegetable classification
    using convolutional neural networks Comput. Electron. Agric. (2019) Google Scholar
    Sugiarti et al., 2021 Sugiarti Y., Supriyatna A., Carolina I., Amin R., Yani A.,
    et al. Model naïve Bayes classifiers for detection apple diseases 2021 9th International
    Conference on Cyber and IT Service Management, CITSM, IEEE (2021) Google Scholar
    Survey, 2022 Survey N.F.H. India.pdf (2022) http://rchiips.org/nfhs/NFHS-5_FCTS/India.pdf,
    (Accessed on 10/17/2022) Google Scholar Szegedy et al., 2015 Szegedy, C., Liu,
    W., Jia, Y., Sermanet, P., Reed, S., Anguelov, D., Erhan, D., Vanhoucke, V., Rabinovich,
    A., 2015. Going deeper with convolutions. In: Proceedings of the IEEE Conference
    on Computer Vision and Pattern Recognition. Google Scholar Tan and Le, 2019 Tan
    M., Le Q. Efficientnet: Rethinking model scaling for convolutional neural networks
    International Conference on Machine Learning, PMLR (2019) Google Scholar Tang
    et al., 2023 Tang Y., Zhou H., Wang H., Zhang Y. Fruit detection and positioning
    technology for a Camellia oleifera C. Abel orchard based on improved YOLOv4-tiny
    model and binocular stereo vision Expert Syst. Appl. (2023) Google Scholar Tariq
    et al., 2022 Tariq S., Hakim A., Siddiqi A.A., Owais M. An image dataset of fruitfly
    species (bactrocera zonata and bactrocera dorsalis) and automated species classification
    through object detection Data Brief (2022) Google Scholar Tasnim et al., 2021
    Tasnim R., Drummond F., Zhang Y.-J. Climate change patterns of wild blueberry
    fields in downeast, maine over the past 40 years Water (2021) Google Scholar Thangaraj
    et al., 2020 Thangaraj R., Dinesh D., Hariharan S., Rajendar S., Gokul D., Hariskarthi
    T. Automatic recognition of avocado fruit diseases using modified deep convolutional
    neural network Int. J. Grid Distrib. Comput. (2020) Google Scholar The design,
    2022 The design of divide and conquer algorithms douglas R. Smith — download (2022)
    https://ur.booksc.me/book/8550899/ddbecf, (Accessed on 08/25/2022) Google Scholar
    Tian et al., 2021 Tian Y., Li E., Liang Z., Tan M., He X. Diagnosis of typical
    apple diseases: A deep learning method based on multi-scale dense classification
    network Front. Plant Sci. (2021) Google Scholar Tian et al., 2019 Tian Y., Yang
    G., Wang Z., Li E., Liang Z. Detection of apple lesions in orchards based on deep
    learning methods of cyclegan and yolov3-dense J. Sens. (2019) Google Scholar Tripathi
    and Maktedar, 2023 Tripathi M.K., Maktedar D.D. Internal quality assessment of
    mango fruit: an automated grading system with ensemble classifier J. Imaging Sci.
    (2023) Google Scholar Turkoglu et al., 2019 Turkoglu M., Hanbay D., Sengur A.
    Multi-model LSTM-based convolutional neural networks for detection of apple diseases
    and pests J. Ambient Intell. Humaniz. Comput. (2019) Google Scholar Ukwuoma et
    al., 2022 Ukwuoma C.C., Zhiguang Q., Bin Heyat M.B., Ali L., Almaspoor Z., Monday
    H.N. Recent advancements in fruit detection and classification using deep learning
    techniques Math. Probl. Eng. (2022) Google Scholar Van Engelen and Hoos, 2020
    Van Engelen J.E., Hoos H.H. A survey on semi-supervised learning Mach. Learn.
    (2020) Google Scholar Vanitha et al., 2023 Vanitha C., Malathy S., Krishna S.,
    Manikantan M., Kumar P.D., Cibi M.G. Detection of ripe and raw tomatoes using
    internet of things 2023 7th International Conference on Computing Methodologies
    and Communication, ICCMC, IEEE (2023) Google Scholar Vasumathi and Kamarasan,
    2021 Vasumathi M., Kamarasan M. An effective pomegranate fruit classification
    based on CNN-LSTM deep learning models Indian J. Sci. Technol. (2021) Google Scholar
    Vimala et al., 2021 Vimala S., Gladiss Merlin N., Ramanathan L., Cristin R. Optimal
    routing and deep regression neural network for rice leaf disease prediction in
    IoT Int. J. Comput. Methods (2021) Google Scholar Vincent and Soille, 1991 Vincent
    L., Soille P. Watersheds in digital spaces: an efficient algorithm based on immersion
    simulations IEEE Trans. Pattern Anal. Mach. Intell. (1991) Google Scholar Wang
    and Ni, 2019 Wang Y., Ni X.S. Predicting class-imbalanced business risk using
    resampling, regularization, and model ensembling algorithms (2019) arXiv preprint
    arXiv:1903.05535 Google Scholar Wang et al., 2019 Wang Q., Qi F., Sun M., Qu J.,
    Xue J. Identification of tomato disease types and detection of infected areas
    based on deep convolutional neural networks and object detection techniques Comput.
    Intell. Neurosci. (2019) Google Scholar WHO, 2022 WHO Q. Food safety (2022) https://www.who.int/news-room/fact-sheets/detail/food-safety,
    (Accessed on 10/18/2022) Google Scholar Xiao et al., 2022 Xiao D., Pan Y., Feng
    J., Yin J., Liu Y., He L. Remote sensing detection algorithm for apple fire blight
    based on UAV multispectral image Comput. Electron. Agric. (2022) Google Scholar
    Yao et al., 2022 Yao N., Ni F., Wu M., Wang H., Li G., Sung W.-K. Deep learning-based
    segmentation of peach diseases using convolutional neural network Front. Plant
    Sci. (2022) Google Scholar Yasmeen et al., 2021 Yasmeen U., Khan M.A., Tariq U.,
    Khan J.A., Yar M.A.E., Hanif C.A., Mey S., Nam Y. Citrus diseases recognition
    using deep improved genetic algorithm (2021) Google Scholar Yu et al., 2018 Yu
    D., Xu T., Song K. Nondestructive testing of external defects on nanguo pear Spectrosc.
    Lett. (2018) Google Scholar Zhang et al., 2018 Zhang B., Gu B., Tian G., Zhou
    J., Huang J., Xiong Y. Challenges and solutions of optical-based nondestructive
    quality inspection for robotic fruit and vegetable grading systems: A technical
    review Trends Food Sci. Technol. (2018) Google Scholar Zhang et al., 2021 Zhang
    T., Lei C., Zhang Z., Meng X.-B., Chen C.P. AS-NAS: Adaptive scalable neural architecture
    search with reinforced evolutionary algorithm for deep learning IEEE Trans. Evol.
    Comput. (2021) Google Scholar Zhang et al., 2022 Zhang W., Zhou G., Chen A., Hu
    Y. Deep multi-scale dual-channel convolutional neural network for internet of
    things apple disease detection Comput. Electron. Agric. (2022) Google Scholar
    Zhou et al., 2021 Zhou X., Lee W.S., Ampatzidis Y., Chen Y., Peres N., Fraisse
    C. Strawberry maturity classification from UAV and near-ground imaging using deep
    learning Smart Agric. Technol. (2021) Google Scholar Zhu, 2005 Zhu X.J. Semi-supervised
    learning literature survey (2005) Google Scholar Zhu et al., 2023 Zhu D., Xie
    L., Chen B., Tan J., Deng R., Zheng Y., Hu Q., Mustafa R., Chen W., Yi S., et
    al. Knowledge graph and deep learning based pest detection and identification
    system for fruit quality Internet Things (2023) Google Scholar Zhu et al., 2017
    Zhu Y., Xie C., Wang G.-J., Yan X.-G. Comparison of individual, ensemble and integrated
    ensemble machine learning methods to predict China’s SME credit risk in supply
    chain finance Neural Comput. Appl. (2017) Google Scholar Cited by (0) View Abstract
    © 2024 Elsevier Ltd. All rights reserved. Recommended articles Reply to Letter
    to the Editor by Priyadarsini A, et al Journal of Pediatric Surgery, Volume 57,
    Issue 11, 2022, p. 750 Maria E. Knaus, …, Peter C. Minneci View PDF Adaptive critic
    design with weight allocation for intelligent learning control of wastewater treatment
    plants Engineering Applications of Artificial Intelligence, Volume 133, Part C,
    2024, Article 108284 Ding Wang, …, Junfei Qiao View PDF Flexible margins and multiple
    samples learning to enhance lexical semantic similarity Engineering Applications
    of Artificial Intelligence, Volume 133, Part C, 2024, Article 108275 Jeng-Shyang
    Pan, …, Shu-Chuan Chu View PDF Show 3 more articles Article Metrics Captures Readers:
    5 View details About ScienceDirect Remote access Shopping cart Advertise Contact
    and support Terms and conditions Privacy policy Cookies are used by this site.
    Cookie settings | Your Privacy Choices All content on this site: Copyright © 2024
    Elsevier B.V., its licensors, and contributors. All rights are reserved, including
    those for text and data mining, AI training, and similar technologies. For all
    open access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Engineering Applications of Artificial Intelligence
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Fruit and vegetable disease detection and classification: Recent trends,
    challenges, and future opportunities'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Boudieb W.
  - Malki A.
  - Malki M.
  - Badawy A.
  - Barhamgi M.
  citation_count: '0'
  description: Fog-native computing is an emerging paradigm that makes it possible
    to build flexible and scalable Internet of Things (IoT) applications using microservice
    architecture at the network edge. With this paradigm, IoT applications are decomposed
    into multiple fine-grained microservices, strategically deployed on various fog
    nodes to support a wide range of IoT scenarios, such as smart cities and smart
    farming. Nonetheless, the performance of these IoT applications is affected by
    their limited effectiveness in processing offloaded IoT requests originating from
    multiple IoT devices. Specifically, the requested IoT services are composed of
    multiple dependent microservice instances collectively referred to as a service
    plan (SP). Each SP comprises a series of tasks designed to be executed in a predefined
    order, with the objective of meeting heterogeneous Quality of Service (QoS) requirements
    (e.g., low service delays). Different from the cloud, selecting the appropriate
    service plan for each IoT request can be a challenging task in dynamic fog environments
    due to the dependency and decentralization of microservice instances, along with
    the instability of network conditions and service requests (i.e., change quickly
    over time). To deal with this challenge, we study the microservice instances selection
    problem for IoT applications deployed on fog platforms and propose a learning-based
    approach that employs Deep Reinforcement Learning (DRL) to compute the optimal
    service plans. The latter optimizes the delay of application requests while effectively
    balancing the load among microservice instances. In our selection process, we
    carefully address the plan-dependency to efficiently select valid service plans
    for every request by introducing two distinct approaches; an action masking approach
    and an adaptive action mapping approach. Additionally, we propose an improved
    experience replay to address delayed action effects and enhance our model training
    efficiency. A series of experiments were conducted to assess the performance of
    our Microservice Instances Selection Policy (MISP) approach. The results demonstrate
    that our model reduces the average failure rate by up to 65% and improves load
    balance by up to 45% on average when compared to the baseline algorithms.
  doi: 10.1016/j.future.2024.03.010
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Related work 3. System
    model and problem formulation 4. DQL - Based online microservice selection algorithm
    5. DQL-empowered microservice-instance selection 6. Performance evaluation and
    analysis 7. Conclusion CRediT authorship contribution statement Declaration of
    competing interest Data availability References Vitae Show full outline Figures
    (13) Show 7 more figures Tables (3) Table 1 Table 2 Table 3 Future Generation
    Computer Systems Volume 156, July 2024, Pages 77-94 Microservice instances selection
    and load balancing in fog computing using deep reinforcement learning approach
    Author links open overlay panel Wassim Boudieb a, Abdelhamid Malki a, Mimoun Malki
    a, Ahmed Badawy b, Mahmoud Barhamgi b Show more Share Cite https://doi.org/10.1016/j.future.2024.03.010
    Get rights and content Highlights • This paper investigates the microservice instances
    selection problem in a dynamic fog computing platform. • The research jointly
    considers the dependencies among microservice instances, the completion delays
    constraints, and a load balancing strategy in a multi-user multi-instance IoT
    application. • Based on double DQN, two distinct approaches were proposed to solve
    the selection problem and address the dependency issue: an action masking approach
    and an adaptive action mapping approach. • The evaluation results demonstrate
    significant gains (45%–65%) achieved by our selection approach over the baseline
    in terms of average request failure rate, load balancing, and overall delay. Abstract
    Fog-native computing is an emerging paradigm that makes it possible to build flexible
    and scalable Internet of Things (IoT) applications using microservice architecture
    at the network edge. With this paradigm, IoT applications are decomposed into
    multiple fine-grained microservices, strategically deployed on various fog nodes
    to support a wide range of IoT scenarios, such as smart cities and smart farming.
    Nonetheless, the performance of these IoT applications is affected by their limited
    effectiveness in processing offloaded IoT requests originating from multiple IoT
    devices. Specifically, the requested IoT services are composed of multiple dependent
    microservice instances collectively referred to as a service plan (SP). Each SP
    comprises a series of tasks designed to be executed in a predefined order, with
    the objective of meeting heterogeneous Quality of Service (QoS) requirements (e.g.,
    low service delays). Different from the cloud, selecting the appropriate service
    plan for each IoT request can be a challenging task in dynamic fog environments
    due to the dependency and decentralization of microservice instances, along with
    the instability of network conditions and service requests (i.e., change quickly
    over time). To deal with this challenge, we study the microservice instances selection
    problem for IoT applications deployed on fog platforms and propose a learning-based
    approach that employs Deep Reinforcement Learning (DRL) to compute the optimal
    service plans. The latter optimizes the delay of application requests while effectively
    balancing the load among microservice instances. In our selection process, we
    carefully address the plan-dependency to efficiently select valid service plans
    for every request by introducing two distinct approaches; an action masking approach
    and an adaptive action mapping approach. Additionally, we propose an improved
    experience replay to address delayed action effects and enhance our model training
    efficiency. A series of experiments were conducted to assess the performance of
    our Microservice Instances Selection Policy (MISP) approach. The results demonstrate
    that our model reduces the average failure rate by up to 65% and improves load
    balance by up to 45% on average when compared to the baseline algorithms. Previous
    article in issue Next article in issue Keywords Internet of ThingsFog computingMicroservice
    selectionDeep reinforcement learningDeadline-awareLoad balancing 1. Introduction
    The Internet of Things (IoT) has now exciting applications that touch all aspects
    of people’s lives. Prominent examples include smart healthcare [1], smart policing
    [2], smart farming [3], and more generally smart cities [4]. Such IoT applications
    are typically characterized by their intensive processing requirements and sensitivity
    to response delays. On the other hand, IoT devices have often limited computational
    capabilities that cannot meet alone the computation requirements of IoT applications.
    One solution is to offload the computation from IoT devices to remote cloud servers
    to ensure the efficiency of the application. However, offloading a large number
    of computation requests to cloud servers introduces significant delays and incurs
    additional bandwidth costs. To this end, a new effective and flexible computing
    paradigm has been introduced for IoT applications called fog computing [5]. As
    an extension of cloud computing, fog computing enables IoT devices to benefit
    from a nearby distributed computing and storage infrastructure, where diversified
    delay-sensitive IoT applications can be deployed in proximity, resulting in reduced
    latency for accessing IoT services and faster processing of IoT requests. Microservice
    Architecture (MSA) is another important paradigm that is widely regarded as a
    solution to address the scalability, flexibility and reliability issues encountered
    in traditional monolithic application architectures [6]. Driven by software-oriented
    architecture [7], [8], [9], MSA decomposes the monolithic application into a set
    of small, modular units that individually process distinct business functionalities.
    The adoption of the microservice architectural paradigm introduces a notable level
    of adaptability and reusability, wherein distinct microservices operate independently
    and can be efficiently deployed, managed, and scaled in real-time [6], [10]. In
    microservice-oriented fog computing platforms, multiple fog nodes are provisioned
    to deploy diverse microservice-based applications. Technically, each microservice
    can have one or several instances deployed on multiple fog nodes [11], [12]. This
    deployment strategy is based on real-time workload conditions and the geographical
    distribution of IoT requests, ensuring efficient servicing of each request by
    a nearby instance. Nevertheless, due to the complexity of fog computing, where
    network conditions fluctuate over time and various heterogeneous IoT requests
    are offloaded from different sources, a significant challenge arises concerning
    the distribution of IoT requests to their corresponding IoT applications. This
    challenge involves identifying the appropriate microservice instances for each
    individual IoT request, while adhering to their individual quality of service
    (QoS) requirements such as considerations for delay-criticality and high bandwidth.
    From an application perspective, an IoT request is typically represented by a
    composition of one or more microservices with a data dependency referenced as
    a service plan (SP). Furthermore, each service plan may involve multiple distributed
    and competing microservice instances, which necessitate their optimal selection
    and subsequent invocation in a predefined order. On the other hand, considering
    the dynamics of the fog computing networks, the policy for instance selection
    should not rely solely on one QoS criterion, such as proximity (i.e., response
    delay), to determine the optimal selection. Rather, it should also consider ensuring
    a fair distribution of the load among microservice instances to proactively anticipate
    critical events, such as unpredictable bursting workload scenarios. Consequently,
    the criticality of determining the appropriate instances and selection policy
    when offloading a request cannot be overstated, as it directly impacts the life
    cycle of microservice applications. Note that, The issue of determining the optimal
    deployment for each microservice and how many instances are needed are beyond
    the scope of this work, and has been addressed by several works, such as [13],
    [14]. 1.1. Motivating example Let us consider a typical scenario, in which a smart
    city platform hosting multiple IoT applications has been deployed within a fog
    computing environment. In Fig. 1(a), the environment consists of fog servers interconnected
    with fog gateways (base stations) where users (IoT devices) can offload their
    computation workloads to microservices operating in the vicinity. In this context,
    Fig. 1(b) presents the Intelligent Alert System (IAS). The IAS is a microservice-based
    application that allows the government to manage critical crises (e.g., earthquakes),
    as well as illicit behaviors in urban areas such as assaults and car speeding.
    To achieve this goal, the IAS system exploits various IoT detection devices, such
    as motion sensors, smoke detectors, webcams and mobile devices that are strategically
    placed in the monitored urban area. For the sake of clarity, we will focus on
    two services of the IAS: the anomalous behavior detection service ( ) and the
    emergency alert processing service ( ). • Anomalous behavior detection service
    ( ): It consists of data event acquisition microservice that collects relevant
    data from various IoT sources, such as motion sensors, smoke detectors, and webcams.
    The collected data are parsed to extract relevant information, which are then
    forwarded to microservice for anomaly analysis using advanced machine learning
    algorithms. In the event of any deviations from the established norm, the anomalies
    are promptly flagged by invoking the event processing microservice . • Emergency
    alert processing service ( ): Users can report anomalous and suspicious events
    through a mobile application . Events are then analyzed by the microservice to
    identify unusual patterns of behavior. If any potential threat to public safety
    is detected, the event processing microservice is invoked to initiate appropriate
    actions, such as notifying emergency responders or alerting law enforcement agencies.
    In Fig. 1(c), the fog platform hosts the deployment of the anomalous behavior
    detection service AD = , with variable instances of each microservice strategically
    placed on some fog nodes. Given the scenario where an IoT device UD1 is located
    within the coverage area of fog node 1 (Fn1) and initiates a request for the service
    AD, UD1 possesses the flexibility to choose from a range of feasible execution
    plans in the fog platform. For instance, UD1 can select from plans such as , ,
    , and so on, where the notation denotes that microservice instance is deployed
    on fog node . The selection of at time slot would offer the optimal service delay
    ( ) for the request due to its minimal routing delay ( ) and the relatively low
    load of requested instances when considering the approximate waiting delay for
    each instance as shown in Fig. 1(c). Note the service delay is the summation of
    waiting and routing delays. Unfortunately, this particular plan may not necessarily
    be the most suitable choice under different scenarios. For example, in time slot
    , the service delay for is , whereas an alternative plan such as would offer a
    more favorable service delay of . The service delay in a fog computing platform
    is susceptible to various unstable factors, including fluctuating network conditions,
    a heterogeneous distribution of offloaded requests, and varying loads of microservice
    instances. Opting for the optimal long-term service plan requires an ultimate
    policy that learns from its environment. Download : Download high-res image (663KB)
    Download : Download full-size image Fig. 1. Illustration of microservice instances
    selection in fog computing. Moreover, a selection policy that exclusively prioritizes
    the optimization of application delays based on proximity may lead to significant
    load imbalances among microservice instances. This issue is further highlighted
    in Fig. 1(c), where we consider that the microservice instance deployed on the
    fog node is always selected based on its proximity. As a result, the requests
    processed from the coverage area of at time lead to an overload situation on at
    time , resulting in an additional processing delay for subsequent requests. Hence,
    the selection process must further balance the load between instances to extend
    the life of the microservices and distribute the requests fairly. Accordingly,
    it is essential to carefully consider an appropriate online trade-off between
    service delay and load balancing in order to achieve an optimal policy for selecting
    microservice instances. 1.2. Challenges and contribution Identifying the optimal
    policy for microservice selection in a time-varying environment is a complicated
    task. Recently, Reinforcement Learning (RL) has been introduced as a potential
    online solution for managing decision-making dynamic systems modeled by a Markov
    Decision Process [15]. MDP features an agent that can learn from previous actions
    and reach an optimal policy without relying on a mathematical model of the environment.
    However, there exist three significant challenges when implementing RL in the
    realm of fog computing: • IoT service requests arrive in an arbitrary order and
    at random times. Moreover, the network conditions are not stable over time (e.g.,
    fluctuations in the channel conditions). This dynamism introduces complexity into
    the learning process, which may not guarantee the Markov property. Consequently,
    it is crucial to carefully define the model representation to enable optimal learning
    in the fog network. • The presence of inter-service dependencies between microservices
    in an IoT application and the necessity to meet QoS requirements for each service
    plan within a dynamic environment presents a significant challenge for RL to learn
    effectively. This is mainly due to the delayed action effect and the variability
    of the action set, as not all requests can select the same service plan, and the
    learning model may not receive the reward immediately. Therefore, an optimal state–action–reward
    representation must be employed. • The need to consider competing requirements
    and performance trade-offs, such as the application-level QoS (e.g., load-balancing)
    and the user-level Quality of Experience (QoE) (e.g., service delay), is crucial
    prior to implementing any expensive scaling methodologies to manage heavy workloads.
    In this paper, we propose an adaptive microservice instances selection policy
    for service plan requests under a stochastic fog environment. The targeted policy
    is based on deep reinforcement learning that ensures a trade-off between service
    delay and load balancing. We summarized our main contributions as follows: • We
    investigate the problem of selecting the optimal service plan for an IoT microservice-based
    application in a dynamic and heterogeneous fog platform. Then, we formulate the
    non-convex Microservice Instances Selection Policy (MISP) problem, with the goal
    of minimizing the potential occurrence of deadline violations and the application
    load imbalance. • To achieve the optimal selection policy, we propose a model-free
    Double Deep Q-Learning (DDQL) model for microservice instances selection. Our
    learning solution handles the variable action space, the time-varying channel
    state, the heterogeneous offloading pattern, and the delayed effect of action
    due to the tardiness in completing the service plan. • We conduct an exhaustive
    simulation to evaluate the effectiveness of the proposed MISP, where an online
    training is executed on microservice-based applications, followed by a comprehensive
    assessment of the proposed MISP. The performance results demonstrate the superior
    performance of our approach over the compared baselines. The subsequent sections
    of this paper are organized as follows. Section 2 presents a review of the related
    works. Section 3 outlines the system model and the problem formulation. In Section
    4, the learning formulation and solution are presented, followed by the presentation
    of the DDQL model and training procedures in Section 5. The performance evaluation
    and results are discussed in Section 6, and ultimately in Section 7 we conclude
    our work. 2. Related work The advent of fog computing has aroused interest within
    the research community on different axes. Over the past few years, the most responsive
    direction has been around the management of resources at the edge, (e.g., resource
    allocation, service provisioning, etc.), where many efforts have been made to
    efficiently orchestrate computation tasks generated on the edge network. Primarily,
    we can distinguish two categories in the task orchestration problem, namely resource-oriented
    task orchestration and service-oriented task orchestration. The resource-oriented
    task orchestration problem attempts to allocate tasks to the appropriate resources,
    such as CPU and memory, which need to be first provisioned and then executed to
    achieve the highest possible level of performance after being freed up for other
    tasks. On the other hand, a service-oriented task orchestration problem involves
    the delegation of user tasks that rely on a pre-deployed application comprising
    a set of service instances distributed across multiple nodes, where each service
    is responsible for processing the associated task. Throughout this section, we
    summarize existing work in both directions. 2.1. Resource-oriented task orchestration
    Recently, the integration of Mobile Edge Computing (MEC) with Flying Unmanned
    Aerial Vehicles (UAVs) has emerged as a potential solution to enhance the spatial
    coverage and flexibility of MEC [16]. Through this integration, Zhang et al. [17]
    proposed an end-to-end DRL model that can simultaneously optimize the trajectory
    of the UAV and the partial offloading task, with the aim of minimizing overall
    task delay and energy consumption. Similarly, Xu et al. [18] investigated whether
    the task generated by IoT devices should be processed locally or offloaded to
    UAV. They employed the proximal policy optimization (PPO) algorithm to optimize
    the binary offloading policy, which involves determining whether to place IoT
    tasks in the local computing queue or the local offloading queue and allocate
    the corresponding bandwidth resource. The primary objective of this study is to
    balance the competing goals of energy consumption and queue length. In order to
    maximize the completion of tasks prior to their corresponding deadlines, Azizi
    et al. [19] studied the scheduling policy of IoT tasks in heterogeneous fog networks,
    and proposed two priority-aware semi-greedy algorithms, PSG and PSG-M, designed
    to efficiently map IoT tasks to available fog nodes while ensuring superior quality
    of service (QoS) for IoT users in terms of response time and minimizing the energy
    consumption of fog nodes. Considering the resource allocation problem, Karimi
    et al. [20] proposed a task offloading strategy for the purpose of guaranteeing
    the requisite response time within a highly dynamic vehicular edge computing environment.
    Their approach involves leveraging DRL to facilitate the migration of tasks between
    the limited resources of MEC and central cloud servers. Another work by Li et
    al. [21] addressed the deadline constraint in a multi-eNB MEC environment by employing
    an actor–critic framework to facilitate the learning process, while utilizing
    a k-nearest neighbor (K-NN)-based action representation approach to address the
    scalability challenges associated with the explosion of action space in deep Q-networks.
    In the multi-user multi-server MEC environment, Yu et al. [22] jointly studied
    the task offloading and resource allocation strategy using a partially improved
    Dueling-DQN model to achieve the dual objectives of decreasing the completion
    delay of offloaded tasks and minimizing energy consumption across all terminal
    devices. Several noteworthy contributions have investigated the task orchestration
    aspect in fog computing [23], [24], encompassing both online and offline methodologies
    and seeking to optimize different QoS metrics such as energy consumption, response
    delay, and system performance. However, the aforementioned research works made
    the assumption that every fog node is equipped with the necessary installed environments
    to perform any computational task. This may not always be the case, as user-generated
    tasks may belong to distinct service categories that necessitate diverse databases/libraries
    and computing resources, which may exceed the storage resource constraints of
    the fog nodes. Therefore, it is necessary to consider the scenario of the task
    offloading strategy limited to the deployed service instances in particular edge
    locations. 2.2. Service-oriented task orchestration The orchestration of service-oriented
    tasks can present significant challenges in fog platforms, wherein the pertinent
    services are required to be downloaded from the remote cloud to the fog nodes
    upon the arrival of user tasks. Alternatively, frequently accessed services can
    be pre-cached within the fog node. For example, Gao et al. [25] aimed to optimize
    user satisfaction, determined by the fulfillment of task requirements, and resource
    efficiency through a study of the joint utilization of service placement and task
    offloading in edge–cloud computing. To address this problem, the authors proposed
    a hybrid algorithm that incorporates particle swarm optimization (PSO) and Lévy
    flight movement, in conjunction with a three-stage offloading heuristic method.
    Similarly, Xiang Liu et al. [26] conducted a collaborative investigation into
    service placement and task offloading to effectively reduce the maximum delay
    experienced by all users. Given the storage and computational limitations of MEC
    servers, Li et al. [27] leveraged an online joint optimization framework that
    integrates Lyapunov optimization and Gibbs sampling techniques. Their primary
    objective was to minimize system delay while ensuring energy efficiency through
    the optimization of service caching and task offloading. In the presence of stochastic
    task arrivals and dynamic network connections, Liu et al. [28] proposed a joint
    service deployment and computing resources allocation approach using a parameterized
    deep Q-networks in order to minimize the overall task delay. Nevertheless, a considerable
    portion of research work neglects the granularity aspect of applications and have
    regarded the deployed services as independent entities of one another. Although
    certain studies have accounted for service dependency [29], they typically optimize
    a singular sequential service plan while ignoring the sharing and competition
    of instances in a more complex workflow. The issues of granularity and service
    composition constitute crucial aspects of microservice architecture. The fine-grained
    characteristics of microservice enable the representation of an application as
    a collection of composite services, in which multiple small self-governing components
    interact with each other to fulfill a particular service plan requested by the
    user. In addition, multiple instances of each microservice are deployed in order
    to mitigate the possibility of overload scenarios. Because of the intricate nature
    of microservice architecture, limited attention has been devoted to the process
    of selecting appropriate instances for microservice applications in fog computing.
    Liang et al. [30], designed a task-chain load balancing algorithm for microservices
    application, which involves selecting the target service instances upon the reception
    of an API request to achieve load balance by considering system resource usage,
    and the number of data transmissions between physical machines as a parameter
    to reduce the response time. Three suboptimal solutions were evaluated, namely
    PSO, simulated annealing (SA), and genetic algorithm (GA), with the genetic algorithm
    ultimately being selected as the optimal solution. For the load balancing problem
    scenario, Niu et al. [31] proposed a load balancing approach that is oriented
    towards microservice instances chain selection. The authors modeled their approach
    as a non-cooperative game and employed a Nash bargaining solution to effectively
    balance the workload and allocate microservice instances among competing request
    chains. Similarly, Yuand et al. [32] proposed a linear program formulation for
    the basic load balancing problem, by taking the microservice interdependencies
    as a directed acyclic graph (DAG) into account. A fully polynomial-time approximation
    scheme was developed to achieve load balancing for the QoS-aware problem in microservice
    application deployment. On the other hand, Yu and al [33] investigated the problem
    of allocating resources for service requests and placing microservices instances,
    in order to jointly reduce resource usage and end-to-end response time of request
    chains in a joint effort to save costs, conserve energy, and guarantee QoS. They
    proposed a three-step approach, named LEGO, to solve this problem. In particular,
    the approach first identifies and optimizes resource allocation decisions to serve
    incoming requests at the CPU cycle level in each microservice instance. Then,
    a set of microservice instances is configured to route IoT requests to those instances
    in a balanced way. Finally, the approach enables the deployment of these instances
    on a minimum number of servers. In the cloud environment, Ding et al. [34] studied
    the microservice service selection problem under the competition of multiple composite
    services, in which two service selection strategies were proposed to analyze the
    scheduling urgency and execution order of each task. Subsequently, the microservice
    instance selection strategy constructs an optimal service path based on the sub-deadline
    and urgency of tasks. Inspired by the Generalized Processor Sharing (GPS) approach,
    Selvakumar et al. [35] proposed an enhanced Weighted Fair Queuing approach designed
    to manage complex chains of microservices and reduce user request delay. Their
    approach takes into account load balancing and inter-service affinity while scheduling
    requests to their appropriate service instances in a cloud-native environment.
    The works cited above have been designed within the context of cloud computing,
    without considering the critical aspect of delays in IoT applications during the
    selection process, which is influenced by the edge network. Moreover, most existing
    studies on microservice selection have proposed heuristic methods [33], [34],
    [35], convex optimization [31], and meta-heuristic approaches [25], [30] to address
    the selection problem. However, due to their time-consuming and complex nature,
    these methods are generally not suitable in dynamic fog computing as they often
    result in falling into local optima solutions, rather than being optimized for
    long-term performance. In contrast, some works [14] address the issue of microservice
    selection as a scheduling concern, where they aim to find the optimal placement
    of microservices in fog computing rather than managing user requests for deployed
    microservice instances in the long term. Different from the aforementioned works,
    the present work jointly considers the dependencies among microservice instances,
    the completion delays constraints of each service plan, the offloading strategy
    in a multi-user multi-instance dynamic fog network, and a load balancing strategy.
    Furthermore, we propose an online selection policy with a dual-action representation
    to tackle the challenge of plan-dependency. We also address the often-neglected
    issue of delayed rewards, which need to be updated until the completion of the
    IoT request. This aspect is not commonly considered by traditional DRL-based methods.
    3. System model and problem formulation In this section, we provide a preliminary
    definition of the fog platform and the microservice-based application. Then we
    formulate the Microservice Instances Selection Policy (MISP) problem using the
    deadline violation and load balance degree as the optimization goal. A microservice-based
    system is composed of a set of logical service plans, wherein each plan comprises
    one or multiple physical instances that are deployed on distinct fog nodes. Each
    microservice manifests a multitude of tasks, and dependencies emerge due to a
    series of task calls for a particular service plan. 3.1. A preliminary definition
    The present subsection details the definition of the fog computing platform and
    the microservice-based application, along with an examination of the user IoT
    request and the selection criteria for the physical service plan. Definition 1
    Fog Platform Let be a fog computing platform represented by an undirected graph,
    where represents a finite set of fog nodes, and is a finite set of edges defined
    by pairs of distinct fog gateways. The network interconnection among fog gateways
    occurs via a wired link, which is characterized by a transmission bandwidth denoted
    as (Bps). Conversely, the interaction between IoT user devices and fog gateways
    takes place through a channel bandwidth denoted as (Hz). Each is co-hosted with
    a fog gateway , e.g., the base station in the local area network (LAN) or the
    metropolitan area network (MAN). Definition 2 Fog Node Let define a fog node,
    which can either be a single fog server or a cluster of multiple fog servers.
    Here, denotes the total computing resources that can provision for microservice
    instances, and represents the fog gateway that is co-located with the corresponding
    fog node . Each has the capability to establish communication with other nodes
    using fog gateway links in order to collectively handle IoT requests. The total
    routing delay of an IoT request is determined according to the shortest routing
    path by the routing protocols. Definition 3 Microservice Let be an IoT application
    composed of several microservices. Each microservice is characterized as a tuple
    , , where: • denotes the set of tasks exposed by , and each task is described
    by , where is the computing resource (measured in CPU cycles per second) required
    to execute task and represents the selectivity of the output data size based on
    the input data of the request . • represents the maximum allocated processing
    capacity (CPU frequency) required by . • designates the set of instances of and
    their relative placement in the fog platform, where indicates that instance of
    the microservice is placed in the fog node . Definition 4 IoT User Device Let
    define an IoT user device distributed over the fog platform, where designates
    the IoT device location from which an IoT request is offloaded, is time slot during
    which offloads a request , and indicates that the IoT device initiates a request
    for the execution of task exposed by the microservice , with as the input data
    size of the request and as the maximum tolerable delay of the request . Definition
    5 Logical Service Plan Let be the requested logical service plan, which is represented
    by a Directed Acyclic Graph (DAG), where defines a set of invocation microservice
    tasks, and represents the instances dependency through a set of dependency pairs
    between the invoked microservice tasks. For example, the deployment of Traffic
    Sensors in a city can improve the traffic conditions for users. To achieve this
    goal, a sequence of interdependent microservice tasks is involved in traffic management
    applications. Firstly, the Traffic Sensors microservice task gathers real-time
    data on traffic patterns. Subsequently, the Analytic microservice task processes
    this data to identify areas of high congestion and slow-moving traffic. In turn,
    the Traffic Control microservice task receives recommendations from the Analytic
    microservice to adjust traffic signals in the identified area. In parallel, the
    Emergency Responsive microservice task monitors the area for any accidents and
    alerts the Analytical service to adjust traffic signals to reroute traffic around
    the accident scene. Definition 6 Physical Service Plan Let be the definition of
    the physical service plan state for the IoT request . The physical plan state
    involves selecting the optimal deployed microservice instances for individual
    IoT requests, which is represented by a matrix of binary decision variables denoted
    as , where corresponds to the total number of microservices for the IoT application,
    and represents the maximum number of available instances among microservices.
    To ensure that no more than one instance is selected for each microservice in
    , we can add the following constraint to the formulation: (1) (2) where indicates
    whether the instance of microservice is selected, independently of the fog platform.
    As an illustrative example, let us consider a scenario in which an IoT request
    invokes the anomaly behavior detection service, represented as (refer to Fig.
    1(b)). In Fig. 1(c), it can be observed that is implemented with three microservices
    . Among these microservices, has three available instances, which represents the
    maximum number of instances for the IAS application, while microservices and each
    have two available instances. Consequently, the matrix representation can be derived
    as follows: Table 1 provides an overview of all symbols and notations used in
    this paper. Table 1. Summary of notations used in the formulation. Fog platform
    The set of fog nodes The set of network edges A fog node A fog gateway A network
    edge The co-located fog gateway with the corresponding fog node The total upload
    channel bandwidth provision by The transmission bandwidth between and The total
    computing resources of that can be provisioned for microservice instances Microservice
    The set of microservices A microservice type The computing capability of The set
    of instances of and their relative placement in the fog nodes The set of tasks
    exposed by Number of CPU cycles required for processing task of The selectivity
    of the output data size based on the input data IoT device An IoT user device
    The IoT device location from which an IoT request is offloaded The transmit power
    of the in the upload link The time varying channel gain between the and its nearby
    The receiver noise power Uplink transmission rate between offloaded request by
    and IoT request The offloaded IoT request by The requested task exposed by the
    microservice The input data size of request in time slot The deadline of request
    Decision variables Weight parameter between deadline violation and load balancing
    The physical service plan state and selection decision variable where equal to
    1 if instance of microservice is selected, otherwise 0 3.2. Microservice instances
    selection problem formulation In this subsection, we formulate the Microservice
    Instances Selection Policy (MIPS) problem within the fog computing platform. The
    optimization objective in our study is based on two key factors, namely the deadline
    violation and the load balancing degree. 3.2.1. Deadline violation When an IoT
    user device requests a logical service plan , the first microservice invoked is
    determined on the basis of the request profile . Specifically, an IoT request
    is characterized as the invocation of a specific task provided by the entry microservice.
    This request follows a routing process where it is initially directed towards
    the corresponding microservice responsible for the first requested task. Subsequently,
    a sequence of aggregated microservices is invoked, forming a composition plan
    of interconnected microservices tasks to successfully fulfill the entirety of
    the request. According to the system model, the end-to-end delay of request is
    affected by three delays routes, including (i) the access delay from the IoT user
    devices to their nearby fog gateway , (ii) the aggregated communication delay
    on the fog platform, and (iii) the processing delay for each microservice instance
    in . Thus, we can define a binary variable to represent the deadline violation
    and determine whether the request delay has not been exceeded. (3) (1) The access
    delay: Given the current IoT device placement , the access delay is calculated
    using the uplink offloading delay over the wireless channel to the nearby serving
    . Initially, establishes communication with the closest , which subsequently forwards
    the request to the corresponding microservice. The transmission rate between and
    is calculated using Shannon’s capacity formula1 as follows: (4) where is the total
    upload bandwidth allocated by the fog gateway to the IoT devices, which is evenly
    distributed among the served devices. is the time varying channel gain between
    the and it is nearby , denotes the transmit power of the in the upload link and
    denotes the receiver noise power. Consequently, the access delay for a given request
    is: (5) (2) The network delay: The network delay is constrained by the interdependency
    among microservice instances in the service plan and their geographical placement
    in fog nodes. If the selected instances are not deployed in the vicinity of the
    IoT device, the request will be routed to the corresponding instance via WAN network
    otherwise, it is negligible, i.e. equal to 0. (6) (7) (8) Eq. (6) refers to the
    first part of the offload process, in case the requested task exposed by the first
    selected instance of microservice is not in the vicinity of the generated request
    . On the other hand, Eq. (7) corresponds to the network delay between each pair
    of microservice instances affected by the returned output data size from the data
    selectivity function , where defines the fog node on which the instance of microservice
    is deployed. (3) The processing delay: Upon reaching the selected instance, the
    request is first processed in a queue that adheres to the First-In-First-Out (FIFO)
    model. We assume that each instance maintains an input queue and processes requests
    in the order of their arrival. Thus, the processing delay comprises both the execution
    delay and the queueing delay. Specifically, considering the processing capacity
    of the instance , the execution delay and the queueing delay can be expressed
    as follows: (9) The processing delay mainly depends on the computing capacity
    of each microservice. In this case, the queuing delay is calculated by the sum
    of the execution times for all requests before the current request in the queue.
    3.2.2. Load balancing A Microservice instance selection approach that consistently
    emphasizes the selection of each request at the ideal physical plan in terms of
    service delay, may face severe load imbalance between instances if some regions
    generate more load than others. To guarantee the stability of applications and
    the reliability of instance selection in the long term, an Imbalance load metric
    is employed between instances of microservices. Lower imbalance values depict
    a better load distribution between instances of each microservice. We define the
    imbalance degree as the summation of the standard deviation of computation workloads
    across individual instances pertaining to a given application by: (10) where denotes
    the computing utilization resource on instance of microservice , and represents
    the mean value of computation utilization across all instances within microservice
    . 3.2.3. Optimization problem definition Given a fog computing platform , a deployed
    microservice application and a set of IoT user devices. For each IoT request ,
    the Microservice Instance Selection Policy problem consists of selecting the physical
    service plan that determines the optimal routes between each pair of adjacent
    instances deployed in the fog platform such that the load balance degree is minimized
    and the request delay is no greater than its deadline. By combining Eqs. (3) to
    (10), the optimization problem is defined as follows: (11) Subject to the constraints:
    where is the importance weight of deadline violation and load balancing degree.
    Constraint C1 guarantees that, for each microservice, only one instance deployed
    in a fog node is selected. Problem (11) is a non-convex mixed-integer linear programming
    problem, which involves binary decision variables (i.e., physical service plan
    selection) under a non-convex constraint attributed to C1, the feasible set and
    objective function of the optimization problem. Such problems are typically known
    to be NP-hard [20], highlighting their nontrivial nature of finding optimal solutions,
    particularly when operating in a large-scale dynamic environment. To address this
    challenge, we utilize a deep reinforcement learning approach to effectively solve
    the formulated optimization problem. 4. DQL - Based online microservice selection
    algorithm In our study, we adopt a time-slotted model where a collection of time
    slots is denoted as . Within each time slot , multiple IoT user devices can submit
    requests for a logical service plan. We assume the offloaded requests follow a
    Poisson distribution with an arrival rate and the system can process requests
    } within a given time slot . Considering the potential variability of IoT requests
    that may induce the system to enter different states, the microservice selection
    process can be effectively modeled by employing the formal framework Markov Decision
    Process (MDP) to determine the optimal selection policy. MDP captures the stochastic
    variability of the environment and acts as a model for decision making by allowing
    the decision-maker (i.e., agent) to interface with our fog environment platform
    based on the provided observations. The environment in which the microservice-based
    application is deployed on the fog platform is represented as MDP defined by a
    tuple consisting of four essential components, i.e., , where stands for the state
    representation at a given time slot , the action taken, is the reward obtained
    after action is performed and demonstrates the transition probability from state
    to when executed action given by: (12) To find the optimal physical service plan
    selection policy and solve the optimization problems of MDP, we propose an online
    approach based on reinforcement learning. Specifically, using the model-free Q-learning
    algorithm. Since the fog computing platform is dynamic, the model-free suppresses
    the need for a transition probability when exploring the environment. As such
    the new component design for Q-learning in the fog platform scenario is described
    below. 4.1. State representation The appropriate representation of the system
    state is a critical factor in determining the optimal selection policy. Considering
    our system model, the Q-learning agent observes the fog platform environment and
    takes an action choosing the optimal physical plan when a request is offloaded
    to the corresponding logical plan. Since the offloaded requests follow a Poisson
    distribution at a given time slot , processing the incoming IoT requests } in
    parallel and distributing them with a single action can lead to the divergence
    of the Q-learning model. This divergence is primarily due to an explosion in the
    action space (i.e., all possible physical plans), which is influenced by the distribution
    of multiple requests from multiple IoT devices across the system. To address this
    challenge, the agent processes the incoming requests sequentially in a mini-batch
    manner within a time slot . Specifically, we assume that certain state attributes
    remain invariant during a given time slot , such as the channel state of each
    fog gateway, while the remaining attributes (e.g., the processing request) vary
    across each time step with being significantly smaller than , such that . The
    state can be formulated based on time step as a composite of four essential components,
    including the load of microservice instances, the offloaded IoT request, the fog
    platform state and the arrival rate in a given time slot (13) where is the request
    profile processed during the time step , reflects the previous load status of
    microservice instances, with denoting the computing utilization resource on instance
    of the microservice , is the transmission rate, which is affected by the bandwidth
    and the variation of channel gain at each time slot and denotes the total number
    of offloaded requests during the time slot . 4.2. Action space and variable action
    set The agent’s actions constitute the focal point of our study, which aims to
    identify the most suitable physical service plan for each IoT request within a
    fog platform. At first sight, the action space is where action , can be defined
    as below: (14) where the physical service plan described in Definition 6 incorporates
    a binary variable to denote the selection status of instance of the microservice
    . Therefore, the action space comprises possible actions computed based on the
    microservice-based application definition: (15) In which encompasses all conceivable
    combinations of physical plans for the given request . However, due to the plan-dependent
    request problem, the feasibility of certain actions is restricted for specific
    logical plans which imposes additional challenges for designing the learning algorithm.
    For instance, in the context of the IAS application depicted in Fig. 1(b), a request
    that requires can only be offloaded to instances of , , and , respectively, while
    ensuring that is excluded from the selection options. Therefore, we propose two
    distinct methods of action representation: • Action masking representation: Given
    that the feasible set of actions changes constantly with variations in the state,
    the learning process is dependent on conditions that require the selection of
    an action from the set of feasible actions based on the request profile . The
    updated action definition is presented below: (16) where represents a binary mask
    vector of size , where a value of 0 in the th position of indicates that the th
    row of should be masked. An illustration of this process can be observed by employing
    the logical plan presented in Fig. 2. In this case, the mask vector is configured
    as , which results in the third row corresponding to being visually marked in
    red, indicating its exclusion from the selection process, as illustrated by the
    potential physical plans such as or in Fig. 2. • Action mapping representation:
    When dealing with large-scale applications, the generation of all conceivable
    combinations for a physical service plan containing numerous microservice instances
    can result in an exponential increase in the action space. This can pose a considerable
    challenge for the learning agent tasked with identifying an optimal solution.
    Consequently, we introduce an action mapping approach that aims to identify the
    most suitable selection algorithm, using three straightforward heuristic selection
    mapping algorithms. The definition of action mapping is straightforward with ,
    where each action corresponds to a distinct algorithmic selection, specifically
    the Load-Aware, the Proximity-Aware, and the Hybrid-Aware algorithm. Further details
    of these algorithms are provided in Section 5.1.1. Download : Download high-res
    image (280KB) Download : Download full-size image Fig. 2. Microservice instances
    selection action example. 4.3. Reward function In our study, it is necessary to
    consider an optimal trade-off between the deadline violation and the system load
    balancing. In other words, after a selection action is performed by the agent
    at state , an immediate reward is acquired according to the objective model, where
    is the reward at time step . We define the immediate reward function as the negative
    of the request deadline violation and the load imbalance degree incurred in a
    time step . (17) The parameter represents the importance weight, which can be
    adjusted to accommodate diverse preferences for different IoT applications. It
    is important to note that the goal of Q-learning is to maximize the expected long-term
    reward. To this end, a discount factor is introduced to control how an agent considers
    future rewards: (18) Download : Download high-res image (582KB) Download : Download
    full-size image Fig. 3. The DDQL model structure. 4.4. Q-value The Q-value (a.k.a
    the action-state function) refers to the expected computed reward for performing
    an action at a given state in accordance with a policy. The learning model utilizes
    the Q-value to achieve an optimal policy that yields the highest expected reward
    over the long term. Therefore, under a policy the Q-value is written as: (19)
    (20) The core of the Q-learning algorithm relies on the use of the recursive nature
    of Bellman equation to estimate the Q-Value stored in Q-table. As a simple Q-value
    iteration update the learning process is written as: (21) where is an action-state-function
    multiplied by the discount factor at time step . However, using Q-learning to
    find the optimal selection policy in a fog platform poses two challenges. Firstly,
    the learning algorithm relies on the use of a Q-table to store Q-values, which
    can result in a computationally expensive and time-consuming learning process,
    as the agent needs to update Q-values for every possible state–action pair. Secondly,
    the agent is faced with a large, non-stationary search space, which can lead to
    model divergence and hinder the identification of the optimal selection policy.
    To overcome these challenges, deep neural networks (DNNs) are used to approximate
    the Q-value, thereby reducing the search space and improving the accuracy of the
    selection. Further details are discussed in the following Section. 5. DQL-empowered
    microservice-instance selection Deep Reinforcement Learning (DRL) stands at the
    intersection between the field of dynamic programming (reinforcement learning)
    and deep learning (neural network) [24]. DRL combines the strengths of both fields
    by utilizing a neural network as a function approximator, resulting in an innovative
    approach that addresses complex and large-scale dynamic problems. 5.1. DRL framework
    To bypass the look-up table during the learning process and effectively dealing
    with the large number of states, we adapt the approximation approach by employing
    deep Q-learning (DQL) as a combination between deep neural networks (DNNs) and
    Q-learning. DQL considers the complex nature of the system states, where the new
    Q-value definition is updated by learning the parameters of the DNN instead of
    utilizing a traditional Q-table. Specifically, the process of updating the policy
    in DQL involves calculating the output of the online network, also known as the
    Q-Network, by feeding in the state as input and obtaining the maximum Q-value
    as output. DQL incorporates two progressive features to stabilize the learning
    process and prevent divergence during the learning, namely the experience buffer
    and the fixed Q-target method. Initially, we apply an experience buffer (a.k.a
    replay memory) that stores the observed experience interactions and samples them
    uniformly as a mini-batch of experience tuples during the run-time of the application
    for policy updates. Inspired by supervised learning, experience buffers prevent
    the temporal correlations during the training process. Concretely, at each time
    step , the state transition, the corresponding selection action, and the resulting
    reward are stored in the buffer. Once sufficient training data is collected, the
    model accurately adjusts the Q-value for different state–action pairs. However,
    in our study, the agent is unable to get an immediate reward upon performing a
    selection action due to the possibility of delays in the IoT request frame, which
    may exceed the duration of a time step . To provide an illustration, consider
    a scenario in which an IoT device requests the logical plan depicted in Fig. 2.
    The completion delay for the plan is approximately 0.1 s, while the time step
    is set to 10 ms. In this situation, the experience record that represents this
    request is stored in the buffer with an empty reward value, making it unsuitable
    for feeding into DQL until the request is completely fulfilled. This issue holds
    significant importance because the agent is unable to access immediate reward
    information, which prevents its ability to effectively learn the selection policy.
    In order to tackle this issue, we suggest enhancing the replay mechanism with
    a Boolean value named to the experience records, denoted as . When the agent performs
    an action in state , the experience elements are stored in the buffer. If the
    reward can be immediately obtained, then is set to ; otherwise, it is set to .
    Once the required sample batch is reached, the agent is exclusively supplied with
    the selected experience pool, whose element is designated as . By adopting this
    approach, the agent is able to undertake online training by overcoming the detrimental
    effects of delayed rewards. Further details regarding our proposed methodology
    can be found in Fig. 3 and Algorithm 2. On the other hand, DQL incorporates a
    separate network known as the target network (also referred to as target Q-Network)
    from the primary approximated Q-network. The target network has fixed parameters
    that are copied from the Q-Network after a specified number of iterations. By
    adopting this strategy, DQL can mitigate the problem of the Q-values fluctuating
    continuously, thereby enhancing the stability of the training process. Nevertheless,
    the use of the target Q-Network for both action selection and evaluation in DQL
    may result in overestimation and instability during the learning phase. This issue
    is particularly significant when dealing with noisy or high-dimensional state
    spaces, as it can lead to suboptimal policies and reduced efficiency of the learning
    procedure. To mitigate the overestimation problem, we propose the adoption of
    the Double Deep Q-Network (DDQN) algorithm. This involves defining the target
    network according to Eq. (22), with the Q-network being utilized for action selection,
    and the target Q-network serving to evaluate actions. (22) With the combination
    of target Q-Network and delayed experience buffer, the TD error (aka the loss
    function) can be expressed as the disparity between the target value, and the
    present estimation of Q-value by the formulation below: (23) The presentation
    of the selection process for microservice instances using the developed DDQL model
    is illustrated in Fig. 3. The proposed framework consists of three components:
    the fog platform, the microservice application, and the DRL agent. An DRL agent
    is primarily associated with each application and functions as a request orchestrator
    to synchronize and determine the suitable physical service plans for each IoT
    request. The placement of the orchestrator is not a subject of concern in our
    research as we assume that the DRL agent has a comprehensive view of the environment
    in which it can interact and learn from the experience of the trials. In a real-world
    scenario, the agent can either be integrated into an orchestrator (e.g., Kubernetes)
    or operate as a gateway in a multi-fog cluster. During each iteration, the DRL
    agent selects an action based on the observation obtained from the environment.
    Subsequently, the offloaded IoT request is routed according to the corresponding
    physical plan. The role of the environment is to provide feedback records to the
    DRL agent, such as the next state and reward value, which are stored in the experience
    replay buffer to train our DDQL model. Given that our approach deals with delayed
    rewards, the model stores each record with an appropriate value, which can be
    updated upon request completion. This process continues until the training dataset
    is generated. The agent then draws training data from the experience buffer with
    value equal to towards the target value by minimizing the loss function and training
    the Q-network within the DDQL model. 5.1.1. Q-masking and Q-mapping algorithms
    The agent has to learn the appropriate physical plan for every IoT request. However,
    the standard extraction of the best action value by applying a max (or softmax)
    operator on the output layer through deep Q-learning becomes more complicated
    due to the plan-dependent problem, as described in Section 4.2. Given that not
    all actions may be feasible for every request, a straightforward approach to surmount
    the problem is allowing the agent to select an invalid action, i.e., a microservice
    instances in which the request cannot be routed according to its logical service
    plan definition, and associate a penalty reward for each invalid action. By doing
    so, the agent will eventually learn to avoid invalid actions. Nevertheless, the
    agent may expend considerable time and resources in exploring irrelevant actions,
    leading to slower learning and suboptimal policies. Moreover, the inclusion of
    invalid actions effectively increases the size of the action space, thereby posing
    challenges for the agent to learn efficiently, especially when only a small subset
    of actions remains valid. For instance, if more than 50 logical service plans
    exist within the IoT application, wherein each plan requires a minimum of 3 microservices,
    and only two instances of each microservice are deployed, this would result in
    the existence of more than 300＋ invalid actions. Accordingly, we proposed two
    separate approaches for designing the action selection process • Q-masking: The
    DRL agent is trained with a Q-masking layer that is imposed on the output Q-values
    before applying the softmax operation, as shown in Fig. 3. Specifically, we consider
    that each subset of Q-values is associated with a dedicated subset of actions
    through a complementary plugin that relies on a request profile . Considering
    a particular state , the output Q-values are transformed using the masked plugin
    which restricts a set of invalid actions so that the agent does not spend more
    time from expending excessive resources on exploring or learning unnecessary instance
    selection information. • Q-mapping: The DRL agent is trained to choose the optimal
    selection algorithm among the three Best-fit algorithms. Algorithm 1 details the
    current mapping strategy, which involves presenting three greedy-based mapping
    algorithms. The selection algorithm is being mapped using the action index (line
    1–10) returned by the DRL agent. The Load-Aware algorithm ( ) selects instances
    for each microservice with the least CPU load (line 4). On the other hand, the
    Proximity-Aware algorithm ( ) selects the closest instances based on network latency
    (line 6). In the case of the Hybrid-Aware algorithm ( ), it integrates both load
    and proximity selection strategies. Initially, two candidate instances are chosen
    based on their network latency. Then, the algorithm evaluates the current load
    of these instances and selects the one with lower CPU load (line 8–9). The procedure
    is repeated iteratively based on the mapping action for each microservice until
    the physical plan matrix is completely updated. Download : Download high-res image
    (414KB) Download : Download full-size image 5.1.2. Policy update and neural training
    The pseudocode of the DDQL MIPS algorithm is presented in Algorithm 2. Initially,
    an initialization is performed on the experiment replay buffer, and the two neural
    Q-networks are set with the same weights . Additionally, all relevant hyperparameters
    to the model, including the learning rate, exploration rate, update frequency,
    and epsilon-greedy parameters, are set in line 1. The training process is conducted
    in an episodic manner, where the environment is reset at the conclusion of each
    episode (line 3), and the iterative procedure is repeated until the model converges.
    Given that we have proposed a dual-action representation to address the problem
    of plan-dependency, our DRL agent was executed and trained using both action representations
    as described in Section 5.1.1. In Algorithm 2, we defined the variable Q-type,
    initialized with either a Q-map or a Q-mask, to determine the action selection
    approach, whether based on Q-masking or Q-mapping. The dataset trials are generated
    using the epsilon-greedy method. The learning agent interacts with the microservice-based
    application and fog platform environment, resulting in an experience record denoted
    as , which includes the current state, the action taken, the reward received,
    the next state, and the sampling validity status. The process of selecting an
    action depends primarily on the configured selection approach defined in -type,
    which can be either Q-mapping approach or Q-masking approach. At each time step
    , the agent randomly explores the environment with a probability of (lines 8–11).
    In the context of the Q-map, the agent randomly selects among three distinct actions
    associated with the greedy selection algorithm (i.e., the Load-Aware, Proximity-aware
    and Hybrid-Aware algorithms). Conversely, when employing the Q-mask, the agent
    randomly selects from the possible physical service plans for a given IoT request,
    determined by the applied mask . On the other hand, between lines 13 and 16, the
    agent selects the best action based on the current state from the neural network
    with a probability of . The -greedy method balances exploration and exploitation
    over time, enabling the model to develop environmental knowledge by exploring
    initially and then gradually drawing more from a valid experience as decays with
    time. Upon the completion of a request, the reward is updated for a valid record
    having a value of True, facilitating the model to learn from completed experiential
    information (lines 5–21). Between lines 23 and 30, the model enters the learning
    phase following the selection of a minibatch of samples through the fetching mechanism
    previously described in Section 5.1. The learning agent minimizes the TD error
    (loss function), by calculating the target Q-value and subtracting it from the
    Q-value of the local Q-network outputs. We leverage the Adam algorithm to update
    the weights of the local Q-network and optimize the loss function. The loss function
    is updated through the stochastic gradient descent method as follows: (24) Consequently,
    the parameters of Q-network at time step can be updated using as the learning
    rate by: (25) The weights of the local Q-network are updated through gradient
    descent, whereas the weights of the target Q-network are replaced with the weights
    of the local Q-network at a frequency of every update. To achieve a gradual modification
    of the target Q-network, we utilize the soft-update method, where target Q-network
    receives a small portion of the discounted change in local weights during updates
    as follows: (26) where is the update coefficient, . Download : Download high-res
    image (836KB) Download : Download full-size image 6. Performance evaluation and
    analysis In this section, we evaluate the performance of our MISP approach through
    its convergence and objective performance. We first introduce the experimental
    settings used in our conducted simulations, followed by a description of the competing
    baselines. Then, we demonstrate the performance achieved under various parameter
    configurations. 6.1. Experimental setup The running microservice application in
    fog computing was implemented using the Python multiprocessing module, which allows
    each microservice instance to operate as an independent process that communicates
    with other instances through a dedicated queue for exchanging requests. Specifically,
    We adopt a Python-based simulator for both the fog platform and the DRL agent.
    The DRL model was built using PyTorch on an Ubuntu 21.04 LTS system, with an Intel
    i7-7700HQ CPU workstation featuring a 2.80 GHZ frequency, 16 GB of memory, and
    an NVIDIA GeForce GTX 1050 GPU. In order to capture the dynamic aspects of fog
    computing, we deployed 15 fog nodes following the fog platform definition described
    in 3.1. We then synthesized the IoT application with its associated microservice
    components, followed by simulating the application’s popularity and generating
    request patterns to mimic real-world usage scenarios. In this experiment, similar
    to [36], we modeled the time-varying channel gain using the Rayleigh fading channel
    model represented by the following equation : ɛ , where is the average channel
    gain and ɛ is a random fading factor with an exponential distribution around a
    mean of 1. The average channel gain was calculated using the free space path loss
    model: , where is the antenna gain, is the carrier frequency, is the path loss
    exponent and is the distance from the IoT device to the . During the experiment,
    the values of , , and were fixed at 4.11, 915 MHz, and 2.8, respectively. The
    value of was randomly selected from a uniform distribution within the range of
    (2.5, 5.5) meters. To model the distribution of IoT requests and simulate personalized
    preferences for logical service plans within the application at different time
    slots, we integrate a request generator process into the system. Furthermore,
    the performance of the system is also evaluated by considering the placement of
    IoT devices, as the study involves modifying the of IoT device . The channel bandwidth
    is set 10 MHz, while the transmission bandwidth is randomly sampled within the
    range of 10 to 30 Mbps, and the request data size is taken in the interval of
    [200, 500] Kb. Table 2 lists the parameter settings that are relevant to the study.
    Download : Download high-res image (268KB) Download : Download full-size image
    Fig. 4. Four representative microservice applications. 6.2. Application setup
    In regards to the microservice-based application setup, we set up 3 different
    composed applications with a varying number of microservice instances, as illustrated
    in Fig. 4. The microservice application (a) serves as the primary subject for
    the evaluation experiment, while the remaining three applications, namely the
    sequential-based, tree-based, and DAG-based applications following the video processing
    architecture in [37], are employed to illustrate the efficacy of agent-based learning
    in diverse compositional model configurations. In order to establish appropriate
    deadlines for the various service plans within a fog platform, we took into account
    the resources consumption for each instance and the service delay when formulating
    the application parameters. Specifically, we examined the average service execution
    delay for each logical service plan to determine the computational resources necessary
    to complete each task and subsequently established a reasonable deadline by multiplying
    the service delay for each logical service plan by a factor representing the desired
    deadline. The range of this factor is between 1 and 2, as values increase, there
    is a corresponding relaxation of the imposed deadline constraints. Table 2. Simulation
    parameters. Parameters Value Total number of instances 12 Number of IoT users
    [20, 60] Request deadline [0.5, 2] s Bandwidth of communication links [10, 30]
    Mbps Input data size of a request [200, 500] Kb Channel bandwidth 10 Mhz Power
    transmission 20 dbm Noise power −100 dbm Number of time steps 1000 Batch size
    128 Learning rate 0.0005 Discount factor 0.9 Soft update step 0.01 Download :
    Download high-res image (532KB) Download : Download full-size image Fig. 5. Convergence
    performance. The number of instances of each microservice component was determined
    on the basis of the request workloads and the distribution of users in the fog
    environment. For instance, the video processing workflow in Fig. 4 receives a
    significant amount of input data for video and audio processing, and each service
    plan requires a significant amount of computation. As such, we increased the number
    of instances of these types to accommodate the workload. Additionally, we adjusted
    the number of instances based on the source request to ensure that the processing
    capacity of instances is sufficient to complete all service plans distributed
    over the network within the specified deadline, while also taking into account
    the heterogeneity of the fog platform. Considering the trade-off between the deadline
    violation and load balancing, MIPS was trained using five different coefficient
    importance weights, with an average value of 100 episodes for each weight presented
    in Table 3. In the event that the weight is excessively large (e.g., around 0.8),
    the agent may opt to disregard the selection of certain instances and their respective
    loads in order to reduce the incidence of deadline violation. On the other hand,
    if is too small, approximately 0.2, some requests may be dropped due to routing
    and waiting delays, thereby resulting in an increase in request delay and, conversely,
    a more evenly distributed workload. In the comparative analysis, the results are
    evaluated with a weight of 0.8, prioritizing deadline violation over load balancing.
    Table 3. Impact of different weight values. Weight 0.0 0.2 0.4 0.6 0.8 1.0 Average
    failure rate 46.7 39.1 13.6 12.0 10.6 7.8 Load balancing degree 1.6 1.9 4.6 5.9
    6.0 7.1 Average delay 76.3 70.7 57.4 56.0 55.1 54.2 6.3. Convergence analysis
    In order to determine the most appropriate algorithm settings for the subsequent
    evaluation, we first assess the adaptability of agent learning under the influence
    of different neural network hyperparameters including the impact of batch size,
    learning rate and -decay. We set the number of episodes to = 160, with each episode
    being carried out over 1000 time steps. We construct the neural networks with
    four layers: an input layer, two hidden layers, and an output layer. The hidden
    layers are set to have 128 neurons, and the input and output layers are equal
    to the sizes of the state and action spaces, respectively. At first sight in Fig.
    5, we can observe that the learning curve differs for each of the hyperparameters,
    indicating their significance; in the learning phase. In Fig. 5(a), we set four
    different learning rates during training. As the learning rate increases, the
    model converges more quickly towards a sub-optimal set of weights, resulting in
    the instability of the policy as shown by the divergence of the model when the
    learning rate is set to 0.1 during the training. On the contrary, when the learning
    rate is small (e.g., lr=0.0001), the training process experiences less fluctuation
    in the cumulative rewards leading to fast convergence. In our study, we selected
    a learning rate of 0.0005, which achieved a slightly higher reward value. Fig.
    5(b), illustrates the impact of batch size on the convergence of the agent. A
    smaller batch size improves the estimation of the error gradient, leading to fast
    model learning. However, on the other hand, it takes a longer training time to
    converge. Interestingly, we observe that the agent converges faster and higher
    when the batch size is equal to 128. Upon considering the convergence speed, we
    opted for 128 as the batch size in our study. We adopt the -greedy approach to
    balance the learning process between exploration and exploitation. Fig. 5(c) shows
    the impact of -decay in the learning phase. As the model starts by exploring the
    environment randomly, we can notice that the larger the value of (i.e., ), the
    better the performance achievement as the model takes its time to explore the
    environment. On the other hand, the utilization of a smaller decay value (i.e.,
    ), the model may face challenges in achieving the optimal global policies due
    to reduced exploration phase, ultimately leading to the generation of suboptimal
    solutions. To achieve a dual objective of optimizing resource utilization during
    the learning process and ensuring more efficient convergence towards optimal policies,
    we choose a value of equal to 0.9. In conclusion, the model converges to the optimal
    policy approximately around 50 episodes. We use the Adam optimizer with a preferable
    learning rate of 0.0005 deducted by the agent’s training evaluation. The size
    of the experience buffer is set to with a mini-batch size of 128 transition samples
    per update. The final parameter settings used in the simulations are listed in
    Table 2. 6.4. Performance results To assess the performance of our proposed MIPS
    using Q-masking approach (referred to as MIPS-MASK) and Q-mapping approach (referred
    to as MIPS-MAP), we compare it with six baselines algorithms in terms of average
    request failure rate, load balancing, and average delay, as listed below. • CS-Random:
    This is a client-side random approach that distributes requests randomly among
    microservice instances. • CS-WRR: This is a client-side weighted round-robin algorithm
    designed to prevent congestion by distributing requests among microservice instances
    in a round-robin manner. Each microservice instance, equipped with a dedicated
    local load balancer, is assigned a weight that dynamically adjusts based on its
    CPU load. Consequently, instances with higher weights handle more requests compared
    to those with lower weights. • Best-fit algorithms: These are the greedy selection
    algorithms, which include the Load-Aware, Proximity-Aware, and Hybrid Load-Proximity-Aware
    algorithms presented in Algorithm 1, each of which is evaluated separately. •
    LBI-WFQ: Similar to [35], we have implemented a weighted fair queuing system,
    wherein each queue is associated with a distinct requested service plan, and the
    allocation of weights to these queues is determined upon the Load Balancing Indicator
    (LBI). The LBI computes the compromise between the load balance degree and communication
    affinity between each pair of microservices, which, in turn, determines the priority
    of each queue. However, the solution described in [35] assumes that identical
    microservice instances are deployed on the same node. This assumption does not
    always hold true, particularly within the realm of resource-constrained fog computing,
    which can affect the accuracy of the LBI indicator. To address this, we have enhanced
    the Load LBI to assist in selecting the appropriate physical service plan and
    have introduced weighted queues for each request based on their respective deadlines.
    For instance, in each time slot, incoming requests are ranked based on their deadlines
    within their respective queues, and the service plan is selected based on the
    LBI indicator, such as , where prioritizes reducing the load across each instance
    in the service plan, while prioritizes the dependent instances deployed on the
    same fog node. In the subsequent evaluation study, we employed the term “MIPS”
    to encompass both the MIPS-MAP and MIPS-MASK approaches. Similarly, the term “Greedy
    approaches” was utilized to encompass Load-Aware, Proximity-Aware, and Hybrid-Aware
    selection algorithms. Download : Download high-res image (1MB) Download : Download
    full-size image Fig. 6. Comparison of different approaches based on accumulative
    rewards, average failure rate, load balancing degree, and average delay across
    episodes. 6.4.1. Performance analysis with increasing episode number Fig. 6(a)
    shows the evolution of the cumulative reward with respect to the training episode
    for each baseline approach. We can observe that our MIPS approach converges faster
    to its optimal policy around 50 episodes and achieves the highest reward when
    compared to the CS-Random, CS-WRR, LBI-WFQ and the Greedy approaches. In the initial
    episodes, it can be noticed that MIPS-MAP exhibits a higher reward compared to
    MIPS-MASK. This is because the Greedy algorithms employed in MIPS-MAP have a prior
    comprehension of the environment, allowing it to start with a reward of 350. On
    the other hand, MIPS-MASK starts by randomly selecting physical plans, which may
    result in considerable delays and consequently leads to lower cumulative rewards
    during the initial exploration. However, both policies eventually converge to
    approximately similar optimal values. Meanwhile, the Greedy approaches, LBI-WFQ,
    CS-WRR and CS-Random methods are not bound by adherence to any specific learning
    policy. As a consequence, the reward values obtained through these methods are
    low and approximately stable as the number of episodes increases. The cumulative
    reward is a holistic representation of both the scale of deadline violation and
    the degree of load balancing achieved. To confirm the model’s ability to jointly
    optimize multiple QoS metrics, we evaluate our approach with respect to the sub-objectives
    comprising the reward components in formula (17), which include the average failure
    rate, load balancing degree, and average delay. Fig. 6(b), depicts the average
    failure rate of requests in comparison to the baseline approaches (i.e., the number
    of requests that have not been processed before their respective deadlines). It
    is worth noting that the request rate and the number of IoT users per gateway
    were intentionally set at notably high values, exceeding 10 users per fog gateway
    and 50 requests within each time slot . Consequently, it is plausible that certain
    requests may become infeasible to accomplish prior to their respective deadlines.
    Explaining the fact that none of the approaches achieved a 0.0% failure rate.
    Overall, our proposed model has a relatively lower number of uncompleted requests
    after convergence. Specifically, MIPS is capable of processing over 90% of requests,
    while the CS-WRR, CS-Random, Load-Aware and LBI-WFQ approaches can process approximately
    between 50% and 60% of requests. In contrast, the Proximity-Aware method shows
    a relatively lower processing capability, managing approximately 40% of the requests.
    As anticipated, each individual Greedy algorithm produced different improvements,
    with the Hybrid-Aware approach achieving the most favorable rate of request completions.
    Conversely, the Proximity-Aware approach consistently selects the same nearest
    instances, causing a significant overload and producing the worst results. Nevertheless,
    the combination of the Greedy algorithms in MIPS-MAP provided the agent with the
    ability to select the most appropriate approach for each situation, ultimately
    leading to convergence levels comparable to the MIPS-MASK approach. On the other
    hand, the standard CS-Random, CS-WRR, and LBI-WFQ approaches achieved consistent
    and average results since they operate without knowledge of the network and the
    complexity of the fog platform. Fig. 6(c) shows the state of the workload among
    microservice instances during the episodes, with a particular focus on highlighting
    the fairness distribution of requests. We can observe that the proposed model
    consistently achieves a stable variance of the load among microservice instances
    after 20 episodes. This indicates that our model takes into account the current
    load conditions within the system and adapts its selection process accordingly
    while ensuring the timely completion of requests. Surprisingly, despite the fact
    that the CS-WRR and Load-Aware algorithms consider the load of instances during
    the selection process, the MIPS-MASK approach manages to achieve a more equitable
    distribution of workload. This is because considering the load of instances does
    not necessarily lead to a balanced workload allocation, particularly when there
    are heterogeneous requests with varying levels of CPU demand. On the other hand,
    CS-WRR achieves a higher degree of stability and a lower degree of load imbalance
    in comparison to LBI-WFQ. This is due to the fact that the LBI-WFQ approach considers
    transmission affinity during the selection process, which can result in the selection
    of instances in close proximity to each other, rather than effectively balancing
    the load between instances. In comparison to the MIPS-MAP approach, the MIPS-MASK
    yields better results as MIPS-MAP is restricted by the greedy algorithms, while
    MIPS-MASK has a larger exploration space, enabling it to gain expertise in selecting
    the optimal instances that accommodate different levels of CPU demands. When prioritizing
    the attainment of load balance with an importance weight of , we can observe that
    MIPS achieves a minimum of 25%, 28%, 30%, 60%, and 75% improvement compared to
    the CS-WRR, LBI-WFQ, CS-Random, Load-Aware, and Hybrid-Aware approaches, respectively.
    Further, we evaluated the performance in terms of the aggregated delay of requests
    as illustrated in Fig. 6(d). Regarding the learning approaches, initially, the
    overall request delay was observed to be higher due to the randomness actions
    and mapping algorithms which failed to appropriately select instances. However,
    after the 50th episode, the model acquired knowledge by interacting with the environment,
    consequently enhancing its policy and optimizing the number of offloaded requests
    it served. Interestingly, MIPS-MAP has outperformed MIPS-MASK approach on request
    delays. Because the MISP-MASK approach only focuses on preventing deadline violations,
    which can lead to many requests almost exceeding the deadline. In contrast, MISP-MAP
    utilizes greedy algorithms that take into account both the load and the proximity
    of instances, resulting in lower delays. Because the Proximity-Aware algorithm
    did not attain good results in the comparison, it is not included in the following
    comparative experiment. Download : Download high-res image (469KB) Download :
    Download full-size image Fig. 7. Performance comparison under different numbers
    of request rate and IoT users per gateway. Download : Download high-res image
    (347KB) Download : Download full-size image Fig. 8. Performance comparison under
    different numbers of request rate and IoT users per gateway. 6.4.2. Performance
    under different architectures An efficient selection mechanism is characterized
    by the ability to maximize the cumulative rewards, given the constraints imposed
    by the environment and the architecture of the application. This assertion is
    visually evident through the illustrative Fig. 9 where different application architectures
    were evaluated, including a sequential application consisting of 4 microservices
    with a total of 4 logical plans, the tree-based application with 7 microservices
    and 7 logical plans and the DAG-based application encompassing 11 microservices
    and 3 logical plans. Upon examination, we can observe that the total reward achieved
    by the model varies across the three applications. This variation can be attributed
    to several factors such as the number of SPs and instances, as well as their placement
    in the fog platform, which differ in each scenario. However, it is noteworthy
    that our approach eventually converges to the optimal value for all three applications.
    Specifically, the DAG architecture attains a reward of 700 and converges at a
    faster rate, approximately 40 episodes, compared to other architectures. This
    outcome can be attributed to the reduced number of service plans present in the
    application, which facilitates the model to learn faster with fewer actions. However,
    despite having fewer SPs, the SEQ-based application achieves a relatively lower
    reward, primarily attributed to the placement of microservice instances in highly
    congested areas and significant distances from the request generation source.
    6.4.3. Performance under different request arrival rates and numbers of users
    per gateway The performance of the microservice-based application-oriented fog
    computing platform is influenced by multiple factors, including the number of
    IoT users, their distributions, the microservice instances placement, and the
    network traffic within the fog platform. Therefore, we also show the performance
    of the model under different parameter settings such as the request arrival rates,
    the number of users per gateway, the variable request sources and the deadline
    relaxation factor. Throughout the experiment, we computed the average performance
    across 100,000 offloaded requests for each specific parameter setting within the
    designated time slot. The durations of the warm-up and cooldown periods are not
    pre-established in the experiment. Upon the arrival of an IoT request, the DRL
    agent dynamically routes the request to the appropriate service plan. After processing
    the final request in a given configuration, we transition to the next set, following
    to the predetermined evaluation parameters. To mitigate errors introduced from
    the warm-up and cooldown intervals, which denote the initial and final periods
    when the proposed model is inactive before reaching a stable, steady-state region,
    we excluded the initial and final 5% of requests. This ensures that the evaluation
    results accurately reflect the system’s stable operational state. In Fig. 7, Fig.
    8, we evaluate the impact of the number of requests on both the average failure
    rate and load balancing. The experiment was conducted with a variable request
    rate ranging from 10 to 60 constraint of a maximum of 10 users per gateway. As
    depicted in Fig. 7(a), the selection policy gradually fails to allocate requests
    to their appropriate instances as the number of requests increases. This is due
    to the saturation of the instance queue, which results in extended waiting delays
    and ultimately contributing to the overall delay. Nevertheless, MIPS achieves
    the lowest failure rate. On average, MIPS is capable of reducing the average failure
    rate by 65%, 62%, 58%, 52% and 45%, when compared to LBI-WFQ, Load-Aware, CS-WRR,
    CS-Random and Hybrid-Aware, respectively. When the request rate is high (i.e.,
    60 ), MIPS-MASK showed a slightly better performance compared to MIPS-MAP, highlighting
    the limitation of relying on the local optima of the greedy algorithms during
    the selection process. Nevertheless, the overall results suggest that MIPS has
    superior exploration ability, which allows for the identification of pivotal selection
    decisions to reduce request processing delay in varying overload scenarios. Download
    : Download high-res image (329KB) Download : Download full-size image Fig. 9.
    Performance comparison under different architectures. Similarly, we varied the
    number of users per gateway with a fixed constraint of 50 as illustrated in Fig.
    7(b). It is noteworthy that the Hybrid-Aware approach in both cases outperforms
    alternative strategies, primarily due to its ability to discriminate between proximate
    fog nodes and prioritize instances with lower resource utilization. It is important
    to note that due to the dynamic nature of the fog platform, the standard baseline
    methods such as CS-random and CS-WRR exhibited a high failure rate of requests,
    even when the number of users per fog gateway was small (i.e., 4 ). Despite the
    fact that LBI-WFQ prioritizes requests with minimum deadlines, it did not give
    good results. This is primarily because LBI-WFQ fails to capture the overall request
    delay and merely selects the instance that minimizes the current LBI (a trade-off
    between the instance load and instance affinity) at each time step, without considering
    a long-term instance selection strategy. Furthermore, in systems where microservice
    instances are dispersed geographically, the concept of affinity can be ineffective,
    potentially leading to the selection of instances situated far apart from each
    other. In such scenarios, this can introduce additional network delay, ultimately
    resulting in a higher rate of request failures. Conversely, our proposed approach
    achieved the lowest failure rate, and it maintained its performance as the number
    of users increased from 4 to 20. In the context of load balancing, we can clearly
    see that the variability of the request rate and user distribution between fog
    nodes is lower for baseline methods than for the proposed algorithm in Fig. 8.
    The present results are consistent with expectations, given that the evaluation
    proceeded with an importance weight of 0.8 for deadline violation. This weightage
    signifies that the proposed algorithm effectively employs a rational offloading
    approach, by minimizing the overall request failure, while simultaneously maintaining
    a stable load equilibrium across all instances. Nevertheless, when the importance
    weight was set to for load balancing degree, MIPS successfully attained a lower
    degree of imbalance, particularly in the event of an overload scenario characterized
    by a request rate of 50 and users per gateway. Download : Download high-res image
    (271KB) Download : Download full-size image Fig. 10. Performance comparison under
    different numbers of fog gateways. 6.4.4. Performance under different IoT user
    distributions The next evaluation is to appraise the capacity of MISP to effectively
    sustain fog platforms and IoT applications that experience variable numbers of
    sources from IoT user devices. Fig. 10 illustrates the average failure rate, considering
    a constraint of a maximum of 10 IoT users per fog gateway, a fixed request rate
    of 50 , and a varying number of sources ranging between 6 and 10. Respectively,
    we can see that the failure rate exhibits a linear decrease as the number of sources
    increases. The observed phenomenon is caused by two factors. Firstly, the reduction
    in the number of sources by removing the fog gateways in close proximity to the
    deployed instances has led to an increase in routing delays, ultimately leading
    to some requests exceeding their respective deadlines. Secondly, maintaining high
    request rates with limited sources has resulted in a concentration of a larger
    number of requests towards a single fog gateway, resulting in a subsequent prolongation
    of the access delay. Overall, The MIPS algorithm achieves superior long-term performance
    with a slight improvement of the MISP-MAP approach compared to the MIPS-Mask approach.
    In comparison with the CS-Random, Load-Aware, CS-WRR, LBI-WFQ and Hybrid-Aware
    schemes, MIPS can reduce the failure rate by 82%, 80%, 74%, 74% and 72%, respectively.
    Download : Download high-res image (326KB) Download : Download full-size image
    Fig. 11. Performance comparison under different deadline factors. 6.4.5. Performance
    under different deadline factors Fig. 11 depicts the influence of the deadline
    factor over the performance of selection approaches. The observation reveals that
    the decline in the failure request rate of the approaches is associated with an
    increase in the deadline factor. This trend can be attributed to the gradual relaxation
    of deadline constraints, providing the algorithms with a greater pool of alternatives
    for instance selection. When the deadline factor is 0.8, our proposed approach
    reduces the failure request rate by 50% compared to the baseline. On the other
    hand, when setting the factor to a high value (i.e., 1.6), The baseline approaches
    were unable to attain a request failure rate below 10%. Nonetheless, our model’s
    performance remained effectively sustained. 6.5. Limitations Despite the positive
    results demonstrated by the MIPS-MASK and MIPS-MAP approaches, the choice between
    them will depend on the particular use case and context, as both have their respective
    strengths and weaknesses. • Scalability: The MIPS-MASK approach presents notable
    challenges in terms of scalability, particularly when compared to the MIPS-MAP
    method. In the context of overload/underload situations for an application, it
    is crucial to have the capability to scale specific microservices or groups of
    microservices that experience either low or high pressure, in order to free up
    resources or address potential overloads. However, the design of MIPS-MASK introduces
    complications to this process, as the selection representation is inherently bound
    to a fixed number of instances and service plans. Consequently, if the application
    requires a scaling step or the integration of a new service plan, the model must
    be retrained to account for the changes, which can be a time-consuming and resource-intensive
    undertaking. • Applicability: The use of Deep Q-learning in MIPS-MASK can increase
    the complexity and difficulty of learning when dealing with a large number of
    service plans. This is because it leads to an increase in the number of available
    actions, which makes it challenging for the agent to explore and learn the optimal
    policy. On the other hand, MIPS-MAP approach is limited to the use of the Greedy
    algorithms, which can result in additional processing time for each request since
    it must first select the appropriate selection algorithm, which is followed by
    additional processing to offload the request. Moreover, Greedy algorithms are
    characterized by limited exploration and a lack of flexibility since they are
    designed to make locally optimal choices at each step. This means that the algorithm
    may not consider other potentially superior alternative selections, thereby restricting
    its ability to deal with a wide range of scenarios. Thus, it can be argued that
    MIPS-MASK is more suited for small-scale and stable applications. While MIPS-MAP
    is better suited for more flexible applications. 7. Conclusion To address the
    challenge of selecting microservice instances in a dynamic fog computing platform
    that exhibit a time-varying network state, multiple dependent microservice instances
    and dynamic request generation, a Double-DQN-based approach has been formulated
    and developed in this paper. The selection decisions aim to determine the optimal
    physical service plans, including the requested microservice instances by IoT
    devices connected to the fog platform, with the aim of minimizing the occurrence
    of deadline violations and load imbalances in the IoT application. Two selection
    schemes, namely the Q-mapping and Q-masking approach, have been designed to effectively
    address the plan-dependent problem. Simulation outcomes have demonstrated that
    the proposed model can achieve a noteworthy improvement in performance when compared
    to the benchmarks in terms of average failure rate, load balancing, and consistency.
    In the future work, we plan to investigate the scalability issues, with the objective
    of incorporating the microservice selection policy in conjunction with auto-scaling
    decisions within a more complex and dynamic fog platform. CRediT authorship contribution
    statement Wassim Boudieb: Writing – original draft, Software, Methodology, Formal
    analysis, Conceptualization. Abdelhamid Malki: Writing – original draft, Validation,
    Supervision, Methodology, Conceptualization. Mimoun Malki: Validation, Supervision,
    Resources, Project administration. Ahmed Badawy: Writing – review & editing, Writing
    – original draft. Mahmoud Barhamgi: Writing – review & editing, Writing – original
    draft. Declaration of competing interest The authors declare that they have no
    known competing financial interests or personal relationships that could have
    appeared to influence the work reported in this paper. Data availability Data
    will be made available on request. References [1] Thanh L.N.T., Phien N.N., Vo
    H.K., Luong H.H., Anh T.D., Tuan K.N.H., Son H.X., et al. Ioht-MBA: An internet
    of healthcare things (IoHT) platform based on microservice and brokerless architecture
    Int. J. Adv. Comput. Sci. Appl., 12 (7) (2021) Google Scholar [2] Deng S., Xiang
    Z., Taheri J., Khoshkholghi M.A., Yin J., Zomaya A.Y., Dustdar S. Optimal application
    deployment in resource constrained distributed edges IEEE Trans. Mob. Comput.,
    20 (5) (2020), pp. 1907-1923 Google Scholar [3] Cordeiro M., Markert C., Araújo
    S.S., Campos N.G., Gondim R.S., da Silva T.L.C., da Rocha A.R. Towards smart farming:
    Fog-enabled intelligent irrigation system using deep neural networks Future Gener.
    Comput. Syst., 129 (2022), pp. 115-124 View PDFView articleView in ScopusGoogle
    Scholar [4] Javadzadeh G., Rahmani A.M. Fog computing applications in smart cities:
    A systematic survey Wirel. Netw., 26 (2) (2020), pp. 1433-1457 CrossRefView in
    ScopusGoogle Scholar [5] Yousefpour A., Fung C., Nguyen T., Kadiyala K., Jalali
    F., Niakanlahiji A., Kong J., Jue J.P. All one needs to know about fog computing
    and related edge computing paradigms: A complete survey J. Syst. Archit., 98 (2019),
    pp. 289-330 View PDFView articleView in ScopusGoogle Scholar [6] Benayache A.,
    Bilami A., Barkat S., Lorenz P., Taleb H. Msm: A microservice middleware for smart
    WSN-based IoT application J. Netw. Comput. Appl., 144 (2019), pp. 138-154 View
    PDFView articleView in ScopusGoogle Scholar [7] Malki A., Benslimane S.-M., Malki
    M., Barhamgi M., Benslimane D. Top-k query optimization over data services Future
    Gener. Comput. Syst., 113 (2020), pp. 1-12 View PDFView articleView in ScopusGoogle
    Scholar [8] Malki A., Benslimane S.-M., Malki M. Towards rank-aware data mashups
    Int. J. Web Serv. Res., 17 (4) (2020), pp. 1-14 CrossRefView in ScopusGoogle Scholar
    [9] Awad S., Malki A., Malki M. Composing WoT services with uncertain and correlated
    data Computing, 103 (2021), pp. 1501-1517 CrossRefView in ScopusGoogle Scholar
    [10] Joseph C.T., Chandrasekaran K. IntMA: Dynamic interaction-aware resource
    allocation for containerized microservices in cloud environments J. Syst. Archit.,
    111 (2020), Article 101785 View PDFView articleView in ScopusGoogle Scholar [11]
    Lera I., Guerrero C., Juiz C. Availability-aware service placement policy in fog
    computing based on graph partitions IEEE Internet Things J., 6 (2) (2018), pp.
    3641-3651 Google Scholar [12] Boudieb W., Malki A., Malki M. Microservice instances
    provisioning for IoT applications in fog computing Advances in Computing Systems
    and Applications: Proceedings of the 5th Conference on Computing Systems and Applications,
    Springer (2022), pp. 107-117 CrossRefView in ScopusGoogle Scholar [13] Pallewatta
    S., Kostakos V., Buyya R. Placement of microservices-based IoT applications in
    fog computing: A taxonomy and future directions ACM Comput. Surv. (2023) Google
    Scholar [14] Guo F., Tang B., Tang M., Liang W. Deep reinforcement learning-based
    microservice selection in mobile edge computing Cluster Comput., 26 (2) (2023),
    pp. 1319-1335 CrossRefView in ScopusGoogle Scholar [15] Wang S., Guo Y., Zhang
    N., Yang P., Zhou A., Shen X. Delay-aware microservice coordination in mobile
    edge computing: A reinforcement learning approach IEEE Trans. Mob. Comput., 20
    (3) (2019), pp. 939-951 CrossRefGoogle Scholar [16] Grasso C., Raftopoulos R.,
    Schembra G. Smart zero-touch management of uav-based edge network IEEE Trans.
    Netw. Serv. Manag. (2022) Google Scholar [17] Zhang L., Zhang Z.-Y., Min L., Tang
    C., Zhang H.-Y., Wang Y.-H., Cai P. Task offloading and trajectory control for
    UAV-assisted mobile edge computing using deep reinforcement learning IEEE Access,
    9 (2021), pp. 53708-53719 CrossRefView in ScopusGoogle Scholar [18] Xu J., Li
    D., Gu W., Chen Y. Uav-assisted task offloading for iot in smart buildings and
    environment via deep reinforcement learning Build. Environ., 222 (2022), Article
    109218 View PDFView articleView in ScopusGoogle Scholar [19] Azizi S., Shojafar
    M., Abawajy J., Buyya R. Deadline-aware and energy-efficient IoT task scheduling
    in fog computing systems: A semi-greedy approach J. Netw. Comput. Appl., 201 (2022),
    Article 103333 View PDFView articleView in ScopusGoogle Scholar [20] Karimi E.,
    Chen Y., Akbari B. Task offloading in vehicular edge computing networks via deep
    reinforcement learning Comput. Commun., 189 (2022), pp. 193-204 View PDFView articleView
    in ScopusGoogle Scholar [21] Li Z., Chang V., Ge J., Pan L., Hu H., Huang B. Energy-aware
    task offloading with deadline constraint in mobile edge computing EURASIP J. Wireless
    Commun. Networking, 2021 (2021), pp. 1-24 Google Scholar [22] Yu Z., Xu X., Zhou
    W. Task offloading and resource allocation strategy based on deep learning for
    mobile edge computing Comput. Intell. Neurosci., 2022 (2022) Google Scholar [23]
    Ale L., Zhang N., Fang X., Chen X., Wu S., Li L. Delay-aware and energy-efficient
    computation offloading in mobile-edge computing using deep reinforcement learning
    IEEE Trans. Cogn. Commun. Network., 7 (3) (2021), pp. 881-892 CrossRefView in
    ScopusGoogle Scholar [24] Ke H., Wang J., Deng L., Ge Y., Wang H. Deep reinforcement
    learning-based adaptive computation offloading for MEC in heterogeneous vehicular
    networks IEEE Trans. Veh. Technol., 69 (7) (2020), pp. 7916-7929 CrossRefView
    in ScopusGoogle Scholar [25] Gao T., Tang Q., Li J., Zhang Y., Li Y., Zhang J.
    A particle swarm optimization with Lévy flight for service caching and task offloading
    in edge-cloud computing IEEE Access, 10 (2022), pp. 76636-76647 CrossRefView in
    ScopusGoogle Scholar [26] Liu X., Zhao X., Liu G., Huang F., Huang T., Wu Y. Collaborative
    task offloading and service caching strategy for mobile edge computing Sensors,
    22 (18) (2022), p. 6760 CrossRefView in ScopusGoogle Scholar [27] Li L., Zhang
    H. Delay optimization strategy for service cache and task offloading in three-tier
    architecture mobile edge computing system IEEE Access, 8 (2020), pp. 170211-170224
    CrossRefView in ScopusGoogle Scholar [28] Liu T., Ni S., Li X., Zhu Y., Kong L.,
    Yang Y. Deep reinforcement learning based approach for online service placement
    and computation resource allocation in edge computing IEEE Trans. Mob. Comput.
    (2022) Google Scholar [29] Peng K., Nie J., Kumar N., Cai C., Kang J., Xiong Z.,
    Zhang Y. Joint optimization of service chain caching and task offloading in mobile
    edge computing Appl. Soft Comput., 103 (2021), Article 107142 View PDFView articleView
    in ScopusGoogle Scholar [30] Liang Y., Lan Y. Tclbm: A task chain-based load balancing
    algorithm for microservices Tsinghua Sci. Technol., 26 (3) (2020), pp. 251-258
    View in ScopusGoogle Scholar [31] Niu Y., Liu F., Li Z. Load balancing across
    microservices IEEE INFOCOM 2018-IEEE Conference on Computer Communications, IEEE
    (2018), pp. 198-206 CrossRefView in ScopusGoogle Scholar [32] Yu R., Kilari V.T.,
    Xue G., Yang D. Load balancing for interdependent IoT microservices IEEE INFOCOM
    2019-IEEE Conference on Computer Communications, IEEE (2019), pp. 298-306 CrossRefView
    in ScopusGoogle Scholar [33] Yu Y., Yang J., Guo C., Zheng H., He J. Joint optimization
    of service request routing and instance placement in the microservice system J.
    Netw. Comput. Appl., 147 (2019), Article 102441 View PDFView articleView in ScopusGoogle
    Scholar [34] Ding Z., Wang S., Pan M. Qos-constrained service selection for networked
    microservices IEEE Access, 8 (2020), pp. 39285-39299 CrossRefView in ScopusGoogle
    Scholar [35] Selvakumar G., Jayashree L., Arumugam S. Latency minimization using
    an adaptive load balancing technique in microservices applications Comput. Syst.
    Sci. Eng., 46 (1) (2023), pp. 1215-1231 CrossRefView in ScopusGoogle Scholar [36]
    Huang L., Bi S., Zhang Y.-J.A. Deep reinforcement learning for online computation
    offloading in wireless powered mobile-edge computing networks IEEE Trans. Mob.
    Comput., 19 (11) (2019), pp. 2581-2593 Google Scholar [37] Q. Huang, P. Ang, P.
    Knowles, T. Nykiel, I. Tverdokhlib, A. Yajurvedi, P. Dapolito IV, X. Yan, M. Bykov,
    C. Liang, et al., SVE: Distributed video processing at Facebook scale, in: Proceedings
    of the 26th Symposium on Operating Systems Principles, 2017, pp. 87–103. Google
    Scholar Cited by (0) Wassim Boudieb received the Master degree in computer science
    from the higher School of Computer Science, Sidi Bel-Abbes, Algeria, in 2019.
    He is currently pursuing his Ph.D degree at the higher School of Computer Science,
    Sidi Bel-Abbes, Algeria. His current research interests lie in the area of fog
    computing, Internet of Things, resource management and deep reinforcement learning.
    Abdelhamid Malki received the Master degree in computer science from the University
    of Sidi Bel Abbes (Algeria), in 2011 and the PHD degree in computer science from
    Claude Bernard Lyon 1 University(France), in 2015. Currently, he is associated
    professor at the higher School of Computer Science, Sidi Bel-Abbès, Algeria. His
    current research interests lie in the area of WOT, service computing, Data integration,
    Top-k queries optimization and probabilistic databases. Mimoun Malki He is a full
    Professor at the higher School of Computer Science, Sidi Bel-Abbès, Algeria. He
    is the head of LabRi-SBA Laboratory. His research interests include Databases,
    Information Systems Interoperability, Ontology Engineering, Linked Data, Semantic
    Web Services, Enterprise Mashup, WOT and Cloud Computing. Ahmed Badawy is an Assistant
    Professor at the Computer Science and Engineering Department of Qatar University.
    He received the B.Sc. degree in electrical engineering from the University of
    Nevada, Reno, USA, the M.Sc. degree from Montana State University, Bozeman, USA,
    and the Ph.D. degree from the Politecnico di Torino, Turin, Italy, in 2017. He
    has authored and coauthored several international refereed journals and conference
    papers in reputable international journals and conferences. His research interests
    include cognitive radios, physical layer security, signal processing, smart antenna
    systems, and hardware implementation of communication systems. Mahmoud Barhamgi
    is an Associate Professor at the Computer Science and Engineering Department of
    Qatar University. His current research work is focused on engineering solutions
    that would make the cyber space safer for people and more respectful of their
    rights such as the right to privacy, transparency and fairness. His broad research
    areas include Cybersecurity, Secure and Privacy preserving Data Sharing, Privacy,
    Internet of Things; Service oriented computing and Data Management. 1 We adopted
    a simplified communication model that employs the frequency division multiplexing
    (FDM) protocol for communication with the fog gateway. Our model disregards the
    downlink offloading delay as it is negligible considering the small data size
    of the processed result. View Abstract © 2024 Elsevier B.V. All rights reserved.
    Recommended articles Def-DReL: Towards a sustainable serverless functions deployment
    strategy for fog-cloud environments using deep reinforcement learning Applied
    Soft Computing, Volume 152, 2024, Article 111179 Chinmaya Kumar Dehury, …, Satish
    Narayana Srirama View PDF Efficient knowledge management for heterogeneous federated
    continual learning on resource-constrained edge devices Future Generation Computer
    Systems, Volume 156, 2024, pp. 16-29 Zhao Yang, …, Meng Zhang View PDF Digital
    twin framework for smart greenhouse management using next-gen mobile networks
    and machine learning Future Generation Computer Systems, Volume 156, 2024, pp.
    285-300 Hameedur Rahman, …, Joon Yoo View PDF Show 3 more articles Article Metrics
    Captures Readers: 5 View details About ScienceDirect Remote access Shopping cart
    Advertise Contact and support Terms and conditions Privacy policy Cookies are
    used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: Future Generation Computer Systems
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Microservice instances selection and load balancing in fog computing using
    deep reinforcement learning approach
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Mduma N.
  - Mayo F.
  citation_count: '0'
  description: Maize Lethal Necrosis (MLN) and Maize Streak Virus (MSV) are among
    maize diseases which affect productivity in Tanzania and Africa at large. These
    diseases can be detected early for timely interventions and minimal losses. Machine
    learning (ML) has emerged as a powerful tool for automated diseases detection,
    offering several advantages over traditional methods. This article presents the
    updated dataset of 9356 imagery maize leaves to assist researchers in developing
    technological solutions for addressing crop diseases. The high-resolution imagery
    data presented in this dataset were captured using smartphone cameras in farm
    fields which were not selected in the previously published dataset. Also, data
    collection was taken in the range of three months from November 2022 to January
    2023 to incorporate farming season not covered in the previously published dataset.
    The presented dataset can be used by researchers in the field of Artificial Intelligence
    (AI) to develop ML solutions and eliminate the need of manual inspection and reduce
    human bias. Developing ML solutions require large amount of data therefore, the
    updated and previously published datasets can be combined to accommodate diverse
    and wider applicability.
  doi: 10.1016/j.dib.2024.110359
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Value of the Data 2. Data Description 3. Experimental
    Design, Materials and Methods Limitations Ethics Statement CRediT authorship contribution
    statement Acknowledgements Declaration of Competing Interest Data Availability
    References Show full outline Figures (2) Tables (1) Table Data in Brief Volume
    54, June 2024, 110359 Update Article Updating “machine learning imagery dataset
    for maize crop: A case of Tanzania” with expanded data to cover the new farming
    season Author links open overlay panel Neema Mduma, Flavia Mayo Show more Add
    to Mendeley Share Cite https://doi.org/10.1016/j.dib.2024.110359 Get rights and
    content Under a Creative Commons license open access Abstract Maize Lethal Necrosis
    (MLN) and Maize Streak Virus (MSV) are among maize diseases which affect productivity
    in Tanzania and Africa at large. These diseases can be detected early for timely
    interventions and minimal losses. Machine learning (ML) has emerged as a powerful
    tool for automated diseases detection, offering several advantages over traditional
    methods. This article presents the updated dataset of 9356 imagery maize leaves
    to assist researchers in developing technological solutions for addressing crop
    diseases. The high-resolution imagery data presented in this dataset were captured
    using smartphone cameras in farm fields which were not selected in the previously
    published dataset. Also, data collection was taken in the range of three months
    from November 2022 to January 2023 to incorporate farming season not covered in
    the previously published dataset. The presented dataset can be used by researchers
    in the field of Artificial Intelligence (AI) to develop ML solutions and eliminate
    the need of manual inspection and reduce human bias. Developing ML solutions require
    large amount of data therefore, the updated and previously published datasets
    can be combined to accommodate diverse and wider applicability. Previous article
    in issue Next article in issue Keywords Machine learningSmart agricultureDisease
    monitoringFarmersTanzania Specifications Table Subject Artificial Intelligence.
    Specific subject area Detecting crop diseases. Data format Raw Type of data Image
    Data collection Same as in original data article Data source location Tanzania
    Agricultural Research Institute (TARI) and Nelson Mandela African Institution
    of Science and Technology (NM-AIST), Tanzania Data accessibility Mendeley 10.17632/fkw49mz3xs.1
    https://data.mendeley.com/datasets/fkw49mz3xs/1 Related data article N. Mduma,
    H. Laizer, Machine Learning Imagery Dataset for Maize Crop: A Case of Tanzania,
    Data in Brief 48 (2023) 1–4. https://doi.org/10.1016/j.dib.2023.109108 1. Value
    of the Data • The updated dataset introduces maize leaf images captured in different
    farming season, unlike the prior dataset. • Researchers can use the presented
    dataset to develop disease monitoring systems that track the spread of MSV and
    MLN in real-time, allowing for targeted interventions and prevention strategies.
    • The updated dataset includes maize leaf images captured using a high-resolution
    smartphone camera, making the technology accessible to a wider range of farmers.
    2. Data Description Agricultural sector forms the core of Tanzania''s economic
    activity, employing over four out of five citizens and serving as their essential
    means of life [1]. Nearly one-third of Tanzania''s economic output, as measured
    by GDP, originates from agriculture, which also employs over two-thirds of the
    workforce [2]. Maize is among the dominant food and cash crops in the country,
    accounting for about 45 % of its farmland [3]. Despite its importance to Tanzania''s
    economy and food security, maize is hindered by diseases, specifically Maize Lethal
    Necrosis (MLN) and Maize Streak Virus (MSV), which highly affect its productivity
    [4,5]. Therefore, effective crop disease control strategies are essential for
    optimal productivity. Several management methods have been implemented for these
    diseases, including chemical treatment and human decisions based on physical observations.
    However, these methods are based on human judgments and considered unreliable
    with bias. On the other hand, deep learning tools have been developed to help
    stakeholders in agriculture and food systems to detect crop diseases early [6,7].
    This approach can assist in the early detection of maize diseases for proper management.
    However, developing deep learning tools requires enormous data, and Tanzania lacks
    an original dataset to facilitate model development. To address this issue, the
    dataset of maize leaf images was published in the Harvard repository in March
    2023 [8]. The dataset consisted of 18,148 images (Healthy = 5118; MSV = 6255;
    MLN = 3982) collected from February to July 2021. The dataset was reported to
    contains all possible instances however, it did not capture the data samples collected
    in all farming seasons. Therefore, this article presents an updated dataset of
    maize leaf images incorporating the missing farming season data. The updated dataset
    of 9356 images was divided into three classes (Healthy = 3073 images; MSV = 3052
    images; MLN = 3231 images) and published in an open-access repository on February
    22, 2023 [9]. The repository contains three separate zipped folders (HEALTHY.zip,
    MLN.zip, and MSV.zip) to allow users to download a specific file or all files
    simultaneously based on their preferences. HEALTHY.zip folder has 2.34 GB, MLN.zip
    folder has 2.23 GB and MSV.zip has 2.4 GB. A visual representation of the data
    repository''s structure is presented in Fig. 1. Download : Download high-res image
    (72KB) Download : Download full-size image Fig. 1. Structure of the data repository.
    3. Experimental Design, Materials and Methods 3.1. Data collection Data collection
    tool was installed on a smartphone (iPhone XS Max) and used to collect maize imagery
    leaves. The images were sent to the database for the quality check before data
    analysis as seen in Fig. 2. The data collection process involved farmers and experts
    from the Northern Tanzania, particularly the Tanzania Agricultural Research Institute
    (TARI) and Nelson Mandela African Institution of Science and Technology (NM-AIST)
    in Arusha. Maize imagery data were collected from TARI farms in Arusha from November
    2022 to January 2023. Site selection for data collection prioritized areas with
    readily available maize crops and demonstrable occurrences of MLN and MSV disease
    symptoms. The farms with diseased plants were identified with the help of plant
    pathologists and agricultural experts. Download : Download high-res image (162KB)
    Download : Download full-size image Fig. 2. Sequence diagram of the data collection
    process. 3.2. Data preprocessing The collected images were preprocessed, and this
    included data cleaning and labelling. VisiPics tool removed duplicate images from
    all three classes (Healthy, MSV, and MLN) [10]. The images were also labelled
    to correspond to the class name, i.e., HEALTHY_876.jpg, using the bulk rename
    utility. The dataset consists of images in Joint Photographic Experts Group (JPG)
    format in different sizes. Limitations The dataset presented in this article contains
    maize imagery leaves specifically collected in Arusha. The dataset is, however,
    limited to only two diseases: MLN and MSV. The main focus was to ensure the dataset
    contains high-quality imagery data which would otherwise lead to bias; therefore,
    the dataset is limited to images acquired under well-lit conditions and excludes
    those captured with low-quality smartphone cameras. Future datasets can explore
    the possibility of including other regions in Tanzania not covered during the
    data collection and incorporating other maize diseases affecting productivity.
    Ethics Statement Data for this study was gathered from farms with informed consent
    obtained through a formal approval process. Farmers actively participated by completing
    consent forms, granting permission for data collection on their land. CRediT authorship
    contribution statement Neema Mduma: Investigation, Formal analysis, Resources,
    Validation, Writing – original draft, Writing – review & editing, Visualization,
    Software, Supervision, Project administration, Methodology, Funding acquisition,
    Conceptualization. Flavia Mayo: Conceptualization, Writing – review & editing,
    Methodology, Data curation. Acknowledgements We acknowledge the support of the
    Swedish International Development Cooperation Agency (SIDA) and International
    Development Research Centre (IDRC) and through the African Centre for Technology
    Studies (ACTS). Declaration of Competing Interest This work was conducted free
    from potential conflicts of interest, as the authors acknowledge no relevant financial
    ties or personal connections. Data Availability Maize Imagery Dataset - Tanzania
    (Original data) (Mendeley Data). References [1] R. Suleiman, K. Rosentrater Current
    maize production, postharvest losses and the risk of mycotoxins contamination
    in Tanzania Proceeding presented at ASABE Annual International Meeting (2015),
    pp. 1-128, 10.13031/aim.20152189434 Paper No. 152189434 Google Scholar [2] Trade.gov
    Tanzania - Agriculture and Agricultural Processing (2021) https://www.trade.gov/country-commercial-guides/tanzania-agriculture-and-agricultural-processing
    (Accessed 4 January 2024) Google Scholar [3] E. John, L. Florentine, L. Makoye,
    F. Mmbando, R. Ngatoluwa, U. Titi Enhancing Agricultural Resilience and Sustainability
    in Eastern and Southern Africa (2023) https://simlesa.cimmyt.org/wp-content/uploads/tanzaniaB-min-1-1.pdf
    Google Scholar [4] F. Kiruwa, S. Mutiga, J. Njuguna, E. Machuka, S. Senay, T.
    Feyissa, P. Ndakidemi, F. Stomeo Status and epidemiology of maize lethal necrotic
    disease in northern Tanzania Pathogens, 9 (1) (2019), p. 4, 10.3390/pathogens9010004
    PMID: 31861452; PMCID: PMC7168672 Google Scholar [5] D. Shepherd, D. Martin, E.
    Van Der Walt, K. Dent, A. Varsani, E. Rybicki Maize streak virus: an old and complex
    ‘emerging’ pathogen Mol. Plant Pathol., 11 (1) (2010), p. 1, 10.1111/j.1364-3703.2009.00568
    x. PMID: 20078771; PMCID: PMC6640477 View PDFView articleGoogle Scholar [6] M.
    Syarief, W. Setiawan Convolutional neural network for maize leaf disease image
    classification Telecommun. Comput. Electron. Control, 18 (3) (2020), pp. 1376-1381,
    10.12928/TELKOMNIKA.v18i3.14840 View in ScopusGoogle Scholar [7] M. Sibiya, M.
    Sumbwanyambe Automatic fuzzy logic-based maize common rust disease severity predictions
    with thresholding and deep learning Pathogens, 10 (2) (2021), pp. 1-17, 10.3390/pathogens10020131
    View in ScopusGoogle Scholar [8] N. Mduma, H. Laizer Machine learning imagery
    dataset for maize crop: a case of Tanzania Data Br. (2023), 10.1016/j.dib.2023.109108
    Google Scholar [9] N. Mduma, F. Mayo Maize imagery dataset - Tanzania Mendeley
    Data (2023), 10.17632/fkw49mz3xs.1 Google Scholar [10] Softonic Software to Detect
    and Remove Duplicate Pictures (2024) https://visipics.en.softonic.com (Accessed
    4 January 2024) Google Scholar Cited by (0) © 2024 The Author(s). Published by
    Elsevier Inc. Recommended articles Middle meningeal artery embolization for chronic
    subdural hematoma: An analysis of 45 consecutive patients Interdisciplinary Neurosurgery,
    2024, Article 101981 Salvatore J. Palumbo, …, Patricia A. Eckardt View PDF Gender
    diversity, corporate governance and firm-specific data of all public listed US
    firms during 2000–2019 Data in Brief, Volume 54, 2024, Article 110328 Nafisah
    Yami, Hashem Alshurafat View PDF A synthetic shadow dataset of agricultural settings
    Data in Brief, Volume 54, 2024, Article 110364 Mengchen Huang, …, Ruben Fernandez-Beltran
    View PDF Show 3 more articles About ScienceDirect Remote access Shopping cart
    Advertise Contact and support Terms and conditions Privacy policy Cookies are
    used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: Data in Brief
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Updating “machine learning imagery dataset for maize crop: A case of Tanzania”
    with expanded data to cover the new farming season'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Séré G.
  - Le Guern C.
  - Bispo A.
  - Layet C.
  - Ducommun C.
  - Clesse M.
  - Schwartz C.
  - Vidal-Beaudet L.
  citation_count: '0'
  description: The contribution of soil health to global health receives a growing
    interest, especially in urban environment. Therefore, there is a true need to
    develop methods to evaluate ecological functions provided by urban soils in order
    to promote smart urban planning. This work aims first at identifying relevant
    soil indicators based either on in situ description, in situ measurement or lab
    analysis. Then, 9 soil functions and sub-functions were selected to meet the main
    expectations regarding soil health in urban contexts. A crucial step of the present
    research was then to select adequate indicators for each soil function and then
    to create adapted reference frameworks; they were in the form of 4 classes with
    scores ranging from 0 to 3. All the reference frameworks were developed to evaluate
    soil indicators in order to score soil functions, either by using existing scientific
    or technical standards or references or based on the expertise of the co-authors.
    Our model was later tested on an original database of 109 different urban soils
    located in 7 cities of Western Europe and under various land uses. The scores
    calculated for 8 soil functions of 109 soils followed a Gaussian distribution.
    The scoring successfully expressed the strong contrasts between the various soils;
    the lowest scores were calculated for sealed soils and soils located in urban
    brownfields, whereas the highest were found for soils located in city parks or
    urban agriculture. Despite requiring a soil expertise, the proposed approach is
    easy to implement and could help reveal the true potential of urban soils in order
    to promote smart urban planning and enhance their contribution to global health.
  doi: 10.1016/j.scitotenv.2024.171347
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical abstract Keywords 1. Introduction 2. Materials
    & methods 3. Results 4. Discussion 5. Conclusion CRediT authorship contribution
    statement Declaration of competing interest Acknowledgements Data availability
    References Show full outline Figures (4) Tables (6) Table 1 Table 2 Table 3 Table
    4 Table 5 Table 6 Science of The Total Environment Volume 924, 10 May 2024, 171347
    Selection of soil health indicators for modelling soil functions to promote smart
    urban planning Author links open overlay panel Geoffroy Séré a, Cécile Le Guern
    b e, Antonio Bispo c, Clément Layet a, Christophe Ducommun d e, Margaux Clesse
    a, Christophe Schwartz a, Laure Vidal-Beaudet d e Show more Add to Mendeley Share
    Cite https://doi.org/10.1016/j.scitotenv.2024.171347 Get rights and content Highlights
    • Bio-physico-chemical soil parameters and reference frameworks were associated
    to create indicators of urban soil health • 29 soil indicators were combined to
    model 9 soil functions in connexion with the specific issues of urban environment
    • An original database of 109 urban soils with various land uses was created to
    test the model. • The urban soil function scores accurately reflected the differences
    in soil health. Abstract The contribution of soil health to global health receives
    a growing interest, especially in urban environment. Therefore, there is a true
    need to develop methods to evaluate ecological functions provided by urban soils
    in order to promote smart urban planning. This work aims first at identifying
    relevant soil indicators based either on in situ description, in situ measurement
    or lab analysis. Then, 9 soil functions and sub-functions were selected to meet
    the main expectations regarding soil health in urban contexts. A crucial step
    of the present research was then to select adequate indicators for each soil function
    and then to create adapted reference frameworks; they were in the form of 4 classes
    with scores ranging from 0 to 3. All the reference frameworks were developed to
    evaluate soil indicators in order to score soil functions, either by using existing
    scientific or technical standards or references or based on the expertise of the
    co-authors. Our model was later tested on an original database of 109 different
    urban soils located in 7 cities of Western Europe and under various land uses.
    The scores calculated for 8 soil functions of 109 soils followed a Gaussian distribution.
    The scoring successfully expressed the strong contrasts between the various soils;
    the lowest scores were calculated for sealed soils and soils located in urban
    brownfields, whereas the highest were found for soils located in city parks or
    urban agriculture. Despite requiring a soil expertise, the proposed approach is
    easy to implement and could help reveal the true potential of urban soils in order
    to promote smart urban planning and enhance their contribution to global health.
    Graphical abstract Download : Download high-res image (78KB) Download : Download
    full-size image Previous article in issue Next article in issue Keywords Soil
    functionsSoil indicatorsEcosystem servicesUrban soils 1. Introduction What is
    soil health? Is it just a good way to communicate about the importance of considering
    soil or is it a useful concept that can be used for assessing soils (Powlson,
    2020)? Several definitions of soil health were proposed, as exposed by Janzen
    et al. (2021). Lehmann et al. (2020) saw soil health as being an overarching concept
    including soil fertility and soil quality, encompassing a broad range of ecosystem
    functions, services and actors. Faber et al. (2022) proposed soil health to be
    seen as the current condition of the soil compared to its potential (called soil
    quality) depending on its composition, climate and land use. In this latter definition,
    soil health is measured and compared to a potential as for Human beings where
    illness will reduce your well-being. Finally, the recent EU proposal for a directive
    on soil monitoring and resilience (EC, 2023) proposed to define soil health as
    the physical, chemical and biological condition of the soil determining its capacity
    to function as a vital living system and to provide ecosystem services. They also
    propose to use soil descriptors i.e. parameters describing a physical, chemical,
    or biological characteristic of soil health. In fact, whatever the definition,
    due to soil complexity a panel of descriptors or indicators are needed to understand
    soil functioning and assess all ecosystem services delivered. Soil health indicators
    have multiple aims (Jaenicke, 1998; Herrick, 2000): (1) expressing the actual
    state of a soil in terms of soil functions; (2) expressing changes in soil state,
    as a function of external drivers (i.e. environmental changes and management);
    (3) assessing the potential resistance and resilience of a soil in response to
    disturbance; (4) for land managers, optimizing the choice of actual and future
    land use as a function of soil health; (5) evaluating the contribution of a soil
    to ecosystem functions at a wider level. Apart from meeting the previous aims,
    their ease of measurement and cost-effectiveness are also expected (Dale and Beyeler,
    2001). The essential soil properties that express the state of the soil are: (1)
    physical (e.g., solid density, soil structure), (2) chemical (e.g., cation exchange
    capacity, pH), and (3) biological (e.g., soil enzymes, respiration) (Lal, 2016).
    A distinction can be performed between inherent (e.g. soil depth) and manageable
    (e.g., bulk density, nitrogen content) properties but also considering their evolution
    kinetics, from static (e.g., soil texture) to dynamic or rapidly changing (e.g.,
    soil temperature) properties; however, such considerations are not absolute and
    strongly context-dependent (Schwilch et al., 2016). In reviews about soil health
    or soil quality indicators, Zornoza et al. (2015), Bünemann et al. (2018), Faber
    et al. (2022) and Gatica-Saavedra et al. (2023) found that the most used properties
    were chemical (soil organic carbon content, pH, available P and K, total N, electrical
    conductivity, cation exchange capacity, and mineral N, in order of occurrence),
    followed by physical (water storage, bulk density, soil texture, structural stability
    and soil depth, in order of occurrence) whereas biological are less common (soil
    respiration, microbial biomass, invertebrate diversity and/or abundance, in order
    of occurrence). The selection of soil health indicators is notably influenced
    by the cost and time required to acquire them. A further step in the selection
    process is to consider the collinearity as well as the complexity of the relationships
    between indicators (O''Sullivan et al., 2017; Bünemann et al., 2018). As a consequence,
    the standard approach is to seek for a minimum dataset that can still enable policy-making
    and policy implementation (Stone et al., 2016). However, it is highly difficult
    to reach a small set of indicators due to the complexity of soil biota and functions
    (Bispo et al., 2009; Faber et al., 2022). At last, as mentioned by Bünemann et
    al. (2018): “An indicator is only useful if its value can be unequivocally interpreted
    and reference values are available”. It is essential to associate a reference
    framework to each soil property considering each soil function (Séré et al., under
    review). Indeed, a given soil property (e.g., soil texture) could be interpreted
    differently considering one soil function – water infiltration – or the other
    – water retention -. As highlighted by recent regulations in Europe and worldwide,
    the multifunctionality of soils and their capacity to deliver ecosystem services
    to societies are of increasing importance to land planners and decision-makers.
    These soil functions need to be estimated and visualised at relevant scales in
    order to improve their consideration in land planning decisions. Whereas there
    is increasing evidence that the improvement of ecosystem services increases the
    quality of life in cities (Tardieu et al., 2021), the contribution of urban soils
    remains strongly underestimated (O''Riordan et al., 2021). Urban soils exhibit
    a large diversity of properties but are dominantly perceived as degraded by stakeholders
    (Blanchart et al., 2018b). As a consequence, their potentials are not taken into
    account in urban planning even though they can deliver a range of ecosystem services
    (Blanchart et al., 2018a). For now, only a limited number of publications tackled
    the issue of linking soil indicators to soil functions and/or soil ecosystem services
    in the urban context. Calzolari et al. (2020) developed a framework that linked
    9 soil indicators to 6 soil functions, then connected to 6 ecosystem services
    that they applied to the urban soils of Capri. This seminal and inspiring work
    had some limits that include the collection of existing soil data set with a poor
    spatial resolution and the limited number of soil properties that were considered,
    consisting only of physical and chemical parameters. Meanwhile, they succeeded
    on calculating scores that were then mapped in order to identify hotspots of ecosystem
    services. On their side, Hyun et al. (2022) selected a novel urban soil quality
    indicator set in order to evaluate 6 soil functions (physical stability and support,
    water storage and infiltration, habitat provision, organic matter stabilization,
    nutrient supply and retention, pollutant immobilization and decomposition). Then,
    they expressed the soil quality as a function of a novel urban soil quality index.
    This valuable research only focused on top soil data that minimize the contribution
    of urban soils deeper horizons and was applied only to 9 locations. Our goal is
    to develop a method to reveal the true and poorly known potential of urban soils
    in order to promote smart urban planning and enhance their contribution to global
    health. Such a method relies on the creation of an integrated model to assess
    soil functions provided by urban soils. This paper starts with the identification
    and then the selection of bio-physico-chemical soil properties that meet the expected
    criteria: easy to implement, cost-effective and adequate to fulfil the expectations
    related to urban planning and regarding soil health. Then, an architecture was
    developed that connects soil indicators to expert-based reference frameworks that
    lead to an evaluation of the relevant soil functions. R code (R Core Team, 2023)
    was created to score and compare the soils in order to enlighten their actual
    and future potential in terms of land use and management. At last, it was tested
    on a variety of 109 urban soils across Western Europe. 2. Materials & methods
    2.1. Model definition 2.1.1. Workshop organization A group of 5 urban and agricultural
    soil scientist experts, involved in the SUPRA program (Ademe, grant number: 1772C0035),
    gathered a dozen times over 2 years in a workshop format to work on the architecture
    of the model. As proposed by Faber et al. (2022), a top-down approach was developed
    in order to: i) select the main ecosystem services to be delivered by urban soil,
    ii) identify the underlying soil functions, iii) review the parameters and indicators
    linked to each function and iv) then discuss and agree on the reference frameworks
    to establish and interpret each result (Table 1). The indicators linked to the
    different functions were first listed collectively. For each function, a pair
    of experts was then appointed as responsible for providing, for each indicator
    linked to the targeted function, the selection criteria and its reference framework.
    The pairs'' proposals were then discussed during workshops. The selection was
    made iteratively as the model was constructed. Table 1. Links between the functions
    and the indicators considered essential to reflect soil health. Indicators are
    separated between in situ determination or measurement and laboratory measurement
    or analysis. Functions In situ indicators Laboratory indicators Organic matter
    cycle Soil depth Horizon color Horizon structure Horizon texture Horizon coarse
    element content Horizon organic matter/total organic carbon Horizon textural class
    Horizon Bulk density Nutrient cycle Horizon organic matter/total organic carbon
    Horizon organic matter fractions Horizon Electrical conductivity, Horizon CEC,
    Ctot, Ntot, C/N, pH, CaCO3, POlsen, Ca, K, Mg, Mn, Na, Al, Fe, Horizon active
    limestone Horizon microbial/fungal biomass Horizon enzymatic activities Vegetation
    support Biodiversity support Soil depth Topography Horizon structure Horizon texture
    Horizon Hydromorphy Surface condition: % sealing, % vegetation cover Root depth
    Presence of engineering fauna Pitfall-trap Earthworm density Horizon Bulk density
    Horizon textural class Horizon active limestone Presence of anecic worms Horizon
    diversity of biological communities Water cycle Soil depth Hydromorphy depth Horizon
    coarse element content Horizon texture Surface condition: % sealing, % vegetation
    cover, % slope Presence of engineering fauna Earthworm density Horizon Bulk density
    Horizon textural class Presence of anecic worms Contaminant cycle Land use history
    Total traces elements Horizon Traces elements (TE = Sb, As, Ba, Cd, Cr, Co, Cu,
    Hg, Mo, Ni, Pb, Se, Ti, Zn), Horizon Total organic pollutants (TOP = 16 PAH, 7
    PCBi, hydrocarbons C10-C40, VOP), Horizon clay content Horizon TOC Horizon Electrical
    conductivity, CEC, Ctot, Ntot, pH, CaCO3, POlsen, Ca, K, Mg, Mn, Na, Al, Fe, Horizon
    microbial/fungal biomass Ecotoxicological effects Horizon enzymatic activities
    CEC = cation exchange capacity; TOP = total organic pollutants; PAH = polycyclic
    aromatic hydrocarbons; PCBi = polychlorobiphenyls indicators; VOP = volatile organic
    pollutants; TOC = total organic carbon 2.1.2. List of soil functions and indicators
    based on literature survey To define a minimum set of indicators to be studied
    in urban context, the selection work was based on three elements: (1) the experience
    of the scientists involved in the research program SUPRA, (2) the work of three
    PhDs associated with the program (Blanchart, 2018; Cambou, 2018; Sauvaget, 2019),
    and (3) the search for state indicators or assessment tools available in the literature
    for urban soils. In three studies (Urban SMS, Vrščaj et al., 2008; UQualisol-ZU,
    2012; ENVASSO1), the indicator classification categories concerned general soil
    information and parameters of physical, chemical and biological soil properties.
    Contamination elements were treated separately. For the program SUPRA, the selected
    indicators had to satisfy three main ecosystem services selected by the scientist
    team: global climate regulation (via carbon storage), biomass provisioning and
    regulation of health and environmental risks linked to anthropic stresses in urban
    context. To inform these services, several functions have been identified, along
    with an initial list of the principal indicators required to adequately reflect
    the functions. Thus, six main functions have been selected to reflect soil quality
    and inform on the 3 ecosystem services. Certain functions have been divided into
    sub-functions in order to take into account the different possibilities associated
    with a given function. • Function “1 - Storage, recycling and transformation of
    organic matter” named “Organic matter cycle” reflects the soil''s capacity to
    store carbon. A good storage capacity will enable the development of the organic
    matter recycling function, which will depend mainly on biological activity (see
    also function 5 - Biodiversity support) and environmental conditions (e.g. presence
    of water, temperature). This function supports the service global climate regulation.
    • Function “2 - Retention and supply of nutrients (decomposition of organic matter)”
    named “Nutrient cycle” provides information on the soil''s capacity to supply
    plants, via their root systems, as well as soil organisms, with the nutrients
    required for their metabolic activity and development. Three sub-functions were
    listed: “2.1 Nutrient storage”, “2.2 Nutrient retention capacity” and “2.3 Nutrient
    recycling”. This function supports the service biomass provisioning. • Function
    “3 - Physical support – habitat” named “vegetation support” reflects the soil''s
    capacity to provide physical support for vegetation, as well as a habitat for
    biodiversity. For plants, the soil must anchor their roots and enable them to
    develop harmoniously without mechanical or physical constraints. This function
    supports the service biomass provisioning. • Function “4 - Water retention, circulation
    and infiltration” named “Water cycle” reflects, on the one hand, the soil''s capacity
    to retain useful water within its porosity (notion of useful reserve) and, on
    the other, the soil''s contribution to water infiltration (particularly rainwater),
    as opposed to run-off. This function is therefore linked to the ecosystem services
    of biomass supply and regulation of environmental risk through flood regulation.
    Two sub-functions were listed: “4.1 Water retention capacity” and “4.2 Water infiltration”
    in surface and along the profile. • Function “5 - Biodiversity support” reflects
    the soil''s capacity to support biodiversity. The indicators selected aim to qualify
    the presence and activity of different biological groups. Such function supports
    several ecosystem services and so the three ecosystem services selected. • Function
    “6 - Contaminant retention, filtration and degradation” named “Contaminant cycle”
    reflects the soil''s capacity to cope with contaminants. The indicators selected
    aim to qualify the presence or stock of contaminants, bearing in mind that their
    subsequent fate (infiltration, transfer, sorption, degradation, etc.) will depend
    in particular on biological activity (see function 5 - Biodiversity) and environmental
    conditions (e.g. flow properties, presence of water, vegetation, temperature).
    These elements have not been developed here, because if contaminants are found
    to be present, specific studies will have to be carried out to verify their compatibility
    with use. Thus, for this function, only stocks have been considered and supported
    the ecosystem service regulation of health and environmental risks. The set of
    indicators has been exhaustively listed to describe the selected functions of
    the soil (Table 1). As we wanted our approach to be used directly on the field,
    when doing the investigations, we also defined not only indicators measured with
    laboratory equipment but also in situ ones, using sensitive observations as for
    color, texture, structure. 2.1.3. Indicator selection The set of indicators to
    be selected must make it possible to define a list that combines both rapid, reliable
    and operational field observations/measurements and laboratory measurements or
    analyses. To define the set of indicators, the method used consisted in selecting
    the most relevant indicators based on various criteria: (1) usefulness of the
    indicators for assessing the functions and services selected, (2) complexity of
    assessment or measurement, and cost of acquisition, (3) significance of selected
    indicators vs. operationality for planners and stakeholders and (4) interactions
    between indicators. Moreover, as far as possible, indicators should be evaluated
    using value-range reference systems, and their acquisition should be based on
    well-defined measurement standards. For the research program SUPRA, 29 indicators
    - evaluated or measured in situ or in the laboratory - were selected among the
    60 previously listed in Table 1 (Table 2). The selection was based on: their relevancy
    towards soil functions, the availability of stabilized methods (standardized when
    available) and an existing reference framework. Operational and economic issues
    were also considered. Some soil indicators are used for estimating several functions
    or subfunctions. For example, soil texture is used in 6 functions or subfunctions,
    and bulk density in 4 of them. Some indicators are used in two functions or subfunctions
    like organic C. The other ones are used in only one function or subfunction. This
    is the case for instance of the diversity of soil biological communities. The
    expertise required for data acquisition and the average cost were evaluated by
    the scientist experts (Table 2). Table 2. List of indicators selected to contribute
    to the nine expected functions and subfunctions. Indicators are classified according
    to their mode of acquisition. The level of acquisition and the cost were estimated.
    Indicators Measurement situation Level of acquisition Cost Soil functions Organic
    matter cycle Nutrient cycle Vegetation support Water cycle Biodiversity support
    Contaminant cycle Nutrient storage Nutrient retention capacity Nutrient recycling
    Water retention capacity Water infiltration Land use history Offices Medium ++
    x Slope In situ description Easy + x Surface situation Easy + x x x Soil depth
    Medium + x x x x Hydromorphy depth Expert + x x Horizon color Easy + x x Horizon
    structure Expert ++ x x x x x x Presence of artefacts Medium + x Color of artefacts
    Easy + x Smell Medium + x Root depth Easy ++ x Presence of engineering fauna Medium
    + x x Pitfall-trap In situ measurement Medium + x Earthworm density Medium + x
    Horizon texture and textural class In situ description/measurement and/or lab.
    measurement/analysis Medium ++ x x x x x x x Horizon coarse element content Medium
    ++ x x x x x x Horizon electrical conductivity Easy + x Horizon water pH Easy
    + x x x x Horizon Trace Elements Medium +++ x Horizon Trace Organic Pollutants
    Expert +++ x Horizon bulk density Laboratory measurement/analysis Expert + x x
    x x x Horizon TOC Medium ++ x x Horizon total nitrogen Medium ++ x Horizon C/N
    ratio Medium ++ x x Horizon CEC Medium ++ x x Horizon POlsen, Medium ++ x x Horizon
    total and active CaCO3 Easy ++ x x Horizon microbial DNA Expert +++ x x Horizon
    enzymatic activity Expert +++ x x TOC = total organic carbon; CEC = cation exchange
    capacity; DNA = deoxyribonucleic acid 2.1.4. Soil functions scoring For each indicator
    and each function listed in Table 2, four value classes have been defined in order
    to assign it a score ranging from 3 (being a good value) to 0 (being the lowest
    one). The choice of value classes was based on literature data and/or expert opinion
    within the 5-person working group (cf.§2.1.1). To assess the accuracy of the value
    classes defined, a confidence index (CI) was assigned to each indicator based
    on the concordance of the sources of information used to define the value classes.
    The best score of 3 was awarded when several references available in the literature
    were in agreement, a score of 2 if several references were available but not in
    agreement and the programme''s experts had to choose the best reference, a score
    of 1 if only one reference was available and the experts gave an opinion, and
    finally a score of 0 if no reference was available. A relevance index (RI) was
    also estimated for each indicator to reflect its level of interest in calculating
    the function: a score of 3 indicated that the indicator was indispensable, a score
    of 2 that it was essential, a score of 1 that it was important but could be dispensed
    with for calculating the function because of the difficulty of acquiring it, and
    a score of 0 that it was not useful. A score was given either for the surface
    (e.g. slope, vegetation cover), for the soil profile (e.g. soil depth, earthworm
    density) or for a horizon. For each rated soil horizon, the notation value was
    weighted by its thickness relative to the total soil depth. This means that some
    of the values assigned to an indicator may be not integer values. The scoring
    method by function was based on the same aggregation principle as that developed
    in the Research program Destisol (Séré et al., under review; Ademe, grant number:
    1372C0059). This involved calculating an arithmetic average of the function indicators
    defined for the soil surface or profile or a horizon weighted by its thickness.
    The program''s experts developed the hypothesis that failure of certain indicators
    could strongly constrain the functioning of the soil. It was proposed to associate
    the notion of downgrading with certain indicators considered prohibitive in order
    to assign a score to the function (Table 3, Table 4, Table 5). This latter concept
    was preferred to that of indicator weighting, which remained complex to establish.
    For example, for the “infiltration (vertical vs. runoff)” function, we considered
    the “presence of surface crust” and “texture” indicators to be “downgrading”.
    This means that if one of these indicators has a score of 0, whatever the values
    of the other indicators, the function score will also be zero. Table 3. List of
    indicators to be described or measured directly in situ for the concerned functions
    and subfunctions (function 1 = organic carbon cycle; function 2.1 = nutrient storage,
    function 2.2 = nutrient retention capacity, function 2.3 = nutrient recycling;
    function 3 = vegetation support; function 4.1 = water retention capacity, function
    4.2 = water infiltration; function 5 = biodiversity support; function 6 = contaminant
    support). The rules of notation are defined between 0 and 3 (0 = bad value and
    3 = good value). For each indicator, confidence index (CI) and relevance index
    (RI) are defined between 0 and 3 (0 = bad value and 3 = good value). References
    are given when available, if no expertise is required. Indicator Function ID Situation
    Unit Score Rule Lower boundary Upper boundary Downgrading factor CI RI Reference
    Land use history 6 Surface Description 0 or Potential source of pollution with
    high impact Confirmed pollution YES 2 3 Le Guern et al., 2018b 1 or Residual pollution
    not compatible with sensitive use Potential source of pollution with medium impact
    2 or Residual pollution compatible with sensitive use Potential source of pollution
    with low impact 3 or No source of potential contamination No pollution verified
    Slope 4.2 Surface % 0 > 15 NO 3 3 Laubier, 2001; Aurousseau et al., 1998 1 between
    5 15 2 between 2 5 3 between 0 2 Surface Situation % sealing % vegetation Cover
    3, 4.2 Surface Description 0 = Battance crust or sedimentary crust YES function
    4.2 3 3 Le Bissonnais et al., 2003 1 = Massive clay or structural crust >70 %
    2 = Equilibrate texture and medium structure and structural crust <70 % 3 = Sandy
    or no crust 5 Surface Description 0 or Bare soil Sealed soil NO 2 3 Expertise
    1 = Spare vegetation (surface cover < 25 %) 2 or Cultivation (surface cover over
    50 %) Meadow (surface cover over 75 %) 3 = Dense vegetation (surface cover >90
    %) Soil depth 1 pit cm 0 < 10 NO 3 3 Expertise: carbon storage hypothesis down
    to 50 cm 1 between 10 50 2 between 50 100 3 > 100 2.1, 3, 4.1 pit cm 0 < 25 YES
    function 3 3 3 Expertise 1 between 25 50 2 between 50 100 3 > 100 Hydromorphy
    depth 2.3, 4.2 Pit or auger Description 0 < 25 NO 2 2 Expertise 1 between 25 60
    2 > 60 3 = Absence Horizon color 2.2, 3 Pit or auger Type 0 = Light grey/white/white
    1 NO 3 3 Munsell code read vertically 1 = Brown to light red brown 2 2 = Brown
    to dark red brown 3 or 4 3 = Very dark/blackish 6 or 8 Horizon structure 1, 2.2,
    2.3, 3, 4.1 Pit Description 0 or Compact or lamellar or columnar (5–15 cm) or
    columnar/prismatic (>15 cm) NO 3 3 Schoeneberger et al., 2012 Expertise 1 = Structureless
    2 or Coarse crumbly or polyhedral (2–5 cm) 3 or Fine crumbly or polyhedral (<2
    cm) 5 Pit Description 0 or Compact or lamellar (5–15 cm) NO 3 2 1 = Structureless
    (<0.2 cm) or columnar/prismatic (>15 cm) 2 or Fine polyhedral (<2 cm) Coarse polyhedral
    (2–5 cm) 3 or Fine crumbly (<2 cm) Coarse crumbly (<2 cm) Presence of artefacts
    or natural Trace Elements anomalies 6 Pit or auger Description 0 = T4 = asphalt,
    bitumen, tar, coal T4 = slag, bottom ash, fly ash, soot, pyrite, foundry sand
    NO 3 3 Le Guern et al., 2016, Le Guern et al., 2017, Le Guern et al., 2018a 1
    = T0.5 = Micaschists and other rocks susceptible to lead to natural trace element
    anomalies T4a = wood coal 2 = T3 = rubble, bricks, concrete, plaster, paving stones,
    blocks, building demolition T3 = slate, ceramics, glass 3 = Pedological materials
    Low geochemical background rock Color of artefacts 6 Pit or auger Description
    0 = Violet, burgundy, blue (Prussian blue) NO 3 3 Le Guern et al., 2016, Le Guern
    et al., 2017, Le Guern et al., 2018a Expertise 1 = Black (not peat) 2 = Orange,
    rust, grey dark 3 = Other Smell 6 Pit or auger Description 0 or Strong hydrocarbon
    or bitter almond or solvent YES 2 3 Expertise 1 or Moderate hydrocarbon or bitter
    almond or solvent 2 or Light hydrocarbons or bitter almond or solvent or sulfur
    or H2S 3 or No or mud or peat or organic matter or iron Root depth 2.3 Pit cm
    0 < 25 NO 2 3 Expertise 1 between 25 50 2 between 50 100 3 > 100 Presence of engineering
    fauna 2.3, 5 Pit Description 0 = No NO 3 3 Expertise for each type 1 = Low 2 =
    Medium 3 = High Pitfall-trap 5 Surface Group number 0 = 0 NO 3 1 Expertise for
    each type 1 between 0 2 2 between 2 10 3 > 10 Earthworm density 5 Surface Number
    m−2 0 < 25 NO 3 2 French national observatory of biodiversity 1 between 50 150
    2 between 150 300 3 > 300 Table 4. List of indicators to be described or measured
    in situ and measured or analysed in laboratory for the concerned functions and
    subfunctions (function 1 = organic carbon cycle; function 2.1 = nutrient storage,
    function 2.2 = nutrient retention capacity, function 2.3 = nutrient recycling;
    function 3 = vegetation support; function 4.1 = water retention capacity, function
    4.2 = water infiltration; function 5 = biodiversity support; function 6 = contaminant
    support). The rules of notation are defined between 0 and 3 (0 = bad value and
    3 = good value). For each indicator, confidence index (CI) and relevance index
    (RI) are defined between 0 and 3 (0 = bad value and 3 = good value). Standards
    and references are given when available, if no expertise is required. Indicator
    Function ID Situation Unit Score Rule Lower boundary Upper boundary Downgrading
    factor CI RI Standard Reference Horizon texture Horizon textural class 1 Pit Description
    or g kg−1 0 = Sandy NO 3 3 NF EN ISO 17892-4 Duchaufour, 1997 Expertise 1 = Loamy
    2 = Balanced 3 = Clayey 2.2, 2.3, 3 0 = Sandy NO 1 = Loamy 2 = Clayey 3 = Balanced
    4.1 0 = Sandy NO 1 = Clayey 2 = Loamy 3 = Balanced 4.2 0 = Clayey YES 1 = Loamy
    2 = Balanced 3 = Sandy Coarse element content 1, 4.1 Pit Description or %vol 0
    > 40 NO 2 3 NF EN ISO 17892-4 GEPPA, 1981 1 between 20 40 2 Between 10 20 3 <
    10 2.1, 2.2, 3 0 < 50 NO 3 3 1 between 30 50 2 between 15 30 3 > 15 4.2 0 < 0
    5 YES 3 2 1 between 5 10 2 between 10 20 3 > 40 Horizon electrical conductivity
    2.1 Pit or auger μS cm−1 0 > 2000 NO 3 3 NF ISO 11265 Durand, 1983 1 between 1000
    2000 2 between 500 1000 3 < 500 Horizon water pH 2.1, 2.2, 2.3 Pit or auger 0
    < or > 5.5 8.5 NO 3 3 NF ISO 10390 GEPPA, 1981 1 between 5.5 6.5 2 between 7.5
    8.5 3 between 6.5 7.5 Horizon TE (pXRF, ICP) 6 Pit or auger mg kg−1 Dry matter
    0 > 10xNPGB YES 3 3 pXRF NF EN ISO 13196 ICP NF EN 16170/NF EN 16171 Ademe 2018
    Coussy et al., 2020 Expert say 1 between 2xNPGB 10xNPGB 2 between NPGB 2xNPGB
    3 < <NPGB Horizon TOP 6 Pit or auger mg kg−1 Dry matter 0 > >C (Pollution to manage)
    YES 3 3 PAH = ISO 13859 PCBi = NF EN 16167 C10-C40 = NF EN ISO 16703 VOP = NF
    EN ISO 15009 Coussy et al., 2020 Expert say 1 between A C 2 < Quantification limit
    A 3 < Quantification limit Or NPGB for persistent substances (PAH) TE = trace
    elements; pXRF = portable X-ray fluorescence; ICP = inductively coupled plasma;
    TOP = trace organic pollutants; A and C refer to threshold values for each substance,
    NPGB = natural pedo-geochemical background values; PAH = polycyclic aromatic hydrocarbons;
    PCBi = polychlorobiphenyls indicators; VOP = volatile organic pollutants Table
    5. List of indicators to be measured or analysed only in laboratory for the concerned
    functions and subfunctions (function 1 = organic carbon cycle; function 2.1 =
    nutrient storage, function 2.2 = nutrient retention capacity, function 2.3 = nutrient
    recycling; function 3 = vegetation support; function 4.1 = water retention capacity,
    function 4.2 = water infiltration; function 5 = biodiversity support; function
    6 = contaminant support). The rules of notation are defined between 0 and 3 (0
    = bad value and 3 = good value). For each indicator, confidence index (CI) and
    relevance index (RI) are defined between 0 and 3 (0 = bad value and 3 = good value).
    Standards and references are given when available, if not expertise is required.
    Indicator Function ID Situation Unit Score Rule Lower boundary Upper boundary
    Downgrading factor CI RI Standard Reference Horizon bulk density 1 Pit g cm−3
    0 < 1.2 NO 3 3 NF EN ISO 11272 Hanks and Lewandowski, 2003 1 between 1.2 1.5 2
    between 1.5 1.7 3 > 1.7 2.2, 3 0 < or > 0.8 1.7 NO 1 between 1.5 1.7 2 between
    1.2 1.5 3 between 0.8 1.2 4.1 0 > 1.8 NO 1 between 1.5 1.8 2 between 1.2 1.5 3
    < 1.2 4.2 Type 0 = Impermeable NO Expertise 1 = High compactness: impossible to
    insert a knife blade in the soil 2 = Medium compactness: possible to insert a
    knife blade in the soil 3 = Low compactness: easy to insert a knife blade in the
    soil Horizon total organic carbon (COT) 1, 2.2 Pit or auger g 100 g−1 0 < 1.2
    NO 3 3 NF ISO 10694 Expertise 1 between 1.2 3.5 2 between 3.5 5.8 3 > 5.8 Horizon
    total Nitrogen (Ntot) 2.1 Pit or auger g kg−1 0 < 2 NO 3 3 NF ISO 11261 Expertise
    1 between 2 10 2 > 20 3 between 10 20 Horizon C/N (COT/Ntot) 2.3 Pit or auger
    0 > 20 NO 3 3 Expertise 1 < 8 2 between 12 20 3 between 8 12 Horizon Cationic
    exchange capacity (CEC) 2.2 Pit or auger cmol kg−1 0 < 8 NO 3 3 NF X31–130 Expertise
    1 between 8 15 2 between 15 25 3 > 25 Horizon POlsen 2.1 Pit or auger g kg−1 0
    < 0.04 NO 2 2 NF ISO 11263 Expertise 1 between 0.04 0.06 2 > 0.10 3 between 0.06
    0.10 Horizon active CaCO3 2.2 Pit or auger g kg−1 0 > 250 NO 3 3 NF X31-106 GEPPA,
    1981 1 between 150 250 2 between 70 150 3 < 70 Horizon microbial DNA 5 Pit or
    auger μg g−1 0 < 10 NO 3 2 NF EN ISO 11063 Horrigue et al., 2016 Dequiedt et al.,
    2011 Terrat et al., 2017 Karimi et al., 2018 1 between 10 50 2 between 50 100
    3 > 100 Horizon enzymatic activity Arylamidase 5 Pit or auger nmol min−1 g−1 0
    < 3.1 NO 3 2 NF EN ISO 20130 Arvalis et al., 2022 1 between 3.1 5.2 2 between
    5.2 7.1 3 between 7.1 13.7 Horizon enzymatic activity β-D-Glucosidase 5 Pit or
    auger nmol min−1 g−1 0 < 12.6 NO 3 2 NF EN ISO 20130 Arvalis et al., 2022 1 between
    12.6 18.6 2 between 18.6 23.4 3 between 23.4 54.5 At the end, all 9 soil functions
    and sub-functions have been scored individually and their mean value and sum could
    also be calculated to assess soil health. 2.1.5. Coding of the model The set of
    indicators was transcribed in an R program, via an Rstudio interface. The code
    aimed to make the indicator evaluation as accessible as possible for non R users,
    and to make easier any modification of valuation rules. Information on the different
    physicochemical properties came from a single Excel file, filled in by the different
    users. Output Excel files included scores of different indicators for each soil,
    and an indication of the quality of the scores obtained, according to the status
    of the various values given in the database: measured, estimated, or missing.
    The given proportion of missing values was essential to moderate the quality of
    the information, and possibly consider the need for new measurements to enrich
    the database. The current R program and input files will be later published. 2.2.
    Urban soils'' database The urban soils'' database, created on purpose, consists
    of 109 soil pits, located in 8 various cities across Western Europe, in 49 different
    sites. They are all located in urban or peri-urban areas in the following cities
    of France (FR) Switzerland (SW) and Spain (SP): FR-Angers (7 soils), SW-Lausanne
    (5 soils), FR-Marseille (16 soils), FR-Nancy (25 soils), FR-Nantes (18 soils),
    FR-Paris and peri-urban area (23 soils), FR-Rennes (2 soils), SP-Santiago de Compostela
    (13 soils). The corresponding climates of all locations are: i) Angers, Nantes,
    Rennes, Santiago de Compostela: Temperate oceanic climate; ii) Lausanne, Nancy,
    Paris: Temperate semi-continental climate; iii) Marseille: Temperate Mediterranean
    climate. The 109 soils that were observed, described, sampled and analysed had
    different land uses that were classified into 5 different classes: urban park
    (19 soils), sealed soil (5 soils), site under development, prior to any earthwork
    (35 soils), urban agriculture (19 soils), and urban brownfield (31 soils). Apart
    from the soil bio-physico-chemical parameters, only the soil cover was roughly
    described considering 4 different types: bare soil (24 soils), sparse vegetation
    (59 soils), dense vegetation (7 soils), garden vegetable (19 soils). The location
    and sampling strategy were various because of the method to create the database;
    whereas multiple soils were investigated on a single site, especially in Nancy,
    Marseille and Nantes, only one soil per site was dominantly studied in the other
    cities. To create such a large and original database, data were acquired in the
    frame of the SUPRA program but were also gathered from other research projects.
    As a consequence, not all the parameters that are required in our model were available.
    Overall, there was 21 % of missing data considering all soil indicators. Soil
    contamination is mostly concerned by lacking data (81 %) and inability to evaluate
    the linked function. This is due to the fact that some new indicators (e.g. linked
    to artefacts) are described on 19 % of samples only. Actually, some early campaigns
    did not include contamination aspects at all because no contamination was suspected
    (e.g. past use of the site). On the opposite, there was only 2 % of missing data
    regarding water retention and nutrient retention. By excluding soil indicators
    related to contamination, there was 13 % of missing data in our database. 3. Results
    3.1. Creation of reference frameworks for soil indicators to score soil functions
    Indicators were described in different tables according to the type of acquisition:
    in situ (Table 3), in situ and/or in the laboratory (Table 4) and only in the
    laboratory (Table 5). For each indicator, the function(s) concerned were specified.
    The observation type or sampling zone were then indicated: on the soil surface,
    on the entire soil profile or in each horizon. A unit of qualification or quantification
    was associated with each indicator. Then, the construction of reference frameworks
    had been performed. It consisted in the definition of upper and lower boundaries
    in 4 distinct classes for all soil indicators in all functions and sub-functions.
    It has to be noted that, for the same soil indicator, different reference frameworks
    could have been developed, depending on the functions or sub-functions considered.
    For example, “Coarse element content” (Table 4) was used to score 6 functions
    or sub-functions, and required 3 different reference frameworks to score them.
    This indicator could have opposite scores for the same reference: “lower bound
    >40” = 0 or 3 for functions 1–4.1 and function 4.2 respectively. When reference
    frameworks for some given soil indicators were available, their origins were specified
    in Table 3, Table 4, Table 5. In Table 4, Table 5, which correspond to indicators
    measured or analysed in the laboratory, standards were also indicated when available.
    The fact that the indicator was possibly downgraded in terms of soil function
    was also specified. There were no degrading indicators for functions 1 (Organic
    matter cycle), 2 (Nutrient cycle), 5 (Biodiversity support). For function 3 (Vegetation
    support), only the “soil depth” indicator, with a value of <25 cm, was considered
    as downgrading. For sub-function 4.2 (Water infiltration), several indicators
    were downgraded because they did not enable the desired function to be fulfilled:
    (1) “surface situation” with a highly impermeable surface that favours runoff
    and not vertical infiltration, (2) “Horizon texture” for which the high clay content
    limits macroporosity and water infiltration and (3) “Coarse element content” with
    a volume value of <5 % does not favour water penetration into the soil. And finally,
    for function 6 (Contaminant cycle), several indicators were considered prohibitive
    for the use of a site: (1) “Land use history”, which may reveal a past that is
    certain to induce pollution in situ, (2) “Smell”, which is a characteristic indicator
    of the presence of certain pollutants, (3) “Horizon trace element” when values
    exceed authorized thresholds and (4) “Horizon trace organic pollutants” when values
    exceed authorized thresholds. For each soil indicator, the confidence and relevance
    indexes were estimated (Table 3, Table 4, Table 5). As defined in Section 2.1.4,
    the confidence index (CI) values of all the indicators were good and all between
    2 and 3. For the relevance index (RI), the values were also between 2 and 3 except
    for the “Pitfall-trap” indicator (Hedde et al., 2012; Auclerc et al., 2019) which
    had a value of 1 (Table 3). Indeed, this indicator required specific skills for
    soil macro and mesofauna identification. There is a strong operator effect in
    the determination of species which makes this indicator more sensitive to use
    and more variable. The total number of indicators used to assess the functions
    or sub-functions ranged from 5 (Function 4.1 Water retention capacity) to 13 (Function
    6 Contaminant cycle) (Table 2). Six functions (Function 1 Organic matter cycle,
    Function 2.1 Nutrient storage, Function 2.3 Nutrient recycling, Function 3 Vegetation
    support, Function 4.1 Water retention capacity, Function 4.2 Water infiltration)
    would require a low number of indicators - 5 to 7 - which are often indicators
    that are easy to describe or measure (Table 2). Functions linked to biomass provisioning
    (i.e. sub-functions 2 that express nutrients storage, retention capacity and recycling,
    function 3 that expresses roots anchorage and sub-function 4.1 that expresses
    water retention for plants) integrated all soil indicators linked to plant growth
    including the soil structure and depth for roots development, the access to water
    and nutrients and the presence of soil organisms and their activity. Function
    2.2 (Nutrient retention capacity) required the determination of 9 indicators,
    7 of which were determined in the laboratory. However, these indicators are measured
    or analysed routinely and do not require specialist expertise. Function 5 “Biodiversity
    support” was assessed by 8 indicators, 5 of which were determined solely with
    field observations and determinations as the depth of plant roots, abundance of
    soil invertebrates (through Barber pot or earthworms counting) and/or the presence
    of soil engineering fauna through its activity (e.g. burrow, casts) were included.
    At laboratory step, measurements of bacterial amount and activity through respectively
    DNA quantity assessment and enzymatic activities were also included. Doing so,
    several groups of organisms were included in our evaluation process that included
    abundance, diversity and activity and required considerable skill in terms of
    species identification. Note that all references come from agricultural situations.
    Function 6 “Contaminant cycle” was the most demanding in terms of the number of
    indicators (13) to be determined in order to satisfy an appropriate interpretation.
    This function focused on the stock of contaminants because modelling retention
    was considered too complex to achieve with a reduced dataset. The potential of
    degradation was not considered either because it could be derived from the biodiversity
    index and may be interesting only when organic contaminants are present. Contaminant
    infiltration was linked to the infiltration capacity of soils which is already
    considered in the water function. The soil retention capacity of contaminant depended
    on the contaminant itself and on the presence of organic and mineral bearing phases
    (like SOM, clay, iron or manganese oxi(hydro)xides), as well as on the physico-chemical
    properties of soil (pH, Eh, temperature) and humidity. The indicators considered
    to feed to the soil contaminant stock function help verify if there is a contamination
    issue or not. Most of them were considered as downgrading factor (Table 3, Table
    4). Land use history must be studied first in the office to verify the presence
    of any former activity that may have led to point source contamination (e.g. industrial
    or service activity, mining). Field observation were essential to find out traces
    of such activity. In case of a contamination issue, a verification of the compatibility
    between soil quality and the future use is first necessary. In case of incompatibility,
    either a change of use or the management of the pollution is mandatory. Because
    anthropogenic deposits are numerous in the urban area, and may be intrinsically
    contaminated (Le Guern et al., 2018a), attention must be paid to the presence
    of artefacts. They were classified according to their intrinsic potential of pollution
    and to their color (Table 3). T4 refers to materials with a high potential of
    pollution like industrial waste such as slag, fly ash, or tar, T3 to demolition
    materials that show often higher PCB contents (Le Guern et al., 2016, Le Guern
    et al., 2017, Le Guern et al., 2018a). Considering that some materials of natural
    origin may be enriched in trace elements, a special class (T0.5) was set to take
    this into account. As a consequence, in situ natural materials in place with a
    potential natural enrichment in trace element were considered together with this
    type of anthropogenic deposits. In addition, smell was also an easy parameter
    to detect some contamination issues (like fuel, solvent or benzene). Finally,
    the content of trace organic pollutants (TOP) and trace elements (TE) were necessary
    to attest the level of contamination. Table 6 shows the threshold values selected,
    based on the French references for excavated material management and pedo-geochemical
    national reference values. The ‘2xNPGB’ threshold value (Table 4) was expected
    to be replaced as soon as available by LPGB (local pedo-geochemical background)
    values. Some organic volatile substances were integrated in the list. Attention
    must be paid to the sampling procedure for such substances. The threshold A values
    proposed for organic pollutants refer to a relative sensitive reuse of excavated
    soils in redevelopment projects (under 30 cm of a topsoil layer in green space,
    under building or parking) (Coussy et al., 2020). Threshold C values correspond
    to higher values admitted for less sensitive use (road or landscape). Specific
    values may be calculated through sanitary risk assessment based on exposure scenarios
    linked to the current or future soil use. Table 6. Threshold values for contaminants
    (selected from Coussy et al., 2020; Ademe, 2018; *other sources or expert say),
    **NPGB: natural pedo-geochemical background, France example). A and C refer to
    threshold values for each substance, QL for quantification limit. Trace elements
    NPGB** Total organic pollutant A C QL As 25 C10-40 50 500 15 Ba 150 Benzene 0,05
    0,05 0,05 Cd 0.4 TEX 1,5 6 0,05 Co 20 Sum16PAH 10 100* 1 Cr 90 Sum7PCBi 0,1 1
    0,01 Cu 40 CVOC_PCE 0,2 1 0,05 Hg 0.1 CVOC_TCE 0,1 1 0,05 Mo 1.5 CVOC_DCE 0,1
    0,3 0,1 Ni 60 CVOC_CV 0,1 0,2 0,02 Pb 50 Dioxines_Furannes (PCDD-PCDF) 2 5* 0,5*
    Sb 1 Pesticides 0,1* 2* 0,01* Se 1 Tl 1.2* Zn 150 PAH: polycyclic aromatic hydrocarbons;
    PCBi: polychlorobiphenyl indicators; TEX: toluene, ethylbenzene, xylene; CVOC:
    chlorinated volatile organic compounds; PCE: pentachloroethylene; TCE: trichlororethylene;
    DCE: dichloroethylene; CV: vinylchoride; PCDD: polychlorodibenzo-p-dioxines; PCDF:polychlorodibenzo-furanes.
    3.2. Scores of soil functions Scores have been calculated for 8 soil functions
    and sub-functions based on the data from the 109 soil pits (13 % of missing data,
    with a limited influence that was not assessed here). Overall, considering all
    soil functions and all soils, scores were ranging from 0 to 3, the average score
    being 1.66 ± 0.3. The distribution of the scores of all functions (872 scores)
    was of Gaussian-type (Fig. 1). The most frequent scores were between 1.5 and 2
    (339; 39 %), then between 2 and 2.5 (210; 24 %) and between 1 and 1.5 (178; 20
    %). The rarest scores were 3 (1; 0.1 %), between 0 and 0.5 (9; 1 %), 0 (34; 4
    %), between 0.5 and 1 (53; 6 %), and between 2.5 and 3 (48; 5 %). Download : Download
    high-res image (176KB) Download : Download full-size image Fig. 1. Distribution
    of the scores of soil functions calculated by the model for the 109 studied soils.
    The functions “Nutrient retention capacity”, “Vegetation support”, “Water retention”,
    “OM cycle” and “Water infiltration” were relatively high and almost similar (respectively
    1.79 ± 0.37, 1.79 ± 0.52, 1.76 ± 0.47, 1.73 ± 0.41 & 1.66 ± 1.01) (Fig. 2). “Nutrient
    storage” and “Nutrient recycling” scores were slightly above the average score
    (respectively 1.58 ± 0.5 & 1.52 ± 0.41). The lowest scores are the one for “Biodiversity”
    (1.42 ± 0.61). The highest variations were noted for “Water infiltration”, “Biodiversity”,
    “Vegetation support” and “Nutrient storage” (respectively 1.01, 0.61, 0.52 and
    0.50) and the smallest for “Nutrient retention capacity (0.37). There were 34
    “0” scores, mostly for “Water infiltration” (27 soils) - due to the presence of
    multiple sealed soils -. Oppositely, the only 3 score was also accounted for “Water
    infiltration”. Apart from these 8 functions, the scores of the function “Contaminants
    cycle” was considered apart, due to the high ratio of missing data; it has the
    highest medium score (2.67 ± 0.6) expressing the fact that a limited number of
    the studied urban soils exhibited significant contamination. Download : Download
    high-res image (220KB) Download : Download full-size image Fig. 2. Scores of soil
    functions and subfunctions calculated by the model for the 109 studied soils sorted
    by soil functions. Considering the mean values and sum of all soil functions''
    scores (Fig. 3), only one soil had a mean value lower than 1 and a sum of 4/24;
    this soil appeared to be a very shallow Constructed Technosol in small wooden
    boxes dedicated to rooftop urban agriculture (Grard, 2017). Seventeen soils had
    mean between 1 and 1.5 and sums of soil functions between 10 and 13/27; there
    were mainly sealed soils and urban brownfields. Sixty-eight soils had mean scores
    between 1.5 and 2 and sums of soil functions between 14 and 17/27; they were very
    various soils but with a dominance of soils sampled during urban development projects.
    Twenty-three soils had mean scores between 2 and 2.5 and sums of soil functions
    between 18 and 22/27; they were all located in city parks. Surprisingly, the soil
    with the higher score (mean value of 2.45 and sum of 20/24) is a spontaneously
    revegetated urban brownfield located in Marseille that was left over for many
    years. Interestingly, another soil from the same site had also a high score (mean
    value of 2.29 and sum of 18/24) considering all functions except “contamination”;
    but, for this last and crucial function in the urban context, the score is 0/3
    - based on the acquired indicators - expressing a high contamination that leads
    to a strong degradation of soil functioning. Download : Download high-res image
    (676KB) Download : Download full-size image Fig. 3. Soil health evaluation based
    on sum of scores of soil functions calculated by SUPRA for the 109 studied soils
    sorted by soils ID. 4. Discussion 4.1. Adapting the scores to urban soils As stressed
    for the indicators used to assess biodiversity, the main existing reference frameworks
    come from agricultural context since only limited operational researches have
    been conducted on urban soils. The situation is different for the concentration
    of contaminants in soils as several references already exist (see Table 6) for
    urban soils since trace elements and organic contaminants are currently measured
    in urban situations. For all other indicators, references in agricultural soils
    compared to urban ones may be quite different. As an example, Joimel et al. (2017)
    showed that agricultural soils exhibited lower abundance and diversity of soil
    microarthropod than urban soils - being strongly diverse - that were similar to
    forest soils. This point should be improved by investigating more urban sites
    to develop proper references. Note that quite all reference values (e.g. NPGB,
    Table 6) considered in this work are relevant at French scale. Monitoring urban
    soils should help defining reference values at all national scales across Europe.
    All the data should then feed open databases for further reuse as stressed by
    the recent EU proposal for a directive on soil monitoring and resilience (EC,
    2023). Such interoperable databases (local-national-Europe-International) appear
    necessary in this frame. One challenge relies in harmonised analytical protocols,
    knowing that different ones are used at the moment according to countries or objectives
    (e.g. agronomical study vs pollution diagnosis). 4.2. Promoting a use of a wider
    set of soil indicators None of the samples available in our database was fully
    informed. This comes from the fact that several sites were investigated before
    starting the current research. Some parameters have been estimated while others
    are missing which impacts the scoring of several functions and subfunctions. It
    is expected that the proposed minimum dataset will be fully measured in the future,
    becoming sort of a reference protocol for data acquisition to assess urban soils
    health and subsequent decision making. For instance, a better description of the
    nature, abundance and impacts on soil functions of artefacts should be strongly
    promoted. The trace organic pollutants to be analysed depends on the context of
    each site, which should be better taken into account in the function assessment.
    Persistent substances should be systematically analysed. Volatile substances,
    which need particular caution during sampling, should be checked only if expected.
    Obviously, a comparison of our suggested minimum dataset of soil health indicators
    to others should also be strongly encouraged. Some parameters determined at lab
    also suffer yet from high technicity and are still costly. Bulk density in particular
    is used in 4 subfunctions. Further research activity to ensure easy field acquisition
    is mandatory to check variability and render its acquisition easier with less
    error. Microbial DNA and enzymatic activities are also still costly but appear
    really relevant. Innovation is in progress and still needed to make such analyses
    less costly. For all parameters, sampling caution is mandatory, all the more as
    urban soils are heterogeneous. Urban soil mapping needs further research efforts
    to define soil units and precise their degree of heterogeneity. 4.3. Architecture
    of the model Our method is based on the diagnosis of soils, considered as 3D ecosystems
    constituted of natural or anthropogenic soil horizons. A selection of 29 soil
    indicators has to be described, measured and analysed by soil experts at the field
    or in the lab. These data are subsequently transformed into scores for 9 soil
    functions and sub-functions. A limited number of similar approaches have been
    conducted for now. Van Leeuwen et al. (2017)) assessed which soil attributes can
    be used as potential indicators of five soil functions in an agricultural context:
    (1) primary production, (2) water purification and regulation, (3) carbon sequestration
    and climate regulation, (4) soil biodiversity and habitat provision and (5) nutrient
    recycling. These authors focused on data of the upper soil horizon. They did not
    consider any indicator related to soil contamination for assessing the health
    of agricultural soil, while it is not negligible in urban context, since pollution
    linked to anthropogenic activity is frequent and can, as demonstrated here, lead
    to a strong degradation of soil functioning. Furthermore, unlike them, the “nutrient
    cycle” reference frameworks of our model are based on expectations in terms of
    landscape aesthetics or overall biomass production, but not on agronomic requirements
    as they did. At last, Van Leeuwen et al. (2017) also considered a parameter of
    relevancy, similar to our Relevance Index, but they also assessed the sensitivity
    of each indicator depending on the functions and considered weighting factors
    applied to the different indicators. Calzolari et al. (2020) focused on 9 input
    parameters that are not only soil properties (land use, land capability, pH, organic
    carbon, bulk density, soil texture, saturated hydraulic conductivity, moisture
    at field capacity, average shallow groundwater depth) that are connected to six
    soil functions (potential habitat for soil organisms, filtering and buffering,
    carbon sequestration, food provision, water regulation and water storage). This
    early work has been expanded by Ungaro et al. (2022) by adding five new input
    parameters (leaf area index, analysis of presence and diversity of microarthropods,
    cation exchange capacity, rooting soil depth, coarse fragment content). Their
    indicators were scored from 0 to 1 with various standardization methods and were
    successfully translated into maps of ecosystem services hotspots at the scale
    of Carpi (Italia). Hyun et al. (2022) proposed a set of indicators to “represent
    the soil quality of metropolitan cities and develop a novel urban soil quality
    index”. They selected 9 bio-physico-chemical soil indicators (bulk density, saturated
    hydraulic conductivity, depth of litter layer, texture, cation exchange capacity,
    fluorescein diacetate hydrolytic activity, pH, available nitrogen, total concentrations
    in 6 trace elements) to evaluate six soil functions (physical stability and support,
    water storage and infiltration, habitat provision, organic matter stabilization,
    nutrient supply and retention, pollutant immobilization and decomposition). They
    also used these soil functions to assess 10 ecosystem services and applied the
    method on 36 soils from 2 South-Korean cities. At last, the Destisol model (Séré
    et al., under review) selected 20 soil properties to evaluate 15 soil functions
    that have been later associated with soil covers to assess 18 ecosystem services.
    This method is strongly connected to our approach that aimed at improving it by
    considering a larger spectrum of soil indicators and strengthening the construction
    of the reference frameworks. Compared to the ones that are mentioned above, the
    model that has been here developed lies on a larger number of soil indicators.
    If it promotes a wider apprehension of soil health, limits of such an approach
    are: i) the necessity of a solid soil science expertise to acquire all of them,
    ii) the time needed, iii) a substantial budget required (a rough estimate of cost
    analysis, depending on the country, would be between 300 and 500 € sample−1, without
    considering the opening of the soil pit). Note that for the latter the budget
    needed of the assessment of soil functions may be quite insignificant if considering
    the overall land planning operations (e.g. building new houses, developing a commercial
    area). Three major perspectives arose. The first one would be to take into account
    the soil cover and/or the land use as it may affect the capacity of a soil to
    function. For example, an actual sealed soil health could strongly be improved
    by desealing and greening operations. Furthermore, the type of vegetation (e.g.
    lawn or tree) could influence some specific functions (e.g. water infiltration,
    biodiversity). The second one would be to go one step further by conducting an
    assessment of ecosystem services. However, such additional step could be achieved
    only by considering not only the soil compartment but also the vegetation and
    possibly the human infrastructure that would have a significant contribution (Blanchart
    et al., 2018a). At last, a crucial ambition would be to be capable of mapping
    soil functions and sub-functions and, if possible, soil health at small and larger
    scales. This would require a sufficient density of information on soil cover,
    which for now is complex to imagine considering the strong spatial variability
    of urban soils. 4.4. Towards a decision support method Soils from our cities exhibit
    a high diversity and heterogeneity without no equivalent in the nature (Morel
    et al., 2005; Béchet et al., 2009). However, urban soils actually provide a wide
    range of ecological functions and ecosystem services that appear to be essential
    for the viability of urban areas to face multiple environmental issues (O''Riordan
    et al., 2021; Morel et al., 2023). From a wider perspective, considering the connection
    between human, animal and environmental health, having soils in bad health in
    urban areas - places with the highest concentration of population - could significantly
    damage our living conditions (van Bruggen et al., 2019). As a consequence, there
    is a true need of method to reveal the poorly known potential of urban soils in
    order to improve urban planning. Our method has been tested on a database of 109
    different urban soils. It has led to a wide range of scores that revealed their
    strong differences in terms of soil health that are influenced by their actual
    land use, but not restrictively correlated to it. Such information could be truly
    useful to orientate urban planning in order to: i) preserve the healthiest soils
    from artificialization; ii) promote the valorisation of healthy urban soil instead
    of scrapping and landfilling them before replacing them by agricultural top soil
    for urban greening; iii) anticipate the remediation of soils in poor health; iv)
    target the most degraded soils for the most degrading anthropogenic land uses
    (e.g. sealing, excavation). In order to be considered by urban planners and embedded
    in a smart urban planning process, the urban soils need to be characterized. Apart
    from soil functions and soil health scoring methods - such as the one that is
    presented in this paper - it would also require a larger network of urban soils
    experts that could perform such a critical fieldwork and transform the acquired
    information into efficient and transferable information, soil maps being one of
    the possibilities. 5. Conclusion This work aimed to propose and test a robust
    and science-based method, using urban soil indicators, to reflect the soil''s
    ability to perform different functions and to reflect soil health. These indicators
    range from bio-physico-chemical soil parameters to levels of contamination or
    biological activity in a broadest sense. The “calibration” part of the reference
    frameworks was an essential and complex phase to carry out in order to interpret
    the descriptions, measurements and analyses of the urban soil indicators as accurately
    and explicitly as possible. Our method was based on a scoring system for soil
    functions and sub-functions, itself based on a scoring system for each indicator
    selected by an expert or group of experts. As can already be seen when describing
    agricultural or natural soils, the values produced for the indicators will depend
    very much on the characteristics of the area studied and the opinions of the experts.
    This is why, in order to propose a generic method for assessing the health of
    urban soils, it is essential to move on from this definition and calibration phase
    to a validation phase. This will be developed in future national and EU projects.
    In order to improve the metrics of the scores, a comparison of the model results
    with the field assessment of soil health by various soil experts could be valuable.
    The results obtained show the wide disparity of soil functions and sub-functions''
    scores in the contrasted urban soils that have been studied. This research has
    led to the creation of a first version of a tool that takes into account soil
    potential (multi-criteria evaluation integrating soil depth and volume). By definition,
    such a model aims at assessing soil functions which is a concept, without any
    explicit metrics. To move forward a “calibration-like approach”, the scores calculated
    by the model needs to be confronted to the deep and long-time knowledge of soil
    experts can interpret, in their own field of expertise (e.g. agronomy, soil hydraulics,
    soil contamination), the functioning of soils. Furthermore, comparing the scores
    to middle up to long-term monitoring of carbon sequestration, biomass production,
    water balance would be of true interest. In addition, the opportunities and limits
    of its application to a wider diversity of situations, including agricultural,
    forest or natural soils shall be explored. The semi-quantification of the soil
    functions selected in this research programme should promote and optimize the
    allocation of land uses during the urban planning process by taking into account
    the expected and potential ecosystem services. More ambitiously, the setting up
    (at national, European or even international) soil monitoring networks in urban
    environments, could enhance the establishment of metric for ecosystem functions
    and services. It would be an ambitious but decisive objective for meeting the
    environmental challenges of sustainable cities that would perfectly fit into such
    decisive initiative as the recent European Directive on Soil Monitoring and Resilience.
    CRediT authorship contribution statement Geoffroy Séré: Writing – original draft,
    Methodology, Conceptualization. Cécile Le Guern: Writing – original draft, Methodology,
    Funding acquisition, Conceptualization. Antonio Bispo: Writing – review & editing,
    Writing – original draft, Methodology, Conceptualization. Clément Layet: Writing
    – review & editing, Formal analysis. Christophe Ducommun: Writing – review & editing,
    Methodology, Conceptualization. Margaux Clesse: Writing – review & editing, Conceptualization.
    Christophe Schwartz: Writing – review & editing, Funding acquisition, Conceptualization.
    Laure Vidal-Beaudet: Writing – original draft, Methodology, Conceptualization.
    Declaration of competing interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. Acknowledgements This research is
    part of the SUPRA (grant number: 1772C0035) research project which has been funded
    by French Environmental Agency, ADEME. The authors thank Isabelle Feix, Hélène
    Roussel and Cécile Grand (ADEME) for their support and fruitful discussions. The
    authors warmly thank Baptiste Grard (ISARA), Remigio Paradelo Núñez (Universidade
    de Santiago de Compostela) and Antoine Vialle (EPFL) for sharing their soils data.
    This work was also irrigated by the discussions within the European Union''s Horizon
    Europe research and innovation program, under the Grant Agreement 101091010 for
    the Soil Mission project BENCHMARKS. Data availability Data from different sources:
    some can be shared, some are confidential References ADEME, 2018 ADEME Méthodologie
    de détermination des valeurs de fonds dans les sols: Echelle territoriale Groupe
    de travail sur les valeurs de fonds (2018) (112 p.) Google Scholar ARVALIS et
    al., 2022 ARVALIS, ARVALIS, AUREA, Chambre d''agriculture de Bretagne, INRAE,
    ITAB, TerresInovia, UniLaSalle, Chambre d''agriculture d''Alsace, Chambre d''agriculture
    du Grand Est, Chambre d''agriculture de Saône et Loire, Celesta-lab, RITTMO, SEMSE,
    Université de Lorraine Guide d''interprétation à l''analyse des bioindicateurs
    - Programme CASDAR Microbioterre 40 p. https://www.arvalis.fr/infos-techniques/douze-indicateurs-pour-evaluer-la-fertilite-biologique-du-sol
    (2022) Google Scholar Association française de normalisation, 1994a Association
    française de normalisation NF ISO 11263 Soil Quality - Determination of Phosphorus.
    Spectrometric Determination of Phosphorus Soluble in Sodium Hydrogen Carbonate
    Solution AFNOR, Paris, France (1994) Google Scholar Association française de normalisation,
    1994b Association française de normalisation NF ISO 11265 Soil Quality - Determination
    of the Specific Electrical Conductivity AFNOR, Paris, France (1994) Google Scholar
    Association française de normalisation, 1995 Association française de normalisation
    NF ISO 10694 Soil Quality- Determination of Organic and Total Carbon After Dry
    Combustion (Elementary Analysis) AFNOR, Paris, France (1995) Google Scholar Association
    française de normalisation, 1999 Association française de normalisation NF X31–130
    Soil Quality - Chemical Methods - Determination of Cationic Exchange Capacity
    (CEC) and Extractible Cations AFNOR, Paris, France (1999) Google Scholar Association
    française de normalisation, 2002 Association française de normalisation NF X31–106
    Soil Quality - Determination of Active Limestone Content AFNOR, Paris, France
    (2002) Google Scholar Association française de normalisation, 2004 Association
    française de normalisation NF EN ISO 16703S Oil Quality - Determination of Content
    of Hydrocarbon in the Range C10 to C40 by Gas Chromatography AFNOR, Paris, France
    (2004) Google Scholar Association française de normalisation, 2013 Association
    française de normalisation NF EN ISO 13196 Screening Soils for Selected Elements
    by Energy-Dispersive X-Ray Fluorescence Spectrometry Using a Handheld or Portable
    Instrument AFNOR, Paris, France (2013) Google Scholar Association française de
    normalisation, 2016a Association française de normalisation NF EN 16170 Sludge,
    Treated Biowaste and Soil - Determination of Elements Using Inductively Coupled
    Plasma Optical Emission Spectrometry (ICP-OES) AFNOR, Paris, France (2016) Google
    Scholar Association française de normalisation, 2016b Association française de
    normalisation NF EN 16171 Sludge, Treated Biowaste and Soil - Determination of
    Elements Using Inductively Coupled Plasma Mass Spectrometry (ICP-MS) AFNOR, Paris,
    France (2016) Google Scholar Association française de normalisation, 2016c Association
    française de normalisation NF EN ISO 15009 Soil Quality - Gas Chromatographic
    Determination of the Content of Volatile Aromatic Hydrocarbons, Naphthalene and
    Volatile Halogenated Hydrocarbons. Purge-and-Trap Method with Thermal Desorption
    AFNOR, Paris, France (2016) Google Scholar Association française de normalisation,
    2016d Association française de normalisation NF EN ISO 17892-4 Geotechnical Investigation
    and Testing. Laboratory Testing of Soil. Part 4: Determination of Particle Size
    Distribution AFNOR, Paris, France (2016) Google Scholar Association française
    de normalisation, 2017 Association française de normalisation NF EN ISO 11272
    Soil Quality – Determination of Dry Bulk Density AFNOR, Paris, France (2017) Google
    Scholar Association française de normalisation, 2018a Association française de
    normalisation NF EN 16167 Soil, Treated Biowaste and Sludge - Determination of
    Polychlorinated Biphenyls (PCB) by Gas Chromatography with Mass Selective Detection
    (GC-MS) and Gas Chromatography with electron-Capture Detection (GC-ECD) AFNOR,
    Paris, France (2018) Google Scholar Association française de normalisation, 2018b
    Association française de normalisation NF EN ISO 20130 Soil Quality - Measurement
    of Enzyme Activity Patterns in Soil Samples Using Colorimetric Substrates in Micro-well
    Plates AFNOR, Paris, France (2018) Google Scholar Association française de normalisation,
    2020 Association française de normalisation NF EN ISO 11063 Soil Quality - Direct
    Extraction of Soil DNA AFNOR, Paris, France (2020) Google Scholar Association
    française de normalisation, 2021a Association française de normalisation NF ISO
    10390 Soil, Treated Biowaste and Sludge – Determination of pH AFNOR, Paris, France
    (2021) Google Scholar Association française de normalisation, 2021b Association
    française de normalisation NF ISO 11261 Soil Quality - Determination of Total
    Nitrogen. Modified Kjeldahl Method AFNOR, Paris, France (2021) Google Scholar
    Auclerc et al., 2019 A. Auclerc, J.M. Le Moine, P.-J. Hatton, J.A. Bird, K.J.
    Nadelhoffer Decadal post-fire succession of soil invertebrate communities is dependent
    on the soil surface properties in a northern temperate forest Sci. Total Environ.,
    647 (2019), pp. 1058-1068, 10.1016/j.scitotenv.2018.08.041 View PDFView articleView
    in ScopusGoogle Scholar Aurousseau et al., 1998 P. Aurousseau, C. Gascuel-Odoux,
    H. Squividant Eléments pour une méthode d’évaluation d’un risque parcellaire de
    contamination des eaux superficielles par les pesticides Etude et Gestion des
    Sols, 5 (3) (1998), pp. 143-156 Google Scholar Béchet et al., 2009 B. Béchet,
    F. Carré, L. Florentin, C. Leyval, L. Montanarella, J.L. Morel, G. Raimbault,
    F. Rodriguez, J.P. Rossignol, C. Schwartz Caractéristiques et fonctionnement des
    sols urbains. In Sous les pavés la terre C. Cheverry (Ed.), Sous les pavés la
    terre, 978-2-916097-03-9, Omniscience, Montreuil (2009), pp. 45-74 Google Scholar
    Bispo et al., 2009 A. Bispo, D. Cluzeau, R. Creamer, M. Dombos, U. Graefe, P.H.
    Krogh, J.P. Sousa, G. Peres, M. Rutgers, A. Winding, J. Rombke Indicators for
    monitoring soil biodiversity Int. Environ. Assess. Policy Manag., 5 (4) (2009),
    pp. 717-719 View in ScopusGoogle Scholar Blanchart, 2018 A. Blanchart Vers une
    prise en compte des potentialités des sols dans la planification territoriale
    et l’urbanisme opérationnel Thèse de l’Université de Lorraine, Nancy (2018), p.
    354 Google Scholar Blanchart et al., 2018a A. Blanchart, G. Séré, J. Cherel, G.
    Warot, M. Stas, J.N. Consalès, C. Schwartz Towards an operational methodology
    to optimize ecosystem services provided by urban soils Landsc. Urban Plan., 176
    (2018), pp. 1-9 Google Scholar Blanchart et al., 2018b A. Blanchart, J.N. Consales,
    G. Séré, C. Schwartz Consideration of soil in urban planning documents—a French
    case study J. Soil. Sediment. (2018), 10.1007/s11368-018-2028-x Google Scholar
    Calzolari et al., 2020 Calzolari C., Tarocco P., Lombardo N., Marchi N., Ungaro
    F., 2020, doi:https://doi.org/10.1016/j.landusepol.2020.105037. Google Scholar
    Bünemann et al., 2018 E.K. Bünemann, G. Bongiorno, Z. Bai, R.E. Creamer, G. De
    Deyn, R. de Goede, L. Fleskens, V. Geissen, T.W. Kuyper, P. Mäder, M. Pulleman,
    W. Sukkel, J.W. van Groenigen, L. Brussaard Soil quality – A critical review Soil
    Biology and Biochemistry, 120 (2018), pp. 105-125, 10.1016/j.soilbio.2018.01.030
    View PDFView articleView in ScopusGoogle Scholar Cambou, 2018 A. Cambou Evaluation
    du stock et de la stabilité du carbone organique dans les sols urbains PhD thesis
    of Agrocampus Ouest, Angers, France (2018), p. 234 Google Scholar Coussy et al.,
    2020 S. Coussy, N. Dubrac, C. Hulot, A. Billard, S. Kaabouch Guide de valorisation
    hors site des terres excavées issues de sites et sols potentiellement pollués
    dans des projets d’aménagement Ministère de la transition écologique et solidaire
    (2020) (59 p.) Google Scholar Dale and Beyeler, 2001 V.H. Dale, S.C. Beyeler Challenges
    in the development and use of ecological indicators Ecol. Indic., 1 (2001), pp.
    3-10, 10.1016/S1470-160X(01)00003-6 View PDFView articleView in ScopusGoogle Scholar
    Dequiedt et al., 2011 S. Dequiedt, N.P.A. Saby, M. Lelievre, C. Jolivet, J. Thioulouse,
    et al. Biogeographical patterns of soil molecular microbial biomass as influenced
    by soil characteristics and management Glob. Ecol. Biogeogr., 20 (4) (2011), pp.
    641-652, 10.1111/j.1466-8238.2010.00628.x Wiley View in ScopusGoogle Scholar Duchaufour,
    1997 P. Duchaufour Abrégé de pédologie 291 p. (5e éd., édition), Masson (1997)
    Google Scholar Durand, 1983 J.H. Durand Les sols irrigables. Etude pédologique
    ACCT-PUF (1983) (339 p) Google Scholar European Commission, 2023 European Commission
    Proposal for a Directive of the European Parliament and of the Council on Soil
    Monitoring and Resilience (Soil Monitoring Law) (2023) (COM(2023) 416 final) Google
    Scholar Faber et al., 2022 J.H. Faber, M.C. Hanegraaf, A. Gillikin, C.M.J. Hendriks,
    P.J. Kuikman, I. Cousin, A. Bispo, G. Obiang-Ndong, D. Montagne, A. Taylor, J.
    Bengtsson, L. ten Damme, K.H.E. Meurer, M. Viketoft Stocktaking for Agricultural
    Soil Quality and Ecosystem Services Indicators and their Reference Values (SIREN):
    EJP SOIL Internal Project SIREN Deliverable 2 https://edepot.wur.nl/582329 (2022)
    Google Scholar Gatica-Saavedra et al., 2023 P. Gatica-Saavedra, F. Aburto, P.
    Rojas, C. Echeverría Soil health indicators for monitoring forest ecological restoration:
    a critical review Restor. Ecol., 31 (2023), Article e13836, 10.1111/rec.13836
    View in ScopusGoogle Scholar GEPPA, 1981 GEPPA Synthèse des travaux de la commission
    de cartographie 1970–1981 (1981) (18 pages) Google Scholar Grard, 2017 B. Grard
    Des Technosols construits à partir de produits résiduaires urbains : services
    écosystémiques fournis et évolution Ecologie, Environnement (2017) pHD thesis
    from Université Paris Saclay (COmUE), 2017. French. ⟨NNT : 2017SACLA043⟩. ⟨tel-01779723⟩
    Google Scholar Hanks and Lewandowski, 2003 D. Hanks, A. Lewandowski Protecting
    Urban Soil Quality: Examples for Landscape Codes and Specifications USDA-NRCS
    (2003) Google Scholar Hedde et al., 2012 M. Hedde, F. van Oort, I. Lamy Functional
    traits of soil invertebrates as indicators for exposure to soil disturbance Environ.
    Pollut., 164 (2012), pp. 59-65, 10.1016/j.envpol.2012.01.017 View PDFView articleView
    in ScopusGoogle Scholar Herrick, 2000 J.E. Herrick Soil quality: an indicator
    of sustainable land management Appl. Soil Ecol., 15 (2000), pp. 75-83, 10.1016/S0929-1393(00)00073-1
    View PDFView articleView in ScopusGoogle Scholar Horrigue et al., 2016 W. Horrigue,
    S. Dequiedt, N. Chemidlin Prévost-Bouré, C. Jolivet, N.P.A. Saby, et al. Predictive
    model of soil molecular microbial biomass Ecol. Indic., 64 (2016), pp. 203-211,
    10.1016/j.ecolind.2015.12.004 View PDFView articleView in ScopusGoogle Scholar
    Hyun et al., 2022 J. Hyun, Y.J. Kim, A. Kim, A.F. Plante, G. Yoo Ecosystem services-based
    soil quality index tailored to the metropolitan environment for soil assessment
    and management Sci. Total Environ., 820 (2022), Article 153301, 10.1016/j.scitotenv.2022.153301
    View PDFView articleView in ScopusGoogle Scholar International Organization for
    Standardization, 2014 International Organization for Standardization ISO 13859
    Soil quality - Determination of Polycyclic Aromatic Hydrocarbons (PAH) by Gas
    Chromatography (GC) and High Performance Liquid Chromatography (HPLC) (2014) Google
    Scholar Jaenicke, 1998 E.C. Jaenicke From the Ground Up: Exploring Soil Quality’s
    Contribution to Environmental Health Henry A. Wallace Institute for Alternative
    Agriculture, Greenbelt, MD (1998), 10.22004/ag.econ.134117 42 pp. Google Scholar
    Janzen et al., 2021 H.H. Janzen, D.W. Janzen, E.G. Gregorich The ‘soil health’
    metaphor: illuminating or illusory? Soil Biol. Biochem., 159 (2021), Article 108167
    View PDFView articleView in ScopusGoogle Scholar Joimel et al., 2017 S. Joimel,
    C. Schwartz, M. Hedde, S. Kiyota, P.H. Krogh, J. Nahmani, G. Pérès, A. Vergnes,
    J. Cortet Urban and industrial land uses have a higher soil biological quality
    than expected from physicochemical quality Sci. Total Environ., 584 (2017), pp.
    614-621 View PDFView articleView in ScopusGoogle Scholar Karimi et al., 2018 B.
    Karimi, S. Terrat, S. Dequiedt, N.P.A. Saby, W. Horrigue, et al. Biogeography
    of soil bacteria and archaea across France Sci. Adv., 4 (7) (2018), p. eaat1808,
    10.1126/sciadv.aat1808 American Association for the Advancement of Science (AAAS)
    View in ScopusGoogle Scholar Lal, 2016 R. Lal Soil health and carbon management
    Food Energy Secur., 5 (2016), pp. 212-222, 10.1002/fes3.96 View in ScopusGoogle
    Scholar Laubier, 2001 F. Laubier La méthode de diagnostic parcellaire du risque
    de contaminaiton des eaux superficielles et le détachement des particules des
    sols cultivés, Ingénieries EAT, Numéro spécial phytosanitaire (2001), pp. 91-97
    Google Scholar Le Bissonnais et al., 2003 Y. Le Bissonnais, A. Couturier, O. Cerdan,
    F. Papy, P. Martin, V. Souchere, J.F. Bruno, P. Lebrun, F. Dennis, J. Morschel,
    et al. Projet GESSOL-érosion Maîtrise de l’érosion hydrique des sols cultivés,
    phénomènes physiques et dispositifs d’action (2003) (66 p.) Google Scholar Le
    Guern et al., 2016 C. Le Guern, V. Baudouin, E. Bridier, C. Cottineau, M. Delayre,
    F. Desse-Engrand, M. Grellier, E. Milano, A. Mouny, S. Pollett, B. Sauvaget, A.
    Ménoury, P. Bâlon, avec la collaboration de Conil, P. et Rouvreau, L Développement
    d’une méthodologie de gestion des terres excavées issues de l’aménagement de l’Ile
    de Nantes-Phase 1: Caractérisation des sols et recensement des sources de pollution
    potentielles (2016) (Rapport BRGM/RP-66013-FR, 122 p., 27. Ill., 7 Annexes) Google
    Scholar Le Guern et al., 2017 C. Le Guern, V. Baudouin, B. Sauvaget, E. Pineau-Jamin,
    C. Gaubert, R. Braud, F. Desse-Engrand, S. Polett, A. Ménoury, avec la collaboration
    deBodéré, G., Milano, E., Conil, P., Bâlon, P Développement d’une méthodologie
    de gestion des terres excavées issues de l’aménagement de quartiers nantais -
    Phase 1: Caractérisation des sols et recensement des sources de pollution potentielles
    (2017) (Rapport BRGM/RP-67138-FR, 116 p., 48 ill., 30 tabl., 4 ann) Google Scholar
    Le Guern et al., 2018a C. Le Guern, V. Baudouin, B. Sauvaget, M. Delayre, P. Conil
    A typology of anthropogenic deposits as a tool for modeling urban subsoil geochemistry:
    example of the Ile de Nantes (France) J. Soil Sediments (2018), 10.1007/s11368-016-1594-z
    Google Scholar Le Guern et al., 2018b C. Le Guern, E. Limasset, P. Conil Inventaire
    des friches de Vendée et outil d’évaluation en appui à l’aménagement BRGM (2018)
    Google Scholar Lehmann et al., 2020 J. Lehmann, D.A. Bossio, I. Kögel-Knabner,
    M.C. Rillig The concept and future prospects of soil health Nat. Rev. Earth Environ.,
    1 (10) (2020), pp. 544-553 CrossRefView in ScopusGoogle Scholar Morel et al.,
    2005 J.L. Morel, C. Schwartz, L. Florentin Urban soils Encyclopedia of Soils in
    the Environment (2005), pp. 202-208 View PDFView articleCrossRefView in ScopusGoogle
    Scholar Morel et al., 2023 J.L. Morel, G. Séré, V. Vasenev, T. Nehls Ecosystem
    services provided by soils in highly anthropized areas (SUITMAs) Encyclopedia
    of Soils in the Environment (Second edition) (2023), 10.1016/B978-0-12-822974-3.00207-X
    Google Scholar O''Riordan et al., 2021 O''Riordan R., Davies J., Stevens C., Quinton
    J.N., Boyko C., 2021, doi:https://doi.org/10.1016/j.geoderma.2021.115076. Google
    Scholar O''Sullivan et al., 2017 L. O''Sullivan, F. Bampa, K. Knights, R.E. Creamer
    Soil protection for a sustainable future: options for a soil monitoring network
    for Ireland Soil Use Manag., 33 (2017), pp. 346-363 CrossRefView in ScopusGoogle
    Scholar Powlson, 2020 D.S. Powlson Soil health—useful terminology for communication
    or meaningless concept? Or both? Front. Agric. Sci. Eng.-FASE., 7 (3) (2020),
    pp. 246-250, 10.15302/J-FASE-2020326 View in ScopusGoogle Scholar R Core Team,
    2023 R Core Team R: A Language and Environment for Statistical Computing R Foundation
    for Statistical Computing, Vienna, Austria (2023) Google Scholar Sauvaget, 2019
    B. Sauvaget Constitution de référentiels géochimiques locaux pour les sols et
    proches sous-sols urbains: de la base de données à l’interprétation géostatistique
    PhD Thesis of Université PSL, France (2019), p. 195 Google Scholar Schoeneberger
    et al., 2012 P.J. Schoeneberger, D.A. Wysocki, E.C. Benham, Soil Survey Staff
    Field Book for Describing and Sampling Soils, Version 3.0 Natural Resources Conservation
    Service, National Soil Survey Center, Lincoln, NE (2012) Online: https://www.nrcs.usda.gov/Internet/FSE_DOCUMENTS/nrcs142p2_052523.pdf
    Google Scholar Schwilch et al., 2016 G. Schwilch, L. Bernet, L. Fleskens, E. Giannakis,
    J. Leventon, T. Marañón, J. Mills, C. Short, J. Stolte, H. van Delden, T.S. Verzandvoor
    Operationalizing ecosystem services for the mitigation of soil threats: a proposed
    framework Ecol. Indic., 67 (2016), pp. 586-597 View PDFView articleView in ScopusGoogle
    Scholar Séré et al., 2024 G. Séré, M. Lothode, A. Blanchart, C. Chirol, A. Tribotte,
    C. Schwartz Destisol: a decision support tool to evaluate ecosystem services provided
    by urban soils in order to improve urban planning Eur. J. Soil Sci. (2024) (Under
    review) Google Scholar Stone et al., 2016 D. Stone, K. Ritz, B.G. Griffiths, A.
    Orgiazzi, R.E. Creamer Selection of biological indicators appropriate for European
    soil monitoring Appl. Soil Ecol. (2016), 10.1016/j.apsoil.2015.08.005 Google Scholar
    Tardieu et al., 2021 L. Tardieu, P. Hamel, V. Viguié, L. Coste, H. Levrel Are
    soil sealing indicators sufficient to guide urban planning? Insights from an ecosystem
    services assessment in the Paris metropolitan area Environ. Res. Lett., 16 (10)
    (2021), p. 104019, 10.1088/1748-9326/ac24d0 2021 View in ScopusGoogle Scholar
    Terrat et al., 2017 S. Terrat, W. Horrigue, S. Dequietd, N.P.A. Saby, M. Lelievre,
    et al. Mapping and predictive variations of soil bacterial richness across France
    PLoS ONE, 12 (0190128) (2017), pp. 1-19, 10.1371/journal.pone.0186766 Public Library
    of Science Google Scholar Ungaro et al., 2022 Ungaro F., Maienza A., Ugolini F.,
    Lanini G.M., Baronti S., Calzolari C., 2022, doi:https://doi.org/10.1016/j.ufug.2021.127455.
    Google Scholar UQUALISOL-ZU, 2012 UQUALISOL-ZU Préconisation d’utilisation des
    sols et qualité des sols en zone urbaine et péri-urbaine – Application du Bassin
    Minieur de Provence Programme ADEME–GESSOL (2012) Google Scholar van Bruggen et
    al., 2019 A.H.C. van Bruggen, E.M. Goss, A. Havelaar, A.D. van Diepeningen, M.R.
    Finckh, J.G. Morris One health-cycling of diverse microbial communities as a connecting
    force for soil, plant, animal, human and ecosystem health Sci. Total Environ.,
    664 (2019), 10.1016/j.scitotenv.2019.02.091 Google Scholar Van Leeuwen et al.,
    2017 J. Van Leeuwen, N. Saby, A. Jones, G. Louwagie, E. Micheli, M. Rutgers, R.
    Schulte, H. Spiegel, G. Toth, R. Creamer Gap assessment in current soil monitoring
    networks across Europe for measuring soil functions Environ. Res. Lett., 12 (12)
    (2017), Article 124007, 10.1088/1748-9326/aa9c5c View in ScopusGoogle Scholar
    Vrščaj et al., 2008 B. Vrščaj, L. Poggio, F.A. Marsan A method for soil environmental
    quality evaluation for management and planning in urban areas Landsc. Urban Plan.,
    88 (2008), pp. 81-94 View PDFView articleView in ScopusGoogle Scholar Zornoza
    et al., 2015 R. Zornoza, J.A. Acosta, F. Bastida, S.G. Domínguez, D.M. Toledo,
    A. Faz Identification of sensitive indicators to assess the interrelationship
    between soil quality, management practices and human health SOIL, 1 (2015), pp.
    173-185, 10.5194/soil-1-173-2015 View in ScopusGoogle Scholar Cited by (0) 1 https://esdac.jrc.ec.europa.eu/projects/envasso.
    View Abstract © 2024 Elsevier B.V. All rights reserved. Part of special issue
    Towards Sustainable Soil-Water-Sediment Systems: Remediation, Circular Economy,
    and Climate Resilience Edited by Professor Frederic Coulon (Cranfield University,
    Bedford, , United Kingdom), Dr. Marc Viñas (Institute of Agrifood Research and
    Technology, Caldes de Montbui, , Spain), Assoc. Professor Lenka Wimmerová (Czech
    University of Life Sciences Prague, Praha, , Czechia), Dr. Richard Thomas Gill
    (Shell Oil Company, Houston, Texas, United States of America), Dr. Rob Sweeney
    (Contaminated Land: Applications in Real Environments, London, , United Kingdom),
    Professor Huub H.M. Rijnaarts (Wageningen University & Research, Wageningen, ,
    Netherlands), Dr. Hilde Passier (Deltares, Delft, , Netherlands) View special
    issue Recommended articles Effects of microplastics on soil microorganisms and
    microbial functions in nutrients and carbon cycling – A review Science of The
    Total Environment, Volume 924, 2024, Article 171435 Vijay Kumar Aralappanavar,
    …, Binoy Sarkar View PDF Gravity-driven remediation of DNAPL polluted aquifers
    using densified biopolymer brine solution Advances in Water Resources, Volume
    185, 2024, Article 104643 Amir Alamooti, …, Azita Ahmadi-Sénichault View PDF Environmental
    DNA methods for biosecurity and invasion biology in terrestrial ecosystems: Progress,
    pitfalls, and prospects Science of The Total Environment, Volume 926, 2024, Article
    171810 Karen L. Bell, …, Bruce L. Webber View PDF Show 3 more articles About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Science of the Total Environment
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Selection of soil health indicators for modelling soil functions to promote
    smart urban planning
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Bounajra A.
  - Guemmat K.E.
  - Mansouri K.
  - Akef F.
  citation_count: '0'
  description: 'Life on earth is linked to water resources. Recently, alarm bells
    have been ringing in global organizations to raise awareness of the importance
    of rational use of water resources, which are becoming an increasingly scarce
    commodity. The majority of the world''s freshwater is used for agricultural irrigation,
    hence there is a need to adopt an intelligent irrigation strategy that will lead
    to sustainable agricultural management. To reap the full benefits, irrigation
    strategy must be accompanied by a good understanding of field characteristics.
    Several studies have benefited from the improvement of new technologies for irrigation
    scheduling, but taking only soil water properties as a basis for research, and
    to our knowledge there is no systematic literature review study to date that aims
    at irrigation scheduling taking into consideration the characteristics of the
    crop field for intelligent and efficient agricultural management. This literature
    review article aims to explore the new Internet of Things and Artificial Intelligence
    technologies used on the one hand for monitoring and predicting the coefficients
    that control the crop evapotranspiration process responsible for crop water losses,
    namely the reference crop evapotranspiration coefficient ETo and the crop coefficient
    Kc, and on the other hand for a good and intelligent understanding of the: physical,
    chemical, biological and hydrological characteristics of a specific field, and
    which affect the crop evapotranspiration process and therefore yield. Following
    a systematic literature review methodology led us to a refined selection of 55
    journal articles for further analysis. We have identified that the profitability
    of a crop field is closely linked to the right strategies adopted in a specific
    crop plot, and these strategies can only be defined after a good understanding
    of the field''s characteristics. We were able to discuss these field characteristics
    through the primary studies which enabled us to develop an intelligent model that
    brings together the different approaches adopted for irrigation scheduling and
    farm management and to identify gaps and limitations in the use of new technologies
    for farm management at field scale, and thus pave the way for further research.'
  doi: 10.1016/j.agwat.2024.108758
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Related work 3. Research
    methodology 4. Results 5. Discussion 6. Conclusions CRediT authorship contribution
    statement Declaration of Competing Interest Appendix A. Data extraction table
    Data Availability References Show full outline Figures (7) Show 1 more figure
    Tables (15) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Agricultural
    Water Management Volume 295, 30 April 2024, 108758 Towards efficient irrigation
    management at field scale using new technologies: A systematic literature review
    Author links open overlay panel Afaf Bounajra, Kamal El Guemmat, Khalifa Mansouri,
    Fatiha Akef Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.agwat.2024.108758
    Get rights and content Under a Creative Commons license open access Highlights
    • First Systematic Literature Review to examine the use of new technologies to
    predict and monitor every field characteristic in order to manage irrigation at
    field scale efficiently. • The effect of climatic, physical, chemical, hydrological
    and biological properties of the field on the irrigation process was discussed.
    • An intelligent model is proposed for efficient irrigation planning and management.
    • The developed model brings together the different approaches adopted for irrigation
    scheduling and paves the way for further research. Abstract Life on earth is linked
    to water resources. Recently, alarm bells have been ringing in global organizations
    to raise awareness of the importance of rational use of water resources, which
    are becoming an increasingly scarce commodity. The majority of the world''s freshwater
    is used for agricultural irrigation, hence there is a need to adopt an intelligent
    irrigation strategy that will lead to sustainable agricultural management. To
    reap the full benefits, irrigation strategy must be accompanied by a good understanding
    of field characteristics. Several studies have benefited from the improvement
    of new technologies for irrigation scheduling, but taking only soil water properties
    as a basis for research, and to our knowledge there is no systematic literature
    review study to date that aims at irrigation scheduling taking into consideration
    the characteristics of the crop field for intelligent and efficient agricultural
    management. This literature review article aims to explore the new Internet of
    Things and Artificial Intelligence technologies used on the one hand for monitoring
    and predicting the coefficients that control the crop evapotranspiration process
    responsible for crop water losses, namely the reference crop evapotranspiration
    coefficient ETo and the crop coefficient Kc, and on the other hand for a good
    and intelligent understanding of the: physical, chemical, biological and hydrological
    characteristics of a specific field, and which affect the crop evapotranspiration
    process and therefore yield. Following a systematic literature review methodology
    led us to a refined selection of 55 journal articles for further analysis. We
    have identified that the profitability of a crop field is closely linked to the
    right strategies adopted in a specific crop plot, and these strategies can only
    be defined after a good understanding of the field''s characteristics. We were
    able to discuss these field characteristics through the primary studies which
    enabled us to develop an intelligent model that brings together the different
    approaches adopted for irrigation scheduling and farm management and to identify
    gaps and limitations in the use of new technologies for farm management at field
    scale, and thus pave the way for further research. Previous article in issue Next
    article in issue Keywords Smart irrigationIrrigation schedulingCrop evapotranspirationArtificial
    IntelligenceInternet of Things 1. Introduction According to the World Bank report,
    food security is guaranteed by the agricultural sector, which constitutes one
    of the economic pillars in the majority of the world''s countries (Burki, 2022).
    Intensifying production and increasing agricultural yields are closely linked
    to good irrigation practices, given the direct positive effect of water on crop
    income (DeJonge et al., 2007). Excessive use of water resources, especially in
    the agricultural sector, which is responsible for consuming most of the world''s
    freshwater, is making these resources less and less available. In addition, the
    effects of climate change have aggravated the situation, making rational use of
    water resources essential (DeJonge et al., 2007, Burki, 2022, Kocian et al., 2023).
    Adopting a sustainable agricultural management strategy that achieves the highest
    yields without depleting natural resources is a solution strongly encouraged by
    the Food and Agriculture Organization of the United Nations, and one in which
    all countries of the world must be involved (Burki, 2022). Closed-loop irrigation
    (Bwambale et al., 2022), also known as smart irrigation (Obaideen et al., 2022),
    is a promising solution that harnesses new Internet of Things and Artificial Intelligence
    technologies to manage and schedule irrigation, applying water at the optimum
    time according to crop needs. Crop water requirements are influenced by the process
    of crop evapotranspiration, which includes two inseparable phenomena responsible
    for water losses: soil evaporation and crop transpiration (Anderson and French,
    2019). The indirect dual crop coefficient method suggested by (Anderson and French,
    2019) is the standard method used for precise irrigation scheduling. This method
    is essentially centered on the calculation of the crop evapotranspiration coefficient
    ETc, which enables the estimation of the exact amount of water to be applied by
    taking into consideration the meteorological conditions summarized in the reference
    crop evapotranspiration coefficient ETo and the phenological conditions of the
    plants estimated by the crop coefficient Kc (Abou Ali et al., 2023, Feng et al.,
    2023, Gonçalves et al., 2023; X. Han et al., 2021; Vories et al., 2021). Several
    new studies have benefited from the development of new technologies for estimating
    the evapotranspiration coefficient of ETc crops. For example, (Zhangzhong et al.,
    2023) proposed a mobile solution for real-time monitoring of the irrigation requirements
    of certain types of lettuce grown in greenhouses using sensors and machine learning
    algorithms. (Kocian et al., 2023) have suggested an Internet of Things-based solution
    for monitoring water use for crops grown in greenhouses. However, estimating the
    water requirements of crops grown in controlled environments is much simpler than
    estimating them in arable fields, since several factors enter into the formation
    and evolution of the evapotranspiration process. (Wu et al., 2023) attempted to
    estimate, in a semi-humid region in China, the irrigation requirements of maize
    by training meteorological data from a local weather station and crop data measured
    by a lysimeter, in machine learning models, while (Y. Zhang et al., 2023) used
    crop data acquired by sensors based on an unmanned aerial vehicle (UAV) to estimate
    the daily ETc of maize. Using the dual crop coefficient method to estimate irrigation
    requirements can be an effective but not efficient solution if it is not accompanied
    by a prior and accurate understanding of the climatic, physical, chemical, biological
    and hydrological characteristics of the arable field. By way of example, if farmers
    grow a type of crop in a field that is not compatible with the field''s characteristics,
    the best possible irrigation strategy in this case is not necessarily the efficient
    solution. On the other hand, the solution that consists in changing the type of
    crop, according to the field''s characteristics, and accompanying it with good
    irrigation management is necessarily in this case the efficient solution in terms
    of managing natural resources and obtaining the best possible yield in the field
    under study. (Karimzadeh Soureshjani et al., 2019) studied the existing relationship
    between crop yield and air temperature and came to the result that management
    practices such as adjusting planting date can be applied by knowing the critical
    periods during which crops are most vulnerable to climate change conditions. To
    the best of our knowledge, to date there has been no literature review study that,
    in addition to bringing together the key factors affecting the evapotranspiration
    process in a field, explores the new Internet of Things and artificial intelligence
    technologies used to monitor, detect, locate and predict these factors, which
    are the climatic, physical, chemical, biological and hydrological characteristics
    of a field with a view to efficient irrigation management. 2. Related work Intelligent
    and sustainable irrigation management has become a necessity whether in smart
    cities or agricultural fields. (Gimpel et al., 2021) proposed an irrigation system
    for urban trees using Internet of Things (IoT) architecture technologies and meteorological
    data. The proposed solution achieved promising results in terms of reducing irrigation
    water consumption. (Veerachamy et al., 2022) have proposed an irrigation monitoring
    and control system using IoT technology. The suggested solution can be managed
    manually through the analysis of data displayed on a mobile app, or automatically
    by determining the threshold soil moisture value of the field to be irrigated.
    The system can be enhanced by the introduction of Artificial Intelligence algorithms
    as used by (R et al., 2023) who proposed an autonomous system based on Artificial
    Intelligence and IoT-6 G that both predicts climate change and precipitation patterns
    and measures soil moisture levels for the coming days. The system has been tested
    in a controlled environment, achieving high accuracy in soil moisture prediction.
    (Nawandar and Satpute, 2019) have proposed a system that takes into consideration
    crop data such as: soil type, crop type as well as its planting date, and some
    field data to calculate evapotranspiration and make irrigation decisions based
    on neural methods. (Xie et al., 2022) proposed a system for irrigation control
    and soil moisture level monitoring in a Litchi orchard. The system used data from
    a soil moisture sensor and data from a weather station as inputs to an improved
    Particle swarm optimization (PSO) algorithm. The results showed that the system
    is highly accurate, easy to implement and applicable in real time. (Alibabaei
    et al., 2022) studied the ability of reinforcement learning to schedule the irrigation
    of a tomato field without affecting productivity. They proposed a deep Q-network
    model (LSTM) that indicates when and how much to irrigate. The proposed model
    increased productivity and reduced water consumption. (Cordeiro et al., 2022)
    proposed deep neural network architectures using Long short-term memory (LSTM)
    and Bidirectional LSTM (BiLSTM) to develop economical soil moisture prediction
    models. The problem of missing input data was also addressed by using the k-nearest
    neighbors (KNN) algorithm to fill in the unknown values and guarantee a high degree
    of reliability. One of the perspectives of this work is the evaluation of the
    energy consumption of fog nodes. (Maria Manuel Vianny et al., 2022) proposed an
    irrigation system for a banana field that reduces energy and water consumption
    through the use of IoT sensors, a storage system and the KNN, Gradient boosting
    and LSTM algorithms. (Goap et al., 2018) have also proposed a water and energy-efficient
    system that relies on field sensor data and weather forecast data as inputs to
    a method developed based on the Support Vector Regression (SVR) algorithm and
    K-means clustering. One of the perspectives of this work is to further develop
    the system so that it works with multiple sensor nodes while minimizing system
    cost. (Khan et al., 2022) have proposed a smart irrigation solution that is energy-efficient,
    reliable and secure. They have used methods based on Artificial Intelligence to
    select the optimal location of sensor nodes, to regulate energy and to choose
    the most optimal routing path. (Al-Ali et al., 2019) have designed a prototype
    solar energy system based on IoT and a fuzzy logic algorithm for irrigation control
    and decision-making. Table 1 shows more details of the irrigation systems studied.
    Table 1. Related work using new technologies in irrigation management. Reference
    Goal Results Future works (Veerachamy et al., 2022) Proposal for an automated
    irrigation control system using field sensors and a Cloud platform. The system
    saves water and labor in the irrigation process. - Due to poor network coverage,
    the system can malfunction, making it necessary to improve it. - The system can
    be improved by introducing machine learning algorithms and other input parameters
    for more reliable forecasting. (R et al., 2023) Development of an efficient crop
    irrigation methodology using artificial intelligence and IoT-6 G technologies.
    The proposed system was tested in a controlled environment and achieved an accuracy
    of 86.34%. The solution needs to be tested in a real environment with several
    field characteristics. (Nawandar and Satpute, 2019) Development of a low-cost
    intelligent irrigation system that enables irrigation scheduling and decision-making.
    The system was tested on spinach seeds during their growing period, and achieved
    water savings of around 67% compared with traditional methods. Future work will
    focus on the application of such a system to other types of crop and in other
    environments. (Xie et al., 2022) Design of an irrigation control system using
    soil moisture level monitoring in a Litchi orchard. The average soil moisture
    value estimated by the developed method is closer to the optimum soil moisture
    defined by the system. - The generalizability of the system can be improved by
    carrying out this study on different types of regions or orchards. - The spatial
    distribution of soil moisture needs to be taken into account for more accurate
    measurements. (Alibabaei et al., 2022) Study of the ability of reinforcement learning
    to schedule the irrigation of a tomato field without affecting productivity. Compared
    with fixed-base and threshold-based irrigation methods, the trained model increased
    productivity by 11% and reduced water consumption by 20–30%. The input data for
    the model developed were simulated, hence the need to train the model with field
    data to make it more realistic. (Cordeiro et al., 2022) Construction of soil moisture
    prediction models for coconuts and cashews based on deep neural network architectures.
    The real experiment showed promising results, with more accurate predictions in
    the deepest soil layers than in the surface layers. Evaluation of the energy consumption
    of fog nodes. (Maria Manuel Vianny et al., 2022) Optimizing water and energy use
    in banana agriculture using IoT and machine learning algorithms. 31.14% of water
    consumption is reduced in a period characterized by low rainfall. External interference
    such as signal noise must be eliminated to improve prediction accuracy and decision-making.
    (Goap et al., 2018) Development of a soil moisture prediction algorithm using
    field sensor data and weather forecast data. A web interface has been developed
    to view sensor data in real time and plan irrigation and the results of the prediction
    system are very encouraging. Further develop the system to work with multiple
    sensor nodes while minimizing system cost. (Al-Ali et al., 2019) Irrigation management
    using a renewable energy source to provide the energy needed to keep the system
    running smoothly. The prototype provided excellent irrigation using only solar
    energy. Implement such a system in a real agricultural environment. (Alves et
    al., 2023) Creation of a simulation model to simulate and evaluate the behavior
    of an irrigation system defined in an application scenario. The results show that
    the system can increase water use efficiency by evaluating several irrigation
    strategies with data collected from multiple sources. The study doesn''t use actual
    data from a farm, so in the future, it''s important to evaluate the behavior of
    the IoT platform in a real environment in order to validate the communication
    between the devices and the platform. Another technology that can be beneficial
    in irrigation management and scheduling is the Digital Twin. (Alves et al., 2023)
    used this technology to develop a closed-loop monitoring and control system for
    irrigation. The proposed solution was used to evaluate the behavior of an IoT
    platform and irrigation strategies before applying them on the agricultural field.
    The results show that the system is capable of collecting data to create a daily
    irrigation schedule. 3. Research methodology A targeted, relevant literature review
    leads to strong and solid results. The methodology of systematic literature review
    SLR is widely used to conduct a successful literature search.It is a method of
    determining, assessing and evaluating all available research relevant to a particular
    research question or phenomenon of interest (Kitchenham et al., 2009). The SLR
    guidelines used in this document are those of (Kitchenham et al., 2009), which
    have been adapted to software engineering from the medical literature. The SLR
    protocol defined in this article was adapted from the protocol used by (Nyoman
    Kutha Krisnawijaya et al., 2022; Tummers et al., 2019), also based on (Kitchenham
    et al., 2009). The identification of the research questions was our first step,
    followed by the search protocol definition which include determining the search
    string and the sources to be consulted. The definition of the search protocol
    was an iterative process, in which the results of one search string were used
    to adjust the next search string. Defining the criteria for selecting the studies
    was our third step. In the fourth step, we applied the criteria to the search
    results. After this step, we obtained the articles we used for an in-depth evaluation
    based on a quality assessment method. The fifth step involved extracting useful
    data from the selected articles. The third, fourth and fifth steps were iterative.
    Finally, in the sixth stage, we defined the method used to synthesize and present
    the data. 3.1. Research questions Irrigation compensates for crop evapotranspiration
    losses, so several research questions arise from this starting point: • RQ1: What
    new technologies are being used to estimate and predict the ETo climate parameter?
    • RQ1.1: Does a good prediction of this coefficient guarantee good irrigation
    scheduling? In other words, is irrigation intensification always the optimal solution
    to compensate for the effect of soil evaporation, or do we need to think differently?
    • RQ2: What factors have a significant influence on the crop coefficient Kc as
    mentionned in FAO Irrigation and Drainage Paper? • RQ2.1: What effect do soil
    physical properties have on agricultural management in general? What new technologies
    are being used in this field of research? • RQ2.2: What effect do soil chemical
    properties have on agricultural management in general? What new technologies are
    being used in this field of research? • RQ2.3: What are the soil''s hydrological
    properties to be taken into account when managing irrigation • RQ2.3.1: What new
    technologies are being used to estimate soil moisture • RQ2.3.2: What is the effect
    of groundwater on crop growth, and how can we exploit new technologies to estimate
    and predict groundwater levels • RQ2.3.3: What is the effect of hydraulic conductivity
    on irrigation scheduling, and how can we exploit new technologies to estimate
    and predict hydraulic conductivity? • RQ3: What is the effect of non-standard
    elements such as weeds and plant diseases on crop development and yield • RQ3.1:
    What new technologies are being used to manage weeds • RQ3.2: What new technologies
    are being used to manage plant diseases • RQ4: Do the farming practices adopted
    in a field affect the crop coefficient, and if so, how does this manifest itself
    The first research question is addressed by identifying new technologies used
    for short, medium and long-term ETo estimation and prediction. This question has
    generated another sub-question which highlights the solution of irrigation intensification
    to compensate for the effect of climatic parameters on the soil and discusses
    the feasibility of this solution in cases of climate changes. This sub-question
    is addressed by analyzing case studies that investigate the effect of climate
    changes such as temperature on irrigated crop yields. The answer to this question
    led us to the second research question, which discusses the soil properties that
    influence crop evapotranspiration, namely soil physical, chemical and hydrological
    properties. This question is followed by three sub-questions. The first sub-question
    is addressed by identifying new technologies used for the prediction and classification
    of soil textures and their irrigation requirements. The second sub-question is
    addressed by identifying new technologies used for the prediction and real-time
    monitoring of soil chemical properties. The third sub-question, which discusses
    soil hydraulic properties, has been addressed firstly by identifying new technologies
    used for the short and long-term prediction of soil moisture, secondly, by identifying
    new technologies used for the short and long-term prediction of groundwater levels,
    and thirdly, by identifying new technologies used for the prediction and mapping
    of saturated and unsaturated hydraulic conductivity. The third research question,
    which discusses the effect of non-standard elements such as pests and weeds on
    crop evaporation, was addressed firstly by identifying new technologies used for
    weed detection, localization and prediction, and secondly by identifying new technologies
    used for plant disease detection and severity. Finally, the fourth research question,
    which discusses the effect of agricultural practices on crop evapotranspiration,
    was developed by analysing some case studies that investigate the effect of sometimes
    inappropriate agricultural practices such as the mode of application and the quantity
    of water on crop yield. 3.2. Search protocol To answer the research questions,
    we carried out a systematic search of the literature available in digital libraries
    that publish high-quality articles such as IEEE Xplore, Science Direct, Springer,
    Web of Science and Scopus. The use of new technologies in agriculture has become
    increasingly frequent in recent years. Consequently, literature from the last
    eight years (2015–2023) was used in this study. The targeted articles were journal
    articles. In order to find as many relevant results as possible, an automated
    search and a manual search were carried out. The automated search was carried
    out using search strings in the digital libraries listed above. The syntax of
    each database is different. An example of the general syntax of the search string
    is illustrated by the following query: (\"Smart irrigation \" OR \" Irrigation
    planning \") AND (\"Reference crop evapotranspiration \" OR \" Soil classification
    \" OR \"Soil chemical properties\") AND (\"Artificial intelligence \" OR \" Machine
    learning \" OR \" Internet of things \"). A manual search was carried out by manually
    going through the list of references of articles discovered by the automated search
    (snowball effect). Table 2 shows the keywords used to find relevant articles Table
    2. List of keywords used by category. Study problem Factors New Technologies ‘‘Smart
    irrigation’’ ‘‘ Crop evapotranspiration’’ OR ‘‘Artificial intelligence’’ ‘‘ Reference
    crop evapotranspiration’’ OR ‘‘ Soil classification’’ OR ‘‘Soil texture’’ OR ‘‘Soil
    chemical properties’’ OR ‘‘Soil moisture’’ OR ‘‘Groundwater level’’ OR ‘‘Goundwater
    quality’’ OR ‘‘Saturated hydraulic conductivity’’ OR ‘‘Unsaturated hydraulic conductivity’’
    OR OR OR ‘‘Machine learning’’ OR ‘‘Irrigation planning’’ ‘‘Deep learning’’ OR
    ‘‘Internet of things’’ ‘‘Weed detection’’ OR ‘‘Weed classification’’ OR OR ‘‘Disease
    detection’’ OR IoT ‘‘Disease classification’’ OR ‘‘Agricultural practices’’ OR
    ‘‘Crop coefficient’’ The search results are listed in the second column of Table
    3. The source containing the highest number of studies was Science Direct with
    413 studies, and the source containing the lowest number of studies was Springer
    with 19 studies. In total, 625 articles were identified by the automated search
    and 47 articles were added by the manual search. Table 3. Overview of search results
    and study selection. Sources After Automated and manual search After applying
    selection criteria Science Direct 413 43 Springer 19 0 IEEE Xplore 60 2 Scopus
    108 11 Web of Science 25 0 Manual search 47 14 Total 672 55 3.3. Selection criteria
    Journal articles, conference papers and book chapters were potentially provided
    after applying the search strings. Based on the search results, we applied the
    selection criteria presented in Table 4 to identify the most relevant studies.
    First, the selection criteria were applied by choosing only journal articles and
    reading the title, keywords and abstract of the studies. Next, we proceeded to
    a detailed reading of the studies and the application of exclusion criteria. After
    applying these criteria, 55 of the 672 articles were retained. The selection process
    is shown in Table 3. Table 4. List of selection criteria. No Criteria EC 1 Articles
    for which full text is not available EC 2 Non-English papers EC 3 The double publication
    found in several sources EC 4 Papers do not address research questions. EC 5 Papers
    whose proposed study has not been validated 3.4. Quality assessment We also assessed
    the quality of the 55 studies before moving on to the data synthesis stage. In
    this research, quality assessment was part of data extraction. When reading the
    articles, the quality criteria presented in Table 5 were applied as adopted by
    (Kitchenham et al., 2009) and other SLR researches. Studies were ranked according
    to the quality of their final product, and a three-point scale (yes, partial,
    no) was used for each criterion found during the process. At this stage, articles
    scoring less than four points out of eight were excluded. Fig. 1 shows that all
    primary studies obtained a score between five and seven after evaluation of all
    articles. Consequently, no exclusion decision was made regarding these studies,
    and all the 55 studies will be used in the data extraction process. Table 5. List
    of quality criteria. No Question Yes(1) Partial (0.5) No(0) Q1 Are the study''s
    objectives clearly defined? Q2 Is the study''s scope and context clearly stated?
    Q3 Are the study variables valid and reliable? Q4 Is the research process properly
    documented? Q5 Are all the questions in the study answered? Q6 Are negative results
    reported? Q7 Are the main conclusions clearly presented? Q8 Are the conclusions
    coherent with the study''s objective? Download : Download high-res image (46KB)
    Download : Download full-size image Fig. 1. Distribution of quality scores for
    selected articles. 3.5. Data extraction To answer the research questions, it is
    necessary to read the 55 primary studies carefully and in full. For this reason,
    a data extraction table was developed to collect and retrieve all relevant information
    from these studies. The development of the data extraction table followed an iterative
    process. First, we rigorously read several arbitrarily selected articles to create
    the data extraction table. Then, the initial data extraction table was used on
    other selected articles to extract the data, and if it turned out that the table
    still didn''t cover all the information, we updated it and used the revised table
    on subsequent articles. This process was repeated. Finally, our final data extraction
    table includes general information such as study title, authors, year of publication
    and place of publication. It also contains specific information that directly
    answers the research questions such as the target domain, the main objectives
    of the study, the material used, the artificial intelligence algorithms used,
    the results and the limitations of the study. Details of the data extraction table
    are provided in the Table 6 in appendix A.(Table 6) Table 6. The data extraction
    table used in this SLR. Empty Cell Extraction element Contents General information
    1 Title Full article title 2 Year Year of publication 3 Authors 4 Repository Science
    Direct, Springer, IEEE Xplore, Scopus,Web of Science Study description 5 Targeted
    domain 6 Study motivation 7 Main aims of the study 8 Study area 9 Data used 10
    Range of data 11 Material used to acquire data 12 Data processing methods 13 Artificial
    intelligence algorithms used 14 Findings 15 Limitations 16 Future Works Evaluation
    17 Personal note Reviewer opinion about the study 18 Additional note Publication
    details 19 Quality assessment Quality scores 3.6. Data synthesis Data synthesis
    is the process of gathering and summarizing the extracted data in a way that answers
    the questions posed. To achieve this, we tried to extract the obstacles and limitations
    of each study and to search, in the selected primary articles, for other solutions
    and innovations capable of filling the gaps found. We used tabular representation
    of the data where possible, which enabled us to make comparisons between studies.
    In this way, we were able to extract the future paths of research that remain
    to be explored. 4. Results This section presents the results of data extraction
    and synthesis. The first sub-section presents the general statistics of the primary
    studies, and the following sub-sections discuss the results corresponding to the
    research questions. 4.1. General statistics The 55 primary studies included in
    this search are listed Table 7. Table 7. The 55 primary studies used as input
    for the SLR. (Di Nunno and Granata, 2023) 2023 (A et al., 2022) 2022 (H. Kashani
    et al., 2020) 2020 (Gong et al., 2021) 2021 (Abowarda et al., 2021) 2021 (Aguilera
    et al., 2022) 2022 (Lu et al., 2023) 2023 (Chandrappa et al., 2023) 2023 (Rezaei
    et al., 2023) 2023 (Maroufpoor et al., 2020) 2020 (Masrur Ahmed et al., 2021)
    2021 (W. Zhao et al., 2023) 2023 (Sharafi et al., 2023) 2023 (Datta and Faroughi,
    2022) 2022 (Gao et al., 2021) 2021 (Wu et al., 2022) 2022 (Togneri et al., 2022)
    2022 (Dang et al., 2023) 2023 (L. Zhao et al., 2022) 2022 (Bennett, 2023) 2023
    (Luo et al., 2023) 2023 (Y. Zhang et al., 2020) 2020 (Cai et al., 2022) 2022 (Ruigrok
    et al., 2023) 2023 (Becker et al., 2023) 2023 (Cai et al., 2021) 2021 (Janarthan
    et al., 2022) 2022 (Karimzadeh Soureshjani et al., 2019) 2019 (Chen et al., 2022)
    2022 (Pal and Kumar, 2023) 2023 (Al-Naji et al., 2021) 2021 (Gharehbaghi et al.,
    2022) 2022 (Guo et al., 2022) 2022 (Inazumi et al., 2020) 2020 (M. Han et al.,
    2015) 2015 (Yang et al., 2023) 2023 (J. and T., 2023) 2023 (Liu et al., 2022)
    2022 (Souza et al., 2020) 2020 (Kurtulmuş et al., 2022) 2022 (Sheikh Khozani et
    al., 2022) 2022 (Sawadogo et al., 2023) 2023 (Andrade et al., 2020) 2020 (Veloso
    et al., 2022) 2022 (Shao et al., 2021) 2021 (Hatanaka et al., 2022) 2022 (Tian
    et al., 2018) 2018 (Shao et al., 2023) 2023 (Lin et al., 2022) 2022 (D’Emilio
    et al., 2018) 2018 (W. Zhang et al., 2022) 2022 (Srisomkiew et al., 2021) 2021
    (Mozaffari et al., 2022) 2022 (Xiao et al., 2023) 2023 (Albalasmeh et al., 2022)
    2022 Fig. 2 shows the distribution by year of the studies selected between 2015
    and 2023 with the majority corresponding to articles from the last four years,
    as the use of new technologies in agriculture has become increasingly common in
    recent years. Download : Download high-res image (36KB) Download : Download full-size
    image Fig. 2. Year of publication of the primary studies. Fig. 3 shows that China,
    Iran and the USA are the main contributors having produced the greatest number
    of documents, with 20, 7 and 5 respectively. They are followed by Brazil, Australia,
    Japan, the Netherlands, India, Italy and other countries not mentioned here. Download
    : Download high-res image (56KB) Download : Download full-size image Fig. 3. Number
    of studies carried out by the main contributing countries. Fig. 4 shows the top
    five journals from which we extracted the articles to be studied. Journal of Hydrology,
    Computers and Electronics in Agriculture and Agricultural Water Management are
    the most important, with 9, 9 and 8 respectively, followed by Soil and Tillage
    Research and Geoderma with 3 each. Download : Download high-res image (59KB) Download
    : Download full-size image Fig. 4. Top five journals used in research. 4.2. Research
    questions analysis The ultimate goal of our study is intelligent irrigation management.
    We have tried through the research questions to build up a holistic idea of almost
    all the characteristics of a field and how they affect and interact with plantations
    to ensure efficient irrigation planning. Our research questions are progressive,
    the answer to one question generates another. In this section, we will attempt
    to answer these questions by analyzing and criticizing previous works. 4.2.1.
    RQ-1: What new technologies are being used to estimate and predict the ETo climate
    parameter? The total amount of water lost through evaporation per unit area of
    soil where crops are grown is known as reference crop evapotranspiration (Hunasigi
    et al., 2023). ETo is a complex and non-linear parameter that is therefore difficult
    to measure and is influenced by several meteorological factors, which, combined
    together, affect the soil evaporation process. ETo is generally evaluated by means
    of empirical and semi-empirical equations in which temperature, wind speed and
    humidity are forming some of the key climatological data that provide the energy
    required for evaporation and remove water vapour from the evaporating surface
    (Anderson and French, 2019). Fig. 5 shows some of the meteorological factors that
    influence the value of the ETo parameter. Download : Download high-res image (131KB)
    Download : Download full-size image Fig. 5. Meteorological factors influencing
    the ETo parameter. The development of new technologies has greatly helped researchers
    to move from assessment to estimation and prediction of this coefficient by combining
    empirical equations in artificial intelligence algorithms to make short and long-term
    predictions of ETo in order to fully understand this phenomenon in the field and
    therefore manage the resources needed to make up for soil evaporation losses.
    (Lu et al., 2023) proposed a hybrid prediction model based on signal processing
    methods combined with the propagation neural network (BPNN) model to increase
    the reliability of ETo time series estimation. The study achieved very good estimation
    results for a period of up to seven days, but after that, the model''s performance
    began to degrade. To improve the study, an analysis of the contribution rate of
    various meteorological factors can be included, as used by (L. Zhao et al., 2022)
    who relied on the KNN algorithm to extract the contribution rate of meteorological
    factors and use those with a high contribution rate as inputs to the Elman forecast
    model which has been optimized by optimization algorithms. The proposed model
    presented high accuracies only in regions where temperature factors change relatively
    little throughout the year, a feature that does not affect model calculations.
    We can conclude that another algorithm other than Elman should be chosen for other
    regions with considerable variations in input factors in order to improve ETo''s
    daily prediction study. Another method of determining the meteorological factors
    that have a major influence on a study area is to make a comparison between empirical
    equations for calculating ETo as used by (Wu et al., 2022) who, after dividing
    China into four climate classes, made a comparison between twelve empirical equations
    to find the most accurate equation for use with machine learning algorithms to
    predict ETo.The results showed that the Penman model presented the best estimate
    of ETo across China.(Sharafi et al., 2023) made a comparison between three empirical
    equations; BARO, JEHA and Penman in Iran. The results showed that machine learning
    models based on the combination of input variables from the three equations obtained
    the best accuracies, especially in semi-arid climates. One recommendation suggested
    by the authors consists in using relative humidity as a crucial parameter in ETo
    prediction for humid regions. The aim of the articles discussed above was to estimate
    ETo on a daily basis. (Di Nunno and Granata, 2023) took a different approach to
    predict long-term ETo in areas of Italy. They relied on historical climate parameters
    (Tmax and Tmin) taken from historical CORDEX data, and future ones based on two
    future scenarios of greenhouse gas concentration trajectories combined with machine
    learning algorithms for long-term ETo prediction taking into account the impact
    of climate change. Since the study was based solely on historical and future temperatures
    and extraterrestrial radiation Ra, it can be very useful in identifying the most
    sensitive areas in terms of potential water deficit in the future rather than
    estimating ETo. In addition, the use of data from weather stations near the study
    area could have resulted in more reliable climatic variables. Table 8 gives more
    details of the systems studied. Table 8. Studies using new technologies to estimate
    and predict ETo climate parameter. Main function Study area Technologies used
    Results Limitations Citation Short-term prediction of ETo Arid and semi-arid regions
    of northern China Propagation neural network model (BPNN) The estimation results
    were very good for a period of up to seven days, but after that, the model''s
    performance began to degrade. The proposed model was unreliable at weather stations
    where minimum temperatures were lower than at other stations. (Lu et al., 2023)
    Machine learning algorithms The Catboost model outperformed other models in ETo
    predictions with the same input data. Further study should consider evaluating
    model performance using ETo experimental data as targets. (Y. Zhang et al., 2020)
    different climates in China -KNN algorithm -Elman algorithm -Optimization algorithms
    The study revealed that each model has the highest accuracy with the combination
    of surface radiation input (Rs) and temperature (T) input. The proposed models
    did not respond in the same way in terms of accuracy in all the study regions.
    (L. Zhao et al., 2022) -Extreme learning machine algorithm -Whale optimization
    algorithm (WOA) The results showed that the optimized empirical Penman model presented
    the best estimate of ETo across China. Other machine learning algorithms need
    to be tested to compare their performance with the one used in this research.
    (Wu et al., 2022) different climates in Iran Machine learning algorithms The best
    accuracies were obtained especially in semi-arid climates. Most models were wrong
    in estimating daily ETo in hyper-arid and humid climates, due to the great complexity
    of the evaporation process. (Sharafi et al., 2023) different climates in Iran
    - Machine learning algorithms -Optimization algorithms The proposed hybrid model
    was able to estimate ETo values for the whole of Iran using the simplest climate
    variables, that is, temperature and wind speed. The model''s performance needs
    to be tested under conditions of climate change to improve results. (Maroufpoor
    et al., 2020) Short, medium and long-term prediction of ETo different climates
    in China -Extreme learning machine algorithm - Optimization algorithms The proposed
    hybrid model made it possible to accurately estimate ETo on different time scales
    and with limited input data. ETo''s predictions for areas with climatic complexities
    were not good. (Gong et al., 2021) Long-term prediction of ETo Coastal and inland
    areas in Italy Machine learning algorithms The established solution enabled a
    complete analysis and assessment of reference evapotranspiration trends. The study
    was based on a small number of variables, which made it necessary to take other
    parameters into account. (Di Nunno and Granata, 2023) We can conclude from all
    these articles that, to date, there is no universal model for estimating ETo and
    therefore the effect of soil evaporation in different areas having the same climate.
    Models need to be developed for each region of the world, indicating the best
    input parameters and the best artificial intelligence model to use to accurately
    predict ETo. RQ1.1: Does a good prediction of this coefficient guarantee good
    irrigation scheduling? In other words, is irrigation intensification always the
    optimal solution to compensate for the effect of soil evaporation, or do we need
    to think differently? Some climatic changes such as the increase in atmospheric
    CO2 concentration and temperature accelerate water loss through evaporation. The
    most obvious and simple solution to compensate for these losses is to increase
    irrigation intensity, but this is not always the most optimal solution. (Becker
    et al., 2023) conducted a research study in a heat-stressed region to see how
    the yield of certain crop types varied with increasing temperature. They found
    that the increase in CO2 in the atmosphere of the study region had a positive
    effect on the yield of certain crop types, and so heat stress in this case led
    to a reduction in water demand. Nevertheless, these results could be different
    in the case of constantly rising temperatures. Another study carried out by (Karimzadeh
    Soureshjani et al., 2019) that addressed the existing relation between crop yield
    and temperature conditions came to the following result: management practices
    such as adjusting planting date can be applied by knowing the critical crop periods
    during which these crops are most vulnerable to climate change conditions. According
    to these results, the irrigation scheduling is not only dependent on climatic
    changes due to weather conditions, but also on the biophysical responses of crops
    summarized in the crop coefficient Kc, which in turn is affected by several factors
    that are the physical, chemical, biological and hydrological characteristics of
    the soil. RQ2: What factors have a significant influence on the crop coefficient
    Kc as mentionned in FAO Irrigation and Drainage Paper? The value of the Kc coefficient
    varies considerably according to a number of factors including crop-specific factors
    such as crop type, season and growth stage, etc., soil-related factors such as
    the physical, chemical and biological properties of the soil, and agricultural
    practices. For precise and real-time irrigation management purposes, the Kc coefficient
    is driven by two coefficients, a base crop coefficient Kcb which describes the
    plant transpiration process and a soil water evaporation coefficient Ke (Anderson
    and French, 2019). In the next part of this article, we''ll try to shed light
    on the factors we believe have the greatest influence on determining the Kc coefficient.
    We will discuss and analyze new researches that use Internet of Things and Artificial
    Intelligence technologies for the detection and prediction of each factor. RQ2.1:
    What effect do soil physical properties have on agricultural management in general?
    What new technologies are being used in this field of research? Texture is a physical
    soil property quantified by the relative proportions of sand, clay and silt particles.
    It is these proportions that primarily indicate the physical quality of the soil
    in terms of hydraulic conductivity and water storage capacity, so determining
    soil texture is of paramount importance for planting and irrigation management
    purposes (Kurtulmuş et al., 2022). (Inazumi et al., 2020) used a smartphone to
    capture images under different lighting conditions and soil surface appearances
    with the aim of identifying three soil types using a neural network model. The
    solution discussed allowed the identification of all the sand images, whereas
    the results were not good for the other soil types as they required adjustment
    of the learning parameters which was not easy for the authors to do given the
    limited performance of the equipment used. This study could be improved in this
    direction, and even for sandy soil detection by taking into account other conditions
    such as soil moisture. The detection and classification of four clay soil types
    was the main focus of (J. and T., 2023) who captured images with a smartphone
    during all seasons and at different altitudes in every hectare of the study area
    to appropriately predict soil color characteristics. The proposed multi-stack
    ensemble model achieved very good results in terms of accuracy and precision.
    (Al-Naji et al., 2021) took images of a set of silty soil samples at different
    times and light levels, via a video camera placed at different distances, to analyze
    it using a back propagation neural network for irrigation need prediction purposes.
    The proposed solution achieved ideal results. However, the system focused on a
    particular soil type and should be extended to other soil types. This was the
    aim of the study carried out by (Kurtulmuş et al., 2022) who relied on deep learning
    algorithms to distinguish between three classes of soil texture under different
    illumination and hydration conditions for irrigation scheduling. This work, considered
    to be the first work that used deep learning for texture-water class identification,
    can be improved by taking real-time image samples containing green plants with
    a wider range of conditions. Table 9 gives more details of the systems studied.
    Table 9. Studies using new technologies for soil texture detection and irrigation
    planning. Main function Target Technologies used Results Limitations Citation
    Intelligent detection and classification of soil textures Identify three types
    of soil: sand, clay and gravel -Neural network model -Smartphone camera The solution
    identified all the sand images without any problem. The results were not good
    for the other soil types due to the limited performance of the computer used.
    (Inazumi et al., 2020) Detection and classification of four types of clay soil
    -Multiple-stack assembly model -Smartphone camera The proposed model produced
    very good results in terms of accuracy and precision. The model, according to
    the authors, can never be idealized due to noise in the input data or error sensibility
    in the model itself. (J. and T., 2023) Irrigation planning based on soil texture
    color Predicting irrigation requirements for silty soils -Video camera -Back Propagation
    Neural Network model The proposed solution produced ideal results, as demonstrated
    by a coefficient of determination R²=1. The system has focused on one particular
    soil type and should be extended to other soil types. (Al-Naji et al., 2021) Irrigation
    planning by distinguishing between three classes of soil texture: clay, silt and
    sandy silt Deep learning algorithms The proposed model led to very satisfactory
    results in terms of accuracy despite the fact that it was not the best in terms
    of detection speed. This work can be improved by taking real-time image samples
    containing green plants with a wider range of conditions. (Kurtulmuş et al., 2022)
    We can conclude that soil texture is an essential factor in precision agriculture.
    Researches aimed at identifying and classifying soil textures can be exploited
    in plantation management by choosing the type of crop that will give the best
    yield according to the physical properties of the field under study, as well as
    for irrigation planning and management purposes, since soil color can give an
    idea of the soil''s hydric properties. If we could come up with a model that encompasses
    all soil textures for crop management and irrigation purposes, then we could say
    that this model is the leader for this factor. Future works can be directed towards
    the creation of a model based on Artificial Intelligence and on Internet of Things
    technologies, that encompasses the totality of soil textures for crop management
    purposes and combines physical factors with soil chemical and biological factors
    for precise irrigation planning. RQ2.2: What effect do soil chemical properties
    have on agricultural management in general? What new technologies are being used
    in this field of research? Soil chemical properties are just as important as soil
    physical properties. Monitoring soil nutrient levels, cation exchange capacity
    and soil organic matter is of great importance as changes in these parameters
    directly influence crop coefficient and therefore yield (López-Arredondo et al.,
    2017). Fig. 6 shows the role of macronutrients, organic matter, cations and soil
    bacteria on plant development and growth. Download : Download high-res image (182KB)
    Download : Download full-size image Fig. 6. The role of macronutrients in crop
    growth (López-Arredondo et al., 2017). Many studies have exploited new technologies
    to predict soil chemical properties. The research conducted by (Andrade et al.,
    2020) illustrates this. They used soil characteristic data acquired by portable
    X-ray fluorescence spectrometry (pXRF) to train machine learning algorithms to
    predict: total nitrogen, cation exchange capacity and soil organic matter. In
    general, the model results were acceptable. The samples taken concerned Eucalyptus
    plantations, so the model can be developed and improved by taking other: crop
    types, soil variabilities and environmental conditions. (Srisomkiew et al., 2021)
    created digital soil maps to assess soil nutrient levels for the main reason of
    improving rice yield in the study area. The model developed in the study is MLR,
    which included soil data, terrain variables from a digital elevation model and
    satellite images collected under specific conditions to identify the most important
    spectral indices for prediction. Table 10 gives details of the systems studied.
    Table 10. Studies using new technologies to predict soil chemical properties.
    Target Technologies used Results Limitations Citation Prediction of total nitrogen,
    cation exchange capacity and soil organic matter -Portable X-ray fluorescence
    spectrometry (pXRF) -Machine learning algorithms In general, the model results
    were acceptable as this study is one of the few conducted on soil types under
    tropical conditions. The proposed model was influenced by the highly dynamic behavior
    in the soil environment of the input variables caused by soil management. (Andrade
    et al., 2020) Assessment of soil nutrient levels -MLR model -Digital elevation
    model -Satellite images The digital maps generated made it possible to accurately
    assess various soil properties. Some characteristics failed the test due to the
    timing of sampling which took place during a dry season. (Srisomkiew et al., 2021)
    Predicting the ion composition of soil samples to avoid soil salinity Machine
    learning models The model proposed with the input combination of soil temperature,
    soil water content and electrical conductivity was able to predict all soil salinity
    parameters with better accuracy, stability and generalizability than other models.
    Model generalization and stability become poor with multiple input parameters.
    (Xiao et al., 2023) Monitoring and predicting soil chemical properties also helps
    prevent major soil problems such as soil salinization. If soil salinity parameters
    exceed a certain level, plants will find it difficult to absorb water and nutrients
    and the evapotranspiration process may even stop. Predicting soil salinity to
    guide planting and irrigation was the main reason for the research conducted by
    (Xiao et al., 2023). They evaluated the performance of machine learning models
    to predict the ion composition of soil samples in an arid region of China. The
    results showed that the greater the number of input parameters the higher the
    accuracy of the model, but on the other hand, the lower the generalization capacity
    and stability. This study sees prospects in combining Internet of Things technologies
    with Artificial Intelligence algorithms for a more efficient and cheaper saline-soil
    monitoring. Soil organic matter is a key factor determining variation in soil
    mechanical and hydrological properties (Hatanaka et al., 2022, Lin et al., 2022).
    (Lin et al., 2022) found that the improvement of soil mechanical properties (degree
    of compaction) is linked to the preservation or increase in soil organic matter
    content, while (Hatanaka et al., 2022) found that the alleviation of soil water
    deficit is linked to the accumulation of soil organic matter which contributes
    to moist, heavy metal-poor and nutrient-rich conditions. We can conclude that
    the evapotranspiration process is also linked to the chemical properties of the
    soil. Maintaining a suitable level of these properties, according to agricultural
    needs, helps to increase yields by avoiding, on the one hand, problems linked
    to soil salinity and, on the other, mechanical and hydrological soil problems.
    RQ2.3: What are the soil''s hydrological properties to be taken into account when
    managing irrigation? Accurate real-time irrigation scheduling requires the use
    of the dual crop coefficient approach Kc=Kcb+Ke, where Ke is the soil evaporation
    coefficient. Estimation of Ke requires daily monitoring and calculation of soil
    water content in the upper arable layer (Anderson and French, 2019), hence the
    need to monitor soil moisture levels for irrigation management purposes. RQ2.3.1:
    What new technologies are being used to estimate soil moisture? (Chandrappa et
    al., 2023) used Internet of Things technologies presented by soil moisture sensors
    installed at different depths decided according to the depth of plant roots in
    the study site and installed at different zones in terms of water retention capacity
    of the study area in order to predict soil moisture. In addition to prediction,
    another aim of the study was to understand the relation between soil moisture
    and seasonal variation in meteorological data. The results showed a strong correlation
    between seasonally grouped input parameters and non-seasonal ones. Combining remote
    sensing and Internet of Things technologies to simulate soil moisture distribution
    was one of the authors'' proposals for improving the study. Integrating remote
    sensing data may also be helpful to overcome the problems of sensor data quality
    such as noise, errors and data discontinuity due to equipment failure or network
    problems (Abowarda et al., 2021). The study conducted by (Togneri et al., 2022)
    could have achieved more accurate and precise results if it had included real-time
    remote sensing data on crop phenology such as leaf area index (LAI) and normalized
    difference vegetation index (NDVI), and not relied on traditional statistically
    defined coefficients to predict maximum and minimum next-days soil moisture values
    for reasons of monitoring the risk of extreme values. Table 11 gives details of
    the systems studied. Table 11. Studies using new technologies for soil moisture
    prediction. Target Technologies used Results Limitations Citation Seasonal soil
    moisture prediction -Soil moisture sensors -Machine learning and deep learning
    algorithms The algorithms performed differently from season to season. Each season
    had a specific algorithm that performed better than the others. Simulation of
    soil moisture distribution must be included in the study to determine the optimum
    location for sensors. (Chandrappa et al., 2023) Daily prediction of maximum and
    minimum soil moisture values -Soil moisture sensors -Machine learning algorithms
    The results showed that the LightGBM algorithm performed best in terms of accuracy
    and stability. Maximum humidity is difficult to predict due to uncertainties linked
    to input parameters. (Togneri et al., 2022) Continuous spatio-temporal prediction
    of soil moisture in the root zone -ConvLSTM model -Remote sensing data -Hydrus-1D
    physical model The results of the model estimation, especially for deep layers,
    have increased significantly compared to the products of the GLDAS global system.
    The study showed that there is a high correlation between groundwater level and
    soil moisture, but due to the lack of information, this level was not taken as
    a predictor variable in the ConvLSTM model. (A et al., 2022) Short- and long-term
    soil moisture prediction Multi-head LSTM model The model produced highly accurate
    results, with a coefficient of determination R²=95.04% for future predictions.
    The model can be enhanced by adding other physical attributes as input data. (Datta
    and Faroughi, 2022) Remote sensing-based variables such as normalized difference
    vegetation index (NDVI) and vertical spatiotemporal soil moisture data from the
    Hydrus-1D physical model were used by (A et al., 2022) as input variables to the
    ConvLSTM model for continuous spatiotemporal prediction of root zone soil moisture
    with good large-scale accuracy. Hourly, daily, weekly and even monthly soil moisture
    prediction was the objective of the study carried out by (Datta and Faroughi,
    2022). They trained a multi-headed LSTM model with past soil moisture time series
    to estimate its future values. The proposed model was very efficient and can be
    improved by adding other physical attributes as input data. In hydrology, estimating
    soil moisture is paramount as a key regulating element in understanding groundwater
    conditions (Masrur Ahmed et al., 2021). The relation between groundwater and soil
    moisture was discussed by (A et al., 2022), they showed that there is a strong
    correlation between groundwater level and soil moisture. The recharge and support
    functions between soil moisture and groundwater depend on the depth of the groundwater.
    RQ2.3.2: What is the effect of groundwater on crop growth, and how can we exploit
    new technologies to estimate and predict groundwater levels? We can''t talk about
    agriculture without water resources, and among these resources, groundwater is
    of great importance in the agricultural sector. For example, the water balance
    of the root zone is modified by shallow groundwater, which has a more complex
    impact on crop growth and production (Chen et al., 2022). (M. Han et al., 2015)
    found that groundwater level has a significant impact on crop growth in the study
    area as well as on various aspects of soil water balance. Cotton growth was influenced
    by groundwater levels at various locations, both favourably and unfavourably.
    Capillary rise in the water table is also strongly influenced by cotton growth.
    Consequently, groundwater is a vital element that needs to be taken into account
    in agricultural management. Groundwater level prediction is also used for irrigation
    planning purposes and to prevent overexploitation and depletion of underground
    water resources. Several studies have taken advantage of new technologies to predict
    groundwater levels for irrigation management purposes. (Sheikh Khozani et al.,
    2022) have used a hybrid model that combines the ARIMA statistical model, the
    LSTM algorithm and optimization algorithms to capture the non-linear and linear
    components of a groundwater level time series for groundwater index prediction
    purposes over periods ranging from three to nine months without the use of climatic
    data. The proposed model is very useful in situations where modellers do not have
    access to meteorological data, but despite this valuable contribution, according
    to the authors, the model can be developed and improved either by integrating
    meteorological parameters to better understand the relation between these parameters
    and groundwater, or by relying on future scenarios for simulating meteorological
    parameters in the context of climate change and using other Artificial Intelligence
    algorithms coupled to the ARIMA model. (Gharehbaghi et al., 2022) used, in addition
    to observed hydrological and groundwater depth data, regional meteorological data
    to predict groundwater levels in different arid and semi-arid agricultural zones
    in Iran. The final model proposed, entitled GRU2+, was deemed innovative and unique.
    Despite all this, the proposed model has certain limitations as it requires continuous
    measurements of the various inputs in addition to the difficulty of prediction,
    since groundwater level is a non-stationary, complex and inconsistent phenomenon.
    The regional study conducted by (Cai et al., 2021) had two main objectives. The
    first objective was the prediction of groundwater levels using the GRU neural
    network, and the second objective was to study the impact of regional characteristics
    on improving prediction accuracy. The proposed model performed better in regions
    with climatic, geological and topographical features that favor more effective
    groundwater responses to dynamic external changes than in other regions where
    results were worse. This drawback could have been overcome if physical constraints
    had been included in the algorithms used to interpret the physical significance
    and hence generality of the model. The approach adopted by (Cai et al., 2022)
    addressed this need by integrating groundwater-related water balance equations
    as physical constraints in pure and hybrid deep learning architectures. Despite
    all the efforts made, the black-box nature of the proposed hybrid model is still
    not revealed due to the lack of detailed geographical information, insufficient
    hydrometeorological data and historical observations, and tedious manual adjustment
    of the learning parameters. The model therefore still needs to be improved to
    ensure its universality. Table 12 gives more details of the systems studied. Table
    12. Studies using new technologies to predict groundwater levels. Target Technologies
    used Results Limitations Citation Prediction of groundwater level index -LSTM
    algorithm -ARIMA statistical model -Optimization algorithms The model was able
    to provide accurate forecasts for current periods, while accuracy decreased with
    increasing forecast horizon. The model can be expanded to include meteorological
    parameters to better understand the relation between these parameters and groundwater.
    (Sheikh Khozani et al., 2022) Groundwater level prediction in different arid and
    semi-arid agricultural areas in Iran GRU-based neural network models The model
    demonstrated its superiority over other state-of-the-art algorithms in terms of
    accuracy, simplicity and efficiency of long-term groundwater level prediction.
    The proposed model has certain limitations as it requires continuous measurements
    of the various inputs, in addition to the difficulty of prediction due to the
    fact that groundwater levels are a non-stationary phenomenon. (Gharehbaghi et
    al., 2022) Groundwater level prediction and study of the impact of regional characteristics
    on improving prediction accuracy GRU neural network The proposed model performed
    better in regions with characteristics that favor more effective groundwater responses
    to dynamic external changes. The model performance depended on the characteristics
    of the study area. (Cai et al., 2021) Pure and hybrid deep learning architectures
    The results showed the superiority of the proposed hybrid model over pure deep
    learning models, making the model more accurate and interpretable. The black-box
    nature of the proposed hybrid model has yet to be revealed. (Cai et al., 2022)
    Groundwater quality for irrigation purposes is another area of study. In addition
    to the existence of groundwater, the quality of this water for irrigation purposes
    needs to be ascertained. (Liu et al., 2022) found that human activities affect
    the hydrochemical characteristics of groundwater. The increase in some chemical
    characteristics has reduced vegetation growth and limited plant cover, and worse
    than that, posed risks to human health. (Bennett, 2023) assessed the quality of
    groundwater used for irrigation in Tanzania. They found that the majority of groundwater
    in the study area is classified as poor to unsuitable for irrigation, so treatment
    is essential before use in irrigation to avoid low yields. The use of a tolerable
    rate of fertilizer in order to minimize the concentration of chemical components
    unsuitable for vegetation growth in the study area, is one of the solutions proposed.
    RQ2.3.3: What is the effect of hydraulic conductivity on irrigation scheduling,
    and how can we exploit new technologies to estimate and predict hydraulic conductivity?
    Saturated hydraulic conductivity and unsaturated hydraulique conductivity are
    other important parameters in irrigation scheduling. They are used to characterize
    many aspects of soil water flow such as infiltration, water balance, nutrient
    migration, irrigation and drainage system design and monitoring (D’Emilio et al.,
    2018). Direct measurements cannot easily deduce these parameters under natural
    conditions, whatever the scale of interest (Rezaei et al., 2021) as they present
    a high degree of spatial heterogeneity (Fu et al., 2021). (Tian et al., 2018)
    have attempted, through the use of thermal pulse sensors and a simple water balance
    approach, to continuously estimate the fine depth-scale dynamics of unsaturated
    hydraulic conductivity under field conditions. Although this method has shown
    promising results, it has only been tested in a sandy loam soil and under simple
    meteorological conditions, hence the need for more in-depth studies under other
    field conditions, which is difficult due to the financial and practical constraints
    associated with routine hydraulic conductivity measurement. Pedotransfer functions
    (PTFs) are indirect methods for estimating hydraulic conductivity from other easily
    measurable soil properties such as organic carbon, ph, hydraulic conductivity,
    etc. (Vereecken et al., 2010). (Mozaffari et al., 2022) made a comparison between
    visible-near-infrared spectroscopy with classical regression pedotransfer functions
    for the prediction of saturated and quasi-saturated hydraulic conductivity of
    calcareous soils. The results showed that the PTFs developed are more accurate
    in terms of hydraulic conductivity prediction. This better performance of PTFs
    can be linked to the use of different attributes such as soil structure properties
    and particle size distribution parameters. The use of machine learning algorithms
    has become frequent in the development of TFPs. (Veloso et al., 2022) evaluated
    the performance of four machine learning algorithms in predicting saturated soil
    hydraulic conductivity and soil moisture PTFs at specific stresses in the Brazilian
    savannah. The results showed that regression trees were the best for predicting
    saturated hydraulic conductivity. (Albalasmeh et al., 2022) showed that the generalized
    regression neural network (GRNN) provided reliable predictions of saturated hydraulic
    conductivity in arid and semi-arid environments. (H. Kashani et al., 2020) developed
    and tested a hybrid model based on artificial neural networks to improve the accuracy
    of saturated soil hydraulic conductivity prediction in an arid region of Iran.(Aguilera
    et al., 2022) have exploited the advantages of artificial neural networks to develop
    a new methodology for mapping saturated hydraulic conductivity in the topsoil
    of their study area, based on quick and inexpensive auxiliary data.(Rezaei et
    al., 2023) have used remote sensing and field measured data for appropriate saturated
    hydraulic conductivity prediction and mapping in a sandy agricultural environment
    using machine learning algorithms based on trees. Table 13 gives more details
    of the systems studied. Table 13. Studies using new technologies to predict saturated
    hydraulic conductivity. Target Technologies used Results Limitations Citation
    Assessing the performance of machine learning algorithms in predicting saturated
    soil hydraulic conductivity Ks -Machine learning algorithms Algorithms based on
    regression trees obtained better results for Ks prediction. In addition, the predictor
    set with soil texture, structure and moisture variables showed the best results
    compared to the other predictor sets. The models overestimate low Ks values, while
    the property is underestimated at higher Ks values. This can be attributed to
    the high spatial variability of Ks and the relatively small number of samples
    used in this study. (Veloso et al., 2022) Evaluate the potential use of a generalized
    regression neural network to identify the optimal set of soil characteristics
    for predicting Ks in arid and semi-arid environments. Generalized regression neural
    network (GRNN) Soil texture parameters and electrical conductivity improved Ks
    prediction capability. In addition, the GRNN model provided reliable predictions
    of Ks. The predictive accuracy of Ks in sandy soils was not good due to the small
    sample size of this particular class. (Albalasmeh et al., 2022) Develop and test
    a hybrid intelligent model based on a multiple model strategy (MM-ANN) for soil
    Ks estimation. -Machine learning algorithms The results showed that the proposed
    model serves as an effective pedotransfer function for predicting soil Ks using
    readily available soil parameters as input variables. There were relatively high
    model estimation errors in the western part of the study area. (H. Kashani et
    al., 2020) Develop a new methodology for mapping topsoil Ks based on rapid and
    inexpensive auxiliary data. Artificial neural networks (ANN) The proposed model
    is robust and outperforms all the reference PTFs tested, and the methodology presented
    provides an inexpensive representation of the Ks distribution. The under-performance
    of the model is due to the anthropization of soils, hence the need to further
    improve the model by including other terrain attributes and spectral data. (Aguilera
    et al., 2022) Exploit remote sensing data with limited soil data and tree-based
    machine learning models to predict soil Ks. -Tree-based machine learning algorithms.
    - remote sensing The results of the RF model are robust and can therefore be applied
    to Ks mapping. The model led to slight overestimates and underestimates of Ks.
    (Rezaei et al., 2023) The difficulty in predicting hydraulic conductivity is due
    to the fact that the soil properties that affect this parameter depend on the
    spatial scale (Fu et al., 2021). (W. Zhao et al., 2023) have shown that the predictive
    accuracy of saturated hydraulic conductivity PTFs is affected when the sample
    size is too small to cover the study area, leading to seriously biased estimates
    if the assumed relationship does not verify in the region of extrapolation, so
    they concluded that there is still a lack of saturated hydraulic conductivity
    prediction models universally applicable to different regions that have nearly
    the same characteristics. RQ3: What is the effect of non-standard elements such
    as weeds and plant diseases on crop development and yield? Another factor affecting
    the evapotranspiration process is the presence of pests and weeds. Functions essential
    to crop development such as photosynthesis and water and nutrient uptake are disrupted
    and limited in the presence of weeds and pathogens (Gao et al., 2021), sometimes
    leading to catastrophic yields. Pest and weed detection is a highly advanced field
    that has benefited from the development of algorithms especially those of deep
    learning for the detection and classification of plant pests and diseases. Despite
    technological advances, this field still has certain shortcomings, which we will
    discuss below. RQ3.1: What new technologies are being used to manage weeds? Uncontrolled
    weeds can adversely affect the soil evaporation process. The use of herbicides
    is the solution used by farmers to control the spread of weeds. This solution
    can be a double-edged sword if not adopted rationally. Excessive use of herbicides
    can increase weed resistance to them and may even affect soil characteristics
    and food security. The study carried out by (Dang et al., 2023) focused on this
    aspect of precise weed location for rational herbicide application. They attempted
    to compare the performance of seven versions of YOLO object detectors for multi-class
    detection of weeds in the Cotton crop in real time. The robustness of the models
    can be improved by including more representative training data and optimized training
    strategies, as well as by testing other YOLO models. Table 14 gives more details
    of the systems studied. Table 14. Studies using new technologies to manage weeds
    and plant diseases. Main function Sub area of study Technologies used Crop type
    and cultivation environment Results Citation Weed management Real-time weed location
    -7 versions of YOLO object detectors -Digital and Smartphones cameras Cotton arable
    fields. The models offered differed in terms of precision, speed and complexity
    but in general, all versions offered great performance. (Dang et al., 2023) Weed
    location and detection in predictable and unpredictable scenarios -YOLOv3 detection
    model -Industrial cameras Arable fields of sugar beet and potatoes. The proposed
    model considerably reduced the generalization error, but the change in the type
    of camera used and the noise caused by fallen tree leaves affected the model''s
    performance. (Ruigrok et al., 2023) Weed seed detection -6 CNN models -Industrial
    image acquisition system 140 weed species collected from the wild and processed
    in an industrial environment. The performance of the models differed in terms
    of accuracy, cost and speed, and the choice of the best model depended on the
    specific requirements of use. In general, the best detection accuracies were linked
    to seeds with clear shape characteristics. (Luo et al., 2023) Plant disease management
    Real-time detection of plant diseases using a mobile application -Simplified model
    of MobileNetV2 architecture -Digital and Smartphones cameras -Images of apple
    tree leaves from an orchard. -Images of tomato, citrus and apple leaves from data
    available on the internet. The proposed lightweight deep learning model showed
    high detection accuracy with less computational resource requirements. Since the
    proposed model requires only a small amount of storage space, several models can
    be integrated into the same application. (Janarthan et al., 2022) Detection and
    classification of diseased leaves according to disease level and severity. -Image
    segmentation algorithms -DL model based on Kohonen network and INC-VGGN architecture
    Images of various crop types acquired from the Plant Village and Plant Doc databases.
    The results of the proposed model were better in terms of sensitivity, specificity
    and accuracy. (Pal and Kumar, 2023) Detecting the type and the degree of a plant
    disease -Transformer based models -RGB camera -Real-time images of cucumber plants
    and banana leaves. -Images of potato and tomato disease leaves from controlled
    environments. The results showed that the proposed model is robust, able to determine
    with high accuracy the type of diseases and their degree in complex contexts containing
    several noise sources and in stable contexts. (Guo et al., 2022) Classification
    of the type and severity of plant diseases simultaneously and separately Model
    based on a three-branch Swim transformer classification network 31,718 disease
    images acquired from the AI Challenger 2018 dataset. The proposed model performs
    very well in disease classification with an accuracy of 99%, while for severity
    classification, the accuracy is 88.73%. (Yang et al., 2023) Developing a general
    location and detection model that can be used in all predictable and unpredictable
    field scenarios is another hot topic. (Ruigrok et al., 2023) have tried, through
    the use of the YOLOv3 detection model, to study the effect of increasing the number
    of training images as well as their quality on the generalization of the weed
    detection model in order to decrease the error caused by generalization. They
    found that the addition of new image samples covering new variations led to an
    improvement in generalization, whereas the simple addition of images brought no
    added value in terms of generalization. Detection between the seeds of several
    weed species and crop seeds is the objective of the study conducted by (Luo et
    al., 2023). They proposed a system for detecting and classifying 140 weed species
    using sensors and deep learning algorithms trained on image samples containing
    several phenotypic characteristics of the seeds. Expanding the dataset is a proposal
    for improving this study. RQ3.2: What new technologies are being used to manage
    plant diseases? Accurate and rapid identification of plant diseases is a necessity
    in the agricultural sector. (Janarthan et al., 2022) have proposed a mobile application
    for the detection of diseases in different types of crops, the mobile application
    proposed does not require internet connectivity to operate. The generality of
    the application can be ensured by integrating active learning and incremental
    learning to classify unknown diseases, this is the first perspective of the study,
    the second perspective is to ensure the interpretation of results and recommend
    solutions to farmers. Taking measures according to the severity of diseased plants
    is a solution that limits the excessive use of pesticides. (Pal and Kumar, 2023)
    have proposed a model that ensures the detection and classification of diseased
    leaves according to disease severity level. Future work in this area will focus
    on: detecting multiple diseases in an image, knowing in addition to disease severity
    the stage of the disease in order to take suitable actions and using other samples
    from real-life scenarios. (Guo et al., 2022) used data acquired under natural
    and controlled environmental conditions to detect the type and the degree of a
    disease. Complexity and large size are the two drawbacks of the model, and these
    drawbacks increase both: the memory and the hardware requirements of the proposed
    model. Improvements need to be made in this area. (Yang et al., 2023) have proposed
    a model that enables the classification of disease type and severity simultaneously
    and separately. The model can be improved and generalized by taking a larger dataset
    and using it on mobile applications. So, we can conclude that pest and weed management
    is of great importance. The spread of weeds and pathogens simultaneously affects
    both evaporation and transpiration processes, leading to low yields. RQ4: Do the
    farming practices adopted in a field affect the crop coefficient, and if so, how
    does this manifest itself? The appearance of weeds can be caused by agricultural
    practices that are sometimes not adapted to the agro-system. (Souza et al., 2020)
    studied the effect of two irrigation systems on weed establishment and crop yield
    in the study area. They found that the mode of application and the quantity of
    water, directly affect weed dynamics, and these disturbances affect yield and
    the effectiveness of irrigation practices. It is therefore necessary to choose
    the appropriate irrigation method (micro-sprinkler, drip, etc.), according to
    the crop''s water requirements, and to ensure that it is placed in an optimal
    location (Sawadogo et al., 2023). Crop water requirements also differ according
    to the type of crop and more specifically, its growth stage. Crops generally pass
    through four growth stages: initial stage, crop development stage, mid-season
    stage and end-of-season stage (Anderson and French, 2019). Each growth stage has
    its own irrigation requirements, which is why Kc crop coefficient values change
    from one stage to the next. Precise estimation of the Kc coefficient for each
    crop type according to these growth stages, for irrigation planning purposes,
    remains a difficult operation up to now since several factors, as discussed earlier,
    enter into and affect the crop evapotranspiration process. Few studies have attempted
    to estimate the crop coefficient Kc using new technologies. (Shao et al., 2021)
    used the leaf area index (LAI) and six multi-spectral vegetation indices extracted
    from images acquired by an unmanned aerial vehicle (UAV) to train them in machine
    learning algorithms for field-scale estimation of the Kc value of the maize crop.
    The proposed model had a coefficient of determination R²=0.65. The study by (Shao
    et al., 2023) is an improvement of the previous study, they added four other multi-spectral
    vegetation indices and also took water stress into consideration. The results
    showed a coefficient of determination R²=0.65. Further improvement is therefore
    required by including other factors and other crop types. A good understanding
    of the characteristics of agricultural zones enables farmers to adapt the most
    suitable cultivation practices to their needs, resulting in excellent yields while
    optimizing water use.(W. Zhang et al., 2022) analyzed and evaluated the effect
    of combining mulching and drip irrigation on crop yields. The use of mulch in
    the study area produced good results in terms of crop yield and water use efficiency
    compared with areas where mulch was not included. The choice of the type of mulch
    to be applied depends on the climatic, crop and hydrological characteristics of
    the study area. 5. Discussion The dual crop coefficient method is widely used
    for irrigation scheduling (Anderson and French, 2019). Estimating and forecasting
    the parameters involved in the calculation of this method has so far proved difficult
    despite all the technological advances we are currently experiencing (Shao et
    al., 2021, Shao et al., 2023). The first question of our research was about the
    climate parameter ETo, its importance and the new technologies used for the estimation
    and prediction of this coefficient. We concluded that the models proposed in this
    direction are not global in character, and therefore more extensive studies need
    to be carried out. Models need to be developed for each region of the world, indicating
    the best input parameters and the best artificial intelligence model to use to
    accurately predict ETo. These results led us to another research question which
    discusses the effect of predicting this parameter on irrigation scheduling while
    shedding light on the solution of irrigation intensification to compensate for
    the effect of climatic parameters on the soil and its feasibility in all cases.
    We found that irrigation intensification is not always the optimal solution, sometimes
    other agricultural practices such as adjusting planting date by knowing the critical
    crop periods during which these crops are most vulnerable to climate change conditions
    are more suitable and give more efficient results than irrigation intensification
    (Karimzadeh Soureshjani et al., 2019). At this point we came to the conclusion
    that it is important to study, in addition to meteorological effects, the biophysical
    responses of crops for good irrigation management. The biophysical responses of
    crops are summarized in the crop coefficient Kc which in turn changes according
    to several factors leading to the second research question which discusses the
    factors that influence the Kc coefficient. Soil physical, chemical and hydrological
    properties are assumed to be the key factors directly affecting crop growth (Anderson
    and French, 2019). The first subquestion in this path was about soil texture and
    its role in agricultural management in general, and about the existence of studies
    using new technologies in this field of research. We found that soil texture plays
    a vital role in planting and irrigation management (Kurtulmuş et al., 2022) and
    that researches in this field using new technologies are still in their infancy.
    The proposal of an intelligent model that encompasses the totality of soil textures
    for planting and irrigation management purposes will undoubtedly be of great benefit
    to the agricultural sector. The second subquestion was about soil chemical properties,
    their importance and the new technologies used in this field of study. We found
    that monitoring soil nutrient levels and organic matter is essential for both
    selecting crops that match the chemical properties of the field and managing the
    quantities of nutrients to be applied during the crop development phase (Srisomkiew
    et al., 2021) as well as combating serious problems that negatively affect the
    evapotranspiration process and yield and contaminate the soil (Xiao et al., 2023).
    Models that combine connected object technologies and artificial intelligence
    algorithms to manage the type and timing of planting according to field properties
    and to monitor soil nutrient levels in real time according to various crop types
    remain to be improved. The third subquestion was about the hydrological properties
    of the soil that need to be taken into account when managing irrigation. We discussed
    three hydrological properties: the water-holding capacity of the soil referred
    to in the article as soil moisture, the soil permeability which led us into a
    discussion of groundwater levels and quality and finally the hydraulic conductivity.
    So this question generated three others. The first was about new technologies
    for estimating soil moisture. We found that new technologies are widely used in
    this field of research, but elaborate studies should be carried out to plan irrigation
    needs for each growing season according to all the factors mentioned above. The
    second was about groundwater, its impact on crop growth and the new technologies
    used to estimate and predict groundwater levels and quality. We found that groundwater
    directly feeds the roots of certain plants if it is not deep (Chen et al., 2022;
    M. Han et al., 2015) and that farmers rely heavily on this water for irrigation,
    hence the need to monitor its level for rational planning of water resources over
    the short, medium and long term. The domain of groundwater level monitoring using
    new technologies presents several difficulties due to the non-stationarity and
    complexity of this phenomenon (Gharehbaghi et al., 2022). An accurate model that
    gives correct interpretations in this domain will be very useful and beneficial,
    but this can only be guaranteed with detailed and precise informations about the
    study environment (Cai et al., 2022). Groundwater quality is another area of research.
    Excessive use of fertilizers, pesticides and herbicides is adversely affecting
    the quality of these waters. In this case, the use of these resources presents
    serious dangers to human health and prevents the proper growth of crops, hence
    the need to check the quality of these waters before use (Bennett, 2023). The
    third was about hydraulic conductivity and the new technologies used to estimate
    saturated and unsaturated hydraulic conductivity.The conclusion found by (W. Zhao
    et al., 2023) is that there is still a lack of hydraulic conductivity prediction
    models universally applicable to different regions with the same characteristics
    because this parameter presents a high degree of spatial heterogeneity (Fu et
    al., 2021). The rational use of fertilizers, pesticides and herbicides can guarantee
    good water quality for irrigation. This point led us to the third research question
    which in turn led us to two other subquestions all of which discuss the effect
    of non-standard elements such as pests, weeds and plant diseases on crop development
    and yield, and the new technologies used to detect, locate and classify these
    elements with the aim of limiting the use of pesticides and herbicides. We have
    found that deep learning algorithms are being used extensively in this field of
    study for real-time monitoring of weeds, pathogens and degrees of plant diseases
    and their severities, but despite all these advances, there are still avenues
    of research to be explored such as real-time learning of field circumstances (Janarthan
    et al., 2022), interpretation of results and proposal of recommendations for problems
    found according to disease stage, degree and severity (Pal and Kumar, 2023). Sometimes
    inappropriate farming practices can stimulate the appearance of plant pests and
    diseases, hence the final research question which studies the effect of farming
    practices on the crop coefficient. We have found that the right choice of farming
    practices can achieve the desired yield while optimizing the use of natural resources
    (Souza et al., 2020). The profitability of a crop field is closely linked to the
    right strategies adopted in a specific crop plot. The beneficial and favorable
    effect of water on crop income has led us to propose the following approach, modeled
    in Fig. 7, which aims to plan and manage irrigation efficiently. Download : Download
    high-res image (925KB) Download : Download full-size image Fig. 7. model of different
    approaches of irrigation through the use of new technologies. Choosing the right
    irrigation strategy is a key link in the agricultural production chain. Our model
    aims to use new Internet of Things and Artificial Intelligence technologies to
    understand and manage the various characteristics of the field, i.e. meteorological,
    physical, chemical and hydrological characteristics in order to choose the appropriate
    type of crop in the field of study and then schedule irrigation according to the
    type of crop chosen and the field characteristics studied. The agricultural production
    process does not stop at this point, as control and monitoring of non-standard
    conditions and disruptive elements, as well as the choice of suitable cultivation
    practices, are necessary to achieve the best possible yield from the field under
    study. Fig. 7 shows the different approaches adopted for irrigation and farm management
    in our systematic literature review. For each property studied, we have mentioned
    the data used to arrive at the desired property prediction (green colored part
    in model), the sources from which the data were acquired e.g. IoT technologies,
    weather stations etc, (orange colored part), the artificial intelligence algorithms
    used to predict the output variables (blue colored part), the variable to be predicted
    (gray colored part) and finally the future research directions (red colored part).
    6. Conclusions In this study, we systematically reviewed the scientific literature
    of the last eight years to explore the new Internet of Things and artificial intelligence
    technologies used, on the one hand, to monitor and predict the climatic, physical,
    chemical and hydrological characteristics of a field and, on the other, to detect,
    locate and prevent the biological characteristics of a field. To our knowledge,
    this is the first SLR of its kind, and the first to examine the use of new technologies
    to predict and monitor every field characteristic in order to manage irrigation
    efficiently. Adopting an SLR as a method of answering our main research questions
    has proved to be a very useful choice, and has enabled us to obtain significant
    information that could be useful to both the committee of researchers and the
    stakeholders. We have identified that the profitability of a crop field is closely
    linked to the right strategies adopted in a specific crop plot, and these strategies
    can only be defined after a good understanding of the field''s characteristics.
    For the climatic properties of the field, the ETo parameter was studied. For the
    physical properties of the field, the soil texture classes and their irrigation
    requirements were discussed. For the chemical properties of the soil, the nutrient
    level and soil chemical properties were discussed. For the hydrological properties
    of the soil, soil moisture, hydraulic conductivity and groundwater level and quality
    were studied. For the biological properties, the detection and localization of
    weeds and plant diseases were studied. This sytematic literature review has enabled
    us to develop an intelligent model that brings together the different approaches
    adopted for irrigation scheduling and to pave the way for further research. This
    systematic literature review focuses on the field scale, it can be expanded by
    covering essential irrigation management issues for large-scale irrigation areas
    or large-scale farmland. Finally, we hope that the contributions of this review
    will help anyone interested in the field of irrigation management to form a holistic
    and clear view. CRediT authorship contribution statement Afaf Bounajra: Writing
    – review & editing, Writing – original draft, Visualization, Methodology, Formal
    analysis, Conceptualization. Kamal El Guemmat: Visualization, Validation, Supervision,
    Methodology, Conceptualization. Khalifa Mansouri: Writing – review & editing,
    Visualization, Validation, Supervision, Methodology, Formal analysis, Conceptualization.
    Fatiha Akef: Validation, Supervision, Investigation. Declaration of Competing
    Interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Appendix A. Data extraction table Table 6. The data extraction
    table used in this SLR. Empty Cell Extraction element Contents General information
    1 Title Full article title 2 Year Year of publication 3 Authors 4 Repository Science
    Direct, Springer, IEEE Xplore, Scopus,Web of Science Study description 5 Targeted
    domain 6 Study motivation 7 Main aims of the study 8 Study area 9 Data used 10
    Range of data 11 Material used to acquire data 12 Data processing methods 13 Artificial
    intelligence algorithms used 14 Findings 15 Limitations 16 Future Works Evaluation
    17 Personal note Reviewer opinion about the study 18 Additional note Publication
    details 19 Quality assessment Quality scores Data Availability No data was used
    for the research described in the article. References A et al., 2022 Y. A, G.
    Wang, P. Hu, X. Lai, B. Xue, Q. Fang Root-zone soil moisture estimation based
    on remote sensing data and deep learning Environ. Res., 212 (PB) (2022), Article
    113278, 10.1016/j.envres.2022.113278 View PDFView articleView in ScopusGoogle
    Scholar Abou Ali et al., 2023 A. Abou Ali, L. Bouchaou, S. Er-Raki, M. Hssaissoune,
    Y. Brouziyne, J. Ezzahar, S. Khabba, A. Chakir, A. Labbaci, A. Chehbouni Assessment
    of crop evapotranspiration and deep percolation in a commercial irrigated citrus
    orchard under semi-arid climate: combined Eddy-Covariance measurement and soil
    water balance-based approach Agric. Water Manag., 275 (November 2022) (2023),
    Article 107997, 10.1016/j.agwat.2022.107997 View PDFView articleView in ScopusGoogle
    Scholar Abowarda et al., 2021 A.S. Abowarda, L. Bai, C. Zhang, D. Long, X. Li,
    Q. Huang, Z. Sun Generating surface soil moisture at 30 m spatial resolution using
    both data fusion and machine learning toward better water resources management
    at the field scale Remote Sens. Environ., 255 (January) (2021), Article 112301,
    10.1016/j.rse.2021.112301 View PDFView articleView in ScopusGoogle Scholar Aguilera
    et al., 2022 H. Aguilera, C. Guardiola-Albert, L. Moreno Merino, C. Baquedano,
    E. Díaz-Losada, P.A. Robledo Ardila, J.J. Durán Valsero Building inexpensive topsoil
    saturated hydraulic conductivity maps for land planning based on machine learning
    and geostatistics Catena, 208 (December 2020) (2022), 10.1016/j.catena.2021.105788
    Google Scholar Al-Ali et al., 2019 A.R. Al-Ali, A. Nabulsi, Al, S. Mukhopadhyay,
    M.S. Awal, S. Fernandes, K. Ailabouni IoT-solar energy powered smart farm irrigation
    system J. Electron. Sci. Technol., 17 (4) (2019), pp. 332-347, 10.1016/J.JNLEST.2020.100017
    View in ScopusGoogle Scholar Albalasmeh et al., 2022 A. Albalasmeh, O. Mohawesh,
    M. Gharaibeh, S. Deb, L. Slaughter, A. El Hanandeh Artificial neural network optimization
    to predict saturated hydraulic conductivity in arid and semi-arid regions Catena,
    217 (December 2021) (2022), Article 106459, 10.1016/j.catena.2022.106459 View
    PDFView articleView in ScopusGoogle Scholar Alibabaei et al., 2022 K. Alibabaei,
    P.D. Gaspar, E. Assunção, S. Alirezazadeh, T.M. Lima Irrigation optimization with
    a deep reinforcement learning model: case study on a site in Portugal Agric. Water
    Manag., 263 (January) (2022), 10.1016/j.agwat.2022.107480 Google Scholar Al-Naji
    et al., 2021 A. Al-Naji, A.B. Fakhri, S.K. Gharghan, J. Chahl Soil color analysis
    based on a RGB camera and an artificial neural network towards smart irrigation:
    a pilot study Heliyon, 7 (1) (2021), Article e06078, 10.1016/j.heliyon.2021.e06078
    View PDFView articleView in ScopusGoogle Scholar Alves et al., 2023 R.G. Alves,
    R.F. Maia, F. Lima Development of a Digital Twin for smart farming: Irrigation
    management system for water saving J. Clean. Prod., 388 (August 2022) (2023),
    Article 135920, 10.1016/j.jclepro.2023.135920 View PDFView articleView in ScopusGoogle
    Scholar Anderson and French, 2019, October 5 R.G. Anderson, A.N. French Crop evapotranspiration
    Agronomy, MDPI AG, (2019, October 5), 10.3390/agronomy9100614 Google Scholar Andrade
    et al., 2020 R. Andrade, S.H.G. Silva, D.C. Weindorf, S. Chakraborty, W.M. Faria,
    L.F. Mesquita, L.R.G. Guilherme, N. Curi Assessing models for prediction of some
    soil chemical properties from portable X-ray fluorescence (pXRF) spectrometry
    data in Brazilian Coastal Plains Geoderma, 357 (August 2019) (2020), Article 113957,
    10.1016/j.geoderma.2019.113957 View PDFView articleView in ScopusGoogle Scholar
    Becker et al., 2023 R. Becker, C. Schüth, R. Merz, T. Khaliq, M. Usman, T. aus
    der Beek, R. Kumar, S. Schulz Increased heat stress reduces future yields of three
    major crops in Pakistan’s Punjab region despite intensification of irrigation
    Agric. Water Manag., 281 (February) (2023), Article 108243, 10.1016/j.agwat.2023.108243
    View PDFView articleView in ScopusGoogle Scholar Bennett, 2023 G. Bennett Assessment
    of temporal and spatial variability of irrigation groundwater quality on the flanks
    of Mount Meru, northern Tanzania Groundw. Sustain. Dev., 20 (November 2022) (2023),
    Article 100880, 10.1016/j.gsd.2022.100880 View PDFView articleView in ScopusGoogle
    Scholar Burki, 2022 T. Burki Food security and nutrition in the world The Lancet
    Diabetes and Endocrinology, Elsevier Ltd, (2022), 10.1016/S2213-8587(22)00220-0
    Google Scholar Bwambale et al., 2022 E. Bwambale, F.K. Abagale, G.K. Anornu Smart
    irrigation monitoring and control strategies for improving water use efficiency
    in precision agriculture: a review Agric. Water Manag., 260 (October 2021) (2022),
    Article 107324, 10.1016/j.agwat.2021.107324 View PDFView articleView in ScopusGoogle
    Scholar Cai et al., 2021 H. Cai, H. Shi, S. Liu, V. Babovic Impacts of regional
    characteristics on improving the accuracy of groundwater level prediction using
    machine learning: the case of central eastern continental United States J. Hydrol.:
    Reg. Stud., 37 (May) (2021), Article 100930, 10.1016/j.ejrh.2021.100930 View PDFView
    articleView in ScopusGoogle Scholar Cai et al., 2022 H. Cai, S. Liu, H. Shi, Z.
    Zhou, S. Jiang, V. Babovic Toward improved lumped groundwater level predictions
    at catchment scale: mutual integration of water balance mechanism and deep learning
    method J. Hydrol., 613 (PB) (2022), Article 128495, 10.1016/j.jhydrol.2022.128495
    View PDFView articleView in ScopusGoogle Scholar Chandrappa et al., 2023 V.Y.
    Chandrappa, B. Ray, N. Ashwatha, P. Shrestha Spatiotemporal modeling to predict
    soil moisture for sustainable smart irrigation Internet Things (Neth. ), 21 (November
    2022) (2023), Article 100671, 10.1016/j.iot.2022.100671 View PDFView articleView
    in ScopusGoogle Scholar Chen et al., 2022 S. Chen, X. Mao, S. Shang Response and
    contribution of shallow groundwater to soil water/salt budget and crop growth
    in layered soils Agric. Water Manag., 266 (October 2021) (2022), Article 107574,
    10.1016/j.agwat.2022.107574 View PDFView articleView in ScopusGoogle Scholar Cordeiro
    et al., 2022 M. Cordeiro, C. Markert, S.S. Araújo, N.G.S. Campos, R.S. Gondim,
    T.L.C. da Silva, A.R. da Rocha Towards Smart Farming: Fog-enabled intelligent
    irrigation system using deep neural networks Future Gener. Comput. Syst., 129
    (2022), pp. 115-124, 10.1016/j.future.2021.11.013 View PDFView articleView in
    ScopusGoogle Scholar D’Emilio et al., 2018 A. D’Emilio, R. Aiello, S. Consoli,
    D. Vanella, M. Iovino Artificial neural networks for predicting the water retention
    curve of sicilian agricultural soils Water (Switz. ), 10 (10) (2018), 10.3390/w10101431
    Google Scholar Dang et al., 2023 F. Dang, D. Chen, Y. Lu, Z. Li YOLOWeeds: A novel
    benchmark of YOLO object detectors for multi-class weed detection in cotton production
    systems Comput. Electron. Agric., 205 (June 2022) (2023), Article 107655, 10.1016/j.compag.2023.107655
    View PDFView articleView in ScopusGoogle Scholar Datta and Faroughi, 2022 P. Datta,
    S.A. Faroughi A Multihead Lstm Technique for Prognostic Prediction of Soil Moisture
    Geoderma, 433 (June 2022) (2022), Article 116452, 10.1016/j.geoderma.2023.116452
    Google Scholar DeJonge et al., 2007 K.C. DeJonge, A.L. Kaleita, K.R. Thorp Simulating
    the effects of spatially variable irrigation on corn yields, costs, and revenue
    in Iowa Agric. Water Manag., 92 (1–2) (2007), pp. 99-109, 10.1016/j.agwat.2007.05.008
    View PDFView articleView in ScopusGoogle Scholar Di Nunno and Granata, 2023 F.
    Di Nunno, F. Granata Future trends of reference evapotranspiration in Sicily based
    on CORDEX data and Machine Learning algorithms Agric. Water Manag., 280 (July
    2022) (2023), Article 108232, 10.1016/j.agwat.2023.108232 View PDFView articleView
    in ScopusGoogle Scholar Feng et al., 2023 X. Feng, H. Liu, D. Feng, X. Tang, L.
    Li, J. Chang, J. Tanny, R. Liu Quantifying winter wheat evapotranspiration and
    crop coefficients under sprinkler irrigation using eddy covariance technology
    in the North China Plain Agric. Water Manag., 277 (August 2022) (2023), Article
    108131, 10.1016/j.agwat.2022.108131 View PDFView articleView in ScopusGoogle Scholar
    Fu et al., 2021 T. Fu, H. Gao, H. Liang, J. Liu Controlling factors of soil saturated
    hydraulic conductivity in taihang mountain region, northern China Geoderma Reg.,
    26 (October 2020) (2021), Article e00417, 10.1016/j.geodrs.2021.e00417 View PDFView
    articleView in ScopusGoogle Scholar Gao et al., 2021 R. Gao, R. Wang, L. Feng,
    Q. Li, H. Wu Dual-branch, efficient, channel attention-based crop disease identification
    Comput. Electron. Agric., 190 (September) (2021), Article 106410, 10.1016/j.compag.2021.106410
    View PDFView articleView in ScopusGoogle Scholar Gharehbaghi et al., 2022 A. Gharehbaghi,
    R. Ghasemlounia, F. Ahmadi, M. Albaji Groundwater level prediction with meteorologically
    sensitive gated recurrent unit (GRU) neural networks J. Hydrol., 612 (PC) (2022),
    Article 128262, 10.1016/j.jhydrol.2022.128262 View PDFView articleView in ScopusGoogle
    Scholar Gimpel et al., 2021 H. Gimpel, V. Graf-Drasch, F. Hawlitschek, K. Neumeier
    Designing smart and sustainable irrigation: a case study J. Clean. Prod., 315
    (February) (2021), Article 128048, 10.1016/j.jclepro.2021.128048 View PDFView
    articleView in ScopusGoogle Scholar Goap et al., 2018 A. Goap, D. Sharma, A.K.
    Shukla, C. Rama Krishna An IoT based smart irrigation management system using
    machine learning and open source technologies Comput. Electron. Agric., 155 (September)
    (2018), pp. 41-49, 10.1016/j.compag.2018.09.040 View PDFView articleView in ScopusGoogle
    Scholar Gonçalves et al., 2023 L.R. Gonçalves, C.W. Oliveira, A.C.M. Meireles
    Spatial distribution of evapotranspiration by fractional vegetation cover index
    on irrigated cropland banana (Musa Spp.) in the semiarid Remote Sens. Appl.: Soc.
    Environ., 29 (April 2022) (2023), Article 100878, 10.1016/j.rsase.2022.100878
    View PDFView articleView in ScopusGoogle Scholar Gong et al., 2021 D. Gong, W.
    Hao, L. Gao, Y. Feng, N. Cui Extreme learning machine for reference crop evapotranspiration
    estimation: model optimization and spatiotemporal assessment across different
    climates in China Comput. Electron. Agric., 187 (June) (2021), Article 106294,
    10.1016/j.compag.2021.106294 View PDFView articleView in ScopusGoogle Scholar
    Guo et al., 2022 Y. Guo, Y. Lan, X. Chen CST: Convolutional Swin Transformer for
    detecting the degree and types of plant diseases Comput. Electron. Agric., 202
    (April) (2022), 10.1016/j.compag.2022.107407 Google Scholar H. Kashani et al.,
    2020 M. H. Kashani, M.A. Ghorbani, M. Shahabi, S.R. Naganna, L. Diop Multiple
    AI model integration strategy—application to saturated hydraulic conductivity
    prediction from easily available soil properties Soil Tillage Res., 196 (January
    2019) (2020), Article 104449, 10.1016/j.still.2019.104449 View PDFView articleView
    in ScopusGoogle Scholar Han et al., 2015 M. Han, C. Zhao, J. Šimůnek, G. Feng
    Evaluating the impact of groundwater on cotton growth and root zone water balance
    using Hydrus-1D coupled with a crop growth model Agric. Water Manag., 160 (2015),
    pp. 64-75, 10.1016/j.agwat.2015.06.028 View PDFView articleView in ScopusGoogle
    Scholar Han et al., 2021 X. Han, Z. Wei, B. Zhang, Y. Li, T. Du, H. Chen Crop
    evapotranspiration prediction by considering dynamic change of crop coefficient
    and the precipitation effect in back-propagation neural network model J. Hydrol.,
    596 (August 2020) (2021), 10.1016/j.jhydrol.2021.126104 Google Scholar Hatanaka
    et al., 2022 T. Hatanaka, T. Ogura, S. Matsuyama, S. Hobara Variation in soil
    chemical properties in relation to vegetation characteristics in a serpentine
    area of Hokkaido, Japan Geoderma Reg., 31 (October) (2022), Article e00589, 10.1016/j.geodrs.2022.e00589
    View PDFView articleView in ScopusGoogle Scholar Hunasigi et al., 2023 P. Hunasigi,
    S. Jedhe, M. Mane, V. Patil-Shinde Multilayer perceptron neural network based
    models for prediction of the rainfall and reference crop evapotranspiration for
    sub-humid climate of Dapoli, Ratnagiri District, India Acta Ecol. Sin., 43 (1)
    (2023), pp. 154-201, 10.1016/j.chnaes.2022.09.004 View PDFView articleView in
    ScopusGoogle Scholar Inazumi et al., 2020 S. Inazumi, S. Intui, A. Jotisankasa,
    S. Chaiprakaikeow, K. Kojima Artificial intelligence system for supporting soil
    classification Results Eng., 8 (November) (2020), 10.1016/j.rineng.2020.100188
    Google Scholar J. and T., 2023 P. J, S. T Deep learning based multi-labelled soil
    classification and empirical estimation toward sustainable agriculture Eng. Appl.
    Artif. Intell., 119 (March 2022) (2023), Article 105690, 10.1016/j.engappai.2022.105690
    View PDFView articleView in ScopusGoogle Scholar Janarthan et al., 2022 S. Janarthan,
    S. Thuseethan, S. Rajasegarar, J. Yearwood P2OP—Plant pathology on palms: a deep
    learning-based mobile solution for in-field plant disease detection Comput. Electron.
    Agric., 202 (August) (2022), Article 107371, 10.1016/j.compag.2022.107371 View
    PDFView articleView in ScopusGoogle Scholar Karimzadeh Soureshjani et al., 2019
    H. Karimzadeh Soureshjani, A. Ghorbani Dehkordi, M. Bahador Temperature effect
    on yield of winter and spring irrigated crops Agric. For. Meteorol., 279 (August)
    (2019), Article 107664, 10.1016/j.agrformet.2019.107664 View PDFView articleView
    in ScopusGoogle Scholar Khan et al., 2022 A.I. Khan, F. Alsolami, F. Alqurashi,
    Y.B. Abushark, I.H. Sarker Novel energy management scheme in IoT enabled smart
    irrigation system using optimized intelligence methods Eng. Appl. Artif. Intell.,
    114 (January) (2022), Article 104996, 10.1016/j.engappai.2022.104996 View PDFView
    articleView in ScopusGoogle Scholar Kitchenham et al., 2009, January B. Kitchenham,
    O. Pearl Brereton, D. Budgen, M. Turner, J. Bailey, S. Linkman Systematic literature
    reviews in software engineering - a systematic literature review Inf. Softw. Technol.
    (2009, January), 10.1016/j.infsof.2008.09.009 Google Scholar Kocian et al., 2023
    A. Kocian, G. Carmassi, F. Cela, S. Chessa, P. Milazzo, L. Incrocci IoT based
    dynamic Bayesian prediction of crop evapotranspiration in soilless cultivations
    Comput. Electron. Agric., 205 (August 2022) (2023), Article 107608, 10.1016/j.compag.2022.107608
    View PDFView articleView in ScopusGoogle Scholar Kurtulmuş et al., 2022 E. Kurtulmuş,
    B. Arslan, F. Kurtulmuş Deep learning for proximal soil sensor development towards
    smart irrigation Expert Syst. Appl., 198 (January) (2022), 10.1016/j.eswa.2022.116812
    Google Scholar Lin et al., 2022 L. Lin, S. Han, P. Zhao, L. Li, C. Zhang, E. Wang
    Influence of soil physical and chemical properties on mechanical characteristics
    under different cultivation durations with Mollisols Soil Tillage Res., 224 (August)
    (2022), 10.1016/j.still.2022.105520 Google Scholar Liu et al., 2022 M. Liu, C.
    Xiao, X. Liang, H. Wei Response of groundwater chemical characteristics to land
    use types and health risk assessment of nitrate in semi-arid areas: a case study
    of Shuangliao City, Northeast China Ecotoxicol. Environ. Saf., 236 (January) (2022),
    Article 113473, 10.1016/j.ecoenv.2022.113473 View PDFView articleView in ScopusGoogle
    Scholar López-Arredondo et al., 2017 D.L. López-Arredondo, L. Sánchez-Calderón,
    L. Yong-Villalobos Molecular and genetic basis of plant macronutrient use efficiency:
    concepts, opportunities, and challenges In Plant Macronutrient Use Efficiency:
    Molecular and Genomic Perspectives in Crop Plants, Elsevier, (2017), pp. 1-29,
    10.1016/B978-0-12-811308-0.00001-6 View PDFView articleView in ScopusGoogle Scholar
    Lu et al., 2023 Y. Lu, T. Li, H. Hu, X. Zeng Short-term prediction of reference
    crop evapotranspiration based on machine learning with different decomposition
    methods in arid areas of China Agric. Water Manag., 279 (July 2022) (2023), Article
    108175, 10.1016/j.agwat.2023.108175 View PDFView articleView in ScopusGoogle Scholar
    Luo et al., 2023 T. Luo, J. Zhao, Y. Gu, S. Zhang, X. Qiao, W. Tian, Y. Han Classification
    of weed seeds based on visual images and deep learning Inf. Process. Agric., 10
    (1) (2023), pp. 40-51, 10.1016/j.inpa.2021.10.002 View PDFView articleView in
    ScopusGoogle Scholar Maria Manuel Vianny et al., 2022 D. Maria Manuel Vianny,
    A. John, S. Kumar Mohan, A. Sarlan, Adimoolam, A. Ahmadian Water optimization
    technique for precision irrigation system using IoT and machine learning Sustain.
    Energy Technol. Assess., 52 (PD) (2022), Article 102307, 10.1016/j.seta.2022.102307
    View PDFView articleView in ScopusGoogle Scholar Maroufpoor et al., 2020 S. Maroufpoor,
    O. Bozorg-Haddad, E. Maroufpoor Reference evapotranspiration estimating based
    on optimal input combination and hybrid artificial intelligent model: Hybridization
    of artificial neural network with grey wolf optimizer algorithm J. Hydrol., 588
    (April) (2020), Article 125060, 10.1016/j.jhydrol.2020.125060 View PDFView articleView
    in ScopusGoogle Scholar Masrur Ahmed et al., 2021 A.A. Masrur Ahmed, R.C. Deo,
    N. Raj, A. Ghahramani, Q. Feng, Z. Yin, L. Yang Deep learning forecasts of soil
    moisture: Convolutional neural network and gated recurrent unit models coupled
    with satellite-derived modis, observations and synoptic-scale climate index data
    Remote Sens., 13 (4) (2021), pp. 1-30, 10.3390/rs13040554 View in ScopusGoogle
    Scholar Mozaffari et al., 2022 H. Mozaffari, A. Akbar Moosavi, Y. Ostovari, W.
    Cornelis Comparing visible-near-infrared spectroscopy with classical regression
    pedotransfer functions for predicting near-saturated and saturated hydraulic conductivity
    of calcareous soils J. Hydrol., 613 (PA) (2022), Article 128412, 10.1016/j.jhydrol.2022.128412
    View PDFView articleView in ScopusGoogle Scholar Nawandar and Satpute, 2019 N.K.
    Nawandar, V.R. Satpute IoT based low cost and intelligent module for smart irrigation
    system Comput. Electron. Agric., 162 (May) (2019), pp. 979-990, 10.1016/j.compag.2019.05.027
    View PDFView articleView in ScopusGoogle Scholar Nyoman Kutha Krisnawijaya et
    al., 2022, April 1 N. Nyoman Kutha Krisnawijaya, B. Tekinerdogan, C. Catal, R.
    van der Tol Data analytics platforms for agricultural systems: A systematic literature
    review Computers and Electronics in Agriculture, Elsevier B.V, (2022, April 1),
    10.1016/j.compag.2022.106813 Google Scholar Obaideen et al., 2022 K. Obaideen,
    B.A.A. Yousef, M.N. AlMallahi, Y.C. Tan, M. Mahmoud, H. Jaber, M. Ramadan An overview
    of smart irrigation systems using IoT Energy Nexus, 7 (January) (2022), Article
    100124, 10.1016/j.nexus.2022.100124 View PDFView articleView in ScopusGoogle Scholar
    Pal and Kumar, 2023 A. Pal, V. Kumar AgriDet: Plant Leaf Disease severity classification
    using agriculture detection framework Eng. Appl. Artif. Intell., 119 (November
    2022) (2023), Article 105754, 10.1016/j.engappai.2022.105754 View PDFView articleView
    in ScopusGoogle Scholar R et al., 2023 S. R, R. M, V. S, S.K. E, Y. S, A. Kumar,
    J.R. I, V. K A novel autonomous irrigation system for smart agriculture using
    AI and 6G enabled IoT network Microprocess. Microsyst., 101 (February 2021) (2023),
    Article 104905, 10.1016/j.micpro.2023.104905 View PDFView articleView in ScopusGoogle
    Scholar Rezaei et al., 2021 M. Rezaei, K. Shahbazi, R. Shahidi, N. Davatgar, K.
    Bazargan, H. Rezaei, S. Saadat, P. Seuntjens, W. Cornelis How to relevantly characterize
    hydraulic properties of saline and sodic soils for water and solute transport
    simulations J. Hydrol., 598 (October 2020) (2021), Article 125777, 10.1016/j.jhydrol.2020.125777
    View PDFView articleView in ScopusGoogle Scholar Rezaei et al., 2023 M. Rezaei,
    S.R. Mousavi, A. Rahmani, M. Zeraatpisheh, M. Rahmati, M. Pakparvar, V.A. Jahandideh
    Mahjenabadi, P. Seuntjens, W. Cornelis Incorporating machine learning models and
    remote sensing to assess the spatial distribution of saturated hydraulic conductivity
    in a light-textured soil Comput. Electron. Agric., 209 (June 2022) (2023), Article
    107821, 10.1016/j.compag.2023.107821 View PDFView articleView in ScopusGoogle
    Scholar Ruigrok et al., 2023 T. Ruigrok, E.J. van Henten, G. Kootstra Improved
    generalization of a plant-detection model for precision weed control Comput. Electron.
    Agric., 204 (November 2022) (2023), Article 107554, 10.1016/j.compag.2022.107554
    View PDFView articleView in ScopusGoogle Scholar Sawadogo et al., 2023 A. Sawadogo,
    E.R. Dossou-Yovo, L. Kouadio, S.J. Zwart, F. Traoré, K.S. Gündoğdu Assessing the
    biophysical factors affecting irrigation performance in rice cultivation using
    remote sensing derived information Agric. Water Manag., 278 (January 2021) (2023),
    10.1016/j.agwat.2022.108124 Google Scholar Shao et al., 2021 G. Shao, W. Han,
    H. Zhang, S. Liu, Y. Wang, L. Zhang, X. Cui Mapping maize crop coefficient Kc
    using random forest algorithm based on leaf area index and UAV-based multispectral
    vegetation indices Agric. Water Manag., 252 (March) (2021), Article 106906, 10.1016/j.agwat.2021.106906
    View PDFView articleView in ScopusGoogle Scholar Shao et al., 2023 G. Shao, W.
    Han, H. Zhang, L. Zhang, Y. Wang, Y. Zhang Prediction of maize crop coefficient
    from UAV multisensor remote sensing using machine learning methods Agric. Water
    Manag., 276 (November 2022) (2023), Article 108064, 10.1016/j.agwat.2022.108064
    View PDFView articleView in ScopusGoogle Scholar Sharafi et al., 2023 S. Sharafi,
    M.M. Ghaleni, M. Scholz Comparison of predictions of daily evapotranspiration
    based on climate variables using different data mining and empirical methods in
    various climates of Iran Heliyon, 9 (2) (2023), Article e13245, 10.1016/j.heliyon.2023.e13245
    View PDFView articleView in ScopusGoogle Scholar Sheikh Khozani et al., 2022 Z.
    Sheikh Khozani, F. Barzegari Banadkooki, M. Ehteram, A. Najah Ahmed, A. El-Shafie
    Combining autoregressive integrated moving average with Long Short-Term Memory
    neural network and optimisation algorithms for predicting ground water level J.
    Clean. Prod., 348 (March) (2022), Article 131224, 10.1016/j.jclepro.2022.131224
    View PDFView articleView in ScopusGoogle Scholar Souza et al., 2020 M. de F. Souza,
    T.S. Silva, J.B. dos Santos, G.D.O.P. Carneiro, L.T.R.T. Reginaldo, J.N. Bandeira,
    M.S. dos Santos, Q.S. Pavão, M.Z. de Negreiros, D.V. Silva Soil water availability
    alter the weed community and its interference on onion crops Sci. Hortic., 272
    (December 2019) (2020), Article 109573, 10.1016/j.scienta.2020.109573 View PDFView
    articleView in ScopusGoogle Scholar Srisomkiew et al., 2021 S. Srisomkiew, M.
    Kawahigashi, P. Limtong Digital mapping of soil chemical properties with limited
    data in the Thung Kula Ronghai region, Thailand Geoderma, 389 (February) (2021),
    Article 114942, 10.1016/j.geoderma.2021.114942 View PDFView articleView in ScopusGoogle
    Scholar Tian et al., 2018 Z. Tian, D. Kool, T. Ren, R. Horton, J.L. Heitman Determining
    in-situ unsaturated soil hydraulic conductivity at a fine depth scale with heat
    pulse and water potential sensors J. Hydrol., 564 (April) (2018), pp. 802-810,
    10.1016/j.jhydrol.2018.07.052 View PDFView articleView in ScopusGoogle Scholar
    Togneri et al., 2022 R. Togneri, D. Felipe dos Santos, G. Camponogara, H. Nagano,
    G. Custódio, R. Prati, S. Fernandes, C. Kamienski Soil moisture forecast for smart
    irrigation: the primetime for machine learning Expert Syst. Appl., 207 (May) (2022),
    10.1016/j.eswa.2022.117653 Google Scholar Tummers et al., 2019, February 1 J.
    Tummers, A. Kassahun, B. Tekinerdogan Obstacles and features of Farm Management
    Information Systems: A systematic literature review Computers and Electronics
    in Agriculture, Elsevier B.V, (2019, February 1), 10.1016/j.compag.2018.12.044
    Google Scholar Veerachamy et al., 2022 R. Veerachamy, R. Ramar, S. Balaji, L.
    Sharmila Autonomous Application Controls on Smart Irrigation Comput. Electr. Eng.,
    100 (February) (2022), Article 107855, 10.1016/j.compeleceng.2022.107855 View
    PDFView articleView in ScopusGoogle Scholar Veloso et al., 2022 M.F. Veloso, L.N.
    Rodrigues, E.I.F. Filho Evaluation of machine learning algorithms in the prediction
    of hydraulic conductivity and soil moisture at the Brazilian Savannah Geoderma
    Reg., 30 (August) (2022), 10.1016/j.geodrs.2022.e00569 Google Scholar Vereecken
    et al., 2010 H. Vereecken, M. Weynants, M. Javaux, Y. Pachepsky, M.G. Schaap,
    M.T. van Genuchten Using Pedotransfer Functions to Estimate the van Genuchten–Mualem
    Soil Hydraulic Properties: A Review Vadose Zone J., 9 (4) (2010), pp. 795-820,
    10.2136/vzj2010.0045 View in ScopusGoogle Scholar Vories et al., 2021 E. Vories,
    S. O’Shaughnessy, K. Sudduth, S. Evett, M. Andrade, S. Drummond Comparison of
    precision and conventional irrigation management of cotton and impact of soil
    texture Precis. Agric., 22 (2) (2021), pp. 414-431, 10.1007/s11119-020-09741-3
    View in ScopusGoogle Scholar Wu et al., 2022 Z. Wu, X. Chen, N. Cui, B. Zhu, D.
    Gong, L. Han, L. Xing, S. Zhen, Q. Li, Q. Liu, P. Fang Optimized empirical model
    based on whale optimization algorithm for simulate daily reference crop evapotranspiration
    in different climatic regions of China J. Hydrol., 612 (PA) (2022), Article 128084,
    10.1016/j.jhydrol.2022.128084 View PDFView articleView in ScopusGoogle Scholar
    Wu et al., 2023 Z. Wu, N. Cui, D. Gong, F. Zhu, L. Xing, B. Zhu, X. Chen, S. Wen,
    Q. Liu Simulation of daily maize evapotranspiration at different growth stages
    using four machine learning models in semi-humid regions of northwest China J.
    Hydrol., 617 (PA) (2023), Article 128947, 10.1016/j.jhydrol.2022.128947 View PDFView
    articleView in ScopusGoogle Scholar Xiao et al., 2023 C. Xiao, Q. Ji, J. Chen,
    F. Zhang, Y. Li, J. Fan, X. Hou, F. Yan, H. Wang Prediction of soil salinity parameters
    using machine learning models in an arid region of northwest China Comput. Electron.
    Agric., 204 (March 2022) (2023), 10.1016/j.compag.2022.107512 Google Scholar Xie
    et al., 2022 J. Xie, Y. Chen, P. Gao, D. Sun, X. Xue, D. Yin, Y. Han, W. Wang
    Smart fuzzy irrigation system for litchi orchards Comput. Electron. Agric., 201
    (December 2021) (2022), Article 107287, 10.1016/j.compag.2022.107287 View PDFView
    articleView in ScopusGoogle Scholar Yang et al., 2023 B. Yang, Z. Wang, J. Guo,
    L. Guo, Q. Liang, Q. Zeng, R. Zhao, J. Wang, C. Li Identifying plant disease and
    severity from leaves: A deep multitask learning framework using triple-branch
    Swin Transformer and deep supervision Comput. Electron. Agric., 209 (September
    2022) (2023), Article 107809, 10.1016/j.compag.2023.107809 View PDFView articleView
    in ScopusGoogle Scholar Zhang et al., 2022 W. Zhang, A. Dong, F. Liu, W. Niu,
    K.H.M. Siddique Effect of film mulching on crop yield and water use efficiency
    in drip irrigation systems: A meta-analysis Soil Tillage Res., 221 (April) (2022),
    Article 105392, 10.1016/j.still.2022.105392 View PDFView articleView in ScopusGoogle
    Scholar Zhang et al., 2020 Y. Zhang, Z. Zhao, J. Zheng CatBoost: A new approach
    for estimating daily reference crop evapotranspiration in arid and semi-arid regions
    of Northern China J. Hydrol., 588 (April) (2020), Article 125087, 10.1016/j.jhydrol.2020.125087
    View PDFView articleView in ScopusGoogle Scholar Zhang et al., 2023 Y. Zhang,
    W. Han, H. Zhang, X. Niu, G. Shao Evaluating maize evapotranspiration using high-resolution
    UAV-based imagery and FAO-56 dual crop coefficient approach Agric. Water Manag.,
    275 (October 2022) (2023), Article 108004, 10.1016/j.agwat.2022.108004 View PDFView
    articleView in ScopusGoogle Scholar Zhangzhong et al., 2023 L. Zhangzhong, H.
    Gao, W. Zheng, J. Wu, J. Li, D. Wang Development of an evapotranspiration estimation
    method for lettuce via mobile phones using machine vision: Proof of concept Agric.
    Water Manag., 275 (September 2022) (2023), Article 108003, 10.1016/j.agwat.2022.108003
    View PDFView articleView in ScopusGoogle Scholar Zhao et al., 2022 L. Zhao, X.
    Zhao, X. Pan, Y. Shi, Z. Qiu, X. Li, X. Xing, J. Bai Prediction of daily reference
    crop evapotranspiration in different Chinese climate zones: combined application
    of key meteorological factors and Elman algorithm J. Hydrol., 610 (April) (2022),
    Article 127822, 10.1016/j.jhydrol.2022.127822 View PDFView articleView in ScopusGoogle
    Scholar Zhao et al., 2023 W. Zhao, M. Wang, C. Chen, L. Huang Variations, controls
    and predictions of soil saturated hydraulic conductivity under different land
    use types in the alpine region of Tibet, China Geoderma Reg., 35 (May) (2023),
    Article e00723, 10.1016/j.geodrs.2023.e00723 View PDFView articleView in ScopusGoogle
    Scholar Cited by (0) © 2024 The Author(s). Published by Elsevier B.V. Recommended
    articles High-resolution satellite imagery to assess orchard characteristics impacting
    water use Agricultural Water Management, Volume 295, 2024, Article 108763 Pierre
    Rouault, …, Marta Debolini View PDF Coupled mechanisms of water deficit and soil
    salinity affecting tomato fruit growth Agricultural Water Management, Volume 295,
    2024, Article 108747 Xianbo Zhang, …, Taisheng Du View PDF Changes in soil hydraulic
    and physio-chemical properties under treated wastewater irrigation: A meta-analysis
    Agricultural Water Management, Volume 295, 2024, Article 108752 Lin Wang, …, Sarah
    Garré View PDF Show 3 more articles Article Metrics Captures Readers: 2 View details
    About ScienceDirect Remote access Shopping cart Advertise Contact and support
    Terms and conditions Privacy policy Cookies are used by this site. Cookie settings
    | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Agricultural Water Management
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Towards efficient irrigation management at field scale using new technologies:
    A systematic literature review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Kehinde M.O.
  - Shittu A.M.
  - Awe T.E.
  - Ajayi A.
  citation_count: '0'
  description: The need to combat climate change and its devastating impacts while
    simultaneously addressing the urgent need to achieve zero hunger and no poverty
    as well as promoting good health and well-being makes transforming Africa’s smallholder
    agriculture towards greater sustainability an urgent necessity. This study examines
    the influence of the agricultural practices with climate-smart agriculture potentials
    (AP-CSAPs) on labour (and other production factors’) demand and input substitution.
    The study was based on primary data collected in a cross-section survey, in which
    1500 smallholder rice farmers were drawn by a multistage random sampling across
    farming communities, local government areas, and states in Nigeria. The econometric
    data analysis was within the framework of Zellner’s Seemingly Unrelated Regression
    method in estimating parameters of a set of factor share equations. The study
    found that labour and fertilizer could not be readily substituted in Nigeria;
    hence, an increase in the unit price of labour and fertilizer results in a higher
    share of labour and fertilizer in the budget. In terms of the effects of AP-CSAP
    use on factor cost share, most of the AP-CSAPs are labour-intensive with the exception
    of agroforestry. Similarly, the use of organic manure and residue retention is
    significantly pesticide saving while zero/minimum tillage use is pesticide and
    fertilizer using. Given that most AP-CSAPs require higher labour requirements,
    their success is often impeded by labour shortages. Some of the policies to promote
    AP-CSAPs include creating incentives in the form of higher wages and/or compensation
    to bring people back to agriculture. Accessibility and availability of key inputs
    such as improved crop variety and seed of green manure and/or cover crops, and
    leveraging on community-driven development approach to provide labour-saving equipment
    to rice farmers, may boost the adoption of labour-using AP-CSAPs in Nigeria.
  doi: 10.1007/s11027-024-10125-5
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Advertisement Log in Find a journal
    Publish with us Track your research Search Cart Home Mitigation and Adaptation
    Strategies for Global Change Article Effects of using climate-smart agricultural
    practices on factor demand and input substitution among smallholder rice farmers
    in Nigeria Original article Published: 16 March 2024 Volume 29, article number
    26, (2024) Cite this article Download PDF Access provided by University of Nebraska-Lincoln
    Mitigation and Adaptation Strategies for Global Change Aims and scope Submit manuscript
    Mojisola Olanike Kehinde , Adebayo Musediku Shittu, Toluwalase Eniola Awe & Ayobami
    Ajayi  107 Accesses 12 Altmetric 1 Mention Explore all metrics Abstract The need
    to combat climate change and its devastating impacts while simultaneously addressing
    the urgent need to achieve zero hunger and no poverty as well as promoting good
    health and well-being makes transforming Africa’s smallholder agriculture towards
    greater sustainability an urgent necessity. This study examines the influence
    of the agricultural practices with climate-smart agriculture potentials (AP-CSAPs)
    on labour (and other production factors’) demand and input substitution. The study
    was based on primary data collected in a cross-section survey, in which 1500 smallholder
    rice farmers were drawn by a multistage random sampling across farming communities,
    local government areas, and states in Nigeria. The econometric data analysis was
    within the framework of Zellner’s Seemingly Unrelated Regression method in estimating
    parameters of a set of factor share equations. The study found that labour and
    fertilizer could not be readily substituted in Nigeria; hence, an increase in
    the unit price of labour and fertilizer results in a higher share of labour and
    fertilizer in the budget. In terms of the effects of AP-CSAP use on factor cost
    share, most of the AP-CSAPs are labour-intensive with the exception of agroforestry.
    Similarly, the use of organic manure and residue retention is significantly pesticide
    saving while zero/minimum tillage use is pesticide and fertilizer using. Given
    that most AP-CSAPs require higher labour requirements, their success is often
    impeded by labour shortages. Some of the policies to promote AP-CSAPs include
    creating incentives in the form of higher wages and/or compensation to bring people
    back to agriculture. Accessibility and availability of key inputs such as improved
    crop variety and seed of green manure and/or cover crops, and leveraging on community-driven
    development approach to provide labour-saving equipment to rice farmers, may boost
    the adoption of labour-using AP-CSAPs in Nigeria. Similar content being viewed
    by others The impact of climate smart agriculture on household welfare in smallholder
    integrated crop–livestock farming systems: evidence from Zimbabwe Article Open
    access 09 March 2021 Effect of climate-smart agricultural practices on household
    food security in smallholder production systems: micro-level evidence from Kenya
    Article Open access 02 November 2018 Socio-economic factors influencing the adoption
    of low carbon technologies under rice production systems in China Article Open
    access 08 December 2022 1 Introduction Agricultural production systems are expected
    to rise to the challenge of producing sufficient food for a global population
    expected to reach nine billion people by 2050 (United Nation Fund for Population
    Activities (UNFPA), 2023), with Nigeria expected to emerge as the third most populous
    country in the World with population in excess of 400 million people by 2050 (UN
    2017). This requires major transformations to increase the productive capacity
    and stability of smallholder agricultural production. Identifying the most appropriate
    technologies and practices to achieve this objective is critical as climate change
    poses a great threat to agricultural productivity, food security, and income of
    millions of people around the world (Gwambene 2011; Lobell et al. 2011). The impacts
    of climate change are felt by the people through an increasing number of dry seasons,
    rainfall seasons ending earlier than normal, poor distribution in rainfall within
    seasons, and change in temperature (Coulibaly et al. 2015; Aune 2012). The need
    to combat climate change and its devastating impacts (Sustainable Development
    Goal [SDG] 13) while simultaneously addressing the urgent need to achieve zero
    hunger (SDG 2) and promoting good health and well-being among others makes transforming
    Africa’s smallholder agriculture towards greater sustainability an urgent necessity.
    Across the African continent, the livelihood of smallholder farmers depends largely
    on subsistence agriculture with few alternative options. They are usually caught
    in low productivity traps where unsustainable agriculture and livestock-rearing
    practices deplete and degrade natural resources, which compromises ecosystem health
    and results in pervasive low agricultural yields. This vicious circle renders
    smallholder farmers extremely vulnerable to climate change, climate variability,
    and extreme weather events that further lead to a decline in agricultural productivity.
    This together with rapidly growing populations often drives an expansion and intensification
    of agricultural production on already degraded land. Expansion of cultivated areas,
    increasingly deeper tillage, and loss of vegetation cover owing to deforestation
    and overgrazing have led to accelerated loss of soil organic matter, which impairs
    the regulatory function of the ecosystem. In the process, large amounts of greenhouse
    gas (GHG) emissions such as CO2 and methane that contribute to climate change
    are released. In response to the growing food demand, the expansion of crop area
    as well as intensive use of pesticide and fertilizer have been the practice for
    several decades in Africa and this tends to proffer solutions in the short-term
    as productivity of most staples progressively increases (FAOSTAT 2022). Nevertheless,
    production growth has imposed stresses on soil and water resources, the yield
    has been declining drastically, and direct emissions from the agricultural sector
    account for 11% of global GHG emissions (OECD 2020). In Nigeria, smallholder agriculture
    accounts for over 80% of the food supply (Oyaniran 2020; Cervigni et al. 2013),
    about a quarter (24%) of the national gross domestic product (Statista 2023),
    and about a quarter of the nation’s greenhouse gases. In view of this, the Federal
    Government of Nigeria, with the support of the Food and Agriculture Organisation
    (FAO) and other development partners, has been promoting a shift to climate-smart
    agriculture (CSA) as one of the key strategies in pursuit of SDGs and Nigeria’s
    intended Nationally Determined Contributions (NDC) to GHG mitigation. By CSA,
    reference is made to an integrated approach to food production targeted at addressing
    the interlinked challenges of food security and climate change with the aim of
    sustainably increasing agricultural productivity and farm incomes, adapting and
    building resilience to climate change, and reducing agricultural GHG emission
    (FAO 2013; 2010; Lipper et al. 2014). CSA generally entails integrated adoption
    of a set of context-specific resilient production technologies or practices—herein
    referred to as agricultural practices with CSA potentials (AP-CSAPs)—that provide
    the possibility to produce more from the same area of land while conserving resources,
    reducing negative impacts on the environment, and enhancing natural capital and
    the flow of ecosystem (FAO 2016). These include zero/minimal tillage; mulching;
    crop rotation; cultivation of high-yielding, disease-resistant, and drought-tolerant
    varieties; agroforestry; legume intercropping; and integrated nutrient, water,
    pest, and weed management, with emphasis on minimal soil disturbance and reduced
    pesticide, energy, and resource use (Shittu et al. 2021; Khatri-Chhetri et al.
    2017; McCarthy 2014; Branca et al. 2011). Evidence from the literature suggests
    that AP-CSAPs can lead to increased productivity and stability of agricultural
    production systems (Branca et al. 2013; Woodfine 2009). These practices are however
    generally labour-intensive; thus, this study seeks to answer the research questions—what
    will be the implications of using AP-CSAPs on labour demand and substitution for
    other inputs in view of rising labour scarcity and the need to reduce chemical
    dependence in Nigeria agriculture. Arising from the foregoing, this study builds
    on previous research done by Dalton et al. (1997), who found that there is a moderate
    substitutability between labour, biochemical inputs, and capital and that per-hectare
    yields rise roughly in proportion to a simultaneous increase in all inputs. Otunaiya
    et al. (2013), however, found that the demand for inorganic fertilizer was price
    inelastic, and that fertilizer was a technical substitute for planting materials
    and other intermediate inputs like insecticides and tractor services and a technical
    complement of labour and land in the production of food crops. This study, therefore,
    seeks to assess the influence of the AP-CSAPs on labour (and other production
    factors’) demand and input substitution, despite the increasing global emphasis
    on CSA as a pivotal strategy for achieving SDGs and NDCs related to GHG mitigation.
    There is a notable gap in the existing literature regarding how some of the conventional
    inputs can be substituted for AP-CSAPs in such a way that will bring about an
    increase in yield while simultaneously building resilience and adaptation to climate
    change with minimal harm to the environment. Addressing this research gap would
    entail conducting a comprehensive study that examines the intricate labour dynamics,
    input substitution patterns, and equity implications associated with the adoption
    of specific AP-CSAPs among smallholder rice farmers in Nigeria. The results show
    that the adoption of most AP-CSAPs except agroforestry are significantly labour-using,
    implying that AP-CSAPs increase smallholder rice farmers’ demand for an already
    too scarce labour. The findings could have significant policy implications for
    achieving the SDGs and NDC commitments in Nigeria, ultimately contributing to
    more informed and holistic decision-making in the realm of sustainable agricultural
    development. In the next section, we present a brief on CSA in Nigeria, the study
    methodology including the description of the study area, data collection and sampling,
    analytical techniques, and model specification. The fifth presents and discusses
    the results, while the final section presents the main conclusions and the policy
    implications. 2 Brief on climate-smart agriculture The vulnerability of African
    countries to climate change and its impacts have serious implications for livelihoods,
    poverty reduction, and meeting the UN Sustainable Development Goals. Policies
    that will promote a transition to CSA to mitigate climate change while maintaining
    agricultural productivity are therefore crucial to meet the current and future
    challenges posed by climate change in Africa, Nigeria inclusive. CSA encompasses
    a combination of long-existing practices such as innovative farming practices
    and agricultural technologies that aim to address climate change adaptation, mitigation,
    and food security (Newell et al. 2019; Aryal et al. 2018). Some of the commonly
    used climate-smart agricultural practices (CSAPs) across the globe include conservation
    agriculture, organic manuring, composting, crop diversification, usage of wetland,
    drought-tolerant crops, disease-tolerant varieties, residue retention, crop rotation,
    zero/minimum tillage, green manuring, integrated crop management, agricultural
    water management, and agroforestry (Zhou et al. 2023; Kehinde et al. 2022; Shittu
    et al. 2018; Ojoko et al. 2017). Despite the potential benefits of CSA, the adoption
    rates for CSAPs remain generally low in many African countries, for example, the
    adoption of complete conservation agriculture systems (zero/minimum tillage, permanent
    soil cover, and crop rotation) stood at 2.5% in Malawi, Zambia, and Zimbabwe (Orchardson
    2019). Similarly, empirical evidence from the literature asserts that adoption
    of CSAPs is low in Nigeria, usually between 15.5 and 54.0% (Shittu et al. 2018;
    Kehinde et al. 2022) and much lower for some CSAPs like water harvesting (15%)
    and alternate wet and dry irrigation (10%) Onyeneke et al. 2018). The low adoption
    is linked to weak extension service delivery across various states in Nigeria,
    inadequate capital, high labour cost, lack of technical know-how, low potential
    for irrigation, and most importantly present markets that cannot accurately account
    for the value of the environmental benefits that CSA delivers (Onyeneke et al.
    2021; Ahiale et al. 2020; Shittu et al. 2018). Among the factors that hinder CSA
    upscaling in Africa include heterogeneous farming systems, limited finance, high
    cost of agricultural inputs, and technology (Ogunyiola et al. 2022). In addition,
    Medugu et al. (2012) observed that the intricate challenge of rural out-migration
    facing Nigeria’s rural area—where labourers seek more lucrative opportunities
    in the informal sector—has significant implications for CSA adoption, particularly
    due to its labour-intensive nature. Recent findings from the study carried out
    by FAO and ICRISAT in 2019 have indicated that several CSA projects exist in the
    northern part of Nigeria to strengthen farmers’ resilience to climate change.
    Worthy of mention is the smart agricultural intervention and empowerment programs
    in Adamawa, Borno, and the Yobe States. Adesina and Loboguerrero (2021) noted
    that over 70% of the inhabitants of Borno State are into crop production, animal
    husbandry, and fishing due to Lake Chad’s presence. However, the shrinking of
    lakes, severe drought, degraded soil, inadequate infrastructure to support producers,
    and floods coupled with the State’s recent insecurity challenges have reduced
    agricultural productivity (FAO and ICRISAT 2019). Therefore, people now depend
    heavily on humanitarian assistance from international bodies such as the World
    Food Program. Some of the ongoing efforts that helped to facilitate CSA adoption
    and adaptation to changing landscapes in Borno State are the National Policy on
    Climate Change and Response Strategy and Agricultural Promotion Policy development.
    A typical practice of CSA in southern and northern Borno State is the adoption
    of terracing due to the rocky topography of the area. The farmers affirmed a higher
    yield of sorghum and maize on terraced farms (47% higher) when compared to non-terraced
    ones (FAO and ICRISAT 2019). In the same vein, Oyawole et al. (2019) found that
    the factors influencing the adoption of CSA practices in northern Nigeria include
    social capital, land ownership, gender, off-farm work participation, and plot
    distance from homestead. Similarly, Alhassan and Haruna (2024) found that agricultural
    extension programs and community social networks influenced rural farmers’ CSAP
    adoption in both Ethiopia and Nigeria, thus reinforcing the earlier findings of
    Oyawole et al. (2019). In a further research, Oyawole et al. (2020) affirmed that
    while the plots managed by women have a higher likelihood of adopting green manure
    and agroforestry, there are no significant gender differences in the adoption
    of organic manure and zero/minimum tillage. However, Fapojuwo et al. (2018) discovered
    that female farmers adopted agroforestry in derived savannah, guinea savannah,
    and rain forest, while the male farmers employed organic manure, zero tillage,
    and crop rotation in the same agro-ecological zones, respectively. In a comparative
    study between Nigeria and Ethiopia, Alhassan and Haruna (2024) highlighted the
    important role of income, farm size, and climate-related information for investing
    in CSAPs to curb food insecurity in sub-Saharan Africa. They discovered that household
    income and plot size influence farmers’ adaptation options in promoting CSAPs
    in both Ethiopia and Nigeria. This is in agreement with the findings of Sang et
    al. (2024) who used the 2020 China Rural Revitalization Survey data and found
    that CSAP adoption intensity positively and significantly affects household income,
    net farm income, and income diversity. In terms of the relationship between CSA,
    yields, and food security, Paul Jr. et al. (2023) found that bundling the CSAPs
    might lead to greater yield and food security gains as against the independent
    use of CSAPs such as adopting climate-smart groundnut varieties, cereal-groundnut
    intercropping, and the use of organic fertilizers. Furthermore, Li et al. (2024)
    identified four factors—socio-demographic, institutional, resource endowment,
    and socio-economic factors—that influenced farmers’ decisions to adopt CSAPs.
    They found that most of these factors had either a positive or negative impact
    on the adoption of CSAPs. On the contrary, variables such as labour endowment,
    land tenure security, membership in farmers’ organizations, non-governmental organization
    support, and climate conditions, as well as access to extension services, agricultural
    training, and information, consistently and positively affect the adoption of
    CSAPs across the globe. The CSA story is however not different in the East Asia
    region where Vatsa et al. (2023) accessed the extent to which adoption of CSAPs
    can contribute to food security by improving crop yields among rice farmers across
    five Chinese provinces. The study focussed on the adoption of minimum tillage,
    improved rice varieties, farmyard manure, water-saving technology, and bio-pesticides
    and they found that intensifying the adoption of CSAPs improved rice yield by
    1410 kg/ha. Additionally, the study highlighted that educated farmers, those who
    experienced a drought during the most recent growing season, and individuals who
    perceived the rainfall to have changed during the 5 years preceding the survey
    were more likely to intensify the adoption of CSAPs. Likewise, Zhou et al. (2023)
    considered 10 CSAPs—disease-tolerant banana varieties, banana diversification,
    crop rotation, intercropping, minimum tillage, crop residual turnover, soil testing,
    organic fertilizer, farmyard manure, crop-livestock systems—and assessed whether
    agricultural cooperatives can assist in promoting farmers’ adoption of CSAPs.
    They found that cooperative membership significantly increases the farmers’ adoption
    of banana diversification, crop residual turnover, and soil testing. Furthermore,
    Nwajiuba et al. (2015) examined the current state of CSA knowledge in Africa using
    Nigeria, Cameroon, and the Democratic Republic of the Congo as case studies. They
    found that CSA is yet to be an explicit government policy and there are no agricultural
    practices defined as CSA in the three African countries earlier mentioned. Conversely,
    some of the identified gaps in policy across the three countries include key stakeholders’
    engagement in national CSA dialogue, low awareness about CSA, mainstreaming CSA
    into national agricultural development policy, capacity building and training
    of the extension workers, and actively engaging the youth and schools in CSA extension
    program strategies to widen dissemination and achieve more significant impact.
    In the same vein, Ogunyiola et al. (2022) identified additional policy insights
    needed for the upscaling of CSA practices and technologies in Africa as implementing
    stronger land tenure regulatory frameworks, approaching local knowledge by the
    development partners with care and respect, and implementing inclusive financial
    policies and institutional arrangements in consultation with smallholder farmers
    by government and development partners. In summary, the low adoption of CSAPs
    is still a serious issue in regions like West Africa, East Africa, and East Asia
    (Li et al. 2024; Zhou et al. 2023) coupled with barriers that hinder its upscaling
    across these regions. Though there are several empirical studies on CSAPs, there
    is a need to be intentional about the upscaling of CSAPs in Africa and the appropriateness
    of AP-CSAPs gaining prominence in the context of labour scarcity. Hence, there
    is an urgent need to explore how these practices influence labour demand and the
    broader production factors’ dynamics. 3 Analytical framework This study assumes
    that a farm household largely faces more effective markets (though not perfectly
    competitive) for other farm inputs like fertilizer and seed. Differences in transaction
    costs in different rural locations affect the return to individual smallholder
    farm households from the purchase of fertilizer from urban markets and the value
    of the product, which is normally sold at the farm level (Lopez 1986). For most
    smallholder farmers who operate in the imperfect market environments, their utility
    and profit-maximizing decisions are jointly determined, where the optimal production
    and consumption levels are determined within an integrated framework (Lopez 1986).
    But given the desired level of output that gives the maximum utility or profit
    level, these farmers (producers) would want to minimize their respective cost
    of production, notably costs of purchased inputs. Hence, producers will minimize
    their production cost, given their respective level of output. Therefore, let
    the production function (Eq. 1) of a farm be: $$Q=q(X, Z)$$ (1) where Q represents
    the household’s farm output, i.e., rice harvested in kg; \\(X\\) represents vectors
    of purchased input quantity (seed, labour, fertilizer, pesticide, and mechanization
    service) while \\(Z\\) is the vector of technological practices. The production
    function in Eq. 1 is assumed to be a concave function (twice differentiable where
    the first-order condition is positive and the second-order condition is negative).
    The cost of purchased input is given Eq. (2) as follows: $$C = PX$$ (2) where
    \\(P\\) represents the vector of input prices (which also reflects the differences
    in transaction costs for input at various locations). We assume that farmers minimize
    their cost of production subject to their respective level of output; as shown
    in Eq. 3: $$MinC = PX$$ (3) $$s.tQ = q(X, Z)$$ Setting up the Lagrange function:
    $$L = PX + \\lambda (Q-q(X, Z))$$ (4) Solving the first-order conditions and adding
    vectors of household fixed factors and other characteristics of the farm household
    give a vector of purchased factor input function of the form: $${X}^{*} = x(P,
    Q, Z)$$ (5) Substituting Eq. 5 into Eq. 2, the corresponding minimum cost function
    is derived as follows: $${C}^{*} = c(P, Q, Z)$$ (6) Christensen et al. (1973)
    derived factor cost share equations by transloging the cost function. The translog
    cost function is flexible and does not impose priori restrictions on scale economies
    and substitution of factors. The translog cost function is the most particularly
    useful function for estimating the factor demand functions. Rewriting Eq. 6 in
    natural logarithm, the cost function C* takes the form, $${lnC}^{*} = c(lnP, lnQ,
    Z)$$ (7) where \\(P\\), \\(Q\\), \\(and Z\\) are defined above. Following Binswanger
    (1974) and Bamiro and Shittu (2009), the translog cost function of smallholder
    rice production in the study area was specified as follows: $$\\begin{array}{c}ln\\;C={\\beta
    }_{0}+{\\beta }_{q}\\;ln\\;Q+\\sum \\limits_{i=1}^{5}{\\beta }_{i}\\;{\\text{ln}}\\;{P}_{i}+\\frac{1}{2}\\sum
    \\limits_{i=1}^{5}\\sum \\limits_{j=1}^{5}{\\beta }_{ij}\\;{\\text{ln}}\\;{P}_{i}\\;{\\text{ln}}\\;{P}_{j}+\\sum
    \\limits_{i=1}^{5}{\\beta }_{qi}\\;{\\text{ln}}\\;Q\\;{\\text{ln}}\\;{P}_{i}\\\\
    \\text+\\sum \\limits_{i=1}^{5}\\sum \\limits_{k=1}^{6}{\\beta }_{ik}{Z}_{k}\\;{\\text{ln}}\\;{P}_{i}+\\sum
    \\limits_{k=1}^{6}{\\beta }_{kq}{Z}_{k}\\;{\\text{ln}}\\;Q+\\varepsilon \\end{array}$$
    (8) where \\(C\\) is the total cost of production (₦/ha), and \\({P}_{i}\\) or
    \\({P}_{j}\\) is the unit cost (price) of \\(i{\\text{th}}\\) or \\(j{\\text{th}}\\)
    input (\\(i, j =1, 2, \\dots , 5\\)) including seed (₦/kg), labour (₦/workday
    per person), inorganic fertilizer (₦/kg), inorganic pesticides (₦/litre), and
    mechanization service (₦/ha per ploughing operation) while \\(Q\\) denotes rice
    output (kg/ha). In addition, \\({Z}_{k}\\) is the technology-related dummy variable
    for use of the kth AP-CSAP including zero/minimum tillage, rotational cropping,
    green manuring, organic manuring, residue retention, and agroforestry. Each of
    the dummy variables takes on the value of one if used and zero if otherwise. On
    the other hand, \\({\\beta }_{s}\\) are vectors of parameters associated with
    various explanatory variables in the model, which are distinguished by the use
    of subscripts: \\(q\\) for output, \\(i\\) and \\(j\\) for input prices, and \\(k\\)
    for AP-CSAPs, and \\(\\varepsilon\\) is a stochastic error term. Neoclassical
    theory suggests the matrix of second-order terms implicitly in Eq. (8) is symmetric
    (\\({\\beta }_{ij} ={\\beta }_{ji}\\): note that \\(i\\) and \\(j\\) are similar).
    In addition, the cost function is homogeneous of degree one in input prices such
    that: $$\\begin{array}{cc}\\sum \\limits_{i=1}^{5}{\\beta }_{i}=1\\mathrm{\\;and\\;}\\sum
    \\limits_{i=1}^{5}{\\beta }_{ij}=\\sum \\limits_{i=1}^{5}{\\beta }_{qi}=\\sum
    \\limits_{i=1}^{5}{\\beta }_{ki}=0& \\mathrm{for\\;all\\;}i,\\;j\\end{array}$$
    (9) As noted by Bamiro and Shittu (2009) as well as Binswanger (1974), imposing
    homogeneity of degree one in input prices on the translog cost function (Eq. 8)
    does not impose homogeneity of degree one on the underlying production function.
    In addition, almost no other constraints are imposed on the elasticity of factor
    demand or substitution derived from the translog cost function. Logarithmic differentiation
    of the cost function (Eq. 8) and the use of Shepard’s lemma yield the following
    cost share equations: $${S}_{i}={\\beta }_{i}+{\\beta }_{qi}{\\text{ln}}Q+\\sum
    \\limits_{j}^{5}{\\beta }_{ij}\\mathrm{ ln}{P}_{j}+\\sum \\limits_{k=1}^{6}{\\beta
    }_{ki}{Z}_{k}+{\\xi }_{i}$$ (10) where \\({S}_{i}\\) is the share of production
    costs associated with the \\(i{\\text{th}}\\) input (\\(i\\) = 1, 2, …, 5 for
    seed, labour, inorganic fertilizer, inorganic pesticides, and mechanization services,
    respectively). The cost shares for the purchased inputs are calculated as follows:
    $${S}_{i}=\\frac{{P}_{i}{X}_{i}}{\\sum {P}_{i}{X}_{i}}$$ Imposing homogeneity
    forces one of the input prices to be a numeraire price (Akridge and Hertel 1986).
    Hence, unit costs (prices) of mechanization services, labour, inorganic fertilizer,
    and inorganic pesticides (\\({P}_{2}-{P}_{5}\\)) were expressed in terms of the
    seed price (\\({P}_{1}\\)), and the share equation for seed (\\({S}_{1}\\)) dropped,
    yielding the following system of estimating equations. $${S}_{i}=\\frac{\\partial
    lnC}{\\partial ln{P}_{i}}={\\beta }_{i}+{\\beta }_{qi}lnQ+\\sum \\nolimits_{j=2}^{5}{\\beta
    }_{ij}{\\text{ln}}\\left({P}_{j}/{P}_{1}\\right)+\\sum \\nolimits_{k=1}^{6}{\\beta
    }_{ki}{Z}_{k}+{\\varepsilon }_{i} (i = 2, 3, \\dots , 5)$$ (11) The system of
    Eq. (11) was the final estimation equation adopted in this study. The parameters
    were estimated jointly using the iterative seemingly unrelated regression (SUR)
    procedure in STATA version 16. Parameters of the seed equation dropped in (11)
    were derived from the coefficients of the estimated cost shares equations using
    the symmetry and homogeneity restrictions in (9). The constant output own-price
    and cross-price elasticities of factor demand were estimated following Biswanger
    (1974), Johnston (1985), and Bamiro and Shittu (2009) as follows: $$\\eta_{ij}=\\frac{\\beta_{ij}+S_iS_j}{S_i}\\mathrm
    f\\mathrm o\\mathrm r\\;\\mathrm a\\mathrm l\\mathrm l\\;i,\\;j;\\;i\\;\\neq j$$
    (12) $$\\eta_{ii}=\\frac{\\beta_{ii}+{Si}^2-Si}{Si}\\mathrm f\\mathrm o\\mathrm
    r\\;\\mathrm a\\mathrm l\\mathrm l\\;i$$ (13) where \\({\\eta }_{ii}\\) is the
    constant output own-price elasticity of demand for the \\(i{\\text{th}}\\) factor,
    \\({\\eta }_{ij}\\) is the constant output cross-price elasticity of demand for
    the \\(i{\\text{th}}\\) factor due to changes in the price of the \\(j{\\text{th}}\\)
    factor, and \\({\\beta }_{ij}\\) is the parameter of the \\(j{\\text{th}}\\) input
    price in the i cost share equation. Similarly, \\({\\beta }_{ii}\\) is the parameter
    of the \\(i{\\text{th}}\\) input price in its own cost share equation and \\({S}_{i}\\)
    and \\({S}_{j}\\) are respectively the shares of the \\(i{\\text{th}}\\) and \\(j{\\text{th}}\\)
    inputs in the production cost. The Morishima elasticities of input substitution
    were also computed, following Blackorby and Russel (1989) as well as Bamiro and
    Shittu (2009) as follows: $${\\delta }_{ij}^{M} = \\frac{{\\beta }_{ij}+{S}_{i}{S}_{j}}{{S}_{i}}-\\frac{{\\beta
    }_{ii}+{Si}^{2}-Si}{Si}$$ (14) where \\({\\delta }_{ij}^{M}\\) is the Morishima
    elasticity of substitution of factor i for j while \\({\\beta }_{ij}\\), \\({S}_{i}\\)
    and \\({S}_{j}\\) are as earlier defined. 4 Methodology 4.1 Study area The study
    was conducted in selected farming communities reputed for rice production across
    the six geopolitical zones, and covering five of the seven agro-ecological zones
    (AEZs) of Nigeria. Nigeria is situated in the West African sub-region and lies
    between longitudes 3 and 14 and latitudes 4 and 14. It has a landmass of 923,768
    sq. km. Nigeria shares a land border with the Republic of Benin in the west, Chad
    and Cameroon in the east, and Niger in the north. Its coast lies on the Gulf of
    Guinea in the south and it borders Lake Chad to the northeast. Administratively,
    it is made of 36 States and the Federal Capital Territory (FCT). The States are
    commonly grouped into six (6) geopolitical zones: Northeast, Northwest, North-central,
    Southeast, Southwest, and South-south geopolitical zones. Nigeria is covered by
    three types of vegetation: forests (where there is significant tree cover), savannahs
    (insignificant tree cover, with grasses and flowers located between trees), and
    montane land, and is commonly divided into seven agro-ecological zones, namely
    the Sahel Savannah, the Sudan Savannah, and the Northern as well as Southern Guinea
    Savannahs. Other AEZs include the Derived Savannah, the Mid-Altitude, and the
    Humid Rainforests, all of which are suitable for the cultivation of maize and
    rice, among several other crops like cassava and yams. 4.2 The study design The
    study was part of the FUNAAB-RAAF-PASANAO project implemented by the Federal University
    of Agriculture, Abeokuta (FUNAAB), in partnership with the National Cereals Research
    Institute, Baddegi, and funded by the Economic Community of West African States
    (ECOWAS). The central focus was on incentivizing the adoption of climate-smart
    agricultural practices in cereal production in Nigeria. The data were collected
    in a Nationwide Farm Household Survey conducted across the six geopolitical zones
    in Nigeria, focusing on maize and rice farmers. The sub-set of the study data
    used in this study was from smallholder rice farmers in Nigeria. The respondents
    were selected in a three-stage sampling process, described as follows: Stage I:
    Purposive selection of 16 States that have been the leading rice producers in
    Nigeria (excluding conflict-prone areas), based on production statistics from
    [National Bureau of Statistics (NBS), 2016] Stage II: Purposive selection of three
    (3) Agricultural Blocks per State from the main rice-producing areas of the State
    and two (2) Extension Cells per block—that is, three (3) blocks per state, six
    (6) Cells per State, and 96 Cells in all Stage III: Proportionate stratified random
    selection of 16 Rice farmers from members of the Rice farmers’ association in
    each of the selected Cells This process yielded 1536 households of rice farmers
    but only 1500 households from which a complete dataset was collected through personal
    interviews of the farmer and other farming members of their households were used
    for the study. Data were collected on a wide range of issues, including the households’
    socio-economics, climate-smart practices, production systems, production resource
    use, costs, and outputs on farmland cultivated during the 2016/17 farming season.
    4.3 Descriptive statistics of the study variable The description of the study
    that influences the factor demand and input substitution among smallholder rice
    farmers in Nigeria was identified based on the review of related literature variables
    and the summary statistics of the variables are given in Table 1. As expected,
    labour took the highest (three-fifths) cost share followed by fertilizer and seed
    that took about one-seventh of the total cost share, respectively. It is important
    to note that herbicide and mechanization cost took the lowest share of the total
    budget for agricultural inputs used by the smallholder rice farmers. Table 1 Definition
    of study variables and their descriptive statistics Full size table Focusing on
    the AP-CSAP technologies used by the rice farmers in the study area (Table 1),
    specifically, a little above half of the respondents (55%) used minimum tillage
    on their rice farms while one-third of them practiced agroforestry (34%) and residue
    retention (33%) during the 2016/2017 production season. Worthy to note is the
    fact that organic manure has the least patronage, which was used by only 9% of
    the rice farmers in the target area. This may be due to the bulky nature of farmyard
    manure and/or animal dung coupled with the fact that large quantities required
    may not be readily available (Kehinde et al. 2023). With respect to socio-demographic
    characteristics, Table 1 shows that the average age of the rice farmers across
    the six geopolitical zones is 45 years. This implies that the majority of the
    respondents were still in their active years implying significant participation
    in the farming activities. This result is similar to the findings of Adeyonu et
    al. (2022) who found the mean age of rural households in Nigeria to be 48 years.
    Only 9% of the respondents were female indicating that the majority of the sampled
    rice farmers were male. The mean year of schooling is 8 years while those that
    had access to extension services and belong to farmers association or the other
    were 62% and 95%, respectively. The mean size of household landholdings was 2.21
    ha portraying the respondents as smallholders. In the same vein, an average rice
    farmer reported the yield of 2.3 tonnes across the study area. This corroborates
    the findings of the USDA Foreign Agricultural Service (2023) which reported that
    the Nigeria rice yield in the 2016/2017 production season is 2.2 t/ha. 5 Result
    and discussions 5.1 Effect of input price on the factor cost share The results
    of the estimated system of factor share equations are summarized in Table 2. The
    results show that the coefficients \\({\\beta }_{ii}\\) (the coefficient between
    price and share of the same factors) are greater than zero, with the exception
    of that of pesticides and this satisfies the theoretical constraint on non-decreasing
    factor prices. This implies that the cost share of seed, labour, fertilizer, and
    mechanization increases with an increase in the price of the respective input.
    This might be because most of these inputs do not have a perfect substitute. However,
    the reverse is the case for pesticide, probably because the rice farmers have
    access to the other alternatives like farm labour (as against the use of herbicides)
    and indigenous ways to control birds and other major pests. Table 2 Estimated
    SUR factor share equations Full size table Concerning the effect of input prices
    on factor cost share in Table 2, the results show that a unit increase in the
    prices of labour per day and that of fertilizer per kg will significantly increase
    the labour cost share at 1% level while it reduces the mechanization cost share
    at 1% and 5% levels, respectively. An increase in the price of labour (wage rate)
    results in a higher share of labour in the budget because labour cannot be readily
    substituted in this part of the world. Likewise, if the price of fertilizer goes
    up, it will lead to a higher cost share of fertilizer because it cannot readily
    be substituted and the soil is heavily degraded; hence, the smallholder rice farmers
    are increasingly becoming agrochemical dependent. In addition, an increase in
    the unit price of mechanization service per hectare significantly reduces the
    labour cost shares at 5% level and increases significantly at 1% level the budget
    allocated to pesticides and mechanization service. This is logical, as an increase
    in the unit price of mechanization service will make farmers jettison the use
    of mechanization for some of the farm operations and employ more labour. On the
    other hand, the increase in mechanization prices has resulted in a higher budget
    share of pesticides and mechanization service, respectively. The coefficient of
    rice yield is significant at 5% level in the labour equation. The coefficient
    of rice in the labour share equation is negative (− 0.0263). Thus, the scale effect
    is labour-saving, which implies that as more rice is produced, the share of labour
    cost decreases. 5.2 Effect of AP-CSAPs on factor cost share Focusing on the labour
    share equation, the results show that coefficients of all the AP-CSAPs, except
    agroforestry, are positive and significant at 1%, 5%, or 10% levels. This shows
    that most AP-CSAPs are labour-using, except for agroforestry that is labour neutral.
    This implies that usage of minimum-tillage, crop rotation, organic manure use,
    green manure, and residue retention will increase the smallholder rice farmers’
    demand for an already too scarce labour. Hence, a shift to AP-CSAPs will lead
    to a significant increase in labour demand by the smallholder rice farmers in
    Nigeria. Focusing on the fertilizer share equation, results in Table 2 show that
    the coefficient of minimum tillage was positive and significant at 1% level while
    those of other AP-CSAPs were fertilizer-neutral. This shows that while most AP-CSAPs
    use, except minimum tillage, are fertilizers saving, the effects are largely not
    significant. The results regarding the pesticide use, however, show that the coefficients
    of organic manuring and residue retention were negative and all significant at
    1% level while those of minimum tillage and crop rotation were positive and significant
    at 1% level. These show that the use of organic manure and residue retention is
    significantly pesticide saving while zero/minimum tillage use is pesticide and
    fertilizer using. The results with respect to mechanization service further show
    that the coefficients of AP-CSAPs such as minimum tillage and organic manure are
    negative and significant 1% levels. This shows that the use of those AP-CSAPs
    is mechanization service saving. In other words, the cost shares of mechanization
    service decrease with the use of minimum tillage and organic manure. Other estimates
    in Table 2 also show that the use of most AP-CSAPs is seed-saving. 5.3 Elasticities
    of factor demand and input substitution The estimated own-price and cross-price
    elasticities of factor demand as well as elasticities of input substitution-based
    SUR results in Table 2 are summarized in Table 3 and 4, respectively. The results
    of the elasticities of factor demand are reported in Table 3. All the own price
    elasticities of factor demand have expected signs. Seed, labour, fertilizer, and
    mechanization are all negatives and less than one, implying that the demand for
    these resources decreases with an increase in their respective prices but inelastic.
    This result is consistent with the law of demand, which states that ceteris paribus,
    the quantity demanded of a commodity is inversely proportional to the price of
    the commodity. Whereas the own price elasticity of pesticide is negative but elastic,
    this implies that the demand for pesticide will greatly rise more than the price
    changes by a larger proportion with an increase in its prices. Table 3 Own price
    and cross-price elasticities of factor demand Full size table Table 4 Morishima
    elasticity of factor substitution Full size table The elasticity of demand for
    labour is relatively low; this suggests that the demand for agricultural labour
    is highly inelastic. Labour can therefore be regarded as a necessity because changes
    (increase or decrease) in the price of this input have a negligible effect on
    the quantity demanded. It is important to note that other inputs such as fertilizer
    and mechanization have a relatively lower price elasticity of demand than that
    of seed (Table 3). This suggests that the demand for seed is relatively more elastic
    than that of fertilizer and mechanization. This is in line with the findings of
    Otunaiya et al. (2013) who found that all other inputs, except planting material,
    have a relatively lower price elasticity of demand than that of inorganic fertilizer.
    5.4 The cross-price elasticity of demand for factors The off-diagonal elements
    of the estimates in Table 3 are the cross-price elasticity of demand for various
    factors. They measure the degree of responsiveness of the demand for a factor
    (say labour), to a percentage increase in the price of another factor (say seed).
    Positive cross-price elasticity of demand means that the factors are substitutes
    while negative cross-price elasticity of demand implies that the inputs are complements.
    The results suggest that seed is a technical substitute for pesticides and mechanization
    while it is a technical complement for labour and fertilizer in smallholder rice
    production. Likewise, labour was found to be a technical substitute for fertilizer
    and pesticides, thus indicating that farmers tend to replace costly fertilizer
    and pesticides with labour. Reference can be made to labour-fertilizer and labour-pesticide
    substitutability in terms of bigger family size that implies more cheap labour
    while resources for purchasing fertilizer are reallocated to family labour. However,
    labour is complementary to the price of mechanization service and seed, indicating
    that the greater the households’ mechanize some of the farm operations and plant
    more seeds, the more likely it will translate to higher employment in the farm
    activity. Pesticide was found to be a technical substitute for seed and labour
    and technical complement for fertilizer and mechanization service. This implies
    that as the price of pesticide and mechanization services increase, less pesticide
    and mechanization services are demanded and more of seeds are demanded and utilized.
    Similarly, as the price of inorganic fertilizer and pesticides increase, the demand
    for inorganic fertilizer and pesticide declines and more labour is demanded and
    utilized. On the other hand, the complementarities of seed-labour pair and seed-fertilizer
    pair imply that an increase in the price of seed will reduce demand for seed and
    result in a consequential decrease in demand for labour and fertilizer. This result
    corroborates that of Mensah-Bonsu (2010) who found that the cross-price elasticity
    between seed and hired labour was negative, hence suggesting complementarity between
    the two inputs. In the same vein, the complementarities of the mechanization service-labour
    pair and mechanization-pesticide pair imply that an increase in the price of mechanization
    service will reduce the demand for mechanization service and therefore a consequential
    decrease in demand for labour and pesticide. These results are further confirmed
    by the Morishima elasticities of input substitution in Table 4. The elasticity
    of the factor of substitution reflects the relative importance (change) of a factor
    while the cross-price elasticities do not. In other words, the elasticity of input
    substitution measures the ease of substitution with which the inputs can be substituted
    for the other. Ease of substitution between factors of production improves with
    an increase in the value of elasticity of substitution (\\(\\delta\\)). The results
    in Table 4 show that fertilizer has a high degree of substitutability (2.1348)
    for seed. Conversely, seed has very low substitutability (− 0.4732) for labour.
    This result is expected because sufficient quantity and good quality seed reduce
    crop failure. Table 4 further shows that labour has a large substitution possibility
    (1.5067) for pesticides as well as fertilizer (1.2060). Similarly, seed has a
    fairly high degree of substitutability for pesticides (1.352) and mechanization
    service (2.9907), respectively. This implies that if there is a relative rise
    in the price of pesticide and fertilizer, it would result in a higher demand for
    seed and labour. An increase in the price of fertilizer and pesticide would increase
    the intensity of the use of labour and improved crop variety. 6 Conclusion and
    policy implications 6.1 Conclusions This study used household survey data of smallholder
    rice farmers to assess the influence of the AP-CSAPs on labour (and other production
    factors’) demand and input substitution in Nigeria. The descriptive result shows
    that about 55% of the respondents used minimum tillage on their rice farms while
    one-third of them practiced agroforestry (34%) and residue retention (33%) during
    the 2016/2017 production season. In terms of cost share, labour took about 60%
    of the total cost share followed by fertilizer and seed that took about one-seventh
    of the total cost share, respectively. The SUR result shows that labour and fertilizer
    cannot be readily substituted in Nigeria; hence, an increase in the unit price
    of labour (wage rate) and fertilizer results in a higher share of labour and fertilizer
    in the budget. On the contrary, an increase in the unit price of mechanization
    service per hectare reduces significantly the share of labour cost and increases
    significantly the budget share allocated to pesticides and mechanization service.
    In terms of the effects of AP-CSAP use on factor cost share, most of the AP-CSAPs
    are labour-intensive with the exception of agroforestry that is labour neutral.
    The use of organic manure and residue retention is significantly pesticide saving
    while zero/minimum tillage use is pesticide and fertilizer using. Demand for most
    of the production factors, except pesticide, was also found to be price inelastic,
    suggesting that policies aimed at taxing agrochemical use may not cause a substantial
    reduction in chemical dependence in Nigeria’s smallholder agriculture, even though
    it may significantly reduce pesticide use. 6.2 Policy implications Arising from
    the foregoing, promoting the use of AP-CSAPs such as minimum tillage, green and
    organic manure, residue retention, and crop rotation will create more demand for
    labour, which is very important for employment creation. However, it is a serious
    challenge due to rising labour scarcity with rural–urban migration posing a serious
    threat; the supplementary thing might be to create incentives in the form of higher
    wages or compensation to bring people back to agriculture. In addition, intervention
    via the input market such as improved crop variety, seed of green manure and/or
    cover crops, and agricultural extension services can be made readily available
    to farmers by the government agencies, relevant private institutions, and development
    partners advocating for the adoption of AP-CSAPs. Given that most AP-CSAPs require
    higher labour requirements, their success is often impeded by labour shortages.
    The development partners, NGOs, and other relevant stakeholders can leverage on
    the community-driven development approach to provide the smallholder farmers with
    the platform for machine-sharing where necessary equipment such as jab planter
    and self-propelled rice transplanter among others are provided and managed at
    the community level. This may boost the adoption of labour-using AP-CSAPs in Nigeria.
    In an attempt to promote a shift to climate-smart agriculture and contribute to
    sustainable ecosystem management in Nigeria, both moral suasion and Payment for
    Ecosystem Services (PES) approaches can be adopted to promote positive change
    and foster a sense of stewardship among local communities. Moral suasion entails
    persuading, appealing, and encouraging farmers/landowners/communities to voluntarily
    adopt ethical and responsible practices that promote the well-being of the environment
    without relying on financial incentives. Some of the key components of this approach
    include creating awareness about the importance of environmental conservation
    and sustainable agricultural practices, educating the farmers/landowners/communities
    about the consequences of unsustainable farming practices, and appealing to their
    sense of responsibility and morality. An example is the use of moral suasion by
    conservation organizations and government agencies in Nigeria to encourage the
    local communities to protect endangered species like the Cross River Gorilla.
    Similarly, conservation of iconic wildlife species like Elephants, Rhinoceros,
    and Lions in Kenya relies solely on moral suasion. Consequently, Kenya’s wildlife
    conservation has successfully reduced poaching, established wildlife reserves,
    and promoted ecotourism through ethical persuasion and cultural values. Payment
    for ecosystem services on the other hand involves compensating farmers/landowners/communities
    for actions that enhance ecosystem service like carbon sequestration and biodiversity
    protection. A specific example is the collaboration of Nigerian Erosion and Watershed
    Management Project with local communities to restore degraded landscapes, prevent
    erosion, and improve water quality where farmers were paid for adopting sustainable
    land management practices like reforestation and agroforestry that contribute
    to soil conservation and water regulation. Thus, in addition to creating incentives
    in the form of higher wages to bring people back to agriculture and leveraging
    on community-driven development approach to provide labour-saving equipment to
    rice farmers, integrating moral suasion with PES will enhance the adoption of
    AP-CSAPs. There is therefore no doubt that combining PES with moral suasion can
    create a more holistic and effective approach to sustainable ecosystem management
    and environmental conservation in Nigeria, and Africa at large. In conclusion,
    integrating PES with moral suasion recognizes both economic and intrinsic motivations
    that foster behavioural change, promote social norms, and deepen community engagement
    as well as ensuring commitment to sustainable agricultural practices in the long
    run. Data availability The data will be made available when requested. References
    Adesina OS, Loboguerrero AM (2021) Enhancing food security through climate-smart
    agriculture and sustainable policy in Nigeria. Handbook of climate change management:
    research, leadership, transformation. Springer International Publishing, Cham,
    pp 657–673 Chapter   Google Scholar   Adeyonu AG, Adams SO, Kehinde MO, Akerele
    D, Otekunrin OA (2022) Spatial profiles and determinants of multidimensional energy
    poverty in rural Nigeria. Int J Energy Econ Policy 12(3):373–384. https://doi.org/10.32479/ijeep.13163
    Article   Google Scholar   Ahiale ED, Balcombe K, Srinivasan C (2020) Determinants
    of farm households’ willingness to accept (WTA) compensation for conservation
    technologies in Northern Ghana. Bio-based Appl Econ 8(2):211–234. https://doi.org/10.13128/bae-8931
    Article   Google Scholar   Alhassan U, Haruna EU (2024) Rural farmers’ perceptions
    of and adaptations to climate change in Sub-Saharan Africa: does climate-smart
    agriculture (CSA) matter in Nigeria and Ethiopia?. Environ Econ Policy Stud, 1–40.
    https://doi.org/10.1007/s10018-023-00388-8 Akridge JT, Hertel TW (1986) Multiproduct
    cost relationships for retail fertilizer plants. Am J Agr Econ 68:928–938 Article   Google
    Scholar   Aryal JP, Rahut DB, Maharjan S, Erenstein O (2018) Factors affecting
    the adoption of multiple climate-smart agricultural practices in the Indo-Gangetic
    Plains of India. Nat Resour Forum 42(3):141–158. https://doi.org/10.1111/1477-8947.12152
    Article   Google Scholar   Aune J (2012) Sustainable agriculture and the environment:
    introduction to agricultural systems in developing countries, http://tinyurl.com/pe5nsfs
    Accessed on December 15, 2012 Bamiro OM, Shittu AM (2009) Vertical integration
    and cost behaviour in poultry industry in Ogun and Oyo States. Nigeria Agribusiness
    25(1):1–15. https://doi.org/10.1002/agr.20185 Article   Google Scholar   Branca
    G, Lipper L, McCarthy N (2013) Jolejole MC (2013) Food security, climate change,
    and sustainable land management A Review. Agron Sustain Dev 33:635–650. https://doi.org/10.1007/s13593-013-0133-1
    Article   Google Scholar   Branca G, McCarthy N, Lipper LJolejole MC (2011) Climate-Smart
    Agriculture: a synthesis of empirical evidence of food security and mitigation
    benefits from improved cropland management. Mitigation of climate change in agriculture.
    Series 3:1–43. FAO, Rome, Italy Available online at: http://www.fao.org/docrep/015/i2574e/i2574e00.pdf
    Binswanger HP (1974) A cost function approach to the measurement of elasticities
    of factor demand and elasticities of substitution. Am J Agr Econ 56:764–768 Article   Google
    Scholar   Blackorby C, Russel RR (1989) Will the real elasticity of substitution
    please stand up: a comparison of the Allen Uzawa and Morishima elasticities. Am
    J Agr Econ 83(1):35–51 Google Scholar   Cervigni R, Riccardo V, Monia S (eds)
    (2013) Toward climate-resilient development in Nigeria. Directions in development.
    World Bank, Washington, DC. https://doi.org/10.1596/978-0-8213-9923-1 Christensen
    LR, Jorgenson DW, Lau L (1973) Transcendental logarithmic production frontiers.
    Rev Econ Stat 55(1973):28–45 Article   Google Scholar   Coulibaly YJ, Kundhlande
    G, Amosi N, Tall A, Kaur H, Hansen J (2015) What climate services do farmers and
    pastoralists need in Tanzania? Baseline study for the GFCS Adaptation Program
    in Africa. CCAFS Working Paper no. 110. CGIAR Research Program on Climate Change,
    Agriculture and Food Security (CCAFS). Copenhagen, Denmark. Available online at:
    www.ccafs.cgiar.org Dalton TJ, Masters WA, Foster KA (1997) Production costs and
    input substitution in Zimbabwe’s smallholder agriculture. Agric Econ 17:201–209
    Article   Google Scholar   FAO (2016) Nigeria food security and vulnerability
    survey 2016 Report. FAO Representation in Nigeria FAO, ICRISAT (2019) Climate-smart
    agriculture in the Borno State of Nigeria. CSA country profiles for Africa series.
    International Center for Tropical Agriculture (CIAT); International Crops Research
    Institute for the Semi-Arid Tropics (ICRISAT); Food and Agriculture Organization
    of the United Nations (FAO), Rome, p 22 FAOSTAT (2022) Crops and livestock products.
    Food and agriculture organization statistics 2022. https://www.fao.org/faostat/en/#data/QCL.
    Accessed 22 Feb 2023 Fapojuwo OE, Ogunnaike MG, Shittu AM, Kehinde MO, Oyawole
    FP (2018) Gender gaps and adoption of climate smart practices among cereal farm
    households in Nigeria. Niger J Agric Econ (NJAE) 8(1):38–49 Google Scholar   Food
    and Agriculture Organization (2010) Climate-smart agriculture: policies, practices
    and financing for food security, adaptation and mitigation. Food and Agriculture
    Organisation of the United Nations, Rome, Italy. Food and Agriculture Organization
    (2013) Climate-smart agriculture sourcebook: food and agriculture. Organization
    of the United Nations, Rome, Italy. Gwambene B (2011) Climate change and variability
    adaptation strategies: implication of adaptation strategies on land resources
    in Rungwe District. LAP Lambert Academic Publishing, Saarbrucken Deutschland,
    Tanzania Google Scholar   Johnston J (1985) Econometric methods. (International
    Student Edition, pp. 330–336). McGraw-Hill Book Company, London Google Scholar   Kehinde
    MO, Shittu AM, Oriade OA, Edewor SE (2023) Land tenure, land use antecedents,
    and willingness to embrace resilient farming practices among smallholders in Nigeria.
    Front Sustain Food Syst 7:999905. https://doi.org/10.3389/fsufs.2023.999905 Kehinde
    MO, Shittu AM, Ogunnaike MG, Oyawole FP, Fapojuwo OE (2022) Land tenure and property
    rights, and the impacts on adoption of climate-smart practices among smallholder
    farmers in selected agro-ecologies in Nigeria. Bio-based Appl Econ 11(1):75–87.
    https://doi.org/10.36253/bae-9992 Article   Google Scholar   Khatri-Chhetri A,
    Aggarwal PK, Joshi PK, Vyas S (2017) Farmers’ prioritization of climate-smart
    agriculture (CSA) technologies. Agric Syst. https://doi.org/10.1016/j.agsy.2016.10.005
    Article   Google Scholar   Lobell DB, Schlenker W, Costa-Roberts J (2011) Climate
    trends and global crop production since 1980. Science 333(6042):616–620. https://doi.org/10.1126/science.1204531
    Article   ADS   CAS   PubMed   Google Scholar   Lopez RE (1986) Structural models
    of the farm household that allow for interdependent utility and profit maximization
    decisions. In: Singh L, Squire L, Strauss J (eds) Agricultural Household Models.
    Johns Hopkins University Press, Baltimore, pp 306–325 Google Scholar   McCarthy
    N (2014) Climate-smart agriculture in Latin America: drawing on research to incorporate
    technologies to adapt to climate change. (IDB Technical Note; 652) Li J, Ma W,
    Zhu H (2024) A systematic literature review of factors influencing the adoption
    of climate-smart agricultural practices. Mitig Adapt Strat Glob Change 29(1):2.
    https://doi.org/10.1007/s11027-023-10098-x Article   Google Scholar   Lipper L,
    Thornton P, Campbell BM, Baedeker T, Braimoh A, Bwalya M, Caron P, Cattaneo A,
    Garrity D, Henry K, Hottle R (2014) Climate-smart agriculture for food security.
    Nat Clim Chang 4(12):1068–1072 Article   ADS   Google Scholar   Medugu NI, Sangari
    DU, Taiwo IS, Majid MR, Johar F (2012) Climate change and conflict in Nigeria:
    some salient perspective on Nigeria''s vulnerability. In: 22nd International Association
    of People Environment Society Conference. Glasgow Mensah-Bonsu A (2010) Price
    and non-price determinants of farm household demand for purchased inputs: evidence
    from northern Ghana. J Dev Agric Econ 2(2):054–064 Google Scholar   NBS (2016)
    Annual abstract of statistics. Nigerian bureau of statistics. Federal Republic
    of Nigeria, 2016 Newell P, Taylor O, Naess LO, Thompson J, Mahmoud H, Ndaki P
    et al (2019) Climate smart agriculture? Governing the sustainable development
    goals in sub-Saharan Africa. Front Sustain Food Syst 3:55. https://doi.org/10.3389/fsufs.2019.00055
    Article   Google Scholar   Nwajiuba C, Emmanuel TN, Solomon B, FARA (2015) State
    of knowledge on CSA in Africa: case studies from Nigeria, Cameroun and the Democratic
    Republic of Congo. Forum for Agricultural Research in Africa, Accra, Ghana OECD
    (2020) COVID-19 and global food systems status report on integrated water resources
    management and water efficiency plans. UN-Water. 2008 Ogunyiola A, Gardezi M,
    Vij S (2022) Smallholder farmers’ engagement with climate smart agriculture in
    Africa: role of local knowledge and upscaling. Clim Policy 22(4):411–426. https://doi.org/10.1080/14693062.2021.2023451
    Article   Google Scholar   Ojoko EA, Akinwunmi JA, Yusuf SA, Oni OA (2017) Factors
    influencing the level of use of climate-smart agricultural practices (CSAPs) in
    Sokoto state Nigeria. J Agric Sci 62(3):315–327 Google Scholar   Onyeneke RU,
    Mark UA, Chukwudi LN, Emeka EO (2021) Climate change perception and uptake of
    climate-smart agriculture in rice production in Ebonyi State Nigeria. Atmosphere
    12(11):1503. https://doi.org/10.3390/atmos12111503 Article   ADS   Google Scholar   Onyeneke
    RU, Igberi CO, Uwadoka CO, Aligbe JO (2018) Status of climate-smart agriculture
    in Southeast Nigeria. GeoJournal 83(2):333–346 Article   Google Scholar   Orchardson
    E (2019) Scaling out climate-smart agriculture in southern Africa. CIMMYT webpage.
    https://www.cimmyt.org/multimedia/scaling-out-climate-smart-agriculture-in-southern-africa/.
    Accessed 25 Feb 2024 Otunaiya AO, Okuneye PA, Olubanjo OO, Shittu AM (2013) Factor
    demand and inputs substitution of inorganicfertilizer use in food crops production
    in Southwestern Nigeria. Eur J Sci Res 108(3):349–359 Google Scholar   Oyaniran
    T (2020) Current state of Nigeria agriculture and agribusiness sector AFCFTA Workshop
    (2020), pp. 1–14 https://www.pwc.com/ng/en/assets/pdf/afcfta-agribusiness-current-state-nigeria-agriculture-sector.pdf,
    Accessed 22nd August 2023 Oyawole FP, Shittu AM, Kehinde MO Ogunnaike MG, Akinjobi
    LT (2020) Women empowerment and adoption of climate-smart agricultural practices
    in Nigeria. Afr J Econ Manag Stud. https://doi.org/10.1108/AJEMS-04-2020-0137
    Oyawole FP, Dipeolu AO, Shittu AM, Obayelu AE, Fabunmi TO (2019) What drives the
    adoption of climate smart agricultural practices? Evidence from maize farmers
    in Northern Nigeria. Niger J Agric Econ (NJAE) 9(1):14–28 Google Scholar   Paul
    M Jr, Aihounton GB, Lokossou JC (2023) Climate-smart agriculture and food security:
    cross-country evidence from West Africa. Glob Environ Chang 81:102697. https://doi.org/10.1016/j.gloenvcha.2023.102697
    Sang X, Chen C, Hu D et al (2024) Economic benefits of climate-smart agricultural
    practices: empirical investigations and policy implications. Mitig Adapt Strateg
    Glob Change 29:9. https://doi.org/10.1007/s11027-024-10104-w Article   Google
    Scholar   Shittu AM, Kehinde MO, Adeyonu AG, Ojo OT (2021) Willingness to accept
    incentives for a shift to climate-smart agriculture among smallholder farmers
    in Nigeria. J Agric Appl Econ 53(4):531–551 Article   Google Scholar   Shittu
    AM, Kehinde MO, Ogunnaike MG, Oyawole FP (2018) Effects of land tenure and property
    rights on farm households’ willingness to accept incentives to invest in measures
    to combat land degradation in Nigeria. Agric Resour Econ Rev 47(2):357–387. https://doi.org/10.1017/age.2018.14
    Article   Google Scholar   Statista (2023) Agriculture in Nigeria - statistics
    and facts. https://www.statista.com/topics/6729/agriculture-in-nigeria/. Accessed
    28 Dec 2023 UNFPA (2023) https://www.unfpa.org/data/world-population/NG. United
    nations population fund website. Accessed 22 Aug 2023 United Nations, Department
    of Economic and Social Affairs, Population Division (2017) World population prospects:
    the 2017 revision, custom data acquired via website: https://esa.un.org/unpd/wpp/DataQuery/
    USDA Foreign Agricultural Service (2023) Nigeria rice area, yield and production.
    United State Department of Agriculture. https://ipad.fas.usda.gov/countrysummary/Default.aspx?id=NI&crop=Rice.
    Accessed 21 Aug 2023 Vatsa P, Ma W, Zheng H, Li J (2023) Climate-smart agricultural
    practices for promoting sustainable agrifood production: yield impacts and implications
    for food security. Food Policy 121:102551. https://doi.org/10.1016/j.foodpol.2023.102551
    Article   Google Scholar   Woodfine A (2009) The potential of sustainable land
    management practices for climate change mitigation and adaptation in sub-Saharan
    Africa. Food and Agriculture Organization of the United Nations, Rome Google Scholar   Zhou
    X, Ma W, Zheng H, Li J, Zhu H (2023) Promoting banana farmers’ adoption of climate-smart
    agricultural practices: the role of agricultural cooperatives. Clim Dev, 1–10.
    https://doi.org/10.1080/17565529.2023.2218333 Download references Acknowledgements
    This project was implemented with a grant from the ECOWAS Regional Agency for
    Agriculture and Food (ECOWAS’ RAAF-PASANAO) with funding support from the French
    Development Agency (AFD), Grant number: No.18_AP3_TH3/2016/ECOWAS/AEWR/RAAF/PASANAO
    Author information Authors and Affiliations Department of Agriculture, Landmark
    University, Omu Aran, Kwara State, Nigeria Mojisola Olanike Kehinde & Toluwalase
    Eniola Awe Landmark University SDG 2 (Zero Hunger), Omu Aran, Kwara, Nigeria Mojisola
    Olanike Kehinde & Toluwalase Eniola Awe Department of Agricultural Economics and
    Farm Management, Federal University of Agriculture, Abeokuta, Ogun State, Nigeria
    Adebayo Musediku Shittu & Ayobami Ajayi Corresponding author Correspondence to
    Mojisola Olanike Kehinde. Ethics declarations Competing interests The authors
    declare no competing interests. Additional information Publisher''s Note Springer
    Nature remains neutral with regard to jurisdictional claims in published maps
    and institutional affiliations. Rights and permissions Springer Nature or its
    licensor (e.g. a society or other partner) holds exclusive rights to this article
    under a publishing agreement with the author(s) or other rightsholder(s); author
    self-archiving of the accepted manuscript version of this article is solely governed
    by the terms of such publishing agreement and applicable law. Reprints and permissions
    About this article Cite this article Kehinde, M.O., Shittu, A.M., Awe, T.E. et
    al. Effects of using climate-smart agricultural practices on factor demand and
    input substitution among smallholder rice farmers in Nigeria. Mitig Adapt Strateg
    Glob Change 29, 26 (2024). https://doi.org/10.1007/s11027-024-10125-5 Download
    citation Received 02 September 2023 Accepted 07 March 2024 Published 16 March
    2024 DOI https://doi.org/10.1007/s11027-024-10125-5 Share this article Anyone
    you share the following link with will be able to read this content: Get shareable
    link Provided by the Springer Nature SharedIt content-sharing initiative Keywords
    Climate-smart agriculture Factor demand Input substitution Rice farmers Nigeria
    Use our pre-submission checklist Avoid common mistakes on your manuscript. Sections
    References Abstract Introduction Brief on climate-smart agriculture Analytical
    framework Methodology Result and discussions Conclusion and policy implications
    Data availability References Acknowledgements Author information Ethics declarations
    Additional information Rights and permissions About this article Advertisement
    Discover content Journals A-Z Books A-Z Publish with us Publish your research
    Open access publishing Products and services Our products Librarians Societies
    Partners and advertisers Our imprints Springer Nature Portfolio BMC Palgrave Macmillan
    Apress Your privacy choices/Manage cookies Your US state privacy rights Accessibility
    statement Terms and conditions Privacy policy Help and support 129.93.161.219
    Big Ten Academic Alliance (BTAA) (3000133814) - University of Nebraska-Lincoln
    (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Mitigation and Adaptation Strategies for Global Change
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Effects of using climate-smart agricultural practices on factor demand and
    input substitution among smallholder rice farmers in Nigeria
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Wang H.
  - Zhang X.
  - Liao J.
  - Zhang Y.
  - Li H.
  citation_count: '0'
  description: Wireless sensor network (WSN) is an important research area in smart
    agriculture. As an emerging technology, LoRa is used for communication between
    wireless sensor nodes. When LoRa is used as a mobile terminal node (mobile robot,
    drone, etc.), the Quality of Service (QoS) of LoRa network will be greatly reduced,
    which will have an impact on the quantitative decision-making and intelligent
    control in the future. Therefore, a novel Adaptive Data Rate (ADR) algorithm for
    agricultural mobile sensor nodes is proposed in this paper. The channel condition
    changes are effectively sensed based on three LoRa signal characteristics of SNR,
    RSSI, and frequency offset. It could respond quickly to the complex and changeable
    radio channel environment, and configured the modulation parameters dynamically
    and accurately. The Mobile LoRaSim tool and Arduino + SX1278 hardware platform
    were adopted for evaluation and analysis. The results showed that compared with
    the standard ADR algorithm and the Blind ADR algorithm, the data extraction rate
    of the Mobile ADR algorithm was increased by 15 %, the data collision rate was
    reduced by 45 %, the network energy consumption was reduced by 8 %, and the time
    on air was reduced by 50 %. The proposed algorithm improves the adaptability and
    robustness in terms of QoS of LoRaWAN networks.
  doi: 10.1016/j.compag.2024.108773
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Related work 3. Adaptive
    network configuration 4. Results and discussion 5. Conclusion CRediT authorship
    contribution statement Declaration of competing interest Acknowledgments Data
    availability References Show full outline Figures (15) Show 9 more figures Tables
    (5) Table Table 1 Table 2 Table Table 3 Computers and Electronics in Agriculture
    Volume 219, April 2024, 108773 Original papers An improved adaptive data rate
    algorithm of LoRaWAN for agricultural mobile sensor nodes Author links open overlay
    panel Hao Wang a, Xihai Zhang a b, Jianxin Liao a c, Yu Zhang a, Hongbo Li a Show
    more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2024.108773 Get
    rights and content Highlights • The number of packets is dynamically adjusted
    based on the moving speed of nodes. • Time on Air (ToA) is used as a selection
    criterion for modulation parameters. • Distance, moving speed and SNR are used
    to determine the network margin. Abstract Wireless sensor network (WSN) is an
    important research area in smart agriculture. As an emerging technology, LoRa
    is used for communication between wireless sensor nodes. When LoRa is used as
    a mobile terminal node (mobile robot, drone, etc.), the Quality of Service (QoS)
    of LoRa network will be greatly reduced, which will have an impact on the quantitative
    decision-making and intelligent control in the future. Therefore, a novel Adaptive
    Data Rate (ADR) algorithm for agricultural mobile sensor nodes is proposed in
    this paper. The channel condition changes are effectively sensed based on three
    LoRa signal characteristics of SNR, RSSI, and frequency offset. It could respond
    quickly to the complex and changeable radio channel environment, and configured
    the modulation parameters dynamically and accurately. The Mobile LoRaSim tool
    and Arduino + SX1278 hardware platform were adopted for evaluation and analysis.
    The results showed that compared with the standard ADR algorithm and the Blind
    ADR algorithm, the data extraction rate of the Mobile ADR algorithm was increased
    by 15 %, the data collision rate was reduced by 45 %, the network energy consumption
    was reduced by 8 %, and the time on air was reduced by 50 %. The proposed algorithm
    improves the adaptability and robustness in terms of QoS of LoRaWAN networks.
    Previous article in issue Next article in issue Keywords WSNLoRaWANMobile ADRQoSLoRaSim
    1. Introduction WSN is widely deployed in agricultural environments, and its application
    scenarios can be divided into two categories: static and dynamic. Static scenarios
    are mainly monitoring systems with fixed positions, such as soil component detection
    system (Moiroux-Arvis et al., 2022), greenhouse environment monitoring system
    (Wang et al., 2023a), etc. The dynamic scene is mainly some mobile nodes, such
    as agricultural mobile robots (Deng et al., 2020), agricultural drones (Cicioğlu
    and Çalhan, 2021) and so on. However, QoS of network needs to be considered for
    the wireless agricultural monitoring systems, especially in harsh environments
    such as long-distance transmission and mobile scenarios. Low Power Wide Area Network
    (LPWAN) is an emerging technology suitable for the low to medium speed Internet
    of Thing (IoT). LoRa belongs to LPWAN, which achieves long distance transmission
    with extremely low network energy consumption (Raza et al., 2017). LoRaWAN is
    the MAC layer protocol of LoRa (Adelantado et al., 2017, Mroue, et al., 2020).
    ADR scheme is the technical advantage of LoRaWAN. It allows the network server
    to select different combinations of Spreading Factor (SF) and Transmission Power
    (TP) according to the link communication quality, and then dynamically manage
    the data rate and transmission power of each terminal node to reduce energy consumption,
    reduce collisions, and increase network capacity. LoRa was originally designed
    for static devices, but is now increasingly used in mobile devices for transmitting
    sensor data to LoRa gateways. Y. Chou et al. (Chou et al., 2017) proposed an LPWAN
    vehicle diagnostic system that sends abnormal events from exercising vehicles
    to a LoRa gateway. V. Delafontaine et al. (Delafontaine et al., 2020) proposed
    a UAV carrying a mobile gateway for assisted localization, which improves the
    node localization accuracy of the LoRaWAN system. M. Magno et al. (Magno et al.,
    2018) combined LoRa with RTK to achieve high-precision positioning of mobile nodes
    while ensuring low energy consumption. In the above mobile scenarios, standard
    ADR is rarely used. Because it judges the channel communication quality based
    on the 20 packets that have been received, and the adjustment of modulation parameters
    is lagging, it is only suitable for static and stable terminal nodes. When the
    terminal node is moving, its moving speed and direction are changing in real time,
    and the natural environment it is located, including covering shadows and obstacle
    blocking, is also changing in real time. Therefore, the channel conditions of
    the mobile node are also dynamically changing, which requires LoRaWAN to be able
    to sense the dynamic radio channel environment and have fast response capabilities.
    In conclusion, it is necessary to improve the standard ADR algorithm. In order
    to expand the application range of the ADR algorithm so that it can be deployed
    in mobile nodes, researchers have improved the standard ADR algorithm from the
    directions of predicting the location of mobile nodes and estimating the change
    trend of communication quality to make it suitable for rapidly changing channel
    conditions. Benkahla et al. (Benkahla et al., 2019) proposed an E-ADR algorithm,
    which used the RSSI-based triangulation method to locate mobile nodes with fixed
    motion trajectories. Variable order Hidden Markov Model (VHMM) was adopted to
    locate mobile nodes with unknown motion trajectories (Benkahla et al., 2021).
    Finally, it determined whether the node moved to a new area based on the RSSI
    of the current packet and the predicted RSSI, and then adjusted the new configuration.
    Moysiadis et al. (Moysiadis et al., 2021) proposed a LR-ADR algorithm, which used
    linear regression to predict the next SNR value based on the 10 received SNR values,
    and then selected the best value of SF and TP based on the SNR values of 20 packets.
    Farhad et al. (Farhad et al., 2020) proposed a G-ADR algorithm and an EMA-ADR
    algorithm, which mentioned that the signal quality of the packets obeyed Gaussian
    distribution. Therefore, the G-ADR algorithm used Gaussian filter and calculated
    probability density function (PDF) to predict the SNR value of the data packets.
    The EMA-ADR algorithm used an EMA filter to smooth the SNR value of the packets,
    eliminating the rapid change of the SNR value. Farhad et al. (Farhad and Pyun,
    2022) proposed a Blind ADR algorithm. It did not use a single data rate, but alternately
    used three data rates (SF = 12, SF = 10, SF = 7) and different communication cycles,
    which met the needs of LoRaWAN mobile application requirements while ensuring
    low power consumption. The above improvement measures for the ADR algorithm all
    adopt the method of predicting the communication quality or position of the mobile
    node in the next communication cycle, and then adjust the modulation parameters
    according to the predicted data. However, the moving direction, moving speed,
    natural environment and channel conditions of the mobile node usually change randomly
    and are uncertain. Therefore, predicting the communication quality changes in
    future communication period by the communication data of received packets may
    lead to large errors. Aiming at the above defects, a flexible Mobile ADR algorithm
    is proposed. The main contributions of this paper are as follows: (1) The movement
    speed of nodes is used as a modulation basis to dynamically adjust the number
    of packets selected, which improves the adaptability of LoRaWAN to the radio channel
    environment; (2) Time on Air (ToA) is used as a selection criterion for modulation
    parameters, and the bandwidth selection range is extended, which improves the
    data rate of LoRaWAN; (3) The distance between the node and the gateway, the node
    movement speed and the change trend of the SNR value of the data packet are used
    as the calculation basis for dynamically determining the network margin, which
    achieves a dynamic balance of data rate and data extraction rate in the complex
    and variable radio channel environment. Through the improved Mobile LoRaSim simulation
    tool and the Arduino + SX1278 hardware test platform, the standard ADR, Blind
    ADR algorithm, and Mobile ADR algorithm were experimentally analysed in this paper.
    The results showed that improving the dynamic sensing capability of LoRaWAN to
    the change of channel conditions and the data rate of LoRa communication could
    improve the network performance and reduce the network energy consumption. The
    rest of the paper is organized as follows: In Section II, related techniques are
    introduced. A flexible Mobile ADR algorithm is proposed in Section III. The results
    are analyzed and discussed in Section IV. Finally, conclusions are summarized
    in Section V. 2. Related work In this section, LoRa and LoRaWAN are first introduced,
    then standard ADR and the categorization effects of ADR algorithms are analysed.
    Finally, LoRa communication parameters that are worth paying attention to in mobile
    scenarios and LoRa frequency offsets are introduced. 2.1. LoRa/LoRaWAN LoRa is
    a new spread spectrum modulation technology (Ikpehai et al., 2019), which not
    only retains the low power consumption characteristics of FSK technology, but
    also improves the receiver sensitivity. LoRa is a physical layer protocol (Zhang
    et al., 2019). With LoRa modulation, a balance between link budget, interference
    immunity and data rate are made by adjusting the Spreading Factor (SF), Bandwidth
    (BW), Code Rate (CR), and Low Data Rate Optimize (LDRO). SF represents the ratio
    between chip rate and symbol rate. The higher the SF, the better the receiver
    sensitivity, but the longer the ToA. BW is the frequency range possessed by the
    signal. The higher the BW, the shorter the ToA, but the receiver sensitivity decreases.
    CR is the proportion of useful parts in the data stream. The higher the CR, the
    better the noise immunity, but the longer the ToA. LDRO greatly reduces the number
    of bits corresponding to each symbol when the data rate is low. It allows for
    a reduced requirement for frequency drift during packet transmission time, but
    increases ToA. LoRaWAN is the LoRa networking protocol at the MAC layer. The complete
    LoRaWAN network includes terminal nodes, gateways, Network Server (NS), and application
    server (Zhang et al., 2019). In LoRaWAN network, a star network topology is used
    between terminals and gateways, and gateways are connected to NS through cellular
    networks or Ethernet. The network architecture of LoRaWAN is shown in Fig. 1.
    Download : Download high-res image (137KB) Download : Download full-size image
    Fig. 1. LoRaWAN network structure. 2.2. ADR algorithm The ADR algorithm dynamically
    adjusts SF and TP according to the different distances between terminal nodes
    and gateways, which minimizes energy consumption while ensuring communication
    quality. The ADR algorithm is composed by the NS side and the node side. The NS
    side increases the data rate of the nodes and the node side decreases its own
    data rate. To avoid energy consumption at the node side, the ADR algorithm at
    the node side has been kept simple to avoid additional computational resources.
    Therefore, the ADR function is mainly implemented at the network server side.
    The algorithmic flow of the standard ADR on the NS side is shown in Algorithm
    1 (Jiang et al., 2022). Algorithm 1: Standard ADR algorithm Input: SF = 7 ∼ 12,
    TP = 2 ∼ 14dBm, M = 20, margin_db = 5 dB Output: SF & TP 1: If (ACK == enabled)
    Then 2:  SNRmax = Max (SNR of last MUL packets); 3:  SNRreq = Demodulation of
    DR/SF; 4:  SNRmargin = SNRmax - SNRreq - margin_db; 5:  Steps = int (SNRmargin
    / 3); 6:  While (Steps < 0 & SF > 7) do 7:   SF = SF-1 & Steps = Steps −1; 8:  End
    9:  While (Steps > 0 & TP > 2) do 10:   TP = TP-3 & Steps = Steps −1; 11:  End
    12:  While (Steps < 0 & TP < 14) do 13:   TP = TP + 3 & Steps = Steps + 1； 14:  End
    15:End The standard ADR algorithm is described as follows. First, the maximum
    value of Signal-Noise Ratio (SNR) in the latest 20 received packets is obtained,
    which is represented as SNRmax. Next, SNRmax subtracts the minimum SNR required
    under the current modulation parameters, which is represented as SNRreq. Then
    SNRmax subtracts margin_db (the default recommendation is 5 dB). Finally, the
    SNRmargin is calculated. The equation is shown in (1), which is used to judge
    whether the current modulation parameters need to be adjusted. (1) If SNRmargin
    is less than 0, it means the communication process has the risk of packet loss,
    so SF and TP are increased. If SNRmargin is greater than 0, it means the energy
    consumption could be further reduced, so SF and TP are reduced. If SNRmargin is
    equal to 0, it means that the current configuration is the most suitable, so the
    modulation parameters do not need to be adjusted. The number of adjustments is
    obtained by dividing SNRmargin by 3. The equation is shown in (2), the step size
    for adjusting SF is 1, and the step size for adjusting TP is 3. (2) When multiple
    groups of data packets with the same SF and BW enter into a channel at the same
    time, and the Received Signal Strength Indicator (RSSI) of one group of data is
    more than 6 dB higher than the other data, which can be demodulated correctly.
    In LoRaWAN, the categorization effect occurs when the standard ADR algorithm is
    used. As shown in Fig. 2, terminal nodes at the same distance from the gateway
    use the same data rate and are in a similar radio channel environment, and the
    gateway receives basically the same RSSI from the terminal nodes. Therefore, the
    probability of collision of multiple groups of data within the same channel increases
    and the probability of successfully demodulating the signal decreases. In LoRa
    mobile scenarios, such as personnel location, smart agriculture (Zhang et al.,
    2018) and smart animal husbandry, LoRa terminal nodes are generally densely distributed
    and thus have higher collision rate. From this, it can be concluded that data
    collision rate is the communication metric to be concerned when different ADR
    algorithms for mobile nodes are compared and analysed. Download : Download high-res
    image (175KB) Download : Download full-size image Fig. 2. Data rate of nodes in
    a single-channel gateway. 2.3. Communication parameters in mobile scenarios In
    LoRa mobile scenarios, LoRaWAN network performance depends more on some key communication
    parameters such as link budget, data rate, and Doppler effect. Link budget is
    defined as the reasonable adjustment of modulation parameters such as TP, SF and
    BW according to the path transmission loss and receiver sensitivity. It can achieve
    a dynamic balance of power consumption and packet acquisition rate. The sensitivity
    data for different SF and BW are shown in Table 1. Boosting the data rate enhances
    LoRaWAN''s ability to respond to complex and variable channel conditions. If the
    ability to cope with frequency shifts caused by the Doppler effect is improved,
    when nodes move fast, more stable LoRa communication can be guaranteed. Table
    1. Minimum sensitivity required for [SF, BW]. Empty Cell Bandwidth(kHz) Empty
    Cell SF RSSI(BW = 125) RSSI(BW = 250) RSSI(BW = 500) SNR 7 −126.50 −124.25 −120.75
    −7.5 8 −127.25 −126.75 −124.00 −10 9 −131.25 −128.25 −127.50 −12.5 10 −132.75
    −130.25 −128.75 −15 11 −134.50 −132.75 −128.75 −17.5 12 −133.25 −132.25 −132.25
    −20 In free space, LoRa signals are not blocked on the propagation path, and the
    signal quality is only related to the communication distance. But in the actual
    radio channel environment, the reflection and diffraction of the radio are caused
    by ground objects in the path. To summarize, the path transmission loss of LoRa
    signals in the actual radio channel environment include free space propagation
    loss and fading loss, as shown in Equation (3). (3) where Lb is the actual transmission
    loss, L0 is the free space propagation loss and LF is the attenuation loss. Due
    to the complexity of the actual radio channel environment, it is difficult to
    calculate the path transmission loss of LoRa signals, so the path loss index is
    usually introduced to measure the fading of radio channels. Its calculation is
    shown in Equation (4), and the slow fading path loss index in different environments
    is shown in Table 2. (4) where n is the path loss index, f is the carrier frequency,
    and r is the communication distance. From Equation (4), it can be seen that when
    the distance between the terminal node and the gateway increases, the influence
    of the path loss index on the fading of the radio channel is more obvious, and
    the path transmission loss is mainly composed of fading loss. Table 2. Path loss
    index. Environment fading path loss index n Inside the building 1.6 ∼ 1.8 Free
    space 2 Blocked by factory 2 ∼ 3 Urban coverage 2.6 ∼ 3,5 Urban covered shadows
    3 ∼ 5 Blocked by buildings 4 ∼ 6 RSSI is used to determine the quality of channel
    communication and is defined as: (5) here Pr represents RSSI, Pt represents the
    radiated power of the transmitting antenna, Gr represents the gain coefficient
    of the receiving antenna, Gt represents the gain coefficient of the transmitting
    antenna. ToA is the time that data packets are transmitted from sending to being
    received, which is the basis for determining the data rate. The shorter the ToA,
    the faster the data rate. It is obtained by Equation (6) (Wang et al., 2023b).
    (6) where is the number of symbol. The frequency shift of LoRa signal is mainly
    related to the chip heating and Doppler effect. Due to the optimized layout design
    of the LoRa chip, the frequency offset caused by heat will stabilize as the running
    time increases. When the terminal node or gateway is moving, the Doppler effect
    is the change between the frequency at which the LoRa signal is transmitted and
    the frequency at which it is received. In LoRa modulation, the frequency offset
    during the packet transmission time should be lower than Freq_drift_max, which
    can be expressed as: (7) 3. Adaptive network configuration In this section, the
    Mobile ADR algorithm is introduced, and how to obtain the motion data of nodes
    such as distance from the gateway and movement speed without increasing energy
    consumption is presented. 3.1. Mobile ADR algorithm Different from the prediction
    method used in most studies, the Mobile ADR algorithm adopts the same technical
    scheme as the standard ADR algorithm to analyse the signal characteristics of
    the data packets, and then senses the complex and variable radio channel conditions
    faced by the mobile nodes. The standard ADR algorithm takes the SNR of received
    packets as the judgment basis for adjusting LoRa modulation parameters. The Mobile
    ADR algorithm expands the adjustment basis from both LoRa signal characteristics
    and node movement data on the basis of the standard ADR algorithm. In LoRa signal
    characteristics, RSSI and frequency offset of packets are added as the judgment
    basis, which improves the sensing capability of changes in channel conditions.
    In the node movement data, the movement speed and the distance between the node
    and the gateway are added (Slabicki et al., 2018), which are used to calculate
    the link budget dynamically. Moreover, the Mobile ADR algorithm adds ToA as the
    selection index of LoRa modulation parameters and expands the range of BW to increase
    the data rate of LoRa communication, which in turn improves the responsiveness
    of LoRaWAN to changes in channel conditions. The specific flow of the Mobile ADR
    algorithm is shown in Algorithm 2. Algorithm 2: Mobile ADR algorithm Input: SF
    = 7 ∼ 12, BW = [125,250,500] kHz, TP = 2 ∼ 14dBm, margin_db = 5 ∼ 10 dB, M = 1
    ∼ 20, v = Node movement speed Output: SF & TP 1: If (ACK == enabled) Then 2:   M
    = ; 3:   SFlast = the SF of the terminal -node''s last received frame; 4:   SNRmax
    = Max(SNR of last MUL packets); 5:   SNRmin = Min(SNR of last MUL packets); 6:   RSSImin
    = Min(RSSI of last MUL packets); 7:   maxdist = ; 8:   While (margin_db ≤ 10)
    do 9:    margin_db = 1/3 (  × 10 +  ); 10:   End 11:   SNRreq = SNRmin - margin_db;
    12:   RSSIreq = RSSImin - margin_db; 13:    [SF, BW] = ToAmin (all [SF,BW] to
    satisfy SNRreq & RSSIreq); 14:   If (SF - SFlast < 0 & TP > 2) Then 15:    TP
    = TP-3; 16:   End 17:   If (SF - SFlast > 0 & TP < 14) Then 18:    TP = TP＋3;
    19:   End 20:  End In step 2, the number M of packets is determined dynamically.
    In the standard ADR algorithm, the number of packets selected to adjust the modulation
    parameters is 20 for a static node (v = 0). However, as the nodes move faster,
    the channel conditions may also change faster, so that the adjustment based on
    20 packets is greatly untimely. When the speed of the mobile node with SF = 12
    and BW = 125 kHz is 10.5 m/s, the signal fades greatly due to the Doppler effect,
    which leads to packet loss. In order to reduce the packet loss rate, the number
    of packets selected at this time should be 1. Therefore, the linear relationship
    between M and v is determined. In step 8, the margin_db value is typically 10
    dB in most networks, while the default recommended margin_db value for LoRaWAN
    is 5 dB. When the margin_db value is higher, the data extraction rate will increase,
    but the data rate will decrease. Therefore, an appropriate margin_db value is
    necessary. The distance between the nodes and the gateway, the change trend of
    the SNR value of the packets and the movement speed of the nodes are used as the
    basis for dynamically calculating the margin_db value. In step 11, the standard
    ADR algorithm selects the maximum value of SNR as the demodulation basis, while
    the Mobile ADR algorithm selects the minimum value of SNR as the demodulation
    basis. Because the standard ADR algorithm is applied to stable static nodes, low
    energy consumption is more valued, and selecting the maximum value is beneficial
    to reduce energy consumption. However, when the nodes are mobile, high communication
    quality is more important, and choosing the minimum value is beneficial to improve
    the packet acquisition rate. The Mobile ADR algorithm expands the BW selection
    range from 125 kHz of the standard ADR algorithm to 125 kHz, 250 kHz and 500 kHz.
    The BW of the European regional LoRaWAN specification includes 125 kHz and 250
    kHz, and the BW of the American LoRaWAN specification includes 125 kHz and 500
    kHz. Therefore, the BW selection range of 125 kHz, 250 kHz and 500 kHz is considered
    feasible in this paper. From Equation (6) and Equation (7), BW is inversely proportional
    to ToA and positively proportional to Freq_drift_max. Therefore, the higher BW
    is selected, which would obtain the lower ToA and the higher resistance to Doppler
    effect. In step 13, the Mobile ADR algorithm traverses all the [SF, BW] combinations
    as shown in Table 1, and then selects the [SF, BW] combination with the smallest
    ToA that satisfies both SNRreq and RSSIreq. For the adjustment of TP, the Mobile
    ADR algorithm adopts the same adjustment step as the standard ADR algorithm. When
    the SF decreases, the terminal node is moving to the area with good communication
    quality, so the TP is reduced. Otherwise, the TP is increased. The specific algorithm
    steps are shown in Fig. 3. Download : Download high-res image (150KB) Download
    : Download full-size image Fig. 3. Flow of Mobile ADR algorithm. 3.2. Calculation
    basis of Margin_db In a linear sensor network, nodes are linearly or semi-linearly
    arranged in a row, and information is transmitted to gateways through multiple
    hops. In order to avoid the communication interruption of the whole system caused
    by the failure of a certain node, each sending node of the system transmits information
    to two nodes adjacent in sequence to solve this problem in this research. Furthermore,
    in the monitoring scenario where the distance between nodes is much smaller than
    LoRa single hop, the network structure can be adjusted to transmit information
    to more nodes at the same time to improve the reliability and fault tolerance
    of the network. In addition, the system considered the existence of timeout detection
    function. If the previous node has not sent a message to the next two nodes within
    the set time, it proves that the previous node has failed. The latter neighboring
    node will replace this node as the initiator of information. The above-mentioned
    LoRa multi-hop transmission mode avoids data conflicts caused by simultaneous
    information transmission by multiple transmitters, reduces space–time capacity,
    and further improves the stability of the system. The software design of the system
    is described in detail from the following three aspects: low power consumption
    software design, medium access control protocol and node software flow. As shown
    in Fig. 4, three gateways and one mobile node are set up. According to the logarithmic
    distance path loss model, the distance from the node to the gateway is obtained
    by DTN (Dynamic Triangular) algorithm. First, according to the RSSI of the mobile
    node received by different gateways, the gateway with the largest RSSI is selected
    as the master gateway. Then, the distance from the gateway to the node is calculated
    according to Equation (8). And the mapping circle is drawn with the distance as
    the radius and the position of the master gateway as the center of the circle.
    Next, the right triangle is constructed by the connection line of the master gateway
    with mobile node and the tangent of the mobile node on the mapping circle, so
    that the mapping angle θ is obtained. Finally, through the mapping angle θ and
    , the coordinates of the mobile node on the mapping circle are traversed to find
    out. And the distances and are also found out by the coordinates of the mobile
    node with slave1 gateway and slave2 gateway. By calculating the errors of and
    , and , the coordinates of the mobile node with the minimum error are selected.
    (8) where is the calculated RSSI, is the actual measured RSSI, n is the fading
    index, and is the random variable indicating the estimation error. Download :
    Download high-res image (84KB) Download : Download full-size image Fig. 4. Mobile
    node positioning. As mentioned above, the Doppler frequency offset is calculated
    from the frequency offset of the LoRa signal minus the frequency offset caused
    by chip heating. Petajajarvi et al. (Petajajarvi et al., 2017) introduced the
    coherence time ( ) and proved that there was a linear relationship between the
    node moving speed and the Doppler frequency shift. As shown in Equation (9), and
    the Doppler frequency formula also proved this conclusion. Therefore, the frequency
    offset of the LoRa SX1278 chip is actually tested in this paper. As shown in Fig.
    5, when 330 data packets were sent, the frequency offset tended to be stable and
    fluctuated at 1572 Hz. And the upper and lower frequencies of the fluctuation
    were fixed values, which were 1564 Hz and 1581 Hz. Therefore, the relationship
    between node movement speed and frequency offset is shown in Equation (10). (9)
    (10) where f is the frequency offset (Hz) of the LoRa signal, fd is the Doppler
    frequency offset (Hz), v is the movement speed (m/s), is the electromagnetic wave
    wavelength (m), and is the incident electromagnetic wave angle (rad). Download
    : Download high-res image (84KB) Download : Download full-size image Fig. 5. Frequency
    shift caused by chip heating. 4. Results and discussion In order to evaluate the
    Mobile ADR algorithm proposed in this paper, the Mobile LoRaSim simulation tool
    was perfected for simulation testing and the Arduino + LoRa SX1278 platform was
    built for field testing. The performance of LoRaWAN networks based on standard
    ADR algorithm, Blind ADR algorithm and Mobile ADR algorithm is analysed and compared.
    4.1. Mobile LoRaSim simulation LoRaSim is a discrete event simulator based on
    SimPy to simulate data transmission and collision in LoRa networks (Kufakunesu
    et al., 2020). In this paper, the LoRasim simulation tool was perfected and called
    Mobile LoRaSim, making it possible to support simulation analysis of mobile nodes
    for the first time. In Mobile LoRaSim, a 500 m × 500 m simulation scenario was
    built, and gateway and different numbers of mobile nodes were arranged. For the
    moving node, the movement speed and movement direction of terminal node were set.
    In addition, the frequency offset was proposed for the first time in the LoRa
    simulation, which was used to simulate the change of the signal level caused by
    the different movement speed of the node. In order to study the LoRa communication
    of mobile nodes passing through different terrains, the terrain module of Mobile
    LoRaSim was set according to the slow fading path loss index of different terrains
    in Table 2, which is shown in Fig. 6. LoRaSim adjusted the same parameters for
    all nodes based on the communication quality. However, Mobile LoRaSim adjusted
    the parameters of each node individually based on the communication quality, which
    more realistically simulated the application of ADR algorithm in LoRaWAN. The
    simulation tool runs as shown in Fig. 7. Download : Download high-res image (210KB)
    Download : Download full-size image Fig. 6. Terrain module in the simulation tool.
    Download : Download high-res image (66KB) Download : Download full-size image
    Fig. 7. LoRasim simulation environment. Based on the terrain environment in Fig.
    6 and the simulation parameters in Table 3, the three simulation scenarios of
    low-density nodes, high-density nodes, and high-speed nodes were set by the mobile
    LoRa simulation tool. To avoid the accidental factor, the initial position of
    the node was the position with the lowest collision rate calculated by the algorithm.
    And the movement direction and movement speed of the moving node were random numbers
    in a certain range. The simulation time was set to 120 min for each simulation,
    and the simulation results were obtained through multiple simulation experiments.
    LoRaWAN network performance based on standard ADR, Blind ADR algorithm and Mobile
    ADR algorithm was evaluated in terms of Data Extraction Rate (DER), Data Collision
    Rate (DCR), Network Energy Consumption (NEC) and ToA. Table 3. Simulation parameters.
    Parameter Value Carrier frequency (f) 915 MHz Bandwidth (BW) 125 kHz、250 kHz、500
    kHz Coding Rate (CR) 4/5 Spreading Factor (SF) 7 ∼ 12 Transmit power (TP) 2 ∼
    20 dB Preamble length 12 symbol Payload 2B 4.1.1. Low-density nodes simulation
    Ten low to medium speed mobile nodes with a movement speed range of 1 m/s − 10
    m/s were deployed in the simulation scenario. The initial positions of all nodes
    were within a circle with a radius of 50 m, so the distribution of nodes was scattered.
    For the data collision rate (Fig. 8a), the standard ADR algorithm was about 5
    %, the Blind ADR algorithm was about 8 %. However, DCR of Mobile ADR algorithm
    is basically below 4 %, which was reduced by 3 % on average. For the data extraction
    rate (Fig. 8b), the standard ADR algorithm was about 80 %, while the average value
    of the Blind ADR algorithm was about 83 %, which showed a certain regularity.
    When the SF of the node is 12, DER of Blind ADR algorithm could reach 90 %, which
    meant that the packet loss was basically due to the collision of the packet while
    being received. However, when the SF of the node is 7, DER of Blind ADR algorithm
    fluctuated around 60 %, which was unqualified in the LoRa communication of low-speed
    and low-density mobile scenarios. DER of Mobile ADR algorithm was about 91 %,
    which was 11 % higher than the standard ADR. Because it not only reduced the packet
    collision rate, but also the number of packets selected and the margin_db value
    were dynamically changed, which improved the responsiveness of mobile node to
    changes in channel conditions. For the network energy consumption (Fig. 8c), the
    standard ADR algorithm was about 70 J. NEC of Blind ADR algorithm also had periodicity,
    and its energy consumption did not consider changes in actual channel conditions.
    NEC of Mobile ADR algorithm was about 33 J, and the energy consumption was reduced
    by 58 %. Download : Download high-res image (312KB) Download : Download full-size
    image Fig. 8. (a) Data collision rate; (b) data extraction rate; (c) network energy
    consumption. In the simulation scenario of low-speed and low-density nodes, the
    Mobile ADR algorithm has achieved a significant improvement in network energy
    consumption, which is worthy of attention. Because Mobile ADR algorithm adds ToA
    as the selection index of LoRa modulation parameters, when different [SF, BW]
    combinations with the same reception sensitivity are considered, the [SF, BW]
    combination with short ToA is preferentially selected. Mobile ADR algorithm also
    expands the selection range of BW. The BW of standard ADR algorithm is 125 kHz,
    while the maximum BW of Mobile ADR algorithm is 500 kHz. From Equation (6), the
    shortest ToA of Mobile ADR algorithm is only 1/4 of that of standard ADR algorithm
    when the SF is the same. When the BW is increased, the receiver sensitivity decreases
    and the TP increases. However, the energy consumption in the LoRa communication
    process is proportional to the ToA, and the Mobile ADR algorithm still greatly
    reduces the network energy consumption. 4.1.2. High-density nodes simulation Fifty
    low to medium speed mobile nodes with a movement speed range of 1 m/s − 10 m/s
    were deployed in the simulation scenario. The initial positions of all nodes were
    within a circle with a radius of 50 m, so the distribution of nodes was dense.
    For the data collision rate (Fig. 9a), when the density of node distribution was
    greatly increased, DCR of the three algorithms all increase. The standard ADR
    algorithm and the Blind ADR algorithm was increased by about 7 % on average, while
    the Mobile ADR algorithm was increased by 2 %. Compared with the standard ADR
    algorithm and Blind ADR algorithm, the collision growth rate of Mobile ADR algorithm
    was reduced by 70 %. For the data extraction rate (Fig. 9b), the standard ADR
    algorithm was about 69 %. The average extraction rate of Blind ADR algorithm was
    77 %, and the lowest value was below 55 %, which did not meet the application
    needs of mobile nodes. DER of Mobile ADR algorithm was about 88 %, which was an
    improvement of 18 % compared to the standard ADR algorithm. It showed that when
    the nodes are densely distributed, there was little impact on the communication
    quality of the Mobile ADR algorithm. In the network energy consumption (Fig. 9c),
    the standard ADR was about 350 J, and energy consumption of the Blind ADR algorithm
    was high in the first and last time periods. NEC of Mobile ADR algorithm was about
    160 J, which was an average reduction of about 59 %. Download : Download high-res
    image (318KB) Download : Download full-size image Fig. 9. (a) Data collision rate;
    (b) data extraction rate; (c) network energy consumption. In the simulation scenario
    of low-speed and high-density nodes, the Mobile ADR algorithm has achieved a significant
    reduction in data collision rate, which is worthy of attention. Because margin_db
    value of Mobile ADR algorithm is dynamically adjusted according to the distance
    between the node and the gateway, the change trend of the SNR value and the movement
    speed of the node. Therefore, if terminal nodes are at the same distance from
    the gateway and have the same RSSI and SNR, their [SF, BW] combinations are also
    different. In addition, the number of [SF, BW] combinations that can be selected
    by the Mobile ADR algorithm is 18, while the standard ADR algorithm is 6 and the
    Blind ADR algorithm is 1. Due to the orthogonality of different SFs (Marini et
    al., 2021), the data collision rate of Mobile ADR algorithm is greatly reduced.
    4.1.3. High-speed nodes simulation Ten high-speed mobile nodes with a movement
    speed range of 10 m/s − 20 m/s were deployed in the simulation scenario. The initial
    positions of all nodes were within a circle with a radius of 50 m, so the distribution
    of nodes was scattered. For the data collision rate (Fig. 10a), due to the fast
    movement speed of the nodes, the nodes were also scattered during the moving process,
    so the collision rates of the three algorithms were very low, all below 6 %. For
    the data extraction rate (Fig. 10b), the standard ADR algorithm was about 65 %.
    When the movement speed of nodes increased, the average extraction rate of Blind
    ADR algorithm was about 83 %, which was not affected. Because the modulation parameters
    were adjusted independently of the channel environment changes. Therefore, although
    the adjustment of modulation parameters by Blind ADR was inflexible, precise adjustment
    of different periods of modulation parameters could achieve excellent communication
    quality in specific scenarios. DER of Mobile ADR algorithm was about 90 %, which
    was a 25 % improvement over the standard ADR algorithm. For the network energy
    consumption (Fig. 10c), the standard ADR algorithm and Blind ADR algorithm did
    not change significantly when the speed of mobile nodes increased. The NEC of
    Mobile ADR algorithm increased by 17 J, but it was still lower than the standard
    ADR algorithm and Blind ADR algorithm. Because the Mobile ADR algorithm improved
    the frequency of adjusting the modulation parameters of the high-speed mobile
    nodes, and the current for each adjustment of the modulation parameters was 16
    mA, so the energy consumption had increased by a certain amount. Download : Download
    high-res image (314KB) Download : Download full-size image Fig. 10. (a) Data collision
    rate; (b) data extraction rate; (c) network energy consumption. In the simulation
    scenario of high-speed and low-density nodes, the Mobile ADR algorithm has achieved
    a significant improvement in data extraction rate, which is worthy of attention.
    When the channel conditions change rapidly, 20 packets are selected by the standard
    ADR algorithm as the adjustment basis, so the modulation parameters cannot be
    adjusted quickly. In the Mobile ADR algorithm, the degree of channel condition
    variation is used as the basis for calculation of margin_db, and the number of
    packets selected decreases as the node moves faster. When the speed exceeds 10
    m/s, the Mobile ADR algorithm adjusts the modulation parameters for each packet,
    so it can meet the application needs of high-speed mobile scenarios. 4.1.4. Real-time
    analysis As shown in Fig. 11, in the ToA, the Blind ADR algorithm showed periodicity
    with the change of SF, and the fluctuation range was large. The ToA of Mobile
    ADR algorithm was 55 % lower than the standard ADR algorithm. Therefore, the Mobile
    ADR algorithm improved the data rate of LoRa communication. According to the average
    value of ToA in the 3 groups of simulation scenarios and the duty cycle of 1 %,
    the number of packets transmitted by the mobile node in every 6 min was counted.
    As shown in Fig. 12, the average number of packets was about 22 for Blind ADR
    algorithms, and the average number of packets was about 13 for standard ADR algorithm,
    while the average number of packets was about 28 for Mobile ADR algorithm. Therefore,
    the Mobile ADR algorithm increased the number of packets transmitted in the same
    communication cycle, and improved the real-time communication of mobile nodes.
    Download : Download high-res image (277KB) Download : Download full-size image
    Fig. 11. (a) ToA of low-density nodes; (b) ToA of high-density nodes; (c) ToA
    of high-speed nodes. Download : Download high-res image (164KB) Download : Download
    full-size image Fig. 12. Number of data packets. 4.2. Arduino + SX1278 hardware
    platform evaluation The standard ADR algorithm, Blind ADR algorithm, and Mobile
    ADR algorithm were deployed on the hardware test platform and field tested at
    Northeast Agricultural University. The test platform included 3 gateways and 1
    terminal node. Raspberry Pi, Arduino and LoRa SX1278 were used as gateway, and
    Arduino and LoRa SX1278 were used as terminal node. The terminal node was installed
    in the UAV, as shown in Fig. 13. Download : Download high-res image (366KB) Download
    : Download full-size image Fig. 13. Experimental test platform. The experimental
    sites were respectively set in the building corridor of 5 m × 60 m, around the
    building of 60 m × 100 m, and the open field of 200 m × 200 m. The initial modulation
    parameters of the terminal node were set to SF = 7, BW = 125, TP = 11. CR = 4/5,
    the duty cycle was 10 %. Within the corridor, the terminal node moved at low speeds
    of 0.5 m/s − 2 m/s. Between buildings, the terminal node moved at medium to high
    speed of 2 m/s − 11 m/s. In the field, the terminal node moved at medium to high
    speed of 2 m/s − 11 m/s. The location distribution of gateways and UAV flight
    trajectories were plotted in Fig. 14. Download : Download high-res image (224KB)
    Download : Download full-size image Fig. 14. (a) Indoor test; (b) Building test;
    (c) Field test. In the field experiment, data extraction rate and convergence
    time were used as evaluation metrics. The convergence time of LoRaWAN was defined
    as the time required for LoRa communication to reach stable SF, TP and DER after
    the initial deployment phase. As shown in Fig. 15, in three scenarios with different
    channel conditions, the average data extraction rate of the Mobile ADR algorithm
    was about 85 %, which had an average improvement of 13 % over the standard ADR
    algorithm and was less volatile than the Blind ADR algorithm. Moreover, when the
    mobile node was in a new radio channel condition, the average convergence time
    of the standard ADR algorithm was 720 s, while the Mobile ADR algorithm was 360
    s. Thanks to the faster and more accurate adjustment capability and higher real-time
    performance of the Mobile ADR algorithm, its convergence time was reduced by 50
    %. Download : Download high-res image (278KB) Download : Download full-size image
    Fig. 15. (a) indoor test; (b) building test; (c) field test. 5. Conclusion Aiming
    at the problems that LoRa network in agricultural WSNs has low adaptive speed
    under standard ADR algorithm and poor network performance in mobile scenarios,
    the Mobile ADR algorithm proposed in this paper improved the ability to sense
    accurately and respond dynamically to changes in channel conditions, and sped
    up the configuration of modulation parameters. Therefore, the technical defects
    of the standard ADR algorithm on the mobile nodes were solved to some extent.
    The LoRaWAN network performance of different ADR algorithms in mobile scenarios
    were evaluated by simulation analysis and field tests. Compared with the standard
    ADR algorithm and the Blind ADR algorithm, the simulation results showed that
    the data extraction rate of the Mobile ADR algorithm was improved by 18 %, the
    network energy consumption was reduced by 45 %, and the time on air was reduced
    by 50 %. Field tests showed that in different geographic environments, the data
    extraction rate of the Mobile ADR algorithm was improved by 11 %, and the convergence
    time was reduced by 50 %. In particular, the data collision rate was introduced
    into this paper to analyse the ability of different algorithms to resist the ADR
    categorization effect. Data collision rate of the Mobile ADR algorithm was reduced
    by 5 %. Obviously, due to its higher reliability and lower latency, Mobile ADR
    algorithm was more suitable for LoRa networks in mobile scenarios than the standard
    ADR algorithm and the Blind ADR algorithm. CRediT authorship contribution statement
    Hao Wang: Data curation, Methodology, Resources, Software, Visualization, Writing
    – original draft, Writing – review & editing. Xihai Zhang: Methodology, Resources,
    Supervision, Writing – original draft, Writing – review & editing. Jianxin Liao:
    Data curation, Methodology, Resources, Software, Writing – original draft. Yu
    Zhang: Methodology, Resources, Software, Supervision, Writing – original draft,
    Writing – review & editing. Hongbo Li: Methodology, Resources, Software, Supervision,
    Writing – original draft. Declaration of competing interest The authors declare
    that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. Acknowledgments
    This work was supported by the Collaborative Innovation Achievement Project of
    Universities in Heilongjiang Province (LJGXCG2023-100). Data availability The
    data that has been used is confidential. References Adelantado et al., 2017 F.
    Adelantado, X. Vilajosana, P. Tuset-Peiro, B. Martinez, J. MeliaSegui, T. Watteyne
    Understanding the limits of lorawan IEEE Commun. Mag., 55 (9) (2017), pp. 34-40,
    10.1109/MCOM.2017.1600613 View in ScopusGoogle Scholar Benkahla et al., 2019 N.
    Benkahla, H. Tounsi, Y.-Q. Song, M. Frikha Enhanced adr for lorawan networks with
    mobility In 2019 15th International Wireless Communications & Mobile Computing
    Conference (IWCMC) (2019), pp. 1-6, 10.1109/IWCMC.2019.8766738 Google Scholar
    Benkahla et al., 2021 N. Benkahla, H. Tounsi, Y.-Q. Song, M. Frikha Vhmm-based
    e-adr for lorawan networks with unknown mobility patterns In 2021 International
    Wireless Communications and Mobile Computing (IWCMC) (2021), pp. 86-91, 10.1109/IWCMC51323.2021.9498709
    View in ScopusGoogle Scholar Chou et al., 2017 Y.-S. Chou, Y.-C. Mo, J.-P. Su,
    W.-J. Chang, L.-B. Chen, J.-J. Tang, C.-T. Yu i-car system: a lora-based low power
    wide area networks vehicle diagnostic system for driving safety In 2017 International
    Conference on Applied System Innovation (ICASI) (2017), pp. 789-791, 10.1109/ICASI.2017.7988549
    View in ScopusGoogle Scholar Cicioğlu and Çalhan, 2021 M. Cicioğlu, A. Çalhan
    Smart agriculture with internet of things in cornfields Comput. Electr. Eng.,
    90 (2021), Article 106982, 10.1016/j.compeleceng.2021.106982 View PDFView articleView
    in ScopusGoogle Scholar Delafontaine et al., 2020 V. Delafontaine, F. Schiano,
    G. Cocco, A. Rusu, D. Floreano Drone-aided localization in lora iot networks In
    2020 IEEE International Conference on Robotics and Automation (ICRA) (2020), pp.
    286-292, 10.1109/ICRA40945.2020.9196869 View in ScopusGoogle Scholar Deng et al.,
    2020 F. Deng, P. Zuo, K. Wen, X. Wu Novel soil environment monitoring system based
    on RFID sensor and LoRa Comput. Electron. Agric., 169 (2020), Article 105169,
    10.1016/j.compag.2019.105169 View PDFView articleView in ScopusGoogle Scholar
    Farhad and Pyun, 2022 A. Farhad, J.-Y. Pyun Hadr: a hybrid adaptive data rate
    in lorawan for internet of things ICT Express (2022), 10.1016/j.icte.2021.12.013
    Google Scholar Farhad et al., 2020 A. Farhad, D.-H. Kim, S. Subedi, J.-Y. Pyun
    Enhanced lorawan adaptive data rate for mobile internet of things devices Sensors,
    20 (22) (2020), p. 6466, 10.3390/s20226466 Google Scholar Ikpehai et al., 2019
    A. Ikpehai, B. Adebisi, K.M. Rabie, K. Anoh, R.E. Ande, M. Hammoudeh, H. Gacanin,
    U.M. Mbanaso Low-power wide area network technologies for internet-of-things:
    a comparative review IEEE Internet Things J., 6 (2) (2019), pp. 2225-2240, 10.1109/JIOT.2018.2883728
    View in ScopusGoogle Scholar Jiang et al., 2022 C. Jiang, Y. Yang, X. Chen, J.
    Liao, W. Song, X. Zhang A new-dynamic adaptive data rate algorithm of loRaWAN
    in harsh environment IEEE Internet Things J., 9 (11) (2022), pp. 8989-9001, 10.1109/JIOT.2021.3118051
    View in ScopusGoogle Scholar Kufakunesu et al., 2020 R. Kufakunesu, G.P. Hancke,
    A.M. Abu-Mahfouz A survey on adaptive data rate optimization in lorawan: recent
    solutions and major challenges Sensors, 20 (18) (2020), p. 5044, 10.3390/s20185044
    Google Scholar Magno et al., 2018 M. Magno, S. Rickli, J. Quack, O. Brunecker,
    L. Benini Poster abstract: combining lora and rtk to achieve a high precision
    selfsustaining geo-localization system In 2018 17th ACM/IEEE International Conference
    on Information Processing in Sensor Networks (IPSN) (2018), pp. 160-161, 10.1109/IPSN.2018.00043
    View in ScopusGoogle Scholar Marini et al., 2021 R. Marini, W. Cerroni, C. Buratti
    A novel collision-aware adaptive data rate algorithm for lorawan networks IEEE
    Internet Things J., 8 (4) (2021), pp. 2670-2680, 10.1109/JIOT.2020.3020189 View
    in ScopusGoogle Scholar Moiroux-Arvis et al., 2022 L. Moiroux-Arvis, C. Cariou,
    J.-P. Chanet Evaluation of LoRa technology in 433-MHz and 868-MHz for underground
    to aboveground data transmission Comput. Electron. Agric., 194 (2022), Article
    106770, 10.1016/j.compag.2022.106770 View PDFView articleView in ScopusGoogle
    Scholar Moysiadis et al., 2021 V. Moysiadis, T. Lagkas, V. Argyriou, A. Sarigiannidis,
    I.D. Moscholios, P. Sarigiannidis Extending adr mechanism for lora enabled mobile
    end-devices Simulation Modelling Practice and Theory, 113 (2021), Article 102388,
    10.1016/j.simpat.2021.102388 View PDFView articleView in ScopusGoogle Scholar
    Mroue, et al., 2020 Mroue, H., et al., LoRa plus: an extension of LoRaWAN protocol
    to reduce infrastructure costs by improving the Quality of Service, Internet of
    Things, vol. 9, no. 100176, 2020. 10.1016/j.iot.2020.100176. Google Scholar Petajajarvi
    et al., 2017 Petajajarvi, J., Mikhaylov, K., Pettissalo, M., Janhunen, J., Iinatti,
    J. Performance of a low-power wide-area network based on LoRa technology: Doppler
    robustness, scalability, and coverage, International Journal of Distributed Sensor
    Networks, vol. 13, no. 3, 2017. 10.1177/1550147717699412. Google Scholar Raza
    et al., 2017 U. Raza, P. Kulkarni, M. Sooriyabandara Low power wide area networks:
    an overview IEEE Commun. Surv. Tutorials, 19 (2) (2017), pp. 855-873, 10.1109/COMST.2017.2652320
    View in ScopusGoogle Scholar Slabicki et al., 2018 Slabicki, M., Premsankar, G.,
    Di Francesco, M. Adaptive configuration of lora networks for dense iot deployments,
    in NOMS 2018 - 2018 IEEE/IFIP Network Operations and Management Symposium, pp.
    1–9, 2018. 10.1109/NOMS.2018.8406255. Google Scholar Wang et al., 2023a H. Wang,
    et al. A feedback control method for plant factory environment based on photosynthetic
    rate prediction model Comput. Electron. Agric., 211 (2023), Article 108007, 10.1016/j.compag.2023.108007
    View PDFView articleView in ScopusGoogle Scholar Wang et al., 2023b H. Wang, et
    al. An energy-saving LoRa linear network system with adaptive transmission parameter
    IEEE Open Journal of the Industrial Electronics Society, 4 (2023), pp. 476-485,
    10.1109/OJIES.2023.3329021 Google Scholar Zhang et al., 2018 Zhang, X., Qiao,
    Y., Meng, F., Fan, C., Zhang, M. Identification of maize leaf diseases using improved
    deep convolutional neural networks, IEEE Access, vol. 6, pp. 30 370–30 377, 2018.
    10.1109/ACCESS.2018.2844405. Google Scholar Zhang et al., 2019 X. Zhang, M. Zhang,
    F. Meng, Y. Qiao, S. Xu, S. Hour A low-power wide-area network information monitoring
    system by combining Nb-IOT and Lora IEEE Internet Things J., 6 (1) (2019), pp.
    590-598, 10.1109/JIOT.2018.2847702 View in ScopusGoogle Scholar Cited by (0) View
    Abstract © 2024 Elsevier B.V. All rights reserved. Recommended articles Rice seed
    classification by hyperspectral imaging system: A real-world dataset and a credible
    algorithm Computers and Electronics in Agriculture, Volume 219, 2024, Article
    108776 Yufei Ge, …, Xiongfei Li View PDF Machine learning based plot level rice
    lodging assessment using multi-spectral UAV remote sensing Computers and Electronics
    in Agriculture, Volume 219, 2024, Article 108754 Mukesh Kumar, …, B.K. Handique
    View PDF Analysis of pig activity level and body temperature variation based on
    ear tag data Computers and Electronics in Agriculture, Volume 219, 2024, Article
    108768 Yigui Huang, …, Senpeng Huang View PDF Show 3 more articles About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: An improved adaptive data rate algorithm of LoRaWAN for agricultural mobile
    sensor nodes
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Li H.
  - Shi F.
  citation_count: '0'
  description: 'Object detection technology plays a crucial role in crop growth monitoring
    within smart agriculture. However, data labeling is a costly process necessary
    for constructing a large-scale dataset, which is essential to prevent overfitting
    in deep learning-based object detection models. Semi-Supervised Object Detection
    (SSOD) presents a cost-effective solution to reduce labeling and model training
    expenses; nevertheless, existing SSOD algorithms fall short in addressing the
    specific challenges posed by detection tasks in Brassica Chinensis growth monitoring.
    Specifically, the two-stage object detector cannot be well-suited for scenes characterized
    by severe occlusion and complex backgrounds. The Non-Maximum Suppression (NMS)
    may filter out numerous true positives in scenarios with severe occlusion. Moreover,
    the label assignment enlarges the negative effects of the noise introduced by
    teacher model''s prediction, resulting in potential divergence. To tackle these
    challenges, we propose an end-to-end SSOD method based on Detection Transformer
    (DETR), which streamlines the post-processing without NMS and adopts a more advanced
    bipartite matching assignment strategy. These modifications tailor the semi-supervised
    training method to better align with the unique characteristics of detection tasks
    in Brassica Chinensis growth monitoring. Furthermore, two key techniques: low
    threshold filtering and decoupled optimization, are introduced to address class-imbalance
    and multi-task optimization conflict in the tasks, respectively. In the end, we
    conduct experiments using two self-constructed Brassica Chinensis image datasets
    to validate the effectiveness of the proposed method, which demonstrates state-of-the-art
    (SOTA) performance in both tasks. For plant detection, the proposed method achieves
    an mAP of 74.1 using only 5 % of the total data volume (18 images). In the wormhole
    detection task, the method achieves an AP50 of 73.7 using 5 % of the total data
    volume (73 images). These impressive results meet the requirements for practical
    applications in Brassica Chinensis growth monitoring.'
  doi: 10.1016/j.compag.2024.108788
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Materials and methods
    3. Results and discussion 4. Conclusion CRediT authorship contribution statement
    Declaration of competing interest Acknowledgements Data availability References
    Show full outline Figures (14) Show 8 more figures Tables (9) Table 1 Table 2
    Table 3 Table 4 Table 5 Table 6 Show all tables Computers and Electronics in Agriculture
    Volume 219, April 2024, 108788 A DETR-like detector-based semi-supervised object
    detection method for Brassica Chinensis growth monitoring Author links open overlay
    panel Haoyan Li, Fanhuai Shi Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2024.108788
    Get rights and content Highlights • Semi-Supervised-Object-Detection method greatly
    reduces training cost of Brassica Chinensis growth monitoring. • End-to-end Semi-Supervised-Object-Detection
    method proposed aligns well with unique characteristics of Brassica Chinensis
    growth monitoring. • Low threshold filtering and decoupled optimization address
    class-imbalance and multi-task conflict in Brassica Chinensis datasets. Abstract
    Object detection technology plays a crucial role in crop growth monitoring within
    smart agriculture. However, data labeling is a costly process necessary for constructing
    a large-scale dataset, which is essential to prevent overfitting in deep learning-based
    object detection models. Semi-Supervised Object Detection (SSOD) presents a cost-effective
    solution to reduce labeling and model training expenses; nevertheless, existing
    SSOD algorithms fall short in addressing the specific challenges posed by detection
    tasks in Brassica Chinensis growth monitoring. Specifically, the two-stage object
    detector cannot be well-suited for scenes characterized by severe occlusion and
    complex backgrounds. The Non-Maximum Suppression (NMS) may filter out numerous
    true positives in scenarios with severe occlusion. Moreover, the label assignment
    enlarges the negative effects of the noise introduced by teacher model’s prediction,
    resulting in potential divergence. To tackle these challenges, we propose an end-to-end
    SSOD method based on Detection Transformer (DETR), which streamlines the post-processing
    without NMS and adopts a more advanced bipartite matching assignment strategy.
    These modifications tailor the semi-supervised training method to better align
    with the unique characteristics of detection tasks in Brassica Chinensis growth
    monitoring. Furthermore, two key techniques: low threshold filtering and decoupled
    optimization, are introduced to address class-imbalance and multi-task optimization
    conflict in the tasks, respectively. In the end, we conduct experiments using
    two self-constructed Brassica Chinensis image datasets to validate the effectiveness
    of the proposed method, which demonstrates state-of-the-art (SOTA) performance
    in both tasks. For plant detection, the proposed method achieves an mAP of 74.1
    using only 5 % of the total data volume (18 images). In the wormhole detection
    task, the method achieves an AP50 of 73.7 using 5 % of the total data volume (73
    images). These impressive results meet the requirements for practical applications
    in Brassica Chinensis growth monitoring. Previous article in issue Next article
    in issue Keywords SSODBrassica ChinensisCrop growth monitoringPhenotypic measurementPest
    control 1. Introduction With the current workforce aging, the agriculture industry
    confronts an impending labor shortage (Yang et al., 2021). To tackle this issue,
    smart agriculture (Shaikh et al., 2022), which emphasizes mechanization, automation,
    and intelligence as critical components, has emerged. Brassica Chinensis is a
    popular crop in southern China, East Asia, and Southeast Asia, with extensive
    greenhouse agricultural production in Shanghai, China. Nevertheless, the current
    state of intelligent Brassica Chinensis production remains relatively underdeveloped.
    Monitoring and analyzing the growth status of Brassica Chinensis, particularly
    in terms of phenotypic measurement and pest control — crucial for enhancing crop
    productivity and quality, still heavily depends on manual intervention. In recent
    years, the development of computer vision technology has found applications in
    various practical engineering tasks, including those in the field of agriculture
    (Ariza-Sentís et al., 2023, Cardellicchio et al., 2023, Roy and Bhaduri, 2023).
    Certain studies in smart agriculture have endeavored to utilize object detection
    methods to replace manual acquisition of crop phenotypic and pest information,
    providing a more efficient means to monitor the growth status of Brassica Chinensis.
    For phenotypic measurement, object detection plays a crucial role as the initial
    step in identifying each plant objects within top-view images of Brassica Chinensis,
    facilitating subsequent measurement processes (Qiang et al., 2022, Shi et al.,
    2023). Likewise, for pest information, object detection technology can be directly
    applied to capture details such as quantity, location, and size of pest areas,
    which are characterized by salient foreground objects (Liu and Wang, 2020, Zhao
    and Shi, 2022). However, in Brassica Chinensis growth monitoring, there are unique
    requirements for object detection model utilized, which makes models in general-purpose
    datasets’ leaderboard, such as PASCAL VOC (Everingham, 2008) and MS COCO (Lin
    et al., 2014), present suboptimal detection performance. The model must effectively
    adapt to the distinctive characteristics observed in Brassica Chinensis image
    datasets. Firstly, occlusion between different Brassica Chinensis plants occurs
    frequently, which can lead to the loss of crucial information in images, hindering
    comprehensive crop image analysis (Lawal, 2021, Roy and Bhaduri, 2022). Secondly,
    there tend to be a higher density of objects, including many with extremely small
    sizes, in Brassica Chinensis images, which also poses a challenge for accurate
    object detection (David et al., 2021). Thirdly, Brassica Chinensis images often
    contain complex backgrounds with weeds and other salient regions, potentially
    affecting the correct recognition of foreground objects (Zhou et al., 2021a).
    Fourthly, the class-imbalance problem is prevalent in Brassica Chinensis datasets.
    For instance, in Shanghai, the number of objects affected by flea beetles surpasses
    those affected by Helicoverpa by dozens of times, resulting in a dominance of
    flea beetle-affected objects in the datasets. Furthermore, the absence of an open-source
    labeled Brassica Chinensis image dataset necessitates the creation of a dedicated
    large-scale dataset for model training. It should possess ample size to prevent
    overfitting in the detection models. While obtaining Brassica Chinensis image
    data is relatively straightforward and cost-effective, the challenge lies in the
    annotation of supervision signals (Laine and Aila, 2016, Tarvainen and Valpola,
    2017, Xie et al., 2020), requiring expertise from agricultural specialists (Tseng
    et al., 2023). This demands considerable human resources and material investments,
    making the creation of totally labeled dataset an arduous and costly endeavor.
    Consequently, cost-effective training paradigms like Semi-Supervised Object Detection
    (SSOD) (Liu et al., 2021a, Xu et al., 2021, Zhou et al., 2021b, Li et al., 2022,
    Zhou et al., 2022) are favorable. By requiring labels for only a subset of the
    entire image set, SSOD can yield comparable results to supervised learning with
    more labeled data, making it an advantageous and economical choice for smart agriculture.
    The recent work (Tseng et al., 2023) explores the agricultural domain by introducing
    an SSOD algorithm with an adaptive threshold screening approach to address the
    class-imbalance problem. However, despite both their study and ours operating
    within the agriculture field, their work focuses on wheat as an example, while
    ours centers on the specific conditions of Brassica Chinensis. The two tasks exhibit
    completely distinct image characteristics and difficulties, with a difference
    even more pronounced than that observed between tasks involving Brassica Chinensis
    images and images from other fields. To the best of our knowledge, there has been
    no research applying SSOD algorithms to the object detection task in Brassica
    Chinensis growth monitoring. Therefore, an SSOD algorithm tailored to the specific
    traits of Brassica Chinensis image datasets becomes imperative. Analyzing the
    structure of SSOD algorithms alongside the distinctive features of Brassica Chinensis
    image datasets reveals that the base detector in current SOTA SSOD algorithms,
    typically a two-stage detector like Faster R-CNN (Ren et al., 2015), does not
    align well with semi-supervised training method for Brassica Chinensis image datasets.
    Actually, a two-stage object detector is not entirely end-to-end. To convert predicted
    results of the teacher model on unlabeled data into the format required for optimizing
    the student model, a series of complex processing steps are still necessary, which
    involve Non-Maximum Suppression (NMS), thresholding, and label assignment. On
    one hand, NMS filters out predicted results that have a relatively high Intersection
    over Union (IoU) with a result that possesses a local maxima confidence, which
    might lead to the exclusion of some true positives, especially in Brassica Chinensis
    images, where occlusion is quite common, and true positives predicted by the teacher
    model tend to have high IoUs with each other. In addition, NMS could also potentially
    cause a loss of teacher-learned knowledge in object detection, and reduce the
    efficiency of knowledge transfer from the teacher model to the student model.
    On the other hand, the label assignment process in a two-stage object detector
    is a threshold activation process. A proposal is assigned as positive when its
    IoU with a label box surpasses the preset IoU threshold, and vice versa. However,
    this process is conducted in isolation and lacks reference to other label boxes
    or proposals. As a result, the assignment results are highly susceptible to noise
    introduced by teacher model''s prediction (Li et al., 2022), which can significantly
    impact the accuracy and reliability of the assigned labels, and an intuitive example
    is shown in Fig. 1. Furthermore, the presence of noise in pseudo boxes and the
    use of an easy assignment method can also pose additional challenges in utilizing
    localization information during the student learning stage, that regressing continuous
    bounding boxes can lead to significant training divergence, and seems unfeasible
    empirically. Download : Download high-res image (337KB) Download : Download full-size
    image Fig. 1. An example of incorrect assignment in two-stage object detector-based
    SSOD algorithms. The red box represents the ground truth, the blue box represents
    the noised pseudo box, and the white box represents the proposal. The proposal,
    which has a large IoU value with the ground truth and should be assigned as positive,
    is mistakenly assigned as negative due to the influence of the noised and poorly
    localized pseudo box (The IoU value between the proposal and the pseudo box does
    not surpass the IoU threshold of 0.5). To address these issues, we propose an
    end-to-end SSOD method based on Detection Transformer (DETR) (Carion et al., 2020).
    Firstly, DETR-like model’s prediction mechanism relies on the interrelation between
    diverse pixel areas, effectively adapting to the substantial occlusion and complex
    background challenges present in Brassica Chinensis image datasets. Secondly,
    in contrast to two-stage object detectors, DETR-like model functions as a fully
    end-to-end set prediction object detector, which operates without the necessity
    of the NMS process to filter out redundant true positives during pseudo label
    generation, and utilizes bipartite matching for label assignment, effectively
    reducing the occurrence of incorrect assignment results. Thirdly, with the more
    advanced bipartite matching, localization information in pseudo boxes tends to
    be available for student model’s training, making it more suitable for SSOD algorithms
    that adopt a pseudo labeling strategy. Section 2.2.1 provides more details about
    how the DETR-like model could address the challenges outlined in the preceding
    paragraph. Two key techniques have also been introduced: low threshold filtering
    and decoupled optimization, aimed at tailoring the DETR-based SSOD method in the
    context of Brassica Chinensis growth monitoring task. Class-imbalance (Liu et
    al., 2021a) is a critical issue in Brassica Chinensis image datasets, particularly
    in tasks like wormhole detection. Besides the imbalance between different categories,
    DETR-like detectors also face a severe class-imbalance problem between foreground
    objects and background objects. The low threshold filtering technique we have
    designed relaxes the criteria for selecting pseudo boxes, fostering a more balanced
    distribution among the generated pseudo labels across different categories, and
    effectively alleviating training divergence. Additionally, multi-task optimization
    conflict is also an important issue, where a low IoU threshold may fit the classification
    task, while the regression task requires more refined information due to its continuous
    property. Therefore, the decoupled optimization technique has been implemented,
    which separates the two optimization tasks, and better optimizes the model for
    both classification and regression tasks. To benchmark the proposed SSOD method,
    we have constructed two datasets: one for plant detection task and another for
    wormhole detection task. Refer to Section 2.1 for comprehensive details about
    the datasets. For each task, we have conducted tests under four different conditions
    by varying the amount of labeled data used for training (Liu et al., 2021a, Xu
    et al., 2021, Zhou et al., 2021b). The proposed method consistently demonstrates
    SOTA performance across all four conditions for both tasks, and this advantage
    is particularly pronounced when utilizing extremely limited labeled data. In the
    case of plant detection, the method achieves an impressive mAP of 70.0 by using
    only 1 % labeled images (3 images) of the total training set, representing an
    absolute improvement of 21.0 points compared to the current SOTA algorithm. Similarly,
    in the more challenging wormhole detection task, the method achieves a significant
    AP50 of 65.0 using 1 % labeled images (14 images) of the total training set, showcasing
    an absolute improvement of 5.3 points compared to current SOTA algorithm. In addition,
    the remarkable results achieved with merely 5 % labeled images (18 images for
    plant detection and 73 images for wormhole detection) closely rival the results
    attained with fully supervised training, and these results meet the demands of
    practical applications in Brassica Chinensis growth monitoring. We highlight the
    contributions of this paper as follows: (a) Identifying three specific limitations
    in the application of current mainstream SSOD algorithms to Brassica Chinensis
    image datasets, we propose a novel end-to-end SSOD method that employs a DETR-like
    detector as the base detector, which aligns well with the unique characteristics
    of Brassica Chinensis image datasets, alleviating these challenges, and ultimately
    resulting in a more efficient and robust SSOD method tailored for Brassica Chinensis
    growth monitoring. (b) To address the class-imbalance and multi-task optimization
    conflict issues presented in Brassica Chinensis image datasets, two techniques
    are introduced to adapt the newly proposed method, namely low threshold filtering
    and decoupled optimization, which results in a more stable and faster training
    process, allowing for better optimization of the model. 2. Materials and methods
    2.1. Materials We conducted the study at the Brassica Chinensis greenhouse in
    Shanghai Shixin Vegetable Cultivation Company, situated at 121°03′ east longitude
    and 31°07′ north latitude, which belongs to the subtropical monsoon climate. The
    greenhouse itself is a ten-arch multi-span plastic structure, measuring 80 m in
    length and 40 m in width. The setup utilized in the study comprises five fixed
    cameras and a specialized visual plant protection UAV system that we constructed.
    The fixed cameras, Hikvision’s DS-2DC4223IW-D spherical network cameras, are positioned
    approximately 2.5 m above the ground on the greenhouse’s top shelf (see Fig. 2(a)).
    In addition, the UAV system, which employs a Sony action camera featuring 7 million
    static pixels and supporting 1080p@60FPS slow-motion video recording, operates
    at a flight height set to approximately 1 m above the ground (see Fig. 2(b)).
    Both the images collected by the fixed cameras and the UAV system maintain a resolution
    of 1920 × 1024 pixels. To accommodate computing resource limitations, we divided
    the collected images into two images of the same size to construct the datasets.
    Likewise, for future inference processes, the collected images also undergo division
    as a preliminary step. Download : Download high-res image (377KB) Download : Download
    full-size image Fig. 2. (a) An image of the fixed camera. (b) An image of image
    acquisition and pesticide spraying by the visual plant protection UAV system in
    the greenhouse. For the plant detection task, considering the uniform size of
    Brassica Chinensis plants within each batch but across distinct areas, as well
    as the convenience and high-definition capabilities of the fixed cameras, we made
    the choice to utilize the fixed cameras, rather than the UAV system, to collect
    439 top-view images to build the plant detection dataset. In contrast, the challenge
    of wormhole detection involved significant fluctuations in pest levels across
    various areas, necessitating a diverse collection of Brassica Chinensis images.
    Thus, we employed the UAV system to gather 1745 images from all sections inside
    the greenhouse to build the wormhole detection dataset. Examples taken from the
    two datasets have been displayed in Fig. 3. These images were subsequently partitioned
    into a training set and a test set. Table 1 provides quantitative details of the
    constructed datasets. Download : Download high-res image (537KB) Download : Download
    full-size image Fig. 3. (a) An example image in plant detection dataset. The yellow
    box highlights plant objects. (b) Depiction of flea beetle and Helicoverpa pests
    on Brassica Chinensis images. The red box highlights Helicoverpa pest objects,
    while the blue box highlights flea beetle pest objects. Table 1. The details of
    constructed datasets. Dataset Training images Test images Total images Total objects
    Plant detection 351 88 439 7399 Wormhole detection 1460 285 1745 50,240 2.2. Methods
    The objective of the designed model is to train a robust and high-performance
    agricultural object detection model, , using both a labeled image set and an unlabeled
    image set , where , are the number of images in the labeled set and the unlabeled
    set. Besides, there are class information and localization information of all
    objects in the annotations for each labeled image . 2.2.1. Framework overview
    The DETR-like detector-based SSOD method consists of two training stages (see
    Fig. 4), namely labeled data burn-in stage and unlabeled data semi-supervised
    learning stage. In the labeled data burn-in stage (Section 2.2.2), only labeled
    images, from , are utilized, and a model with moderate performance is achieved.
    Subsequently, the model weights are duplicated to initialize both the teacher
    model and the student model. This approach empowers the teacher model to attain
    a respectable level of performance and generate relatively high-quality labels,
    which is still not good enough to put into practical engineering, but can substantially
    contribute to the student model''s training process. Moving to the second stage,
    unlabeled data semi-supervised learning stage (Section 2.2.3), the teacher model
    generates pseudo labels for unlabeled instances, from , and then, these newly
    pseudo labeled instances, along with labeled instances, are combined in a specific
    proportion to create mini-batches for training the student model. Following each
    iteration, the student model''s weights are updated, and the teacher model''s
    weights are concurrently updated using Exponential Moving Average (EMA) to provide
    even higher-quality and more dependable pseudo labels for subsequent training
    iterations. Download : Download high-res image (637KB) Download : Download full-size
    image Fig. 4. Overview of our method. Note that, both the teacher model and the
    student model in the framework are DETR-like object detection model with the same
    structure (see Fig. 5). On one hand, DETR-like detector, functioning as an end-to-end
    object detection model, leverages inter-object relationships to enhance detection
    performance. The information of object interactions eliminates the need for NMS
    in the post-processing of teacher model''s predictions, which addresses the issue
    of erroneous filtering of highly overlapped true positives in Brassica Chinensis
    images, and retains a greater amount of information that the teacher has acquired
    about the detection task, accelerating the efficiency of knowledge transfer. On
    the other hand, DETR-like detector''s set prediction approach outputs all potential
    bounding boxes simultaneously during prediction, aligning well with the set-based
    representation of label boxes, which allows DETR-like detector to employ a more
    advanced and robust bipartite matching technique for label assignment, taking
    into account the relationship between multiple label boxes and multiple proposals.
    Consequently, more robust assignment results, that are less affected by noise
    introduced during the teacher''s prediction stage, can be obtained, leading to
    improved model performance. Moreover, the more systematic and robust assignment
    process enables effective utilization of localization information in pseudo boxes
    for student model’s training, which enhances the efficiency of training and further
    improves the overall performance of the model. Download : Download high-res image
    (288KB) Download : Download full-size image Fig. 5. The basic inference pipeline
    of DETR-like object detector (Carion et al., 2020). Additionally, low threshold
    filtering and decoupled optimization are two techniques proposed to tackle the
    challenges of class-imbalance and multi-task optimization conflict in detection
    tasks within Brassica Chinensis datasets, and we will elaborate on how these two
    proposed solutions effectively address the challenges in Sections 2.2.4 and 2.2.5.
    2.2.2. Labeled data burn-in When training the model from scratch with semi-supervised
    learning paradigm, the pseudo labels generated by the teacher model, which has
    randomly initialized weights, essentially resemble random noise. Consequently,
    few prediction results will have confidence scores exceeding the preset threshold.
    This results in a significant imbalance between the number of pseudo label boxes
    and real label boxes, with a large portion of foreground objects being misclassified
    as background, thus intensifying the foreground-background imbalance problem,
    which can lead to significant training divergence. Therefore, a labeled data burn-in
    stage is necessary. Initially, we train the model in a supervised manner using
    labeled data , obtaining a model with improved performance. We then duplicate
    this model to create both the teacher and student model ( , ). Consequently, when
    we commence semi-supervised training (the second stage), the pseudo labels generated
    by the teacher model have relatively high quality. These labels provide a valuable
    reference for training the student model and help prevent training divergence
    caused by low-quality pseudo labels. Specifically, during each training iteration,
    we apply a set of weak data augmentations to the mini-batch obtained from the
    data loader, firstly. These augmentations include operations like horizontal flipping,
    random cropping, and various geometric transformations. The outcome is a mini-batch
    after weak data augmentations. Next, we subject to strong data augmentations ,
    which encompass techniques such as color jittering, random grayscale, random Gaussian
    blur, random erasing, and other non-geometric transformations. It is important
    to note that there is a domain gap between and . Training the model solely on
    data from one of these domains could result in poor performance when dealing with
    data from the other domain. In the subsequent unlabeled data semi-supervised learning
    stage, it is assumed that a robust and high-performance model should produce consistent
    predictions when presented with an image that has undergone either weak ( ) or
    strong (actually and ) augmentations. Therefore, we concatenate and to create
    a new mini-batch that combines data from both domains. This combined mini-batch
    is used to train the initial model. Given the supervised data , the supervised
    loss consists of the classification loss and the regression loss: (1) where represents
    the concatenation of and , corresponds to the label for , and represents the model
    weights in the iteration. 2.2.3. Unlabeled data semi-supervised learning The unlabeled
    semi-supervised learning stage is the pivotal stage in the approach. Here, unlabeled
    data is employed to complement labeled data in model training, resulting in a
    model with enhanced semantic information and a deeper understanding of foreground
    objects. In this stage, we combine two key techniques from Semi-Supervised Learning
    (SSL): pseudo labeling and consistency regularization (Berthelot et al., 2019,
    Sohn et al., 2020, Xie et al., 2020). On one hand, the teacher model assigns pseudo
    labels to unlabeled data , which are then used for training the student model;
    on the other hand, we take the assumption that an ideal model should be adept
    at filtering various levels of noise present in images, capturing the meaningful
    semantic content within, and require that the model must produce consistent results
    for images subjected to weak data augmentation and strong data augmentation. Moreover,
    to ensure the continual generation of accurate pseudo labels during training,
    we employed EMA to dynamically update the teacher model''s weights concurrently
    with the student model. This helps mitigate fluctuations in the teacher model''s
    weights, maintaining stable and consistent pseudo label quality throughout training.
    Specifically, in each iteration, we use consistent weak data augmentations , as
    in the burn-in stage, for the minibatch . Subsequently, we feed these weakly augmented
    images into the teacher model to generate pseudo labels . Simultaneously, we subject
    the weakly augmented images to strong data augmentations and input them into the
    student model for further processing. Given the unsupervised data , the unsupervised
    loss can be represented as: (2) where represents the pseudo labels generated by
    the teacher model, and represents the weights of student model in this iteration.
    Note that, during the unlabeled data semi-supervised learning stage, only the
    learnable weights of the student model are updated via back-propagation. Moreover,
    this update process actually takes into account both the supervised and unsupervised
    loss components: (3) where is learning rate, serves as a balancing factor, calibrating
    the trade-off between the supervised and unsupervised loss components and ensuring
    a stable and effective training process. After training, we employ the teacher
    model as the ultimate inference model. The teacher model''s weights are an exponential
    moving average of the weights from the last several student models. Alternatively,
    one can view the teacher model as an ensemble of the student models at different
    time steps. This aligns with our observation that the teacher model consistently
    achieves higher accuracy than each individual student model. 2.2.4. Low threshold
    filtering As previously discussed in Section 1, class-imbalance, including both
    imbalance between foreground and background objects as well as imbalance among
    various categories within the foreground objects, is a pervasive issue in detection
    tasks within Brassica Chinensis image sets, significantly impacting the model’s
    overall detection performance. Low threshold filtering is a necessary technique
    to adapt the DETR-like detector-based SSOD algorithm to imbalanced detection tasks.
    Compared to two-stage object detectors, DETR-like detectors tend to provide more
    conservative confidence scores, especially when Focal Loss (Lin et al., 2017)
    employed. The conventional threshold used represents a stringent criterion, with
    only a few frequently occurring categories surpassing this threshold. Consequently,
    the majority of infrequently encountered object categories, are erroneously considered
    as background in the generated pseudo labels, leading to exceedingly sparse pseudo
    boxes, which exacerbate the problem of class-imbalance within the dataset. However,
    the low threshold filtering technique enables the creation of an increased quantity
    of pseudo boxes across all categories, particularly in those with fewer instances,
    achieved by relaxing the pseudo box selection criteria. As a result, objects belonging
    to rare categories, which had little representation in the pseudo boxes before,
    now have a chance to be included in the generated pseudo boxes. While their numbers
    are still considerably smaller than those belonging to frequently occurring categories,
    this adjustment helps maintain a closer proportional representation of each category
    as seen in the original dataset, providing a more consistent optimization objective
    for training student models. The changes in mAP and AP50 with different confidence
    thresholds are depicted in Fig. 6. Notably, a high threshold, which is the conventional
    setting commonly used in two-stage detector-based SSOD algorithms, proves detrimental
    to the training of the DETR-like detector-based model, and it may even lead to
    training divergence when the threshold exceeds 0.6. Conversely, a relatively lower
    threshold, like 0.4, proves more advantageous for model training, making the training
    process less susceptible to class-imbalance issue. However, a further reduction
    in the filtering threshold results in an influx of low-quality pseudo labels,
    and utilizing these poorly predicted boxes as pseudo labels also adversely affects
    student model’s training, so it is important to strike a balance. Download : Download
    high-res image (111KB) Download : Download full-size image Fig. 6. The curves
    depicting the changes in mAP and AP50 with varying filtering thresholds under
    the 10% evaluation setting in the wormhole detection task. 2.2.5. Decoupled optimization
    Different from labels in image classification tasks, there is not only class information
    but also localization information in labels of object detection tasks. Due to
    the noise introduced by teacher model’s prediction, regressing the continuous
    localization boxes in pseudo labels can cause easy divergence in the training
    process, and always be unfeasible. However, the use of a more advanced and systematic
    bipartite matching technique in the DETR-like detector-based model significantly
    reduces the impact of noise on the assignment results, enabling the use of localization
    information. Additionally, since that little noises in pseudo labels can lead
    to inconsistent optimization objectives of regression tasks and fluctuations in
    model performance, regression tasks inherently necessitate higher-quality pseudo
    labels compared to classification tasks, as mentioned earlier in the context of
    the multi-task optimization conflict. The varying quality demands between classification
    and regression tasks yield sub-optimal results. Consequently, we adopted a decoupled
    training approach, which leveraged two different parameters, and , to set the
    threshold for pseudo labels in the calculation of classification loss and regression
    loss respectively, as illustrated in Fig. 7. Download : Download high-res image
    (108KB) Download : Download full-size image Fig. 7. Overview of decoupled optimization
    process. Pseudo labels are categorized based on the relationship between pseudo
    label’s confidence and . Red pseudo labels (e.g., pseudo labels 1 and 3) represent
    those with confidence greater than , while yellow pseudo labels (e.g., pseudo
    label 2) represent those with confidence less than . Following this categorization,
    red pseudo labels undergo calculation for both the classification and regression
    losses, while yellow pseudo labels only undergo calculation for the classification
    loss. The key parameter is tasked with the initial screening of teacher model
    prediction results , filtering out the majority of incorrect and low-quality boxes,
    and retaining only a selected portion as pseudo labels for the subsequent bipartite
    matching process. Instead, the other key parameter comes into play during the
    loss calculation phase. Following the bipartite matching process, it determines
    which localization information is considered in the calculation. Specifically,
    localization information from a subset of pseudo boxes whose confidence exceeds
    , indicating higher quality and greater consistency, is utilized in the calculation
    process. Simultaneously, the localization information from other pseudo boxes
    is disregarded in this phase. Given that the bipartite matching index (for more
    details, please refer to (Carion et al., 2020)), the final decoupled regression
    loss can be expressed as follows: (4) where is a preset hyper-parameter that determines
    the number of boxes in the predicted set. represents the confidence score of the
    pseudo box. is the confidence threshold used for regression loss calculation.
    denotes the class of the pseudo box. signifies the bounding box center coordinates,
    width, and height of the pseudo box. refers to the bounding box center coordinates,
    width, and height of the predicted box corresponding to the matched box according
    to matching index . In the loss function , we employ a combination of L1 loss
    and GIoU (Generalized Intersection over Union) loss for calculating the box loss.
    Please refer to Fig. 8 to get an intuitive understanding of the calculation steps
    of decoupled regression loss. Download : Download high-res image (97KB) Download
    : Download full-size image Fig. 8. Overview of the calculation steps of decoupled
    regression loss. Red pseudo labels (e.g., pseudo labels 1 and 3) represent those
    with confidence greater than , while yellow pseudo labels (e.g., pseudo label
    2) represent those with confidence less than . The red lines and the yellow lines
    represent the bipartite matching results of red and yellow pseudo labels, respectively
    (e.g., pseudo label 1 matching student output 3). 3. Results and discussion 3.1.
    Evaluation protocol To benchmark the performance of the proposed method within
    real-world object detection scenarios for Brassica Chinensis monitoring, the two
    specific datasets, the plant detection dataset and the wormhole detection dataset,
    are both utilized. The evaluation protocol involves randomly sampling different
    percentages of training set for each task. Specifically, we select 1 %, 2 %, 5
    %, and 10 % of the training set as the labeled set, and the remaining data is
    used as the unlabeled set. Both the labeled set and the unlabeled set work together
    in the proposed DETR-like detector-based SSOD method, and the model''s performance
    is then evaluated on the test set for each task. 3.2. Implementation details In
    experimental implementation, considering the inherent traits of the flea beetle
    pest, which is prevalent in Brassica Chinensis and typically manifests as small
    and densely distributed objects, we utilized Deformable DETR (Zhu et al., 2020)
    with a ResNet-50 backbone as the base detector. At the mean time, this choice
    allowed for significantly shorter training cycles compared to the original DETR
    while maintaining robust performance, as evidenced by prior research. The model
    weights were initialized using a model pre-trained on the general-purpose large-scale
    object detection dataset MS COCO (Lin et al., 2014). We used the confidence threshold
    , , unsupervised loss weight , for both the plant detection and wormhole detection
    tasks. We employed the SGD optimizer with momentum rate , weight decay rate ,
    learning rate for the backbone, learning rate for remaining parts of the model
    and constant learning rate scheduler. The batch size for supervised data was set
    to 4, and for unsupervised data, was 8. For plant detection task, we apply for
    1 %/2%/5%/10 % settings, and we train 200/400/900/1400 iterations, which includes
    50/100/200/400 iterations, for 1 %/2%/5%/10 % in the labeled data burn-in stage
    and the remaining iterations in the unlabeled data semi-supervised learning stage.
    However, for wormhole detection task, we apply as the EMA rate instead, and due
    to the more complex task, we opted for longer training process, extending training
    consisted of 2.5/3/5/7k total iterations, including 0.1/0.2/0.5/1k iterations
    for labeled data burn-in stage. All the hyper-parameters are summarized in Table
    2. Table 2. Summary of all hyper-parameters used in our experiments. Hyper-parameter
    Description Plant detection Wormhole detection Confidence threshold for pseudo
    boxes 0.4 0.4 Confidence threshold for regression loss calculation 0.5 0.5 Unsupervised
    loss weight 4.0 4.0 Momentum rate 0.9 0.9 Weight decay rate 1e-4 1e-4 Learning
    rate for remaining parts of the model 2e-4 2e-4 Learning rate for backbone 2e-5
    2e-5 EMA rate 0.98/0.99/0.992/0.996 0.99/0.996/0.998/0.998 Batch size for labeled
    data 4 4 Batch size for unlabeled data 8 8 3.3. Results Fully supervised methods,
    necessitating annotation signals for all instances used, have proven successful
    in practical applications. Consequently, we conducted a comparative analysis between
    models trained using the proposed method, across 4 labeled proportion settings,
    and fully supervised method, aimed to assess the practical feasibility and effectiveness
    of the proposed approach in real-world applications for Brassica Chinensis growth
    monitoring. In experimental evaluation, common standard metrics for object detection
    models are utilized, including mAP, AP50 (Yilmaz and Aslam, 2006), F-1 score,
    Precision and Recall. These metrics are widely accepted, each with its own particular
    focus. AP50 and mAP are considered key metrics with AP50 placing more emphasis
    on the successful detection of objects, while mAP prioritizes the precision of
    the detection. Given the distinct tendencies of these two metrics, we made specific
    choices based on the nature of the tasks at hand: for the plant detection task,
    where we required highly accurate predicted boxes for subsequent phenotypic measurement,
    we primarily relied on mAP as the reference metric during model training and parameter
    optimization; conversely, for the wormhole detection task, the focus was on the
    number of small wormhole objects and their approximate positions on the plant.
    This aligns more closely with the characteristics of the AP50 metric, and thus,
    we selected AP50 as the reference metric for this task. Besides these metrics,
    we also plot Precision-Recall (P-R) curves (see Fig. 9) to provide an intuitive
    representation of the performance of models trained using the proposed method
    and fully supervised method. Download : Download high-res image (245KB) Download
    : Download full-size image Fig. 9. Comparison of P-R curves between models trained
    with the proposed semi-supervised method and fully supervised method. From the
    comparison of the P-R curves, it is evident that while the model trained with
    the fully supervised method achieved the highest area under the P-R curve, models
    trained with the proposed method produced comparable results and demonstrated
    good Precision values for particular Recalls, even when no more than 10 % of the
    labeled images utilized. Table 3 displays the comparative results between the
    proposed method and fully supervised method in Brassica Chinensis plant detection.
    The results illustrate that, with only 10 % annotation required, the proposed
    method can achieve a performance very close to that of the fully supervised method
    in terms of mAP, F1-score and Recall, and even outperforms the fully supervised
    method in the case of AP50 and Precision, for the plant detection task. In the
    case of wormhole detection, as indicated in Table 4, the proposed method can achieve
    a remarkable AP50 score of 75.0, merely 2.6 absolute points lower than the fully
    supervised method, while necessitating only 10 % of the total annotation signals.
    Additionally, comparable results can be achieved in terms of other metrics. This
    suggests that the plant detection model, trained with only 35 labeled images,
    and the wormhole detection model, trained with 146 labeled images within the proposed
    semi-supervised approach, exhibit a high level of competitiveness compared to
    models trained under complete data supervision (351 labeled images for plant detection
    task, and 1460 labeled images for wormhole detection task), which proves both
    the feasibility and effectiveness of the proposed method in real-world tasks for
    Brassica Chinensis growth monitoring. Table 3. Experiment results on plant detection
    task with fully supervised learning paradigm. Empty Cell mAP AP50 F1 Precision
    Recall 1 % Semi-Supervised 70.0 89.3 87.2 87.4 87.0 2 % Semi-Supervised 70.2 90.0
    88.4 87.7 89.0 5 % Semi-Supervised 74.1 91.8 89.6 90.3 89.0 10 % Semi-Supervised
    77.7 93.9 90.3 91.7 89.0 Fully Supervised 77.9 93.8 90.7 90.5 91.0 Table 4. Experiment
    results on wormhole detection task with fully supervised learning paradigm. Empty
    Cell mAP AP50 F1 Precision Recall 1 % Semi-Supervised 26.1 65.0 69.9 74.2 66.0
    2 % Semi-Supervised 30.7 70.1 74.0 78.5 70.0 5 % Semi-Supervised 32.7 73.7 75.2
    79.9 71.0 10 % Semi-Supervised 33.9 75.1 76.9 81.1 73.0 Fully Supervised 36.7
    77.7 77.9 83.5 73.0 For a more intuitive and comprehensive understanding of the
    proposed method''s detection performance, we present visualizations of detection
    results using bounding boxes on several select test images in Fig. 10 and Fig.
    11, for plant detection task and wormhole detection task respectively, which explicitly
    illustrate the proposed method’s capability to accomplish both detection tasks
    for Brassica Chinensis monitoring. Notably, the proposed SSOD method excels in
    detecting plants and large-scale wormholes, which are salient and easily distinguishable
    objects. For small-scale wormholes, the proposed method also effectively locates
    their positions, albeit with lower confidence. False detections are primarily
    attributed to gaps that intersect between leaves, while missed detections occur
    mainly in boundary scenarios. Overall, the proposed method demonstrates reliable
    and accurate detection results in a wide range of scenarios, bolstering its practical
    utility. Download : Download high-res image (826KB) Download : Download full-size
    image Fig. 10. visualizations of detection results in the plant detection task.
    Download : Download high-res image (1MB) Download : Download full-size image Fig.
    11. visualizations of detection results in the wormhole detection task. 3.4. Discussion
    3.4.1. Comparative experiments To further illustrate the superiority of the proposed
    method over existing algorithms, we conducted a comparative experiment to compare
    its performance with current SOTA SSOD algorithms, including instant-teaching
    (Zhou et al., 2021b), soft-teacher (Xu et al., 2021), and unbiased-teacher (Liu
    et al., 2021a). Fig. 12 visually presents the results of the comparative experiment,
    revealing that the proposed method consistently attains the top performance across
    all four labeled data ratio settings. Notably, the most significant improvement
    is observed when there is a scarcity of labeled data. For the plant detection
    task (see Table 5), model trained with the proposed method using 1 % of the total
    labeled images (only 3 images) achieves 70.0 mAP, outperforming other models using
    5 % (the best result is 69.3 mAP), and for the wormhole detection task (Table
    6), model trained with the proposed method using 2 % of the total labeled images
    (29 images) similarly exhibited superior performance to other models using 5 %
    (70.1 AP50 > 68.6 AP50). The experimental results indicate that the proposed method
    aligns well with the specific characteristics of object detection tasks for monitoring
    Brassica Chinensis, significantly improving the efficiency of utilizing annotation
    signals, and reducing the overall training costs. Furthermore, the proposed method
    maintains its advantages as the amount of labeled data increases. This flexibility
    allows users to choose between incurring minimal labeling costs for good performance
    or investing a relatively higher but still cost-effective amount to achieve even
    better performance. This adaptability makes the proposed method a powerful tool
    for object detection in Brassica Chinensis growth monitoring, where data labeling
    can be resource-intensive. Download : Download high-res image (275KB) Download
    : Download full-size image Fig. 12. Comparison curves illustrating the detection
    performance between current SOTA algorithms and ours. Table 5. Experiment results
    on plant detection task with instant-teaching (Zhou et al., 2021b), soft-teacher
    (Xu et al., 2021) and unbiased-teacher (Liu et al., 2021a). Empty Cell 1 % 2 %
    5 % 10 % Empty Cell mAP AP50 mAP AP50 mAP AP50 mAP AP50 Supervised 37.3 55.8 51.0
    73.6 63.7 84.0 71.8 89.4 Instant-teaching 56 81.9 59.5 84.8 69.3 91.3 69.7 92.4
    Soft-teacher 6.5 15.7 33.9 55.2 66.4 89.3 72 92.8 Unbiased-teacher 49.0 76.1 63.3
    87.1 69.3 90.6 72.4 92.0 Ours 70.0 89.3 70.2 90.0 74.1 91.8 77.7 93.9 Table 6.
    Experiment results on wormhole detection task with instant-teaching (Zhou et al.,
    2021b), soft-teacher (Xu et al., 2021) and unbiased-teacher (Liu et al., 2021a).
    Empty Cell 1 % 2 % 5 % 10 % Empty Cell mAP AP50 mAP AP50 mAP AP50 mAP AP50 Supervised
    18.5 49.6 25.7 62.0 29.1 67.7 29.8 69.4 Instant-teaching 24.6 56 27.2 62.9 32.5
    67.3 32.7 66.4 Soft-teacher 12.4 26.8 18.3 40.4 25.5 54.8 29.9 61.6 Unbiased-teacher
    24.4 59.7 27.7 64.1 30.3 68.6 32.4 71.4 Ours 26.1 65.0 30.7 70.1 32.7 73.7 33.9
    75.1 It is worth noting that, the soft-teacher (Xu et al., 2021) model, which
    performs exceptionally well on general-purpose large-scale datasets, does not
    translate into satisfactory performance on the Brassica Chinensis image datasets
    we have created. In the case of the simpler plant detection task, when labeled
    data is extremely scarce, the soft-teacher struggles to learn a reliable model
    from the limited labeled data. Consequently, the pseudo labels it generates for
    the unlabeled data can actually disrupt the training of the student model, leading
    to a final model performance worse than the baseline achieved through supervised
    training. In the wormhole detection task, characterized by a complex dataset containing
    numerous small and densely packed objects, the soft-teacher fails to establish
    an effective model for comprehending the semantic information within the images.
    As a result, it performs worse than the supervised baseline across all four settings.
    This stark difference in performance underscores the unique challenges posed by
    Brassica Chinensis datasets as compared to general-purpose large-scale datasets.
    Simply transferring algorithms that excel on general datasets to the specific
    datasets is not a feasible strategy. Beyond the pivotal mAP and AP50 metrics,
    Fig. 13 presents comparative results for additional metrics such as F1-score,
    Precision, and Recall on wormhole detection task. Notably, when using only 1 %
    of the total labeled images, the proposed method demonstrated impressive performance
    improvements, with a 14.0 % increase compared to the supervised training paradigm
    and a 2.2 % increase compared to unbiased-teacher (Liu et al., 2021a) in F1-score,
    which further underscores the method’s superiority. Download : Download high-res
    image (346KB) Download : Download full-size image Fig. 13. Comparison bar charts
    of F1-score, Precision and Recall for supervised training paradigm, unbiased-teacher
    (Liu et al., 2021a) and ours on wormhole detection task. 3.4.2. Ablation study
    In Section 2.2, we have discussed the significance of three critical techniques,
    low threshold filtering, localization information, and decoupled training. In
    this section, we substantiate their effectiveness through experimental results.
    Given that the wormhole detection task is a more challenging scenario compared
    to plant detection and provides a clear distinction between better and poorer
    model performance, we conducted the ablation study in the wormhole detection context.
    Specifically, we used the 10 % setting for uniformity, which yields relatively
    large and robust result values. Table 7 presents the model''s performance under
    different filtering thresholds. It is evident that when conventional, larger threshold
    values like 0.6 or 0.7 are used, the model struggles to converge, yielding degenerated
    results unfit for applications in Brassica Chinensis monitoring. Conversely, when
    employing a threshold value that is too small, such as 0.2, the poor quality of
    pseudo labels also leads to convergence issues. Striking a balance, the best performance
    is achieved with a threshold value of 0.4. Table 8 illustrates the outcomes when
    comparing results with and without simple localization information under different
    filtering thresholds. Across all filtering thresholds, the results with localization
    information consistently outperform those without. This demonstrates that the
    inclusion of localization information in pseudo labels significantly benefits
    model training, enhancing the learning efficiency of the student model and ultimately
    improving the model''s overall performance. Table 9 presents the results of decoupled
    training, comparing outcomes under various filtering thresholds and regression
    thresholds. In Fig. 14, we summarize the best results under three conditions:
    without localization information, with simple localization information, and with
    decoupled localization information. It is noticeable that the model operates most
    effectively when the threshold falls within the range of 0.3 to 0.5. Remarkably,
    the configuration with decoupled localization information consistently outperforms
    the other two methods within this threshold range, demonstrating the crucial role
    of localization information and the efficiency of the decoupled optimization approach
    in utilizing pseudo labels’ localization information. However, it is also crucial
    to strike a balance when setting the regression threshold during decoupled training.
    Typically, the best results are achieved with a value slightly higher than filtering
    threshold, as excessively high values can have counterproductive effects. Table
    7. Experiments results on the 10% setting of the wormhole detection task under
    different filtering thresholds. mAP AP50 AP75 APs APm 0.2 12.1 27.3 7.6 12.0 29.1
    0.3 31.1 71.8 19.3 31.0 38.9 0.4 33.1 73.9 21.5 33.1 36.6 0.5 30.4 68.6 18.8 30.4
    36.6 0.6 10.0 25.7 5.0 10.1 7.9 0.7 12.6 31.9 6.7 12.8 3.5 Table 8. Experiments
    results on the 10% setting of the wormhole detection task under different filtering
    thresholds, with and without localization information. localization information
    mAP AP50 AP75 APs APm 0.3 30.3 69.7 18.8 30.4 33.0 0.3 √ 31.1 71.8 19.3 31.0 38.9
    0.4 30.7 71.5 18.7 30.6 35.2 0.4 √ 33.1 73.9 21.5 33.1 36.6 0.5 28.8 69.1 16.3
    28.8 34.2 0.5 √ 30.4 68.6 18.8 30.4 36.6 0.6 6.1 17.1 2.6 6.3 3.4 0.6 √ 10.0 25.7
    5.0 10.1 7.9 Table 9. Experiments results on the 10% setting of the wormhole detection
    task under different filtering thresholds and different regression thresholds.
    mAP AP50 AP75 APs APm 0.3 0.3 31.1 71.8 19.3 31.0 38.9 0.3 0.4 31.7 71.1 21.5
    31.6 39.7 0.3 0.5 31.4 70.8 19.9 31.2 42.9 0.4 0.4 33.1 73.9 21.5 33.1 36.6 0.4
    0.5 33.9 75.1 22.3 33.8 40.0 0.4 0.6 31.9 73.5 19.4 31.9 37.4 0.5 0.5 30.4 68.6
    18.8 30.4 36.6 0.5 0.6 31.4 69.7 20.6 31.3 39.1 0.5 0.7 29.1 66.6 17.7 29.0 37.1
    0.6 0.6 10.0 25.7 5.0 10.1 7.9 0.6 0.7 8.5 21.6 4.6 8.5 9.1 Download : Download
    high-res image (93KB) Download : Download full-size image Fig. 14. Comparison
    bar chart of the detection performance between three different conditions - without
    localization information, with simple localization information, and with decoupled
    localization information. 4. Conclusion In this paper, a DETR-like detector-based
    SSOD method is proposed for Brassica Chinensis growth monitoring. We have successfully
    tackled the substantial challenge of minimizing data labeling efforts while maximizing
    model performance in the context of object detection tasks for Brassica Chinensis
    growth monitoring. The proposed approach, an end-to-end SSOD method based on the
    versatile DETR, aligns well with scenes characterized by severe occlusion and
    complex backgrounds, and improves the post-processing of the teacher model''s
    predictions by eliminating NMS and adopting a more advanced bipartite matching
    assignment. Additionally, we have introduced innovative techniques like low threshold
    filtering and decoupled optimization. These techniques effectively address the
    class-imbalance problem and the multi-task optimization conflict problem. The
    comparative experiments with real-world Brassica Chinensis image datasets have
    yielded remarkable results, showcasing the proposed method''s ability to outperform
    current SOTA SSOD algorithms with minimal labeled data. This breakthrough not
    only significantly reduces costs associated with data labeling for training object
    detection models in Brassica Chinensis growth monitoring but also paves the way
    for accurate and efficient object detection applications in smart agriculture,
    including tasks like phenotypic measurement and pest control. The proposed algorithm
    is currently deployed on the server side, necessitating the transmission of images
    collected by any terminal device for processing. While our model''s detection
    speed is functional, there is room for improvement. In future work, we aim to
    enhance the model''s detection speed and explore the integration with real-time
    performance DETR-like object detection methods like RT-DETR (Lv et al., 2023)
    and DEYOv3 (Ouyang, 2023). This could potentially lead to deploying the method
    directly on the terminal device, enabling real-time analysis during monitoring.
    In addition, we also consider enhancing the model''s detection accuracy by integrating
    more sophisticated backbones, such as Swin Transformer (Liu et al., 2021b) and
    ConvNeXt (Liu et al., 2022). CRediT authorship contribution statement Haoyan Li:
    Writing – original draft, Visualization, Software, Methodology, Data curation.
    Fanhuai Shi: Writing – review & editing, Supervision, Project administration,
    Investigation, Funding acquisition, Conceptualization. Declaration of competing
    interest The authors declare that they have no known competing financial interests
    or personal relationships that could have appeared to influence the work reported
    in this paper. Acknowledgements This work was supported by Shanghai Agriculture
    Applied Technology Development Program, China (Grant No. 2020-02-08-00-07-F01480).
    Data availability Data will be made available on request. References Ariza-Sentís
    et al., 2023 M. Ariza-Sentís, H. Baja, S. Vélez, J. Valente Object detection and
    tracking on UAV RGB videos for early extraction of grape phenotypic traits Comput.
    Electron. Agric., 211 (2023), Article 108051, 10.1016/j.compag.2023.108051 View
    PDFView articleView in ScopusGoogle Scholar Berthelot et al., 2019 D. Berthelot,
    N. Carlini, I. Goodfellow, N. Papernot, A. Oliver, C.A. Raffel Mixmatch: A holistic
    approach to semi-supervised learning Adv. Neural Inf. Proces. Syst., 32 (2019)
    Google Scholar Cardellicchio et al., 2023 A. Cardellicchio, F. Solimani, G. Dimauro,
    A. Petrozza, S. Summerer, F. Cellini, V. Renò Detection of tomato plant phenotyping
    traits using YOLOv5-based single stage detectors Comput. Electron. Agric., 207
    (2023), Article 107757, 10.1016/j.compag.2023.107757 View PDFView articleView
    in ScopusGoogle Scholar Carion et al., 2020 N. Carion, F. Massa, G. Synnaeve,
    N. Usunier, A. Kirillov, S. Zagoruyko End-to-End Object Detection with Transformers
    Springer (2020) Google Scholar David et al., 2021 E. David, M. Serouart, D. Smith,
    S. Madec, K. Velumani, S. Liu, X. Wang, F. Pinto, S. Shafiee, I.S. Tahir Global
    wheat head detection 2021: an improved dataset for benchmarking wheat head detection
    methods Plant Phenom. (2021), 10.34133/2021/9846158 Google Scholar Everingham,
    2008 Everingham, M., 2008. The PASCAL visual object classes challenge 2008 (VOC2008)
    results. <http://www.pascal-network.org/challenges/VOC/voc2008/year= workshop/index.html>.
    Google Scholar Laine and Aila, 2016 Laine, S., Aila, T., 2016. Temporal ensembling
    for semi-supervised learning. International Conference on Learning Representations.
    2016. Google Scholar Lawal, 2021 M.O. Lawal Tomato detection based on modified
    YOLOv3 framework Sci. Rep., 11 (1) (2021), p. 1447, 10.1038/s41598-021-81216-5
    View in ScopusGoogle Scholar Li et al., 2022 G. Li, X. Li, Y. Wang, Y. Wu, D.
    Liang, S. Zhang Pseco: Pseudo labeling and consistency training for semi-supervised
    object detection European Conference on Computer Vision, Springer (2022), 10.1007/978-3-031-20077-9_27
    Google Scholar Lin et al., 2014 Lin, T.-Y., Maire, M., Belongie, S., Hays, J.,
    Perona, P., Ramanan, D., Dollár, P., Zitnick, C.L., 2014. Microsoft coco: Common
    objects in context. Computer Vision–ECCV 2014: 13th European Conference, Zurich,
    Switzerland, September 6-12, 2014, Proceedings, Part V 13, Springer. https://doi.org/10.1007/978-3-319-10602-1_48.
    Google Scholar Lin et al., 2017 T.-Y. Lin, P. Goyal, R. Girshick, K. He, P. Dollár
    Focal loss for dense object detection Proceedings of the IEEE International Conference
    on Computer Vision (2017) Google Scholar Liu et al., 2021b Z. Liu, Y. Lin, Y.
    Cao, H. Hu, Y. Wei, Z. Zhang, S. Lin, B. Guo Swin transformer: hierarchical vision
    transformer using shifted windows Proceedings of the IEEE/CVF International Conference
    on Computer Vision (2021) Google Scholar Liu et al., 2021a Y.-C. Liu, C.-Y. Ma,
    Z. He, C.-W. Kuo, K. Chen, P. Zhang, B. Wu, Z. Kira, P. Vajda Unbiased teacher
    for semi-supervised object detection International Conference on Learning Representations
    (2021) Google Scholar Liu et al., 2022 Z. Liu, H. Mao, C.-Y. Wu, C. Feichtenhofer,
    T. Darrell, S. Xie A convnet for the 2020s Proceedings of the IEEE/CVF Conference
    on Computer Vision and Pattern Recognition (2022) Google Scholar Liu and Wang,
    2020 J. Liu, X. Wang Tomato diseases and pests detection based on improved Yolo
    V3 convolutional neural network Front. Plant Sci., 11 (2020), p. 898, 10.3389/fpls.2020.00898
    View in ScopusGoogle Scholar Lv et al., 2023 Lv, W., Xu, S., Zhao, Y., Wang, G.,
    Wei, J., Cui, C., Du, Y., Dang, Q., Liu, Y., 2023. Detrs beat yolos on real-time
    object detection. arXiv preprint arXiv:2304.08069. https://doi.org/10.48550/arXiv.2304.08069.
    Google Scholar Ouyang, 2023 Ouyang, H., 2023. DEYOv3: DETR with YOLO for Real-time
    Object Detection. arXiv preprint arXiv:2309.11851. https://doi.org/10.48550/arXiv.2309.11851.
    Google Scholar Qiang et al., 2022 Z. Qiang, J. Shi, F. Shi Phenotype tracking
    of leafy greens based on weakly supervised instance segmentation and data association
    Agronomy, 12 (7) (2022), p. 1567, 10.3390/agronomy12071567 View in ScopusGoogle
    Scholar Ren et al., 2015 S. Ren, K. He, R. Girshick, J. Sun Faster r-cnn: Towards
    real-time object detection with region proposal networks IEEE Trans. Pattern Anal.
    Mach. Intell., 39 (06) (2015), 10.1109/TPAMI.2016.2577031 Google Scholar Roy and
    Bhaduri, 2022 A.M. Roy, J. Bhaduri Real-time growth stage detection model for
    high degree of occultation using DenseNet-fused YOLOv4 Comput. Electron. Agric.,
    193 (2022), Article 106694, 10.1016/j.compag.2022.106694 View PDFView articleView
    in ScopusGoogle Scholar Roy and Bhaduri, 2023 A.M. Roy, J. Bhaduri DenseSPH-YOLOv5:
    An automated damage detection model based on DenseNet and Swin-Transformer prediction
    head-enabled YOLOv5 with attention mechanism Adv. Eng. Inf., 56 (2023), Article
    102007, 10.1016/j.aei.2023.102007 View PDFView articleView in ScopusGoogle Scholar
    Shaikh et al., 2022 T.A. Shaikh, T. Rasool, F.R. Lone Towards leveraging the role
    of machine learning and artificial intelligence in precision agriculture and smart
    farming Comput. Electron. Agric., 198 (2022), Article 107119, 10.1016/j.compag.2022.107119
    Google Scholar Shi et al., 2023 J. Shi, F. Shi, X. Huang Prediction of maturity
    date of leafy greens based on causal inference and convolutional neural network
    Agriculture, 13 (2) (2023), p. 403, 10.3390/agriculture13020403 Google Scholar
    Sohn et al., 2020 K. Sohn, D. Berthelot, N. Carlini, Z. Zhang, H. Zhang, C.A.
    Raffel, E.D. Cubuk, A. Kurakin, C.-L. Li Fixmatch: Simplifying semi-supervised
    learning with consistency and confidence Adv. Neural Inf. Proces. Syst., 33 (2020),
    pp. 596-608 Google Scholar Tarvainen and Valpola, 2017 A. Tarvainen, H. Valpola
    Mean teachers are better role models: Weight-averaged consistency targets improve
    semi-supervised deep learning results Advances in Neural Information Processing
    Systems (2017), p. 30 Google Scholar Tseng et al., 2023 G. Tseng, K. Sinkovics,
    T. Watsham, D. Rolnick, T.C. Walters Semi-supervised object detection for agriculture
    2nd AAAI Workshop on AI for Agriculture and Food Systems (2023) Google Scholar
    Xie et al., 2020 Q. Xie, Z. Dai, E. Hovy, T. Luong, Q. Le Unsupervised data augmentation
    for consistency training Adv. Neural Inf. Proces. Syst., 33 (2020), pp. 6256-6268
    CrossRefGoogle Scholar Xu et al., 2021 M. Xu, Z. Zhang, H. Hu, J. Wang, L. Wang,
    F. Wei, X. Bai, Z. Liu End-to-end semi-supervised object detection with soft teacher
    Proceedings of the IEEE/CVF International Conference on Computer Vision (2021)
    Google Scholar Yang et al., 2021 X. Yang, L. Shu, J. Chen, M.A. Ferrag, J. Wu,
    E. Nurellari, K. Huang A survey on smart agriculture: Development modes, technologies,
    and security and privacy challenges IEEE/CAA J. Autom. Sin., 8 (2) (2021), pp.
    273-302, 10.1109/JAS.2020.1003536 View in ScopusGoogle Scholar Yilmaz and Aslam,
    2006 E. Yilmaz, J.A. Aslam Estimating average precision with incomplete and imperfect
    judgments Proceedings of the 15th ACM International Conference on Information
    and Knowledge Management (2006), 10.1145/1183614.1183633 Google Scholar Zhao and
    Shi, 2022 R. Zhao, F. Shi A novel strategy for pest disease detection of Brassica
    chinensis based on UAV imagery and deep learning Int. J. Remote Sens., 43 (19–24)
    (2022), pp. 7083-7103, 10.1080/01431161.2022.2155082 View in ScopusGoogle Scholar
    Zhou et al., 2022 H. Zhou, Z. Ge, S. Liu, W. Mao, Z. Li, H. Yu, J. Sun Dense teacher:
    dense pseudo-labels for semi-supervised object detection European Conference on
    Computer Vision, Springer (2022), 10.1007/978-3-031-20077-9_3 Google Scholar Zhou
    et al., 2021a J. Zhou, J. Li, C. Wang, H. Wu, C. Zhao, Q. Wang A vegetable disease
    recognition model for complex background based on region proposal and progressive
    learning Comput. Electron. Agric., 184 (2021), Article 106101, 10.1016/j.compag.2021.106101
    View PDFView articleView in ScopusGoogle Scholar Zhou et al., 2021b Q. Zhou, C.
    Yu, Z. Wang, Q. Qian, H. Li Instant-teaching: An end-to-end semi-supervised object
    detection framework Proceedings of the IEEE/CVF Conference on Computer Vision
    and Pattern Recognition (2021) Google Scholar Zhu et al., 2020 Zhu, X., Su, W.,
    Lu, L., Li, B., Wang, X., Dai, J., 2020. Deformable detr: Deformable transformers
    for end-to-end object detection. International Conference on Learning Representations.
    Google Scholar Cited by (0) View Abstract © 2024 Elsevier B.V. All rights reserved.
    Part of special issue Sensing, Automation, and Robotics for Sustainability of
    Specialty Crops Edited by Dr. Azlan Zahid (Texas A&M University Department of
    Biological and Agricultural Engineering, College Station, Texas, United States
    of America), Dr. Long He (The Pennsylvania State University Department of Agricultural
    and Biological Engineering, University Park, Pennsylvania, United States of America),
    Dr. Yuzhen Lu (Michigan State University Department of Biosystems and Agricultural
    Engineering, East Lansing, Michigan, United States of America), Dr. Chang Chen
    (Cornell University, Ithaca, New York, United States of America) View special
    issue Recommended articles Quantifying the economic and animal welfare trade-offs
    of classification models in precision livestock farming for sub-optimal mobility
    management Computers and Electronics in Agriculture, Volume 219, 2024, Article
    108767 Francis Edwardes, …, Henk Hogeveen View PDF Early detection of wilt in
    Cajanus cajan using satellite hyperspectral images: Development and validation
    of disease-specific spectral index with integrated methodology Computers and Electronics
    in Agriculture, Volume 219, 2024, Article 108784 Amitava Dutta, …, Shilpi Sharma
    View PDF Design of citrus peel defect and fruit morphology detection method based
    on machine vision Computers and Electronics in Agriculture, Volume 219, 2024,
    Article 108721 Jianqiang Lu, …, Haoxuan Luo View PDF Show 3 more articles About
    ScienceDirect Remote access Shopping cart Advertise Contact and support Terms
    and conditions Privacy policy Cookies are used by this site. Cookie settings |
    Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A DETR-like detector-based semi-supervised object detection method for Brassica
    Chinensis growth monitoring
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Samara M.A.
  - Bennis I.
  - Abouaissa A.
  - Lorenz P.
  citation_count: '0'
  description: Wireless Sensor Networks (WSNs) play a critical role in the Internet
    of Things by collecting information for real-world applications such as healthcare,
    agriculture, and smart cities. These networks consist of low-resource sensors
    that produce streaming data requiring online processing. However, since data outliers
    can occur, it’s important to identify and classify them as errors or events using
    outlier detection and classification techniques. In this paper, we propose a new
    and enhanced approach for online outlier detection and classification in WSNs.
    Our approach is titled SA-O2DCA for Seasonal Adapted Online Outlier Detection
    and Classification Approach. SA-O2DCA, combines the benefits of the K-means algorithm
    for clustering, the Iforest algorithm for outlier detection and the Newton interpolation
    to classify the outliers. We evaluate our approach against other works in literature
    using multivariate datasets. The simulation results, which encompass the assessment
    of our proposed approach using a combination of synthetic and real-life multivariate
    datasets, reveal that SA-O2DCA is stable with fewer training models number and
    outperforms other works on various metrics, including Detection Rate, False Alarm
    Rate, and Accuracy Rate. Furthermore, our enhanced approach is suitable for working
    with seasonal real-life applications as it can dynamically change the Training
    Model at the end of each season period.
  doi: 10.1007/s10922-024-09801-3
  full_citation: '>'
  full_text: '>

    "Your privacy, your choice We use essential cookies to make sure the site can
    function. We also use optional cookies for advertising, personalisation of content,
    usage analysis, and social media. By accepting optional cookies, you consent to
    the processing of your personal data - including transfers to third parties. Some
    third parties are outside of the European Economic Area, with varying standards
    of data protection. See our privacy policy for more information on the use of
    your personal data. Manage preferences for further information and to change your
    choices. Accept all cookies Skip to main content Log in Find a journal Publish
    with us Track your research Search Cart Home Journal of Network and Systems Management
    Article SA-O2DCA: Seasonal Adapted Online Outlier Detection and Classification
    Approach for WSN Published: 04 March 2024 Volume 32, article number 31, (2024)
    Cite this article Download PDF Access provided by University of Nebraska-Lincoln
    Journal of Network and Systems Management Aims and scope Submit manuscript Mustafa
    Al Samara, Ismail Bennis, Abdelhafid Abouaissa & Pascal Lorenz  74 Accesses Explore
    all metrics Abstract Wireless Sensor Networks (WSNs) play a critical role in the
    Internet of Things by collecting information for real-world applications such
    as healthcare, agriculture, and smart cities. These networks consist of low-resource
    sensors that produce streaming data requiring online processing. However, since
    data outliers can occur, it’s important to identify and classify them as errors
    or events using outlier detection and classification techniques. In this paper,
    we propose a new and enhanced approach for online outlier detection and classification
    in WSNs. Our approach is titled SA-O2DCA for Seasonal Adapted Online Outlier Detection
    and Classification Approach. SA-O2DCA, combines the benefits of the K-means algorithm
    for clustering, the Iforest algorithm for outlier detection and the Newton interpolation
    to classify the outliers. We evaluate our approach against other works in literature
    using multivariate datasets. The simulation results, which encompass the assessment
    of our proposed approach using a combination of synthetic and real-life multivariate
    datasets, reveal that SA-O2DCA is stable with fewer training models number and
    outperforms other works on various metrics, including Detection Rate, False Alarm
    Rate, and Accuracy Rate. Furthermore, our enhanced approach is suitable for working
    with seasonal real-life applications as it can dynamically change the Training
    Model at the end of each season period. Similar content being viewed by others
    Wireless Sensor Networks Anomaly Detection Using Machine Learning: A Survey Chapter
    © 2024 Anomaly Detection in Low-Cost Sensors in Agricultural Applications Based
    on Time Series with Seasonal Variation Chapter © 2023 Distributed and Efficient
    One-Class Outliers Detection Classifier in Wireless Sensors Networks Chapter ©
    2015 1 Introduction Wireless sensor networks (WSNs) and the Internet of Things
    (IoT) are widely adopted for various real-world applications, including medical,
    military, and environment monitoring. These systems have resource-limited sensors
    that collect environmental data, such as temperature and humidity. However, due
    to harsh deployment environments and the inherent limitations of sensors, WSNs
    and IoT systems are vulnerable to various forms of abnormal behaviour. Such anomalies
    can severely impact the accuracy and reliability of the collected data, ultimately
    affecting the applications dependent on them. In WSNs, an outlier refers to a
    data point that deviates significantly from the expected pattern of collected
    data [1]. These outliers can originate from various sources, including errors
    and noise, events, and malicious attacks, as described in [2]. Outlier detection
    approaches can be categorized based on different criteria, such as whether they
    target outliers or events, whether they operate online or offline, and whether
    they are supervised or unsupervised, distributed or centralized [2]. In our research,
    we focus specifically on online outlier detection. Therefore, to mitigate such
    issues, outlier detection techniques have been developed for IoT and WSN applications
    to monitor abnormal behavior and identify and classify outliers in real-time.
    This is essential in applications where timely decision-making is crucial, such
    as the following use cases: Healthcare monitoring: In healthcare applications,
    WSNs are used to monitor patients’ vital signs, such as heart rate, blood pressure,
    and temperature. Detecting outliers in real-time can help identify critical events
    or errors in the collected data, enabling healthcare professionals to take immediate
    action. Industrial monitoring: WSNs are deployed in industrial settings to monitor
    various parameters like temperature, pressure, and vibration. Outlier detection
    can help identify anomalies that may indicate equipment malfunction or potential
    risks, allowing for proactive maintenance and preventing costly downtime. Smart
    cities: WSNs play a crucial role in smart city applications, monitoring environmental
    factors, traffic conditions, and energy consumption. Real-time outlier detection
    can help identify abnormal patterns or events, such as pollution spikes or traffic
    congestion, enabling efficient management and resource allocation. Our work is
    primarily motivated by considering the real-time Decision-making in such applications.
    Offline detection techniques are insufficient as they cannot process streaming
    data in real-time. Therefore, there is a need for an approach that can detect
    and classify outliers online, ensuring data quality and enabling timely decision-making.
    Secondly, while various solutions have been proposed for online outlier detection,
    they cannot often consider the correlations between sensor data vectors and provide
    a real-time classification of errors and events. Including correlation information
    can help identify the origin of outliers, distinguishing between erroneous data
    that can be discarded and actual events in the physical world that require decision-making.
    The proposed SA-O\\(^2\\)DCA approach aims to address this limitation by considering
    the spatial-temporal relationships among sensor data vectors. Thirdly, WSNs collect
    data from multiple sensors, resulting in multivariate data. Many existing approaches
    struggle to handle such data effectively. The SA-O\\(^2\\)DCA approach addresses
    the specific requirements of the previous use cases by providing online outlier
    detection and classification capabilities, considering correlations between different
    multivariate data attributes, and enabling dynamic adaptation to seasonal variations
    in the data. Some existing works address these challenges but still operate offline
    or need more enhancements. In this paper, we introduce an enhanced approach of
    our previous work O\\(^2\\)DCA [3], for online clustering, outlier detection,
    and classification in WSNs. Our new approach, named SA-O\\(^2\\)DCA, consists
    of two main systems: the CDC (Clustering, Detection, Classification) system, which
    comprises two key phases—training and online—and the monitoring system. For the
    training phase of the CDC system, we build an initial \\(TM_{0}\\) or a set of
    seasonal training models STM = \\(\\{TM1, TM2,... TMs\\}\\) in an offline manner.
    The goal of \\(TM_{0}\\) is to cluster an initial set of data vectors and detect
    and classify the outliers using different input parameters (cluster radius w and
    the number of nearest neighbours K) to reach the highest Detection Rate (DR) and
    the False Alarm Rate (FAR) performance metrics. This \\(TM_{0}\\) will be used
    later in the online phase to cluster the new coming streaming real-life data vectors.
    Our approach can also able to use a set of seasonal training models and change
    between them dynamically at the end of each season period. Within the CDC system,
    we consider the correlation of sensor data in both time and space. We aim to identify
    the origin of the outliers, distinguishing between erroneous data that can be
    discarded and actual events in the physical world that require a decision. The
    CDC system will alert the monitoring system for every detected error or event.
    The monitoring system will check the received alerts, process them and send different
    feedback information. To evaluate SA-O\\(^2\\)DCA, we conduct a simulation test,
    where our approach uses the current \\(TM_{0}\\) until the DR performance changes
    and is less than a predefined threshold \\(\\alpha\\). In such case, we build
    a new TM and continue working online. We also conduct another simulation test,
    where our approach uses the first TM in the set STM and can change the TM dynamically
    at the end of each season. Our approach can also change the current TM and build
    a new one if the level of DR is less than a predefined threshold \\(\\alpha _{1}\\)
    or the FAR is greater than \\(\\alpha _{2}\\). Our evaluation focused on the DR
    and FAR performance metrics, specifically in the context of multivariate data.
    Our simulation results, using a combination of synthetic and real-life multivariate
    datasets, show that SA-O\\(^2\\)DCA outperforms not only our previous O\\(^2\\)DCA
    approach but also other approaches from the literature. Additionally, our enhanced
    approach maintains stable performance across a range of \\(\\alpha\\) values even
    with fewer required \\(TM_{s}\\). The main contribution of this paper can be synthesized
    as: we introduce SA-O\\(^2\\)DCA, a novel and advanced approach for online outlier
    detection and classification in WSNs. Our approach utilizes an initial TM that
    is dynamically adjusted based on the characteristics of newly arriving streaming
    data vectors. We also developed our new approach to work with seasonal real-life
    applications where it can change the TM dynamically at the end of each season
    period. Our evaluation involves a comparative analysis of the performance of SA-O\\(^2\\)DCA
    against O\\(^2\\)DCA [3] and two other approaches [4] proposed in the literature.
    We assess the performance of these approaches using several performance metrics,
    including DR, FAR, and ACC. Our methodology considers the spatial-temporal relationships
    among sensors multivariate data vectors to distinguish between erroneous and event-based
    outliers. To the best of our knowledge, our proposed approach, SA-O\\(^2\\)DCA,
    is the first to incorporate adaptive TM changing and dynamic adaptation to seasonal
    data in online outlier detection and classification solutions for WSNs. The subsequent
    sections of this paper are organized as follows: Sect. 2 presents the related
    works concerning online outlier detection in WSNs. Algorithms used in our proposed
    approach and its architecture are presented in Sect. 3. We provide the results
    of our evaluation on both synthetic and real datasets in Sect. 4, where we examine
    various performance metrics. Finally, we conclude the paper in Sect. 5. 2 Related
    Work Online outlier detection refers to identifying and flagging outliers in real-time
    or near real-time as data streams are generated. Such a process is essential for
    several WSN applications, where it is necessary to quickly and accurately identify
    and classify anomalous behaviours to respond to them effectively. On the other
    hand, offline outlier detection is the process of identifying outliers in a dataset
    after it has been collected. This type of outlier detection is commonly employed
    when dealing with massive amounts of data, as it allows for more thorough analysis
    and can provide more accurate results. However, it is unsuitable for applications
    requiring immediate outlier detection and classification. The literature offers
    several approaches for online outlier detection in WSNs. This section discusses
    relevant works in this domain, highlighting their strengths and limitations. In
    [5], a novel approach for outlier identification in WSNs was introduced. The proposed
    method leverages the Density-Based Spatial Clustering of Applications with Noise
    (DBSCAN) algorithm and consists of two main modules. The first module focuses
    on parameter computation, specifically determining the minimum radius threshold
    (\\(\\epsilon\\)) for accepting a cluster. The second module handles class identification
    within a spatial-temporal dataset, enabling the detection of outliers. In [6],
    an approach for identifying outliers and events in wireless sensor networks (WSNs)
    was proposed. This approach utilized the OPTICS clustering algorithm that eliminates
    the need for manual configuration or a predefined number of clusters. The experimental
    results demonstrated that their approach achieved high outlier detection and event
    identification accuracy while maintaining a low rate of false classification between
    errors and events. In [7], the authors developed a new classification model that
    combines deep belief networks with the Online Quarter-Sphere One-Class Support
    Vector Machines (QSOC-SVMs). This model is designed to improve the accuracy and
    efficiency of outlier detection in high-dimensional and large-scale datasets,
    such as those typically gathered by WSNs. Their model uses a sorting method to
    learn the quarter sphere radius during the training phase and then uses this information
    to classify data values as outliers or non-outliers during the unsupervised testing
    phase. In [8], the authors introduced an unsupervised algorithm for real-time
    anomaly detection in continuous data sequences. They utilized the Hierarchical
    Temporal Memory (HTM) algorithm, which is an online sequence memory algorithm
    that can continuously learn and model the spatial-temporal characteristics of
    its inputs. However, HTM does not directly model anomalies or provide an anomaly
    score. To address this issue, the authors computed a measure of prediction error
    based on the HTM network output and used a probabilistic model to calculate the
    likelihood of the system being in an anomalous state. A threshold was then applied
    to this likelihood value to determine whether an anomaly was present. In [9],
    authors proposed an online density-based approach for outlier detection on big
    data. Their approach is based on computing the Local Outlier Factor (LOF) and
    it has two main steps. First, the Grid-Based Partitioning (GBP) algorithm divides
    the data into grids and assigns them to the distributed nodes in the network.
    This allows outlier detection to be performed in parallel, which is essential
    for dealing with large and high-dimensional datasets. Second, the Distributed
    LOF Computing (DLC) algorithm is used to detect density outliers in each grid
    partitions. This algorithm is designed to be efficient and scalable, and it can
    effectively handle high-dimensional data without requiring a large amount of network
    resources. In [10], authors proposed a new timely fog computing outlier detection
    method for IoT systems. Their method is designed to overcome the high latency
    of centralised approaches and the high energy consumption of distributed ones.
    Their proposed method sends all data values directly to the fog nodes for outlier
    detection. This eliminates the need for multi-hop transmission and allows efficient
    and low-latency outlier detection. The authors proposed two algorithms for outlier
    detection: the Ellipsoidal Neighbourhood Outlier Factor (ENOF), which is based
    on the LOF algorithm, and the Hyper-ellipsoidal clustering algorithm (HyCARCE).
    The ENOF algorithm is designed for high efficiency and low computation cost, while
    the HyCARCE algorithm solves the problem of prior knowledge of cluster parameters
    by automatically choosing them. Together, these algorithms provide a flexible
    and effective approach for outlier detection in IoT systems. In [11], the authors
    proposed a one-time framework for detecting outliers with a request. Their framework
    consists of two primary phases: the offline phase and the online phase. In the
    offline phase, they employ the K-Medoids algorithm to cluster the data points
    within the dataset. They also use a density-based outlier factor to identify the
    normal and outlier clusters. In the online phase, they use the clustering information
    and the detected outliers to detect the newly arrived outliers on the fly based
    on specific requests. This allows the framework to quickly and accurately detect
    outliers in the dataset. In [12], the authors proposed an Optimised Adaptive and
    Sliding Windowing (OASW) framework for anomaly detection in IoT data streams.
    Their framework is designed to adapt to the changing patterns of online IoT data
    streams, using the fast and high-performance LightGBM machine learning model and
    the drift adaptation concept. The OASW framework is a combination of sliding and
    adaptive window-based methods and performance-based methods. It is designed to
    efficiently and effectively detect anomalies in IoT data streams, and it consists
    of two stages: the first stage involves offline learning to obtain an initial
    trained model, while the second stage focuses on online training to identify IoT
    attacks in real-time data streams. In [13], the authors proposed a fully distributed
    General Anomaly Detection (GAD) scheme for real-time anomaly detection. This scheme
    uses the principles of graph theory and takes advantage of the spatial-temporal
    correlations of processes to achieve fast and accurate anomaly detection. However,
    the GAD scheme cannot detect anomalous events that consist of a series of related
    unusual behaviours that reflect changes in those behaviours. This type of anomaly,
    which may be particularly interesting in some applications, cannot be detected
    by the GAD scheme. In [14], the authors proposed a Performance Weighted Probability
    Averaging Ensemble (PWPAE) framework for detecting anomalies in data streams generated
    by IoT devices. Their framework is designed to be drift adaptive, meaning that
    it can adapt to changes in the data distribution over time, which is a common
    challenge in the field of data stream mining. It combines two drift detection
    methods, ADaptive WINdowing (ADWIN) and Drift Detection Method (DDM), with two
    drift adaptation methods token from literature to construct base classifiers,
    which are then combined into a single ensemble model using a weighting scheme
    based on their real-time performance. They prove that their framework achieves
    high accuracy in detecting IoT attacks. In [15], the authors have employed a modified
    Hampel Identifier (HI) algorithm for real-time detection of temporal outliers
    and have merged it with a Gaussian process (GP) model and a graph-based outlier
    detection technique to enhance the algorithm’s ability to detect spatial outliers.
    The GP model enables the algorithm to consider the spatial relationships among
    data points, while the graph-based outlier detection technique identifies outliers
    that may not be apparent when considering individual data points independently.
    The proposed approach effectively detects temporal and spatial outliers in real-time,
    with a high accuracy identification rate and low resource requirements. In [16],
    the authors have suggested implementing real-time anomaly detection in telemetry
    data using streaming machine learning techniques. They have utilized the DenStream
    method, an unsupervised clustering technique, to process data as it is being generated
    in real-time instead of relying on offline processing of vast amounts of data.
    They have also conducted a comparative analysis of the performance of DenStream
    with other online and offline algorithms such as DBScan, Local Outlier Factor
    (LOF), ExactSTORM, Continuous Outlier Detection (COD), and Robust Random Cut Forest
    (RRCF). The experimental results have shown that DenStream performs as well as
    RRCF, which is the best-performing algorithm, in terms of detection outcomes,
    and is significantly faster than the other approaches, particularly RRCF. In [3],
    the authors proposed a centralized approach, named O\\(^2\\)DCA, for online outlier
    detection and classification in WSN. O\\(^2\\)DCA considers the spatial-temporal
    relationships between sensor data vectors and their neighbouring sensor nodes
    to distinguish between errors caused by sensor malfunctions and errors caused
    by events. The approach combines the distributed Fixed Width Clustering (FWC)
    and Inter Cluster Distance (ICD) algorithms for clustering and outlier detection,
    respectively. Additionally, the Inverse Distance Weighting (IDW) method is used
    for classification. Simulation results showed that the proposed approach outperforms
    the offline approach and is suitable for real-life applications where the DR performance
    metric remains stable and better. In [17], the authors introduce a novel approach
    to enhance the security of wireless sensor WSNs by proposing a new Intrusion Detection
    System (IDS) based on a deep learning model. Emphasizing optimal cluster head
    (CH) selection among sensor nodes, the method considers energy levels, delay,
    and distance. The innovative Self-Improved Sea Lion Optimization (SI-SLnO) model
    is introduced for optimal CH selection. The paper advocates a multidimensional
    two-tier hierarchical trust model, evaluating content trust, honesty trust, and
    interactive trust for both CH and nodes. Intrusion detection is performed using
    a deep learning-based approach with an optimized neural network trained by the
    SI-SLnO algorithm. The paper concludes by evaluating the proposed approach against
    existing techniques, showcasing its potential for improving WSN security. In [18],
    the authors address in their survey the challenges posed by mobile nodes in the
    context of the IoT. With IoT nodes generating substantial data that requires seamless
    indexing for storage and processing, the mobility of nodes introduces complexities.
    Existing indexing techniques for mobile environments are deemed inadequate due
    to data transmission from diverse locations over varying time periods and the
    randomness of sensor movement. The survey aims to elucidate the relationship between
    activities of mobile sensors in IoT, focusing on data transfer, collection, and
    the effectiveness of indexing techniques. By exploring meta-heuristic, spatial-temporal
    indexing, and prediction model approaches, the review investigates the challenges
    affecting indexing effectiveness in mobile IoT nodes. The analysis delves into
    features, limitations, and requirements, providing insights into the behavior
    of mobile environments. The survey concludes by highlighting overlooked or unknown
    open issues in the domain. In [19], the authors propose a distributed algorithm
    for detecting dynamic environmental phenomena using mobile WSNs. The algorithm
    assumes there is no centralized server to collect and aggregate sensor data. Instead,
    the sensors self-organize into groups, with a few sensors elected as group heads
    (GHs). Each group of sensors detects phenomena locally, and the GHs communicate
    the detected information among themselves to detect global phenomena. The paper
    also introduces two GH election algorithms and an optimization technique to reduce
    energy costs. The proposed algorithms and methods are validated through experiments
    using the NS2 network simulator. The paper contributes a distributed algorithm,
    GH election algorithms, and an optimization technique to reduce energy costs in
    detecting environmental phenomena in mobile WSNs. In summary, we can say that
    several online outlier detection approaches are used in literature in WSNs and
    IoT. However, most of these works suffer from one or many of the following limitations:
    According to [5,6,7, 9, 10], and [11], the first limitation of their works is
    the lack of emphasis on exploring the correlation between sensors’ data vectors
    for outlier and event identification in the environment. Except for the O\\(^2\\)DCA
    work [3], which we reference for comparison. Although [8, 12, 13] have examined
    the correlation, they did not use its properties to differentiate between errors
    and events. The two baseline approaches proposed in the literature [5] and [6]
    are also referenced for comparison with our new approach. The selected approaches
    have been recognized as commonly used techniques in the literature, where they
    are online and manipulate the three different phases. Additionally, they have
    only detected one sensor outlier and only some events were detected without exploring
    correlations. The dataset used in that study was univariate and did not accurately
    represent the features of real-life WSNs applications. Another limitation highlighted
    in previous research, such as [9] and [10], is that their works can only provide
    an outlier score and may not detect all outliers promptly or distinguish between
    errors and events. Furthermore, the approach proposed in [11] only detects outliers
    upon request. A third limitation observed in previous studies, such as [11] and
    [12], is the lack of sufficient feedback information to facilitate adaptive changes
    in the TM of the online system. Except for the O\\(^2\\)DCA work [3], which we
    reference for comparison. In the case of [13], the authors have examined the spatial-temporal
    correlations and differentiated between novelties and anomalies using a univariate
    dataset without providing feedback information to the online system. One potential
    drawback in our previous O\\(^2\\)DCA work [3] is the inability to dynamically
    adapt the TM to the streaming data and the use of the FWC clustering algorithm
    which forms fixed-size clusters using a fixed-width parameter w. However, the
    algorithm’s performance is sensitive to the selection of this parameter. If the
    chosen value of w is too small, the algorithm may generate an excessive number
    of small clusters, while if it is too large, it may produce too few large clusters.
    Thus, selecting an appropriate value of w is crucial for the FWC algorithm to
    operate effectively. However, determining the appropriate value of w can be challenging
    in practical scenarios, particularly for datasets with high dimensionality or
    clusters with varying densities or shapes. The K-means used in our new SA-O\\(^2\\)DCA
    approach is a centralised algorithm, different from the distributed FWC used in
    our previous O\\(^2\\)DCA work. The shortcomings of previous studies have motivated
    us to develop a new online approach that utilizes a multivariate dataset for clustering,
    outlier detection, and classification of errors and events over time. This approach
    exploits the correlation properties of sensor data vectors and employs adaptive
    processing through various TM. We have used both real-life and seasonal real-life
    WSN streaming data to evaluate our approach. 3 SA-O2DCA Architecture The SA-O\\(^2\\)DCA
    consists of two main systems like O\\(^2\\)DCA: the CDC (Clustering, Detection,
    Classification) system with two main phases (training and online) and the monitoring
    system. Figure 1 gives a detailed flow chart of our CDC and monitoring systems.
    In what follows, we describe the two phases of the CDC and monitoring systems.
    Fig. 1 A detailed flow chart of our SA-O\\(^2\\)DCA approach Full size image 3.1
    The CDC System The first phase of the CDC system involves building a set of offline
    seasonal training models STM. These models aim to cluster an initial set of seasonal
    data vectors and detect and classify the outliers using different input parameters,
    like the number of nearest neighbours K and the optimal clusters number N, that
    give the highest DR and the lowest FAR performance metrics. For that, we use the
    K-means clustering algorithm to group data vectors of each sensor in a centralised
    manner into clusters, where each data vector will be in a cluster with a radius
    w. After that, the base station executes the Iforest outlier detection method
    to identify the existing outliers. Finally, the classification of detected outliers
    into errors and relevant events is performed using the Newton interpolation and
    KNN methods. As a result, we have a set of training model STM where each TM in
    this set corresponds to a set of clusters C, so for the STM: STM = \\(\\{TM1,
    TM2,... TMs\\}\\) set we have another set TC: TC = \\(\\{C1, C2,... Cs\\}\\),
    a determined value of K and the optimal clusters’ number N which is calculated
    automatically for each TM in STM, that we can use in the online phase. The second
    phase of the CDC system is the online phase, where we use the first TM in the
    set STM to cluster the new streaming data vectors. The DR and the FAR performance
    metrics used to evaluate our approach are defined in (5 and 6) respectively. In
    this phase, the base station executes our new online outlier detection and classification
    Algorithm 1 using the first TM in the set STM. We start to work in an online manner,
    where we calculate the Euclidean distance (1) between the current newly arrived
    real-life streaming data vector and each cluster existing in the first C in the
    set TC. After that, we add this data vector to the nearest cluster based on the
    calculated Euclidean distance. We consider this data vector an outlier if we cannot
    add it to any existing cluster. $$\\begin{aligned} d(x,y)= \\sqrt{(y_{1}-x_{1})^2+(y_{2}-x_{2})^2}
    \\end{aligned}$$ (1) Our online system continues to receive the coming streaming
    data vectors and detects the existing outliers. We also differentiate between
    events and errors. During the online phase, we can send two different alerts to
    the monitoring system: Alert for an outlier data vector founded and classified
    as an error. Alert for an outlier data vector founded and classified as an event.
    Our approach uses the K-means clustering algorithm [20], a centralized and non-parametric
    approach to partition data into clusters based on their similarity. This algorithm
    is widely used in data analysis and has applications in various fields, such as
    outlier detection, image processing, bioinformatics, and social network analysis.
    Moreover, we employ the Iforest method [21] to identify the outliers, which is
    a technique for anomaly detection based on binary trees. Additionally, for classification,
    we use the Newton interpolation method [22] combined with the K Nearest Neighbours
    (KNN) method to study the correlation between sensors data vectors and classify
    detected outliers into errors and events using multivariate real-life and synthetic
    datasets. These algorithms have not been used in our previous O\\(^2\\)DCA approach
    [3], and we showed their effectiveness in this study. Our novel approach aims
    to address the limitations of existing methods in literature by considering correlations
    between sensor data vectors, providing real-time classification of errors and
    events, handling multivariate data, and dynamically adapting the Training Model
    (TM) based on the characteristics of the streaming online data. The choice of
    K-means, Iforest and Newton algorithms was motivated by their performance in dealing
    with multivariate online streaming data. The paper highlights the originality
    and unique contributions of the proposed solution in combining these algorithms
    to achieve effective online outlier detection and classification approach in WSNs.
    3.1.1 K-Means Clustering Algorithm K-means clustering is a technique to partition
    a set of n data vectors into k clusters. Each cluster is represented by its centroid,
    which is the mean of all the data vectors in that cluster. Each data vector has
    m attributes. The K-means algorithm aims to minimize the sum of squared distances
    between each data vector and its closest centroid. Let X = {\\(x_{1}\\), \\(x_{2}\\),...,
    \\(x_{n}\\)} be a set of n data vectors, where each data vector \\(x_{i}\\) has
    m attributes. The K-means algorithm can be described mathematically as follows:
    1. Initialize k cluster centroids randomly from X: C = {\\(c_{1}\\), \\(c_{2}\\),...,
    \\(c_{k}\\)} \\(\\subset\\) X. 2. Assign each data vector \\(x_{i}\\) to the closest
    centroid \\(c_{j}\\), where: j = argmin\\(||\\) \\(x_{i}\\)-\\(c_{j}\\) \\(||\\)
    \\(^2\\). ArgMin is a mathematical function that returns the argument (i.e., the
    input value) that minimizes a given function. 3. Recalculate the centroid of each
    cluster as the mean of all the data vectors assigned to it: $$\\begin{aligned}
    c_{j} = (1/|S_{j}|) * \\sum x_{i} \\in S_{j} \\end{aligned}$$ (2) where \\(S_{j}\\)
    is the set of data vectors assigned to cluster j. 4. Repeat steps 2 and 3 until
    the centroids no longer change or until a maximum number of iterations is reached.
    3.1.2 Iforest Outlier Detection Method Iforest is a Machine Learning (ML) algorithm
    used for anomaly detection. It operates by randomly partitioning the data space
    and isolating anomalies that are more easily separable than normal data vectors.
    The Iforest algorithm works by constructing a collection of isolation trees, each
    of which is a binary tree that recursively partitions the data into two subsets
    based on randomly selected features and split vectors. Anomalies are expected
    to be isolated in small, highly partitioned data space regions, leading to shorter
    average path lengths from the root to the leaf nodes of the isolation trees. The
    anomaly score of a data vector is calculated as the inverse of the average path
    length, which measures the degree of isolation of the vector. The Iforest algorithm
    has several advantages over other anomaly detection methods, including its ability
    to handle high-dimensional data, its efficiency in detecting anomalies, and its
    robustness to outliers and noise. The Iforest algorithm has been applied to various
    applications, such as network intrusion detection, fraud detection, and anomaly
    detection in time-series data. The algorithm can be described mathematically as
    follows: Given a dataset X = {\\(x_{1}\\), \\(x_{2}\\),..., \\(x_{n}\\)} with
    n data vectors where each \\(x_{i}\\) is a vector of m attributes, the Isolation
    Forest algorithm constructs a collection of T binary trees, each of which is built
    recursively by randomly selecting a feature j from the d features and a split
    vector p between the minimum and maximum vector of feature j in a sub sample of
    n data vectors. The data vectors are partitioned into two subsets based on whether
    their feature j is less than or greater than p, and the process is repeated until
    each leaf node contains only one data vector or the depth of the tree exceeds
    a predefined isolation depth c. The anomaly score \\(s_{i}\\) of a data vector
    \\(x_{i}\\) is calculated as the inverse of the average path length from the root
    to the leaf nodes of the T trees that \\(x_{i}\\) traverses, normalized by a factor
    of c: $$\\begin{aligned} s_{i} = 2^{\\frac{-E(h_{i})}{c}} \\end{aligned}$$ (3)
    where: E(\\(h_{i}\\)) is the average path length from the root to the leaf nodes
    of the T trees that \\(x_{i}\\) traverses, and cis the isolation depth parameter.
    Anomalies are expected to have shorter average path lengths and higher anomaly
    scores than normal data vectors. The threshold vector for anomaly detection can
    be set based on the desired DR or FAR. 3.1.3 Newton Outlier Classification Method
    Newton’s interpolation method is a polynomial technique used to approximate a
    function using a set of data vectors. The polynomial is constructed by using divided
    differences of the function vectors at the data vectors. In our previous work
    [22], we use the Newton interpolation method to examine the correlation between
    neighbouring data vectors in both space and time. This helps us classify detected
    outliers as either errors or events. The Newton forward difference method is used
    to estimate the value of a data vector (y)=DV of a node \\(node_i\\) at a specific
    location (x) using a set of neighbouring independent indexes (\\(x_{i}\\)) and
    a set of \\(K+1\\) dependent data Vectors (\\(y_{i}\\) = \\(DV_i\\)). We start
    the process by calculating the KNN to find the K nearest neighbours for all nodes.
    The differences between these dependent data vectors (\\(y_{1}\\) – \\(y_{0}\\),
    \\(y_{2}\\) – \\(y_{1}\\),...,\\(y_{K}\\) – \\(y_{K-1}\\)) are referred to as
    the first forward differences: (\\(\\Delta\\) \\(y_0\\), \\(\\Delta\\) \\(y_1\\),...,\\(\\Delta\\)
    \\(y_{K-1}\\)). Then, we calculate the interpolated data vector \\(N_i\\): $$\\begin{aligned}
    N_i = y_0 + u \\Delta y_0 + \\frac{u(u-1)}{2!} \\Delta ^{2} y_0+...+ \\frac{u(u-1)(u-2)(u-K+1)}{K!}\\Delta
    ^{K} y_0 \\end{aligned}$$ (4) where: u = \\(x_i\\) - \\(x_0\\) and \\(x_i\\),
    \\(x_0\\) are the indexes of the \\(node_i\\) and its first neighbour. The neighbours’
    indexes of \\(node_i\\) is the list [\\(x_0, x_1,..., x_{K-1}\\)]. The neighbours’
    data vectors of \\(node_i\\) is the list [\\(DV_0, DV_1,..., DV_{K-1}\\)]. After
    that, we calculate the difference between the interpolated data vector calculated
    in Eq. 4\\(N_i\\) and the actual data vector \\(DV_i\\). If the difference is
    greater than \\(\\epsilon\\), we have an error data vector. Elsewhere we have
    an event data vector. 3.2 The Monitoring System The monitoring system will check
    the received alerts from the online system and compare them with the corresponding
    control data. These control data are stored in the monitoring system and contain
    information about the validity of the received alerts if they are true or false.
    The control data lets the adaptive processing unit generate three different feedback
    information that will be sent back to the CDC system: TPA: True Positive Alert
    for an outlier data vector received and classified rightly as an error or event.
    TNA: True Negative Alert for an outlier data vector received but classified badly
    as an error or event. FPA: False Positive Alert for an outlier data vector received
    but it is a normal data vector. The monitoring system can send this feedback information
    to the online system. The CDC system stays working online while receiving feedback
    information for a TPA. However, the online system will check the DR and FAR performance
    metrics and verify if it is less than a specific threshold \\(\\alpha\\) when
    the specified time intervals pass or if it receives TNA or FPA feedback information.
    If the DR is less than \\(\\alpha _1\\) or the FAR higher than \\(\\alpha _2\\),
    it builds a new (TM) using the recently stored data vectors (e.g. last 1000 records),
    where they are more suitable for the current situation and so on. Otherwise, the
    CDC system stays working in an online manner. If the DR stays higher than \\(\\alpha
    _{1}\\) or the FAR less than \\(\\alpha _{2}\\), the CDC system stays working
    in an online manner until reaching the end of the first season then it changes
    dynamically to next TM in the set STM. This process is described in the Algorithm
    1. The code of our approach is available at [23]. Algorithm 1 SA-O2DCA algorithm
    Full size image 4 Evaluation and Simulation Results This section presents the
    results of our MATLAB simulations, which are designed to evaluate our approach’s
    performance with multivariate datasets. We provide a detailed description of the
    evaluation scenario and analyze the obtained results. Our simulation assumes a
    hierarchical network structure, where all sensor nodes are accurately synchronized,
    and the observed data vectors conform to the same unknown distribution. Furthermore,
    the nodes are assumed to be deployed in a homogeneous environment. The primary
    objective of detecting outliers in WSNs is to create efficient techniques that
    minimize communication overhead and account for resource limitations of sensor
    nodes, such as memory and battery life. Several performance metrics are employed
    to assess the efficacy of outlier detection and classification techniques, such
    as the DR, which is the percentage of abnormal data values accurately identified
    as outliers as defined in (5), and the FAR, which is the percentage of normal
    data values incorrectly identified as outliers as defined in (6). Another approach
    to evaluate outlier detection methods using the ACC, which is the proportion of
    true detections as defined in (7). We utilize the confusion matrix shown in Table
    1 to establish these performance metrics. We specify four distinct scenarios for
    evaluating the outlier detection phase, which are: True Positive (TP): An outlier
    is inserted, and the algorithm correctly identifies it. False Positive (FP): Nothing
    is inserted, but the algorithm identifies an outlier. True Negative (TN): Nothing
    is inserted, and the algorithm does not identify an outlier. False Negative (FN):
    An outlier is inserted, but the algorithm does not identify it. Table 1 The online
    detection phase confusion matrix Full size table $$\\begin{aligned} DR= & {} TP
    / (TP + FP) \\end{aligned}$$ (5) $$\\begin{aligned} FAR= & {} FP / (FP + TN) \\end{aligned}$$
    (6) $$\\begin{aligned} ACC= & {} (TP+TN) / (TP+TN+FP+FN) \\end{aligned}$$ (7)
    It should be acknowledged that there are alternative methods of evaluating outlier
    detection techniques, such as assessing complexity and computational cost. However,
    our current study does not take these types of evaluations into account. 4.1 Evaluation
    Methodology We create the set STM, and we combine two datasets. The first dataset,
    known as the Real-life DataSet (RDS), is sourced from the Berkeley dataset. It
    consists of 2.3 million readings from 54 sensors deployed in the Intel Berkeley
    Research lab between February 28th and April 5th, 2004 [24]. Each data vector,
    collected every 30 s, contains attributes such as temperature, humidity, light,
    and voltage. For our experiments, we extract 2000 data vectors with temperature
    and humidity attributes to construct each TM in the set. The second dataset is
    a Synthetic DataSet (SDS) created to achieve high detection rate (DR) and low
    false alarm rate (FAR) performance metrics for the RDS. To generate the SDS, we
    use a uniformly random generator to introduce a set of errors and events. The
    SDS comprises 90 outliers, with 60 errors and 30 events. The process of constructing
    each TM in STM involves four key steps. Firstly, we apply the K-means algorithm
    to cluster the RDS and obtain a set of clusters C. The number of clusters is determined
    automatically in advance. Next, we employ the Iforest method to detect outliers
    in the RDS. In the second step, we use the SDS, which consists of three parts:
    temperature with added outliers, humidity with added outliers, and control data,
    to label the data vectors with values (0 for normal, 1 for events, and 2 for errors).
    We then check if each data vector from SDS belongs to any cluster in C. If it
    does, we consider it as normal and add it to the corresponding cluster. Otherwise,
    we identify it as an outlier and output it accordingly. In the third step, we
    classify each outlier data vector as either an error or an event using Newton
    and KNN methods. Finally, in the fourth step, we calculate the DR and FAR performance
    metrics based on the control data of SDS for different numbers of nearest neighbours,
    denoted as K. As a result, we choose the input parameters (K, C) that give the
    highest DR and the lowest FAR. These training models STM will be used in the online
    phase. In addition, we evaluate our CDC system with different values of \\(\\alpha\\),
    which are accepted to stay in the online phase. If the DR and FAR stay over the
    specified threshold \\(\\alpha _{1}\\) and \\(\\alpha _{2}\\), or the CDC system
    did not receive any (TNA, FPA) from the monitoring system, so the CDC system stay
    online and wait until reaching the end of the first season to change the TM dynamically
    and work with TM2 and so on. Otherwise, we need to build a new TM from the recent
    coming data. 4.2 Discussion Results The performance of the offline approach is
    evaluated by computing the DR and FAR performance metrics. These metrics are calculated
    based on a confusion matrix, which is shown in Table 2. Four different cases are
    defined for evaluating the offline classification phase: TP: This refers to the
    situation where the algorithm correctly predicts an event when it is actually
    present. FP: This refers to the situation where the algorithm predicts the occurrence
    of an event when, in reality, no event is present. TN: This occurs when the algorithm
    correctly recognizes the absence of an event and predicts accordingly. FN: This
    occurs when the algorithm fails to predict an event that is present. Table 2 The
    online classification phase confusion matrix Full size table In the first experiment,
    we evaluated SA-O\\(^2\\)DCA in terms of DR, FAR and ACC under varying Signal-to-Noise
    Ratio (SNR) conditions, measured in decibels (dB), as defined in [4]. The SNR
    values considered in their study encompassed a range of (-30 dB, -20 dB, -10 dB,
    0 dB, 10 dB, 20 dB, 30 dB). Each SNR level introduced different magnitudes of
    outliers into the data. Our objective was to examine the performance of the SA-O\\(^2\\)DCA
    approach under different levels of outlier presence in the data. To assess the
    performance, we compared our SA-O\\(^2\\)DCA approach with the O\\(^2\\)DCA approach
    [3], as well as two other online approaches, namely OPTICS-OD and DBSCAN-OD, introduced
    in [4] during the detection phase. We employed a confusion matrix, as depicted
    in Table 1. The results, as shown in Fig. 2, indicated that SA-O\\(^2\\)DCA achieved
    the highest DR across all SNR values, surpassing our previous O\\(^2\\)DCA approach
    and the other two approaches. We also observed that SA-O\\(^2\\)DCA achieved the
    lowest FAR, except in comparison to DBSCAN-OD, where DBSCAN-OD exhibited the lowest
    FAR. Additionally, SA-O\\(^2\\)DCA achieved the highest ACC, except in comparison
    to DBSCAN-OD, where DBSCAN-OD obtained the highest ACC. It is worth noting that
    the FAR and ACC values we obtained were considered reasonable. Conversely, the
    FAR and ACC values of OPTICS-OD and DBSCAN-OD appeared unreliable, as it is not
    plausible to have low DR, very low FAR, and extremely high ACC. Therefore, we
    can assert that our proposed SA-O\\(^2\\)DCA approach demonstrated superior performance
    compared to the other solutions examined. Fig. 2 Performance metrics at the outlier
    detection phase for the average of all SNR values Full size image In the second
    experiment, we build \\(TM_{0}\\) using 2000 data vectors with (m = 2) attributes,
    temperature and humidity. We also use an SDS that contains 90 outliers (60 errors
    and 30 events). In this experiment, we evaluate the offline approach and calculate
    the DR and FAR performance metrics. To calculate these metrics, we take the confusion
    matrix as presented in Table 2. We use the \\(TM_{0}\\) and an SDS of 300 outliers
    (200 errors and 100 events) as explained in section 4.1. We use the \\(TM_{0}\\)
    to cluster, detect and classify the complete set of data which contains 10000
    data vectors in an offline manner. We get for the offline approach a DR equal
    to 82% and a FAR equal to 10%. This value allows us to evaluate our online system
    with different values of \\(\\alpha _{1}\\) and \\(\\alpha _{2}\\). In the third
    experiment, we evaluated SA-O\\(^2\\)DCA and O\\(^2\\)DCA regarding DR and FAR
    performance metrics using the confusion matrix presented in Table 2. We use the
    \\(TM_{0}\\) to cluster the streaming dataset containing 10000 data vectors. We
    detect and classify the outlier in the streaming set in an online manner. Table
    3 shows the obtained results when evaluating the DR and FAR metrics of O\\(^2\\)DCA
    and SA-O\\(^2\\)DCA approaches during the online classification phase. We notice
    that we have nine \\(TM_{s}\\) for our previous O\\(^2\\)DCA approach and five
    \\(TM_{s}\\) for our new SA-O\\(^2\\)DCA approach, each representing an average
    of several time intervals. The online system changes the model if the DR is less
    than \\(\\alpha _{1}\\) or FAR is higher than \\(\\alpha _{2}\\). These values
    are equal to the values of DR and FAR resulting from evaluating the offline approach.
    We notice that for O\\(^2\\)DCA, we have an average DR higher than \\(\\alpha
    _{1}\\) and an average FAR less than \\(\\alpha _{2}\\) for all \\(TM_{s}\\) except
    for \\(TM_{0}\\), \\(TM_{4}\\) and \\(TM_{5}\\). In these cases, we change them
    directly at the end of the time interval where we have DR less than \\(\\alpha
    _{1}\\) and FAR higher than \\(\\alpha _{2}\\). Whereas for SA-O\\(^2\\)DCA, we
    have an average DR higher than \\(\\alpha _{1}\\) and an average FAR less than
    \\(\\alpha _{2}\\) for all \\(TM_{s}\\). In addition, with SA-O\\(^2\\)DCA we
    reach the stable model quickly with less \\(TM_{s}\\) compared to O\\(^2\\)DCA.
    Table 3 Average DR performance metric for O\\(^2\\)DCA and SA-O\\(^2\\)DCA for
    different \\(TM_{s}\\) − \\(\\alpha _{1}\\) = 82% and \\(\\alpha _{2}\\) = 10%
    Full size table In the fourth experiment, we take the DR and the FAR values for
    the offline approach, which is calculated in the second experiment. In Table 4,
    we show that the DR and FAR metrics of our SA-O\\(^2\\)DCA approach during the
    online classification phase, for the average of all \\(TM_{s}\\), is better than
    the DR and FAR of our previous O\\(^2\\)DCA approach [3] and the offline approach.
    Table 4 The average DR and FAR performance metrics of all \\(TM_{s}\\) of O\\(^2\\)DCA,
    SA-O\\(^2\\)DCA and the offline approach Full size table In the fifth experiment,
    we evaluated the SA-O\\(^2\\)DCA and O\\(^2\\)DCA approaches in terms of the DR
    and FAR performance metrics using different values of \\(\\alpha _{1}\\) (80%,
    82%, 85%, 95%) and \\(\\alpha _{2}\\) (12%, 10%, 8%, 6%). We can see from Fig.
    3 that our new SA-O\\(^2\\)DCA approach has higher DR than O\\(^2\\)DCA [3] for
    all the different values of \\(\\alpha _{1}\\). Fig. 3 The DR for the SA-O\\(^2\\)DCA
    and O\\(^2\\)DCA approaches for the average of all \\(TM_{s}\\) with different
    values of \\(\\alpha _{1}\\) and \\(\\alpha _{2}\\) Full size image We can also
    see from Fig. 4 that our new SA-O\\(^2\\)DCA approach has lower FAR than O\\(^2\\)DCA
    for all the different values of \\(\\alpha _{2}\\). Fig. 4 The FAR for the SA-O\\(^2\\)DCA
    and O\\(^2\\)DCA approaches for the average of all the \\(TM_{s}\\) and different
    values of \\(\\alpha _{1}\\), \\(\\alpha _{2}\\) Full size image In the sixth
    experiment, we evaluated the SA-O\\(^2\\)DCA and O\\(^2\\)DCA approaches regarding
    the DR and FAR performance metrics using a seasonal dataset of 8000 data vectors
    that contains four seasons. In this experiment, we build four offline training
    models \\(\\{TM1, TM2, TM3, TM4\\}\\). In this scenario, we check if the DR stays
    over the specified threshold \\(\\alpha _{1}\\) and FAR stay down the specified
    threshold \\(\\alpha _{2}\\), or if the CDC system did not receive any (TNA, FPA)
    from the monitoring system, so the CDC system stays online and wait until reaching
    the end of the first season to change the training model dynamically and work
    with \\(TM_{2}\\) and so on. Otherwise, we need to build a new training model
    from the recent coming data. From Figs. 5, 6, 7, we can see the percentage of
    the DR, FAR and ACC for the SA-O\\(^2\\)DCA and O\\(^2\\)DCA. We notice that the
    two approaches have good performance metrics when dealing with the seasonal data
    with four \\(TM_{s}\\). From Fig. 5, we notice that SA-O\\(^2\\)DCA and O\\(^2\\)DCA
    have higher DR than the specified thresholds \\(\\alpha _{1}\\) for the four seasonal
    \\(TM_{s}\\). We also notice that SA-O\\(^2\\)DCA has higher DR than O\\(^2\\)DCA
    for all \\(TM_{s}\\). Fig. 5 DR of SA-O\\(^2\\)DCA and O\\(^2\\)DCA approach measured
    for the seasonal multivariate dataset with four \\(TM_{s}\\) and \\(\\alpha _{1}\\)
    = 82% Full size image From Fig. 6, we notice that SA-O\\(^2\\)DCA and O\\(^2\\)DCA
    have lower FAR than the specified thresholds \\(\\alpha _{2}\\) for the four seasonal
    \\(TM_{s}\\). We also notice that SA-O\\(^2\\)DCA has lower FAR than O\\(^2\\)DCA
    for all \\(TM_{s}\\). Fig. 6 FAR of SA-O\\(^2\\)DCA and O\\(^2\\)DCA approach
    measured for the seasonal multivariate dataset with four \\(TM_{s}\\) and \\(\\alpha
    _{2}\\) = 10% Full size image From Fig. 7, we notice that SA-O\\(^2\\)DCA has
    higher ACC than O\\(^2\\)DCA for the four seasonal \\(TM_{s}\\). Fig. 7 ACC of
    SA-O\\(^2\\)DCA and O\\(^2\\)DCA approach measured for the seasonal multivariate
    dataset with four \\(TM_{s}\\) Full size image To summarize the results, our new
    SA-O\\(^2\\)DCA outperforms both the offline approach, O\\(^2\\)DCA [3] and two
    other approaches [4] from the literature in the clustering, detection, and classification
    phases when worked in an online fashion. In addition, the DR and FAR performance
    metrics are still stable over specified thresholds, although we use different
    training models. So, we show the efficiency of our new approach and its ability
    to work online with both real-life and seasonal real-life multivariate WSN data.
    5 Conclusion This paper introduces SA-O\\(^2\\)DCA, a novel and effective online
    approach designed to address outlier challenges in WSNs while achieving high performance.
    The proposed approach has two central systems, the CDC and the monitoring systems.
    The CDC system consists of two main phases. In the training phase, we build an
    initial TM or a set of initial \\(TM_{s}\\) based on the K-means clustering algorithm,
    Iforest method for outlier detection and Newton interpolation method combined
    with KNN for outlier classification. In the online phase, we perform online clustering,
    outlier detection, and classification for the new real-life arrived streaming
    data vectors using the previous algorithms. The second system is the monitoring
    system that can check the received alerts from the online system and send different
    feedback information. Our system can stay online with higher DR, lower FAR and
    higher classification ACC performance than O\\(^2\\)DCA. It can also change the
    current training model by building a new one like O\\(^2\\)DCA. Additionally,
    SA-O\\(^2\\)DCA is suitable for real-life seasonal applications where it can change
    between a set of \\(TM_{s}\\) dynamically at the end of each season. The simulation
    results obtained from synthetic and real-life multivariate datasets and a seasonal
    multivariate dataset demonstrated that SA-O\\(^2\\)DCA outperforms O\\(^2\\)DCA
    and other existing approaches in terms of DR, FAR and ACC performance metrics.
    Notably, SA-O\\(^2\\)DCA achieves superior performance while utilizing a smaller
    number of \\(TM_{s}\\) compared to our previous work, O\\(^2\\)DCA. Also, SA-O\\(^2\\)DCA
    can stay stable with fewer \\(TM_{s}\\) number than the number required by our
    previous O\\(^2\\)DCA work. In our future research, we aim to thoroughly assess
    our novel online approach by testing it with various clustering algorithms and
    datasets with high levels of correlation. Additionally, we plan to explore the
    potential of utilizing deep learning algorithms to facilitate dynamic switching
    between different \\(TM_{s}\\), enabling the reuse of pre-existing models rather
    than building new ones. Such a study could enhance our approach’s adaptability
    and efficiency. References Chandola, V., Banerjee, A., Kumar, V.: Anomaly detection:
    A survey. ACM computing surveys (CSUR) 41(3), 1–58 (2009) Article   Google Scholar   Samara,
    M.A., Bennis, I., Abouaissa, A., Lorenz, P.: A survey of outlier detection techniques
    in iot: review and classification. Journal of Sensor and Actuator Networks 11(1),
    4 (2022) Article   Google Scholar   Al Samara, M., Bennis, I., Abouaissa, A.,
    Lorenz, P.: An enhanced online outlier detection and classification approach for
    wsn. In: In IEEE International Conference on Communication (ICC) (2023). IEEE
    Abid, A., Khediri, S.E., Kachouri, A.: Improved approaches for density-based outlier
    detection in wireless sensor networks. Computing, 1–18 (2021) Abid, A., Kachouri,
    A., Mahfoudhi, A.: Outlier detection for wireless sensor networks using density-based
    clustering approach. IET Wireless Sensor Systems 7(4), 83–90 (2017) Article   Google
    Scholar   Abid, A., Masmoudi, A., Kachouri, A., Mahfoudhi, A.: Outlier detection
    in wireless sensor networks based on optics method for events and errors identification.
    Wireless Personal Communications 97, 1503–1515 (2017) Article   Google Scholar   Qiao,
    Y., Cui, X., Jin, P., Zhang, W.: Fast outlier detection for high-dimensional data
    of wireless sensor networks. International Journal of Distributed Sensor Networks
    16(10), 1550147720963835 (2020) Article   Google Scholar   Ahmad, S., Lavin, A.,
    Purdy, S., Agha, Z.: Unsupervised real-time anomaly detection for streaming data.
    Neurocomputing 262, 134–147 (2017) Article   Google Scholar   Bai, M., Wang, X.,
    Xin, J., Wang, G.: An efficient algorithm for distributed density-based outlier
    detection on big data. Neurocomputing 181, 19–28 (2016) Article   Google Scholar   Lyu,
    L., Jin, J., Rajasegarar, S., He, X., Palaniswami, M.: Fog-empowered anomaly detection
    in iot using hyperellipsoidal clustering. IEEE Internet of Things Journal 4(5),
    1174–1184 (2017) Article   Google Scholar   Elmogy, A., Rizk, H., Sarhan, A.M.:
    Ofcod: On the fly clustering based outlier detection framework. Data 6(1), 1 (2020)
    Article   Google Scholar   Yang, L., Shami, A.: A lightweight concept drift detection
    and adaptation framework for iot data streams. IEEE Internet of Things Magazine
    4(2), 96–101 (2021) Article   Google Scholar   Chen, P.-Y., Yang, S., McCann,
    J.A.: Distributed real-time anomaly detection in networked industrial sensing
    systems. IEEE Transactions on Industrial Electronics 62(6), 3832–3842 (2014) Article   Google
    Scholar   Yang, L., Manias, D.M., Shami, A.: Pwpae: An ensemble framework for
    concept drift adaptation in iot data streams. In: 2021 IEEE Global Communications
    Conference (GLOBECOM), pp. 01–06 (2021). IEEE Nguyen, H.T., Thai, N.H.: Temporal
    and spatial outlier detection in wireless sensor networks. ETRI Journal 41(4),
    437–451 (2019) Article   Google Scholar   Putina, A., Rossi, D.: Online anomaly
    detection leveraging stream-based clustering and real-time telemetry. IEEE Transactions
    on Network and Service Management 18(1), 839–854 (2020) Article   Google Scholar   Kagade,
    R.B., Jayagopalan, S.: Optimization assisted deep learning based intrusion detection
    system in wireless sensor network with two-tier trust evaluation. International
    Journal of Network Management 32(4), 2196 (2022) Article   Google Scholar   Badarneh,
    H.J., Ravana, S.D., Mansoor, A.M.: A survey on indexing techniques for mobility
    in internet of things’: Challenges, performances, and perspectives. International
    Journal of Network Management 30(4), 2097 (2020) Article   Google Scholar   Abu
    Safia, A., Al Aghbari, Z., Kamel, I.: Phenomena detection in mobile wireless sensor
    networks. Journal of Network and Systems Management 24, 92–115 (2016) Article   Google
    Scholar   Hamerly, G., Elkan, C.: Alternatives to the k-means algorithm that find
    better clusterings. In: Proceedings of the Eleventh International Conference on
    Information and Knowledge Management, pp. 600–607 (2002) Liu, F.T., Ting, K.M.,
    Zhou, Z.-H.: Isolation-based anomaly detection. ACM Transactions on Knowledge
    Discovery from Data (TKDD) 6(1), 1–39 (2012) Article   Google Scholar   Al Samara,
    M., Bennis, I., Abouaissa, A., Lorenz, P.: Optics-based outlier detection with
    newton classification. In: 2022 International Wireless Communications and Mobile
    Computing (IWCMC), pp. 784–789 (2022). IEEE Samara82 . GitHub. https://github.com/samara82
    Intel Lab Data. http://db.csail.mit.edu/labdata/labdata.html Download references
    Author information Authors and Affiliations IRIMAS, University of Haute-Alsace,
    68000, Colmar, France Mustafa Al Samara, Ismail Bennis, Abdelhafid Abouaissa &
    Pascal Lorenz Corresponding author Correspondence to Mustafa Al Samara. Ethics
    declarations Competing Interest The authors declare that they have no competing
    interests in relation to this research. This includes any financial, personal,
    or professional affiliations that could potentially bias the interpretation or
    presentation of the findings contained in this paper. The authors affirm that
    the research conducted, and the results presented in this paper are free from
    any external influences that could compromise its objectivity. Additional information
    Publisher''s Note Springer Nature remains neutral with regard to jurisdictional
    claims in published maps and institutional affiliations. Rights and permissions
    Springer Nature or its licensor (e.g. a society or other partner) holds exclusive
    rights to this article under a publishing agreement with the author(s) or other
    rightsholder(s); author self-archiving of the accepted manuscript version of this
    article is solely governed by the terms of such publishing agreement and applicable
    law. Reprints and permissions About this article Cite this article Samara, M.A.,
    Bennis, I., Abouaissa, A. et al. SA-O2DCA: Seasonal Adapted Online Outlier Detection
    and Classification Approach for WSN. J Netw Syst Manage 32, 31 (2024). https://doi.org/10.1007/s10922-024-09801-3
    Download citation Received 12 September 2023 Revised 23 December 2023 Accepted
    07 January 2024 Published 04 March 2024 DOI https://doi.org/10.1007/s10922-024-09801-3
    Share this article Anyone you share the following link with will be able to read
    this content: Get shareable link Provided by the Springer Nature SharedIt content-sharing
    initiative Keywords Outlier classification Online WSN Training model (TM) Detection
    rate (DR) False Alarm Rate (FAR) Use our pre-submission checklist Avoid common
    mistakes on your manuscript. Sections Figures References Abstract Introduction
    Related Work SA-O2DCA Architecture Evaluation and Simulation Results Conclusion
    References Author information Ethics declarations Additional information Rights
    and permissions About this article Advertisement Discover content Journals A-Z
    Books A-Z Publish with us Publish your research Open access publishing Products
    and services Our products Librarians Societies Partners and advertisers Our imprints
    Springer Nature Portfolio BMC Palgrave Macmillan Apress Your privacy choices/Manage
    cookies Your US state privacy rights Accessibility statement Terms and conditions
    Privacy policy Help and support 129.93.161.219 Big Ten Academic Alliance (BTAA)
    (3000133814) - University of Nebraska-Lincoln (3000134173) © 2024 Springer Nature"'
  inline_citation: '>'
  journal: Journal of Network and Systems Management
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'SA-O<sup>2</sup>DCA: Seasonal Adapted Online Outlier Detection and Classification
    Approach for WSN'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Khadidos A.O.
  - Alhebaishi N.
  - Khadidos A.O.
  - Altwijri M.
  - Fayoumi A.G.
  - Ragab M.
  citation_count: '0'
  description: Wireless Sensor Networks (WSNs) play a major part in numerous applications
    such as smart agriculture, healthcare, and environmental monitoring. Safeguarding
    protected communication in this network is dominant. Securing data transmission
    in WSNs needs a strong key distribution device to defend against malicious attacks
    as well as illegal access. Traditional techniques like pre-shared or centralized
    key management are often unreasonable owing to resource limitations, particularly
    in large-scale sensor systems. To overcome this challenge, a lightweight key distribution
    technique is employed for safeguarding the security and privacy of data transmission
    streamlining processes decreasing computational overhead as well as energy consumption.
    By optimizing and simplifying key distribution devices, we propose to improve
    the complete efficacy and trustworthiness of WSNs that aid safe communication
    while preserving valuable energy resources. Therefore, this article designs an
    Efficient Key Distribution for Secure and Energy-Optimized Communication using
    Bioinspired Algorithms (EKD-SOCBA) for WSN. The purpose of the EKD-SOCBA technique
    is to accomplish security and energy efficiency in WSNs. Initially, the EKD-SOCBA
    technique applies a golden jackal optimization (GJO) based clustering approach
    to cluster the nodes and select cluster heads (CHs). Also, a lightweight Dynamic
    Step-wise Tiny Encryption Algorithm (DS-TEA) is applied to secure data transmission
    in the network. Finally, a lightweight key management phase is employed to protect
    the encryption key and decrease energy utilization and overhead costs. To exhibit
    the enhanced act of the EKD-SOCBA model, a comprehensive set of imitations was
    involved. Extensive results stated enhanced presentation of EKD-SOCBA methodology
    over other models on WSN.
  doi: 10.1016/j.aej.2024.02.064
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Literature review 3. The proposed
    model 4. Performance validation 5. Conclusion Institutional review board statement
    Informed consent statement Declaration of Competing Interest Acknowledgements
    Data availability References Show full outline Figures (8) Show 2 more figures
    Tables (6) Table Table 1 Table 2 Table 3 Table 4 Table 5 Alexandria Engineering
    Journal Volume 92, April 2024, Pages 63-73 Efficient key distribution for secure
    and energy-optimized communication in wireless sensor network using bioinspired
    algorithms Author links open overlay panel Adil O. Khadidos a, Nawaf Alhebaishi
    b, Alaa O. Khadidos b c, Mohammed Altwijri d, Ayman G. Fayoumi b, Mahmoud Ragab
    a e Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.aej.2024.02.064
    Get rights and content Under a Creative Commons license open access Abstract Wireless
    Sensor Networks (WSNs) play a major part in numerous applications such as smart
    agriculture, healthcare, and environmental monitoring. Safeguarding protected
    communication in this network is dominant. Securing data transmission in WSNs
    needs a strong key distribution device to defend against malicious attacks as
    well as illegal access. Traditional techniques like pre-shared or centralized
    key management are often unreasonable owing to resource limitations, particularly
    in large-scale sensor systems. To overcome this challenge, a lightweight key distribution
    technique is employed for safeguarding the security and privacy of data transmission
    streamlining processes decreasing computational overhead as well as energy consumption.
    By optimizing and simplifying key distribution devices, we propose to improve
    the complete efficacy and trustworthiness of WSNs that aid safe communication
    while preserving valuable energy resources. Therefore, this article designs an
    Efficient Key Distribution for Secure and Energy-Optimized Communication using
    Bioinspired Algorithms (EKD-SOCBA) for WSN. The purpose of the EKD-SOCBA technique
    is to accomplish security and energy efficiency in WSNs. Initially, the EKD-SOCBA
    technique applies a golden jackal optimization (GJO) based clustering approach
    to cluster the nodes and select cluster heads (CHs). Also, a lightweight Dynamic
    Step-wise Tiny Encryption Algorithm (DS-TEA) is applied to secure data transmission
    in the network. Finally, a lightweight key management phase is employed to protect
    the encryption key and decrease energy utilization and overhead costs. To exhibit
    the enhanced act of the EKD-SOCBA model, a comprehensive set of imitations was
    involved. Extensive results stated enhanced presentation of EKD-SOCBA methodology
    over other models on WSN. Previous article in issue Next article in issue Keywords
    Wireless sensor networksKey managementLightweight energySecurityEnergy efficiencyBioinspired
    algorithms 1. Introduction A WSN is an intelligent system when compared to others
    because that can independently achieve data fusion, collection, and communication.
    It integrates the real physical and logical information world to comprehend the
    \"ubiquitous computing\" method [1]. A WSN is used in untended target fields,
    namely health care, battlefields, agriculture, habitats, and environmental monitoring
    and they encompass tiny sensor nodes (SNs) that have limited computational ability
    and battery power [2]. These nodes sense the environment to gather information
    from the environment and transfer it to the closest gateway node (GWN) through
    a wireless channel for transmitting to exterior users. Usually, the WSN node works
    in an unprotected environment and is not monitored periodically. This makes it
    especially vulnerable to different attacks and thus critical information can easily
    be revealed to unauthorized parties causing privacy risks and serious security
    [3]. As progressively sensitive data is produced and transferred, cryptographic
    security must be deployed to avoid recognized attacks by hiding data within a
    complex string of seemingly random symbols [4]. However, it remains challenging
    to accept a traditional encryption system in this tiny wireless sensor due to
    the vast quantities of data being generated and switched between the SNs. Standard
    cipher is deployed for resource-rich devices on high bandwidth networks and they
    are almost impossible for limited networks such as WSNs [5]. As heavy encryption,
    implementation might result in failure and frequent disconnection of this node
    due to energy consumption, the energy constraint is the most overwhelming restraint
    in WSN. Excessive cryptographic security could be harmful to the system [6]. Due
    to limited time, energy resources computation power, and communication constraints,
    it frequently causes security requirements to combat real-time dynamic performance.
    It is necessary to provide security during or before the transmission. Data availability,
    data confidence, and data integrity are four different safety aspects to be concentrated
    during data communication [7]. Besides, the security of transmission data networks
    must guarantee the authenticity and confidentiality of all network nodes. Until
    now, several schemes and protocols have been introduced intending to be effective
    in the secure transmission of data [8]. Encryption standards are crucial that
    use keys of lesser length, and only less memory is required. Moreover, ECC grows
    the size of encoded information as well as requires further modification. The
    contemporary study has recommended a lightweight encryption system to overcome
    the problem of resource constraint [9]. The security limits employed through classical
    cryptographic methodology are lessened in lightweight encryption systems to enhance
    the competence of encryption. Light-weight cypher is gentler on resources since
    they require shorter execution times, less memory space, less energy consumption,
    and less computational complexity [10]. Key management strategy is another noteworthy
    feature of WSN security which includes updating, generation, distribution, and
    storage. This article designs an Efficient Key Distribution for Secure and Energy-Optimized
    Communication using Bioinspired Algorithms (EKD-SOCBA) for WSN. The purpose of
    the EKD-SOCBA technique is to accomplish security and energy efficiency in WSNs.
    Initially, the EKD-SOCBA technique applies a golden jackal optimization (GJO)
    based clustering approach to cluster the nodes and select cluster heads (CHs).
    Moreover, DS-TEA is applied to secure data transmission in the network. Finally,
    a lightweight key management phase is employed to protect the encryption key and
    decrease energy utilization and overhead costs. To exhibit the enhanced performance
    of the EKD-SOCBA methodology, a comprehensive pair of imitations was involved.
    2. Literature review Mezrag et al. [11] developed a novel identity-based authentication
    and key agreement system for CWSNs termed IBAKAS that integrates identity-based
    cryptography (IBC) and elliptic curve cryptography (ECC) to offer common verification
    and create secret session keys over uncertain networks. IBAKAS attains the required
    safety assets of the main contract and averts precise cyber-attacks on CWSN. Misbha
    [12] developed a new light-biased key distribution device for energy-efficient
    and safe communication in WSN. At 1st stage, a hybrid optimization plan is developed
    which is known as the coot upgraded butterfly algorithm with logistic solution
    space (CUBA-LSS) technique to optimum grouping through picking up ideal CH. Data
    transmission is a successive procedure where developed technique safeguards protected
    transmission via enhanced ECC. Roja and Misbha [13] present an effective lightweight
    secure key distribution protocol (LSKDP) for improving procedure security in assorted
    medicinal WSNs. In addition to that, performance and safety diagnoses are directed
    at demonstrating the recommended methodology''s efficiency. The safety analysis
    is executed to determine the projected method''s exposure to system threats. Abi-Char
    and Riman [14] introduce a secure and lightweight genuine key management system
    utilizing Bilinear Pairing (BP) and Elliptic Curve (EC). The system establishes
    unique pairwise keys between devices after authentication, demonstrating resilience
    against various threats and enhanced flexibility against node capture attacks.
    In [15], a lightweight privacy and security system is proposed for WSN routing.
    Employing modified Diffie-Hellman key exchange, symmetric encryption, scalar blinding,
    and elliptic curve cryptography, the system ensures data integrity and effective
    validation while preserving privacy during routing. Xiong and Su [16] project
    a new random key pre-distribution system that depends upon a hash chain. Altering
    assured structure parameters like hash chain length, the number of shared support
    nodes and the sum of hash chains and device nodes requires preloading some key
    that makes it probable to create pairwise basic with great possibility between
    its nearby nodes. Guermazi et al. [17] propose the Key Distribution and Safe Routing
    (KDSR) protocol for securing communication in large-scale Wireless Sensor Networks
    (WSNs). The protocol introduces a secure network architecture and employs lightweight
    local procedures for key segmentation in Local Broadcast, Pairwise, and Global
    Broadcast scenarios. Lee and Chen [18] present an efficient Group Key Agreement
    (GKA) structure for WSN, utilizing prolonged hectic maps and eliminating the need
    for a reliable online verification server. Additionally, they propose a forward-privacy-enhanced
    pattern through a long hectic map-based Diffie-Hellman key exchange within the
    developed GKA structure. In [19], a hybrid data routing algorithm is proposed
    using metaheuristic techniques, integrating swarm optimization and an energy-efficient
    heuristic method to enhance route finding for heterogeneous WSNs in the IoTs.
    Mehta and Saxena [20] introduce fuzzy multi-criteria clustering and bio-inspired
    energy-efficient routing (FMCB-ER) model by employing a grid-based clustering
    technique, adaptive fuzzy multi-criteria decision-making for cluster head selection,
    and emperor penguin optimization for optimal data transmission routes. 3. The
    proposed model In this article, we design an EKD-SOCBA algorithm for WSN. The
    purpose of the EKD-SOCBA technique is to accomplish security and energy efficiency
    in WSNs. Fig. 1 demonstrates the workflow of the proposed EKD-SOCBA method. Download
    : Download high-res image (534KB) Download : Download full-size image Fig. 1.
    Workflow of EKD-SOCBA approach. 3.1. System model The assumption made is given
    below [21]. 1. The SN is deployed randomly in a 2D geographical space. 2. The
    BS is positioned at the center of the network and there is multi-hop transmission
    from CH to BS 3. The SN is split into equivalent groups and is distributed randomly
    within the group. 4. The SN is homogeneous within the group and mobility is limited
    to 0.2 5. BS and nodes participating in multi-path transmission may contain continuous
    power sources. 5. BS implements the model for the selection of CH and it gathers
    the information collected from the CH Two different channel models based on the
    radio energy method of SN are given as follows: multi-path propagation fading
    technique for multi-hop path transmission and free space path loss method for
    single-hop transmission. Thus, the power usage for transferring an -bit packet
    over distance is evaluated using Eq. (1): (1) where energy dissipation coefficient
    of multi-path attenuation module energy dissipation coefficient of free-space
    attenuation module packet length energy required for transmitting or receiving
    1-bit data. distance between sender and receiving nodes threshold distance At
    Rx, the amount of power used to receive -bit data packet is evaluated by (2) The
    number of packets expected from SNs are followers of specific clusters, data collection
    implemented by CH, and the number of collected packets transferred from CH to
    BS are parameters that contributed to the power utilization at CH. Consequently,
    the power utilization at CH is shown below as (3) number of SNs in a specific
    cluster data fusion energy/bit. For each SN excluding CHs, the power utilization
    is . The overall residual energy (RE)at iteration can be evaluated as follows:
    (4) overall RE at th iteration number of CHs in the iteration overall amount of
    alive nodes in the iteration energy expended by CH energy expended by SN 3.2.
    Clustering using GJO algorithm Initially, the EKD-SOCBA technique applies a GJO-based
    clustering approach to cluster the nodes and select CHs. The golden jackal is
    nothing but a canid type originating in Eurasia. It shows greatly advanced social
    conduct [22]. Cooperative hunting is one of the most dangerous among their countless
    skills, with an achievement rate about 3 times greater than separate hunting.
    Nitish Chopra has proposed a GJO and swarm intelligence algorithm due to his interest
    in the hunting behavior of golden jackals. The technique is mainly developed depending
    upon key phases of the golden jackal hunting procedure such as pointing for imminent
    prey, nearby and annoying prey till it stops movement and aggressive and catching
    prey. After these phases of hunting, the GJO technique is demonstrated. In the
    initialization stage, the following populaces are casually created. (5) whereas
    N is the number of persons in the populace, and is the quantity of sizes owned
    by persons. After computing the capability of each individual in the present populace,
    the optimal individual is considered a male golden jackal, whereas the sub-optimal
    distinct is called a female golden jackal, and the rest as prey. Affording to
    a value of E and eluding energy, dual methods accessible to upgrade the populace.
    (6) whereas designates the decreasing energy of prey; signifies the early stage
    of its energy; is a random number from to 1; represents the present iteration
    and is the maximum number of iterations. Fig. 2 depicts the steps involved in
    GJO. Download : Download high-res image (331KB) Download : Download full-size
    image Fig. 2. Steps involved in GJO. When is a mode to renovate the populace as
    follows: (7) (8) (9) whereas denotes a male golden jackal; represents a female
    golden jackal; , and Prey (t) individually state to data of male, female as well
    as present individual; is Levy fight plan; is upgraded position data of individual
    after repetition. The below-mentioned formulae are the expression of Levy''s fight
    plan: (10) (11) whereas and are random values between to 1, is a default constant
    set to 1.5. When is a method to renovate the population as follows: (12) (13)
    (14) The GJO technique originates a fitness function (FF) for the optimal cluster
    creation process. The FF employed in the developed method is given in the below
    equation. (15) In Eq. (15), and functions describe the sum of distances among
    CMs to CH of each cluster in the network and the difference of clusters in route
    length. Based on Eq. (16), function is calculated. (16) Where, displays the distance
    of Euclidean calculated for a total amount of clusters. The distance between every
    vehicular to CHs connected to all clusters from the total amount of clusters.
    Similarly, function signifies the absolute degree that is shown below. (17) In
    Eq. (17), implies an overall amount of CM nodes from route length with degree
    emphasizing the constant value of cluster density. Notice that smaller density
    can be familiar by lowermost value. 3.3. Encryption using DS-TEA model At this
    moment, lightweight DS-TEA is applied for secure data transmission in the network.
    TEA is a Feistel structure encryption scheme that functions on dual 32-bit unsigned
    integers that are driven from a 64-bit data block and exploits a 128-bit key [23].
    Furthermore, this model recommends 64 rounds for the standard execution of pairs
    called cycles. Based on the symmetry of cycles, multiples of the magic constant
    are employed to avoid the attack. However, TEA has certain shortcomings. It mainly
    suffers from corresponding keys that imply all keys are equivalent to three others.
    Especially, TEA is insupportable as a Cryptographic hash function. The encryption
    efficiency is increased when the memory consumption is decreased. DS-TEA is a
    block cypher that recollects Feistel structure. DS-TEA makes use of a 64-bit block
    and 128-bit key with 32 cycles or 64 rounds similar to the TEA. The two bits are
    utilized for selecting the subkeys. Accordingly, the subkey is further added.
    Also, we add a shift of 13 into the key schedule to aid subkeys loom out of order.
    The further adaptation to make DS-TEA is rearranging the XOR functions, additions,
    and shifts. Now, the subkeys generate subkey and . In the DS-TEA, dual rounds
    are employed to generate one encryption cycle. An initial round is dependent on
    . The value of amount & 4 is sum logic AND with 4, 0 × 04 , or 0012 , defines
    subkey selection in this round. The next round depends on . The value of sum >>
    14 & 4, is shifted by 12, monitored by logic, AND with 4,0 × 04 , or 0013 , defines
    subkey selection in this round. This signifies a bit of change possibility. Repeat
    the process with different ’ ’ generated by inverting 64 bits of unencrypted block
    , which produces an overall of 64 probabilities and calculates the average of
    64 bit-change possibilities. Algorithm 1 demonstrates the process of DS-TEA. Algorithm
    1 Dynamic Step-wise TEA 3.4. Key management Finally, a lightweight key management
    phase is employed to protect the encryption key. Since the WSN transfers information
    through an unprotected open channel, each connectivity of the network should be
    secured [24]. The key managing technique must retain minimum overhead cost for
    the key distribution, creation, and agreement in the limited network. In the system,
    a lightweight key managing technique is performed to decrease the transmission
    latency and power usage. Furthermore, it is capable of creating a verified and
    secure connection between the CHs and SNs connected to them and, lastly linking
    to the access point. The key management structure is composed of two different
    stages. The first step is generating a symmetrical encryption key. The second
    stage is the session key would be created and sent to all the nodes to protect
    the entire node’s symmetric key. The key security cannot be safeguarded since
    they are stored as well as transported in plain sight in wireless devices. To
    satisfy the safe key criterion, a private key βk is generated in this technique
    through a logistic map. Then, the Enhanced ECC uses the private key βk to protect
    the messages for the node. After encrypting its Plain Text (PT), the key and other
    encryption variables are encrypted during the second stage before being transmitted
    to CH. Each node has a physical ID which is protected down. Given the ID of the
    selected CH, each node connected is updated with all the new CHS. The CH evaluates
    its session key (sk) before the beginning of the information communication session
    and allocates it to the related node. The period of the transmission session is
    chosen to avoid overhead generated by using a random strategy for creating sk.
    A new sk is generated whenever CH is transmitted over the nodes. It utilizes it
    to generate a master key (mk) if the node interconnects with CH and gets sk. SN
    will evaluate a new value that uses a hash function to remove the probability
    that attackers might find out ID of CH. The received CH-ID values are hashed with
    the MD5 hash technique for obtaining Hash ID (HID). Then, the node will evaluate
    mk by applying the XOR function to integrate the sk and HID of CH are interconnected
    to all nodes. Subsequently, mk is used for encoding the βk, αk, and Sk parameters.
    When the encryption variable (Cparm) is added, then the payload is transmitted
    to the CH. Initially, the AP computes HID through CH''s registered ID on the AP
    side. Then, the sk and HID are XOR-ed to define mk. The ciphered encryption variable
    is decoded by the acquired mk and decodes the Cipher Text (CT) of the node. The
    repeat process enables each node connected to the CH to deploy the same mk for
    decoding their parameters and attaining the PTs. 4. Performance validation This
    section offers a brief result analysis of the EKD-SOCBA technique under several
    measures. Table 1 presents a detailed distance analysis of the EKD-SOCBA technique
    under 100 and 200 nodes [12]. The results infer that the EKD-SOCBA technique reaches
    decreased distance values under all rounds. On 500 rounds, the EKD-SOCBA technique
    gains a reduced distance of 41 whereas the AOA, ARCHOA, CA, BOA, and CUBA-LSS
    models obtain increased distances of 61, 62, 68, 59, and 50 respectively. Moreover,
    on 2000 rounds, EKD-SOCBA models attain a decreased distance of 40 whereas AOA,
    ARCHOA, CA, BOA, and CUBA-LSS techniques get increased distances of 62, 69, 65,
    59, and 51, individually. Under 200 noes, the EKD-SOCBA method increases the reduced
    distance of 43 whereas AOA, ARCHOA, CA, BOA, and CUBA-LSS approaches gain increased
    distances of 62, 62, 72, 53, and 53 respectively. Furthermore, on 2000 rounds,
    the EKD-SOCBA model acquires a reduced distance of 48 whereas AOA, ARCHOA, CA,
    BOA, and CUBA-LSS techniques achieve increased distance of 57, 61, 58, 55, and
    53, separately. Table 1. Distance analysis of EKD-SOCBA approach with recent systems
    under 100 and 200 nodes. Distance No. of Rounds AOA Model ARCHOA Model CA Algorithm
    BOA Algorithm CUBA-LSS EKD-SOCBA 100 Nodes 500 61 62 68 59 50 41 1000 53 63 59
    65 51 34 1500 63 53 69 58 54 40 2000 62 69 65 59 51 40 200 Nodes 500 62 62 72
    53 53 43 1000 85 71 60 63 56 32 1500 64 77 66 72 49 39 2000 57 61 58 55 53 48
    Table 2 portrays a detailed comparative energy result of the EKD-SOCBA technique
    under 100 and 200 nodes. The results confirmed that the EKD-SOCBA technique accomplished
    increased energy values. With 1000 rounds, the EKD-SOCBA technique provides an
    enhanced energy of 0.408 J while the AOA, ARCHOA, CA, BOA, and CUBA-LSS models
    offer decreased energy values of 0.330 J, 0.348 J, 0.357 J, 0.347 J, and 0.364 J,
    respectively. Also, with 2000 rounds, EKD-SOCBA approaches offer an improved energy
    of 0.243 J while AOA, ARCHOA, CA, BOA, and CUBA-LSS techniques provide decreased
    energy values of 0.107 J, 0.165 J, 0.189 J, 0.164 J, and 0.202 J, separately.
    Under 200 nodes, the EKD-SOCBA model delivers a higher energy of 0.384 J while
    AOA, ARCHOA, CA, BOA, and CUBA-LSS methods offer diminished energy values of 0.343 J,
    0.337 J, 0.339 J, 0.352 J, and 0.369 J, correspondingly. Furthermore, with 2000
    rounds, the EKD-SOCBA method offers an improved energy of 0.234 J while AOA, ARCHOA,
    CA, BOA, and CUBA-LSS approaches provide reduced energy values of 0.104 J, 0.142 J,
    0.162 J, 0.157 J, and 0.202 J, separately. Table 2. Energy analysis of the EKD-SOCBA
    approach with recent systems under 100 and 200 nodes. Energy (J) No. of Rounds
    AOA Model ARCHOA Model CA Algorithm BOA Algorithm CUBA-LSS EKD-SOCBA 100 Nodes
    0 0.550 0.552 0.551 0.551 0.555 0.552 250 0.493 0.500 0.504 0.501 0.508 0.516
    500 0.436 0.447 0.452 0.450 0.453 0.469 750 0.379 0.394 0.405 0.401 0.413 0.432
    1000 0.330 0.348 0.357 0.347 0.364 0.408 1250 0.277 0.307 0.316 0.300 0.323 0.341
    1500 0.215 0.255 0.266 0.249 0.276 0.306 1750 0.161 0.211 0.222 0.211 0.239 0.277
    2000 0.107 0.165 0.189 0.164 0.202 0.243 200 Nodes 0 0.559 0.559 0.559 0.556 0.561
    0.561 250 0.534 0.507 0.500 0.506 0.518 0.528 500 0.436 0.433 0.448 0.452 0.462
    0.480 750 0.371 0.377 0.388 0.407 0.415 0.433 1000 0.343 0.337 0.339 0.352 0.369
    0.384 1250 0.281 0.292 0.302 0.301 0.320 0.356 1500 0.222 0.253 0.265 0.263 0.292
    0.315 1750 0.171 0.198 0.213 0.230 0.250 0.265 2000 0.104 0.142 0.162 0.157 0.202
    0.234 Table 3 demonstrates the network lifetime (NLT) results of the EKD-SOCBA
    technique with recent models. In Fig. 3, the comparison study of the EKD-SOCBA
    technique is examined under 100 nodes in terms of NLT. The results indicate that
    the EKD-SOCBA technique reaches a higher NLT of 3475 rounds. On the other hand,
    the AOA, ARCHOA, CA, DHO, and CUBA-LSS models obtain decreased NLT of 2772, 2810,
    2650, 2747, and 2866 rounds, respectively. Table 3. NLT analysis of EKD-SOCBA
    approach with recent systems under 100 and 200 nodes. Network Lifetime Methods
    Nodes-100 Nodes-200 AOA Model 2772 3375 ARCHOA Model 2810 3384 CA Algorithm 2650
    3267 DHO Algorithm 2747 3283 CUBA-LSS 2866 3404 EKD-SOCBA 3475 5227 Download :
    Download high-res image (222KB) Download : Download full-size image Fig. 3. NLT
    outcome of EKD-SOCBA algorithm under 100 nodes. In Fig. 4, comparison research
    of the EKD-SOCBA model is studied under 200 nodes in terms of NLT. The results
    indicate that the EKD-SOCBA method extents greater NLT of 5227 rounds. On the
    other hand, AOA, ARCHOA, CA, DHO, and CUBA-LSS approaches attain reduced NLT of
    3375, 3384, 3267, 3283, and 3404 rounds, separately. Download : Download high-res
    image (221KB) Download : Download full-size image Fig. 4. NLT outcome of EKD-SOCBA
    algorithm under 200 nodes. Table 4 portrays a comparative attack analysis of the
    EKD-SOCBA technique. Fig. 5 represents the comparison study of the EKD-SOCBA technique
    under KPA and CPA attacks. On KPA, the EKD-SOCBA technique offers a minimal attack
    of 0.0056 while the AOA, ARCHOA, CA, DHO, and CUBA-LSS models obtain increased
    attack of 0.0469, 0.0382, 0.0335, 0.0581, and 0.0189, respectively. Also, on CPA,
    the EKD-SOCBA model provides the least attack of 0.0024 while AOA, ARCHOA, CA,
    DHO, and CUBA-LSS methods attain enlarged attack of 0.0467, 0.0366, 0.0366, 0.0590,
    and 0.0259, individually. Table 4. Comparative attack analysis of EKD-SOCBA approach
    with other algorithms. Evaluation on Attacks Methods KPA CPA Man in middle Brute
    force AOA Model 0.0469 0.0467 5.3044 13.1117 ARCHOA Model 0.0382 0.0366 5.2990
    13.9477 CA Algorithm 0.0335 0.0366 5.2161 12.2234 DHO Algorithm 0.0581 0.0590
    5.7146 11.1673 CUBA-LSS 0.0189 0.0259 6.3969 14.7657 EKD-SOCBA 0.0056 0.0024 7.2896
    15.1000 Download : Download high-res image (231KB) Download : Download full-size
    image Fig. 5. Attack analysis of EKD-SOCBA approach under KPA and CPA. Fig. 6
    signifies a comparison study of the EKD-SOCBA model below Man in Middle and Brute
    force attacks. On Man in Middle, the EKD-SOCBA method delivers minimal attack
    of 7.2896 while AOA, ARCHOA, CA, DHO, and CUBA-LSS techniques attain improved
    attack of 5.3044, 5.2990, 5.2161, 5.7146, and 6.3969, individually. Besides, on
    Brute force, the EKD-SOCBA approach delivers a minimal attack of 15.1000 while
    AOA, ARCHOA, CA, DHO, and CUBA-LSS methods get amplified attacks of 13.1117, 13.9477,
    12.2234, 11.1673, and 14.7657, individually. Download : Download high-res image
    (203KB) Download : Download full-size image Fig. 6. Attack analysis of EKD-SOCBA
    approach under Man in Middle and Brute force. Finally, Table 5 represents the
    overall computing time (CT) results of the EKD-SOCBA technique under 100 and 200
    nodes. In Fig. 7, the comparative CT results of the EKD-SOCBA technique with recent
    models are made under 100 nodes. The results indicate that the AOA, ARCHOA, CA,
    DHO, and CUBA-LSS models offer increased CT of 1.58 min, 1.71 min, 1.67 min, 1.83 min,
    and 1.82 min respectively. However, the EKD-SOCBA technique reaches effectual
    performance of the EKD-SOCBA technique with minimal CT of 0.80 min. Table 5. CT
    analysis of the EKD-SOCBA approach with recent systems under 100 and 200 nodes.
    Computing Time (min) Methods Nodes-100 Nodes-200 AOA Model 1.58 1.66 ARCHOA Model
    1.71 1.53 CA Algorithm 1.67 1.60 DHO Algorithm 1.83 1.64 CUBA-LSS 1.82 1.65 EKD-SOCBA
    0.80 0.60 Download : Download high-res image (238KB) Download : Download full-size
    image Fig. 7. CT outcome of EKD-SOCBA algorithm under 100 nodes. In Fig. 8, comparative
    CT results of the EKD-SOCBA model with recent methods are made under 200 nodes.
    The outcomes indicate that AOA, ARCHOA, CA, DHO, and CUBA-LSS techniques provide
    bigger CTs of 1.66 min, 1.53 min, 1.60 min, 1.64 min, and 1.65 min correspondingly.
    However, the EKD-SOCBA model extents effective performance of the EKD-SOCBA method
    with the least CT of 0.60 min. These results confirmed the supremacy of the EKD-SOCBA
    technique on WSN. Download : Download high-res image (240KB) Download : Download
    full-size image Fig. 8. CT outcome of EKD-SOCBA algorithm under 200 nodes. 5.
    Conclusion This article designs an Efficient Key Distribution for Secure and Energy-Optimized
    Communication using Bioinspired Algorithms (EKD-SOCBA) for WSN. The purpose of
    the EKD-SOCBA technique is to accomplish security and energy efficiency in WSNs.
    Initially, the EKD-SOCBA technique has accomplished energy efficiency using GJO
    based clustering approach to cluster the nodes and select CHs. Besides, the DS-TEA
    is applied to secure data transmission in the network. Finally, a lightweight
    key management phase is employed to protect the encryption key and decrease energy
    utilization and overhead costs. To exhibit the enhanced act of the EKD-SOCBA method,
    an inclusive set of simulations was involved. An extensive outcome stated enhanced
    performance of the EKD-SOCBA technique over other models on WSN. The EKD-SOCBA
    model boosts WSN security and energy efficiency with clustering, lightweight encryption,
    and key management; yet, it faces challenges in adapting to dynamic network conditions.
    Future work can focus on the design of data aggregation approaches to improve
    energy efficiency in the WSN. Institutional review board statement Not Applicable.
    Informed consent statement Not Applicable. Declaration of Competing Interest The
    authors declare that they have no known competing financial interests or personal
    relationships that could have appeared to influence the work reported in this
    paper. Acknowledgements This research work was funded by Institutional Fund Projects
    under grant no. (IFPIP: 382-611-1442). Therefore, the authors gratefully acknowledge
    technical and financial support provided by the Ministry of Education and Deanship
    of Scientific Research (DSR), King Abdulaziz University (KAU), Jeddah, Saudi Arabia.
    Data availability Data sharing does not apply to this article as no datasets were
    generated during the current study. References [1] A. Singh, K. Jain An automated
    lightweight key establishment method for secure communication in WSN Wirel. Pers.
    Commun., 124 (4) (2022), pp. 2831-2851 CrossRefView in ScopusGoogle Scholar [2]
    Y. Ding, H. Xu, M. Zhao, H. Liang, Y. Wang Group authentication and key distribution
    for sensors in wireless body area network Int. J. Distrib. Sens. Netw., 17 (9)
    (2021), Article 15501477211044338 Google Scholar [3] S. Anitha, S. Saravanan,
    A. Chandrasekar A modified gray wolf-based chameleon swarm algorithm for minimizing
    energy consumption and enabling secure communication in wireless sensor network
    Concurr. Comput. Pract. Exp., 34 (26) (2022), Article e7295 View in ScopusGoogle
    Scholar [4] R.I. Chang, C.W. Chiang, Y.H. Hung Grouping sensors for the key distribution
    of implicit certificates in wireless sensor networks Electronics, 12 (13) (2023),
    p. 2815 CrossRefView in ScopusGoogle Scholar [5] W. Liu, L. Harn, J. Weng Lightweight
    key establishment with the assistance of mutually connected sensors in wireless
    sensor networks (WSNs) IET Commun., 16 (1) (2022), pp. 58-66 CrossRefView in ScopusGoogle
    Scholar [6] M. Tanveer, G. Abbas, Z.H. Abbas, M. Bilal, A. Mukherjee, K.S. Kwak
    LAKE-6SH: lightweight user authenticated key exchange for 6LoWPAN-based smart
    homes IEEE Internet Things J., 9 (4) (2021), pp. 2578-2591 Google Scholar [7]
    R. Saini A lightweight secure authentication and key exchange algorithm for smart
    agriculture monitoring systems in: Proceedings of the 2023 International Conference
    on Data Science and Network Security (ICDSNS), IEEE (2023, July), pp. 01-07 CrossRefGoogle
    Scholar [8] Faiqurahman, M. and Syaifuddin, S., 2022, July. Password authenticated
    key exchange protocol for secure communication channel in modern honey network,
    in: AIP Conference Proceedings (Vol. 2453, No. 1). AIP Publishing. Google Scholar
    [9] M. Ashraf, S. Hassan, S. Rubab, M.A. Khan, U. Tariq, S. Kadry Energy-efficient
    dynamic channel allocation algorithm in wireless body area network Environ., Dev.
    Sustain. (2022), pp. 1-17 Google Scholar [10] M. Shahid, M. Tariq, Z. Iqbal, H.M.
    Albarakati, N. Fatima, M.A. Khan, M. Shabaz Link-quality based energy-efficient
    routing protocol for WSN in IoT IEEE Trans. Consum. Electron. (2024) Google Scholar
    [11] F. Mezrag, S. Bitam, A. Mellouk An efficient and lightweight identity-based
    scheme for secure communication in clustered wireless sensor networks J. Netw.
    Comput. Appl., 200 (2022), Article 103282 View PDFView articleView in ScopusGoogle
    Scholar [12] Misbha D.S Lightweight key distribution for secured and energy efficient
    communication in wireless sensor network: an optimization assisted model High.
    -Confid. Comput., 3 (2) (2023), Article 100126 Google Scholar [13] P.E. Roja,
    D.S. Misbha Lightweight secure key distribution protocol (LSKDP) for wireless
    sensor networks ECS Trans., 107 (1) (2022), p. 8239 CrossRefView in ScopusGoogle
    Scholar [14] P.E. Abi-Char, C.F. Riman A lightweight and secure key management
    scheme for wireless sensor networks In: Proceedings of the 2023 Forty Sixth International
    Conference on Telecommunications and Signal Processing (TSP), IEEE (2023, July),
    pp. 187-192 CrossRefView in ScopusGoogle Scholar [15] O.O. Olakanmi A lightweight
    security and privacy-aware routing scheme for energy-constraint multi-hop wireless
    sensor networks Int. J. Inf. Comput. Secur., 15 (2-3) (2021), pp. 231-253 CrossRefView
    in ScopusGoogle Scholar [16] P. Xiong, Q. Su Key distribution strategy of wireless
    sensor network based on multi-hash chain J. Web Eng., 20 (3) (2021), pp. 713-742
    View in ScopusGoogle Scholar [17] A. Guermazi, A. Belghith, M. Abid KDSR: A scalable
    key distribution protocol to secure multi-hop routing in large-scale wireless
    sensor networks in: Sensor Technology: Concepts, Methodologies, Tools, and Applications,
    IGI Global, (2020), pp. 301-320 CrossRefGoogle Scholar [18] T.F. Lee, M. Chen
    Lightweight identity-based group key agreements using extended chaotic maps for
    wireless sensor networks IEEE Sens. J., 19 (22) (2019), pp. 10910-10916 CrossRefView
    in ScopusGoogle Scholar [19] S.K. Sharma, M. Chawla PRESEP: cluster based metaheuristic
    algorithm for energy-efficient wireless sensor network application in Internet
    of Things Wirel. Pers. Commun. (2024), pp. 1-21 Google Scholar [20] D. Mehta,
    S. Saxena Hierarchical WSN protocol with fuzzy multi-criteria clustering and bio-inspired
    energy-efficient routing (FMCB-ER) Multimed. Tools Appl., 81 (24) (2022), pp.
    35083-35116 CrossRefView in ScopusGoogle Scholar [21] M. Rami Reddy, M.L. Ravi
    Chandra, P. Venkatramana, R. Dilli Energy-efficient cluster head selection in
    wireless sensor networks using an improved grey wolf optimization algorithm Computers,
    12 (2) (2023), p. 35 CrossRefView in ScopusGoogle Scholar [22] B. Wang, Q. Jin,
    R. Zhao, Y. Zhang A new optimization idea: parallel search-based Golden Jackal
    Algorithm IEEE Access (2023) Google Scholar [23] S. Sutradhar, S. Karforma, R.
    Bose, S. Roy A Dynamic Step-wise tiny encryption algorithm with fruit fly optimization
    for quality of service improvement in healthcare Healthc. Anal., 3 (2023), Article
    100177 View PDFView articleView in ScopusGoogle Scholar [24] O.A. Khashan, R.
    Ahmad, N.M. Khafajah An automated lightweight encryption scheme for secure and
    energy-efficient communication in wireless sensor networks Ad Hoc Netw., 115 (2021),
    Article 102448 View PDFView articleView in ScopusGoogle Scholar Cited by (0) ©
    2024 The Author(s). Published by Elsevier BV on behalf of Faculty of Engineering,
    Alexandria University Recommended articles Mathematical simulations and sensitivity
    visualization of fractional order disease model describing human immunodeficiency
    Alexandria Engineering Journal, Volume 87, 2024, pp. 1-16 Muhammad Asad Ullah,
    …, Talat Nazir View PDF Chebyshev collocation method for fractional Newell-Whitehead-Segel
    equation Alexandria Engineering Journal, Volume 87, 2024, pp. 39-46 E. Gebril,
    …, M. Sameeh View PDF An energy-aware routing scheme based on a virtual relay
    tunnel in flying ad hoc networks Alexandria Engineering Journal, Volume 91, 2024,
    pp. 249-260 Mehdi Hosseinzadeh, …, Asif Mehmood View PDF Show 3 more articles
    About ScienceDirect Remote access Shopping cart Advertise Contact and support
    Terms and conditions Privacy policy Cookies are used by this site. Cookie settings
    | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Alexandria Engineering Journal
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Efficient key distribution for secure and energy-optimized communication
    in wireless sensor network using bioinspired algorithms
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Elhattab K.
  - Abouelmehdi K.
  citation_count: '0'
  description: The field of smart agriculture is ranked among the top areas that uses
    the internet of things (IoT), whose goal is to increase the quantity and quality
    of agricultural productivity. The aim of this work is to realize a new device
    that will be cost-effective, reliable, and autonomous using a solar panel to provide
    electricity in large-scale agricultural fields, ESP32 to interconnect IoT sensors
    and the long range (LoRa) data transmission protocol to guarantee connectivity
    in places where there is no internet, whose objective is to monitor and irrigate
    agricultural fields only when there is a need for water. The data received by
    the sensors is sent to mobile app users via the Blynk cloud. The performance of
    our new approach is measured in terms of energy savings. This new model of irrigation
    and smart monitoring will improve the efficiency of farming techniques.
  doi: 10.11591/eei.v13i2.6346
  full_citation: '>'
  full_text: '>

    "USER Username Password Remember me CITATION ANALYSIS Dimensions Google Scholar
    Scholar Metrics Scinapse Scopus QUICK LINKS Editorial Boards Reviewers Abstracting
    and Indexing Guide of Authors Online Papers Submission Peer Review Process Publication
    Fee Publication Ethics Visitor Statistics DOI Deposit Report Contact Us HOW TO
    SUBMIT   JOURNAL CONTENT Search Search Scope      All Authors Title Abstract Index
    terms Full Text      Browse By Issue By Author By Title INFORMATION For Readers
    For Authors For Librarians ARTICLE TOOLS How to cite item HOME ABOUT LOGIN REGISTER
    SEARCH CURRENT ARCHIVES ANNOUNCEMENTS Home > Vol 13, No 2 > Elhattab Intelligent
    agriculture system using low energy and based on the use of the internet of things
    Kamal Elhattab, Karim Abouelmehdi  Abstract  The field of smart agriculture is
    ranked among the top areas that uses the internet of things (IoT), whose goal
    is to increase the quantity and quality of agricultural productivity. The aim
    of this work is to realize a new device that will be cost-effective, reliable,
    and autonomous using a solar panel to provide electricity in large-scale agricultural
    fields, ESP32 to interconnect IoT sensors and the long range (LoRa) data transmission
    protocol to guarantee connectivity in places where there is no internet, whose
    objective is to monitor and irrigate agricultural fields only when there is a
    need for water. The data received by the sensors is sent to mobile app users via
    the Blynk cloud. The performance of our new approach is measured in terms of energy
    savings. This new model of irrigation and smart monitoring will improve the efficiency
    of farming techniques.  Keywords  ESP32; Internet of things; Irrigation; Long
    range; Monitoring  Full Text: PDF   DOI: https://doi.org/10.11591/eei.v13i2.6346
    Refbacks There are currently no refbacks.    This work is licensed under a Creative
    Commons Attribution-ShareAlike 4.0 International License.  Bulletin of EEI Stats
    Bulletin of Electrical Engineering and Informatics (BEEI) ISSN: 2089-3191, e-ISSN:
    2302-9285 This journal is published by the Institute of Advanced Engineering and
    Science (IAES) in collaboration with Intelektual Pustaka Media Utama (IPMU)."'
  inline_citation: '>'
  journal: Bulletin of Electrical Engineering and Informatics
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Intelligent agriculture system using low energy and based on the use of the
    internet of things
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Huang W.
  - Xia J.
  - Glamuzina B.
  - Zhang X.
  citation_count: '0'
  description: Flexible sensors are widely used in human and animal health assessment
    due to their excellent biocompatibility and stretchability. Fisheries health assessment
    for complex application scenarios usually requires expensive instruments for analysis,
    undoubtedly increasing the complexity and reducing the efficiency of the system.
    This review focuses on employing flexible multimodal sensing systems for precise
    detection or monitoring of parameter responses in aquatic environments. It analyzes
    parameters characterizing the health status of aquatic animals in various scenarios,
    from representation to perception of information to decision modeling. Additionally,
    it explores the mechanisms of flexible multimodal sensing for detecting these
    parameters and delves into the challenges of parameter crosstalk and decoupling.
    Subsequently, discussing a multi-scale dynamic model for accurately recognizing
    the life state of aquatic animals concerning the multi-scale spatio-temporal evolution
    process of aquatic life feature decay. Lastly, discussing the challenges and future
    development trends of flexible multimode sensing systems.
  doi: 10.1016/j.compag.2024.108758
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Evaluation system of stress/health
    indicators for aquatic animals 3. Flexible multimode sensing mechanisms and decoupling
    principles for parameter sensing 4. Modelling method for a flexible multimode
    system for aquatic animal health detection 5. Conclusions and future prospects
    CRediT authorship contribution statement Declaration of competing interest Acknowledgements
    Data availability References Show full outline Figures (6) Tables (4) Table 1
    Table 2 Table 3 Table 4 Computers and Electronics in Agriculture Volume 219, April
    2024, 108758 Review of flexible multimode sensing techniques and their decoupling
    principles for smart fisheries Author links open overlay panel Wentao Huang a,
    Jie Xia a, Branko Glamuzina b, Xiaoshuan Zhang a c Show more Add to Mendeley Share
    Cite https://doi.org/10.1016/j.compag.2024.108758 Get rights and content Highlights
    • • Flexible multimodal sensing system for life and health detection of smart
    fisheries. • • A flexible multimodal sensing mechanism for smart fisheries health
    parameter detection is analyzed. • • The parameter crosstalk and decoupling problems
    in multi-parameter sensing are discussed in depth. • • A multiscale dynamics model
    for accurate identification of aquatic animal life states is explored. Abstract
    Flexible sensors are widely used in human and animal health assessment due to
    their excellent biocompatibility and stretchability. Fisheries health assessment
    for complex application scenarios usually requires expensive instruments for analysis,
    undoubtedly increasing the complexity and reducing the efficiency of the system.
    This review focuses on employing flexible multimodal sensing systems for precise
    detection or monitoring of parameter responses in aquatic environments. It analyzes
    parameters characterizing the health status of aquatic animals in various scenarios,
    from representation to perception of information to decision modeling. Additionally,
    it explores the mechanisms of flexible multimodal sensing for detecting these
    parameters and delves into the challenges of parameter crosstalk and decoupling.
    Subsequently, discussing a multi-scale dynamic model for accurately recognizing
    the life state of aquatic animals concerning the multi-scale spatio-temporal evolution
    process of aquatic life feature decay. Lastly, discussing the challenges and future
    development trends of flexible multimode sensing systems. Previous article in
    issue Next article in issue Keywords Flexible sensorMulti-scale perceptionSensing
    mechanismSmart agricultureMachine learning 1. Introduction Aquatic animals are
    vital for ecosystems, providing food and economic value while maintaining balance
    (Heino et al., 2021). Throughout the lifecycle of aquatic animals, they undergo
    a range of environmental stimuli and interactions with aquatic animals, commonly
    referred to as adversity stress factors (Zhang et al., 2019). Within the realm
    of aquaculture, temperature, and salinity, recognized as two pivotal adversity
    factors, wield a direct influence over the survival and viability of aquatic products
    (Hutson et al., 2022). In the context of transportation, the variables of presence,
    absence, and low temperature, identified as the primary adversity factors (Zhang
    et al., 2020), are inclined to trigger stress responses in aquatic products. Such
    responses notably impact both the safety and the nutritional quality of these
    aquatic offerings. The conventional approach presently employed involves assessing
    the biochemical markers to understand the life traits of aquatic products (López-López
    and Sedeño-Díaz, 2015). While this approach boasts stability, it grapples with
    issues of time consumption, labor intensiveness, and inefficiency. Consequently,
    an increasing body of research is focused on incorporating sensors into the realm
    of health assessment for aquatic animals. Amid the era of Industry 4.0, the assessment
    of aquatic animal health has advanced to an intelligent perceptual level. Researchers
    have made strides in two key avenues. First, they''ve explored underwater tactile
    sensors and in-situ glucose/cortisol monitoring sensors that can signal and alert
    aquatic animals to adversity stress, encompassing a range of adaptable sensing
    systems. Second, there''s a growing focus on environmental stimuli, such as water
    quality microelement content (Vanderzwalmen et al., 2021), oxygen gas concentration
    shifts (Feng et al., 2022), and temperature and humidity fluctuations (Boaventura
    et al., 2021), which serve as indicators of potential life deterioration in animals.
    Natural and material sciences have boosted flexible electronic tech in detecting
    living organisms'' health (Wang et al., 2021, Qiu et al., 2020). However, conventional
    flexible sensing systems have predominantly been single-mode setups, intended
    to capture specific reactions of sensing materials to external triggers. Yet,
    when addressing intricate scenarios like multi-parameter assessment amidst the
    stress experienced by aquatic animals, deploying multiple sensors based on target
    analytes becomes imperative. This, however, invariably escalates system intricacy
    and introduces challenges related to wearable comfort (Duan et al., 2022). In
    response, the concept of a flexible multimodal sensing system emerges, capable
    of concurrently capturing data from various parameters within a confined space
    (Zhang et al., 2022, Huang et al., 2023). This approach not only addresses these
    challenges but also holds significant potential for streamlined system integration.
    The common method for creating flexible multimodal sensors involves combining
    different sensitive materials to create various electrical signals (Pyo et al.,
    2021, Cai et al., 2022). However, these multi-material systems tend to be intricate
    in terms of structural engineering and preparation processes (Nazir et al., 2023).
    Integrating multiple sensing units into a single platform using methods like lay-flat
    or lamination invariably triggers challenges pertaining to interfacial stability
    among materials. Simultaneously, the dependability of electrode connections and
    the meticulousness of device packaging are concerns that can easily go unnoticed
    (Yang et al., 2022). Moreover, in the operational realm of multimodal sensors,
    the coexistence of multiple target input signals can impede the precise measurement
    of said signals due to signal coupling (Zhao et al., 2022). Given this, there
    exists substantial value in investigating the comprehensive device architecture
    of flexible multimodal sensor devices (Gao et al., 2020). This includes an analysis
    of their multiplexed sensing mechanisms and the principles of decoupling. Such
    an exploration holds the potential to enhance measurement accuracy and bolster
    the environmental stability of sensing systems. Furthermore, combining the flexible
    system with modeling algorithms can provide crucial insights for precise monitoring
    of aquatic animals dealing with stress from adversity. This paper aims to clarify
    how flexible multimodal sensing technology can be applied in smart fishery detection.
    By analyzing the existing work, a comprehensive analysis and in-depth discussion
    are conducted so as to focus on the further integration and synergistic optimization
    of these two important fields. It also aims to help researchers and stakeholders
    better grasp the crucial role of flexible sensing technology throughout the fisheries
    life cycle. The primary contributions of this paper are outlined as follows. First,
    it conducts a comprehensive analysis of parameters that define the health status
    of aquatic animals in various application scenarios (Fig. 1a). Next, it delves
    into examining the flexible multimodal sensing mechanism for parameter detection
    and conducts a thorough analysis of the decoupling principle within the flexible
    multimodal sensing system (Fig. 1b). Lastly, the paper presents a detailed introduction
    to information fusion and decision-making process modeling based on multi-scale
    parameter inputs (Fig. 1c). Download : Download high-res image (218KB) Download
    : Download full-size image Fig. 1. Application framework of flexible multi-mode
    sensing technology in the field of aquatic product health detection. (a) According
    to the characteristics of different aquatic animals and application scenarios,
    select and measure the indicators that characterize the quality of aquatic animal
    quality which will be discussed in Section 2. (b) Explore the preparation requirements
    of flexible multi-modal sensor devices, and analyze its multi-channel sensing
    mechanism and decoupling principle, which will be discussed in Section 3. (c)
    Import the data collected by the flexible system into the prior model, establish
    a correlation analysis model between the data and the biochemical indicators of
    aquatic animals, and invert the health status of aquatic animals through the deep
    learning model, which will be discussed in Section 4. 2. Evaluation system of
    stress/health indicators for aquatic animals Before preparing and applying suitable
    flexible sensors, it''s crucial to specify the parameters that characterize the
    health of aquatic animals. These indicators cover both internal and external aspects.
    Internal indicators pertain to the biochemical markers of aquatic animals, with
    blood glucose concentration and cortisol levels (Gronquist and Berges, 2013) being
    the most typical representatives. Conditions like overcrowding and poor water
    quality can lead to deviations in these biochemical indicators (Peres et al.,
    2014). External indicators, on the other hand, encompass physiological markers
    such as respiration rate and observable behavioral changes. While the former offers
    an intuitive reflection of stress levels, its data collection poses challenges.
    The latter, though indicative of stress intensity, lacks quantitative measurability
    (Li et al., 2022). This study focuses on environmental stressors'' impact on aquatic
    animals. Consequently, the characterization parameters (CPRs) for aquatic animal
    health status have been restructured into three distinct categories: biochemical,
    physiological, and environmental parameters, as illustrated in Fig. 2. It also
    conducts a comprehensive risk analysis following HACCP principles (as shown in
    Table 1) across the entire animal process (Pierson, 2012). Additionally, it outlines
    measurement scenarios and associated parameter ranges. Download : Download high-res
    image (415KB) Download : Download full-size image Fig. 2. Characterization parameters
    for aquatic animal health status. It is divided into a parameter layer, an indicator
    layer and an application layer. Table 1. Control limits and corrective measures
    for critical control points during the aquatic animal farming transport chain.
    Procedure Potential hazards Control measures CCP Critical limit Adjustments CPR
    S1: Farming Low dissolved oxygen concentration Aeration YES >6mg/L Continuous
    aeration III Heavy metal residues Rational use of pesticides Yes Refer to the
    standard Strictly control the amount of use I, III S2: Fishing Mechanical injury
    Optimizing breeding density NO – Reduced unit farming density I S3: Packaging
    Gas ratio Gas regulation YES <15℃ Control of oxygenation ratio III S4: Transport
    Fluctuations in environmental factors Real-time monitoring and control YES O2
    > 60 % Timely supplemental oxygen III Physiological factor fluctuations Controlled
    transport speed YES 12 ∼ 18 m/s Uniform velocity II S5: Retail Loss of quality
    (viability, sensory degradation) Strict operational norms NO – Strict temperature
    control III 2.1. Biochemical parameter Biochemical parameters mainly include blood
    glucose (GLU), cortisol (GOR), myoglycogen (GLY), and lactate (LA) in aquatic
    animals. These indicators decrease rapidly during adversity stress, helping the
    organism defend against external factors (Wang et al., 2022). If transport stress
    exceeds the organism''s tolerance, these values can significantly increase, causing
    partial irreversible damage. Usually, these indicators are measured directly using
    various instruments (Hook et al., 2014). 2.2. Physiological parameter Physiological
    parameters in aquatic animals include observable markers like respiratory rate,
    respiratory angle amplitude, and abnormal behaviors. During intense stress, animals
    show noticeable behavior changes like jumping, tail swinging, and flipping, followed
    by increased respiration rates. Traditional measurement methods rely on manual
    observation, which isn''t suitable for widespread use. In contrast, flexible sensing
    technology, due to its favorable biocompatibility, can be attached to aquatic
    animals'' surfaces. This allows quick detection of abnormal behaviors, offering
    a more accurate assessment of their physiological state. 2.3. Environmental parameter
    Environmental parameters cover elements like temperature, humidity, microelements,
    and gases in both culture and transport settings. Physical factors such as light
    and vibration intensity are also considered. Among these, temperature significantly
    affects aquatic animals'' physiological state. Prolonged exposure to low temperatures
    can damage tissues, leading to increased serum indicators like cortisol and cholesterol
    (Fırat et al., 2011). Concurrently, temperature fluctuations contribute to the
    accrual of humidity levels. The cumulative elevation of microelement concentrations
    within water quality significantly influences the aquatic animals'' habitat, thereby
    engendering anomalous physiological markers. Moreover, other parameters like light
    intensity and vibration may precipitate episodes of acute stress within aquatic
    animals (Jones et al., 2022). 3. Flexible multimode sensing mechanisms and decoupling
    principles for parameter sensing 3.1. Flexible multimode sensing mechanisms 3.1.1.
    Flexible sensing technology characterizes aquatic animal health detection The
    crucial parameters for aquatic organisms mainly include blood glucose levels,
    ECG signals, and behavioral traits (like activity levels and tail swing frequency).
    Fluctuations in these parameters offer insights into their overall health (Huang
    et al., 2019). The methodologies employed for detecting life characteristic parameters
    are notably diverse. One category hinges on traditional rigid processing circuits,
    integrating specialized detection electrode systems or online monitoring apparatus
    to facilitate real-time data collection of vital information like blood glucose
    and ECG signals within aquatic animals (Ren et al., 2022, Yang et al., 2021).
    This approach capitalizes on the well-established maturity and stability of rigid
    circuit technology, consequently yielding data that is often more precise. However,
    this method unavoidably grapples with concerns like functional impairment, interference
    with normal activities, and heightened power consumption by the animals. The evolution
    of flexible electronic technology has presented a viable avenue for addressing
    these challenges. For instance, the team led by Wang pioneered a fully flexible
    wearable platform designed for underwater energy harvesting and fish behavior
    monitoring. This innovative platform employs a wireless communication system to
    capture fish swing angles, frequencies, and even postures (Wang et al., 2022).
    Similarly, Cheng et al. devised a high-resolution haptic sensing array serving
    as a wearable biomechanical tag, enabling continuous recording and analysis of
    varied behavioral activities in aquatic animals (Cheng et al., 2022). These flexible
    devices confer significant advantages to the field of aquatic bio-physiology research
    due to their biocompatibility, mechanical flexibility, and environmental stability.
    However, they do grapple with complex fabrication processes, elevated material
    costs, single-device functionality, and the prerequisite for intricate data processing
    algorithms. These challenges demand immediate attention and resolution. Furthermore,
    researchers have made notable strides in the development of fiber-optic temperature-depth
    salinity (CTD) sensors for underwater multi-parameter monitoring, with the foundation
    being optical sensing. A comprehensive review of domestic and international research
    demonstrates a predominant focus on various types of fiber grating, fiber interferometer,
    and fiber surface plasmon resonance (SPR) CTD sensors (Qian et al., 2018). Notably,
    flexible sensing technologies have found application in CTD monitoring as well.
    Techniques like laser engraving (Nag et al., 2017) and magnetron sputtering (Li
    et al., 2022) have been employed to create cost-effective, compact, and easily
    integrable underwater sensor devices. These devices function effectively under
    substantial hydrostatic pressures and in high-salinity environments, significantly
    diminishing both system power consumption and geometry. For a detailed comparison
    of the advantages and drawbacks of flexible technology and other alternatives
    in terms of detecting environmental and life feature parameters in aquatic animals,
    refer to Table 2. Table 2. Techniques for detecting environmental/vital parameters
    in aquatic animals (flexible technology compared to other technologies). Form
    Detection Technology Parameter Advantage Disadvantage Ref. Environmental parameters
    Optical Sensing Fibre optic interferometer Temperature High sensitivity High power
    consumption; (Zhang et al., 2011) Fibre optic SPR type Temperature/ Salinity/
    Pressure Compact configuration Cross-sensitivity interference (Zhao et al., 2019)
    Flexible Sensing Electrochemical Impedance Salinity Simple preparation and low
    cost; Complex preparation process; (Nag et al., 2017) Resistance Temperature/
    Salinity Simple preparation; long life; easy integration Poor reproducibility;
    (Li et al., 2022) Vital parameters Rigid Circuitry Electrochemical Blood Glucose
    High sensitivity and linearity; low power consumption; non-invasive Poor environmental
    stability and signal interference (Shao et al., 2016) Infrared Cardio Real-time
    online acquisition with high information content; non-destructive Large size of
    the device and the impact of individual differences (Ren et al., 2022) Flexible
    Sensing Friction Nanogenerator Behaviour Mechanical flexibility, conformability;
    good real-time performance Complex preparation process (Wang et al., 2022) Synthesised
    Rigid Circuit Integration Pressure / Magnetic Field / Cardiac Extremely high level
    of integration; wireless transmission Poor biocompatibility and difficult to deploy;
    (Yang et al., 2021) Capacitive flexible multimodal sensing Temperature/ Salinity/
    Depth/ Behaviour Ultra-thin, small size, highly integrated; high fidelity, real-time,
    stability Complex and expensive preparation process; complex test setups (Cheng
    et al., 2022) 3.1.2. Preparation of flexible multimode sensors for aquatic animal
    health detection The working mechanisms of flexible sensors for environmental
    and physiological indicator monitoring (Fig. 3a) usually include electrical (resistive,
    capacitive, and piezoelectric), optical, and electromagnetic mechanisms (Alam
    et al., 2020), which are also applicable to aquatic animals. Attaining high-resolution
    and high-sensitivity responses to external stimuli requires meticulous material
    (Fig. 3b) and structural (Fig. 3c) design. Recently, flexible sensing systems
    for aquatic animal health detection have progressed from simple physical parameters
    to more complex environmental and physiological parameters (Fig. 3d). Download
    : Download high-res image (173KB) Download : Download full-size image Fig. 3.
    (a) Working mechanism of flexible sensors for environmental, physiological parameters
    monitoring. (b) Materials and structures of flexible sensors. (c) Trends in the
    application of flexible sensors in the field of aquatic animal detection. 3.1.3.
    Sensing mechanism Among the myriad signals inherent in nature, temperature and
    force assume pivotal roles in daily life due to their direct or indirect capacity
    to characterize shifts in environmental and physiological states (Miao et al.,
    2019, Han et al., 2019). Mechanical deformation stands as a foundational physical
    parameter within living environments. Of the diverse forms scrutinized within
    flexible electronic systems, tensile strain, pressure, and bending have emerged
    as most thoroughly examined. For aquatic animals, a spectrum of signals can be
    monitored, encompassing their physiological electrical signals (like EEG, EMG,
    ECG), biophysical cues (such as body temperature, respiratory rhythm, haptics),
    and biochemical markers (including blood glucose, cortisol, pH). To illustrate,
    body and caudal fin movements can be employed as vital benchmarks for animal behavioral
    investigations, continuously captured using strain (haptic) sensor devices. Concurrently,
    the monitoring of skin temperature, aquatic environment temperature, and salinity
    is imperative, given their profound influence on the growth, development, and
    metabolic processes of aquatic organisms (Nassaj-Bokharaei et al., 2021). Strain
    and pressure sensing commonly use piezoresistive, piezoelectric, friction electric,
    and capacitive effects. Temperature sensing, on the other hand, relies on mechanisms
    such as thermoresistive, pyroelectric, thermocapacitive, and thermal expansion
    effects. Physiological signals are often detected through optoelectronic, electrochemical,
    and changes in resistance and capacitance of specific materials when exposed to
    external stimuli (Duan et al., 2020, Xie et al., 2019). Efforts to achieve synchronized
    responses to varied stimuli have spurred exploration into combining two or three
    types of mechanisms. This includes methods involving electrical signals, as well
    as optical and magnetic signals, and joint studies of electrical and optical/magnetic
    signals. 3.1.4. Materials and structures The successful design of flexible multimodal
    sensors necessitates a harmonious amalgamation of material selection, mechanism
    integration, structural design, and sensor fabrication processes. This integration
    taps into functional materials to achieve intended functionalities, especially
    challenging when dealing with aquatic animals'' unique demands. The design should
    focus primarily on sensing materials and structures. Innovative structures using
    familiar materials and new functional materials in traditional setups are crucial.
    Materials like MXene, graphene, carbon nanotubes, and aerogels are core elements
    in flexible multimodal systems due to their outstanding properties. Since some
    devices directly interact with aquatic animals, material safety and corrosion
    resistance become crucial. PDMS, known for its biocompatibility, breathability,
    and non-toxicity, becomes the preferred substrate material in such scenarios.
    Furthermore, effective structural designs include multifaceted approaches such
    as multilayered functional membranes, multi-pixel layouts, porous microstructures,
    serpentine structures, origami (or open mesh), fabrics, fibers, 3D structures,
    and the convergence of these with micro-patterns (Yun et al., 2018, Hu et al.,
    2019). An array of desirable attributes can be attained through adept structural
    design, and the preparation of flexible multimodal sensing systems employs individual
    or hybrid processes. For instance, a gamut of manufacturing tools—ranging from
    photolithography, spraying, spin-coating, and self-assembly to vapor-phase deposition,
    laser direct writing, electrospinning, and various printing techniques (including
    screen-printing, transfer-printing, and 3D printing)—has found extensive application
    in crafting these systems (Xie et al., 2019, Li et al., 2022). However, despite
    advancements, scalable fabrication and commercial deployment of flexible systems
    remain modest, necessitating future enhancement of fabrication methodologies,
    both traditional and novel, involving chemical and mechanical techniques (Hong
    et al., 2017). 3.1.5. Application scenario In diverse contexts like aquatic animal
    farming, transportation with or without water, and marketing, literature has highlighted
    a range of flexible multimodal sensors. These sensors include physical, chemical,
    and physiological sensing units. These devices incorporate sensing mechanisms,
    structural blueprints, and fabrication methods. The essential components of flexible
    multimodal devices often include physical sensing units like strain, temperature,
    and humidity sensors as central elements. Additionally, chemical and physiological
    sensors serve as supplementary units. Table 3 presents a compilation of diverse
    flexible multimodal sensor devices that harness physical, chemical, and physiological
    attributes. Table 3. Summary of Flexible Multimodal Sensor Devices. Category Response
    Mechanism Sensing Parameters Sensitivity/Linearity/detection range Sensing Material
    Device structure Preparation process Ref. Physical Optical Strain/Temperature/Pressure/Humidity/Acceleration
    Strain:2–5 dB e-1 Bend:7–24 dB cm−1 Pressure:0.9–1.2 dB N−1（2–5 N） PU/Silicone
    Elastomers Core Clad Fibre Lamination (Bai et al., 2020) Resistivity Strain/Temperature/Pressure/Humidity
    Temperature:2.14 % ℃-1（20–35 ℃）, 0.944 % ℃-1（35–52 ℃）, 0.471 % ℃-1（52–70 ℃） Humidity:（45
    %–85 %） Ionic PVA Gel/Glycerine Sheet/Film Freeze-thawing (Pan et al., 2020) Resistive
    type / Thermoelectric / Capacitive type Strain/Temperature/Pressure/Humidity Pressure:0.41
    kPa−1（0–200 kPa） Temperature:（30–55 ℃） Humidity:0.08（10 %–60 %） SNR/PI/PDMS Multi-layer/serpentine
    metal wire Spin Coating/Lithography (Kim et al., 2014) Physicochemical Resistive
    Pressure/Temperature/PH/Chemicals Pressure:0.073 μA/Pa Temperature:（45℃, 65 ℃）
    PAM hydrogel/ITO Pyramid Microstructure Gel Film Solution Mixing (Yun et al.,
    2018) Resistive/Transistor Pressure/Temperature/Humidity/Light/Gas Pressure:0.04
    kPa−1（50 Pa） UV–vis:5.2 × 1010 Jones Temperature:2.2 % ℃-1 NO2:33.6 % ppm−1 IGZO/CuO/PEDOT:PSS/IL/SEBS
    Thin Film Solution Mixing / Blow Moulding (Wang et al., 2020) Flexible Hybrid
    Electronics Temperature / Humidity / Flow / Acceleration / Motion / Temperature:（2–20
    ℃） Flow:（0–3 m s−1） Materialistic:6 Humidity:（15 %–70 %） Energy Density:3 μW cm−2
    Bi2Te2.8Se0.2/Bi0.5Te3Sb1.5/PI/Poly(p-xylene) Thin Film FPC/Etching (Yamamoto
    et al., 2016) Physical + physiological Field Effect Transistor / Thermal Resistance
    Effect Temperature / Cardio / UV / Acceleration Temperature:0.89 % ℃-1（25–45 ℃）
    Acceleration:0.064, 0.057, 0.00 % s2 m（5–12 m s−2） Ag/PET/PEDOT:PSS/Al2O3/Liquid
    metal/SR/PDMS Paper cutouts Printing/Coating/Sputtering (Yuan et al., 2020) Flexible
    Hybrid Electronics Temperature / ECG / PI/Liquid Metal Thin Film/Multi Sensor
    Unit Solution Mixing/Laser (Shi et al., 2020) Physicochemical + Physiological
    Resistive/Electrochemical Temperature / ECG / EMG / EEG / Sweat PH / Uric acid
    / Glucose Temperature:-0.36 % ℃-1（30–50 ℃）, Cardiac/Electromyography: Signal-to-Noise
    Ratio 30 dB pH:35 mV/decade（3–10） Uric acid:21.9nA μM−1（0–600 μM） Glucose:1.64nA
    μM−1（0–90 μM）, 3.04nA μM−1（90–600 μM） Graphite/cellulose paper Arbitrary trace
    Pencil drawing (Xu et al., 2020) Numerous flexible sensing systems tailored for
    aquatic animal detection have emerged. Fig. 4(a) and (b) illustrate flexible sensing
    systems designed for fish pH and impedance information detection, respectively
    (Mu et al., 2022, Zhang et al., 2023). These systems are adept at direct attachment
    to the aquatic animals'' surfaces to capture pertinent information. However, the
    limitation of single-mode systems lies in their ability to discern only a solitary
    parameter, failing to furnish comprehensive insights to guide the health assessment
    of aquatic organisms. Download : Download high-res image (519KB) Download : Download
    full-size image Fig. 4. (a) Flexible passive wireless electronic system for pH
    detection in live fish (Mu et al., 2022). (b) Flexible impedance system for oyster
    health detection (Zhang et al., 2023). (c) Flexible electronic system for monitoring
    “physiological-environmental” information in sturgeon (Xia et al., 2023). (d)
    Flexible multimode electronic system for “biochemical-environmental” information
    detection in live fish (Zhang et al., 2023). (e) Flexible radio-electronic systems
    for “behavioural-environmental” information detection in live fish (Lee et al.,
    2018). (f) Flexible multimode sensing systems for “psycho-behavioural-environmental”
    information detection in live fish (Yang et al., 2021). To address this issue,
    the research team investigated an advanced physiological-environmental flexible
    multimodal system. This system comprises stretchable electrodes at the forefront
    and FPCB circuits at the rear, specifically designed for attachment to sturgeon
    gills. This pioneering system continuously monitors respiratory indicators, temperature,
    and humidity of sturgeons. This amalgamation affords effective diagnosis of stress
    levels in sturgeons (depicted in Fig. 4(c)) (Xia et al., 2023). Furthermore, a
    groundbreaking non-invasive blood glucose sensor (BGL) has been crafted for turbot,
    operating through skin mucus (Zhang et al., 2023). This wearable stress detector
    offers real-time insights into the health status of live fish, bridging the gap
    left by traditional invasive biochemical tests (as showcased in Fig. 4(d)). Advancements
    in optoelectronic components have precipitated the reduction in size of the flexible
    multimode system. This enables the potential for in vivo implantation in aquatic
    animals, facilitated by the system''s adaptability to the optical complexities
    of animal tissues (illustrated in Fig. 4(e)) (Lee et al., 2018). The world''s
    inaugural flexible multimode sensing system has been introduced, merging psychological,
    behavioral, and environmental parameters. This innovation boasts the capacity
    for wireless communication underwater, with a reach of 400 m, and sustains functionality
    for 8 months (Yang et al., 2021). The main argument emphasizes the significant
    advantage of the flexible multimode system over its single-mode counterpart. Shifting
    the research focus from “one system to one outcome” to “one system to multiple
    outcomes” enables simultaneous detection and analysis of various parameters. This
    enhances the understanding of detailed health intricacies, marking a crucial stride
    toward advancing animal health diagnostics into a new era. 3.2. Principles of
    flexible multimodal decoupling As discussed in the preceding section, flexible
    multimodal sensors capable of simultaneous multi-parameter sensing have found
    diverse applications in aquatic animal health detection. Nonetheless, the presence
    of cross-sensitivity poses challenges to the precision and dependability of measurements
    when multiple target input signals are concurrently present. In addressing this
    concern, the selection of multifunctional materials and the design of sensor structures
    emerge as pivotal factors in crafting multimodal sensors with distinct sensing
    mechanisms. The material-oriented perspective enables the achievement of multimodal
    decoupling via a solitary sensing unit composed of innovative functional materials.
    Selective signaling is accomplished through the modulation of concentration thresholds,
    morphological structures, and response mechanisms of the materials. Moreover,
    a combination of these features and an exploration into the characteristics of
    output curves themselves further enhance the approach. For instance, in Fig. 5a,
    an interlocked quasi-hemispherical micropatterned electronic skin is depicted,
    utilizing single-walled carbon nanotubes and thermoplastic polyurethanes. This
    configuration exhibits swift responsiveness to pressure changes and a more gradual
    response to temperature shifts. This difference in behavior enables pressure determination
    based on rapid resistance changes, while additional resistance variations after
    the curve''s inflection point provide insights into temperature changes (Zhang
    et al., 2021). Download : Download high-res image (422KB) Download : Download
    full-size image Fig. 5. Classification of applications of flexible multimodal
    decoupling methods. (a) (b) (c) Flexible multimodal sensing decoupling strategies
    under novel materials (Zhang et al., 2021, Zhang et al., 2015, Liu et al., 2016).
    (d) (e) (f) Flexible multimode sensing decoupling strategy under miniature innovative
    structures (Jung et al., 2017, Zhu et al., 2019, Luo et al., 2021). (g) (h) Flexible
    multimode sensing decoupling strategy based on electrical signal calibration (Lei
    and Wu, 2018, Ma et al., 2020). Another notable example involves immersing PEDOT:
    PSS into a porous polyurethane microstructure, creating a dual-mode sensor for
    temperature and pressure detection (Fig. 5b). The I-V output curve''s slope relative
    to the intercept generates two distinct outputs, effectively decoupling the two
    input signals (Zhang et al., 2015). In tackling the challenge of multiple input
    parameter crosstalk, the deliberate design of material response mechanisms proves
    effective. Take, for instance, the utilization of K3[Fe(CN)6]/K4[Fe(CN)6] solutions
    with thermocurrent properties for temperature sensing. By combining these solutions
    with two conductive plates, it becomes possible to gauge the force generated via
    reverse electrical wetting under pressure (Fig. 5c). The thermo-current characteristics
    enable direct voltage changes in response to temperature shifts, while pressure
    sensing relies on alternating pulse voltage inducing droplet shape changes and
    reverse electrical wetting, enabling simultaneous temperature and pressure measurement
    via direct and pulsed voltage readings (Liu et al., 2016). One common structural
    strategy integrates various sensing units or electrode patterns into a platform
    using tiling or laminating. Existing literature falls into two main categories:
    One solely analyzes sensor performance parameters under different stimuli but
    lacks exploration of coupling and crosstalk among these parameters. The other
    effectively separates dual-mode physical parameters using sensitive materials
    with distinct responses and well-planned sensing mechanisms, organized logically
    within the layout of the sensing units. Temperature sensors constructed from poly
    (ethylenedioxythiophene) - poly (styrenesulfonate) and silver nanoparticle composites
    generate thermoelectric voltages in thermocouples, while miniature pyramid pressure
    sensors exhibit resistance changes due to contact area variations caused by pressure
    (Fig. 5d) (Jung et al., 2017). Notably, even when both temperature and pressure
    are concurrently applied to the sensing platform, the distinct sensing mechanisms
    effectively eliminate crosstalk. A similar example involves employing thermoelectric
    materials as temperature sensing electrodes and piezoelectric materials for pressure
    sensing, effectively decoupling the two modes (Fig. 5f). The thermoelectric and
    piezoelectric layers remain independent of each other (Zhu et al., 2019). Moreover,
    beyond leveraging different sensing mechanisms and response parameters attributed
    to distinct materials, the same materials can also be fashioned into diverse structures
    to mitigate crosstalk. As demonstrated by the tri-modal flexible sensors in Fig.
    5e, multi-pixel and serpentine interconnect structures were printed onto PET and
    PI films as electrode layers. This approach minimizes crosstalk while retaining
    a compact configuration by integrating fully printed heterogeneous sensing units
    (Luo et al., 2021). In scenarios where completely mitigating cross-sensitivity
    between different modalities proves challenging through material advancements
    and structural amalgamations, the necessity for decoupling persists. This is achieved
    through electrical signal calibration. For instance, consider a setup involving
    a chitosan-based dielectric layer placed between an upper ITO electrode and a
    lower PDMS microcone electrode coated with Au. In this configuration, pressure-induced
    deformation on the microcone alters the interfacial contact area, resulting in
    a linear capacitance reaction. Simultaneously, an increase in temperature boosts
    the population and mobility of free ions, leading to a linear increase in capacitance.
    Using linear interpolation, all potential combinations of Cf1 and Cf2—corresponding
    to varying pressures and temperatures—can be derived (Fig. 5g). Consequently,
    the applied temperature and pressure become ascertainable through a three-dimensional
    data surface (Lei and Wu, 2018). Thermally resistive stretchable electrodes in
    capacitive sensors allow the decoupling of temperature and strain. By incorporating
    a conductive NaCl solution into a hydrogel, stretchable electrodes detect strain-induced
    changes in capacitor gap due to pressure, alongside temperature-induced variations
    in ionic resistance (Fig. 5h). Notably, temperature changes do not affect capacitance
    measurements, enabling the initial assessment of strain. The hydrogel''s ionic
    resistance decreases with increased temperature of the ionic liquid and electronic
    conductor, while it increases due to electrode expansion caused by strain. The
    strain determined from the capacitance reading can be substituted into the resistance
    calibration curve for deriving the alteration in temperature within the application
    context (Ma et al., 2020). 4. Modelling method for a flexible multimode system
    for aquatic animal health detection 4.1. Modelling methods for aquatic animal
    health detection Various modeling approaches are employed for detecting aquatic
    animal health issues, including both traditional machine learning algorithms (ML)
    (Patel et al., 2022) and more advanced deep learning algorithms (DL) (Mahesh,
    2020, Patel and Sharaff, 2023). Traditional machine learning encompasses classical
    techniques like multilayer perceptrons and support vector machines (Maroco et
    al., 2011). On the other hand, deep learning involves a range of neural network
    algorithms, such as artificial neural networks, convolutional neural networks,
    and recurrent neural networks (Zuo et al., 2022). Researchers select the most
    suitable intelligent algorithm based on specific scenario characteristics (Patel
    and Sharaff, 2023, Patel and Sharaff, 2020). Typically, an 8:2 ratio between training
    and test sets is used, with evaluation metrics like R2, EMSE, and MAP values being
    employed to assess the model''s performance (Fig. 6a). Download : Download high-res
    image (508KB) Download : Download full-size image Fig. 6. Classification of applications
    of flexible multimodal decoupling methods. (a) Deep parsing of the link between
    data collected by flexible multimodal systems and aquatic animal health through
    deep learning modelling methods. (b) Various deep learning algorithms (Feng et
    al., 2022, Zuo et al., 2022, Zambrano et al., 2021, Wei et al., 2021). (c) Procedures
    for characterising aquatic animal health status with flexible sensors. In the
    context of aquatic animal health detection, modeling algorithms are primarily
    used to analyze microenvironmental parameter data (Fig. 6b) since biochemical
    indicators provide direct insights into the animals'' health status. For instance,
    in desiccated transport scenarios, the GA-ARMA algorithm collects temperature,
    humidity, and gas concentration data, indirectly reflecting the health of live
    fish and improving transportation management (Feng et al., 2022). Artificial neural
    network algorithms continuously monitor parameters like dissolved oxygen levels,
    pH, and water temperature in fish pond water, predicting future environmental
    conditions (Zambrano et al., 2021). An improved random forest algorithm processes
    data from multiple sensors to effectively analyze the chemical and physical traits
    of fish (Wei et al., 2021). Moreover, a stress level assessment model rooted in
    environmental and stress indicators can be developed through the CNN-SVM algorithm
    (Zuo et al., 2022). This model aids in predicting trends in key salmon indicators,
    facilitating accurate diagnoses of salmon health status. Importantly, researchers
    have moved beyond single-model approaches, opting instead to combine multiple
    deep learning algorithms (Patel and Sharaff, 2023). This fusion not only enhances
    prediction precision and accuracy but also provides access to more valuable information.
    4.2. Total integration of flexible multimode sensing systems Flexible multimode
    sensing technology aims to comprehensively evaluate various signals in aquatic
    animals, targeting stress indicators and micro-stress indicators. This involves
    analyzing and selecting suitable stress indicators, designing corresponding equipment,
    and creating data fusion methods for quantitative assessments of animal health.
    This approach also facilitates a comprehensive evaluation and online management
    of their living environment. The degradation of aquatic animal life characteristics
    is complex, involving multiscale changes across time and space. Signals related
    to this decay are diverse, weak, and overlapping, posing challenges for modeling
    due to non-linearity, high internal resistance, and multiple interfering factors.
    Identifying effective indicators for characterizing aquatic animal health becomes
    crucial. Subsequently, an analytical model establishing the correlation between
    the flexible system''s measured values and the indicators must be developed. This
    leads to the inversion of the health state of aquatic animals through a predefined
    model (Fig. 6c). The decay of aquatic organisms'' life characteristics spans various
    scales, from cells to individuals. Measured values from the flexible sensing system
    capture changes in parameters like blood glucose and cortisol levels. Simultaneously,
    the vitality of aquatic organisms diminishes due to adverse stress and external
    factors such as temperature, humidity, oxygen, carbon dioxide levels, pH, salinity,
    and transport vibrations. A deep learning model capable of incorporating multi-temporal
    and spatial scale coupling characteristics can be established based on these indicators,
    as outlined in Table 4. Table 4. Dynamic modeling methods for aquatic animal health
    monitoring. Object Input Output Model Method Model Accuracy Ref. Rainbow trout
    Swimming speed Oxygen consumption Multilayer perceptual machines 0.988 (Cooke
    et al., 2000) Sturgeon Glucose, lactate, cortisol Oxygen concentration Particle
    Swarm Optimisation Algorithm, Least Squares 90％ (Zhang et al., 2019) Sturgeon
    Oxygen, carbon dioxide, ambient temperature and relative humidity Glucose Artificial
    Neural Network 96.7 % (Wang et al., 2021) Grouper Radar Signal Respiration rate
    Ordinary linear regression 0.9962 (Wang et al., 2022) Rainbow trout Images Behaviour,
    water quality Hierarchical mixed models with very high maximum likelihood 0.9
    (Davidson et al., 2011) Killifish Salinity, pH, ammonia, nitrite, catalase, reduced
    glutathione peroxidase, and malondialdehyde Behaviour Non-linear regression analysis
    0.995 (Bouvier et al., 2023) Sturgeon Sensor Output Signals Blood glucose Curve
    fitting, grey models, neural networks and time series methods 0.96 (Zhang et al.,
    2023) Salmon Temperature, oxygen and carbon dioxide, respiration rate Cortisol,
    blood glucose, stress Convolutional neural networks, support vector machines >80％
    (Feng et al., 2021) 5. Conclusions and future prospects As previously discussed,
    the remarkable attribute of flexible multimode sensors is their capability to
    gather diverse information from both the internal and external environments of
    aquatic animals. This data connectivity opens up avenues for establishing functional
    links between aquatic life and human observers through internet transmission.
    Integrating sensing principles with deep learning techniques offers promising
    prospects for enhancing and broadening the utility of these systems. However,
    it''s essential to note that despite advancements in labs, much of the research
    on these sensors remains in experimental stages. The shift towards real-world
    commercial applications is a significant endeavor. Looking forward, advancements
    in aquatic animal health monitoring via flexible multimode sensors may emphasize
    technological innovation and system integration. Improving reliability and stability
    in complex aquatic conditions is crucial. System integration aims to process and
    apply sensor data effectively. Managing extensive sensor data requires reducing
    coupling crosstalk and using smarter algorithms for analysis and prediction. Overall,
    the evolution of flexible multimode sensing systems is poised to offer comprehensive
    solutions for monitoring aquatic animal health. CRediT authorship contribution
    statement Wentao Huang: Conceptualization, Investigation, Methodology, Writing
    – original draft, Writing – review & editing. Jie Xia: Conceptualization, Methodology,
    Visualization, Writing – review & editing. Branko Glamuzina: Methodology, Visualization,
    Writing – review & editing. Xiaoshuan Zhang: Funding acquisition, Supervision,
    Writing – review & editing. Declaration of competing interest The authors declare
    that they have no known competing financial interests or personal relationships
    that could have appeared to influence the work reported in this paper. Acknowledgements
    The authors gratefully acknowledge the financial support from the Innovation Research
    Team of Hainan Natural Science Foundation (grant number: 323CXTD380) and the National
    Natural Science Foundation of China (grant number: 62276267). Data availability
    Data will be made available on request. References Alam et al., 2020 M.M. Alam,
    S. Lee, M. Kim, K.S. Han, V.A. Cao, J. Nah Ultra-flexible nanofiber-based multifunctional
    motion sensor Nano Energy, 72 (2020), Article 104672, 10.1016/j.nanoen.2020.104672
    View PDFView articleView in ScopusGoogle Scholar Bai et al., 2020 H. Bai, S. Li,
    J. Barreiros, Y. Tu, C.R. Pollock, R.F. Shepherd Stretchable distributed fiber-optic
    sensors Science, 370 (6518) (2020), pp. 848-852, 10.1002/adma.201804327 View in
    ScopusGoogle Scholar Boaventura et al., 2021 T.P. Boaventura, C.F. Souza, A.L.
    Ferreira, G.C. Favero, M.D. Baldissera, B.M. Heinzmann, B. Baldisserotto, R.K.
    Luz The use of Ocimum gratissimum L. essential oil during the transport of Lophiosilurus
    alexandri: Water quality, hematology, blood biochemistry and oxidative stress
    Aquaculture 531 (2021), Article 735964, 10.1016/j.compag.2021.106642 View PDFView
    articleView in ScopusGoogle Scholar Bouvier et al., 2023 L.D. Bouvier, J.R. Baylis,
    A. Klemetsen, B.K. Kristjánsson, J.L. Li, P. Magnan, R.L. McLaughlin, A.M. Muir,
    Y. Sakakura, S. Skúlason What is a fish? the life and legend of david LG noakes
    Environ. Biol. Fishes, 106 (5) (2023), pp. 725-757, 10.1007/s10641-022-01344-3
    View in ScopusGoogle Scholar Cai et al., 2022 J. Cai, M. Du, Z. Li Flexible temperature
    sensors constructed with fiber materials Advanced Materials Technologies, 7 (7)
    (2022), p. 2101182, 10.1002/adma.202005902 View in ScopusGoogle Scholar Cheng
    et al., 2022 Y. Cheng, C. Guo, S. Li, K. Deng, J. Tang, Q. Luo, S. Zhang, Y. Chang,
    T. Pan Aquatic skin enabled by multi-modality iontronic sensing Adv. Funct. Mater.,
    32 (48) (2022), p. 2205947, 10.1002/adfm.202205947 View in ScopusGoogle Scholar
    Cooke et al., 2000 S. Cooke, K. Chandroo, T. Beddow, R. Moccia, R. McKinley Swimming
    activity and energetic expenditure of captive rainbow trout Oncorhynchus mykiss
    (Walbaum) estimated by electromyogram telemetry Aquac. Res., 31 (6) (2000), pp.
    495-505, 10.1046/j.1365-2109.2000.00470.x View in ScopusGoogle Scholar Davidson
    et al., 2011 J. Davidson, C. Good, C. Welsh, S.T. Summerfelt Abnormal swimming
    behavior and increased deformities in rainbow trout Oncorhynchus mykiss cultured
    in low exchange water recirculating aquaculture systems Aquac. Eng., 45 (3) (2011),
    pp. 109-117, 10.1016/j.aquaeng.2011.08.005 View PDFView articleView in ScopusGoogle
    Scholar Duan et al., 2020 L. Duan, D.R. D''hooge, L. Cardon Recent progress on
    flexible and stretchable piezoresistive strain sensors: From design to application
    Prog. Mater Sci., 114 (2020), Article 100617, 10.1016/j.pmatsci.2019.100617 View
    PDFView articleView in ScopusGoogle Scholar Duan et al., 2022 S. Duan, Q. Shi,
    J. Wu Multimodal sensors and ml-based data fusion for advanced robots Advanced
    Intelligent Systems, 4 (12) (2022), p. 2200213, 10.1002/aisy.202200213 Google
    Scholar Feng et al., 2021 H. Feng, M. Zhang, L. Zhang, B. Chen, X. Zhang Evaluation
    of dynamic stress level and physiological change for live salmon in waterless
    and low-temperature transportation Aquaculture, 544 (2021), Article 737128, 10.1016/j.aquaculture.2021.737128
    View PDFView articleView in ScopusGoogle Scholar Feng et al., 2022 H. Feng, M.
    Zhang, V. Gecevska, B. Chen, R. Saeed, X. Zhang Modeling and evaluation of quality
    monitoring based on wireless sensor and blockchain technology for live fish waterless
    transportation Comput. Electron. Agric., 193 (2022), Article 106642, 10.1016/j.compag.2021.106642
    View PDFView articleView in ScopusGoogle Scholar Fırat et al., 2011 Ö. Fırat,
    H.Y. Cogun, T.A. Yüzereroğlu, G. Gök, Ö. Fırat, F. Kargin, Y. Kötemen A comparative
    study on the effects of a pesticide (cypermethrin) and two metals (copper, lead)
    to serum biochemistry of Nile tilapia, Oreochromis niloticus Fish Physiol. Biochem.,
    37 (2011), pp. 657-666, 10.1007/s10695-011-9466-3 View in ScopusGoogle Scholar
    Gao et al., 2020 Y. Gao, L. Yu, J.C. Yeo, C.T. Lim Flexible hybrid sensors for
    health monitoring: materials and mechanisms to render wearability Adv. Mater.,
    32 (15) (2020), p. 1902133, 10.1080/08997659.2012.747450 View in ScopusGoogle
    Scholar Gronquist and Berges, 2013 D. Gronquist, J.A. Berges Effects of aquarium-related
    stressors on the zebrafish: a comparison of behavioral, physiological, and biochemical
    indicators J. Aquat. Anim. Health, 25 (1) (2013), pp. 53-65, 10.1080/08997659.2012.747450
    View in ScopusGoogle Scholar Han et al., 2019 S. Han, N.U.H. Alvi, L. Granlöf,
    H. Granberg, M. Berggren, S. Fabiano, X. Crispin A multiparameter pressure–temperature–humidity
    sensor based on mixed ionic–electronic cellulose aerogels Adv. Sci., 6 (8) (2019),
    p. 1802128, 10.1002/advs.201802128 View in ScopusGoogle Scholar Heino et al.,
    2021 J. Heino, J. Alahuhta, L.M. Bini, Y. Cai, A.S. Heiskanen, S. Hellsten, P.
    Kortelainen, N. Kotamäki, K.T. Tolonen, P. Vihervaara Lakes in the era of global
    change: moving beyond single-lake thinking in maintaining biodiversity and ecosystem
    services Biol. Rev., 96 (1) (2021), pp. 89-106, 10.1111/brv.12647 View in ScopusGoogle
    Scholar Hong et al., 2017 S.Y. Hong, J.H. Oh, H. Park, J.Y. Yun, S.W. Jin, L.
    Sun, G. Zi, J.S. Ha Polyurethane foam coated with a multi-walled carbon nanotube/polyaniline
    nanocomposite for a skin-like stretchable array of multi-functional sensors NPG
    Asia Mater., 9 (11) (2017), pp. e448-e, 10.1038/am.2017.194 View in ScopusGoogle
    Scholar Hook et al., 2014 S.E. Hook, E.P. Gallagher, G.E. Batley The role of biomarkers
    in the assessment of aquatic ecosystem health Integr. Environ. Assess. Manag.,
    10 (3) (2014), pp. 327-341, 10.1002/ieam.1530 View in ScopusGoogle Scholar Hu
    et al., 2019 X. Hu, M. Tian, T. Xu, X. Sun, B. Sun, C. Sun, X. Liu, X. Zhang,
    L. Qu Multiscale disordered porous fibers for self-sensing and self-cooling integrated
    smart sportswear ACS Nano, 14 (1) (2019), pp. 559-567, 10.1021/acsnano.9b06899
    Google Scholar Huang et al., 2019 S.-H. Huang, W.-H. Chen, Y.-C. Lin A self-powered
    glucose biosensor operated underwater to monitor physiological status of free-swimming
    fish Energies, 12 (10) (2019), p. 1827, 10.3390/en12101827 View in ScopusGoogle
    Scholar Huang et al., 2023 W. Huang, X. Wang, J. Xia, Y. Li, L. Zhang, H. Feng,
    X. Zhang Flexible sensing enabled agri-food cold chain quality control: A review
    of mechanism analysis, emerging applications, and system integration Trends Food
    Sci. Technol. (2023), 10.1016/j.sna.2022.113960 Google Scholar Hutson et al.,
    2022 K.S. Hutson, A.J. Mooney, I. Ernst, A.K. Brazenor, M. Scheel, J. Atalah A
    decision support tool for parasite management in fish aquaculture Rev. Aquac.,
    14 (3) (2022), pp. 1656-1670, 10.1111/raq.12668 View in ScopusGoogle Scholar Jones
    et al., 2022 M. Jones, M.E. Alexander, D. Snellgrove, P. Smith, S. Bramhall, P.
    Carey, F.L. Henriquez, I. McLellan, K.A. Sloman How should we monitor welfare
    in the ornamental fish trade? Rev. Aquac., 14 (2) (2022), pp. 770-790, 10.1111/raq.12624
    View in ScopusGoogle Scholar Jung et al., 2017 M. Jung, K. Kim, B. Kim, K.-J.
    Lee, J.-W. Kang, S. Jeon Vertically stacked nanocellulose tactile sensor Nanoscale,
    9 (44) (2017), pp. 17212-17219, 10.1039/C7NR03685J View in ScopusGoogle Scholar
    Kim et al., 2014 J. Kim, M. Lee, H.J. Shim, R. Ghaffari, H.R. Cho, D. Son, Y.H.
    Jung, M. Soh, C. Choi, S. Jung Stretchable silicon nanoribbon electronics for
    skin prosthesis Nat. Commun., 5 (1) (2014), p. 5747, 10.1038/ncomms6747 View in
    ScopusGoogle Scholar Lee et al., 2018 M.A. Lee, F.T. Nguyen, K. Scott, N.Y. Chan,
    N.A. Bakh, K.K. Jones, C. Pham, P. Garcia-Salinas, D. Garcia-Parraga, A. Fahlman
    Implanted nanosensors in marine organisms for physiological biologging: design,
    feasibility, and species variability ACS Sensors, 4 (1) (2018), pp. 32-43, 10.1021/acssensors.8b00538
    Google Scholar Lei and Wu, 2018 Z. Lei, P. Wu A supramolecular biomimetic skin
    combining a wide spectrum of mechanical properties and multiple sensory capabilities
    Nat. Commun., 9 (1) (2018), p. 1134, 10.1038/s41467-018-03456-w View in ScopusGoogle
    Scholar Li et al., 2022 W.D. Li, K. Ke, J. Jia, J.H. Pu, X. Zhao, R.Y. Bao, Z.Y.
    Liu, L. Bai, K. Zhang, M.B. Yang Recent advances in multiresponsive flexible sensors
    towards E-skin: a delicate design for versatile sensing Small, 18 (7) (2022),
    p. 2103734, 10.1002/smll.202103734 View in ScopusGoogle Scholar Li et al., 2022
    D. Li, G. Wang, L. Du, Y. Zheng, Z. Wang Recent advances in intelligent recognition
    methods for fish stress behavior Aquac. Eng., 96 (2022), Article 102222, 10.1016/j.aquaeng.2021.102222
    View PDFView articleView in ScopusGoogle Scholar Li et al., 2022 Y. Li, G. Wu,
    G. Song, S.-H. Lu, Z. Wang, H. Sun, Y. Zhang, X. Wang, P.-T. Soft Flexible Electronic
    Sensors for Sensing under Harsh Environments ACS Sensors, 7 (8) (2022), pp. 2400-2409,
    10.1021/acssensors.2c01059 View in ScopusGoogle Scholar Liu et al., 2016 K. Liu,
    Y. Zhou, F. Yuan, X. Mo, P. Yang, Q. Chen, J. Li, T. Ding, J. Zhou Self-powered
    multimodal temperature and force sensor based-on a liquid droplet Angew. Chem.
    Int. Ed., 55 (51) (2016), pp. 15864-15868, 10.1002/advs.202202470 View in ScopusGoogle
    Scholar López-López and Sedeño-Díaz, 2015 E. López-López, J.E. Sedeño-Díaz Biological
    indicators of water quality: The role of fish and macroinvertebrates as indicators
    of water quality Environmental Indicators (2015), pp. 643-661, 10.1007/978-94-017-9499-2_37
    View in ScopusGoogle Scholar Luo et al., 2021 H. Luo, G. Pang, K. Xu, Z. Ye, H.
    Yang, G. Yang A fully printed flexible sensor sheet for simultaneous proximity–pressure–temperature
    detection Advanced Materials Technologies, 6 (11) (2021), p. 2100616, 10.1002/admt.202100616
    View in ScopusGoogle Scholar Ma et al., 2020 Z. Ma, J. Zhang, J. Li, Y. Shi, L.
    Pan Frequency-enabled decouplable dual-modal flexible pressure and temperature
    sensor IEEE Electron Device Lett., 41 (10) (2020), pp. 1568-1571, 10.1109/LED.2020.3020937
    View in ScopusGoogle Scholar Mahesh, 2020 B. Mahesh Machine learning algorithms-a
    review International Journal of Science and Research (IJSR).[Internet], 9 (1)
    (2020), pp. 381-386, 10.21275/ART20203995 Google Scholar Maroco et al., 2011 J.
    Maroco, D. Silva, A. Rodrigues, M. Guerreiro, I. Santana, A. de Mendonça Data
    mining methods in the prediction of Dementia: A real-data comparison of the accuracy,
    sensitivity and specificity of linear discriminant analysis, logistic regression,
    neural networks, support vector machines, classification trees and random forests
    BMC. Res. Notes, 4 (1) (2011), pp. 1-14, 10.1186/1756-0500-4-299 Google Scholar
    Miao et al., 2019 L. Miao, J. Wan, Y. Song, H. Guo, H. Chen, X. Cheng, H. Zhang
    Skin-inspired humidity and pressure sensor with a wrinkle-on-sponge structure
    ACS Appl. Mater. Interfaces, 11 (42) (2019), pp. 39219-39227, 10.1021/acsami.9b13383
    View in ScopusGoogle Scholar Mu et al., 2022 B. Mu, Y. Dong, J. Qian, M. Wang,
    Y. Yang, M. Nikitina, L. Zhang, X. Xiao Hydrogel coating flexible PH sensor system
    for fish spoilage monitoring Mater. Today Chem., 26 (2022), Article 101183, 10.1016/j.mtchem.2022.101183
    View PDFView articleView in ScopusGoogle Scholar Nag et al., 2017 A. Nag, S.C.
    Mukhopadhyay, J. Kosel Sensing system for salinity testing using laser-induced
    graphene sensors Sens. Actuators, A, 264 (2017), pp. 107-116, 10.1016/j.sna.2017.08.008
    View PDFView articleView in ScopusGoogle Scholar Nassaj-Bokharaei et al., 2021
    S. Nassaj-Bokharaei, B. Motesharezedeh, H. Etesami, E. Motamedi Effect of hydrogel
    composite reinforced with natural char nanoparticles on improvement of soil biological
    properties and the growth of water deficit-stressed tomato plant Ecotoxicol. Environ.
    Saf., 223 (2021), Article 112576, 10.1016/j.ecoenv.2021.112576 View PDFView articleView
    in ScopusGoogle Scholar Nazir et al., 2023 A. Nazir, O. Gokcekaya, K.M.M. Billah,
    O. Ertugrul, J. Jiang, J. Sun, S. Hussain Multi-material additive manufacturing:
    A systematic review of design, properties, applications, challenges, and 3D Printing
    of materials and cellular metamaterials Mater. Des. (2023), Article 111661, 10.1016/j.matdes.2023.111661
    View PDFView articleView in ScopusGoogle Scholar Pan et al., 2020 X. Pan, Q. Wang,
    R. Guo, S. Cao, H. Wu, X. Ouyang, F. Huang, H. Gao, L. Huang, F. Zhang An adaptive
    ionic skin with multiple stimulus responses and moist-electric generation ability
    J. Mater. Chem. A, 8 (34) (2020), pp. 17498-17506, 10.1039/C9TA13407G View in
    ScopusGoogle Scholar Patel and Sharaff, 2020 B. Patel, A. Sharaff Feature fusion
    based growth analysis of chhattisgarh rice plants using machine learning technique
    2020 7th international conference on signal processing and integrated networks
    (SPIN), IEEE (2020), pp. 814-818 10.1109/SPIN48934.2020.9071358 CrossRefView in
    ScopusGoogle Scholar Patel et al., 2022 B. Patel, A. Sharaff, S. Verulkar Statistical
    Growth Analysis of Rice Plants in Chhattisgarh Region Using Automated Pixel-Based
    Mapping Technique International Journal of System Dynamics Applications (IJSDA),
    11 (1) (2022), pp. 1-20, 10.4018/IJSDA.302632 Google Scholar Patel and Sharaff,
    2023 B. Patel, A. Sharaff Automatic Rice Plant’s disease diagnosis using gated
    recurrent network Multimed. Tools Appl. (2023), pp. 1-20, 10.1007/s11042-023-15549-w
    Google Scholar Patel and Sharaff, 2023 B. Patel, A. Sharaff A review on rice plant
    phenotyping traits estimation for disease and growth management using modern ML
    techniques Multimed. Tools Appl. (2023), pp. 1-23, 10.1007/s11042-023-17098-8
    Google Scholar Patel and Sharaff, 2023 B. Patel, A. Sharaff Rice variety classification
    & yield prediction using semantic segmentation of agro-morphological characteristics
    Multimed. Tools Appl. (2023), pp. 1-18 Google Scholar Peres et al., 2014 H. Peres,
    S. Santos, A. Oliva-Teles Blood chemistry profile as indicator of nutritional
    status in European seabass (Dicentrarchus labrax) Fish Physiol. Biochem., 40 (2014),
    pp. 1339-1347, 10.1007/s10695-014-9928-5 View in ScopusGoogle Scholar Pierson,
    2012 M.D. Pierson HACCP: principles and applications, Springer Science & Business
    Media (2012), 10.1016/j.aquaeng.2021.102222 Google Scholar Pyo et al., 2021 S.
    Pyo, J. Lee, K. Bae, S. Sim, J. Kim Recent progress in flexible tactile sensors
    for human-interactive systems: from sensors to advanced applications Adv. Mater.,
    33 (47) (2021), p. 2005902, 10.1002/adma.202005902 View in ScopusGoogle Scholar
    Qian et al., 2018 Y. Qian, Y. Zhao, Q.-L. Wu, Y. Yang Review of salinity measurement
    technology based on optical fiber sensor Sens. Actuators B, 260 (2018), pp. 86-105,
    10.1016/j.snb.2017.12.077 View PDFView articleView in ScopusGoogle Scholar Qiu
    et al., 2020 L. Qiu, Y. Ouyang, Y. Feng, X. Zhang, X. Wang In vivo skin thermophysical
    property testing technology using flexible thermosensor-based 3ω method Int. J.
    Heat Mass Transf., 163 (2020), Article 120550, 10.1016/j.ijheatmasstransfer.2020.120550
    View PDFView articleView in ScopusGoogle Scholar Ren et al., 2022 B. Ren, Y. Yu,
    R.-K. Poopal, L. Qiao, B. Ren, Z. Ren IR-based novel device for real-time online
    acquisition of fish heart ECG signals Environ. Sci. Tech., 56 (7) (2022), pp.
    4262-4271, 10.1021/acs.est.1c07732 View in ScopusGoogle Scholar Shao et al., 2016
    J. Shao, F. Yang, F. Xia, Q. Zhang, Y. Chen A novel miniature spiral sensor for
    non-invasive blood glucose monitoring 2016 10th european conference on antennas
    and propagation (EuCAP), IEEE (2016), pp. 1-2, 10.1109/EuCAP.2016.7481463 Google
    Scholar Shi et al., 2020 C. Shi, Z. Zou, Z. Lei, P. Zhu, W. Zhang, J. Xiao Heterogeneous
    integration of rigid, soft, and liquid materials for self-healable, recyclable,
    and reconfigurable wearable electronics, Science Advances, 6 (45) (2020), p. eabd0202,
    10.1126/sciadv.abd0202 View in ScopusGoogle Scholar Vanderzwalmen et al., 2021
    M. Vanderzwalmen, J. McNeill, D. Delieuvin, S. Senes, D. Sanchez-Lacalle, C. Mullen,
    I. McLellan, P. Carey, D. Snellgrove, A. Foggo Monitoring water quality changes
    and ornamental fish behaviour during commercial transport Aquaculture, 531 (2021),
    Article 735860, 10.1016/j.aquaculture.2020.735860 View PDFView articleView in
    ScopusGoogle Scholar Wang et al., 2022 X. Wang, Y. Shi, P. Yang, X. Tao, S. Li,
    R. Lei, Z. Liu, Z.L. Wang, X. Chen Fish-wearable data snooping platform for underwater
    energy harvesting and fish behavior monitoring Small, 18 (10) (2022), p. 2107232,
    10.1002/smll.202107232 View in ScopusGoogle Scholar Wang et al., 2020 B. Wang,
    A. Thukral, Z. Xie, L. Liu, X. Zhang, W. Huang, X. Yu, C. Yu, T.J. Marks, A. Facchetti
    Flexible and stretchable metal oxide nanofiber networks for multimodal and monolithically
    integrated wearable electronics Nat. Commun., 11 (1) (2020), p. 2405, 10.1038/s41467-020-16268-8
    View in ScopusGoogle Scholar Wang et al., 2021 J. Wang, L. Wang, J. Feng, C. Tang,
    X. Sun, H. Peng Long-term in vivo monitoring of chemicals with fiber sensors Advanced
    Fiber Materials, 3 (2021), pp. 47-58, 10.1007/s42765-020-534 00061-9 View in ScopusGoogle
    Scholar Wang et al., 2021 W. Wang, J. Xu, W. Zhang, B. Glamuzina, X. Zhang Optimization
    and validation of the knowledge-based traceability system for quality control
    in fish waterless live transportation Food Control, 122 (2021), Article 107809,
    10.3390/bios12070541 View PDFView articleView in ScopusGoogle Scholar Wang et
    al., 2022 M. Wang, Y. Yang, B. Mu, M.A. Nikitina, X. Xiao Millimeter wave-based
    non-destructive biosensor system for live fish monitoring Biosensors, 12 (7) (2022),
    p. 541, 10.3390/bios12070541 View PDFView articleGoogle Scholar Wang et al., 2022
    X. Wang, Q. Yao, D.-M. Zhang, X.-Y. Lei, S. Wang, J.-W. Wan, H.-J. Liu, Y.-K.
    Chen, Y.-L. Zhao, G.-Q. Wang Effects of acute salinity stress on osmoregulation,
    antioxidant capacity and physiological metabolism of female Chinese mitten crabs
    (Eriocheir sinensis) Aquaculture, 552 (2022), Article 737989, 10.1016/j.aquaculture.2022.737989
    View PDFView articleView in ScopusGoogle Scholar Wei et al., 2021 F. Wei, K. Ito,
    K. Sakata, T. Asakura, Y. Date, J. Kikuchi Fish ecotyping based on machine learning
    and inferred network analysis of chemical and physical properties Sci. Rep., 11
    (1) (2021), p. 3766, 10.1038/s41598-021-83194-0 View in ScopusGoogle Scholar Xia
    et al., 2023 J. Xia, W. Huang, H. Feng, Y. He, M. Zhang, X. Zhang Wearable electronic
    system for non-destructive assessment of stress level during cryogenic waterless
    live transportation Sens. Actuators, A (2023), Article 114589, 10.1016/j.sna.2023.114589
    View PDFView articleView in ScopusGoogle Scholar Xie et al., 2019 M. Xie, K. Hisano,
    M. Zhu, T. Toyoshi, M. Pan, S. Okada, O. Tsutsumi, S. Kawamura, C. Bowen Flexible
    multifunctional sensors for wearable and robotic applications Advanced Materials
    Technologies, 4 (3) (2019), p. 1800626, 10.1002/admt.201800626 View in ScopusGoogle
    Scholar Xu et al., 2020 Y. Xu, G. Zhao, L. Zhu, Q. Fei, Z. Zhang, Z. Chen, F.
    An, Y. Chen, Y. Ling, P. Guo Pencil–paper on-skin electronics Proc. Natl. Acad.
    Sci., 117 (31) (2020), pp. 18292-18301, 10.1073/pnas.2008422117 View in ScopusGoogle
    Scholar Yamamoto et al., 2016 Y. Yamamoto, S. Harada, D. Yamamoto, W. Honda, T.
    Arie, S. Akita, K. Takei Printed multifunctional flexible device with an integrated
    motion sensor for health care monitoring Sci. Adv., 2 (11) (2016), p. e1601473
    Google Scholar Yang et al., 2021 Y. Yang, J. Lu, B.D. Pflugrath, H. Li, J.J. Martinez,
    S. Regmi, B. Wu, J. Xiao, Z.D. Deng Lab-on-a-fish: Wireless, miniaturized, fully
    integrated, implantable biotelemetric tag for real-time in vivo monitoring of
    aquatic animals IEEE Internet Things J., 9 (13) (2021), pp. 10751-10762, 10.1109/JIOT.2021.3126614
    Google Scholar Yang et al., 2022 R. Yang, W. Zhang, N. Tiwari, H. Yan, T. Li,
    H. Cheng Multimodal sensors with decoupled sensing mechanisms Adv. Sci., 9 (26)
    (2022), p. 2202470, 10.1016/j.matdes.2023.111661 View in ScopusGoogle Scholar
    Yuan et al., 2020 J. Yuan, R. Zhu, G. Li Self-powered electronic skin with multisensory
    functions based on thermoelectric conversion Advanced Materials Technologies,
    5 (9) (2020), p. 2000419, 10.1002/admt.202000419 View in ScopusGoogle Scholar
    Yun et al., 2018 C. Yun, S. Hwang, J. Kwak A wet-chemistry-based hydrogel sensing
    platform for 2D imaging of pressure, chemicals and temperature Nanoscale, 10 (28)
    (2018), pp. 13581-13588, 10.1039/C8NR02080A View in ScopusGoogle Scholar Zambrano
    et al., 2021 A.F. Zambrano, L.F. Giraldo, J. Quimbayo, B. Medina, E. Castillo
    Machine learning for manually-measured water quality prediction in fish farming
    PLoS One, 16 (8) (2021), p. e0256380 CrossRefView in ScopusGoogle Scholar Zhang
    et al., 2011 J. Zhang, X. Qiao, T. Guo, Y. Weng, R. Wang, Y. Ma, Q. Rong, M. Hu,
    Z. Feng Highly sensitive temperature sensor using PANDA fiber Sagnac interferometer
    J. Lightwave Technol., 29 (24) (2011), pp. 3640-3644, 10.1109/JLT.2011.2174195
    View in ScopusGoogle Scholar Zhang et al., 2022 J. Zhang, C. Li, Y. Gao, J. Tan,
    F. Xuan, X. Ling Flexible multimode antenna sensor with strain and humidity sensing
    capability for structural health monitoring Sens. Actuators, A, 347 (2022), Article
    113960, 10.1002/aisy.202200213 View PDFView articleView in ScopusGoogle Scholar
    Zhang et al., 2023 L. Zhang, Y. Li, J. Du, B. Mu, J. Hu, X. Zhang Flexible bioimpedance-based
    dynamic monitoring of stress levels in live oysters Aquaculture (2023), Article
    739957, 10.1016/j.aquaculture.2023.739957 View PDFView articleView in ScopusGoogle
    Scholar Zhang et al., 2019 Y. Zhang, W. Wang, L. Yan, B. Glamuzina, X. Zhang Development
    and evaluation of an intelligent traceability system for waterless live fish transportation
    Food Control, 95 (2019), pp. 283-297, 10.1016/j.foodcont.2018.08.018 View PDFView
    articleView in ScopusGoogle Scholar Zhang et al., 2020 Y. Zhang, Y. Ning, X. Zhang,
    B. Glamuzina, S. Xing Multi-sensors-based physiological stress monitoring and
    online survival prediction system for live fish waterless transportation IEEE
    Access, 8 (2020), pp. 40955-40965, 10.1109/ACCESS.2020.2976509 View in ScopusGoogle
    Scholar Zhang et al., 2015 F. Zhang, Y. Zang, D. Huang, C.-A. Di, D. Zhu Flexible
    and self-powered temperature–pressure dual-parameter sensors using microstructure-frame-supported
    organic thermoelectric materials Nat. Commun., 6 (1) (2015), p. 8356, 10.1038/ncomms9356
    View in ScopusGoogle Scholar Zhang et al., 2021 Y. Zhang, Y. Zhao, W. Zhai, G.
    Zheng, Y. Ji, K. Dai, L. Mi, D. Zhang, C. Liu, C. Shen Multifunctional interlocked
    e-skin based on elastic micropattern array facilely prepared by hot-air-gun Chem.
    Eng. J., 407 (2021), Article 127960, 10.1016/j.cej.2020.127960 View PDFView articleView
    in ScopusGoogle Scholar Zhang et al., 2023 Y. Zhang, X. Xiao, H. Feng, M.A. Nikitina,
    X. Zhang, Q. Zhao Stress fusion evaluation modeling and verification based on
    non-invasive blood glucose biosensors for live fish waterless transportation Frontiers
    in Sustainable Food Systems, 7 (2023), p. 1172522, 10.3389/fsufs.2023.1172522
    View in ScopusGoogle Scholar Zhao et al., 2022 C. Zhao, Y. Wang, G. Tang, J. Ru,
    Z. Zhu, B. Li, C.F. Guo, L. Li, D. Zhu Ionic flexible sensors: mechanisms, materials,
    structures, and applications Adv. Funct. Mater., 32 (17) (2022), p. 2110417, 10.1002/adfm.202110417
    View in ScopusGoogle Scholar Zhao et al., 2019 Y. Zhao, Q.-L. Wu, Y.-N. Zhang
    Simultaneous measurement of salinity, temperature and pressure in seawater using
    optical fiber SPR sensor Measurement, 148 (2019), Article 106792, 10.1016/j.measurement.2019.07.020
    View PDFView articleView in ScopusGoogle Scholar Zhu et al., 2019 P. Zhu, Y. Wang,
    M. Sheng, Y. Wang, Y. Yu, Y. Deng A flexible active dual-parameter sensor for
    sensitive temperature and physiological signal monitoring via integrating thermoelectric
    and piezoelectric conversion J. Mater. Chem. A, 7 (14) (2019), pp. 8258-8267,
    10.1039/C9TA00682F View in ScopusGoogle Scholar Zuo et al., 2022 C. Zuo, J. Qian,
    S. Feng, W. Yin, Y. Li, P. Fan, J. Han, K. Qian, Q. Chen Deep learning in optical
    metrology: a review Light: Science & Applications., 11 (1) (2022), p. 39 1038.41377/s022-00757-0-<>
    View in ScopusGoogle Scholar Cited by (0) View Abstract © 2024 Elsevier B.V. All
    rights reserved. Recommended articles Object detection and tracking in Precision
    Farming: a systematic review Computers and Electronics in Agriculture, Volume
    219, 2024, Article 108757 Mar Ariza-Sentís, …, João Valente View PDF Efficient
    extraction of corn rows in diverse scenarios: A grid-based selection method for
    intelligent classification Computers and Electronics in Agriculture, Volume 218,
    2024, Article 108759 Longzhe Quan, …, Zhaoxia Lou View PDF A triple interference
    removal network based on temporal and spatial attention interaction for forest
    smoke recognition in videos Computers and Electronics in Agriculture, Volume 218,
    2024, Article 108756 Huanjie Tao View PDF Show 3 more articles About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Review of flexible multimode sensing techniques and their decoupling principles
    for smart fisheries
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ariza-Sentís M.
  - Vélez S.
  - Martínez-Peña R.
  - Baja H.
  - Valente J.
  citation_count: '1'
  description: Object Detection and Tracking have gained importance in recent years
    because of the great advances in image and video analysis techniques and the accurate
    results these technologies are producing. Moreover, they have successfully been
    applied to multiple fields, including the agricultural domain since they offer
    real-time monitoring of the status of the crops and animals while counting how
    many are present within a field/barn. This review aims to review the current literature
    on Object Detection and Tracking within the field of Precision Farming. For that,
    over 300 research articles were explored, from which 150 articles from the last
    five years were systematically reviewed and analysed regarding the algorithms
    they implemented, the domain they belong to, the difficulties they faced, and
    which limitations should be tackled in the future. Lastly, it examines potential
    issues that this approach might have, for instance, the lack of open-source datasets
    with labelled data. The findings of this study indicate that Object Detection
    and Tracking are critical techniques to enhance Precision Farming and pave the
    way for robotization for the agricultural sector since they provide accurate results
    and insights on crop and animal management, and optimize resource allocation.
    Future work should focus on the optimal acquisition of the datasets prior to Object
    Detection and Tracking, along with the consideration of the biophysical environment
    of the farming scenarios.
  doi: 10.1016/j.compag.2024.108757
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Keywords 1. Introduction 2. Methodology 3. Object
    Detection and Tracking 4. Object Detection and Tracking applications in Precision
    Farming 5. Discussion 6. Conclusions CRediT authorship contribution statement
    Declaration of competing interest Acknowledgements Data availability References
    Show full outline Cited by (1) Figures (8) Show 2 more figures Tables (3) Table
    1 Table 2 Table 3 Computers and Electronics in Agriculture Volume 219, April 2024,
    108757 Object detection and tracking in Precision Farming: a systematic review
    Author links open overlay panel Mar Ariza-Sentís a, Sergio Vélez a, Raquel Martínez-Peña
    b, Hilmy Baja c, João Valente a Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.compag.2024.108757
    Get rights and content Under a Creative Commons license open access Highlights
    • Detailed review of over 300 research papers. • Object Detection and Tracking
    are suitable techniques to enhance Precision Farming. • Critical discussion regarding
    the challenges of Object Detection and Tracking. • Potential research lines to
    improve Object Detection and Tracking are identified. Abstract Object Detection
    and Tracking have gained importance in recent years because of the great advances
    in image and video analysis techniques and the accurate results these technologies
    are producing. Moreover, they have successfully been applied to multiple fields,
    including the agricultural domain since they offer real-time monitoring of the
    status of the crops and animals while counting how many are present within a field/barn.
    This review aims to review the current literature on Object Detection and Tracking
    within the field of Precision Farming. For that, over 300 research articles were
    explored, from which 150 articles from the last five years were systematically
    reviewed and analysed regarding the algorithms they implemented, the domain they
    belong to, the difficulties they faced, and which limitations should be tackled
    in the future. Lastly, it examines potential issues that this approach might have,
    for instance, the lack of open-source datasets with labelled data. The findings
    of this study indicate that Object Detection and Tracking are critical techniques
    to enhance Precision Farming and pave the way for robotization for the agricultural
    sector since they provide accurate results and insights on crop and animal management,
    and optimize resource allocation. Future work should focus on the optimal acquisition
    of the datasets prior to Object Detection and Tracking, along with the consideration
    of the biophysical environment of the farming scenarios. Previous article in issue
    Next article in issue Keywords Deep LearningSmart farmingComputer visionPrecision
    agriculturePrecision Livestock farming 1. Introduction Due to the constant increase
    in population (United Nations Department of Economic and Social Affairs and Division,
    2022), the reduction in the amount of arable land (Azadi et al., 2011), and the
    unpredictable and increasingly severe climate patterns due to climate change,
    the current agricultural and food production systems are facing several challenges
    (Misra, 2014, Pereira, 2017). Precision Farming (PF) (Blackmore, 1994) originated
    from the need to farm with limited resources applying only the inputs that are
    required by the crop to enhance the productivity of the field while conducting
    the most sustainable farming practices and taking into consideration the environment
    (Auernhammer, 2001). Addressing these challenges through Precision Farming offers
    substantial economic and sustainability benefits. For instance, targeting chemical
    interventions allows enhanced economic viability for the farmer, but also contributes
    to sustainability by minimizing waste, reducing the environmental footprint, and
    ensuring long-term food security for a growing population (Bongiovanni and Lowenberg-Deboer,
    2004, Martos et al., 2021). Recent technological advancements offer innovative
    tools that harness their capabilities for diverse agricultural applications. These
    technologies include satellite (Vélez et al., 2022) and UAV-based remote sensing
    (Sishodia et al., 2020, Tsouros et al., 2019), data analytics, and Computer Vision
    tasks, which have empowered farmers with new tools to tailor farming practices
    to specific conditions and needs, improving the traditional image processing techniques
    and reducing the manual tasks required. These include the precise identification
    of pests and diseases, enabling accurate and precise chemical applications (Ariza-Sentís
    et al., 2023c, Qiang and Shi, 2022, Vélez et al., 2023), comprehensive vegetation
    assessments (Campos et al., 2019, Chang et al., 2020, Matese et al., 2017, Vélez
    et al., 2021, Vélez et al., 2020), insights into crop physiology (Lacerda et al.,
    2022), detailed analyses of plant structure (Escolà et al., 2023, Xiao et al.,
    2023), plant water stress assessment (Bellvert et al., 2015, Gutiérrez et al.,
    2018) and the evaluation of quality and biophysical parameters (De Grave et al.,
    2020, Frampton et al., 2013, Gatti et al., 2022, Martínez-Peña et al., 2023b,
    Martínez-Peña et al., 2023a, Matese et al., 2022). Furthermore, the adoption of
    automation and robotics for farming purposes has streamlined labour-intensive
    tasks, such as visual inspections of the fields and farms, making farming more
    efficient and sustainable (Marinoudi et al., 2019). In particular, Deep Learning
    (DL) (LeCun et al., 2015, LeCun and Bengio, 1995) has shown important advances
    in agriculture in performing various important tasks such as plant phenotyping,
    yield estimation, crop classification, or disease detection (Ariza-Sentís et al.,
    2023b, Bouguettaya et al., 2022, Kamilaris and Prenafeta-Boldú, 2018, Zhou et
    al., 2023). In addition, when Deep Learning-based Object Detection is integrated
    with tracking, it gives rise to a distinct field known as “Object Detection and
    Tracking”, an area that has seen rapid growth in recent years, driven by advancements
    in GPU computing power (Davies, 2004), mainly due to the decrease in their costs,
    and the boost in image analysis techniques. Hence, the number of research studies
    performed on those domains has increased significantly, drawing significant attention
    to DL projects (Vargas et al., 2017). Object Detection along with Object Tracking
    offers a robust approach compared to Object Detection alone since it presents
    several advantages across applications. While Object Detection identifies objects
    in static frames, the integration of tracking provides temporal continuity, which
    enables object counting and trajectory analysis (Ahmed et al., 2019). Further,
    it generates richer datasets due to object-tracking across frames, which enhances
    accuracy and boosts informed decision-making. Moreover, the combination of Object
    Detection and Tracking preserves the identity of the object, aiding in scenarios
    involving occlusion (Babaee et al., 2018, Lee et al., 2014). The agricultural
    and livestock domain has also benefited from this trend. Object Detection and
    Tracking techniques have shown great potential to enable behaviour analysis and
    object interactions, which is crucial for applications like autonomous vehicles
    and enhancing animal welfare (Khairunissa et al., 2021); allowing plant ID recovery
    even if a plant temporarily leaves the view of the camera, ensuring individual
    plant recognition and avoiding repeated spraying by the robot (Hu et al., 2022);
    or to develop key tasks such as detecting plants and their fruits (de Jong et
    al., 2022, Zhang, Wang et al., 2022), which eases the inspection time which is
    currently carried out by field operators. Moreover, Object Detection and Tracking
    permit the automation of crop harvesting to improve field productivity and optimize
    operational costs (Junos et al., 2021), paving the way for robotization of the
    agricultural sector. Furthermore, Object Detection and Tracking allow for precise
    monitoring and management of livestock animals’ movement (Huang et al., 2023,
    Myat Noe et al., 2023). It facilitates real-time analysis of behaviours and health
    metrics, which optimizes care and resource allocation for each individual animal.
    The challenges and applications of Deep Learning in agriculture have been comprehensively
    addressed in prior surveys (Alibabaei et al., 2022, Bouguettaya et al., 2022,
    Kamilaris and Prenafeta-Boldú, 2018, Wang, Cao et al., 2022). However, there is
    a notable absence of literature reviews specifically focusing on the integration
    of Object Detection and Tracking in enhancing Precision Farming techniques. Consequently,
    the motivation for writing this review article was to address the need for a comprehensive
    analysis of the utilization of Computer Vision and Deep Learning techniques applied
    to Object Detection and Object Tracking within the field of Precision Farming,
    considering the increasing interest in this sector and the potential transformative
    effects on food security and fostering sustainable agricultural practices. To
    the best of our knowledge, this is the first review conducted in the field of
    Object Detection and Tracking applied to Precision Farming. This review aims to
    solve two research questions: RQ1: What are the current advancements, challenges,
    and potential future research lines in the implementation of Computer Vision and
    Deep Learning methods within Precision Farming? RQ2: How can the integration of
    Computer Vision and Deep Learning techniques in Precision Farming be optimized
    to maximize their impact? The paper is structured as follows: Section 2 explains
    the methodology followed in this study to select and revise the research articles
    that exist inside the domain of study. After, Section 3 introduces the concept
    of Object Detection and Tracking, their applications, and how they have evolved
    until the present. Section 4 includes the most-known algorithms for Object Detection
    and Tracking used in the field of Precision Farming, along with several use cases
    that have already shown a lot of potential within the agricultural field and the
    conceivable problems that were found in the literature. Finally, Section 5 and
    Section 6 include the Discussion and Conclusions, respectively. 2. Methodology
    This review systematically analyses the current literature related to Object Detection
    and Tracking within the field of Precision Farming, following the Preferred Reporting
    Items for Systematic Reviews and Meta-Analyses (PRISMA) guidelines (Moher et al.,
    2009). Regarding the protocol and registration, the systematic review was conducted
    retrospectively, involving three main steps to carry out the bibliographic analysis:
    (1) identification of the available work, (2) filtering out work not related to
    the agricultural and livestock domain, and (3) meticulous and precise review for
    each of the papers collected in the previous step. Regarding the filtering stage,
    it aimed to refine the dataset and enhance the relevance of the selected papers.
    This step was necessary because, despite papers were searched with keywords belonging
    to the agricultural and livestock domain, some unarticles also appeared in the
    search results and, to solve that, the filtering step was required. For information
    sources, the search was conducted in three scientific databases (accessed between
    April 4th and April 6th, 2023): ScienceDirect (ScienceDirect [WWW Document], 2023),
    Springer (Springer [WWW Document], 2023), and Google Scholar (Google Scholar,
    2023), chosen for their extensive coverage of the scientific literature in technology
    and agriculture. Eligibility criteria for studies covered by the review included
    journal articles and conference papers published in English within the last five
    years (2018–2023) to ensure the inclusion of recent and up-to-date research findings.
    The search strategy combined keywords to adequately cover the scope of the study,
    and the following four search keywords were introduced in each of the three mentioned
    datasets: • “Object Detection and Tracking” AND “agriculture” OR “farming”. •
    “dataset” AND “Object Detection and Tracking” AND “agriculture” OR “farming”.
    • “Object Detection” AND “agriculture” OR “farming”. • “tracking” AND “agriculture”
    OR “farming”. An overview of all the research articles found utilizing the four
    mentioned search keywords in ScienceDirect is shown in Fig. 1. In the study selection
    process, a total of 150 papers were retrieved from each database, resulting in
    a combined initial dataset of 450 papers, from which 150 were filtered because
    they belonged to the agricultural and livestock domains. In addition, some interesting
    additional documents were added to this review, extracted from the references
    of the retrieved articles, for instance, databases and other reviews. The data
    collection process was systematically executed, with key information from each
    paper being documented, such as authors, publication year, and main results related
    to Object Detection and Tracking techniques within Precision Farming. Extracted
    data included detailed study characteristics such as objectives, methodology,
    outcomes, and findings pertinent to the study scope. Download : Download high-res
    image (293KB) Download : Download full-size image Fig. 1. Bar chart representations
    of the number of research papers found in ScienceDirect when the four research
    keywords mentioned were introduced. To answer these research questions, each selected
    paper was reviewed and examined, the findings were documented, and key information
    about the research questions was extracted from each paper. The primary measure
    for synthesis was the contribution of each study to the understanding of Object
    Detection and Tracking techniques, considering the effectiveness and applicability
    of the research. Finally, the synthesis of results employed a qualitative narrative
    approach due to the diversity of methodologies and outcomes present in the literature,
    providing a comprehensive understanding of the current state of research in the
    domain. All these steps aimed to provide a comprehensive understanding of the
    current state of research related to Object Detection and Tracking techniques
    in the agricultural and livestock domain. 3. Object Detection and Tracking Object
    Detection and Tracking are a branch of Deep Learning and Computer Vision that
    is used to identify and follow instances of visual objects belonging to different
    classes within their environments (Porikli and Yilmaz, 2012, Yilmaz et al., 2006).
    It has evolved with time regarding the algorithms and architecture implemented
    (Fig. 2), having a further and deeper development during the 2010s for Object
    Detection and during the 2020s for Object Tracking. Object Detection and Tracking
    have already been applied to several domains. A relevant area of application is
    person identification for video surveillance systems (Fradi et al., 2018, Tang
    et al., 2014), to ensure social-distancing rules during Covid-19 pandemic (Punn
    et al., 2021), to estimate the human pose (Wang et al., 2020), and for people
    counting in crowded scenarios (Salim et al., 2019, Sidla et al., 2006), obtaining
    promising results that explain the increased focus they received in recent years.
    Another domain that has greatly benefited from the advances in Object Detection
    and Tracking is vehicle detection for smart transportation and surveillance systems
    (Amrouche et al., 2022, Hassaballah et al., 2021, Wang and Zhang, 2022), for enhanced
    autonomous driving (Sadik et al., 2022, Wael, 2020), and for number-plate identification,
    which can be used to fine any traffic-rule violations (Babu and Raghunadh, 2016),
    among other utilizations. However, to optimize these AI applications and achieve
    high-performance metrics, it is essential to consider multiple processing steps
    and the modifications made since their inception. Download : Download high-res
    image (251KB) Download : Download full-size image Fig. 2. Timeline of the evolutionary
    milestones in Object Detection and Tracking, showcasing the progression of key
    algorithms and architectures from foundational approaches in 1980 to recent advancements
    in the 2020s, demonstrating the continuous innovation in Computer Vision over
    time. 3.1. Evolution of Object Detection R-CNN (Girshick et al., 2014) started
    in 2014 to improve Convolutional Neural Networks (CNN). It presented a novel two-stage
    detection architecture, which extracted regions in an image, called proposal regions,
    which used a selective method to combine images into larger ones. It was then
    fed into a Support Vector Machine (SVM) (Noble, 2006) to classify whether a specific
    region contained an object. This approach was faster than its predecessors, but
    at the time it was still incapable of real-time detection. Fast(er) R-CNN (Girshick,
    2015, Ren et al., 2015) was developed as an improvement to R-CNN. It enhanced
    the previous algorithm by creating a convolutional feature map that saved the
    region of the images, avoiding feeding multiple regions into the SVM over and
    over, which improved the speed of training and detection significantly. A succeeding
    advancement to Fast(er) R-CNN, proposed by He et al. (2017), was Mask R-CNN, which
    aimed to increase the accuracy of detected objects by applying instance segmentation
    on top of bounding boxes. The mask of each object was added just as an overhead
    to not affect the training and detection time significantly. Mask R-CNN was beneficial
    in detecting and recognizing packed objects such as cars in traffic, people in
    crowds, and other objects that need per-pixel accuracy to differentiate. After
    Fast R-CNN and its modified version Faster R-CNN were made, more efficient methods
    were developed that only had a one-stage detection step; (1) YOLO: You Only Look
    Once (Redmon et al., 2016) and (2) Single Shot Multibox Detector (SSD) (Liu et
    al., 2016). Unlike Fast(er)R-CNN and its predecessors, YOLO and SSD were detectors
    with a single stage. They applied a single neural network to the entire image,
    rather than extracting and verifying proposal regions. The neural network divided
    the image into many regions before simultaneously predicting and estimating bounding
    boxes and classes without an intermediate region proposal stage. Compared to its
    two-stage equivalents, the architecture of YOLO and SSD detected objects far more
    quickly than its two-stage counterparts, which expands their applicability to
    real-time detections. Nevertheless, these models might struggle with detection
    accuracy, especially in the case of small objects. Hence, it is relevant to choose
    the algorithm to be used considering the trade-off between detection accuracy
    and speed. YOLO has also received many incremental improvements such as YOLOv2
    and YOLOv3 (Redmon and Farhadi, 2018, Redmon and Farhadi, 2017). With each iteration,
    the speed and accuracy of YOLO improved significantly. YOLOv3 achieved a detection
    speed almost 100x (100 times) faster than Fast(er) R-CNN. However, YOLO was not
    accurate in identifying small objects in an image. There have been more iterations
    of YOLO (YOLOv2 to YOLOv8), which have tried to alleviate this problem while simultaneously
    improving the accuracy and speed. Lastly, EfficientNet (Koonce, 2021) is a convolutional
    neural network architecture developed by Google Research that uses a compound
    coefficient to uniformly scale all the dimensions (depth, width, resolution).
    3.2. Evolution of Object Tracking Object Tracking in Computer Vision typically
    involves processing a series of images or an entire video. Earlier algorithms
    often employed a technique that separated each frame''s moving object from the
    background (Wang et al., 2000), then developed a track for the detected object.
    However, due to the limitations at that time, there were many problems such as
    tracks being lost, low FPS, limited track numbers, and inaccurate detections.
    Nowadays, with the improvement of detection algorithms, Object Tracking is done
    in two steps: Object Detection using a detection algorithm, and then tracking
    the identified object. This framework is called tracking by detection (Leibe et
    al., 2007). The tracking by detection framework is the most widely researched
    method of tracking. The tracking step is done by utilizing different methods such
    as optical flow (Horn and Schunck, 1981) and Kalman filter (Welch and Bishop,
    2006). Other more modern methods include 3D convolutional layers (Carreira and
    Zisserman, 2017). Multi-Object Tracking (Leal-Taixé et al., 2015) has become a
    valuable Computer Vision task. Nevertheless, since the tracking is based on simple
    bounding boxes, its accuracy is reduced when objects are occluded. Furthermore,
    Multiple Object Tracking can utilize historical information within videos, which
    can be useful during the evaluation and identification of agricultural objects
    to achieve multi-surface detection of these products (Chen, An et al., 2021).
    Multi-Object Tracking and Segmentation (MOTS) included instance segmentation to
    solve the issue mentioned above. It was developed by Voigtlaender et al. (2019),
    together with TrackR-CNN, the first end-to-end trainable framework for Object
    Tracking. It used the Mask R-CNN detection algorithm in conjunction with two 3D
    convolutional layers to give the algorithm the ability to associate detections
    over time, while also dealing with the temporal dynamics of the image sequence.
    Subsequently, TrackR-CNN decided which detections were the same between images
    with the help of the Hungarian algorithm. With the information it acquires, it
    subsequently links the detections over time. While it is a reliable tracking algorithm,
    there are several other more state-of-the-art algorithms to improve the tracking
    performance of TrackR-CNN. Following the introduction of TrackR-CNN, several MOTS
    algorithms were developed, such as PointTrack (Xu et al., 2020), ViP-DeepLab (Qiao
    et al., 2020), ReMOTS (Yang et al., 2019), ByteTrack (Zhang, Sun et al., 2022),
    and StrongSORT (Du et al., 2023), among many others. A common characteristic of
    the algorithms presented above is that all of them have been tested using a dataset
    annotated with MOTS standards that includes the classes of pedestrians and cars,
    called KITTI MOTS (Geiger et al., 2013). However, there are several different
    characteristics of each algorithm regarding the method of functioning. PointTrack
    reaches accurate metrics by converting images into 2D point cloud representations,
    which permits a tracking-by-points system (Neven et al., 2019). Instead, ViP-DeepLab
    implements 3D point clouds to estimate the class, spatial location, and temporal
    location of each point cloud (Nguyen and Le, 2013). ReMOTS employs a straightforward
    self-supervised method to enhance tracklets (a cluster of frames generated by
    the system) derived from predicted masks. ByteTrack operates on binary features
    extracted from object templates, which significantly reduces computational burden
    and memory usage. Finally, StrongSORT is the fusion of appearance and motion information,
    which allows the creation of robust and discriminative embeddings that are capable
    of encoding spatial and temporal information about tracked objects. 4. Object
    Detection and Tracking applications in Precision Farming There have been many
    advances in Object Detection and Tracking in several fields. However, they do
    not always easily apply to agriculture and farming because of the complexities
    and particularities of the domain, such as homogeneity and occlusion of objects,
    which complicates the tracking task. Hence, they require tailor-made solutions
    that adapt to the specific challenges (Pezzementi et al., 2018). All the relevant
    works regarding Object Detection and Tracking within Precision Agriculture, which
    were examined and selected according to the process described in the Methodology,
    are discussed in detail in this section. It starts by introducing the most commonly
    used algorithms and afterwards, it separates the papers concerning the research
    area that they belong to, and it ends by providing the issues that this topic
    is currently facing. 4.1. Object Detection and Tracking algorithms There is a
    great variety of algorithms used for Object Detection and Object Tracking. For
    Object Detection, Convolutional Neural Networks, a type of artificial neural network
    for recognizing patterns in images, are the most popular algorithms currently
    in use (Xu, Khan et al., 2022). Further, many CNN algorithms have been developed
    and published open-source in recent years, which has boosted the progress of Convolutional
    Neural Networks used for Object Detection in Precision Farming (Fuentes et al.,
    2017, Magalhães et al., 2023, Wosner et al., 2021). A very well-known CNN-based
    algorithm is YOLO and all its developed versions, including tracking in the latest
    version, called YOLOv8. There is a great variety of research papers regarding
    Object Detection in Precision Farming that have utilized YOLO algorithms for the
    identification of the target topic (Mota-Delfin et al., 2022, Myat Noe et al.,
    2023, Xu, Wang et al., 2022). Regarding Object Tracking, Deep Simple Online and
    Realtime Tracking (Deep SORT) (Wojke et al., 2017) has shown potential while obtaining
    high tracking precision and accuracy metrics (Osman et al., 2021) since the algorithm
    tracks based on object appearance. Table 1 provides a comprehensive summary of
    the five emerging methods that are widely used in the domain of Object Detection
    and Tracking in Precision Farming. Table 1. Most relevant algorithms used in Object
    Detection and Tracking in Precision Farming. Name of the algorithm How it works
    Scale-Invariant Feature Transform (SIFT) (Solis-Sánchez et al., 2011, Yao et al.,
    2015) – Function: Identifies and matches features in an image. – Advantages: Robust
    to changes in scale, rotation, and illumination. – Explanation: SIFT detects and
    describes local features in images, making it ideal for object recognition or
    matching images across different perspectives.  Simple Online Realtime Tracking
    (SORT) (He et al., 2022, Yang et al., 2022) – Function: Identifies objects in
    the frame that are to be tracked. – Advantages: Lightweight and fast, suitable
    for real-time tracking. – Explanation: SORT computes a cost matrix based on the
    Intersection over Union (IoU) distance between detection and prediction locations,
    refining Object Tracking.  Speeded Up Robust Feature (SURF) (Rahmat et al., 2018,
    Rani et al., 2022) – Function: Detects and describes image features. – Advantages:
    Faster and more efficient than SIFT, suitable for real-time applications. – Explanation:
    SURF uses integral images and a series of filters to quickly identify interest
    points in an image.  Convolutional Neural Network (CNN) Čirjak et al., 2023, Ganesh
    et al., 2019, Li, Zhang et al., 2020) – Function: Trains on large datasets to
    identify objects or features in images. – Advantages: Highly accurate for image
    classification and Object Detection tasks. – Explanation: CNNs use layers of convolutions
    to automatically and adaptively learn spatial hierarchies of features from images.
    – Model Examples: i. Fast R-CNN: Uses selective search to generate Regions of
    Interest, speeding up the detection process. ii. Faster R-CNN: Introduces a Region
    Proposal Network (RPN) to generate region proposals directly. iii. Mask R-CNN:
    Adds a branch for predicting segmentation masks on each Region of Interest. iv.
    YOLO: Detects objects in a single forward pass of the network. v. SSD (Single
    Shot MultiBox Detector): Detects objects in various aspect ratios using a single
    forward pass, making it faster than many other methods. vi. EfficientNet: Optimized
    for performance and efficiency, often used as a backbone for more complex tasks.
    vii. EfficientDet: Builds on the EfficientNet architecture, offering state-of-the-art
    accuracy with fewer parameters and smaller model sizes.  Mean Shift (Friedman
    et al., 2013, Sun et al., 2019) – Function: Estimates the mode of a distribution
    to find the most likely position of an object. – Advantages: Non-parametric and
    doesn''t assume any prior shape on the data distribution, making it versatile.
    – Explanation: Mean Shift iteratively shifts a window towards regions of higher
    pixel density, tracking objects based on their previous location and movement.
    There are more algorithms used in Precision Farming. However, the ones mentioned
    in Table 1 are the ones most commonly used and the ones that provide the highest
    metrics. Nevertheless, the selection of the algorithm depends on many variables,
    such as the type of application, the number of accessible images and/or videos
    for training the algorithm, the type and size of the object to be detected and
    tracked, and the computational resources available (El-gayar et al., 2013). 4.2.
    Successful use cases Since the development of Object Detection and Tracking, there
    have been many research papers focused on enhancing the current methodology used
    in agricultural and farming systems, such as greenhouse detection (Li, Zhang et
    al., 2020) to monitor agricultural activities and land use management, and anomaly
    detection (Christiansen et al., 2016) in order to identify obstacles for tractors
    and animals, such as humans. Some of them combine both agriculture and livestock
    fields of study. For instance, Sadgrove et al. (2017) performed real-time feature
    extraction and object classification in agricultural landscapes, allowing for
    weed detection, together with cattle and quad bike identification (Sadgrove et
    al., 2018), which enables future research on intelligent cultural machine auto-guidance.
    Another related paper was presented by Qiu et al. (2020), where they used an improved
    version of YOLOv3 and Deep SORT with a mean intersection over union (mIoU) score
    of 0.779 to detect and track moving obstacles, such as humans and water buffalos.
    They aimed to develop an obstacle avoidance system for smart agricultural equipment
    operating in rice fields. Further, Yun et al. (2021) proposed a stereovision method
    for auto-guidance of a cultivator which was based on detecting and tracking the
    inter-rows between ridges and furrows. They were able to classify ridges and furrows
    with an accuracy above 90 % under outdoor conditions, with an RMSE ranging from
    2.5 to 6.2 cm, depending on the terrain, whether flat or hillside. 4.2.1. Horticulture
    and floriculture The majority of the research papers found regarding Object Detection
    and Tracking in horticulture focus on tomatoes in greenhouses as the subject of
    study. In 2021, a real-time robotic system for tomato fruit growth monitoring
    in greenhouses was developed (Seo et al., 2021). It reached 88.6 % of detection
    accuracy including fruits that were completely obscured to the camera and 90.2
    % when those fruits were excluded. It showed potential to use the system to predict
    harvest times, and yield, and to develop a harvesting robot. In 2022, Ge et al.
    (2022) included the yield prediction and improved the detection accuracy by comparing
    Deep SORT and YOLOv5 (Fig. 3). The former showed better metrics, with a mean average
    precision (mAP) of 93.1 %, 96.4 %, and 97.9 % for flower, green tomato, and red
    tomato detection, respectively, representing a 17 %, 2 %, and 2.3 % improvement
    compared to the results obtained with YOLOv5. In 2023, an improved method for
    tomato cluster yield estimation in greenhouses was proposed (Rong et al., 2023).
    It used the improved version YOLOv5-4D trained with data augmentation methods
    and reached 97.9 % detection accuracy and a mAP of 0.748. ByteTrack was adopted
    to track tomato clusters since it is specifically designed to overcome ID-shift
    problems. Nonetheless, there was still a counting error of 4.9 % due to ID shifting.
    Future work in the field of Object Detection and Tracking for tomatoes involves
    classifying tomato maturity to provide more accurate yield estimation. Download
    : Download high-res image (469KB) Download : Download full-size image Fig. 3.
    Object Tracking framework for yield prediction in tomatoes in greenhouses. . Source:
    Ge et al. (2022) The biggest challenge identified in the strawberry harvesting
    field is regarding the ripeness of the fruits since they are commonly surrounded
    by obstacles to be avoided to properly automate the harvesting task. Xiong et
    al. (2021) combined YOLOv4 and Deep SORT to focus on the target during picking,
    even if the fruit was partially occluded by the gripper. They reached a 62.4 %
    accuracy rate, which improves by 36.8 % the metrics obtained in previous work.
    Future work involves working with multi-view perception to avoid fruit occlusion
    to the greatest extent. Apart from horticulture, there is a great industry devoted
    to Floriculture, which consists of the production of plants that produce colourful
    and showy flowers. Houtman et al. (2021) presented an automated flower-counting
    method that considered multiple viewpoints to avoid flower occlusion. It was tested
    on Phalaenopsis plants and was capable of tracking the flower movement even when
    those were not observed. They employed the Multiple Hypothesis Tracking (MHT)
    approach with a connected and an unconnected flower plant model. The achieved
    accuracy was 92 % for the model connected with the flower plant model, 70 % for
    the unconnected, 58 % with a heuristic method, and 44 % for a single-image approach.
    The high accuracy of the connected model was explained indicating that it reduced
    underestimation caused by flower-occlusion. Future work involves the estimation
    of the flower size. 4.2.2. Grain, fibre, and plantation crops Among the grain
    and fibre category, cotton is the most studied, accounting for 50 % of the research,
    followed by corn, likely because cotton and corn have higher revenue than other
    grain crops, such as barley and wheat (Singh, 2016). Hence, most of the research
    focuses on those crops. Regarding cotton, Yang et al. (2022) implemented an anchor-free
    Object Detection model based on CenterNet and Deep SORT with MOTS to prevent repeated
    counting (ID switching) of cotton seedlings. In this process, the method used
    a track confirmation mechanism for the unmatched trackers, which were assigned
    to unmatched detections. After, they were classified as tentative during the three
    following frames, until it was confirmed, in which case they stayed, otherwise,
    they were rejected. They obtained an R2 = 0.967 and RMSE = 0.394, indicating its
    potential for other applications. Also in 2022, Tan et al. (2022) combined YOLOv4
    and optical flow to enhance tracking speed. The F1 score obtained was 0.98, the
    average precision was 99.12 %, an ID switch of 0.1 %, and a relative error for
    counting across videos of 3.13 %. The counting speed increased from 2.5 to 10.8
    frames per second, offering the possibility of tracking cotton seedlings in real-time.
    However, the model failed to detect seedlings with different shapes, small sizes,
    and extreme occlusion conditions, a problem that might be solved by training the
    model with additional data. With respect to corn, Zhang, Lu et al. (2020) and
    Zhang, Kayacan et al. (2020) proposed a low-cost robot to automate plant trait
    extraction to reach efficient phenotyping in corn plants. Moreover, the robot
    was capable of counting corn stands by autonomously driving through the field.
    Faster R-CNN trained with only 169 images was used to detect corn plants in RGB
    images, obtaining accurate results and an RMSE of −3.78 %. The algorithm was tested
    on 53 plots and obtained an R2 = 0.96 when compared to ground truth data. Future
    work involves augmenting the training data to avoid underestimating the corn population.
    It was the first step towards autonomous field robot real-time phenotyping for
    corn. Lastly, Zhao et al. (2020) introduced the problem of missing open-source
    datasets and pre-trained models for bale detection, which are also affected by
    varying illumination conditions as is also the case of tea buds (Fig. 4). They
    trained YOLOv3 with 243 images counting with good illumination conditions and
    also combined the model with data augmentation. The detection accuracy obtained
    regarding illumination, shadow, hue change, and snow conditions were enhanced
    by 15 %, 26 %, 10 %, and 28 %, respectively. The detection accuracy was at least
    80 % for all conditions. Future work involves acquiring more images to train the
    algorithms and make them robust enough to be implemented under all conditions
    and potentially other crops. Another important issue while trying to detect and
    track continuous crops such as grain and fibre crops is occlusions. As already
    mentioned, multiple-camera systems can provide a solution to this, however, they
    introduce the concern regarding camera calibration and object matching (Khan and
    AlSuwaidan, 2022). Download : Download high-res image (318KB) Download : Download
    full-size image Fig. 4. Tea bud detection for (a) low, (b) medium, and (c) high
    brightness images. (). Adapted from Li et al., 2023 4.2.3. Woody crops Woody crops
    are the category within Precision Agriculture with the most research papers regarding
    Object Detection and Tracking since tree and crown detection (Selim et al., 2019)
    together with fruit detection (Chen, An et al., 2021) have gained a lot of importance
    to monitor tree growth, fruit size (Zhang, Valente et al., 2021) and also to predict
    the yield to be harvested at the end of the campaign to contribute to the development
    of intelligent orchards (Lyu et al., 2022). Among woody crops, apple trees, citrus
    trees, and grapevines are the most studied. Moreover, woody crops such as apple
    and citrus trees share a lot of common characteristics. For instance, the colour
    of the fruit is different from the canopy once it is ripe and ready to be picked.
    Also, the fruit’s round shape, size, and geometry, which enables the research
    performed for one crop can easily be applied to the other crop. Most of the studies
    devoted to fruit identification have obtained high metrics above 90 % regarding
    the detection accuracy of the fruits (Ganesh et al., 2019, Kestur et al., 2019,
    Tu et al., 2020). However, some difficulties arise once tracking is added. Several
    articles have studied the detection and tracking of apples, oranges, lemons, and
    avocados, concluding that the biggest challenge found was that there is an occlusion
    factor during image acquisition and the creation of ground truth data (He et al.,
    2022, Villacrés et al., 2023, Wang et al., 2016) along with the dependency of
    the algorithm on the quality of the training set (Vasconez et al., 2020, Xu and
    Mishra, 2022). Another important issue is ID switching while tracking, which leads
    to inaccurate reference displacement and tracking deviation (Gao et al., 2022)
    and double counting of the fruit, which Zhang, Wang et al. (2022) solved by establishing
    a specific tracking region counting strategy. Vineyard management is a very valuable
    task since the quality of the wine, which is a highly rewarded product, depends
    on all the practices that are conducted in the vineyard and the inputs that are
    applied. Hence, it is important to monitor grape bunch development in order to
    maintain healthy and productive vines (Fig. 5). However, there are great differences
    between white and red varieties, which ease the detection of the latter when the
    bunches are ripe because of the colour distinction between the bunch and the canopy
    (Liu and Whitty, 2015, Torres-Sánchez et al., 2021, Zhang, Ding et al., 2022).
    Therefore, the detection and tracking of white varieties become a more demanding
    task. The two biggest challenges identified in the field of grape bunch detection
    were the occlusion of the fruit due to dense canopy (Ariza-Sentís et al., 2023a,
    Guadagna et al., 2023, Shen et al., 2023) and data scarcity, which Ciarfuglia
    et al. (2023) addressed training the datasets with pseudo-labels for the detection
    and segmentation tasks. Further, (Ariza-Sentís et al., 2023d, Santos et al., 2020)
    provided open-source datasets to solve data scarcity in vineyards. Download :
    Download high-res image (328KB) Download : Download full-size image Fig. 5. Computer
    Vision tasks applied to grape bunches. Source. Santos et al. (2020). 4.2.4. Weed
    detection Weeds are known to reduce crop yield since they take resources, such
    as water and fertilizer, that were applied to the field for the crop but are absorbed
    also by weeds, lowering the remaining amount for the crop itself (Klingman and
    Noordhoff, 1961). Moreover, weeds in a field make the crop compete for a fundamental
    resource: light. Therefore, weed detection is key in Precision Agriculture to
    optimize the inputs of the crop and to apply the chemical only to the areas that
    have the presence of weeds, lowering the cost for the farmer and producing a more
    sustainable end-product (Bongiovanni and Lowenberg-Deboer, 2004). Some studies
    work with RGB imagery for precise weeding, using CNN-based algorithms, such as
    Faster R-CNN (Khan et al., 2021), any version of YOLO (Gallo et al., 2023, Lac
    et al., 2022) (Fig. 6), and InceptionV4 (Mishra et al., 2022). An advantage of
    working with RGB imagery is that it is convenient for the farmers since these
    sensors are more affordable to have on a farm. Rani et al. (2022) provided a framework
    that combined Histogram of Gradients (HOG) and SURF (Speeded Up Robust Feature)
    algorithms. It was added to a field robot, which could automatically detect weeds
    for various crop types and sizes and decide whether to spray weedicide. However,
    research should also consider multispectral sensors since they are capable of
    evaluating information beyond the visible spectrum, which can be key to identifying
    issues at an early stage. Download : Download high-res image (173KB) Download
    : Download full-size image Fig. 6. Weed detection predictions in tobacco crop
    using YOLOv5. (). Adapted from Alam et al., 2022 4.2.5. Disease and pest detection
    Diseases and pests interrupt or modify the vital functions of the crops, reducing
    the photosynthetic rate of the plant and leading to a lower yield at the end of
    the campaign and economic losses for the farmer. Moreover, the end-product might
    be contaminated by fungi (mycotoxins), bacteria, viruses, and animals such as
    insects, which can affect the rest of the food chain (Oliveira et al., 2014, Torres
    et al., 2019). Further, early identification of fungal and other microorganisms’
    attacks in crops can provide a proper time-window to effectively apply the appropriate
    treatment (Vélez et al., 2023), which can be done thanks to the development of
    Object Detection and Tracking (Coulibaly et al., 2022). Most of the research articles
    found regarding pest detection were identified within grain and oilseed crops,
    such as maize (Ishengoma et al., 2021, Sheema et al., 2021), wheat (Chen, Li et
    al., 2021, Li et al., 2019), and soybean (Abade et al., 2022, Tetila et al., 2020,
    Verma et al., 2021) (Fig. 7). The same pattern was diagnosed with disease detection,
    led by wheat leaf diseases (Jiang et al., 2022, Kumar and Kukreja, 2021, Lin et
    al., 2019, Singh and Arora, 2020, Su, Zhang et al., 2021), followed by rice (Bari
    et al., 2021, Zhou, Zhang et al., 2019), and soybean (Zhang, Wu et al., 2021).
    Download : Download high-res image (211KB) Download : Download full-size image
    Fig. 7. Soybean insect pests examples used to train the pest detection algorithm.
    Source: Tetila et al. (2020). There were two big challenges found for disease
    and pest detection with Object Detection and Tracking. The first consists of the
    lack of public datasets to train the algorithms (Čirjak et al., 2023). The second
    is the capacity classify multiple diseases (Kaur et al., 2022) or pests simultaneously
    (Qiang and Shi, 2022, Wen et al., 2022, Zhang, Huang et al., 2022) or when are
    in dense clusters (Wang, Li et al., 2022) since most of the time, once the plant
    is debilitated by the presence of a pathogen or animal, it is more likely to develop
    more diseases or pests. Further, the developed algorithms should be able to generalize
    for other diseases or pests (Hong et al., 2022, Liu et al., 2022). Besides, the
    majority of disease and pest detection research papers were trained with CNN-based
    algorithms (Amrani et al., 2023, Pavithra et al., 2023, Rezk et al., 2022, Storey
    et al., 2022). Lastly, interesting research was performed by Acharya et al. (2022),
    where they detected and tracked droplets in images to measure their size and velocity,
    which provided insights into the effectiveness of spraying systems. In order to
    be able to apply precise spraying, the algorithm needs to offer real-time detection
    and tracking (Roy et al., 2022, Wang et al., 2021, Xu, Chen et al., 2022) and
    incorporate them in mobile terminals to boost agricultural productivity (Chodey
    and Noorullah Shariff, 2023). 4.2.6. Plant phenotyping Plant phenotyping is an
    emerging field of study that combines multiple methodologies and protocols in
    order to measure and extract plant traits. The obtention of those traits is important
    to better understand the functioning of the crops, which can lead to an increase
    in yield production and a more optimized calibration of crop models and enhanced
    genomic selection (Heffner et al., 2009, Jannink et al., 2010). High-throughput
    phenotyping in Precision Agriculture is relevant to upgrade management practices,
    while producing more efficiently and reducing the invested inputs, such as fertilizer,
    water, and pesticide (Qiao et al., 2022). It is of crucial importance to continue
    the development of phenotyping by combining it with the recent advances in technology
    (Mochida et al., 2019). For instance, Ariza-Sentís et al. (2023a) established
    a methodology to extract phenotyping traits of grape bunches and berries, such
    as their length, width, and shape. To do so, they first detected and tracked the
    grape bunches in RGB videos and afterwards, they identified berries within the
    detected bunches (Table 2). Further, Santos et al. (2020) detected and tracked
    grape bunches with several Computer Vision tasks, and Kierdorf et al. (2022) provided
    a method to estimate occluded grape berries by implementing conditional generative
    adversarial networks (cGAN), a variant of GAN that involves the generation of
    images with conditions imposed by a generator model. Table 2. Grape berry counting
    prediction compared with the ground truth value. . Image crop (Ground Truth) Spatial
    Embeddings prediction GT count vs prediction 43/47 22/23 45/39 Adapted from Ariza-Sentís
    et al. (2023a) Nevertheless, most of the research papers devoted to phenotyping
    perform Object Detection without considering the tracking part, even if the term
    tracking is mentioned. This is due to the fact that in many cases, tracking is
    understood as crop monitoring, without considering the methodology used, which
    in most cases is monitored using time series instead of tracking inferring the
    Computer Vision task. Phenotyping has shown a lot of potential in grain and oilseed
    crops because of their annual cycle, which allows observing the improvement made
    directly in the following campaign, which speeds up phenotyping tasks. Hence,
    most of the studies related to phenotyping are focused on continuous crops, such
    as maize (Kienbaum et al., 2021, Warman et al., 2021, Xiang et al., 2023, Zou
    et al., 2020), wheat (Furbank et al., 2019, Gong et al., 2021, Li, Li et al.,
    2021, Sadeghi-Tehran et al., 2019), rice (Deng et al., 2021, Tan et al., 2023),
    soybean (Li, Yan et al., 2022, Liu et al., 2023, Pratama et al., 2020, Yang et
    al., 2021), and forages (Castro et al., 2020). The same reasoning applies to horticulture,
    such as lettuce (Bauer et al., 2019), strawberries (Zheng et al., 2021), and cucumbers
    (Boogaard et al., 2020), which mostly breed for characteristics related to higher
    yield along with resistance to biotic and abiotic stresses, such as pests and
    diseases, and drought, salinity, and sodicity (Kumar, 2006). 4.2.7. Livestock
    and other animals The primary sector encompasses a wide range of activities, including
    agriculture, forestry, and fishing, among others. One area that has seen significant
    growth in recent years is the application of Object Detection and Tracking technologies
    for animal management (Alanezi et al., 2022). The inherent nature of this sector,
    which involves the rearing, breeding, and overall management of livestock and
    wildlife, has driven this surge in interest. These advanced technologies offer
    a multitude of benefits, such as monitoring animal health, tracking movement,
    and identifying specific individuals for breeding or research purposes (Morrone
    et al., 2022). As a result, various solutions have been developed and implemented,
    improving efficiency, productivity, and overall animal welfare (Tuyttens et al.,
    2022). The focus on animals in the primary sector highlights the potential impact
    of Object Detection and Tracking, encouraging further research and innovation
    to extend its application to other aspects of the sector (Yousefi et al., 2022).
    Most of the studies related to Object Detection and Tracking for livestock aim
    to count the number of animals that are present within the field of view of the
    surveillance camera (Zheng et al., 2023a) or a thermal camera (Kim and Kim, 2020),
    in the case of indoor animals, or construction time-lapsed camera or UAV, in the
    case of observing pastures (Bonneau et al., 2020, Cao et al., 2023). One of the
    direct applications of Object Detection and Tracking is the monitoring of the
    animals, which allows observing certain behaviours that might be causing some
    illnesses, such as lameness (Zheng et al., 2023b), or for disease prevention and
    control (Xu et al., 2021, Zhuang and Zhang, 2019). Some studies present a general
    methodology with applicability to other farming animals. For instance, Haalck
    et al. (2023) developed a methodology to study small animal behaviour in complex
    environments, which provides helpful information since their gained knowledge
    can be applicable to other terrestrial species under realistic conditions. The
    poultry industry has a lot of research on this topic, mostly for counting broilers
    for precision chicken management (Li, Zhao et al., 2022) (Fig. 8) and continuous
    movement monitoring on farms (Siriani et al., 2022). Also, it can be useful to
    compare two groups with different feeding possibilities, such as restricting and
    unrestricted feeding birds, and extract conclusions such as which target group
    walks more around the feeder, which be helpful for an optimized feeder design
    and resource placement (Li, Hui et al., 2021). The swine industry also allocates
    lots of resources to pig counting for efficient and low-cost farm management (Kim
    et al., 2022), to monitor individual activity as a measure of resilience (van
    der Zande et al., 2021), and to automatically identify social contacts such as
    head-head and head–tail contacts to enhance animal monitoring systems (Wutke et
    al., 2021). An interesting case study is the one presented by (Chang and Guo,
    2018), where they use IP cameras to detect monkeys that damage crops and alert
    farmers that they are approaching the fields to prevent crop losses. Download
    : Download high-res image (103KB) Download : Download full-size image Fig. 8.
    Identification of healthy and sick indoor broilers using Object Detection techniques.
    . Adapted from Zhuang and Zhang (2019) Three remarkable challenges were observed
    for animal detection and tracking: first, the lack of open-source datasets. To
    address this, Tu et al. (2022) provided a public dataset containing annotations
    of group-housed pigs, and (Vayssade et al., 2023) dealt with the issue utilizing
    an unsupervised learning method. The second identified difficulty in the sector
    is the placement of the camera because when animals move, certain positions are
    hidden from the camera, making it difficult to track them while being in an occluded
    location (Brunet et al., 2023, He et al., 2021, Neethirajan, 2022). The third
    limitation concerns the uneven distribution of the animals in the spaces covered
    by the camera (Zheng et al., 2023a), which leads to underestimation or overestimation
    of the present animals. Lastly, Wang, Zhang et al. (2022) performed real-time
    detection and tracking of abnormal behaviour in porphyry seabream while in a recirculating
    aquaculture system. They obtained a high tracking precision of 76.7 %, which leads
    to improved fish welfare and increased survival rates, which consequently generates
    higher economic benefits of aquaculture. 4.3. Potential issues Throughout this
    review, it has been observed that there are several limitations regarding Object
    Detection and Tracking within Precision Farming. The first is the occlusion of
    the target, for which research suggests using multiple fields of view to be able
    to fully see the objective. Another challenge is the real-time processing of the
    data, which can be computationally challenging when implementing Object Detection
    and Tracking algorithms. Real-time is relevant since many agricultural and farming
    applications require real-time or near-real-time feedback. Hence, it is important
    to consider the balance between accuracy and processing time for the specific
    farming case. Another limitation is the lack of comprehensive and reliable datasets
    for farming applications, which are analysed in this subsection. While there are
    existing datasets that can be very useful (Kaggle, 2023, Roboflow Universe, 2023),
    they have not been published or validated through scientific methods, raising
    concerns about their credibility and accuracy. The absence of standardized and
    reliable datasets hampers the development and fine-tuning of Machine Learning
    models, ultimately hindering the potential for improved agricultural practices.
    This deficiency calls for an urgent need to establish a more rigorous approach
    to dataset creation, including the collection, annotation, and validation of agricultural
    data, ensuring the reliability and generalizability of Machine Learning models
    in this crucial sector. In this way, despite the small number of datasets related
    to agriculture or the environment in public use, some researchers have published
    some datasets that could potentially be useful for Object Detection or Object
    Detection and Tracking, which are summarized in Table 3. Nonetheless, it is important
    to have diverse and representative datasets, for instance, from several geographical
    locations or seasons in order to generalize well and be able to apply the developed
    algorithm to other conditions. It can be observed that there are datasets older
    than 5 years as filtered in the Methodology section. However, to expand knowledge,
    all the public datasets found have been included in this research. Table 3. Public
    datasets regarding Object Detection and Tracking within the field of Precision
    Farming. Study Purpose of annotation Crop/Animal Type of multimedia Number of
    annotations Type of camera (Nilsback and Zisserman, 2006) Flower classification
    17 species Images 1360 Several types of cameras (Kragh et al., 2017) Obstacle
    Detection NA Images and videos Not mentioned Several types of cameras (Hou et
    al., 2017) Vegetable and fruit classification 292 classes Images ̴ 160,000 Several
    types of cameras (Pezzementi et al., 2018) Pedestrian detection in apple and orange
    orchards NA Videos ̴ 95,000 Camera (Van Horn et al., 2018) Species Detection and
    Classification 5000 species of plants and animals Images ̴ 6.6 M Several types
    of cameras (Wu et al., 2019) Pest detection 103 species Images 18,983 images Internet
    images (several types of cameras) (Zheng et al., 2019) Species Detection and Classification
    31 species of plants Images ̴ 49,000 Several types of cameras (Santos et al.,
    2020) Object Detection and instance segmentation 5 grape varieties Images 4432
    boxes, 2020 masks Proximal sensing camera (Sudars et al., 2020) Robotic Computer
    Vision control Food crops and weed Images 7853 Several types of cameras (Häni
    et al., 2020) Fruit detection, segmentation, counting Apple Videos ̴ 41,000 Cell
    phone camera (Gené-Mola et al., 2020) Fruit detection Apple Images 1455 Camera
    (Tu et al., 2022) Behaviour recognition Pigs Videos 8047 Overhead camera (Wang
    et al., 2021) Pest detection Wheat, rice, corn, rapeseed Images ̴ 264,700 Camera
    (de Jong et al., 2022) Fruit detection and tracking Apple Videos ̴ 86,000 UAV
    camera (Mignoni et al., 2022) Pest detection Soybean Images 6410 images Several
    types of cameras (El Amraoui et al., 2022) Disease detection, tree counting, classification,
    and segmentation Avocado Images 93 images UAV camera (Li, Su et al., 2022) Fish
    face identification Golden crucian carp Images 1160 standard box 1160 rotating
    box Camera (Giakoumoglou et al., 2023a) Grey mould detection Cucumber Images 121
    images Camera (Ariza-Sentís et al., 2023d) Fruit detection and tracking Grape
    Videos ̴ 8000 UAV camera (Güldenring et al., 2023) Grassland detection for agricultural
    robotics Grassland Images 15,519 Ground robot camera In any case, the number of
    datasets strictly related to farming is very limited, and the accessibility of
    these datasets is often restricted and they are not publicly available since it
    is available upon request or the links are no longer active (Giakoumoglou et al.,
    2023a, Li, Su et al., 2022, Nilsback and Zisserman, 2006, Pezzementi et al., 2018,
    Tu et al., 2022, Wang et al., 2021, Zheng et al., 2019) (accessed on April 10th,
    2023). 5. Discussion In recent years, mostly from 2015 onwards (Fig. 1), there
    has been a growing interest in the application of Computer Vision and Deep Learning
    techniques regarding Object Detection and Tracking for farming purposes. The main
    reason to explain the hike in research papers devoted to this field can be the
    advances and availability of technology that is able to carry out precise and
    accurate detection and tracking of agricultural and farming objects. Nonetheless,
    it is important to remark that, since the world population is increasing (United
    Nations Department of Economic and Social Affairs, Population Division, 2022),
    there is a rising interest in increasing crop yield, reducing waste, and optimising
    resource allocation (Adli et al., 2023, Matese and Di Gennaro, 2015) to be able
    to feed everyone. Consequently, it is important to deeply analyse the advantages,
    challenges and future work that research in the field of Object Detection and
    Tracking will have to face in the coming years to be able to reach the second
    Sustainable Development Goal set for 2030: Zero Hunger (United Nations, 2015)
    along with reducing the environmental impact of the farming practices to produce
    food in a more green and sustainable way. However, Deep Learning and CNNs are
    not the unique solution for Object Detection and Tracking. For instance, Vision
    Transformers (ViTs) have already been implemented for plant disease detection
    (Gole et al., 2023, Parez et al., 2023). 5.1. Advantages of Object Detection and
    Tracking The increasing interest in Object Detection and Tracking within the field
    of Precision Agriculture and Precision Farming, along with the high detection
    and tracking metrics obtained, indicate that these technologies are suitable for
    several applications, such as fruit and animal counting and monitoring (Kim et
    al., 2022, Rong et al., 2023), diseases (Zheng et al., 2023b), weeds (Mishra et
    al., 2022), and pest detection (Ishengoma et al., 2021), and phenotyping purposes
    (Li, Guo et al., 2020, Mochida et al., 2019). Further, Object Detection and Tracking
    allow researchers to take advantage of useful new technologies, such as UAVs and
    new sensors, and expand their potential within the field of Computer Vision. Moreover,
    Object Detection and Tracking permit accurate monitoring and inspection of the
    identified items, which can assist logistics and the supply chain. For instance,
    to keep track of each individual fruit/animal when carrying out monitoring and/or
    inspecting. The field of Precision Agriculture has benefited a lot from these
    advances since, for instance, disease inspections in the field have always been
    performed through visual surveys, which are tedious tasks, time-consuming (Rahaman
    et al., 2015), and subjective to the operator on charge. Hence, all these improvements
    permit carrying out field inspections in a more objective way and most importantly,
    saving a lot of time for the farm manager, which allows them to apply the required
    chemical only to the plants that need it and within the most optimal time-window
    for chemical effectiveness (Ariza-Sentís et al., 2023a), which reduces the environmental
    impact of agriculture. Moreover, it benefits from the potential of edge computing
    since the developed models can be applied to edge devices, like as tractors or
    UAVs, which can reduce the need for data transmission and provide faster feedback.
    Furthermore, there is a need to establish automated pipelines and workflows in
    order to avoid human errors and reduce the waiting time between processes, and
    Object Detection and Tracking have the potential to provide insights into that
    topic. Another advantage of Object Detection and Tracking in Precision Farming
    is domain adaptation, that is, the fact that the knowledge gained in a very specific
    field and the models and algorithms trained for that specific use case can be
    straightforwardly or with few minor modifications applied to other similar scenarios,
    through transfer learning (Talukdar et al., 2018, Torrey and Shavlik, 2010). For
    instance, several fruits have a similar shape and circularity, such as peaches,
    citrus, apples, and mangoes. Therefore, a model can be developed to detect a particular
    fruit or several fruits (Chen et al., 2017, He et al., 2022) or directly be developed
    for a more general purpose: fruit detection and counting (Rahnemoonfar and Sheppard,
    2017). However, domain adaptation can also be generalized to cross-domain collaboration
    and innovation, meaning that advancements done in other fields of study that have
    traditionally employed Object Detection and Tracking techniques, for instance,
    intelligent transportation and security monitoring, can be applied to the farming
    domain to promote further development. Lastly, there have already been advancements
    in 3D Multiple Object Tracking technology (Pang et al., 2023, Weng et al., 2020),
    which showcase the promising potential for precise monitoring and analysis of
    various elements. For instance, it allows for accurate tracking of crops (Benet
    and Lenain, 2017) and livestock growth and calculation of volume variables such
    as the canopy volume and the animal volume, which can give insights into their
    development at several growing stages. Further, it leads to the usage of new sensors,
    such as LiDAR. 5.2. Challenges and Future work of Object Detection and Tracking
    One of the biggest challenges of Object Detection and Tracking is the presence
    of shadows in their datasets, which obscure the objects of interest and affect
    their appearance and hence their detection by the algorithm (Zhao et al., 2020).
    This difficulty has mostly been identified when trying to distinguish between
    weeds and crops (Dyrmann et al., 2017, Dyrmann et al., 2016). This problem is
    particularly important when the datasets contain aerial images and videos, for
    instance, acquired by UAVs since they are often affected by cloud cover, haze,
    and adverse atmospheric distortions (Porikli, 2006). In order to solve that problem,
    pre-processing techniques such as contrast enhancement (Pal et al., 2021) and
    denoising (B et al., 2019) are often used to improve the quality of the imagery
    and make them more suitable for detection and tracking. Another difficulty is
    that agricultural and farming environments need to detect and track a great variety
    of objects (Kaur et al., 2022), such as the crop or livestock animal itself, surrounding
    animals, multiple weeds, diseases, and pests within the same image/video. Further,
    these objects are homogeneous and can be present in different shapes (Nilsback
    and Zisserman, 2006), sizes (Bonneau et al., 2020), colours (Xu and Mishra, 2022),
    and textures (Chodey and Noorullah Shariff, 2023), which hinders the task of developing
    a unique and robust algorithm which is able to accurately detect and track all
    those objects for agricultural purposes, compared to car and people detection.
    Moreover, those objects might suffer from being partially occluded and challenging
    illumination conditions (Ariza-Sentís et al., 2023a), such as the colour similarity
    between the fruit and the surrounding canopy (Bargoti and Underwood, 2017, Chen
    et al., 2017), which can burden a lot the task of fruit counting, with fruit under-
    or overestimation. The necessity of large datasets for training algorithms and
    avoiding overfitting in Object Detection and Tracking presents a significant disadvantage
    in the field of Computer Vision (Pal et al., 2021). Acquiring, annotating, and
    storing such extensive datasets can be resource-intensive and time-consuming.
    Before applying Computer Vision algorithms for Object Detection and Tracking in
    agriculture, it is crucial to ensure that the image data is appropriate for analysis
    (Katal et al., 2013) and that the data along with the annotations have sufficient
    quality and accuracy for the final application since it can already be a limiting
    variable to reach high detection and tracking metrics. This is especially important
    in agriculture due to the complex and dynamic nature of the farming environment.
    Unlike other fields where Object Detection and Tracking are applied, agriculture
    and farming involve living organisms, varied landscapes, and unpredictable weather
    conditions. Furthermore, the detection and tracking of farming targets require
    a more comprehensive approach that takes into account the biophysical characteristics
    of the crops, animals, pests, and other organisms present in the ecosystem. For
    example, the use of visible light (RGB) cameras might not be adequate for the
    detection of certain diseases that affect crops, such as powdery mildew. Instead,
    multispectral and hyperspectral imaging techniques may be required to capture
    the subtle differences in reflectance that are indicative of the presence of the
    disease (Abdulridha et al., 2020, Kuska et al., 2018). Another example could be
    to detect livestock diseases, for which it might be more suitable to use thermal
    cameras (Tzanidakis et al., 2021, Zheng et al., 2022), similarly, thermal data
    has also been utilized as a tool for assessing water stress in plants (Buunk et
    al., 2023, Gonzalez-Dugo et al., 2019, Katimbo et al., 2022). Hence, it is important
    to remark that multimodal data, collected from different platforms and sensors
    can provide more comprehensive information to better support Precision Farming
    applications. It has been mentioned in this review and by other authors that there
    is a lack of public datasets regarding Object Detection and Tracking (Akbari et
    al., 2021), and as observed in Table 3, most of them only deal with Object Detection,
    leaving Object Tracking with very few open-source datasets. Furthermore, data
    collection is time-consuming, expensive, and might be even prohibited by law in
    very specific environments (Kiefer et al., 2021), such as flying UAVs close to
    an airport or being inside a natural park. However, synthetic data is faster,
    more flexible, cheaper, and has cutting-edge privacy compared to real data. Several
    authors have already benefited from synthetic data in order to train Machine Learning
    and Object Detection algorithms (Akyon et al., 2021, Giakoumoglou et al., 2023b),
    for which the scalability was tested by performing a similarity assessment between
    the real and synthetic data (Klein et al., 2023). GANs have already been implemented
    within the farming domain (Lu et al., 2022). However, those models are prone to
    instability problems (Arjovsky and Bottou, 2017, Goodfellow et al., 2020) and
    it is still challenging to train the models to generate meaningful images that
    can benefit the purpose for which they were created (Zhu et al., 2020) since the
    number of public training images available is low (Brock et al., 2019). Another
    alternative is image augmentation techniques (Wu, 2011), such as flipping, rotation,
    and scaling, which can be used to increase the amount of data available for training
    and testing. This helps to prevent overfitting and improve the performance of
    the model (Su, Kong et al., 2021a). Moreover, there is a problem of data imbalance
    with certain classes in agricultural datasets, like a specific disease or pest,
    which can be underrepresented and lead to lower performance of the detection and
    tracking models. Additionally, it is important to consider the quality of the
    image data, including factors such as resolution and noise, as this can impact
    the performance of the algorithm. Overall, careful pre-processing of the image
    data is essential for achieving accurate and reliable Object Detection and Tracking
    in agriculture (Cap et al., 2022, Shorten and Khoshgoftaar, 2019). In addition
    to these challenges, it is important to remark on the need for appropriate and
    efficient hardware (Zhang, Lu et al., 2020) and software infrastructure for Object
    Detection and Tracking, which might require substantial computational power and
    storage data, that can be a limiting factor for farmers in resource-limited settings.
    It is relevant to remark that contrary to other domains, agricultural hardware
    is exposed to real-world settings, such as mud, dust, rain, and chemicals, among
    others, which should be considered when selecting the appropriate hardware to
    be present in the field. For that, it is relevant to select the opportune sensors
    (Pádua et al., 2017), such as RGB, multispectral, thermal cameras or LiDAR, and
    the convenient platform from which the dataset will be acquired, which can be
    UAVs, ground robots, tripod, among others. Furthermore, it is important to determine
    the appropriate algorithm (Naeem et al., 2013), such as Faster R-CNN, any version
    of YOLO, or Deep SORT, for Object Detection and Tracking, and ensure that they
    are optimized for the specific task at hand. Furthermore, it is also key to select
    the appropriate technology for which the algorithm will be integrated, for instance,
    with IoT devices (Xu, Gu et al., 2022b). It is important to remark that, even
    if Object Detection and Tracking have shown a lot of potential and good detection
    and tracking accuracies, they face some difficulties and limitations, for instance,
    their applicability and method-acquisition by the farmers, who are the main stakeholders
    and for which research should target their applications (Snapp et al., 2003).
    Hence, research must consider which are the current challenges that should be
    solved to make them more affordable and attractive for the end user. A relevant
    point here is that the centre of attention is meant to be the Computer Vision
    task, but not the acquisition of the data and its optimization (Ariza-Sentís et
    al., 2023a, Mazumder et al., 2023), which might influence the quality of the collected
    data and might help to increase the metrics obtained. For instance, despite the
    importance of pre-processing image data, many studies in the field of Computer
    Vision and Object Detection in agriculture often overlook the appropriate methods
    for acquiring the images. For example, capturing images at a good angle to avoid
    ID switching while tracking, optimal altitude and camera angle, flying or walking
    path, or implementing other pre-processing methodologies such as image-stitching
    prior to Object Detection (Zhou, Rui et al., 2019b), can be crucial for obtaining
    high-quality images that contain relevant information about the objects of interest.
    For that, it is important to carefully design and plan the path that needs to
    be followed by the platform to collect the datasets in the most optimal way. In
    that sense, path planning can play a crucial role since it consists of designing
    the most appropriate route from the initial point to the end point, considering
    and avoiding the obstacles found on the way, for instance, trees (Gasparetto et
    al., 2015), transmission towers, and terrain slope. Moreover, the optimization
    of the route is crucial for the platforms, mostly UAVs, since they face low autonomy,
    for which the data acquisition should be carried out within the minimum amount
    of time (Aggarwal and Kumar, 2020, Oksanen and Visala, 2009). Failure to consider
    these factors can lead to low-quality images that are difficult to analyse, which
    can impact the performance of the algorithm. Moreover, it is important to mention
    the importance of interpretability in Deep Learning models to not only obtain
    a result, for instance, a disease prediction but also to understand the reason
    behind the model detecting that particular issue, especially when it comes to
    Decision Support Systems (DSS) for disease detection. Therefore, it is important
    to emphasise the need for appropriate image acquisition methods and to encourage
    researchers to consider these factors when designing experiments or collecting
    data. By doing so, we can ensure that the image data used for Object Detection
    and Tracking in agriculture is of high quality and suitable for analysis, leading
    to more accurate and reliable results. Lastly, it is important to remark that,
    even if the integration of Object Detection and Tracking has shown substantial
    benefits for Precision Farming, such as optimization of resource allocation and
    enhancement of animal welfare, the implementation of such systems may face barriers
    often overlooked. Factors like limited connectivity in rural areas, insufficient
    digital literacy among farmers, and uncertainties regarding return on investment
    can present major challenges for the field. The mere presence of technological
    advantages does not guarantee its widespread adoption. Therefore, it is relevant
    to address these barriers and ensure accessibility, education, and clear demonstration
    of long-term benefits to foster the adoption of these technologies by farmers.
    6. Conclusions This paper undertook a comprehensive review of Object Detection
    and Tracking within the frame of Precision Farming, for which over 300 research
    articles were examined and the particular field of study, the algorithms used,
    the metrics obtained, the difficulties and limitations faced, and the availability
    of public datasets, were evaluated. The purpose of this review was to solve the
    two main research questions while providing an analysis of how Computer Vision
    and Deep Learning techniques can be optimized to maximize their impact within
    Precision Farming and presenting a detailed overview of the current advancements
    in Object Detection and Tracking techniques and applications, showing the advantages
    and limitations to encourage more researchers to experiment with Object Detection
    and Tracking for farming functionalities and to motivate them to make their datasets
    open-source. This open-source approach can save the scientific community from
    the time-intensive task of manual annotation with each new Deep Learning project.
    Our findings suggest that while Object Detection and Tracking can be applied to
    any crop, having ample revenue facilitates its implementation due to the investment
    required in modern technology. Nevertheless, Object Detection and Tracking is
    a promising area of research that holds potential for revolutionizing crop and
    livestock management while optimizing resource allocation, paving the way for
    robotization of the farming sector. The future of Object Detection and Tracking
    lies in overcoming the difficulties analysed in this review, for instance, target
    occlusion because of camera altitude, angle, leaf density, or crowded scenarios.
    A proposed solution to that problem is to plan optimal data acquisition before
    actually acquiring the data and to implement multiple-angle viewing systems to
    observe the target from multiple points of view to be able to properly detect
    and mostly track the object in its full size. Furthermore, it would be beneficial
    to emphasise the significance of model interpretability within agricultural contexts.
    Discerning the rationale behind a model''s decision is imperative for establishing
    trust among farmers and ensuring adherence to regulatory standards. Additionally,
    the integration of diverse data sources, including but not limited to thermal,
    lidar, multispectral, and hyperspectral sensors, in conjunction with Object Detection
    and Tracking techniques has the potential to revolutionize the food production
    sector. Such integration has the potential to facilitate a holistic understanding
    of the agricultural landscape. Directions for Future Research: (1) Shifting the
    emphasis from Object Detection and Tracking algorithms and metrics towards optimal
    data acquisition. (2) Incorporating prior knowledge of the biophysical environment
    to design optimal path planning. (3) Adopting multiple points of view and angles
    to circumvent object occlusion. (4) Releasing additional open-source labelled
    datasets. (5) Leveraging synthetic data generation techniques to supplement limited
    real-world datasets. (6) Designing efficient and robust hardware setups suitable
    for agricultural environments, which are often harsher than other scenarios, considering
    factors like durability, adaptability, and real-world exposure. (7) Addressing
    barriers to widespread adoption of these technologies in agriculture, including
    connectivity issues, lack of digital literacy, and uncertainties regarding return
    on investment. (8) Emphasising interpretability of Object Detection and Tracking
    models to boost agricultural DSS. CRediT authorship contribution statement Mar
    Ariza-Sentís: Conceptualization, Formal analysis, Investigation, Methodology,
    Resources, Software, Validation, Visualization, Writing – original draft, Writing
    – review & editing. Sergio Vélez: Conceptualization, Data curation, Formal analysis,
    Investigation, Methodology, Resources, Software, Supervision, Validation, Visualization,
    Writing – review & editing. Raquel Martínez-Peña: Conceptualization, Data curation,
    Formal analysis, Investigation, Methodology, Resources, Software, Supervision,
    Validation, Visualization, Writing – review & editing. Hilmy Baja: Conceptualization,
    Data curation, Formal analysis, Investigation, Methodology, Resources, Software,
    Supervision, Validation, Visualization, Writing – review & editing. João Valente:
    Conceptualization, Data curation, Formal analysis, Funding acquisition, Investigation,
    Methodology, Project administration, Resources, Software, Supervision, Validation,
    Visualization, Writing – review & editing. Declaration of competing interest The
    authors declare that they have no known competing financial interests or personal
    relationships that could have appeared to influence the work reported in this
    paper. Acknowledgements This work has been carried out in the scope of the H2020
    FlexiGroBots project, which has been funded by the European Commission in the
    scope of its H2020 programme (contract number 101017111, https://flexigrobots-h2020.eu/).
    The authors acknowledge valuable help and contributions from ''Bodegas Terras
    Gauda, S.A.'' and all partners of the project. Data availability No data was used
    for the research described in the article. References Abade et al., 2022 A. Abade,
    L.F. Porto, P.A. Ferreira, F. de Barros Vidal NemaNet: a convolutional neural
    network model for identification of soybean nematodes Biosystems Engineering,
    213 (2022), pp. 39-62, 10.1016/j.biosystemseng.2021.11.016 View PDFView articleView
    in ScopusGoogle Scholar Abdulridha et al., 2020 J. Abdulridha, Y. Ampatzidis,
    P. Roberts, S.C. Kakarla Detecting powdery mildew disease in squash at different
    stages using UAV-based hyperspectral imaging and artificial intelligence Biosystems
    Engineering, 197 (2020), pp. 135-148, 10.1016/j.biosystemseng.2020.07.001 View
    PDFView articleView in ScopusGoogle Scholar Acharya et al., 2022 P. Acharya, T.
    Burgers, K.-D. Nguyen AI-enabled droplet detection and tracking for agricultural
    spraying systems Computers and Electronics in Agriculture, 202 (2022), Article
    107325, 10.1016/j.compag.2022.107325 View PDFView articleView in ScopusGoogle
    Scholar Adli et al., 2023 H.K. Adli, M.A. Remli, K.N.S. Wan Salihin Wong, N.A.
    Ismail, A. González-Briones, J.M. Corchado, M.S. Mohamad Recent advancements and
    challenges of AIoT application in smart agriculture: A review Sensors, 23 (2023),
    p. 3752, 10.3390/s23073752 View in ScopusGoogle Scholar Aggarwal and Kumar, 2020
    S. Aggarwal, N. Kumar Path planning techniques for unmanned aerial vehicles: A
    review, solutions, and challenges Computer Communications, 149 (2020), pp. 270-299,
    10.1016/j.comcom.2019.10.014 View PDFView articleView in ScopusGoogle Scholar
    Ahmed et al., 2019 Sk.A. Ahmed, D.P. Dogra, S. Kar, P.P. Roy Trajectory-based
    surveillance analysis: A survey IEEE Transactions on Circuits and Systems for
    Video Technology, 29 (2019), pp. 1985-1997, 10.1109/TCSVT.2018.2857489 View in
    ScopusGoogle Scholar Akbari et al., 2021 Y. Akbari, N. Almaadeed, S. Al-ma’adeed,
    O. Elharrouss Applications, databases and open computer vision research from drone
    videos and images: a survey Artificial Intelligence Review, 54 (2021), 10.1007/s10462-020-09943-1
    Google Scholar Akyon et al., 2021 Akyon, F.C., Eryuksel, O., Ozfuttu, K.A., &
    Altinuc, S.O. (2021). Track boosting and synthetic data aided drone detection.
    In 2021 17th IEEE int. conf. adv. video signal based surveill. AVSS 1–5. doi:10.1109/AVSS52988.2021.9663759.
    Google Scholar Alam et al., 2022 M.S. Alam, M. Alam, M. Tufail, M.U. Khan, A.
    Güneş, B. Salah, F.E. Nasir, W. Saleem, M.T. Khan TobSet: A new tobacco crop and
    weeds image dataset and its utilization for vision-based spraying by agricultural
    robots Applied Sciences, 12 (2022), p. 1308, 10.3390/app12031308 View in ScopusGoogle
    Scholar Alanezi et al., 2022 M.A. Alanezi, M.S. Shahriar, Md.B. Hasan, S. Ahmed,
    Y.A. Sha’aban, H.R.E.H. Bouchekara Livestock management with unmanned aerial vehicles:
    A review IEEE Access, 10 (2022), pp. 45001-45028, 10.1109/ACCESS.2022.3168295
    View in ScopusGoogle Scholar Alibabaei et al., 2022 K. Alibabaei, P.D. Gaspar,
    T.M. Lima, R.M. Campos, I. Girão, J. Monteiro, C.M. Lopes A review of the challenges
    of using deep learning algorithms to support decision-making in agricultural activities
    Remote Sens., 14 (2022), p. 638, 10.3390/rs14030638 View in ScopusGoogle Scholar
    Amrani et al., 2023 A. Amrani, F. Sohel, D. Diepeveen, D. Murray, M.G.K. Jones
    Deep learning-based detection of aphid colonies on plants from a reconstructed
    Brassica image dataset Computers and Electronics in Agriculture, 205 (2023), Article
    107587, 10.1016/j.compag.2022.107587 View PDFView articleView in ScopusGoogle
    Scholar Amrouche et al., 2022 A. Amrouche, Y. Bentrcia, A. Abed, N. Hezil Vehicle
    detection and tracking in real-time using YOLOv4-tiny 2022 7th international conference
    on image and signal processing and their applications (ISPA). Presented at the
    2022 7th international conference on image and signal processing and their applications
    (ISPA) (2022), pp. 1-5, 10.1109/ISPA54004.2022.9786330 Google Scholar Ariza-Sentís
    et al., 2023a M. Ariza-Sentís, H. Baja, S. Vélez, J. Valente Object detection
    and tracking on UAV RGB videos for early extraction of grape phenotypic traits
    Computers and Electronics in Agriculture, 211 (2023), Article 108051, 10.1016/j.compag.2023.108051
    View PDFView articleView in ScopusGoogle Scholar Ariza-Sentís et al., 2023b M.
    Ariza-Sentís, J. Valente, L. Kooistra, H. Kramer, S. Mücher Estimation of spinach
    (Spinacia oleracea) seed yield with 2D UAV data and deep learning Smart Agric.
    Technol., 3 (2023), Article 100129, 10.1016/j.atech.2022.100129 View PDFView articleView
    in ScopusGoogle Scholar Ariza-Sentís et al., 2023c M. Ariza-Sentís, S. Vélez,
    J. Valente BBR: An open-source standard workflow based on biophysical crop parameters
    for automatic Botrytis cinerea assessment in vineyards SoftwareX, 24 (2023), Article
    101542, 10.1016/j.softx.2023.101542 View PDFView articleView in ScopusGoogle Scholar
    Ariza-Sentís et al., 2023d M. Ariza-Sentís, S. Vélez, J. Valente Dataset on UAV
    RGB videos acquired over a vineyard including bunch labels for object detection
    and tracking Data in Brief, 46 (2023), Article 108848, 10.1016/j.dib.2022.108848
    View PDFView articleView in ScopusGoogle Scholar Arjovsky and Bottou, 2017 M.
    Arjovsky, L. Bottou Towards principled methods for training generative adversarial
    Networks, 10.48550/arXiv (2017), p. 1701.04862 Google Scholar Auernhammer, 2001
    H. Auernhammer Precision farming - The environmental challenge Computers and Electronics
    in Agriculture, 30 (2001), pp. 31-43, 10.1016/S0168-1699(00)00153-8 View PDFView
    articleView in ScopusGoogle Scholar Azadi et al., 2011 H. Azadi, P. Ho, L. Hasfiati
    Agricultural land conversion drivers: A comparison between less developed, developing
    and developed countries Land Degradation and Development, 22 (2011), pp. 596-604,
    10.1002/ldr.1037 View in ScopusGoogle Scholar B et al., 2019 S. B, A.J. Tom, S.N.
    George Simultaneous denoising and moving object detection using low rank approximation
    Future Gener. Comput. Syst., 90 (2019), pp. 198-210, 10.1016/j.future.2018.07.065
    View PDFView articleGoogle Scholar Babaee et al., 2018 M. Babaee, Z. Li, G. Rigoll
    Occlusion handling in tracking multiple people using RNN IEEE international conference
    on image processing (ICIP). Presented at the 2018 25th IEEE international conference
    on image processing (ICIP) (2018), pp. 2715-2719, 10.1109/ICIP.2018.8451140 View
    in ScopusGoogle Scholar Babu and Raghunadh, 2016 K.M. Babu, M.V. Raghunadh Vehicle
    number plate detection and recognition using bounding box method 2016 International
    conference on advanced communication control and computing technologies (ICACCCT).
    Presented at the 2016 international conference on advanced communication control
    and computing technologies (ICACCCT) (2016), pp. 106-110, 10.1109/ICACCCT.2016.7831610
    View in ScopusGoogle Scholar Bargoti and Underwood, 2017 Bargoti, S., & Underwood,
    J. (2017). Deep fruit detection in orchards. In 2017 IEEE international conference
    on robotics and automation (ICRA). Presented at the 2017 IEEE international conference
    on robotics and automation (ICRA) (pp. 3626–3633). doi:10.1109/ICRA.2017.7989417.
    Google Scholar Bari et al., 2021 B.S. Bari, M.N. Islam, M. Rashid, M.J. Hasan,
    M.A.M. Razman, R.M. Musa, A.F.A. Nasir, A.P.P.A. Majeed A real-time approach of
    diagnosing rice leaf disease using deep learning-based faster R-CNN framework
    PeerJ Computational Science, 7 (2021), p. e432 CrossRefView in ScopusGoogle Scholar
    Bauer et al., 2019 A. Bauer, A.G. Bostrom, J. Ball, C. Applegate, T. Cheng, S.
    Laycock, S.M. Rojas, J. Kirwan, J. Zhou Combining computer vision and deep learning
    to enable ultra-scale aerial phenotyping and precision agriculture: A case study
    of lettuce production Horticultural Research, 6 (2019), p. 70, 10.1038/s41438-019-0151-5
    View in ScopusGoogle Scholar Bellvert et al., 2015 J. Bellvert, J. Marsal, J.
    Girona, P.J. Zarco-Tejada Seasonal evolution of crop water stress index in grapevine
    varieties determined with high-resolution remote sensing thermal imagery Irrigational
    Science, 33 (2015), pp. 81-93, 10.1007/s00271-014-0456-y View in ScopusGoogle
    Scholar Benet and Lenain, 2017 Benet, B., & Lenain, R. (2017). Multi-sensor fusion
    method for crop row tracking and traversability operations. In Conférence AXEMA-EURAGENG
    2017, conférence AXEMA-EURAGENG 2017. Paris, France (p. 10). Google Scholar Blackmore,
    1994 Blackmore, S. (1994). Precision farming: An introduction. Outlook Agriculture,
    23, 275–280. 10.1177/003072709402300407. Google Scholar Bongiovanni and Lowenberg-Deboer,
    2004 R. Bongiovanni, J. Lowenberg-Deboer Precision agriculture and sustainability
    Precision Agriculture, 5 (2004), pp. 359-387, 10.1023/B:PRAG.0000040806.39604.aa
    View in ScopusGoogle Scholar Bonneau et al., 2020 M. Bonneau, J.-A. Vayssade,
    W. Troupe, R. Arquet Outdoor animal tracking combining neural network and time-lapse
    cameras Computers and Electronics in Agriculture, 168 (2020), Article 105150,
    10.1016/j.compag.2019.105150 View PDFView articleView in ScopusGoogle Scholar
    Boogaard et al., 2020 F.P. Boogaard, K.S.A.H. Rongen, G.W. Kootstra Robust node
    detection and tracking in fruit-vegetable crops using deep learning and multi-view
    imaging Biosystems Engineering, 192 (2020), pp. 117-132, 10.1016/j.biosystemseng.2020.01.023
    View PDFView articleView in ScopusGoogle Scholar Bouguettaya et al., 2022 A. Bouguettaya,
    H. Zarzour, A. Kechida, A.M. Taberkit Deep learning techniques to classify agricultural
    crops through UAV imagery: a review Neural Computing and Applications, 34 (2022),
    pp. 9511-9536, 10.1007/s00521-022-07104-9 View in ScopusGoogle Scholar Brock et
    al., 2019 A. Brock, J. Donahue, K. Simonyan Large scale GAN training for high
    fidelity natural image Synthesis (2019), 10.48550/arXiv.1809.11096 Google Scholar
    Brunet et al., 2023 H. Brunet, P. Creach, D. Concordet Optimal estimation of broiler
    movement for commercial tracking Smart Agricultural Technology, 3 (2023), Article
    100113, 10.1016/j.atech.2022.100113 View PDFView articleView in ScopusGoogle Scholar
    Buunk et al., 2023 T. Buunk, S. Vélez, M. Ariza-Sentís, J. Valente Comparing nadir
    and oblique thermal imagery in UAV-based 3D crop water stress index applications
    for precision viticulture with LiDAR validation Sensors, 23 (2023), p. 8625, 10.3390/s23208625
    Google Scholar Campos et al., 2019 J. Campos, J. Llop, M. Gallart, F. García-Ruiz,
    A. Gras, R. Salcedo, E. Gil Development of canopy vigour maps using UAV for site-specific
    management during vineyard spraying process Precision Agriculture, 20 (2019),
    pp. 1136-1156, 10.1007/s11119-019-09643-z View in ScopusGoogle Scholar Cao et
    al., 2023 Y. Cao, J. Chen, Z. Zhang A sheep dynamic counting scheme based on the
    fusion between an improved-sparrow-search YOLOv5x-ECA model and few-shot deepsort
    algorithm Computers and Electronics in Agriculture, 206 (2023), Article 107696,
    10.1016/j.compag.2023.107696 View PDFView articleView in ScopusGoogle Scholar
    Cap et al., 2022 Q.H. Cap, H. Uga, S. Kagiwada, H. Iyatomi LeafGAN: An effective
    data augmentation method for practical plant disease diagnosis IEEE Transactions
    on Automation Science and Engineering, 19 (2022), pp. 1258-1267, 10.1109/TASE.2020.3041499
    View in ScopusGoogle Scholar Carreira and Zisserman, 2017 J. Carreira, A. Zisserman
    Quo Vadis, action recognition? A new model and the kinetics dataset 2017 IEEE
    conference on computer vision and pattern recognition (CVPR). Presented at the
    2017 IEEE conference on computer vision and pattern recognition (CVPR) (2017),
    pp. 4724-4733, 10.1109/CVPR.2017.502 View in ScopusGoogle Scholar Castro et al.,
    2020 W. Castro, J. Marcato Junior, C. Polidoro, L.P. Osco, W. Gonçalves, L. Rodrigues,
    M. Santos, L. Jank, S. Barrios, C. Valle, R. Simeão, C. Carromeu, E. Silveira,
    L.A.C. de Jorge, E. Matsubara Deep learning applied to phenotyping of biomass
    in forages with UAV-based RGB imagery Sensors, 20 (2020), p. 4802, 10.3390/s20174802
    Google Scholar Chang and Guo, 2018 K.-C. Chang, Z.-W. Guo The monkeys are coming
    ─ Design of agricultural damage warning system by IoT-based objects detection
    and tracking 2018 IEEE international conference on consumer electronics-Taiwan
    (ICCE-TW). Presented at the 2018 IEEE international conference on consumer electronics-Taiwan
    (ICCE-TW) (2018), pp. 1-2, 10.1109/ICCE-China.2018.8448434 Google Scholar Chang
    et al., 2020 A. Chang, J. Yeom, J. Jung, J. Landivar Comparison of canopy shape
    and vegetation indices of citrus trees derived from UAV multispectral images for
    characterization of citrus greening disease Remote Sensing, 12 (2020), p. 4122,
    10.3390/rs12244122 Google Scholar Chen, An et al., 2021 Y. Chen, X. An, S. Gao,
    S. Li, H. Kang A deep learning-based vision system combining detection and tracking
    for fast on-line citrus sorting Frontiers in Plant Science, 12 (2021), Article
    622062, 10.3389/fpls.2021.622062 View in ScopusGoogle Scholar Chen, Li et al.,
    2021 P. Chen, W. Li, S. Yao, C. Ma, J. Zhang, B. Wang, C. Zheng, C. Xie, D. Liang
    Recognition and counting of wheat mites in wheat fields by a three-step deep learning
    method Neurocomputing, 437 (2021), pp. 21-30, 10.1016/j.neucom.2020.07.140 View
    PDFView articleView in ScopusGoogle Scholar Chen et al., 2017 S.W. Chen, S.S.
    Shivakumar, S. Dcunha, J. Das, E. Okon, C. Qu, C.J. Taylor, V. Kumar Counting
    apples and oranges with deep learning: A data-driven approach IEEE Robotics on
    Automation Letters, 2 (2017), pp. 781-788, 10.1109/LRA.2017.2651944 View in ScopusGoogle
    Scholar Chodey and Noorullah Shariff, 2023 M.D. Chodey, C. Noorullah Shariff Pest
    detection via hybrid classification model with fuzzy C-means segmentation and
    proposed texture feature Biomedical Signal Processing and Control, 84 (2023),
    Article 104710, 10.1016/j.bspc.2023.104710 View PDFView articleView in ScopusGoogle
    Scholar Christiansen et al., 2016 P. Christiansen, L. Nielsen, K. Steen, R. Jørgensen,
    H. Karstoft DeepAnomaly: Combining background subtraction and deep learning for
    detecting obstacles and anomalies in an agricultural field Sensors, 16 (2016),
    p. 1904, 10.3390/s16111904 View in ScopusGoogle Scholar Ciarfuglia et al., 2023
    T.A. Ciarfuglia, I.M. Motoi, L. Saraceni, M. Fawakherji, A. Sanfeliu, D. Nardi
    Weakly and semi-supervised detection, segmentation and tracking of table grapes
    with limited and noisy data Computers and Electronics in Agriculture, 205 (2023),
    Article 107624, 10.1016/j.compag.2023.107624 View PDFView articleView in ScopusGoogle
    Scholar Čirjak et al., 2023 D. Čirjak, I. Aleksi, D. Lemic, I. Pajač Živković
    EfficientDet-4 deep neural network-based remote monitoring of codling moth population
    for early damage detection in apple orchard Agriculture, 13 (2023), p. 961, 10.3390/agriculture13050961
    View in ScopusGoogle Scholar Coulibaly et al., 2022 S. Coulibaly, B. Kamsu-Foguem,
    D. Kamissoko, D. Traore Deep learning for precision agriculture: A bibliometric
    analysis Intelligent Systems and Applications, 16 (2022), Article 200102, 10.1016/j.iswa.2022.200102
    View PDFView articleView in ScopusGoogle Scholar Davies, 2004 A. Davies Computational
    intermediation and the evolution of computation as a commodity Applied Economics,
    36 (2004), pp. 1131-1142, 10.1080/0003684042000247334 View in ScopusGoogle Scholar
    De Grave et al., 2020 C. De Grave, J. Verrelst, P. Morcillo-Pallarés, L. Pipia,
    J.P. Rivera-Caicedo, E. Amin, S. Belda, J. Moreno Quantifying vegetation biophysical
    variables from the Sentinel-3/FLEX tandem mission: Evaluation of the synergy of
    OLCI and FLORIS data sources Remote Sensing of Environment, 251 (2020), Article
    112101, 10.1016/j.rse.2020.112101 View PDFView articleView in ScopusGoogle Scholar
    de Jong et al., 2022 S. de Jong, H. Baja, K. Tamminga, J. Valente APPLE MOTS:
    Detection, segmentation and tracking of homogeneous objects using MOTS IEEE Robotics
    on Automation Letters, 7 (2022), pp. 11418-11425, 10.1109/LRA.2022.3199026 View
    in ScopusGoogle Scholar Deng et al., 2021 R. Deng, M. Tao, X. Huang, K. Bangura,
    Q. Jiang, Y. Jiang, L. Qi Automated counting grains on the rice panicle based
    on deep learning method Sensors, 21 (2021), p. 281, 10.3390/s21010281 Google Scholar
    Du et al., 2023 Y. Du, Z. Zhao, Y. Song, Y. Zhao, F. Su, T. Gong, H. Meng StrongSORT:
    Make DeepSORT great again IEEE Transactions on Multimedia, 25 (2023), pp. 8725-8737,
    10.1109/TMM.2023.3240881 View in ScopusGoogle Scholar Dyrmann et al., 2016 M.
    Dyrmann, H. Karstoft, H.S. Midtiby Plant species classification using deep convolutional
    neural network Biosystems Engineering, 151 (2016), pp. 72-80, 10.1016/j.biosystemseng.2016.08.024
    View PDFView articleView in ScopusGoogle Scholar Dyrmann et al., 2017 M. Dyrmann,
    R.N. Jørgensen, H.S. Midtiby RoboWeedSupport - Detection of weed locations in
    leaf occluded cereal crops using a fully convolutional neural network Advances
    in Animal Biosciences, 8 (2017), pp. 842-847, 10.1017/S2040470017000206 View PDFView
    articleGoogle Scholar Amraoui et al., 2022 K. El Amraoui, M. Lghoul, A. Ezzaki,
    L. Masmoudi, M. Hadri, H. Elbelrhiti, A.A. Simo Avo-AirDB: An avocado UAV Database
    for agricultural image segmentation and classification Data in Brief, 45 (2022),
    Article 108738, 10.1016/j.dib.2022.108738 View PDFView articleView in ScopusGoogle
    Scholar El-gayar et al., 2013 M.M. El-gayar, H. Soliman, N. Meky A comparative
    study of image low level feature extraction algorithms Egyptian Informatics Journal,
    14 (2013), pp. 175-181, 10.1016/j.eij.2013.06.003 View PDFView articleView in
    ScopusGoogle Scholar Escolà et al., 2023 A. Escolà, J.M. Peña, F. López-Granados,
    J.R. Rosell-Polo, A.I. De Castro, E. Gregorio, F.M. Jiménez-Brenes, R. Sanz, F.
    Sebé, J. Llorens, J. Torres-Sánchez Mobile terrestrial laser scanner vs. UAV photogrammetry
    to estimate woody crop canopy parameters – Part 1: Methodology and comparison
    in vineyards Computers and Electronics in Agriculture, 212 (2023), Article 108109,
    10.1016/j.compag.2023.108109 View PDFView articleView in ScopusGoogle Scholar
    Fradi et al., 2018 Fradi, H., Bracco, L., Canino, F., Dugelay, J.-L., 2018. Autonomous
    person detection and tracking framework using unmanned aerial vehicles (UAVs).
    In Presented at the 26th European Signal Processing Conference (EUSIPCO), Rome,
    Italy. 10.23919/EUSIPCO.2018.8553010. Google Scholar Frampton et al., 2013 W.J.
    Frampton, J. Dash, G. Watmough, E.J. Milton Evaluating the capabilities of Sentinel-2
    for quantitative estimation of biophysical variables in vegetation ISPRS Journal
    of Photogrammetry and Remote Sensing, 82 (2013), pp. 83-92, 10.1016/j.isprsjprs.2013.04.007
    View PDFView articleView in ScopusGoogle Scholar Friedman et al., 2013 L. Friedman,
    N.S. Netanyahu, M. Shoshany Mean shift-based clustering of remotely sensed data
    with agricultural and land-cover applications International Journal of Remote
    Sensing, 34 (2013), pp. 6037-6053, 10.1080/01431161.2013.793866 View in ScopusGoogle
    Scholar Fuentes et al., 2017 A. Fuentes, S. Yoon, S.C. Kim, D.S. Park A robust
    deep-learning-based detector for real-time tomato plant diseases and pests recognition
    Sensors, 17 (2017), p. 2022, 10.3390/s17092022 View in ScopusGoogle Scholar Furbank
    et al., 2019 R.T. Furbank, J.A. Jimenez-Berni, B. George-Jaeggli, A.B. Potgieter,
    D.M. Deery Field crop phenomics: enabling breeding for radiation use efficiency
    and biomass in cereal crops The New Phytologist, 223 (2019), pp. 1714-1727, 10.1111/nph.15817
    View in ScopusGoogle Scholar Gallo et al., 2023 I. Gallo, A.U. Rehman, R.H. Dehkordi,
    N. Landro, R. La Grassa, M. Boschetti Deep object detection of crop weeds: Performance
    of YOLOv7 on a real case dataset from UAV images Remote Sensing, 15 (2023), p.
    539, 10.3390/rs15020539 View in ScopusGoogle Scholar Ganesh et al., 2019 P. Ganesh,
    K. Volle, T.F. Burks, S.S. Mehta Deep orange: Mask R-CNN based orange detection
    and segmentation IFAC-Papers, 52 (2019), pp. 70-75, 10.1016/j.ifacol.2019.12.499
    View PDFView articleView in ScopusGoogle Scholar Gao et al., 2022 F. Gao, W. Fang,
    X. Sun, Z. Wu, G. Zhao, G. Li, R. Li, L. Fu, Q. Zhang A novel apple fruit detection
    and counting methodology based on deep learning and trunk tracking in modern orchard
    Computers and Electronics in Agriculture, 197 (2022), Article 107000, 10.1016/j.compag.2022.107000
    View PDFView articleView in ScopusGoogle Scholar Gasparetto et al., 2015 A. Gasparetto,
    P. Boscariol, A. Lanzutti, R. Vidoni Path planning and trajectory planning algorithms:
    A general overview G. Carbone, F. Gomez-Bravo (Eds.), Motion and operation planning
    of robotic systems: background and practical approaches, mechanisms and machine
    science, Springer International Publishing, Cham (2015), pp. 3-27, 10.1007/978-3-319-14705-5_1
    View in ScopusGoogle Scholar Gatti et al., 2022 M. Gatti, A. Garavani, C. Squeri,
    I. Diti, A. De Monte, C. Scotti, S. Poni Effects of intra-vineyard variability
    and soil heterogeneity on vine performance, dry matter and nutrient partitioning
    Precision Agriculture, 23 (2022), pp. 150-177, 10.1007/s11119-021-09831-w View
    in ScopusGoogle Scholar Ge et al., 2022 Y. Ge, S. Lin, Y. Zhang, Z. Li, H. Cheng,
    J. Dong, S. Shao, J. Zhang, X. Qi, Z. Wu Tracking and counting of tomato at different
    growth period using an improving YOLO-deepsort network for inspection robot Machines,
    10 (2022), p. 489, 10.3390/machines10060489 View in ScopusGoogle Scholar Geiger
    et al., 2013 A. Geiger, P. Lenz, C. Stiller, R. Urtasun Vision meets robotics:
    The KITTI dataset International Journal of Robotics Research, 32 (2013), pp. 1231-1237,
    10.1177/0278364913491297 View in ScopusGoogle Scholar Gené-Mola et al., 2020 J.
    Gené-Mola, R. Sanz-Cortiella, J.R. Rosell-Polo, J.-R. Morros, J. Ruiz-Hidalgo,
    V. Vilaplana, E. Gregorio Fuji-SfM dataset: A collection of annotated images and
    point clouds for Fuji apple detection and location using structure-from-motion
    photogrammetry Data in Brief, 30 (2020), Article 105591, 10.1016/j.dib.2020.105591
    View PDFView articleView in ScopusGoogle Scholar Giakoumoglou et al., 2023a N.
    Giakoumoglou, E.M. Pechlivani, A. Sakelliou, C. Klaridopoulos, N. Frangakis, D.
    Tzovaras Deep learning-based multi-spectral identification of grey mould Smart
    Agricultural Technologies, 4 (2023), Article 100174, 10.1016/j.atech.2023.100174
    View PDFView articleView in ScopusGoogle Scholar Giakoumoglou et al., 2023b N.
    Giakoumoglou, E.M. Pechlivani, D. Tzovaras Generate-Paste-Blend-Detect: Synthetic
    dataset for object detection in the agriculture domain Smart Agricultural Technologies,
    5 (2023), Article 100258, 10.1016/j.atech.2023.100258 View PDFView articleView
    in ScopusGoogle Scholar Girshick et al., 2014 Girshick, R., Donahue, J., Darrell,
    T., & Malik, J., 2014. Rich feature hierarchies for accurate object detection
    and semantic segmentation. In Proceedings of the IEEE computer society conference
    on computer vision and pattern recognition (pp. 580–587). IEEE Computer Society,
    doi:10.1109/CVPR.2014.81. Google Scholar Girshick, 2015 Girshick, R. (2015). Fast
    R-CNN. IEEE Int. Conf. Comput. Vis. ICCV 1440–1448. Google Scholar Gole et al.,
    2023 P. Gole, P. Bedi, S. Marwaha, M.A. Haque, C.K. Deb TrIncNet: A lightweight
    vision transformer network for identification of plant diseases Frontiers in Plant
    Science, 14 (2023), p. 1221557, 10.3389/fpls.2023.1221557 View in ScopusGoogle
    Scholar Gong et al., 2021 B. Gong, D. Ergu, Y. Cai, B. Ma Real-time detection
    for wheat head applying deep neural network Sensors, 21 (2021), p. 191, 10.3390/s21010191
    Google Scholar Gonzalez-Dugo et al., 2019 V. Gonzalez-Dugo, M. Lopez-Lopez, M.
    Espadafor, F. Orgaz, L. Testi, P. Zarco-Tejada, I.J. Lorite, E. Fereres Transpiration
    from canopy temperature: Implications for the assessment of crop yield in almond
    orchards European Journal of Agronomy, 105 (2019), pp. 78-85, 10.1016/j.eja.2019.01.010
    View PDFView articleView in ScopusGoogle Scholar Goodfellow et al., 2020 I. Goodfellow,
    J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley, S. Ozair, A. Courville, Y.
    Bengio Generative adversarial networks Communications of the ACM, 63 (2020), pp.
    139-144, 10.1145/3422622 View in ScopusGoogle Scholar Google Scholar, 2023 Google
    Scholar [WWW Document] (2023). URL https://scholar.google.com/ (accessed 5.31.23).
    Google Scholar Guadagna et al., 2023 P. Guadagna, M. Fernandes, F. Chen, A. Santamaria,
    T. Teng, T. Frioni, D.G. Caldwell, S. Poni, C. Semini, M. Gatti Using deep learning
    for pruning region detection and plant organ segmentation in dormant spur-pruned
    grapevines Precision Agriculture (2023), 10.1007/s11119-023-10006-y Google Scholar
    Güldenring et al., 2023 R. Güldenring, F.K. van Evert, L. Nalpantidis RumexWeeds:
    A grassland dataset for agricultural robotics Journal of Field Robotics, 40 (2023),
    pp. 1639-1656, 10.1002/rob.22196 View in ScopusGoogle Scholar Gutiérrez et al.,
    2018 S. Gutiérrez, M.P. Diago, J. Fernández-Novales, J. Tardaguila Vineyard water
    status assessment using on-the-go thermal imaging and machine learning PLoS One,
    13 (2018), p. e0192037 CrossRefView in ScopusGoogle Scholar Haalck et al., 2023
    L. Haalck, M. Mangan, A. Wystrach, L. Clement, B. Webb, B. Risse CATER: Combined
    animal tracking & environment reconstruction Science Advances, 9 (2023), p. eadg2094,
    10.1126/sciadv.adg2094 View in ScopusGoogle Scholar Häni et al., 2020 Häni, N.,
    Roy, P., & Isler, V. (2020). MinneApple: A benchmark dataset for apple detection
    and segmentation, 5, 852–858. Google Scholar Hassaballah et al., 2021 M. Hassaballah,
    M.A. Kenk, K. Muhammad, S. Minaee Vehicle detection and tracking in adverse weather
    using a deep learning framework IEEE Transactions on Intelligent Transportation
    Systems, 22 (2021), pp. 4230-4242, 10.1109/TITS.2020.3014013 View in ScopusGoogle
    Scholar He et al., 2017 He, K., Gkioxari, G., Dollar, P., & Girshick, R. (2017).
    Mask R-CNN. In Presented at the proceedings of the IEEE international conference
    on computer vision (pp. 2961–2969). Google Scholar He et al., 2021 H. He, Y. Qiao,
    X. Li, C. Chen, X. Zhang Optimization on multi-object tracking and segmentation
    in pigs’ weight measurement Computers and Electronics in Agriculture, 186 (2021),
    Article 106190, 10.1016/j.compag.2021.106190 View PDFView articleView in ScopusGoogle
    Scholar He et al., 2022 L. He, F. Wu, X. Du, G. Zhang Cascade-SORT: A robust fruit
    counting approach using multiple features cascade matching Computers and Electronics
    in Agriculture, 200 (2022), Article 107223, 10.1016/j.compag.2022.107223 View
    PDFView articleView in ScopusGoogle Scholar Heffner et al., 2009 E.L. Heffner,
    M.E. Sorrells, J.-L. Jannink Genomic selection for crop improvement Crop Science,
    49 (2009), pp. 1-12, 10.2135/cropsci2008.08.0512 View in ScopusGoogle Scholar
    Hong et al., 2022 S. Hong, W. Zhan, T. Dong, J. She, C. Min, H. Huang, Y. Sun
    A recognition method of bactrocera minax (diptera: tephritidae) grooming behavior
    via a multi-object tracking and spatio-temporal feature detection model Journal
    of Insect Behavior, 35 (2022), pp. 67-81, 10.1007/s10905-022-09802-7 View in ScopusGoogle
    Scholar Horn and Schunck, 1981 B.K.P. Horn, B.G. Schunck Determining optical flow
    Artificial Intelligence, 17 (1981), pp. 185-203, 10.1016/0004-3702(81)90024-2
    View PDFView articleGoogle Scholar Hou et al., 2017 Hou, S., Feng, Y., & Wang,
    Z. (2017). VegFru: A domain-specific dataset for fine-grained visual categorization.
    In 2017 IEEE International conference on computer vision (ICCV). Presented at
    the 2017 IEEE international conference on computer vision (ICCV), Venice. doi:10.1109/ICCV.2017.66.
    Google Scholar Houtman et al., 2021 W. Houtman, A. Siagkris-Lekkos, D.J.M. Bos,
    B.J.P. van den Heuvel, M. den Boer, J. Elfring, M.J.G. van de Molengraft Automated
    flower counting from partial detections: Multiple hypothesis tracking with a connected-flower
    plant model Computers and Electronics in Agriculture, 188 (2021), Article 106346,
    10.1016/j.compag.2021.106346 View PDFView articleView in ScopusGoogle Scholar
    Hu et al., 2022 N. Hu, D. Su, S. Wang, P. Nyamsuren, Y. Qiao, Y. Jiang, Y. Cai
    LettuceTrack: Detection and tracking of lettuce for robotic precision spray in
    agriculture Frontiers in Plant Science, 13 (2022) Google Scholar Huang et al.,
    2023 X. Huang, Z. Hu, Y. Qiao, S. Sukkarieh Deep learning-based cow tail detection
    and tracking for precision livestock farming IEEEASME Transactions on Mechatronics,
    28 (2023), pp. 1213-1221, 10.1109/TMECH.2022.3175377 View in ScopusGoogle Scholar
    Ishengoma et al., 2021 F.S. Ishengoma, I.A. Rai, R.N. Said Identification of maize
    leaves infected by fall armyworms using UAV-based imagery and convolutional neural
    networks Computers and Electronics in Agriculture, 184 (2021), Article 106124,
    10.1016/j.compag.2021.106124 View PDFView articleView in ScopusGoogle Scholar
    Jannink et al., 2010 J.-L. Jannink, A.J. Lorenz, H. Iwata Genomic selection in
    plant breeding: From theory to practice Briefings in Functional Genomics, 9 (2010),
    pp. 166-177, 10.1093/bfgp/elq001 View in ScopusGoogle Scholar Jiang et al., 2022
    J. Jiang, H. Liu, C. Zhao, C. He, J. Ma, T. Cheng, Y. Zhu, W. Cao, X. Yao Evaluation
    of diverse convolutional neural networks and training strategies for wheat leaf
    disease identification with field-acquired photographs Remote Sensing, 14 (2022),
    p. 3446, 10.3390/rs14143446 View in ScopusGoogle Scholar Junos et al., 2021 M.H.
    Junos, A.S. Mohd Khairuddin, S. Thannirmalai, M. Dahari An optimized YOLO-based
    object detection model for crop harvesting system IET Image Processing, 15 (2021),
    pp. 2112-2125, 10.1049/ipr2.12181 View in ScopusGoogle Scholar Kaggle, 2023 Kaggle
    (2023). Kaggle: Your Machine Learning and Data Science Community [WWW Document].
    URL https://www.kaggle.com/ (accessed 9.11.23). Google Scholar Kamilaris and Prenafeta-Boldú,
    2018 A. Kamilaris, F.X. Prenafeta-Boldú Deep learning in agriculture: A survey
    Computers and Electronics in Agriculture, 147 (2018), pp. 70-90, 10.1016/j.compag.2018.02.016
    View PDFView articleView in ScopusGoogle Scholar Katal et al., 2013 Katal, A.,
    Wazid, M., & Goudar, R.H. (2013). Big data: Issues, challenges, tools and Good
    practices. In 2013 Sixth Int. Conf. Contemp. Comput. IC3 404–409. 10.1109/IC3.2013.6612229.
    Google Scholar Katimbo et al., 2022 A. Katimbo, D.R. Rudnick, K.C. DeJonge, T.H.
    Lo, X. Qiao, T.E. Franz, H.N. Nakabuye, J. Duan Crop water stress index computation
    approaches and their sensitivity to soil water dynamics Agricultural Water Management,
    266 (2022), Article 107575, 10.1016/j.agwat.2022.107575 View PDFView articleView
    in ScopusGoogle Scholar Kaur et al., 2022 P. Kaur, S. Harnal, V. Gautam, M.P.
    Singh, S.P. Singh An approach for characterization of infected area in tomato
    leaf disease based on deep learning and object detection technique Engineering
    Applications of Artificial Intelligence, 115 (2022), Article 105210, 10.1016/j.engappai.2022.105210
    View PDFView articleView in ScopusGoogle Scholar Kestur et al., 2019 R. Kestur,
    A. Meduri, O. Narasipura MangoNet: A deep semantic segmentation architecture for
    a method to detect and count mangoes in an open orchard Engineering Applications
    of Artificial Intelligence, 77 (2019), pp. 59-69, 10.1016/j.engappai.2018.09.011
    View PDFView articleView in ScopusGoogle Scholar Khairunissa et al., 2021 J. Khairunissa,
    S. Wahjuni, I.R.H. Soesanto, W. Wulandari Detecting poultry movement for poultry
    behavioral analysis using the multi-object tracking (MOT) algorithm International
    Conference on Computer and Communication Engineering (ICCCE). Presented at the
    2021 8th International Conference on Computer and Communication Engineering (ICCCE)
    (2021), pp. 265-268, 10.1109/ICCCE50029.2021.9467144 View in ScopusGoogle Scholar
    Khan and AlSuwaidan, 2022 S. Khan, L. AlSuwaidan Agricultural monitoring system
    in video surveillance object detection using feature extraction and classification
    by deep learning techniques Computers and Electrical Engineering, 102 (2022),
    Article 108201, 10.1016/j.compeleceng.2022.108201 View PDFView articleView in
    ScopusGoogle Scholar Khan et al., 2021 S. Khan, M. Tufail, M.T. Khan, Z.A. Khan,
    S. Anwar Deep learning-based identification system of weeds and crops in strawberry
    and pea fields for a precision agriculture sprayer Precision Agriculture, 22 (2021),
    pp. 1711-1727, 10.1007/s11119-021-09808-9 View in ScopusGoogle Scholar Kiefer
    et al., 2021 Kiefer, B., Ott, D., & Zell, A. (2021). Leveraging synthetic data
    in object detection on unmanned aerial vehicles. Google Scholar Kienbaum et al.,
    2021 L. Kienbaum, M. Correa Abondano, R. Blas, K. Schmid DeepCob: precise and
    high-throughput analysis of maize cob geometry using deep learning with an application
    in genebank phenomics Plant Methods, 17 (2021), p. 91, 10.1186/s13007-021-00787-6
    View in ScopusGoogle Scholar Kierdorf et al., 2022 J. Kierdorf, I. Weber, A. Kicherer,
    L. Zabawa, L. Drees, R. Roscher Behind the leaves: Estimation of occluded grapevine
    berries with conditional generative adversarial networks Frontiers in Artificial
    Intelligence (2022), p. 5 Google Scholar Kim and Kim, 2020 M. Kim, W. Kim Top-down
    thermal tracking based on rotatable elliptical motion model for intelligent livestock
    breeding Multimedia Systems, 26 (2020), pp. 509-517, 10.1007/s00530-020-00658-5
    View in ScopusGoogle Scholar Kim et al., 2022 J. Kim, Y. Suh, J. Lee, H. Chae,
    H. Ahn, Y. Chung, D. Park EmbeddedPigCount: Pig counting with video object detection
    and tracking on an embedded board Sensors, 22 (2022), p. 2689, 10.3390/s22072689
    View in ScopusGoogle Scholar Klein et al., 2023 Klein, J., Waller, R.E., Pirk,
    S., Pałubicki, W., Tester, M., & Michels, D. (2023). Synthetic data at scale:
    A paradigm to efficiently leverage machine learning in agriculture, doi:10.2139/ssrn.4314564.
    Google Scholar Klingman and Noordhoff, 1961 G.C. Klingman, L.J. Noordhoff Weed
    control: As a science Weed Control Science (1961) Google Scholar Koonce, 2021
    Koonce, B. (2021). EfficientNet. In Koonce, B. (Ed.), Convolutional neural networks
    with swift for tensorflow: Image recognition and dataset categorization. Apress,
    Berkeley, CA (pp. 109–123), doi:10.1007/978-1-4842-6168-2_10. Google Scholar Kragh
    et al., 2017 M.F. Kragh, P. Christiansen, M.S. Laursen, M. Larsen, K.A. Steen,
    O. Green, H. Karstoft, R.N. Jørgensen FieldSAFE: Dataset for obstacle detection
    in agriculture Sensors, 17 (2017), p. 2579, 10.3390/s17112579 View in ScopusGoogle
    Scholar Kumar, 2006 N. Kumar Breeding of horticultural crops: Principles and practices
    New India Publishing (2006) Google Scholar Kumar and Kukreja, 2021 D. Kumar, V.
    Kukreja N-CNN based transfer learning method for classification of powdery mildew
    wheat disease 2021 International Conference on Emerging Smart Computing and Informatics
    (ESCI). Presented at the 2021 International Conference on Emerging Smart Computing
    and Informatics (ESCI) (2021), pp. 707-710, 10.1109/ESCI50559.2021.9396972 View
    in ScopusGoogle Scholar Kuska et al., 2018 M.T. Kuska, J. Behmann, D.K. Großkinsky,
    T. Roitsch, A.-K. Mahlein Screening of barley resistance against powdery mildew
    by simultaneous high-throughput enzyme activity signature profiling and multispectral
    imaging Frontiers in Plant Science, 9 (2018) Google Scholar Lac et al., 2022 L.
    Lac, J.-P. Da Costa, M. Donias, B. Keresztes, A. Bardet Crop stem detection and
    tracking for precision hoeing using deep learning Computers and Electronics in
    Agriculture, 192 (2022), Article 106606, 10.1016/j.compag.2021.106606 View PDFView
    articleView in ScopusGoogle Scholar Lacerda et al., 2022 L.N. Lacerda, J. Snider,
    Y. Cohen, V. Liakos, M.R. Levi, G. Vellidis Correlation of UAV and satellite-derived
    vegetation indices with cotton physiological parameters and their use as a tool
    for scheduling variable rate irrigation in cotton Precision Agriculture, 23 (2022),
    pp. 2089-2114, 10.1007/s11119-022-09948-6 View in ScopusGoogle Scholar Leal-Taixé
    et al., 2015 Leal-Taixé, L., Milan, A., Reid, I., Roth, S., & Schindler, K. (2015).
    MOTChallenge 2015: Towards a benchmark for multi-target tracking. doi:10.48550/arXiv.1504.01942.
    Google Scholar LeCun and Bengio, 1995 LeCun, Y. & Bengio, Y. (1995). Convolutional
    networks for images, speech, and time-series. In The handbook of brain theory
    and neural networks, 3361. Presented at the the handbook of brain theory and neural
    networks. Google Scholar LeCun et al., 2015 Y. LeCun, Y. Bengio, G. Hinton Deep
    learning Nature, 521 (2015), pp. 436-444, 10.1038/nature14539 View in ScopusGoogle
    Scholar Lee et al., 2014 B.Y. Lee, L.H. Liew, W.S. Cheah, Y.C. Wang Occlusion
    handling in videos object tracking: A survey IOP Conference Series on Earth Environmental
    Science, 18 (2014), Article 012020, 10.1088/1755-1315/18/1/012020 View in ScopusGoogle
    Scholar Leibe et al., 2007 B. Leibe, K. Schindler, L. Van Gool Coupled detection
    and trajectory estimation for multi-object tracking 2007 IEEE 11th International
    Conference on Computer Vision. Presented at the 2007 IEEE 11th International Conference
    on Computer Vision (2007), pp. 1-8, 10.1109/ICCV.2007.4408936 Google Scholar Li,
    Guo et al., 2020 Z. Li, R. Guo, M. Li, Y. Chen, G. Li A review of computer vision
    technologies for plant phenotyping Computers and Electronics in Agriculture, 176
    (2020), Article 105672, 10.1016/j.compag.2020.105672 View PDFView articleView
    in ScopusGoogle Scholar Li, Hui et al., 2021 G. Li, X. Hui, Z. Chen, G.D. Chesser,
    Y. Zhao Development and evaluation of a method to detect broilers continuously
    walking around feeder as an indication of restricted feeding behaviors Computers
    and Electronics in Agriculture, 181 (2021), Article 105982, 10.1016/j.compag.2020.105982
    View PDFView articleView in ScopusGoogle Scholar Li, Li et al., 2021 J. Li, C.
    Li, S. Fei, C. Ma, W. Chen, F. Ding, Y. Wang, Y. Li, J. Shi, Z. Xiao Wheat ear
    recognition based on retinanet and transfer learning Sensors, 21 (2021), p. 4845,
    10.3390/s21144845 View in ScopusGoogle Scholar Li et al., 2023 Y. Li, R. Ma, R.
    Zhang, Y. Cheng, C. Dong A tea buds counting method based on YOLOv5 and Kalman
    filter tracking algorithm Plant Phenomics, 5 (2023), 10.34133/plantphenomics.0030
    Google Scholar Li, Su et al., 2022 D. Li, H. Su, K. Jiang, D. Liu, X. Duan Fish
    face identification based on rotated object detection: Dataset and exploration
    Fishes, 7 (2022), p. 219, 10.3390/fishes7050219 Google Scholar Li et al., 2019
    R. Li, R. Wang, J. Zhang, C. Xie, L. Liu, F. Wang, H. Chen, T. Chen, H. Hu, X.
    Jia, M. Hu, M. Zhou, D. Li, W. Liu An effective data augmentation strategy for
    CNN-based pest localization and recognition in the field IEEE Access, 7 (2019),
    pp. 160274-160283, 10.1109/ACCESS.2019.2949852 View in ScopusGoogle Scholar Li,
    Yan et al., 2022 S. Li, Z. Yan, Y. Guo, X. Su, Y. Cao, B. Jiang, F. Yang, Z. Zhang,
    D. Xin, Q. Chen, R. Zhu SPM-IS: An auto-algorithm to acquire a mature soybean
    phenotype based on instance segmentation. Crop J Crop Phenotyping Studies with
    Application to Crop Monitoring, 10 (2022), pp. 1412-1423, 10.1016/j.cj.2021.05.014
    View PDFView articleView in ScopusGoogle Scholar Li, Zhang et al., 2020 M. Li,
    Z. Zhang, L. Lei, X. Wang, X. Guo Agricultural greenhouses detection in high-resolution
    satellite images based on convolutional neural networks: Comparison of faster
    R-CNN, YOLO v3 and SSD Sensors, 20 (2020), p. 4938, 10.3390/s20174938 Google Scholar
    Li, Zhao et al., 2022 X. Li, Z. Zhao, J. Wu, Y. Huang, J. Wen, S. Sun, H. Xie,
    J. Sun, Y. Gao Y-BGD: Broiler counting based on multi-object tracking Computers
    and Electronics in Agriculture, 202 (2022), Article 107347, 10.1016/j.compag.2022.107347
    View PDFView articleView in ScopusGoogle Scholar Lin et al., 2019 Z. Lin, S. Mu,
    F. Huang, K.A. Mateen, M. Wang, W. Gao, J. Jia A unified matrix-based convolutional
    neural network for fine-grained image classification of wheat leaf diseases IEEE
    Access, 7 (2019), pp. 11570-11590, 10.1109/ACCESS.2019.2891739 View in ScopusGoogle
    Scholar Liu et al., 2016 Liu, W., Anguelov, D., Erhan, D., Szegedy, C., Reed,
    S., Fu, C.-Y., & Berg, A.C. (2016). SSD: Single shot multibox detector. In Leibe,
    B., Matas, J., Sebe, N., Welling, M. (Eds.), Computer Vision – ECCV 2016, Lecture
    Notes in Computer Science (pp. 21–37). Cham: Springer International Publishing.
    doi:10.1007/978-3-319-46448-0_2. Google Scholar Liu et al., 2022 L. Liu, R. Wang,
    C. Xie, R. Li, F. Wang, L. Qi A global activated feature pyramid network for tiny
    pest detection in the wild Machine Vision and Applications, 33 (2022), p. 76,
    10.1007/s00138-022-01310-0 View PDFView articleGoogle Scholar Liu et al., 2023
    L. Liu, J. Liang, J. Wang, P. Hu, L. Wan, Q. Zheng An improved YOLOv5-based approach
    to soybean phenotype information perception Computers and Electrical Engineering,
    106 (2023), Article 108582, 10.1016/j.compeleceng.2023.108582 View PDFView articleView
    in ScopusGoogle Scholar Liu and Whitty, 2015 S. Liu, M. Whitty Automatic grape
    bunch detection in vineyards with an SVM classifier Journal of Applied Logic,
    13 (2015), pp. 643-653, 10.1016/j.jal.2015.06.001 View PDFView articleView in
    ScopusGoogle Scholar Lu et al., 2022 Y. Lu, D. Chen, E. Olaniyi, Y. Huang Generative
    adversarial networks (GANs) for image augmentation in agriculture: A systematic
    review Computers and Electronics in Agriculture, 200 (2022), Article 107208, 10.1016/j.compag.2022.107208
    View PDFView articleView in ScopusGoogle Scholar Lyu et al., 2022 S. Lyu, R. Li,
    Y. Zhao, Z. Li, R. Fan, S. Liu Green citrus detection and counting in orchards
    based on YOLOv5-CS and AI edge system Sensors, 22 (2022), p. 576, 10.3390/s22020576
    Google Scholar Magalhães et al., 2023 S.C. Magalhães, F.N. dos Santos, P. Machado,
    A.P. Moreira, J. Dias Benchmarking edge computing devices for grape bunches and
    trunks detection using accelerated object detection single shot multibox deep
    learning models Engineering Applications of Artificial Intelligence, 117 (2023),
    Article 105604, 10.1016/j.engappai.2022.105604 View PDFView articleView in ScopusGoogle
    Scholar Marinoudi et al., 2019 V. Marinoudi, C.G. Sørensen, S. Pearson, D. Bochtis
    Robotics and labour in agriculture. A context consideration Biosystem Engineering,
    184 (2019), pp. 111-121, 10.1016/j.biosystemseng.2019.06.013 View PDFView articleView
    in ScopusGoogle Scholar Martínez-Peña et al., 2023a R. Martínez-Peña, S. Vélez,
    R. Vacas, H. Martín, S. Álvarez Remote sensing for sustainable pistachio cultivation
    and improved quality traits evaluation through thermal and non-thermal UAV vegetation
    indices Applied Sciences, 13 (2023), p. 7716, 10.3390/app13137716 View in ScopusGoogle
    Scholar Martínez-Peña et al., 2023b R. Martínez-Peña, O. Vergara-Díaz, A. Schlereth,
    M. Höhne, R. Morcuende, M.T. Nieto-Taladriz, J.L. Araus, N. Aparicio, R. Vicente
    Analysis of durum wheat photosynthetic organs during grain filling reveals the
    ear as a water stress-tolerant organ and the peduncle as the largest pool of primary
    metabolites Planta, 257 (2023), p. 81, 10.1007/s00425-023-04115-1 View in ScopusGoogle
    Scholar Martos et al., 2021 V. Martos, A. Ahmad, P. Cartujo, J. Ordoñez Ensuring
    agricultural sustainability through remote sensing in the era of agriculture 5.0
    Applied Sciences, 11 (2021), p. 5911, 10.3390/app11135911 View in ScopusGoogle
    Scholar Matese and Di Gennaro, 2015 A. Matese, S.F. Di Gennaro Technology in precision
    viticulture: a state of the art review International Journal of Wine Research,
    69 (2015), 10.2147/IJWR.S69405 Google Scholar Matese et al., 2017 A. Matese, S.F.
    Di Gennaro, A. Berton Assessment of a canopy height model (CHM) in a vineyard
    using UAV-based multispectral imaging International Journal of Remote Sensing,
    38 (2017), pp. 2150-2160, 10.1080/01431161.2016.1226002 View in ScopusGoogle Scholar
    Matese et al., 2022 A. Matese, S.F. Di Gennaro, G. Orlandi, M. Gatti, S. Poni
    Assessing grapevine biophysical parameters from unmanned aerial vehicles hyperspectral
    imagery Frontiers in Plant Science, 13 (2022), Article 898722, 10.3389/fpls.2022.898722
    View in ScopusGoogle Scholar Mazumder et al., 2023 Mazumder, M., Banbury, C.,
    Yao, X., Karlaš, B., Rojas, W.G., Diamos, S., Diamos, G., He, L., Parrish, A.,
    Kirk, H.R., Quaye, J., Rastogi, C., Kiela, D., Jurado, D., Kanter, D., Mosquera,
    R., Ciro, J., Aroyo, L., Acun, B., Chen, L., Raje, M.S., Bartolo, M., Eyuboglu,
    S., Ghorbani, A., Goodman, E., Inel, O., Kane, T., Kirkpatrick, C.R., Kuo, T.-S.,
    Mueller, J., Thrush, T., Vanschoren, J., Warren, M., Williams, A., Yeung, S.,
    Ardalani, N., Paritosh, P., Bat-Leah, L., Zhang, C., Zou, J., Wu, C.-J., Coleman,
    C., Ng, A., Mattson, P., & Reddi, V.J., 2023. DataPerf: Benchmarks for data-centric
    ai development. 10.48550/arXiv.2207.10062. Google Scholar Mignoni et al., 2022
    M.E. Mignoni, A. Honorato, R. Kunst, R. Righi, A. Massuquetti Soybean images dataset
    for caterpillar and Diabrotica speciosa pest detection and classification Data
    in Brief, 40 (2022), Article 107756, 10.1016/j.dib.2021.107756 View PDFView articleView
    in ScopusGoogle Scholar Mishra et al., 2022 A. Mishra, S. Harnal, V. Gautam, D.R.
    Tiwari, S. Upadhyay Weed density estimation in soya bean crop using deep convolutional
    neural networks in smart agriculture Journal of Plant Diseases and Protection,
    129 (2022), 10.1007/s41348-022-00595-7 Google Scholar Misra, 2014 A.K. Misra Climate
    change and challenges of water and food security International Journal of Sustainable
    Built Environment, 3 (2014), pp. 153-165, 10.1016/j.ijsbe.2014.04.006 View PDFView
    articleView in ScopusGoogle Scholar Mochida et al., 2019 K. Mochida, S. Koda,
    K. Inoue, T. Hirayama, S. Tanaka, R. Nishii, F. Melgani Computer vision-based
    phenotyping for improvement of plant productivity: A machine learning perspective
    GigaScience, 8 (2019), p. giy153, 10.1093/gigascience/giy153 Google Scholar Moher
    et al., 2009 D. Moher, A. Liberati, J. Tetzlaff, D.G. Altman, T.P. Group Preferred
    reporting items for systematic reviews and meta-analyses: The PRISMA statement
    PLoS Medicine, 6 (2009), p. e1000097 CrossRefView in ScopusGoogle Scholar Morrone
    et al., 2022 S. Morrone, C. Dimauro, F. Gambella, M.G. Cappai Industry 4.0 and
    precision livestock farming (PLF): An up to date overview across animal productions
    Sensors, 22 (2022), p. 4319, 10.3390/s22124319 View in ScopusGoogle Scholar Mota-Delfin
    et al., 2022 C. Mota-Delfin, G.J. de López-Canteñs, I.L. López-Cruz, E. Romantchik-Kriuchkova,
    J.C. Olguín-Rojas Detection and counting of corn plants in the presence of weeds
    with convolutional neural networks Remote Sensing, 14 (2022), p. 4892, 10.3390/rs14194892
    View in ScopusGoogle Scholar Myat Noe et al., 2023 S. Myat Noe, T.T. Zin, P. Tin,
    I. Kobayashi Comparing state-of-the-art deep learning algorithms for the automated
    detection and tracking of black cattle Sensors, 23 (2023), p. 532, 10.3390/s23010532
    View in ScopusGoogle Scholar Naeem et al., 2013 Naeem, H., Ahmad, J., & Tayyab,
    M. (2013). Real-time object detection and tracking. In INMIC. Presented at the
    INMIC, Lahore, Pakistan. doi:10.1109/INMIC.2013.6731341. Google Scholar Neethirajan,
    2022 S. Neethirajan ChickTrack – A quantitative tracking tool for measuring chicken
    activity Measurement, 191 (2022), Article 110819, 10.1016/j.measurement.2022.110819
    View PDFView articleView in ScopusGoogle Scholar Neven et al., 2019 Neven, D.,
    De Brabandere, B., Proesmans, M., Van Gool, L. (2019). Instance segmentation by
    jointly optimizing spatial embeddings and clustering bandwidth. 10.48550/arXiv.1906.11109.
    Google Scholar Nguyen and Le, 2013 Nguyen, A., & Le, B. (2013). 3D Point Cloud
    Segmentation: A survey. In 6th IEEE conference on robotics, automation and mechatronics
    (RAM) (pp. 225–230). Google Scholar Nilsback and Zisserman, 2006 Nilsback, M.-E.,
    Zisserman, A., 2006. A visual vocabulary for flower classification. In 2006 IEEE
    computer society conference on computer vision and pattern recognition (CVPR’06).
    Presented at the 2006 IEEE Computer Society Conference on Computer Vision and
    Pattern Recognition (CVPR’06), New York (pp. 1447–1454). 10.1109/CVPR.2006.42.
    Google Scholar Noble, 2006 W.S. Noble What is a support vector machine? Nature
    Biotechnology, 24 (2006), pp. 1565-1567, 10.1038/nbt1206-1565 View in ScopusGoogle
    Scholar Oksanen and Visala, 2009 T. Oksanen, A. Visala Coverage path planning
    algorithms for agricultural field machines Journal of Field Robotics, 26 (2009),
    pp. 651-668, 10.1002/rob.20300 View in ScopusGoogle Scholar Oliveira et al., 2014
    Oliveira, P.M., Zannini, E., Arendt, E.K., 2014. Cereal fungal infection, mycotoxins,
    and lactic acid bacteria mediated bioprotection: From crop farming to cereal products.
    Food Microbiol., V International Symposium on Sourdough - Cereal Fermentation
    for Future Foods, Helsinki 10–12 October 2012 37, 78–95. 10.1016/j.fm.2013.06.003.
    Google Scholar Osman et al., 2021 Y. Osman, R. Dennis, K. Elgazzar Yield estimation
    and visualization solution for precision agriculture Sensors, 21 (2021), p. 6657,
    10.3390/s21196657 View in ScopusGoogle Scholar Pádua et al., 2017 L. Pádua, J.
    Vanko, J. Hruška, T. Adão, J.J. Sousa, E. Peres, R. Morais UAS, sensors, and data
    processing in agroforestry: A review towards practical applications International
    Journal of Remote Sensing, 38 (2017), pp. 2349-2391, 10.1080/01431161.2017.1297548
    View in ScopusGoogle Scholar Pal et al., 2021 S.K. Pal, A. Pramanik, J. Maiti,
    P. Mitra Deep learning in multi-object detection and tracking: State of the art
    Applied Intelligence, 51 (2021), pp. 6400-6429, 10.1007/s10489-021-02293-7 View
    in ScopusGoogle Scholar Pang et al., 2023 Pang, Z., Li, Z., & Wang, N. (2023).
    SimpleTrack: understanding and rethinking 3D multi-object tracking. In: Karlinsky,
    L., Michaeli, T., Nishino, K. (Eds.), Computer Vision – ECCV 2022 Workshops, Lecture
    Notes in Computer Science. Springer Nature Switzerland, Cham (pp. 680–696). 10.1007/978-3-031-25056-9_43.
    Google Scholar Parez et al., 2023 S. Parez, N. Dilshad, N.S. Alghamdi, T.M. Alanazi,
    J.W. Lee Visual intelligence in precision agriculture: exploring plant disease
    detection via efficient vision transformers Sensors, 23 (2023), p. 6949, 10.3390/s23156949
    View in ScopusGoogle Scholar Pavithra et al., 2023 A. Pavithra, G. Kalpana, T.
    Vigneswaran Deep learning-based automated disease detection and classification
    model for precision agriculture Soft Computing (2023), 10.1007/s00500-023-07936-0
    Google Scholar Pereira, 2017 L.S. Pereira Water, agriculture and food: Challenges
    and issues Water Resources Management, 31 (2017), pp. 2985-2999, 10.1007/s11269-017-1664-z
    View in ScopusGoogle Scholar Pezzementi et al., 2018 Z. Pezzementi, T. Tabor,
    P. Hu, J.K. Chang, D. Ramanan, C. Wellington, B.P. Wisely Babu, H. Herman Comparing
    apples and oranges: Off-road pedestrian detection on the National Robotics Engineering
    Center agricultural person-detection dataset Journal of Field Robotics, 35 (2018),
    pp. 545-563, 10.1002/rob.21760 View in ScopusGoogle Scholar Porikli, 2006 F. Porikli
    Achieving real-time object detection and tracking under extreme conditions Journal
    of Real-Time Image Processing, 1 (2006), pp. 33-40, 10.1007/s11554-006-0011-z
    View in ScopusGoogle Scholar Porikli and Yilmaz, 2012 Porikli, F., & Yilmaz, A.
    (2012). Object detection and tracking. In: Shan, C., Porikli, F., Xiang, T., Gong,
    S. (Eds.), Video analytics for business intelligence, studies in computational
    intelligence. Springer, Berlin, Heidelberg (pp. 3–41). 10.1007/978-3-642-28598-1_1.
    Google Scholar Pratama et al., 2020 M.T. Pratama, S. Kim, S. Ozawa, T. Ohkawa,
    Y. Chona, H. Tsuji, N. Murakami Deep learning-based object detection for crop
    monitoring in soybean fields 2020 International joint conference on neural networks
    (IJCNN). Presented at the 2020 international joint conference on neural networks
    (IJCNN) (2020), pp. 1-7, 10.1109/IJCNN48605.2020.9207400 View in ScopusGoogle
    Scholar Punn et al., 2021 Punn, N.S., Sonbhadra, S.K., Agarwal, S., & Rai, G.
    (2021). Monitoring COVID-19 social distancing with person detection and tracking
    via fine-tuned YOLO v3 and deepsort techniques. 10.48550/arXiv.2005.01385. Google
    Scholar Qiang and Shi, 2022 Z. Qiang, F. Shi Pest disease detection of Brassica
    chinensis in wide scenes via machine vision: Method and deployment Journal of
    Plant Diseases and Protection, 129 (2022), pp. 533-544, 10.1007/s41348-021-00562-8
    View in ScopusGoogle Scholar Qiao et al., 2020 Qiao, S., Zhu, Y., Adam, H., Yuille,
    A., Chen, L.-C., 2020. ViP-DeepLab: Learning visual perception with depth-aware
    video panoptic segmentation. 10.48550/arXiv.2012.05258. Google Scholar Qiao et
    al., 2022 Y. Qiao, J. Valente, D. Su, Z. Zhang, D. He Editorial: AI, sensors and
    robotics in plant phenotyping and precision agriculture Frontiers in Plant Science,
    13 (2022) Google Scholar Qiu et al., 2020 Z. Qiu, N. Zhao, L. Zhou, M. Wang, L.
    Yang, H. Fang, Y. He, Y. Liu Vision-based moving obstacle detection and tracking
    in paddy field using improved Yolov3 and deep SORT Sensors, 20 (2020), p. 4082,
    10.3390/s20154082 Google Scholar Rahaman et al., 2015 M.M. Rahaman, D. Chen, Z.
    Gillani, C. Klukas, M. Chen Advanced phenotyping and phenotype data analysis for
    the study of plant growth and development Frontiers in Plant Science (2015), p.
    6 Google Scholar Rahmat et al., 2018 R.F. Rahmat, D. Gunawan, S. Faza, K. Ginting,
    E.B. Nababan Early identification of leaf stain disease in sugar cane plants using
    speeded-up method robust features 2018 Third international conference on informatics
    and computing (ICIC). Presented at the 2018 third international conference on
    informatics and computing (ICIC) (2018), pp. 1-6, 10.1109/IAC.2018.8780482 Google
    Scholar Rahnemoonfar and Sheppard, 2017 M. Rahnemoonfar, C. Sheppard Deep count:
    Fruit counting based on deep simulated learning Sensors, 17 (2017), p. 905, 10.3390/s17040905
    View in ScopusGoogle Scholar Rani et al., 2022 S.V.J. Rani, P.S. Kumar, R. Priyadharsini,
    S.J. Srividya, S. Harshana Automated weed detection system in smart farming for
    developing sustainable agriculture International Journal of Environmental Science
    and Technology, 19 (2022), pp. 9083-9094, 10.1007/s13762-021-03606-6 View in ScopusGoogle
    Scholar Redmon and Farhadi, 2017 Redmon, J., & Farhadi, A., 2017. YOLO9000: Better,
    faster, stronger. In: IEEE Conference on Computer Vision and Pattern Recognition
    (CVPR) (pp. 6517–6525). Institute of Electrical and Electronics Engineers Inc.
    doi:10.1109/CVPR.2017.690. Google Scholar Redmon and Farhadi, 2018 Redmon, J.,
    Farhadi, A., 2018. YOLOv3: An Incremental Improvement. Google Scholar Redmon et
    al., 2016 Redmon, J., Divvala, S., Girshick, R., & Farhadi, A. (2016). You only
    look once: Unified, real-time object detection. In IEEE Conference on computer
    vision and pattern recognition (CVPR) (pp. 779–788). IEEE Computer Society, doi:10.1109/CVPR.2016.91.
    Google Scholar Ren et al., 2015 S. Ren, K. He, R. Girshick, J. Sun Faster R-CNN:
    Towards real-time object detection with region proposal networks IEEE Transactions
    on Pattern Analysis and Machine Intelligence, 39 (2015), pp. 1137-1149, 10.1109/TPAMI.2016.2577031
    View in ScopusGoogle Scholar Rezk et al., 2022 N.G. Rezk, A.-F. Attia, M.A. El-Rashidy,
    A. El-Sayed, E.-E.-D. Hemdan An efficient plant disease recognition system using
    hybrid convolutional neural networks (CNNs) and conditional random fields (CRFs)
    for Smart IoT applications in agriculture International Journal of Computational
    Intelligence System, 15 (2022), p. 65, 10.1007/s44196-022-00129-x View in ScopusGoogle
    Scholar Roboflow Universe, 2023 Roboflow Universe (2023). Roboflow Universe: Open
    Source Computer Vision Community [WWW Document]. Roboflow. URL https://universe.roboflow.com/
    (accessed 9.11.23). Google Scholar Rong et al., 2023 J. Rong, H. Zhou, F. Zhang,
    T. Yuan, P. Wang Tomato cluster detection and counting using improved YOLOv5 based
    on RGB-D fusion Computers and Electronics in Agriculture, 207 (2023), Article
    107741, 10.1016/j.compag.2023.107741 View PDFView articleView in ScopusGoogle
    Scholar Roy et al., 2022 A.M. Roy, R. Bose, J. Bhaduri A fast accurate fine-grain
    object detection model based on YOLOv4 deep neural network Neural Computing and
    Applications, 34 (2022), pp. 3895-3921, 10.1007/s00521-021-06651-x View in ScopusGoogle
    Scholar Sadeghi-Tehran et al., 2019 P. Sadeghi-Tehran, N. Virlet, E.M. Ampe, P.
    Reyns, M.J. Hawkesford DeepCount: In-field automatic quantification of wheat spikes
    using simple linear iterative clustering and deep convolutional neural networks
    Frontiers in Plant Science, 10 (2019) Google Scholar Sadgrove et al., 2017 E.J.
    Sadgrove, G. Falzon, D. Miron, D. Lamb Fast object detection in pastoral landscapes
    using a Colour Feature Extreme Learning Machine Computers and Electronics in Agriculture,
    139 (2017), pp. 204-212, 10.1016/j.compag.2017.05.017 View PDFView articleView
    in ScopusGoogle Scholar Sadgrove et al., 2018 E.J. Sadgrove, G. Falzon, D. Miron,
    D.W. Lamb Real-time object detection in agricultural/remote environments using
    the multiple-expert colour feature extreme learning machine (MEC-ELM) Computers
    in Industry, 98 (2018), pp. 183-191, 10.1016/j.compind.2018.03.014 View PDFView
    articleView in ScopusGoogle Scholar Sadik et al., 2022 Sadik, M.A., Moussa, S.,
    El-Sayed, A., & Fayed, Z.T. (2022). Vehicles detection and tracking in advanced
    & automated driving systems: Limitations and challenges. International Journal
    of Intelligent and Computational Information Science, 22, 54–69. doi:10.21608/ijicis.2022.117646.1158.
    Google Scholar Salim et al., 2019 S. Salim, O.O. Khalifa, F.A. Rahman, A. Lajis
    Crowd detection and tracking in surveillance video sequences 2019 IEEE International
    Conference on Smart Instrumentation, Measurement and Application (ICSIMA). Presented
    at the 2019 IEEE International Conference on Smart Instrumentation, Measurement
    and Application (ICSIMA) (2019), pp. 1-6, 10.1109/ICSIMA47653.2019.9057300 Google
    Scholar Santos et al., 2020 T. Santos, L.L. de Souza, A.A. dos Santos, S. Avila
    Grape detection, segmentation and tracking using deep neural networks and three-dimensional
    association Computers and Electronics in Agriculture, 170 (2020), Article 105247,
    10.1016/J.COMPAG.2020.105247 View PDFView articleView in ScopusGoogle Scholar
    ScienceDirect [WWW Document], 2023 ScienceDirect [WWW Document], 2023. URL https://www.sciencedirect.com/
    (accessed 5.31.23). Google Scholar Selim et al., 2019 S. Selim, N.K. Sonmez, M.
    Coslu, I. Onur Semi-automatic tree detection from images of unmanned aerial vehicle
    using object-based image analysis method Journal of the Indian Society of Remote
    Sensing, 47 (2019), pp. 193-200, 10.1007/s12524-018-0900-1 View in ScopusGoogle
    Scholar Seo et al., 2021 D. Seo, B.-H. Cho, K.-C. Kim Development of monitoring
    robot system for tomato fruits in hydroponic greenhouses Agronomy, 11 (2021),
    p. 2211, 10.3390/agronomy11112211 View in ScopusGoogle Scholar Sheema et al.,
    2021 D. Sheema, K. Ramesh, P.N. Renjith, A. Lakshna Comparative study of major
    algorithms for pest detection in maize crop 2021 International Conference on Intelligent
    Technologies (CONIT). Presented at the 2021 International Conference on Intelligent
    Technologies (CONIT) (2021), pp. 1-7, 10.1109/CONIT51480.2021.9498280 Google Scholar
    Shen et al., 2023 L. Shen, J. Su, R. He, L. Song, R. Huang, Y. Fang, Y. Song,
    B. Su Real-time tracking and counting of grape clusters in the field based on
    channel pruning with YOLOv5s Computers and Electronics in Agriculture, 206 (2023),
    Article 107662, 10.1016/j.compag.2023.107662 View PDFView articleView in ScopusGoogle
    Scholar Shorten and Khoshgoftaar, 2019 C. Shorten, T.M. Khoshgoftaar A survey
    on image data augmentation for deep learning Journal of Big Data, 6 (2019), p.
    60, 10.1186/s40537-019-0197-0 View in ScopusGoogle Scholar Sidla et al., 2006
    Sidla, O., Lypetskyy, Y., Brandle, N., & Seer, S. (2006). Pedestrian detection
    and tracking for counting applications in crowded situations. In: 2006 IEEE International
    Conference on Video and Signal Based Surveillance. Presented at the 2006 IEEE
    international conference on video and signal based surveillance (pp. 70–70). 10.1109/AVSS.2006.91.
    Google Scholar Singh, 2016 A. Singh Optimal allocation of resources for increasing
    farm revenue under hydrological uncertainty Water Resources Management, 30 (2016),
    pp. 2569-2580, 10.1007/s11269-016-1306-x View in ScopusGoogle Scholar Singh and
    Arora, 2020 Singh, A., Arora, M., 2020. CNN based detection of healthy and unhealthy
    wheat crop. In 2020 International Conference on Smart Electronics and Communication
    (ICOSEC). Presented at the 2020 International Conference on Smart Electronics
    and Communication (ICOSEC) (pp. 121–125). doi:10.1109/ICOSEC49089.2020.9215340.
    Google Scholar Siriani et al., 2022 A.L.R. Siriani, V. Kodaira, S.A. Mehdizadeh,
    I. de Alencar Nääs, D.J. de Moura, D.F. Pereira Detection and tracking of chickens
    in low-light images using YOLO network and Kalman filter Neural Computing and
    Applications, 34 (2022), pp. 21987-21997, 10.1007/s00521-022-07664-w View in ScopusGoogle
    Scholar Sishodia et al., 2020 R.P. Sishodia, R.L. Ray, S.K. Singh Applications
    of remote sensing in precision agriculture: A review Remote Sensing, 12 (2020),
    p. 3136, 10.3390/rs12193136 Google Scholar Snapp et al., 2003 S.S. Snapp, M.J.
    Blackie, C. Donovan Realigning research and extension to focus on farmers’ constraints
    and opportunities Food Policy, Special Issue on Input Use and Market Development
    in Sub-Saharan Africa, 28 (2003), pp. 349-363, 10.1016/j.foodpol.2003.08.002 View
    PDFView articleView in ScopusGoogle Scholar Solis-Sánchez et al., 2011 L.O. Solis-Sánchez,
    R. Castañeda-Miranda, J.J. García-Escalante, I. Torres-Pacheco, R.G. Guevara-González,
    C.L. Castañeda-Miranda, P.D. Alaniz-Lumbreras Scale invariant feature approach
    for insect monitoring Computers and Electronics in Agriculture, 75 (2011), pp.
    92-99, 10.1016/j.compag.2010.10.001 View PDFView articleView in ScopusGoogle Scholar
    Springer [WWW Document], 2023 Springer [WWW Document], 2023. URL https://link.springer.com/
    (accessed 5.31.23). Google Scholar Storey et al., 2022 G. Storey, Q. Meng, B.
    Li Leaf disease segmentation and detection in apple orchards for precise smart
    spraying in sustainable agriculture Sustainability, 14 (2022), p. 1458, 10.3390/su14031458
    View in ScopusGoogle Scholar Su, Kong et al., 2021 D. Su, H. Kong, Y. Qiao, S.
    Sukkarieh Data augmentation for deep learning based semantic segmentation and
    crop-weed classification in agricultural robotics Computers and Electronics in
    Agriculture, 190 (2021), Article 106418, 10.1016/j.compag.2021.106418 View PDFView
    articleView in ScopusGoogle Scholar Su, Zhang et al., 2021 W.-H. Su, J. Zhang,
    C. Yang, R. Page, T. Szinyei, C.D. Hirsch, B.J. Steffenson Automatic evaluation
    of wheat resistance to fusarium head blight using dual mask-RCNN deep learning
    frameworks in computer vision Remote Sensing, 13 (2021), p. 26, 10.3390/rs13010026
    View in ScopusGoogle Scholar Sudars et al., 2020 K. Sudars, J. Jasko, I. Namatevs,
    L. Ozola, N. Badaukis Dataset of annotated food crops and weed images for robotic
    computer vision control Data in Brief, 31 (2020), Article 105833, 10.1016/j.dib.2020.105833
    View PDFView articleView in ScopusGoogle Scholar Sun et al., 2019 S. Sun, H. Song,
    D. He, Y. Long An adaptive segmentation method combining MSRCR and mean shift
    algorithm with K-means correction of green apples in natural environment Information
    Processing in Agriculture, 6 (2019), pp. 200-215, 10.1016/j.inpa.2018.08.011 View
    PDFView articleView in ScopusGoogle Scholar Talukdar et al., 2018 Talukdar, J.,
    Gupta, S., Rajpura, P., & Hegde, R. (2018). Transfer learning for object detection
    using state-of-the-art deep neural networks. 10.1109/SPIN.2018.8474198. Google
    Scholar Tan et al., 2022 C. Tan, C. Li, D. He, H. Song Towards real-time tracking
    and counting of seedlings with a one-stage detector and optical flow Computers
    and Electronics in Agriculture, 193 (2022), Article 106683, 10.1016/j.compag.2021.106683
    View PDFView articleView in ScopusGoogle Scholar Tan et al., 2023 S. Tan, H. Lu,
    J. Yu, M. Lan, X. Hu, H. Zheng, Y. Peng, Y. Wang, Z. Li, L. Qi, X. Ma In-field
    rice panicles detection and growth stages recognition based on RiceRes2Net Computers
    and Electronics in Agriculture, 206 (2023), Article 107704, 10.1016/j.compag.2023.107704
    View PDFView articleView in ScopusGoogle Scholar Tang et al., 2014 S. Tang, M.
    Andriluka, B. Schiele Detection and tracking of occluded people International
    Journal of Computer Vision, 110 (2014), pp. 58-69, 10.1007/s11263-013-0664-6 View
    in ScopusGoogle Scholar Tetila et al., 2020 E.C. Tetila, B. Brandoli Machado,
    G.V. Menezes, N.A. de Souza Belete, G. Astolfi, H. Pistori A deep-learning approach
    for automatic counting of soybean insect pests IEEE Geoscience and Remote Sensing
    Letters, 17 (2020), pp. 1837-1841, 10.1109/LGRS.2019.2954735 View in ScopusGoogle
    Scholar Torres et al., 2019 A.M. Torres, S.A. Palacios, N. Yerkovich, J.M. Palazzini,
    P. Battilani, J.F. Leslie, A.F. Logrieco, S.N. Chulze Fusarium head blight and
    mycotoxins in wheat: prevention and control strategies across the food chain World
    Mycotoxin Journal, 12 (2019), pp. 333-355, 10.3920/WMJ2019.2438 View in ScopusGoogle
    Scholar Torres-Sánchez et al., 2021 J. Torres-Sánchez, F.J. Mesas-Carrascosa,
    L.-G. Santesteban, F.M. Jiménez-Brenes, O. Oneka, A. Villa-Llop, M. Loidi, F.
    López-Granados Grape cluster detection using UAV photogrammetric point clouds
    as a low-cost tool for yield forecasting in vineyards Sensors, 21 (2021), p. 3083,
    10.3390/s21093083 View in ScopusGoogle Scholar Torrey and Shavlik, 2010 Torrey,
    L., & Shavlik, J. (2010). Transfer learning. In Handbook of research on machine
    learning applications and trends: Algorithms, methods, and techniques (pp. 242–264).
    IGI Global. Google Scholar Tsouros et al., 2019 D.C. Tsouros, S. Bibi, P.G. Sarigiannidis
    A review on UAV-based applications for precision agriculture Information, 10 (2019),
    p. 349, 10.3390/info10110349 View in ScopusGoogle Scholar Tu et al., 2020 S. Tu,
    J. Pang, H. Liu, N. Zhuang, Y. Chen, C. Zheng, H. Wan, Y. Xue Passion fruit detection
    and counting based on multiple scale faster R-CNN using RGB-D images Precision
    Agriculture, 21 (2020), pp. 1072-1091, 10.1007/s11119-020-09709-3 View in ScopusGoogle
    Scholar Tu et al., 2022 S. Tu, Q. Zeng, Y. Liang, X. Liu, L. Huang, S. Weng, Q.
    Huang Automated behavior recognition and tracking of group-housed pigs with an
    improved DeepSORT method Agriculture, 12 (2022), p. 1907, 10.3390/agriculture12111907
    View in ScopusGoogle Scholar Tuyttens et al., 2022 F.A.M. Tuyttens, C.F.M. Molento,
    S. Benaissa Twelve threats of precision livestock farming (PLF) for animal welfare
    Frontiers in Veterinary Science (2022), p. 9 Google Scholar Tzanidakis et al.,
    2021 C. Tzanidakis, P. Simitzis, K. Arvanitis, P. Panagakis An overview of the
    current trends in precision pig farming technologies Livestock Science, 249 (2021),
    Article 104530, 10.1016/j.livsci.2021.104530 View PDFView articleView in ScopusGoogle
    Scholar United Nations Department of Economic and Social Affairs and Division,
    2022 United Nations Department of Economic and Social Affairs, Population Division,
    2022. World Population Prospects 2022: Summary of Results (No. DESA/POP/2022/TR/NO.
    3.). UN. Google Scholar United Nations, 2015 United Nations, 2015. Sustainable
    Development Goals [WWW Document]. U.N. Sustain. Dev. https://www.un.org/sustainabledevelopment/
    (accessed 9.12.23). Google Scholar van der Zande et al., 2021 van der Zande, E.
    Lisette, O. Guzhva, T.B. Rodenburg Individual detection and tracking of group
    housed pigs in their home pen using computer vision Frontiers in Animal Sciences,
    2 (2021), 10.3389/fanim.2021.669312 Google Scholar Van Horn et al., 2018 Van Horn,
    G., Mac Aodha, O., Song, Y., Cui, Y., Sun, C., Shepard, A., Adam, H., Perona,
    P., & Belongie, S. (2018). The iNaturalist Species Classification and Detection
    Dataset. 10.48550/arXiv.1707.06642. Google Scholar Vargas et al., 2017 Vargas,
    R., Mosavi, A., Ruiz, R., 2017. Deep learning: A review (Working Paper). Google
    Scholar Vasconez et al., 2020 J.P. Vasconez, J. Delpiano, S. Vougioukas, F. Auat
    Cheein Comparison of convolutional neural networks in fruit detection and counting:
    A comprehensive evaluation Computers and Electronics in Agriculture, 173 (2020),
    Article 105348, 10.1016/j.compag.2020.105348 View PDFView articleView in ScopusGoogle
    Scholar Vayssade et al., 2023 J.-A. Vayssade, X. Godard, M. Bonneau Wizard: Unsupervised
    goats tracking algorithm Computers and Electronics in Agriculture, 209 (2023),
    Article 107831, 10.1016/j.compag.2023.107831 View PDFView articleView in ScopusGoogle
    Scholar Vélez et al., 2020 S. Vélez, E. Barajas, J.A. Rubio, R. Vacas, C. Poblete-Echeverría
    Effect of missing vines on total leaf area determined by NDVI calculated from
    sentinel satellite data: Progressive vine removal experiments Applied Sciences,
    10 (2020), p. 3612, 10.3390/app10103612 View in ScopusGoogle Scholar Vélez et
    al., 2021 S. Vélez, C. Poblete-Echeverría, J.A. Rubio, R. Vacas, E. Barajas Estimation
    of Leaf Area Index in vineyards by analysing projected shadows using UAV imagery
    OENO One, 55 (2021), pp. 159-180, 10.20870/oeno-one.2021.55.4.4639 View in ScopusGoogle
    Scholar Vélez et al., 2022 S. Vélez, F. Rançon, E. Barajas, G. Brunel, J.A. Rubio,
    B. Tisseyre Potential of functional analysis applied to Sentinel-2 time-series
    to assess relevant agronomic parameters at the within-field level in viticulture
    Computers and Electronics in Agriculture, 194 (2022), Article 106726, 10.1016/j.compag.2022.106726
    View PDFView articleView in ScopusGoogle Scholar Vélez et al., 2023 S. Vélez,
    M. Ariza-Sentís, J. Valente Mapping the spatial variability of Botrytis bunch
    rot risk in vineyards using UAV multispectral imagery European Journal of Agronomy,
    142 (2023), Article 126691, 10.1016/j.eja.2022.126691 View PDFView articleView
    in ScopusGoogle Scholar Verma et al., 2021 Verma, S., Tripathi, S., Singh, A.,
    Ojha, M., Saxena, R.R., 2021. Insect detection and identification using YOLO algorithms
    on soybean crop. In TENCON 2021 - 2021 IEEE Region 10 Conference (TENCON). Presented
    at the TENCON 2021 - 2021 IEEE Region 10 Conference (TENCON) (pp. 272–277). doi:10.1109/TENCON54134.2021.9707354.
    Google Scholar Villacrés et al., 2023 J. Villacrés, M. Viscaino, J. Delpiano,
    S. Vougioukas, F. Auat Cheein Apple orchard production estimation using deep learning
    strategies: A comparison of tracking-by-detection algorithms Computers and Electronics
    in Agriculture, 204 (2023), Article 107513, 10.1016/j.compag.2022.107513 View
    PDFView articleView in ScopusGoogle Scholar Voigtlaender et al., 2019 P. Voigtlaender,
    M. Krause, A. Osep, J. Luiten, B.B.G. Sekar, A. Geiger, B. Leibe MOTS: Multi-object
    tracking and segmentation 2019 IEEE/CVF Conference on Computer Vision and Pattern
    Recognition (CVPR). Presented at the 2019 IEEE/CVF Conference on Computer Vision
    and Pattern Recognition (CVPR) (2019), pp. 7934-7943, 10.1109/CVPR.2019.00813
    View in ScopusGoogle Scholar Wael, 2020 F. Wael A comprehensive vehicle-detection-and-tracking
    technique for autonomous driving International Journal of Computational Digital
    Systems., 9 (2020), pp. 567-580, 10.12785/ijcds/090405 Google Scholar Wang et
    al., 2016 D. Wang, H. Song, Z. Tie, W. Zhang, D. He Recognition and localization
    of occluded apples using K-means clustering algorithm and convex hull theory:
    A comparison Multimedia Tools and Applications, 75 (2016), pp. 3177-3198, 10.1007/s11042-014-2429-9
    View in ScopusGoogle Scholar Wang, Cao et al., 2022 D. Wang, W. Cao, F. Zhang,
    Z. Li, S. Xu, X. Wu A review of deep learning in multiscale agricultural sensing
    Remote Sensing, 14 (2022), p. 559, 10.3390/rs14030559 View in ScopusGoogle Scholar
    Wang et al., 2000 Wang, Y., Doherty, J.F., & Van Dyck, R.E., 2000. Moving object
    tracking in video: 29th Applied Imagery Pattern Recognition Workshop, AIPR 2000.
    Proc. - 29th Appl. Imag. Pattern Recognit. Workshop 2000-January (pp. 95–101).
    10.1109/AIPRW.2000.953609. Google Scholar Wang et al., 2021 R. Wang, L. Liu, C.
    Xie, P. Yang, R. Li, M. Zhou AgriPest: A large-scale domain-specific benchmark
    dataset for practical agricultural pest detection in the wild Sensors, 21 (2021),
    p. 1601, 10.3390/s21051601 Google Scholar Wang, Li et al., 2022 R. Wang, R. Li,
    T. Chen, J. Zhang, C. Xie, K. Qiu, P. Chen, J. Du, H. Chen, F. Shao, H. Hu, H.
    Liu An automatic system for pest recognition and forecasting Pest Management Science,
    78 (2022), pp. 711-721, 10.1002/ps.6684 View in ScopusGoogle Scholar Wang et al.,
    2020 M. Wang, J. Tighe, D. Modolo Combining detection and tracking for human pose
    estimation in videos 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition
    (CVPR). Presented at the 2020 IEEE/CVF Conference on Computer Vision and Pattern
    Recognition (CVPR), IEEE (2020), pp. 11085-11093, 10.1109/CVPR42600.2020.01110
    View in ScopusGoogle Scholar Wang and Zhang, 2022 H. Wang, X. Zhang Real-time
    vehicle detection and tracking using 3D LiDAR Asian Journal of Control, 24 (2022),
    pp. 1459-1469, 10.1002/asjc.2519 View in ScopusGoogle Scholar Wang, Zhang et al.,
    2022 H. Wang, S. Zhang, S. Zhao, Q. Wang, D. Li, R. Zhao Real-time detection and
    tracking of fish abnormal behavior based on improved YOLOV5 and SiamRPN++ Computers
    and Electronics in Agriculture, 192 (2022), Article 106512, 10.1016/j.compag.2021.106512
    View PDFView articleView in ScopusGoogle Scholar Warman et al., 2021 C. Warman,
    C.M. Sullivan, J. Preece, M.E. Buchanan, Z. Vejlupkova, P. Jaiswal, J.E. Fowler
    A cost-effective maize ear phenotyping platform enables rapid categorization and
    quantification of kernels The Plant Journal, 106 (2021), pp. 566-579, 10.1111/tpj.15166
    View in ScopusGoogle Scholar Welch and Bishop, 2006 G. Welch, G. Bishop An Introduction
    to the Kalman Filter Proc Siggraph Course, 8 (2006) Google Scholar Wen et al.,
    2022 C. Wen, H. Chen, Z. Ma, T. Zhang, C. Yang, H. Su, H. Chen Pest-YOLO: A model
    for large-scale multi-class dense and tiny pest detection and counting Frontiers
    in Plant Science, 13 (2022) Google Scholar Weng et al., 2020 X. Weng, J. Wang,
    D. Held, K. Kitani 3D multi-object tracking: A baseline and new evaluation metrics
    2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS).
    Presented at the 2020 IEEE/RSJ International Conference on Intelligent Robots
    and Systems (IROS) (2020), pp. 10359-10366, 10.1109/IROS45743.2020.9341164 View
    in ScopusGoogle Scholar Wojke et al., 2017 N. Wojke, A. Bewley, D. Paulus Simple
    online and realtime tracking with a deep association metric 2017 IEEE International
    Conference on Image Processing (ICIP). Presented at the 2017 IEEE International
    Conference on Image Processing (ICIP) (2017), pp. 3645-3649, 10.1109/ICIP.2017.8296962
    View in ScopusGoogle Scholar Wosner et al., 2021 O. Wosner, G. Farjon, A. Bar-Hillel
    Object detection in agricultural contexts: A multiple resolution benchmark and
    comparison to human Computers and Electronics in Agriculture, 189 (2021), Article
    106404, 10.1016/j.compag.2021.106404 View PDFView articleView in ScopusGoogle
    Scholar Wu, 2011 Y.N. Wu Data augmentation, internal representation, and unsupervised
    learning Journal of Computational and Graphical Statistics, 20 (2011), pp. 581-583,
    10.1198/jcgs.2011.203b View in ScopusGoogle Scholar Wu et al., 2019 X. Wu, C.
    Zhan, Y.-K. Lai, M.-M. Cheng, J. Yang IP102: A large-scale benchmark dataset for
    insect pest recognition 2019 IEEE/CVF Conference on Computer Vision and Pattern
    Recognition (CVPR). Presented at the 2019 IEEE/CVF Conference on Computer Vision
    and Pattern Recognition (CVPR) (2019), pp. 8779-8788, 10.1109/CVPR.2019.00899
    View in ScopusGoogle Scholar Wutke et al., 2021 M. Wutke, F. Heinrich, P.P. Das,
    A. Lange, M. Gentz, I. Traulsen, F.K. Warns, A.O. Schmitt, M. Gültas Detecting
    animal contacts—A deep learning-based pig detection and tracking approach for
    the quantification of social contacts Sensors, 21 (2021), p. 7512, 10.3390/s21227512
    View in ScopusGoogle Scholar Xiang et al., 2023 L. Xiang, J. Gai, Y. Bao, J. Yu,
    P.S. Schnable, L. Tang Field-based robotic leaf angle detection and characterization
    of maize plants using stereo vision and deep convolutional neural networks Journal
    of Field Robotics, 40 (2023), pp. 1034-1053, 10.1002/rob.22166 View in ScopusGoogle
    Scholar Xiao et al., 2023 S. Xiao, Y. Ye, S. Fei, H. Chen, B. Zhang, Q. Li, Z.
    Cai, Y. Che, Q. Wang, A. Ghafoor, K. Bi, K. Shao, R. Wang, Y. Guo, B. Li, R. Zhang,
    Z. Chen, Y. Ma High-throughput calculation of organ-scale traits with reconstructed
    accurate 3D canopy structures using a UAV RGB camera with an advanced cross-circling
    oblique route ISPRS Journal of Photogrammetry and Remote Sensing, 201 (2023),
    pp. 104-122, 10.1016/j.isprsjprs.2023.05.016 View PDFView articleView in ScopusGoogle
    Scholar Xiong et al., 2021 Y. Xiong, Y. Ge, P.J. From An improved obstacle separation
    method using deep learning for object detection and tracking in a hybrid visual
    control loop for fruit picking in clusters Computers and Electronics in Agriculture,
    191 (2021), Article 106508, 10.1016/j.compag.2021.106508 View PDFView articleView
    in ScopusGoogle Scholar Xu, Chen et al., 2022 Y. Xu, Q. Chen, S. Kong, L. Xing,
    Q. Wang, X. Cong, Y. Zhou Real-time object detection method of melon leaf diseases
    under complex background in greenhouse Journal of Real-Time Image Processings,
    19 (2022), pp. 985-995, 10.1007/s11554-022-01239-7 View in ScopusGoogle Scholar
    Xu et al., 2020 Xu, Z., Zhang, W., Tan, X., Yang, W., Huang, H., Wen, S., Ding,
    E., Huang, L., 2020. Segment as points for efficient online multi-object tracking
    and segmentation. In: Vedaldi, A., Bischof, H., Brox, T., Frahm, J.-M. (Eds.),
    Computer Vision – ECCV 2020, Lecture Notes in Computer Science. Springer International
    Publishing, Cham (pp. 264–281). 10.1007/978-3-030-58452-8_16. Google Scholar Xu,
    Gu et al., 2022 J. Xu, B. Gu, G. Tian Review of agricultural IoT technology Artificial
    Intelligence in Agriculture, 6 (2022), pp. 10-22, 10.1016/j.aiia.2022.01.001 View
    PDFView articleView in ScopusGoogle Scholar Xu, Khan et al., 2022 G. Xu, A.S.
    Khan, A.J. Moshayedi, X. Zhang, Y. Shuxin The object detection, perspective and
    obstacles in robotic: A review: EAI endorsed trans AI Robotics, 1 (2022), pp.
    e13-e, 10.4108/airo.v1i1.2709 Google Scholar Xu and Mishra, 2022 J. Xu, P. Mishra
    Combining deep learning with chemometrics when it is really needed: A case of
    real time object detection and spectral model application for spectral image processing
    Analytica Chimica Acta, 1202 (2022), Article 339668, 10.1016/j.aca.2022.339668
    View PDFView articleView in ScopusGoogle Scholar Xu et al., 2021 B. Xu, W. Wang,
    L. Guo, G. Chen, Y. Wang, W. Zhang, Y. Li Evaluation of deep learning for automatic
    multi-view face detection in cattle Agriculture, 11 (2021), p. 1062, 10.3390/agriculture11111062
    View in ScopusGoogle Scholar Xu, Wang et al., 2022 X. Xu, L. Wang, M. Shu, X.
    Liang, A.Z. Ghafoor, Y. Liu, Y. Ma, J. Zhu Detection and counting of maize leaves
    based on two-stage deep learning with UAV-based RGB image Remote Sensing, 14 (2022),
    p. 5388, 10.3390/rs14215388 View in ScopusGoogle Scholar Yang et al., 2022 H.
    Yang, F. Chang, Y. Huang, M. Xu, Y. Zhao, L. Ma, H. Su Multi-object tracking using
    Deep SORT and modified CenterNet in cotton seedling counting Computers and Electronics
    in Agriculture, 202 (2022), Article 107339, 10.1016/j.compag.2022.107339 View
    PDFView articleView in ScopusGoogle Scholar Yang et al., 2019 L. Yang, Y. Fan,
    N. Xu Video instance segmentation Proceedings of the IEEE/CVF International Conference
    on Computer Vision (ICCV) (2019), pp. 5188-5197 Google Scholar Yang et al., 2021
    S. Yang, L. Zheng, P. He, T. Wu, S. Sun, M. Wang High-throughput soybean seeds
    phenotyping with convolutional neural networks and transfer learning Plant Methods,
    17 (2021), p. 50, 10.1186/s13007-021-00749-y Google Scholar Yao et al., 2015 L.
    Yao, G. Zhou, Z. Ni, P. Zhang, S. Zhu Matching method for fruit surface image
    based on scale invariant feature transform algorithm Transactions of the Chinese
    Society of Agricultural Engineering, 31 (2015), pp. 161-166 View in ScopusGoogle
    Scholar Yilmaz et al., 2006 A. Yilmaz, O. Javed, M. Shah Object tracking: A survey
    ACM Computing Surveys, 38 (2006), p. 13-es, 10.1145/1177352.1177355 Google Scholar
    Yousefi et al., 2022 D.B.M. Yousefi, A.S.M. Rafie, S.A.R. Al-Haddad, S. Azrad
    A systematic literature review on the use of deep learning in precision livestock
    detection and localization using unmanned aerial vehicles IEEE Access, 10 (2022),
    pp. 80071-80091, 10.1109/ACCESS.2022.3194507 View in ScopusGoogle Scholar Yun
    et al., 2021 C. Yun, H.-J. Kim, C.-W. Jeon, M. Gang, W.S. Lee, J.G. Han Stereovision-based
    ridge-furrow detection and tracking for auto-guided cultivator Computers and Electronics
    in Agriculture, 191 (2021), Article 106490, 10.1016/j.compag.2021.106490 View
    PDFView articleView in ScopusGoogle Scholar Zhang, Valente et al., 2021 C. Zhang,
    J. Valente, L. Kooistra, L. Guo, W. Wang Orchard management with small unmanned
    aerial vehicles: A survey of sensing and analysis approaches Precision Agriculture,
    22 (2021), pp. 2007-2052, 10.1007/s11119-021-09813-y View in ScopusGoogle Scholar
    Zhang, Ding et al., 2022 C. Zhang, H. Ding, Q. Shi, Y. Wang Grape cluster real-time
    detection in complex natural scenes based on YOLOv5s deep learning network Agriculture,
    12 (2022), p. 1242, 10.3390/agriculture12081242 View in ScopusGoogle Scholar Zhang,
    Huang et al., 2022 W. Zhang, H. Huang, Y. Sun, X. Wu AgriPest-YOLO: A rapid light-trap
    agricultural pest detection method based on deep learning Frontiers in Plant Science,
    13 (2022), p. 1079384, 10.3389/fpls.2022.1079384 View in ScopusGoogle Scholar
    Zhang, Kayacan et al., 2020 Z. Zhang, E. Kayacan, B. Thompson, G. Chowdhary High
    precision control and deep learning-based corn stand counting algorithms for agricultural
    robot Autonomous Robots, 44 (2020), pp. 1289-1302, 10.1007/s10514-020-09915-y
    View in ScopusGoogle Scholar Zhang, Wang et al., 2022 W. Zhang, J. Wang, Y. Liu,
    K. Chen, H. Li, Y. Duan, W. Wu, Y. Shi, W. Guo Deep-learning-based in-field citrus
    fruit detection and tracking Horticulture Research, 9 (2022), p. uhac003, 10.1093/hr/uhac003
    View in ScopusGoogle Scholar Zhang, Wu et al., 2021 K. Zhang, Q. Wu, Y. Chen Detecting
    soybean leaf disease from synthetic image using multi-feature fusion faster R-CNN
    Computers and Electronics in Agriculture, 183 (2021), Article 106064, 10.1016/j.compag.2021.106064
    View PDFView articleView in ScopusGoogle Scholar Zhang, Lu et al., 2020 Zhang,
    X., Lu, H., Hao, C., Li, J., Cheng, B., Li, Y., Rupnow, K., Xiong, J., Huang,
    T., Shi, H., Hwu, W., & Chen, D. (2020). SkyNet: A hardware-efficient method for
    object detection and tracking on embedded systems. 10.48550/arXiv.1909.09709.
    Google Scholar Zhang, Sun et al., 2022 Zhang, Y., Sun, P., Jiang, Y., Yu, D.,
    Weng, F., Yuan, Z., Luo, P., Liu, W., & Wang, X. (2022). ByteTrack: Multi-object
    tracking by associating every detection box. In Avidan, S., Brostow, G., Cissé,
    M., Farinella, G.M., Hassner, T. (Eds.), Computer Vision – ECCV 2022, Lecture
    Notes in Computer Science. Springer Nature Switzerland, Cham (pp. 1–21). 10.1007/978-3-031-20047-2_1.
    Google Scholar Zhao et al., 2020 W. Zhao, W. Yamada, T. Li, M. Digman, T. Runge
    Augmenting crop detection for precision agriculture with deep visual transfer
    learning—A case study of bale detection Remote Sensing, 13 (2020), p. 23, 10.3390/rs13010023
    View in ScopusGoogle Scholar Zheng et al., 2021 C. Zheng, A. Abd-Elrahman, V.
    Whitaker Remote sensing and machine learning in crop phenotyping and management,
    with an emphasis on applications in strawberry farming Remote Sensing, 13 (2021),
    p. 531, 10.3390/rs13030531 Google Scholar Zheng et al., 2019 Y.-Y. Zheng, J.-L.
    Kong, X.-B. Jin, X.-Y. Wang, T.-L. Su, M. Zuo CropDeep: The Crop Vision Dataset
    for Deep-Learning-Based Classification and Detection in Precision Agriculture
    Sensors, 19 (2019), p. 1058, 10.3390/s19051058 View in ScopusGoogle Scholar Zheng,
    Zhang et al., 2023 Z. Zheng, X. Zhang, L. Qin, S. Yue, P. Zeng Cows’ legs tracking
    and lameness detection in dairy cattle using video analysis and Siamese neural
    networks Computers and Electronics in Agriculture, 205 (2023), Article 107618,
    10.1016/j.compag.2023.107618 View PDFView articleView in ScopusGoogle Scholar
    Zheng, Li et al., 2023 Z. Zheng, J. Li, L. Qin YOLO-BYTE: An efficient multi-object
    tracking algorithm for automatic monitoring of dairy cows Computers and Electronics
    in Agriculture, 209 (2023), Article 107857, 10.1016/j.compag.2023.107857 View
    PDFView articleView in ScopusGoogle Scholar Zheng et al., 2022 S. Zheng, C. Zhou,
    X. Jiang, J. Huang, D. Xu Progress on infrared imaging technology in animal production:
    A review Sensors, 22 (2022), p. 705, 10.3390/s22030705 View in ScopusGoogle Scholar
    Zhou, Rui et al., 2019 Y. Zhou, T. Rui, Y. Li, X. Zuo A UAV patrol system using
    panoramic stitching and object detection Computers and Electrical Engineering,
    80 (2019), Article 106473, 10.1016/j.compeleceng.2019.106473 View PDFView articleView
    in ScopusGoogle Scholar Zhou et al., 2023 L. Zhou, Q. Xiao, M.F. Taha, C. Xu,
    C. Zhang Phenotypic analysis of diseased plant leaves using supervised and weakly
    supervised deep learning Plant Phenomics, 5 (2023), p. 0022, 10.34133/plantphenomics.0022
    View in ScopusGoogle Scholar Zhou, Zhang et al., 2019 G. Zhou, W. Zhang, A. Chen,
    M. He, X. Ma Rapid detection of rice disease based on FCM-KM and Faster R-CNN
    fusion IEEE Access, 7 (2019), pp. 143190-143206, 10.1109/ACCESS.2019.2943454 View
    in ScopusGoogle Scholar Zhu et al., 2020 F. Zhu, M. He, Z. Zheng Data augmentation
    using improved cDCGAN for plant vigor rating Computers and Electronics in Agriculture,
    175 (2020), Article 105603, 10.1016/j.compag.2020.105603 View PDFView articleView
    in ScopusGoogle Scholar Zhuang and Zhang, 2019 X. Zhuang, T. Zhang Detection of
    sick broilers by digital image processing and deep learning Biosystems Engineering,
    179 (2019), pp. 106-116, 10.1016/j.biosystemseng.2019.01.003 View PDFView articleView
    in ScopusGoogle Scholar Zou et al., 2020 H. Zou, H. Lu, Y. Li, L. Liu, Z. Cao
    Maize tassels detection: a benchmark of the state of the art Plant Methods, 16
    (2020), p. 108, 10.1186/s13007-020-00651-z View in ScopusGoogle Scholar Cited
    by (1) Field-Deployed Spectroscopy from 350 to 2500 nm: A Promising Technique
    for Early Identification of Powdery Mildew Disease (Erysiphe necator) in Vineyards
    2024, Agronomy © 2024 The Author(s). Published by Elsevier B.V. Recommended articles
    A recommendation model of rice fertilization using knowledge graph and case-based
    reasoning Computers and Electronics in Agriculture, Volume 219, 2024, Article
    108751 Weixi Ge, …, Luke Toroitich Rottok View PDF Machine learning based plot
    level rice lodging assessment using multi-spectral UAV remote sensing Computers
    and Electronics in Agriculture, Volume 219, 2024, Article 108754 Mukesh Kumar,
    …, B.K. Handique View PDF Cotton-YOLO: Improved YOLOV7 for rapid detection of
    foreign fibers in seed cotton Computers and Electronics in Agriculture, Volume
    219, 2024, Article 108752 Qingxu Li, …, Wanhuai Zhou View PDF Show 3 more articles
    Article Metrics Citations Citation Indexes: 1 Captures Readers: 15 View details
    About ScienceDirect Remote access Shopping cart Advertise Contact and support
    Terms and conditions Privacy policy Cookies are used by this site. Cookie settings
    | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier B.V.,
    its licensors, and contributors. All rights are reserved, including those for
    text and data mining, AI training, and similar technologies. For all open access
    content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Computers and Electronics in Agriculture
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Object detection and tracking in Precision Farming: a systematic review'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Snehi M.
  - Bhandari A.
  - Verma J.
  citation_count: '0'
  description: 'Introduction: The convergence of the Internet of Anything (IoX), software-defined
    communication layer, and sophisticated cloud platform has steered the dawn of
    the fourth industrial revolution era (Industry 4.0). The technological leap forward
    has given shelter to the umbrella of cyber-physical systems such as Smart Grids,
    Agriculture, and Healthcare. The exponential growth of vulnerable spots (the Internet
    of Things) in multi-layer cyber-physical systems is involuntarily contributing
    to malignant IoT-generated denial-of-service attacks. The IoT devices manifest
    a high degree of diversity in traffic patterns, and a single dataset is insufficient
    to cover fiducial attack scenarios. In addition, the research community is pressing
    to overcome other roadblocks, such as an optimal architecture for solution efficacy,
    performance issues, and the need for comprehensive validation of the proposed
    solutions. Methods: The paper offers a five-stage defense framework for building
    a mitigation against IoT-based DDoS attacks. The article brings forth an amalgamated
    dataset concocted from InSDN, BoT-IoT, and UNSW-Sydney datasets and a simulated
    dataset for IoT-DDoS to the research community. The paper employs a multi-stage
    Stack-Ensembled framework at the heart of the solution pillared on physical devices''
    behavioral attributes, resulting in a universal defense approach. The experiment
    leverages fog computing with distributed computational nodes to reduce response
    latency. Furthermore, the paper implements attack-detection-as-a-service on top
    of the Docker framework for a cost-effective, reusable, and portable framework.
    The novel design of the framework presents a light mitigation scheme to the SDN
    controller, ensuring a negligible impact on the controller''s performance. Results
    and Discussion: The hand-crafted feature selection process reduced the features
    by 80%, demonstrating a high accuracy of 99.99% with benchmark datasets, 98.84%
    accuracy in the simulation environment, and collateral damage of 1.52%. The experiment
    observes encouraging values for vital performance parameters that researchers
    often miss to discuss. Furthermore, the paper thoroughly analyzes IoT-DDoS mitigation
    framework performance parameters.'
  doi: 10.1016/j.cose.2024.103702
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Related work 3. System overview 4.
    Proposed mitigation framework 5. Experimental setup 6. Results and analysis 7.
    Discussion and future scope 8. Conclusion Declaration of Competing Interest Data
    availability References Vitae Show full outline Figures (21) Show 15 more figures
    Tables (10) Table 1 Table 2 Table 3 Table 4 Table 5 Table 6 Show all tables Computers
    & Security Volume 139, April 2024, 103702 Foggier skies, clearer clouds: A real-time
    IoT-DDoS attack mitigation framework in fog-assisted software-defined cyber-physical
    systems Author links open overlay panel Manish Snehi, Abhinav Bhandari, Jyoti
    Verma Show more Share Cite https://doi.org/10.1016/j.cose.2024.103702 Get rights
    and content Abstract Introduction The convergence of the Internet of Anything
    (IoX), software-defined communication layer, and sophisticated cloud platform
    has steered the dawn of the fourth industrial revolution era (Industry 4.0). The
    technological leap forward has given shelter to the umbrella of cyber-physical
    systems such as Smart Grids, Agriculture, and Healthcare. The exponential growth
    of vulnerable spots (the Internet of Things) in multi-layer cyber-physical systems
    is involuntarily contributing to malignant IoT-generated denial-of-service attacks.
    The IoT devices manifest a high degree of diversity in traffic patterns, and a
    single dataset is insufficient to cover fiducial attack scenarios. In addition,
    the research community is pressing to overcome other roadblocks, such as an optimal
    architecture for solution efficacy, performance issues, and the need for comprehensive
    validation of the proposed solutions. Methods The paper offers a five-stage defense
    framework for building a mitigation against IoT-based DDoS attacks. The article
    brings forth an amalgamated dataset concocted from InSDN, BoT-IoT, and UNSW-Sydney
    datasets and a simulated dataset for IoT-DDoS to the research community. The paper
    employs a multi-stage Stack-Ensembled framework at the heart of the solution pillared
    on physical devices'' behavioral attributes, resulting in a universal defense
    approach. The experiment leverages fog computing with distributed computational
    nodes to reduce response latency. Furthermore, the paper implements attack-detection-as-a-service
    on top of the Docker framework for a cost-effective, reusable, and portable framework.
    The novel design of the framework presents a light mitigation scheme to the SDN
    controller, ensuring a negligible impact on the controller''s performance. Results
    and Discussion The hand-crafted feature selection process reduced the features
    by 80%, demonstrating a high accuracy of 99.99% with benchmark datasets, 98.84%
    accuracy in the simulation environment, and collateral damage of 1.52%. The experiment
    observes encouraging values for vital performance parameters that researchers
    often miss to discuss. Furthermore, the paper thoroughly analyzes IoT-DDoS mitigation
    framework performance parameters. Previous article in issue Next article in issue
    Keywords Distributed random forestFog computingIndustry 4.0Internet of thingsIoT-DDoSSDNSmart
    healthcareStack ensembleXGBoost 1. Introduction The ubiquitous ‘Internet of Things’
    (IoT) has transformed into an envisioned communicable machine network called the
    Internet of Anything (IoX). The IoT trend report from Ericsson has predicted an
    IoT mount of up to 30.2 billion devices by 2027 at a CGPR of 13% (Ericsson, 2023).
    The meticulous fusion of the Internet of Things (IoT), cloud computing, and futuristic
    software-defined network backbone have motivated the evolution of novel cyber-physical
    systems (CPS). The advanced intelligent grids, transportation, agriculture, healthcare,
    and Industry 4.0 have brought the divergent domains together. The communication
    backbone has always been an inseparable and indispensable component of a cyber-physical
    system. The decoupling of data and control planes in the network architecture
    has opened the ports to the lattice of technologies by offering configurable,
    cost-effective, and intelligent solutions (Halpern et al., 2010). Software-defined
    networking (SDN) architecture offers novel network configurations and policy enforcement
    opportunities. The SDN has got researchers'' attention because of its flair for
    providing resilient security frameworks. The business value articulation of SDN
    and endless applications offers the configurable software-defined network a dominant
    role in building a software-defined CPS (SD-CPS) (Molina and Jacob, 2018). The
    ‘cyber-world’ acclaims another significant component in the cyber-physical system
    hierarchy (Snehi and Bhandari, 2021a). The cloud model offers on-demand computing
    services with its elastic pooled infrastructure and broad network access. The
    evolution of IoT and cloud adaption is exponential. The volumetric network traffic
    from endless IoT devices floods the cloud. It fills the cloud''s data lakes with
    redundant data involving excessive usage of computing services and defeating the
    primary responsibilities promised by the cloud (Jindal and Maini, 2014). Fog computing
    is another contemporary computing paradigm in a state-of-the-art CPS. Fog offers
    additional services to the cloud by carrying out data analytics at the edge of
    the cloud, facilitates networking and storage supports, helps in latency reduction,
    and adds a computing support dimension to the cloud network. 1.1. Cyber–physical
    systems and industry 4.0 Cyber-physical systems tightly integrate computing, networking,
    and physical processes. They often comprise sensors, actuators, and control systems
    interacting with the physical world to achieve a specific goal. Examples of cyber-physical
    systems include autonomous vehicles, industrial control systems, and smart cities.
    The hardware includes sensors, actuators, and computing devices, such as microcontrollers
    or embedded systems. The software consists of algorithms for processing data,
    making decisions, and controlling physical processes. The interconnected cyber-physical
    system concept map (as illustrated in Fig. 1) vividly portrays a seamless feedback
    loop impacting the human, environmental and economic factors. The real-time or
    offline implementation of the cyber-physical system is distributed or centralized
    with reactive or preventive actions for an event. The widespread adoption of Cyber-Physical
    Systems demands that cybersecurity become an indispensable aspect of these systems
    to ensure their resilience and compliance with privacy regulations. Effective
    cybersecurity measures protect CPS against potential cyber-attacks and safeguard
    critical data, which is at the heart of these systems. The system''s design identifies
    hazards and protects the system from physical, chemical, biological, radiological,
    or environmental hazards. Download : Download high-res image (705KB) Download
    : Download full-size image Fig. 1. Cyber-physical system - a concept map. With
    the admiration of the fourth industrial revolution (a.k.a. Industry 4.0), cyber-physical
    systems further conceptualize highly automated transformation of societal processes,
    technology, and industries into interconnected intelligent ecosystems well appropriate
    for decentralized decisions, interconnections, and information transparency (Paul
    et al., 2021). The principal ingredients of Industry 4.0 are Artificial Intelligence,
    Big-data, IoT, Software-defined Networks, and Robotics. The abstraction of Industry
    4.0 architecture has captivated analogous cyber-physical systems such as Healthcare
    under the same umbrella and deemed with the like principles (Wadhawan and Maini,
    2022). The market players such as Microsoft have adapted Healthcare 4.0 revolution
    and offered Azure-based cloud services for cost-effective quality by offering
    interoperable, virtualized, and distributed services (Microsoft, 2023). The principle
    ingredients of modern smart systems, IoT devices, have weak security implementations.
    The specific-purpose IoT devices stand highly vulnerable to attacks. The physical
    devices can be compromised easily to participate in the botnet army. An open source
    botnet (Mirai - an IoT malware) source code has revealed that the devices can
    be easily brute-forced to jailbreak into weakly secured devices and compromise
    (Snehi and Bhandari, 2021b; Verma et al., 2021; Singh et al., 2022). This research
    is motivated by IoT-DDoS attacks triggered by unsecured IoT devices, which could
    contribute to more frequent and extreme attacks in the future. 1.2. IoT-DDoS attacks
    As technological advancement speeds, so does the sophistication of cyber attacks.
    IoT-generated Distributed Denial-of-Service (DDoS) attacks have emerged as one
    of the most devastating cyber-attacks in this rapidly evolving landscape (Zarpelão
    et al., 2017). Due to weak security implementation, the omnipresent IoT devices
    are vulnerable targets for any device compromise and help participate as an attacking
    army. IoT-generated DDoS attacks (IoT-DDoS) are the most devastating attack types
    affecting system availability. IoT-DDoS, based initially on the Mirai botnet,
    has undergone multiple mutations since its inception. In its elementary form,
    IoT-DDoS has four principal constituents: Command and Control (C&C), Scanner,
    Loader, and Report Server. C&C offers the bot shepherd with a centralized administration
    interface and commands to stage the DDoS attack. The scanner disseminates with
    vulnerable IoT devices and sends the specifics of vulnerable IoT devices to the
    report server. Loader transfers the malware binary file (based on the CPU architecture
    of the target bot) to the weakly secured IoT device. The report server maintains
    the database to store the botnet devices'' specifics. Fig. 2 explains the modus
    operandi for IoT-DDoS. The attack sequence employed for IoT-DDoS is given as:
    Download : Download high-res image (182KB) Download : Download full-size image
    Fig. 2. IoT-DDoS modus operandi. (a) STEP-1: Scanner scans the network and brute-forces
    into available IoT devices. (b) STEP-2: Scanner sends the device specifics for
    successful brute-forced IoT to the report server. (c) STEP-3: Loader queries the
    reporting server for vulnerable devices. (d) STEP-4: Loader transfers the malware
    binary file per the IoT device''s CPU architecture to the victim IoT device. (e)
    STEP-5: The C&C fetches details of compromised bot''s details from the reporting
    server. (f) STEP-6: The C&C sends the ‘ATTACK_LAUNCH’ command to the botnet army.
    (g) STEP-7: Botnet army follows the attack command from C&C and sends volumetric
    traffic to the target server to overwhelm the server resources. As the IoT traffic
    is diverse and heterogeneous, traditional DDoS detection frameworks are inefficient.
    Hence, sophisticated machine and deep learning algorithms are the critical priority
    in developing intelligent and self-learning machines for zero-day attacks (Haq
    et al., 2015; Tahsien et al., 2020; Virk and Maini, 2023). Additionally, to reduce
    the cloud computing overhead due to unnecessary use of resources in redundant
    data processing, it is recommended to deploy the traffic monitoring and analytics
    systems at the fog computing layer to attain low-latent industrial CPS. 1.3. Scope
    of the paper The paper aims to develop a novel mitigation framework against real-time
    IoT-DDoS attacks in a fog-assisted software-defined cyber-physical system. The
    paper also publishes an amalgamated dataset for IoT-based DDoS attacks for the
    research community. Though the article presents the case study for Industry 4.0
    as the potential prospect for the framework implementation, the proposed framework
    may find its applicability in diverse cyber-physical systems. The prime objective
    of the article is to deliver optimized defense framework components and propose
    a light mitigation scheme without adversely affecting the performance of a software-defined
    networking controller. Moreover, the experimental study aims to bring distributed
    computing from cloud to fog computing infrastructure by horizontally scaling the
    computing nodes to offer cloud-like on-demand services. Last but not least, the
    article intends to introduce a novel IoT-DDoS-Detection-as-a-Service (IDDaaS)
    concept to lower the computing cost, scalability, portability, easy integration,
    upgrades, and a novel platform to develop proofs-of-concept for the research community.
    The paper develops a defense framework against TCP, UDP, and HTTP attacks, and
    contemporary protocols such as MQTT are out of scope. Moreover, the paper must
    validate the framework for cutting-edge deep learning-based technology and recommend
    it as a prospect. 1.4. Acronyms The description of acronyms used in the paper
    is depicted in Table 1. Table 1. Acronym. Acronym Description CPS Cyber Physical
    System DDoS Distributed Denial of Service DRF Distributed Random Forest HTTP Hyper
    Text Transfer Protocol ICMP Internet Control Message Protocol IoT Internet of
    Things IP Internet Protocol LSTM Long Short-Term Memory ML Machine Learning MQTT
    Message Queue Telemetry Protocol PCC Pearson Correlation Coefficient RNN Recurrent
    Neural Network SDN Software-defined Network SD-CPS Software-defined CPS IDDaaS
    IoT-DDoS Detection as a Service SVM Support Vector Machines TCP Transmission Control
    Protocol UDP User Datagram Protocol 1.5. Motivation CPSs are recasting how humans
    communicate and interact with intelligent systems in Industry 4.0. For example,
    Healthcare 4.0, under the umbrella of Industry 4.0, has become famous for its
    ultramodern services. The COVID-19 pandemic (Yuki et al., 2020) has pushed Remote
    Patient Monitoring (RPM) priorities ahead of traditional healthcare. The cutting-edge
    Medical Cyber-Physical Systems are committed to improving patient experience,
    reliability, and quality of patient data. The adaption rate is too high, and it
    is predicted that the healthcare market will grow from $185.3 billion in 2020
    to $528.9 in 2027, with Compound Annual Growth Rate (CAGR) of 16.2% (Research,
    2023). The major market players like IBM, Cisco, GE Healthcare, Allscripts Healthcare,
    Apple Inc, and AT&T Inc are invading the healthcare sector to transform the patient
    experience with enhanced patient engagement, improved medical care, and improved
    health data insights solutions. Additional application areas of cyber-physical
    systems such as power grids and Agriculture 4.0 (Ferrag et al., 2022) show similar
    adaptation trends and market growth rates. The research is also motivated by the
    massive growth of IoT devices, diversity, and applicability in almost every domain.
    The exponential and endless IoT applications produce volumetric network traffic.
    The network traffic from IoT devices is forecasted to grow to 79.4 ZB by 2025
    (Gartner, 2023). The volumetric network traffic containing structured and unstructured
    data offer a sea of opportunities in big data and data analytics spheres. In the
    ever-evolving world of cyber attacks, a recent report from Kaspersky lab (Q3-2022)
    (Kaspersky-Labs, 2022) has revealed that UDP flood is the go-to attack type, accounting
    for over half of all DDoS attacks at 51.84%. Not far behind, SYN flood attacks
    were the second most popular at 26.96%, with TCP floods trailing behind at 15.73%.
    Meanwhile, the lesser-known HTTP flood comprised just 3.77% of all attacks. The
    applicability of IoT devices in all spheres of life has motivated attackers to
    conceive novel attacks. Hence, the implications of IoT security infringement are
    manifold and need the immediate attention of researchers. 1.6. Research and development
    questions In this research endeavor, we undertake the pressing issue of IoT-DDoS
    attacks by proposing a comprehensive and effective mitigation solution. The authors
    have sought to address the research questions outlined below, and the ensuing
    discussion provides a detailed analysis and comprehensive response to each of
    these inquiries. (i) RQ1: How can inherent diversity, complexity, and network
    traffic behavior demonstrated by IoT devices be effectively captured and analyzed?
    Can the behavior features unique to IoT devices be leveraged to identify and mitigate
    IoT-DDoS traffic accurately? (ii) RQ2: What are the potential challenges and limitations
    of relying solely on a single dataset to address the full spectrum of IoT traffic
    diversity, and how can these challenges be overcome? (iii) RQ3: How can a combination
    of multiple stack-ensembled algorithms be effectively integrated and optimized
    to provide enhanced protection against an ever-evolving threat landscape? (iv)
    RQ4: Can the security solution be decoupled from the SDN code to offer a lightweight
    mitigation scheme that minimizes the impact of security measures on the overall
    SDN performance? This research aims to explore the feasibility of such an approach
    and provide insights into its potential benefits and limitations. (v) RQ5: What
    measures can mitigate latency concerns and ensure optimal performance of a deployed
    cyber security solution without compromising the system''s ability to detect and
    respond to potential security threats effectively? (vi) RQ6: What strategies and
    approaches can transform a tailored cyber security solution into a reusable, portable,
    and scalable architecture capable of providing effective threat detection and
    response across various network environments and infrastructures? 1.7. Paper contributions
    As the menacing shadow of IoT-DDoS attacks looms ever more extensive, the article
    publishes amalgamated and simulated datasets for IoT-DDoS attacks. The paper proposes
    a novel multi-stage attack mitigation framework against IoT-DDoS attacks. The
    research also offers a visionary Service-Oriented Architecture (SOA) for IoT-DDoS
    detection and a light yet effective mitigation scheme. The paper embarks on the
    journey to deal with the intricacies confronted by the research community and
    presents a comprehensive breakdown of our endeavors as follows: (i) Publishing
    Robust IoT-DDoS Datasets through Amalgamation and Simulation: In this rapidly
    evolving technological landscape, cyber attacks are becoming increasingly sophisticated
    and advanced, making it essential for DDoS mitigation solutions to keep pace with
    these developments. However, a significant challenge these solutions face is inadequate
    training data to handle cutting-edge network traffic. With a robust and diverse
    dataset to train on, self-learning algorithms may be able to effectively identify
    and mitigate attacks, turning networks vulnerable to resilient. In response to
    this challenge, the paper proposes a novel approach to generate a composite dataset
    from the current benchmarked dataset. By combining data from a range of attack
    scenarios, this hybrid dataset provides a strong foundation for learning techniques.
    The paper not only presents a comprehensive simulation of various attack scenarios
    using simulators and botnets based on the Mirai philosophy but pushes the envelope
    by generously publishing the resulting dataset, providing valuable resources for
    future research in the field. (ii) Low Complexity Feature List: The paper proposes
    a novel attack detection philosophy centered on the behavioral attributes of IoT
    devices. By prioritizing computationally inexpensive network flow attributes over
    expensive deep packet inspection features, the approach presents a realistic and
    efficient solution to identifying IoT-DDoS attacks, offering a cost-efficient
    alternative to more resource-intensive detection methods. The paper''s findings
    demonstrate that the device''s behavioral characteristics are a reliable and effective
    means of identifying these attacks, with encouraging experimental results that
    underline the approach''s value and efficacy. (iii) Radical IoT-DDoS Detection
    Metric: The paper introduces an efficient approach to IoT-DDoS detection, leveraging
    a multi-stage Stack-Ensemble of optimized Distributed Random Forest (DRF) and
    Extreme Gradient Boosting Trees (XGBoost) to produce novel and highly effective
    detection metrics that outperform traditional methods in both accuracy and efficiency.
    (iv) Optimized Fog Architecture: The paper unveils the untapped potential of fog-computing
    architecture by determining and addressing the research gaps in the current literature.
    It puts forth an off-the-wall proposal to offer a novel approach to incorporating
    cloud-like services for IoT-DDoS detection into the fog layer through on-demand
    elastic infrastructure implemented on top of distributed computing promises to
    transform the domain. (v) Service-Oriented Architecture (SOA) for IoT-DDoS Detection:
    The paper proposes a leading-edge IoT-DDoS detection-as-a-service (IDDaaS) that
    offers a cost-effective, extensible, and highly scalable defense solution against
    the ever-evolving landscape of heterogeneous volumetric IoT traffic. The experimental
    study deploys the IDDaaS in the fog network to reduce the response latency. However,
    cloud deployment can offer a reusable software component for research in a similar
    realm. (vi) Event Driven Light Mitigation Framework: The experiment decouples
    the IoT-DDoS mitigation algorithm from the SDN controller''s main application
    code by strategically integrating a service-oriented and event-driven architecture.
    The tight coupling of the defense logic and the controller''s code can harm the
    controller''s overall performance, particularly its ability to handle and process
    network traffic effectively and efficiently. 1.8. Paper organization The present
    manuscript is structured to facilitate a comprehensive understanding of the research
    study. Section 2 provides an extensive literature review and identifies research
    gaps, paving the way for the proposed cutting-edge solutions. Fig. 3 illustrates
    the end-to-end process for developing the defense framework with the outcome details
    at each stage. The process starts with presenting the system model and elucidating
    oT-DDoS detection philosophy in section 3. The system model highlights the improvements
    in the fog-computing layer by implementing the limitations in existing solutions.
    Section 4 covers the implementation details, including the employed datasets,
    the integration of datasets, feature engineering, and the stack-ensemble model.
    The section also describes the SDN-based light mitigation framework integrated
    with the IoT DDoS detection service. Section 5 covers the experimental details
    for the development and deployment environment. In section 6, the paper delves
    into the experimental results and offers a thorough discussion of them. The section
    7 elucidates the study''s significant contributions while delving into the prospective
    avenues for future research exploration. Finally, section 8 concludes the study
    with recommendations and outlines future research directions. Download : Download
    high-res image (406KB) Download : Download full-size image Fig. 3. Activity diagram
    for proposed work. 2. Related work With the widespread proliferation of IoT devices
    and diverse traffic patterns, sophisticated cyber attacks have become increasingly
    prevalent, underscoring the urgent need for robust and effective security solutions.
    This paper presents the comprehensive details of the latest available studies
    involving work against IoT-DDoS attacks in multiple dimensions with the intent
    to perform a polyhedral analysis. The literature explores the solutions inheriting
    the datasets used in the experimental study, i.e., BoT-IoT, In-SDN, and UNSW-Sydney
    datasets (Verma et al., 2020). However, the study is more exhaustive than the
    dataset mentioned above; other contemporary realms and the applicability of solutions
    in Fog, Cyber-Physical System environments have been investigated as follows.
    2.1. Literature inheriting BoT-IoT dataset The following cutting-edge solutions
    leveraged the BoT-IoT dataset, an innovative and comprehensive dataset delivering
    realistic network traffic generated by a wide range of IoT devices, to develop
    their DDoS defense solution. Koroniotis et al. (2019a), the BoT-IoT dataset''s
    originator, set up an IoT lab environment simulating weather station and smart
    fridge to generate legitimate and attack traffic for MQTT traffic. They tested
    the reliability of the dataset using ML (SVM, RNN, and LSTM) and statistical techniques
    (Pearson Correlation Coefficient and Entropy). The paper needs to report vital
    performance metrics other than accuracy. Nimbalkar and Kshirsagar (2021) proposed
    the feature selection technique for the NIDS system. They evaluated and validated
    the efficiency of selected features on BoT-IoT and KDDCup''99 datasets using JRipClassifier.
    They trained and tested the model using synthetic data and failed to report the
    results in the simulation environment. Shafiq et al. (2020) suggested a machine-learning-based
    bot detection framework. The authors used correlation and area-under-curve-based
    metrics to select novel traffic features leveraging the BoT-IoT dataset. They
    applied Shannon Entropy to detect IoT-generated attack traffic. The paper lacked
    reporting the vital performance metrics and validation in the simulation environment.
    Ferrag et al. (2020) created a NIDS based on decision trees leveraging BoT-IoT
    and CICIDS2017 datasets for experimentation. The study needs to include a discussion
    of vital performance metrics but accuracy. 2.2. Work leveraging InSDN dataset
    The innovative solutions discussed herein have successfully devised a potent DDoS
    defense mechanism by capitalizing on the InSDN dataset, an extensive repository
    of open-flow traffic in SDN ecosystems. With the intent to publish an SDN-based
    dataset to the research community, Elsayed et al. (2020) invested their sincere
    efforts in inventing an SDN-based attack dataset. The authors have offered a realistic,
    labeled dataset covering the attack diversity comprising 83 attributes in the
    traffic flows. They evaluated the dataset on the Mininet emulated environment.
    A variety of attack scenarios such as DDoS, Web-Attacks, Remote-to-Local (R2L),
    Malware, Probe, and User-to-Root (U2R) have been covered in the dataset. Their
    solution is tightly integrated with the SDN controller and increases the computational
    load on the controller. Hence, the solution needs to be explored in the big-data
    dimension of IoT security. Firdaus et al. (2020) proposed a stack-ensemble-based
    DDoS detection model leveraging the InSDN dataset. They executed the experiment
    in a two-stage process. Stage 1 involved clustering and classification for feature
    selection. Furthermore, stage 2 involved an ensemble for clustering and classification
    by employing KMeans++ and Random Forest classifier. But, the validation of the
    proposed work does not involve the real-time dataset. Zoppi et al. (2021) performed
    quantitative analysis on the InSDN dataset by employing unsupervised machine learning
    algorithms to identify issues and challenges in detecting zero-day attacks. They
    further described the impact of features on performance, appropriate metrics for
    security solutions evaluations, and meta-learning usage to reduce misclassification.
    Though their work is conceptual, no experimentation study has been carried out.
    2.3. Work adapting UNSW-Sydney dataset The innovative solutions discussed herein
    have effectively devised a powerful DDoS defense mechanism by expertly exploiting
    the vast UNSW-Sydney dataset as follows: In Sivanathan et al. (2017), the authors
    experimented with evaluating security threats to Smart-Home environments. In their
    empirical study, they developed test suites to investigate confidentiality, integrity,
    authorization, and availability. They installed 17 consumer IoT devices in their
    lab environment. Despite the comprehensive experimentation, the paper needs to
    discuss necessary performance metrics. Sivanathan et al. (2020) developed an SDN-based
    IoT cyber-security solution using machine learning techniques. They analyzed IoT
    traces and developed multi-stage ML architecture using flow attributes of the
    traffic. However, their work still needs the system performance evaluation against
    volumetric traffic and its impact on real-time traffic streaming. Singh et al.
    (2021) employed multi-classifier IDS leveraging the UNSW-Sydney dataset and proposed
    a fog-computing-based model with deep learning algorithms implementations. The
    paper needs a discussion of performance metrics in the results and experiment
    discussion. 2.4. Work in other similar dimensions The literature subsequently
    provides a comprehensive overview of the findings into the latest advancements
    in security solutions across various comparable domains as follows: Priyadarshini
    et al. (2020) proposed a light mitigation framework against IoT-DDoS attacks in
    Fog-computing-based Cyber-Physical Systems. They deployed the machine-learning-based
    defense solution onto the Fog-based SDN controller for latency reduction. The
    tight coupling of the deployed ML-based defense system with the SDN controller
    increases the computational load of the controller. They leveraged HPing-3 to
    generate TCP, UDP, and ICMP floods. Zhou et al. (2019) proposed a fog-based mitigation
    scheme against DDoS attacks in IIoT systems. They applied the fog concept at the
    edge of the IIoT network to reduce traffic latency and response time. They employed
    a signature-based attack detection methodology to filter the attack packets and
    validated the experimental testbed on the Industrial Control System. As IoT devices
    evolve and generate diverse network traffic, the signature-based detection approach
    may not be suitable for contemporary heterogeneous devices. Cvitić et al. (2021a)
    offered an innovative conceptual model for detecting IoT-DDoS attacks based on
    the behavioral traffic patterns manifested by IoT devices. The case study included
    the traffic classified into home monitoring, automated devices, electrical devices,
    and multimedia devices to cover a range of device behaviors. They further categorized
    the IoT traffic into Human Type Communication (HTC) and Machine Type Communication
    (MTC), forming the base of their conceptual model. The presented model is purely
    conceptual, and the authors planned the implementation. The authors extended their
    work in Cvitić et al. (2021b), experimented with 41 IoT devices, and applied logistic
    regression. However, the study needs a discussion of vital system performance
    metrics, scalability, and comprehensive validation. Özçelik et al. (2017) proposed
    an edge defense framework in reliance on an SDN controller. The mitigation framework
    against Mirai was used in the Fog environment. The article needs to include a
    discussion of the performance parameters of a defense system. Doshi et al. (2018)
    presented an ML-based method to distinguish attack traffic from legitimate traffic
    generated from intelligent consumer devices. They employed the stateful and stateless
    network features to build the ML model. They deployed several intelligent consumer
    IoT in-house to generate the IoT traces for TCP_SYN, UDP Flood, and HTTP Flood.
    The proposed solution was evaluated only against the in-house attack traffic rather
    than with the available benchmark datasets. Al-Mashadani and Ilyas (2022) proposed
    a defense framework leveraging SDN (OpenDaylight) capabilities. The Scapy tool
    was used to generate the traffic in the Mininet-based experimental study. The
    authors discussed the average detection time for the attack. The study needs to
    evaluate solutions against current datasets and include a discussion of performance
    metrics needs. In Wani and Revathi (2020), authors proposed an SDN-based security
    framework. They have used a Micro-Cluster-based Outlier (MCOD) for anomalous IoT
    behavior. They further used Multilayer perceptron to classify the DDoS attack.
    The discussion must include selecting the features best suited to the ML-based
    technique. Moreover, the experiment involved simulators, and the solution has
    not been validated using benchmark datasets for real-time traffic scenarios. Kumar
    et al. (2023) have introduced a novel approach to enhance the security and efficiency
    of IoT-enabled Smart Grid networks. It combined blockchain for secure communication,
    advanced Deep Learning for attack detection, SDN for low latency, and Digital
    Twin technology for behavior modeling. Pros include improved security and efficiency,
    while cons involve complexity, resource intensity, and potential adoption challenges
    in existing networks. Kumar et al. (2022) presented a novel framework for securing
    Software-Defined Industrial Internet of Things (SDIIoT) networks. It combined
    blockchain technology for secure data transmission and a deep learning-based flow
    analyzer to detect anomalies in network traffic. Pros include enhanced security
    and efficient traffic analysis, while potential cons involve increased complexity
    and resource requirements. Kumar et al. (2021) presented a privacy-preserving
    intrusion detection framework (P2IDF) for SDIoT-Fog networks, addressing data
    privacy and security challenges. It offered enhanced security and privacy through
    privacy-preservation techniques and intrusion detection using Artificial Neural
    Networks. Pros include improved security, privacy preservation, and high performance,
    while cons involve potential complexity and resource intensity during implementation.
    Javeed et al. (2023) introduced an innovative approach to address the challenges
    of managing the growing data traffic in IoT-enabled Consumer Electronics (CE)
    networks. It combined Software-Defined Networking (SDN) for flexible network management
    and Deep Learning (DL) using Cu-BLSTM for an effective IDS. Though it enhances
    network management and security, potential drawbacks include complexity and resource
    intensity during deployment. Table 2 presents the summary of literature work in
    the realm of IoT-DDoS attacks and the available defense and mitigation solutions
    in the similar domains. Table 2. Literature review summary. Ref Objective Method(s)
    Dataset Testbed Configuration Performance Koroniotis et al. (2019a) IoT-DDoS Detect
    ML (SVM, RNN, LSTM), Entropy In-Lab, BoT-IoT Lab Simulation Accuracy: SVM:88.3%,
    RNN: 99.7%, LSTM: 99.7% Nimbalkar and Kshirsagar (2021) NIDS JRipClassifier BoT-IoT,
    KDDCup''99 Not Available Accuracy: 99.57% Shafiq et al. (2020) IoT-DDoS Detect
    Shannon Entropy BoT-IoT Not Available Accuracy: 96%, Precision: 99.52% Ferrag
    et al. (2020) NIDS Decision Trees BoT-IoT, CICIDS2017 Not Available Accuracy:
    96.99% Elsayed et al. (2020) SDN IDS ML InSDN SDN Mininet Lab Accuracy: 99.7%,
    Precision: 99.72%, Recall: 99.76% Firdaus et al. (2020) DDoS Detect Ensemble InSDN
    Not Available Accuracy: 100% Zoppi et al. (2021) Zero-Day Detect Unsupervised
    ML InSDN Not Available Not Available Sivanathan et al. (2017) Ensure CIA ML UNSW-Sydney
    Smart Home Not Available Sivanathan et al. (2020) IoT Security Multi-stage ML
    UNSW-Sydney In-Lab Consumer IoT Accuracy: 98.7%, Precision: 99.7%, Recall: 98%
    Singh et al. (2021) IDS Multi-stage classifier UNSW-Sydney Not Available Not Available
    Priyadarshini et al. (2020) IoT-DDoS detect ML Not Available Simulation with Fog,
    SDN Accuracy: 82.81%, Precision: 82.83%, Recall: 83.13% Zhou et al. (2019) IoT-DDoS
    detect ML Not Available Simulation with Fog, SDN Accuracy: TC: 99.84%, Modbus:
    88.02% Cvitić et al. (2021a) IoT-DDoS Logistic Regression Not Available Simulation
    Accuracy: 99.79%, Precision: 99.7%, F1-score: 99.7% Özçelik et al. (2017) Security
    Framework ML Not Available Fog-based simulation Not Available Doshi et al. (2018)
    IoT-DDoS Defense ML Not Available Consumer IoT Accuracy: 99% Al-Mashadani and
    Ilyas (2022) Security Framework – Not Available Mininet Not Available Wani and
    Revathi (2020) Security Framework Micro-cluster based Outlier (MCOD) Not Available
    Lab simulation Accuracy: 95.9% Precision: 98.7%, Recall: 96.4% Kumar et al. (2023)
    Security Framework SA-BiGRU N-BaIoT Lab simulation Accuracy: 99.73% Kumar et al.
    (2022) Security Framework Blockchain and Deep Learning Not Available Lab simulation
    Not Available Kumar et al. (2021) Security Framework ANN ToN-IoT Lab simulation
    Accuracy: 99.44% F1-score: 98.61% Javeed et al. (2023) IDS DL (Cu-BLSTM) Accuracy:
    99.57% Proposed Work Security Framework Stack-Ensemble BoT-IoT, In-SDN, UNSW-Sydney,
    ADS SDN, Fog, Lab simulation Accuracy: 99.9% Precision: 99.9%, Recall: 99.9% F1-score:
    99.9% 2.5. Research gaps The literature review on DDoS detection and mitigation
    frameworks has uncovered valuable knowledge and visions for the course ahead.
    However, the survey has also highlighted several critical gaps in research, providing
    an excellent opportunity for future scholarly inquiry. Therefore, the critical
    dimensions surfaced during the extensive incursion into the literature, meticulously
    put together for the perusal as follows: (i) High Latency: A Data Transmission
    Bottleneck: A conspicuous concern from the literature landscape is the detrimental
    impact of high latency during data transmission to the cloud, highlighting a critical
    research gap that demands immediate attention. Only a few researchers have ventured
    beyond the surface-level exploration of fog computing to unravel the intricacies
    of execution performance and latency evaluation in data transmission (Priyadarshini
    et al., 2020; Zhou et al., 2019; Özçelik et al., 2017). (ii) Unsustainable Infrastructure:
    There needs to be more discussion on infrastructure cost optimization through
    low-cost design implementations. The high cost of implementation dominates the
    adoption of cutting-edge mitigation frameworks. The existing solutions must address
    an effective, low-cost solution for handling the massive data volumes of IoT devices.
    (iii) Legacy Upgrade Models: The cutting-edge solutions have a tight coupling
    of ML-based implementation and SDN code, making the attack detection algorithm
    upgrades a nightmare. There has yet to be a discussion on decoupling security
    core logic from the SDN controller. We have presented a conceptual model leveraging
    the network-function-virtualization (NFV) based security framework in our previous
    work (Snehi and Bhandari, 2021c). (iv) Not Suitable for Diverse IoT Data: The
    literature evidence that most researchers have focused on traditional methods
    of DDoS attacks. Moreover, machine and deep learning approaches also concentrate
    on deep packet inspection and specific network traffic features. The proposed
    solutions need more generalized attributes of the ingress network traffic flow
    that broadly apply to the diverse network traffic from IoT devices. (v) Limited
    Validation Scope: The proposed solutions, as discussed, have been tested only
    against a narrow range of scenarios, including a simulated lab setup or a single
    benchmark dataset. A more comprehensive validation strategy is necessary to address
    the challenges posed by the diverse and complex data generated by IoT devices.
    The is a need to reevaluate and optimize the approach to ensure its efficacy in
    handling a range of scenarios and heterogeneous data types. Therefore, a broader
    validation scope is critical for the success of any proposed solution in the rapidly
    evolving IoT landscape. 3. System overview A coherent and precise illustration
    of the Cyber-Physical System must account for the key components that make up
    its architecture, including IoT devices situated at the perception layer, connecting
    communication paths, computational nodes within the fog layer, an SDN controller,
    and cloud servers. The following section models the cyber-physical system mathematically
    and illustrates the necessary conditions for an IoT-DDoS attack to hold. The system
    description provides a comprehensive overview of the proposed model''s innovative
    fog computing implementation, representing a significant advancement over current
    solutions outlined in the existing literature. The detailed exposition of system
    components also encompasses an in-depth analysis of the attack detection philosophy
    reinforcing the proposed system and the attack detection metrics derived from
    the sophisticated algorithms at its core. The mathematical system model, including
    the core components of underlying cyber-physical system is represented as follows.
    3.1. Mathematical system model The cyber-physical system under test comprises
    multi-layered sub-systems, including the perception layer, fog-computing layer,
    and cloud layer. The bottommost perception layer is well connected to the cloud
    through a fog computing layer with a software-defined communication backbone (as
    shown in Fig. 4). Download : Download high-res image (217KB) Download : Download
    full-size image Fig. 4. System mathematical model. (For interpretation of the
    colors in the figure(s), the reader is referred to the web version of this article.)
    The definitions of primary components of the well-connected smart ecosystem, necessary
    conditions for IoT-DDoS attacks, and assumptions are as follows. 3.1.1. The perception
    layer At the heart of the cutting-edge Cyber-Physical System lies the perception
    layer, which comprises a vast and interconnected collection of physical and IoT
    devices, all working together to gather, process, and analyze real-time data to
    provide valuable insights and facilitate seamless communication and interaction
    between machines and humans alike. The legitimate systems at perception layer
    are defined as: where, IT defines the source nodes, physical systems, or IoT devices.
    Unfortunately, the perception layer is not immune to security threats. It is often
    vulnerable to compromise by malicious actors seeking to gain control of a network
    of compromised IoT devices, also known as a botnet. The attackers leverage the
    Botnet to launch devastating attacks on targeted servers, with potentially catastrophic
    consequences. The Botnet is defined as: where, B is the set of compromised IoT
    devices as botnet. 3.1.2. The fog computing layer The fog computing layer (software-defined
    fog in the scope of current work) offers a sophisticated and powerful framework
    designed to provide cloud-like services at the edge of the cloud. It also intercepts
    cloud traffic to perform traffic/data analytics and security functions. The fog
    is comprised of a wide range of infrastructure components, including computing
    nodes, servers, open-flow switches, links, and an array of SDN controllers. Fog
    systems are mathematically represented as: • The overall networked fog system
    is defined by the set where, is the set of fog system nodes. The fog system nodes
    include traffic monitoring systems and a server offering IoT-DDoS-Detection-as-a-Service
    (IDDaaS). • is the set of OpenFlow switches deployed at the fog network. • are
    the links connecting perception layer IoT devices to the fog system, defining
    the connectivity between fog components and fog-to-cloud connectivity. • defines
    fog-based SDN controllers. 3.1.3. The cloud layer The cloud layer lies at the
    heart of the cyber-physical system, a critical component that provides end users
    access to vital data storage and a wide range of services. The cloud system is
    defined by: defines target cloud servers. 3.1.4. Nexus lane The nexus lane or
    the path ‘P’ between source and destination is defined by: from source to destination.
    3.1.5. Necessary conditions for attack The section defines the necessary conditions
    for an IoT-based DDoS attacks as: (a) Condition 1: A direct or indirect path exists
    between botnet network and target server. (b) Condition 2: If ‘z’ is minimum bots
    required to generate IoT-DDoS, then number of bots deployed ‘n’ >= ‘z’. 3.1.6.
    Assumptions The model assumes that following conditions must evaluate to true
    for the cyber-physical system under study: (a) Assumption 1: There is secure communication
    channel C between fog and cloud. (b) Assumption 2: Training and validation of
    machine-learning model is done at regular intervals. Like a constellation in the
    night sky, the Fig. 4 elegantly displays the interconnected naming of components
    within the mathematical model for understanding and discovery. For example, one
    of the Nexus Lanes (P) follows the green links from the perception layer component
    IT1 to the cloud server (T1). The illustration defines the path P in EQ. (1) as:
    (1) 3.2. Reformed fog computing layer The proposed mitigation framework offers
    reformed fog computing over existing fog-based solutions in multiple dimensions.
    The software architecture design puts the distributed computing forward. It offers
    an elastic approach towards computing infrastructure by horizontally scaling the
    computing nodes (Patel et al., 2019). Furthermore, the deployment architecture
    of the intelligent stacked-ensembled meta-algorithm-based analytics in the IDDaaS
    interface offers the opportunity to extend the design into a reusable service
    for the research community. The comprehensive details of the improvement in the
    fog layer are as follows. 3.2.1. Distributed computational nodes The IoT traffic
    is enormous; the deployment pipeline requires high-end computing resources deployed
    at the detection framework. However, acquiring high-end computing resources is
    expensive. The work proposed in the present article''s scope leverages the concept
    of the computational load distribution from underlying machine-learning algorithms
    to worker nodes. Distributed computing avoids any significant computational and
    memory overhead at a single node (Nguyen et al., 2019; Achbarou et al., 2018;
    Al-Jarrah et al., 2014). In an attempt to establish a mathematical model that
    no losses are observed while distributing the computational load, Behal et al.
    (2021) proved that sum of computational metrics calculated at multiple Points-of-Presence
    (PoP) (where i = 1 to n) from source to destination is equal to the computational
    metric calculated at the destination Point-of-Presence . Hence, distributing the
    computational load influences memory and computing constraint devices positively.
    The authors have used the information theory metric ϕ-Divergence involving the
    probability distribution to calculate the entropy index parameter. The model in
    Fig. 5 shows that individual nodes Pi calculate the divergence metric from the
    packets, ( ), originating from source node ‘S’. Download : Download high-res image
    (221KB) Download : Download full-size image Fig. 5. Divergence calculations at
    individual point-of-presence and destination point of presence. The sum of divergence
    metric from the individual nodes is equal to divergence metric calculated at the
    destination node provided . The model is proven mathematically in EQ. (2) as:
    (2) Furthermore, advanced big data tools such as Spark and H2O.ai distribute the
    computational load to worker nodes in a machine-learning pipeline for efficient
    and real-time processing of volumetric ingress data. 3.2.2. Elastic computing
    infrastructure Exponentially increasing demands for Smart-Systems pose an essential
    responsibility for the underlying infrastructure to be resilient, fault-tolerant,
    and able to handle volumetric traffic with zero (or near to zero) latency (Venters
    and Whitley, 2012; Gama et al., 2019; Salman et al., 2018). The cloud servers
    can scale hardware vertically for high-end computations and horizontally for load
    balancing volumetric traffic analysis (Abbasi et al., 2021; Muñoz et al., 2018).
    The proposed fog-computing defense framework architecture is designed for horizontal
    scaling to distribute the computational load. Horizontal scaling is easy and more
    efficient than vertical scaling, has zero (or near to zero) downtime, is resilient,
    fault-tolerant, and has improved performance. Thus, it can provide on-demand computing
    (Buch, 2018) with reduced latency compared to the cloud layer offers. 3.2.3. SOA
    for attack detection at fog layer The proposed defense framework offers a cost-effective
    solution with an IoT-DDoS-Detection-as-a-Service (IDDaaS) interface against IoT-DDoS
    attacks. It delivers better time management and high compatibility solutions to
    the end-user. The software solution offers less responsibility toward infrastructure
    management and increased vendor responsibility. The vendor is responsible for
    training the model regularly; the service provides resiliency against zero-day
    attacks with an abstraction to the underlying model. The availability of IDDaaS
    as a web service and easy accessibility through HTTP protocol sets the stage for
    the service to be deployed at either fog level in production deployments to address
    latency issues or the cloud layer for the research community for further exploration
    and research. The versatility of the DDoS attack detection service, shown in Fig.
    6, is demonstrated by its ability to be consumed by SDN controllers at enterprise
    network entry points, integrated with NIDS systems, repurposed for research labs,
    deployed as honeypots, and utilized by educational institutes for training and
    research purposes. Download : Download high-res image (260KB) Download : Download
    full-size image Fig. 6. IDDaaS with application subsets of potential domains.
    3.2.4. SDN-based light-weight mitigation framework In contrast to contemporary
    solutions, the proposed framework offers a light mitigation scheme for Software-defined
    Cyber-Physical Systems. The tight coupling of mitigation schemes into SDN directly
    impacts SDN performance. The evolving machine and deep learning models are computationally
    expensive, requiring a dedicated high-end hardware setup for analytics. Tight
    coupling of the mitigation scheme into SDN controller exploits controller computing
    capability. Hence, in contrast to available solutions, the proposed mitigation
    scheme queries a database that stores the blocked IP addresses and determines
    if the traffic from the ingress IP address should be allowed or deferred. The
    parallel thread on a dedicated traffic monitoring machine is responsible for capturing
    the incoming network traffic, translating the packet capture files into meaningful
    feature files, querying the IDDaaS modules for suspicious IP addresses, and updating
    the database with the blocked IP address. The architecture helps SDN accomplish
    the intended functionality with the light mitigation scheme without impacting
    the controller performance. 3.3. IoT-DDoS detection philosophy The heart of the
    IoT-DDoS detection philosophy lies in the authors'' previous work on IoT device
    classification based on the behavioral attributes of IoT devices (Snehi and Bhandari,
    2022). The IoT devices are low computational powered, special-purpose devices
    meant to transfer the specific data to the server at regular intervals. Hence,
    the experiment leverages the behavioral aspects of IoT devices to identify legitimate
    and attack traffic. The IoT device classification philosophy presented in earlier
    work holds for classifying the IoT-DDoS attack. The algorithm based on behavioral
    technique is computationally fast as it does not require scanning the payload
    (Snehi and Bhandari, 2021d). The derived model adds a few more features to the
    feature list and introduces some features that contribute to the behavioral aspects
    of the network traffic. The comprehensive details of the feature list are discussed
    later in the section 4. The details of the core behavioral features for the IoT-DDoS
    detection philosophy are as follows. 3.3.1. Data exchange features As the IoT
    devices are special-purpose low computational devices deployed to transfer specific
    physical entities and attributes to the server, the cyber-physical system controls
    the data being transmitted. Behaviorally, the dedicated device transfers small
    chunks of data in a short burst to the server. However, the distributed denial
    of service attack traffic constantly transfers the high volume network traffic
    to the server to overwhelm the server resources. Therefore, flow volume per-flow
    level and average flow rate for an IoT device that identifies the IoT traffic
    behavior are defined as: (3) (4) In EQ. (3), represents sum of bidirectional bytes
    transfer during a flow. Similarly, EQ. (4) depicts average flow volume per unit
    time. The experimental study has evaluated TCP_SYN, UDP flood, and HTTP_Flood
    attacks. Fig. 7 (a) draws the number of data packets exchanged during the legitimate
    flow and the comparative plots for TCP, UDP, and HTTP flooding. Fig. 7 (b) plots
    the flow volume for the similar trend. The plots infer that internet-enabled embedded
    machines exchange an average of 2 packets per flow ranging from 2-4 packets for
    more than 90% of the flow entries. However, TCP flood has an exchange rate of
    4 packets per flow. On a similar trend, 7-12 UDP packet exchanges and 16-25 packet
    exchanges are recorded per-flow entries. Similarly, an average flow volume of
    2500 bytes per flow, 1500 bytes per flow, and 3500 bytes per flow is observed
    for legitimate, TCP flood, and UDP flood. Therefore, the plots illustrate a precise
    distinction between legitimate traffic and the attack traffic. A similar trend
    is observed for flow rate. Fig. 7 (c)-(d) illustrates that legitimate traffic
    has a comparatively low flow rate than HTTP flood. In contrast, HTTP and UDP floods
    have a higher flow rate than legitimate traffic. Download : Download high-res
    image (890KB) Download : Download full-size image Fig. 7. Data exchange attributes
    illustration (a) Total packets exchanged per flow (b) Flow volume (Bytes) per
    flow (c) Flow rate: Legitimate vs HTTP flood (d) Flow rate: Legitimate vs TCP
    flood. 3.3.2. Device activity attributes The IoT devices transfer the data in
    small bursts with the specified time interval between each burst. The IoT devices
    close sockets with the server during the packet inter-arrival time (a.k.a. idle
    time). IoT devices'' idle time patterns and small packet sizes help distinguish
    between legitimate and attack traffic. Hence, idle time and flow duration are
    critical parameters for flow classification. Flow duration for ith flow is the
    time duration for which the flow was active. Mathematically, flow duration is
    described as (in EQ. (5)): (5) Similarly, device idle time for ith flow is time
    difference between start of flow and the current flow (ith flow) and is defined
    as in EQ. (6). (6) Fig. 8 (a) shows that IoT devices observe an averagely small
    flow duration of 300 ms ranging from 45-600 ms. The plot infers that the average
    flow duration for more than 80% of traffic is 250 ms. However, the attack traffic
    maintains a significantly high flow duration because it tries to keep the connection
    alive for a longer duration and floods the channel with the attack packets. Fig.
    8 (b) shows that the TCP and UDP flood traffic has a significantly higher flow
    duration. HTTP flood has a significantly low flow duration due to Slowloris HTTP
    attacks, where attackers send a high volume of tiny packets to overwhelm the server
    resources. Download : Download high-res image (943KB) Download : Download full-size
    image Fig. 8. Device activity pattern attributes illustration (a) Flow duration:
    Legitimate traffic vs TCP flood vs UDP flood (b) Flow duration: Legitimate vs
    HTTP flood (c) Idle time: Legitimate flow (d) Idle time: TCP flood vs UDP flood
    vs HTTP flood. On a similar trend, the device IdleTime possesses a uniquely identifiable
    behavior for legitimate and DDoS traffic. Fig. 8 (c) shows that the internet-enabled
    embedded devices observe a predefined idle time pattern between flows. The TCP,
    UDP, and HTTP flood traffic (Fig. 8 (d)) keep the connection alive with the packet
    floods for longer. 3.3.3. Rationale of IoT-DDoS detection philosophy The rationale
    compiled from the illustrated graphs ((Fig. 8 (a)-(d))) indicates the specialized
    and distinctive behavioral patterns exhibited by IoT devices. The behavioral attributes
    unique to IoT devices provide valuable insights into IoT design philosophy and
    are rooted in their data exchange and device activity patterns. The characteristics
    of the network traffic originating from IoT devices are as follows: (i) The IoT
    devices are low computational powered, specific-purpose devices meant to transfer
    the specific data to the server at regular intervals. The specific-purpose devices
    have significantly less flow duration (Zhou et al., 2019; Ullah et al., 2009;
    Hanif et al., 2019). (ii) The IoT devices stay in idle disconnected state while
    not communicating to the server. Hence, IoT devices observe the sleep time (idle
    time) between flows (Sivanathan et al., 2020). (iii) Machine-2-Machine (M2M) traffic
    assumes one of the three states: Periodic traffic exchange, traffic generated
    due to trigger of some event, or payload exchange (Finley et al., 2020; Jara et
    al., 2014). (iv) The IoT devices, being specific purpose device, transfer only
    limited data to the server in each of the network flow. Hence, low flow volume
    is observed for IoT devices. (v) Low flow volume infers to low average flow rate
    i.e., data transfer per unit of time. (vi) Each class of IoT device exists for
    a specific purpose. Hence, each of the device observe different data transfer
    patterns. Therefore, every IoT class has a specific pattern and value for the
    device''s behavioral attributes. So, the devices can also be classified and distinguished
    from each other based on device behavioral patterns. The behavioral class paves
    the foundation for the IoT-DDoS defense framework. The perceptive philosophy of
    IoT detection asserts that through the meticulous analysis of behavioral attributes
    within network traffic, including data transfer volume, frequency, and sleep time
    patterns, distinct patterns can be deduced, thereby enabling swift and precise
    differentiation between legitimate IoT traffic and nefarious attack traffic. 3.4.
    IoT-DDoS detection metric The proposed metric for IoT-DDoS detection utilizes
    a stack-ensemble algorithm built on top of XGBoost and Distributed Random Forest
    (DRF) algorithms. The two algorithms prove sequent intended to derive a meta-learning
    stack-ensembled algorithm. The proposed work presents the novelty of the machine-learning-based
    algorithm in selecting the best-performing base algorithms with tuned hyper-parameters.
    The illustration of the details of the individual participating base algorithm
    and meta-learning algorithms are as follows. 3.4.1. Distributed random forests
    and extreme gradient boosting The heart of IoT-DDoS detection meta-learning model
    lies in Distributed Random Forest (DRF) (Hoon et al., 2018) and Extreme Gradient
    Boosting (XGBoost) (Zhang et al., 2018) that are founded on decision trees. The
    Stack-Ensemble trains multiple unique classifier ensembles in a parallel fashion.
    The homogeneous ensembles are highly recommended for building a solid stack ensemble
    for ease of fusion (Tama et al., 2020). The experimentation uses the H2O.ai library
    to construct a stack-ensembled classifier that recommends using XGBoost, DRF,
    GBM, and GLM (the homogeneous classifiers built on top of Decision Trees) for
    a robust classification model. Several researchers have employed multiple classification
    algorithms for Network Intrusion Detection Systems and advocated the mentioned
    classifiers (DRF and XGBoost) for their best performance and classification results
    (Gouveia and Correia, 2020; Alzahrani and Alenazi, 2021; Chen et al., 2023). Another
    compelling motivation to use the XGBoost is the ability for distributed computing
    and parallelization for real-time prediction systems (Anande and Leeson, 2023).
    Furthermore, the model employs a more regularized model, thus providing better
    performance and reducing the model complexity to avoid overfitting (Sathiyapriya
    et al., 2023). Similarly, the DRF is advocated for its ability to reduce the correlation
    between trees by randomly selecting the features (Kwon and Lim, 2023). Hence,
    it improves the prediction power and results in higher efficiency. Another advantage
    of DRF is being good at handling high dimensional data because it can handle missing
    data, continuous, categorical, and binary data (Tama et al., 2020; Kwon and Lim,
    2023). The Stage-1 (Meta model) type is the Generalized Linear Model (GLM). The
    model has more than two classes (device type) as outcome responses. The GLM classifier
    is recommended as the best fit for the given stacking of base classifiers (XGBoost,
    DRF, GBM) by the H2O.ai library because of its less susceptibility to overfitting
    (Tama et al., 2020; Chen et al., 2023). Moreover, the model is easy to interpret
    and clearly understands how each base learner influences the outcome. The machine
    learning pipeline avoids errors/bias propagation to the next level by selecting
    strong learners as base classifiers. Hence, strong learners at the base are utilized
    to model a robust classifier at the meta-model stage. The internal nodes of the
    tree represent a test on the data characteristics (attribute), branch depicts
    the outcome from the test, and leaf holds the classification result. The choice
    for the algorithms is made on the fact that the network flows from the available
    datasets are in form of structured tabular data, hence decision trees algorithms
    are best-in-class. A Distributed Random Forest (DRF) works on the principle of
    Decision Trees operating as an ensemble. Each tree in the forest predicts the
    classification outcomes, and the class with the most votes becomes the prediction
    outcome of the model. Mathematically, if is prediction class of nth tree in random
    forest, then final prediction class of the random forest is defined in EQ. (7)
    as: (7) Random forests compute the feature importance as a factor of reduction
    in node impurity weighted by the likelihood of reaching that specific node. The
    probability of reaching the node ‘n’ is defined by EQ. (8) as: (8) The nodes in
    the classification forest are defined by Gini index as (EQ. (9)): (9) Here, is
    the relative frequency of a class under observation and ‘n’ are the total number
    of classes. The low correlation of individual trees protects each other from individual
    errors. Moreover, the model relies on critical features that make it perform better
    than random guessing. DRF takes advantage of the fact that decision trees are
    sensitive to training data, and a slight change in training data may alter the
    complete decision tree structure. Hence, DRF leverages bagging to generate a forest
    of unique decision trees. Furthermore, DRF builds the decision trees with a random
    subset of features to force more variations amongst trees resulting in a low correlation
    between trees, hence, the tree diversification. The core of XGBoost is the Decision
    Trees Ensembles (DTE) (Sangkatsanee et al., 2011; Rai et al., 2016). DTEs are
    based on the CART structures (Classification & Regression Trees) (Chkirbene et
    al., 2020; Douiba et al., 2023) that are the tree structures involving decisions
    at each level of the tree. The lineage of XGBoost can be attributed to its genesis
    in Decision Trees (DT). The advent of the problem-to-solution mapping technique
    was first marked by the introduction of Decision Trees, which relied on graphical
    representations to depict the mapping process visually. The series of advancements
    continued with Bagging techniques after Decision Trees, which employed a collective
    ensemble approach based on voting to combine predictions from many decision trees.
    After Bagging, the development of Random Forest marked the next stage in the progression,
    utilizing a feature subsampling mechanism to select random subsets of attributes
    and then rebuilding the forest model. The subsequent step in the process involved
    iterative reconstruction of the model to reduce inaccuracies, incorporating feedback
    from the previous model to enhance its performance. This process is commonly referred
    to as Boosting. Gradient Boosting, as an extension of the Boosted Model, entails
    the combination of multiple weak learners to construct a robust predictive model.
    Hardware and software optimization culminates in the development of Extreme Gradient
    Boosting, which characterizes boosted machines operating at an unparalleled efficiency,
    analogous to algorithms running on steroids (Gupta and Singh, 2023). 3.4.2. Stack-ensembled-meta-learning
    model The construction of a Stack-Ensemble Model can be represented as a two-stage
    process, as depicted in Fig. 9. In Stage-0, the base models (XGBoost and DRF)
    are trained to create a prediction dataset. The prediction dataset generated in
    Stage-0 is then utilized in Stage-1 to train the meta-model (Generalized Linear
    Model (GLM)). The trained model is subsequently employed for generating final
    predictions. In this work, the meta-model is trained on multiple variants of XGBoost
    and DRF by modifying various hyperparameters. The process of integrating and training
    these models is elucidated as follows: (i) Staging Stacked-Ensemble: The training
    dataset at level-0 (L0) is presented in form of a matrix ‘D’ with ‘M’ flows, each
    flow with ‘N’ features in ‘N’ columns and another matrix depicts the ‘M’ classification
    labels corresponding flows. (10) The base-learner set B is identified by another
    set of categorized base-learner sets as: where, . Here, the training process applies
    pre-specified configuration (hyperparameters) for XGBoost algorithm. Similarly,
    . The model illustrates the meta-model as . The meta-learning classifier combines
    the predictions for the base-learners. (ii) Training the Model: The development
    environment setup splits the IoT-DDoS dataset into training, test, and validation
    sets. The experiment trains each base learner on the training set. Thenceforth,
    the test and validation process performs k-fold cross-validation and gathers the
    model predictions in for each base learner. The authors have chosen stratified
    cross-validation for improved performance of the model. The ‘M’ predictions from
    each of the base learners are blended to form EQ. (11). The ML pipeline further
    trains the meta-model on combiner predictions resulting in prediction vector from
    meta-model. The model is then exported to the meta-model in binary file format
    for deployment as IoT-DDoS-Detection-as-a-Service. (11) (iii) Testing model on
    validation set: The meta-model is tested on the validation set and then deployed
    to production pipeline. Download : Download high-res image (342KB) Download :
    Download full-size image Fig. 9. Stack-ensemble model derived from XGBoost and
    distributed random forest base learners. 3.4.3. Time and space complexity of base
    models Time complexity (often expressed in Big ‘O’ notation) refers to the time
    an algorithm takes to complete its execution as a function of the input size.
    It provides an upper bound on the worst-case running time of an algorithm. The
    temporal performance of XGBoost and DRF algorithms can be subcategorized into
    training and running time complexity. The depiction of time and space complexities
    are as follows. A machine learning algorithm''s training time complexity refers
    to the time it takes to train the model on a given dataset. This time complexity
    is often determined by the algorithm''s computational requirements, such as the
    number of iterations required to converge to a solution, the number of parameters
    to be estimated, and the training data size. Random Forest aims for low bias and
    variance. Let the dataset contains n flows. Additionally, if ‘t’ represents number
    of trees, ‘d’ denotes tree depth, ‘α’ symbolize yield from each tree, and ‘m’
    defines dimensions (or features). EQ. (12) defines the training time complexities
    of XGBoost and DRF. (12) Similarly, a machine learning algorithm''s running time
    complexity refers to the time it takes to make predictions using the trained model
    on new data. This time complexity is often determined by the algorithm''s computational
    requirements for processing and analyzing the new data, such as the number of
    features or dimensions in the input data and the number of operations required
    for making a prediction. EQ. (13) defines the running time complexity of base
    algorithms. (13) The comparative analysis of time complexities for both algorithms
    shows that DRF has a lower complexity than XGBoost because DRF builds decision
    trees in parallel, which can significantly reduce the training time. The space
    complexity of an algorithm refers to the amount of memory or storage required
    by the algorithm to execute as a function of the size of the input. The space
    complexity of XGBoost and DRF algorithms for training can be affected by various
    factors, such as the training data size, the number of features, and the number
    of trees or boosting rounds used. EQ. (14) defines the space complexity of XGBoost
    and DRF for training. However, the exact space complexity can vary depending on
    the specific implementation and configuration of the algorithm. (14) The space
    complexity of an algorithm during running time refers to the amount of memory
    or storage required by the algorithm to make predictions or process new data as
    a function of the size of the input. During running time, the space complexity
    of XGBoost and DRF is typically lower than during training. The trained model
    is already stored in memory, and the input data can be processed in smaller batches.
    EQ. (15) defines the equations for space complexity of XGBoost and DRF. (15) The
    space complexities for both algorithms infer that the space complexity of XGBoost
    is higher than DRF. The higher space complexity for XGBoost is for storing the
    additional data structures, such as the gradient and hessian values used to update
    the model during training. 4. Proposed mitigation framework The mitigation strategy
    for an IoT-DDoS defense system is multifaceted. It encompasses essential elements,
    including universal dataset creation, feature reduction, feature selection, building
    stack-ensemble meta-models from multiple machine learning models, and proposing
    the deployment architecture for real-time attack detection. The proposed methodology
    defines a comprehensive five-stage approach, as illustrated in Fig. 10, for developing
    a robust IoT-DDoS defense system as follows: (i) Stage 1: Acquiring the Benchmark
    Datasets (ii) Stage 2: Generating an Amalgamated Dataset (iii) Stage 3: Feature
    Reduction and Feature Selection (iv) Stage 4: Stack Ensemble Model Generation
    (v) Stage 5: Model Deployment and Simulation Dataset Generation Download : Download
    high-res image (821KB) Download : Download full-size image Fig. 10. Proposed model.
    The mitigation strategy for an IoT-DDoS defense system is multifaceted. It encompasses
    essential elements, including universal dataset creation, feature reduction, feature
    selection, building stack-ensemble meta-models from multiple machine learning
    models (XGBoost, Distributed Random Forest), and proposing the deployment architecture
    for real-time attack detection. The end-to-end process involves exporting the
    trained model as a portable binary model object (MOJO) for the model deployment.
    Furthermore, exported meta-learning MOJO is deployed as an independent IoT-DDoS
    attack detection available as an HTTP service. The entire configuration is deployed
    onto the fog layer for high efficiency and reduced response latency. The details
    of the individual stages involved in developing the proposed IoT-DDoS defense
    system are described as follows. 4.1. Acquiring the benchmark datasets The dataset
    acquisition and processing are the springboards for the proposed IoT-DDoS detection
    and mitigation framework. The stepping stone for the feature selection is extracting
    the flow entries into flow-feature-files (in .csv format) from raw network packet
    captures (in .pcap format) from the benchmark datasets. The experiment leveraged
    the publicly available IoT-based attack datasets in the study. The study used
    the following datasets to bring forth the amalgamated dataset for training, testing,
    and validation purposes. 4.1.1. BoT-IoT dataset The Cyber Security Lab, UNSW,
    Australia, divulged the recent BoT-IoT dataset primarily for the botnet scenarios
    (Koroniotis et al., 2019a). The publicly available dataset contains diverse traffic
    from 5 IoT devices in the controlled experimental environment. The dataset is
    available as network capture files from the smart-home scenario with IoT devices
    connected to cloud services. The authors of the dataset have used the application
    layer MQTT protocol for data transfer to the cloud. The MQTT protocol developed
    over standard TCP protocol works on the ‘publish and subscribe’ model and is a
    modern-day standard protocol for IoT devices. The datasets include attack traffic
    from IoT devices infected by Mirai and Bashlite. The BoT-IoT dataset contains
    benign and malicious traffic, with 7,33,51,357 packets in 49 pcap files. The legitimate
    traffic was generated by benign usage scenarios, such as browsing the web, sending
    emails, and downloading files. In contrast, the malicious traffic was generated
    by botnet malware, such as DDoS attacks, port scanning, and brute-force attacks.
    4.1.2. In-SDN dataset The In-SDN (Intrusion Detection in Software-Defined Networks)
    dataset is a publicly available dataset of network traffic generated by a software-defined
    network (SDN) environment collected for intrusion detection research. Researchers
    from the University of Padova in Italy created the dataset (Elsayed et al., 2020).
    The In-SDN dataset was generated using an SDN testbed consisting of an OpenFlow
    controller, two switches, and six hosts, each running different operating systems.
    The testbed was used to simulate a small network environment, with traffic generated
    by legitimate users and attackers. The lab environment utilized tools such as
    LOIC, slowhttptest, Hping3, Nping, Metasploit, and Nmap to create the attack vector.
    The attack vector includes DoS, DDoS, Web Attacks, Brute Force, Probe, and U2R
    Exploitation attacks. The dataset contains legitimate and attack traffic available
    in 150 pcap files. The dataset covers the cyberattacks found in the SDN elements
    at various planes of a software-defined network. The network traffic is classified
    into ‘Normal Group,’ ‘Metasploit Group,’ and ‘OVS Group.’ The dataset combines
    the benign and attacks traffic instances to produce a total number of 343,275
    instances. Regular traffic class contributes to 68,424 instances, 136,743 instances
    of Metasploit, and 138,772 instances of attacks on the OVS group. The authors
    have used CICFlowMeter to extract features into (.csv) format, containing the
    traffic as bidirectional flows. 4.1.3. UNSW-Sydney dataset The authors of the
    UNSW-Sydney dataset instrumented 28 IoT devices representing the smart-city scenario
    in the university lab (Sivanathan et al., 2019; Sivanathan and Gharakheili, 2023).
    For six months, they collected the traffic traces and published them as raw (.pcap)
    format files. They empirically demonstrated that the IoT devices could be classified
    using the behavioral traits of the underlying device, such as flow volume and
    sleep-time of specific purposed IoT devices. They constituted the roadbed for
    further research in the cyber security realm to classify the attack and benign
    traffic. The network traces contain the benign and IoT-DDoS traffic. 4.1.4. Simulation
    dataset The simulated dataset generation involves a complex simulation, including
    the legitimate IoT and attack traffic. The simulation process generates the data
    from digital twins for temperature, humidity, and smoke sensors over TCP, UDP,
    and HTTP protocols. The experimentation also involves setting up Raspberry Pi
    with sensors employing similar data transfer protocols. Therefore, the simulation
    entails various communication protocols that require a meticulous setup involving
    a range of tools, software, and underlying protocols. The experimental section
    of the article offers a thorough overview of all the technical details of the
    setup, presents a comprehensive account of the communication protocols, and lists
    the pieces of software and tools used to generate and monitor traffic. Table 3
    conveys the statistical information about the utilized benchmark and the simulated
    dataset. Table 3. Summary of datasets. Dataset Year Malicious Instance Number
    of IoT-devices Attacks BoT-IoT Koroniotis et al. (2019b) 2019 7,33,51,357 5 IoT-DDoS
    (HTTP, TCP, UDP), DoS (HTTP, TCP, UDP), Scan (OS, Service), Theft (Exfiltration
    of data, Key Logs) In-SDN Elsayed et al. (2020) 2019 275,515 – DoS, DDoS, Brute-Force
    Password Attack, Web Attacks, Probe, U2R Exploitation (Metasploit) UNSW-Sydney
    Sivanathan et al. (2019); Sivanathan and Gharakheili (2023) 2019 Available as
    raw (.pcap) files 28 IoT-DDoS Simulation 2022 Available as raw (.pcap) files 2,05,797
    8 IoT-DDoS (TCP, UDP, HTTP) 4.2. Generating an amalgamated dataset The Amalgamated
    Dataset (ADS) generation entails extracting features from the available benchmark
    datasets, followed by a thoughtful and consistent fusion of the extracted data
    to form a hybrid dataset. The primary challenge of fusing datasets with divergent
    dimensionality is the most significant roadblock. The proposed methodology for
    dataset amalgamation adeptly overcomes this difficulty by seamlessly merging multiple
    benchmark datasets with different dimensions. The comprehensive details of the
    end-to-end process for generating the ADS are described as follows. 4.2.1. Feature
    extraction The experiment involves extracting significant features from raw PCAP
    files using the CICFlowMeter (Lashkari, 2016) tool. It is an open-source network
    traffic analysis tool developed by Canadian Cybersecurity Institute, designed
    to analyze network flow data and extract important features related to network
    security. The authors preferred selecting CICFlowMeter over an array of available
    feature extraction tools, including Snort, Bro, nProbe, Argus, SiLK, and TcpDump,
    as it uniquely incorporates statistical features and deep packet inspection, culminating
    in superior accuracy compared to tools that solely utilize statistical or flow-based
    features. Furthermore, the authors acknowledge that CICFlowMeter expertly handles
    high-speed network traffic while requiring minimal resources as it leverages multi-threading
    and parallel processing. Therefore, the tool ensures optimal performance on even
    the most demanding networks. The primary objective of this experiment was to investigate
    the behavioral attributes of network flow and assess its effectiveness in managing
    anomalies in network traffic. The behavioral approach aligns with recent privacy
    standards concerning personal, confidential, or encrypted data in communication.
    The study employed feature extraction techniques that extracted statistical data
    from network flows in contrast to deep packet inspection methods involving examining
    individual packets. The approach significantly reduced the analysis time and computational
    resources required while maintaining robust anomaly detection capabilities. Though
    the research enterprises have published the benchmark datasets in CSV format,
    the CSV-based datasets presently available have varying sizes in terms of available
    attributes and the number of features. Therefore, it is critical to undertake
    feature extraction from PCAP to ensure the appropriate fusion of multiple datasets.
    The CICFlowMeter mines 84 network attributes from the PCAP files as bidirectional
    flow entries. The seamless fusion of datasets necessitates that they conform precisely
    to the exact dimensions. Therefore, the authors employed CICFlowMeter to extract
    features from the available raw packet captures to normalize the features to a
    consistent number of attributes. CICFlowMeter leverages a hybrid approach to obtain
    accurate feature sets that conform to the desired dimensions, enabling seamless
    dataset fusion and reliable analysis. The Algorithm 1 explains the details of
    the feature extraction process. The algorithm describes that the input PCAP files
    are passed into the CICFlowMeter as the parameter, which returns the feature set
    in Comma Separated Values (CSV) format. Download : Download high-res image (342KB)
    Download : Download full-size image Algorithm 1. Psuedo code for extracting flows
    from raw packet capture files: ExtractFlowsFromRawPackets(input pcap_file). 4.2.2.
    Dataset amalgamation The amalgamated dataset generation involved extracting the
    subset of flow entries from multiple datasets (BoT-IoT, InSDN, and UNSW Sydney)
    and collating the entries as a single dataset (as presented in Algorithm 2). The
    intricacies involved in the generation of an amalgamated and comprehensive dataset
    from the benchmark dataset are expounded upon with meticulousness as follows:
    (i) The foundation for extracting CSV-formatted feature files using CICFlowMeter
    is built upon the benchmark datasets (BoT-IoT, In-SDN, and UNSW-Sydney) acquired
    in PCAP format. (ii) The data mining and feature extraction process from the labeled
    benchmarked datasets generated CSV formatted feature files for each included dataset.
    The fusion process combines the extracted flow entries in a single dataset. In
    addition, the feature extraction process also plays a vital role in preventing
    various biases in the dataset. The employed amalgamation process and standardized
    tools for extracting the features help ensure that the dataset is free from measurement,
    selection, convenience, response, and under-coverage biases. (iii) Subsequently,
    the CSV-formatted dataset flows undergo labeling as entries of Legitimate Flow,
    TCP Flood, UDP Flood, and HTTP Flood, respectively. (iv) After that, the experimentation
    process randomizes the amalgamated dataset rows to add more generalization and
    remove any bias at the model training stage. The randomization of flow entries
    eliminates potential biases and guarantees that the sample is a representative
    and unbiased population selection. Hence, randomizing the flow entries ensures
    the retention of integrity and accuracy of the dataset. The randomization process
    is the Stratified Random Sample, which seeks to create an unbiased and balanced
    population representation. (v) The final step in the dataset preparation algorithm
    involves carefully selecting a random subset of the amalgamated dataset deemed
    crucial for the model''s training purposes. Download : Download high-res image
    (1MB) Download : Download full-size image Algorithm 2. Pseudo code for generating
    amalgamate dataset (ADS). The amalgamation dataset helps cover the contemporary
    scenarios in multiple benchmark datasets and supports building a generalized,
    extensible, and robust model. 4.3. Feature reduction and feature selection The
    feature selection process involves pre-processing the features to reduce insignificant
    network traffic attributes and applying the feature selection technique to select
    the most significant elements. The network features are initially classified as
    numerical and categorical features. Algorithm 3 explains the feature selection
    process described as follows: (i) The feature reduction process consists in removing
    constant features having a zero standard deviation. (ii) The next step in the
    algorithm removes the quasi-constant features (having negligible variance threshold).
    The quasi-constant features do not add value to the self-learning model. (iii)
    Furthermore, the algorithm calculates the Pearson Correlation Coefficient (PCC)
    (Bhuyan et al., 2021) of the remaining features and removes the highly correlated
    features. EQ. (16) calculates PCC for the remaining features and forms a correlation
    matrix. (16) (iv) Subsequently, the algorithm identifies and removes the flow
    identifier features such as Flow ID, Source IP address, Source Port, Destination
    IP address, and Timestamp. As IoT devices are exponentially immense in number,
    flow identifier features may be a nightmare for the training models and may not
    articulate any value to the model. (v) Lastly, the feature selection process applies
    ANOVA to numerical features and selects the 15 best features from the remaining
    numerical features. Download : Download high-res image (2MB) Download : Download
    full-size image Algorithm 3. Pseudo code for feature selection. The feature reduction
    and selection process identifies the 17 best features (will be described in Section
    6) for model training. The features second the philosophy for IoT DDoS detection
    and include the behavioral attributes of IoT devices. The result section further
    comprehends the details of the results for feature selection. 4.4. Model generation
    for IoT-DDoS detection The stacked-ensemble meta-model against IoT DDoS attacks
    is built in multiple subsequent stages with underlying XGBoost and Distributed
    Random Forest (DRF) algorithms at the ensemble''s heart. XGBoost selects the random
    subset of the features from the feature set, creates the decision trees, and makes
    the predictions. The process is repeated multiple times result of the forecast
    is fed to the next iteration of random feature selections and further predictions.
    Contrary to XGBoost, DRF makes the predictions from the feature subset, and the
    resultant prediction set is fed to the meta-algorithm. The meta-algorithm is trained
    on new training set from underlying base models. The mathematical details and
    algorithm for the Stack-Ensemble description are detailed in section 3.4.2. 4.5.
    Model deployment The defense framework model against IoT-DDoS attacks is deployed
    in four parallel vital software components, namely: (a) Traffic Capture, (b) Traffic
    Monitoring, Analytics, and Detection, (c) Attack Detection Service, and (d) SDN-based
    Mitigation. These software components are autonomous and independent in their
    work. However, each software component communicates to send or seek the data.
    Fig. 11 shows the comprehensive view of the deployment model. Further, Fig. 12
    illustrates the flow diagram for end-to-end IoT-DDoS mitigation modules. The comprehensive
    details of the individual framework components are elucidated as follows. Download
    : Download high-res image (626KB) Download : Download full-size image Fig. 11.
    Software-defined fog assisted mitigation framework against IoT-DDoS deployment
    pipeline. Download : Download high-res image (835KB) Download : Download full-size
    image Fig. 12. Traffic capture sequence flow chart. 4.5.1. Automated traffic capture
    The Fog layer employs an automated Python script at the entry point leveraging
    standard ‘tcpdump’ to capture ingress traffic traces with configurable PCAP size.
    The ‘tcpdump’ is configured for the ‘number of packets’. The default configuration
    is set to 10,000 packets. The ‘tcpdump’ keeps listening to the network until it
    captures the configured amount of packets. When the desired packets (say, 10,000
    packets) are captured, ‘tcpdump’ outputs the packets into PCAP and listens to
    another set of packets. Therefore, the prime responsibility of the ‘Traffic Monitoring’
    module is to listen to ingress network traffic and dump the packets into the PCAP
    file. 4.5.2. Traffic monitoring, analytics, and detection Traffic monitoring,
    analytics, and detection module are implemented as a Watchdog and corresponding
    Watchdog Handler (as shown in Fig. 12). The watchdog triggers FileCreateEvent
    as soon as ‘tcpdump’ creates a traffic dump file. The FileCreateEvent event handler
    converts the PCAP into a CSV feature file and queries the ‘IoT-DDoS attack detection
    service’ module for blacklisting of IP addresses sending the attack traffic. The
    blocked IP addresses are stored in ‘Blacklist-DB.’ 4.5.3. IoT-DDoS detection service
    The IoT-DDoS Detection Service module is deployed on a Docker-based H2O.ai pipeline
    with master and worker configuration for analyzing the real-time traffic to make
    predictions. The service responds to incoming HTTP requests for attack prediction
    with the required attributes as parameters to HTTP requests. The attack detection
    service module is upheld with the exported trained binary model, which serves
    as the heart of the service. 4.5.4. SDN-based mitigation Algorithm 4 describes
    the pseudo-code for the SDN-based mitigation module. The sequence diagram in Fig.
    13 depicts the mitigation module and classifies the web resource request into
    legitimate and attack requests. Various stages are labeled at the top of the sequence
    diagram for end-to-end traffic flow. Download : Download high-res image (413KB)
    Download : Download full-size image Algorithm 4. Psuedo code for Light SDN-based
    IoT-DDoS mitigation scheme. Download : Download high-res image (316KB) Download
    : Download full-size image Fig. 13. Sequence diagram: End-to-end IoT-DDoS mitigation
    framework. The legitimate case explains that SDN intercepts the request for web
    resources. SDN-based mitigation module queries Blacklist-DB for any blocked IP
    address. SDN is not involved in analytics, making the mitigation framework lightweight.
    In the event of a legitimate request with no entry for the incoming IP address
    in the database, the SDN quickly transmits the signal, enabling the traffic to
    flow smoothly. In contrast, SDN finds the IP address from the incoming request
    in the database for attack traffic and installs the rule to block traffic from
    the prohibited IP address. The proposed work expounds upon the end-to-end IoT-DDoS
    attack detection and mitigation process in real time. Each stage involved in the
    framework describes the communication between the atomic yet connected framework
    components bridging the gaps in the cutting-edge solutions. Thus, the proposed
    work offers a comprehensive toolkit that researchers can leverage to augment their
    research and development endeavors. 5. Experimental setup The proposed system
    development and deployment is a two-stage process. The earlier stage includes
    dataset mining, feature selection, and model training. The later stage consists
    of model deployment onto a fog computing environment. The model development, including
    features mining, ADS dataset generation, model training, and testing, is carried
    out on Intel i5 (CPU 1.60 GHz, 16 GB RAM) using Scikit Learn and H2O.ai libraries.
    The model deployment involves preparing the stage with a simulation setup. The
    deployment includes setting up sensor servers, actual sensor setup, digital twin
    for physical sensors, HTTP server, Botnet Network, and HTTP clients. The Mininet
    hosts the complete configuration mentioned above. The Mininet is configured in
    Network Address Translation (NAT) settings so that botnet and cloud servers (Sensor
    servers and HTTP Server) reside outside the Mininet hosts. The Mininet is assumed
    to mimic a fog layer network with a traffic monitor, attack detection module,
    IoT-DDoS detection service, database to store the blocked (attack) IP addresses,
    and a pox controller. The IoT-DDoS detection service is deployed on the cluster
    of H2O.ai Docker containers to leverage distributed computing for attack detection
    in real-time and to handle the volumetric traffic. The distributed H2O.ai nodes
    work as load balancers during high traffic. The botnet and cloud servers are deployed
    on separate virtual machines. The details of the simulation setup are as follows:
    (a) Sensor Servers: The experiment involved deploying proprietary TCP, UDP, and
    HTTP servers for the Sensor network. (b) Real-Sensor Setup: The real-sensor setup
    was done using a ‘Raspberry Pi Model B’ for setting up the physical layer. The
    ‘Raspberry Pi’ was interfaced with temperature and humidity sensors (DTH22 Temperature
    and Humidity Sensor Modules) and was responsible for sending the data to the cloud
    server in raw-bytes format over TCP and UDP. DTH22 has the inbuilt conversion
    capability for A2D (Analog to Digital). Hence, it can be interfaced with Raspberry
    without any additional chips. (c) Sensor Simulators: Additionally, the temperature,
    humidity, and smoke sensor simulators were added to generate physical layer traffic
    for underlying physical layer extrapolation. The traffic was transmitted over
    TCP and UDP for raw-byte transfer and HTTP for application layer packet format.
    (d) Tuning the data transfer parameters in sensor nodes: The connection of sensor
    nodes and the packet sizes for data transfer to the server is simulated mimicking
    the IoT behavioral attributes from the employed amalgamated dataset. (e) HTTP
    Web-Server: Apache web server was deployed on one of the designated cloud nodes
    for delivering web pages over HTTP. (f) Simulation of Feedback loop: Furthermore,
    to close the feedback loop in the simulated cyber-physical system, an alert system
    was designed to generate alarms and alerts if the sensor values from the physical
    layer were reported to go beyond the threshold. The alerts were generated in the
    form of email alerts and delivered to the pre-configured email addresses. (g)
    Botnet Network: The botnet network involved the development of a C&C server and
    several Bots for executing the ‘LAUNCH’ command for the attack traffic. The Botnet
    network was coded leveraging Hping3 and SCAPY to support several DDoS attacks
    types (TCP, UDP, and HTTP). Moreover, the botnet architecture is extensible to
    support more attack types. (h) HTTP Clients: The custom HTTP clients were deployed
    over several nodes to query the HTTP server. 6. Results and analysis The experiment
    was initiated with the feature reduction and selection process. Subsequently,
    the investigation advanced to the training of a Stack-Ensemble of XGBoost and
    DRF models employing the selected features. The resultant outcomes at various
    stages of the experiment are detailed in the subsequent sections. 6.1. Dataset
    amalgamation and feature selection The dataset underpinning the experiment consisted
    of network traffic traces that combined legitimate traffic, TCP Flood, UDP Flood,
    and HTTP Flood. Table 4 presents the details of the flow statistics extracted
    from the benchmark datasets. The table highlights that the amalgamation dataset
    included ample instances of each attack category. Table 4. Flow extraction summary.
    Dataset Normal TCP Flood UDP Flood HTTP Flood Total BoT-IoT 103,056 262,153 63,149
    79,165 507,523 InSDN 68,425 30,021 23,053 20,458 141,957 UNSW Sydney 267,527 33,045
    – – 300,572 Simulation 61,201 75,205 57,094 73,498 266,998  Total Instances 500,209
    400,424 143,296 173,121 12,17,050 The amalgamated dataset originally contained
    83 features (Excluding the output label). The features were classified into 72
    numerical, nine categorical, and two object features. During the numerical features
    processing (72 features), the feature reduction process initially examined the
    amalgamated dataset for constant features and identified four features as constants.
    Subsequently, the strategy identified and removed two quasi-constant features.
    After that, two duplicated features were removed from the dataset. The further
    stage involved removing the highly correlated features. Here, PCC (Bhuyan et al.,
    2021) was calculated (as defined in EQ. (16)) for the remaining feature set forming
    a correlation matrix as shown in Fig. 14. The correlation matrix resulted in thirty-six
    highly correlated features. Therefore, the numerical feature reduction resulted
    in 30 available features. The subsequent step applied ANOVA to the remaining thirty
    features and selected 15 best available numerical features. Table 5 shows the
    feature importance based on their ANOVA scores. The categorical features are represented
    with ANOVA scores as ‘NA’ i.e. ‘Not Applicable’. Download : Download high-res
    image (568KB) Download : Download full-size image Fig. 14. Pearson correlation
    matrix for network features. Table 5. Selected feature set for model training.
    Feature(s) ANOVA Score - Descending Description Idle Mean 235405.70 Mean of device
    sleep time or inter-packet arrival time for a given flow Fwd Pkt Len Std 37893.37
    Standard deviation of packets in forward direction in a flow RST Flag Cnt 17464.87
    Total RST packets Tot Fwd Pkts 14786.45 Total number of forwarded packets in a
    flow Flow Byts/s 13880.69 Average Flow (Flow bytes per second) Init Fwd Win Byts
    12100.21 Number of bytes in forward direction during initial window Bwd Pkt Len
    Std 11736.62 Standard deviation of packets in backward direction in a flow Fwd
    Seg Size Min 9737.64 Minimum segmentation size in forward packets Down/Up Ratio
    8883.51 Ratio of uploaded and downloaded packets Flow Duration 7944.47 Total flow
    duration in milli-seconds Fwd PSH Flags 5413.53 Total number of occurrence of
    PSH flag set for forward packets (Zero for UDP) PSH Flag Cnt 5412.87 Total PUSH
    packets Tot Bwd Pkts 5410.75 Total number of packets in backward direction in
    a flow FIN Flag Cnt 5143.26 Total FIN packets ACK Flag Cnt 4315.17 Total ACK packets
    Dst Port NA Destination Port Protocol NA Underlying communication protocol Next,
    the study identified and removed five flow identifier features (Flow ID, Source
    IP, Source Port, Destination IP, and Timestamp). There are three categorial and
    two object features in flow identifiers. Henceforth, Chi-Square removed four more
    features from the categorial list based on their p-Values, leaving two categorical
    features for further processing. Therefore, the selection process left 17 best-suited
    features for further consideration (as depicted in Table 5). The presented table
    unequivocally indicates that device behavioral attributes occupy the highest ranking
    positions in the list of selected features. As a result, the experiment aligns
    with the overarching IoT-DDoS detection philosophy that underscores the significance
    of device-centric anomalies in identifying and mitigating DDoS attacks in IoT
    environments. 6.2. Model development The experiment entails evaluating the two-stage
    meta-model in multiple orientations. The study evaluates performance metrics such
    as Mean-per-class-error, Logloss, MSE, RMSE, Confusion Matrix, Accuracy, Model
    hit ratio, Recall, Precision, and F1-score. Therefore, multiple and exhaustive
    analysis of metric performance projects the resiliency of the model in an isometric
    view. There are multiple models involved in the course of constructing the Stack-Ensemble
    model. The following section elucidates the individual performance of each model
    through the comparison of losses. 6.2.1. Models leaderboards The ensembled models
    are trained and evaluated against an amalgamated dataset tuned to the hyperparameters.
    Table 6 presents the details of the model leaderboard describing the performance
    parameters. Table 6. Model performance details. Model ID Optimal Parameters Mean
    Per-Class Error Logloss RMSE MSE Stack-Ensemble Meta-Model number_of_trees=50
    7.49893e-05 0.000544629 0.00831966 6.92167e-05 XGBoost number_of_trees=61 0.00010522
    0.000427076 0.00889163 7.9061e-05 DRF number_of_trees=44, min_depth=1, max_depth=17,
    min_leaves=2, max_leaves=81 0.000162019 0.00874992 0.021972 0.00048277 The table
    illustrates the optimal parameters for underlying algorithms and minimal error
    values. The statistical data presented in the table shows that the Meta model
    has the most negligible Mean Per-Class Error (7.49893e-05), Logloss, RMSE, and
    MSE values. The significantly low error infers that the predicted flow labels
    are skinned to actual values. Furthermore, the experiment observed the training
    time of 9940 milliseconds for DRF, 8234 milliseconds for XGBoost, and 31487 milliseconds
    for meta-model. 6.2.2. Model''s learning curves A model''s learning curve represents
    how the performance of a model improves as the amount of training data increases.
    It plots the learning performance of the model during the incremental training
    process over time. Fig. 15 defines the learning curve regarding the number of
    participating trees and logloss. The plot of logloss against incremental values
    of the number of trees signifies that the divergence of logloss decreases with
    increasing the trees in the learning mode. Download : Download high-res image
    (363KB) Download : Download full-size image Fig. 15. Model learning curves. Fig.
    15 (a) shows the higher deviation for the meta-model at the start of the training,
    and it starts stabilizing at nearly 20 decision trees. However, a value of 50
    is selected for a robust meta-model. The XGBoost learning curve has stabilized
    at a value near 60 (in Fig. 15 (b)). DRF''s learning curve (in Fig. 15 (c)) has
    assumed a value of 44 for stabilization. Training and validation have yielded
    a tightly coupled learning curve in the case of Meta-learner and XGBoost. However,
    DRF has shown high variation in learning curves for training, cross-validation,
    and validation data. 6.2.3. Confusion matrix and performance metrics The experimental
    observations collate the performance of the machine learning models in the Confusion
    Matrix. The confusion matrix plots the actual class (on the y-axis) and the predicted
    class (on the x-axis). The dictionary CM (in EQ. (17)) symbolizes the confusion
    matrix presentation of actual and predicted classes as: (17) The confusion matrix
    in Fig. 16 (a)-(e) depicts the results of the experiment on validation and cross-validation
    data for meta and base models. Each figure in the sequence is annotated appropriately
    and represents an unambiguous interpretation of the corresponding confusion matrix.
    The results are illustrated for the preduction on amalgamated and simulated datasets.
    Download : Download high-res image (403KB) Download : Download full-size image
    Fig. 16. Model''s confusion matrix. The figures show a high accuracy in Meta-Model
    as well as base models. The confusion matrix infers high True Positive (TP) and
    True Negative (TN) rates. The False Positives and False Negatives have values
    tending to zero. Hence, the confusion matrix advocates the underlying machine
    learning model as ideal. Therefore, the model''s accuracy is highly encouraging,
    with an accuracy percentage of 99.99. The confusion matrix in Fig. 16 depicts
    a very high accuracy in Meta-Model. The statistical data extracted from the confusion
    matrix for the meta-model are collated in Table 7. The table outlines vital performance
    metrics often ignored by researchers, such as Precision, Accuracy, Recall, and
    F1-Score. Furthermore, it is inferred by the presented statistical data that the
    system is highly accurate, with a value of 99.99% for the validation performed
    with Amalgamated Dataset. The high values of Accuracy (99.99), Precision (99.99),
    Recall (99.99), and F1-Score (99.99) endorse the highly accurate system model.
    Table 7. Performance metric for amalgamated and simulation dataset. Traffic Class
    TP TN FP FN Accuracy Precision Recall F1 Score Amalgamated Dataset Results 0 7265
    20779 1 2 0.999893 0.999862 0.999725 0.999794 1 7045 20999 2 1 0.999893 0.999716
    0.999858 0.999787 2 6994 21053 0 0 1 1 1 1 3 6740 21307 0 0 1 1 1 1 Simulated
    Dataset Results 0 60272 203642 740 929 0.994 0.988 0.985 0.986 1 74380 189534
    753 825 0.994 0.990 0.989 0.990 2 56282 207632 783 812 0.994 0.986 0.986 0.986
    3 72980 190934 808 518 0.995 0.989 0.993 0.991 Acronyms: TP: True Positive, TN:
    True Negative, FP: False Positive, FN: False Negative Similarly, the interpretation
    from the confusion matrix (in Fig. 16 (c)) shows an accuracy of 98.84% on simulation
    data in the live production environment. The simulation resulted in the collateral
    damage of 1.52%, where legitimate traffic was reported as attack traffic. Fig.
    17 illustrates the performance summary visualization for Stack Ensemble model.
    The graphs are indicative of the high performance of the Stack-Ensemble algorithm
    as compared to XGBoost and DRF. Therefore, the Stack-Ensemble combines the two
    robust classifiers to build a resilient system. Here, the base models have been
    chosen as strong classifiers to have a minimal impact on any error propagation
    from the base models. Download : Download high-res image (422KB) Download : Download
    full-size image Fig. 17. Comparison of (a) Hit ratio and (b) Performance metrics
    for traffic classes for validation set from amalgamated dataset. 6.3. Impact of
    feature reduction on system performance The feature selection reduced the 84 extracted
    features by 80%, positively impacting the system performance. The system observed
    97.37% accuracy with the amalgamated dataset with all the features included and
    99.99% with the reduced feature set. However, the accuracy gaps increased when
    tested in the simulation environment. The model trained with all the features
    reported an accuracy of 65.32%, whereas the model trained on a reduced feature
    set maintained a high accuracy of 98.84% in the simulated environment. The above
    results inferred that the model trained on the complete feature set is barely
    resilient in the practical environment due to overfitting. Similarly, the experiment
    observed a reduction in training time for the reduced features in contrast to
    complete features in the amalgamated dataset from 545.87 sections to 9.94 seconds
    for DRF, from 513.80 seconds to 8.23 seconds for XGBoost, and from 2109.83 seconds
    to 31.49 seconds for meta-model. The experiment further noted an average prediction
    time of 23.6 microseconds with the complete feature set and 10.29 microseconds
    with the reduced feature set in the simulation environment. Therefore, feature
    reduction helped reduce 98.5% in training time and 56.4% in prediction time. 6.4.
    Empirical results for performance study (fog computing vs cloud computing Fog
    computing is an extension of cloud computing that brings computing and storage
    capabilities closer to the end-users. It provides the power to applications for
    real-time data processing and low-latency communication. In this context, the
    present paper conducts a comprehensive qualitative and quantitative evaluation
    of fog-computing-based IoT-DDoS defense solutions. The details of the empirical
    fog analysis are as follows. 6.4.1. Qualitative assessment Qualitative analysis
    of deploying IoT-DDoS defense solutions at fog computing offers subjective characteristics
    and qualities, such as its benefits and potential applications, through non-numerical
    methods. It can provide valuable insights into fog computing solutions'' feasibility,
    usability, and effectiveness as follows: (a) It acts as a reservoir of resources
    between the perception and cloud computing layers. (b) It saves network bandwidth
    by lowering network traffic to the cloud, cost savings, quicker reaction time,
    and enhanced security close to the edge devices. Hence, the solutions expecting
    low latency are recommended to be deployed at the fog-computing layer. (c) Fog
    works best for small deployment models, has less operational complexity, is more
    cost-effective due to low-specification machines, and works well even with intermittent
    network connectivity. (d) Fog nodes perform essential communication and networking
    functions close to the end-users, rather than redirecting tra?c data into the
    backbone network, allowing the cloud network to concentrate on its primary functions.
    Fog computing provides a network edge with cloud-like services. (e) Due to its
    proximity to end users, Fog Computing supports a variety of application domains.
    6.4.2. Quantitative assessment For quantitative analysis of the fog-based solution
    is done by conducting the performance assessment of the security solution deployed
    at the fog-computing layer. The experimentation setup was stress tested to evaluate
    the reliability and consistency of the web requests. Reliability is defined as
    the maximum execution time, and consistency is defined as the number of failed
    connections. The measurements were taken using the open-source stress/load testing
    tool JMeter. JMeter was configured for a continuous increase of load on the cloud-based
    web server. The load tests instructed the JMeter to simulate 100, 200, 500, and
    1000 concurrent connections and execute 1000 requests for each connection (For
    example, 100 simultaneous connections would result in 100,000 requests). The results
    are then compared with a similar setup with a security solution deployed at the
    cloud-computing layer. The setup has leveraged an Azure-based virtual machine
    (AVD) for the experimentation setup. Table 8 summarizes the maximum execution
    time for fog versus cloud requests for each stress test. The stress test results
    show that fog-based security solution records significantly lower maximum execution
    time, with differences in maximum latency measured at 99.4% (at 100 connections),
    70.7% (at 200 connections), 89.8% (at 500 connections), and 68.9% (at 1000 connections).
    Table 8. Max. execution time in milliseconds (fog vs cloud). No. of Parallel Connections
    Execution Time (Fog) Execution Time (Cloud) Difference Percentage 100 467 72,278
    71,811 99.4 200 28,642 97,811 69,229 70.7 500 8672 85,260 76,588 89.8 1000 16,387
    52,692 36,305 68.9 Similarly, Table 9 presents the number of failed connections
    for fog and cloud for each test scenario in the stress test. The results show
    zero failed connections for 100,000, 200,000, 500,000, and 1000,000 web requests.
    However, the study recorded a failure rate of 0.08% (for 100 connections), 1.58%
    (for 200 connections), 1.25% (for 500 connections), and 1.27% (for 1000 connections).
    Table 9. Failed requests (fog vs cloud). Parallel Req. Failed Req. Percentage
    Failed Req. Percentage Difference (X1000) (Fog) (%) (Cloud) (%) (Fog vs Cloud)(%)
    100 0 0 82 0.08 0.08 200 0 0 3,178 1.58 1.58 500 0 0 6,275 1.25 1.25 1000 0 0
    12,749 1.27 1.27 The quantitative study seconds the inferences of qualitative
    study for fog vs cloud setups. However, the outcomes of the experiment are a factor
    of underlying hardware, internet connectivity, software or hardware dependencies,
    or failure rates due to network disruptions. Hence, the fog model gives a better
    performance than the cloud-based security model. Additionally, apart from the
    quantitative/qualitative details of fog/cloud, the fog-computing is further justified
    as: (a) The IP addresses are gigantic during a DDoS attack. And, these IP addresses/attack
    devices grow on a gigantic level considering the exponentially growing IoT-devices.
    Hence, the system is designed for enormous IoT-devices. (b) Second, the decision
    making for attack traffic is not one time. The architecture of the system at fog
    computing layer shows that there is continuous monitoring of incoming network
    traffic, attack detection, and mitigation. Hence, the system represents a real-time
    defense system against IoT-DDoS attack. (c) The mitigation module blocks the incoming
    traffic from a blocked IP address for a configurable time window and is analogous
    to the flow table of SDN. Once the time window is expired for a particular IP
    address (say, blocked IP), the incoming traffic from the blocked IP is re-evaluated
    for its legitimacy. Hence, given that the empirical data for fog-computing for
    system performance, failure rate, high volume IP addresses, and continuous monitoring
    and mitigation of attack traffic, the fog computing is not an optional layer.
    6.5. Comparison with state-of-the-art defense frameworks It is vital to consider
    the influencing factors in multiple dimensions for assessing the security framework.
    The critically important is the training and validation of machine learning algorithms
    against benchmark datasets of superior quality. The model trained against a single
    benchmark dataset could be inefficient in handling the diverse attack scenarios
    containing diverse network traffic patterns. Hence, an amalgamated dataset yielded
    from multiple datasets can provide more reliable results and test the system''s
    effectiveness in various scenarios. Similarly, other benchmarks include vital
    performance metric discussion, computational load distribution, on-demand service,
    solution coupling approach (tightly coupled or decoupled), and latency reduction.
    Table 10 compares the proposed system with state-of-the-art against the parameters
    mentioned above. Table 10. Comparison with state-of-the-art defense frameworks.
    Ref A B C D E F G Koroniotis et al. (2019a) N S N N T N R Nimbalkar and Kshirsagar
    (2021) N S N N T N NR Shafiq et al. (2020) Y M N N T N NR Ferrag et al. (2020)
    N S N N T N NR Elsayed et al. (2020) Y M N N T N NR Firdaus et al. (2020) N S
    N N T N NR Zoppi et al. (2021) N S N N T N NR Sivanathan et al. (2017) N S N N
    T N R Sivanathan et al. (2020) Y S N N T N R Singh et al. (2021) N S Y N T Y NR
    Priyadarshini et al. (2020) Y S Y N T Y R Zhou et al. (2019) N S N N T Y R Cvitić
    et al. (2021a) Y S Y N T N R Özçelik et al. (2017) N S N N T N R Doshi et al.
    (2018) N S N N T N R Al-Mashadani and Ilyas (2022) N S N N T N R Wani and Revathi
    (2020) Y S N N T N R Kumar et al. (2023) Y S N N T N R Kumar et al. (2022) Y S
    N N T N R Kumar et al. (2021) Y S N N T N R Javeed et al. (2023) Y S N N T N R
    Proposed Work Y M Y Y D Y R Acronyms: A: Discussion of vital performance metrics,
    B: Validated with Single (S) or Multiple (M) Datasets, C: Computational Load Distribution,
    D: On-demand Security Service, E: Coupling Approach Decoupled (D) or Tightly Coupled
    (T), F: Latency Reduction, G: Real Time (R) or Non Real time (NR) The proposed
    research on the IoT-DDoS framework seeks to evaluate the system''s efficacy by
    utilizing Machine Learning algorithms and multiple datasets. The system''s effectiveness
    is assessed based on its accuracy, precision, recall, and F1 score, as well as
    its resistance to novel and sophisticated attacks and its ability to handle volumetric
    and real-time data. Additionally, the proposed solution evaluates the framework
    in multiple dimensions. 7. Discussion and future scope The paper presents a comprehensive
    mitigation framework for IoT-based DDoS attacks. The ever-increasing adoption
    of IoT devices has increased security concerns, and DDoS attacks on IoT networks
    have become a significant threat. The authors have invested considerable efforts
    in designing and conducting experiments to develop a robust and reliable defense
    solution. The end-to-end system design comprised a five-stage defense framework
    that leverages physical devices'' behavioral attributes to identify and mitigate
    IoT-DDoS traffic. The experiment employed multiple stack-ensembled algorithms
    to enhance security against an ever-evolving threat landscape. Furthermore, the
    mitigation framework designed and published a service for attack detection on
    top of the Docker framework for a cost-effective, reusable, and portable framework.
    The responses to research queries, objectives, and accomplishments are as follows.
    The experiment involved proposing the IoT-DDoS detection philosophy based on IoT
    devices'' behavioral attributes to prepare a response to RQ1. The attack detection
    philosophy described that IoT devices are specialized, low-powered, less secure
    devices and exhibit specific behavioral patterns such as low-volume data exchange,
    specific flow durations, and sleep intervals between consecutive flows. The philosophy
    further described using behavioral attributes to detect IoT-based DDoS attacks.
    The work involved proposing a real-time mitigation framework against IoT-DDoS
    attacks. The experimental work involved acquiring three benchmark datasets: BoT-IoT,
    InSDN, and UNSW-Sydney. Further, the experiment thoughtfully combined the three
    datasets to form the amalgamated dataset to incorporate the diverse IoT-DDoS attack
    scenarios for a resilient mitigation framework. Moreover, the work involved setting
    up the simulation environment based on analyzing the amalgamated dataset. The
    work contributed the amalgamated and simulated dataset for IoT-DDoS to the research
    community, resolving RQ2. Further, the Stack-Ensemble model was trained and tested
    on the amalgamated dataset after performing the feature engineering. The encouraging
    results helped answer RQ3. The selected features followed the IoT-DDoS detection
    philosophy. Furthermore, the paper offered to decouple the mitigating module.
    The service-based architectonics at the fog computing layer offered a low-latent,
    cost-effective, reusable, and portable defense solution. The proposed solution
    delivered a light mitigation scheme in a fog-assisted software-defined environment
    and ensured a minimal impact on the SDN performance. The decoupled configuration
    deployed on the orchestration of Docker-based architecture for the mitigation
    solution offered effective responses for RQ4, RQ5, and RQ6. Though the paper fills
    the gap in state-of-the-art, there is a vast scope for further research. The number
    of IoT devices continues to increase, thereby increasing heterogeneous network
    traffic. The machine-learning algorithms have their limitation to work with gigantic
    network traffic. Therefore, the paper recommends using deep learning algorithms
    so that research focuses on developing more sophisticated and adaptive defense
    mechanisms to counter these threats effectively. The paper offered an approach
    for generating an amalgamated dataset by fusing multiple benchmark datasets. However,
    the paper recommends developing and integrating an automation framework to fuse
    newly released or simulated datasets into existing amalgamated datasets. Moreover,
    emerging techniques such as blockchain and artificial intelligence can provide
    more robust and efficient security solutions for IoT devices. Moreover, future
    work can cover more sophisticated and specialized protocols for IoT devices such
    as MQTT. 8. Conclusion The prolific increase in vulnerable IoT devices adapted
    by widely dispersed cyber-physical systems is accountable for inducing the volumetric
    network traffic. Moreover, IoT devices are involuntarily contributing to IoT-DDoS
    attacks. The paper has offered the IoT-DDoS detection philosophy based primarily
    on the behavioral characteristics of IoT devices. The research generated an amalgamated
    dataset from BoT-IoT, InSDN, and UNSW-Sydney for operative model training and
    comprehensive validation. The paper established that existing security solutions
    are deployed in the cloud environment and negatively impact cloud resource utilization
    and latency issues. Thus, the paper proposed an ameliorated fog-computing layer
    for data filtration, distributed computing, and reducing latency in data transmission.
    The experiment showcased the improvement of execution time between 68 and 99 percent
    and trivial failed requests in the fog computing environment. Further, the paper
    introduced a multi-stage stack-ensembled-based defense framework rooted in XGBoost
    and Distributed Random Forest. The paper demonstrated through empirical results
    that the model was outmatched with an accuracy of 99.99% when it was validated
    on an amalgamated dataset. The higher values of precision (99.99%), recall (99.99%),
    and F1-score (99.9%) endorsed the system''s resilience, robustness, and accuracy.
    The performance metric parameters in the simulated lab environment exhibited an
    accuracy of 98.84%, precision of 98.8%, recall value of 98.8%, and an F1-score
    of 98.8%. The collateral damage observed during the experimentation process where
    benign traffic was identified as attack traffic was 1.52%. The captured dataset
    for the simulated lab environment is published for the research community and
    is available on a request basis. The paper has proposed a cost-effective, reusable,
    and novel IoT-DDoS-Detection-as-a-Service (IDDaaS) interface for the research
    community. The docker-based distributed computing nodes deployed on the fog computing
    layer stand as the foundation for the IDDaaS interface. The paper offered a unique
    lightweight defense architecture for SDN-based networks. In future work, the solution
    is proposed to be extended to leverage the big-data tools for in-memory computations.
    The experimental study was limited to TCP, UDP, and HTTP flooding attacks. The
    article recommends extending the defense solution to cutting-edge technologies
    such as blockchain, unsupervised deep learning, and IoT protocols such as MQTT.
    Declaration of Competing Interest The authors declare that they have no known
    competing financial interests or personal relationships that could have appeared
    to influence the work reported in this paper. Data availability No data was used
    for the research described in the article. References Abbasi et al., 2021 M. Abbasi,
    A. Shahraki, A. Taherkordi Deep learning for network traffic monitoring and analysis
    (NTMA): a survey Comput. Commun., 170 (2021), pp. 19-41, 10.1016/j.comcom.2021.01.021
    View PDFView articleView in ScopusGoogle Scholar Achbarou et al., 2018 O. Achbarou,
    M.A.E. Kiram, O. Bourkoukou, S. Elbouanani A new distributed intrusion detection
    system based on multi-agent system for cloud environment Int. J. Commun. Netw.
    Inf. Secur., 10 (3) (2018), pp. 526-533 View in ScopusGoogle Scholar Al-Jarrah
    et al., 2014 O.Y. Al-Jarrah, A. Siddiqui, M. Elsalamouny, P.D. Yoo, S. Muhaidat,
    K. Kim Machine-learning-based feature selection techniques for large-scale network
    intrusion detection Proceedings - International Conference on Distributed Computing
    Systems 30-June-20 (2014), pp. 177-181, 10.1109/ICDCSW.2014.14 View in ScopusGoogle
    Scholar Al-Mashadani and Ilyas, 2022 A.K.A. Al-Mashadani, M. Ilyas Distributed
    denial of service attack alleviated and detected by using mininet and software
    defined network Webology, 19 (1) (2022), pp. 4129-4144, 10.14704/WEB/V19I1/WEB19272
    Google Scholar Alzahrani and Alenazi, 2021 A.O. Alzahrani, M.J. Alenazi Designing
    a network intrusion detection system based on machine learning for software defined
    networks Future Internet, 13 (5) (2021), p. 111 CrossRefView in ScopusGoogle Scholar
    Anande and Leeson, 2023 T.J. Anande, M.S. Leeson Synthetic Network Traffic Data
    Generation and Classification of Advanced Persistent Threat Samples: a Case Study
    with GANs and XGBoost (2023), pp. 1-18, 10.1007/978-3-031-39059-3_1 View in ScopusGoogle
    Scholar Behal et al., 2021 S. Behal, K. Kumar, M. Sachdeva D-FAC: a novel divergence
    based distributed DDoS defense system J. King Saud Univ, Comput. Inf. Sci., 33
    (3) (2021), pp. 291-303, 10.1016/j.jksuci.2018.03.005 View PDFView articleView
    in ScopusGoogle Scholar Bhuyan et al., 2021 H. Bhuyan, D.C. Chakraborty, S. Pani,
    V. Ravi Feature and subfeature selection for classification using correlation
    coefficient and fuzzy model IEEE Trans. Eng. Manag. (2021), pp. 1-15, 10.1109/TEM.2021.3065699
    Google Scholar Buch, 2018 D. Buch Taxonomy on cloud computing security issues
    at virtualization layer Int. J. Adv. Res. Eng. Technol., 9 (4) (2018), pp. 50-76
    View in ScopusGoogle Scholar Chen et al., 2023 Y. Chen, X. Liu, L. Gao, M. Zhu,
    B.-C. Shia, M. Chen, L. Ye, L. Qin Using the H2O automatic machine learning algorithms
    to identify predictors of web-based medical record nonuse among patients in a
    data-rich environment: mixed methods study JMIR Med. Inform., 11 (2023), Article
    e41576, 10.2196/41576 View in ScopusGoogle Scholar Chkirbene et al., 2020 Z. Chkirbene,
    S. Eltanbouly, M. Bashendy, N. Alnaimi, A. Erbad Hybrid machine learning for network
    anomaly intrusion detection 2020 IEEE International Conference on Informatics,
    IoT, and Enabling Technologies, ICIoT 2020 (2020), pp. 163-170, 10.1109/ICIoT48696.2020.9089575
    View in ScopusGoogle Scholar Cvitić et al., 2021a I. Cvitić, D. Peraković, M.
    Periša, M. Botica Novel approach for detection of IoT generated DDoS traffic Wirel.
    Netw., 27 (3) (2021), pp. 1573-1586, 10.1007/s11276-019-02043-1 View in ScopusGoogle
    Scholar Cvitić et al., 2021b I. Cvitić, D. Peraković, M. Periša, B. Gupta Ensemble
    machine learning approach for classification of IoT devices in smart home Int.
    J. Mach. Learn. Cybern., 12 (11) (2021), pp. 3179-3202, 10.1007/s13042-020-01241-0
    View in ScopusGoogle Scholar Doshi et al., 2018 R. Doshi, N. Apthorpe, N. Feamster
    Machine learning ddos detection for consumer Internet of things devices 2018 IEEE
    Security and Privacy Workshops (SPW), IEEE (2018), pp. 29-35, 10.1109/SPW.2018.00013
    View in ScopusGoogle Scholar Douiba et al., 2023 M. Douiba, S. Benkirane, A. Guezzaz,
    M. Azrour An improved anomaly detection model for iot security using decision
    tree and gradient boosting J. Supercomput., 79 (3) (2023), pp. 3392-3411, 10.1007/s11227-022-04783-y
    View in ScopusGoogle Scholar Elsayed et al., 2020 M.S. Elsayed, N.-A. Le-Khac,
    A.D. Jurcut Insdn: a novel sdn intrusion dataset IEEE Access, 8 (2020), pp. 165263-165284,
    10.1109/CIT.2017.61 View in ScopusGoogle Scholar Ericsson, 2023 T.L. Ericsson
    IoT connections forecase - mobility report - Ericsson https://www.ericsson.com/en/reports-and-papers/mobility-report/dataforecasts/iot-connections-outlook
    (2023), Accessed 16th Apr 2023 Google Scholar Ferrag et al., 2020 M.A. Ferrag,
    L. Maglaras, A. Ahmim, M. Derdour, H. Janicke Rdtids: rules and decision tree-based
    intrusion detection system for Internet-of-things networks Future Internet, 12
    (3) (2020), p. 44, 10.3390/fi12030044 View in ScopusGoogle Scholar Ferrag et al.,
    2022 M.A. Ferrag, L. Shu, O. Friha, X. Yang Cyber security intrusion detection
    for agriculture 4.0: machine learning-based solutions, datasets, and future directions
    IEEE/CAA J. Autom. Sin., 9 (3) (2022), pp. 407-436, 10.1109/JAS.2021.1004344 View
    in ScopusGoogle Scholar Finley et al., 2020 B. Finley, J. Benseny, A. Vesselkov,
    J. Walia How does enterprise IoT traffic evolve? Real-world evidence from a Finnish
    operator Internet of Things (Netherlands), 12 (2020), Article 100294, 10.1016/j.iot.2020.100294
    View PDFView articleView in ScopusGoogle Scholar Firdaus et al., 2020 D. Firdaus,
    R. Munadi, Y. Purwanto Ddos attack detection in software defined network using
    ensemble k-means++ and random forest 2020 3rd International Seminar on Research
    of Information Technology and Intelligent Systems (ISRITI) (2020), pp. 164-169,
    10.1109/ISRITI51436.2020.9315521 View in ScopusGoogle Scholar Gama et al., 2019
    E.S. Gama, R. Immich, L.F. Bittencourt Towards a multi-tier fog/cloud architecture
    for video streaming Proceedings - 11th IEEE/ACM International Conference on Utility
    and Cloud Computing Companion, UCC Companion 2018 (2019), pp. 13-14, 10.1109/UCC-Companion.2018.00022
    Google Scholar Gartner, 2023 I. Gartner Gartner top strategic technology trends
    for 2022 https://www.gartner.com/en/information-technology/insights/top-technology-trends
    (2023), Accessed 16th Apr 2023 Google Scholar Gouveia and Correia, 2020 A. Gouveia,
    M. Correia Network intrusion detection with xgboost Recent Advances in Security,
    Privacy, and Trust for Internet of Things (IoT) and Cyber-Physical Systems (CPS),
    Chapman and Hall/CRC (2020), pp. 137-166 CrossRefGoogle Scholar Gupta and Singh,
    2023 A. Gupta, A. Singh Prediction framework on early urine infection in IoT–fog
    environment using XGBoost ensemble model Wirel. Pers. Commun., 131 (2) (2023),
    pp. 1013-1031, 10.1007/s11277-023-10466-5 View in ScopusGoogle Scholar Halpern
    et al., 2010 J.M. Halpern, R. Haas, A. Doria, L. Dong, W. Wang, H.M. Khosravi,
    J.H. Salim, R. Gopal Forwarding and control element separation (ForCES) protocol
    specification, RFC 5810 https://doi.org/10.17487/RFC5810 https://www.rfc-editor.org/info/rfc5810
    (Mar. 2010) Google Scholar Hanif et al., 2019 S. Hanif, T. Ilyas, M. Zeeshan Intrusion
    detection in IoT using artificial neural networks on UNSW-15 dataset HONET-ICT
    2019 - IEEE 16th International Conference on Smart Cities: Improving Quality of
    Life Using ICT, IoT and AI (2019), pp. 152-156, 10.1109/HONET.2019.8908122 View
    in ScopusGoogle Scholar Haq et al., 2015 N.F. Haq, A.R. Onik, M.A.K. Hridoy, M.
    Rafni, F.M. Shah, D.M. Farid Application of machine learning approaches in intrusion
    detection system: a survey Int. J. Adv. Res. Artif. Intell., 4 (3) (2015), pp.
    9-18, 10.14569/IJARAI.2015.040302 Google Scholar Hoon et al., 2018 K.S. Hoon,
    K.C. Yeo, S. Azam, B. Shunmugam, F. De Boer Critical review of machine learning
    approaches to apply big data analytics in DDoS forensics 2018 International Conference
    on Computer Communication and Informatics, ICCCI 2018, vol. 1 (2018), pp. 2-6,
    10.1109/ICCCI.2018.8441286 Google Scholar Jara et al., 2014 A.J. Jara, D. Genoud,
    Y. Bocchi Big data for cyber physical systems an analysis of challenges, solutions
    and opportunities Proceedings - 2014 8th International Conference on Innovative
    Mobile and Internet Services in Ubiquitous Computing, IMIS 2014 (2014), pp. 376-380,
    10.1109/IMIS.2014.139 View in ScopusGoogle Scholar Javeed et al., 2023 D. Javeed,
    M.S. Saeed, I. Ahmad, P. Kumar, A. Jolfaei, M. Tahir An intelligent intrusion
    detection system for smart consumer electronics network IEEE Trans. Consum. Electron.
    (2023), p. 1, 10.1109/TCE.2023.3277856 Google Scholar Jindal and Maini, 2014 S.
    Jindal, R. Maini An efficient technique for detection of flooding and jamming
    attacks in wireless sensor networks Int. J. Comput. Appl. (2014), Article 0975
    Google Scholar Kaspersky-Labs, 2022 Kaspersky-Labs Report on DDoS attacks in Q3-2022
    | securelist https://securelist.com/ddos-report-q3-2022/107860/ (2022), Accessed
    1st Mar 2023 Google Scholar Koroniotis et al., 2019a N. Koroniotis, N. Moustafa,
    E. Sitnikova, B. Turnbull Towards the development of realistic botnet dataset
    in the Internet of things for network forensic analytics: bot-iot dataset Future
    Gener. Comput. Syst., 100 (2019), pp. 779-796, 10.1016/j.future.2019.05.041 View
    PDFView articleView in ScopusGoogle Scholar Koroniotis et al., 2019b N. Koroniotis,
    N. Moustafa, E. Sitnikova, B. Turnbull Towards the development of realistic botnet
    dataset in the Internet of things for network forensic analytics: bot-IoT arXiv:1811.00701
    https://doi.org/10.1016/j.future.2019.05.041 (2019) Google Scholar Kumar et al.,
    2021 P. Kumar, R. Tripathi, G.P. Gupta P2IDF: a privacy-preserving based intrusion
    detection framework for software defined Internet of things-fog (SDIoT-Fog) Adjunct
    Proceedings of the 2021 International Conference on Distributed Computing and
    Networking, ACM (2021), pp. 37-42, 10.1145/3427477.3429989 View in ScopusGoogle
    Scholar Kumar et al., 2023 P. Kumar, R. Kumar, A. Aljuhani, D. Javeed, A. Jolfaei,
    A.K.M.N. Islam Digital twin-driven SDN for smart grid: a deep learning integrated
    blockchain for cybersecurity Sol. Energy, 263 (2023), Article 111921, 10.1016/j.solener.2023.111921
    View PDFView articleView in ScopusGoogle Scholar Kumar et al., 2022 R. Kumar,
    P. Kumar, A. Kumar, A.A. Franklin, A. Jolfaei Blockchain and deep learning for
    cyber threat-hunting in software-defined industrial iot 2022 IEEE International
    Conference on Communications Workshops (ICC Workshops) (2022), pp. 776-781, 10.1109/ICCWorkshops53468.2022.9814706
    View in ScopusGoogle Scholar Kwon and Lim, 2023 M.-S. Kwon, D.-K. Lim A study
    on the optimal design of pma-synrm for electric vehicles combining random forest
    and genetic algorithm IEEE Access, 11 (2023), pp. 52357-52369, 10.1109/ACCESS.2023.3279126
    View in ScopusGoogle Scholar Lashkari, 2016 A.H. Lashkari GitHub - CICFlowMeter:
    CICFlowmeter-V4.0 (formerly known as ISCXFlowMeter) https://github.com/ahlashkari/CICFlowMeter
    (2016), Accessed 20th Apr 2022 Google Scholar Microsoft, 2023 Microsoft Microsoft
    cloud for healthcare https://www.microsoft.com/en-in/industry/health/microsoft-cloud-for-healthcare
    (2023), Accessed 16th Apr 2023 Google Scholar Molina and Jacob, 2018 E. Molina,
    E. Jacob Software-defined networking in cyber-physical systems: a survey Comput.
    Electr. Eng., 66 (2018), pp. 407-419, 10.1016/j.compeleceng.2017.05.013 View PDFView
    articleView in ScopusGoogle Scholar Muñoz et al., 2018 R. Muñoz, R. Vilalta, N.
    Yoshikane, R. Casellas, R. Martínez, T. Tsuritani, I. Morita Integration of IoT,
    transport SDN, and edge/cloud computing for dynamic distribution of IoT analytics
    and efficient use of network resources J. Lightwave Technol., 36 (7) (2018), pp.
    1420-1428, 10.1109/JLT.2018.2800660 View in ScopusGoogle Scholar Nguyen et al.,
    2019 T.G. Nguyen, T.V. Phan, B.T. Nguyen, C. So-In, Z.A. Baig, S. Sanguanpong
    SeArch: a collaborative and intelligent NIDS architecture for SDN-based cloud
    IoT networks IEEE Access, 7 (2019), pp. 107678-107694, 10.1109/ACCESS.2019.2932438
    View in ScopusGoogle Scholar Nimbalkar and Kshirsagar, 2021 P. Nimbalkar, D. Kshirsagar
    Feature selection for intrusion detection system in Internet-of-things (iot) ICT
    Express, 7 (2) (2021), pp. 177-181, 10.1016/j.icte.2021.04.012 View PDFView articleView
    in ScopusGoogle Scholar Özçelik et al., 2017 M. Özçelik, N. Chalabianloo, G. Gür
    Software-defined edge defense against iot-based ddos 2017 IEEE International Conference
    on Computer and Information Technology (CIT), IEEE (2017), pp. 308-313, 10.3390/fi12030044
    View in ScopusGoogle Scholar Patel et al., 2019 N.D. Patel, B.M. Mehtre, R. Wankar
    Simulators, emulators, and test-beds for Internet of things: a comparison Proceedings
    of the 3rd International Conference on I-SMAC IoT in Social, Mobile, Analytics
    and Cloud, I-SMAC 2019 (2019), pp. 139-145, 10.1109/I-SMAC47947.2019.9032519 View
    in ScopusGoogle Scholar Paul et al., 2021 S. Paul, M. Riffat, A. Yasir, M.N. Mahim,
    B.Y. Sharnali, I.T. Naheen, A. Rahman, A. Kulkarni Industry 4.0 applications for
    medical/healthcare services J. Sens. Actuator Netw., 10 (3) (2021), p. 43, 10.3390/jsan10030043
    Google Scholar Priyadarshini et al., 2020 R. Priyadarshini, R. Kumar Barik, H.
    Dubey Fog-sdn: a light mitigation scheme for ddos attack in fog computing framework
    Int. J. Commun. Syst., 33 (9) (2020), Article e4389, 10.1002/dac.4389 View in
    ScopusGoogle Scholar Rai et al., 2016 K. Rai, M.S. Devi, A. Guleria Decision tree
    based algorithm for intrusion detection Int. J. Adv. Netw. Appl., 07 (04) (2016),
    pp. 2828-2834 Google Scholar Research, 2023 G.V. Research Smart healthcare market
    size, share, trends analysis report and segment forecasts, 2022 - 2030 https://www.grandviewresearch.com/industry-analysis/smart-healthcare-market
    (2023), Accessed 16th Apr 2023 Google Scholar Salman et al., 2018 O. Salman, I.
    Elhajj, A. Chehab, A. Kayssi IoT survey: an SDN and fog computing perspective
    Comput. Netw., 143 (2018), pp. 221-246, 10.1016/j.comnet.2018.07.020 View PDFView
    articleView in ScopusGoogle Scholar Sangkatsanee et al., 2011 P. Sangkatsanee,
    N. Wattanapongsakorn, C. Charnsripinyo Practical real-time intrusion detection
    using machine learning approaches Comput. Commun., 34 (18) (2011), pp. 2227-2235,
    10.1016/j.comcom.2011.07.001 View PDFView articleView in ScopusGoogle Scholar
    Sathiyapriya et al., 2023 K. Sathiyapriya, S. Vankadara, K.S. Babu, M. Muralidharan
    Performance comparison of LSTM and XGBOOST for ether price prediction from spam
    filtered tweets 2023 International Conference on Intelligent Systems for Communication,
    IoT and Security (ICISCoIS), IEEE (2023), pp. 650-655, 10.1109/ICISCoIS56541.2023.10100425
    View in ScopusGoogle Scholar Shafiq et al., 2020 M. Shafiq, Z. Tian, A.K. Bashir,
    X. Du, M. Guizani Corrauc: a malicious bot-iot traffic detection method in iot
    network using machine-learning techniques IEEE Int. Things J., 8 (5) (2020), pp.
    3242-3254, 10.1109/JIOT.2020.3002255 Google Scholar Singh et al., 2022 K. Singh,
    L. Kaur, R. Maini A survey of intrusion detection techniques based on negative
    selection algorithm Int. J. Syst. Assur. Eng. Manag., 13 (1) (2022), pp. 175-185,
    10.1007/s13198-021-01357-8 View in ScopusGoogle Scholar Singh et al., 2021 S.
    Singh, S.V. Fernandes, V. Padmanabha, P. Rubini Mcids-multi classifier intrusion
    detection system for iot cyber attack using deep learning algorithm 2021 Third
    International Conference on Intelligent Communication Technologies and Virtual
    Mobile Networks (ICICV) (2021), pp. 354-360, 10.1109/ICICV50876.2021.9388579 View
    in ScopusGoogle Scholar Sivanathan and Gharakheili, 2023 A. Sivanathan, H.H. Gharakheili
    IoT security: UNSW-Sydney IoT dataset https://iotanalytics.unsw.edu.au/index (2023),
    Accessed 16th Apr 2023 Google Scholar Sivanathan et al., 2017 A. Sivanathan, F.
    Loi, H.H. Gharakheili, V. Sivaraman Experimental evaluation of cybersecurity threats
    to the smart-home 2017 IEEE International Conference on Advanced Networks and
    Telecommunications Systems (ANTS) (2017), pp. 1-6, 10.1109/ANTS.2017.8384143 View
    in ScopusGoogle Scholar Sivanathan et al., 2019 A. Sivanathan, H.H. Gharakheili,
    F. Loi, A. Radford, C. Wijenayake, A. Vishwanath, V. Sivaraman Classifying iot
    devices in smart environments using network traffic characteristics IEEE Trans.
    Mob. Comput., 18 (8) (2019), pp. 1745-1759, 10.1109/TMC.2018.2866249 View in ScopusGoogle
    Scholar Sivanathan et al., 2020 A. Sivanathan, H. Habibi Gharakheili, V. Sivaraman
    Managing iot cyber-security using programmable telemetry and machine learning
    IEEE Trans. Netw. Serv. Manag., 17 (1) (2020), pp. 60-74, 10.1109/TNSM.2020.2971213
    View in ScopusGoogle Scholar Snehi and Bhandari, 2021a M. Snehi, A. Bhandari Vulnerability
    retrospection of security solutions for software-defined cyber–physical system
    against ddos and iot-ddos attacks Comput. Sci. Rev., 40 (2021), Article 100371,
    10.1016/j.cosrev.2021.100371 View PDFView articleView in ScopusGoogle Scholar
    Snehi and Bhandari, 2021b M. Snehi, A. Bhandari Apprehending mirai botnet philosophy
    and smart learning models for iot-ddos detection 2021 8th International Conference
    on Computing for Sustainable Global Development (INDIACom) (2021), pp. 501-505
    View in ScopusGoogle Scholar Snehi and Bhandari, 2021c M. Snehi, A. Bhandari An
    sdn/nfv based intelligent fog architecture for ddos defense in cyber physical
    systems 2021 10th International Conference on System Modeling & Advancement in
    Research Trends (SMART) (2021), pp. 229-234, 10.1109/SMART52563.2021.9676241 View
    in ScopusGoogle Scholar Snehi and Bhandari, 2021d M. Snehi, A. Bhandari Empirical
    investigation of iot traffic in smart environments: characteristics, research
    gaps and recommendations 2021 10th International Conference on System Modeling
    & Advancement in Research Trends (SMART) (2021), pp. 176-181, 10.1109/SMART52563.2021.9676298
    Google Scholar Snehi and Bhandari, 2022 M. Snehi, A. Bhandari A novel distributed
    stack ensembled meta-learning-based optimized classification framework for real-time
    prolific IoT traffic streams Arab. J. Sci. Eng. (2022), pp. 2191-4281, 10.1007/s13369-021-06472-z
    Google Scholar Tahsien et al., 2020 S.M. Tahsien, H. Karimipour, P. Spachos Machine
    learning based solutions for security of Internet of things (iot): a survey J.
    Netw. Comput. Appl., 161 (2020), Article 102630, 10.1016/j.jnca.2020.102630 View
    PDFView articleView in ScopusGoogle Scholar Tama et al., 2020 B.A. Tama, L. Nkenyereye,
    S.M. Islam, K.S. Kwak An enhanced anomaly detection in web traffic using a stack
    of classifier ensemble IEEE Access, 8 (2020), pp. 24120-24134, 10.1109/ACCESS.2020.2969428
    View in ScopusGoogle Scholar Ullah et al., 2009 S. Ullah, P. Khan, N. Ullah, S.
    Saleem, H. Higgins, K. Sup Kwak A review of wireless body area networks for medical
    applications Int. J. Commun. Netw. Syst. Sci., 02 (08) (2009), pp. 797-803, 10.4236/ijcns.2009.28093
    Google Scholar Venters and Whitley, 2012 W. Venters, E.A. Whitley A critical review
    of cloud computing: researching desires and realities J. Inf. Technol., 27 (3)
    (2012), pp. 179-197, 10.1057/jit.2012.17 View in ScopusGoogle Scholar Verma et
    al., 2020 J. Verma, A. Bhandari, G. Singh Review of existing data sets for network
    intrusion detection system Adv. Math., Sci. J., 9 (6) (2020), pp. 3849-3854 CrossRefView
    in ScopusGoogle Scholar Verma et al., 2021 J. Verma, A. Bhandari, G. Singh A meta-analysis
    of role of network intrusion detection systems in confronting network attacks
    2021 8th International Conference on Computing for Sustainable Global Development
    (INDIACom) (2021), pp. 506-511 View in ScopusGoogle Scholar Virk and Maini, 2023
    I.S. Virk, R. Maini Multiclass classification of prostate cancer Gleason grades
    groups using features of multi parametric-mri (mp-mri) images by applying machine
    learning techniques 2023 International Conference on Artificial Intelligence and
    Smart Communication (AISC) (2023), pp. 954-958, 10.1109/AISC56616.2023.10085270
    View in ScopusGoogle Scholar Wadhawan and Maini, 2022 S. Wadhawan, R. Maini Etcd:
    an effective machine learning based technique for cardiac disease prediction with
    optimal feature subset selection Knowl.-Based Syst., 255 (2022), Article 109709,
    10.1016/j.knosys.2022.109709 View PDFView articleView in ScopusGoogle Scholar
    Wani and Revathi, 2020 A. Wani, S. Revathi Ddos detection and alleviation in iot
    using sdn (sdiot-ddos-da) J. Inst. Eng. (India), Ser. B, 101 (2) (2020), pp. 117-128,
    10.1007/s40031-020-00442-z View in ScopusGoogle Scholar Yuki et al., 2020 K. Yuki,
    M. Fujiogi, S. Koutsogiannaki Covid-19 pathophysiology: a review Clin. Immunol.,
    215 (2020), Article 108427, 10.1007/s11276-019-02043-1 View PDFView articleView
    in ScopusGoogle Scholar Zarpelão et al., 2017 B.B. Zarpelão, R.S. Miani, C.T.
    Kawakani, S.C. de Alvarenga A survey of intrusion detection in Internet of things
    J. Netw. Comput. Appl., 84 (2017), pp. 25-37, 10.1016/j.jnca.2017.02.009 View
    PDFView articleView in ScopusGoogle Scholar Zhang et al., 2018 B. Zhang, Y. Yu,
    J. Li Network intrusion detection based on stacked sparse autoencoder and binary
    tree ensemble method 2018 IEEE International Conference on Communications Workshops,
    ICC Workshops 2018 - Proceedings (2018), pp. 1-6, 10.1109/ICCW.2018.8403759 Google
    Scholar Zhou et al., 2019 L. Zhou, H. Guo, G. Deng A fog computing based approach
    to ddos mitigation in iiot systems Comput. Secur., 85 (2019), pp. 51-62, 10.1016/j.cose.2019.04.017
    View PDFView articleView in ScopusGoogle Scholar Zoppi et al., 2021 T. Zoppi,
    A. Ceccarelli, A. Bondavalli Unsupervised algorithms to detect zero-day attacks:
    strategy and application IEEE Access, 9 (2021), pp. 90603-90615, 10.1109/ACCESS.2021.3090957
    View in ScopusGoogle Scholar Cited by (0) Dr. Manish Snehi received his Bachelor
    Degree (B.Tech.) from Kurukshetra University, Kurukshetra, India with specialization
    in Computer Engineering in 2002 and Master Degree (MS) in Software Systems from
    Birla Institute of Technology and Science (BITS), Pilani, Rajasthan, India in
    2005. He completed his doctoral degree in Computer Engineering (Ph.D.) from Punjabi
    University, Patiala, Punjab, India. He has 21 years of professional experience
    in Smart Healthcare, Internet of Things, Cyber Security, and Remote Device Management
    domains. Presently, he is working as a Senior Technology Architect in the department
    of Engineering Services in Infosys Limited, Chandigarh, India. He can be reached
    at: snehi.manish@outlook.com. Dr. Abhinav Bhandari was born on 20 April 1979.
    He received his Bachelor''s Degree (B.Tech.) from GTBKIET, Malout, Punjab Technical
    University, Jalandhar with specialization in Computer Science & Engineering in
    2001. He received his Master''s Degree (MTech.) from DAVIET Jalandhar, in 2008.
    His professional experience includes the teaching as Lecturer, Assistant Professor
    and Head, Department of Electronics Engineering at L.L.R.I.E.T. Moga. Presently,
    he is working as an Assistant Professor in Department of Computer Science and
    Engineering at Punjabi University, Patiala (PB) India. His fields of special interest
    include Computer Networks, Network Security, DDoS attacks defense. He has registered
    for his Ph.D. Degree from Dr. B. R Ambedkar National Institute of Technology,
    Jalandhar, (PB) India). He can be reached at: abhinavbhandari@pbi.ac.in. Ms. Jyoti
    Verma holds an M. Tech in Computer Science and Engineering from Dr. B.R Ambedkar
    NIT, Jalandhar, India. She obtained her bachelor''s degree (B. Tech) in Computer
    Engineering from Kurukshetra University, India, in 2002. Jyoti has more than 15
    years of experience in teaching. She worked as Assistant Professor at Chitkara
    University, Punjab, India, and Lingaya''s University, Haryana, India. Jyoti is
    pursuing her doctoral degree (Ph.D.) in Computer Engineering from Punjabi University,
    Patiala, India. Her research work has been widely recognized, and she has published
    several papers in top-tier peer-reviewed journals. Jyoti has also edited technical
    books and served as a reviewer for several journals. She holds several patents
    in cross-functional domains, demonstrating her ability to bring innovative ideas
    to fruition. View Abstract © 2024 Elsevier Ltd. All rights reserved. Recommended
    articles XRan: Explainable deep learning-based ransomware detection using dynamic
    analysis Computers & Security, Volume 139, 2024, Article 103703 Sibel Gulmez,
    …, Ibrahim Sogukpinar View PDF Improving adversarial transferability through hybrid
    augmentation Computers & Security, Volume 139, 2024, Article 103674 Peican Zhu,
    …, Xingyu Li View PDF GAPBAS: Genetic algorithm-based privacy budget allocation
    strategy in differential privacy K-means clustering algorithm Computers & Security,
    Volume 139, 2024, Article 103697 Yong Li, …, Ming Liu View PDF Show 3 more articles
    Article Metrics Captures Readers: 12 View details About ScienceDirect Remote access
    Shopping cart Advertise Contact and support Terms and conditions Privacy policy
    Cookies are used by this site. Cookie settings | Your Privacy Choices All content
    on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Computers and Security
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'Foggier skies, clearer clouds: A real-time IoT-DDoS attack mitigation framework
    in fog-assisted software-defined cyber-physical systems'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Song Y.
  - Bi J.
  - Wang X.
  citation_count: '0'
  description: In the context of population growth and limited resources, the efficiency
    and sustainability of agricultural production became particularly important. Smart
    agricultural technology and Internet of Things (IoT) technology have helped farmers
    with better management tools to improve crop yield and quality. This research
    takes the IoT as the core and combines sensor, actuator and cloud platform technologies
    to build a smart greenhouse control system. Environmental parameters such as temperature,
    humidity, and light are obtained through sensors. And it is uploaded to the cloud
    platform for storage and analysis. At the same time, light, ventilation, water,
    and fertilizer inside the greenhouse are controlled automatically by our system
    to achieve the best crop growth condition. System design adopts a modular design
    concept. We separately realize the functions of sensor, actuator and cloud platform,
    where data is transmitted via wireless communication and integrated together.
    The experimental results show that the cloud control system of smart agricultural
    greenhouse can effectively monitor the greenhouse environment, optimize efficiency
    of energy and resource utilization, and help farmers manage greenhouse conveniently
    and quickly.
  doi: 10.1016/j.iot.2023.101029
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Highlights Abstract Graphical abstract Keywords 1. Introduction 2. Related
    work 3. Components used in the proposed system 4. Architecture and implementation
    5. Experimental results 6. Conclusions and future research work CRediT authorship
    contribution statement Declaration of competing interest Acknowledgments Data
    availability References Show full outline Figures (9) Show 3 more figures Tables
    (3) Table 1 Table 2 Table 3 Internet of Things Volume 25, April 2024, 101029 Design
    and implementation of intelligent monitoring system for agricultural environment
    in IoT Author links open overlay panel Yongchao Song, Jiping Bi, Xuan Wang Show
    more Add to Mendeley Share Cite https://doi.org/10.1016/j.iot.2023.101029 Get
    rights and content Highlights • Designing control systems in an Internet of Things
    way. • Build the system in a modular combination. • Control in the cloud with
    the help of the Internet. • Farmers can easily remotely manage their greenhouses.
    Abstract In the context of population growth and limited resources, the efficiency
    and sustainability of agricultural production became particularly important. Smart
    agricultural technology and Internet of Things (IoT) technology have helped farmers
    with better management tools to improve crop yield and quality. This research
    takes the IoT as the core and combines sensor, actuator and cloud platform technologies
    to build a smart greenhouse control system. Environmental parameters such as temperature,
    humidity, and light are obtained through sensors. And it is uploaded to the cloud
    platform for storage and analysis. At the same time, light, ventilation, water,
    and fertilizer inside the greenhouse are controlled automatically by our system
    to achieve the best crop growth condition. System design adopts a modular design
    concept. We separately realize the functions of sensor, actuator and cloud platform,
    where data is transmitted via wireless communication and integrated together.
    The experimental results show that the cloud control system of smart agricultural
    greenhouse can effectively monitor the greenhouse environment, optimize efficiency
    of energy and resource utilization, and help farmers manage greenhouse conveniently
    and quickly. Graphical abstract Download : Download high-res image (379KB) Download
    : Download full-size image Previous article in issue Next article in issue Keywords
    Smart agricultureIoTCloud platformGreenhouse controlSTM32 1. Introduction Smart
    agriculture is an agricultural development mode that uses modern science and technology
    to improve agricultural production efficiency and reduce resource waste. With
    the growth of the global population and the impact of climate change, traditional
    agriculture is facing many challenges such as land scarcity, water scarcity, and
    environmental pollution. Under this background, smart agriculture emerge as the
    times require. It achieves precise management and intelligent decision-making
    in agriculture through applying advanced sensing technology, cloud computing and
    IoT [1]. Greenhouse agriculture is one of the most important. Greenhouses provide
    controlled environmental conditions that allow plants to grow at any time of the
    day or night. At present, the application of IoT in agricultural greenhouse management
    has become a hotspot of human attention. It has changed traditional agriculture
    which is limited by many factors such as natural environment, geographical location,
    and climate. Smart greenhouse control system can realize the development and application
    of smart agriculture. It can monitor and control aspects such as light, water
    flow, inlet pipe pressure, supply voltage, ground temperature and humidity, air
    temperature and humidity, and so on, in order to improve the agricultural production
    efficiency of greenhouse [2]. However, there are still some problems in current
    greenhouse agriculture. Since environmental parameter in greenhouse is usually
    set by human, such as temperature, humidity, light and so on. Therefore it is
    unable to accurately monitor and manage the environment and crop growth. In addition,
    productivity is affected by seasonal and weather conditions that limit greenhouse
    crop growth [3]. The Smart Agriculture Greenhouse Cloud Control System is designed
    to solve these problems in an IoT way, as shown in Fig. 1. Based on IoT technology,
    the sensor network can monitor environmental parameters and crop cultivation inside
    and outside greenhouse in real time. And it transmits these data to the cloud
    platform for processing. Cloud computing and big data analytics can generate appropriate
    control strategies on cloud platform based on crop needs and growth patterns.
    The cloud platform sends commands through control equipment, thus adjusting temperature,
    humidity, carbon dioxide and other environmental parameters in the greenhouse,
    eventually realizing precise control of crop growth environment [4]. In this way,
    crop yield can be maximized, resource use can be improved, energy consumption
    can be reduced, and stability in crop production and quality can be ensured. Therefore,
    it is an ideal solution to solve problems and difficulties of current greenhouse
    grow systems by creating a cloud-based smart greenhouse control system. It achieves
    precise monitor and control of the environment inside and outside greenhouse and
    the growth of crops through applying advanced information technology. And it improves
    resource utilization efficiency, optimizes production management, and improves
    crop yield and quality. Smart agricultural greenhouse cloud control system can
    bring high economic benefits to farmers, reduce environmental harm and promote
    sustainable development of agriculture [5]. This paper aims to design a smart
    agricultural greenhouse cloud control system based on IOT to achieve the above
    objectives. The system workflow is as follows. Firstly, environmental data be
    collected by STM32 microcontroller, wireless communication module, sensors and
    other devices. Then, ESP8266 WiFi module transmits the data to AliCloud’s interface,
    and these data are visualized on the cloud. Finally, the user can connect to the
    cloud by cell phone or computer to view greenhouse environmental conditions in
    real time. Through the above research methodology and experimental design, we
    hope to derive the effect of smart agriculture greenhouse cloud control system
    to improve greenhouse agricultural production efficiency, save energy, change
    crops growth environment and other aspects. It provides a useful reference for
    the development of IoT and smart agriculture. Download : Download high-res image
    (1MB) Download : Download full-size image Fig. 1. Smart agriculture greenhouse.
    The remainder of the paper is organized as follows: Section 2 highlights related
    work that has been done and is in progress in the area of greenhouse control.
    Section 3 discusses the various components used in the proposed system. Section
    4 describes the architecture and implementation of the system. Experimental results
    of the proposed work are given in Section 5. Section 6 discusses the conclusions
    and future scope. 2. Related work Smart greenhouse control is a very interesting
    research topic and researchers have been working on smart control systems for
    agricultural greenhouses. This section gives a brief description of existing solutions
    for developing the smart control of greenhouses. At present, designing and developing
    control systems by using IoT, has become a trend in the application of agricultural
    greenhouse management technology. It changes the situation of traditional agriculture,
    which is constrained by a variety of factors, including the natural environment,
    geography and climate. People have designed smart control system applications
    through IoT. It effectively improves environmental conditions inside greenhouse,
    which includes temperature, humidity, light intensity and carbon dioxide concentration,
    and other factors. So it has positive significance for improving crop yield and
    quality [6]. IoT agricultural greenhouse measurement and control technology can
    realize the automatic detection of agricultural area information. For example,
    we can set up wireless sensor nodes, information collection devices, information
    routing devices, solar power supply system and wireless sensor transmission system.
    In this way, we can monitor parameters such as soil moisture, soil temperature,
    air humidity, temperature, light intensity and plant nutrient content [7]. Where
    the wireless sensor aggregation nodes are created through IoT [8]. The system
    dynamically manages, displays, analyzes and processes the greenhouse’s environmental
    factors and provides visualization graphs for the farmer. Depending on crop need,
    system provides information about various text, sound and light alarms. IoT greenhouse
    smart measurement and control system realizes automatic operation of the greenhouse.
    It not only reduces energy consumption and operating costs, but also provides
    an ideal growth environment for plants. In addition it reduces people’s work intensity
    and improves equipment utilization. It also improves greenhouse climate, reduces
    pests and diseases, and increases crop yields [9]. Greenhouse farms still face
    many challenges in terms of efficient operation and management. Continuously evolving
    IoT technology, including smart sensor, device, network topology, big data analytic,
    and smart decision-making, is recognized as a solution to solve major challenges
    in greenhouse agriculture. For example, it is used in greenhouse local climate
    control, crop growth monitoring and crop reaping [10]. With agricultural informatization
    level constantly improving, Chinese greenhouse smart measurement and control system
    has made great progress in terms of technology and scale. However, we still have
    a big gap in the field of smart greenhouse control compared with developed countries,
    especially in production stability control, modernization and industrialization
    of supporting facilities [11]. Overseas greenhouses often use automatic control
    system to monitor and control greenhouse environments. These systems usually include
    sensor, actuator and controller. Sensor is used to monitor environmental parameters
    such as temperature, humidity and light. Controller sends commands to make devices
    such as ventilation and irrigation work to keep ideal environmental conditions
    in the greenhouse. Control methods use advanced control techniques, including
    fuzzy control, model predictive control, neural network control and adaptive control.
    Besides, it uses physical model-based control, state feedback control and control
    methods based on optimal control theory. They are all well known in improving
    greenhouse crop production performance, and these control technologies usually
    have strong data analysis and decision support capabilities. It collects and analyzes
    data about the greenhouse environment and plant growth. Based on the data, the
    system is able to provide accurate decision support and optimize management strategy
    [12]. In contrast, China’s greenhouse control has just started, and most of greenhouses
    are manually operated. There are fewer control methods, only traditional PID control,
    fuzzy control, neural network control and so on. Greenhouse data analysis and
    decision support levels are relatively low, and there is still much improvement
    space [13]. However, Chinese greenhouse control systems can be better adapted
    to need and actual situation of local agriculture. Since local agricultural organization
    and crop characteristics are different from other countries, China’s greenhouse
    control system is closer to the needs of domestic agriculture in terms of design
    and functionality. So it can provide more personalized and precise control strategies
    and technical solutions [14]. China is a vast country, farmers are relatively
    conservative in their thinking, and it is difficult to unify the standards of
    the agricultural industry chain. As a result, there are difficulties in collecting,
    analyzing, integrating and sharing information resources. In terms of agricultural
    production, small farmers are the majority. That is why it is difficult to unify
    scale, mechanization and systematization. The cultural level of farmers is generally
    low, so that the promotion of smart technologies and ecological concepts is not
    progressing fast enough. In addition smart agricultural technology development
    has three major contradictions and problems: resource environment, science and
    technology shortcomings, and institutional deficiencies [15]. In traditional greenhouse,
    climatic variables and other growth methods depend on the grower’s assessment.
    But smart greenhouse growing is a closed growing process where greenhouse is managed
    through information and communication technology (ICT). It improves quality and
    quantity of crops and minimizes human participation [16]. Emerging IoT technology
    offers huge potential to develop innovative approaches and smart solutions that
    can change the agriculture sector in every way. Therefore, combining IoT with
    greenhouse and transforming them into smart automatic greenhouse is considered
    as one of the most ideal solutions [17]. When the IoT started to emerge, some
    people started to research smart greenhouse. Li et al. [18] have proposed an agricultural
    greenhouse environment monitoring system based on IOT, combining the Internet,
    wireless networks, and mobile. It realizes remote real-time monitoring of greenhouse
    environmental information. The implementation method is as follows. Through ZigBee
    protocol, a wireless sensor network was built for collecting environmental information
    such as temperature and humidity. Finally, the collected environmental information
    was accessed to the Internet and mobile network through the control center, which
    realized the SMS heating and real-time monitoring of agricultural environmental
    information. However, when a text message is received, it cannot be immediately
    controlled accordingly. Such as when the temperature is too high, the vent opening
    size cannot be regulated immediately. Ahmad et al. [19] have proposed a method
    for greenhouse management and monitoring using Memsic and Zigbee technology. The
    system can monitor soil temperature and humidity, air temperature, and light radiation.
    All sensors are able to collect data from the greenhouse and send it to the microcontroller
    on a regular basis. Data is sent from transmitter to the receiver and displayed
    on a device such as smartphone, laptop or PDA. It uses MP Lab and LabView softwares
    in programming and interfacing process. Although the system can monitor the growing
    environment of the greenhouse through the device, it cannot control greenhouse
    remotely. With the development of IoT, more and more programs are proposed. Cao
    et al. [20] proposed a wireless agricultural monitoring platform by Mesh Wi-Fi
    network. The system consists of a root node, three relays and six nodes. Each
    node has three sensors for measuring parameters, including soil moisture and soil
    temperature, ambient temperature and ambient humidity of the farm, and light intensity.
    The collected data is transferred from the node to the root node, then updated
    to the cloud database and displayed on the dashboard. The MEAN stack-based site
    will create real-time information tracking and keep historical data for the owner.
    However, the system does not have a complete cloud-based platform, so it cannot
    remotely control greenhouse operations by Internet. The system built through wireless
    sensor networks and cloud platforms works extremely well. Ping et al. [21] have
    proposed an IoT and ARM-based framework for soil moisture control and irrigation
    management. In this system, the values obtained by the sensors are stored on a
    cloud server and necessary suggestions are provided over the web. When the ground
    temperature is high and soil moisture is low, an automatic irrigation system is
    triggered and the user is also notified by email. Users can easily monitor the
    irrigation system through the cloud server and mobile web application. Jing et
    al. [22] have proposed a distributed agricultural service system that integrates
    social and physical information in order to provide decision support from farmers.
    The system uses wireless sensor networks, cloud computing, and distributed systems
    architecture to manage people, plots, crops, and equipment. Services include crop
    planning, production guidance, and equipment control. User terminals include computers,
    mobile applications and applets. 3. Components used in the proposed system The
    composition of a control system needs to have controller, sensor, actuator, controlled
    object. In addition, it also needs communication module, display module and so
    on. They work together to form a perfect control system. The proposed system provides
    a cost-effective solution for detecting environmental conditions in greenhouses,
    which can be controlled automatically or manually remotely through the Internet.
    According to the current price, accuracy, and ease of use of controllers and sensors;
    the applicability and difficulty of compiling software; and the price and applicability
    of cloud platforms, we choose following components. But users can choose higher
    accuracy sensors or faster speed controllers depending on the specific use situation,
    which of course means a higher price. 3.1. STM32F407ZGT6 microcontroller The STM32F407ZGT6
    is a microcontroller unit based on a high-performance ARM Cortex-M4 32-bit RISC
    core operating at up to 168MHz. Cortex-M4 core has a floating point unit (FPU)
    single precision and supports all ARM single-precision data-processing instructions
    and data types [23]. It also implements a full set of DSP instructions and a memory
    protection unit (MPU) for enhanced application security. It offers three 12-bit
    ADCs, two DACs, a low-power RTC, twelve general-purpose 16-bit timers, including
    two PWM timers for motor control, and two general-purpose 32-bit timers. 3.2.
    Beidou/GPS module ATK-1218-BD The ATK-S1216F8-BD is a high-performance GPS/BeiDou
    dual-mode positioning module [24]. The microcontroller can communicate with the
    module through the serial port to get information, which include latitude, longitude,
    altitude, speed, positioning mode, number of satellites used for positioning,
    number of visible satellites, and UTC date and time of the module’s location.
    The RTCM standardized protocol for GPS navigation devices is described in Table
    1. Table 1. NMEA-0183 common command table. No Command Description Maximum frame
    length 1 $GPGGA GPS location information 72 2 $GPGSA Current satellite information
    65 3 $GPGSV Visible satellite information 210 4 $GPRMC Recommended positioning
    information 70 5 $GPVTG Ground speed information 34 6 $GPGLL Geodetic coordinate
    information – 7 $GPZDA Current time (UTC1) informationr – 3.3. Wind cup wind speed
    sensor The sensing part of the wind speed sensor is formed by three conical or
    hemispherical empty cups [25]. Three hemispherical or conical hollow cup shells
    are fixed to a trident star-shaped bracket at to each other or to a cross-shaped
    bracket at to each other. The bracket made of plastic or alloy. The inductive
    part is connected to an engine. The empty cup rotates, driving the engine rotor
    to produce current. When the rotor is faster, the current is higher and the voltage
    at the ends of the generator is higher. The wind speed sensor is connected to
    the microcontroller through a connecting wire, which is used to measure the voltage
    across the sensor and then obtain the actual wind speed. Based on the wind speed,
    the wind level at that time is obtained through a self-writing program. The wind
    speed sensor output voltage signal and wind speed calculation formula is shown
    in Eq. (1): (1) where means wind speed in , means voltage in . 3.4. Raindrop sensor
    The sensor is made of high-quality FR-04 double-sided material with a large area
    of , and its surface is treated with nickel-plating technology [26]. Therefore,
    the module has excellent performance in terms of oxidation resistance, electrical
    conductivity, and longevity. In addition, the module is capable of data transfer
    via digital and analog. 3.5. DHT11 temperature and humidity sensor The DHT11 is
    an integrated temperature and humidity sensor that includes a moisture-measuring
    element and a temperature-measuring element [27]. The communication method between
    the DHT11 and the microcontroller is single bus communication, so that only one
    data line is required to achieve communication with the microcontroller. In addition,
    the DHT11 has very low power consumption. When the operating voltage is 5 , the
    average maximum current is 0.5 . 3.6. BH1750FVI digital illuminance sensor The
    BH1750FVI digital illuminance sensor module is a digital integrated circuit for
    serial bus interface. It uses the IIC communication protocol, operates on DC5
    , and its input illumination range is from 1 to 65 535 [28]. 3.7. SGP30 gas sensor
    The SGP30 is a gas sensor that provides detailed information on actual air quality
    level or concentration, such as ppm for airborne CO and actual level of volatile
    organic compound [29]. The module has excellent long-term stability, resistance
    to contamination caused by silicone, TVOC output, and H2-based CO equivalent output.
    3.8. Wireless communication module NRF24L01 The NRF24L01 is a wireless communication
    module with FSK modulation and NORDIC Enhanced Short Burst Protocol. It supports
    point-to-point or point-to-multipoint wireless communication up to six nodes.
    The communication band is 2.4G, and the communication rate is up to 2 Mbps. The
    module adopts the highly efficient GFSK modulation method, which has strong anti-interference
    ability. It can realize the requirements of multipoint or specific frequency modulation
    communication in 126 selectable channels. The features and benefits of the module
    are summed up below: • Long wireless communication range. The NRF24L01 module
    supports the 2.4 GHz ISM band. It has adjustable communication range that can
    reach about 100 m in the best case. • Reliable and stable. NRF24L01 module adopts
    frequency hopping technology. It has strong anti-interference and stability performance.
    It can keep excellent communication quality in complex wireless environment. •
    Fast response time. The NRF24L01 module has fast switching times and transmission
    rates up to 2 Mbps. Thus, it is well adapted for real-time data transmission and
    applications that requires fast response times. • Multinode communication. The
    NRF24L01 module supports multinode network communication. It can achieve communication
    modes of point-to-point, point-to-multipoint and multipoint-to-multipoint. As
    a result, it can flexibly adapt to the needs of various communication topologies.
    • Simple interface. NRF24L01 module connects to the microcontroller with simple
    interface that uses SPI communication protocol. Therefore small number of I/O
    pins can realize communication with external controller. • Cost-effective. The
    NRF24L01 module offers excellent performance and price ratio. It is one of the
    cost-effective wireless communication solutions for many IoT and embedded applications.
    Although 2.4 GHz frequency wireless communication has high penetration power,
    the communication distance is relatively short. In practical applications, when
    communication distance exceeds 100 m, it may encounter problem that data cannot
    be reliably received. For longer communication distances, LORA communication module
    with 433 MHz frequency can be considered as an alternative to NRF24L01. LORA technology
    has a larger communication range that can reach several kilometers or even farther.
    However, it is important to note that as an alternative, LORA communication module
    can be more expensive, it costs three times as much as NRF24L01. 3.9. ATK-ESP8266
    WiFi module The ATK-ESP8266 is a high-performance UART-WiFi module [30]. The communication
    modes are as follows. ATK-ESP8266 module communicates data with a microcontroller
    through serial port communication and can realize transformation between serial
    port and WiFi. After configuring the serial port, this module can transmit data
    through the network. For example, when the module is configured with relevant
    parameters through AT commands, it can connect to WiFi. After that it can connect
    to the cloud based on domain name, protocol of the cloud platform. In addition
    the selected ESP8266 module can be replaced by 4G DTU in case of higher requirements.
    But the price is several times of ESP8266. 3.10. TFTLCD screen TFTLCD, also called
    Thin-Film Transistor Liquid-Crystal Display, is a flat panel display made using
    thin-film transistor technology and liquid crystal display technology. It consists
    of thin-film transistor array, liquid crystal material layer, color filter layer
    and backlight. The liquid crystal display (LCD) has a thin-film transistor (TFT)
    set on each pixel. Which can effectively avoid crosstalk during non-selective,
    and make the static characteristics of LCD independent of the number of scanning
    lines. Thus the image quality is greatly improved. TFTLCD has the following characteristics:
    high resolution, good color performance, wide viewing angle, fast response time,
    low power consumption. We chose the size of 7-inch screen, which resolution is
    800 × 480, with 16-bit true color display. 3.11. Keil5 development software Keil5
    is an embedded system development tool. It provides a complete programming environment.
    It includes code editor, debugger, compiler, emulator and downloader. In addition,
    it supports many different microcontroller architectures such as ARM, Cortex-M
    and 8051. All in all, Keil5 is a powerful, easy to use embedded software development
    tool that helps developers quickly build high quality embedded systems. 3.12.
    AliCloud IoT platform AliCloud IoT platform is an Internet-based IoT solution
    provided by AliCloud. It provides a series of technologies and tools, and it supports
    the access, management and data interaction of IoT devices. It is widely used
    in the field of IoT and can support IoT applications in a variety of fields such
    as smart home, smart industry, and smart transportation. Users can realize a variety
    of business needs, such as device interconnection, data sharing, intelligent analysis,
    and so on, through the AliCloud IoT platform. Which effectively improves the intelligence
    and sustainability of IoT applications. 4. Architecture and implementation The
    architecture of the proposed system is shown in Fig. 2. It consists of four parts:
    sensor acquisition control network, network transmitter, application platform,
    and greenhouse equipment management. Sensor acquisition control network collects
    the environmental information in real time; BeiDou/GPS module performs the location
    positioning; TFTLCD screen displays the collected data, latitude, longitude, time
    and other information in real time [31]. The wireless communication module is
    responsible for information interaction with the network transmitter [32]. Network
    Transmitter’s role is sending the environmental information collected by the received
    sensors to the cloud through the ESP8266WiFi module. These information processed
    and stored in the database. Sensor acquisition control network and network transmitter
    systems use hardware as shown in Table 2. The application platform is built on
    AliCloud IoT platform [33]. After building the project and connecting the devices,
    we create various physical models and display the data on the cloud platform.
    Through data communication and information interaction, visualization platform
    is constructed on the AliCloud platform. It includes a Web-side visualization
    platform and a mobile-side visualization platform. We can access the Internet
    through a computer or cell phone, thus enabling automatic control the various
    agricultural equipment in the greenhouse. Sensor acquisition control network.
    The STM32F407ZGT6 is used as the main controller to obtain the air temperature
    and air humidity inside and outside the greenhouse through the DHT11 temperature
    and humidity sensor, get the light intensity inside the greenhouse through the
    BH1750FVI digital illuminance sensor, get the carbon dioxide concentration inside
    the greenhouse through the SGP30 gas sensor, get the temperature and humidity
    of the soil in the greenhouse through the soil temperature and humidity sensor,
    get the wind speed outside the greenhouse through the wind speed sensor, and get
    the rainfall outside the greenhouse through the rainfall sensor [34]. At the same
    time combined with BeiDou/GPS module for location positioning. The information
    obtained after comprehensive processing is displayed on TFTLCD liquid crystal
    display [35]. Through the NRF24L01 wireless communication module, the collected
    data are sent to the network transmitter according to the specified communication
    mode, communication address, and communication band [36]. Download : Download
    high-res image (623KB) Download : Download full-size image Fig. 2. Overall structural
    design of the system. Right: Sensor Acquisition Control Network, which collects
    information about various environments. Bottom left: Equipment Management, which
    represents the agricultural equipment in the greenhouse. Middle left: Network
    Transmitter, which receives information from the greenhouse and sends it to the
    cloud platform. Upper left: Application Platform, which detects and controls the
    greenhouse system. Network transmitter. The network transmitter uses the STM32F103RCT6
    microcontroller as the main controller. In the environment with network, the ESP8266
    module can automatically connect to the network and AliCloud platform after the
    microcontroller is power on. The wireless communication module receives the data
    which is sent from the sensor acquisition and control network, and then it is
    sent to AliCloud through the ESP8266 module. The working condition is displayed
    on the OLED screen. Application platform. First of all, we need to write C program
    by keil5 software. That is, according to the information of ESP8266, we write
    AT command suitable for UART serial port. Then, microcontroller makes use of the
    serial port to communicate with ESP8266 module. The purpose is make the ESP8266
    module connect to Aliyun by successively receiving a reset command, a mode setting
    command, a WiFi connection command, and a connect to Aliyun domain name command.
    After that, microcontroller sends topic subscription through MQTT protocol. ESP8266
    connects through the Internet and sends relevant data according to MQTT protocol.
    AliCloud performs JSON data parse to communicate between ESP8266 and cloud. AliCloud
    distributes the data through data transfer protocol so that server gets a series
    of data streams. As a result, internal servers such as Web server are able to
    perform display and control operations based on the constructed visualization
    platform. Finally, we inserted component models on the visualization platform
    to connect physical devices and uploaded data. Table 2. Hardware required for
    sensor acquisition network and network transmission. Equipment Number Function
    STM32F407ZGT6 1 The device is the controller as the core of the entire sensor
    network TFTLCD 1 Display of collected data and other information Beidou/GPS Module
    ATK-1218-BD 1 For positional localization Wind cup wind speed sensor 1 Measuring
    phoenix speed Raindrop sensor 1 For sensing rain DHT11 temperature and humidity
    sensor 2 Detecting temperature and humidity inside and outside the house BH1750FVI
    digital illuminance sensor 1 Detecting light intensity in the greenhouse SGP30
    gas sensor 1 Detecting carbon dioxide concentration in the greenhouse DS18B20
    temperature sensor 1 Detecting soil temperature Soil moisture sensor 1 Detecting
    soil humidity Wireless communication module NRF24L01 1 Wireless communication
    for the system STM32F103RCT6 1 The device is a controller that serves as the core
    of the network transmitter ATK-ESP8266 WiFi module 1 Connects to the network and
    uploads data OLED screen 1 Displays the status of the network transmitter Network
    data big screen control is usually used in larger scale data monitor and display
    scene. For complex data management and control need, big screen control can provide
    better operation experience and detail display. In contrast, the mobile control
    is less, screen size is limited, display of information and charts is relatively
    small. The big data screen in cloud control is usually fixed operation site. While
    mobile control has greater flexibility and portability. Users can monitor and
    control through mobile phones anywhere and anytime. According to specific use
    scenario and need, users can choose the control method that suits them. Greenhouse
    equipment management. First of all, the various agricultural equipment in the
    greenhouse needs to be networked with wireless devices in the 2.4G band, so that
    it can communicate with the network transmitter. TThen, the device can turn on
    or off by receiving data commands. For example, opening and closing of irrigation
    valves, size of valve openings, and extent of irrigation in a greenhouse are determined
    by soil moisture sensor, water level sensor, and webcam. For roller shutter control,
    the system has three phase motor switching control, insulation blanket position
    detection, data uploading, and so on. In the control of the sunshade, the system
    has shade and retraction control of the sunshade and so on. However, the above
    operation is difficult to construct a hardware system, so we constructed a ventilation
    control device. The size of vent is controlled by a stepper motor [37]. The stepper
    motor is powered by a switching power supply with specifications of 220 V input
    and 24 V output. The ventilation system performs motion control combining information
    received from the sensors and position data measured by the laser distance measuring
    module. In addition, ESP8266 WiFi module can receive information from the cloud,
    which enables remote manual network control. The exact control information and
    relevant data are displayed on the OLED screen. The control algorithm employs
    dual-mode control, that is, PID control and Bang-Bang control. The Bang-Bang ＋
    PID control algorithm has high dynamic performance and can reduce response time
    and steady-state error of system [38]. Meanwhile, the algorithm is simple to implement
    and suitable for real-time control system. The main controller is STM32F407VET6,
    which can receive sensor or Aliyun information through NRF24L01 module or ATK-ESP8266
    WiFi module. Based on the received information, the program combines the environmental
    parameters to calculate the adjustment data for the vents. This value is used
    as controller output [39]. This value is converted to the frequency of the PWM
    output. Finally, the signal from the controller is output to the stepper motor
    controller so that the stepper motor can be controlled. The hardware used for
    the vent control system is shown in Table 3. The Bang-Bang ＋ PID control algorithm
    is divided into two stages: When the system error is large, Bang-Bang control
    is used; when the system error is small, PID control is used. As shown in Eq.
    (2). (2) where -control output; -error between input and feedback; -proportional
    coefficient; -sampling time; -integral time constant; -differential time constant;
    -output of Bang-Bang control. is the switching function of the two algorithms.
    When 0, 1, system is used for Bang Bang control; When 1, 0, system is used for
    control. Table 3. Hardware required for vent consoles. Equipment Number Function
    STM32F407VET6 1 The device is a controller as the core of the vent control terminal
    Stepper motor 1 Controls the size adjustment of the vent Threaded screw 1 Mechanism
    of the vent Switching power supply 1 Power supply to the motor ATK-ESP8266 WiFi
    module 1 Connects to the network and uploads data OLED screen 1 Displays the status
    of the network transmitter 5. Experimental results We completed the system construct
    and debug in a laboratory environment. In addition, we tested certain outdoor
    environmental factors in a natural outdoor environment. The working model of the
    proposed system is shown in Fig. 3. The experiment consisted of the following
    stages. Download : Download high-res image (901KB) Download : Download full-size
    image Fig. 3. Hardware of the system. The left side of the picture shows system
    hardware and the right side shows specific details. Part B is the network transmitter,
    which contains STM32F103RCT6, ESP8266, and OLED. Parts A, C, and D form sensor
    acquisition control network. Part A contains wind cup wind speed sensor, DHT11,
    raindrop sensor, and satellite position module antenna. Part C is the core part
    of the information acquisition, which is designed as a ‘box’. Inside the “box”
    is STM32F407ZGT6 and in front is TFTLCD. Part C is the upper part of the “box”,
    equipped with ATK-1218-BD, BH1750FVI. Part C is the right side of the “box”, equipped
    with SGP30. Part C is the left side of the “box”, equipped with NRF24L01, DHT11.
    Part D is the soil measurement device (not shown on the left), which contains
    DS18B20 and soil moisture sensor. 5.1. Collection and transmission of environmental
    data STM32F407ZGT6 collects data from DHT11 temperature and humidity sensors and
    DS18B20 temperature sensor by single-bus communication protocol; collects data
    from light sensor and SGP30 sensor by IIC communication protocol; collects data
    from wind speed sensor, raindrop sensor and soil humidity sensor by ADC interface,
    and receives positional information from BeiDou/GPS module by serial communication
    protocol. Then, all of the above data are processed and displayed on the TFTLCD
    screen. According to the SPI communication protocol, the data are sent to the
    network transmitter by NRF24L01 wireless communication module. When testing is
    performed, the designed device is placed in a simulated environment. During testing,
    we found that the microcontroller module is able to work as expected. The system
    can detect the environmental data and display it in the TFTLCD screen. The Fig.
    4 shows the detected environmental data of the system in the simulated environment.
    Download : Download high-res image (944KB) Download : Download full-size image
    Fig. 4. Gathering environmental information in a simulated test environment. 5.2.
    Network transmitter The STM32F103RCT6 of the network transmitter receives the
    information through the NRF24L01 and sends it to the cloud through the ESP8266
    module by MQTT transport protocol. And then the data will be stored in the server
    database. The data that it sends to cloud platform is shown in Fig. 5. Download
    : Download high-res image (627KB) Download : Download full-size image Fig. 5.
    Cloud data. Red box: Data collected by the sensor for uploading. Blue box: Data
    reported by ventilation devices. Green box: Transition data in cloud platform.
    (For interpretation of the references to color in this figure legend, the reader
    is referred to the web version of this article.) 5.3. Device control When the
    system controls equipment, the stepper motor can accurately perform the command.
    Laser ranging module can measure the vent accurately. The system control with
    high precision. Fig. 6 shows the working model of the ventilation device. The
    system receives the information collected by the sensors through NRF24L01 or the
    information sent from the cloud through ESP8266. Then, it realizes the exact control
    of the vent through the dual-mode control algorithm. At the same time, the network
    condition and the effect of information flow transmission are displayed in the
    OLED screen. It is cloud data is shown in Fig. 5. At this time, the system is
    in automatic control state. The control program is automatically adjusted according
    to the environmental parameters, and the manually set values are not involved
    in the control. Download : Download high-res image (495KB) Download : Download
    full-size image Fig. 6. Ventilation control. Laser ranging module is placed in
    front of blue square. The distance between it and the white board simulates the
    size of the vent. (For interpretation of the references to color in this figure
    legend, the reader is referred to the web version of this article.) 5.4. Cloud
    environment achieve Various data stored in Fig. 5 database are visualized in the
    cloud and can control system operation. Cloud data is used to build physical model
    and control operation accordingly. We achieved respectively data visualization
    on web and mobile device, as shown in Fig. 7, Fig. 8. Through these experiments
    and tests, we have gained initial success and shown the system’s potential for
    greenhouse automation control. Download : Download high-res image (883KB) Download
    : Download full-size image Fig. 7. Web visualization large screen. Cloud big screen.
    Cloud big screen is an integrative management system that combines multiple functions.
    It monitors and collects data in real time by connecting with greenhouse equipment
    and sensors, and transmits the data to the cloud to process and analysis. On the
    cloud screen, users can view various data in the greenhouse, such as temperature,
    humidity, carbon dioxide concentration and light level. In addition, the cloud
    screen also has a remote control function. Users can remotely operate greenhouse
    equipment, such as adjusting temperature, humidity and other parameters, which
    realizes exact control of the greenhouse environment. Users can access and operate
    the cloud big screen through computer or other terminal device, so as to easily
    monitor and manage the greenhouse in real time. Download : Download high-res image
    (304KB) Download : Download full-size image Fig. 8. Mobile cloud visualization.
    The cloud big screen provides farmers with convenient data monitoring, analysis,
    and control functions. It helps them to achieve smart agricultural management
    and improve crop production efficiency and quality. Mobile cloud. Mobile cloud
    and cloud big screen, they can both transfer and share data through cloud service.
    Users can share data on different devices. They can realize the function is basically
    the same. In complex control, the mobile device is no match for the network big
    screen control. However, for some simple functions, their realization is basically
    same. Mobile device control have some advantages compared to web big screen control.
    The mobile device is light and portable. It can be carried anywhere. Data can
    be displayed on mobile devices. Users can view the data anytime, anywhere which
    is not depend on a specific big screen device. As a result, it can meet the needs
    of users to analyze and make decision environmental data at any time. 6. Conclusions
    and future research work 6.1. Conclusions The model put out in this work aims
    to accomplish centralized management and automated control, both of which are
    significant goals. A centralized monitoring and control center is provided by
    this technology, which centralizes the collection of greenhouse data in real-time.
    Through the cloud platform, administrators may check on changes to the greenhouse
    environment, crop growth, and numerous parameter indicators whenever and wherever
    they want. The cloud platform offers remote monitoring and management of greenhouse
    machinery, including irrigation systems, temperature control, and ventilation.
    To achieve automatic modification of the greenhouse environment and enhance crop
    quality and production effectiveness, administrators can remotely set control
    parameters through the cloud platform. 6.2. Future research work However, despite
    the fact that the cloud platform can be automatically controlled by gathering
    data about the greenhouse’s temperature, humidity, light, etc., there is no combination
    of data analysis and algorithmic modeling in the cloud platform to provide correct
    cloud control. That is one way forward. The given information can be used to further
    improve the system and expand its usefulness on the cloud platform. In order to
    create more accurate models and offer more precise management solutions, the greenhouse
    data obtained is thoroughly examined and learned from. For example, combining
    crop growth models and meteorological data to predict future trends in the greenhouse
    environment. From there, factors like ventilation and irrigation are changed to
    improve crop quality and yield. Following this, the settings for irrigation and
    ventilation are fine-tuned in order to optimize both crop quality and productivity.
    CRediT authorship contribution statement Yongchao Song: Formal analysis, Funding
    acquisition, Supervision, Writing – review & editing. Jiping Bi: Software, Visualization,
    Writing – original draft. Xuan Wang: Conceptualization, Formal analysis, Supervision,
    Writing – review & editing. Declaration of competing interest The authors declare
    the following financial interests/personal relationships which may be considered
    as potential competing interests: Xuan Wang reports financial support was provided
    by Natural Science Foundation of Shandong Province. Acknowledgments This research
    was funded by the Natural Science Foundation of Shandong Province, China (ZR2022QF037).
    Data availability No data was used for the research described in the article.
    References [1] Rehman A.U. Smart agriculture: An approach towards better agriculture
    management Omics Group. ebooks (2015) Google Scholar [2] Zhao R., Ding Y., Ma
    S., Wang M. Design of intelligent greenhouse control system based on internet
    of things 2019 2nd International Conference on Information Systems and Computer
    Aided Education (ICISCAE), IEEE (2019), pp. 117-121 CrossRefView in ScopusGoogle
    Scholar [3] Achour Y., Ouammi A., Zejli D. Technological progresses in modern
    sustainable greenhouses cultivation as the path towards precision agriculture
    Renew. Sustain. Energy Rev., 147 (2021), Article 111251 View PDFView articleView
    in ScopusGoogle Scholar [4] Nath S.D., Hossain M.S., Chowdhury I.A., Tasneem S.,
    Hasan M., Chakma R., et al. Design and implementation of an IoT based greenhouse
    monitoring and controlling system J. Comput. Sci. Technol. Stud., 3 (1) (2021),
    pp. 01-06 CrossRefGoogle Scholar [5] Maraveas C., Loukatos D., Bartzanas T., Arvanitis
    K.G., Uijterwaal J.F. Smart and solar greenhouse covers: Recent developments and
    future perspectives Front. Energy Res., 9 (2021), Article 783587 View in ScopusGoogle
    Scholar [6] Li C. Design and Implementation of Remote Monitoring System for Intelligent
    Agricultural Greenhouse Environment (Master’s thesis) Chongqing University of
    Posts and Telecommunications (2021) Google Scholar [7] Boursianis A.D., Papadopoulou
    M.S., Diamantoulakis P., Liopa-Tsakalidi A., Barouchas P., Salahas G., Karagiannidis
    G., Wan S., Goudos S.K. Internet of things (IoT) and agricultural unmanned aerial
    vehicles (UAVs) in smart farming: A comprehensive review Internet Things, 18 (2022),
    Article 100187 View PDFView articleView in ScopusGoogle Scholar [8] Ouafiq E.M.,
    Saadane R., Chehri A. Data management and integration of low power consumption
    embedded devices IoT for transforming smart agriculture into actionable knowledge
    Agriculture, 12 (3) (2022), p. 329 CrossRefView in ScopusGoogle Scholar [9] Zhang
    Z. Research on intelligent measurement and control system for internet of things
    in greenhouse Journal of Physics: Conference Series, Vol. 1486, IOP Publishing
    (2020), Article 022037 CrossRefView in ScopusGoogle Scholar [10] Rayhana R., Xiao
    G., Liu Z. Internet of things empowered smart greenhouse farming IEEE J. Radio
    Freq. Identif., 4 (3) (2020), pp. 195-211 CrossRefView in ScopusGoogle Scholar
    [11] Ranjun H., Xianzhu C. Implications of foreign smart agriculture development
    for rural revitalization in China Contemp. Agric. Mach. (61-62+64) (2022) Google
    Scholar [12] Gzar D.A., Mahmood A.M., Al-Adilee M.K.A. Recent trends of smart
    agricultural systems based on internet of things technology: A survey Comput.
    Electr. Eng., 104 (2022), Article 108453 View PDFView articleView in ScopusGoogle
    Scholar [13] Shanshan H., Jiezhong Z., Zaiqiang Y., Yufei M. Research progress
    on greenhouse environmental control in China Chin. Agric. Bull., 37 (125–131)
    (2021) Google Scholar [14] Juan Y., Yuling L., Yuan Z., Yajing C. An overview
    of the status quo and development prospect of smart greenhouse construction South.
    Agric. Mach., 53 (36–44) (2022) Google Scholar [15] Yongxia Z. Research on modern
    agricultural development under the rural revitalization strategy Rural Econ. Sci.
    Technol., 32 (286–288) (2021) Google Scholar [16] Yaopeng C., Houcheng L. Application
    of big data and agricultural internet of things technologies in smart greenhouse
    environment control - A case study of jinan kobai intelligent agricultural industrial
    park Agric. Eng. Technol., 41 (21–26) (2021) Google Scholar [17] Farooq M.S.,
    Riaz S., Helou M.A., Khan F.S., Abid A., Alvi A. Internet of things in greenhouse
    agriculture: A survey on enabling technologies, applications, and protocols IEEE
    Access, 10 (2022), pp. 53374-53397 CrossRefView in ScopusGoogle Scholar [18] Li
    S.L., Han Y., Li G., Zhang M., Zhang L., Ma Q. Design and implementation of agricultral
    greenhouse environmental monitoring system based on internet of things Appl. Mech.
    Mater., 121 (2012), pp. 2624-2629 View in ScopusGoogle Scholar [19] Halim A.A.A.,
    Hassan N.M., Zakaria A., Kamarudin L.M., Bakar A.H.A. Internet of Things Technology
    for Greenhouse Monitoring and Management System Based on Wireless Sensor Network
    (Ph.D. thesis) School of Computer and Communication Engineering, Universiti Malaysia
    Perlis (2017) Google Scholar [20] Pham T.C., Vo H.B., Tran N.Q. A design of greenhouse
    monitoring system based on low-cost mesh wi-fi wireless sensor network 2021 IEEE
    International IOT, Electronics and Mechatronics Conference (IEMTRONICS), IEEE
    (2021), pp. 1-6 View in ScopusGoogle Scholar [21] Tan P., Gebremariam E.T., Rahman
    M.S., Salman H., Xu H. Design and implementation of soil moisture monitoring and
    irrigation system based on arm and iot Procedia Comput. Sci., 208 (2022), pp.
    486-493 View PDFView articleView in ScopusGoogle Scholar [22] Hua J., Wang H.,
    Kang M., Wang X., Guo S., Chang F., Wang F.-Y. The design and implementation of
    a distributed agricultural service system for smallholder farmers in China Int.
    J. Agric. Sustain., 21 (1) (2023), Article 2221108 View in ScopusGoogle Scholar
    [23] Jianbao Z., Shiping B., Bing L. Design of intelligent cooking machine based
    on stm32f407zgt6 2022 2nd International Conference on Electrical Engineering and
    Control Science (IC2ECS), IEEE (2022), pp. 1161-1166 Google Scholar [24] Yifan
    W. Research on Land Area Mapping Technology and Land Information System Based
    on Beidou/GPS Dual-mode Positioning (Master’s thesis) Ningxia University (2023)
    Google Scholar [25] Le W. Principle of wind direction and wind speed sensor and
    its detection research China Equip. Eng. (166–168) (2022) Google Scholar [26]
    Qiaoni Z. Comparison and study of raindrop sensor detection principles Value Eng.,
    35 (253–254) (2016) Google Scholar [27] Sharmila F.M., Suryaganesh P., Abishek
    M., Benny U. IoT based smart window using sensor dht11 2019 5th International
    Conference on Advanced Computing & Communication Systems (ICACCS), IEEE (2019),
    pp. 782-784 Google Scholar [28] Windarto Y.E., Eridani D. Door and light control
    prototype using intel galileo based internet of things:(case study: Embedded and
    robotics laboratory, department of computer engineering, diponegoro university)
    2017 4th International Conference on Information Technology, Computer, and Electrical
    Engineering (ICITACEE), IEEE (2017), pp. 176-180 CrossRefView in ScopusGoogle
    Scholar [29] Jose J., Sasipraba T. Indoor air quality monitors using IOT sensors
    and LPWAN 2019 3rd International Conference on Trends in Electronics and Informatics
    (ICOEI), IEEE (2019), pp. 633-637 CrossRefView in ScopusGoogle Scholar [30] Kodali
    R.K., Soratkal S. MQTT based home automation system using ESP8266 2016 IEEE Region
    10 Humanitarian Technology Conference (R10-HTC), IEEE (2016), pp. 1-5 CrossRefGoogle
    Scholar [31] Zhijia Y., Xiaoping C. Research on TFTLCD display driver scheme for
    STM32F429 Microcontroller Embed. Syst. Appl., 16 (44–47) (2016) Google Scholar
    [32] YinKun Y., LiQiong C. Wireless temperature and humidity harvesting and alarm
    system design based on nRF24L01 Wirel. Connect. Technol., 19 (63–64) (2022) Google
    Scholar [33] Liu K., Wang S., Cheng W., Yang W., Yang S. Research on middle platform
    construction and large data analysis of power enterprises based on aliyun 2022
    International Seminar on Computer Science and Engineering Technology (SCSET),
    IEEE (2022), pp. 326-329 CrossRefView in ScopusGoogle Scholar [34] Jabbar W.A.,
    Subramaniam T., Ong A.E., Shu’Ib M.I., Wu W., de Oliveira M.A. Lorawan-based IoT
    system implementation for long-range outdoor air quality monitoring Internet Things,
    19 (2022), Article 100540 View PDFView articleView in ScopusGoogle Scholar [35]
    Chehri A., Farjow W., Mouftah H.T., Fernando X. Design of wireless sensor network
    for mine safety monitoring 2011 24th Canadian Conference on Electrical and Computer
    Engineering(CCECE) (2011), pp. 001532-001535 CrossRefView in ScopusGoogle Scholar
    [36] Chehri A., Fortier P., Tardif P.-M. Security monitoring using wireless sensor
    networks Fifth Annual Conference on Communication Networks and Services Research
    (CNSR ’07) (2007), pp. 13-17 CrossRefView in ScopusGoogle Scholar [37] Wenbin
    M., Yanzhu Y., Yun H. Design and application of stepper motor control system Electr.
    Appl., 41 (11–13) (2015) Google Scholar [38] Zhao Z., Qi X. Research on Bang-Bang+PID
    dual-mode control of bullet-Borne electro-hydraulic servos Autom. Expo, 27 (72–75)
    (2010) Google Scholar [39] Din S., Paul A., Ahmed S.H., Ahmad A., Jeon G. A multi-layer
    low-energy adaptive clustering hierarchy for wireless sensor network 2017 IEEE
    19th International Conference on E-Health Networking, Applications and Services
    (Healthcom), IEEE (2017), pp. 1-6 Google Scholar Cited by (0) View Abstract ©
    2023 Elsevier B.V. All rights reserved. Recommended articles Vibration-based rotation
    speed estimation for Industrial IoT Internet of Things, Volume 25, 2024, Article
    101024 Eli Gildish, …, Igor Makienko View PDF Addressing IoT storage constraints:
    A hybrid architecture for decentralized data storage and centralized management
    Internet of Things, Volume 25, 2024, Article 101014 Chanhyuk Lee, …, Byounghyun
    Yoo View PDF Blockchain based secure Ownership Transfer Protocol for smart objects
    in the Internet of Things Internet of Things, Volume 25, 2024, Article 101002
    Kiran M., …, Varun Yarehalli Chandrappa View PDF Show 3 more articles Article
    Metrics Captures Readers: 23 View details About ScienceDirect Remote access Shopping
    cart Advertise Contact and support Terms and conditions Privacy policy Cookies
    are used by this site. Cookie settings | Your Privacy Choices All content on this
    site: Copyright © 2024 Elsevier B.V., its licensors, and contributors. All rights
    are reserved, including those for text and data mining, AI training, and similar
    technologies. For all open access content, the Creative Commons licensing terms
    apply."'
  inline_citation: '>'
  journal: Internet of Things (Netherlands)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Design and implementation of intelligent monitoring system for agricultural
    environment in IoT
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Song Q.
  - Li L.
  - Huang X.
  citation_count: '1'
  description: The massive collection and transmission of various crop and livestock
    data in smart agriculture leads to serious security concerns. Furthermore, many
    Internet of Things (IoT) devices in smart agriculture are battery-powered, with
    limited energy resources. Therefore, a low energy lightweight block cipher (LELBC)
    is proposed to overcome the data leakage problem during sensor data transmission
    in smart agriculture. Firstly, a new permutation substitution permutation (PSP)
    structure is proposed, taking into account the energy resource constraints of
    unified encryption and decryption (ED) circuits. It has highly consistent encryption
    and decryption and a good diffusion effect. Secondly, a 4-bit low energy involutive
    S-box is obtained based on a genetic algorithm. The proposed S-box has lower area
    and latency compared to the existing S-boxes. The experimental data show that
    LELBC consumes 1864 gate equivalents (GE) in area and 6.99 μJ/bit in energy (encryption
    + decryption) under the UMC 0.18μm 1P6M process library. LELBC decreases energy
    and area consumption by 24.02% and 24.04%, respectively, compared to Midori. Finally,
    a temperature collection and encryption transmission platform is established.
    LELBC is deployed on the platform to encrypt the collected data, establishing
    the first line of defense for the secure transmission of smart agriculture sensor
    data.
  doi: 10.1016/j.iot.2023.101022
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Encryption model 3. Specification
    of LELBC 4. Design rationale 5. Security analysis 6. Implementation 7. Conclusion
    Declaration of competing interest Acknowledgments Data availability References
    Show full outline Cited by (2) Figures (9) Show 3 more figures Tables (13) Table
    1 Table 2 Table Table 3 Table 4 Table 5 Show all tables Internet of Things Volume
    25, April 2024, 101022 Research article LELBC: A low energy lightweight block
    cipher for smart agriculture Author links open overlay panel Qingling Song 1,
    Lang Li, Xiantong Huang 1 Show more Add to Mendeley Share Cite https://doi.org/10.1016/j.iot.2023.101022
    Get rights and content Abstract The massive collection and transmission of various
    crop and livestock data in smart agriculture leads to serious security concerns.
    Furthermore, many Internet of Things (IoT) devices in smart agriculture are battery-powered,
    with limited energy resources. Therefore, a low energy lightweight block cipher
    (LELBC) is proposed to overcome the data leakage problem during sensor data transmission
    in smart agriculture. Firstly, a new permutation substitution permutation (PSP)
    structure is proposed, taking into account the energy resource constraints of
    unified encryption and decryption (ED) circuits. It has highly consistent encryption
    and decryption and a good diffusion effect. Secondly, a 4-bit low energy involutive
    S-box is obtained based on a genetic algorithm. The proposed S-box has lower area
    and latency compared to the existing S-boxes. The experimental data show that
    LELBC consumes 1864 gate equivalents (GE) in area and 6.99 J/bit in energy (encryption
    + decryption) under the UMC 1P6M process library. LELBC decreases energy and area
    consumption by 24.02% and 24.04%, respectively, compared to Midori. Finally, a
    temperature collection and encryption transmission platform is established. LELBC
    is deployed on the platform to encrypt the collected data, establishing the first
    line of defense for the secure transmission of smart agriculture sensor data.
    Previous article in issue Next article in issue Keywords Lightweight block cipherLow
    energyPSP structureS-boxGenetic algorithmSmart agriculture 1. Introduction The
    arrival of the fifth generation (5G) era is bringing new applications, such as
    smart agriculture, to us faster and better than ever before. At the same time,
    new application scenarios are not possible without a large number of IoT devices.
    Accordingly, many IoT technologies are continuously proposed [1], [2]. Smart agriculture
    mainly uses information technology management methods to carry out agricultural
    production and operations [3]. It timely acquires environmental factors affecting
    crop production, such as temperature, and automatically adjusts production conditions
    through “thing-to-thing” connectivity, thereby effectively improving the quality
    of agricultural products and production efficiency. But the massive collection
    of data is likely to lead to serious leakage problems [4]. Malicious hackers,
    through attacks on IoT devices such as sensors, may access data collected by sensors
    about the environment or livestock or even tamper with them, as there is a lack
    of encryption protection measures [5]. These attacks seriously damage the confidentiality
    of data, posing a serious threat to the proper operation and supply of monitoring
    services and even causing substantial economic losses. Currently, multiple security
    protection schemes are proposed for this problem, including encrypting the collected
    data before transmission [6]. Post-Quantum Cryptography has become a hot topic
    nowadays with the emergence of quantum computers. But the development of standards
    for post-quantum cryptography is still in progress. Meanwhile, symmetric ciphers
    can resist the attack of quantum computers by expanding the key size. Hence, we
    can still employ lightweight block ciphers to protect resource-constrained IoT
    devices in smart agriculture. Numerous lightweight block ciphers have been proposed
    in recent years that are widely used in the IoT, such as SIMON [7], SPEEDY [8],
    PRINCE [9], SCARF [10], SHADOW [11], IVLBC [12], QARMA [13], etc. However, the
    design requirements of ciphers vary in different environments [14], [15]. For
    example, the Internet of Vehicles requires low-latency cipher algorithms [16].
    The existing sensors and unmanned aerial vehicles used in smart agriculture are
    battery-powered. They suffer from limited energy resources [17]. Also, the computational
    complexity of the device itself should not be reduced to minimize battery usage
    [18]. It is critical that cipher algorithms designed for such devices minimize
    energy consumption [19]. Energy will be more tightly constrained in future infophysical
    systems as well as in the next generation of implantable devices [20]. There is
    currently no unified standard for cipher algorithms in terms of energy consumption
    evaluation. Consequently, we take the energy consumption of existing low-energy
    cipher algorithms as the basic standard for our research, such as Midori, PRINCE,
    and so on. The minimization of energy consumption based on existing research can
    lead to a broader application of cipher algorithms in the future. Recently, energy-optimized
    ciphers have received increasing attention. The classic low energy lightweight
    block cipher Midori was proposed by Subhadeep Banik et al. [21]. Later, they also
    proposed a low energy stream cipher [22]. In 2017, Bui et al. performed hardware
    optimization for the AES cipher in terms of power consumption and energy [23].
    Carlos et al. optimized the PRESENT cipher on FPGA hardware based on area, performance,
    and energy [24]. In 2020, Bassam J. et al. proposed a new algorithm for managing
    cipher energy consumption [25]. Avik Chakraborti proposed a lightweight, low energy
    authentication encryption mode [26]. Most of these proposed energy-optimized ciphers
    use substitution permutation networks (SPN) structures to improve diffusion and
    reduce the number of rounds to achieve low energy performance. Cipher algorithms
    that adopt the SPN structure require additional resource consumption during decryption
    due to the inconsistent encryption and decryption. As a result, energy consumption
    is often not particularly low when encryption and decryption are calculated to
    consume energy together. The Feistel structure can be encrypted and decrypted
    consistently, but the cipher algorithms using the Feistel structure require more
    rounds to ensure their security. The energy consumption increases exponentially
    as the number of rounds increases. Beyond the structure, the area and latency
    of the components also affect the energy consumption of the algorithm as a whole.
    Choosing a low-area and low-latency S-box is also a design requirement for low
    energy algorithms, as S-boxes are the most important non-linear component in cipher
    algorithms. There is still potential to better achieve low energy consumption
    in unified ED circuits, although researchers have done some research on low energy
    ciphers. In this paper, a new low energy lightweight block cipher (LELBC) is proposed,
    focusing on energy-resource-constrained devices in smart agriculture. We have
    conducted a security analysis and hardware implementation of LELBC. Experimental
    results show that LELBC is resistant to differential attack, linear attack, algebraic
    attack, meet-in-the-middle attack, and slide attack. LELBC can also adopt some
    existing error detection schemes to resist fault attacks in practical applications.
    Moreover, LELBC is optimal in terms of energy and area in unified ED circuits
    compared to existing lightweight ciphers. Thus, the deployment of LELBC in the
    perception layer of smart agriculture can provide security for it. The structure
    of the paper is as follows: Section 2 introduces the encryption mode of LELBC.
    In Section 3, the specification of LELBC is described. The design principles of
    LELBC are given in Section 4. Section 5 describes the security analysis of LELBC
    through various analysis methods. The implementation of LELBC is presented in
    Section 6. A temperature acquisition platform is established to simulate temperature
    monitoring in smart agriculture, and LELBC was successfully applied to the platform.
    Finally, Section 7 concludes the paper with an overview of the future. 1.1. Motivation
    Attention to agricultural production has been increasing in recent years with
    global warming and a growing population. Simultaneously, malicious hackers have
    been looking for vulnerabilities in smart agriculture to attack. Since smart agriculture
    is a key component of the economy, trade, and food supply, its data leakage could
    place food security at risk. Therefore, it is extremely important to maintain
    security in smart agriculture. Many resource-constrained IoT devices, such as
    sensors in smart agriculture, are powered by batteries [27]. Energy is quite an
    important element in these devices [28]. Designing a low energy lightweight block
    cipher for IoT devices in the sensing layer is beneficial for defending data security
    in smart agriculture. Nowadays, most of the low energy ciphers or cipher algorithms
    optimized for energy, such as Midori, AES, PRESENT, etc., still have potential
    to be optimized in terms of energy consumption. Firstly, in terms of structure,
    these cipher algorithms all adopt SPN structure. It is well known that the general
    SPN structure is usually not applicable to unified ED circuits. They consume more
    hardware resources and energy if they are to be used in environments where decryption
    routines are required. In smart agriculture environments, the encrypted sensor
    data needs to be decrypted before it can be displayed. Smart agriculture requires
    an algorithmic structure that can be applied to unified ED circuits. Secondly,
    in terms of the nonlinear layer, the existing 4-bit involutive S-boxes are not
    yet optimal in terms of area and delay. Therefore, this paper designs a low energy
    lightweight cipher algorithm for smart agriculture based on the highly consistent
    structure of encryption and decryption and the low-energy S-box. 1.2. Our contribution
    We propose a new low energy lightweight cipher named LELBC for resource-constrained
    IoT devices in smart agriculture. A PSP structure with highly consistent encryption
    and decryption and a low-area, low-latency involutive S-box are designed from
    the structure and components, respectively, so as to achieve a lower energy consumption
    for LELBC in the hardware. Firstly, we found that two identical P diffusion layers
    do not diffuse well, even though it is better to achieve consistent encryption
    and decryption. Therefore, we design two highly symmetric P-diffusion layers to
    achieve the symmetry of the PSP structure so that it can be applied to the unified
    encryption–decryption circuit. Secondly, we obtained a low-area, low-latency involutive
    S-box to achieve low energy consumption of the nonlinear layer by a genetic algorithm.
    Compared with the S-boxes in existing low-latency cipher algorithms, the proposed
    S-box has advantages in both area and latency. Finally, we establish a temperature
    acquisition platform that simulates the environmental monitoring of smart agriculture.
    Then LELBC is applied to the platform to encrypt the collected data, which provides
    the first line of defense for the secure transmission of smart agriculture sensor
    data. 2. Encryption model Smart agriculture mainly uses information technology
    management methods to carry out agricultural production and operations. Its overall
    architecture includes three main parts: the perception layer, the network layer,
    and the application layer [29]. The perception layer can timely acquire and perceive
    environmental factors such as temperature in agricultural production through various
    sensors [30]. These real-time data, including information on personnel and materials
    entering and leaving agricultural greenhouses and data on crop growing sites,
    are uploaded to the IoT information platform through the network layer. Currently,
    all-round environmental monitoring and control systems combining sensors and wireless
    communication networks are widely used and rapidly promoted in facility agriculture.
    However, IoT devices in smart agriculture are susceptible to sensor-based threats
    due to a lack of security measures protecting sensors. Attackers may obtain access
    to perception data so they can monitor or even tamper with related data, damaging
    the confidentiality of the data and posing a serious threat to the proper operation
    and supply of monitoring services [31]. This paper deploys a lightweight block
    cipher, LELBC, at the perception layer to ensure that data is transmitted in ciphertext
    form at the data transmission layer. If the attacker obtains the transmitted data,
    it can only obtain the ciphertext, which cannot be deciphered. Thus, the deployment
    of LELBC in the perception layer ensures the confidentiality of the sensed data
    and establishes the first line of defense for the security of smart agriculture
    IoT devices. The specific encryption application model is shown in Fig. 1. Download
    : Download high-res image (156KB) Download : Download full-size image Fig. 1.
    Encryption application model of smart agriculture. 3. Specification of LELBC This
    section describes the structure of LELBC and the implementation of each component.
    3.1. Encryption algorithm LELBC consists of 16 rounds of encryption, with input
    64-bit plaintext and 128-bit key , and output 64-bit ciphertext . The PSP structure
    of LELBC adopts two symmetrical diffusion layers and Sublayer, which successively
    includes three steps: P diffusion layer, Sublayer and P diffusion layer. Among
    them, the two P-diffusion layers are symmetrical structures, both composed of
    left circular shift and XOR operations. They differ in that the first P diffusion
    layer is left circular shift 5-bit by the left branch data and then XOR with the
    right branch data. The second P diffusion layer is left circular shifted 5-bit
    by the right branch data and then performs an XOR operation with the left branch
    data. The Sublayer consists of 16 4-bit involutive S-boxes, which are identical
    in encryption and decryption. Furthermore, a PN permutation is added after 16
    rounds of round-function iterations to ensure the consistency of the encryption
    and decryption architectures. Some notations used are shown in Table 1. The encryption
    process is shown in Fig. 2 and Algorithm 1. Round-function. The round-function
    process of LELBC in Fig. 2 includes four operations: AddRoundKey, Left circular
    shift, XOR, Sublayer. The number of rounds r is 16. Define the input and output
    of the encryption process as follows: (1) Table 1. Notations of LELBC. Notations
    Descriptions 64-bit plaintext 64-bit ciphertext 128-bit master key round sub-keys
    in encryption round sub-keys in decryption m/n n-bit data N, expressed as ...
    i m-bit data N, expressed as ... S-box connection operation bitwise exclusive-OR
    operation left circular shift operation round number AddRoundKey (ARK). Firstly,
    the high 64-bit ( ) of is taken as input to the two ARK operations. Secondly,
    the first ARK operation takes its high 32-bit data and performs an XOR operation
    with the high 32-bit of plaintext . Finally, the second ARK operation takes its
    lower 32-bit of data and performs an XOR operation with the low 32-bit of plaintext
    . Left circular shift (LCS). The 32-bit plaintext data is cyclically left-shifted.
    The operation is shown in Eq. (2). (2) Download : Download high-res image (135KB)
    Download : Download full-size image Fig. 2. The encryption process of LELBC. Table
    2. The S-box of LELBC. x 0 1 2 3 4 5 6 7 8 9 A B C D E F S[x] C E 6 A 4 F 2 7
    9 8 3 B 0 D 1 5 XOR. The cyclically shifted data is XORed with the 32-bit data
    of the other branch. Sublayer (S). The 64-bit plaintext is grouped into 16 parts
    in a 4-bit unit and is substituted by 16 involutive S-boxes. Table 2 shows the
    S-box lookup table. The S-box substitution operation can be denoted as shown in
    Eq. (3). (3) PN permutation (PN). The 64-bit data is divided into two parts, and
    then the two parts are exchanged. This is specifically represented as an exchange
    of and branch data. The operation is shown in Eq. (4). (4) Algorithm 1: Encryption
    Decryption routine of LELBC Input: , ; Output: ; 1:  IF ENC: ; 2:  IF DEC: ; 3:  for
    i=1 to r do the following 4:   ; 5:   ; 6:   ; 7:   ; 8:   ; 9:   ; 10:  end for
    11:   ; 12:  Return ; 3.2. Key schedule First, a key schedule is performed on
    the master key to obtain the encrypted subkey for the first round. After that,
    a key schedule is performed on the subkey of the previous round in each round
    to obtain the subkey of the current round. The data for which key schedules are
    performed in each round can be divided into 32-bit (0 j 3): (5) The key schedule
    consists of the following steps: S-box, round constant addition, and left circular
    shift. (1) Substitute the 4-bit data with the S-box lookup table in Table 2: (6)
    2) The round constant RC=( ) is the current number of rounds minus 1. The round
    constant addition operation is as follows: (7) 3) Left circular shift of the overall
    data by 64-bit: (8) 4) Circular shift the high 64-bit of data to the left by 9-bit,
    and circular shift the low 64-bit of data to the left by 15-bit: (9) 3.3. Decryption
    algorithm The two P-diffusion layers of the PSP structure are symmetric structures,
    and the S-box is involutory in LELBC. Decryption is highly consistent with encryption.
    The difference between decryption and encryption is that the order of the data
    in the decryption subkey is different from that in the encryption subkey. That
    is, the first-round encryption subkey corresponds to the last-round decryption
    subkey. Moreover, and in the encryption subkey correspond to and in the decryption
    subkey, respectively. Algorithm 1 describes the encryption and decryption of LELBC.
    It is easy to see from Algorithm 1 that the steps of encryption and decryption
    are highly identical. Therefore, the decryption can highly reuse the encryption
    structure to achieve low hardware resource consumption, thus achieving low energy
    consumption. 4. Design rationale 4.1. The structure of LELBC In fact, the more
    hardware resources consumed by a cipher algorithm, the more energy it consumes
    [21]. Therefore, considering the limitations of energy resources in smart agriculture,
    the design of low energy cipher algorithms is bound to consider how much hardware
    resources it occupies. Meanwhile, it is necessary for data to be encrypted for
    transmission and decrypted for display in smart agriculture. Usually, unified
    ED circuits are suitable for use in resource-constrained environments where encryption
    and decryption are required. In this case, a highly consistent structure for encryption
    and decryption is the best choice. In addition, it can be known that the energy
    consumption of a round-based architecture is generally optimal from the perspective
    of cipher algorithm implementation. Therefore, we focus on the round-based architecture
    under unified ED circuits. The main design structures for block ciphers include
    the Feistel structure and the SPN structure. The Feistel structure, although similar
    in both encryption and decryption, exhibits poor diffusion and requires more rounds
    to ensure security. The SPN structure has the advantage of fast diffusion. However,
    it consumes more hardware resources to decrypt due to its relatively poor symmetry.
    LELBC has designed a PSP structure based on the SPN structure. The two P-diffusion
    layers in the PSP structure are symmetric, and the S-box is involutory. So the
    decryption can highly reuse the encryption structure to achieve low hardware resource
    consumption, thus achieving a low energy unified ED circuit. Moreover, the structure
    has good diffusivity. Consistent with low energy Midori, LELBC reaches full (bit-level)
    diffusion after 3 rounds. However, the fact that the ShuffleCell of Midori does
    not have the involution property causes it to require two additional multiplexers
    in a unified ED circuit. In contrast, LELBC adopts a PSP structure with encryption–decryption
    consistency in resource-constrained unified ED circuits, and hence LELBC consumes
    less energy and hardware resources than the Midori cipher. 4.2. The non-linear
    layer of LELBC The non-linear layer is a critical component of LELBC cipher. It
    is used to obfuscate data. The performance of S-box is closely related to the
    security of cipher algorithms as it is the most important nonlinear layer in cipher
    algorithms. In the partial security analysis of cipher algorithms, we determine
    whether a cipher algorithm is capable of resisting a corresponding attack precisely
    by solving for the number of minimal active S-boxes in a full-round cipher. Hence,
    the choice of S-boxes with strong cryptographic properties is crucial. In addition,
    low energy consumption is one of the general goals of LELBC. It can be known that
    the area and delay of components also affect the energy consumption of the whole
    algorithm. Low latency and low area contribute to low energy consumption in implementation.
    The area and delay of the S-box, which is the only nonlinear component in LELBC,
    can greatly affect the energy consumption of LELBC. Moreover, the highly consistent
    algorithmic structure of encryption and decryption is conducive to low energy
    implementation. We must adopt an involutive S-box to ensure that the cipher algorithms
    are highly consistent in encryption and decryption. Therefore, we require a low
    area, low latency, and highly secure involutive S-box to achieve low energy consumption
    of cipher algorithms. Compared to the 8 × 8 S-box, the 4 × 4 S-box has less hardware
    resource consumption. Hence, the 4-bit S-box is usually more suitable for the
    design of low energy ciphers than the 8-bit S-box. Now, there are many heuristic
    algorithms applied to the search of S-boxes, and genetic algorithms are one of
    them. The S-box generation algorithms based on genetic algorithms are almost always
    based around security and strong cryptographic properties. They generally use
    differential uniformity, linear approximation, nonlinearity, and other cryptographic
    properties to generate the S-box with strong cryptographic properties. In 2012,
    Wang et al. obtained S-boxes that meet the requirements of differential uniformity,
    linear approximation, nonlinearity, avalanche effect, and other cryptographic
    properties by combining chaos and genetic algorithm [32]. Later, they carried
    out optimization on this basis to generate highly nonlinear bijective S-boxes
    with nonlinearity as the optimization objective [33]. In 2021, a genetic algorithm
    based on a single objective with nonlinearity was used by Çavuşoğlu Ü et al. to
    obtain S-boxes with strong cryptographic properties [34]. In 2022, Artugeer et
    al. also combined chaos and genetic algorithm to generate S-boxes, and they obtained
    S-boxes with higher nonlinearity by optimizing the S-box structure [35]. In addition
    to meeting these cryptographic requirements, the S-box must also satisfy the conditions
    of involution, low area, and low latency, as we require a low-energy, high-security
    S-box. This requires further searching to generate S-boxes based on existing genetic
    algorithm methods. The flowchart for generating S-boxes using genetic algorithm
    is shown in Fig. 3. Our low energy S-box design is required to meet the following
    five conditions: (1) the maximum difference probability is 2−2; (2) the maximum
    absolute deviation of the linear approximation is 2−2; (3) the algebraic degree
    is 3; (4) the depth is less than 4 (the maximum delay of S-box in existing low-latency
    ciphers is 4), and the area is light; (5) involution. The definitions are given
    as follows: Definition 1 Differential Uniformity For a given S-box , define the
    differential distribution of the S-box as: , where is the input differential and
    is the output differential of the S-box. The differential probability . Definition
    2 Linear Approximation For an S-box , define the linear approximation , where
    is the input mask and is the output mask of the S-box. The linear probability
    is obtained by . Definition 3 Algebraic Degree The algebraic degree of a Boolean
    function is defined as the number of variables in the maximum product term in
    the algebraic normal form (ANF) of a function with non-zero coefficients, denoted
    by . The algebraic degree of an S-box is the maximum algebraic number of non-zero
    linear combinations of all its component functions. Therefore, the S-box algebraic
    degree is defined as . Definition 4 Depth The sum of the sequential path delays
    for fundamental operations is depth. Where the depths of the gate required for
    the basic operations XOR/XNOR, AND/OR, NAND/NOR, and NOT are evaluated to be 2,
    1.5, 1, and 0.5, respectively. For example, we consider the computation of in
    Eq. (10). ( ) and ( ) are executed first. Then calculate ( ). Then the last operation
    of NOR can be executed. Thus, the depth of is estimated to be 3.5 (=1.5+1+1).
    The genetic algorithm is used to find low energy S-boxes. The crossover probability
    is 0.8, and the mutation probability is 0.6. The required computation time is
    reduced by using Genetic Algorithm (GA) in S-box generation, and a series of S-boxes
    that meet the conditions can be directly found. The steps for the proposed genetic
    algorithm to find low energy S-boxes are as follows: (1) First, 10,000 individuals
    are randomly generated as the initial population. Download : Download high-res
    image (257KB) Download : Download full-size image Fig. 3. Generating S-box using
    genetic algorithm. Table 3. Comparison of S-boxes. S-box Midori Midori PRINCE
    QARMA QARMA QARMA Orthros LELBC Empty Cell ( ) ( ) Empty Cell ( ) ( ) ( ) Empty
    Cell Empty Cell Depth 3.5 4 4 4 4 4 3.5 3.5 Area 22.65 23.33 26.68 24.01 30.7
    33.69 21.31 22.33 Differential probability Linear probability Algebraic degree
    3 3 3 3 3 3 3 3 Involution YES YES NO YES YES NO NO YES (2) Crossover and mutation
    are continuously performed on the existing population until the resulting new
    population meets our requirements. After each creation of a new population, the
    following actions are performed on the new population: (1) Calculate the fitness
    values (differential probability, linear approximation probability, and algebraic
    degree) of all individuals in the population by means of a fitness function. (2)
    Effective scaling of the initial fitness. (3) Select the parents with better fitness
    scores from the existing population for processing to generate a new population.
    Among them, the S-box logic operations required to compute algebraic degrees cannot
    be easily obtained since the first step of the algorithm generates 10,000 S-box
    lookup tables with random permutations as the initial population. Hence the Karnaugh
    map method is used to obtain the four simplest logical expressions corresponding
    to the S-box. First, each column is treated as a group, and the S-box lookup table
    is converted into four binary arrays. Then, 0 and 1 are filled in the matrix according
    to the relationship between the different inputs and outputs of the four binary
    arrays to obtain four matrices. The Karnaugh maps are drawn based on these four
    matrices, combining adjacent 1s into the largest set possible and covering as
    many 1s as possible to generate expression terms. Then, the expression terms are
    simplified, and duplicate terms and terms containing other terms are removed to
    generate the complete logical expression. (3) The maximum depth of S-boxes used
    in current low-latency ciphers is 4. Therefore, we keep the depth within 4 for
    searching. It is clear from Definition 4 that in a 4-bit S-box, coordinate components
    with a depth less than 4 are at most a combination of seven 2-input logic gates,
    and the area of each coordinate component is also low at this point. Consequently,
    we can directly traverse the S-boxes obtained in step 2) that satisfy the cryptographic
    properties to search for low-latency and low-area S-boxes. Firstly, we represent
    each coordinate component with a set of 2-input logic gates, respectively (the
    depth is limited to 4). Then, calculate the delay and area of the four coordinate
    components in each S-box, respectively, where the area is calculated under the
    UMC 1P6M process library. Finally, an involutive S-box with low delay and low
    area is obtained. The depth of the S-box is 3.5, and its area is 22.33 GE. Table
    3 shows the performance of the proposed S-box compared with other S-boxes under
    the same process library. It can be seen that the S-box of LELBC has some advantages
    in terms of area and delay. Therefore, it is more capable of achieving low energy
    consumption for LELBC than other S-boxes. The logic gate operation of the S-box
    is represented by Eq. (10). The inputs and outputs are defined as and , where
    and are the most significant bits. (10) 4.3. The linear layer of LELBC A structure
    with highly consistent encryption and decryption is more conducive to low energy
    design. Therefore, LELBC adopts two symmetrical linear layers before and after
    the Sublayer for the diffusion of plaintext data to achieve highly consistent
    encryption and decryption. Although the selection of two identical linear layers
    can better achieve the consistency of encryption and decryption, the diffusion
    effect is not good because the data of the two branches does not affect each other.
    The diffusion effect of this method is also verified by an avalanche effect experiment.
    Table 4 illustrates the avalanche effect of the two linear layers in the first
    5 rounds. represents the average change in output bits when the input plaintext
    changes by 1 bit. The experiment proves that using two symmetrical linear layers
    can achieve a better diffusion effect. Simultaneously, LELBC only needs to add
    an exchange of left and right branch data after 16 rounds of iteration of the
    round function to achieve complete consistency of the encryption and decryption
    structures. Since the S-box is obfuscated in half-byte units, bit diffusion of
    the data is performed using cyclic shifting and XOR operations in the linear layer.
    The selection of the number of cyclic shift bits takes into account both the avalanche
    effect and the security analysis. There are 32 choices, as the cyclically left-shifted
    bits need to be exactly the same in order to achieve a symmetric structure. The
    optimal choice was determined by an experimental test that traversed these 32
    data points. We conducted experiments on the choice of the number of circular
    shifts in combination with differential attacks and avalanche effects. The number
    of rounds at which the cipher algorithm achieves a complete avalanche or the security
    boundary changes with the variation of the bit of circular left shifts, as can
    be seen in Fig. 4. In which rows represent the cyclically left-shifted bits and
    columns represent the round number corresponding to achieving a complete avalanche
    or differential attack security boundary. As some data cannot achieve complete
    avalanche effect for the algorithm, we label all the data at that point in the
    graph as 0. We finally chose 5 as the number of cyclic left shifts for the P diffusion
    layer based on the experimental result chart. Table 4. Comparison of avalanche
    effect between two linear layers. Rounds 1 2 3 4 5 (Same linear layers) 2.918125
    3.07300 3.105469 2.802062 2.983125 (Symmetric linear layers) 4.063719 11.552719
    22.437918 29.967891 31.877078 Download : Download high-res image (170KB) Download
    : Download full-size image Fig. 4. Experimental results with different cycle left
    shift bits. 5. Security analysis 5.1. Dependency and avalanche effect The avalanche
    effect is a security evaluation method for cryptographic algorithms. The better
    the avalanche effect of the cipher algorithm, the higher the security. In this
    section, the safety strength of this cipher is evaluated by avalanche effect analysis.
    The experiment was conducted by randomly selecting 10,000 sets of 64-bit plaintext
    as test samples. When the input plaintext changes by 1 bit, the avalanche effect
    degree , the strict avalanche criterion degree , the bit of output change , the
    mean value of the bit of output change , the probability of output change and
    the mean probability of output change are tested. Table 5 shows the avalanche
    effect test results for LELBC. At the same time, we use , , and to represent the
    minimum, maximum, and average number of changed bits, respectively. The avalanche
    effect diagram shown in Fig. 5. As seen from Table 5 and Fig. 5, LELBC fully satisfied
    the dependency requirements in the fifth round. In addition, we used the same
    method to test PRESENT and CRAFT, and the results obtained are shown in Fig. 6
    and Fig. 7, respectively. Both the PRESENT and CRAFT algorithms reached the avalanche
    effect standard in the sixth round. Therefore, it can be considered that LELBC
    has a good avalanche effect. Table 5. Analysis of avalanche effect of LELBC. Round
    5 6 7 16 0.999795 0.999386 0.999995 0.999693 0.999770 0.999392 0.999987 0.999905
    1.000000 1.000000 1.000000 1.000000 15 49 16 49 14 50 16 49 31.877078 31.985469
    32.016375 31.994344 0.489953 0.504437 0.496312 0.503703 0.495078 0.505625 0.494063
    0.505234 0.498079 0.499773 0.500256 0.499912 Download : Download high-res image
    (129KB) Download : Download full-size image Fig. 5. Avalanche effect of LELBC.
    Download : Download high-res image (164KB) Download : Download full-size image
    Fig. 6. Avalanche effect of PRESENT. Download : Download high-res image (163KB)
    Download : Download full-size image Fig. 7. Avalanche effect of CRAFT. 5.2. Differential
    attack and linear attack Differential and linear attacks have been two of the
    most effective cryptographic attack methods since they were proposed. The lower
    bound of the active S-box count can, to some extent, reflect a cipher’s resistance
    to differential and linear attacks. In recent years, automated search has become
    a major focus for cryptanalysis. One of the tools for automating analysis is mixed
    integer linear programming (MILP) [36]. In this paper, the algorithm is analyzed
    using the MILP method. A bit-oriented MILP program is constructed to calculate
    the minimum number of differences and linear active S-boxes. First, we obtain
    the input differential and output differential corresponding to their non-zero
    points according to the difference distribution table (DDT) of LELBC’s S-box.
    It can be seen from Table 10 that the number of non-zero points it has is 97.
    We then obtain 272 inequalities by using the SageMath tool to distinguish all
    non-zero points from other points. Next, we use the MILP procedure to reduce these
    inequalities and eliminate redundancy. The final 21 constrained inequalities are
    obtained to represent the S-box. Finally, we use the Gurobi solver to solve for
    the minimum active S-box number based on the above constraints and the structure
    of the LELBC cipher. The same method is adopted to perform linear attacks on the
    LELBC cipher. The linear approximation table (LAT) for the S-box is shown in Table
    11. Table 6 displays the minimal number of active S-boxes discovered through experimentation.
    It is evident that after 12 rounds of encryption, LELBC has 34 active S-boxes.
    The maximum difference probability and the maximum linear probability should be
    less than 2−64, as the block length of LELBC is 64-bit. Meanwhile, the maximum
    difference probability and the maximum linear probability of the S-box used in
    LELBC are 2−2. It can be observed that the maximum difference probability of LELBC
    in 12 rounds is . The maximum linear probability of LELBC in 12 rounds is . Therefore,
    the 16-round LELBC is resistant to both differential and linear attacks. Table
    6. Minimum number of active S-boxes in LELBC under single-key setting. Round 1
    2 3 4 5 6 7 8 9 10 11 12 DC 1 3 6 9 13 14 17 20 26 27 30 34 LC 1 3 6 9 13 14 17
    20 26 27 30 34 Table 7. Comparison of algebraic data in different ciphers. Ciphers
    Rounds S-boxes Variables Quadratic equations Midori 16 256 2048 5376 Klein 12
    240 1920 5040 PRINCE 10 160 1280 3360 MIBS 32 320 2560 6720 LELBC 16 272 2176
    5712 5.3. Algebraic attack Algebraic attack is one of the vital methods of cryptanalysis.
    The attacker recovers the key by calculating a number of multivariate algebraic
    equations [37]. The more multivariate algebraic equations there are, the stronger
    the resistance to algebraic attack. These complicated multivariate algebraic equations
    are derived from non-linear S-boxes since they are the most important non-linear
    components of cryptographic algorithms. LELBC has an overall number of (16 × 16)
    + (1 × 16) = 272 S-boxes in the encryption since it has 16 iteration rounds. Twenty-one
    quadratic equations with eight input and output bit variables can be used to describe
    a 4 × 4 S-box. Thus, LELBC has 272 × 21 = 5712 quadratic equations corresponding
    to 272 × 8 = 2176 variables. We compared the differences in the number of S-boxes,
    variables, and quadratic equations between LELBC and KLEIN, Midori, PRINCE, MIBS.
    As can be seen from Table 7, LELBC has a better advantage over most of the cipher
    algorithms, such as Midori, in all these aspects. The Midori cipher algorithm
    has been proven to be resistant to algebraic attack. Therefore, it can be said
    that LELBC is also resistant to algebraic attack. 5.4. Meet-in-the-middle attack
    and slide attack Meet-in-the-Middle attack can be used to analyze the algorithm’s
    security by taking into account three characteristics: partial matching, initial
    structure, and splice-and-cut [38]. Partial matching can only be used when the
    cipher algorithm does not reach full diffusion in both forward and reverse directions.
    Therefore, the total diffusion rounds of LELBC are = 3, as discussed in Section
    4.1, so the boundary of partial matching is = 4. The length of the initial structure
    can also be defined by and the number of rounds in which the key difference affects
    all non-linear operations. Thus, limits the length of the initial structure. Splice-and-cut
    can also limit the number of rounds of attack by subtracting 1 from . In summary,
    the upper bound on the number of rounds that can be attacked by intermediate encounters
    is 10 = (4 + 3 + 3) rounds for LELBC. LELBC is sufficient to resist Meet-in-the-Middle
    attack, considering the total number of rounds of the LELBC algorithm. In addition,
    we ensure that each round of operations is different for LELBC since it includes
    round constant addition in the key schedule. Therefore, LELBC is sufficient to
    resist slide attack. 6. Implementation 6.1. Evaluation This section presents an
    ASIC hardware implementation of LELBC. We adopt a round-based architecture implementation
    for LELBC as it takes less energy than a serialized architecture. First, we implemented
    LELBC with Verilog HDL and simulated it with ModelSim SE-64 10.4. Afterwards,
    LELBC is synthesized using the Synopsys Design Compiler version A-2007.12-SP1
    and the UMCL18G212T3 standard cell library. The architectural diagram of the round-based
    structure of LELBC is illustrated in Fig. 8. In a round-based architecture, the
    LELBC occupies one clock cycle per round. The round function consists of ARK,
    LCS, S, and XOR operations. Additionally, the key schedule consists of S-box,
    round constant addition, and left circular shift. The detailed description of
    the encryption/decryption (ENC/DEC) mode and encryption+decryption (ENC+DEC) mode
    of round-based architectures for LELBC is shown below. The round-based architecture
    (ENC/DEC): The hardware resources and energy consumption of LELBC in encryption
    mode and decryption mode are identical due to the symmetry of the PSP structure.
    For fair comparison, we uniformly use registers to store key and does not take
    into account the resources for the key schedule. The hardware resources of the
    round-based architecture for LELBC include 64-bit plaintext registers, 128-bit
    key registers, 128-bit XOR, 16 S-boxes, control logic and other counters. The
    detailed description of the area consumption for LELBC is given in Table 8. Thus,
    the estimated area of round-based architecture (ENC/DEC) for LELBC is 1863.04
    GE, and energy consumption is 6.99 J/bit. The round-based architecture (ENC+DEC):
    The key schedule of decryption for LELBC under unified ED circuits does not match
    that of encryption. Therefore, the ENC+DEC mode only requires an additional S-box,
    5-bit round constant addition, and a multiplexer on the basis of the ENC/DEC mode.
    Consistent with the ENC/DEC mode, the computation of area and energy in the ENC+DEC
    mode also uniformly uses registers to store the key and does not take into account
    the resources for the key schedule. The comparison of area and energy for LELBC
    with other ciphers in ENC+DEC mode is given in Table 9. It is observed from the
    table that there is a 24.02% and 24.04% reduction in energy and area for LELBC
    compared to Midori, a low-energy cipher published in ASIACRYPT 2015. It is possible
    that this reduction in energy and area could allow LELBC to be applicable in a
    future where IoT devices are more resource-constrained. LELBC could reduce the
    energy loss of each resource-constrained device to a greater extent in practical
    IoT deployments, increasing their lifespan and reducing the replacement cycle
    of the devices. From a long-term perspective, the reduced energy consumption in
    practical IoT deployments is conducive to increasing the availability of IoT devices
    in smart agriculture and reducing economic losses. Simultaneously, smart agriculture
    can utilize energy more efficiently and rationally and facilitate the balanced
    development of the environment and the economy. Download : Download high-res image
    (205KB) Download : Download full-size image Fig. 8. The round-based architecture
    of LELBC. Table 8. Area requirement of LELBC. Modules GE % Data Register 384 20.61
    Key Register 768 41.22 S-box 357.28 19.18 Xor 341.76 18.34 Control logic and other
    counters 12 0.65 Total 1863.04 100 Table 9. Comparison of lightweight block cipher
    implementations. Ciphers Block size Key size Latency ENC/DEC ENC＋DEC Empty Cell
    Empty Cell Empty Cell Empty Cell Area (GE) Energy ( J/bit) Area (GE) Energy (
    J/bit) I-PRESENT™ 64 128 31 2714 19.71 2714 19.71 Loong 64 128 32 1937 14.52 1937
    14.52 SKINNY 64 128 36 1686 14.22 1963 16.56 CRAFT 64 128 32 1838 13.78 1838 13.78
    PRINCE 64 128 10 3321 7.78 3321 7.78 Midori 64 128 16 2156 8.08 2454 9.20 LELBC
    64 128 16 1864 6.99 1864 6.99 6.2. Demonstration Smart agriculture has become
    popular in facility agriculture due to all-round environmental monitoring and
    control systems that combine sensors and wireless communication networks. Environmental
    data and on-site scenario information in agriculture are collected and transmitted
    through various wireless sensors to liquid crystal display screens for comprehensive
    display, achieving scientific, timely, and accurate adjustment of agricultural
    production. However, as more and more farms and food processing plants adopt new
    technologies to simplify production and integrate supply chain services, cybercrime
    is becoming an increasingly serious threat to agricultural enterprises. Therefore,
    encrypting sensor data in smart agriculture has a certain significance. Temperature
    is an important factor in the growth and development of crops in agriculture,
    and real-time monitoring of temperature is conducive to the timely adjustment
    of the appropriate temperature state. In this section, a temperature acquisition
    platform was established to simulate environmental monitoring in smart agriculture.
    At the same time, we deployed the 64–128 versions of LELBC on the temperature
    acquisition platform. LELBC simulates data acquisition and encrypted transmission
    in agriculture through temperature sensors and two Artix-7 FPGA development boards
    based on XC7A100T2csg324. We synthesized the RTL generated by LELBC based on the
    round architecture using ISE Design Suite 14.6 and downloaded it onto an Artix-7
    FPGA development board based on the XC7A100T-2csg324. Firstly, an Artix-7 FPGA
    development board acquires real-time temperature data through the temperature
    sensor. It then encrypts and displays the data through the downloaded LELBC. After
    that, the data is transmitted to another Artix-7 FPGA development board in the
    form of ciphertext to be decrypted and displayed. The specific process is shown
    in Fig. 9. The Artix-7 FPGA development board on the right encrypts the collected
    temperature data and displays it, while the Artix-7 FPGA development board on
    the left displays the temperature data after the ciphertext is decrypted. LELBC
    provides encryption of the sensed data before transmission, which ensures that
    the data is kept in the form of ciphertext at all times during transmission. It
    protects the confidentiality of the data by preventing attackers from stealing,
    tampering with, and leaking the real data. The successful implementation of a
    real-time temperature status acquisition and encryption platform demonstrates
    the feasibility of deploying LELBC on the platform. It provides the first line
    of defense for data security in smart agriculture. Download : Download high-res
    image (866KB) Download : Download full-size image Fig. 9. Temperature state acquisition
    and encryption platform. 7. Conclusion The focus of this paper is to design a
    low energy lightweight block cipher LELBC that meets the requirements of an environment
    with extremely limited energy resources. Firstly, we studied the design methods
    of low energy ciphers and optimized them based on the shortcomings of existing
    low energy ciphers. LELBC adopts a novel PSP structure with highly consistent
    encryption and decryption, which takes into account the energy resource constraints
    of unified ED circuits during the design phase. Additionally, GA is used to search
    for a low-energy involutive S-box with excellent performance compared to other
    cipher involutive S-boxes. In terms of hardware implementation on a round-based
    architecture, LELBC has a lower area and energy consumption (encryption + decryption)
    than low energy lightweight ciphers such as PRINCE, Loong, CRAFT, I-PRESENT ,
    SKINNY, and Midori. The test vectors for LELBC are given in Table 12. LELBC has
    been demonstrated by security analysis to be resistant to attacks such as differential
    attack, linear attack, algebraic attack, and other types of attacks. Finally,
    LELBC is deployed on the temperature acquisition platform to encrypt and decrypt
    the sensor data. The successful implementation of this experiment proves the feasibility
    of LELBC, which provides the first layer of protection for the privacy and security
    of smart agriculture. Future works: Post-Quantum Cryptography (PQC) and Side Channel
    Attacks (SCAs) are two of the most important topics in security. In the future,
    we will also delve into these two directions. First, there is a need for a hybrid
    system for the transition towards PQC, although quantum computing based on Shor’s
    algorithm will break most cryptosystems [39]. This hybrid system requires both
    classical cryptography and PQC [40]. Many related techniques are continuously
    proposed [41], [42]. They usually optimize the performance of the algorithms according
    to the NIST standard [43], [44]. In the future, we can further study the relevant
    applications of PQC in resource-constrained environments such as smart agriculture.
    Table 10. The differential distribution table (DDT) of the LELBC S-box. Empty
    Cell 0 1 2 3 4 5 6 7 8 9 A B C D E F 0 16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2
    2 0 2 2 0 0 2 0 0 2 2 2 0 0 2 0 2 0 2 2 0 2 0 4 0 4 0 0 0 0 0 3 0 0 2 2 0 2 2
    0 2 0 0 2 2 2 0 0 4 0 2 2 0 2 2 0 0 2 2 0 0 0 2 2 0 5 0 2 0 2 2 0 2 0 4 0 4 0
    0 0 0 0 6 0 0 2 2 0 2 2 0 2 2 0 0 0 2 2 0 7 0 0 0 0 0 0 0 0 0 4 0 4 4 0 4 0 8
    0 2 4 2 2 4 2 0 0 0 0 0 0 0 0 0 9 0 0 0 0 2 0 2 4 0 4 0 0 0 2 0 2 A 0 0 4 0 0
    4 0 0 0 0 4 0 0 0 0 4 B 0 2 0 2 0 0 0 4 0 0 0 0 0 2 4 2 C 0 2 0 2 0 0 0 4 0 0
    0 0 4 2 0 2 D 0 2 0 2 2 0 2 0 0 2 0 2 2 0 2 0 E 0 0 0 0 2 0 2 4 0 0 0 4 0 2 0
    2 F 0 0 0 0 0 0 0 0 0 2 4 2 2 0 2 4 Table 11. The linear approximation table (LAT)
    of the LELBC S-box. Empty Cell 0 1 2 3 4 5 6 7 8 9 A B C D E F 0 16 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 1 0 4 4 0 4 −8 0 −4 8 4 −4 0 4 0 0 4 2 0 4 8 4 −4 0 4 0 −8
    4 0 4 4 0 −4 0 3 0 0 4 4 0 0 −4 −4 0 0 4 4 −8 8 4 4 4 0 4 −4 0 4 −8 0 4 −8 −4
    −4 0 −4 0 0 4 5 0 −8 0 0 −8 0 0 0 0 0 −8 0 0 0 0 8 6 0 0 4 −4 0 0 4 −4 0 −8 −4
    −4 0 8 −4 −4 7 0 −4 0 −4 4 0 −4 −8 −8 4 0 −4 4 0 4 0 8 0 8 −8 0 −8 0 0 −8 0 0
    0 0 0 0 0 0 9 0 4 4 0 −4 0 −8 4 0 4 −4 −8 −4 0 0 −4 A 0 −4 0 4 −4 −8 −4 0 0 −4
    8 −4 4 0 −4 0 B 0 0 4 4 0 0 −4 −4 0 −8 −4 4 0 −8 4 −4 C 0 4 4 −8 −4 0 0 4 0 −4
    4 0 4 0 8 4 D 0 0 0 8 0 0 8 0 0 0 0 −8 0 0 8 0 E 0 0 −4 4 0 0 −4 4 0 0 −4 4 8
    8 4 −4 F 0 4 8 4 4 8 −4 0 0 −4 0 −4 4 0 −4 8 Table 12. The test vectors of LELBC.
    Plaintext Key Ciphertext 0000-0000-0000-0000 0000-0000-0000-0000-0000-0000-0000-0000
    7F3C-DF08-88BC-6571 0000-0000-0000-0000 FFFF-FFFF-FFFF-FFFF-FFFF-FFFF-FFFF-FFFF
    F310-FA5F-B32E-1DDD FFFF-FFFF-FFFF-FFFF 0000-0000-0000-0000-0000-0000-0000-0000
    A32E-0225-1C85-A0E2 FFFF-FFFF-FFFF-FFFF FFFF-FFFF-FFFF-FFFF-FFFF-FFFF-FFFF-FFFF
    8D3B-957D-58AF-157C 0123-4567-89AB-CDEF 0123-4567-89AB-CDEF-0123-4567-89AB-CDEF
    EE1E-96B3-C248-F88D Second, the fault attack is specifically mentioned in the
    NIST lightweight standardization as a side channel attack. It works by forcing
    a device to operate under extreme conditions, resulting in computational errors.
    It is necessary to consider the possibility of fault attacks in practical applications,
    even though the attackers are generally restricted [45]. A number of error detection
    schemes for cipher algorithms have been proposed [46], [47]. For example, Jasmin
    Kaur et al. proposed signature-based error detection schemes that can be applied
    to cipher algorithms similar to the QARMA cipher [13]. And the overhead of this
    method can be applied to resource-constrained devices. LELBC has similarities
    with QARMA both in terms of block length, structure, and components. In future
    practical deployments, we can also refer to this scheme to secure the LELBC hardware
    implementation. Declaration of competing interest The authors declare that they
    have no known competing financial interests or personal relationships that could
    have appeared to influence the work reported in this paper. Acknowledgments This
    research is supported by the Hunan Provincial Natural Science Foundation of China
    (2022JJ30103), “the 14th Five-Year Plan” Key Disciplines and Application-oriented
    Special Disciplines of Hunan Province, China (Xiangjiaotong [2022] 351), the Science
    and Technology Innovation Program of Hunan Province, China (2016TP1020), Open
    fund project of Hunan Provincial Key Laboratory of Intelligent Information Processing
    and Application for Hengyang Normal University, China (2022HSKFJJ011). Data availability
    Data will be made available on request. References [1] Cvitić Ivan, Peraković
    Dragan, Periša Marko, Gupta Brij Ensemble machine learning approach for classification
    of IoT devices in smart home Int. J. Mach. Learn. Cybern., 12 (11) (2021), pp.
    3179-3202 CrossRefView in ScopusGoogle Scholar [2] Tiwari Ashish, Garg Ritu Adaptive
    ontology-based IoT resource provisioning in computing systems Int. J. Semantic
    Web Inf. Syst. (IJSWIS), 18 (1) (2022), pp. 1-18 Google Scholar [3] Benyezza Hamza,
    Bouhedda Mounir, Kara Reda, Rebouh Samia Smart platform based on IoT and WSN for
    monitoring and control of a greenhouse in the context of precision agriculture
    Internet Things, 23 (2023), Article 100830 View PDFView articleView in ScopusGoogle
    Scholar [4] Wassan Sobia, Suhail Beenish, Mubeen Riaqa, Raj Bhavana, Agarwal Ujjwal,
    Khatri Eti, Gopinathan Sujith, Dhiman Gaurav Gradient boosting for health IoT
    federated learning Sustainability, 14 (24) (2022), p. 16842 CrossRefView in ScopusGoogle
    Scholar [5] Song Jingcheng, Zhong Qi, Wang Weizheng, Su Chunhua, Tan Zhiyuan,
    Liu Yining Fpdp: Flexible privacy-preserving data publishing scheme for smart
    agriculture IEEE Sens. J., 21 (16) (2020), pp. 17430-17438 Google Scholar [6]
    Yang Xing, Shu Lei, Chen Jianing, Ferrag Mohamed.Amine, Wu Jun, Nurellari Edmond,
    Huang Kai A survey on smart agriculture: Development modes, technologies, and
    security and privacy challenges IEEE/CAA J. Autom. Sinica, 8 (2) (2021), pp. 273-302
    CrossRefView in ScopusGoogle Scholar [7] Dwivedi Ashutosh Dhar, Srivastava Gautam
    Security analysis of lightweight IoT encryption algorithms: Simon and simeck Internet
    Things, 21 (2023), Article 100677 View PDFView articleView in ScopusGoogle Scholar
    [8] Leander Gregor, Moos Thorben, Moradi Amir, Rasoolzadeh Shahram The speedy
    family of block ciphers-engineering an ultra low-latency cipher from gate level
    for secure processor architectures (2021) Cryptology ePrint Archive Google Scholar
    [9] Ding Yaoling, Jia Keting, Wang An, Shi Ying Impossible differential analysis
    on 8-round prince Proceedings of the 9th International Conference on Computer
    Engineering and Networks, Springer (2020), pp. 383-395 View in ScopusGoogle Scholar
    [10] Canale Federico, Güneysu Tim, Leander Gregor, Thoma Jan Philipp, Todo Yosuke,
    Ueno Rei Scarf: A low-latency block cipher for secure cache-randomization (2022)
    Cryptology ePrint Archive Google Scholar [11] Guo Ying, Li Lang, Liu Botao Shadow:
    A lightweight block cipher for IoT nodes IEEE Internet Things J., 8 (16) (2021),
    pp. 13014-13023 CrossRefView in ScopusGoogle Scholar [12] Huang Xiantong, Li Lang,
    Yang Jinling Ivlbc: An involutive lightweight block cipher for Internet of Things
    IEEE Syst. J., 17 (2) (2022), pp. 3192-3203 CrossRefView in ScopusGoogle Scholar
    [13] Kaur Jasmin, Kermani Mehran Mozaffari, Azarderakhsh Reza Hardware constructions
    for lightweight cryptographic block cipher qarma with error detection mechanisms
    IEEE Trans. Emerg. Top. Comput., 10 (1) (2020), pp. 514-519 CrossRefView in ScopusGoogle
    Scholar [14] Sahoo Sujit Sangram, Hosmane Mahesh Mohan, Chaurasiya Vijay Kumar
    A secure payment channel rebalancing model for layer-2 blockchain Internet Things,
    22 (2023), Article 100822 View PDFView articleView in ScopusGoogle Scholar [15]
    Sahoo Sujit Sangram, Chaurasiya Vijay Kumar Easb: Ecc based aggregate signature
    without bilinear pairing for blockchain Multimedia Tools Appl. (2023), pp. 1-20
    Google Scholar [16] Maurya Chanchal, Chaurasiya Vijay Kumar Efficient anonymous
    batch authentication scheme with conditional privacy in the Internet of Vehicles
    (IoV) applications IEEE Trans. Intell. Transp. Syst. (2023) Google Scholar [17]
    Raj Meghana Gopal, Pani Santosh Kumar Chaotic whale crow optimization algorithm
    for secure routing in the IoT environment Int. J. Semant. Web Inf. Syst. (IJSWIS),
    18 (1) (2022), pp. 1-25 CrossRefView in ScopusGoogle Scholar [18] Al-Qerem Ahmad,
    Alauthman Mohammad, Almomani Ammar, Gupta Brij B. Iot transaction processing through
    cooperative concurrency control on fog–cloud computing environment Soft Comput.,
    24 (2020), pp. 5695-5711 CrossRefView in ScopusGoogle Scholar [19] Singh Arvind,
    Chawla Nikhil, Ko Jong Hwan, Kar Monodeep, Mukhopadhyay Saibal Energy efficient
    and side-channel secure cryptographic hardware for IoT-edge nodes IEEE Internet
    Things J., 6 (1) (2018), pp. 421-434 Google Scholar [20] Li Wei, Liao Linfeng,
    Gu Dawu, Cao Shan, Wu Yixin, Li Jiayao, Zhou Zhihong, Guo Zheng, Liu Ya, Liu Zhiqiang
    Ciphertext-only fault analysis on the midori lightweight cryptosystem Sci. China
    Inf. Sci., 63 (2020), pp. 1-3 View in ScopusGoogle Scholar [21] Banik Subhadeep,
    Bogdanov Andrey, Isobe Takanori, Shibutani Kyoji, Hiwatari Harunaga, Akishita
    Toru, Regazzoni Francesco Midori: A block cipher for low energy Advances in Cryptology
    – ASIACRYPT 2015, Springer (2015), pp. 411-436 CrossRefView in ScopusGoogle Scholar
    [22] Banik Subhadeep, Mikhalev Vasily, Armknecht Frederik, Isobe Takanori, Meier
    Willi, Bogdanov Andrey, Watanabe Yuhei, Regazzoni Francesco Towards low energy
    stream ciphers IACR Trans. Symmetric Cryptol. (2018), pp. 1-19 CrossRefView in
    ScopusGoogle Scholar [23] Bui Duy-Hieu, Puschini Diego, Bacles-Min Simone, Beigné
    Edith, Tran Xuan-Tu Aes datapath optimization strategies for low-power low-energy
    multisecurity-level internet-of-things applications IEEE Trans. Very Large Scale
    Integr. (VLSI) Syst., 25 (12) (2017), pp. 3281-3290 View in ScopusGoogle Scholar
    [24] Lara-Nino Carlos Andres, Diaz-Perez Arturo, Morales-Sandoval Miguel Lightweight
    hardware architectures for the present cipher in FPGA IEEE Trans. Circuits Syst.
    I. Regul. Pap., 64 (9) (2017), pp. 2544-2555 View in ScopusGoogle Scholar [25]
    Tedeschi Pietro, Sciancalepore Savio, Pietro Roberto Di Security in energy harvesting
    networks: A survey of current solutions and research challenges IEEE Commun. Surv.
    Tutor., 22 (4) (2020), pp. 2658-2693 CrossRefView in ScopusGoogle Scholar [26]
    Chakraborti Avik, Datta Nilanjan, Jha Ashwin, Mancillas-López Cuauhtemoc, Nandi
    Mridul, Sasaki Yu Estate: A lightweight and low energy authenticated encryption
    mode IACR Trans. Symmetric Cryptol. (2020), pp. 350-389 CrossRefView in ScopusGoogle
    Scholar [27] Gupta Brij B., Quamara Megha An overview of Internet of Things (iot):
    Architectural aspects, challenges, and protocols Concurr. Comput.: Pract. Exp.,
    32 (21) (2020), Article e4946 View in ScopusGoogle Scholar [28] Shin Hyungsik,
    Lee Ho Kyoung, Cha Ho-Young, Heo Seo Weon, Kim Hyungtak Iot security issues and
    light weight block cipher 2019 International Conference on Artificial Intelligence
    in Information and Communication, ICAIIC, IEEE (2019), pp. 381-384 CrossRefView
    in ScopusGoogle Scholar [29] Maddikunta Praveen Kumar Reddy, Hakak Saqib, Alazab
    Mamoun, Bhattacharya Sweta, Gadekallu Thippa Reddy, Khan Wazir Zada, Pham Quoc-Viet
    Unmanned aerial vehicles in smart agriculture: Applications, requirements, and
    challenges IEEE Sensors J., 21 (16) (2021), pp. 17608-17619 Google Scholar [30]
    Sinha Bam Bahadur, Dhanalakshmi R. Recent advancements and challenges of Internet
    of Things in smart agriculture: A survey Future Gener. Comput. Syst., 126 (2022),
    pp. 169-184 View PDFView articleView in ScopusGoogle Scholar [31] Quy Vu Khanh,
    Hau Nguyen Van, Anh Dang Van, Quy Nguyen Minh, Ban Nguyen Tien, Lanza Stefania,
    Randazzo Giovanni, Muzirafuti Anselme IoT-enabled smart agriculture: Architecture,
    applications, and challenges Appl. Sci., 12 (7) (2022), p. 3396 CrossRefView in
    ScopusGoogle Scholar [32] Yong Wang, Peng Lei An improved method to obtaining
    s-box based on chaos and genetic algorithm HKIE Trans., 19 (4) (2012), pp. 53-58
    CrossRefView in ScopusGoogle Scholar [33] Wang Yong, Zhang Zhiqiang, Zhang Leo
    Yu, Feng Jun, Gao Jerry, Lei Peng A genetic algorithm for constructing bijective
    substitution boxes with high nonlinearity Inform. Sci., 523 (2020), pp. 152-166
    View PDFView articleView in ScopusGoogle Scholar [34] Çavuşoğlu Ünal, Kökçam Abdullah
    Hulusi A new approach to design s-box generation algorithm based on genetic algorithm
    Int. J. Bio-Inspired Comput., 17 (1) (2021), pp. 52-62 CrossRefView in ScopusGoogle
    Scholar [35] Artuğer Fırat, Özkaynak Fatih Sbox-Cga: Substitution box generator
    based on chaos and genetic algorithm Neural Comput. Appl., 34 (22) (2022), pp.
    20203-20211 CrossRefView in ScopusGoogle Scholar [36] Li Lingchen, Wu Wenling,
    Zheng Yafei, Zhang Lei The relationship between the construction and solution
    of the milp models and applications (2019) Cryptology ePrint Archive Google Scholar
    [37] Yeo Sze Ling, Le Duc-Phong, Khoo Khoongming Improved algebraic attacks on
    lightweight block ciphers J. Cryptogr. Eng., 11 (2021), pp. 1-19 CrossRefGoogle
    Scholar [38] Chen Shiyao, Fan Yanhong, Sun Ling, Fu Yong, Zhou Haibo, Li Yongqing,
    Wang Meiqin, Wang Weijia, Guo Chun Sand: An and-RX feistel lightweight block cipher
    supporting s-box-based security evaluations Des. Codes Cryptogr. (2022), pp. 1-44
    Google Scholar [39] Anastasova Mila, Azarderakhsh Reza, Kermani Mehran Mozaffari,
    Beshaj Lubjana Time-efficient finite field microarchitecture design for curve448
    and ed448 on cortex-m4 International Conference on Information Security and Cryptology,
    Springer (2022), pp. 292-314 Google Scholar [40] Bisheh-Niasar Mojtaba, Azarderakhsh
    Reza, Mozaffari-Kermani Mehran Cryptographic accelerators for digital signature
    based on ed25519 IEEE Trans. Very Large Scale Integr. (VLSI) Syst., 29 (7) (2021),
    pp. 1297-1305 CrossRefView in ScopusGoogle Scholar [41] Seo Hwajeong, Anastasova
    Mila, Jalali Amir, Azarderakhsh Reza Supersingular isogeny key encapsulation (sike)
    round 2 on arm cortex-m4 IEEE Trans. Comput., 70 (10) (2020), pp. 1705-1718 Google
    Scholar [42] Anastasova Mila, Azarderakhsh Reza, Kermani Mehran Mozaffari Fast
    strategies for the implementation of sike round 3 on arm cortex-m4 IEEE Trans.
    Circuits Syst. I. Regul. Pap., 68 (10) (2021), pp. 4129-4141 CrossRefView in ScopusGoogle
    Scholar [43] Sanal Pakize, Karagoz Emrah, Seo Hwajeong, Azarderakhsh Reza, Mozaffari-Kermani
    Mehran Kyber on arm64: Compact implementations of kyber on 64-bit arm cortex-a
    processors International Conference on Security and Privacy in Communication Systems,
    Springer (2021), pp. 424-440 CrossRefView in ScopusGoogle Scholar [44] Jalali
    Amir, Azarderakhsh Reza, Kermani Mehran Mozaffari, Jao David Supersingular isogeny
    diffie-hellman key exchange on 64-bit arm IEEE Trans. Dependable Secure Comput.,
    16 (5) (2017), pp. 902-912 Google Scholar [45] Kaur Jasmin, Kermani Mehran Mozaffari,
    Azarderakhsh Reza Hardware constructions for error detection in lightweight authenticated
    cipher ascon benchmarked on FPGA IEEE Trans. Circuits Syst. II, 69 (4) (2021),
    pp. 2276-2280 Google Scholar [46] Kermani Mehran Mozaffari, Azarderakhsh Reza,
    Xie Jiafeng Error detection reliable architectures of camellia block cipher applicable
    to different variants of its substitution boxes 2016 IEEE Asian Hardware-Oriented
    Security and Trust, AsianHOST, IEEE (2016), pp. 1-6 Google Scholar [47] Aghaie
    Anita, Kermani Mehran Mozaffari, Azarderakhsh Reza Fault diagnosis schemes for
    low-energy block cipher midori benchmarked on FPGA IEEE Trans. Very Large Scale
    Integr. (VLSI) Syst., 25 (4) (2016), pp. 1528-1536 Google Scholar Cited by (2)
    Efficient implementations of CRAFT cipher for Internet of Things 2024, Computers
    and Electrical Engineering Show abstract Securing Industry 4.0: Addressing Cybersecurity
    Challenges in the Integration of Industrial Internet of Things (Iiot) 2024, SSRN
    1 Present address: College of Computer Science and Technology, Hengyang Normal
    University, Hengyang 421002, China. View Abstract © 2023 Elsevier B.V. All rights
    reserved. Recommended articles Benchmark of machine learning algorithms on transient
    stability prediction in renewable rich power grids under cyber-attacks Internet
    of Things, Volume 25, 2024, Article 101012 Kemal Aygul, …, Istemihan Genc View
    PDF In-cabin and outdoor environmental monitoring in vehicular scenarios with
    distributed computing Internet of Things, Volume 25, 2024, Article 101009 Emilio
    Ramos-Sorroche, …, Esteban Egea-Lopez View PDF Blockchain based secure Ownership
    Transfer Protocol for smart objects in the Internet of Things Internet of Things,
    Volume 25, 2024, Article 101002 Kiran M., …, Varun Yarehalli Chandrappa View PDF
    Show 3 more articles Article Metrics Captures Readers: 3 View details About ScienceDirect
    Remote access Shopping cart Advertise Contact and support Terms and conditions
    Privacy policy Cookies are used by this site. Cookie settings | Your Privacy Choices
    All content on this site: Copyright © 2024 Elsevier B.V., its licensors, and contributors.
    All rights are reserved, including those for text and data mining, AI training,
    and similar technologies. For all open access content, the Creative Commons licensing
    terms apply."'
  inline_citation: '>'
  journal: Internet of Things (Netherlands)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'LELBC: A low energy lightweight block cipher for smart agriculture'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Ahmed M.M.
  - Hassanien E.E.
  - Hassanien A.E.
  citation_count: '0'
  description: Poultry farming is crucial to feeding the world's growing population.
    Birds' abnormal behaviour can harm the birds, and disease detection relies on
    poultry behaviour. Integrating Internet of Things (IoT) technology into poultry
    farming can revolutionize the way to monitor and manage poultry health. Feeding,
    preening, and dustbathing are poultry's daily routines. In response to the problem
    of detecting correct poultry behaviour and health status, this paper proposes
    a smart poultry monitoring system that leverages IoT sensors to detect and monitor
    chicken behaviour in poultry farms and provides valuable information to industry
    stakeholders for management decisions and individual poultry health status. The
    phases of the proposed system are data preprocessing, feature extraction, feature
    selection, and detection of poultry behaviour via different classification algorithms.
    An optimized synthetic minority over-sampling technique (SMOTE) via an artificial
    hummingbird algorithm (AHA) is applied to solve the data imbalance problem. The
    experimental results show that an optimized SMOTE obtains better accuracy with
    97 % than other algorithms. Further, to attain accuracy in predicting poultry
    behaviours, Random Forest (RF) achieves superiority compared to other machine
    learning algorithms with an accuracy of 98 %.
  doi: 10.1016/j.iot.2023.101010
  full_citation: '>'
  full_text: '>

    "Skip to main content Skip to article Journals & Books Search Register Sign in
    Brought to you by: University of Nebraska-Lincoln View PDF Download full issue
    Outline Abstract Keywords 1. Introduction 2. Literature review 3. Preliminaries
    4. The proposed smart poultry monitoring system (SPMS) 5. Performance evaluation
    measures 6. Experiments results and discussion 7. Conclusion and future work Ethics
    approval Consent to participate Consent to publish Funding CRediT authorship contribution
    statement Declaration of Competing Interest Data availability References Show
    full outline Figures (24) Show 18 more figures Tables (11) Table 1 Table 2 Table
    3 Table 4 Table 5 Table 6 Show all tables Internet of Things Volume 25, April
    2024, 101010 A smart IoT-based monitoring system in poultry farms using chicken
    behavioural analysis Author links open overlay panel Mohammed Mostafa Ahmed a
    d, Ehab Ezat Hassanien b, Aboul Ella Hassanien c d Show more Add to Mendeley Share
    Cite https://doi.org/10.1016/j.iot.2023.101010 Get rights and content Abstract
    Poultry farming is crucial to feeding the world''s growing population. Birds''
    abnormal behaviour can harm the birds, and disease detection relies on poultry
    behaviour. Integrating Internet of Things (IoT) technology into poultry farming
    can revolutionize the way to monitor and manage poultry health. Feeding, preening,
    and dustbathing are poultry''s daily routines. In response to the problem of detecting
    correct poultry behaviour and health status, this paper proposes a smart poultry
    monitoring system that leverages IoT sensors to detect and monitor chicken behaviour
    in poultry farms and provides valuable information to industry stakeholders for
    management decisions and individual poultry health status. The phases of the proposed
    system are data preprocessing, feature extraction, feature selection, and detection
    of poultry behaviour via different classification algorithms. An optimized synthetic
    minority over-sampling technique (SMOTE) via an artificial hummingbird algorithm
    (AHA) is applied to solve the data imbalance problem. The experimental results
    show that an optimized SMOTE obtains better accuracy with 97 % than other algorithms.
    Further, to attain accuracy in predicting poultry behaviours, Random Forest (RF)
    achieves superiority compared to other machine learning algorithms with an accuracy
    of 98 %. Previous article in issue Next article in issue Keywords Internet of
    ThingsPoultry behaviourClassificationImbalanced datasetHealth of poultryArtificial
    hummingbird optimization algorithm 1. Introduction Nowadays, some diseases are
    particularly important because of the significant economic liabilities that aggravate
    poultry production. But there is also a fair amount of risk involved in the chicken
    farming industry [1], as shown by the sheer number of chicken farming companies
    that have failed because of various difficulties [2]. Precision animal and poultry
    farming relies on the monitoring of animal data and a reliable decision-making
    aid. Numerous things, including financial difficulties, illnesses, poor livestock
    management, and other things, can cause this phenomenon. In the chicken farming
    industry, problems are often caused by mistakes and a lack of care in how chickens
    are managed and cared for. Chickens are an important part of achieving the worldwide
    need for low-fat, high-protein foods. For centuries, the poultry industry has
    been trying to meet the growing demand for chicken and eggs. Consumers'' worries
    about the chicken they buy are on the rise, along with the industry''s response
    to rising demand. When it comes to the health and safety of the consumer and the
    quality of poultry products, animal welfare is of paramount importance. The health
    of poultry products is always enhanced by good animal welfare because it decreases
    the prevalence of disease in poultry chickens. Chickens are notorious for spreading
    disease among themselves and across entire farms, which has led to significant
    economic losses in the poultry sector [3]. Reducing losses and slowing the spread
    of disease in poultry flocks through early detection of sick birds by labelling
    or classifying individuals based on their behaviour. Poultry farming has attracted
    an increasing number of researchers in recent years [4]. Using the Internet of
    Things (IoT) and analysis of images, as well as other technologies that assist
    farmers in poultry health administration and surveillance to track and maintain
    manufacturing information in real-time, other researchers create online platforms
    and employ smart sensors [5]. The process of extracting information entails analysing
    the statistical properties of the raw data before defining an extensive hierarchy
    of the features extracted for upcoming analyses of novel/unknown instances. But
    things like the shape and size of the data, the loudness and unstructured data,
    attribute values loss, imbalanced data, and redundant data tend to make it harder
    for data mining processes to find patterns that make sense. By leveraging interconnected
    devices and sensors, IoT enables real-time monitoring of animal behaviors, offering
    insights into movement, interactions, and health status [6] employed IoT sensors
    to track pet cat behaviors, revolutionizing our understanding of their habits
    and ecological dynamics. Despite the numerous methods available, data can be classified
    in various ways and there are problems that affect its accuracy and efficiency.
    One of the most important problems that affect classification is the imbalance
    of data, which consequently affects the extraction of accurate features. Imbalanced
    datasets are characterized by a significant disparity in the number of samples
    among different classes [7]. The performance of machine learning (ML) classifiers
    suffers as a result of this difficult problem of uneven class distribution. As
    a result, a vast literature has focused on enhance the performance of machine
    learning classifiers to handle imbalanced datasets [8]. Other factors besides
    class imbalance should be considered when classifying imbalanced data, such as
    sample size and class overlap. There are multiple approaches for oversampling
    imbalanced datasets that increase the minority class into the majority class,
    such as the Synthetic Minority Oversampling Technique (SMOTE) [9]. SMOTE uses
    interpolation to create additional minority class examples in regions close to
    the existing ones. In spite of its potential to increase minority class accuracy,
    this method often introduces noisy instances and overfitting issues because it
    ignores the distribution of neighbouring samples. Sampling techniques are required
    for processing imbalanced datasets. There are three main methods for balancing
    the distribution of negative and positive classes; they are positive instances,
    negative instances, and combination sampling between positive and negative instances.
    Data mining techniques [10] can be applied to the series data that is extracted
    from these IoT sensors to gain insight into the behaviour of animals. There is
    frequently a significant amount of imbalance when a decision-making process is
    applied to isolate a special circumstance. The issue of imbalance has received
    more focus in recent years. Many practical contexts feature imbalanced data sets,
    including identifying dishonest phone users, spotting oil spills in satellite
    radar images, teaching word pronunciation, categorizing texts, spotting fake phone
    calls, and carrying out information retrieval and filtering tasks. The classification
    of imbalanced data has attracted a lot of attention. Already in the review [11],
    over 500 papers were gathered and explored in terms of applied methods and actual
    outcomes on data sets. Most publications, highly specialized workshops, and conferences
    have increased dramatically since then. There is ongoing research into better
    ways to categorise imbalanced data. There are a few ways to handle imbalanced
    datasets, including under-sampling the data in the majority class, over-sampling
    the minority class, or a hybrid of the two. The main contributions of this paper
    are summarized as follows: • Design a smart poultry monitoring system that detects
    and monitors the behaviours of the chickens in poultry farms. • Handling an imbalanced
    dataset using an optimized SMOTE via the artificial humming optimization algorithm
    • Prediction of the poultry''s behaviours via different machine learning techniques.
    • Detection of poultry disease status via the classification of sick and healthy
    chickens on a poultry farm according to poultry behaviours. • Selection of the
    best features from extracted new features using feature selection-based optimization.
    • Provides a performance validation comparison between various algorithms. The
    paper is organized as follows. Section 2 discusses other studies that are related
    to this paper. The preliminaries, like the essential concepts for SMOTE and the
    standard optimization algorithm for the artificial hummingbird, are provided in
    Section 3. Section 4 describes the details of the proposed poultry system. The
    measures of performance evaluation are discussed in Section 5. The experiment
    results are discussed in Section 6. Section 7 discusses the paper''s conclusion
    as well as future work. 2. Literature review Traditional classification algorithms
    suppose a balanced training dataset, but they struggle to identify minority classes.
    Traditional classification algorithms perform poorly on class-imbalanced datasets.
    On the other hand, since the uncommon classes typically represent intriguing concepts,
    it is typically most crucial to identify the minority classes. Furthermore, gathering
    these minority class examples can be costly or difficult. The uneven distribution
    in the datasets is what gives rise to the issue of class imbalance. As a result,
    it makes sense to think about rebalancing through the data space sampling to lessen
    the impact of class imbalance. One benefit of such a solution is that it can be
    used regardless of the classifier, so it can also be used as a pre-sampling technique.
    Under-sampling and over-sampling are the two fundamental concepts that are at
    the core of resampling methods, which are used to achieve a more equitable class
    distribution. The terms \"random under-sampling\" (RUS) and \"random over-sampling\"
    (ROS) refer to the elimination of representative samples from the majority classes
    and the systematic duplication of examples from the minority classes, respectively.
    The most prominent over-sampling method is SMOTE [12], which has garnered a lot
    of interest in recent years. A hybrid method was proposed for pre-processing imbalanced
    datasets by [13] for generating new samples using SMOTE and rough set theory.
    They noticed excellent average results from the experimental findings. Similarly,
    [14] introduced the Majority Weighted Minority Oversampling Technique (MWMOTE)
    to address issues with unbalanced learning. The method first identifies samples
    from the minority class that are challenging to learn and gives them weights based
    on their Euclidean distance from the closest majority samples. The SMOTE algorithm
    was utilized by [15] to resample the data, which they paired with a collection
    of extreme learning machines, a feature selection ensemble, and a decision tree
    (DT) to develop an original mechanism for forecasting the future to predict the
    two-class imbalance. A new semi-supervised adversarial generative adversarial
    network with spectral normalisation was proposed by [16]. (SN-SSCGAN). The idea
    behind it is to use minority fault samples that have been partially labelled to
    rebalance the dataset, it is necessary to produce additional samples with a comparable
    spread. To obtain a time-frequency matrix and to address these issues, a pre-process
    such as smooth the vibration signal using the wavelet transform is implemented,
    second, adversarial training is used to achieve Nash equilibrium on the partially
    labelled time-frequency fault data before generating data with a similar distribution.
    Random under-sampling (RUS) and the AdaBoost algorithm are two sampling techniques
    that have been used extensively in research that builds on ensemble learning [17].
    Because of the unpredictability of the random sampling technique, instances may
    occasionally not be representative, making it difficult to see how the model can
    be improved. [18] proposed the SMOTE Boost algorithm for building a balanced and
    high-quality dataset. In [19], authors use Internet of Things (IoT) sensors to
    gather information about waste features like waste bin size, waste size, and smell
    in the bin to alert truck drivers, waste management, and authorities. In addition
    to solving the problem of missing data and choose best optimal path for waste
    truck from disposal center to suitable waste bins in many different places in
    the city have embedded devices. An intelligent method was proposed by [20] who
    implemented it to detect and classify chickens based on their vocalization and
    using fisher discriminate analysis (FDA) using signals detection to sort healthy
    chickens from sick ones. [21] Detect method for avian influenza according to the
    sound (noise) analysis of poultry via SVM. By examining the poultry chickens''
    feces, it is possible to keep track of their behaviour and make an early infection
    diagnosis [22]. A managed lighting environment and an IR camera have been used
    to determine the number of chickens in poultry [23]. [24] proposed an IoT platform
    that allows for the real-time analysis of each hen''s egg production, enabling
    the substitute of chicken whose egg production falls below a predetermined level
    to achieve the overall target egg yield rate. The health, cleanliness, and growth
    of the poultry chickens were determined by tracking their [25]. One of the factors
    contributing to poor poultry welfare is lameness [26], and when lameness is detected
    early, farmers and veterinarians can take preventative measures. Table 1 summarizes
    the related work including the data sets type, used techniques, the main contribution,
    and limitations. The majority of the existing literature focuses on predicting
    diseases in poultry, and other research deals with imbalanced databases. But it
    did not consider the imbalance of data when detecting behaviours and diseases
    in poultry. Most of the previous research largely lacked an effective strategy
    for boosting the real-world effectiveness of a model trained with an imbalanced
    dataset when detecting diseases in poultry. Table 1. The relevant literature summaries.
    Ref Dataset focus Techniques Contributions Limitations [12] Imbalanced dataset
    SMOTE • Solving imbalanced dataset Determining the k value of k-neighbors by randomly
    inside the SMOTE algorithm [13] Imbalanced dataset hybrid method • The construction
    of new samples for datasets Evaluation includes only synthetic instances falling
    within the minority class''s lower approximation will be used. [14] Imbalanced
    dataset MWMOTE • produces synthetic samples using weighted, enlightening minority
    class samples. The quantity of synthetic samples generated was negligible. [15]
    Imbalanced dataset SMOTE- ELM -DT • Re-size the imbalanced dataset. Dimensionality
    reduction can be performed after the dataset has been preprocessed. [16] Imbalanced
    dataset SN-SSCGAN • Creating new samples with the same distribution using minority
    fault samples, and enhancing the fault diagnosis model''s capacity for generalization
    Only use flow distribution data that can be found in the bearing deterioration
    process. [17] Imbalanced dataset RUSBoost • Examines RUSBoost and SMOTEBoost''s
    Effectiveness. Increasing training time and Complexity. [18] Imbalanced dataset
    SMOTEBoost • Enhancing the minority classes’ prediction. Need to increase the
    number of comparisons until it shows efficiency and needs automatic determination
    of the amount of SMOTE [19] Frequencies of chicken Peak The audio recording procedures
    • Monitoring the growth of chickens Because the humming sound vibrations are interconnected,
    the poultry industry cannot profit from it. [20] Analysis of vocal sound Fisher
    Discriminate Analysis (FDA) • Diagnosis of Disease It is challenging to implement
    in large poultry farms because vocal analysis is challenging due to the vocal
    vibration overlapping [21] Vibrations of Sound Support vector machines (SVM) •
    Detection of flu in poultry Determine the presence of flu in chickens at large
    poultry farms [22] Images of faces from chickens monitoring Campylobacter control
    • Diseases Detection and Monitoring Abnormal Feeding Small-scale study of abnormal
    feeding behaviour in chickens. [23] Chickens Images A lighting preference test
    system uses the weight method • Feeder Crowd Surveillance Keeping the lighting
    conditions ideal for viewing camera images. [24] Data extracted from sensors attached
    to the poultry body Smart nest box based on RFID • Controlling the production
    of eggs. Only allows for tracking the chickens inside and outside the nest. [25]
    Data extracted from sensors attached to the poultry body Automated position monitoring
    • Tacking of poultry''s whereabouts Only describes the tracking method. [26] Data
    extracted from sensors attached to the poultry body Decision tree (DT) • Prediction
    of Lameness for poultry through walking speed, acceleration, genetic strain, and
    sex. Need to compare with multiple other algorithms to prove that it is the best
    method 3. Preliminaries 3.1. SMOTE for balanced data Synthetic Minority Over-sampling
    Technique (SMOTE) [27] is regarded as an improved version of the randomized oversampling
    technique that increases the classifier''s validation dataset generalization capability
    and lowers the likelihood of overfitting. By adding a synthetic minority class
    to the original dataset between the minority class and its nearest neighbours
    using random linear interpolation, it focuses on enhancing the dataset''s imbalance.
    The imbalanced data issue is ameliorated by SMOTE. The specific concept is put
    into practice as follows: Identity data set X''s k closest neighbours in the minor
    class, choose n samples at random, and record them as Xi. Finally, interpolation
    defines the new sample Xnew as defined in Eq. (1): (1) Where rand represents a
    random number uniformly distributed within the range of (0, 1). But there are
    some issues with the SMOTE algorithm Fig. 1. The choice of the value for k is
    unrelated to the selection of the nearest neighbors. Additionally, replicating
    the distribution of the original data is challenging due to potential repeatability
    issues and the presence of noisy, indistinct boundaries between the classes of
    positive and negative in the artificially generated samples from the minor class
    samples located at the periphery. Download : Download high-res image (224KB) Download
    : Download full-size image Fig. 1. Chart for generating synthetic data. 3.2. Artificial
    hummingbird optimization algorithm (AHA) A brand-new bio-inspired algorithm is
    introduced the Artificial Hummingbird Algorithm (AHA) has been proposed by [28]
    to address global optimization problems. The world''s smallest bird and most beautiful
    creature. To the extent that brain size correlates with overall intelligence,
    hummingbirds would rank at the top of the animals. Hummingbirds have a top speed
    45 km/h. While some of the smallest seeds can reach speeds of over 80 beats per
    second, the largest seeds can emerge in the air at a rate of about 12 beats per
    second. Hummingbirds must forage to maintain their metabolism, and nectar tends
    to make up a majority of their nutrition. AHA consists of three components as
    follows: ■ Sources of Food: the decision of hummingbird on which flower to visit
    next for food depends on several factors, including the quality and content of
    flower nectar, and the refill rate of the flower nectar, and the hummingbird''s
    previous frequency of visits to the flower. ■ Hummingbirds: Each species of hummingbird
    has its unique food source, and the hummingbird and its source of the food are
    always in the same relative location. When a hummingbird finds a reliable source
    of nectar, it will tell the other members of its population where to find it and
    how often it will be refilled. ■ Visit Table: For each food source, data on the
    visit level is kept, which indicates how long it has been since the same hummingbird
    last visited that particular source. Initialization phase: Hummingbirds in a population
    of n are distributed at random among n food sources using Eq. (2). (2) The upper
    and lower boundaries are denoted as Low and Up respectively, while xi ''s representation
    of the location of the ith food source. The visit table is illustrated by Eq.
    (3). (3) Foraging with a guide: Every hummingbird possesses an inherent inclination
    to visit the food source containing the highest volume of nectar. Consequently,
    a desirable food source should exhibit a high rate of nectar refilling and a longer
    duration between visits by a particular hummingbird. To facilitate guided foraging
    behaviour, a hummingbird is permitted to identify food sources based on their
    visit levels and subsequently choose the one with the highest nectar-refilling
    rate as its target source. Once identified, the hummingbird can then direct its
    flight towards the desired food source. Three types of flight maneuvers, namely
    omnidirectional, diagonal, and axial flights, are employed for foraging purposes,
    as outlined from Eqs. (4) to (6). (4) (5) (6) The function generates a random
    number ranging from 1 to d, while randperm(k) produces a random permutation of
    numbers ranging from 1 to k. Additionally, r1 represents a random number that
    falls within the range of 0–1. A. Foraging on the frontier: After a hummingbird
    finish consuming all the nectar from its target food source, it prefers to forage
    for food in new locations rather than revisit old ones. Consequently, Hummingbirds
    are able to move freely between different parts of their territory using Eqs.
    (7) & (8). (7) (8) The factor of territorial, denoted as b, has a normal distribution,
    which describes it by N(0,1). Where 0 is mentioned as the mean and 1 is the standard
    deviation. B. Foraging migration: If the food supply in a hummingbird''s regular
    feeding spot dwindles, it may move to a nearby flower bed, the hummingbird typically
    undertakes a migration to a farther food source for feeding purposes. Hummingbird
    migration behaviour can be modelled using Eq. (9) by first determining the source
    with the lowest nectar-refilling rate and then simulating the bird''s transition
    to a new source that is generated randomly. (9) xwor represents the food source
    within the population that possesses the poorest nectar-refilling rate. 4. The
    proposed smart poultry monitoring system (SPMS) The utilization of wearable sensing
    devices enables the precise observation of individual chickens, as they are tracked
    and monitored for a specific period of time. Rapid trends in sensing technology
    have reduced the cost of such devices, making sensor-driven data analysis a more
    viable option. More recent research has also helped to enhance data collection
    techniques for livestock and poultry farming by making use of wearable sensing
    devices [29]. This paper proposes a smart poultry monitoring system to classify
    poultry behaviours that affect the status of poultry (sick or healthy). Fig. 2
    depicts the overall architecture of the proposed system. Download : Download high-res
    image (575KB) Download : Download full-size image Fig. 2. The general architecture
    of the proposed system. 4.1. Dataset description phase The process of obtaining
    the desired input data from various resources is known as the dataset collection
    phase. Data size and data characteristics were all considered during the data
    collection process. By placing wearable accelerometers over individual chickens,
    the research [30,31] created a dataset of poultry. The data stores three-axis
    chicken data, which depicts the behaviours of poultry chickens like dustbathing,
    preening, and pecking. Both healthy and sick chickens were included in the dataset
    of these activities. The external parasites covering the chickens'' skin were
    purposefully embossed by the researchers, stressing the animals. The data generated
    from the sensor, which is attached to the chicken''s back to collect data, can
    be used to record a wide range of natural behaviours. The Activity AX3 sensor
    is a tri-axial accelerometer, measuring static and dynamic acceleration on three
    orthogonal axes (X, Y, and Z) and weighing only 11 g. The X, Y, and Z axes were
    all oriented dorsoventrally, laterally, and anteriorly-posteriorly, respectively.
    The sensor is set up with a 100 Hz sampling frequency and +/− 8 g sensitivity,
    allowing for two weeks of continuous data collection on a single charge. The following
    actions are hypothesised to be related to poultry health based on a survey of
    the available literature [32]. The 24 unique poultry chickens distributed among
    four different flocks make up the 20-week dataset. The dataset includes the daily
    averages for each chicken''s pecking, preening, and dustbathing in six different
    flocks. The available poultry behaviour dataset attributes are shown in Table
    2 which describes raw data X, Y, and Z axes of the accelerometer which describes
    the chicken behaviours cases. Table 2. Description of tri-axial accelerometer
    raw data. Raw data Description X-axis Is a horizontal axis that runs from left
    to right. Y-axis Is a vertical axis that runs from the bottom. Z-axis Is a third
    axis that runs perpendicular to the X-axis and Y-axis. Class Describes the behaviour
    (Peaking/Feeding, preening, and dustbathing) of poultry according to three axes.
    Table 3 describes the three labelled behaviour classes. Fig. 3 demonstrates pre-processing
    of raw data are created from the input labelled data (pecking, preening, and dustbathing).
    The labelled dataset was used to feed the model and then used to validate it.
    Table 3. Description of the three behaviour classes monitored. Class id Behaviour
    Description 2 Pecking The frequency for bringing the beak to the ground 3 Preening
    The frequency of preening of the feathers by the beak. 4 Dustbathing The frequency
    of bird which is in a sitting or lying position with feathers raised in a vertical
    wing-shake. 0 No Behaviour —— Download : Download high-res image (500KB) Download
    : Download full-size image Fig. 3. Visualization of tri-axial accelerometer data
    before preprocessing. 4.2. Data preprocessing phase The data from an accelerometer
    comprises readings from three float numeric axes (x, y, z). All the identified
    exercises are confined within the range of [−8, 8] for each axis. Subsequently,
    these readings were employed to identify three behaviours: pecking/feeding, preening,
    and dustbathing. The size of dataset is 176,154 records before data cleaning.
    The dataset size after cleaning and deleting all the duplicate data is 99,998
    records. To prepare the data for the classification process, it will go through
    several processes. Data cleaning (removing zeros values) and data duplication
    are the processes involved. According to the techniques employed during the classification
    model, the raw data is formatted into the necessary system. In essence, the decision
    class is included at the end of the entire column, and the data is presented using
    an r * c matrix, where r and c represent several rows and columns, respectively.
    The best advantage of pre-processing is that it helps to minimize data redundancy
    and improve overall dataset organization. To improve classification results, perform
    a feature selection task to extract a subset of pertinent features from the dataset.
    This task also helps eliminate the possibility of incorrect training by removing
    redundant features and noise. Fig. 4 demonstrates tri-axial accelerometer data
    after removing null values, zero classes, and duplicate records. Download : Download
    high-res image (693KB) Download : Download full-size image Fig. 4. Visualization
    of tri-axial accelerometer data after pre-processing. 4.3. Feature extraction
    phase A systematic evaluation was conducted to determine the usefulness and significant
    features for distinguishing between various activities by employing different
    classification models and ranking their importance. Classification models were
    used to identify the relative importance of the seventeen features. The process
    of feature extraction was carried out via MATLAB (2019a). There are 17 instant
    characteristics through 3D accelerations (X, Y, Z), Single Magnitude Area (SMA),
    Average Intensity (AI), Movement Variation (MV), Energy, and Entropy were calculated
    via formulas listed in Table 4, where i is the record index, were chosen according
    to the length of time each behaviour lasted. For instance, feeding/pecking typically
    take very little time, about one peck per second, when compared to the time it
    takes a broiler to preening, which is roughly 3 s for 4 steps. This resulted in
    a total number of features, all of which were incorporated into the model training
    process. Table 4. Formulations for motion characteristics of broilers utilizing
    triaxial acceleration data. Feature Formulas Acceleration of X axis Acceleration
    of Y axis Acceleration of Z axis Average X-axis (Ax) Average Y-axis (Ay) Average
    Z-axis (Az) Movement Variation (MV) MV =  Signal Magnitude Area (SMA) SMA = Average
    Intensity (AI) AI =  Where MI(t) = Entropy EN =   Where Energy E =   Where Maximum
    X (MaxX) The highest acceleration along the X-axis. Maximum Y (MaxY) The highest
    acceleration along the Y-axis Maximum Z (MaxZ) The highest acceleration along
    the Z-axis Minimum X (MinX) The lowest acceleration along the X-axis. Minimum
    Y (MinY) The lowest acceleration along the Y-axis Minimum Z (MinZ) The lowest
    acceleration along the Z-axis 4.4. Feature selection phase Various classification
    models were employed systematically to evaluate the utility of features and identify
    the most significant ones for distinguishing between different activities. In
    the field of data science, it is essential to determine the most relevant features
    within a dataset for training learning algorithms [33]. Some features may not
    contribute to improving the performance of the learning algorithm and can even
    degrade its accuracy. Consequently, feature selection (FS) algorithms are utilized
    to identify a subset of features that can enhance the machine learning model''s
    performance. FS algorithms also help prevent overfitting and expedite the training
    process of the learning algorithm. Furthermore, knowledge about the selected features
    can provide valuable insights into the datasets. 4.4.1. Fitness function The hummingbird
    swarm consists of individual birds, each representing a solution for feature selection.
    These birds are encoded using real numbers, as demonstrated in Eq. (10). Each
    solution, denoted as X, is comprised of n real numbers, n denotes the overall
    features of the dataset being analysed. The xi dimension of X corresponds to the
    decision of selecting or not selecting a particular feature. To form a subset
    of features, a decoding process must be performed on the bird''s position. This
    allows for the conversion of the bird''s position into a subset of selected features.
    (10) (11) The subset of features obtained after decoding the d-dimensionality
    of each solution is represented by Sd in Eq. (11). The value of xd in the d-dimension
    determines whether Sd is selected as 0 or 1. If xd corresponds to a selected feature,
    then Sd is set to 1. Conversely, if xd corresponds to a non-selected feature,
    then Sd is set to 0. Feature selection aims to identify an optimal combination
    of features that optimize the accuracy of classification while reducing the number
    of selected features. While it involves finding a suitable combination of features,
    the primary objective is to optimize the classification accuracy. The fitness
    function is designed to maximize the accuracy of classification for the test sets
    while maintaining the minimum number of selected features. Eq. (12) demonstrates
    the simultaneous consideration of these two aspects in the fitness function. (12)
    Where, constant value ∝, between 0 and 1, is utilized to control the relative
    significance of classification accuracy versus the number of selected features.
    As ∝ increases, classification accuracy is given greater weight. The accuracy
    of the classifier for bird i is represented by ACC(i), while the number of features
    selected by bird i is denoted as ObjSum(i). The total number of features in the
    dataset is represented by Total Features. 4.5. An optimized SMOTE for solving
    the data imbalance problem This stage is considered one of the most important
    stages that solves the data imbalance problem that significantly and tangibly
    affects the results related to poultry management. Incorporate (Artificial Humming
    Algorithm) AHA''s optimization process with DT and RF to prevent local convergence.
    Additionally, the proposed hybrid metaheuristic will serve as the foundation for
    an algorithm that optimizes hyperparameters to determine the optimum values of
    N and k for balancing class distribution of training data over parameter range.
    The values of the two most important parameters are optimized with the swarm algorithm
    in Fig. 5, which depicts the optimization of the SMOTE algorithm. Every iteration
    the search agents (such as hummingbird in AHA) move, the new approach is expected
    to locate the optimal combination of K and S through a classifier decision tree
    to produce the best Kappa and accuracy performance. Then, using iterative processing
    to determine the optimal K and S, compare the performance measures with the conditions
    to enhance the Kappa, the accuracy values, and the imbalanced ratio (min/maj).
    Download : Download high-res image (323KB) Download : Download full-size image
    Fig. 5. Flowchart of the proposed balancing dataset with optimized SMOTE. Each
    step interval for the S and K parameters in the computation is different. The
    proportion of the majority class to the minority class has the highest value for
    S. S must have a minimum value of 1 %. If there are two possible labels for the
    target class in the dataset, The majority class has 1000 instances, while the
    minority class has only 10. This implies that the minority class sample must grow
    by at least 20 times and up to 100,000 times, Kmin = 2, and Kmax = 10. As a result
    of the testing dataset''s consistency, Kappa [34] is regarded as a substitute
    measure of computing performance of classification. The classifier model''s reliability
    is represented by kappa. The accuracy is more credible because the Kappa value
    is higher. The range of Kappa values (also known as simply Kappa) is from −1 to
    1. While this is going on, three Kappa thresholds are used to determine the credibility
    of classification accuracy: The first measure in Kappa is considered to have strong
    consistency and high accuracy when Kappa is greater than or equal to 0.75. Second,
    if Kappa is greater than or equal to 0.4 and less than or equal to 0.75, the accuracy''s
    confidence level is generally considered to be high. The third threshold is that
    accuracy is astounding if Kappa is less than 0.4. When the observation in one
    class is higher than the observation in the other two classes, there is a class
    imbalance. This dataset is to detect poultry behaviours. As you can see in Fig.
    6, pecking behaviour is around 85.14 % when compared with preening and dustbathing
    at 14.31 % and 0.54 %, respectively. Therefore, we want the preening and dustbathing
    data to be balanced with the chicken pecking data so that the data can be analysed,
    and behaviour predicted efficiently. Download : Download high-res image (265KB)
    Download : Download full-size image Fig. 6. Imbalanced analysis dataset for poultry
    behaviours. 4.6. Dictionary for poultry behaviours To attempt the automatic construction
    of a dictionary behaviours or query-templates, our training/testing data as shown
    in Fig. 7. A dictionary''s list of query-templates (behaviours) is presented in
    Column1, Column2, …, Columnn; each query has a class (Column1.class), a threshold
    value is shown in Column2, and Column3 depicts an axis (X or Y or Z) property,
    in addition to the query data points. We need a threshold that defines our acceptable
    rate of false positives and false negatives for each class. Download : Download
    high-res image (657KB) Download : Download full-size image Fig. 7. Tri-axial accelerometer
    for chicken time series. In theory, a single behaviour could have multiple possible
    instantiations, just as the number seven has two different but equivalent written
    forms (the traditional \"7\" and the middle line \"7\"). A polymorphic dictionary
    describes this type of dictionary. From what we''ve seen in the chickens, we''ve
    deduced that each behaviour has only one correct execution. However, expanding
    this code to work with any polymorphic dictionary is so simple that it''s been
    left out for the sake of brevity. A dictionary of chicken behaviours can be constructed
    that searches annotated regions for motifs of highly conserved sequences [35].
    Think about the corresponding difficulty in the discrete string space to get a
    feel for this. We count, categories, and time-stamp certain behaviours as they
    occur in the time series data stream. The data stream is filtered using a sliding
    window. If the sequence meets the matching criteria for a query-template (behaviour)
    in the dictionary, it is associated with that behaviour and given a timestamp.
    The effectiveness of feeding/pecking, preening, and dustbathing behaviours are
    all assessed and reported. Out-of-sample evaluation is the only objective of the
    test dataset after the training dataset has been used to construct the dictionary
    of behaviours. Perhaps the most recognizable behaviour in chickens is the act
    of pecking/feeding. Dictionary has discovered the query-template in Fig. 8 to
    analyse pecking/feeding behaviour in a training dataset, where matching subsequences
    along the (left) X-axis and (right) Z-axis need to be identified, which incorporates
    subsequences that match those in the training dataset. Subsequence matches outside
    of regions annotated as feeding/pecking behaviour are considered false positives
    (FP), but those within these regions are considered true positives (TP). The query-template
    and corresponding subsequences from the training dataset for preening behaviour
    are shown in Fig. 9. Download : Download high-res image (326KB) Download : Download
    full-size image Fig. 8. A query template for pecking/feeding behaviour. Download
    : Download high-res image (241KB) Download : Download full-size image Fig. 9.
    A query template for preening behaviour. Fig. 10, Fig. 11 demonstrate how challenging
    it can be to detect dustbathing behaviour, as it was infrequent in both the training
    and test datasets. Only two occurrences of the green colour of dustbathing were
    present in the training dataset, and only one was found in the test dataset. These
    figures display the query template and matching subsequences regarding behaviour
    involving dustbathing in the test dataset, with the X-axis and Z-axis shown on
    the left and right, respectively. Download : Download high-res image (222KB) Download
    : Download full-size image Fig. 10. A query template for dustbathing behaviour.
    Download : Download high-res image (289KB) Download : Download full-size image
    Fig. 11. Matching sub-sequences for dustbathing behaviour. 4.7. Classification
    of poultry behaviours phase Behaviour, which is evident through actions and posture,
    is widely recognized as one of the most indicators that are crucial, most widely
    used, and most easily understood indicators of animal welfare and health, even
    more so than stress and output. Therefore, enhancing animal welfare and detecting
    sick chickens early necessitates real-time, automatic, and nondestructive monitoring
    of poultry behaviour. The following behaviours are hypothesized to be related
    to poultry health. When feeding or pecking, the bird lowers its beak to the ground
    and picks up a tidbit of food. Feather care routines that involve the beak include
    preening and dustbathing. Ectoparasite-infected birds, in particular, are thought
    to engage in increased preening/dustbathing. The various algorithms are used to
    categories pecking, preening, and dustbathing. Our analysis of the behaviour of
    broiler chickens was informed by the results of the preliminary behavioural posture
    pre-processing. Feeding/pecking, preening, and dustbathing are the three behaviours
    we assign to the test data. The chickens'' daily routine typically consists of
    them strolling around and chowing down. When prompted, such as by noise in the
    environment, they will take off running and only stop when they are fatigued.
    Additionally, there is a phenomenon where sick chickens lie down, and this behaviour
    warrants related study [36]. Preening is a common behaviour as well, accounting
    for about 11 % of a bird''s daily time. Chickens'' actions are assumed to be unrelated
    to one another; for instance, we don''t think chickens would run around the yard
    while munching on some food. In Section 6.1 we can see how the algorithm for classifying
    chicken behaviour recognition in this paper. The classification models of poultry
    behaviour were implemented via MATLAB (2019a) using Machine Learning Toolbox.
    Classification algorithms examined in this study are KNN, Decision Tree, Random
    Forest, Logistic Regression, Gaussian Naïve Bayes, and AdaBoost. 4.8. Diagnosis
    of poultry disease phase Seven prediction models were investigated for their ability
    to predict the poultry'' health. Table 3 provides a brief overview of the dataset
    that was used for this study. The dataset was chosen because it represents a comprehensive
    set of broiler behaviours, all of which are necessary for proper analysis: feeding/pecking,
    preening, and dustbathing. Real-world datasets were used to train the machine
    learning classification models. This paper proposes two techniques, AHA-DT and
    AHA-RF, and conducts experiments with supervised learning algorithms including
    k-Nearest Neighbor, Decision Tree, Random Forest, Naive Bayes, and Support Vector
    Machine to improve the classification of the poultry according to extracted data
    from the poultry dataset. Fig. 12 demonstrates the standard Decision Tree classifier,
    which contains X, Y, and Z that represent three axis values which predict poultry
    behaviours pecking, preening, and dustbathing, respectively. Download : Download
    high-res image (390KB) Download : Download full-size image Fig. 12. Standard decision
    tree for poultry dataset classification. 5. Performance evaluation measures The
    performance measures in the proposed system include multiple measures: measures
    for evaluating the balance of data and other measures for evaluating the best
    classification of the proposed methods. All measures are based on the following
    confusion matrix; refer to Fig. 13. When evaluating learning algorithms on a dataset
    quantitatively, the confusion matrix is a useful component. Important comparison
    parameters are computed using an empirical method. It also includes the crucial
    metrics defined by Eqs. (13)–(23): • True Positive (TP): indicates that the event
    was correctly predicted. • True Negative (TN): indicates that the system has correctly
    predicted that no event will occur. • False Positive (FP): represents a system''s
    incorrect prediction of an event. • False Negative (FN): represents a system''s
    incorrect prediction of no event. Download : Download high-res image (64KB) Download
    : Download full-size image Fig. 13. Confusion matrix. Accuracy: measures the proportion
    of samples that are correctly classified into all samples Eq. (13). (13) F-measure:
    It is defined as a metric for evaluating an algorithm''s effectiveness and is
    computed by combining the recall and precision metrics. Calculating F-measure
    using Eq. (14): (14) where the values of precision and recall are calculated using
    Eqs. (15) & (16), respectively. (15) (16) Area Under Curve (AUC): It is the plot
    that evaluates the classification model. The classification effect of the model
    is better with a higher AUC value. Classifiers with a value closer to 1 have faster
    convergence, while those with a value closer to 0 have sub-optimal performance
    Eq. (17). (17) G-value calculates using recall and precision average which Classification
    models perform better at classifying imbalanced data when the G-value is high
    Eq. (18). (18) OOBerror: is the average percentage of incorrect predictions made
    by each decision tree. where ntree is the number of decision trees. The more accurate
    a model''s classification is, the lower the acceptable OOBerror Eq. (19). (19)
    Kappa value: can also be called Cohen''s Kappa Eq. (20) which be determined by
    using a confusion matrix that lists the percentages of each class''s TP, FP, and
    TN which clarifies p0 indicates the overall accuracy and pc is a metric for evaluating
    the degree to which predicted and actual class values. (20) where and are given
    as respectively Eqs. (21) & (22) (21) (22) Imbalanced Ratio (IR): is used to calculate
    the percentage of imbalanced data value where the total number of points for the
    minority class denoted by while the total number of points for the majority class
    is denoted by . Whenever the percentage of imbalanced data is small, it indicates
    the efficiency and balance of the data Eq. (23). (23) The most important key metrics
    to track the changes and results for solving imbalanced datasets are accuracy,
    Kappa, and the imbalance ratio (Min/Maj). 6. Experiments results and discussion
    The findings of the experiments are discussed in this section along with the phases
    that were tested and the proposed system. The same computer contains the following
    specific settings: Hardware specification consists of Core (TM) i7-4500, 2.40
    GHz, 16 G, and 1 TB that express Processor, Frequency, RAM, and Hard Disk respectively.
    Software specification contains Windows 11, and MATLAB R2019a that express operating
    system and programming language, respectively to extract and analyse the results.
    6.1. Experiments of feature selection Assuming a population size of 100, the fitness
    function employs an α value of 0.8. The dataset undergoes 20 independent experiments,
    with a maximum of 500 iterations set as the limit. To test the classification
    accuracy of the selection scheme for each bird, the KNN classifier (with K = 7)
    is utilized. The hyperparameter configurations for each algorithm are provided
    in Table 5. The information of dataset is composed of 20 poultry features, more
    than 99,998 instances, and two classes which are described if the poultry is sick
    or healthy. Table 5. Hyperparameter settings. Algorithm Parameters AHA r [0, 1]
    WOA a = 2–0, a2 = −1 to −2 PSO w = 0.729, c1 = c2 = 1.49445 GA Crossover = 0.7,
    Mutation = 0.25 The experimental results of the AHA algorithm for feature selection
    and three other comparison algorithms on a dataset are presented in Table 5. AHA
    is the algorithm with the highest mean classification accuracy and the AHA algorithm
    outperformed the other algorithms on test datasets, and its mean accuracy is better
    than that of CSO, PSO, and GA algorithms in feature selection. The worst mean
    accuracy in feature selection was observed for the GA algorithm. However, the
    dataset with better mean accuracy on full features saw an improvement of less
    than 10 %. The experimental outcomes prove the AHA algorithm is more effective.
    Table 6 displays the average features and standard deviation in dimensions for
    the four algorithms following feature selection for the dataset. An intuitive
    observation shows that the AHA and CSO algorithms have a significant dimensionality
    reduction effect compared to the GA and PSO algorithms, and the dimensional standard
    deviation is low, indicating relatively high stability of the algorithms. The
    experimental results provide direct evidence that the AHA algorithm is highly
    effective, resulting in better classification accuracy on datasets and a significant
    reduction in the number of unnecessary features. Table 6. The mean, standard deviation
    (Std), and mean accuracy (MACC) after performing feature selection with various
    algorithms. Empty Cell AHA CSO PSO GA Dataset Mean Std MACC Mean Std MACC Mean
    Std MACC Mean Std MACC Poultry Dataset 5.85 0.65 0.982 5.85 0.65 0.921 6.00 1.34
    0.893 6.20 1.78 0.843 6.2. Experiments of handling imbalanced dataset The study''s
    experiments involve the utilization of both real-world and artificial datasets.
    An optimized SMOTE results in the creation of the synthetic dataset which is used
    to supplement the movement data of the poultry chickens and are a significant
    contribution to the proposed study for classifying poultry behaviours. The original
    dataset''s sparsity is provided by the proposed generated synthetic dataset SMOTE-AHA-DT
    and SMOTE-AHA-RF to suggest a predictive behaviour of poultry farms for instantaneous
    chicken disease diagnosis, the experiment developed machine learning classification
    models. The results of the proposed optimized SMOTE based on AHA using the Decision
    Tree (DT) and Random Forest (RF) classification models on the poultry dataset
    are shown in Table 7. The three-performance metrics of accuracy and Kappa with
    high accuracy and the best Kappa value. these best results indicate that, after
    undergoing training with the imbalanced data, the two proposed method with classification
    algorithms'' power is completely useless. Regardless of the classification algorithm
    employed, the results remain subpar after processing the original dataset using
    SMOTE-PSO, SMOTE-GOA, and SMOTE-WOA with DT and RF classification for some but
    perhaps not optimal balance. Using the effectiveness of the proposed an optimized
    SMOTE as SMOTE-AHA-DT, and SMOTE-AHA-RF methods proposed in this paper demonstrated
    that, as shown in Table 8 The Kappa for SMOTE-AHA-DT is high and nearly equal
    to one with high accuracy of 98 % more than proposed SMOTE-AHA-RF. The proposed
    methods managed to maintain a manageable range of control over classification
    results. The change in the dataset''s degree of imbalance ratio can be seen through
    the index of imbalance ratio, demonstrating that our methods work even when the
    dataset is not completely balanced. Table 7. The results of an optimized SMOTE.
    Algorithms Accuracy (%) Kappa Imbalance ratio (Min/Maj) % SMOTE 0.7814 0.20 0.4
    SMOTE-PSO-RF 0.7189 0.18 0.21 SMOTE-WOA-RF 0.8355 0.65 0.28 SMOTE-GOA-RF 0.8447
    0.05 0.33 Proposed optimized SMOTE-RF 0.9626 0.71 0.07 SMOTE-PSO-DT 0.8447 0.07
    0.31 SMOTE-WOA-DT 0.6175 0.14 0.22 SMOTE-GOA-DT 0.7603 0.52 0.19 Proposed optimized
    SMOTE-DT 0.9784 0.82 0.02 Table 8. The different performances AUC, OOBerror, G-mean
    and F-measure for different algorithms. Measures AUC OOBerror F-value G-value
    Raw Data 0.7273 0.24285 0.8024 0.8453 SMOTE 0.7814 0.17918 0.7351 0.9304 SMOTE-PSO-RF
    0.7189 0.19238 0.6594 0.9333 SMOTE-WOA-RF 0.8355 0.17764 0.5458 0.9367 SMOTE-GOA-RF
    0.8447 0.16444 0.6730 0.8814 Proposed optimized SMOTE-RF 0.9626 0.19018 0.9510
    0.9809 SMOTE-PSO-DT 0.8447 0.25385 0.7614 0.9672 SMOTE-WOA-DT 0.6175 0.19347 0.5137
    0.9676 SMOTE-GOA-DT 0.7603 0.23012 0.8241 0.9124 Proposed optimized SMOTE-DT 0.9784
    0.17544 0.9743 1 Afterward, the proposed Swarm-SMOTE optimization algorithm was
    compared with other swarm optimization algorithms SMOTE-PSO, SMOTE-WOA, and SMOTE-GOA
    with two classification models decision tree (DT) and random forest (RF) and used
    G-mean and F-measure for dataset to confirm the classification performance of
    the model. In Table 8 and Fig. 14, the experimental findings are displayed and
    show that the proposed optimization algorithm achieves superior results in the
    F-measure compared to other algorithms in the poultry dataset and that it also
    outperforms competing algorithms in terms of G-mean. The dataset is correctly
    classified for all of them. The experimental findings demonstrate that the algorithm
    presented in this paper is superior for the classification of the minority class
    and provides a practical solution to the issue of data classification that is
    imbalanced. Download : Download high-res image (275KB) Download : Download full-size
    image Fig. 14. Performances and rankings of proposed an optimized SMOTE with others
    under various k values. G-means, F-measures, AUC, and OOBerror. Especially the
    poultry dataset is included. Classification results for the poultry dataset after
    being expanded using the proposed optimization SMOTE show an improvement of 7.073
    % in accuracy and a decrease of 4.74 % in OOBerror value compared to the original
    data. Fig. 15 depicts data points for each class in the poultry dataset consisting
    of pecking/feeding, preening, and dustbathing classes, and pecking/feeding is
    considered the majority class compared to preening and dustbathing. Fig. 15(a)
    represents a visualization of input data points for preening and pecking before
    generating synthetic data points, and Fig. 15(b) also has the same visualization
    of input data points for dustbathing and pecking before producing synthetic data
    points. Fig. 15(c) and (d) demonstrate visualization of input data points for
    preening and dustbathing after generating synthetic data points via an optimized
    SMOTE. Download : Download high-res image (719KB) Download : Download full-size
    image Fig. 15. Visualization of data points (feeding/pecking, preening, and dustbathing)
    before and after generating synthetic data points via an optimized SMOTE. Table
    9 and Fig. 16 demonstrate the runtime for the poultry data set using all optimization
    synthetic oversampling techniques in seconds. The most time-consuming oversampling
    techniques, according to an analysis of the data in the table, were SMOTE-AHA
    and SMOTE-WOA with DT and RF. However, among all the oversampling techniques compared,
    SMOTE-PSO and SMOTE-GOA with DT and RF were the lowest. SMOTE-WOA-DT and SMOTE-WOA-RF
    are the methods that are most similar to our suggested method in terms of runtime,
    but they got twice as long to complete. Table 9. Runtimes of all optimizations
    synthetic oversampling techniques under several iterations. Algorithms \\ Iterations
    100 200 300 400 500 Overall SMOTE 0.2131 0.3421 0.3616 0.3421 0.3612 1.6201 SMOTE-PSO-RF
    0.2001 0.3349 0.2042 0.2301 0.2321 1.2014 SMOTE-WOA-RF 0.1914 0.1611 0.2421 0.2514
    0.1442 0.9902 SMOTE-GOA-RF 0.2154 0.1963 0.1443 0.3465 0.4251 1.3276 Proposed
    SMOTE-AHA-RF 0.2834 0.1204 0.1028 0.2156 0.2301 0.9523 SMOTE-PSO-DT 0.3824 0.3677
    0.2554 0.2214 0.2952 1.5221 SMOTE-WOA-DT 0.2231 0.2258 0.2364 0.1581 0.1287 0.9721
    SMOTE-GOA-DT 0.2109 0.3607 0.1025 0.1645 0.2174 1.056 Proposed SMOTE-AHA-DT 0.1926
    0.1862 0.2118 0.1265 0.1176 0.8347 Download : Download high-res image (265KB)
    Download : Download full-size image Fig. 16. Ranking of runtimes of all optimizations
    synthetic oversampling techniques. 6.3. Experiments of poultry behaviours prediction
    For each predicted chicken behaviour, we determined whether it was a true positive
    (TP), true negative (TN), false positive (FP), or false negative (FN) based on
    how closely it matched the actual behaviour. Percent AUC, accuracy, F-measure,
    precision, and recall were used to assess these models'' predictive efficiency.
    For three behaviour datasets, RF, KNN, and Adaboost models showed high accuracies
    in classifying poultry pecking (99 %, 98 %, and 96 %, respectively), preening
    (98 %, 98 %, and 95 %, respectively), and dustbathing (99 %, 98 %, and 97 %, respectively)
    and RF method is considered the best model in terms of accuracy. According to
    the research results, RF is the most effective classification model, with 90 %
    precision and recall when matching instances of the pecking behaviour. The second
    model, DT, matches instances of the pecking behaviour with a precision of 89 %
    and a recall of 90 %. Table 10 presents the results of the classification of pecking,
    preening, and dustbathing behaviours in the test dataset. According to the results
    of performance evaluation for each classification of poultry behaviours. ROC-AUC
    curve depicts in Fig. 17 according to the results of AUC for each classification
    models. Table 10. Different classification for chicken behaviours prediction.
    Classification Behaviour AUC Accuracy F-measure Precision Recall KNN Pecking 0.983
    0.887 0.885 0.886 0.887 Preening 0.980 0.899 0.897 0.898 0.899 Dustbathing 0.991
    0.876 0.874 0.875 0.876 Decision Tree Pecking 0.933 0.900 0.898 0.899 0.900 Preening
    0.948 0.912 0.910 0.911 0.912 Dustbathing 0.976 0.889 0.887 0.888 0.889 Random
    Forest Pecking 0.989 0.901 0.899 0.900 0.901 Preening 0.983 0.913 0.911 0.912
    0.913 Dustbathing 0.994 0.890 0.888 0.889 0.890 Logistic Regression Pecking 0.828
    0.855 0.853 0.854 0.855 Preening 0.890 0.867 0.865 0.866 0.867 Dustbathing 0.495
    0.844 0.842 0.843 0.844 Gaussain Naïve Bayes Pecking 0.768 0.807 0.806 0.807 0.807
    Preening 0.876 0.819 0.818 0.819 0.819 Dustbathing 0.861 0.796 0.795 0.796 0.796
    AdaBoost Pecking 0.959 0.894 0.893 0.893 0.894 Preening 0.940 0.906 0.905 0.905
    0.906 Dustbathing 0.916 0.883 0.882 0.882 0.883 Download : Download high-res image
    (382KB) Download : Download full-size image Fig. 17. ROC–AUC curve for each behaviour
    classification techniques. The frequent aggregation of preening and dustbathing
    activities. Along the axis Ay, there is a noticeable concentration of preening
    and dustbathing occurrences. Because the sensor is in constant motion as the poultry
    moves, pecking events are spread out over a wider area. Because of how the sensor
    was built and how it moved when attached to Ay''s back, the recorded motion was
    extremely useful for differentiating between activity intensities and was especially
    useful for identifying dustbathing behaviour. Ay was able to detect and record
    the movement of the sensor caused by the preening behaviour of turning the head
    to the side. Fig. 18 data depicts that pecking behaviour can be distinguished
    from preening and dustbathing through the use of MV. Download : Download high-res
    image (189KB) Download : Download full-size image Fig. 18. Extracting behavioural
    features from the chicken''s back accelerometer in a three-dimensional scatterplot,
    visualised via AI, Ay, and MV metrics. There was a clear separation of preening
    and preening events, as behavioural events for both activities occurred simultaneously
    Fig. 19. As a result, it becomes more difficult to tell these behaviours apart
    from others. Even though pecking events occur all over the place, the high prediction
    accuracy of this behaviour can be attributed to its isolation from other activities,
    as is especially evident along the AI axis. Consequently, the AI metric can tell
    the difference between pecking, preening, and dust-bathing behaviours. By fusing
    signals from all directions, AI is able to determine the magnitude of a pecking
    motion, with the greater acceleration associated with pecking (particularly in
    the Z-axis plane) being recorded and used to distinguish it from the other three
    behaviours. The low sensitivity of dustbathing behaviours reflects the lack of
    a consistent categorization for these occurrences. Download : Download high-res
    image (191KB) Download : Download full-size image Fig. 19. Extracting behavioural
    features from the chicken''s back accelerometer in a three-dimensional scatterplot,
    visualised via Az, AI and entropy metrics. It became obvious that pecking and
    dustbathing behaviours did not fall into two distinct categories in Fig. 20. When
    comparing the intensity of movement during locomotion and resting postures, the
    MV metric proved invaluable. Due to the minimal distinction between preening and
    dustbathing, these two activities were inaccurately classified in Fig. 20. Because
    the X-axis clearly changes orientation when dustbathing, Ax has become an important
    metric for distinguishing between dustbathing and upright behaviour since its
    advent. Download : Download high-res image (221KB) Download : Download full-size
    image Fig. 20. Extracting behavioural features from the chicken''s back accelerometer
    in a three-dimensional scatterplot, visualised via the Ax, SMA, and MV metrics.
    Fig. 21 shows the matching subsequence''s for running the pecking, preening, and
    dustbathing behaviour in the test dataset which indicates in Fig. 21(a), (b),
    and (c), respectively. True positives are represented by green dots, while false
    positives by red ones. Download : Download high-res image (371KB) Download : Download
    full-size image Fig. 21. Subsequence matching on the test set for feeding/pecking,
    preening, and dustbathing behaviours. 6.4. Experiments for the diagnosis of poultry
    disease As diseases cause significant economic losses in poultry production, they
    are of paramount importance. The costs associated with the disease can be reduced
    if it is detected and diagnosed quickly. We propose an algorithm for identifying
    sick chickens that can be used to reduce the spread of disease. We examine the
    poultry dataset [30] about chickens over the course of a full day. We know that
    on the first day, all of the chickens were healthy and that on the second day,
    some chickens were sick (infested with ectoparasites). For this reason, it is
    essential that the proposed classification results provide a sufficient degree
    of confidence in their ability to differentiate between healthy and sick chickens.
    Fig. 22 shows a chart depicting the frequency distribution of pecking behaviours
    across all of the chickens When observed, the subjects exhibited either a healthy
    state (indicated by the colour green) or a sick state (indicated by the colour
    red). The depicted figure demonstrates a certain degree of overlap between the
    peck counts of healthy and sick chickens. Download : Download high-res image (265KB)
    Download : Download full-size image Fig. 22. Histogram for the number of pecking
    behaviours distribution. The number of preening behaviours performed by each chicken,
    both when healthy (green) and when sick, is then analysed statistically (red).
    Based on the preening count alone, the proposed classifier accurately distinguishes
    between sick and healthy chickens, as evident from Fig. 23. The histogram of preening
    counts for healthy chickens exhibits a left-skewed distribution, whereas for sick
    chickens, it is concentrated more towards the middle and right. This observation
    underscores the reliable discriminatory ability of the algorithm in identifying
    the health status of chickens. Download : Download high-res image (242KB) Download
    : Download full-size image Fig. 23. Histogram for the number of peening behaviours
    distribution. In Fig. 24, we compare the frequency of dustbathing between chickens
    in good health (green) and those in sick health (red). Dustbathing is clearly
    more common on the left side of the histogram, which corresponds to healthy chickens.
    The dustbathing count for sick chickens which can be seen in the middle of the
    histogram. Overall, it appears that the pecking behaviour gives a sufficient degree
    of assurance in identifying healthy and sick chickens. Symptoms such as preening
    and dustbathing can be used as reliable indicators of whether or not a chicken
    is sick. Download : Download high-res image (230KB) Download : Download full-size
    image Fig. 24. Histogram for the number of dustbathing behaviours distribution.
    The evaluation of each supervised machine learning classification model''s performance
    involves using metrics like Precision, Recall, F1-Score, and Accuracy. The effectiveness
    of the chosen classification models is summarized in Table 11 along with their
    percentages. Table 11. Percentage measurements for different classification prediction
    of disease. Behaviours Classification models Accuracy Precision Recall F-score
    Pecking/Feeding Prediction K-Nearest Neighbor (KNN) 0.798 0.798 0.799 0.795 Random
    Forest (RF) 0.839 0.832 0.842 0.839 Decision Tree (DT) 0.827 0.824 0.825 0.824
    Support Vector Machine (SVM) 0.719 0.745 0.735 0.718 Logistic Regression (LG)
    0.805 0.807 0.808 0.803 Gaussian Naive Bayes (GNB) 0.826 0.831 0.827 0.823 Proposed
    AHA-DT 0.986 0.989 0.994 0.983 Proposed AHA-RF 0.941 0.893 0.871 0.876 Preening
    Prediction K-Nearest Neighbor (KNN) 0.773 0.773 0.774 0.77 Random Forest (RF)
    0.814 0.807 0.817 0.814 Decision Tree (DT) 0.802 0.799 0.8 0.799 Support Vector
    Machine (SVM) 0.694 0.72 0.71 0.693 Logistic Regression (LG) 0.780 0.782 0.783
    0.778 Gaussian Naive Bayes (GNB) 0.801 0.806 0.802 0.798 Proposed AHA-DT 0.961
    0.964 0.969 0.958 Proposed AHA-RF 0.916 0.868 0.846 0.851 Dustbathing Prediction
    K-Nearest Neighbor (KNN) 0.744 0.744 0.745 0.741 Random Forest (RF) 0.785 0.778
    0.788 0.785 Decision Tree (DT) 0.773 0.77 0.771 0.77 Support Vector Machine (SVM)
    0.665 0.691 0.681 0.664 Logistic Regression (LG) 0.751 0.753 0.754 0.749 Gaussian
    Naive Bayes (GNB) 0.772 0.777 0.773 0.769 Proposed AHA-DT 0.932 0.935 0.941 0.929
    Proposed AHA-RF 0.887 0.839 0.817 0.822 According to Table 11, which depicts different
    measures for each poultry behaviours prediction, the proposed classifier AHA-DT
    for pecking behaviour successfully distinguishes between sick as well as healthy
    poultry chicken in 98 % of the proposed study. On the real and made-up datasets
    for other classification models, when K = 7, the K-Nearest Neighbor (KNN) can
    accurately predict whether a chicken is healthy or sick by 79 %. Random Forest
    (RF) machine learning classifiers demonstrated well performance and yielded results
    with an accuracy of about 83 %, and Decision Tree also achieved a good accuracy
    of about 82 %. With an accuracy rate of 72 %, the SVM classification model performed
    the worst of all the techniques. With an accuracy rate of 80 %, logistic regression
    (LG) also achieves intermediate accuracy. With an accuracy of 80 %, Gaussian Naive
    Bayes classification outperformed KNN little. The accuracy of the AHA-DT is 98.63
    %, and the accuracy of the AHA-RF is 94.14 %. The AHA-DT method stands out with
    the most significant impact on accuracy. This approach exhibits notable benefits
    in terms of its strong generalization capability and robustness when addressing
    poultry prediction scenarios. According to results of accuracy for each classification
    model according to pecking/feeding, preening, and dustbathing behaviours, respectively.
    The proposed AHA-DT overcomes all other classification models until another proposed
    AHA-RF reveals the true power of evolutionary algorithms. Finally, the results
    compare with SVM, KNN, LG, GNB, DT, and RF classification algorithms. 7. Conclusion
    and future work The poultry industry needs an automatic system to improve the
    productivity of healthy birds, keep track of their health, and predict disease
    outbreaks before the disease occurs. This paper proposes the smart poultry monitoring
    system, empowered by IoT sensors, which effectively gauges the health status of
    chickens, whether sick or healthy, according to their behaviour. The objectives
    of the proposed system are: (1) selecting the best features from extracted features;
    (2) proposing an oversampling-based optimization to balance the data through the
    utilization of SMOTE through an optimization technique called the Artificial Hummingbird
    Algorithm (AHA); (3) predicting poultry behaviours that assist stakeholders in
    making decisions for the health of poultry; and (4) detection of poultry disease
    by behaviour analysis. The conclusion that has been extracted from the results
    of the classification of poultry behaviour is that RF achieved the best results
    and diagnosis of poultry disease by optimizing decision tree classification via
    AHA-DT, which is superior and outperforms other techniques with the highest level
    of classification accuracy of 97.6 %. In future work, we will extend SMOTE into
    multi-objective problem to deal with multi-classification imbalanced datasets
    due to the fact that in real-world applications, the issue of imbalanced datasets
    affects both binary and multi-classifications. Ethics approval The authors herewith
    do confirm that this manuscript has not been published elsewhere and is not also
    under consideration by the other journals. Consent to participate All the authors
    have seen and approved the content of the submitted manuscript. Consent to publish
    All the authors consent to publish the final manuscript. Funding No funding source
    has been utilized for conducting this empirical research. CRediT authorship contribution
    statement Mohammed Mostafa Ahmed: Conceptualization, Data curation, Formal analysis,
    Investigation, Software, Visualization, Writing – original draft, Writing – review
    & editing. Ehab Ezat Hassanien: Supervision, Investigation, Resources, Writing
    – review & editing. Aboul Ella Hassanien: Conceptualization, Data curation, Formal
    analysis, Investigation, Supervision, Validation, Resources, Writing – review
    & editing. Declaration of Competing Interest The authors declare no competing
    interests. Data availability Data will be made available on request. References
    [1] Jun Bao, Qiuju Xie Artificial intelligence in animal farming: a systematic
    literature review J. Clean. Prod., 331 (2022), Article 129956, 10.1016/j.jclepro.2021.129956
    View PDFView articleView in ScopusGoogle Scholar [2] H.M. Hafez, Y.A. Attia Challenges
    to the poultry industry: current perspectives and strategic future after the COVID-19
    outbreak Front. Vet. Sci., 7 (2020), p. 516, 10.3389/fvets.2020.00516 Aug 26PMID:
    33005639; PMCID: PMC7479178 View in ScopusGoogle Scholar [3] N. Ben Sassi, X.
    Averós, I. Estevez Technology and poultry welfare Animals, 6 (2016), Article 62,
    10.3390/ani6100062 Google Scholar [4] E. Rowe, M.S. Dawkins, S.G. Gebhardt-Henrich
    A systematic review of precision livestock farming in the poultry sector: is technology
    focussed on improving birdwelfare? Animals, 9 (2019), Article 614, 10.3390/ani9090614
    View in ScopusGoogle Scholar [5] M. Stefanova Precision poultry farming: software
    architecture framework and online zootechnical diary for monitoring and collaborating
    on hens’ health M. Bournaris (Ed.), Information and Communication Technologies
    in Modern Agricultural Development; Salampasis, Springer, Cham, Switzerland (2019),
    10.1007/978-3-030-12998-9_14 T., Eds Google Scholar [6] R.C. Chen, V.S. Saravanarajan,
    H.T. Hung Monitoring the behaviours of pet cat based on YOLO model and raspberry
    Pi Int. J. Appl. Sci. Eng., 18 (5) (2021), pp. 1-12 View in ScopusGoogle Scholar
    [7] V. López, A. Fernández, S. García, V. Palade, F. Herrera An insight into classification
    with imbalanced data: empirical results and current trends on using data intrinsic
    characteristics Inf. Sci., 250 (2013), pp. 113-141, 10.1016/j.ins.2013.07.007
    View PDFView articleView in ScopusGoogle Scholar [8] R. Cheng, L. Zhang, S. Wu,
    S. Xu, S. Gao, H. Yu Probability density machine: a new solution of class imbalance
    Learn. Sci. Program., 2021 (2021), pp. 1-14, 10.1155/2021/7555587 Google Scholar
    [9] A. Fernandez, S. Garcia, F. Herrera, N.V. Chawla SMOTE for learning from imbalanced
    data: progress and challenges, marking the 15-year anniversary J. Artif. Intell.
    Res., 61 (2018), pp. 863-905, 10.1613/jair.1.11192 View in ScopusGoogle Scholar
    [10] R. Giusti, D.F. Silva, G.E. Batista Improved time series classification with
    representation diversity and SVM 2016 15th IEEE International Conference on Machine
    Learning and Applications (ICMLA), IEEE (2016), pp. 1-6, 10.1109/ICMLA.2016.0010
    View in ScopusGoogle Scholar [11] H. Guo, Y. Li, J. Shang, G. Mingyun, H. Yuanyue,
    G. Bing Learning from class-imbalanced data: review of methods and applications
    Expert Syst. Appl., 73 (2017), pp. 220-239, 10.1016/j.eswa.2016.12.035 URL Google
    Scholar [12] N.V. Chawla, K.W. Bowyer, L.O. Hall, W.P. Kegelmeyer SMOTE: synthetic
    minority over-sampling technique J. Artif. Intell. Res., 16 (2002), pp. 321-357,
    10.1613/jair.953 View in ScopusGoogle Scholar [13] E. Ramentol, Y. Caballero,
    R. Bello, F. Herrera Smote-rsb*: a hybrid preprocessing approach based on oversampling
    and undersampling for high imbalanced data-sets using smote and rough sets theory
    Knowl. Inf. Syst., 33 (2012), pp. 245-265, 10.1007/s10115-011-0465-6 View in ScopusGoogle
    Scholar [14] S. Barua, M.M. Islam, X. Yao, K. Murase Mwmote–majority weighted
    minority oversampling technique for imbalanced data set learning IEEE Trans. Knowl.
    Data Eng., 26 (2014), pp. 405-425, 10.1109/TKDE.2012.232 View in ScopusGoogle
    Scholar [15] S.J. Lin, C. Chang, M.F. Hsu Multiple extreme learning machines for
    a two-class imbalance corporate life cycle prediction Knowl.-Based Syst., 39 (3)
    (2013), pp. 214-223, 10.1016/j.knosys.2012.11.003 View PDFView articleView in
    ScopusGoogle Scholar [16] Minqiu Xu, Youqing Wang An imbalanced fault diagnosis
    method for rolling bearing based on semi-supervised conditional generative adversarial
    network with spectral normalization IEEE Access, 9 (2021), pp. 27736-27747, 10.1109/ACCESS.2021.3058334
    View in ScopusGoogle Scholar [17] C. Seiffert, et al. RUSBoost: a hybrid approach
    to alleviating class imbalance IEEE Trans. Syst. Man Cybern.-Part A Syst. Humans,
    40 (1) (2010), pp. 185-197, 10.1109/TSMCA.2009.2029559 View in ScopusGoogle Scholar
    [18] N.V. Chawla et al., SMOTEBoost: improving prediction of the minority class
    in boosting, in: European Conference on Principles of Data Mining and Knowledge
    Discovery, Springer, Berlin, 2003, pp. 107–119. https://doi.org/10.1007/978-3-540-39804-2_12.
    Google Scholar [19] M.M. Ahmed, E. Hassanien, A.E. Hassanien IoT-based intelligent
    waste management system Neural Comput. Appl., 35 (2023), pp. 23551-23579, 10.1007/s00521-023-08970-7
    View in ScopusGoogle Scholar [20] M. Sadeghi, A. Banakar, M. Khazaee, M Soleimani
    An intelligent procedure for the detection and classification of chickens infected
    by clostridium perfringens based on their vocalization Braz. J. Poult. Sci., 17
    (2015), pp. 537-544, 10.1590/1516-635×1704537-544 View in ScopusGoogle Scholar
    [21] J. Huang, W. Wang, T. Zhang Method for detecting avian influenza disease
    of chickens based on sound analysis Biosyst. Eng., 180 (2019), pp. 16-24, 10.1016/j.biosystemseng.2019.01.015
    View PDFView articleGoogle Scholar [22] F.M. Colles, R.J. Cain, T. Nickson, A.L.
    Smith, S.J. Roberts, M.C. Maiden, D. Lunn, M.S. Dawkins Monitoring chicken flock
    behaviour provides early warning of infection by human pathogen Campylobacter
    Proc. R. Soc. B Biol. Sci., 283 (2016), Article 20152323, 10.1098/rspb.2015.2323
    View in ScopusGoogle Scholar [23] G. Li, B. Li, Z. Shi, Y. Zhao, H. Ma Design
    and evaluation of a lighting preference test system for laying hens Comput. Electron.
    Agric., 147 (2018), pp. 118-125, 10.1016/j.compag.2018.01.024 View PDFView articleView
    in ScopusGoogle Scholar [24] Y.R. Chien, Y.X. Chen An RFID-based smart nest box:
    an experimental study of laying performance and behavior of individual hens Sensors,
    18 (2018), Article 859, 10.3390/s18030859 View in ScopusGoogle Scholar [25] L.M.
    Stadig, T.B. Rodenburg, B. Ampe, B. Reubens, F.A. Tuyttens An automated positioning
    system for monitoring chickens’ location: effects of wearing a backpack on behaviour,
    leg health and production Appl. Anim. Behav. Sci., 198 (2018), pp. 83-88, 10.1016/j.applanim.2017.09.016
    View PDFView articleView in ScopusGoogle Scholar [26] N. de Alencar, I. ̈a ̈as,
    N. da Silva Lima, R. Gonçalves, L. de Lima, H. Ungaro, J. Minoro Abe, J. Abe Lameness
    prediction in broiler chicken using a machine learning technique Inf. Process.
    Agric., 8 (3) (2020), pp. 409-418, 10.1016/j.inpa.2020.10.003 Google Scholar [27]
    R. Blagus, L. Lusa SMOTE for high-dimensional class-imbalanced data BMC Bioinform.
    (2013), 10.1186/1471-2105-14-106 Google Scholar [28] Weiguo Zhao, Liying Wang,
    Seyedali Mirjalili Artificial hummingbird algorithm: a new bio-inspired optimizer
    with its engineering applications Comput. Methods Appl. Mech. Eng., 388 (2022),
    Article 114194, 10.1016/j.cma.2021.114194 View PDFView articleView in ScopusGoogle
    Scholar [29] B.G. Smythe, J.B. Pitzer, M.E. Wise, A.F. Cibils, D. Vanleeuwen,
    R.L. Byford Behavioral responses of cattle to naturally occurring seasonal populations
    of horn flies (Diptera: muscidae) under rangeland conditions J. Econ. Entomol.,
    108 (2015), pp. 2831-2836, 10.1093/jee/tov247 View in ScopusGoogle Scholar [30]
    Website Dataset: https://sites.google.com/view/poultrydataset/. Google Scholar
    [31] Abdoli, A., Murillo, A.C., Yeh, C.C.M., Gerry, A.C., & Keogh, E.J. (2018,
    December). Time series classification to improve poultry welfare. In 2018 17TH
    IEEE International Conference on Machine Learning and Applications (ICMLA) (pp.
    635–642). IEEE. https://doi.org/10.1109/ICMLA.2018.00102. Google Scholar [32]
    C.L. Daigle, et al. Noncaged laying hens remain unflappable while wearing body-mounted
    sensors: levels of agonistic behaviors remain unchanged and resource use is not
    reduced after habituation Poult. Sci., 91 (10) (2012), pp. 2415-2423, 10.3382/ps.2012-02300
    View PDFView articleView in ScopusGoogle Scholar [33] Y. Saeys, I. Inza, P. Larrañaga
    A review of feature selection techniques in bioinformatics Bioinformatics, 23
    (19) (2007), pp. 2507-2517, 10.1093/bioinformatics/btm344 View in ScopusGoogle
    Scholar [34] Tomoaki Ichikawa, et al. High-B-value diffusion-weighted MRI in colorectal
    cancer Am. J. Roentgenol., 187 (1) (2006), pp. 181-184, 10.2214/ajr.05.1005 .
    View in ScopusGoogle Scholar [35] C.-C.M. Yeh, N. Kavantzas, E. Keogh Matrix profile
    VI: meaningful multidimensional motif discovery 2017 IEEE International Conference
    on Data Mining (ICDM) (2017), pp. 565-574, 10.1109/ICDM.2017.66 IEEE View in ScopusGoogle
    Scholar [36] X. Zhuang, T. Zhang Detection of sick broilers by digital image processing
    and deep learning Biosyst. Eng., 179 (2019), pp. 106-116, 10.1016/j.biosystemseng.2019.01.003
    View PDFView articleView in ScopusGoogle Scholar Cited by (0) View Abstract ©
    2023 Elsevier B.V. All rights reserved. Recommended articles Vibration-based rotation
    speed estimation for Industrial IoT Internet of Things, Volume 25, 2024, Article
    101024 Eli Gildish, …, Igor Makienko View PDF Benchmark of machine learning algorithms
    on transient stability prediction in renewable rich power grids under cyber-attacks
    Internet of Things, Volume 25, 2024, Article 101012 Kemal Aygul, …, Istemihan
    Genc View PDF LELBC: A low energy lightweight block cipher for smart agriculture
    Internet of Things, Volume 25, 2024, Article 101022 Qingling Song, …, Xiantong
    Huang View PDF Show 3 more articles Article Metrics Captures Readers: 20 View
    details About ScienceDirect Remote access Shopping cart Advertise Contact and
    support Terms and conditions Privacy policy Cookies are used by this site. Cookie
    settings | Your Privacy Choices All content on this site: Copyright © 2024 Elsevier
    B.V., its licensors, and contributors. All rights are reserved, including those
    for text and data mining, AI training, and similar technologies. For all open
    access content, the Creative Commons licensing terms apply."'
  inline_citation: '>'
  journal: Internet of Things (Netherlands)
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: A smart IoT-based monitoring system in poultry farms using chicken behavioural
    analysis
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Gouiza N.
  - Jebari H.
  - Reklaoui K.
  citation_count: '0'
  description: The concept of the Internet of Things (IoT) has risen as a revolutionary
    innovation, establishing a connection between the physical and digital worlds
    and significantly impacting various aspects of daily life. In the healthcare field,
    it has unlocked the potential of connected medical devices, enhancing care through
    real-time patient monitoring and the effective management of chronic diseases.
    Within the industry, IoT facilitates predictive maintenance, optimizes manufacturing
    processes, oversees the supply chain, and monitors assets. Smart cities utilize
    IoT to elevate infrastructure management, enhance security, and promote sustainability.
    In agriculture, IoT sensors bring about a transformation in precision farming,
    optimizing resource utilization, and increasing yields. Smart homes integrate
    IoT for home automation solutions, empowering homeowners to remotely control devices
    and systems. Finally, in the transportation, IoT is at the forefront of revolutionizing
    connected and autonomous vehicles, providing advanced features in safety, navigation,
    and onboard entertainment. The integration of (IoT) and (AI) yields considerable
    benefits across various sectors by enhancing operational efficiency, facilitating
    informed decision-making, and fostering the creation of smarter, interconnected
    environments. In this article, we conducted a bibliometric study focused on industrial
    sectors related to the Internet of Things (IoT) from 2018 to 2023. Our analysis
    centers on comparing the most frequently explored domains, highlighting their
    popularity and performance. Furthermore, we examined currently predominant and
    beneficial technologies, particularly those aimed at optimizing operations, improving
    efficiency, and reducing costs.
  doi: null
  full_citation: '>'
  full_text: '>'
  inline_citation: '>'
  journal: Journal of Theoretical and Applied Information Technology
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: 'INTEGRATION OF IOT-ENABLED TECHNOLOGIES AND ARTIFICIAL INTELLIGENCE IN DIVERSE
    DOMAINS: RECENT ADVANCEMENTS AND FUTURE TRENDS'
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Venkatesan R.
  - Jebaseeli T.J.
  - Ramalakshmi K.
  - Hemanthkumar P.B.
  citation_count: '0'
  description: The modern techniques of organic farming come with a lot of room for
    innovation. There are a several ways available through which the human can get
    connected to nature and farming is the simplest way available but due to the work
    schedule of human beings, it is often seen that the care required by the plants
    is ignored. The only way through which this problem can be solved is smart monitoring
    of plant growth with the modernizing of the existing methods available. The system
    that is proposed in this paper focuses on implementing the smart of monitoring
    the growth of plants and also taking necessary steps on its own. This way the
    plants can be easily monitored by humans even when they are not around. The proposed
    system can be described as plant growth automation using IoT technologies. The
    Internet of Things (IoT) has several applications in the field of crop cultivation
    and maintenance. The paper proposes an organic plant monitoring system with the
    use of suitable sensorsand online platforms that will ensure the growth of plants
    and will also monitor its conditions such as moisture level, temperature, and
    humidity of the location, amount of light present from time to time. Apart from
    this, the system will save a lotof time and effort being put by human beings in
    their farms and all these things will be done without compromising the state of
    your farm.
  doi: 10.1063/5.0194922
  full_citation: '>'
  full_text: '>

    "All Content AIP Publishing Portfolio AIP Conference Proceedings                              Advanced
    Search | Citation Search Univ Nebraska Lincoln Lib Sign In HOME BROWSE FOR AUTHORS
    FOR ORGANIZERS ABOUT Volume 3035, Issue 1 4 March 2024 PROCEEDINGS OF THE THIRD
    INTERNATIONAL CONFERENCE ON ADVANCEMENTS IN AUTOMATION, ROBOTICS, & SENSING 9–10
    December 2022 Coimbatore, India Previous Article Next Article REFERENCES RESEARCH
    ARTICLE| MARCH 04 2024 IoT based automatic temperature monitoring and adjustment
    system for the organic farm R. Venkatesan; T. Jemima Jebaseeli; K. Ramalakshmi;
    P. B. Hemanthkumar Author & Article Information AIP Conf. Proc. 3035, 020015 (2024)
    https://doi.org/10.1063/5.0194922 Split-Screen PDF Share Tools The modern techniques
    of organic farming come with a lot of room for innovation. There are a several
    ways available through which the human can get connected to nature and farming
    is the simplest way available but due to the work schedule of human beings, it
    is often seen that the care required by the plants is ignored. The only way through
    which this problem can be solved is smart monitoring of plant growth with the
    modernizing of the existing methods available. The system that is proposed in
    this paper focuses on implementing the smart of monitoring the growth of plants
    and also taking necessary steps on its own. This way the plants can be easily
    monitored by humans even when they are not around. The proposed system can be
    described as plant growth automation using IoT technologies. The Internet of Things
    (IoT) has several applications in the field of crop cultivation and maintenance.
    The paper proposes an organic plant monitoring system with the use of suitable
    sensorsand online platforms that will ensure the growth of plants and will also
    monitor its conditions such as moisture level, temperature, and humidity of the
    location, amount of light present from time to time. Apart from this, the system
    will save a lotof time and effort being put by human beings in their farms and
    all these things will be done without compromising the state of your farm. Topics
    Internet of things REFERENCES 1.Sathish Pasika, Sai Teja Gandla, Smart water quality
    monitoring system with cost-effective using IoT,Heliyon, 6, 2020. https://doi.org/10.1016/j.heliyon.2020.e04096
    Google Scholar  2.Sandhya B. R., Pallavi M., Chandrashekar M., IoT Based Smart
    Home Farm Watering System Using Raspberry Pi 3, International Journal of Innovative
    Research in Science, Engineering and Technology, 7(3), 3761–3763, 2020. Google
    Scholar  3.Peiyu Zhang, Bart M. C. Grutters, Casper H. A. van Leeuwen, Jun Xu,
    Antonella Petruzzella, Reinier F. van den Berg and Elisabeth S. Bakker, Effects
    of Rising Temperature on the Growth, Stoichiometry, and Palatability of Aquatic
    Plants, Front. Plant Sci., 2019. Google Scholar  4.Asma Al-Huqail, Rehab M. El-Dakak,
    Marwa Nme Sanad, Reem H. Badr, Mohamed M. Ibrahim, Dina Soliman, and Faheema Khan,
    Effects of Climate Temperature and Water Stress on Plant Growth and Accumulation
    of Antioxidant Compounds in Sweet Basil, Leafy Vegetable, 1–12, 2020. Google Scholar  5.P.
    Tulasi Santhosh Kumar, K.N Balaji Kumar, Implementation of Multi Zone Smart Farming
    System, International Journal of Advanced Research in Computer and Communication
    Engineering, 5(10), 2016. https://doi.org/10.17148/IJARCCE.2018.71026 Google Scholar  6.Y.
    Liu, K. Akram Hassan, M. Karlsson, O. Weister and S. Gong, Active Plant Wall for
    Green Indoor Climate Based on Cloud and Internet of Things, IEEE Access, 6, 33631–33644,
    2018. https://doi.org/10.1109/ACCESS.2018.2847440 Google ScholarCrossref   7.Priyadharshini
    Paitandy, Nivedita Ganguly, The business of farming continues to bloom across
    India amid the pandemic, May 2021. Google Scholar  8.G. Mohammed, F. Trolard,
    M. Gillon, A. L. Cognard-Plancq, A. Chanzy, and G. Bourrie, Combination of a crop
    model and a geochemical model as a new approach to evaluate the sustainability
    of an intensive agriculture system, Science of The Total Environment, 595, 119–131,
    2017. https://doi.org/10.1016/j.scitotenv.2017.03.146 Google ScholarCrossref PubMed  9.J.
    Gago, C. Douthe, R. E. Coopman et al., UAVs challenge to assess water stress for
    sustainable agriculture, Agricultural Water Management, 153, 9–19, 2015. https://doi.org/10.1016/j.agwat.2015.01.020
    Google ScholarCrossref   10.A. Barriuso, G. Villarrubia González, J. de Paz, A.
    Lozano, and J. Bajo, Combination of multi-agent systems and wireless sensor networks
    for the monitoring of cattle, Sensors, 18(2), 2018. https://doi.org/10.3390/s18010108
    Google Scholar  11.B. Basnet and J. Bang, The state-of-the-art of knowledge-intensive
    agriculture: a review on applied sensing systems and data analytics, Journal of
    Sensors, 2018. Google Scholar  12.M. Taher Kahil, J. Albiac, A. Dinar et al.,
    Improving the performance of water policies: evidence from drought in Spain, Water,
    8(2), 2016. Google Scholar  13.R. Qiu, S. Wei, M. Zhang et al., Sensors for measuring
    plant phenotyping: a review, International Journal of Agricultural and Biological
    Engineering, 11(2), 1–17, 2018. https://doi.org/10.25165/j.ijabe.20181102.2696
    Google ScholarCrossref   14.S. C. Kerns and J. L. Lee, Automated aeroponics system
    using IoT for smart farming, 8th InternationalScientific Forum, ISF 2017, UNCP,
    USA, 2017. Google ScholarCrossref   15.P. Mithunesh, K. Gupta, S. Ghule, and P.
    S. Hule, Aeroponic based controlled environment based farming system,IOSR Journal
    of Computer Engineering, 17(6), 55–58, 2015. Google Scholar  This content is only
    available via PDF. PDF ©2024 Authors. Published by AIP Publishing. View Metrics
    Citing Articles Via Google Scholar Publish with us - Request a Quote! Sign up
    for alerts Most Read Most Cited Phytochemical analysis of bioactive compounds
    in ethanolic extract of Sterculia quadrifida R.Br. Siswadi Siswadi, Grace Serepina
    Saragih Impact of blockchain technology development on industries in the context
    of entrepreneurial, marketing and management perspectives worldwide Ivelina Kulova
    Design of a 100 MW solar power plant on wetland in Bangladesh Apu Kowsar, Sumon
    Chandra Debnath, et al. Online ISSN 1551-7616 Print ISSN 0094-243X Resources For
    Researchers For Librarians For Advertisers Our Publishing Partners  Explore Journals
    Physics Today Conference Proceedings Books Special Topics Publishers pubs.aip.org
    About User Guide Contact Us Register Help Privacy Policy Terms of Use Connect
    with AIP Publishing Facebook LinkedIn Twitter YouTube © Copyright 2024 AIP Publishing
    LLC"'
  inline_citation: '>'
  journal: AIP Conference Proceedings
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: IoT based automatic temperature monitoring and adjustment system for the
    organic farm
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
- analysis: '>'
  authors:
  - Zhang J.
  - Trautman D.
  - Liu Y.
  - Bi C.
  - Chen W.
  - Ou L.
  - Goebel R.
  citation_count: '0'
  description: From connected sensors in soils, on animals or crops, and on drones,
    to various software and services that are available, “smart” technologies are
    changing the way farming is carried out. These technologies allow producers to
    look beyond what the eye can see by collecting non-traditional data and then using
    analytics tools to improve both food sustainability and profitability. “Smart
    Agriculture/farming” (SA) or “Digital Agriculture” (DA), often used interchangeably,
    refer to precision agriculture that is thus connected in a network of sensing
    and acting. It is a concept that employs modern information technologies, precision
    climate information, and crop/livestock developmental information to connect production
    variables to increase the quantity and quality of agricultural and food products.
    This is achieved by measuring and analyzing variables accurately, feeding the
    information into the cloud from edge devices, extracting trends from the various
    data, and subsequently providing information back to the producer in a timely
    manner. Smart agriculture covers many disciplines, including biology, mechanical
    engineering, automation, machine learning, artificial intelligence, and information
    technology-digital platforms. Minimum standards have been proposed for stakeholders
    with the aim to move toward this highly anticipated and ever-changing revolution.
    These foundational standards encompass the following general categories, including
    precise articulation of objectives, and baseline standards for the Internet of
    Things (IoT), including network infrastructure (e.g., stable 4G or 5G networks
    or a wireless local area network (WLAN) are available to end users). To sum up,
    SA aims to improve production efficiency, enhance the quality and quantity of
    agricultural products, reduce costs, and improve the environmental footprint of
    the industry. SA’s ecosystem should be industry self-governed and collaboratively
    financed. SA stakeholders and end-users’ facilities should meet standard equipment
    requirements, such as sensor accuracy, end data collectors, relevant industry
    compliant software, and trusted data analytics. The SA user is willing to be part
    of the SA ecosystem. This short perspective aims to summarize digital/smart agriculture
    concept in plain language.
  doi: 10.3390/agronomy14030452
  full_citation: '>'
  full_text: '>

    "This website uses cookies We use cookies to personalise content and ads, to provide
    social media features and to analyse our traffic. We also share information about
    your use of our site with our social media, advertising and analytics partners
    who may combine it with other information that you’ve provided to them or that
    they’ve collected from your use of their services. Consent Selection Necessary
    Preferences Statistics Marketing Show details                 Deny Allow selection
    Allow all    Journals Topics Information Author Services Initiatives About Sign
    In / Sign Up Submit   Search for Articles: Agronomy All Article Types Advanced   Journals
    Agronomy Volume 14 Issue 3 10.3390/agronomy14030452 Submit to this Journal Review
    for this Journal Propose a Special Issue Article Menu Academic Editors Gniewko
    Niedbała Yanbo Huang Subscribe SciFeed Related Info Link More by Authors Links
    Article Views 726 Table of Contents Abstract Introduction Definitions of Smart
    Agriculture Basic Concepts and Technologies Discussion and Perspective The Expected
    Value and Development of Smart Agricultural Ecosystems Conclusions Author Contributions
    Funding Conflicts of Interest References share Share announcement Help format_quote
    Cite question_answer Discuss in SciProfiles thumb_up Endorse textsms Comment first_page
    settings Order Article Reprints Open AccessPerspective Achieving the Rewards of
    Smart Agriculture by Jian Zhang 1,2,*,†, Dawn Trautman 3,†, Yingnan Liu 4, Chunguang
    Bi 1,5, Wei Chen 4, Lijun Ou 6,* and Randy Goebel 7,* 1 Faculty of Agronomy, Jilin
    Agricultural University, Changchun 130018, China 2 Department of Biology, University
    of British Columbia, Kelowna, BC V5K1K5, Canada 3 Nuffield Canada, Edmonton, AB
    T5K 1X5, Canada 4 Heilongjiang Academy of Science, Harbin 150040, China 5 College
    of Information Technology, Jilin Agricultural University, Changchun 130018, China
    6 College of Horticulture, Hunan Agricultial University, Changsha 410128, China
    7 Department of Computing Science, Alberta Machine Intelligence Institute, University
    of Alberta, Edmonton, AB T6G 2R3, Canada * Authors to whom correspondence should
    be addressed. † These authors contributed equally to this work. Agronomy 2024,
    14(3), 452; https://doi.org/10.3390/agronomy14030452 Submission received: 5 January
    2024 / Revised: 26 January 2024 / Accepted: 23 February 2024 / Published: 24 February
    2024 (This article belongs to the Special Issue IoT in Agriculture: Rationale,
    State of the Art and Evolution) Download keyboard_arrow_down     Browse Figure
    Review Reports Versions Notes Abstract From connected sensors in soils, on animals
    or crops, and on drones, to various software and services that are available,
    “smart” technologies are changing the way farming is carried out. These technologies
    allow producers to look beyond what the eye can see by collecting non-traditional
    data and then using analytics tools to improve both food sustainability and profitability.
    “Smart Agriculture/farming” (SA) or “Digital Agriculture” (DA), often used interchangeably,
    refer to precision agriculture that is thus connected in a network of sensing
    and acting. It is a concept that employs modern information technologies, precision
    climate information, and crop/livestock developmental information to connect production
    variables to increase the quantity and quality of agricultural and food products.
    This is achieved by measuring and analyzing variables accurately, feeding the
    information into the cloud from edge devices, extracting trends from the various
    data, and subsequently providing information back to the producer in a timely
    manner. Smart agriculture covers many disciplines, including biology, mechanical
    engineering, automation, machine learning, artificial intelligence, and information
    technology-digital platforms. Minimum standards have been proposed for stakeholders
    with the aim to move toward this highly anticipated and ever-changing revolution.
    These foundational standards encompass the following general categories, including
    precise articulation of objectives, and baseline standards for the Internet of
    Things (IoT), including network infrastructure (e.g., stable 4G or 5G networks
    or a wireless local area network (WLAN) are available to end users). To sum up,
    SA aims to improve production efficiency, enhance the quality and quantity of
    agricultural products, reduce costs, and improve the environmental footprint of
    the industry. SA’s ecosystem should be industry self-governed and collaboratively
    financed. SA stakeholders and end-users’ facilities should meet standard equipment
    requirements, such as sensor accuracy, end data collectors, relevant industry
    compliant software, and trusted data analytics. The SA user is willing to be part
    of the SA ecosystem. This short perspective aims to summarize digital/smart agriculture
    concept in plain language. Keywords: digital agriculture; artificial intelligence;
    internet of things (IoT); machine learning; image processing and analysis; genomics
    and phenomics 1. Introduction With the population expected to reach 9.7 billion
    by 2050, the world is facing many challenges, sustainable food production chief
    among them. The Food and Agriculture Organization of the United Nations predicts
    that we need to boost worldwide food production by 70 percent over the next two
    decades to feed the anticipated population in 2050 [1]. Beyond population growth,
    there are additional drivers to produce more with less, and to produce food sustainably
    and responsibly while managing the impacts of climate change, consumer demographics,
    and preferences, as well as globalization and trade [2]. Growing consumer awareness
    is driving demand for high quality products, produced with sustainable practices,
    and with health-related attributes at the front of many consumers’ minds (e.g.,
    fewer herbicides, pesticides, antibiotics, implants administered, and with more
    regulatory oversight), not to mention consumer demand for traceability and attribute
    assurance. Climate initiatives to reduce food waste and the consumption of high-resource
    products are becoming more prevalent in both developed and developing countries.
    The growing global population is also becoming more urban, and as more people
    move to cities, they also move into the middle class so demand for protein foods
    increases. Furthermore, cultural and generational influences are creating a fragmentation
    of tastes which marks an opportunity for market diversification, with some challenges
    for the traditional agri-food market [3]. In developed markets, growth drivers
    include health, nutrition, and sustainability. As incomes rise, “better for you
    foods” are replacing traditional “feel-good” junk foods. Related to this transition
    is a shift to plant-based foods, including plant-based meat, sometimes marketed
    as “clean meat”. All things considered, the need for innovation in agriculture
    has never been greater (cf., Figure 1). On the production side and across the
    value chain, businesses are increasingly pressured by rising input costs (e.g.,
    seed, fertilizer, and labor), climate-driven changing land use priorities, and
    consumer demands for transparency and sustainability [4]. With the historically
    unpredictable and overall thin margins in agriculture, there is a need for new
    solutions, both for producers and consumers. As commodity prices continue to fluctuate,
    and in some cases, stagnate, there is intense awareness that new solutions are
    needed to provide relief, for both producers and consumers. Figure 1. Ten global
    megatrends will lead to a disruptive transition in the next 5–10 years (Adapted
    from [5]). One approach to producing more food with increasingly limited resources
    will be to improve efficiencies in resource use, including people, production
    technologies, and waste reduction in the agri-food supply chain. Note that this
    was largely the approach in the Green Revolution of the 1950s, with the adoption
    of systematic breeding, high-yielding varieties, synthetic fertilizers and pesticides,
    and best management practices. But over the past five to seven years, a new set
    of practices has emerged, which uses information and communication technologies
    and has created a digital revolution in agriculture; connected sensors, the Internet
    of Things (IoT) [6], autonomous vehicles, robots, and big data analytics [7] will
    be essential in effectively feeding tomorrow’s world. The future of agriculture
    will be smart, connected, and digital. Understanding the challenges and opportunities
    in “Smart Agriculture” (SA) will help guide relevant policy decisions, agri-food
    businesses, and agri-food industry workers. Smart agriculture incorporates current
    advanced technologies into existing farming or agricultural practices in order
    to increase production efficiency, improve the quality of agricultural products,
    reduce production costs, and reduce the environmental footprint. The distinction
    between “smart” agriculture and agriculture using digital technologies and precision
    management is based on the connectivity of data, using the Internet of Things
    (IoT) (see Section 3 for definitions and concepts in SA) [8]. Smart technologies
    in agriculture also have the capacity to improve the quality of life of farm workers
    by reducing heavy labor and tedious tasks (e.g., by using automation, robotics,
    and data analytics for precision management). Further, as labor can be one of
    the highest costs within production, and there being fewer agricultural laborers
    available, reducing our reliance on human labor will lead to further productivity
    gains. Because of these developments, there is increased interest in and demand
    for proof of the economic value of digitization and connectivity in agriculture.
    Agriculture companies—from startups to original equipment manufacturers (OEMs)—are
    investing in the space. According to AgFunder, 2014 was the year in which AgTech
    truly launched with 2.36b USD being invested across 264 deals [9]; in AgFunder’s
    most recent report, they show that 2018 saw investments in AgriTech of over 51b
    USD across 3155 deals. While there are numerous startups in the sector, some of
    the most notable investors include companies such as Google Ventures, Microsoft,
    and Bayer. So, in less than 10 years, improvements in the underlying technologies
    have led investors to consider the potential for SA. It is anticipated that the
    next few years will bring a consolidation of the sector with larger companies
    making investments, cost reductions across the life sciences, and improvements
    in sensor technologies, robotics, automation, and computation being deployed [10].
    In summary, agriculture will become intelligent, interconnected, and digitized
    in the future. SA can reduce the dependence of agriculture on labor, improve resource
    utilization efficiency, alleviate the pressure on producers and consumers, and
    has unlimited potential in the future. 2. Definitions of Smart Agriculture The
    modernization of agriculture and the adoption of various technologies in production
    practices have resulted in new concepts in agriculture, including precision agriculture,
    digital agriculture, and smart agriculture. While in some of the literature these
    terms are used interchangeably, there are differences in the details, which become
    important when defining “Smart Agriculture”. For example, the International Society
    of Precision Agriculture organization defines “Precision Agriculture as “… a management
    strategy that gathers, processes and analyzes temporal, spatial and individual
    data and combines it with other information to support management decisions according
    to estimated variability for improved resource use efficiency, productivity, quality,
    profitability and sustainability of agricultural production”. In brief, SA is
    the application of connectivity (e.g., IoT) to traditional agriculture, where
    the use of sensors and software is used to collect data to optimize agricultural
    production decisions through mobile platforms, such that traditional agriculture
    becomes “smarter”. In a broad sense, smart agriculture also includes agricultural
    e-commerce, food traceability and anti-counterfeiting, agricultural leisure tourism,
    agricultural information services, and other aspects. Precision agriculture, as
    important component of smart agriculture, is a method of farm management where
    the input needs of individual crops, fields, and livestock are optimized through
    data gathering, observation, and analysis. Big data and advanced analytics, as
    well as robotics, imagery, sensors, and weather forecasts enable precision agriculture
    to be an extremely effective agricultural management strategy [11]. For example,
    by assessing the conditions and needs of individual crops, fields, and livestock,
    precision agriculture can increase the quantity and quality of agricultural output
    while reducing inputs of water, energy, fertilizer, pesticides, supplements, etc.,
    in order to save costs and reduce the environmental impact [12]. Smart agriculture
    (SA) entails the exploitation of data to optimize agricultural systems. The distinction
    from precision agriculture may seem minor, but is crucial, as it defines the next
    revolution within agricultural and digital industries. The focus of SA is on data
    exploitation; this requires access to data, data analysis, and the application
    of the results over multiple (ideally, all) farm or ranch operations. On-farm
    and on-ranch decisions are made using smart, mobile devices to access data on
    conditions, climate, input use, and labor, and more in real time, allowing the
    producer to subsequently make informed decisions based on validated data. SA implies
    a system of connectivity (e.g., Internet of Things, edge devices, low-power wide
    area network (LPWAN), 5G, etc.), where “things” are connected in a network of
    communication. The data (i.e., the information) are processed in farm management
    software (i.e., apps and online platforms) in a timely manner and relayed back
    to the producer to make informed decisions [13]. The International Organization
    for Standardization (ISO) defines SA as the “combination of network connectivity,
    widespread sensor placement, and sophisticated data analysis techniques [which]
    now enables ‘smart farming’ due to large amounts of data generated by IoT devices”
    [14]. For the purposes of this report and in an effort to standardize the concept
    of SA, the following definition will be used: SA uses Internet of Things (IoT)
    technology; various sensors are placed on equipment, livestock, or in the field
    to relay data to a platform (i.e., cloud-based; that is, using WLAN, edge devices,
    or to the cloud directly) allowing the creation of an information system for users
    (e.g., including farmers, agro-supply professionals, consultants, researchers).
    3. Basic Concepts and Technologies 3.1. Related Terminology, Concepts, and Technology
    Beyond the technical jargon of SA, there are additional related technologies and
    social concepts that support the idea of SA which are worth mentioning. Agriculture
    4.0 is a term used by the World Government Summit (2018) [15]; as an analogy to
    Industry 4.0 [16]. It refers to the integrated internal and external networking
    of farming operations as a result of the emergence of smart technology in agriculture
    [17]. The trend is towards automation, intelligence, and data exchange in agriculture.
    Agriculture 4.0 aims to disrupt the current food and agriculture regime and sustainably
    improve production capacity by using new techniques and technologies in production
    (e.g., hydroponics, algae feedstock, bioplastics, desert agriculture, seawater
    farming). The intent is to use novel technologies to improve food access, and
    change the current food supply chain (e.g., vertical/urban farming, genetic modification,
    3D printing), and to incorporate cross-industry technologies and applications
    (e.g., UAVs, IoT, data analytics, PA, nanotechnology, blockchain, AI/ML, food
    sharing, and crowd farming) (World Government Summit, 2018) [5]. Based on the
    definition of Agriculture 4.0, the concept of “SA” generally resides within the
    third category: incorporating cross-industry technologies and applications; these
    inter-related technologies will be briefly defined in the following section [18].
    Geographic Information Systems (GIS) are included within Agriculture 4.0, and
    are characterized by making significant use of global positioning system (GPS)
    technology. The latter allows plots to be mapped for increased precision during
    technical operations. For example, mapping the nitrogen requirements of a plot
    allows the inputs to be tailored not just at plot-level but for different zones
    within it identified by satellite. In addition, GIS systems can provide a framework
    for the deeper analysis of a broader scope of inputs, including weather patterns,
    topological features, and watershed models [19]. 3.2. Big Data Analytics, Artificial
    Intelligence, and Machine Learning In short, the application of Internet of Things
    technology to traditional agriculture, the use of sensors and software to control
    agricultural production through mobile platforms or computer platforms, so that
    traditional agriculture is more ‘wisdom’. In addition to accurate perception,
    control, and decision management, in a broad sense, smart agriculture also includes
    agricultural e-commerce, food traceability anti-counterfeiting, agricultural leisure
    tourism, agricultural information services and other aspects. The anticipated
    value of artificial intelligence and machine learning (AI) for Digital Agriculture
    is not different to that for general systems biology, materials science, drug
    design, or knowledge-based design in the transformation of genotype to phenotype.
    Overall, the value of AI methods lies in those arising from the translation of
    theoretical advances to application tools that accelerate the creation of predictive
    models (e.g., with existing tools like Google’s Tensorflow, Facebook’s PyTorch).
    These application frameworks are designed to accelerate the creation of predictive
    models by transforming application data (e.g., labelled data instances like genomic
    samples from crop phenotypes). It is important to note that the application of
    AI is possible in all areas of scientific research; overall, the idea is to capture
    and compress existing scientific knowledge into models that accelerate the prediction
    of new hypotheses (e.g., new molecules with potential impact as drugs) and to
    discover new hypotheses that human scientists would not consider because of knowledge
    bias. As noted above with respect to the three categories of Smart Agriculture,
    Precision Agriculture, and Digital Agriculture, each one can take advantage of
    a variety of AI methods to create decision support based on captured data, including
    soil data, genomic and phenomics data, drone-created crop profiles, and all manner
    of animal management (e.g., beef, swine, fowl) [20]. To note the scope of the
    applications of AI to these general areas, the development of Alphafold and Foldit
    [21] have accelerated the identification of plausible protein folds and helped
    identify previously unconsidered folding hypotheses. Similarly, within the metaphor
    of genomics for materials [22], specific applications of current AI tools have
    been used to identify preferred material alloys for solar materials [23]. The
    same advantage arises in the identification of appropriately active small molecules
    in so-called “in silico” drug design [24,25]. While application domain scientists
    may not make these observations, the frameworks for applying AI to Digital Agriculture
    are identical, in the overall data science framework, to those used in protein
    folding, materials science, and drug design. One framework that can support this
    position comes from the general development of “Phenomics,” arising from a 2011
    workshop sponsored by the USA Department of Agriculture, and the USA National
    Science Foundation (NIFA, 2011). The overall framework is captured in this quote:
    “Recent advances in DNA sequencing and phenotyping technologies, in concert with
    analysis of large datasets have spawned ‘phenomics’, the use of large-scale approaches
    to study how genetic instructions from a single gene or the whole genome translate
    into the full set of phenotypic traits of an organism”. This framework provides
    the basis for the general study of all transformations from genome to phenome,
    in both animal and plant models, and creates a foundation for the crop science
    aspects of Digital Agriculture anticipated in this paper. At the next level of
    scientific granularity, AI has already been applied to understand the causality
    between bovine genomics and phenomics properties, and it can be similarly applied
    to crop genomics [24,26]. In this regard, the promise of crop phenomics within
    Digital Agriculture lies within the increasing sophistication of predictive data
    models that approximate the causal connections between genome and phenome. 3.3.
    Synopsis of Data Driven Methods Overall, the deployment of analytic methods to
    Smart Agriculture is rapidly changing, since progress in so many fields (e.g.,
    sensing, robotics, flight-based data capture) is happening at the intersection
    of data collection and the basic biological science of animal and crop genomics
    [27,28]. Just across these two aspects of scientific endeavors, the emerging tools
    for analytics based on machine learning have been used in both the consolidation
    and prediction of crop models and in the analysis of the path from genome to phenome
    [29,30]. We will continue to see many new technologies linked together; this means
    that, increasingly, waste will be minimized, productivity will be maximized, and
    the impact on the environment will shrink. Success in these aspects will depend
    on setting standards and metrics to ensure that the progress is captured and made
    in a desirable direction and that technologies (current and future) will continue
    to drive productivity and sustainability [31]. 4. Discussion and Perspective Challenges
    to Agricultural Digital Transition The three categories that are needed for the
    adoption of SA systems include software (e.g., apps, analytic methods), hardware
    (e.g., connectivity device(s), sensors, wearables), and technical support services
    (e.g., consulting or subscription management services). For effective SA adoption,
    the first two are necessary, as without connectivity and data collation coupled
    with real-time analysis, the methods lose the “smart” aspect and revert to precision
    agriculture. In addition, there are six assets across farm environments that can
    be connected, including (i) soil, (ii) plants, (iii) livestock, (iv) environment,
    (v) equipment, and (vi) people [32]. Smart agriculture ecosystems include data
    capture points, internet access, and data collecting/process centers to support
    smart agriculture. It is estimated that 50K farms require a minimal investment
    in their connectivity/ability to tap into the smart agriculture technology. Which
    is necessary to provide a foundational platform for SA. As a historically disconnected
    industry that made progress based on best practices established from trial and
    error and industry expertise, agriculture has previously lacked the ability to
    make management decisions based on big data in real time. The connectivity of
    data from sensors, the climate, and imaging using low-power wide-area networks
    (LPWANs), cellular networks, and other wireless telecommunication is the backbone
    behind smart agriculture. The incremental development of this foundation faces
    at least the following challenges: - Dealing with legacy technology; - Connectivity
    in rural areas; - Maintenance and servicing of technologies; - Compatibility (also
    as a system of systems); - Need for standards; - Modernizing infrastructure; -
    Adoption/ability to adopt. Need for 5G: Amongst the technological challenges faced
    across these seven challenges is the issue of nurturing the evolution of connectivity,
    which is currently focused on the deployment and exploitation of fifth-generation
    wireless communications (i.e., 5G). Some of the benefits that 5G technology can
    provide include the opportunity for a massive increase in bandwidth (enabling
    capture and movement of higher density data like images), an order-of-magnitude
    reduction in latency (enabling advances in real-time decision support), and a
    higher capacity for multiple users (enabling more cost effective deployment over
    rural and remote areas). In summary, compared to the current 4G standard, 5G will
    create a bigger pipe, lower latency, and faster response time. This will impact
    agriculture in ways that we cannot even imagine right now, particularly in terms
    of connectivity as it will enable real-time analytics and decision support. AI
    and Machine Learning: The current rapid evolution of artificial intelligence and
    machine learning (AI&ML) has primarily promoted the development of large language
    models (LLMs), but the technologies for their construction and deployment are
    equally—and even more appropriately—valuable in application verticals like SA,
    where training data capture is constrained by specific challenges and contexts
    noted above (e.g., in the six SA assets). This means that the emerging spectrum
    of AI technologies, from knowledge base construction to deep learning classification,
    can support the foundation and development of AS. IoT and Ag: As already summarized
    above, the incremental development of IoT data sensors and network infrastructure
    is a crucial component of SA foundation and development, and, like AI&ML, has
    direct and immediate applications within the scope of SA challenges, e.g., in
    the instrumentation of environment sensor networks to inform predictive systems
    about crop conditions. Low margins in agriculture: The historical development
    of the economic structure of agriculture has created a complex and multi-layered
    economic model where the low margins between layers makes capital investment a
    challenge. Therefore, the pace of innovation has not kept up with other industries
    and today agriculture remains the least digitized of all major industries [10].
    Who owns the data? The question of data governance and security is increasingly
    important as the consolidation of agriculture’s economic layers means that capital
    investment is increasingly dependent on data capture and exploitation. For example,
    will large agricultural corporations increasing their grip on data lead to price
    discrimination? Similarly, which data owners will be most vulnerable to the increasing
    threat of hacking and cybersecurity disruption, which is an ever-increasing threat
    across all data-driven organizations. In summary, the development of an SA foundation
    must address all of the above challenges simultaneously, including (1) adoption
    likelihood/palatability among producers; comes down to communication; (2) potential
    widening economic gaps that might emerge as an unintended consequence of AI adoption
    and other concerns, including misuse of AI and data privacy, data sovereignty;
    (3) the use of FinTech in agriculture to promote growth, enhance financial inclusion,
    and improve regional economic integration; (4) quality management for both processes
    and organizations; and (5) the integration of continuous improvements as those
    processes and organizations evolve (e.g., ISO; Six Sigma; Continuous Improvement;
    TQM). 5. The Expected Value and Development of Smart Agricultural Ecosystems 5.1.
    The Anticipated Value of Developing the Smart Agriculture Ecosystem Climate Friendly
    Agriculture/Digital + Regenerative Climate Smart Agriculture (CSA), an approach
    for sustainable food security, refers to the “actions needed to transform and
    reorient agricultural systems to effectively support development and ensure food
    security in a changing climate”. The three main objectives of CSA include: sustainably
    increasing agricultural productivity, development, and incomes; adapting and building
    resilience to climate change (from farm to nation); and reducing and/or removing
    greenhouse gas emissions and/or increasing carbon sinks [33,34,35]. 5.2. The Application
    and Impact of AL/ML in Smart Agriculture 5.2.1. Socioeconomic Benefits It is clear
    from other leading adopters of AI/ML (e.g., health, law) that one of the positive
    aspects of their application id that they can actually create a new source of
    jobs and economic opportunities for millions, globally, and sustainably produced
    food for the world. In addition, digital technologies provide the opportunity
    to change how food is produced, reduce information asymmetry, decrease transaction
    costs, increase equitability, and improve agriculture’s environmental impact [36].
    5.2.2. Digital Image and Deep Learning with Agriculture/Horticulture Industries
    Seed purity is a critical parameter in maintaining a good germination rate and
    seed vigor. Traditionally, methods of identifying seed purity include the morphological
    inspection method, the field planting inspection method, the chemical identification
    method, and the electrophoresis technology inspection method; however, these techniques
    are time consuming, cumbersome, and require professionals; thus, they are not
    suitable for the mass analysis and nondestructive testing of seeds. Recently,
    however, hyperspectral imaging technology has been widely studied in seed purity
    detection, which has the characteristics of combining image and spectral information.
    Bi et al. (2022) developed a methodology for maize seed variety recognition based
    on improved swin transformer-based Deep Learning [37]. Their report showed that,
    in comparison with other models, the MFSwin Transformer model achieved the highest
    classification accuracy results. The neural network applied in the study can classify
    corn seeds accurately and efficiently and the image deep learning method met the
    high-precision classification requirements of corn seed images and has provided
    a reference tool for seed identification. Cai et al. have also reported image
    deep learning technology that could effectively reduce the influence of environmental
    factors on strawberry image segmentation and provide an effective approach for
    the accurate operation of strawberry picking robots [38]. They improve DeepLabV3+
    for strawberry image segmentation with different maturities, introducing the attention
    mechanism in the backbone feature extraction network and ASPP module, respectively,
    and adjusting the weights of feature channels in the neural network propagation
    process through the attention mechanism, which could enhance the feature information
    of strawberry images with different maturities using fewer parameters, reducing
    the interference of environmental factors [39]. 6. Conclusions As with any global
    challenge, integrating such a broad variety of data-driven technologies is not
    a simple task. But the overall anticipated value of developing a guiding framework
    for the creation of a SA foundation has incredible positive benefits, including:
    - The role of digital technologies as a catalyst of change in how we produce food
    and practice agriculture/horticulture/livestock management; - The improved efficiency
    of agriculture/horticulture/livestock production; - Incorporate environmental
    considerations from the beginning and from all aspects; - The ability to link
    all aspects of the value chain in real time. The emerging applications of digital
    technology in agriculture and biology, include, but are not limited to, agriculture,
    data collection, data mining, bioinformatics, genomics, and phenomics, as well
    as applications of machine learning and artificial intelligence. The development
    of a community to support this goal requires the cross linking and integration
    of multiple sources of agricultural research across 3S technologies (remote sensing—RS;
    geographic information systems—GIS; global positioning systems—GPS). This provides
    a basis for the detection of crop pathogens, weeds, and pests (insects) using
    multi-spectrum techniques and the exploitation of remote sensing technology to
    create and analyze multiple heterogeneously structured data sets, which enables
    effective cross-linking and phenomic classification. It is essential to study
    growth models of plants/crops and utilize expert support to develop production
    and smart management decision systems to achieve real-time, quantified, and precise
    decisions. Topics of high interest include the capture and curation of biological
    “big data”, research on multi-spectrum analysis, the assembly of complex genetic
    sequencing fragments, and structural gene predictions coupled with intermediate
    structures to predict phenotypes. In this context, novel data structures are required
    to capture predictive structures in the path from genome type to phenotype, together
    with new techniques to capture and identify the regularity of biological data.
    Finally, multiple-sources-based monitoring and decision making for plants, water,
    and nutrients in agriculture/horticulture are required, with a research focus
    on the utilization of remote sensing and drone sensing to compute and predict
    plant water usage, crop and vegetable growth and development, stress status monitoring
    and management, and yield and harvesting decision making. Author Contributions
    Conceptualization, D.T., J.Z., L.O. and R.G.; methodology, D.T., J.Z. and R.G.;
    validation, C.B., Y.L. and R.G.; writing—original draft preparation, J.Z. and
    D.T.; writing—review and editing, R.G. and J.Z.; visualization, D.T. and W.C.;
    supervision, Y.L. and J.Z.; project administration, L.O. and W.C.; funding acquisition,
    J.Z. All authors have read and agreed to the published version of the manuscript.
    Funding Jilin Agricultural University high level researcher grant (JLAUHLRG20102006).
    Conflicts of Interest The authors declare no conflicts of interest. References
    United Nations (UN). World Population Projected to Reach 9.8 Billion in 2050,
    and 11.2 Billion in 2100. United Nations, Department of Economic and Social Affairs.
    21 June 2017. Available online: https://www.un.org/development/desa/en/news/population/world-population-prospects-2017.html
    (accessed on 15 May 2019). Kamilaris, A.; Kartakoullis, A.; Prenafeta-Boldú, F.X.
    A review on the practice of big data analysis in agriculture. Comput. Electron.
    Agric. 2017, 143, 23–37. [Google Scholar] [CrossRef] Sharma, R.; Kamble, S.S.;
    Gunasekaran, A.; Kumar, V.; Kumar, A. A systematic literature review on machine
    learning applications for sustainable agriculture supply chain performance. Comput.
    Oper. Res. 2020, 119, 104926. [Google Scholar] [CrossRef] Song, J.; Zhong, Q.;
    Wang, W.; Su, C.; Tan, Z.; Liu, Y. FPDP: Flexible privacy-preserving data publishing
    scheme for smart agriculture. IEEE Sens. J. 2020, 21, 17430–17438. [Google Scholar]
    [CrossRef] Deloitte. From Agriculture to AgTech: An Industry Transformed beyond
    Molecules and Chemicals. Monitor Deloitte. 2017. Available online: https://www2.deloitte.com/content/dam/Deloitte/de/Documents/consumer-industrial-products/Deloitte-Tranformation-from-Agriculture-to-AgTech-2016.pdf
    (accessed on 11 June 2019). Saiz-Rubio, V.; Rovira-Más, F. From smart farming
    towards agriculture 5.0: A review on crop data management. Agronomy 2020, 10,
    207. [Google Scholar] [CrossRef] Villa-Henriksen, A.; Edwards, G.T.; Pesonen,
    L.A.; Green, O.; Sørensen, C.A.G. Internet of Things in arable farming: Implementation,
    applications, challenges and potential. Biosyst. Eng. 2020, 191, 60–84. [Google
    Scholar] [CrossRef] Agroop. The State of AgTech in 2019. 2019. Available online:
    https://agroop.net (accessed on 27 May 2019). Radoglou-Grammatikis, P.; Sarigiannidis,
    P.; Lagkas, T.; Moscholios, I. A Compilation of UAV Applications for Precision
    Agriculture. Comput. Netw. 2020, 172, 107148. [Google Scholar] [CrossRef] Magnin,
    C. How Big Data Will Revolutionize the Global Food Chain; Digital McKinsey: Brisbane,
    Australia, 2016. [Google Scholar] Daheim, C.; Poppe, K.; Schrijver, R. Precision
    Agriculture and the Future of Farming in Europe. European Parliamentary Research
    Service, Scientific Foresight Unit, PE 581.892. Available online: https://publications.europa.eu/en/publication-detail/-/publication/40fe549e-cb49-11e7-a5d5-01aa75ed71a1/language-en
    (accessed on 10 July 2019). Giesler, S. Digitisation in Agriculture—From Precision
    Farming to Farming 4.0. Bioeconomy BW, BIOPRO Baden-Württemberg GmbH. 9 April
    2018. Available online: https://www.biooekonomie-bw.de/en/articles/dossiers/digitisation-in-agriculture-from-precision-farming-to-farming-40
    (accessed on 17 June 2019). International Organization for Standardization (ISO).
    Smart Farming. ISO Focus #122, May–June 2017–ISSN 2226-1095. 2017. Available online:
    https://www.iso.org/files/live/sites/isoorg/files/news/magazine/ISOfocus%20(2013-NOW)/en/2017/ISOfocus_122/ISOfocus_122_EN.pdf
    (accessed on 22 April 2019). De Clercq, M.; Vats, A.; Biel, A. Agriculture 4.0:
    The future of farming technology. In Proceedings of the World Government Summit,
    Dubai, United Arab Emirates, 11 February 2018; pp. 11–13. [Google Scholar] Lezoche,
    M.; Hernandez, J.E.; Díaz, M.D.M.E.A.; Panetto, H.; Kacprzyk, J. Agri-food 4.0:
    A survey of the supply chains and technologies for the future agriculture. Comput.
    Ind. 2020, 117, 103187. [Google Scholar] [CrossRef] Maddox, T. Agriculture 4.0:
    How Digital Farming Is Revolutionizing the Future of Food. The Next Step in Feeding
    the World’s Rapidly Growing Population Involves Self-Driving Tractors, Precision
    Farming, and Internet of Things Sensors to Quantify Agriculture in Vast New Ways;
    TechRepublic: Louisville, KY, USA, 2018. [Google Scholar] Hao, T.; Nikoloski,
    Z. Machine learning approaches for crop improvement: Leveraging phenotypic and
    genotypic big data. J. Plant Physiol. 2021, 257, 153354. [Google Scholar] Government
    of Canada. Advisory Council on Economic Growth. Unleashing the Growth Potential
    of Key Sectors. 2017. 19p. Available online: https://www.budget.gc.ca/aceg-ccce/pdf/key-sectors-secteurs-cles-eng.pdf
    (accessed on 29 June 2019). Huawei. The Connected Farm: A Smart Agriculture Market
    Assessment. 2017. Available online: https://www.huawei.com/en/industry-insights/outlook/mobile-broadband/insights-reports/smart-agriculture
    (accessed on 30 April 2019). Zhai, Z.; Martínez, J.F.; Beltran, V.; Martínez,
    N.L. Decision support systems for agriculture 4.0: Survey and challenges. Comput.
    Electron. Agric. 2020, 170, 105256. [Google Scholar] [CrossRef] OECD. The Internet
    of Things: Seizing the Benefits and Addressing the Challenges. In 2016 Ministerial
    Meeting on the Digital Economy, Background Report; OECD Digital Economy Papers
    No. 252; OECD Publishing: Paris, France, 2016; Available online: https://www.oecd-ilibrary.org/science-and-technology/the-internet-of-things_5jlwvzz8td0n-en
    (accessed on 22 May 2019). Schmaltz, R. Canada AgriFood Tech Market Map: 166 Startups
    Growing Canada’s Agricultural Sector. 2019. Available online: https://www.globalagtechinitiative.com/market-watch/canada-agrifood-tech-market-map-166-startups-growing-canadas-agricultural-sector/
    (accessed on 25 April 2019). Stanford Business. Technology in AgriBusiness: Opportunities
    to Drive Value; Stanford Value Chain Innovation Initiative, White Paper; Stanford
    University: Stanford, CA, USA, 2017. [Google Scholar] Statista. Smart Agriculture.
    Statista Dossier on Smart Agriculture, 64p. 2019. Available online: https://www.statista.com/topics/4134/smart-agriculture/
    (accessed on 25 April 2019). Chen, K.; Wang, Y.; Zhang, R.; Zhang, H.; Gao, C.
    CRISPR/Cas genome editing and precision plant breeding in agriculture. Annu. Rev.
    Plant Biol. 2019, 70, 667–697. [Google Scholar] [CrossRef] Jumper, J.; Evans,
    R.; Pritzel, A.; Green, T.; Figurnov, M.; Ronneberger, O.; Tunyasuvunakool, K.;
    Bates, R.; Žídek, A.; Potapenko, A.; et al. Highly accurate protein structure
    prediction with AlphaFold. Nature 2021, 596, 583–589. [Google Scholar] [CrossRef]
    Zhao, C.; Zhang, Y.; Du, J.; Guo, X.; Wen, W.; Gu, S.; Wang, J.; Fan, J. Crop
    phenomics: Current status and perspectives. Front. Plant Sci. 2019, 10, 714. [Google
    Scholar] [CrossRef] García, L.; Parra, L.; Jimenez, J.M.; Lloret, J.; Lorenz,
    P. IoT-based smart irrigation systems: An overview on the recent trends on sensors
    and IoT systems for irrigation in precision agriculture. Sensors 2020, 20, 1042.
    [Google Scholar] [CrossRef] [PubMed] Crain, J.; Mondal, S.; Rutkoski, J.; Singh,
    R.P.; Poland, J. Combining high-throughput phenoty** and genomic information to
    increase prediction and selection accuracy in wheat breeding. Plant Genome 2018,
    11, 170043. [Google Scholar] [CrossRef] [PubMed] Gao, C. Genome engineering for
    crop improvement and future agriculture. Cell 2021, 184, 1621–1635. [Google Scholar]
    [CrossRef] [PubMed] Liu, J.; Xiang, J.; Jin, Y.; Liu, R.; Yan, J.; Wang, L. Boost
    precision agriculture with unmanned aerial vehicle remote sensing and edge intelligence:
    A survey. Remote Sens. 2021, 13, 4387. [Google Scholar] [CrossRef] Matthews, M.;
    Maschall-Colón, A. Multiscale plant modelling: From genome to phenbome and beyond.
    Emerg. Top. Life Sci. 2021, 5, 231–237. [Google Scholar] [PubMed] Klerkx, L.;
    Jakku, E.; Labarthe, P. A review of social science on digital agriculture, smart
    farming and agriculture 4.0: New contributions and a future research agenda. Wagening.
    J. Life Sci. 2019, 90–91, 100315. [Google Scholar] [CrossRef] Lipper, L.; Thornton,
    P.; Campbell, B.M.; Baedeker, T.; Braimoh, A.; Bwalya, M.; Caron, P.; Cattaneo,
    A.; Garrity, D.; Henry, K.; et al. Climate-smart agriculture for food security.
    Nat. Clim. Chang. 2014, 4, 1068–1072. [Google Scholar] [CrossRef] Aziz, I.; Mujeeb,
    A.; Belgacem, A.O.; Baig, M.B. Crop Diversification Using Saline Resources: Step
    towards Climate-Smart Agriculture and Reclamation of Marginal Lands[M]//The Food
    Security, Biodiversity, and Climate Nexus; Springer International Publishing:
    Cham, Switzerland, 2022; pp. 405–421. [Google Scholar] Mustapha, U.F.; Alhassan,
    A.W.; Jiang, D.N.; Li, G.L. Sustainable aquaculture development: A review on the
    roles of cloud computing, internet of things and artificial intelligence (CIA).
    Rev. Aquac. 2021, 13, 2076–2091. [Google Scholar] [CrossRef] Bi, C.; Hu, N.; Zou,
    Y.; Zhang, S.; Xu, S.; Yu, H. Development of Deep Learning Methodology for Maize
    Seed Variety Recognition Based on Improved Swin Transformer. Agronomy 2022, 12,
    1843. [Google Scholar] [CrossRef] Peng, C.; Vougioukas, S.; Slaughter, D.; Fei,
    Z.; Arikapudi, R. A strawberry harvest-aiding system with crop-transport co-robots:
    Design, development, and field evaluation. arXiv 2021, arXiv:2107.13063. [Google
    Scholar] Cai, C.; Tan, J.; Zhang, P.; Ye, Y.; Zhang, J. Determining Strawberries’
    Varying Maturity Levels by Utilizing Image Segmentation Methods of Improved DeepLabV3+.
    Agronomy 2022, 12, 1875. [Google Scholar] [CrossRef] Disclaimer/Publisher’s Note:
    The statements, opinions and data contained in all publications are solely those
    of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s).
    MDPI and/or the editor(s) disclaim responsibility for any injury to people or
    property resulting from any ideas, methods, instructions or products referred
    to in the content.  © 2024 by the authors. Licensee MDPI, Basel, Switzerland.
    This article is an open access article distributed under the terms and conditions
    of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
    Share and Cite MDPI and ACS Style Zhang, J.; Trautman, D.; Liu, Y.; Bi, C.; Chen,
    W.; Ou, L.; Goebel, R. Achieving the Rewards of Smart Agriculture. Agronomy 2024,
    14, 452. https://doi.org/10.3390/agronomy14030452 AMA Style Zhang J, Trautman
    D, Liu Y, Bi C, Chen W, Ou L, Goebel R. Achieving the Rewards of Smart Agriculture.
    Agronomy. 2024; 14(3):452. https://doi.org/10.3390/agronomy14030452 Chicago/Turabian
    Style Zhang, Jian, Dawn Trautman, Yingnan Liu, Chunguang Bi, Wei Chen, Lijun Ou,
    and Randy Goebel. 2024. \"Achieving the Rewards of Smart Agriculture\" Agronomy
    14, no. 3: 452. https://doi.org/10.3390/agronomy14030452 Note that from the first
    issue of 2016, this journal uses article numbers instead of page numbers. See
    further details here. Article Metrics Citations No citations were found for this
    article, but you may check on Google Scholar Article Access Statistics Article
    access statistics Article Views 24. Feb 29. Feb 5. Mar 10. Mar 15. Mar 20. Mar
    25. Mar 30. Mar 4. Apr 0 200 400 600 800 For more information on the journal statistics,
    click here. Multiple requests from the same IP address are counted as one view.   Agronomy,
    EISSN 2073-4395, Published by MDPI RSS Content Alert Further Information Article
    Processing Charges Pay an Invoice Open Access Policy Contact MDPI Jobs at MDPI
    Guidelines For Authors For Reviewers For Editors For Librarians For Publishers
    For Societies For Conference Organizers MDPI Initiatives Sciforum MDPI Books Preprints.org
    Scilit SciProfiles Encyclopedia JAMS Proceedings Series Follow MDPI LinkedIn Facebook
    Twitter Subscribe to receive issue release notifications and newsletters from
    MDPI journals Select options Subscribe © 1996-2024 MDPI (Basel, Switzerland) unless
    otherwise stated Disclaimer Terms and Conditions Privacy Policy"'
  inline_citation: '>'
  journal: Agronomy
  limitations: '>'
  relevance_score1: 0
  relevance_score2: 0
  title: Achieving the Rewards of Smart Agriculture
  verbatim_quote1: '>'
  verbatim_quote2: '>'
  verbatim_quote3: '>'
